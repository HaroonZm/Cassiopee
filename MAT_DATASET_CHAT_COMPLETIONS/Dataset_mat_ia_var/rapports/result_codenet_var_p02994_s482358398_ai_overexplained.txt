================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:54:34
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Cette ligne lit une ligne d'entrée de l'utilisateur (par défaut depuis le clavier),
# puis la divise (split) en deux parties à chaque espace. Les deux parties résultantes sont des chaînes de caractères,
# que l'on convertit en entiers (int) grâce à la fonction map. Enfin, on récupère ces deux entiers et on les assigne respectivement
# aux variables n et l. Par exemple, si l'utilisateur tape "3 5", alors n=3 et l=5.
n, l = map(int, input().split())

# Ici, on initialise une variable taste avec la valeur 10000.
# Cette variable va être utilisée afin de stocker la valeur de "saveur la plus faible en valeur absolue"
# rencontrée lors de l'itération dans la boucle suivante.
taste = 10000

# On utilise une boucle for afin de parcourir tous les entiers allant de 1 jusqu'à n inclus (attention : range(a, b) s'arrête à b-1).
# Donc range(1, n+1) permet d'obtenir la séquence 1, 2, 3, ..., n une à une sous forme de la variable i.
for i in range(1, n + 1):
    # Pour chaque i, on évalue la valeur suivante : l + i - 1.
    # Cela correspond à tester successivement l, l+1, l+2, ..., l+n-1.
    # Ensuite, on calcule la valeur absolue de taste (débutant à 10000, qui est très grand pour assurer la prise de la première valeur),
    # puis la valeur absolue de l + i - 1 et on compare les deux.
    # Si la valeur absolue courante (abs(l+i-1)) est plus petite que la plus petite trouvée jusqu'à présent,
    # alors taste prend la nouvelle valeur (non absolue !)
    if abs(taste) > abs(l + i - 1):
        # On remplace taste par la valeur courante l + i - 1.
        taste = l + i - 1

# Après la boucle, taste contient l'élément de la séquence l, l+1, ..., l+n-1 dont la valeur absolue est la plus faible.

# Maintenant, nous calculons et affichons le résultat final.
# Détaillons chaque partie du calcul :
# n * l : produit le nombre total d'éléments multiplié par la valeur de départ l,
# ce qui donnerait la somme si tous les éléments étaient égaux à l.
# n * (n + 1) // 2 : calcule la somme des entiers de 1 à n.
# Par exemple, pour n=3, cela fait 1+2+3=6. Nous utilisons // pour la division entière (pas de virgule).
# On soustrait n pour ajuster la somme (car dans cette séquence l, l+1, ..., l+n-1, la somme réelle est n*l + somme de 0 à n-1).
# Enfin, on soustrait la valeur taste (la "saveur" à enlever) selon le problème sous-jacent,
# pour obtenir le résultat final en excluant la valeur la plus "neutre" selon la valeur absolue.
print(n * l + (n * (n + 1) // 2) - n - taste)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Cette' (ID: 27383)
  → Token d'amorce (pas de prédiction)

Token 2: ' ligne' (ID: 19583)
  → Token d'amorce (pas de prédiction)

Token 3: ' lit' (ID: 11980)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.125534325838089
    2. 's' → logprob: -4.000534534454346
    3. ' #' → logprob: -4.000534534454346
    4. ' est' → logprob: -4.125534534454346
    5. '#' → logprob: -4.375534534454346
    6. '_' → logprob: -4.750534534454346
    7. '<|end|>' → logprob: -4.875534534454346
    8. ' d' → logprob: -5.250534534454346
    9. ' =' → logprob: -5.500534534454346
    10. ' de' → logprob: -5.750534534454346

Token 4: ' une' (ID: 2463)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.08014016598463058
    2. ' le' → logprob: -3.3301401138305664
    3. ' un' → logprob: -4.080140113830566
    4. ' l' → logprob: -4.205140113830566
    5. 'le' → logprob: -6.080140113830566
    6. ' la' → logprob: -6.205140113830566
    7. 'l' → logprob: -6.580140113830566
    8. ' une' → logprob: -7.205140113830566
    9. ' ' → logprob: -7.330140113830566
    10. '_' → logprob: -7.705140113830566

Token 5: ' ligne' (ID: 19583)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.26897069811820984
    2. 'ligne' → logprob: -2.1439707279205322
    3. ' ligne' → logprob: -2.8939707279205322
    4. ' fichier' → logprob: -4.018970489501953
    5. ' ' → logprob: -4.393970489501953
    6. ' f' → logprob: -5.268970489501953
    7. ' chaîne' → logprob: -5.893970489501953
    8. ' ' → logprob: -6.143970489501953
    9. '#' → logprob: -6.268970489501953
    10. 'chaine' → logprob: -6.268970489501953

Token 6: ' d' (ID: 272)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.9506361484527588
    2. ' ' → logprob: -1.2006361484527588
    3. '.' → logprob: -2.450636148452759
    4. ' de' → logprob: -3.450636148452759
    5. '_' → logprob: -3.450636148452759
    6. '\' → logprob: -3.825636148452759
    7. '.readline' → logprob: -3.950636148452759
    8. ' =' → logprob: -3.950636148452759
    9. '#' → logprob: -4.20063591003418
    10. ' .' → logprob: -4.45063591003418

Token 7: ''entrée' (ID: 115820)
  Prédit: ''entrée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''entrée' → logprob: -0.455440878868103
    2. 'e' → logprob: -1.705440878868103
    3. 'entrée' → logprob: -1.830440878868103
    4. 'u' → logprob: -5.330440998077393
    5. 'ex' → logprob: -5.580440998077393
    6. 'ent' → logprob: -5.830440998077393
    7. 'es' → logprob: -5.955440998077393
    8. 'input' → logprob: -6.330440998077393
    9. '’entrée' → logprob: -6.455440998077393
    10. 'é' → logprob: -6.830440998077393

Token 8: ' de' (ID: 334)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.06325996667146683
    2. '_' → logprob: -3.063260078430176
    3. '`' → logprob: -5.688260078430176
    4. ' input' → logprob: -6.688260078430176
    5. 's' → logprob: -6.813260078430176
    6. '=' → logprob: -6.813260078430176
    7. '```' → logprob: -7.063260078430176
    8. 'l' → logprob: -7.438260078430176
    9. 'entrée' → logprob: -7.438260078430176
    10. ' =' → logprob: -7.438260078430176

Token 9: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.7130485773086548
    2. ' l' → logprob: -1.7130485773086548
    3. ' code' → logprob: -2.0880484580993652
    4. 'code' → logprob: -2.3380484580993652
    5. 'texte' → logprob: -3.3380484580993652
    6. '#' → logprob: -3.8380484580993652
    7. 's' → logprob: -4.588048458099365
    8. 'entrée' → logprob: -4.838048458099365
    9. 'la' → logprob: -5.338048458099365
    10. 'input' → logprob: -5.338048458099365

Token 10: ''utilisateur' (ID: 140803)
  Prédit: ''utilisateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''utilisateur' → logprob: -0.15563592314720154
    2. ''entrée' → logprob: -2.2806358337402344
    3. 'a' → logprob: -3.9056358337402344
    4. ''' → logprob: -4.905635833740234
    5. 'entrée' → logprob: -5.905635833740234
    6. 'e' → logprob: -6.405635833740234
    7. '’utilisateur' → logprob: -6.405635833740234
    8. 'util' → logprob: -6.530635833740234
    9. 'u' → logprob: -6.530635833740234
    10. 'é' → logprob: -7.280635833740234

Token 11: ' (' (ID: 350)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.3689049482345581
    2. 'user' → logprob: -1.243904948234558
    3. '_' → logprob: -4.368905067443848
    4. '`' → logprob: -6.493905067443848
    5. 'x' → logprob: -6.993905067443848
    6. 'u' → logprob: -7.368905067443848
    7. 'entrée' → logprob: -7.368905067443848
    8. '```' → logprob: -7.743905067443848
    9. '=' → logprob: -8.243905067443848
    10. 'l' → logprob: -8.243905067443848

Token 12: 'par' (ID: 796)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00341072422452271
    2. '`)' → logprob: -6.878410816192627
    3. ' )' → logprob: -7.003410816192627
    4. 'input' → logprob: -7.628410816192627
    5. '#' → logprob: -8.003410339355469
    6. '')' → logprob: -8.128410339355469
    7. '")' → logprob: -9.503410339355469
    8. ',' → logprob: -9.878410339355469
    9. 'user' → logprob: -9.878410339355469
    10. ').' → logprob: -10.628410339355469

Token 13: ' défaut' (ID: 79375)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.1233900785446167
    2. 'ex' → logprob: -1.8733900785446167
    3. ')' → logprob: -1.9983900785446167
    4. '`' → logprob: -2.7483901977539062
    5. 'ligne' → logprob: -2.9983901977539062
    6. ' défaut' → logprob: -3.3733901977539062
    7. 'l' → logprob: -3.8733901977539062
    8. ''' → logprob: -4.248390197753906
    9. 'une' → logprob: -4.248390197753906
    10. '#' → logprob: -4.248390197753906

Token 14: ' depuis' (ID: 16277)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03070986270904541
    2. ' )' → logprob: -4.030709743499756
    3. ',' → logprob: -6.030709743499756
    4. 'input' → logprob: -6.405709743499756
    5. ').' → logprob: -6.530709743499756
    6. ' en' → logprob: -6.655709743499756
    7. '),' → logprob: -7.030709743499756
    8. ' input' → logprob: -8.030710220336914
    9. '`)' → logprob: -8.030710220336914
    10. '):' → logprob: -8.155710220336914

Token 15: ' le' (ID: 505)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.6249176859855652
    2. ' l' → logprob: -1.62491774559021
    3. 'input' → logprob: -1.87491774559021
    4. ' input' → logprob: -2.74991774559021
    5. 'stdin' → logprob: -4.624917507171631
    6. ' la' → logprob: -4.749917507171631
    7. 'le' → logprob: -4.999917507171631
    8. ' stdin' → logprob: -5.249917507171631
    9. 'la' → logprob: -5.499917507171631
    10. ' standard' → logprob: -6.124917507171631

Token 16: ' clavier' (ID: 187878)
  Prédit: 'terminal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'terminal' → logprob: -0.26978933811187744
    2. 'stdin' → logprob: -2.144789218902588
    3. 'cl' → logprob: -3.269789218902588
    4. ' clavier' → logprob: -3.519789218902588
    5. 'input' → logprob: -4.269789218902588
    6. ' terminal' → logprob: -4.394789218902588
    7. 'standard' → logprob: -4.644789218902588
    8. 'console' → logprob: -5.519789218902588
    9. 'prompt' → logprob: -6.144789218902588
    10. 't' → logprob: -6.394789218902588

Token 17: '),
' (ID: 2313)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003334393841214478
    2. '#' → logprob: -9.125333786010742
    3. ' )' → logprob: -9.750333786010742
    4. ')#' → logprob: -10.250333786010742
    5. '`)' → logprob: -10.250333786010742
    6. ',' → logprob: -10.750333786010742
    7. ').' → logprob: -10.875333786010742
    8. '```' → logprob: -11.250333786010742
    9. '),' → logprob: -11.375333786010742
    10. 'input' → logprob: -11.750333786010742

Token 18: '#' (ID: 2)
  Prédit: ' et'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' et' → logprob: -1.5310574769973755
    2. ',' → logprob: -2.031057357788086
    3. ' mais' → logprob: -2.656057357788086
    4. ' ' → logprob: -2.781057357788086
    5. ' input' → logprob: -2.781057357788086
    6. ' stdin' → logprob: -2.781057357788086
    7. 's' → logprob: -2.906057357788086
    8. 'input' → logprob: -2.906057357788086
    9. ')' → logprob: -2.906057357788086
    10. ' =' → logprob: -3.531057357788086

Token 19: ' puis' (ID: 18766)
  Prédit: ' et'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' et' → logprob: -1.5386314392089844
    2. 'input' → logprob: -1.7886314392089844
    3. 'et' → logprob: -2.0386314392089844
    4. ' mais' → logprob: -2.4136314392089844
    5. '#' → logprob: -2.7886314392089844
    6. ' puis' → logprob: -3.0386314392089844
    7. 's' → logprob: -3.1636314392089844
    8. ' input' → logprob: -3.1636314392089844
    9. 'mais' → logprob: -3.4136314392089844
    10. ' stdin' → logprob: -3.9136314392089844

Token 20: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.3567095100879669
    2. ' la' → logprob: -2.3567094802856445
    3. 'l' → logprob: -3.6067094802856445
    4. 'stock' → logprob: -3.7317094802856445
    5. ' stock' → logprob: -3.8567094802856445
    6. ' retourne' → logprob: -3.8567094802856445
    7. 'sup' → logprob: -4.1067094802856445
    8. ' l' → logprob: -4.2317094802856445
    9. 'ren' → logprob: -4.9817094802856445
    10. 'effect' → logprob: -5.3567094802856445

Token 21: ' div' (ID: 4223)
  Prédit: ' stock'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' stock' → logprob: -1.513393759727478
    2. 'split' → logprob: -1.763393759727478
    3. 'stock' → logprob: -1.888393759727478
    4. 'sup' → logprob: -2.7633938789367676
    5. ' retourne' → logprob: -2.7633938789367676
    6. 'convert' → logprob: -3.0133938789367676
    7. ' transforme' → logprob: -3.0133938789367676
    8. 'ret' → logprob: -3.1383938789367676
    9. 's' → logprob: -3.8883938789367676
    10. 'ren' → logprob: -3.8883938789367676

Token 22: 'ise' (ID: 1096)
  Prédit: 'se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'se' → logprob: -0.24973395466804504
    2. 's' → logprob: -1.7497339248657227
    3. 'de' → logprob: -3.9997339248657227
    4. 'ise' → logprob: -4.374733924865723
    5. 'd' → logprob: -5.374733924865723
    6. '#' → logprob: -6.124733924865723
    7. 'ser' → logprob: -6.374733924865723
    8. 'sé' → logprob: -6.624733924865723
    9. 'e' → logprob: -6.749733924865723
    10. '\' → logprob: -7.374733924865723

Token 23: ' (' (ID: 350)
  Prédit: ' en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' en' → logprob: -1.0024386644363403
    2. '_' → logprob: -1.7524386644363403
    3. '()' → logprob: -2.377438545227051
    4. ' ' → logprob: -2.502438545227051
    5. 'en' → logprob: -3.127438545227051
    6. ')' → logprob: -3.377438545227051
    7. ' ' → logprob: -3.627438545227051
    8. 'au' → logprob: -4.127438545227051
    9. '```' → logprob: -4.127438545227051
    10. 'str' → logprob: -4.502438545227051

Token 24: 'split' (ID: 13627)
  Prédit: ' en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.7408084869384766
    2. ')' → logprob: -0.8658084869384766
    3. ' )' → logprob: -3.4908084869384766
    4. ' sur' → logprob: -4.240808486938477
    5. ''' → logprob: -4.615808486938477
    6. ' par' → logprob: -4.990808486938477
    7. 'sur' → logprob: -4.990808486938477
    8. '()' → logprob: -5.365808486938477
    9. ' ' → logprob: -5.490808486938477
    10. '```' → logprob: -5.615808486938477

Token 25: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.023870747536420822
    2. ' )' → logprob: -4.148870944976807
    3. '()' → logprob: -6.273870944976807
    4. 'par' → logprob: -6.648870944976807
    5. '')' → logprob: -6.898870944976807
    6. '())' → logprob: -7.398870944976807
    7. '(' → logprob: -7.398870944976807
    8. '('' → logprob: -7.398870944976807
    9. ''' → logprob: -7.773870944976807
    10. ' par' → logprob: -8.398870468139648

Token 26: ' en' (ID: 469)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.5957852005958557
    2. '.' → logprob: -2.095785140991211
    3. ')' → logprob: -2.720785140991211
    4. '_' → logprob: -3.220785140991211
    5. '[' → logprob: -3.345785140991211
    6. '(' → logprob: -3.970785140991211
    7. ',' → logprob: -4.095785140991211
    8. 'en' → logprob: -4.345785140991211
    9. 's' → logprob: -4.595785140991211
    10. '()' → logprob: -4.595785140991211

Token 27: ' deux' (ID: 10301)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.6648496389389038
    2. 'une' → logprob: -2.0398497581481934
    3. ' mots' → logprob: -2.0398497581481934
    4. ' tokens' → logprob: -2.6648497581481934
    5. 'tokens' → logprob: -2.7898497581481934
    6. 'm' → logprob: -3.5398497581481934
    7. ' liste' → logprob: -4.289849758148193
    8. ' morceaux' → logprob: -4.539849758148193
    9. 'liste' → logprob: -4.789849758148193
    10. ' des' → logprob: -4.914849758148193

Token 28: ' parties' (ID: 13531)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.1401097774505615
    2. 'tokens' → logprob: -1.3901097774505615
    3. ' mots' → logprob: -2.5151097774505615
    4. 'variables' → logprob: -2.6401097774505615
    5. 'm' → logprob: -3.2651097774505615
    6. 'n' → logprob: -3.2651097774505615
    7. 's' → logprob: -4.015110015869141
    8. ' tokens' → logprob: -4.140110015869141
    9. ' variables' → logprob: -4.265110015869141
    10. ' =' → logprob: -4.390110015869141

Token 29: ' à' (ID: 1221)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -1.373226284980774
    2. '_' → logprob: -1.623226284980774
    3. ',' → logprob: -2.4982261657714844
    4. 'user' → logprob: -2.6232261657714844
    5. '`' → logprob: -3.1232261657714844
    6. 's' → logprob: -3.1232261657714844
    7. ' input' → logprob: -3.1232261657714844
    8. ' =' → logprob: -3.4982261657714844
    9. 'n' → logprob: -3.7482261657714844
    10. ' ' → logprob: -3.9982261657714844

Token 30: ' chaque' (ID: 21194)
  Prédit: ' partir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' partir' → logprob: -0.4595221281051636
    2. 's' → logprob: -2.209522247314453
    3. 'split' → logprob: -3.084522247314453
    4. 'la' → logprob: -3.584522247314453
    5. 'l' → logprob: -3.709522247314453
    6. 'au' → logprob: -3.959522247314453
    7. 'part' → logprob: -3.959522247314453
    8. ' chaque' → logprob: -4.084522247314453
    9. ' la' → logprob: -4.584522247314453
    10. 'max' → logprob: -4.584522247314453

Token 31: ' espace' (ID: 66004)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3541855216026306
    2. ' espace' → logprob: -1.7291855812072754
    3. ''espace' → logprob: -3.3541855812072754
    4. ''' → logprob: -3.7291855812072754
    5. ' espaces' → logprob: -4.729185581207275
    6. ' ' → logprob: -4.729185581207275
    7. 'es' → logprob: -4.854185581207275
    8. 'esp' → logprob: -5.104185581207275
    9. 'space' → logprob: -5.104185581207275
    10. ' _' → logprob: -5.229185581207275

Token 32: '.' (ID: 13)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.5345882177352905
    2. '_' → logprob: -2.03458833694458
    3. 'input' → logprob: -2.15958833694458
    4. '[' → logprob: -2.40958833694458
    5. 'user' → logprob: -2.90958833694458
    6. 'l' → logprob: -2.90958833694458
    7. ',' → logprob: -3.03458833694458
    8. '`' → logprob: -3.28458833694458
    9. 'e' → logprob: -3.40958833694458
    10. 'n' → logprob: -3.40958833694458

Token 33: ' Les' (ID: 7029)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.088262915611267
    2. 'x' → logprob: -2.3382630348205566
    3. 'u' → logprob: -2.4632630348205566
    4. 'user' → logprob: -2.5882630348205566
    5. 'l' → logprob: -2.8382630348205566
    6. 'i' → logprob: -2.8382630348205566
    7. 'input' → logprob: -3.5882630348205566
    8. 's' → logprob: -3.5882630348205566
    9. '`' → logprob: -3.8382630348205566
    10. 'm' → logprob: -3.8382630348205566

Token 34: ' deux' (ID: 10301)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9069488048553467
    2. 'de' → logprob: -1.0319488048553467
    3. ' tokens' → logprob: -3.2819488048553467
    4. 'tokens' → logprob: -3.4069488048553467
    5. 'part' → logprob: -3.5319488048553467
    6. ' =' → logprob: -3.5319488048553467
    7. ' ' → logprob: -4.281949043273926
    8. ' parts' → logprob: -4.406949043273926
    9. 'val' → logprob: -5.031949043273926
    10. ' _' → logprob: -5.031949043273926

Token 35: ' parties' (ID: 13531)
  Prédit: ' parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parts' → logprob: -0.4623236656188965
    2. ' parties' → logprob: -1.7123236656188965
    3. 'parts' → logprob: -3.0873236656188965
    4. 'part' → logprob: -3.2123236656188965
    5. '_' → logprob: -3.4623236656188965
    6. ' variables' → logprob: -3.7123236656188965
    7. ' morceaux' → logprob: -4.5873236656188965
    8. ' partes' → logprob: -4.8373236656188965
    9. '_part' → logprob: -5.8373236656188965
    10. 'variables' → logprob: -5.9623236656188965

Token 36: ' résult' (ID: 31657)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.414288729429245
    2. ',' → logprob: -1.9142887592315674
    3. '_' → logprob: -2.6642887592315674
    4. ' =' → logprob: -3.6642887592315674
    5. '=' → logprob: -3.9142887592315674
    6. ')' → logprob: -4.039288520812988
    7. ' sont' → logprob: -4.539288520812988
    8. ' ,' → logprob: -5.539288520812988
    9. '[' → logprob: -5.664288520812988
    10. 'input' → logprob: -5.789288520812988

Token 37: 'antes' (ID: 5193)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.01863669604063034
    2. 'ant' → logprob: -4.268636703491211
    3. 'antes' → logprob: -5.518636703491211
    4. 'ante' → logprob: -8.643636703491211
    5. '```' → logprob: -9.518636703491211
    6. '#' → logprob: -10.518636703491211
    7. 'ront' → logprob: -10.643636703491211
    8. 'er' → logprob: -10.768636703491211
    9. 'es' → logprob: -11.268636703491211
    10. 'aient' → logprob: -11.518636703491211

Token 38: ' sont' (ID: 5242)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.04215976595878601
    2. ' sont' → logprob: -3.6671597957611084
    3. ')' → logprob: -5.417159557342529
    4. ' ' → logprob: -5.792159557342529
    5. ',' → logprob: -6.042159557342529
    6. ' seront' → logprob: -6.167159557342529
    7. ' )' → logprob: -7.542159557342529
    8. '[' → logprob: -8.042160034179688
    9. '_' → logprob: -8.042160034179688
    10. ' ,' → logprob: -8.167160034179688

Token 39: ' des' (ID: 731)
  Prédit: ' stock'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' stock' → logprob: -0.8783133625984192
    2. ' affect' → logprob: -1.2533133029937744
    3. ' assign' → logprob: -2.0033133029937744
    4. 'assign' → logprob: -3.3783133029937744
    5. ' récup' → logprob: -3.7533133029937744
    6. ' ' → logprob: -4.3783135414123535
    7. ' retourn' → logprob: -4.3783135414123535
    8. ' utilisées' → logprob: -4.5033135414123535
    9. 'stock' → logprob: -4.6283135414123535
    10. ' attrib' → logprob: -4.7533135414123535

Token 40: ' chaînes' (ID: 179904)
  Prédit: ' variables'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' variables' → logprob: -0.3696697950363159
    2. ' chaînes' → logprob: -3.1196699142456055
    3. ' tokens' → logprob: -3.2446699142456055
    4. '_' → logprob: -3.2446699142456055
    5. ' éléments' → logprob: -3.4946699142456055
    6. 'variables' → logprob: -3.6196699142456055
    7. ' espaces' → logprob: -3.9946699142456055
    8. ' mots' → logprob: -3.9946699142456055
    9. ' chain' → logprob: -4.4946699142456055
    10. ' ' → logprob: -4.4946699142456055

Token 41: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.5096319317817688
    2. 'de' → logprob: -1.884631872177124
    3. '_' → logprob: -2.384631872177124
    4. ' =' → logprob: -3.009631872177124
    5. 's' → logprob: -3.884631872177124
    6. '.split' → logprob: -3.884631872177124
    7. '[' → logprob: -4.634632110595703
    8. '_de' → logprob: -4.759632110595703
    9. '.' → logprob: -5.009632110595703
    10. '[]' → logprob: -5.509632110595703

Token 42: ' caractères' (ID: 183106)
  Prédit: ' caractères'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' caractères' → logprob: -0.18607479333877563
    2. 'car' → logprob: -1.8110747337341309
    3. ' caract' → logprob: -6.061074733734131
    4. ' caracteres' → logprob: -6.436074733734131
    5. ' caractère' → logprob: -6.936074733734131
    6. ' car' → logprob: -7.186074733734131
    7. ' ' → logprob: -8.811075210571289
    8. 's' → logprob: -9.436075210571289
    9. 'texte' → logprob: -9.561075210571289
    10. ' s' → logprob: -9.936075210571289

Token 43: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9732768535614014
    2. 's' → logprob: -1.7232768535614014
    3. 'n' → logprob: -1.8482768535614014
    4. '[' → logprob: -1.9732768535614014
    5. '_' → logprob: -2.9732768535614014
    6. '`' → logprob: -3.9732768535614014
    7. '.' → logprob: -4.4732770919799805
    8. '```' → logprob: -4.4732770919799805
    9. 'a' → logprob: -4.9732770919799805
    10. '#' → logprob: -5.0982770919799805

Token 44: '#' (ID: 2)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.25704312324523926
    2. '[' → logprob: -3.5070431232452393
    3. ' )' → logprob: -4.50704288482666
    4. 'n' → logprob: -4.63204288482666
    5. 'et' → logprob: -4.63204288482666
    6. 'input' → logprob: -4.75704288482666
    7. ' ' → logprob: -4.88204288482666
    8. ',' → logprob: -5.00704288482666
    9. 'a' → logprob: -5.00704288482666
    10. ' et' → logprob: -5.00704288482666

Token 45: ' que' (ID: 661)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.6714396476745605
    2. 's' → logprob: -1.7964396476745605
    3. 'a' → logprob: -2.1714396476745605
    4. ' n' → logprob: -3.0464396476745605
    5. '[' → logprob: -3.1714396476745605
    6. 'input' → logprob: -3.4214396476745605
    7. 'x' → logprob: -3.5464396476745605
    8. ' a' → logprob: -3.6714396476745605
    9. ' input' → logprob: -3.6714396476745605
    10. 't' → logprob: -3.9214396476745605

Token 46: ' l' (ID: 305)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.4132980108261108
    2. ' l' → logprob: -2.5382981300354004
    3. ' vous' → logprob: -2.7882981300354004
    4. ' les' → logprob: -2.9132981300354004
    5. ' n' → logprob: -2.9132981300354004
    6. ' tu' → logprob: -3.4132981300354004
    7. ' =' → logprob: -3.5382981300354004
    8. 's' → logprob: -3.6632981300354004
    9. ' on' → logprob: -3.7882981300354004
    10. 'n' → logprob: -3.7882981300354004

Token 47: ''on' (ID: 25812)
  Prédit: ''on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''on' → logprob: -0.03447768837213516
    2. 'on' → logprob: -4.784477710723877
    3. ''utilisateur' → logprob: -5.159477710723877
    4. ''' → logprob: -5.659477710723877
    5. ' on' → logprob: -5.784477710723877
    6. 'l' → logprob: -6.034477710723877
    7. 'n' → logprob: -6.159477710723877
    8. 's' → logprob: -6.159477710723877
    9. 'u' → logprob: -6.409477710723877
    10. 'ui' → logprob: -6.784477710723877

Token 48: ' convert' (ID: 8452)
  Prédit: ' peut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' peut' → logprob: -0.36890551447868347
    2. ' peux' → logprob: -2.743905544281006
    3. ' récup' → logprob: -2.993905544281006
    4. ' pourra' → logprob: -3.118905544281006
    5. 's' → logprob: -3.618905544281006
    6. 'pe' → logprob: -3.743905544281006
    7. ' continue' → logprob: -4.493905544281006
    8. ' transforme' → logprob: -4.743905544281006
    9. ' va' → logprob: -4.993905544281006
    10. ' veut' → logprob: -5.118905544281006

Token 49: 'it' (ID: 278)
  Prédit: 'it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.06380679458379745
    2. 'i' → logprob: -3.5638067722320557
    3. 't' → logprob: -4.063807010650635
    4. 'ies' → logprob: -5.063807010650635
    5. ' it' → logprob: -5.938807010650635
    6. ' ' → logprob: -6.188807010650635
    7. '```' → logprob: -6.563807010650635
    8. 'ie' → logprob: -7.188807010650635
    9. '_' → logprob: -7.813807010650635
    10. '   ' → logprob: -7.813807010650635

Token 50: ' en' (ID: 469)
  Prédit: ' en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.3102288246154785
    2. '_' → logprob: -2.0602288246154785
    3. '_en' → logprob: -2.1852288246154785
    4. 'en' → logprob: -4.9352288246154785
    5. ' _' → logprob: -4.9352288246154785
    6. 's' → logprob: -5.3102288246154785
    7. ' ' → logprob: -5.3102288246154785
    8. 'es' → logprob: -8.31022834777832
    9. ' ' → logprob: -8.43522834777832
    10. 'r' → logprob: -8.93522834777832

Token 51: ' ent' (ID: 1121)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.11730686575174332
    2. ' int' → logprob: -2.86730694770813
    3. ' ent' → logprob: -3.99230694770813
    4. ' nombres' → logprob: -4.242306709289551
    5. 'ent' → logprob: -5.367306709289551
    6. ' entier' → logprob: -5.617306709289551
    7. 'int' → logprob: -5.867306709289551
    8. ' ' → logprob: -6.242306709289551
    9. ' integers' → logprob: -6.367306709289551
    10. ' espaces' → logprob: -6.492306709289551

Token 52: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.028773972764611244
    2. 'i' → logprob: -3.7787740230560303
    3. 'ier' → logprob: -5.778773784637451
    4. 'ières' → logprob: -6.528773784637451
    5. '```' → logprob: -7.278773784637451
    6. 'ière' → logprob: -9.27877426147461
    7. '   ' → logprob: -9.90377426147461
    8. 'ié' → logprob: -11.02877426147461
    9. ' i' → logprob: -11.40377426147461
    10. '	' → logprob: -11.52877426147461

Token 53: ' (' (ID: 350)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.4004452228546143
    2. 'x' → logprob: -1.5254452228546143
    3. 'n' → logprob: -1.7754452228546143
    4. ',' → logprob: -2.0254452228546143
    5. 'a' → logprob: -2.1504452228546143
    6. 'i' → logprob: -3.7754452228546143
    7. '[' → logprob: -3.7754452228546143
    8. ')' → logprob: -4.775444984436035
    9. ' ' → logprob: -4.775444984436035
    10. '_' → logprob: -5.025444984436035

Token 54: 'int' (ID: 491)
  Prédit: ' )'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' )' → logprob: -0.3179038465023041
    2. ')' → logprob: -1.3179038763046265
    3. ' int' → logprob: -7.067903995513916
    4. ' ' → logprob: -7.067903995513916
    5. ' ' → logprob: -7.567903995513916
    6. ' ).' → logprob: -7.817903995513916
    7. ' ),' → logprob: -8.192903518676758
    8. 'int' → logprob: -8.192903518676758
    9. 'ent' → logprob: -8.317903518676758
    10. ').' → logprob: -8.817903518676758

Token 55: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003666467731818557
    2. 's' → logprob: -6.378666400909424
    3. ').' → logprob: -7.128666400909424
    4. ' )' → logprob: -7.253666400909424
    5. '),' → logprob: -9.253666877746582
    6. '()' → logprob: -9.503666877746582
    7. '(' → logprob: -10.378666877746582
    8. '`)' → logprob: -10.378666877746582
    9. ')
' → logprob: -10.628666877746582
    10. ',' → logprob: -10.878666877746582

Token 56: ' grâce' (ID: 31589)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.8379145264625549
    2. 'a' → logprob: -1.3379144668579102
    3. 'n' → logprob: -1.4629144668579102
    4. ',' → logprob: -3.58791446685791
    5. 'i' → logprob: -4.21291446685791
    6. 's' → logprob: -5.46291446685791
    7. '#' → logprob: -5.58791446685791
    8. '_' → logprob: -5.96291446685791
    9. 'u' → logprob: -6.08791446685791
    10. '[' → logprob: -6.08791446685791

Token 57: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.052406806498765945
    2. ' au' → logprob: -3.4274067878723145
    3. ' a' → logprob: -5.0524067878723145
    4. ' ' → logprob: -5.1774067878723145
    5. 'à' → logprob: -5.9274067878723145
    6. 'au' → logprob: -6.1774067878723145
    7. ')' → logprob: -7.1774067878723145
    8. ' aux' → logprob: -7.6774067878723145
    9. ''à' → logprob: -8.927407264709473
    10. 'aux' → logprob: -9.427407264709473

Token 58: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.5468454957008362
    2. ' int' → logprob: -1.2968454360961914
    3. ' map' → logprob: -2.6718454360961914
    4. 'int' → logprob: -3.2968454360961914
    5. ' l' → logprob: -4.171845436096191
    6. ' ' → logprob: -4.796845436096191
    7. 'l' → logprob: -4.921845436096191
    8. 'map' → logprob: -5.171845436096191
    9. 'la' → logprob: -5.921845436096191
    10. '```' → logprob: -7.546845436096191

Token 59: ' fonction' (ID: 17610)
  Prédit: ' fonction'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fonction' → logprob: -0.22194409370422363
    2. 'fonction' → logprob: -1.7219440937042236
    3. ' function' → logprob: -4.5969438552856445
    4. ' méthode' → logprob: -5.8469438552856445
    5. ' map' → logprob: -6.4719438552856445
    6. 'mé' → logprob: -6.8469438552856445
    7. 'map' → logprob: -6.9719438552856445
    8. ' fon' → logprob: -7.5969438552856445
    9. 'fon' → logprob: -7.7219438552856445
    10. ' fonctions' → logprob: -7.8469438552856445

Token 60: ' map' (ID: 4014)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.5359470248222351
    2. ' input' → logprob: -1.2859470844268799
    3. 'int' → logprob: -2.53594708442688
    4. 'input' → logprob: -3.41094708442688
    5. ' map' → logprob: -4.035946846008301
    6. 'map' → logprob: -5.910946846008301
    7. '`' → logprob: -6.160946846008301
    8. ' `' → logprob: -6.410946846008301
    9. '```' → logprob: -7.160946846008301
    10. '=input' → logprob: -7.910946846008301

Token 61: '.' (ID: 13)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.76357501745224
    2. 'n' → logprob: -1.3885750770568848
    3. 'a' → logprob: -2.0135750770568848
    4. 'i' → logprob: -3.3885750770568848
    5. 'b' → logprob: -3.5135750770568848
    6. ',' → logprob: -3.8885750770568848
    7. 'r' → logprob: -4.763575077056885
    8. ')' → logprob: -4.888575077056885
    9. '(' → logprob: -4.888575077056885
    10. 'e' → logprob: -5.138575077056885

Token 62: ' Enfin' (ID: 85274)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5921434760093689
    2. 'x' → logprob: -0.9671434760093689
    3. 'n' → logprob: -3.3421435356140137
    4. ',' → logprob: -4.842143535614014
    5. 'i' → logprob: -5.092143535614014
    6. ' x' → logprob: -5.967143535614014
    7. 'v' → logprob: -6.092143535614014
    8. ' a' → logprob: -6.217143535614014
    9. 'r' → logprob: -6.717143535614014
    10. '(' → logprob: -6.717143535614014

Token 63: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.534358024597168
    2. '(' → logprob: -1.659358024597168
    3. ' on' → logprob: -3.034358024597168
    4. ')' → logprob: -3.659358024597168
    5. ' la' → logprob: -3.659358024597168
    6. ' ' → logprob: -3.909358024597168
    7. ' les' → logprob: -4.284358024597168
    8. ' (' → logprob: -4.659358024597168
    9. '(
' → logprob: -4.659358024597168
    10. ' l' → logprob: -4.784358024597168

Token 64: ' on' (ID: 402)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5160231590270996
    2. ' a' → logprob: -1.5160231590270996
    3. 'x' → logprob: -2.3910231590270996
    4. ' x' → logprob: -3.0160231590270996
    5. 'n' → logprob: -4.5160231590271
    6. ' n' → logprob: -4.7660231590271
    7. ' on' → logprob: -5.6410231590271
    8. 'i' → logprob: -5.8910231590271
    9. ' i' → logprob: -6.2660231590271
    10. '`' → logprob: -7.1410231590271

Token 65: ' récup' (ID: 62856)
  Prédit: 'aff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'aff' → logprob: -1.0834661722183228
    2. ' stock' → logprob: -1.5834661722183228
    3. ' ass' → logprob: -2.333466053009033
    4. ' affect' → logprob: -2.458466053009033
    5. 'stock' → logprob: -2.708466053009033
    6. 'r' → logprob: -3.958466053009033
    7. 'ass' → logprob: -3.958466053009033
    8. ' les' → logprob: -3.958466053009033
    9. ' attrib' → logprob: -3.958466053009033
    10. 'attrib' → logprob: -3.958466053009033

Token 66: 'ère' (ID: 4346)
  Prédit: 'è'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'è' → logprob: -0.2565418779850006
    2. 'ère' → logprob: -1.5065418481826782
    3. 'èr' → logprob: -6.256541728973389
    4. 'é' → logprob: -6.381541728973389
    5. 'à' → logprob: -8.381542205810547
    6. 'ë' → logprob: -8.631542205810547
    7. '\' → logprob: -9.506542205810547
    8. '#' → logprob: -9.506542205810547
    9. '`' → logprob: -9.756542205810547
    10. 'č' → logprob: -9.881542205810547

Token 67: ' ces' (ID: 10532)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.8910783529281616
    2. ' ' → logprob: -1.6410783529281616
    3. 'les' → logprob: -2.391078472137451
    4. ' la' → logprob: -2.516078472137451
    5. '_' → logprob: -2.641078472137451
    6. 'l' → logprob: -3.391078472137451
    7. ' l' → logprob: -3.766078472137451
    8. 's' → logprob: -4.141078472137451
    9. '(' → logprob: -4.391078472137451
    10. 'le' → logprob: -4.766078472137451

Token 68: ' deux' (ID: 10301)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.8155332207679749
    2. 'a' → logprob: -1.44053316116333
    3. ' x' → logprob: -2.06553316116333
    4. ' ' → logprob: -3.19053316116333
    5. 'x' → logprob: -3.31553316116333
    6. 'ent' → logprob: -3.56553316116333
    7. ' ent' → logprob: -3.69053316116333
    8. ' nombres' → logprob: -4.31553316116333
    9. 'val' → logprob: -4.56553316116333
    10. 'n' → logprob: -4.94053316116333

Token 69: ' ent' (ID: 1121)
  Prédit: ' nombres'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombres' → logprob: -0.2621486186981201
    2. ' ent' → logprob: -2.51214861869812
    3. ' valeurs' → logprob: -3.13714861869812
    4. 'ent' → logprob: -3.38714861869812
    5. ' integers' → logprob: -3.88714861869812
    6. ' variables' → logprob: -4.137148857116699
    7. ' numbers' → logprob: -4.512148857116699
    8. ' entier' → logprob: -5.637148857116699
    9. 'n' → logprob: -5.762148857116699
    10. ' nombre' → logprob: -5.887148857116699

Token 70: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.12400136888027191
    2. 'ières' → logprob: -2.2490012645721436
    3. 'i' → logprob: -4.749001502990723
    4. 'ier' → logprob: -7.124001502990723
    5. 't' → logprob: -8.124001502990723
    6. 'ière' → logprob: -8.124001502990723
    7. ',' → logprob: -8.374001502990723
    8. 'ires' → logprob: -8.374001502990723
    9. 'r' → logprob: -8.999001502990723
    10. 'ri' → logprob: -9.624001502990723

Token 71: ' et' (ID: 859)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5187667608261108
    2. ' a' → logprob: -1.1437667608261108
    3. ',' → logprob: -3.3937668800354004
    4. 'x' → logprob: -3.7687668800354004
    5. ' x' → logprob: -4.1437668800354
    6. 'n' → logprob: -4.7687668800354
    7. ' n' → logprob: -6.6437668800354
    8. ' ,' → logprob: -7.3937668800354
    9. 'i' → logprob: -7.5187668800354
    10. ' nombre' → logprob: -7.8937668800354

Token 72: ' on' (ID: 402)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.17154689133167267
    2. ' stock' → logprob: -3.0465469360351562
    3. 'assign' → logprob: -4.171546936035156
    4. 'les' → logprob: -4.296546936035156
    5. '_' → logprob: -4.546546936035156
    6. ' ' → logprob: -4.796546936035156
    7. 's' → logprob: -4.921546936035156
    8. ' affect' → logprob: -4.921546936035156
    9. 'aff' → logprob: -5.546546936035156
    10. '<|end|>' → logprob: -5.546546936035156

Token 73: ' les' (ID: 1341)
  Prédit: ' stock'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stock' → logprob: -1.1061198711395264
    2. ' les' → logprob: -1.4811198711395264
    3. ' ass' → logprob: -1.8561198711395264
    4. ' affect' → logprob: -2.2311198711395264
    5. 'aff' → logprob: -3.1061198711395264
    6. 'les' → logprob: -3.6061198711395264
    7. 'ass' → logprob: -3.7311198711395264
    8. '_' → logprob: -3.7311198711395264
    9. 'stock' → logprob: -4.1061201095581055
    10. 's' → logprob: -4.8561201095581055

Token 74: ' ass' (ID: 1680)
  Prédit: ' affect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' affect' → logprob: -0.8234195113182068
    2. 'aff' → logprob: -1.3234195709228516
    3. ' stock' → logprob: -2.1984195709228516
    4. '_' → logprob: -2.9484195709228516
    5. ' attrib' → logprob: -3.9484195709228516
    6. 'r' → logprob: -4.073419570922852
    7. ' récup' → logprob: -4.073419570922852
    8. 's' → logprob: -4.698419570922852
    9. '=' → logprob: -4.698419570922852
    10. ' ass' → logprob: -4.823419570922852

Token 75: 'igne' (ID: 24120)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.24637621641159058
    2. 'i' → logprob: -1.7463762760162354
    3. '=' → logprob: -4.121376037597656
    4. 'igne' → logprob: -4.621376037597656
    5. 'gn' → logprob: -4.746376037597656
    6. 'ig' → logprob: -5.996376037597656
    7. '#' → logprob: -6.496376037597656
    8. 'ign' → logprob: -6.621376037597656
    9. 'gne' → logprob: -7.371376037597656
    10. 'u' → logprob: -7.621376037597656

Token 76: ' respect' (ID: 5618)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.3190862536430359
    2. ' ' → logprob: -2.4440863132476807
    3. ' x' → logprob: -2.4440863132476807
    4. ' à' → logprob: -3.1940863132476807
    5. ' i' → logprob: -4.069086074829102
    6. ' n' → logprob: -5.194086074829102
    7. ' au' → logprob: -5.194086074829102
    8. 'x' → logprob: -5.569086074829102
    9. 'a' → logprob: -5.694086074829102
    10. ' aux' → logprob: -5.819086074829102

Token 77: 'ivement' (ID: 37978)
  Prédit: 'ivement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ivement' → logprob: -0.22197912633419037
    2. 'u' → logprob: -1.9719791412353516
    3. '_' → logprob: -3.9719791412353516
    4. 'ent' → logprob: -4.846979141235352
    5. 'ement' → logprob: -4.846979141235352
    6. 'v' → logprob: -5.596979141235352
    7. 'iv' → logprob: -5.596979141235352
    8. ' ' → logprob: -5.596979141235352
    9. 'uellement' → logprob: -5.596979141235352
    10. '```' → logprob: -6.721979141235352

Token 78: '
' (ID: 198)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.7636775374412537
    2. ' a' → logprob: -0.8886775374412537
    3. ' ' → logprob: -3.2636775970458984
    4. ' ,' → logprob: -4.013677597045898
    5. ' au' → logprob: -4.138677597045898
    6. ',' → logprob: -4.263677597045898
    7. ' aux' → logprob: -4.263677597045898
    8. ' =' → logprob: -5.638677597045898
    9. ' )' → logprob: -5.888677597045898
    10. 'a' → logprob: -6.138677597045898

Token 79: '#' (ID: 2)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6478559374809265
    2. ' à' → logprob: -1.3978559970855713
    3. '_' → logprob: -2.0228559970855713
    4. ' a' → logprob: -2.7728559970855713
    5. ' au' → logprob: -5.397855758666992
    6. ' =' → logprob: -5.522855758666992
    7. ' _' → logprob: -5.897855758666992
    8. ',' → logprob: -6.022855758666992
    9. ' aux' → logprob: -6.147855758666992
    10. '=' → logprob: -6.147855758666992

Token 80: ' aux' (ID: 5850)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.7403255105018616
    2. ' a' → logprob: -0.9903255105018616
    3. 'a' → logprob: -2.990325450897217
    4. ' aux' → logprob: -2.990325450897217
    5. ' ' → logprob: -4.490325450897217
    6. ',' → logprob: -4.615325450897217
    7. ' au' → logprob: -4.865325450897217
    8. ' =' → logprob: -5.365325450897217
    9. 'à' → logprob: -5.865325450897217
    10. ' x' → logprob: -5.990325450897217

Token 81: ' variables' (ID: 13955)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.20462873578071594
    2. ' a' → logprob: -1.8296287059783936
    3. 'x' → logprob: -3.9546287059783936
    4. ' x' → logprob: -5.579628944396973
    5. 'n' → logprob: -7.704628944396973
    6. 'nombre' → logprob: -8.579628944396973
    7. 'ent' → logprob: -8.829628944396973
    8. ' variables' → logprob: -9.079628944396973
    9. ' n' → logprob: -9.204628944396973
    10. 'i' → logprob: -9.454628944396973

Token 82: ' n' (ID: 297)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.5214468240737915
    2. 'a' → logprob: -1.0214468240737915
    3. ' x' → logprob: -3.396446704864502
    4. 'x' → logprob: -4.521446704864502
    5. ' `' → logprob: -7.396446704864502
    6. ' n' → logprob: -7.646446704864502
    7. ' i' → logprob: -8.77144718170166
    8. 'n' → logprob: -9.14644718170166
    9. 'i' → logprob: -9.64644718170166
    10. ' nombre' → logprob: -9.64644718170166

Token 83: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01863810047507286
    2. ' ,' → logprob: -4.5186381340026855
    3. 's' → logprob: -6.1436381340026855
    4. '1' → logprob: -6.3936381340026855
    5. ',n' → logprob: -7.0186381340026855
    6. ' =' → logprob: -7.3936381340026855
    7. 'n' → logprob: -7.3936381340026855
    8. 'u' → logprob: -8.143637657165527
    9. 'e' → logprob: -8.268637657165527
    10. ' ' → logprob: -8.518637657165527

Token 84: ' l' (ID: 305)
  Prédit: ' m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.4878937602043152
    2. 'm' → logprob: -1.11289381980896
    3. ' k' → logprob: -3.98789381980896
    4. 'k' → logprob: -4.237893581390381
    5. ' p' → logprob: -4.362893581390381
    6. 'p' → logprob: -5.487893581390381
    7. ' ' → logprob: -5.862893581390381
    8. ' x' → logprob: -7.112893581390381
    9. ' t' → logprob: -7.612893581390381
    10. 'x' → logprob: -7.612893581390381

Token 85: '.' (ID: 13)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.15509644150733948
    2. ',' → logprob: -2.2800965309143066
    3. ' =' → logprob: -4.030096530914307
    4. '=' → logprob: -4.905096530914307
    5. ' ' → logprob: -5.280096530914307
    6. ' n' → logprob: -5.780096530914307
    7. ')' → logprob: -6.030096530914307
    8. ',n' → logprob: -7.030096530914307
    9. '.' → logprob: -7.280096530914307
    10. 's' → logprob: -7.530096530914307

Token 86: ' Par' (ID: 3371)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0001495484757469967
    2. ',' → logprob: -9.875149726867676
    3. '\n' → logprob: -10.625149726867676
    4. '
' → logprob: -10.875149726867676
    5. '```' → logprob: -11.625149726867676
    6. '#' → logprob: -11.875149726867676
    7. ',n' → logprob: -12.000149726867676
    8. ' n' → logprob: -12.125149726867676
    9. '

' → logprob: -12.375149726867676
    10. 'x' → logprob: -12.375149726867676

Token 87: ' exemple' (ID: 26320)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.9636899828910828
    2. ' a' → logprob: -1.4636900424957275
    3. 'e' → logprob: -2.8386900424957275
    4. 'u' → logprob: -2.9636900424957275
    5. ' n' → logprob: -2.9636900424957275
    6. 's' → logprob: -3.0886900424957275
    7. 'n' → logprob: -3.7136900424957275
    8. ' la' → logprob: -3.8386900424957275
    9. '_' → logprob: -4.088689804077148
    10. ' e' → logprob: -4.588689804077148

Token 88: ',' (ID: 11)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.011063974350690842
    2. ',' → logprob: -5.636064052581787
    3. ' n' → logprob: -6.136064052581787
    4. 'a' → logprob: -6.636064052581787
    5. 's' → logprob: -7.386064052581787
    6. ' 
' → logprob: -7.636064052581787
    7. '\n' → logprob: -7.636064052581787
    8. 'x' → logprob: -7.886064052581787
    9. ':' → logprob: -8.136063575744629
    10. ' ,' → logprob: -8.511063575744629

Token 89: ' si' (ID: 1784)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.01051666121929884
    2. ' n' → logprob: -4.63551664352417
    3. ' 
' → logprob: -8.135517120361328
    4. ' ' → logprob: -9.510517120361328
    5. 'a' → logprob: -9.635517120361328
    6. 'x' → logprob: -9.885517120361328
    7. ' (' → logprob: -10.385517120361328
    8. '`' → logprob: -10.510517120361328
    9. '  
' → logprob: -10.510517120361328
    10. '(' → logprob: -10.635517120361328

Token 90: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.15489745140075684
    2. ' n' → logprob: -2.654897451400757
    3. ' on' → logprob: -3.279897451400757
    4. 'l' → logprob: -4.154897689819336
    5. ' ' → logprob: -5.529897689819336
    6. ' ' → logprob: -5.779897689819336
    7. ' vous' → logprob: -6.029897689819336
    8. ' input' → logprob: -6.029897689819336
    9. ' user' → logprob: -6.404897689819336
    10. 'n' → logprob: -6.404897689819336

Token 91: ''utilisateur' (ID: 140803)
  Prédit: ' utilisateur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' utilisateur' → logprob: -0.9394485950469971
    2. ' ' → logprob: -1.189448595046997
    3. ''utilisateur' → logprob: -1.689448595046997
    4. ' user' → logprob: -2.939448595046997
    5. ''' → logprob: -4.564448356628418
    6. ' n' → logprob: -4.939448356628418
    7. ' on' → logprob: -4.939448356628418
    8. 'u' → logprob: -5.189448356628418
    9. '’utilisateur' → logprob: -5.189448356628418
    10. ' ' → logprob: -5.439448356628418

Token 92: ' tape' (ID: 27444)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.800369918346405
    2. ' ' → logprob: -1.0503699779510498
    3. 's' → logprob: -2.67536997795105
    4. ' =' → logprob: -3.30036997795105
    5. ''' → logprob: -3.92536997795105
    6. ' )' → logprob: -4.050369739532471
    7. ' _' → logprob: -4.800369739532471
    8. '=' → logprob: -4.800369739532471
    9. ' s' → logprob: -5.550369739532471
    10. 'a' → logprob: -5.800369739532471

Token 93: ' "' (ID: 392)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3804941475391388
    2. '"' → logprob: -2.7554941177368164
    3. ' n' → logprob: -2.7554941177368164
    4. 'n' → logprob: -2.7554941177368164
    5. ''' → logprob: -3.3804941177368164
    6. ' "' → logprob: -3.6304941177368164
    7. ' '' → logprob: -3.8804941177368164
    8. ' `' → logprob: -5.005494117736816
    9. 'u' → logprob: -5.755494117736816
    10. ' a' → logprob: -5.755494117736816

Token 94: '3' (ID: 18)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.6404139995574951
    2. ' ' → logprob: -1.3904139995574951
    3. '5' → logprob: -2.390413999557495
    4. '1' → logprob: -2.890413999557495
    5. '"' → logprob: -3.140413999557495
    6. '12' → logprob: -4.890414237976074
    7. '3' → logprob: -4.890414237976074
    8. '2' → logprob: -5.515414237976074
    9. '7' → logprob: -5.640414237976074
    10. ''' → logprob: -5.765414237976074

Token 95: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0032600578851997852
    2. ' "' → logprob: -6.378260135650635
    3. '  ' → logprob: -7.378260135650635
    4. '2' → logprob: -8.628259658813477
    5. '7' → logprob: -9.253259658813477
    6. ' ' → logprob: -9.253259658813477
    7. '4' → logprob: -9.503259658813477
    8. '5' → logprob: -9.878259658813477
    9. '20' → logprob: -10.003259658813477
    10. '6' → logprob: -10.003259658813477

Token 96: '5' (ID: 20)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8638095855712891
    2. '5' → logprob: -0.9888095855712891
    3. '4' → logprob: -2.613809585571289
    4. '10' → logprob: -3.113809585571289
    5. '7' → logprob: -3.113809585571289
    6. '2' → logprob: -4.238809585571289
    7. '12' → logprob: -5.238809585571289
    8. '20' → logprob: -5.363809585571289
    9. '6' → logprob: -5.613809585571289
    10. '+' → logprob: -5.738809585571289

Token 97: '",' (ID: 672)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.4237920641899109
    2. '"' → logprob: -1.7987921237945557
    3. ')' → logprob: -1.9237921237945557
    4. ' ")' → logprob: -4.548791885375977
    5. ')"' → logprob: -4.798791885375977
    6. ' )' → logprob: -4.923791885375977
    7. '",' → logprob: -6.423791885375977
    8. '").' → logprob: -6.548791885375977
    9. '\n' → logprob: -7.048791885375977
    10. ' "' → logprob: -7.173791885375977

Token 98: ' alors' (ID: 17971)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.16119800508022308
    2. 'n' → logprob: -1.9111980199813843
    3. ' 
' → logprob: -7.911198139190674
    4. ' ' → logprob: -7.911198139190674
    5. ' on' → logprob: -9.411197662353516
    6. ' alors' → logprob: -9.786197662353516
    7. ' ' → logprob: -10.161197662353516
    8. ' (' → logprob: -11.286197662353516
    9. ' la' → logprob: -11.786197662353516
    10. '(n' → logprob: -12.036197662353516

Token 99: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.03848229721188545
    2. 'n' → logprob: -3.288482189178467
    3. '(n' → logprob: -8.663482666015625
    4. ' (' → logprob: -9.538482666015625
    5. ' ' → logprob: -9.538482666015625
    6. ' on' → logprob: -10.538482666015625
    7. '[n' → logprob: -10.913482666015625
    8. '```' → logprob: -10.913482666015625
    9. ' ' → logprob: -11.038482666015625
    10. ' `' → logprob: -11.538482666015625

Token 100: '=' (ID: 28)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004521027207374573
    2. ' ,' → logprob: -5.504520893096924
    3. ',n' → logprob: -8.004521369934082
    4. ',l' → logprob: -10.254521369934082
    5. ' =' → logprob: -10.379521369934082
    6. '=' → logprob: -11.754521369934082
    7. ',s' → logprob: -12.379521369934082
    8. ')' → logprob: -12.504521369934082
    9. 'n' → logprob: -13.004521369934082
    10. 's' → logprob: -13.004521369934082

Token 101: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.5759458541870117
    2. ' ' → logprob: -0.8259458541870117
    3. ' ' → logprob: -12.450945854187012
    4. ' n' → logprob: -13.950945854187012
    5. 'int' → logprob: -14.950945854187012
    6. ',' → logprob: -14.950945854187012
    7. ' int' → logprob: -15.575945854187012
    8. 'n' → logprob: -15.825945854187012
    9. '5' → logprob: -16.325946807861328
    10. '1' → logprob: -16.575946807861328

Token 102: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01742108352482319
    2. ' et' → logprob: -5.017421245574951
    3. ' ,' → logprob: -5.267421245574951
    4. ',l' → logprob: -5.642421245574951
    5. 'et' → logprob: -7.642421245574951
    6. ' and' → logprob: -7.767421245574951
    7. ' l' → logprob: -8.267420768737793
    8. ',n' → logprob: -8.517420768737793
    9. ',
' → logprob: -8.767420768737793
    10. 'l' → logprob: -9.142420768737793

Token 103: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.055108390748500824
    2. 'l' → logprob: -2.9301083087921143
    3. ' ' → logprob: -8.805108070373535
    4. ' ' → logprob: -9.805108070373535
    5. '"' → logprob: -11.680108070373535
    6. 'n' → logprob: -12.930108070373535
    7. ' n' → logprob: -13.430108070373535
    8. ''' → logprob: -13.430108070373535
    9. '```' → logprob: -13.680108070373535
    10. '	l' → logprob: -13.930108070373535

Token 104: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0015079588629305363
    2. ' =' → logprob: -6.501507759094238
    3. '=int' → logprob: -14.251507759094238
    4. ',' → logprob: -14.751507759094238
    5. '_=' → logprob: -14.751507759094238
    6. '1' → logprob: -15.001507759094238
    7. '=l' → logprob: -15.314007759094238
    8. ''=' → logprob: -15.439007759094238
    9. ' ' → logprob: -15.564007759094238
    10. '=None' → logprob: -15.564007759094238

Token 105: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.012510590255260468
    2. ' ' → logprob: -4.387510776519775
    3. '3' → logprob: -15.137510299682617
    4. ' ' → logprob: -15.387510299682617
    5. '  ' → logprob: -16.512510299682617
    6. '1' → logprob: -16.575010299682617
    7. '```' → logprob: -16.637510299682617
    8. '2' → logprob: -16.700010299682617
    9. '   ' → logprob: -17.075010299682617
    10. '4' → logprob: -17.075010299682617

Token 106: '.
' (ID: 558)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0010485276579856873
    2. '\n' → logprob: -7.751048564910889
    3. '
' → logprob: -8.25104808807373
    4. ',' → logprob: -8.75104808807373
    5. ',n' → logprob: -10.62604808807373
    6. ' 
' → logprob: -10.75104808807373
    7. ' n' → logprob: -10.75104808807373
    8. '#' → logprob: -10.87604808807373
    9. ' ' → logprob: -11.12604808807373
    10. '  
' → logprob: -11.25104808807373

Token 107: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00019138160860165954
    2. '\n' → logprob: -8.875191688537598
    3. '
' → logprob: -11.500191688537598
    4. ',' → logprob: -11.625191688537598
    5. ' 
' → logprob: -11.875191688537598
    6. '```' → logprob: -11.875191688537598
    7. '\' → logprob: -12.125191688537598
    8. '  
' → logprob: -13.250191688537598
    9. ' n' → logprob: -13.375191688537598
    10. '[n' → logprob: -13.375191688537598

Token 108: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000443420372903347
    2. ',l' → logprob: -8.250443458557129
    3. ' ,' → logprob: -8.625443458557129
    4. ',n' → logprob: -13.250443458557129
    5. 'l' → logprob: -15.375443458557129
    6. ',
' → logprob: -16.375442504882812
    7. ',s' → logprob: -16.625442504882812
    8. ',v' → logprob: -16.625442504882812
    9. 's' → logprob: -17.125442504882812
    10. ',j' → logprob: -17.250442504882812

Token 109: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.1133730337023735
    2. 'l' → logprob: -2.238373041152954
    3. ' ' → logprob: -7.613372802734375
    4. ' ' → logprob: -9.988372802734375
    5. '	l' → logprob: -12.863372802734375
    6. ' =' → logprob: -12.863372802734375
    7. '=' → logprob: -13.613372802734375
    8. 'space' → logprob: -14.113372802734375
    9. '=l' → logprob: -14.113372802734375
    10. '  ' → logprob: -14.238372802734375

Token 110: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.17978207767009735
    2. '=' → logprob: -1.8047820329666138
    3. ',' → logprob: -10.554781913757324
    4. '=input' → logprob: -12.304781913757324
    5. ' ' → logprob: -13.179781913757324
    6. ')' → logprob: -13.554781913757324
    7. ' =
' → logprob: -14.054781913757324
    8. '=int' → logprob: -14.179781913757324
    9. ' ' → logprob: -14.804781913757324
    10. '.' → logprob: -15.304781913757324

Token 111: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.0019287518225610256
    2. ' map' → logprob: -6.251928806304932
    3. 'list' → logprob: -15.751928329467773
    4. '	map' → logprob: -17.376928329467773
    5. '(map' → logprob: -19.126928329467773
    6. '   ' → logprob: -19.501928329467773
    7. ' ' → logprob: -19.751928329467773
    8. ' ' → logprob: -20.001928329467773
    9. '  ' → logprob: -20.251928329467773
    10. 'tuple' → logprob: -20.251928329467773

Token 112: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.48740044236183167
    2. '(input' → logprob: -0.9874004125595093
    3. '(' → logprob: -4.487400531768799
    4. '(str' → logprob: -6.237400531768799
    5. ' (' → logprob: -10.98740005493164
    6. '(list' → logprob: -12.11240005493164
    7. 'input' → logprob: -12.73740005493164
    8. '(
' → logprob: -13.11240005493164
    9. '<input' → logprob: -14.61240005493164
    10. '(s' → logprob: -14.98740005493164

Token 113: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.003418793436139822
    2. 'input' → logprob: -5.753418922424316
    3. '(' → logprob: -8.628418922424316
    4. ')' → logprob: -10.878418922424316
    5. ' (' → logprob: -10.878418922424316
    6. ',input' → logprob: -11.003418922424316
    7. ' input' → logprob: -12.253418922424316
    8. '=input' → logprob: -13.628418922424316
    9. ')(' → logprob: -14.628418922424316
    10. '```' → logprob: -14.878418922424316

Token 114: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.011053244583308697
    2. ' input' → logprob: -4.511053085327148
    3. '(input' → logprob: -12.386053085327148
    4. '   ' → logprob: -14.761053085327148
    5. ' ' → logprob: -15.386053085327148
    6. ')' → logprob: -15.511053085327148
    7. '<input' → logprob: -15.636053085327148
    8. '	input' → logprob: -15.886053085327148
    9. '=input' → logprob: -16.26105308532715
    10. '[input' → logprob: -16.63605308532715

Token 115: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00043639098294079304
    2. '()' → logprob: -7.750436305999756
    3. ' ().' → logprob: -12.625436782836914
    4. '())' → logprob: -13.125436782836914
    5. '("' → logprob: -16.000436782836914
    6. '(' → logprob: -16.375436782836914
    7. '("").' → logprob: -16.875436782836914
    8. '('' → logprob: -17.125436782836914
    9. '.split' → logprob: -17.375436782836914
    10. ' ()' → logprob: -17.375436782836914

Token 116: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00091217877343297
    2. 'strip' → logprob: -7.000912189483643
    3. ' split' → logprob: -14.500911712646484
    4. 'rstrip' → logprob: -15.125911712646484
    5. '(split' → logprob: -18.500911712646484
    6. 'spl' → logprob: -19.375911712646484
    7. 'read' → logprob: -19.625911712646484
    8. '.split' → logprob: -20.125911712646484
    9. '().' → logprob: -20.500911712646484
    10. ' strip' → logprob: -21.000911712646484

Token 117: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.12099835276603699
    2. '()' → logprob: -2.8709983825683594
    3. '('' → logprob: -2.8709983825683594
    4. '(' → logprob: -7.620998382568359
    5. '("' → logprob: -9.74599838256836
    6. ' ())' → logprob: -9.87099838256836
    7. ')' → logprob: -10.12099838256836
    8. '()))' → logprob: -10.87099838256836
    9. '())
' → logprob: -12.37099838256836
    10. '(','' → logprob: -12.74599838256836

Token 118: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7928504347801208
    2. '<|end|>' → logprob: -1.7928504943847656
    3. ':' → logprob: -1.9178504943847656
    4. ')' → logprob: -2.1678504943847656
    5. '#' → logprob: -2.9178504943847656
    6. ' 
' → logprob: -4.417850494384766
    7. '  
' → logprob: -4.542850494384766
    8. 'n' → logprob: -4.917850494384766
    9. ' ' → logprob: -5.042850494384766
    10. '[' → logprob: -5.667850494384766

Token 119: ' Ici' (ID: 145754)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.2312982976436615
    2. 'for' → logprob: -3.1062982082366943
    3. 's' → logprob: -3.7312982082366943
    4. '#' → logprob: -3.8562982082366943
    5. 'res' → logprob: -3.9812982082366943
    6. 'lst' → logprob: -4.356298446655273
    7. 'count' → logprob: -4.606298446655273
    8. 'total' → logprob: -4.981298446655273
    9. 'results' → logprob: -5.231298446655273
    10. 'words' → logprob: -5.481298446655273

Token 120: ',' (ID: 11)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.22945401072502136
    2. 'print' → logprob: -2.6044540405273438
    3. '#' → logprob: -3.2294540405273438
    4. ' for' → logprob: -3.6044540405273438
    5. ' =' → logprob: -3.6044540405273438
    6. '=' → logprob: -4.354454040527344
    7. 'if' → logprob: -5.479454040527344
    8. 'n' → logprob: -5.729454040527344
    9. 'result' → logprob: -5.729454040527344
    10. ':' → logprob: -6.104454040527344

Token 121: ' on' (ID: 402)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.9517443776130676
    2. ' result' → logprob: -1.7017443180084229
    3. 'for' → logprob: -2.326744318008423
    4. ' for' → logprob: -2.701744318008423
    5. '#' → logprob: -3.201744318008423
    6. 'length' → logprob: -3.326744318008423
    7. 'res' → logprob: -4.076744556427002
    8. 'total' → logprob: -4.076744556427002
    9. 'results' → logprob: -4.701744556427002
    10. 'range' → logprob: -4.826744556427002

Token 122: ' initialise' (ID: 145250)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.48150911927223206
    2. 'range' → logprob: -1.9815090894699097
    3. ' for' → logprob: -2.481509208679199
    4. '#' → logprob: -3.106509208679199
    5. ' #' → logprob: -3.356509208679199
    6. ' range' → logprob: -3.731509208679199
    7. 'if' → logprob: -4.106509208679199
    8. ' crée' → logprob: -4.856509208679199
    9. 's' → logprob: -5.481509208679199
    10. 'print' → logprob: -5.606509208679199

Token 123: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.6065274477005005
    2. ' un' → logprob: -1.8565274477005005
    3. ' la' → logprob: -1.8565274477005005
    4. 'une' → logprob: -2.731527328491211
    5. ' result' → logprob: -4.106527328491211
    6. 'un' → logprob: -4.731527328491211
    7. 'la' → logprob: -4.856527328491211
    8. ' le' → logprob: -4.856527328491211
    9. 'result' → logprob: -4.981527328491211
    10. 'le' → logprob: -6.231527328491211

Token 124: ' variable' (ID: 11076)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.13773050904273987
    2. 'chaine' → logprob: -2.512730598449707
    3. 'variable' → logprob: -3.637730598449707
    4. ' liste' → logprob: -4.762730598449707
    5. 'list' → logprob: -5.887730598449707
    6. 'string' → logprob: -6.012730598449707
    7. ' variable' → logprob: -6.637730598449707
    8. 'result' → logprob: -7.137730598449707
    9. ' chaîne' → logprob: -7.262730598449707
    10. 'table' → logprob: -7.512730598449707

Token 125: ' taste' (ID: 14673)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.8450843691825867
    2. ' result' → logprob: -1.8450844287872314
    3. 'count' → logprob: -2.5950844287872314
    4. 'res' → logprob: -2.5950844287872314
    5. 's' → logprob: -3.2200844287872314
    6. 'total' → logprob: -3.2200844287872314
    7. ' total' → logprob: -3.8450844287872314
    8. 'distance' → logprob: -3.8450844287872314
    9. 'max' → logprob: -4.095084190368652
    10. ' count' → logprob: -4.095084190368652

Token 126: ' avec' (ID: 3937)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9106886386871338
    2. 's' → logprob: -1.0356886386871338
    3. '_score' → logprob: -2.660688638687134
    4. '_sum' → logprob: -2.660688638687134
    5. '_value' → logprob: -4.035688400268555
    6. '_total' → logprob: -4.160688400268555
    7. '_s' → logprob: -4.285688400268555
    8. '=' → logprob: -4.285688400268555
    9. '_scores' → logprob: -4.285688400268555
    10. '_values' → logprob: -5.035688400268555

Token 127: ' la' (ID: 557)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.09497436136007309
    2. '[]' → logprob: -2.5949742794036865
    3. ' ' → logprob: -4.719974517822266
    4. '[' → logprob: -5.969974517822266
    5. 'n' → logprob: -6.719974517822266
    6. 'l' → logprob: -6.719974517822266
    7. ' []' → logprob: -7.469974517822266
    8. '[n' → logprob: -7.594974517822266
    9. ' [' → logprob: -9.094974517822266
    10. '-' → logprob: -9.219974517822266

Token 128: ' valeur' (ID: 41664)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.49326518177986145
    2. 'val' → logprob: -1.368265151977539
    3. '[]' → logprob: -2.743265151977539
    4. '""' → logprob: -4.368265151977539
    5. '"' → logprob: -4.618265151977539
    6. '-' → logprob: -4.868265151977539
    7. 'float' → logprob: -4.868265151977539
    8. '''' → logprob: -5.243265151977539
    9. 'n' → logprob: -5.743265151977539
    10. 'max' → logprob: -5.868265151977539

Token 129: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.028021853417158127
    2. ' ' → logprob: -3.778021812438965
    3. '=' → logprob: -6.528021812438965
    4. 'total' → logprob: -6.778021812438965
    5. '[]' → logprob: -7.153021812438965
    6. 'max' → logprob: -7.778021812438965
    7. 'tot' → logprob: -8.528021812438965
    8. 's' → logprob: -8.528021812438965
    9. ' total' → logprob: -9.028021812438965
    10. ' =' → logprob: -9.278021812438965

Token 130: '100' (ID: 1353)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0033294493332505226
    2. ' ' → logprob: -6.628329277038574
    3. '=' → logprob: -7.503329277038574
    4. '[]' → logprob: -7.628329277038574
    5. 'max' → logprob: -8.253329277038574
    6. 'n' → logprob: -8.503329277038574
    7. '-' → logprob: -8.628329277038574
    8. 'total' → logprob: -10.003329277038574
    9. 'float' → logprob: -10.128329277038574
    10. '[' → logprob: -10.378329277038574

Token 131: '00' (ID: 504)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5942732691764832
    2. 'taste' → logprob: -1.594273328781128
    3. '=' → logprob: -2.469273328781128
    4. '100' → logprob: -3.219273328781128
    5. '_' → logprob: -3.344273328781128
    6. ',' → logprob: -3.594273328781128
    7. ' ' → logprob: -3.969273328781128
    8. '_t' → logprob: -4.344273090362549
    9. ' taste' → logprob: -4.719273090362549
    10. 's' → logprob: -5.719273090362549

Token 132: '.
' (ID: 558)
  Prédit: 'taste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'taste' → logprob: -0.2889191806316376
    2. ' ' → logprob: -3.03891921043396
    3. '100' → logprob: -3.16391921043396
    4. ' =' → logprob: -3.78891921043396
    5. '
' → logprob: -3.78891921043396
    6. ' taste' → logprob: -3.78891921043396
    7. '=' → logprob: -4.038918972015381
    8. 't' → logprob: -4.163918972015381
    9. ',' → logprob: -4.163918972015381
    10. '0' → logprob: -4.788918972015381

Token 133: '#' (ID: 2)
  Prédit: 'taste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'taste' → logprob: -4.56102097814437e-05
    2. ' taste' → logprob: -10.250045776367188
    3. '100' → logprob: -12.250045776367188
    4. '#' → logprob: -13.125045776367188
    5. 't' → logprob: -13.500045776367188
    6. 'Taste' → logprob: -14.625045776367188
    7. '```' → logprob: -15.000045776367188
    8. '
' → logprob: -15.500045776367188
    9. ' ' → logprob: -16.125045776367188
    10. '10' → logprob: -17.000045776367188

Token 134: ' Cette' (ID: 27383)
  Prédit: 'taste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'taste' → logprob: -2.9160102712921798e-05
    2. ' taste' → logprob: -10.750029563903809
    3. '100' → logprob: -12.750029563903809
    4. 't' → logprob: -12.875029563903809
    5. 'Taste' → logprob: -14.375029563903809
    6. '#' → logprob: -14.750029563903809
    7. '```' → logprob: -15.500029563903809
    8. 'max' → logprob: -16.000028610229492
    9. '
' → logprob: -16.000028610229492
    10. 'tal' → logprob: -16.875028610229492

Token 135: ' variable' (ID: 11076)
  Prédit: 'taste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'taste' → logprob: -0.12704990804195404
    2. ' taste' → logprob: -2.2520499229431152
    3. 't' → logprob: -5.252049922943115
    4. '_t' → logprob: -5.877049922943115
    5. ' =' → logprob: -6.627049922943115
    6. '#' → logprob: -6.752049922943115
    7. 'variable' → logprob: -7.252049922943115
    8. '_' → logprob: -7.502049922943115
    9. ' variable' → logprob: -8.127049446105957
    10. 'Taste' → logprob: -8.252049446105957

Token 136: ' va' (ID: 3423)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.24871331453323364
    2. '=' → logprob: -1.8737132549285889
    3. '_t' → logprob: -3.373713254928589
    4. '_' → logprob: -3.998713254928589
    5. 'taste' → logprob: -5.623713493347168
    6. ' taste' → logprob: -6.498713493347168
    7. ' est' → logprob: -6.498713493347168
    8. 't' → logprob: -6.998713493347168
    9. ' -=' → logprob: -7.123713493347168
    10. ' ' → logprob: -7.623713493347168

Token 137: ' être' (ID: 9104)
  Prédit: ' servir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' servir' → logprob: -0.2173209935426712
    2. ' =' → logprob: -2.5923209190368652
    3. '_' → logprob: -3.4673209190368652
    4. ' ' → logprob: -3.7173209190368652
    5. '=' → logprob: -3.8423209190368652
    6. 'represent' → logprob: -5.217320919036865
    7. ' être' → logprob: -5.467320919036865
    8. ' représ' → logprob: -5.592320919036865
    9. 'serv' → logprob: -5.967320919036865
    10. ' taste' → logprob: -6.342320919036865

Token 138: ' utilisée' (ID: 106548)
  Prédit: ' utilisée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' utilisée' → logprob: -0.007131027989089489
    2. ' used' → logprob: -6.507131099700928
    3. ' utilisé' → logprob: -6.507131099700928
    4. 'used' → logprob: -6.632131099700928
    5. 'util' → logprob: -7.007131099700928
    6. ' remplac' → logprob: -8.13213062286377
    7. '100' → logprob: -8.38213062286377
    8. 'min' → logprob: -8.38213062286377
    9. ' mise' → logprob: -8.50713062286377
    10. ' diminu' → logprob: -8.75713062286377

Token 139: ' afin' (ID: 22217)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5508291125297546
    2. '_' → logprob: -1.0508291721343994
    3. ' =' → logprob: -4.17582893371582
    4. ' pour' → logprob: -4.42582893371582
    5. ',' → logprob: -5.17582893371582
    6. '_max' → logprob: -5.30082893371582
    7. ' to' → logprob: -5.42582893371582
    8. '=' → logprob: -5.42582893371582
    9. 'pour' → logprob: -5.80082893371582
    10. ' _' → logprob: -5.80082893371582

Token 140: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.2018239498138428
    2. '_' → logprob: -1.4518239498138428
    3. ' d' → logprob: -1.4518239498138428
    4. '=' → logprob: -2.9518239498138428
    5. ' ' → logprob: -3.0768239498138428
    6. ' to' → logprob: -3.4518239498138428
    7. ' taste' → logprob: -3.5768239498138428
    8. ' =' → logprob: -4.076824188232422
    9. ' à' → logprob: -4.326824188232422
    10. '  ' → logprob: -4.951824188232422

Token 141: ' stock' (ID: 6546)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.581652045249939
    2. 'tr' → logprob: -1.331652045249939
    3. 'stock' → logprob: -2.9566521644592285
    4. 'g' → logprob: -3.8316521644592285
    5. ' stock' → logprob: -4.0816521644592285
    6. 'max' → logprob: -4.0816521644592285
    7. ' garder' → logprob: -4.7066521644592285
    8. 'calcul' → logprob: -4.7066521644592285
    9. 'con' → logprob: -5.0816521644592285
    10. ' conserver' → logprob: -5.0816521644592285

Token 142: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.022412827238440514
    2. 'uer' → logprob: -4.5224127769470215
    3. '=' → logprob: -5.1474127769470215
    4. 'érer' → logprob: -6.5224127769470215
    5. 'ue' → logprob: -6.7724127769470215
    6. 'urer' → logprob: -7.0224127769470215
    7. 'u' → logprob: -7.6474127769470215
    8. 'ée' → logprob: -8.02241325378418
    9. 'e' → logprob: -8.64741325378418
    10. '_' → logprob: -8.89741325378418

Token 143: ' la' (ID: 557)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5768759846687317
    2. '100' → logprob: -0.9518759846687317
    3. ' taste' → logprob: -3.951875925064087
    4. ' float' → logprob: -4.451876163482666
    5. '_' → logprob: -5.326876163482666
    6. 'taste' → logprob: -5.326876163482666
    7. 'float' → logprob: -6.076876163482666
    8. ' le' → logprob: -6.701876163482666
    9. ' max' → logprob: -7.076876163482666
    10. '"' → logprob: -7.076876163482666

Token 144: ' valeur' (ID: 41664)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.6880089640617371
    2. 'me' → logprob: -1.5630090236663818
    3. 'minimum' → logprob: -2.313009023666382
    4. 'val' → logprob: -2.813009023666382
    5. 'taste' → logprob: -3.063009023666382
    6. 'max' → logprob: -3.188009023666382
    7. 'best' → logprob: -4.063008785247803
    8. 'maximum' → logprob: -5.313008785247803
    9. 'result' → logprob: -6.188008785247803
    10. 'g' → logprob: -6.188008785247803

Token 145: ' de' (ID: 334)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.5343601703643799
    2. 'taste' → logprob: -1.9093601703643799
    3. 'max' → logprob: -2.40936017036438
    4. '_min' → logprob: -2.90936017036438
    5. ' minimale' → logprob: -3.28436017036438
    6. 'best' → logprob: -4.034359931945801
    7. 'minimum' → logprob: -4.159359931945801
    8. ' min' → logprob: -4.659359931945801
    9. ' taste' → logprob: -4.784359931945801
    10. '_max' → logprob: -5.284359931945801

Token 146: ' "' (ID: 392)
  Prédit: 'taste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'taste' → logprob: -0.5201553106307983
    2. 'min' → logprob: -1.3951553106307983
    3. '100' → logprob: -2.895155429840088
    4. ' taste' → logprob: -3.145155429840088
    5. 'max' → logprob: -4.145155429840088
    6. ' min' → logprob: -4.645155429840088
    7. 'l' → logprob: -4.770155429840088
    8. ' ' → logprob: -5.520155429840088
    9. 'best' → logprob: -5.645155429840088
    10. ' la' → logprob: -6.395155429840088

Token 147: 'save' (ID: 13158)
  Prédit: 'taste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'taste' → logprob: -0.7213133573532104
    2. 'min' → logprob: -0.8463133573532104
    3. 'me' → logprob: -3.9713134765625
    4. 'best' → logprob: -4.2213134765625
    5. 'la' → logprob: -4.3463134765625
    6. 'max' → logprob: -4.5963134765625
    7. 'minimum' → logprob: -5.3463134765625
    8. ' taste' → logprob: -5.5963134765625
    9. 'l' → logprob: -5.7213134765625
    10. 'go' → logprob: -5.7213134765625

Token 148: 'ur' (ID: 330)
  Prédit: 'ur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ur' → logprob: -0.5194034576416016
    2. 'g' → logprob: -1.2694034576416016
    3. 'taste' → logprob: -3.1444034576416016
    4. ' =' → logprob: -3.8944034576416016
    5. '_t' → logprob: -4.269403457641602
    6. 'd' → logprob: -4.269403457641602
    7. 't' → logprob: -5.019403457641602
    8. '_' → logprob: -5.144403457641602
    9. 'urs' → logprob: -5.394403457641602
    10. '=' → logprob: -5.644403457641602

Token 149: ' la' (ID: 557)
  Prédit: '_min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_min' → logprob: -0.6992654800415039
    2. '_max' → logprob: -0.8242654800415039
    3. ' =' → logprob: -3.699265480041504
    4. '_' → logprob: -4.449265480041504
    5. 'max' → logprob: -4.449265480041504
    6. '_best' → logprob: -5.574265480041504
    7. ' maximale' → logprob: -5.949265480041504
    8. 'min' → logprob: -6.199265480041504
    9. 'minimum' → logprob: -6.574265480041504
    10. '_t' → logprob: -6.949265480041504

Token 150: ' plus' (ID: 2932)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plus' → logprob: -1.130932331085205
    2. ' plus' → logprob: -1.255932331085205
    3. 'ss' → logprob: -2.005932331085205
    4. ' meilleure' → logprob: -2.880932331085205
    5. '_plus' → logprob: -3.005932331085205
    6. 'me' → logprob: -3.005932331085205
    7. ' moindre' → logprob: -3.255932331085205
    8. 'moins' → logprob: -4.755932331085205
    9. ' ' → logprob: -4.880932331085205
    10. ' ' → logprob: -5.005932331085205

Token 151: ' faible' (ID: 75786)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.8988164067268372
    2. 'fa' → logprob: -1.1488163471221924
    3. ' élevée' → logprob: -2.1488163471221924
    4. ' faible' → logprob: -2.8988163471221924
    5. 'dé' → logprob: -3.2738163471221924
    6. 'fort' → logprob: -4.2738165855407715
    7. 'min' → logprob: -4.6488165855407715
    8. 'import' → logprob: -4.8988165855407715
    9. 'max' → logprob: -5.2738165855407715
    10. 'b' → logprob: -5.5238165855407715

Token 152: ' en' (ID: 469)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3092215657234192
    2. '_min' → logprob: -1.9342215061187744
    3. '_possible' → logprob: -3.8092215061187744
    4. 'taste' → logprob: -4.1842217445373535
    5. ',' → logprob: -4.4342217445373535
    6. ' _' → logprob: -4.5592217445373535
    7. 'min' → logprob: -4.6842217445373535
    8. ' minimale' → logprob: -5.0592217445373535
    9. ' =' → logprob: -5.1842217445373535
    10. ' ' → logprob: -5.1842217445373535

Token 153: ' valeur' (ID: 41664)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.35492071509361267
    2. 'go' → logprob: -2.3549206256866455
    3. 'plus' → logprob: -2.9799206256866455
    4. 'taste' → logprob: -3.6049206256866455
    5. ' goût' → logprob: -4.354920864105225
    6. 'dess' → logprob: -4.479920864105225
    7. 't' → logprob: -4.479920864105225
    8. 'moins' → logprob: -4.604920864105225
    9. 'g' → logprob: -4.854920864105225
    10. 'de' → logprob: -5.104920864105225

Token 154: ' absol' (ID: 7374)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.8715437054634094
    2. 'ab' → logprob: -1.6215436458587646
    3. '_possible' → logprob: -2.2465436458587646
    4. 'e' → logprob: -2.7465436458587646
    5. 'taste' → logprob: -2.7465436458587646
    6. 'abs' → logprob: -3.1215436458587646
    7. '_ab' → logprob: -3.8715436458587646
    8. ' absol' → logprob: -4.121543884277344
    9. 'absolute' → logprob: -4.246543884277344
    10. ' possible' → logprob: -4.496543884277344

Token 155: 'ue' (ID: 466)
  Prédit: 'ue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ue' → logprob: -0.09081889688968658
    2. 'ute' → logprob: -3.2158188819885254
    3. 'u' → logprob: -3.4658188819885254
    4. 'e' → logprob: -4.215818881988525
    5. 'ur' → logprob: -9.215819358825684
    6. 'ol' → logprob: -9.215819358825684
    7. 'ut' → logprob: -9.340819358825684
    8. 'te' → logprob: -9.465819358825684
    9. 'oute' → logprob: -9.840819358825684
    10. '=' → logprob: -10.215819358825684

Token 156: '"
' (ID: 1092)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.37252679467201233
    2. '_' → logprob: -1.87252676486969
    3. ' )' → logprob: -2.8725268840789795
    4. 'taste' → logprob: -3.3725268840789795
    5. '.' → logprob: -4.4975266456604
    6. ',' → logprob: -4.7475266456604
    7. '_max' → logprob: -4.9975266456604
    8. ' ' → logprob: -4.9975266456604
    9. ' _' → logprob: -4.9975266456604
    10. '"' → logprob: -5.2475266456604

Token 157: '#' (ID: 2)
  Prédit: 'taste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'taste' → logprob: -0.06675738841295242
    2. ' taste' → logprob: -3.3167574405670166
    3. ',' → logprob: -3.8167574405670166
    4. '_' → logprob: -6.0667572021484375
    5. ' =' → logprob: -6.5667572021484375
    6. '.' → logprob: -7.3167572021484375
    7. '=' → logprob: -7.4417572021484375
    8. 't' → logprob: -7.6917572021484375
    9. ' ' → logprob: -7.9417572021484375
    10. ' ,' → logprob: -9.566757202148438

Token 158: ' rencontr' (ID: 49751)
  Prédit: 'taste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'taste' → logprob: -0.005729094613343477
    2. ' taste' → logprob: -5.3807291984558105
    3. ',' → logprob: -7.7557291984558105
    4. 't' → logprob: -8.005728721618652
    5. '_' → logprob: -8.880728721618652
    6. ' =' → logprob: -9.880728721618652
    7. ' ' → logprob: -10.630728721618652
    8. '=' → logprob: -10.755728721618652
    9. ' ' → logprob: -10.880728721618652
    10. 'save' → logprob: -11.005728721618652

Token 159: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.007193523459136486
    2. 'e' → logprob: -5.007193565368652
    3. 'é' → logprob: -8.382193565368652
    4. 'ee' → logprob: -9.132193565368652
    5. 'ue' → logprob: -9.257193565368652
    6. '#' → logprob: -11.007193565368652
    7. '=' → logprob: -11.757193565368652
    8. 'rée' → logprob: -12.507193565368652
    9. 'ante' → logprob: -12.632193565368652
    10. 'ie' → logprob: -13.632193565368652

Token 160: ' lors' (ID: 15456)
  Prédit: 'taste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'taste' → logprob: -0.8817370533943176
    2. ',' → logprob: -1.1317369937896729
    3. '_' → logprob: -2.131736993789673
    4. '.' → logprob: -2.506736993789673
    5. ')' → logprob: -4.506737232208252
    6. 'e' → logprob: -4.756737232208252
    7. 't' → logprob: -4.756737232208252
    8. 's' → logprob: -5.381737232208252
    9. '_t' → logprob: -5.631737232208252
    10. '#' → logprob: -5.881737232208252

Token 161: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.1040012836456299
    2. ' du' → logprob: -1.1040012836456299
    3. ' des' → logprob: -2.22900128364563
    4. ' la' → logprob: -2.72900128364563
    5. '=' → logprob: -3.35400128364563
    6. ' le' → logprob: -3.72900128364563
    7. ' l' → logprob: -3.85400128364563
    8. ' =' → logprob: -4.104001045227051
    9. 'de' → logprob: -4.229001045227051
    10. ' d' → logprob: -4.729001045227051

Token 162: ' l' (ID: 305)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.21608519554138184
    2. ' la' → logprob: -1.9660851955413818
    3. 'l' → logprob: -3.591085195541382
    4. 'range' → logprob: -4.966085433959961
    5. 'le' → logprob: -5.216085433959961
    6. 'abs' → logprob: -5.341085433959961
    7. ' l' → logprob: -5.966085433959961
    8. 'une' → logprob: -5.966085433959961
    9. 'les' → logprob: -6.841085433959961
    10. ' range' → logprob: -7.091085433959961

Token 163: ''' (ID: 6)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.09517458081245422
    2. 'es' → logprob: -3.845174551010132
    3. 'e' → logprob: -3.970174551010132
    4. ''' → logprob: -4.095174789428711
    5. ''ex' → logprob: -4.095174789428711
    6. ''analyse' → logprob: -5.095174789428711
    7. ''ensemble' → logprob: -6.470174789428711
    8. '#' → logprob: -6.470174789428711
    9. 'expl' → logprob: -6.845174789428711
    10. 'ex' → logprob: -7.095174789428711

Token 164: 'it' (ID: 278)
  Prédit: 'expl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expl' → logprob: -0.18281248211860657
    2. 'it' → logprob: -2.557812452316284
    3. 'ex' → logprob: -3.432812452316284
    4. 'iteration' → logprob: -4.307812690734863
    5. ''ex' → logprob: -4.682812690734863
    6. 'é' → logprob: -4.932812690734863
    7. 'par' → logprob: -5.307812690734863
    8. 'alg' → logprob: -5.557812690734863
    9. 'analyse' → logprob: -5.682812690734863
    10. '#' → logprob: -6.057812690734863

Token 165: 'ération' (ID: 24977)
  Prédit: 'ération'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ération' → logprob: -0.011348191648721695
    2. 'er' → logprob: -4.636348247528076
    3. 'éra' → logprob: -7.761348247528076
    4. 'ér' → logprob: -8.136347770690918
    5. 'érance' → logprob: -8.386347770690918
    6. 'érations' → logprob: -8.636347770690918
    7. 'ration' → logprob: -8.761347770690918
    8. 'éré' → logprob: -9.011347770690918
    9. 'érés' → logprob: -10.511347770690918
    10. 'érée' → logprob: -10.511347770690918

Token 166: ' dans' (ID: 2671)
  Prédit: 'taste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'taste' → logprob: -0.0001830410328693688
    2. ' taste' → logprob: -9.25018310546875
    3. 't' → logprob: -10.00018310546875
    4. ',' → logprob: -11.25018310546875
    5. 'save' → logprob: -11.37518310546875
    6. '#' → logprob: -12.50018310546875
    7. 'abs' → logprob: -13.25018310546875
    8. 'Taste' → logprob: -14.12518310546875
    9. 'de' → logprob: -14.37518310546875
    10. '.' → logprob: -14.37518310546875

Token 167: ' la' (ID: 557)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.45658791065216064
    2. 'range' → logprob: -1.3315879106521606
    3. ' la' → logprob: -3.206587791442871
    4. ' le' → logprob: -3.456587791442871
    5. ' les' → logprob: -4.331587791442871
    6. 'le' → logprob: -5.331587791442871
    7. 'la' → logprob: -5.706587791442871
    8. 'les' → logprob: -6.081587791442871
    9. 'abs' → logprob: -6.456587791442871
    10. ' ' → logprob: -6.706587791442871

Token 168: ' boucle' (ID: 174211)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.4172271192073822
    2. 'range' → logprob: -1.1672271490097046
    3. ' liste' → logprob: -5.417227268218994
    4. 'for' → logprob: -5.542227268218994
    5. ' for' → logprob: -5.667227268218994
    6. 'liste' → logprob: -5.792227268218994
    7. 'pl' → logprob: -6.292227268218994
    8. ' ' → logprob: -6.292227268218994
    9. 'abs' → logprob: -6.792227268218994
    10. ' abs' → logprob: -7.167227268218994

Token 169: ' suivante' (ID: 107439)
  Prédit: 'taste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'taste' → logprob: -0.0761815682053566
    2. ' taste' → logprob: -3.201181650161743
    3. '
' → logprob: -4.076181411743164
    4. ' 
' → logprob: -4.951181411743164
    5. '
' → logprob: -6.201181411743164
    6. 't' → logprob: -6.201181411743164
    7. '_' → logprob: -7.326181411743164
    8. '' → logprob: -7.826181411743164
    9. ' ' → logprob: -7.951181411743164
    10. '_
' → logprob: -7.951181411743164

Token 170: '.
' (ID: 558)
  Prédit: 'taste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'taste' → logprob: -0.0036972241941839457
    2. '
' → logprob: -6.128697395324707
    3. ' taste' → logprob: -7.503697395324707
    4. 't' → logprob: -7.503697395324707
    5. '
' → logprob: -8.628697395324707
    6. 'save' → logprob: -9.878697395324707
    7. ',' → logprob: -10.003697395324707
    8. ',
' → logprob: -11.128697395324707
    9. '  
' → logprob: -11.503697395324707
    10. ' 
' → logprob: -11.628697395324707

Token 171: 'taste' (ID: 178124)
  Prédit: 'taste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'taste' → logprob: -0.00074959039920941
    2. 'best' → logprob: -8.500749588012695
    3. ' taste' → logprob: -8.750749588012695
    4. 't' → logprob: -9.000749588012695
    5. 'min' → logprob: -9.375749588012695
    6. 'save' → logprob: -9.750749588012695
    7. 'minimum' → logprob: -10.875749588012695
    8. 'max' → logprob: -11.250749588012695
    9. 'minimal' → logprob: -11.625749588012695
    10. '#' → logprob: -11.750749588012695

Token 172: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14267824590206146
    2. '=' → logprob: -2.0176782608032227
    3. 's' → logprob: -13.892678260803223
    4. ',' → logprob: -14.142678260803223
    5. ' ' → logprob: -14.517678260803223
    6. ' ' → logprob: -15.017678260803223
    7. '=int' → logprob: -15.017678260803223
    8. ')' → logprob: -16.767677307128906
    9. '＝' → logprob: -16.767677307128906
    10. 't' → logprob: -17.267677307128906

Token 173: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.0009195583988912404
    2. ' ' → logprob: -7.000919342041016
    3. '10' → logprob: -11.750919342041016
    4. '   ' → logprob: -16.875919342041016
    5. 'float' → logprob: -16.875919342041016
    6. 'int' → logprob: -18.000919342041016
    7. ' ' → logprob: -18.250919342041016
    8. '  ' → logprob: -18.250919342041016
    9. 'abs' → logprob: -18.625919342041016
    10. '1' → logprob: -18.750919342041016

Token 174: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -1.5048530030981055e-06
    2. '10' → logprob: -13.875001907348633
    3. ' ' → logprob: -14.625001907348633
    4. 'float' → logprob: -17.375001907348633
    5. 'int' → logprob: -18.250001907348633
    6. 'abs' → logprob: -18.750001907348633
    7. '   ' → logprob: -19.125001907348633
    8. '１００' → logprob: -19.375001907348633
    9. '1' → logprob: -20.375001907348633
    10. '(' → logprob: -20.500001907348633

Token 175: '00' (ID: 504)
  Prédit: '00'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '00' → logprob: -0.0010462664067745209
    2. '000' → logprob: -7.501046180725098
    3. '0' → logprob: -7.626046180725098
    4. '01' → logprob: -13.126046180725098
    5. 'l' → logprob: -14.251046180725098
    6. '```' → logprob: -14.688546180725098
    7. '   ' → logprob: -15.126046180725098
    8. ' ' → logprob: -15.188546180725098
    9. '4' → logprob: -15.313546180725098
    10. '04' → logprob: -15.376046180725098

Token 176: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1483822613954544
    2. '
' → logprob: -2.1483821868896484
    3. ' for' → logprob: -4.398382186889648
    4. '<|end|>' → logprob: -5.148382186889648
    5. 'max' → logprob: -7.148382186889648
    6. 'min' → logprob: -7.523382186889648
    7. '  
' → logprob: -8.148382186889648
    8. '
' → logprob: -8.398382186889648
    9. '#' → logprob: -8.523382186889648
    10. ',' → logprob: -8.773382186889648

Token 177: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.10854250937700272
    2. 'best' → logprob: -2.8585424423217773
    3. '#' → logprob: -4.108542442321777
    4. 'max' → logprob: -5.233542442321777
    5. 'min' → logprob: -5.733542442321777
    6. 'result' → logprob: -5.983542442321777
    7. 's' → logprob: -6.483542442321777
    8. 't' → logprob: -6.983542442321777
    9. 'sum' → logprob: -7.108542442321777
    10. 'results' → logprob: -7.358542442321777

Token 178: ' On' (ID: 2160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.016026508063077927
    2. 'best' → logprob: -5.641026496887207
    3. '#' → logprob: -6.641026496887207
    4. 'result' → logprob: -6.891026496887207
    5. 'ingredients' → logprob: -7.141026496887207
    6. 'a' → logprob: -7.266026496887207
    7. 'min' → logprob: -7.641026496887207
    8. 'comb' → logprob: -8.016026496887207
    9. 's' → logprob: -8.391026496887207
    10. 'numbers' → logprob: -8.516026496887207

Token 179: ' utilise' (ID: 70283)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7196918725967407
    2. ' for' → logprob: -1.0946918725967407
    3. ' ' → logprob: -2.094691753387451
    4. ' =' → logprob: -4.219691753387451
    5. ',' → logprob: -4.469691753387451
    6. '_' → logprob: -4.469691753387451
    7. '=' → logprob: -4.844691753387451
    8. ':' → logprob: -5.719691753387451
    9. ')' → logprob: -6.469691753387451
    10. 'range' → logprob: -6.594691753387451

Token 180: ' une' (ID: 2463)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.45342642068862915
    2. 'range' → logprob: -1.5784263610839844
    3. 'for' → logprob: -2.2034263610839844
    4. ' for' → logprob: -3.0784263610839844
    5. '_' → logprob: -6.953426361083984
    6. ' a' → logprob: -8.078426361083984
    7. ' une' → logprob: -9.453426361083984
    8. 'a' → logprob: -9.703426361083984
    9. 'abs' → logprob: -9.828426361083984
    10. ' l' → logprob: -9.953426361083984

Token 181: ' boucle' (ID: 174211)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0558362640440464
    2. ' for' → logprob: -2.9308362007141113
    3. 'range' → logprob: -7.680836200714111
    4. 'pour' → logprob: -8.55583667755127
    5. ' range' → logprob: -9.55583667755127
    6. 'bou' → logprob: -9.68083667755127
    7. '_' → logprob: -10.18083667755127
    8. '
' → logprob: -10.68083667755127
    9. ' pour' → logprob: -10.80583667755127
    10. ' boucle' → logprob: -10.93083667755127

Token 182: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6931771039962769
    2. 'for' → logprob: -0.6931771039962769
    3. ' range' → logprob: -11.443177223205566
    4. ' pour' → logprob: -12.193177223205566
    5. '_for' → logprob: -12.443177223205566
    6. 'range' → logprob: -12.943177223205566
    7. ' _' → logprob: -13.068177223205566
    8. ' ' → logprob: -13.318177223205566
    9. 'pour' → logprob: -13.318177223205566
    10. '_' → logprob: -14.193177223205566

Token 183: ' afin' (ID: 22217)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.026757806539535522
    2. ' _' → logprob: -4.151757717132568
    3. '_' → logprob: -5.276757717132568
    4. ' range' → logprob: -5.651757717132568
    5. 'i' → logprob: -6.526757717132568
    6. ' ' → logprob: -8.776758193969727
    7. ' in' → logprob: -8.776758193969727
    8. ' ' → logprob: -9.026758193969727
    9. 'range' → logprob: -9.276758193969727
    10. ' for' → logprob: -11.151758193969727

Token 184: ' de' (ID: 334)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.17866180837154388
    2. ' d' → logprob: -2.428661823272705
    3. ' de' → logprob: -2.678661823272705
    4. '_' → logprob: -5.178661823272705
    5. ' range' → logprob: -8.178661346435547
    6. 'de' → logprob: -8.303661346435547
    7. ' ' → logprob: -8.303661346435547
    8. 'i' → logprob: -8.553661346435547
    9. 'd' → logprob: -9.428661346435547
    10. ' _' → logprob: -9.678661346435547

Token 185: ' parcour' (ID: 130642)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.39217209815979004
    2. 'range' → logprob: -1.14217209815979
    3. '_' → logprob: -5.267171859741211
    4. '_range' → logprob: -9.642171859741211
    5. 'i' → logprob: -10.142171859741211
    6. ' i' → logprob: -11.267171859741211
    7. ' _' → logprob: -12.392171859741211
    8. '	range' → logprob: -13.017171859741211
    9. 'r' → logprob: -13.267171859741211
    10. 'rang' → logprob: -13.517171859741211

Token 186: 'ir' (ID: 380)
  Prédit: 'ir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ir' → logprob: -7.874882430769503e-05
    2. 'r' → logprob: -10.000079154968262
    3. 'i' → logprob: -10.625079154968262
    4. '#' → logprob: -13.000079154968262
    5. ' ir' → logprob: -13.375079154968262
    6. 'rir' → logprob: -14.125079154968262
    7. '_' → logprob: -14.250079154968262
    8. 'er' → logprob: -14.375079154968262
    9. ' i' → logprob: -14.750079154968262
    10. '   ' → logprob: -14.750079154968262

Token 187: ' tous' (ID: 10688)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.013652235269546509
    2. 'range' → logprob: -4.388652324676514
    3. '_' → logprob: -6.888652324676514
    4. ' _' → logprob: -9.513651847839355
    5. ' ' → logprob: -10.263651847839355
    6. ' ' → logprob: -12.763651847839355
    7. 'rang' → logprob: -12.888651847839355
    8. '_range' → logprob: -13.013651847839355
    9. '	range' → logprob: -13.013651847839355
    10. ' i' → logprob: -13.263651847839355

Token 188: ' les' (ID: 1341)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.04921967536211014
    2. 'range' → logprob: -4.049219608306885
    3. ' i' → logprob: -4.299219608306885
    4. 'i' → logprob: -5.049219608306885
    5. ' range' → logprob: -5.174219608306885
    6. ' _' → logprob: -5.799219608306885
    7. ' ' → logprob: -6.799219608306885
    8. '(range' → logprob: -8.549220085144043
    9. '(' → logprob: -8.674220085144043
    10. 'n' → logprob: -8.799220085144043

Token 189: ' ent' (ID: 1121)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0377072095870972
    2. ' range' → logprob: -1.0377072095870972
    3. 'range' → logprob: -1.2877072095870972
    4. ' _' → logprob: -4.537707328796387
    5. 'i' → logprob: -6.537707328796387
    6. '_range' → logprob: -7.162707328796387
    7. ' ' → logprob: -7.412707328796387
    8. ' i' → logprob: -7.537707328796387
    9. '_i' → logprob: -7.787707328796387
    10. 'n' → logprob: -8.537707328796387

Token 190: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -6.56364209135063e-05
    2. 'ier' → logprob: -10.125065803527832
    3. 'i' → logprob: -10.750065803527832
    4. 'ières' → logprob: -12.500065803527832
    5. 'ié' → logprob: -15.750065803527832
    6. 'ités' → logprob: -17.125064849853516
    7. 'ière' → logprob: -17.250064849853516
    8. 'ers' → logprob: -17.375064849853516
    9. 'tiers' → logprob: -18.000064849853516
    10. 'riers' → logprob: -18.375064849853516

Token 191: ' allant' (ID: 122150)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.8360550403594971
    2. ' i' → logprob: -1.211055040359497
    3. 'range' → logprob: -1.961055040359497
    4. '_' → logprob: -2.211055040359497
    5. ' ' → logprob: -5.336054801940918
    6. 'i' → logprob: -5.461054801940918
    7. ' _' → logprob: -5.961054801940918
    8. 'de' → logprob: -6.961054801940918
    9. '(range' → logprob: -6.961054801940918
    10. ' in' → logprob: -6.961054801940918

Token 192: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.0784904733300209
    2. 'de' → logprob: -2.8284904956817627
    3. ' from' → logprob: -4.453490257263184
    4. 'from' → logprob: -5.578490257263184
    5. '_' → logprob: -7.328490257263184
    6. ' ' → logprob: -8.953490257263184
    7. ' range' → logprob: -9.828490257263184
    8. '_de' → logprob: -10.078490257263184
    9. 'range' → logprob: -10.453490257263184
    10. ' du' → logprob: -11.078490257263184

Token 193: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.15376713871955872
    2. '0' → logprob: -2.0287671089172363
    3. ' ' → logprob: -4.528767108917236
    4. '2' → logprob: -8.903767585754395
    5. 'n' → logprob: -10.403767585754395
    6. 'l' → logprob: -10.528767585754395
    7. 'range' → logprob: -11.528767585754395
    8. ' n' → logprob: -12.466267585754395
    9. 'i' → logprob: -12.466267585754395
    10. ' l' → logprob: -12.966267585754395

Token 194: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.31422823667526245
    2. '0' → logprob: -1.3142282962799072
    3. ' ' → logprob: -7.064228057861328
    4. '2' → logprob: -9.689228057861328
    5. 'n' → logprob: -11.064228057861328
    6. 'l' → logprob: -11.189228057861328
    7. 'i' → logprob: -11.689228057861328
    8. '(' → logprob: -13.126728057861328
    9. '-' → logprob: -13.564228057861328
    10. 'range' → logprob: -13.939228057861328

Token 195: ' jusqu' (ID: 21961)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.44998952746391296
    2. 'to' → logprob: -2.0749895572662354
    3. ' to' → logprob: -2.0749895572662354
    4. 'à' → logprob: -2.8249895572662354
    5. ',' → logprob: -3.6999895572662354
    6. ' ' → logprob: -4.699989318847656
    7. ' jusqu' → logprob: -5.199989318847656
    8. 'au' → logprob: -5.699989318847656
    9. 'import' → logprob: -6.074989318847656
    10. ' au' → logprob: -6.574989318847656

Token 196: ''à' (ID: 33688)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.3503948748111725
    2. '(' → logprob: -1.60039484500885
    3. ''à' → logprob: -3.3503949642181396
    4. ' à' → logprob: -3.7253949642181396
    5. 'à' → logprob: -4.6003947257995605
    6. 'a' → logprob: -4.7253947257995605
    7. '’à' → logprob: -4.9753947257995605
    8. 'n' → logprob: -5.7253947257995605
    9. 'au' → logprob: -6.2253947257995605
    10. 'e' → logprob: -6.8503947257995605

Token 197: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.37752288579940796
    2. ' n' → logprob: -1.3775229454040527
    3. 'l' → logprob: -3.0025229454040527
    4. ' l' → logprob: -4.377522945404053
    5. '(n' → logprob: -11.877522468566895
    6. ' ' → logprob: -12.127522468566895
    7. ',' → logprob: -13.127522468566895
    8. ' ' → logprob: -13.627522468566895
    9. '	n' → logprob: -14.002522468566895
    10. '10' → logprob: -14.252522468566895

Token 198: ' inclus' (ID: 11891)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.06601834297180176
    2. ' +' → logprob: -2.9410183429718018
    3. ',' → logprob: -5.316018104553223
    4. ':' → logprob: -6.316018104553223
    5. '(n' → logprob: -6.691018104553223
    6. 'range' → logprob: -6.816018104553223
    7. '(' → logprob: -7.191018104553223
    8. 'for' → logprob: -7.816018104553223
    9. '+n' → logprob: -8.691018104553223
    10. '(range' → logprob: -9.441018104553223

Token 199: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6699162125587463
    2. 'for' → logprob: -0.7949162125587463
    3. '(' → logprob: -4.169916152954102
    4. ',' → logprob: -4.544916152954102
    5. ' for' → logprob: -5.794916152954102
    6. 'range' → logprob: -6.044916152954102
    7. '(n' → logprob: -6.794916152954102
    8. ':
' → logprob: -6.794916152954102
    9. 'in' → logprob: -7.294916152954102
    10. '.' → logprob: -7.294916152954102

Token 200: 'attention' (ID: 126213)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.25287359952926636
    2. ')' → logprob: -1.7528736591339111
    3. ' ):' → logprob: -4.127873420715332
    4. '):
' → logprob: -4.377873420715332
    5. 'n' → logprob: -5.002873420715332
    6. '+' → logprob: -5.752873420715332
    7. ':' → logprob: -6.002873420715332
    8. ',' → logprob: -6.002873420715332
    9. ' )' → logprob: -6.127873420715332
    10. ' n' → logprob: -6.627873420715332

Token 201: ' :' (ID: 712)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.8755891919136047
    2. ',' → logprob: -1.25058913230896
    3. ':' → logprob: -1.50058913230896
    4. ' :' → logprob: -3.50058913230896
    5. ' ):' → logprob: -3.62558913230896
    6. '):
' → logprob: -5.500589370727539
    7. ')' → logprob: -5.625589370727539
    8. ' ,' → logprob: -6.000589370727539
    9. ' in' → logprob: -6.375589370727539
    10. 'in' → logprob: -6.625589370727539

Token 202: ' range' (ID: 3352)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.17986494302749634
    2. 'n' → logprob: -1.8048648834228516
    3. 'range' → logprob: -9.679864883422852
    4. ' range' → logprob: -10.054864883422852
    5. '(n' → logprob: -12.804864883422852
    6. ' ' → logprob: -13.179864883422852
    7. '	n' → logprob: -13.179864883422852
    8. ')n' → logprob: -13.804864883422852
    9. '1' → logprob: -13.929864883422852
    10. ')' → logprob: -13.929864883422852

Token 203: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0012123758206143975
    2. '(n' → logprob: -6.7512125968933105
    3. '1' → logprob: -10.376212120056152
    4. '(
' → logprob: -12.126212120056152
    5. ',' → logprob: -13.126212120056152
    6. ')' → logprob: -13.251212120056152
    7. '
' → logprob: -14.876212120056152
    8. ' (' → logprob: -15.001212120056152
    9. 'n' → logprob: -15.376212120056152
    10. ' ' → logprob: -16.12621307373047

Token 204: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05757593363523483
    2. '(' → logprob: -2.9325759410858154
    3. '(n' → logprob: -6.932575702667236
    4. ',n' → logprob: -7.182575702667236
    5. ' ,' → logprob: -7.557575702667236
    6. '1' → logprob: -8.182576179504395
    7. ')' → logprob: -10.432576179504395
    8. 'n' → logprob: -10.557576179504395
    9. '+' → logprob: -10.932576179504395
    10. ',
' → logprob: -11.057576179504395

Token 205: ' b' (ID: 287)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.03366713970899582
    2. ' n' → logprob: -3.4086670875549316
    3. '(n' → logprob: -11.53366756439209
    4. '1' → logprob: -12.78366756439209
    5. ' ' → logprob: -13.53366756439209
    6. '	n' → logprob: -13.53366756439209
    7. ')' → logprob: -13.78366756439209
    8. '```' → logprob: -13.78366756439209
    9. 'b' → logprob: -14.28366756439209
    10. ')n' → logprob: -14.40866756439209

Token 206: ')' (ID: 8)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.03880595788359642
    2. ')' → logprob: -3.9138059616088867
    3. ' +' → logprob: -4.288805961608887
    4. ',' → logprob: -6.163805961608887
    5. '(n' → logprob: -7.288805961608887
    6. '(' → logprob: -7.663805961608887
    7. '):' → logprob: -7.913805961608887
    8. 'n' → logprob: -8.038805961608887
    9. '+n' → logprob: -9.163805961608887
    10. 'a' → logprob: -9.538805961608887

Token 207: ' s' (ID: 265)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12286044657230377
    2. '(n' → logprob: -2.4978604316711426
    3. '(' → logprob: -4.497860431671143
    4. ',n' → logprob: -4.747860431671143
    5. ')' → logprob: -5.247860431671143
    6. 'n' → logprob: -5.622860431671143
    7. ' ,' → logprob: -6.122860431671143
    8. '+' → logprob: -7.247860431671143
    9. ' n' → logprob: -7.372860431671143
    10. ',b' → logprob: -8.7478609085083

Token 208: ''arr' (ID: 49695)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.1440341472625732
    2. 'top' → logprob: -1.1440341472625732
    3. 't' → logprob: -2.7690341472625732
    4. 'a' → logprob: -2.7690341472625732
    5. 'e' → logprob: -3.5190341472625732
    6. '1' → logprob: -3.5190341472625732
    7. ',' → logprob: -3.6440341472625732
    8. 'up' → logprob: -3.6440341472625732
    9. 'range' → logprob: -4.144034385681152
    10. ' =' → logprob: -4.394034385681152

Token 209: 'ête' (ID: 16808)
  Prédit: 'it'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.8150912523269653
    2. '(' → logprob: -2.315091133117676
    3. 'rt' → logprob: -2.440091133117676
    4. 'art' → logprob: -2.815091133117676
    5. 'ut' → logprob: -2.940091133117676
    6. 'et' → logprob: -3.065091133117676
    7. 'ang' → logprob: -3.190091133117676
    8. 'ant' → logprob: -3.315091133117676
    9. 't' → logprob: -3.690091133117676
    10. 'ange' → logprob: -4.815091133117676

Token 210: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.8992068767547607
    2. ',' → logprob: -1.2742068767547607
    3. '(' → logprob: -2.1492068767547607
    4. ')' → logprob: -2.3992068767547607
    5. 'à' → logprob: -2.7742068767547607
    6. '(n' → logprob: -4.27420711517334
    7. ' ,' → logprob: -4.52420711517334
    8. 'au' → logprob: -5.52420711517334
    9. ' at' → logprob: -6.02420711517334
    10. ' au' → logprob: -6.27420711517334

Token 211: ' b' (ID: 287)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -1.00032639503479
    2. 'b' → logprob: -1.25032639503479
    3. 'n' → logprob: -1.37532639503479
    4. ' b' → logprob: -2.37532639503479
    5. '(n' → logprob: -10.750326156616211
    6. '(b' → logprob: -11.125326156616211
    7. ' ' → logprob: -11.500326156616211
    8. 'a' → logprob: -11.750326156616211
    9. ' ' → logprob: -11.875326156616211
    10. ')' → logprob: -11.875326156616211

Token 212: '-' (ID: 12)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.07010859996080399
    2. ' +' → logprob: -2.695108652114868
    3. ',' → logprob: -8.945108413696289
    4. ')' → logprob: -11.820108413696289
    5. '+n' → logprob: -11.945108413696289
    6. '+b' → logprob: -12.070108413696289
    7. 'a' → logprob: -12.695108413696289
    8. '1' → logprob: -12.945108413696289
    9. ')+' → logprob: -13.070108413696289
    10. '+l' → logprob: -13.195108413696289

Token 213: '1' (ID: 16)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.16830922663211823
    2. '1' → logprob: -1.918309211730957
    3. ' +' → logprob: -5.418309211730957
    4. 'n' → logprob: -6.293309211730957
    5. 'b' → logprob: -7.418309211730957
    6. ')' → logprob: -8.043309211730957
    7. 'a' → logprob: -8.668309211730957
    8. 'plus' → logprob: -8.793309211730957
    9. ' ' → logprob: -9.043309211730957
    10. ' n' → logprob: -9.793309211730957

Token 214: ').
' (ID: 6294)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6093968749046326
    2. '+' → logprob: -0.8593968749046326
    3. ' +' → logprob: -4.109396934509277
    4. '(n' → logprob: -5.609396934509277
    5. ',n' → logprob: -5.734396934509277
    6. '+n' → logprob: -5.859396934509277
    7. ')' → logprob: -6.234396934509277
    8. ' ,' → logprob: -6.234396934509277
    9. '),' → logprob: -6.859396934509277
    10. 'n' → logprob: -6.859396934509277

Token 215: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.203510120511055
    2. ' for' → logprob: -1.7035101652145386
    3. 'range' → logprob: -6.578510284423828
    4. ':' → logprob: -7.953510284423828
    5. ' range' → logprob: -9.328510284423828
    6. '
' → logprob: -9.703510284423828
    7. ':
' → logprob: -10.203510284423828
    8. ',' → logprob: -10.328510284423828
    9. '(range' → logprob: -10.453510284423828
    10. 'n' → logprob: -10.828510284423828

Token 216: ' Donc' (ID: 88837)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1306649148464203
    2. ' for' → logprob: -2.130664825439453
    3. 'range' → logprob: -5.755664825439453
    4. ' range' → logprob: -7.505664825439453
    5. 'in' → logprob: -12.505664825439453
    6. 'n' → logprob: -13.130664825439453
    7. 'i' → logprob: -13.255664825439453
    8. '
' → logprob: -13.505664825439453
    9. ' in' → logprob: -13.755664825439453
    10. '1' → logprob: -13.755664825439453

Token 217: ' range' (ID: 3352)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.1163884773850441
    2. 'for' → logprob: -2.2413885593414307
    3. ' range' → logprob: -5.741388320922852
    4. 'range' → logprob: -8.366388320922852
    5. ' ' → logprob: -9.741388320922852
    6. ' ' → logprob: -10.491388320922852
    7. ' pour' → logprob: -10.991388320922852
    8. ' in' → logprob: -12.741388320922852
    9. 'pour' → logprob: -12.991388320922852
    10. ' a' → logprob: -13.241388320922852

Token 218: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.9361264946837764e-07
    2. '1' → logprob: -16.5
    3. '(
' → logprob: -17.5
    4. '(n' → logprob: -18.0
    5. ' (' → logprob: -18.625
    6. '(a' → logprob: -20.0
    7. 'a' → logprob: -20.25
    8. 'def' → logprob: -21.0
    9. '```' → logprob: -21.0
    10. ')' → logprob: -21.5

Token 219: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.20143672823905945
    2. '(' → logprob: -1.7014367580413818
    3. ')' → logprob: -11.076436996459961
    4. ',' → logprob: -12.451436996459961
    5. ' ' → logprob: -13.451436996459961
    6. '),' → logprob: -14.326436996459961
    7. 'n' → logprob: -14.576436996459961
    8. '   ' → logprob: -15.076436996459961
    9. ')(' → logprob: -15.076436996459961
    10. '```' → logprob: -15.451436996459961

Token 220: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001136050675995648
    2. '(n' → logprob: -7.62613582611084
    3. ',n' → logprob: -7.75113582611084
    4. ' ,' → logprob: -8.75113582611084
    5. '(' → logprob: -10.12613582611084
    6. ',
' → logprob: -11.87613582611084
    7. 'n' → logprob: -11.87613582611084
    8. '1' → logprob: -14.00113582611084
    9. '
' → logprob: -14.00113582611084
    10. 'a' → logprob: -14.00113582611084

Token 221: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.014163863845169544
    2. ' n' → logprob: -4.264163970947266
    3. '(n' → logprob: -15.014163970947266
    4. '	n' → logprob: -17.139163970947266
    5. ')n' → logprob: -18.014163970947266
    6. '   ' → logprob: -19.264163970947266
    7. ' ' → logprob: -19.264163970947266
    8. ')' → logprob: -20.139163970947266
    9. ',n' → logprob: -20.264163970947266
    10. ',' → logprob: -20.639163970947266

Token 222: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.026302039623260498
    2. ' +' → logprob: -3.6513020992279053
    3. '+n' → logprob: -14.776302337646484
    4. '
' → logprob: -15.026302337646484
    5. ')' → logprob: -15.151302337646484
    6. '+
' → logprob: -15.901302337646484
    7. ' ' → logprob: -15.901302337646484
    8. 'n' → logprob: -16.026302337646484
    9. 's' → logprob: -16.526302337646484
    10. '()+' → logprob: -16.651302337646484

Token 223: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.652451464906335e-05
    2. ' ' → logprob: -11.125016212463379
    3. ')' → logprob: -13.875016212463379
    4. '```' → logprob: -15.750016212463379
    5. '2' → logprob: -16.000017166137695
    6. ',' → logprob: -16.312517166137695
    7. '=' → logprob: -16.437517166137695
    8. '   ' → logprob: -16.500017166137695
    9. '
' → logprob: -16.687517166137695
    10. '

' → logprob: -17.375017166137695

Token 224: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.16100692749023438
    2. ')' → logprob: -1.9110069274902344
    3. ' ):' → logprob: -7.286006927490234
    4. '):
' → logprob: -9.786006927490234
    5. ' )' → logprob: -10.536006927490234
    6. ',' → logprob: -12.536006927490234
    7. ':' → logprob: -12.661006927490234
    8. ')):' → logprob: -13.536006927490234
    9. '+' → logprob: -14.036006927490234
    10. '),' → logprob: -14.161006927490234

Token 225: ' permet' (ID: 11798)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02492430992424488
    2. 'for' → logprob: -3.7749242782592773
    3. ' for' → logprob: -6.524924278259277
    4. ':
' → logprob: -9.149924278259277
    5. ' :' → logprob: -9.649924278259277
    6. '):' → logprob: -11.149924278259277
    7. ',' → logprob: -11.649924278259277
    8. ')' → logprob: -11.649924278259277
    9. 'range' → logprob: -12.899924278259277
    10. 'in' → logprob: -13.399924278259277

Token 226: ' d' (ID: 272)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.40782126784324646
    2. ' d' → logprob: -1.7828212976455688
    3. 'de' → logprob: -1.9078212976455688
    4. 'd' → logprob: -4.032821178436279
    5. '   ' → logprob: -8.407821655273438
    6. ' ' → logprob: -9.282821655273438
    7. ' ' → logprob: -9.532821655273438
    8. 'for' → logprob: -9.532821655273438
    9. '	d' → logprob: -9.907821655273438
    10. '    ' → logprob: -10.907821655273438

Token 227: ''obtenir' (ID: 191633)
  Prédit: ' parcour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' parcour' → logprob: -0.1814514696598053
    2. ''aller' → logprob: -2.3064515590667725
    3. 'range' → logprob: -4.056451320648193
    4. 'for' → logprob: -4.681451320648193
    5. 'par' → logprob: -5.431451320648193
    6. 'aller' → logprob: -5.681451320648193
    7. ''effect' → logprob: -5.681451320648193
    8. ' range' → logprob: -6.056451320648193
    9. ''ex' → logprob: -6.056451320648193
    10. 'e' → logprob: -6.181451320648193

Token 228: ' la' (ID: 557)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.29650819301605225
    2. 'n' → logprob: -1.9215081930160522
    3. ' range' → logprob: -3.296508312225342
    4. ' ' → logprob: -4.046508312225342
    5. 'range' → logprob: -4.171508312225342
    6. '(n' → logprob: -4.296508312225342
    7. ' de' → logprob: -4.546508312225342
    8. ' une' → logprob: -5.296508312225342
    9. '(' → logprob: -5.796508312225342
    10. ' d' → logprob: -5.921508312225342

Token 229: ' sé' (ID: 7462)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.004292795900255442
    2. ' n' → logprob: -5.754292964935303
    3. 'range' → logprob: -7.129292964935303
    4. 'nombre' → logprob: -9.504292488098145
    5. ' range' → logprob: -9.879292488098145
    6. '(n' → logprob: -9.879292488098145
    7. 'interval' → logprob: -10.129292488098145
    8. '1' → logprob: -10.629292488098145
    9. 'pl' → logprob: -11.629292488098145
    10. '	n' → logprob: -12.379292488098145

Token 230: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -0.13854016363620758
    2. 'lection' → logprob: -2.763540267944336
    3. 'range' → logprob: -3.513540267944336
    4. 'lect' → logprob: -3.513540267944336
    5. 'quences' → logprob: -6.013540267944336
    6. 'quent' → logprob: -6.388540267944336
    7. 'q' → logprob: -7.388540267944336
    8. 'ries' → logprob: -7.763540267944336
    9. 'lector' → logprob: -7.888540267944336
    10. 'lec' → logprob: -8.388540267944336

Token 231: ' ' (ID: 220)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0021364595741033554
    2. 'range' → logprob: -6.62713623046875
    3. ' range' → logprob: -8.25213623046875
    4. '(range' → logprob: -8.62713623046875
    5. 'de' → logprob: -8.87713623046875
    6. '1' → logprob: -9.00213623046875
    7. ' (' → logprob: -10.37713623046875
    8. ' de' → logprob: -10.75213623046875
    9. ' ' → logprob: -11.12713623046875
    10. 'des' → logprob: -11.37713623046875

Token 232: '1' (ID: 16)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.25503093004226685
    2. '1' → logprob: -1.505030870437622
    3. 'range' → logprob: -6.505031108856201
    4. ' ' → logprob: -6.880031108856201
    5. ' range' → logprob: -8.255030632019043
    6. ' (' → logprob: -8.505030632019043
    7. 'de' → logprob: -10.380030632019043
    8. ',' → logprob: -10.880030632019043
    9. '(n' → logprob: -11.005030632019043
    10. '(range' → logprob: -11.130030632019043

Token 233: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.0629870858974755e-05
    2. ' ,' → logprob: -10.00006103515625
    3. ',
' → logprob: -11.62506103515625
    4. ',n' → logprob: -12.25006103515625
    5. 'n' → logprob: -15.25006103515625
    6. '```' → logprob: -15.37506103515625
    7. '<|end|>' → logprob: -15.50006103515625
    8. ')' → logprob: -16.00006103515625
    9. 'range' → logprob: -16.37506103515625
    10. '(n' → logprob: -16.50006103515625

Token 234: ' ' (ID: 220)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.3102685213088989
    2. 'n' → logprob: -1.560268521308899
    3. '2' → logprob: -3.0602684020996094
    4. ' ' → logprob: -4.685268402099609
    5. ',' → logprob: -7.560268402099609
    6. ' ,' → logprob: -11.18526840209961
    7. '```' → logprob: -11.81026840209961
    8. ' ' → logprob: -12.06026840209961
    9. ',n' → logprob: -12.06026840209961
    10. '(n' → logprob: -12.31026840209961

Token 235: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.001514384988695383
    2. ' ' → logprob: -7.001514434814453
    3. 'n' → logprob: -7.626514434814453
    4. ',' → logprob: -9.501514434814453
    5. ' n' → logprob: -10.126514434814453
    6. '```' → logprob: -14.876514434814453
    7. ' ,' → logprob: -16.126514434814453
    8. '
' → logprob: -16.751514434814453
    9. '...' → logprob: -17.001514434814453
    10. '  ' → logprob: -17.376514434814453

Token 236: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00018577903392724693
    2. ' ,' → logprob: -8.7501859664917
    3. ',n' → logprob: -10.8751859664917
    4. 'n' → logprob: -12.2501859664917
    5. ',
' → logprob: -13.2501859664917
    6. '+' → logprob: -14.2501859664917
    7. '```' → logprob: -14.8751859664917
    8. ',...' → logprob: -15.6251859664917
    9. '
' → logprob: -16.125185012817383
    10. '1' → logprob: -16.250185012817383

Token 237: ' ' (ID: 220)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.17005470395088196
    2. 'n' → logprob: -1.9200546741485596
    3. '3' → logprob: -4.795054912567139
    4. ' ' → logprob: -7.170054912567139
    5. ',' → logprob: -7.420054912567139
    6. ' ' → logprob: -10.17005443572998
    7. ',n' → logprob: -10.29505443572998
    8. ' ,' → logprob: -10.29505443572998
    9. 's' → logprob: -11.29505443572998
    10. '(n' → logprob: -11.79505443572998

Token 238: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.009081190451979637
    2. '...,' → logprob: -4.7590813636779785
    3. '...' → logprob: -7.7590813636779785
    4. ',' → logprob: -11.00908088684082
    5. ' ...,' → logprob: -11.50908088684082
    6. ' ' → logprob: -11.63408088684082
    7. '…,' → logprob: -13.00908088684082
    8. '…' → logprob: -13.75908088684082
    9. ',...' → logprob: -14.88408088684082
    10. '```' → logprob: -15.00908088684082

Token 239: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001600347168277949
    2. 'n' → logprob: -9.750160217285156
    3. ',n' → logprob: -10.125160217285156
    4. ' ,' → logprob: -10.250160217285156
    5. '(n' → logprob: -11.250160217285156
    6. '```' → logprob: -12.750160217285156
    7. ',
' → logprob: -13.250160217285156
    8. '),' → logprob: -13.625160217285156
    9. '...' → logprob: -13.875160217285156
    10. ',...' → logprob: -14.000160217285156

Token 240: ' ...,' (ID: 126708)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.47151055932044983
    2. 'n' → logprob: -1.5965105295181274
    3. '4' → logprob: -1.9715105295181274
    4. ',' → logprob: -3.471510648727417
    5. ' ,' → logprob: -6.846510410308838
    6. ' ' → logprob: -7.346510410308838
    7. ',n' → logprob: -7.721510410308838
    8. '...' → logprob: -8.096510887145996
    9. 's' → logprob: -9.596510887145996
    10. ' ' → logprob: -9.596510887145996

Token 241: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.04858884960412979
    2. ' n' → logprob: -3.048588752746582
    3. ' ' → logprob: -14.673588752746582
    4. ',' → logprob: -14.798588752746582
    5. '(n' → logprob: -15.673588752746582
    6. '   ' → logprob: -15.798588752746582
    7. ' ' → logprob: -16.4235897064209
    8. '	n' → logprob: -16.5485897064209
    9. ',n' → logprob: -17.2985897064209
    10. '
' → logprob: -17.6735897064209

Token 242: ' une' (ID: 2463)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.034348104149103165
    2. ' for' → logprob: -3.6593480110168457
    3. ':' → logprob: -4.909348011016846
    4. ':
' → logprob: -8.034348487854004
    5. ',' → logprob: -8.784348487854004
    6. 'range' → logprob: -9.159348487854004
    7. '.' → logprob: -11.159348487854004
    8. '
' → logprob: -11.409348487854004
    9. ',
' → logprob: -12.659348487854004
    10. '' → logprob: -12.909348487854004

Token 243: ' à' (ID: 1221)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0390981025993824
    2. ',' → logprob: -3.789098024368286
    3. ':' → logprob: -4.664098262786865
    4. '+
' → logprob: -6.414098262786865
    5. 'n' → logprob: -6.539098262786865
    6. '+n' → logprob: -6.539098262786865
    7. '+:' → logprob: -7.914098262786865
    8. ')' → logprob: -8.164097785949707
    9. 'plus' → logprob: -8.664097785949707
    10. '
' → logprob: -8.914097785949707

Token 244: ' une' (ID: 2463)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.12241365015506744
    2. 'n' → logprob: -2.6224136352539062
    3. '1' → logprob: -3.8724136352539062
    4. '(n' → logprob: -5.372413635253906
    5. ',' → logprob: -5.872413635253906
    6. ' n' → logprob: -6.247413635253906
    7. 'pas' → logprob: -6.247413635253906
    8. ' +' → logprob: -6.247413635253906
    9. 'plus' → logprob: -6.747413635253906
    10. ' pas' → logprob: -7.122413635253906

Token 245: ' sous' (ID: 14487)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2649115025997162
    2. ':' → logprob: -1.5149115324020386
    3. ' for' → logprob: -5.139911651611328
    4. ',' → logprob: -5.514911651611328
    5. ':
' → logprob: -6.264911651611328
    6. 'range' → logprob: -7.639911651611328
    7. '.' → logprob: -7.889911651611328
    8. ' :' → logprob: -9.889911651611328
    9. '
' → logprob: -10.264911651611328
    10. ')' → logprob: -10.889911651611328

Token 246: ' forme' (ID: 27450)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.19761891663074493
    2. ',' → logprob: -3.6976189613342285
    3. '_' → logprob: -3.6976189613342285
    4. 'la' → logprob: -3.9476189613342285
    5. 'n' → logprob: -4.0726189613342285
    6. '```' → logprob: -4.0726189613342285
    7. ')' → logprob: -4.1976189613342285
    8. 'le' → logprob: -4.5726189613342285
    9. '_n' → logprob: -4.6976189613342285
    10. '(' → logprob: -5.1976189613342285

Token 247: ' de' (ID: 334)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.9874520897865295
    2. 'range' → logprob: -1.6124520301818848
    3. ' de' → logprob: -2.1124520301818848
    4. 'for' → logprob: -2.3624520301818848
    5. 'd' → logprob: -2.6124520301818848
    6. 'de' → logprob: -2.8624520301818848
    7. ' range' → logprob: -2.8624520301818848
    8. ' for' → logprob: -3.8624520301818848
    9. ')' → logprob: -6.362452030181885
    10. '(range' → logprob: -6.987452030181885

Token 248: ' la' (ID: 557)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.8203181028366089
    2. 'int' → logprob: -1.0703181028366089
    3. 'val' → logprob: -2.6953182220458984
    4. 'n' → logprob: -2.9453182220458984
    5. 'nombre' → logprob: -3.4453182220458984
    6. 'for' → logprob: -3.9453182220458984
    7. 'range' → logprob: -4.320318222045898
    8. 'i' → logprob: -4.320318222045898
    9. 'inte' → logprob: -5.070318222045898
    10. 'it' → logprob: -6.320318222045898

Token 249: ' variable' (ID: 11076)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.0665090084075928
    2. 'for' → logprob: -1.9415090084075928
    3. 'chaine' → logprob: -2.3165090084075928
    4. 'ligne' → logprob: -2.4415090084075928
    5. 'liste' → logprob: -2.5665090084075928
    6. 'suite' → logprob: -2.8165090084075928
    7. 'pl' → logprob: -2.9415090084075928
    8. 's' → logprob: -3.5665090084075928
    9. 'variable' → logprob: -4.316509246826172
    10. 'forme' → logprob: -4.441509246826172

Token 250: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0015559245366603136
    2. ' i' → logprob: -6.751555919647217
    3. '_i' → logprob: -8.751556396484375
    4. 'for' → logprob: -10.001556396484375
    5. '```' → logprob: -10.126556396484375
    6. 'x' → logprob: -10.251556396484375
    7. '`' → logprob: -11.001556396484375
    8. 'a' → logprob: -11.251556396484375
    9. 'j' → logprob: -11.251556396484375
    10. '_' → logprob: -11.501556396484375

Token 251: '.
' (ID: 558)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.18048155307769775
    2. ':' → logprob: -1.9304815530776978
    3. ' for' → logprob: -4.305481433868408
    4. ':
' → logprob: -5.680481433868408
    5. '.' → logprob: -6.930481433868408
    6. ',' → logprob: -7.180481433868408
    7. 'range' → logprob: -7.805481433868408
    8. 'in' → logprob: -8.430481910705566
    9. ')' → logprob: -8.555481910705566
    10. ' :' → logprob: -8.930481910705566

Token 252: 'for' (ID: 1938)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.47051140666007996
    2. 'for' → logprob: -1.0955114364624023
    3. ' for' → logprob: -3.4705114364624023
    4. ':
' → logprob: -5.345511436462402
    5. ' :' → logprob: -6.470511436462402
    6. ',' → logprob: -6.720511436462402
    7. '.' → logprob: -7.845511436462402
    8. ' :
' → logprob: -8.220511436462402
    9. ' 
' → logprob: -8.470511436462402
    10. ')' → logprob: -8.470511436462402

Token 253: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.048622336238622665
    2. 'i' → logprob: -3.0486223697662354
    3. ' ' → logprob: -10.923622131347656
    4. ' in' → logprob: -11.673622131347656
    5. ' ' → logprob: -12.673622131347656
    6. ' _' → logprob: -12.923622131347656
    7. '_' → logprob: -13.673622131347656
    8. '_i' → logprob: -14.048622131347656
    9. '	i' → logprob: -14.423622131347656
    10. 'in' → logprob: -15.923622131347656

Token 254: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.11291484534740448
    2. 'in' → logprob: -2.237914800643921
    3. ' ' → logprob: -9.7379150390625
    4. ',' → logprob: -11.8629150390625
    5. ')' → logprob: -12.3629150390625
    6. 'range' → logprob: -12.9879150390625
    7. '1' → logprob: -13.1129150390625
    8. '(' → logprob: -13.4254150390625
    9. ' ' → logprob: -13.4879150390625
    10. 'import' → logprob: -13.5504150390625

Token 255: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.12978678941726685
    2. ' range' → logprob: -2.129786729812622
    3. '1' → logprob: -5.879786968231201
    4. '(' → logprob: -10.379786491394043
    5. ' ' → logprob: -10.629786491394043
    6. '(range' → logprob: -12.754786491394043
    7. ' in' → logprob: -15.379786491394043
    8. '	range' → logprob: -15.504786491394043
    9. '```' → logprob: -15.629786491394043
    10. '   ' → logprob: -16.00478744506836

Token 256: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.2664456789934775e-06
    2. '(
' → logprob: -14.375000953674316
    3. ' (' → logprob: -14.375000953674316
    4. '1' → logprob: -19.750001907348633
    5. '(i' → logprob: -19.750001907348633
    6. '(

' → logprob: -20.875001907348633
    7. '((' → logprob: -21.500001907348633
    8. '(n' → logprob: -22.000001907348633
    9. '	' → logprob: -22.250001907348633
    10. ',' → logprob: -22.250001907348633

Token 257: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.0339031834737398e-05
    2. ' ' → logprob: -11.250020027160645
    3. '(' → logprob: -11.875020027160645
    4. ',' → logprob: -15.000020027160645
    5. '   ' → logprob: -17.00002098083496
    6. '2' → logprob: -17.25002098083496
    7. ')' → logprob: -17.75002098083496
    8. '	' → logprob: -19.37502098083496
    9. '0' → logprob: -19.50002098083496
    10. '  ' → logprob: -19.62502098083496

Token 258: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.194110756041482e-05
    2. ' ,' → logprob: -10.125061988830566
    3. ',n' → logprob: -10.750061988830566
    4. ',
' → logprob: -15.375061988830566
    5. '1' → logprob: -17.00006103515625
    6. 'n' → logprob: -17.00006103515625
    7. '(n' → logprob: -17.62506103515625
    8. '
' → logprob: -19.12506103515625
    9. ' n' → logprob: -19.37506103515625
    10. ' ' → logprob: -19.50006103515625

Token 259: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0380416102707386
    2. ' n' → logprob: -3.288041591644287
    3. '	n' → logprob: -16.163042068481445
    4. '(n' → logprob: -17.663042068481445
    5. ' ' → logprob: -18.538042068481445
    6. ')n' → logprob: -18.663042068481445
    7. 'l' → logprob: -19.163042068481445
    8. '_n' → logprob: -19.913042068481445
    9. ')' → logprob: -19.913042068481445
    10. '   ' → logprob: -20.663042068481445

Token 260: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.005234002135694027
    2. ' +' → logprob: -5.2552337646484375
    3. '+
' → logprob: -16.880233764648438
    4. ')+' → logprob: -17.380233764648438
    5. '()+' → logprob: -17.380233764648438
    6. '+l' → logprob: -17.630233764648438
    7. '+n' → logprob: -17.755233764648438
    8. '+i' → logprob: -17.755233764648438
    9. '1' → logprob: -18.130233764648438
    10. ')' → logprob: -18.505233764648438

Token 261: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00033581978641450405
    2. ' ' → logprob: -8.000335693359375
    3. '2' → logprob: -15.250335693359375
    4. '   ' → logprob: -16.250335693359375
    5. '```' → logprob: -17.875335693359375
    6. '  ' → logprob: -18.000335693359375
    7. ')' → logprob: -18.250335693359375
    8. '+' → logprob: -18.437835693359375
    9. '
' → logprob: -19.187835693359375
    10. '

' → logprob: -19.312835693359375

Token 262: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.32392441527918e-05
    2. ' ' → logprob: -9.875053405761719
    3. '2' → logprob: -14.000053405761719
    4. '   ' → logprob: -15.125053405761719
    5. ')' → logprob: -16.31255340576172
    6. '+' → logprob: -16.81255340576172
    7. '```' → logprob: -16.87505340576172
    8. '
' → logprob: -16.93755340576172
    9. '(' → logprob: -17.12505340576172
    10. ',' → logprob: -17.62505340576172

Token 263: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00023369524569716305
    2. ':' → logprob: -9.37523365020752
    3. '):
' → logprob: -9.37523365020752
    4. ')' → logprob: -9.87523365020752
    5. ' ):' → logprob: -11.50023365020752
    6. '):
' → logprob: -13.75023365020752
    7. ' :' → logprob: -14.87523365020752
    8. ',' → logprob: -15.12523365020752
    9. '():' → logprob: -15.25023365020752
    10. '+' → logprob: -15.62523365020752

Token 264: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5445961952209473
    2. '   ' → logprob: -1.4195961952209473
    3. ' :' → logprob: -1.7945961952209473
    4. ',' → logprob: -6.044596195220947
    5. ':
' → logprob: -6.044596195220947
    6. ' :
' → logprob: -6.419596195220947
    7. ' ,' → logprob: -7.294596195220947
    8. '	t' → logprob: -7.919596195220947
    9. '<|end|>' → logprob: -7.919596195220947
    10. '	tab' → logprob: -8.044595718383789

Token 265: ' #' (ID: 1069)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -1.1465171575546265
    2. '   ' → logprob: -1.5215171575546265
    3. 'a' → logprob: -1.6465171575546265
    4. ' x' → logprob: -2.646517276763916
    5. ' data' → logprob: -3.896517276763916
    6. ' s' → logprob: -4.146517276763916
    7. ' t' → logprob: -4.146517276763916
    8. 'x' → logprob: -4.271517276763916
    9. 'data' → logprob: -4.646517276763916
    10. ' A' → logprob: -4.771517276763916

Token 266: ' Pour' (ID: 13931)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6108127236366272
    2. ' a' → logprob: -2.8608126640319824
    3. 'x' → logprob: -2.9858126640319824
    4. 'd' → logprob: -2.9858126640319824
    5. 's' → logprob: -3.3608126640319824
    6. 'cookie' → logprob: -4.360812664031982
    7. '   ' → logprob: -4.485812664031982
    8. 'val' → logprob: -4.485812664031982
    9. 'value' → logprob: -4.610812664031982
    10. 'A' → logprob: -4.673312664031982

Token 267: ' chaque' (ID: 21194)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.5006393194198608
    2. ' i' → logprob: -1.5006393194198608
    3. '_' → logprob: -2.5006394386291504
    4. ' ' → logprob: -3.2506394386291504
    5. ' _' → logprob: -3.2506394386291504
    6. ' x' → logprob: -6.25063943862915
    7. ' range' → logprob: -6.50063943862915
    8. ' t' → logprob: -6.87563943862915
    9. 'i' → logprob: -7.12563943862915
    10. ' k' → logprob: -7.37563943862915

Token 268: ' i' (ID: 575)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.795199453830719
    2. ' i' → logprob: -1.7951993942260742
    3. ' ' → logprob: -2.670199394226074
    4. 'i' → logprob: -3.920199394226074
    5. ' pomme' → logprob: -4.357699394226074
    6. 'plat' → logprob: -4.607699394226074
    7. 'val' → logprob: -4.732699394226074
    8. '  ' → logprob: -4.857699394226074
    9. 'distance' → logprob: -5.045199394226074
    10. ' chocolat' → logprob: -5.045199394226074

Token 269: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5003469586372375
    2. ':' → logprob: -1.7503468990325928
    3. ' ,' → logprob: -2.1253468990325928
    4. '   ' → logprob: -2.7503468990325928
    5. ' :' → logprob: -3.5003468990325928
    6. ':
' → logprob: -5.875347137451172
    7. ' :
' → logprob: -6.625347137451172
    8. ' ' → logprob: -7.500347137451172
    9. ' ' → logprob: -8.375347137451172
    10. ' =' → logprob: -8.750347137451172

Token 270: ' on' (ID: 402)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.2089321613311768
    2. ' a' → logprob: -1.4589321613311768
    3. '   ' → logprob: -3.3339321613311768
    4. ' x' → logprob: -3.7089321613311768
    5. 'x' → logprob: -3.9589321613311768
    6. '#' → logprob: -3.9589321613311768
    7. ' s' → logprob: -4.083931922912598
    8. 's' → logprob: -4.083931922912598
    9. ' t' → logprob: -4.208931922912598
    10. ' data' → logprob: -4.208931922912598

Token 271: ' é' (ID: 1212)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -1.8445146083831787
    2. '#' → logprob: -2.3445146083831787
    3. 't' → logprob: -2.5945146083831787
    4. 's' → logprob: -2.8445146083831787
    5. ' #' → logprob: -2.8445146083831787
    6. 'input' → logprob: -2.9695146083831787
    7. ' a' → logprob: -3.2195146083831787
    8. 'r' → logprob: -3.2195146083831787
    9. '   ' → logprob: -3.4695146083831787
    10. 'a' → logprob: -3.4695146083831787

Token 272: 'value' (ID: 1594)
  Prédit: 'value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.3887854814529419
    2. 'crit' → logprob: -1.388785481452942
    3. 'c' → logprob: -2.7637853622436523
    4. 'x' → logprob: -5.638785362243652
    5. '#' → logprob: -6.013785362243652
    6. 'cr' → logprob: -7.138785362243652
    7. 'cris' → logprob: -7.763785362243652
    8. 'd' → logprob: -8.138785362243652
    9. 'ecute' → logprob: -8.263785362243652
    10. 'ffect' → logprob: -8.638785362243652

Token 273: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -1.2801388502120972
    2. '   ' → logprob: -2.0301389694213867
    3. 'la' → logprob: -2.2801389694213867
    4. 'a' → logprob: -2.6551389694213867
    5. ' une' → logprob: -2.6551389694213867
    6. ' a' → logprob: -3.0301389694213867
    7. 'abs' → logprob: -3.4051389694213867
    8. ' le' → logprob: -3.4051389694213867
    9. 'une' → logprob: -3.9051389694213867
    10. 'val' → logprob: -4.280138969421387

Token 274: ' valeur' (ID: 41664)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.4397379159927368
    2. 'a' → logprob: -3.0647377967834473
    3. 'abs' → logprob: -3.4397377967834473
    4. 's' → logprob: -3.4397377967834473
    5. 'x' → logprob: -3.6897377967834473
    6. 'k' → logprob: -3.9397377967834473
    7. 'taste' → logprob: -3.9397377967834473
    8. 'p' → logprob: -4.314737796783447
    9. 'save' → logprob: -4.564737796783447
    10. '#' → logprob: -4.564737796783447

Token 275: ' suivante' (ID: 107439)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9182561039924622
    2. '=' → logprob: -1.7932560443878174
    3. 'de' → logprob: -3.0432560443878174
    4. '   ' → logprob: -3.1682560443878174
    5. 'abs' → logprob: -3.2932560443878174
    6. '=input' → logprob: -3.5432560443878174
    7. '=int' → logprob: -3.7932560443878174
    8. 'taste' → logprob: -3.7932560443878174
    9. 's' → logprob: -4.0432562828063965
    10. 't' → logprob: -4.0432562828063965

Token 276: ' :' (ID: 712)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07147122174501419
    2. ':' → logprob: -3.6964712142944336
    3. ' =' → logprob: -4.196471214294434
    4. ',' → logprob: -4.446471214294434
    5. '=' → logprob: -5.196471214294434
    6. 'a' → logprob: -6.071471214294434
    7. 't' → logprob: -7.383971214294434
    8. 's' → logprob: -7.571471214294434
    9. '    ' → logprob: -7.758971214294434
    10. ' ' → logprob: -7.946471214294434

Token 277: ' l' (ID: 305)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -1.3201569318771362
    2. 'val' → logprob: -2.320157051086426
    3. 'a' → logprob: -2.445157051086426
    4. 'value' → logprob: -2.445157051086426
    5. '   ' → logprob: -2.570157051086426
    6. 'taste' → logprob: -2.695157051086426
    7. 'x' → logprob: -3.445157051086426
    8. 's' → logprob: -3.695157051086426
    9. 'current' → logprob: -3.945157051086426
    10. 'p' → logprob: -3.945157051086426

Token 278: ' +' (ID: 659)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.9620321989059448
    2. ' *' → logprob: -1.5870321989059448
    3. '-' → logprob: -2.2120323181152344
    4. '*i' → logprob: -2.4620323181152344
    5. '*' → logprob: -2.8370323181152344
    6. '%' → logprob: -2.8370323181152344
    7. ' %' → logprob: -3.0870323181152344
    8. '-i' → logprob: -4.462032318115234
    9. ' +' → logprob: -4.462032318115234
    10. '+' → logprob: -4.712032318115234

Token 279: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.08354012668132782
    2. ' i' → logprob: -2.708540201187134
    3. ' (' → logprob: -5.458539962768555
    4. '(i' → logprob: -5.833539962768555
    5. '(' → logprob: -5.958539962768555
    6. '1' → logprob: -7.083539962768555
    7. '(-' → logprob: -7.208539962768555
    8. ' ' → logprob: -7.833539962768555
    9. '   ' → logprob: -8.208539962768555
    10. '-' → logprob: -8.208539962768555

Token 280: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.8263893127441406
    2. '   ' → logprob: -1.2013893127441406
    3. '-' → logprob: -1.5763893127441406
    4. ' ' → logprob: -4.576389312744141
    5. ')' → logprob: -4.701389312744141
    6. ' ==' → logprob: -5.451389312744141
    7. '  ' → logprob: -5.576389312744141
    8. ' +' → logprob: -5.701389312744141
    9. '+' → logprob: -5.701389312744141
    10. ':' → logprob: -5.826389312744141

Token 281: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.010334856808185577
    2. ' ' → logprob: -4.6353349685668945
    3. '2' → logprob: -8.760334968566895
    4. 'l' → logprob: -9.510334968566895
    5. 'n' → logprob: -9.510334968566895
    6. 'i' → logprob: -9.635334968566895
    7. '100' → logprob: -10.260334968566895
    8. ' i' → logprob: -10.635334968566895
    9. ' n' → logprob: -10.760334968566895
    10. '(' → logprob: -11.010334968566895

Token 282: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0016435228753834963
    2. 'i' → logprob: -7.501643657684326
    3. 'n' → logprob: -7.751643657684326
    4. ' ' → logprob: -8.251643180847168
    5. 'l' → logprob: -9.251643180847168
    6. '(' → logprob: -9.501643180847168
    7. '2' → logprob: -9.626643180847168
    8. '(n' → logprob: -9.876643180847168
    9. 't' → logprob: -10.751643180847168
    10. '10' → logprob: -11.001643180847168

Token 283: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.032298743724823
    2. ':' → logprob: -4.032298564910889
    3. '    
' → logprob: -5.157298564910889
    4. ')' → logprob: -6.657298564910889
    5. '
' → logprob: -7.407298564910889
    6. ' ' → logprob: -7.657298564910889
    7. '   
' → logprob: -7.657298564910889
    8. ',' → logprob: -7.657298564910889
    9. '    ' → logprob: -7.782298564910889
    10. '  ' → logprob: -7.782298564910889

Token 284: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004406975116580725
    2. ':' → logprob: -7.379406929016113
    3. '    
' → logprob: -7.379406929016113
    4. ')' → logprob: -7.879406929016113
    5. '<|end|>' → logprob: -7.879406929016113
    6. ',' → logprob: -8.129406929016113
    7. 'value' → logprob: -8.504406929016113
    8. ' #' → logprob: -8.754406929016113
    9. '  ' → logprob: -8.879406929016113
    10. '    ' → logprob: -9.004406929016113

Token 285: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008137567900121212
    2. 'value' → logprob: -6.3831377029418945
    3. ' value' → logprob: -6.7581377029418945
    4. ' val' → logprob: -7.1331377029418945
    5. 'val' → logprob: -7.2581377029418945
    6. '    
' → logprob: -7.3831377029418945
    7. ' x' → logprob: -8.258137702941895
    8. ' valeur' → logprob: -8.633137702941895
    9. '   ' → logprob: -8.695637702941895
    10. '    ' → logprob: -8.695637702941895

Token 286: ' Cela' (ID: 44403)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.456990122795105
    2. 'val' → logprob: -1.706990122795105
    3. ' val' → logprob: -1.706990122795105
    4. ' value' → logprob: -2.2069902420043945
    5. 'value' → logprob: -2.2069902420043945
    6. ' x' → logprob: -2.8319902420043945
    7. 'x' → logprob: -3.7069902420043945
    8. ' current' → logprob: -4.7069902420043945
    9. ' taste' → logprob: -5.4569902420043945
    10. 'current' → logprob: -5.5194902420043945

Token 287: ' correspond' (ID: 11095)
  Prédit: ' vaut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' vaut' → logprob: -0.5069836974143982
    2. ' est' → logprob: -2.256983757019043
    3. 'val' → logprob: -3.381983757019043
    4. ' #' → logprob: -3.631983757019043
    5. '   ' → logprob: -3.881983757019043
    6. ',' → logprob: -3.881983757019043
    7. '#' → logprob: -4.006983757019043
    8. ' s' → logprob: -4.006983757019043
    9. ' ' → logprob: -4.131983757019043
    10. ' =' → logprob: -4.256983757019043

Token 288: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.0581107996404171
    2. '   ' → logprob: -3.9331107139587402
    3. 'à' → logprob: -4.55811071395874
    4. ' au' → logprob: -5.18311071395874
    5. '    ' → logprob: -5.55811071395874
    6. ' ' → logprob: -5.55811071395874
    7. ' =' → logprob: -5.68311071395874
    8. ' a' → logprob: -6.55811071395874
    9. ' to' → logprob: -6.68311071395874
    10. '=' → logprob: -6.93311071395874

Token 289: ' tester' (ID: 51819)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.6686087846755981
    2. 'l' → logprob: -1.1686087846755981
    3. ' une' → logprob: -3.4186086654663086
    4. ' un' → logprob: -3.5436086654663086
    5. ' i' → logprob: -4.043608665466309
    6. ' la' → logprob: -4.168608665466309
    7. 'i' → logprob: -4.168608665466309
    8. ' (' → logprob: -4.293608665466309
    9. 'abs' → logprob: -4.668608665466309
    10. ' abs' → logprob: -4.918608665466309

Token 290: ' success' (ID: 3505)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.9169080257415771
    2. ' if' → logprob: -1.6669080257415771
    3. ' l' → logprob: -1.7919080257415771
    4. ' ' → logprob: -2.416908025741577
    5. '   ' → logprob: -2.416908025741577
    6. 'la' → logprob: -4.416908264160156
    7. 'if' → logprob: -4.791908264160156
    8. 'l' → logprob: -4.791908264160156
    9. ' une' → logprob: -5.291908264160156
    10. '    ' → logprob: -5.666908264160156

Token 291: 'ivement' (ID: 37978)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.3814704120159149
    2. '   ' → logprob: -2.0064704418182373
    3. ' ' → logprob: -3.2564704418182373
    4. ' a' → logprob: -3.5064704418182373
    5. 'e' → logprob: -3.7564704418182373
    6. 'a' → logprob: -3.7564704418182373
    7. 'à' → logprob: -4.131470203399658
    8. '_' → logprob: -4.256470203399658
    9. 'ion' → logprob: -4.881470203399658
    10. 'ation' → logprob: -4.881470203399658

Token 292: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.41532739996910095
    2. ' la' → logprob: -1.7903274297714233
    3. 'l' → logprob: -3.290327310562134
    4. ' ' → logprob: -3.415327310562134
    5. ' if' → logprob: -3.540327310562134
    6. '   ' → logprob: -3.665327310562134
    7. ' à' → logprob: -4.790327548980713
    8. ' i' → logprob: -5.040327548980713
    9. 'if' → logprob: -5.290327548980713
    10. ',' → logprob: -5.665327548980713

Token 293: ',' (ID: 11)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7914681434631348
    2. ' +' → logprob: -0.7914681434631348
    3. '<|end|>' → logprob: -3.6664681434631348
    4. '+i' → logprob: -3.9164681434631348
    5. ' ' → logprob: -5.041468143463135
    6. 'e' → logprob: -5.166468143463135
    7. ',' → logprob: -5.291468143463135
    8. ' plus' → logprob: -5.416468143463135
    9. '+l' → logprob: -5.416468143463135
    10. ' des' → logprob: -5.666468143463135

Token 294: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.14535009860992432
    2. 'l' → logprob: -2.0203499794006348
    3. ' ' → logprob: -6.895349979400635
    4. ' i' → logprob: -7.895349979400635
    5. '   ' → logprob: -8.145350456237793
    6. ',' → logprob: -8.645350456237793
    7. '    ' → logprob: -8.895350456237793
    8. 'i' → logprob: -8.895350456237793
    9. ' (' → logprob: -9.645350456237793
    10. ' ' → logprob: -9.895350456237793

Token 295: '+' (ID: 10)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5847330093383789
    2. '+' → logprob: -0.9597330093383789
    3. '+i' → logprob: -3.209733009338379
    4. ',' → logprob: -4.209733009338379
    5. '+l' → logprob: -6.334733009338379
    6. ' ' → logprob: -7.584733009338379
    7. ' ,' → logprob: -7.584733009338379
    8. '-' → logprob: -7.709733009338379
    9. ' -' → logprob: -7.959733009338379
    10. '<|end|>' → logprob: -8.959733009338379

Token 296: '1' (ID: 16)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.010913881473243237
    2. ' i' → logprob: -4.885913848876953
    3. '1' → logprob: -7.385913848876953
    4. '+' → logprob: -7.385913848876953
    5. '<|end|>' → logprob: -7.385913848876953
    6. ',' → logprob: -7.510913848876953
    7. ' ' → logprob: -8.010913848876953
    8. '0' → logprob: -8.385913848876953
    9. '+i' → logprob: -9.260913848876953
    10. ' +' → logprob: -9.760913848876953

Token 297: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.13800126314163208
    2. ' +' → logprob: -3.1380012035369873
    3. ')' → logprob: -3.2630012035369873
    4. '   ' → logprob: -3.8880012035369873
    5. '+' → logprob: -4.888001441955566
    6. ' -' → logprob: -5.138001441955566
    7. ' ,' → logprob: -5.388001441955566
    8. '-' → logprob: -5.888001441955566
    9. '),' → logprob: -7.013001441955566
    10. '#' → logprob: -7.263001441955566

Token 298: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.2825222909450531
    2. 'l' → logprob: -1.4075223207473755
    3. '...' → logprob: -7.657522201538086
    4. ',' → logprob: -8.032522201538086
    5. ' ' → logprob: -8.657522201538086
    6. '   ' → logprob: -8.782522201538086
    7. ' ...' → logprob: -9.657522201538086
    8. '#' → logprob: -9.907522201538086
    9. ' ' → logprob: -10.907522201538086
    10. '	l' → logprob: -10.907522201538086

Token 299: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.0248596668243408
    2. ',' → logprob: -1.0248596668243408
    3. '-' → logprob: -1.5248596668243408
    4. ' +' → logprob: -3.149859666824341
    5. ' -' → logprob: -4.274859428405762
    6. '+i' → logprob: -6.024859428405762
    7. '+l' → logprob: -6.024859428405762
    8. ' ,' → logprob: -6.399859428405762
    9. '...' → logprob: -8.274859428405762
    10. ',i' → logprob: -8.774859428405762

Token 300: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.04994649812579155
    2. 'i' → logprob: -3.0499465465545654
    3. '1' → logprob: -7.049946308135986
    4. ' ' → logprob: -8.924946784973145
    5. ' i' → logprob: -9.049946784973145
    6. 'n' → logprob: -9.174946784973145
    7. '<|end|>' → logprob: -9.924946784973145
    8. '...' → logprob: -10.174946784973145
    9. '0' → logprob: -11.174946784973145
    10. 'l' → logprob: -11.799946784973145

Token 301: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7519835829734802
    2. '<|end|>' → logprob: -1.751983642578125
    3. '   ' → logprob: -2.126983642578125
    4. ')' → logprob: -2.376983642578125
    5. ' +' → logprob: -2.876983642578125
    6. '+' → logprob: -3.251983642578125
    7. ' -' → logprob: -4.001983642578125
    8. '#' → logprob: -4.626983642578125
    9. '-' → logprob: -5.126983642578125
    10. ' ' → logprob: -5.501983642578125

Token 302: ' ...,' (ID: 126708)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.22622153162956238
    2. '...' → logprob: -2.3512215614318848
    3. 'l' → logprob: -2.4762215614318848
    4. ' ...' → logprob: -4.726221561431885
    5. ',' → logprob: -5.476221561431885
    6. '   ' → logprob: -5.726221561431885
    7. '...,' → logprob: -6.101221561431885
    8. ' ...,' → logprob: -6.726221561431885
    9. ' ' → logprob: -6.851221561431885
    10. '#' → logprob: -6.976221561431885

Token 303: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.3144284784793854
    2. ' l' → logprob: -1.314428448677063
    3. '...' → logprob: -7.814428329467773
    4. 'n' → logprob: -9.064428329467773
    5. ' n' → logprob: -9.064428329467773
    6. '   ' → logprob: -9.064428329467773
    7. ',' → logprob: -9.439428329467773
    8. 'i' → logprob: -9.439428329467773
    9. ' i' → logprob: -9.564428329467773
    10. ' ' → logprob: -9.689428329467773

Token 304: '+n' (ID: 87683)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.6328881978988647
    2. '+' → logprob: -0.7578881978988647
    3. '+l' → logprob: -9.007887840270996
    4. '+i' → logprob: -9.132887840270996
    5. '+n' → logprob: -10.007887840270996
    6. ' plus' → logprob: -12.382887840270996
    7. '-' → logprob: -12.757887840270996
    8. ' ' → logprob: -14.007887840270996
    9. ' -' → logprob: -14.007887840270996
    10. ' ' → logprob: -14.132887840270996

Token 305: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.3480558693408966
    2. ' -' → logprob: -1.3480558395385742
    3. ')' → logprob: -4.223055839538574
    4. '   ' → logprob: -4.598055839538574
    5. '
' → logprob: -5.848055839538574
    6. '<|end|>' → logprob: -6.348055839538574
    7. '#' → logprob: -6.723055839538574
    8. '):
' → logprob: -7.223055839538574
    9. ' ' → logprob: -7.473055839538574
    10. ',' → logprob: -8.223055839538574

Token 306: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9146995327901095e-05
    2. ' ' → logprob: -10.875019073486328
    3. '<|end|>' → logprob: -16.125019073486328
    4. '   ' → logprob: -18.250019073486328
    5. '2' → logprob: -18.500019073486328
    6. '```' → logprob: -18.750019073486328
    7. '-' → logprob: -18.875019073486328
    8. '  ' → logprob: -19.375019073486328
    9. '<|end|>' → logprob: -19.875019073486328
    10. '۱' → logprob: -19.937519073486328

Token 307: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0004583135014399886
    2. '    
' → logprob: -9.125458717346191
    3. ')' → logprob: -9.250458717346191
    4. ',' → logprob: -9.500458717346191
    5. '#' → logprob: -9.875458717346191
    6. '   ' → logprob: -10.500458717346191
    7. ':' → logprob: -10.875458717346191
    8. '       ' → logprob: -11.812958717346191
    9. '
' → logprob: -12.250458717346191
    10. '    ' → logprob: -12.250458717346191

Token 308: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0011886836728081107
    2. '   ' → logprob: -8.251188278198242
    3. 'value' → logprob: -8.626188278198242
    4. '    
' → logprob: -8.751188278198242
    5. ',' → logprob: -9.376188278198242
    6. 'val' → logprob: -9.751188278198242
    7. '  ' → logprob: -9.876188278198242
    8. ' value' → logprob: -9.876188278198242
    9. ':' → logprob: -9.876188278198242
    10. '    ' → logprob: -10.501188278198242

Token 309: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08446475863456726
    2. 'val' → logprob: -3.0844647884368896
    3. 'value' → logprob: -4.0844645500183105
    4. ' value' → logprob: -5.7094645500183105
    5. ' val' → logprob: -5.7094645500183105
    6. 'x' → logprob: -6.3344645500183105
    7. 'taste' → logprob: -6.5844645500183105
    8. 'current' → logprob: -6.8344645500183105
    9. ' x' → logprob: -6.9594645500183105
    10. 't' → logprob: -7.7094645500183105

Token 310: ' Ensuite' (ID: 113884)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'value' → logprob: -1.0159879922866821
    2. 'val' → logprob: -1.6409879922866821
    3. 'taste' → logprob: -2.0159878730773926
    4. 'current' → logprob: -2.7659878730773926
    5. 'x' → logprob: -3.1409878730773926
    6. ' value' → logprob: -3.3909878730773926
    7. '   ' → logprob: -3.6409878730773926
    8. 't' → logprob: -4.015987873077393
    9. ' taste' → logprob: -4.390987873077393
    10. 'a' → logprob: -4.390987873077393

Token 311: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013814153149724007
    2. 'taste' → logprob: -5.8888139724731445
    3. 'val' → logprob: -6.1388139724731445
    4. 'value' → logprob: -6.2638139724731445
    5. ' taste' → logprob: -6.8888139724731445
    6. ' if' → logprob: -7.0138139724731445
    7. ' value' → logprob: -7.2638139724731445
    8. ' valeur' → logprob: -7.3888139724731445
    9. 'if' → logprob: -7.5138139724731445
    10. ' la' → logprob: -7.8888139724731445

Token 312: ' on' (ID: 402)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -1.569330096244812
    2. '   ' → logprob: -1.944330096244812
    3. 'if' → logprob: -2.0693302154541016
    4. '#' → logprob: -2.3193302154541016
    5. ' if' → logprob: -2.3193302154541016
    6. 'taste' → logprob: -2.5693302154541016
    7. ' taste' → logprob: -2.9443302154541016
    8. 'value' → logprob: -2.9443302154541016
    9. 'abs' → logprob: -3.1943302154541016
    10. ' value' → logprob: -3.9443302154541016

Token 313: ' calc' (ID: 25691)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.0513807013630867
    2. 'if' → logprob: -3.9263806343078613
    3. 'val' → logprob: -4.551380634307861
    4. ' abs' → logprob: -5.176380634307861
    5. '#' → logprob: -5.801380634307861
    6. 'taste' → logprob: -6.051380634307861
    7. ' if' → logprob: -6.176380634307861
    8. 'value' → logprob: -6.301380634307861
    9. 'for' → logprob: -6.926380634307861
    10. 'v' → logprob: -7.426380634307861

Token 314: 'ule' (ID: 1601)
  Prédit: 'ule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ule' → logprob: -0.004154141526669264
    2. 'cule' → logprob: -5.629154205322266
    3. 't' → logprob: -8.379154205322266
    4. 'ul' → logprob: -9.629154205322266
    5. '#' → logprob: -10.254154205322266
    6. 'l' → logprob: -10.379154205322266
    7. 'e' → logprob: -10.629154205322266
    8. 'ulé' → logprob: -10.754154205322266
    9. '=' → logprob: -11.004154205322266
    10. 'cul' → logprob: -11.129154205322266

Token 315: ' la' (ID: 557)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.32731884717941284
    2. ' abs' → logprob: -1.3273189067840576
    3. '   ' → logprob: -4.5773186683654785
    4. '(abs' → logprob: -5.7023186683654785
    5. ' la' → logprob: -9.327319145202637
    6. ' (' → logprob: -9.577319145202637
    7. ' ' → logprob: -9.952319145202637
    8. '  ' → logprob: -11.327319145202637
    9. 'taste' → logprob: -11.452319145202637
    10. 't' → logprob: -11.577319145202637

Token 316: ' valeur' (ID: 41664)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.01339656487107277
    2. 'val' → logprob: -5.263396739959717
    3. 'taste' → logprob: -5.388396739959717
    4. ' abs' → logprob: -6.013396739959717
    5. 'value' → logprob: -7.888396739959717
    6. 'save' → logprob: -8.263396263122559
    7. ' taste' → logprob: -9.638396263122559
    8. '#' → logprob: -10.138396263122559
    9. ' valeur' → logprob: -10.388396263122559
    10. 'diff' → logprob: -10.513396263122559

Token 317: ' absol' (ID: 7374)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.4969404339790344
    2. ' =' → logprob: -1.7469403743743896
    3. '=' → logprob: -2.3719403743743896
    4. '_abs' → logprob: -2.9969403743743896
    5. ' abs' → logprob: -3.4969403743743896
    6. ' absol' → logprob: -4.746940612792969
    7. 'de' → logprob: -5.121940612792969
    8. '   ' → logprob: -5.246940612792969
    9. 'absolute' → logprob: -5.496940612792969
    10. '(abs' → logprob: -5.621940612792969

Token 318: 'ue' (ID: 466)
  Prédit: 'ol'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ol' → logprob: -0.7953616380691528
    2. 'ue' → logprob: -1.1703616380691528
    3. 'ule' → logprob: -2.2953615188598633
    4. 'oute' → logprob: -2.7953615188598633
    5. 'ute' → logprob: -3.6703615188598633
    6. '(' → logprob: -4.420361518859863
    7. 'oul' → logprob: -4.545361518859863
    8. '()' → logprob: -4.545361518859863
    9. '(value' → logprob: -5.420361518859863
    10. '(l' → logprob: -6.170361518859863

Token 319: ' de' (ID: 334)
  Prédit: '(abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(abs' → logprob: -0.25134968757629395
    2. 'abs' → logprob: -2.001349687576294
    3. '   ' → logprob: -2.751349687576294
    4. '(' → logprob: -4.126349449157715
    5. 'de' → logprob: -6.501349449157715
    6. ' abs' → logprob: -7.126349449157715
    7. '#' → logprob: -7.251349449157715
    8. 'val' → logprob: -7.251349449157715
    9. '()' → logprob: -7.626349449157715
    10. 't' → logprob: -8.001349449157715

Token 320: ' taste' (ID: 14673)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.7542610168457031
    2. '(l' → logprob: -1.0042610168457031
    3. 'abs' → logprob: -2.379261016845703
    4. '(abs' → logprob: -2.754261016845703
    5. ' l' → logprob: -6.254261016845703
    6. '(' → logprob: -6.379261016845703
    7. ' abs' → logprob: -6.629261016845703
    8. ' (' → logprob: -6.879261016845703
    9. '((' → logprob: -8.629261016845703
    10. 't' → logprob: -8.754261016845703

Token 321: ' (' (ID: 350)
  Prédit: '(abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(abs' → logprob: -0.6729352474212646
    2. '(' → logprob: -1.2979352474212646
    3. '(t' → logprob: -2.9229352474212646
    4. 'abs' → logprob: -3.0479352474212646
    5. 'diff' → logprob: -4.172935485839844
    6. '(value' → logprob: -4.297935485839844
    7. '=' → logprob: -4.547935485839844
    8. ' =' → logprob: -4.672935485839844
    9. ')' → logprob: -4.797935485839844
    10. ',' → logprob: -5.172935485839844

Token 322: 'dé' (ID: 98340)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.892707884311676
    2. '(abs' → logprob: -1.3927078247070312
    3. ' -' → logprob: -2.1427078247070312
    4. 'abs' → logprob: -2.3927078247070312
    5. '-' → logprob: -2.6427078247070312
    6. ' )' → logprob: -4.267707824707031
    7. '(t' → logprob: -4.642707824707031
    8. ' abs' → logprob: -5.017707824707031
    9. '(' → logprob: -5.142707824707031
    10. '),' → logprob: -5.392707824707031

Token 323: 'but' (ID: 8293)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.08066663146018982
    2. 'abs' → logprob: -2.5806665420532227
    3. 'fin' → logprob: -7.580666542053223
    4. 'fabs' → logprob: -7.955666542053223
    5. ' abs' → logprob: -8.080666542053223
    6. 'taste' → logprob: -8.580666542053223
    7. '(abs' → logprob: -9.080666542053223
    8. 'fi' → logprob: -9.330666542053223
    9. 'fault' → logprob: -10.080666542053223
    10. 't' → logprob: -10.330666542053223

Token 324: 'ant' (ID: 493)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7857411503791809
    2. '(abs' → logprob: -2.160741090774536
    3. 'e' → logprob: -2.660741090774536
    4. '(' → logprob: -2.785741090774536
    5. '(l' → logprob: -2.785741090774536
    6. 'abs' → logprob: -3.035741090774536
    7. '(t' → logprob: -3.160741090774536
    8. ' -' → logprob: -3.660741090774536
    9. '   ' → logprob: -3.910741090774536
    10. '-' → logprob: -4.160741329193115

Token 325: ' à' (ID: 1221)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7375701665878296
    2. '(' → logprob: -1.6125701665878296
    3. '(t' → logprob: -1.9875701665878296
    4. '(l' → logprob: -2.612570285797119
    5. '=' → logprob: -3.237570285797119
    6. '(abs' → logprob: -3.612570285797119
    7. '()' → logprob: -4.487570285797119
    8. '())' → logprob: -5.237570285797119
    9. '   ' → logprob: -5.362570285797119
    10. ' )' → logprob: -5.737570285797119

Token 326: ' ' (ID: 220)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.8550233840942383
    2. ' l' → logprob: -1.7300233840942383
    3. 'taste' → logprob: -2.2300233840942383
    4. ')' → logprob: -2.4800233840942383
    5. ' (' → logprob: -3.2300233840942383
    6. ' i' → logprob: -3.7300233840942383
    7. ' taste' → logprob: -3.7300233840942383
    8. 'i' → logprob: -3.8550233840942383
    9. 'abs' → logprob: -4.605023384094238
    10. '(l' → logprob: -4.730023384094238

Token 327: '100' (ID: 1353)
  Prédit: 'taste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'taste' → logprob: -0.03639676794409752
    2. 'abs' → logprob: -3.9113967418670654
    3. '100' → logprob: -4.7863969802856445
    4. ')' → logprob: -5.5363969802856445
    5. ' taste' → logprob: -6.6613969802856445
    6. 'l' → logprob: -6.7863969802856445
    7. '0' → logprob: -8.786396980285645
    8. '10' → logprob: -8.786396980285645
    9. ' ' → logprob: -8.911396980285645
    10. '   ' → logprob: -9.161396980285645

Token 328: '00' (ID: 504)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.6115081906318665
    2. ')' → logprob: -0.9865081906318665
    3. 'e' → logprob: -3.4865081310272217
    4. '(abs' → logprob: -4.486508369445801
    5. '   ' → logprob: -4.861508369445801
    6. ' abs' → logprob: -4.986508369445801
    7. 'taste' → logprob: -5.361508369445801
    8. '))' → logprob: -5.361508369445801
    9. '_abs' → logprob: -5.361508369445801
    10. ' )' → logprob: -5.736508369445801

Token 329: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002958327531814575
    2. '):' → logprob: -6.252958297729492
    3. ' -' → logprob: -8.127958297729492
    4. ' )' → logprob: -8.752958297729492
    5. '),' → logprob: -8.877958297729492
    6. '-' → logprob: -8.877958297729492
    7. '))' → logprob: -9.377958297729492
    8. ')>' → logprob: -10.502958297729492
    9. '):
' → logprob: -10.752958297729492
    10. '()' → logprob: -10.752958297729492

Token 330: ' qui' (ID: 2780)
  Prédit: ' )'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' )' → logprob: -0.7336140871047974
    2. ')' → logprob: -0.9836140871047974
    3. ' abs' → logprob: -2.983613967895508
    4. 'abs' → logprob: -3.108613967895508
    5. ' ),' → logprob: -3.608613967895508
    6. '),' → logprob: -4.858613967895508
    7. '#' → logprob: -5.233613967895508
    8. ' #' → logprob: -5.983613967895508
    9. '   ' → logprob: -6.483613967895508
    10. ' et' → logprob: -6.983613967895508

Token 331: ' est' (ID: 893)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.17598560452461243
    2. ' )' → logprob: -2.42598557472229
    3. '>' → logprob: -3.55098557472229
    4. '-' → logprob: -4.550985813140869
    5. ' >' → logprob: -4.925985813140869
    6. ')>' → logprob: -4.925985813140869
    7. '=' → logprob: -5.050985813140869
    8. ' -' → logprob: -5.300985813140869
    9. ' =' → logprob: -6.300985813140869
    10. '>)' → logprob: -7.050985813140869

Token 332: ' très' (ID: 9412)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'plus' → logprob: -1.5038957595825195
    2. 'tou' → logprob: -2.2538957595825195
    3. 't' → logprob: -2.3788957595825195
    4. 'une' → logprob: -2.5038957595825195
    5. ')' → logprob: -2.6288957595825195
    6. 'sup' → logprob: -3.0038957595825195
    7. 'tr' → logprob: -3.1288957595825195
    8. 'abs' → logprob: -3.1288957595825195
    9. 'import' → logprob: -3.5038957595825195
    10. 'bien' → logprob: -3.5038957595825195

Token 333: ' grand' (ID: 6363)
  Prédit: ' grande'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' grande' → logprob: -0.7165194749832153
    2. ' élevée' → logprob: -1.0915194749832153
    3. 'é' → logprob: -2.716519355773926
    4. ' élevé' → logprob: -3.591519355773926
    5. 'grand' → logprob: -3.716519355773926
    6. ' large' → logprob: -4.216519355773926
    7. 'large' → logprob: -4.716519355773926
    8. 'e' → logprob: -4.841519355773926
    9. 'gr' → logprob: -5.341519355773926
    10. 'import' → logprob: -5.466519355773926

Token 334: ' pour' (ID: 1930)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0015815204242244363
    2. ' )' → logprob: -7.25158166885376
    3. '):' → logprob: -7.87658166885376
    4. ' -' → logprob: -9.251581192016602
    5. '),' → logprob: -9.251581192016602
    6. '   ' → logprob: -9.751581192016602
    7. '))' → logprob: -10.251581192016602
    8. '-' → logprob: -10.501581192016602
    9. '()' → logprob: -10.501581192016602
    10. '())' → logprob: -10.626581192016602

Token 335: ' assurer' (ID: 77791)
  Prédit: ' chaque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -1.5425344705581665
    2. ')' → logprob: -2.292534351348877
    3. 'la' → logprob: -2.292534351348877
    4. ' ce' → logprob: -2.542534351348877
    5. 'le' → logprob: -2.917534351348877
    6. ' la' → logprob: -3.167534351348877
    7. 't' → logprob: -3.417534351348877
    8. ' cette' → logprob: -3.542534351348877
    9. ' comparer' → logprob: -3.542534351348877
    10. 'les' → logprob: -3.667534351348877

Token 336: ' la' (ID: 557)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5150679349899292
    2. 'abs' → logprob: -1.3900679349899292
    3. ' abs' → logprob: -2.6400680541992188
    4. ' )' → logprob: -2.7650680541992188
    5. 'le' → logprob: -5.390068054199219
    6. '(abs' → logprob: -5.515068054199219
    7. ' la' → logprob: -5.765068054199219
    8. 'la' → logprob: -6.765068054199219
    9. ' le' → logprob: -7.140068054199219
    10. '),' → logprob: -7.515068054199219

Token 337: ' prise' (ID: 43816)
  Prédit: ' )'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' )' → logprob: -1.2624777555465698
    2. ' comparaison' → logprob: -2.2624778747558594
    3. ' remplacement' → logprob: -2.3874778747558594
    4. ' i' → logprob: -2.3874778747558594
    5. ' test' → logprob: -2.8874778747558594
    6. ')' → logprob: -2.8874778747558594
    7. ' ' → logprob: -2.8874778747558594
    8. ' if' → logprob: -3.3874778747558594
    9. ' abs' → logprob: -4.012477874755859
    10. ' compar' → logprob: -4.137477874755859

Token 338: ' de' (ID: 334)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.43382811546325684
    2. 'abs' → logprob: -1.9338281154632568
    3. '_abs' → logprob: -3.183828115463257
    4. '_' → logprob: -3.308828115463257
    5. '(abs' → logprob: -3.558828115463257
    6. '()' → logprob: -4.058828353881836
    7. ' de' → logprob: -4.308828353881836
    8. ' )' → logprob: -4.433828353881836
    9. ' abs' → logprob: -4.433828353881836
    10. '(' → logprob: -4.683828353881836

Token 339: ' la' (ID: 557)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -1.4806677103042603
    2. ' ' → logprob: -1.6056677103042603
    3. ' la' → logprob: -2.1056675910949707
    4. ' l' → logprob: -2.3556675910949707
    5. 'l' → logprob: -3.1056675910949707
    6. ' comparaison' → logprob: -3.1056675910949707
    7. ' abs' → logprob: -3.2306675910949707
    8. ')' → logprob: -3.6056675910949707
    9. ' )' → logprob: -3.7306675910949707
    10. 'abs' → logprob: -3.7306675910949707

Token 340: ' première' (ID: 23423)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0259666442871094
    2. ' valeur' → logprob: -1.6509666442871094
    3. ' val' → logprob: -2.2759666442871094
    4. 'val' → logprob: -2.6509666442871094
    5. ' différence' → logprob: -2.7759666442871094
    6. ' )' → logprob: -3.2759666442871094
    7. ' difference' → logprob: -3.5259666442871094
    8. 'diff' → logprob: -3.5259666442871094
    9. ' abs' → logprob: -3.9009666442871094
    10. ')' → logprob: -4.150966644287109

Token 341: ' valeur' (ID: 41664)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1387931108474731
    2. ' )' → logprob: -1.1387931108474731
    3. ' abs' → logprob: -2.0137929916381836
    4. 'abs' → logprob: -2.7637929916381836
    5. 'val' → logprob: -3.2637929916381836
    6. ' -' → logprob: -4.013792991638184
    7. ' valeur' → logprob: -4.138792991638184
    8. ' val' → logprob: -4.138792991638184
    9. ' value' → logprob: -4.263792991638184
    10. '-' → logprob: -4.513792991638184

Token 342: '),
' (ID: 2313)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10859320312738419
    2. ' )' → logprob: -2.608593225479126
    3. '(' → logprob: -4.983592987060547
    4. '),' → logprob: -5.608592987060547
    5. '(abs' → logprob: -5.733592987060547
    6. ',' → logprob: -6.233592987060547
    7. '   ' → logprob: -6.233592987060547
    8. '())' → logprob: -6.483592987060547
    9. '):' → logprob: -6.733592987060547
    10. 'abs' → logprob: -6.858592987060547

Token 343: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06516942381858826
    2. ' abs' → logprob: -3.440169334411621
    3. 'abs' → logprob: -3.940169334411621
    4. '    ' → logprob: -5.690169334411621
    5. 'val' → logprob: -6.940169334411621
    6. ')' → logprob: -7.190169334411621
    7. '  ' → logprob: -7.440169334411621
    8. '#' → logprob: -7.565169334411621
    9. ' and' → logprob: -7.815169334411621
    10. ' et' → logprob: -7.815169334411621

Token 344: ' #' (ID: 1069)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.7770498394966125
    2. '   ' → logprob: -1.0270497798919678
    3. ' abs' → logprob: -2.1520497798919678
    4. '):' → logprob: -4.402050018310547
    5. ')' → logprob: -4.402050018310547
    6. ',' → logprob: -4.902050018310547
    7. ' )' → logprob: -5.527050018310547
    8. ' if' → logprob: -5.652050018310547
    9. ':' → logprob: -5.652050018310547
    10. ' ,' → logprob: -5.902050018310547

Token 345: ' puis' (ID: 18766)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09576024115085602
    2. ' val' → logprob: -3.4707603454589844
    3. ' abs' → logprob: -3.9707603454589844
    4. 'val' → logprob: -4.095760345458984
    5. 'abs' → logprob: -4.720760345458984
    6. ' valeur' → logprob: -5.595760345458984
    7. ' if' → logprob: -6.220760345458984
    8. ' value' → logprob: -6.220760345458984
    9. 'value' → logprob: -6.595760345458984
    10. ' current' → logprob: -6.720760345458984

Token 346: ' la' (ID: 557)
  Prédit: ' abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' abs' → logprob: -0.3587481379508972
    2. 'abs' → logprob: -1.233748197555542
    3. ' if' → logprob: -5.358747959136963
    4. '   ' → logprob: -5.983747959136963
    5. 'if' → logprob: -7.108747959136963
    6. ' la' → logprob: -7.358747959136963
    7. ' valeur' → logprob: -8.108748435974121
    8. 'val' → logprob: -8.733748435974121
    9. '_abs' → logprob: -8.858748435974121
    10. '(abs' → logprob: -9.108748435974121

Token 347: ' valeur' (ID: 41664)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -1.01177978515625
    2. 'val' → logprob: -1.63677978515625
    3. 'if' → logprob: -1.88677978515625
    4. ' abs' → logprob: -2.13677978515625
    5. ' if' → logprob: -2.76177978515625
    6. ' valeur' → logprob: -3.13677978515625
    7. ' val' → logprob: -3.26177978515625
    8. 'value' → logprob: -4.38677978515625
    9. ' value' → logprob: -5.38677978515625
    10. '#' → logprob: -5.76177978515625

Token 348: ' absol' (ID: 7374)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.062708854675293
    2. ' =' → logprob: -1.312708854675293
    3. '_abs' → logprob: -1.937708854675293
    4. '   ' → logprob: -2.312708854675293
    5. 'abs' → logprob: -2.437708854675293
    6. '(abs' → logprob: -3.687708854675293
    7. ' abs' → logprob: -5.562708854675293
    8. '_' → logprob: -5.812708854675293
    9. '_absolute' → logprob: -5.937708854675293
    10. '_val' → logprob: -6.187708854675293

Token 349: 'ue' (ID: 466)
  Prédit: 'ue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ue' → logprob: -0.05634964630007744
    2. 'ute' → logprob: -2.931349754333496
    3. 'ut' → logprob: -7.056349754333496
    4. 'oute' → logprob: -8.681349754333496
    5. 'u' → logprob: -8.931349754333496
    6. '#' → logprob: -9.806349754333496
    7. 'utte' → logprob: -10.056349754333496
    8. 'ule' → logprob: -10.556349754333496
    9. '=' → logprob: -11.056349754333496
    10. ' ute' → logprob: -11.306349754333496

Token 350: ' de' (ID: 334)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.48691266775131226
    2. 'de' → logprob: -1.736912727355957
    3. ' de' → logprob: -2.486912727355957
    4. '#' → logprob: -3.611912727355957
    5. ')' → logprob: -3.736912727355957
    6. '(de' → logprob: -4.111912727355957
    7. '(t' → logprob: -4.986912727355957
    8. '(val' → logprob: -5.111912727355957
    9. ' du' → logprob: -5.236912727355957
    10. 'du' → logprob: -5.361912727355957

Token 351: ' l' (ID: 305)
  Prédit: '(l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.5124738216400146
    2. '(i' → logprob: -1.2624738216400146
    3. ' (' → logprob: -2.7624738216400146
    4. 'l' → logprob: -3.6374738216400146
    5. 'i' → logprob: -4.012474060058594
    6. ' i' → logprob: -5.762474060058594
    7. '(' → logprob: -5.762474060058594
    8. ' l' → logprob: -6.512474060058594
    9. '(abs' → logprob: -6.762474060058594
    10. '((' → logprob: -8.012474060058594

Token 352: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7800348997116089
    2. ' +' → logprob: -0.7800348997116089
    3. '+i' → logprob: -2.5300350189208984
    4. 'i' → logprob: -7.155035018920898
    5. '[i' → logprob: -7.405035018920898
    6. '+l' → logprob: -7.780035018920898
    7. ' ' → logprob: -8.530035018920898
    8. '#' → logprob: -8.530035018920898
    9. ' i' → logprob: -9.030035018920898
    10. 'plus' → logprob: -9.092535018920898

Token 353: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2818951904773712
    2. ' i' → logprob: -1.4068951606750488
    3. ' (' → logprob: -8.156895637512207
    4. ' ' → logprob: -8.906895637512207
    5. '(i' → logprob: -8.906895637512207
    6. '   ' → logprob: -9.156895637512207
    7. '	i' → logprob: -11.031895637512207
    8. '(' → logprob: -11.156895637512207
    9. '  ' → logprob: -11.656895637512207
    10. ' +' → logprob: -11.781895637512207

Token 354: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.17986014485359192
    2. '-' → logprob: -1.8048601150512695
    3. ' ' → logprob: -10.05486011505127
    4. '   ' → logprob: -11.05486011505127
    5. '<|end|>' → logprob: -11.42986011505127
    6. '1' → logprob: -11.92986011505127
    7. '  ' → logprob: -12.30486011505127
    8. ')' → logprob: -12.42986011505127
    9. '```' → logprob: -12.42986011505127
    10. 's' → logprob: -12.55486011505127

Token 355: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.018224747851490974
    2. ' ' → logprob: -4.018224716186523
    3. '   ' → logprob: -10.643224716186523
    4. 'i' → logprob: -10.893224716186523
    5. ' i' → logprob: -11.268224716186523
    6. '```' → logprob: -11.768224716186523
    7. '<|end|>' → logprob: -12.393224716186523
    8. ' ' → logprob: -13.393224716186523
    9. '  ' → logprob: -13.518224716186523
    10. 'l' → logprob: -13.643224716186523

Token 356: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00104150187689811
    2. ' ' → logprob: -6.876041412353516
    3. 'i' → logprob: -12.251041412353516
    4. '   ' → logprob: -13.251041412353516
    5. '```' → logprob: -14.001041412353516
    6. ' i' → logprob: -15.001041412353516
    7. '<|end|>' → logprob: -15.188541412353516
    8. '  ' → logprob: -16.251041412353516
    9. '2' → logprob: -16.751041412353516
    10. ',' → logprob: -16.876041412353516

Token 357: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.038714103400707245
    2. ',' → logprob: -4.0387139320373535
    3. ')' → logprob: -5.0387139320373535
    4. ' if' → logprob: -5.2887139320373535
    5. 'if' → logprob: -5.5387139320373535
    6. '    
' → logprob: -6.9137139320373535
    7. ',
' → logprob: -7.2887139320373535
    8. '):
' → logprob: -7.5387139320373535
    9. '
' → logprob: -7.5387139320373535
    10. 'abs' → logprob: -7.9137139320373535

Token 358: ' on' (ID: 402)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.476747989654541
    2. ')' → logprob: -1.726747989654541
    3. ',' → logprob: -2.101747989654541
    4. ':' → logprob: -2.226747989654541
    5. 'if' → logprob: -2.601747989654541
    6. ' compare' → logprob: -2.851747989654541
    7. ' on' → logprob: -3.601747989654541
    8. ' )' → logprob: -3.726747989654541
    9. ' ' → logprob: -3.976747989654541
    10. '):' → logprob: -3.976747989654541

Token 359: ' compare' (ID: 12221)
  Prédit: ' compare'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' compare' → logprob: -0.7686665654182434
    2. 'compare' → logprob: -1.0186665058135986
    3. ' if' → logprob: -2.3936665058135986
    4. 'if' → logprob: -2.6436665058135986
    5. ' les' → logprob: -5.518666744232178
    6. '#' → logprob: -6.268666744232178
    7. ' compares' → logprob: -6.518666744232178
    8. 'les' → logprob: -6.518666744232178
    9. ' continue' → logprob: -6.768666744232178
    10. 'continue' → logprob: -7.018666744232178

Token 360: ' les' (ID: 1341)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6980650424957275
    2. 'abs' → logprob: -2.0730650424957275
    3. ' if' → logprob: -2.1980650424957275
    4. ',' → logprob: -3.0730650424957275
    5. ' abs' → logprob: -3.0730650424957275
    6. ' <' → logprob: -3.1980650424957275
    7. 'if' → logprob: -3.3230650424957275
    8. ')' → logprob: -3.8230650424957275
    9. ' :' → logprob: -3.9480650424957275
    10. '   ' → logprob: -4.323064804077148

Token 361: ' deux' (ID: 10301)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -1.6503899097442627
    2. ' if' → logprob: -1.7753899097442627
    3. ':' → logprob: -1.9003899097442627
    4. '<' → logprob: -2.2753899097442627
    5. 'if' → logprob: -2.2753899097442627
    6. ' abs' → logprob: -2.5253899097442627
    7. ' <' → logprob: -2.7753899097442627
    8. ')' → logprob: -2.9003899097442627
    9. ' ' → logprob: -4.025389671325684
    10. ',' → logprob: -4.400389671325684

Token 362: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5152914524078369
    2. 'if' → logprob: -1.890291452407837
    3. ':' → logprob: -2.265291452407837
    4. ' if' → logprob: -2.515291452407837
    5. ':
' → logprob: -3.265291452407837
    6. ',' → logprob: -4.765291213989258
    7. '.' → logprob: -4.765291213989258
    8. ' ' → logprob: -6.265291213989258
    9. ')' → logprob: -6.390291213989258
    10. '.
' → logprob: -6.515291213989258

Token 363: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00014299227041192353
    2. ' if' → logprob: -9.375143051147461
    3. 'if' → logprob: -9.875143051147461
    4. '	if' → logprob: -12.500143051147461
    5. '   ' → logprob: -14.125143051147461
    6. '    
' → logprob: -14.375143051147461
    7. '       ' → logprob: -14.625143051147461
    8. '  ' → logprob: -15.000143051147461
    9. ',' → logprob: -15.500143051147461
    10. '	' → logprob: -15.875143051147461

Token 364: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013018103316426277
    2. ' if' → logprob: -4.6380181312561035
    3. 'if' → logprob: -5.7630181312561035
    4. '	if' → logprob: -9.513017654418945
    5. '   ' → logprob: -10.513017654418945
    6. '  ' → logprob: -12.638017654418945
    7. ',' → logprob: -13.138017654418945
    8. '    
' → logprob: -13.388017654418945
    9. '       ' → logprob: -13.638017654418945
    10. '   ' → logprob: -13.763017654418945

Token 365: ' Si' (ID: 7832)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.9890376329421997
    2. ' if' → logprob: -0.9890376329421997
    3. '   ' → logprob: -1.3640376329421997
    4. '	if' → logprob: -7.86403751373291
    5. ' ' → logprob: -10.11403751373291
    6. '  ' → logprob: -10.86403751373291
    7. 'abs' → logprob: -10.98903751373291
    8. '   ' → logprob: -11.61403751373291
    9. '    ' → logprob: -11.86403751373291
    10. '       ' → logprob: -12.11403751373291

Token 366: ' la' (ID: 557)
  Prédit: ' abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' abs' → logprob: -0.5233922600746155
    2. 'abs' → logprob: -0.8983922600746155
    3. '   ' → logprob: -9.023392677307129
    4. ' ' → logprob: -9.398392677307129
    5. '(abs' → logprob: -10.023392677307129
    6. '  ' → logprob: -11.273392677307129
    7. ' ' → logprob: -12.773392677307129
    8. ' taste' → logprob: -13.523392677307129
    9. '    ' → logprob: -13.648392677307129
    10. 'taste' → logprob: -13.773392677307129

Token 367: ' valeur' (ID: 41664)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.4741440713405609
    2. ' abs' → logprob: -0.9741441011428833
    3. '(abs' → logprob: -10.849143981933594
    4. ' ' → logprob: -11.099143981933594
    5. 'val' → logprob: -11.349143981933594
    6. 'value' → logprob: -12.474143981933594
    7. ' valeur' → logprob: -12.724143981933594
    8. ' value' → logprob: -12.849143981933594
    9. '_abs' → logprob: -12.974143981933594
    10. '   ' → logprob: -13.349143981933594

Token 368: ' absol' (ID: 7374)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.3560348153114319
    2. ' abs' → logprob: -1.856034755706787
    3. '_abs' → logprob: -1.981034755706787
    4. '_' → logprob: -6.231034755706787
    5. '(abs' → logprob: -6.606034755706787
    6. ' ' → logprob: -6.731034755706787
    7. '_absolute' → logprob: -8.856035232543945
    8. '=' → logprob: -9.356035232543945
    9. ' _' → logprob: -9.606035232543945
    10. ' absol' → logprob: -9.731035232543945

Token 369: 'ue' (ID: 466)
  Prédit: 'ue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ue' → logprob: -0.0010390023235231638
    2. 'u' → logprob: -7.626039028167725
    3. 'ute' → logprob: -7.751039028167725
    4. 'ut' → logprob: -9.501038551330566
    5. 'abs' → logprob: -11.126038551330566
    6. ' abs' → logprob: -11.751038551330566
    7. '_abs' → logprob: -11.751038551330566
    8. 'utte' → logprob: -12.751038551330566
    9. 'ude' → logprob: -13.251038551330566
    10. 've' → logprob: -13.376038551330566

Token 370: ' cour' (ID: 2871)
  Prédit: '(t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.6808465719223022
    2. '(' → logprob: -1.5558465719223022
    3. 'de' → logprob: -1.8058465719223022
    4. '(l' → logprob: -3.055846691131592
    5. '(abs' → logprob: -3.305846691131592
    6. ' de' → logprob: -3.805846691131592
    7. '(de' → logprob: -5.305846691131592
    8. ' (' → logprob: -5.680846691131592
    9. 'abs' → logprob: -7.430846691131592
    10. 't' → logprob: -7.430846691131592

Token 371: 'ante' (ID: 2116)
  Prédit: 'ante'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ante' → logprob: -0.00028064317302778363
    2. 'ant' → logprob: -8.750280380249023
    3. 'amment' → logprob: -9.750280380249023
    4. 'b' → logprob: -11.125280380249023
    5. 'r' → logprob: -11.375280380249023
    6. '#' → logprob: -11.500280380249023
    7. 'be' → logprob: -12.000280380249023
    8. 'antes' → logprob: -12.375280380249023
    9. 'ue' → logprob: -12.750280380249023
    10. 'a' → logprob: -12.875280380249023

Token 372: ' (' (ID: 350)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.5255904793739319
    2. 'de' → logprob: -1.525590419769287
    3. ' abs' → logprob: -2.900590419769287
    4. 'abs' → logprob: -3.650590419769287
    5. ' of' → logprob: -3.900590419769287
    6. '(l' → logprob: -3.900590419769287
    7. '(abs' → logprob: -4.150590419769287
    8. 'l' → logprob: -4.900590419769287
    9. ' (' → logprob: -4.900590419769287
    10. '   ' → logprob: -5.025590419769287

Token 373: 'abs' (ID: 6071)
  Prédit: 'abs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.6755779981613159
    2. '(abs' → logprob: -1.550577998161316
    3. 'taste' → logprob: -1.675577998161316
    4. 'l' → logprob: -3.6755781173706055
    5. 't' → logprob: -4.1755781173706055
    6. ' abs' → logprob: -4.1755781173706055
    7. ')' → logprob: -4.5505781173706055
    8. '(t' → logprob: -4.6755781173706055
    9. '(l' → logprob: -4.9255781173706055
    10. ' taste' → logprob: -5.3005781173706055

Token 374: '(l' (ID: 4179)
  Prédit: '(t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.342887282371521
    2. '(l' → logprob: -1.717887282371521
    3. '(' → logprob: -2.2178874015808105
    4. ')' → logprob: -7.7178874015808105
    5. '((' → logprob: -7.9678874015808105
    6. '(abs' → logprob: -7.9678874015808105
    7. 'taste' → logprob: -8.842886924743652
    8. '(i' → logprob: -8.967886924743652
    9. 't' → logprob: -9.092886924743652
    10. '(
' → logprob: -9.592886924743652

Token 375: '+i' (ID: 49691)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.36319246888160706
    2. '+' → logprob: -1.2381924390792847
    3. '+i' → logprob: -4.363192558288574
    4. ')' → logprob: -6.863192558288574
    5. '   ' → logprob: -8.238192558288574
    6. ' ' → logprob: -8.613192558288574
    7. '))' → logprob: -9.363192558288574
    8. ' ' → logprob: -9.863192558288574
    9. '+l' → logprob: -10.363192558288574
    10. '  ' → logprob: -10.488192558288574

Token 376: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.04333976283669472
    2. ' -' → logprob: -3.168339729309082
    3. ')' → logprob: -8.293339729309082
    4. '))' → logprob: -10.168339729309082
    5. '   ' → logprob: -10.793339729309082
    6. ' ' → logprob: -11.543339729309082
    7. '1' → logprob: -12.168339729309082
    8. '```' → logprob: -12.855839729309082
    9. ' ' → logprob: -13.480839729309082
    10. '[' → logprob: -13.480839729309082

Token 377: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003436872211750597
    2. ' ' → logprob: -8.000343322753906
    3. '   ' → logprob: -12.250343322753906
    4. ')' → logprob: -13.000343322753906
    5. '))' → logprob: -15.000343322753906
    6. '  ' → logprob: -15.437843322753906
    7. '```' → logprob: -16.000343322753906
    8. ')))' → logprob: -16.875343322753906
    9. '-' → logprob: -17.062843322753906
    10. '0' → logprob: -17.125343322753906

Token 378: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.006367882248014212
    2. ')' → logprob: -5.1313676834106445
    3. ' ))' → logprob: -7.8813676834106445
    4. ')))' → logprob: -10.881367683410645
    5. '   ' → logprob: -11.381367683410645
    6. '))
' → logprob: -12.006367683410645
    7. ' )' → logprob: -12.131367683410645
    8. ')<' → logprob: -12.256367683410645
    9. '"))' → logprob: -12.881367683410645
    10. ''))' → logprob: -13.131367683410645

Token 379: ' est' (ID: 893)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.4025421738624573
    2. ')' → logprob: -1.2775421142578125
    3. '<' → logprob: -3.5275421142578125
    4. ' )' → logprob: -3.9025421142578125
    5. ' <=' → logprob: -6.2775421142578125
    6. ' ' → logprob: -8.027542114257812
    7. '   ' → logprob: -8.402542114257812
    8. '<=' → logprob: -8.652542114257812
    9. ')<' → logprob: -9.027542114257812
    10. ' >' → logprob: -9.402542114257812

Token 380: ' plus' (ID: 2932)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<' → logprob: -0.07668979465961456
    2. 'inf' → logprob: -3.2016897201538086
    3. 'strict' → logprob: -3.8266897201538086
    4. ' inf' → logprob: -5.076689720153809
    5. ' <' → logprob: -6.076689720153809
    6. 'plus' → logprob: -7.326689720153809
    7. 'moins' → logprob: -7.451689720153809
    8. ' strictly' → logprob: -7.701689720153809
    9. '<
' → logprob: -7.951689720153809
    10. '   ' → logprob: -8.826689720153809

Token 381: ' petite' (ID: 28119)
  Prédit: 'pet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pet' → logprob: -0.0765167698264122
    2. 'small' → logprob: -3.70151686668396
    3. '<' → logprob: -4.451516628265381
    4. 'b' → logprob: -4.701516628265381
    5. ' petite' → logprob: -4.701516628265381
    6. ' faible' → logprob: -4.951516628265381
    7. 'import' → logprob: -5.576516628265381
    8. 'gr' → logprob: -5.951516628265381
    9. 'pro' → logprob: -7.326516628265381
    10. '```' → logprob: -7.451516628265381

Token 382: ' que' (ID: 661)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6243244409561157
    2. ' ou' → logprob: -1.1243244409561157
    3. '   ' → logprob: -3.499324321746826
    4. ' que' → logprob: -3.624324321746826
    5. ' or' → logprob: -3.624324321746826
    6. 'ou' → logprob: -3.874324321746826
    7. ',' → logprob: -4.749324321746826
    8. ' than' → logprob: -5.124324321746826
    9. 'or' → logprob: -5.249324321746826
    10. ' ' → logprob: -5.499324321746826

Token 383: ' la' (ID: 557)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.8169241547584534
    2. ' abs' → logprob: -1.0669240951538086
    3. 'taste' → logprob: -2.0669240951538086
    4. ' taste' → logprob: -2.4419240951538086
    5. ' tast' → logprob: -8.566924095153809
    6. '(abs' → logprob: -9.191924095153809
    7. '   ' → logprob: -9.191924095153809
    8. ' ' → logprob: -10.191924095153809
    9. 't' → logprob: -10.566924095153809
    10. ' ' → logprob: -11.316924095153809

Token 384: ' plus' (ID: 2932)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.8546881079673767
    2. 'taste' → logprob: -1.3546881675720215
    3. ' taste' → logprob: -1.7296881675720215
    4. ' abs' → logprob: -1.9796881675720215
    5. 'space' → logprob: -8.479687690734863
    6. 'absolute' → logprob: -8.854687690734863
    7. ' absolute' → logprob: -9.104687690734863
    8. 'value' → logprob: -9.229687690734863
    9. '_abs' → logprob: -9.354687690734863
    10. ' tast' → logprob: -9.479687690734863

Token 385: ' petite' (ID: 28119)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.005639601498842239
    2. '_abs' → logprob: -5.630639553070068
    3. '_pro' → logprob: -7.380639553070068
    4. ' _' → logprob: -8.005640029907227
    5. '_absolute' → logprob: -8.630640029907227
    6. '_small' → logprob: -8.880640029907227
    7. '_pet' → logprob: -8.880640029907227
    8. '_gr' → logprob: -9.130640029907227
    9. '_ab' → logprob: -9.755640029907227
    10. '_val' → logprob: -9.880640029907227

Token 386: ' trouv' (ID: 40254)
  Prédit: ' abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' abs' → logprob: -0.8986477255821228
    2. '_abs' → logprob: -1.2736477851867676
    3. 'abs' → logprob: -1.5236477851867676
    4. '_' → logprob: -3.6486477851867676
    5. ' taste' → logprob: -3.6486477851867676
    6. ' _' → logprob: -3.7736477851867676
    7. ' ' → logprob: -5.023647785186768
    8. 'taste' → logprob: -5.148647785186768
    9. '_val' → logprob: -6.023647785186768
    10. '(abs' → logprob: -7.148647785186768

Token 387: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.02733180858194828
    2. 'e' → logprob: -3.902331829071045
    3. 'ee' → logprob: -6.027331829071045
    4. 'ue' → logprob: -6.402331829071045
    5. 'é' → logprob: -6.402331829071045
    6. 'ie' → logprob: -7.527331829071045
    7. ' e' → logprob: -9.152331352233887
    8. 'ure' → logprob: -9.152331352233887
    9. 'urée' → logprob: -9.402331352233887
    10. '   ' → logprob: -10.277331352233887

Token 388: ' jusqu' (ID: 21961)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08366545289754868
    2. 'taste' → logprob: -3.333665370941162
    3. '):' → logprob: -4.458665370941162
    4. ' taste' → logprob: -5.083665370941162
    5. ',' → logprob: -5.333665370941162
    6. ' :' → logprob: -5.458665370941162
    7. 'ou' → logprob: -5.708665370941162
    8. ')' → logprob: -6.208665370941162
    9. '_' → logprob: -6.208665370941162
    10. ' or' → logprob: -6.583665370941162

Token 389: ''à' (ID: 33688)
  Prédit: ''ici'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''ici' → logprob: -0.20598065853118896
    2. ''à' → logprob: -1.705980658531189
    3. 'ici' → logprob: -6.5809807777404785
    4. '’ici' → logprob: -6.7059807777404785
    5. ''al' → logprob: -7.0809807777404785
    6. 'à' → logprob: -7.2059807777404785
    7. '’à' → logprob: -8.83098030090332
    8. 'al' → logprob: -9.20598030090332
    9. '`' → logprob: -9.45598030090332
    10. ' ici' → logprob: -11.20598030090332

Token 390: ' présent' (ID: 24129)
  Prédit: 'taste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'taste' → logprob: -0.14703640341758728
    2. 'abs' → logprob: -2.64703631401062
    3. ' taste' → logprob: -3.27203631401062
    4. 'now' → logprob: -4.147036552429199
    5. 'maint' → logprob: -5.397036552429199
    6. 'present' → logprob: -5.772036552429199
    7. ' maintenant' → logprob: -6.772036552429199
    8. ' ' → logprob: -7.147036552429199
    9. '   ' → logprob: -7.522036552429199
    10. ' now' → logprob: -7.772036552429199

Token 391: ',
' (ID: 412)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03332152217626572
    2. ' :' → logprob: -4.658321380615234
    3. ':
' → logprob: -4.783321380615234
    4. ',' → logprob: -5.033321380615234
    5. '   ' → logprob: -5.533321380615234
    6. ' or' → logprob: -6.033321380615234
    7. '):' → logprob: -6.783321380615234
    8. ' :
' → logprob: -8.033321380615234
    9. '):
' → logprob: -8.408321380615234
    10. ')' → logprob: -8.783321380615234

Token 392: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08912213146686554
    2. '       ' → logprob: -3.0891220569610596
    3. ':' → logprob: -3.3391220569610596
    4. ' :' → logprob: -5.839122295379639
    5. '    ' → logprob: -7.464122295379639
    6. ' :
' → logprob: -9.08912181854248
    7. ':
' → logprob: -9.21412181854248
    8. ' if' → logprob: -9.46412181854248
    9. ' tast' → logprob: -9.96412181854248
    10. ' ' → logprob: -10.08912181854248

Token 393: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003773716278374195
    2. '       ' → logprob: -6.0037736892700195
    3. ' if' → logprob: -7.0037736892700195
    4. ':' → logprob: -8.75377368927002
    5. 'if' → logprob: -8.75377368927002
    6. '    ' → logprob: -10.62877368927002
    7. '   ' → logprob: -11.50377368927002
    8. ' :' → logprob: -12.25377368927002
    9. '):' → logprob: -12.50377368927002
    10. '  ' → logprob: -12.62877368927002

Token 394: ' alors' (ID: 17971)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15361277759075165
    2. ' taste' → logprob: -2.1536128520965576
    3. 'taste' → logprob: -3.7786128520965576
    4. '	t' → logprob: -6.2786126136779785
    5. '       ' → logprob: -7.9036126136779785
    6. ' tast' → logprob: -8.403613090515137
    7. '   ' → logprob: -8.528613090515137
    8. '  ' → logprob: -9.028613090515137
    9. ' if' → logprob: -9.028613090515137
    10. '    ' → logprob: -9.153613090515137

Token 395: ' taste' (ID: 14673)
  Prédit: ' taste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' taste' → logprob: -0.09883052110671997
    2. '   ' → logprob: -2.598830461502075
    3. 'taste' → logprob: -3.973830461502075
    4. ' tast' → logprob: -7.723830699920654
    5. '	t' → logprob: -8.098830223083496
    6. ' ' → logprob: -9.973830223083496
    7. '   ' → logprob: -10.223830223083496
    8. ' ' → logprob: -10.723830223083496
    9. 'Taste' → logprob: -10.723830223083496
    10. '    ' → logprob: -10.973830223083496

Token 396: ' prend' (ID: 37463)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868822157382965
    2. '=' → logprob: -1.1368821859359741
    3. ',' → logprob: -12.386881828308105
    4. '>' → logprob: -12.761881828308105
    5. ' >' → logprob: -13.636881828308105
    6. ' ' → logprob: -14.011881828308105
    7. '=int' → logprob: -14.511881828308105
    8. 'abs' → logprob: -14.636881828308105
    9. ' ' → logprob: -15.261881828308105
    10. '	' → logprob: -15.886881828308105

Token 397: ' la' (ID: 557)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.05577223002910614
    2. '=' → logprob: -4.305772304534912
    3. '   ' → logprob: -4.305772304534912
    4. ' abs' → logprob: -4.680772304534912
    5. ' =' → logprob: -4.680772304534912
    6. 'l' → logprob: -5.055772304534912
    7. '(abs' → logprob: -7.430772304534912
    8. 'i' → logprob: -7.930772304534912
    9. '=l' → logprob: -8.180771827697754
    10. ' l' → logprob: -8.555771827697754

Token 398: ' nouvelle' (ID: 24562)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.7346570491790771
    2. 'abs' → logprob: -1.2346570491790771
    3. 'l' → logprob: -1.7346570491790771
    4. 'i' → logprob: -3.359657049179077
    5. 'value' → logprob: -4.609657287597656
    6. '   ' → logprob: -5.359657287597656
    7. ' abs' → logprob: -7.234657287597656
    8. ' i' → logprob: -7.484657287597656
    9. 'absolute' → logprob: -8.609657287597656
    10. '       ' → logprob: -8.609657287597656

Token 399: ' valeur' (ID: 41664)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.44769322872161865
    2. '   ' → logprob: -1.5726932287216187
    3. 'abs' → logprob: -2.572693347930908
    4. ' valeur' → logprob: -3.697693347930908
    5. ' abs' → logprob: -3.947693347930908
    6. ' val' → logprob: -4.697693347930908
    7. ' =' → logprob: -5.322693347930908
    8. ' ' → logprob: -5.322693347930908
    9. 'value' → logprob: -5.822693347930908
    10. '_val' → logprob: -6.322693347930908

Token 400: ' (' (ID: 350)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5259885787963867
    2. '=' → logprob: -0.9009885787963867
    3. '=l' → logprob: -5.900988578796387
    4. '(l' → logprob: -9.900988578796387
    5. '   ' → logprob: -10.400988578796387
    6. ' ' → logprob: -12.150988578796387
    7. '=i' → logprob: -12.150988578796387
    8. '	' → logprob: -12.275988578796387
    9. ' =
' → logprob: -12.275988578796387
    10. '=
' → logprob: -12.525988578796387

Token 401: 'non' (ID: 11741)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.024369504302740097
    2. ' l' → logprob: -3.774369478225708
    3. '   ' → logprob: -6.899369716644287
    4. '	l' → logprob: -10.024369239807129
    5. '       ' → logprob: -10.899369239807129
    6. '    ' → logprob: -10.899369239807129
    7. ')' → logprob: -11.399369239807129
    8. '           ' → logprob: -11.649369239807129
    9. ' ' → logprob: -12.774369239807129
    10. '  ' → logprob: -13.649369239807129

Token 402: ' absol' (ID: 7374)
  Prédit: ' abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' abs' → logprob: -0.49482473731040955
    2. 'abs' → logprob: -0.9948247671127319
    3. '   ' → logprob: -4.8698248863220215
    4. ' absol' → logprob: -5.7448248863220215
    5. '_abs' → logprob: -5.8698248863220215
    6. ' absolute' → logprob: -6.7448248863220215
    7. 'ab' → logprob: -6.7448248863220215
    8. ')' → logprob: -6.9948248863220215
    9. '(abs' → logprob: -7.1198248863220215
    10. ' ab' → logprob: -7.4948248863220215

Token 403: 'ue' (ID: 466)
  Prédit: 'ue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ue' → logprob: -0.006373328622430563
    2. 'ute' → logprob: -5.506373405456543
    3. 'u' → logprob: -6.881373405456543
    4. 'ol' → logprob: -7.881373405456543
    5. 'te' → logprob: -8.131373405456543
    6. 'l' → logprob: -8.381373405456543
    7. 'ut' → logprob: -9.131373405456543
    8. 'value' → logprob: -9.881373405456543
    9. 'ule' → logprob: -10.506373405456543
    10. ')' → logprob: -10.506373405456543

Token 404: ' !' (ID: 1073)
  Prédit: '(l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.48779991269111633
    2. ')' → logprob: -1.737799882888794
    3. '   ' → logprob: -2.112799882888794
    4. ',' → logprob: -3.487799882888794
    5. '=' → logprob: -3.737799882888794
    6. ' )' → logprob: -4.612800121307373
    7. '(' → logprob: -4.737800121307373
    8. ' (' → logprob: -5.612800121307373
    9. '       ' → logprob: -5.987800121307373
    10. ' =' → logprob: -6.112800121307373

Token 405: ')
' (ID: 446)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9174261093139648
    2. ' =' → logprob: -1.2924261093139648
    3. '=' → logprob: -1.7924261093139648
    4. ')' → logprob: -2.292426109313965
    5. '       ' → logprob: -3.792426109313965
    6. '):
' → logprob: -5.167426109313965
    7. ')
' → logprob: -5.167426109313965
    8. ' )' → logprob: -5.292426109313965
    9. '=l' → logprob: -5.292426109313965
    10. ')=' → logprob: -5.417426109313965

Token 406: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0009215848403982818
    2. '       ' → logprob: -7.250921726226807
    3. ' if' → logprob: -8.875921249389648
    4. ':' → logprob: -10.625921249389648
    5. 'if' → logprob: -11.000921249389648
    6. '	if' → logprob: -11.875921249389648
    7. ',' → logprob: -12.125921249389648
    8. '  ' → logprob: -12.375921249389648
    9. '   ' → logprob: -12.875921249389648
    10. '    ' → logprob: -13.250921249389648

Token 407: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00044532763422466815
    2. '       ' → logprob: -8.250445365905762
    3. ' if' → logprob: -9.000445365905762
    4. ':' → logprob: -10.875445365905762
    5. 'if' (adapté à ' if') → logprob: -10.875445365905762
    6. '  ' → logprob: -12.000445365905762
    7. '	if' → logprob: -12.250445365905762
    8. '    ' → logprob: -12.500445365905762
    9. '    
' → logprob: -13.000445365905762
    10. '   ' → logprob: -13.625445365905762

Token 408: ' abs' (ID: 8443)
  Prédit: ' abs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' abs' → logprob: -0.3133229613304138
    2. 'abs' → logprob: -1.3133230209350586
    3. '   ' → logprob: -9.938323020935059
    4. '(abs' → logprob: -11.563323020935059
    5. ' ' → logprob: -13.063323020935059
    6. '  ' → logprob: -14.313323020935059
    7. '    ' → logprob: -15.563323020935059
    8. ' ' → logprob: -15.563323020935059
    9. '_abs' → logprob: -16.313322067260742
    10. 'taste' → logprob: -16.563322067260742

Token 409: '(t' (ID: 2025)
  Prédit: '(l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -5.1689596148207784e-05
    2. '(t' → logprob: -10.375051498413086
    3. '(' → logprob: -11.000051498413086
    4. '((' → logprob: -13.250051498413086
    5. 'l' → logprob: -13.625051498413086
    6. ' (' → logprob: -15.250051498413086
    7. '	l' → logprob: -15.750051498413086
    8. '(L' → logprob: -15.875051498413086
    9. '(
' → logprob: -17.000051498413086
    10. '(i' → logprob: -17.250051498413086

Token 410: 'aste' (ID: 6604)
  Prédit: '+l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+l' → logprob: -0.8271393775939941
    2. 'aste' → logprob: -1.0771393775939941
    3. '+' → logprob: -1.5771393775939941
    4. ' +' → logprob: -4.577139377593994
    5. 'l' → logprob: -5.452139377593994
    6. '(l' → logprob: -7.952139377593994
    7. 'ast' → logprob: -9.077138900756836
    8. '+i' → logprob: -9.327138900756836
    9. '+(' → logprob: -9.702138900756836
    10. 'a' → logprob: -10.202138900756836

Token 411: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003244966734200716
    2. ')>' → logprob: -6.378244876861572
    3. ' )' → logprob: -6.503244876861572
    4. '>' → logprob: -10.75324535369873
    5. '>)' → logprob: -11.50324535369873
    6. ' >' → logprob: -11.87824535369873
    7. '   ' → logprob: -13.62824535369873
    8. '）' → logprob: -14.37824535369873
    9. ')>=' → logprob: -14.50324535369873
    10. '")' → logprob: -14.75324535369873

Token 412: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.054884202778339386
    2. ' >' → logprob: -2.929884195327759
    3. ' ' → logprob: -14.67988395690918
    4. '   ' → logprob: -15.05488395690918
    5. ')' → logprob: -15.05488395690918
    6. ' >
' → logprob: -15.30488395690918
    7. '>
' → logprob: -16.30488395690918
    8. 'abs' → logprob: -16.42988395690918
    9. '```' → logprob: -16.55488395690918
    10. '<' → logprob: -16.80488395690918

Token 413: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.25196772813796997
    2. ' abs' → logprob: -1.5019676685333252
    3. '(abs' → logprob: -10.501967430114746
    4. '   ' → logprob: -11.501967430114746
    5. ' ' → logprob: -14.751967430114746
    6. '    ' → logprob: -15.376967430114746
    7. '  ' → logprob: -16.126968383789062
    8. '       ' → logprob: -16.501968383789062
    9. ' (' → logprob: -17.001968383789062
    10. 'l' → logprob: -17.376968383789062

Token 414: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.0002646735229063779
    2. '(' → logprob: -8.250265121459961
    3. 'l' → logprob: -12.875265121459961
    4. '((' → logprob: -14.750265121459961
    5. '(
' → logprob: -15.375265121459961
    6. ' (' → logprob: -15.375265121459961
    7. '	l' → logprob: -17.00026512145996
    8. '(i' → logprob: -17.50026512145996
    9. ' l' → logprob: -18.25026512145996
    10. '(li' → logprob: -18.37526512145996

Token 415: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.0172730684280396
    2. ' +' → logprob: -1.1422730684280396
    3. '+i' → logprob: -1.1422730684280396
    4. '   ' → logprob: -9.01727294921875
    5. ' ' → logprob: -9.51727294921875
    6. '+
' → logprob: -11.76727294921875
    7. ' ' → logprob: -11.89227294921875
    8. ')' → logprob: -12.14227294921875
    9. '  ' → logprob: -12.26727294921875
    10. '[i' → logprob: -13.39227294921875

Token 416: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.17995485663414001
    2. ' i' → logprob: -1.8049548864364624
    3. '(i' → logprob: -9.554954528808594
    4. ' (' → logprob: -9.679954528808594
    5. ' ' → logprob: -9.929954528808594
    6. '   ' → logprob: -11.304954528808594
    7. '	i' → logprob: -12.804954528808594
    8. '(' → logprob: -12.929954528808594
    9. ' +' → logprob: -13.429954528808594
    10. '+i' → logprob: -13.554954528808594

Token 417: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.062027398496866226
    2. ' -' → logprob: -2.8120274543762207
    3. ')' → logprob: -10.562026977539062
    4. '   ' → logprob: -10.937026977539062
    5. ' ' → logprob: -11.437026977539062
    6. '1' → logprob: -13.937026977539062
    7. '[' → logprob: -13.937026977539062
    8. '  ' → logprob: -14.312026977539062
    9. '       ' → logprob: -14.562026977539062
    10. '     ' → logprob: -14.687026977539062

Token 418: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0010423363419249654
    2. ' ' → logprob: -6.876042366027832
    3. '   ' → logprob: -11.626042366027832
    4. '  ' → logprob: -15.626042366027832
    5. ')' → logprob: -15.876042366027832
    6. '<|end|>' → logprob: -15.876042366027832
    7. '```' → logprob: -16.126041412353516
    8. '	' → logprob: -16.751041412353516
    9. '0' → logprob: -18.001041412353516
    10. '    ' → logprob: -18.063541412353516

Token 419: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.9153885558771435e-06
    2. ' ' → logprob: -12.125005722045898
    3. '   ' → logprob: -15.625005722045898
    4. ')' → logprob: -16.3750057220459
    5. '```' → logprob: -17.2500057220459
    6. '１' → logprob: -19.1250057220459
    7. '<|end|>' → logprob: -19.1875057220459
    8. '  ' → logprob: -19.4375057220459
    9. '۱' → logprob: -19.5000057220459
    10. '	' → logprob: -19.6250057220459

Token 420: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.25335633754730225
    2. '):' → logprob: -1.5033563375473022
    3. ')' → logprob: -7.003356456756592
    4. '):
' → logprob: -8.003355979919434
    5. '   ' → logprob: -8.878355979919434
    6. ':' → logprob: -11.378355979919434
    7. ' ):
' → logprob: -11.378355979919434
    8. '       ' → logprob: -11.503355979919434
    9. ' ):' → logprob: -12.253355979919434
    10. ':
' → logprob: -12.503355979919434

Token 421: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005873451940715313
    2. 'taste' → logprob: -5.755873680114746
    3. ' taste' → logprob: -6.005873680114746
    4. '   ' → logprob: -8.630873680114746
    5. '           ' → logprob: -11.505873680114746
    6. '	t' → logprob: -11.505873680114746
    7. '	   ' → logprob: -11.505873680114746
    8. '        
' → logprob: -12.130873680114746
    9. 't' → logprob: -12.880873680114746
    10. '
' → logprob: -13.005873680114746

Token 422: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03554726392030716
    2. 'taste' → logprob: -3.5355472564697266
    3. ' taste' → logprob: -5.285547256469727
    4. '   ' → logprob: -7.410547256469727
    5. '	t' → logprob: -10.035547256469727
    6. '           ' → logprob: -10.410547256469727
    7. 't' → logprob: -11.535547256469727
    8. '	' → logprob: -11.785547256469727
    9. '	   ' → logprob: -12.035547256469727
    10. ' tast' → logprob: -13.035547256469727

Token 423: ' On' (ID: 2160)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7034558057785034
    2. 'taste' → logprob: -0.7034558057785034
    3. ' taste' → logprob: -4.828455924987793
    4. '   ' → logprob: -6.328455924987793
    5. '           ' → logprob: -8.203455924987793
    6. 't' → logprob: -9.328455924987793
    7. '	t' → logprob: -11.203455924987793
    8. '    ' → logprob: -11.328455924987793
    9. 'Taste' → logprob: -11.578455924987793
    10. ' ' → logprob: -11.703455924987793

Token 424: ' rem' (ID: 1662)
  Prédit: 'taste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'taste' → logprob: -0.05211343616247177
    2. '       ' → logprob: -3.6771135330200195
    3. ' taste' → logprob: -3.9271135330200195
    4. '   ' → logprob: -5.3021135330200195
    5. '=' → logprob: -8.42711353302002
    6. '           ' → logprob: -8.55211353302002
    7. '    ' → logprob: -9.67711353302002
    8. '        ' → logprob: -10.05211353302002
    9. '     ' → logprob: -10.05211353302002
    10. ' ' → logprob: -10.05211353302002

Token 425: 'place' (ID: 3243)
  Prédit: 'place'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'place' → logprob: -0.1838889718055725
    2. 'plit' → logprob: -2.4338889122009277
    3. 'taste' → logprob: -2.8088889122009277
    4. 'p' → logprob: -4.433888912200928
    5. '       ' → logprob: -5.683888912200928
    6. 't' → logprob: -7.433888912200928
    7. ' taste' → logprob: -7.433888912200928
    8. 'placer' → logprob: -7.683888912200928
    9. 'pl' → logprob: -7.933888912200928
    10. 'places' → logprob: -8.058889389038086

Token 426: ' taste' (ID: 14673)
  Prédit: 'taste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'taste' → logprob: -0.01843027025461197
    2. ' taste' → logprob: -4.143430233001709
    3. '   ' → logprob: -6.768430233001709
    4. '       ' → logprob: -6.768430233001709
    5. '           ' → logprob: -10.518430709838867
    6. '	t' → logprob: -11.518430709838867
    7. ' ' → logprob: -12.018430709838867
    8. 't' → logprob: -12.143430709838867
    9. '  ' → logprob: -12.143430709838867
    10. '    ' → logprob: -12.143430709838867

Token 427: ' par' (ID: 686)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25193890929222107
    2. ' =' → logprob: -1.5019389390945435
    3. '=t' → logprob: -11.751938819885254
    4. '=
' → logprob: -14.251938819885254
    5. '   ' → logprob: -14.376938819885254
    6. '=l' → logprob: -15.376938819885254
    7. ' ' → logprob: -15.501938819885254
    8. ' =
' → logprob: -16.12693977355957
    9. 't' → logprob: -16.62693977355957
    10. '＝' → logprob: -17.37693977355957

Token 428: ' la' (ID: 557)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.004100485239177942
    2. ' l' → logprob: -5.504100322723389
    3. '   ' → logprob: -11.004100799560547
    4. '	l' → logprob: -13.129100799560547
    5. '       ' → logprob: -13.629100799560547
    6. '    ' → logprob: -14.504100799560547
    7. '(l' → logprob: -14.504100799560547
    8. ' ' → logprob: -15.004100799560547
    9. '           ' → logprob: -15.504100799560547
    10. ' (' → logprob: -15.879100799560547

Token 429: ' valeur' (ID: 41664)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0001446611131541431
    2. ' l' → logprob: -8.875144958496094
    3. '   ' → logprob: -12.625144958496094
    4. '       ' → logprob: -14.750144958496094
    5. '(l' → logprob: -15.000144958496094
    6. '	l' → logprob: -15.000144958496094
    7. '           ' → logprob: -15.500144958496094
    8. ' ' → logprob: -16.875144958496094
    9. '     ' → logprob: -17.375144958496094
    10. '```' → logprob: -17.500144958496094

Token 430: ' cour' (ID: 2871)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0005376627668738365
    2. ' l' → logprob: -7.750537872314453
    3. '       ' → logprob: -10.125537872314453
    4. '   ' → logprob: -10.250537872314453
    5. '=' → logprob: -11.250537872314453
    6. ' =' → logprob: -12.000537872314453
    7. '=l' → logprob: -12.375537872314453
    8. '	l' → logprob: -12.875537872314453
    9. '(l' → logprob: -13.000537872314453
    10. '           ' → logprob: -13.750537872314453

Token 431: 'ante' (ID: 2116)
  Prédit: 'ante'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ante' → logprob: -0.003529986832290888
    2. 'ance' → logprob: -5.753530025482178
    3. '   ' → logprob: -8.75352954864502
    4. 'ant' → logprob: -9.62852954864502
    5. '       ' → logprob: -10.00352954864502
    6. '+' → logprob: -11.25352954864502
    7. 'l' → logprob: -12.00352954864502
    8. 'ente' → logprob: -12.12852954864502
    9. 'r' → logprob: -12.25352954864502
    10. '        ' → logprob: -12.25352954864502

Token 432: ' l' (ID: 305)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2561076283454895
    2. ' =' → logprob: -1.7561075687408447
    3. 'taste' → logprob: -3.1311075687408447
    4. '=l' → logprob: -5.756107807159424
    5. '       ' → logprob: -6.256107807159424
    6. ' taste' → logprob: -6.381107807159424
    7. '   ' → logprob: -7.006107807159424
    8. 'l' → logprob: -7.256107807159424
    9. 't' → logprob: -7.381107807159424
    10. '=t' → logprob: -8.631107330322266

Token 433: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.18054944276809692
    2. '+' → logprob: -1.8055493831634521
    3. '+i' → logprob: -7.180549621582031
    4. '+l' → logprob: -10.430549621582031
    5. ' ' → logprob: -11.930549621582031
    6. ' ' → logprob: -12.930549621582031
    7. '   ' → logprob: -13.430549621582031
    8. '	' → logprob: -13.930549621582031
    9. '  ' → logprob: -14.680549621582031
    10. ' plus' → logprob: -14.930549621582031

Token 434: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.006721178535372019
    2. ' i' → logprob: -5.006721019744873
    3. '(i' → logprob: -12.381721496582031
    4. ' ' → logprob: -14.506721496582031
    5. ' (' → logprob: -15.006721496582031
    6. '   ' → logprob: -15.256721496582031
    7. '	i' → logprob: -15.506721496582031
    8. ' ' → logprob: -16.13172149658203
    9. '(' → logprob: -16.63172149658203
    10. '```' → logprob: -17.00672149658203

Token 435: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.47409728169441223
    2. '-' → logprob: -0.9740972518920898
    3. ' ' → logprob: -11.09909725189209
    4. '   ' → logprob: -13.59909725189209
    5. ' ' → logprob: -13.72409725189209
    6. '  ' → logprob: -14.59909725189209
    7. '	' → logprob: -14.72409725189209
    8. '−' → logprob: -14.84909725189209
    9. '       ' → logprob: -14.97409725189209
    10. '     ' → logprob: -15.84909725189209

Token 436: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.025832246989011765
    2. ' ' → logprob: -3.900832176208496
    3. '-' → logprob: -5.525832176208496
    4. ' -' → logprob: -6.775832176208496
    5. '   ' → logprob: -9.275832176208496
    6. 'i' → logprob: -11.275832176208496
    7. '  ' → logprob: -11.525832176208496
    8. '           ' → logprob: -12.150832176208496
    9. '       ' → logprob: -12.275832176208496
    10. '```' → logprob: -12.275832176208496

Token 437: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00011105302110081539
    2. ' ' → logprob: -9.125110626220703
    3. '-' → logprob: -13.875110626220703
    4. '   ' → logprob: -14.125110626220703
    5. '```' → logprob: -16.000110626220703
    6. 'i' → logprob: -16.875110626220703
    7. ' -' → logprob: -16.875110626220703
    8. '  ' → logprob: -17.250110626220703
    9. '       ' → logprob: -17.625110626220703
    10. '#' → logprob: -17.625110626220703

Token 438: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6802619099617004
    2. ' =' → logprob: -1.3052618503570557
    3. '=' → logprob: -1.5552618503570557
    4. ':' → logprob: -5.805262088775635
    5. ':
' → logprob: -6.305262088775635
    6. 'taste' → logprob: -6.430262088775635
    7. '):
' → logprob: -7.180262088775635
    8. '=l' → logprob: -7.305262088775635
    9. 't' → logprob: -7.430262088775635
    10. ' taste' → logprob: -7.430262088775635

Token 439: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003658387577161193
    2. 'taste' → logprob: -5.753658294677734
    3. ' taste' → logprob: -8.003658294677734
    4. 't' → logprob: -9.753658294677734
    5. '           ' → logprob: -9.878658294677734
    6. '	' → logprob: -11.503658294677734
    7. '   ' → logprob: -11.503658294677734
    8. '	t' → logprob: -12.503658294677734
    9. '```' → logprob: -13.128658294677734
    10. ' ' → logprob: -13.253658294677734

Token 440: ' taste' (ID: 14673)
  Prédit: 'taste'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'taste' (adapté à ' taste') → logprob: -0.06269850581884384
    2. '       ' → logprob: -2.8126986026763916
    3. ' taste' → logprob: -7.4376983642578125
    4. 't' → logprob: -9.187698364257812
    5. '           ' → logprob: -10.937698364257812
    6. '   ' → logprob: -11.437698364257812
    7. 'Taste' → logprob: -12.062698364257812
    8. '	t' → logprob: -13.062698364257812
    9. 'touch' → logprob: -14.312698364257812
    10. '```' → logprob: -14.312698364257812

Token 441: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31326258182525635
    2. ' =' → logprob: -1.3132625818252563
    3. '=
' → logprob: -15.188262939453125
    4. ' =
' → logprob: -15.563262939453125
    5. '＝' → logprob: -15.938262939453125
    6. ' ' → logprob: -16.563262939453125
    7. '=

' → logprob: -16.563262939453125
    8. '   ' → logprob: -16.813262939453125
    9. ' =
' → logprob: -16.813262939453125
    10. '=l' → logprob: -17.438262939453125

Token 442: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.07891248166561127
    2. ' l' → logprob: -2.5789124965667725
    3. '(l' → logprob: -11.078912734985352
    4. ' (' → logprob: -12.578912734985352
    5. '	l' → logprob: -13.703912734985352
    6. ' ' → logprob: -13.828912734985352
    7. '   ' → logprob: -14.203912734985352
    8. ' ' → logprob: -14.453912734985352
    9. '(' → logprob: -15.078912734985352
    10. '  ' → logprob: -17.32891273498535

Token 443: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5927772521972656
    2. '+' → logprob: -0.8427772521972656
    3. '+i' → logprob: -4.092777252197266
    4. ' ' → logprob: -14.092777252197266
    5. '+l' → logprob: -14.217777252197266
    6. ' ' → logprob: -14.592777252197266
    7. '+t' → logprob: -14.842777252197266
    8. '+
' → logprob: -15.092777252197266
    9. '＋' → logprob: -15.342777252197266
    10. '[i' → logprob: -15.467777252197266

Token 444: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.10026825219392776
    2. ' i' → logprob: -2.3502683639526367
    3. '(i' → logprob: -10.350268363952637
    4. ' (' → logprob: -10.600268363952637
    5. ' ' → logprob: -12.975268363952637
    6. '   ' → logprob: -13.850268363952637
    7. '	i' → logprob: -14.350268363952637
    8. '(' → logprob: -15.350268363952637
    9. '  ' → logprob: -16.22526741027832
    10. '1' → logprob: -16.35026741027832

Token 445: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.033724311739206314
    2. ' -' → logprob: -3.408724308013916
    3. '   ' → logprob: -10.283724784851074
    4. ' ' → logprob: -10.408724784851074
    5. '       ' → logprob: -12.408724784851074
    6. '     ' → logprob: -12.658724784851074
    7. '  ' → logprob: -13.033724784851074
    8. '<|end|>' → logprob: -14.033724784851074
    9. '           ' → logprob: -14.658724784851074
    10. '    ' → logprob: -14.658724784851074

Token 446: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00011021859245374799
    2. ' ' → logprob: -9.125110626220703
    3. '<|end|>' → logprob: -14.250110626220703
    4. '   ' → logprob: -15.000110626220703
    5. '```' → logprob: -15.750110626220703
    6. '  ' → logprob: -17.625110626220703
    7. '       ' → logprob: -18.000110626220703
    8. '<|end|>' → logprob: -18.000110626220703
    9. '0' → logprob: -18.375110626220703
    10. '    ' → logprob: -18.937610626220703

Token 447: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.875001907348633
    3. '<|end|>' → logprob: -14.000001907348633
    4. '```' → logprob: -17.625001907348633
    5. '<|end|>' → logprob: -18.125001907348633
    6. '۱' → logprob: -18.500001907348633
    7. '   ' → logprob: -18.500001907348633
    8. '0' → logprob: -19.000001907348633
    9. '１' → logprob: -19.125001907348633
    10. '१' → logprob: -19.312501907348633

Token 448: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00014489953173324466
    2. '#' → logprob: -8.875144958496094
    3. ' print' → logprob: -13.000144958496094
    4. '
' → logprob: -13.375144958496094
    5. '```' → logprob: -14.750144958496094
    6. '    
' → logprob: -15.375144958496094
    7. '#print' → logprob: -15.375144958496094
    8. '  
' → logprob: -16.000144958496094
    9. '   ' → logprob: -16.125144958496094
    10. 'if' → logprob: -16.375144958496094

Token 449: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00023596010578330606
    2. ')' → logprob: -9.000235557556152
    3. ' print' → logprob: -9.625235557556152
    4. '<|end|>' → logprob: -10.875235557556152
    5. '#' → logprob: -11.125235557556152
    6. 'return' → logprob: -12.125235557556152
    7. '
' → logprob: -13.750235557556152
    8. '#print' → logprob: -14.000235557556152
    9. 'if' → logprob: -14.250235557556152
    10. 'n' → logprob: -14.250235557556152

Token 450: ' Après' (ID: 47562)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.128163257315464e-07
    2. '#' → logprob: -15.375
    3. ' print' → logprob: -16.75
    4. 'pr' → logprob: -18.25
    5. 'prin' → logprob: -18.375
    6. '#print' → logprob: -18.5
    7. '```' → logprob: -19.5
    8. 'if' → logprob: -19.75
    9. 'prit' → logprob: -20.625
    10. 'Print' → logprob: -21.375

Token 451: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.3185717463493347
    2. 'print' → logprob: -1.9435718059539795
    3. '#' → logprob: -2.8185718059539795
    4. 'le' → logprob: -3.3185718059539795
    5. 'for' → logprob: -4.3185715675354
    6. 'avoir' → logprob: -4.8185715675354
    7. 'c' → logprob: -5.5685715675354
    8. ' cette' → logprob: -5.5685715675354
    9. ' la' → logprob: -6.1935715675354
    10. 'l' → logprob: -7.3185715675354

Token 452: ' boucle' (ID: 174211)
  Prédit: 'bou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bou' → logprob: -0.1342521458864212
    2. 'for' → logprob: -2.3842520713806152
    3. 'print' → logprob: -3.6342520713806152
    4. '#' → logprob: -5.259252071380615
    5. ' boucle' → logprob: -7.259252071380615
    6. 'fin' → logprob: -7.509252071380615
    7. 'if' → logprob: -8.509252548217773
    8. 'der' → logprob: -9.009252548217773
    9. '```' → logprob: -9.259252548217773
    10. 'ligne' → logprob: -9.759252548217773

Token 453: ',' (ID: 11)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -4.429896944202483e-05
    2. '#' → logprob: -10.500043869018555
    3. ' print' → logprob: -11.125043869018555
    4. ',' → logprob: -13.750043869018555
    5. 'prin' → logprob: -15.000043869018555
    6. 'pr' → logprob: -15.375043869018555
    7. '#print' → logprob: -15.625043869018555
    8. 'if' → logprob: -16.375043869018555
    9. '
' → logprob: -16.500043869018555
    10. '(print' → logprob: -17.875043869018555

Token 454: ' taste' (ID: 14673)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.9361264946837764e-07
    2. ' print' → logprob: -16.125
    3. '#' → logprob: -17.625
    4. 'prin' → logprob: -19.0
    5. '```' → logprob: -19.125
    6. 'pr' → logprob: -19.375
    7. '#print' → logprob: -19.75
    8. 'prit' → logprob: -20.875
    9. '
' → logprob: -21.5
    10. 'if' → logprob: -21.875

Token 455: ' contient' (ID: 89067)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 456: ' l' (ID: 305)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.007661155425012112
    2. 'val' → logprob: -5.75766134262085
    3. 'le' → logprob: -6.00766134262085
    4. '#' → logprob: -7.13266134262085
    5. ' la' → logprob: -7.13266134262085
    6. 'the' → logprob: -8.132660865783691
    7. '0' → logprob: -9.882660865783691
    8. 'une' → logprob: -10.882660865783691
    9. 'l' → logprob: -11.132660865783691
    10. 'celle' → logprob: -11.507660865783691

Token 457: ''' (ID: 6)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0699264258146286
    2. 'e' → logprob: -2.9449265003204346
    3. '#' → logprob: -4.5699262619018555
    4. 'la' → logprob: -6.4449262619018555
    5. ''' → logprob: -6.6949262619018555
    6. ''a' → logprob: -7.4449262619018555
    7. ''une' → logprob: -9.069926261901855
    8. ''#' → logprob: -9.194926261901855
    9. ''ident' → logprob: -9.319926261901855
    10. ''information' → logprob: -9.694926261901855

Token 458: 'élé' (ID: 15228)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.4119255840778351
    2. 'val' → logprob: -1.7869255542755127
    3. 'élé' → logprob: -1.9119255542755127
    4. 'int' → logprob: -4.536925792694092
    5. ''ent' → logprob: -5.286925792694092
    6. 'entrée' → logprob: -5.661925792694092
    7. 'é' → logprob: -8.036925315856934
    8. '#' → logprob: -8.036925315856934
    9. 'integer' → logprob: -8.036925315856934
    10. 'abs' → logprob: -8.536925315856934

Token 459: 'ment' (ID: 508)
  Prédit: 'ment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ment' → logprob: -0.2550164461135864
    2. 'ément' → logprob: -2.005016326904297
    3. 'ement' → logprob: -2.505016326904297
    4. '#' → logprob: -5.255016326904297
    5. 'em' → logprob: -6.380016326904297
    6. 'e' → logprob: -7.380016326904297
    7. 'ève' → logprob: -8.255016326904297
    8. 'ém' → logprob: -8.255016326904297
    9. 'é' → logprob: -9.005016326904297
    10. 'ent' → logprob: -9.505016326904297

Token 460: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.5279058814048767
    2. 'le' → logprob: -1.6529059410095215
    3. 'ayant' → logprob: -2.4029059410095215
    4. 'qui' → logprob: -3.5279059410095215
    5. 'du' → logprob: -3.7779059410095215
    6. ' ayant' → logprob: -4.1529059410095215
    7. ' de' → logprob: -4.1529059410095215
    8. ' le' → logprob: -4.6529059410095215
    9. 'dont' → logprob: -5.0279059410095215
    10. '#' → logprob: -5.0279059410095215

Token 461: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.20786075294017792
    2. 'val' → logprob: -1.9578607082366943
    3. 'range' → logprob: -3.8328607082366943
    4. 'l' → logprob: -4.457860946655273
    5. 'interval' → logprob: -5.082860946655273
    6. 'plus' → logprob: -5.832860946655273
    7. '#' → logprob: -6.832860946655273
    8. 't' → logprob: -7.457860946655273
    9. 'liste' → logprob: -8.207860946655273
    10. '```' → logprob: -8.457860946655273

Token 462: ' sé' (ID: 7462)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.20740804076194763
    2. 'liste' → logprob: -2.7074079513549805
    3. 'interval' → logprob: -3.0824079513549805
    4. 'sequence' → logprob: -3.4574079513549805
    5. 's' → logprob: -4.2074079513549805
    6. 'sé' → logprob: -4.7074079513549805
    7. 'suite' → logprob: -4.8324079513549805
    8. 'list' → logprob: -5.3324079513549805
    9. 'pl' → logprob: -5.8324079513549805
    10. '#' → logprob: -6.9574079513549805

Token 463: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -0.000104616025055293
    2. 'qu' → logprob: -10.125104904174805
    3. 'rie' → logprob: -10.125104904174805
    4. 'lection' → logprob: -11.250104904174805
    5. '#' → logprob: -12.375104904174805
    6. 'QUENCE' → logprob: -13.000104904174805
    7. 'q' → logprob: -13.875104904174805
    8. 'que' → logprob: -14.125104904174805
    9. 'ance' → logprob: -14.625104904174805
    10. '`' → logprob: -15.000104904174805

Token 464: ' l' (ID: 305)
  Prédit: 'ayant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ayant' → logprob: -0.8326755166053772
    2. 'qui' → logprob: -1.4576754570007324
    3. 'l' → logprob: -2.3326754570007324
    4. 'dont' → logprob: -2.8326754570007324
    5. 'avec' → logprob: -2.9576754570007324
    6. '#' → logprob: -3.4576754570007324
    7. 'la' → logprob: -3.5826754570007324
    8. 'closest' → logprob: -4.457675457000732
    9. 'taste' → logprob: -4.582675457000732
    10. 'entre' → logprob: -4.957675457000732

Token 465: ',' (ID: 11)
  Prédit: '+l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+l' → logprob: -0.44888249039649963
    2. ' +' → logprob: -1.4488824605941772
    3. '+' → logprob: -2.573882579803467
    4. ',' → logprob: -3.073882579803467
    5. '+i' → logprob: -6.948882579803467
    6. ',l' → logprob: -7.573882579803467
    7. ' à' → logprob: -7.698882579803467
    8. 'à' → logprob: -8.073882102966309
    9. ' ,' → logprob: -8.073882102966309
    10. ' ' → logprob: -8.198882102966309

Token 466: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0036026788875460625
    2. ' l' → logprob: -5.628602504730225
    3. '...' → logprob: -13.753602981567383
    4. ',' → logprob: -14.628602981567383
    5. ' ' → logprob: -15.253602981567383
    6. '	l' → logprob: -15.378602981567383
    7. '   ' → logprob: -15.503602981567383
    8. '```' → logprob: -15.503602981567383
    9. ' ' → logprob: -16.003602981567383
    10. '#' → logprob: -17.003602981567383

Token 467: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.11400344967842102
    2. ' +' → logprob: -2.9890034198760986
    3. '+l' → logprob: -3.1140034198760986
    4. '+i' → logprob: -4.989003658294678
    5. ',' → logprob: -5.114003658294678
    6. '<|end|>' → logprob: -10.48900318145752
    7. '...' → logprob: -10.73900318145752
    8. 'l' → logprob: -11.23900318145752
    9. ' l' → logprob: -11.36400318145752
    10. ',l' → logprob: -11.48900318145752

Token 468: '1' (ID: 16)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.003984842915087938
    2. 'l' → logprob: -5.8789849281311035
    3. '0' → logprob: -7.5039849281311035
    4. ' i' → logprob: -8.003984451293945
    5. '(i' → logprob: -9.503984451293945
    6. '+i' → logprob: -9.753984451293945
    7. '<|end|>' → logprob: -9.753984451293945
    8. ' ' → logprob: -10.378984451293945
    9. '1' → logprob: -10.628984451293945
    10. '+' → logprob: -11.753984451293945

Token 469: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007796128746122122
    2. ' ,' → logprob: -6.007796287536621
    3. '-' → logprob: -6.382796287536621
    4. ' -' → logprob: -7.007796287536621
    5. 'l' → logprob: -7.132796287536621
    6. ',l' → logprob: -7.132796287536621
    7. ',...' → logprob: -8.507796287536621
    8. '...' → logprob: -8.507796287536621
    9. ' l' → logprob: -8.632796287536621
    10. '#' → logprob: -9.132796287536621

Token 470: ' ...,' (ID: 126708)
  Prédit: '...,'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '...,' → logprob: -0.07352663576602936
    2. 'l' → logprob: -2.823526620864868
    3. '...' → logprob: -4.573526859283447
    4. ' ...,' → logprob: -6.823526859283447
    5. '…,' → logprob: -10.573526382446289
    6. ',' → logprob: -10.823526382446289
    7. ' l' → logprob: -11.073526382446289
    8. ',...' → logprob: -11.573526382446289
    9. ' ...' → logprob: -12.198526382446289
    10. '…' → logprob: -12.573526382446289

Token 471: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0013272607466205955
    2. ' l' → logprob: -6.626327037811279
    3. ',' → logprob: -14.001327514648438
    4. '...' → logprob: -15.501327514648438
    5. '(l' → logprob: -15.626327514648438
    6. '	l' → logprob: -16.876327514648438
    7. ' ' → logprob: -17.126327514648438
    8. '   ' → logprob: -17.126327514648438
    9. '```' → logprob: -17.251327514648438
    10. ',l' → logprob: -17.376327514648438

Token 472: '+n' (ID: 87683)
  Prédit: '+n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+n' → logprob: -0.10518620908260345
    2. '+' → logprob: -2.3551862239837646
    3. '+l' → logprob: -5.4801859855651855
    4. ' +' → logprob: -7.6051859855651855
    5. 'n' → logprob: -8.480186462402344
    6. 'plus' → logprob: -9.355186462402344
    7. '-' → logprob: -13.480186462402344
    8. ' plus' → logprob: -13.730186462402344
    9. 'l' → logprob: -13.730186462402344
    10. 'Plus' → logprob: -13.980186462402344

Token 473: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -2.2842308680992573e-05
    2. '1' → logprob: -11.625022888183594
    3. '```' → logprob: -12.000022888183594
    4. ' -' → logprob: -12.125022888183594
    5. '−' → logprob: -13.375022888183594
    6. '#' → logprob: -14.625022888183594
    7. '[-' → logprob: -16.750022888183594
    8. '``' → logprob: -17.000022888183594
    9. '{-' → logprob: -17.000022888183594
    10. '\-' → logprob: -17.125022888183594

Token 474: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.60414821645827e-06
    2. '-' → logprob: -12.500004768371582
    3. ' ' → logprob: -14.875004768371582
    4. '```' → logprob: -15.500004768371582
    5. '0' → logprob: -15.875004768371582
    6. '2' → logprob: -16.000003814697266
    7. '#' → logprob: -17.750003814697266
    8. '   ' → logprob: -18.625003814697266
    9. '...' → logprob: -19.000003814697266
    10. '`' → logprob: -19.000003814697266

Token 475: ' dont' (ID: 11562)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00011951648048125207
    2. ' print' → logprob: -9.12511920928955
    3. '#' → logprob: -11.87511920928955
    4. ')' → logprob: -13.75011920928955
    5. '.' → logprob: -13.75011920928955
    6. 'pr' → logprob: -15.00011920928955
    7. '.print' → logprob: -15.37511920928955
    8. ',' → logprob: -15.37511920928955
    9. 'return' → logprob: -15.87511920928955
    10. '```' → logprob: -15.87511920928955

Token 476: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.0016068668337538838
    2. 'l' → logprob: -6.6266069412231445
    3. 'abs' → logprob: -8.751606941223145
    4. '#' → logprob: -9.626606941223145
    5. 'val' → logprob: -10.501606941223145
    6. ' la' → logprob: -10.626606941223145
    7. 'le' → logprob: -13.126606941223145
    8. 'La' → logprob: -14.126606941223145
    9. 'the' → logprob: -14.251606941223145
    10. '```' → logprob: -14.376606941223145

Token 477: ' valeur' (ID: 41664)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -8.828512363834307e-05
    2. 'abs' → logprob: -9.750088691711426
    3. 'value' → logprob: -11.625088691711426
    4. ' valeur' → logprob: -11.875088691711426
    5. '#' → logprob: -12.000088691711426
    6. 'vale' → logprob: -12.500088691711426
    7. 'valor' → logprob: -12.750088691711426
    8. 'va' → logprob: -14.875088691711426
    9. 'print' → logprob: -15.875088691711426
    10. '|' → logprob: -16.12508773803711

Token 478: ' absol' (ID: 7374)
  Prédit: 'ab'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ab' → logprob: -0.06871161609888077
    2. 'absolute' → logprob: -3.693711519241333
    3. ' absol' → logprob: -3.943711519241333
    4. 'abs' → logprob: -4.318711757659912
    5. 'en' → logprob: -5.318711757659912
    6. 'la' → logprob: -5.943711757659912
    7. '#' → logprob: -7.943711757659912
    8. ' absolute' → logprob: -8.568711280822754
    9. '#ab' → logprob: -8.818711280822754
    10. '<|end|>' → logprob: -9.068711280822754

Token 479: 'ue' (ID: 466)
  Prédit: 'ue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ue' → logprob: -0.05156548321247101
    2. 'ol' → logprob: -3.176565408706665
    3. 'ute' → logprob: -5.676565647125244
    4. 'u' → logprob: -5.801565647125244
    5. 'value' → logprob: -7.301565647125244
    6. 'ent' → logprob: -7.551565647125244
    7. 'ut' → logprob: -8.426565170288086
    8. 'ur' → logprob: -9.176565170288086
    9. 'ule' → logprob: -9.176565170288086
    10. 'ente' → logprob: -9.801565170288086

Token 480: ' est' (ID: 893)
  Prédit: 'est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.01100726518779993
    2. ' est' → logprob: -5.011007308959961
    3. '#' → logprob: -6.011007308959961
    4. 'la' → logprob: -6.511007308959961
    5. 'a' → logprob: -8.386007308959961
    6. '```' → logprob: -10.261007308959961
    7. ''est' → logprob: -10.886007308959961
    8. 'es' → logprob: -11.511007308959961
    9. 'iest' → logprob: -12.261007308959961
    10. 'sera' → logprob: -12.386007308959961

Token 481: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.004255169536918402
    2. 'min' → logprob: -5.629255294799805
    3. '```' → logprob: -8.004255294799805
    4. 'minimum' → logprob: -9.129255294799805
    5. 'plus' → logprob: -9.754255294799805
    6. ' la' → logprob: -9.879255294799805
    7. ' minimale' → logprob: -10.004255294799805
    8. 'minimal' → logprob: -10.879255294799805
    9. 'moins' → logprob: -11.504255294799805
    10. '   ' → logprob: -11.629255294799805

Token 482: ' plus' (ID: 2932)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.0016403080662712455
    2. 'val' → logprob: -6.501640319824219
    3. 'moins' → logprob: -9.251640319824219
    4. 'Plus' → logprob: -11.126640319824219
    5. '```' → logprob: -11.376640319824219
    6. ' plus' → logprob: -12.001640319824219
    7. 'mo' → logprob: -12.751640319824219
    8. 'minimum' → logprob: -13.501640319824219
    9. 'min' → logprob: -14.001640319824219
    10. '_plus' → logprob: -14.126640319824219

Token 483: ' faible' (ID: 75786)
  Prédit: 'pet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pet' → logprob: -0.023811373859643936
    2. 'fa' → logprob: -4.148811340332031
    3. 'pro' → logprob: -5.398811340332031
    4. '```' → logprob: -6.523811340332031
    5. 'small' → logprob: -6.898811340332031
    6. 'b' → logprob: -8.148811340332031
    7. ' faible' → logprob: -8.523811340332031
    8. ' petite' → logprob: -9.773811340332031
    9. 'import' → logprob: -10.148811340332031
    10. 'min' → logprob: -10.648811340332031

Token 484: '.

' (ID: 364)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.7954958821064793e-05
    2. ' print' → logprob: -11.125018119812012
    3. '#' → logprob: -13.625018119812012
    4. '
' → logprob: -14.375018119812012
    5. ')' → logprob: -14.875018119812012
    6. '.' → logprob: -15.125018119812012
    7. '<|end|>' → logprob: -15.125018119812012
    8. '.print' → logprob: -15.500018119812012
    9. ',' → logprob: -16.125017166137695
    10. '#print' → logprob: -16.500017166137695

Token 485: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -9.088346359931165e-07
    2. ' print' → logprob: -14.125000953674316
    3. 'pr' → logprob: -16.375
    4. 'prit' → logprob: -18.125
    5. 'return' → logprob: -18.375
    6. 'prin' → logprob: -18.375
    7. 'taste' → logprob: -19.0
    8. '```' → logprob: -20.375
    9. '(print' → logprob: -21.375
    10. '#' → logprob: -21.625

Token 486: ' Maintenant' (ID: 163349)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. ' print' → logprob: -18.25
    3. '#' → logprob: -18.625
    4. '#print' → logprob: -20.875
    5. '```' → logprob: -21.25
    6. '
' → logprob: -23.375
    7. 'Print' → logprob: -23.5
    8. '   ' → logprob: -23.625
    9. 'prin' → logprob: -23.625
    10. '	print' → logprob: -24.25

Token 487: ',' (ID: 11)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00399101572111249
    2. '#' → logprob: -6.12899112701416
    3. ' print' → logprob: -6.37899112701416
    4. ',' → logprob: -9.62899112701416
    5. 'if' → logprob: -11.50399112701416
    6. '=' → logprob: -12.37899112701416
    7. 'for' → logprob: -12.75399112701416
    8. '
' → logprob: -12.87899112701416
    9. 'pr' → logprob: -12.87899112701416
    10. '#print' → logprob: -12.87899112701416

Token 488: ' nous' (ID: 6176)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.1472419600977446e-06
    2. '#' → logprob: -14.375000953674316
    3. ' print' → logprob: -15.250000953674316
    4. 'prin' → logprob: -16.375001907348633
    5. 'pr' → logprob: -17.125001907348633
    6. 'if' → logprob: -17.750001907348633
    7. 'for' → logprob: -17.875001907348633
    8. 'taste' → logprob: -18.000001907348633
    9. 'prit' → logprob: -18.625001907348633
    10. '#print' → logprob: -18.750001907348633

Token 489: ' calcul' (ID: 7559)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.03138282522559166
    2. '#' → logprob: -3.5313827991485596
    3. ' print' → logprob: -6.656383037567139
    4. 'if' → logprob: -8.40638256072998
    5. ' #' → logprob: -9.90638256072998
    6. '#print' → logprob: -11.15638256072998
    7. ' =' → logprob: -11.65638256072998
    8. '.print' → logprob: -11.90638256072998
    9. '=' → logprob: -12.40638256072998
    10. 'n' → logprob: -12.40638256072998

Token 490: 'ons' (ID: 1808)
  Prédit: 'ons'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ons' → logprob: -0.0006433341186493635
    2. '#' → logprob: -7.500643253326416
    3. 'on' → logprob: -9.875643730163574
    4. 'er' → logprob: -10.375643730163574
    5. 'ont' → logprob: -12.250643730163574
    6. 'cons' → logprob: -13.750643730163574
    7. 'sons' → logprob: -14.375643730163574
    8. 'print' → logprob: -15.500643730163574
    9. '```' → logprob: -15.875643730163574
    10. 'e' → logprob: -16.000642776489258

Token 491: ' et' (ID: 859)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.03248397260904312
    2. 'abs' → logprob: -4.28248405456543
    3. 'le' → logprob: -4.65748405456543
    4. 'la' → logprob: -6.15748405456543
    5. 'taste' → logprob: -6.40748405456543
    6. 'result' → logprob: -6.53248405456543
    7. '#' → logprob: -6.78248405456543
    8. 'et' → logprob: -7.90748405456543
    9. 't' → logprob: -8.28248405456543
    10. 'max' → logprob: -8.65748405456543

Token 492: ' affich' (ID: 90179)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0028770342469215393
    2. 'im' → logprob: -6.252877235412598
    3. 'aff' → logprob: -7.627877235412598
    4. '#' → logprob: -7.752877235412598
    5. ' print' → logprob: -11.377877235412598
    6. '#print' → logprob: -12.252877235412598
    7. 'pr' → logprob: -12.502877235412598
    8. 'prints' → logprob: -12.627877235412598
    9. 'prin' → logprob: -13.502877235412598
    10. ' imprim' → logprob: -13.627877235412598

Token 493: 'ons' (ID: 1808)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.21362076699733734
    2. '(abs' → logprob: -2.713620662689209
    3. '(t' → logprob: -2.838620662689209
    4. '(' → logprob: -4.338620662689209
    5. 't' → logprob: -4.338620662689209
    6. 'abs' → logprob: -4.588620662689209
    7. 'ons' → logprob: -4.963620662689209
    8. 'e' → logprob: -5.088620662689209
    9. 'er' → logprob: -5.213620662689209
    10. '(print' → logprob: -5.463620662689209

Token 494: ' le' (ID: 505)
  Prédit: 'taste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'taste' → logprob: -0.7277861833572388
    2. 'abs' → logprob: -1.2277861833572388
    3. '(t' → logprob: -2.102786064147949
    4. '(abs' → logprob: -2.727786064147949
    5. 't' → logprob: -3.352786064147949
    6. 'print' → logprob: -6.852786064147949
    7. '(' → logprob: -8.47778606414795
    8. '(-' → logprob: -8.72778606414795
    9. ' taste' → logprob: -9.35278606414795
    10. ' abs' → logprob: -11.10278606414795

Token 495: ' résultat' (ID: 62556)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.014790797606110573
    2. 'produ' → logprob: -4.389791011810303
    3. 'result' → logprob: -7.389791011810303
    4. 'rés' → logprob: -7.639791011810303
    5. '#' → logprob: -7.889791011810303
    6. 'nombre' → logprob: -8.264790534973145
    7. 'plus' → logprob: -8.889790534973145
    8. 'c' → logprob: -9.014790534973145
    9. 'minimum' → logprob: -9.389790534973145
    10. 'cube' → logprob: -10.139790534973145

Token 496: ' final' (ID: 1721)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -6.704273118884885e-07
    2. '```' → logprob: -14.750000953674316
    3. '
' → logprob: -15.625000953674316
    4. ' print' → logprob: -17.5
    5. '#' → logprob: -17.625
    6. '+' → logprob: -19.0
    7. '(print' → logprob: -19.375
    8. '``' → logprob: -19.5
    9. 'result' → logprob: -19.625
    10. 'for' → logprob: -19.625

Token 497: '.
' (ID: 558)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.128163257315464e-07
    2. '```' → logprob: -16.125
    3. '*' → logprob: -16.25
    4. 'abs' → logprob: -18.0
    5. ' print' → logprob: -18.125
    6. '
' → logprob: -18.625
    7. '+' → logprob: -18.625
    8. '#' → logprob: -19.0
    9. '-' → logprob: -19.0
    10. '-print' → logprob: -19.625

Token 498: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.9361264946837764e-07
    2. '```' → logprob: -16.25
    3. ' print' → logprob: -17.0
    4. 'if' → logprob: -17.125
    5. '
' → logprob: -19.125
    6. 'result' → logprob: -20.0
    7. '#' → logprob: -20.375
    8. 'for' → logprob: -20.75
    9. 'abs' → logprob: -20.75
    10. '+' → logprob: -21.5

Token 499: ' Dé' (ID: 27247)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -6.704273118884885e-07
    2. 'result' → logprob: -14.875000953674316
    3. ' print' → logprob: -15.375000953674316
    4. '```' → logprob: -16.75
    5. '#' → logprob: -18.125
    6. '
' → logprob: -18.25
    7. 'abs' → logprob: -19.25
    8. '+' → logprob: -20.0
    9. 'for' → logprob: -20.0
    10. 'answer' → logprob: -20.125

Token 500: 'ta' (ID: 1524)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00011915886716451496
    2. 'result' → logprob: -10.25011920928955
    3. 'pr' → logprob: -10.50011920928955
    4. 'f' → logprob: -11.62511920928955
    5. '#' → logprob: -11.75011920928955
    6. 'pression' → logprob: -11.75011920928955
    7. 'prin' → logprob: -12.25011920928955
    8. 'term' → logprob: -12.62511920928955
    9. '#print' → logprob: -12.75011920928955
    10. 'termin' → logprob: -12.87511920928955

Token 501: 'illons' (ID: 97340)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.039109230041503906
    2. ' print' → logprob: -3.414109230041504
    3. '#' → logprob: -5.414109230041504
    4. '#print' → logprob: -7.664109230041504
    5. 'f' → logprob: -9.789109230041504
    6. 'but' → logprob: -9.914109230041504
    7. ' #' → logprob: -10.039109230041504
    8. 'pour' → logprob: -10.289109230041504
    9. 'cal' → logprob: -10.539109230041504
    10. 'ploy' → logprob: -10.789109230041504

Token 502: ' chaque' (ID: 21194)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.030282285064458847
    2. '(' → logprob: -3.9052822589874268
    3. 'abs' → logprob: -5.655282497406006
    4. '(abs' → logprob: -5.780282497406006
    5. '(print' → logprob: -6.905282497406006
    6. '#' → logprob: -7.905282497406006
    7. '(t' → logprob: -8.155282020568848
    8. ' print' → logprob: -8.155282020568848
    9. '(
' → logprob: -8.155282020568848
    10. 'for' → logprob: -8.405282020568848

Token 503: ' partie' (ID: 22139)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.017133427783846855
    2. '#' → logprob: -4.7671332359313965
    3. '```' → logprob: -5.7671332359313965
    4. 'pas' → logprob: -6.5171332359313965
    5. ' print' → logprob: -7.0171332359313965
    6. 's' → logprob: -7.6421332359313965
    7. 'abs' → logprob: -8.142133712768555
    8. 'result' → logprob: -8.267133712768555
    9. '(
' → logprob: -8.267133712768555
    10. ' #' → logprob: -8.392133712768555

Token 504: ' du' (ID: 1462)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0003187810070812702
    2. 'abs' → logprob: -9.37531852722168
    3. ' print' → logprob: -9.50031852722168
    4. '(
' → logprob: -10.25031852722168
    5. 'pr' → logprob: -10.50031852722168
    6. '#' → logprob: -10.62531852722168
    7. '(' → logprob: -10.62531852722168
    8. '(print' → logprob: -11.75031852722168
    9. 'result' → logprob: -12.12531852722168
    10. 'for' → logprob: -12.25031852722168

Token 505: ' calcul' (ID: 7559)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.03488875553011894
    2. 'abs' → logprob: -3.409888744354248
    3. 'code' → logprob: -7.159888744354248
    4. '#' → logprob: -8.534889221191406
    5. 'taste' → logprob: -9.909889221191406
    6. ' print' → logprob: -10.159889221191406
    7. 'result' → logprob: -10.159889221191406
    8. 'if' → logprob: -10.784889221191406
    9. 'pr' → logprob: -10.784889221191406
    10. 'str' → logprob: -10.909889221191406

Token 506: ' :
' (ID: 10039)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0003454753023106605
    2. 'result' → logprob: -8.875345230102539
    3. 'abs' → logprob: -9.125345230102539
    4. '(' → logprob: -11.000345230102539
    5. 'pr' → logprob: -11.250345230102539
    6. '#' → logprob: -11.375345230102539
    7. '(
' → logprob: -11.750345230102539
    8. '(print' → logprob: -12.000345230102539
    9. '(abs' → logprob: -12.125345230102539
    10. 'min' → logprob: -12.625345230102539

Token 507: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.762356209335849e-05
    2. 'result' → logprob: -11.00003719329834
    3. 'abs' → logprob: -11.12503719329834
    4. '```' → logprob: -13.12503719329834
    5. ' print' → logprob: -13.50003719329834
    6. '#' → logprob: -13.87503719329834
    7. 'min' → logprob: -15.50003719329834
    8. 'answer' → logprob: -15.75003719329834
    9. 'sum' → logprob: -15.87503719329834
    10. '2' → logprob: -16.125038146972656

Token 508: ' n' (ID: 297)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0008859686204232275
    2. 'abs' → logprob: -7.125885963439941
    3. ' print' → logprob: -10.125885963439941
    4. 'result' → logprob: -11.625885963439941
    5. '```' → logprob: -12.250885963439941
    6. '#' → logprob: -12.750885963439941
    7. 'n' → logprob: -12.750885963439941
    8. 'if' → logprob: -12.750885963439941
    9. 'for' → logprob: -13.125885963439941
    10. 'min' → logprob: -13.125885963439941

Token 509: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.5561865568161011
    2. ' *' → logprob: -0.9311865568161011
    3. '-' → logprob: -4.681186676025391
    4. ' -' → logprob: -4.931186676025391
    5. '**' → logprob: -5.306186676025391
    6. '%' → logprob: -5.556186676025391
    7. '//' → logprob: -6.181186676025391
    8. ' //' → logprob: -6.806186676025391
    9. ' %' → logprob: -7.306186676025391
    10. '+' → logprob: -7.306186676025391

Token 510: ' l' (ID: 305)
  Prédit: 'taste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'taste' → logprob: -0.040834639221429825
    2. 'abs' → logprob: -4.040834426879883
    3. '(t' → logprob: -5.040834426879883
    4. '(n' → logprob: -5.665834426879883
    5. ' taste' → logprob: -5.790834426879883
    6. 'n' → logprob: -6.165834426879883
    7. '2' → logprob: -6.415834426879883
    8. '100' → logprob: -6.540834426879883
    9. '(abs' → logprob: -6.540834426879883
    10. '(' → logprob: -6.665834426879883

Token 511: ' :' (ID: 712)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.9006097316741943
    2. ' +' → logprob: -1.2756097316741943
    3. '*' → logprob: -1.6506097316741943
    4. ' *' → logprob: -2.6506097316741943
    5. '*n' → logprob: -3.5256097316741943
    6. '<|end|>' → logprob: -5.150609970092773
    7. ' ' → logprob: -5.775609970092773
    8. '-' → logprob: -6.025609970092773
    9. ' -' → logprob: -6.150609970092773
    10. '+n' → logprob: -6.150609970092773

Token 512: ' produit' (ID: 29429)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -1.0838831663131714
    2. 'n' → logprob: -1.2088831663131714
    3. '*n' → logprob: -1.4588831663131714
    4. ' *' → logprob: -2.333883285522461
    5. ' n' → logprob: -3.583883285522461
    6. 'print' → logprob: -6.333883285522461
    7. '(n' → logprob: -7.333883285522461
    8. '*l' → logprob: -7.458883285522461
    9. ')' → logprob: -7.583883285522461
    10. '*t' → logprob: -7.833883285522461

Token 513: ' le' (ID: 505)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.7782195210456848
    2. ' *' → logprob: -0.9032195210456848
    3. '*n' → logprob: -2.02821946144104
    4. '*l' → logprob: -6.778219699859619
    5. ' +' → logprob: -7.403219699859619
    6. ')' → logprob: -7.403219699859619
    7. 'n' → logprob: -7.903219699859619
    8. '+' → logprob: -8.028219223022461
    9. '*t' → logprob: -8.653219223022461
    10. ',' → logprob: -8.903219223022461

Token 514: ' nombre' (ID: 9733)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.31233853101730347
    2. 'plus' → logprob: -2.4373385906219482
    3. 'n' → logprob: -2.5623385906219482
    4. ' nombre' → logprob: -2.8123385906219482
    5. 'me' → logprob: -4.437338352203369
    6. ' n' → logprob: -4.937338352203369
    7. ' plus' → logprob: -5.187338352203369
    8. 'prem' → logprob: -5.437338352203369
    9. ' résultat' → logprob: -6.437338352203369
    10. '+' → logprob: -6.562338352203369

Token 515: ' total' (ID: 3609)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.5856176018714905
    2. ' *' → logprob: -0.8356176018714905
    3. '*l' → logprob: -5.335617542266846
    4. '*n' → logprob: -5.585617542266846
    5. '*t' → logprob: -8.710618019104004
    6. ' +' → logprob: -8.835618019104004
    7. ' ' → logprob: -8.835618019104004
    8. '+' → logprob: -8.960618019104004
    9. ')' → logprob: -9.210618019104004
    10. '<|end|>' → logprob: -9.460618019104004

Token 516: ' d' (ID: 272)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.12952470779418945
    2. ' *' → logprob: -2.1295247077941895
    3. '*l' → logprob: -6.6295247077941895
    4. '*n' → logprob: -6.8795247077941895
    5. '*t' → logprob: -9.129524230957031
    6. ' ' → logprob: -10.379524230957031
    7. ')' → logprob: -10.629524230957031
    8. ',' → logprob: -11.129524230957031
    9. '+' → logprob: -12.004524230957031
    10. ' n' → logprob: -12.129524230957031

Token 517: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.5342044830322266
    2. 'élé' → logprob: -1.1592044830322266
    3. ''é' → logprob: -3.2842044830322266
    4. ''ent' → logprob: -4.034204483032227
    5. 'e' → logprob: -4.909204483032227
    6. 'é' → logprob: -5.034204483032227
    7. ''él' → logprob: -5.034204483032227
    8. ''esp' → logprob: -5.909204483032227
    9. ' éléments' → logprob: -6.034204483032227
    10. '')' → logprob: -6.284204483032227

Token 518: 'élé' (ID: 15228)
  Prédit: 'élé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.568284273147583
    2. 'b' → logprob: -1.193284273147583
    3. 'n' → logprob: -3.943284273147583
    4. 'elements' → logprob: -4.193284034729004
    5. 't' → logprob: -4.443284034729004
    6. 'obj' → logprob: -4.943284034729004
    7. '```' → logprob: -4.943284034729004
    8. 'œ' → logprob: -5.193284034729004
    9. 'e' → logprob: -5.318284034729004
    10. 'val' → logprob: -5.443284034729004

Token 519: 'ments' (ID: 1626)
  Prédit: 'ments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ments' → logprob: -0.009903056547045708
    2. 'éments' → logprob: -5.5099029541015625
    3. 'ment' → logprob: -5.8849029541015625
    4. 'ements' → logprob: -6.0099029541015625
    5. 'ément' → logprob: -9.259902954101562
    6. 'm' → logprob: -9.384902954101562
    7. 'ém' → logprob: -9.509902954101562
    8. 'ents' → logprob: -9.759902954101562
    9. 'e' → logprob: -9.884902954101562
    10. 'é' → logprob: -10.259902954101562

Token 520: ' multip' (ID: 17524)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.28650957345962524
    2. ' *' → logprob: -1.9115095138549805
    3. '+' → logprob: -3.0365095138549805
    4. ' +' → logprob: -3.6615095138549805
    5. '*n' → logprob: -3.7865095138549805
    6. '*l' → logprob: -6.1615095138549805
    7. ')' → logprob: -7.4115095138549805
    8. '#' → logprob: -7.9115095138549805
    9. ',' → logprob: -8.03650951385498
    10. 'n' → logprob: -8.66150951385498

Token 521: 'lié' (ID: 102412)
  Prédit: 'iqué'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iqué' → logprob: -0.10417639464139938
    2. 'lié' → logprob: -2.4791762828826904
    3. 'iqu' → logprob: -5.1041765213012695
    4. 'n' → logprob: -5.9791765213012695
    5. 'li' → logprob: -6.6041765213012695
    6. 'l' → logprob: -6.8541765213012695
    7. 'ic' → logprob: -6.9791765213012695
    8. 'iquant' → logprob: -7.1041765213012695
    9. 'ique' → logprob: -7.8541765213012695
    10. ' n' → logprob: -8.10417652130127

Token 522: ' par' (ID: 686)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.153618335723877
    2. '<|end|>' → logprob: -1.278618335723877
    3. ' par' → logprob: -1.403618335723877
    4. ' +' → logprob: -3.528618335723877
    5. ')' → logprob: -3.653618335723877
    6. '(n' → logprob: -3.903618335723877
    7. 'by' → logprob: -3.903618335723877
    8. ' by' → logprob: -4.028618335723877
    9. 'par' → logprob: -4.653618335723877
    10. '*' → logprob: -4.653618335723877

Token 523: ' la' (ID: 557)
  Prédit: 'taste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'taste' → logprob: -0.031216921284794807
    2. ' taste' → logprob: -3.781216859817505
    3. 'l' → logprob: -5.531217098236084
    4. 't' → logprob: -6.781217098236084
    5. '100' → logprob: -7.031217098236084
    6. 'n' → logprob: -7.281217098236084
    7. ' l' → logprob: -8.906216621398926
    8. ' ' → logprob: -9.031216621398926
    9. ' n' → logprob: -9.218716621398926
    10. '(n' → logprob: -9.531216621398926

Token 524: ' valeur' (ID: 41664)
  Prédit: 'taste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'taste' → logprob: -0.03627858683466911
    2. '(n' → logprob: -3.911278486251831
    3. ' taste' → logprob: -4.78627872467041
    4. 'n' → logprob: -5.91127872467041
    5. ' (' → logprob: -6.66127872467041
    6. '(t' → logprob: -7.53627872467041
    7. 't' → logprob: -7.66127872467041
    8. 'l' → logprob: -7.66127872467041
    9. '(' → logprob: -7.91127872467041
    10. ' n' → logprob: -8.03627872467041

Token 525: ' de' (ID: 334)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.27141091227531433
    2. '+' → logprob: -1.8964109420776367
    3. ')' → logprob: -3.2714109420776367
    4. ' *' → logprob: -4.021410942077637
    5. ' +' → logprob: -4.521410942077637
    6. '*n' → logprob: -5.021410942077637
    7. '*l' → logprob: -5.146410942077637
    8. '*t' → logprob: -5.396410942077637
    9. ' )' → logprob: -6.896410942077637
    10. '<|end|>' → logprob: -7.396410942077637

Token 526: ' départ' (ID: 32693)
  Prédit: 'taste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'taste' → logprob: -0.6401883363723755
    2. 'l' → logprob: -0.7651883363723755
    3. ' taste' → logprob: -5.265188217163086
    4. ' l' → logprob: -6.890188217163086
    5. 'n' → logprob: -7.390188217163086
    6. 't' → logprob: -8.140188217163086
    7. ' n' → logprob: -9.765188217163086
    8. '	l' → logprob: -9.827688217163086
    9. ' ' → logprob: -10.202688217163086
    10. '(l' → logprob: -10.515188217163086

Token 527: ' l' (ID: 305)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.20051053166389465
    2. ' *' → logprob: -1.8255105018615723
    3. '*n' → logprob: -4.075510501861572
    4. '+' → logprob: -6.950510501861572
    5. 'print' → logprob: -7.450510501861572
    6. ')' → logprob: -7.450510501861572
    7. ' +' → logprob: -7.575510501861572
    8. 'n' → logprob: -7.950510501861572
    9. ' n' → logprob: -8.95051097869873
    10. '#' → logprob: -9.32551097869873

Token 528: ',
' (ID: 412)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.21791863441467285
    2. ' *' → logprob: -1.9679186344146729
    3. '*n' → logprob: -3.467918634414673
    4. 'print' → logprob: -3.717918634414673
    5. 'n' → logprob: -8.717918395996094
    6. '#' → logprob: -9.092918395996094
    7. ' print' → logprob: -9.342918395996094
    8. '+' → logprob: -9.592918395996094
    9. '*l' → logprob: -10.467918395996094
    10. ')' → logprob: -10.842918395996094

Token 529: '#' (ID: 2)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.30269327759742737
    2. ' *' → logprob: -2.3026933670043945
    3. '*n' → logprob: -2.6776933670043945
    4. '+' → logprob: -3.5526933670043945
    5. ' +' → logprob: -3.6776933670043945
    6. 'n' → logprob: -4.0526933670043945
    7. 'print' → logprob: -4.6776933670043945
    8. ')' → logprob: -5.3026933670043945
    9. '#' → logprob: -6.0526933670043945
    10. '-' → logprob: -6.6776933670043945

Token 530: ' ce' (ID: 2357)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -1.0480839014053345
    2. '+' → logprob: -1.4230839014053345
    3. 'n' → logprob: -1.5480839014053345
    4. ' n' → logprob: -2.673083782196045
    5. '"' → logprob: -3.048083782196045
    6. ' -' → logprob: -4.173083782196045
    7. '*' → logprob: -4.673083782196045
    8. '-' → logprob: -5.048083782196045
    9. ' (' → logprob: -5.048083782196045
    10. ' *' → logprob: -5.298083782196045

Token 531: ' qui' (ID: 2780)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.7348017692565918
    2. '+' → logprob: -0.7348017692565918
    3. ' +' → logprob: -4.234801769256592
    4. ' *' → logprob: -4.609801769256592
    5. '#' → logprob: -5.109801769256592
    6. 'n' → logprob: -6.234801769256592
    7. '+n' → logprob: -6.359801769256592
    8. '*n' → logprob: -6.484801769256592
    9. ')' → logprob: -6.734801769256592
    10. ' n' → logprob: -7.234801769256592

Token 532: ' donner' (ID: 32394)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2165234535932541
    2. ' +' → logprob: -1.7165234088897705
    3. '*' → logprob: -5.21652364730835
    4. '-' → logprob: -5.59152364730835
    5. ' -' → logprob: -6.84152364730835
    6. ' n' → logprob: -7.09152364730835
    7. '#' → logprob: -7.09152364730835
    8. '+n' → logprob: -7.34152364730835
    9. ' *' → logprob: -7.84152364730835
    10. 'n' → logprob: -7.84152364730835

Token 533: 'ait' (ID: 1271)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.45341747999191284
    2. ' n' → logprob: -1.9534175395965576
    3. ' *' → logprob: -2.0784175395965576
    4. ')' → logprob: -3.9534175395965576
    5. 'n' → logprob: -4.3284173011779785
    6. '*n' → logprob: -4.3284173011779785
    7. '+' → logprob: -4.4534173011779785
    8. ' ' → logprob: -4.4534173011779785
    9. 'e' → logprob: -4.7034173011779785
    10. ' +' → logprob: -5.8284173011779785

Token 534: ' la' (ID: 557)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.6170965433120728
    2. 'n' → logprob: -0.8670965433120728
    3. '"' → logprob: -4.742096424102783
    4. ' (' → logprob: -4.867096424102783
    5. '(n' → logprob: -4.992096424102783
    6. ' ' → logprob: -5.492096424102783
    7. ' l' → logprob: -5.992096424102783
    8. ' "' → logprob: -6.117096424102783
    9. ')' → logprob: -6.742096424102783
    10. ' )' → logprob: -6.742096424102783

Token 535: ' somme' (ID: 64484)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.1513950675725937
    2. ' n' → logprob: -2.401395082473755
    3. '(n' → logprob: -3.151395082473755
    4. ' (' → logprob: -5.901394844055176
    5. 'l' → logprob: -6.776394844055176
    6. 'sum' → logprob: -6.901394844055176
    7. 'print' → logprob: -7.651394844055176
    8. '(' → logprob: -8.026394844055176
    9. '+' → logprob: -8.776394844055176
    10. ' sum' → logprob: -9.026394844055176

Token 536: ' si' (ID: 1784)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.7172930240631104
    2. ' *' → logprob: -1.4672930240631104
    3. '+' → logprob: -1.9672930240631104
    4. ' +' → logprob: -2.2172930240631104
    5. ' -' → logprob: -4.342292785644531
    6. '*n' → logprob: -4.467292785644531
    7. '-' → logprob: -5.467292785644531
    8. 'n' → logprob: -6.467292785644531
    9. '#' → logprob: -7.967292785644531
    10. ' n' → logprob: -8.092292785644531

Token 537: ' tous' (ID: 10688)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.20666943490505219
    2. ' n' → logprob: -2.206669330596924
    3. '(n' → logprob: -3.331669330596924
    4. 'l' → logprob: -3.956669330596924
    5. 'on' → logprob: -5.581669330596924
    6. '1' → logprob: -5.706669330596924
    7. ' (' → logprob: -6.081669330596924
    8. '100' → logprob: -6.081669330596924
    9. ' on' → logprob: -6.206669330596924
    10. '0' → logprob: -6.331669330596924

Token 538: ' les' (ID: 1341)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.4194693565368652
    2. '<|end|>' → logprob: -1.4194693565368652
    3. ' l' → logprob: -1.9194693565368652
    4. 'n' → logprob: -2.4194693565368652
    5. ' n' → logprob: -2.5444693565368652
    6. ')' → logprob: -2.7944693565368652
    7. ' ' → logprob: -3.7944693565368652
    8. '+' → logprob: -4.044469356536865
    9. '(n' → logprob: -4.294469356536865
    10. 'taste' → logprob: -4.919469356536865

Token 539: ' éléments' (ID: 57375)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6562075614929199
    2. ' n' → logprob: -1.15620756149292
    3. 'elements' → logprob: -2.28120756149292
    4. ' elements' → logprob: -3.78120756149292
    5. '(n' → logprob: -4.65620756149292
    6. 'élé' → logprob: -5.03120756149292
    7. 'val' → logprob: -5.40620756149292
    8. ' i' → logprob: -5.90620756149292
    9. 'numbers' → logprob: -6.03120756149292
    10. 'i' → logprob: -6.40620756149292

Token 540: ' étaient' (ID: 40979)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 541: ' ég' (ID: 33150)
  Prédit: ' ég'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ég' → logprob: -0.22618018090724945
    2. 'ég' → logprob: -1.7261801958084106
    3. 'l' → logprob: -4.601180076599121
    4. ' eg' → logprob: -5.101180076599121
    5. 'ident' → logprob: -5.601180076599121
    6. 'égal' → logprob: -6.101180076599121
    7. 'eg' → logprob: -6.476180076599121
    8. ' ident' → logprob: -8.226180076599121
    9. 'la' → logprob: -9.101180076599121
    10. 'n' → logprob: -9.726180076599121

Token 542: 'aux' (ID: 5454)
  Prédit: 'aux'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aux' → logprob: -0.0026267850771546364
    2. 'al' → logprob: -6.127626895904541
    3. 'als' → logprob: -8.127626419067383
    4. 'ales' → logprob: -9.877626419067383
    5. 'ale' → logprob: -10.002626419067383
    6. 'a' → logprob: -10.752626419067383
    7. 'alis' → logprob: -12.002626419067383
    8. '```' → logprob: -12.002626419067383
    9. 'n' → logprob: -12.877626419067383
    10. 'ais' → logprob: -13.002626419067383

Token 543: ' à' (ID: 1221)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.6982123851776123
    2. ' *' → logprob: -0.6982123851776123
    3. '*n' → logprob: -6.698212623596191
    4. '+' → logprob: -6.948212623596191
    5. ' +' → logprob: -6.948212623596191
    6. ')' → logprob: -6.948212623596191
    7. ' ' → logprob: -7.948212623596191
    8. ' ' → logprob: -8.948212623596191
    9. ' -' → logprob: -9.323212623596191
    10. ',' → logprob: -9.948212623596191

Token 544: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.014266107231378555
    2. ' l' → logprob: -4.264266014099121
    3. 'taste' → logprob: -9.514266014099121
    4. ' taste' → logprob: -11.014266014099121
    5. '	l' → logprob: -12.389266014099121
    6. 'n' → logprob: -12.639266014099121
    7. ' ' → logprob: -13.639266014099121
    8. '100' → logprob: -14.139266014099121
    9. ' ' → logprob: -14.514266014099121
    10. 't' → logprob: -14.764266014099121

Token 545: '.
' (ID: 558)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.5079564452171326
    2. '*' → logprob: -1.0079565048217773
    3. '*n' → logprob: -3.8829565048217773
    4. '+' → logprob: -5.382956504821777
    5. 'print' → logprob: -6.507956504821777
    6. ')' → logprob: -6.507956504821777
    7. ' +' → logprob: -6.757956504821777
    8. 'n' → logprob: -6.882956504821777
    9. ' -' → logprob: -7.382956504821777
    10. ' ' → logprob: -7.382956504821777

Token 546: '#' (ID: 2)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -1.0121179819107056
    2. '*' → logprob: -1.7621179819107056
    3. ' *' → logprob: -1.7621179819107056
    4. '+' → logprob: -1.7621179819107056
    5. ' -' → logprob: -2.637117862701416
    6. '-' → logprob: -4.637117862701416
    7. 'n' → logprob: -4.637117862701416
    8. ' ' → logprob: -5.012117862701416
    9. 'print' → logprob: -5.137117862701416
    10. '*n' → logprob: -5.262117862701416

Token 547: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.8295164108276367
    2. '+' → logprob: -1.0795164108276367
    3. '*n' → logprob: -2.5795164108276367
    4. '*' → logprob: -3.2045164108276367
    5. '(n' → logprob: -3.5795164108276367
    6. ' +' → logprob: -3.7045164108276367
    7. 'print' → logprob: -4.079516410827637
    8. ' n' → logprob: -4.329516410827637
    9. '+n' → logprob: -4.579516410827637
    10. ' *' → logprob: -5.204516410827637

Token 548: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.523236870765686
    2. '*' → logprob: -0.898236870765686
    3. ' ' → logprob: -9.773237228393555
    4. '+' → logprob: -11.148237228393555
    5. '*n' → logprob: -11.398237228393555
    6. '*(' → logprob: -12.398237228393555
    7. '*l' → logprob: -12.398237228393555
    8. ' ' → logprob: -12.523237228393555
    9. ' +' → logprob: -12.648237228393555
    10. '**' → logprob: -12.773237228393555

Token 549: ' (' (ID: 350)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.6966643929481506
    2. '(t' → logprob: -1.4466643333435059
    3. 'taste' → logprob: -1.5716643333435059
    4. 't' → logprob: -3.696664333343506
    5. '(l' → logprob: -4.196664333343506
    6. '(' → logprob: -5.446664333343506
    7. ' (' → logprob: -5.571664333343506
    8. '(i' → logprob: -5.946664333343506
    9. 'n' → logprob: -6.196664333343506
    10. 'l' → logprob: -6.196664333343506

Token 550: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.026576850563287735
    2. '(n' → logprob: -4.401576995849609
    3. 'l' → logprob: -5.151576995849609
    4. '1' → logprob: -5.901576995849609
    5. 'taste' → logprob: -5.901576995849609
    6. 't' → logprob: -6.276576995849609
    7. '-' → logprob: -7.901576995849609
    8. '(t' → logprob: -8.65157699584961
    9. '(l' → logprob: -9.40157699584961
    10. '2' → logprob: -10.27657699584961

Token 551: ' +' (ID: 659)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.2699321210384369
    2. ' -' → logprob: -1.5199321508407593
    3. '+' → logprob: -4.144932270050049
    4. ' +' → logprob: -6.394932270050049
    5. ' ' → logprob: -8.64493179321289
    6. '```' → logprob: -10.26993179321289
    7. '−' → logprob: -10.70743179321289
    8. '1' → logprob: -10.76993179321289
    9. '
' → logprob: -10.95743179321289
    10. ')' → logprob: -11.33243179321289

Token 552: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0023611404467374086
    2. '-' → logprob: -6.127361297607422
    3. ' ' → logprob: -8.877361297607422
    4. ')' → logprob: -12.002361297607422
    5. ' -' → logprob: -12.002361297607422
    6. 'taste' → logprob: -12.252361297607422
    7. 'l' → logprob: -12.377361297607422
    8. '
' → logprob: -12.877361297607422
    9. '```' → logprob: -12.877361297607422
    10. 't' → logprob: -13.002361297607422

Token 553: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1609201580286026
    2. '-' → logprob: -1.9109201431274414
    3. 'taste' → logprob: -8.035920143127441
    4. ')' → logprob: -9.410920143127441
    5. '(' → logprob: -9.910920143127441
    6. '2' → logprob: -10.035920143127441
    7. ' -' → logprob: -10.410920143127441
    8. 't' → logprob: -10.410920143127441
    9. '(-' → logprob: -10.535920143127441
    10. '```' → logprob: -10.910920143127441

Token 554: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001841536839492619
    2. ')//' → logprob: -6.6268415451049805
    3. '//' → logprob: -7.8768415451049805
    4. ' )' → logprob: -9.12684154510498
    5. ' //' → logprob: -10.62684154510498
    6. '）' → logprob: -14.00184154510498
    7. '")' → logprob: -15.12684154510498
    8. '#' → logprob: -15.37684154510498
    9. '   ' → logprob: -15.50184154510498
    10. ')/' → logprob: -15.50184154510498

Token 555: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.4394444227218628
    2. ' //' → logprob: -1.0644444227218628
    3. ')' → logprob: -4.564444541931152
    4. ')//' → logprob: -8.939444541931152
    5. '*' → logprob: -9.689444541931152
    6. ' )' → logprob: -10.689444541931152
    7. '```' → logprob: -10.689444541931152
    8. ' *' → logprob: -12.064444541931152
    9. '`' → logprob: -12.189444541931152
    10. ' ' → logprob: -12.314444541931152

Token 556: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.300083648762666e-05
    2. ' ' → logprob: -9.875053405761719
    3. '4' → logprob: -13.750053405761719
    4. '20' → logprob: -16.62505340576172
    5. '   ' → logprob: -16.62505340576172
    6. '1' → logprob: -16.75005340576172
    7. '6' → logprob: -16.87505340576172
    8. '```' → logprob: -17.12505340576172
    9. '  ' → logprob: -17.37505340576172
    10. '/' → logprob: -17.75005340576172

Token 557: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.3782830137643032e-05
    2. ' ' → logprob: -11.25001335144043
    3. '1' → logprob: -14.50001335144043
    4. '   ' → logprob: -16.62501335144043
    5. '```' → logprob: -16.87501335144043
    6. '  ' → logprob: -17.12501335144043
    7. '
' → logprob: -18.31251335144043
    8. '۲' → logprob: -18.62501335144043
    9. '=' → logprob: -18.75001335144043
    10. '

' → logprob: -18.81251335144043

Token 558: ' :' (ID: 712)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.3558811545372009
    2. '<|end|>' → logprob: -1.3558812141418457
    3. '*' → logprob: -3.6058812141418457
    4. ')' → logprob: -4.480881214141846
    5. '*n' → logprob: -6.605881214141846
    6. '#' → logprob: -7.480881214141846
    7. ' ' → logprob: -7.980881214141846
    8. '<|end|>' → logprob: -8.105880737304688
    9. ' )' → logprob: -8.730880737304688
    10. '*(' → logprob: -9.105880737304688

Token 559: ' calc' (ID: 25691)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.5354589223861694
    2. ' (' → logprob: -1.2854589223861694
    3. '(n' → logprob: -2.785459041595459
    4. 'n' → logprob: -3.160459041595459
    5. '(' → logprob: -4.785459041595459
    6. ' *' → logprob: -4.785459041595459
    7. ' ' → logprob: -5.285459041595459
    8. ' +' → logprob: -6.285459041595459
    9. ' sum' → logprob: -6.410459041595459
    10. 'sum' → logprob: -6.535459041595459

Token 560: 'ule' (ID: 1601)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.42064908146858215
    2. ' (' → logprob: -1.1706490516662598
    3. '(' → logprob: -4.42064905166626
    4. ')' → logprob: -4.54564905166626
    5. 'ont' → logprob: -6.17064905166626
    6. '*(' → logprob: -6.79564905166626
    7. 'ult' → logprob: -7.04564905166626
    8. 'int' → logprob: -7.54564905166626
    9. 'ulation' → logprob: -7.67064905166626
    10. 'culate' → logprob: -7.92064905166626

Token 561: ' la' (ID: 557)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.07327475398778915
    2. 'n' → logprob: -2.698274850845337
    3. ' (' → logprob: -6.073274612426758
    4. ' n' → logprob: -7.073274612426758
    5. '(' → logprob: -9.073274612426758
    6. 'l' → logprob: -10.698274612426758
    7. ')' → logprob: -11.448274612426758
    8. '((' → logprob: -11.823274612426758
    9. ')n' → logprob: -11.823274612426758
    10. 'la' → logprob: -12.573274612426758

Token 562: ' somme' (ID: 64484)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6499431133270264
    2. 's' → logprob: -0.8999431133270264
    3. 'sum' → logprob: -3.5249431133270264
    4. 'som' → logprob: -4.0249433517456055
    5. '(n' → logprob: -4.5249433517456055
    6. ' somme' → logprob: -4.6499433517456055
    7. 'val' → logprob: -6.8999433517456055
    8. '(' → logprob: -7.6499433517456055
    9. ' n' → logprob: -7.7749433517456055
    10. 'form' → logprob: -8.024943351745605

Token 563: ' des' (ID: 731)
  Prédit: 'des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'des' → logprob: -0.22885213792324066
    2. '(n' → logprob: -1.7288521528244019
    3. 'n' → logprob: -3.9788520336151123
    4. ' des' → logprob: -5.103852272033691
    5. '(i' → logprob: -7.603852272033691
    6. '(range' → logprob: -7.603852272033691
    7. 'de' → logprob: -7.728852272033691
    8. '(' → logprob: -8.103852272033691
    9. '(des' → logprob: -8.603852272033691
    10. 'range' → logprob: -8.978852272033691

Token 564: ' ent' (ID: 1121)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.049377065151929855
    2. 'range' → logprob: -3.799376964569092
    3. '1' → logprob: -4.924376964569092
    4. 'n' → logprob: -5.049376964569092
    5. ' i' → logprob: -5.174376964569092
    6. 'prem' → logprob: -5.674376964569092
    7. ' premiers' → logprob: -7.049376964569092
    8. 'ent' → logprob: -7.799376964569092
    9. '(range' → logprob: -8.42437744140625
    10. 'num' → logprob: -8.67437744140625

Token 565: 'iers' (ID: 11012)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6496922969818115
    2. 'range' → logprob: -1.6496922969818115
    3. 'iers' → logprob: -2.0246922969818115
    4. '1' → logprob: -3.5246922969818115
    5. '(range' → logprob: -3.5246922969818115
    6. '(i' → logprob: -3.7746922969818115
    7. 'ières' → logprob: -4.024692535400391
    8. '```' → logprob: -4.399692535400391
    9. ' range' → logprob: -5.399692535400391
    10. 't' → logprob: -6.024692535400391

Token 566: ' de' (ID: 334)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.6171060800552368
    2. 'range' → logprob: -1.7421060800552368
    3. 'n' → logprob: -2.2421059608459473
    4. '(range' → logprob: -2.4921059608459473
    5. '(i' → logprob: -2.6171059608459473
    6. '(' → logprob: -4.492105960845947
    7. 'i' → logprob: -4.742105960845947
    8. '()' → logprob: -6.617105960845947
    9. '1' → logprob: -6.992105960845947
    10. 'des' → logprob: -7.992105960845947

Token 567: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004153191577643156
    2. '0' → logprob: -5.504153251647949
    3. 'range' → logprob: -9.62915325164795
    4. ' ' → logprob: -11.75415325164795
    5. 'n' → logprob: -14.12915325164795
    6. '```' → logprob: -16.379152297973633
    7. ' range' → logprob: -16.504152297973633
    8. '
' → logprob: -16.504152297973633
    9. 'la' → logprob: -16.629152297973633
    10. '(range' → logprob: -17.504152297973633

Token 568: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.018485281616449356
    2. 'range' → logprob: -4.143485069274902
    3. '0' → logprob: -6.018485069274902
    4. 'n' → logprob: -11.893485069274902
    5. ' range' → logprob: -12.643485069274902
    6. '(range' → logprob: -13.518485069274902
    7. ' ' → logprob: -13.893485069274902
    8. '```' → logprob: -14.143485069274902
    9. 'la' → logprob: -14.393485069274902
    10. '(' → logprob: -15.643485069274902

Token 569: ' à' (ID: 1221)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 570: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0001146291324403137
    2. ' n' → logprob: -9.125114440917969
    3. '(n' → logprob: -13.125114440917969
    4. '	n' → logprob: -13.375114440917969
    5. '<|end|>' → logprob: -13.375114440917969
    6. ')n' → logprob: -14.750114440917969
    7. '_n' → logprob: -15.750114440917969
    8. '100' → logprob: -17.25011444091797
    9. '<n' → logprob: -17.75011444091797
    10. '```' → logprob: -17.87511444091797

Token 571: '.
' (ID: 558)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2820268869400024
    2. 'print' → logprob: -1.4070268869400024
    3. '*' → logprob: -1.6570268869400024
    4. '#' → logprob: -1.9070268869400024
    5. ' *' → logprob: -2.282026767730713
    6. 'n' → logprob: -4.157026767730713
    7. '*n' → logprob: -4.657026767730713
    8. ' )' → logprob: -6.407026767730713
    9. ',' → logprob: -6.657026767730713
    10. '+' → logprob: -6.782026767730713

Token 572: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0001725511101540178
    2. ' print' → logprob: -9.12517261505127
    3. 'result' → logprob: -10.12517261505127
    4. '-print' → logprob: -11.75017261505127
    5. '+' → logprob: -12.12517261505127
    6. 'n' → logprob: -12.50017261505127
    7. '
' → logprob: -13.62517261505127
    8. '#' → logprob: -13.87517261505127
    9. '*' → logprob: -14.00017261505127
    10. '```' → logprob: -14.25017261505127

Token 573: ' Par' (ID: 3371)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.34225720167160034
    2. ' -' → logprob: -2.092257261276245
    3. 'print' → logprob: -2.467257261276245
    4. ')' → logprob: -2.717257261276245
    5. '+' → logprob: -5.842257022857666
    6. '-n' → logprob: -5.842257022857666
    7. 'n' → logprob: -5.967257022857666
    8. '#' → logprob: -6.092257022857666
    9. '-print' → logprob: -6.592257022857666
    10. ')
' → logprob: -7.217257022857666

Token 574: ' exemple' (ID: 26320)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.2029852867126465
    2. '(n' → logprob: -1.3279852867126465
    3. '+' → logprob: -1.5779852867126465
    4. 'n' → logprob: -2.5779852867126465
    5. '*' → logprob: -3.4529852867126465
    6. '(' → logprob: -3.5779852867126465
    7. '```' → logprob: -4.3279852867126465
    8. ' n' → logprob: -4.8279852867126465
    9. ' #' → logprob: -5.0779852867126465
    10. '()' → logprob: -5.3279852867126465

Token 575: ',' (ID: 11)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -1.5777196884155273
    2. ' n' → logprob: -2.0777196884155273
    3. ',' → logprob: -2.3277196884155273
    4. ' +' → logprob: -2.4527196884155273
    5. ' (' → logprob: -2.4527196884155273
    6. '#' → logprob: -2.4527196884155273
    7. ' ,' → logprob: -2.5777196884155273
    8. ' #' → logprob: -3.2027196884155273
    9. 'n' → logprob: -3.3277196884155273
    10. '(' → logprob: -3.5777196884155273

Token 576: ' pour' (ID: 1930)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5930906534194946
    2. ' n' → logprob: -0.8430906534194946
    3. ' (' → logprob: -5.093090534210205
    4. '(n' → logprob: -5.218090534210205
    5. 'print' → logprob: -6.093090534210205
    6. '3' → logprob: -6.343090534210205
    7. '5' → logprob: -7.093090534210205
    8. '(' → logprob: -8.718091011047363
    9. ' print' → logprob: -9.218091011047363
    10. ' ' → logprob: -9.218091011047363

Token 577: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6161924600601196
    2. '3' → logprob: -0.9911924600601196
    3. '5' → logprob: -3.24119234085083
    4. ' n' → logprob: -3.36619234085083
    5. 'range' → logprob: -4.49119234085083
    6. ' ' → logprob: -6.61619234085083
    7. '#' → logprob: -7.49119234085083
    8. '4' → logprob: -7.86619234085083
    9. ' range' → logprob: -8.241192817687988
    10. 'i' → logprob: -8.241192817687988

Token 578: '=' (ID: 28)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.22191210091114044
    2. ' +' → logprob: -2.471912145614624
    3. '+' → logprob: -2.846912145614624
    4. '*' → logprob: -3.096912145614624
    5. '=' → logprob: -5.346911907196045
    6. '*(' → logprob: -5.971911907196045
    7. '(n' → logprob: -6.846911907196045
    8. ')' → logprob: -7.346911907196045
    9. ' =' → logprob: -7.846911907196045
    10. '#' → logprob: -7.846911907196045

Token 579: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.027517149224877357
    2. '5' → logprob: -4.277517318725586
    3. '6' → logprob: -4.777517318725586
    4. '4' → logprob: -6.277517318725586
    5. '10' → logprob: -6.527517318725586
    6. ' ' → logprob: -6.777517318725586
    7. '2' → logprob: -8.902517318725586
    8. 'n' → logprob: -9.027517318725586
    9. '1' → logprob: -9.652517318725586
    10. '7' → logprob: -10.902517318725586

Token 580: ',' (ID: 11)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.19444449245929718
    2. '*' → logprob: -1.9444445371627808
    3. ')' → logprob: -3.819444417953491
    4. '*(' → logprob: -4.56944465637207
    5. '#' → logprob: -7.69444465637207
    6. '*n' → logprob: -8.31944465637207
    7. ':' → logprob: -8.81944465637207
    8. ')*' → logprob: -9.56944465637207
    9. '(n' → logprob: -9.56944465637207
    10. ',' → logprob: -9.69444465637207

Token 581: ' cela' (ID: 17542)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.45612290501594543
    2. '3' → logprob: -2.331122875213623
    3. 'n' → logprob: -2.331122875213623
    4. 'print' → logprob: -3.081122875213623
    5. ' (' → logprob: -3.456122875213623
    6. '(n' → logprob: -3.581122875213623
    7. ' ' → logprob: -4.331122875213623
    8. '4' → logprob: -4.831122875213623
    9. 'result' → logprob: -4.956122875213623
    10. '(' → logprob: -5.206122875213623

Token 582: ' fait' (ID: 7473)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6032407879829407
    2. '*' → logprob: -1.728240728378296
    3. ' *' → logprob: -1.853240728378296
    4. ' #' → logprob: -2.603240728378296
    5. 'est' → logprob: -4.228240966796875
    6. ' s' → logprob: -4.978240966796875
    7. '=' → logprob: -5.978240966796875
    8. '+' → logprob: -6.103240966796875
    9. ' ' → logprob: -6.103240966796875
    10. ' est' → logprob: -6.228240966796875

Token 583: ' ' (ID: 220)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.1603928953409195
    2. ' ' → logprob: -1.9103928804397583
    3. '3' → logprob: -9.660392761230469
    4. ' ' → logprob: -10.035392761230469
    5. '(' → logprob: -10.785392761230469
    6. '9' → logprob: -11.160392761230469
    7. ' (' → logprob: -11.535392761230469
    8. '```' → logprob: -11.785392761230469
    9. '   ' → logprob: -13.535392761230469
    10. 'n' → logprob: -13.910392761230469

Token 584: '1' (ID: 16)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -5.931863051955588e-05
    2. ' ' → logprob: -10.250059127807617
    3. '3' → logprob: -10.875059127807617
    4. '(' → logprob: -12.375059127807617
    5. '```' → logprob: -14.750059127807617
    6. '0' → logprob: -16.375059127807617
    7. 'n' → logprob: -16.750059127807617
    8. '1' → logprob: -16.750059127807617
    9. '(n' → logprob: -17.125059127807617
    10. 'sum' → logprob: -17.500059127807617

Token 585: '+' (ID: 10)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.19569513201713562
    2. ' *' → logprob: -2.070695161819458
    3. '+' → logprob: -3.320695161819458
    4. '*' → logprob: -4.320694923400879
    5. ' ' → logprob: -6.820694923400879
    6. '*(' → logprob: -7.945694923400879
    7. ',' → logprob: -8.195694923400879
    8. '2' → logprob: -9.070694923400879
    9. '   ' → logprob: -9.820694923400879
    10. '3' → logprob: -10.070694923400879

Token 586: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00979681871831417
    2. ' ' → logprob: -4.759796619415283
    3. '3' → logprob: -6.759796619415283
    4. '```' → logprob: -11.509797096252441
    5. '+' → logprob: -12.134797096252441
    6. '
' → logprob: -13.384797096252441
    7. '  ' → logprob: -13.634797096252441
    8. '6' → logprob: -14.634797096252441
    9. ' +' → logprob: -14.822297096252441
    10. ' ' → logprob: -15.072297096252441

Token 587: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.38767945766448975
    2. ' +' → logprob: -1.1376794576644897
    3. '3' → logprob: -7.387679576873779
    4. '```' → logprob: -9.137679100036621
    5. ',' → logprob: -10.887679100036621
    6. '*' → logprob: -11.262679100036621
    7. ' ' → logprob: -11.887679100036621
    8. ' ' → logprob: -12.012679100036621
    9. '...' → logprob: -12.012679100036621
    10. '=' → logprob: -12.137679100036621

Token 588: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -9.639096970204264e-05
    2. ' ' → logprob: -9.250096321105957
    3. '```' → logprob: -16.125097274780273
    4. '
' → logprob: -17.000097274780273
    5. '۳' → logprob: -18.000097274780273
    6. '' → logprob: -18.500097274780273
    7. '+' → logprob: -18.562597274780273
    8. '３' → logprob: -18.937597274780273
    9. '`' → logprob: -19.187597274780273
    10. ' ' → logprob: -19.750097274780273

Token 589: '=' (ID: 28)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5293340086936951
    2. ' *' → logprob: -1.1543340682983398
    3. '*' → logprob: -3.65433406829834
    4. ' -' → logprob: -4.02933406829834
    5. '#' → logprob: -4.27933406829834
    6. ' )' → logprob: -4.27933406829834
    7. '*n' → logprob: -5.27933406829834
    8. ' #' → logprob: -5.52933406829834
    9. ')*' → logprob: -6.15433406829834
    10. '```' → logprob: -6.27933406829834

Token 590: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.038299329578876495
    2. ' ' → logprob: -3.288299322128296
    3. '3' → logprob: -8.288299560546875
    4. '```' → logprob: -13.100799560546875
    5. '(' → logprob: -13.850799560546875
    6. '9' → logprob: -14.788299560546875
    7. ' (' → logprob: -15.350799560546875
    8. '' → logprob: -15.350799560546875
    9. '' → logprob: -15.413299560546875
    10. ' ' → logprob: -15.788299560546875

Token 591: '.' (ID: 13)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -1.0541105270385742
    2. ' -' → logprob: -1.4291105270385742
    3. ' *' → logprob: -1.9291105270385742
    4. ')' → logprob: -2.054110527038574
    5. '-' → logprob: -3.054110527038574
    6. '*n' → logprob: -3.179110527038574
    7. ' +' → logprob: -3.929110527038574
    8. '+' → logprob: -4.929110527038574
    9. 'n' → logprob: -5.179110527038574
    10. '#' → logprob: -5.304110527038574

Token 592: ' Nous' (ID: 20193)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.9992090463638306
    2. '*' → logprob: -1.1242090463638306
    3. ' *' → logprob: -1.9992090463638306
    4. '-' → logprob: -2.374208927154541
    5. ')' → logprob: -3.749208927154541
    6. '*n' → logprob: -3.749208927154541
    7. 'n' → logprob: -4.124208927154541
    8. '#' → logprob: -5.249208927154541
    9. ' n' → logprob: -6.124208927154541
    10. ' +' → logprob: -6.749208927154541

Token 593: ' utilis' (ID: 18688)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.37297841906547546
    2. '#' → logprob: -1.8729784488677979
    3. ' *' → logprob: -2.497978448867798
    4. '-' → logprob: -3.872978448867798
    5. '+' → logprob: -3.997978448867798
    6. ' #' → logprob: -4.122978210449219
    7. ')' → logprob: -4.622978210449219
    8. ' -' → logprob: -4.997978210449219
    9. ' +' → logprob: -6.872978210449219
    10. ' ' → logprob: -8.122978210449219

Token 594: 'ons' (ID: 1808)
  Prédit: 'ons'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ons' → logprob: -0.00018327576981391758
    2. 'on' → logprob: -9.00018310546875
    3. '#' → logprob: -10.50018310546875
    4. 'ont' → logprob: -10.62518310546875
    5. 't' → logprob: -13.50018310546875
    6. 'n' → logprob: -13.62518310546875
    7. '```' → logprob: -13.62518310546875
    8. ' ons' → logprob: -14.25018310546875
    9. 'er' → logprob: -14.50018310546875
    10. 'ions' → logprob: -15.12518310546875

Token 595: ' //' (ID: 602)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4700886905193329
    2. ' n' → logprob: -2.3450887203216553
    3. 'integer' → logprob: -2.5950887203216553
    4. ' l' → logprob: -2.9700887203216553
    5. 'l' → logprob: -3.2200887203216553
    6. ' ' → logprob: -3.5950887203216553
    7. ' integer' → logprob: -3.7200887203216553
    8. 'space' → logprob: -4.345088481903076
    9. ''' → logprob: -5.220088481903076
    10. '<|end|>' → logprob: -5.595088481903076

Token 596: ' pour' (ID: 1930)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.8006593585014343
    2. '<|end|>' → logprob: -1.925659418106079
    3. ' (' → logprob: -2.050659418106079
    4. ' ' → logprob: -2.925659418106079
    5. 'n' → logprob: -3.300659418106079
    6. ' for' → logprob: -3.425659418106079
    7. ' n' → logprob: -3.550659418106079
    8. '=' → logprob: -3.800659418106079
    9. '(n' → logprob: -3.925659418106079
    10. '3' → logprob: -3.925659418106079

Token 597: ' la' (ID: 557)
  Prédit: ' effectuer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' effectuer' → logprob: -0.10762158036231995
    2. 'div' → logprob: -3.982621669769287
    3. ' faire' → logprob: -3.982621669769287
    4. ' la' → logprob: -4.107621669769287
    5. ' obtenir' → logprob: -5.107621669769287
    6. ' l' → logprob: -5.107621669769287
    7. ' réaliser' → logprob: -5.232621669769287
    8. ' division' → logprob: -5.607621669769287
    9. ' assurer' → logprob: -5.607621669769287
    10. ' garantir' → logprob: -5.857621669769287

Token 598: ' division' (ID: 21629)
  Prédit: 'division'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'division' → logprob: -0.26467767357826233
    2. ' division' → logprob: -1.63967764377594
    3. 'div' → logprob: -3.3896777629852295
    4. '<|end|>' → logprob: -6.88967752456665
    5. 'int' → logprob: -7.51467752456665
    6. ' ' → logprob: -7.51467752456665
    7. '2' → logprob: -7.51467752456665
    8. 'integer' → logprob: -7.63967752456665
    9. 'floor' → logprob: -8.264678001403809
    10. 'quot' → logprob: -8.264678001403809

Token 599: ' entière' (ID: 61583)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 600: ' (' (ID: 350)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.010391960851848125
    2. '#' → logprob: -6.010392189025879
    3. ' *' → logprob: -6.760392189025879
    4. '(n' → logprob: -6.760392189025879
    5. '**' → logprob: -6.885392189025879
    6. 'n' → logprob: -7.385392189025879
    7. ')n' → logprob: -7.385392189025879
    8. ' )' → logprob: -7.635392189025879
    9. '<|end|>' → logprob: -8.010392189025879
    10. '*' → logprob: -8.010392189025879

Token 601: 'pas' (ID: 21122)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1612187922000885
    2. '<|end|>' → logprob: -2.0362188816070557
    3. 'n' → logprob: -4.911218643188477
    4. ' )' → logprob: -5.036218643188477
    5. ' n' → logprob: -6.536218643188477
    6. '2' → logprob: -7.286218643188477
    7. '<|end|>' → logprob: -7.911218643188477
    8. ').' → logprob: -7.911218643188477
    9. '```' → logprob: -8.286218643188477
    10. '`)' → logprob: -9.161218643188477

Token 602: ' de' (ID: 334)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '/' → logprob: -0.2925494909286499
    2. ')' → logprob: -2.6675496101379395
    3. 'n' → logprob: -3.1675496101379395
    4. 'div' → logprob: -3.4175496101379395
    5. 'de' → logprob: -3.6675496101379395
    6. '#' → logprob: -3.9175496101379395
    7. 'une' → logprob: -4.6675496101379395
    8. 'd' → logprob: -4.9175496101379395
    9. 'la' → logprob: -5.2925496101379395
    10. '<|end|>' → logprob: -5.4175496101379395

Token 603: ' virg' (ID: 165362)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 604: 'ule' (ID: 1601)
  Prédit: 'ule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ule' → logprob: -0.09474439918994904
    2. 'ale' → logprob: -3.8447444438934326
    3. 'ée' → logprob: -4.2197442054748535
    4. 'on' → logprob: -4.3447442054748535
    5. 'ole' → logprob: -4.9697442054748535
    6. 'er' → logprob: -5.3447442054748535
    7. 'iale' → logprob: -5.3447442054748535
    8. 'lée' → logprob: -5.5947442054748535
    9. 'e' → logprob: -6.2197442054748535
    10. 'atile' → logprob: -6.5947442054748535

Token 605: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007509603165090084
    2. ').' → logprob: -5.257509708404541
    3. ',' → logprob: -6.257509708404541
    4. '),' → logprob: -9.257509231567383
    5. 's' → logprob: -10.507509231567383
    6. '#' → logprob: -10.632509231567383
    7. 'n' → logprob: -10.882509231567383
    8. '.' → logprob: -10.882509231567383
    9. ')
' → logprob: -10.882509231567383
    10. ' entière' → logprob: -11.257509231567383

Token 606: '#' (ID: 2)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -1.175067663192749
    2. 'print' → logprob: -1.300067663192749
    3. ' -' → logprob: -2.300067663192749
    4. 'n' → logprob: -2.300067663192749
    5. '-' → logprob: -2.675067663192749
    6. ' *' → logprob: -2.675067663192749
    7. '#' → logprob: -3.925067663192749
    8. ')' → logprob: -4.050067901611328
    9. '+' → logprob: -4.300067901611328
    10. '*n' → logprob: -4.425067901611328

Token 607: ' On' (ID: 2160)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0008768046391196549
    2. 'result' → logprob: -7.7508769035339355
    3. 'n' → logprob: -8.125876426696777
    4. ' print' → logprob: -9.125876426696777
    5. '+' → logprob: -11.250876426696777
    6. '(n' → logprob: -11.875876426696777
    7. '#' → logprob: -12.375876426696777
    8. '(' → logprob: -12.500876426696777
    9. '-print' → logprob: -12.625876426696777
    10. '```' → logprob: -12.875876426696777

Token 608: ' sou' (ID: 4069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.19969302415847778
    2. ' print' → logprob: -1.949692964553833
    3. '#' → logprob: -4.199693202972412
    4. '*' → logprob: -5.324693202972412
    5. 'aff' → logprob: -5.449693202972412
    6. '+' → logprob: -6.074693202972412
    7. ' multipl' → logprob: -6.449693202972412
    8. 'n' → logprob: -6.699693202972412
    9. ' n' → logprob: -6.824693202972412
    10. ' affiche' → logprob: -6.824693202972412

Token 609: 'stra' (ID: 14867)
  Prédit: 'stra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stra' → logprob: -0.02882169373333454
    2. 'str' → logprob: -4.0288214683532715
    3. 'stract' → logprob: -5.1538214683532715
    4. 'straction' → logprob: -5.5288214683532715
    5. 'st' → logprob: -7.5288214683532715
    6. 'ligne' → logprob: -8.27882194519043
    7. 'strate' → logprob: -10.90382194519043
    8. 't' → logprob: -11.27882194519043
    9. 'ha' → logprob: -11.65382194519043
    10. '#' → logprob: -11.77882194519043

Token 610: 'it' (ID: 278)
  Prédit: 'it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.011873604729771614
    2. 't' → logprob: -5.261873722076416
    3. 'ct' → logprob: -5.386873722076416
    4. 'ite' → logprob: -6.636873722076416
    5. 'cte' → logprob: -8.261873245239258
    6. 'is' → logprob: -9.261873245239258
    7. '#' → logprob: -9.511873245239258
    8. 'itre' → logprob: -10.011873245239258
    9. 'ît' → logprob: -10.761873245239258
    10. 'te' → logprob: -10.761873245239258

Token 611: ' n' (ID: 297)
  Prédit: 'taste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'taste' → logprob: -0.01767103187739849
    2. ' taste' → logprob: -4.26767110824585
    3. 'abs' → logprob: -6.39267110824585
    4. '(t' → logprob: -6.76767110824585
    5. 't' → logprob: -8.767670631408691
    6. '(abs' → logprob: -8.892670631408691
    7. '(' → logprob: -9.517670631408691
    8. ' (' → logprob: -9.642670631408691
    9. '   ' → logprob: -9.767670631408691
    10. ' abs' → logprob: -9.767670631408691

Token 612: ' pour' (ID: 1930)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.4819718301296234
    2. '*' → logprob: -0.9819718599319458
    3. '*(' → logprob: -4.856971740722656
    4. '(n' → logprob: -10.606971740722656
    5. ' ' → logprob: -11.231971740722656
    6. '*n' → logprob: -11.356971740722656
    7. '+' → logprob: -11.856971740722656
    8. '**' → logprob: -11.981971740722656
    9. '*((' → logprob: -12.231971740722656
    10. ' ' → logprob: -12.481971740722656

Token 613: ' ajust' (ID: 32650)
  Prédit: 'taste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'taste' → logprob: -0.7481839656829834
    2. 'abs' → logprob: -1.2481839656829834
    3. ' taste' → logprob: -2.2481839656829834
    4. ' abs' → logprob: -2.9981839656829834
    5. 'n' → logprob: -3.3731839656829834
    6. '(n' → logprob: -4.3731842041015625
    7. '(abs' → logprob: -4.3731842041015625
    8. ' n' → logprob: -4.3731842041015625
    9. ' (' → logprob: -5.6231842041015625
    10. '(' → logprob: -5.7481842041015625

Token 614: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.613035261631012
    2. 'uer' → logprob: -1.4880352020263672
    3. 'uire' → logprob: -1.9880352020263672
    4. 'érer' → logprob: -2.988035202026367
    5. 'urer' → logprob: -3.863035202026367
    6. '   ' → logprob: -5.613035202026367
    7. 'ant' → logprob: -5.738035202026367
    8. 'uant' → logprob: -5.738035202026367
    9. 'é' → logprob: -6.238035202026367
    10. 'ire' → logprob: -6.363035202026367

Token 615: ' la' (ID: 557)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.9303444027900696
    2. ' *' → logprob: -0.9303444027900696
    3. 'n' → logprob: -1.8053443431854248
    4. '*n' → logprob: -3.680344343185425
    5. ' n' → logprob: -5.055344581604004
    6. ' -' → logprob: -5.555344581604004
    7. '(n' → logprob: -5.555344581604004
    8. ')' → logprob: -6.430344581604004
    9. '-' → logprob: -6.930344581604004
    10. '*(' → logprob: -7.180344581604004

Token 616: ' somme' (ID: 64484)
  Prédit: 'taste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'taste' → logprob: -0.041385624557733536
    2. ' taste' → logprob: -3.2913856506347656
    3. '(n' → logprob: -6.416385650634766
    4. '1' → logprob: -7.416385650634766
    5. 'n' → logprob: -7.541385650634766
    6. ' (' → logprob: -8.166385650634766
    7. '(' → logprob: -9.916385650634766
    8. ' n' → logprob: -10.166385650634766
    9. 't' → logprob: -10.166385650634766
    10. 'abs' → logprob: -10.416385650634766

Token 617: ' (' (ID: 350)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.3712070882320404
    2. '-' → logprob: -1.3712071180343628
    3. 'n' → logprob: -3.2462069988250732
    4. ')' → logprob: -5.371207237243652
    5. '#' → logprob: -5.621207237243652
    6. '*' → logprob: -5.746207237243652
    7. ' *' → logprob: -5.746207237243652
    8. '```' → logprob: -7.621207237243652
    9. ' #' → logprob: -7.746207237243652
    10. ',' → logprob: -8.246207237243652

Token 618: 'car' (ID: 6830)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20538556575775146
    2. '(n' → logprob: -2.455385684967041
    3. 'n' → logprob: -3.580385684967041
    4. '*' → logprob: -3.705385684967041
    5. '*n' → logprob: -4.705385684967041
    6. ' )' → logprob: -5.330385684967041
    7. '*(' → logprob: -5.455385684967041
    8. ' *' → logprob: -5.455385684967041
    9. '<|end|>' → logprob: -5.580385684967041
    10. ' (' → logprob: -5.705385684967041

Token 619: ' dans' (ID: 2671)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -1.4407224655151367
    2. ' n' → logprob: -1.6907224655151367
    3. ' (' → logprob: -1.9407224655151367
    4. 'l' → logprob: -2.4407224655151367
    5. 'n' → logprob: -2.4407224655151367
    6. ' l' → logprob: -2.5657224655151367
    7. ' i' → logprob: -2.6907224655151367
    8. 'i' → logprob: -3.4407224655151367
    9. '(i' → logprob: -4.315722465515137
    10. ' le' → logprob: -4.565722465515137

Token 620: ' cette' (ID: 7696)
  Prédit: ' ce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ce' → logprob: -1.4110122919082642
    2. 'l' → logprob: -1.7860122919082642
    3. 'le' → logprob: -1.7860122919082642
    4. ' le' → logprob: -1.9110122919082642
    5. 'la' → logprob: -2.7860121726989746
    6. 'n' → logprob: -2.9110121726989746
    7. ' la' → logprob: -3.5360121726989746
    8. '#' → logprob: -3.6610121726989746
    9. ' cette' → logprob: -3.6610121726989746
    10. 'range' → logprob: -4.036012172698975

Token 621: ' sé' (ID: 7462)
  Prédit: 'ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ligne' → logprob: -1.244040608406067
    2. 'range' → logprob: -1.744040608406067
    3. 'suite' → logprob: -1.994040608406067
    4. ' ligne' → logprob: -2.8690404891967773
    5. 'form' → logprob: -2.9940404891967773
    6. ')' → logprob: -2.9940404891967773
    7. '#' → logprob: -3.3690404891967773
    8. ' formule' → logprob: -3.7440404891967773
    9. 'prem' → logprob: -3.9940404891967773
    10. 'expression' → logprob: -4.369040489196777

Token 622: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -0.005920739378780127
    2. '#' → logprob: -6.130920886993408
    3. 'quences' → logprob: -6.880920886993408
    4. 'range' → logprob: -7.380920886993408
    5. 'q' → logprob: -7.505920886993408
    6. 'rie' → logprob: -7.630920886993408
    7. 'quent' → logprob: -8.00592041015625
    8. 'lection' → logprob: -8.25592041015625
    9. 'qu' → logprob: -10.00592041015625
    10. 'QUENCE' → logprob: -10.00592041015625

Token 623: ' l' (ID: 305)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.36126893758773804
    2. '-' → logprob: -2.611268997192383
    3. ' -' → logprob: -2.611268997192383
    4. ' *' → logprob: -2.986268997192383
    5. '),' → logprob: -3.486268997192383
    6. ',' → logprob: -3.986268997192383
    7. '*' → logprob: -3.986268997192383
    8. ' )' → logprob: -4.361268997192383
    9. 'n' → logprob: -5.611268997192383
    10. '+' → logprob: -5.736268997192383

Token 624: ',' (ID: 11)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.5790333151817322
    2. ' *' → logprob: -1.829033374786377
    3. '*(' → logprob: -1.954033374786377
    4. '*n' → logprob: -3.454033374786377
    5. '#' → logprob: -3.704033374786377
    6. '+' → logprob: -3.954033374786377
    7. '-' → logprob: -3.954033374786377
    8. ' +' → logprob: -4.704033374786377
    9. ')' → logprob: -4.954033374786377
    10. ' -' → logprob: -5.329033374786377

Token 625: ' l' (ID: 305)
  Prédit: 'taste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'taste' → logprob: -1.2664015293121338
    2. 'n' → logprob: -1.3914015293121338
    3. '1' → logprob: -1.6414015293121338
    4. 'l' → logprob: -1.7664015293121338
    5. 'i' → logprob: -3.016401529312134
    6. '+' → logprob: -5.391401290893555
    7. '(n' → logprob: -5.391401290893555
    8. ' n' → logprob: -5.516401290893555
    9. ' taste' → logprob: -5.516401290893555
    10. ' l' → logprob: -5.641401290893555

Token 626: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6825689673423767
    2. '-' → logprob: -1.4325690269470215
    3. '*' → logprob: -2.1825690269470215
    4. '+n' → logprob: -2.9325690269470215
    5. ' +' → logprob: -3.3075690269470215
    6. ' -' → logprob: -4.3075690269470215
    7. '*n' → logprob: -4.6825690269470215
    8. '*(' → logprob: -5.3075690269470215
    9. ' *' → logprob: -5.5575690269470215
    10. '+l' → logprob: -5.5575690269470215

Token 627: '1' (ID: 16)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.05266989395022392
    2. 'i' → logprob: -3.3026700019836426
    3. '(n' → logprob: -4.802670001983643
    4. '1' → logprob: -5.427670001983643
    5. '(' → logprob: -6.552670001983643
    6. '(i' → logprob: -8.927669525146484
    7. ' n' → logprob: -9.427669525146484
    8. 'l' → logprob: -9.677669525146484
    9. '0' → logprob: -9.802669525146484
    10. ' (' → logprob: -10.052669525146484

Token 628: ',' (ID: 11)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7485349774360657
    2. ' +' → logprob: -1.123534917831421
    3. ',' → logprob: -1.998534917831421
    4. '-' → logprob: -3.373534917831421
    5. ' -' → logprob: -3.998534917831421
    6. ')' → logprob: -5.12353515625
    7. '*' → logprob: -6.49853515625
    8. ' ,' → logprob: -7.24853515625
    9. '...' → logprob: -7.37353515625
    10. '+n' → logprob: -7.62353515625

Token 629: ' ...,' (ID: 126708)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.44836291670799255
    2. '...' → logprob: -1.573362946510315
    3. 'l' → logprob: -2.4483628273010254
    4. ' n' → logprob: -3.9483628273010254
    5. '*' → logprob: -4.198362827301025
    6. '...,' → logprob: -4.948362827301025
    7. '(n' → logprob: -5.448362827301025
    8. ' l' → logprob: -5.948362827301025
    9. '...)' → logprob: -6.198362827301025
    10. ')' → logprob: -6.323362827301025

Token 630: ' l' (ID: 305)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.048518434166908264
    2. ' n' → logprob: -3.298518419265747
    3. 'i' → logprob: -5.548518657684326
    4. 'l' → logprob: -6.048518657684326
    5. '(n' → logprob: -6.673518657684326
    6. '1' → logprob: -6.923518657684326
    7. '0' → logprob: -7.048518657684326
    8. ' i' → logprob: -7.798518657684326
    9. ' l' → logprob: -8.548518180847168
    10. '(' → logprob: -9.298518180847168

Token 631: '+n' (ID: 87683)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.22914282977581024
    2. ' -' → logprob: -1.8541427850723267
    3. '+' → logprob: -3.729142904281616
    4. ')' → logprob: -4.604142665863037
    5. 'n' → logprob: -5.729142665863037
    6. '*' → logprob: -5.729142665863037
    7. ' +' → logprob: -6.354142665863037
    8. 's' → logprob: -6.604142665863037
    9. '<|end|>' → logprob: -7.354142665863037
    10. '...' → logprob: -7.479142665863037

Token 632: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.009834835305809975
    2. ' -' → logprob: -4.7598347663879395
    3. '#' → logprob: -7.1348347663879395
    4. ')' → logprob: -8.384835243225098
    5. '```' → logprob: -9.884835243225098
    6. '
' → logprob: -10.759835243225098
    7. '−' → logprob: -11.009835243225098
    8. '1' → logprob: -11.009835243225098
    9. 's' → logprob: -11.384835243225098
    10. ' ' → logprob: -11.384835243225098

Token 633: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.145118848304264e-05
    2. '2' → logprob: -10.250051498413086
    3. '#' → logprob: -12.125051498413086
    4. ' ' → logprob: -12.500051498413086
    5. 'n' → logprob: -12.625051498413086
    6. '```' → logprob: -13.500051498413086
    7. '0' → logprob: -14.500051498413086
    8. ')' → logprob: -14.750051498413086
    9. '-' → logprob: -15.375051498413086
    10. '}' → logprob: -15.500051498413086

Token 634: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0017693048575893044
    2. '))' → logprob: -7.251769542694092
    3. ' )' → logprob: -7.626769542694092
    4. ')**' → logprob: -9.251769065856934
    5. '#' → logprob: -9.376769065856934
    6. ')+' → logprob: -9.626769065856934
    7. ')
' → logprob: -10.126769065856934
    8. ')#' → logprob: -10.251769065856934
    9. ')`' → logprob: -10.501769065856934
    10. ')*' → logprob: -10.626769065856934

Token 635: ' la' (ID: 557)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.295401930809021
    2. '-' → logprob: -1.420401930809021
    3. 'n' → logprob: -1.795401930809021
    4. ' -' → logprob: -2.1704020500183105
    5. '+' → logprob: -3.4204020500183105
    6. 'i' → logprob: -3.5454020500183105
    7. '#' → logprob: -3.6704020500183105
    8. ' n' → logprob: -3.9204020500183105
    9. ' +' → logprob: -4.1704020500183105
    10. '*n' → logprob: -4.1704020500183105

Token 636: ' somme' (ID: 64484)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3194726705551147
    2. ' i' → logprob: -1.4444726705551147
    3. 'i' → logprob: -2.1944727897644043
    4. ' n' → logprob: -2.3194727897644043
    5. '<|end|>' → logprob: -2.3194727897644043
    6. ' )' → logprob: -2.4444727897644043
    7. 'n' → logprob: -3.3194727897644043
    8. ' ' → logprob: -4.319472789764404
    9. ' ' → logprob: -4.819472789764404
    10. 's' → logprob: -5.194472789764404

Token 637: ' réelle' (ID: 136948)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.999265193939209
    2. ' des' → logprob: -1.624265193939209
    3. '-' → logprob: -1.749265193939209
    4. ')' → logprob: -1.874265193939209
    5. 'des' → logprob: -3.874265193939209
    6. ' n' → logprob: -4.249265193939209
    7. 'n' → logprob: -4.374265193939209
    8. '*' → logprob: -4.624265193939209
    9. '+' → logprob: -4.624265193939209
    10. '#' → logprob: -4.999265193939209

Token 638: ' est' (ID: 893)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.052170801907777786
    2. '-' → logprob: -4.427170753479004
    3. ' -' → logprob: -4.427170753479004
    4. '*' → logprob: -4.677170753479004
    5. 'n' → logprob: -5.802170753479004
    6. ')n' → logprob: -5.802170753479004
    7. '*n' → logprob: -5.927170753479004
    8. ' )' → logprob: -6.427170753479004
    9. ')+' → logprob: -6.802170753479004
    10. '+' → logprob: -7.052170753479004

Token 639: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.48307934403419495
    2. ' n' → logprob: -1.1080793142318726
    3. '(n' → logprob: -3.608079433441162
    4. ' (' → logprob: -4.483079433441162
    5. ' l' → logprob: -5.733079433441162
    6. 'l' → logprob: -5.733079433441162
    7. '+' → logprob: -6.608079433441162
    8. ')' → logprob: -6.858079433441162
    9. '0' → logprob: -7.233079433441162
    10. ' ' → logprob: -7.233079433441162

Token 640: '*l' (ID: 176337)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.1009313240647316
    2. ' *' → logprob: -2.350931406021118
    3. '*(' → logprob: -7.600931167602539
    4. '*l' → logprob: -8.975931167602539
    5. '*n' → logprob: -9.600931167602539
    6. '#' → logprob: -11.725931167602539
    7. ' ' → logprob: -11.975931167602539
    8. '*t' → logprob: -12.350931167602539
    9. '+' → logprob: -13.225931167602539
    10. ' ' → logprob: -13.350931167602539

Token 641: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.4136877655982971
    2. '+' → logprob: -1.1636877059936523
    3. ')' → logprob: -5.038687705993652
    4. '#' → logprob: -5.038687705993652
    5. ' -' → logprob: -5.413687705993652
    6. '*' → logprob: -5.788687705993652
    7. '-' → logprob: -6.288687705993652
    8. '+n' → logprob: -6.288687705993652
    9. ' *' → logprob: -7.663687705993652
    10. '```' → logprob: -8.538687705993652

Token 642: ' somme' (ID: 64484)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.07817312330007553
    2. '(n' → logprob: -2.7031731605529785
    3. ' n' → logprob: -5.4531731605529785
    4. ' (' → logprob: -5.8281731605529785
    5. '((' → logprob: -7.2031731605529785
    6. '(' → logprob: -9.07817268371582
    7. ' ((' → logprob: -10.95317268371582
    8. '
' → logprob: -11.07817268371582
    9. ' ' → logprob: -11.20317268371582
    10. 'i' → logprob: -11.20317268371582

Token 643: ' de' (ID: 334)
  Prédit: 'des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'des' → logprob: -0.5776503086090088
    2. '(i' → logprob: -1.7026503086090088
    3. '(range' → logprob: -2.202650308609009
    4. '(n' → logprob: -2.327650308609009
    5. ' des' → logprob: -4.20265007019043
    6. 'range' → logprob: -4.95265007019043
    7. '(' → logprob: -5.32765007019043
    8. 'de' → logprob: -5.32765007019043
    9. 'n' → logprob: -5.45265007019043
    10. 'i' → logprob: -5.70265007019043

Token 644: ' ' (ID: 220)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4258565902709961
    2. 'range' → logprob: -1.425856590270996
    3. '(range' → logprob: -3.175856590270996
    4. 'n' → logprob: -3.925856590270996
    5. ' i' → logprob: -4.425856590270996
    6. '(i' → logprob: -4.425856590270996
    7. '1' → logprob: -4.925856590270996
    8. '(n' → logprob: -5.300856590270996
    9. ' range' → logprob: -6.175856590270996
    10. '(' → logprob: -6.675856590270996

Token 645: '0' (ID: 15)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.1273360550403595
    2. 'i' → logprob: -2.252336025238037
    3. '(range' → logprob: -4.752336025238037
    4. '1' → logprob: -6.252336025238037
    5. ' range' → logprob: -6.502336025238037
    6. '(i' → logprob: -7.377336025238037
    7. 'la' → logprob: -7.627336025238037
    8. '[i' → logprob: -8.127336502075195
    9. ' i' → logprob: -8.377336502075195
    10. 'j' → logprob: -8.502336502075195

Token 646: ' à' (ID: 1221)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4449034035205841
    2. ' +' → logprob: -1.0699033737182617
    3. '<|end|>' → logprob: -5.319903373718262
    4. '(n' → logprob: -5.944903373718262
    5. '*' → logprob: -6.194903373718262
    6. '+n' → logprob: -6.319903373718262
    7. ' à' → logprob: -6.444903373718262
    8. ' ' → logprob: -7.944903373718262
    9. 'à' → logprob: -8.069903373718262
    10. '*n' → logprob: -8.194903373718262

Token 647: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.31528690457344055
    2. '(n' → logprob: -1.3152868747711182
    3. ' n' → logprob: -6.440287113189697
    4. ' (' → logprob: -8.190286636352539
    5. '
' → logprob: -9.565286636352539
    6. '(' → logprob: -9.940286636352539
    7. '```' → logprob: -11.940286636352539
    8. ' ' → logprob: -12.565286636352539
    9. '[n' → logprob: -12.815286636352539
    10. '\
' → logprob: -12.815286636352539

Token 648: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.06748184561729431
    2. '<|end|>' → logprob: -3.692481756210327
    3. ')' → logprob: -3.942481756210327
    4. ' -' → logprob: -4.317481994628906
    5. 'n' → logprob: -6.442481994628906
    6. '+' → logprob: -6.692481994628906
    7. '<|end|>' → logprob: -7.192481994628906
    8. '(n' → logprob: -7.317481994628906
    9. '```' → logprob: -7.317481994628906
    10. 's' → logprob: -7.442481994628906

Token 649: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.12980711460113525
    2. '(n' → logprob: -2.3798069953918457
    3. '(' → logprob: -4.754806995391846
    4. '-' → logprob: -4.879806995391846
    5. 'n' → logprob: -5.129806995391846
    6. '<|end|>' → logprob: -6.129806995391846
    7. ' ' → logprob: -6.629806995391846
    8. '```' → logprob: -6.754806995391846
    9. ' (' → logprob: -6.879806995391846
    10. '0' → logprob: -8.254807472229004

Token 650: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00400229636579752
    2. ' )' → logprob: -6.629002094268799
    3. '+' → logprob: -6.879002094268799
    4. ' +' → logprob: -8.004002571105957
    5. '#' → logprob: -8.254002571105957
    6. ')#' → logprob: -8.629002571105957
    7. ' -' → logprob: -8.879002571105957
    8. ')-' → logprob: -9.129002571105957
    9. ')+' → logprob: -9.379002571105957
    10. '))' → logprob: -9.629002571105957

Token 651: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.10118420422077179
    2. 'result' → logprob: -2.351184129714966
    3. 'total' → logprob: -8.101183891296387
    4. 'sum' → logprob: -8.351183891296387
    5. 'res' → logprob: -9.226183891296387
    6. 'n' → logprob: -9.351183891296387
    7. 's' → logprob: -9.726183891296387
    8. '#' → logprob: -9.726183891296387
    9. ' print' → logprob: -10.601183891296387
    10. 'answer' → logprob: -10.601183891296387

Token 652: ' Enfin' (ID: 85274)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0032548350282013416
    2. 'result' → logprob: -5.7532548904418945
    3. ' print' → logprob: -10.253254890441895
    4. 'total' → logprob: -10.753254890441895
    5. 'sum' → logprob: -12.003254890441895
    6. '#' → logprob: -12.253254890441895
    7. 'res' → logprob: -13.003254890441895
    8. '+' → logprob: -13.628254890441895
    9. 'answer' → logprob: -13.628254890441895
    10. '
' → logprob: -13.753254890441895

Token 653: ',' (ID: 11)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.08796016126871109
    2. ' print' → logprob: -3.3379602432250977
    3. ')' → logprob: -3.4629602432250977
    4. '+' → logprob: -5.962960243225098
    5. 'n' → logprob: -5.962960243225098
    6. ',' → logprob: -6.087960243225098
    7. '#' → logprob: -6.337960243225098
    8. 'result' → logprob: -6.337960243225098
    9. ' +' → logprob: -7.087960243225098
    10. '),' → logprob: -7.337960243225098

Token 654: ' on' (ID: 402)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.011248825117945671
    2. ' print' → logprob: -4.511248588562012
    3. 'n' → logprob: -9.261248588562012
    4. 'taste' → logprob: -10.386248588562012
    5. ' n' → logprob: -10.886248588562012
    6. ' (' → logprob: -11.511248588562012
    7. '(n' → logprob: -11.886248588562012
    8. 'result' → logprob: -11.886248588562012
    9. ' taste' → logprob: -12.011248588562012
    10. '(print' → logprob: -12.511248588562012

Token 655: ' sou' (ID: 4069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.05084843188524246
    2. ' print' → logprob: -3.4258484840393066
    3. '*' → logprob: -4.550848484039307
    4. '+' → logprob: -5.800848484039307
    5. '#' → logprob: -6.050848484039307
    6. ' *' → logprob: -8.550848007202148
    7. ' multipl' → logprob: -8.550848007202148
    8. ' #' → logprob: -9.300848007202148
    9. 'aff' → logprob: -9.425848007202148
    10. 'n' → logprob: -9.675848007202148

Token 656: 'stra' (ID: 14867)
  Prédit: 'stra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stra' → logprob: -0.017908409237861633
    2. 'stract' → logprob: -4.642908573150635
    3. 'str' → logprob: -5.017908573150635
    4. 'straction' → logprob: -6.892908573150635
    5. 'st' → logprob: -8.892908096313477
    6. '#' → logprob: -8.892908096313477
    7. 'strate' → logprob: -10.267908096313477
    8. 'ligne' → logprob: -10.392908096313477
    9. '```' → logprob: -10.517908096313477
    10. 'stre' → logprob: -10.767908096313477

Token 657: 'it' (ID: 278)
  Prédit: 'ct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ct' → logprob: -0.43647998571395874
    2. 'it' → logprob: -1.0614800453186035
    3. 'ict' → logprob: -5.6864800453186035
    4. 'cte' → logprob: -6.5614800453186035
    5. 't' → logprob: -7.9364800453186035
    6. 'ît' → logprob: -7.9364800453186035
    7. 'ction' → logprob: -8.061479568481445
    8. 'act' → logprob: -8.686479568481445
    9. '```' → logprob: -8.686479568481445
    10. '#' → logprob: -9.061479568481445

Token 658: ' la' (ID: 557)
  Prédit: 'taste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'taste' → logprob: -0.029989173635840416
    2. ' taste' → logprob: -3.529989242553711
    3. '(t' → logprob: -9.154989242553711
    4. 't' → logprob: -10.529989242553711
    5. '   ' → logprob: -10.654989242553711
    6. '(' → logprob: -10.654989242553711
    7. ' (' → logprob: -11.154989242553711
    8. '(n' → logprob: -11.529989242553711
    9. 'abs' → logprob: -12.279989242553711
    10. ' ' → logprob: -12.717489242553711

Token 659: ' valeur' (ID: 41664)
  Prédit: 'taste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'taste' → logprob: -0.0011117587564513087
    2. ' taste' → logprob: -6.87611198425293
    3. 'abs' → logprob: -10.87611198425293
    4. 'n' → logprob: -11.00111198425293
    5. 'print' → logprob: -12.12611198425293
    6. '(n' → logprob: -12.12611198425293
    7. '   ' → logprob: -12.12611198425293
    8. '1' → logprob: -12.12611198425293
    9. '(t' → logprob: -12.75111198425293
    10. '(' → logprob: -12.75111198425293

Token 660: ' taste' (ID: 14673)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.7614708542823792
    2. 'ab' → logprob: -1.6364707946777344
    3. 'taste' → logprob: -2.0114707946777344
    4. ' absol' → logprob: -2.8864707946777344
    5. 'absolute' → logprob: -3.2614707946777344
    6. '_abs' → logprob: -3.3864707946777344
    7. ' abs' → logprob: -3.7614707946777344
    8. '_ab' → logprob: -4.136470794677734
    9. ' taste' → logprob: -4.761470794677734
    10. ' absolute' → logprob: -4.886470794677734

Token 661: ' (' (ID: 350)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.8878685235977173
    2. '-' → logprob: -1.6378685235977173
    3. '+' → logprob: -2.0128684043884277
    4. ' -' → logprob: -2.8878684043884277
    5. ' +' → logprob: -3.2628684043884277
    6. '*' → logprob: -3.3878684043884277
    7. '
' → logprob: -3.7628684043884277
    8. ' *' → logprob: -3.7628684043884277
    9. 'n' → logprob: -3.8878684043884277
    10. '+
' → logprob: -4.137868404388428

Token 662: 'la' (ID: 1675)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006359823979437351
    2. ' )' → logprob: -5.131360054016113
    3. '+' → logprob: -9.131360054016113
    4. ')*' → logprob: -9.631360054016113
    5. ')
' → logprob: -10.006360054016113
    6. ')**' → logprob: -10.381360054016113
    7. ' +' → logprob: -10.506360054016113
    8. '))' → logprob: -10.881360054016113
    9. '*' → logprob: -11.006360054016113
    10. '-' → logprob: -11.006360054016113

Token 663: ' "' (ID: 392)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0038257837295532
    2. ' taste' → logprob: -1.3788257837295532
    3. 'taste' → logprob: -2.3788256645202637
    4. ' )' → logprob: -2.5038256645202637
    5. ' ' → logprob: -2.5038256645202637
    6. ' +' → logprob: -3.5038256645202637
    7. '+' → logprob: -3.6288256645202637
    8. ' abs' → logprob: -3.7538256645202637
    9. 'abs' → logprob: -4.253825664520264
    10. ' ' → logprob: -5.628825664520264

Token 664: 'save' (ID: 13158)
  Prédit: 'taste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'taste' → logprob: -0.032679084688425064
    2. ' taste' → logprob: -4.032679080963135
    3. 'abs' → logprob: -4.657679080963135
    4. 'val' → logprob: -6.157679080963135
    5. ' abs' → logprob: -7.032679080963135
    6. '   ' → logprob: -7.282679080963135
    7. ' ' → logprob: -8.532679557800293
    8. 'value' → logprob: -8.782679557800293
    9. 'save' → logprob: -9.095179557800293
    10. ' valeur' → logprob: -9.595179557800293

Token 665: 'ur' (ID: 330)
  Prédit: 'ur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ur' → logprob: -0.0026265503838658333
    2. 'ure' → logprob: -6.877626419067383
    3. 'r' → logprob: -7.752626419067383
    4. 'u' → logprob: -7.752626419067383
    5. '-' → logprob: -8.627626419067383
    6. 'taste' → logprob: -8.752626419067383
    7. 'uvre' → logprob: -9.752626419067383
    8. ')' → logprob: -10.002626419067383
    9. 'eur' → logprob: -10.252626419067383
    10. ' -' → logprob: -10.377626419067383

Token 666: '"' (ID: 1)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.17590871453285217
    2. ' la' → logprob: -2.3009088039398193
    3. ' )' → logprob: -3.6759088039398193
    4. 'abs' → logprob: -4.67590856552124
    5. '<|end|>' → logprob: -4.80090856552124
    6. ' abs' → logprob: -5.80090856552124
    7. '*' → logprob: -5.92590856552124
    8. '_abs' → logprob: -6.05090856552124
    9. 'la' → logprob: -6.17590856552124
    10. ' *' → logprob: -6.42590856552124

Token 667: ' à' (ID: 1221)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0337473563849926
    2. ' )' → logprob: -3.658747434616089
    3. '<|end|>' → logprob: -5.78374719619751
    4. ' la' → logprob: -6.40874719619751
    5. '*' → logprob: -7.03374719619751
    6. 'abs' → logprob: -7.90874719619751
    7. ')*' → logprob: -8.783747673034668
    8. ')
' → logprob: -9.283747673034668
    9. '_abs' → logprob: -9.283747673034668
    10. ' ' → logprob: -9.658747673034668

Token 668: ' enlever' (ID: 196982)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3073318600654602
    2. '0' → logprob: -2.9323318004608154
    3. ' ' → logprob: -2.9323318004608154
    4. 'i' → logprob: -3.3073318004608154
    5. 'taste' → logprob: -3.5573318004608154
    6. '-' → logprob: -3.6823318004608154
    7. ')' → logprob: -4.3073320388793945
    8. '+' → logprob: -4.4323320388793945
    9. '100' → logprob: -4.6823320388793945
    10. 'plus' → logprob: -5.3073320388793945

Token 669: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0014218994183465838
    2. ' )' → logprob: -7.376421928405762
    3. ')
' → logprob: -8.001421928405762
    4. '+' → logprob: -8.751421928405762
    5. '-' → logprob: -9.751421928405762
    6. ' +' → logprob: -10.501421928405762
    7. '#' → logprob: -10.626421928405762
    8. ' -' → logprob: -10.626421928405762
    9. '))' → logprob: -10.751421928405762
    10. ')**' → logprob: -10.751421928405762

Token 670: ' selon' (ID: 27571)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0026072871405631304
    2. ' print' → logprob: -6.877607345581055
    3. '
' → logprob: -7.752607345581055
    4. 'n' → logprob: -8.502607345581055
    5. '#' → logprob: -8.752607345581055
    6. '-' → logprob: -9.127607345581055
    7. ',' → logprob: -9.127607345581055
    8. '-print' → logprob: -9.377607345581055
    9. 'result' → logprob: -9.377607345581055
    10. ')
' → logprob: -9.877607345581055

Token 671: ' le' (ID: 505)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.2637014091014862
    2. 'l' → logprob: -2.2637014389038086
    3. 'le' → logprob: -3.7637014389038086
    4. 'la' → logprob: -4.013701438903809
    5. ' l' → logprob: -4.263701438903809
    6. 'n' → logprob: -4.513701438903809
    7. ' la' → logprob: -4.513701438903809
    8. ' abs' → logprob: -4.638701438903809
    9. 'taste' → logprob: -4.888701438903809
    10. '   ' → logprob: -5.513701438903809

Token 672: ' problème' (ID: 35630)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -1.413611650466919
    2. 'abs' → logprob: -1.413611650466919
    3. '#' → logprob: -2.163611650466919
    4. 'plus' → logprob: -2.663611650466919
    5. '+' → logprob: -2.913611650466919
    6. ' plus' → logprob: -3.538611650466919
    7. ' ' → logprob: -3.538611650466919
    8. '```' → logprob: -3.913611650466919
    9. ' +' → logprob: -4.16361141204834
    10. ' abs' → logprob: -4.28861141204834

Token 673: ' sous' (ID: 14487)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0012892824597656727
    2. '
' → logprob: -7.126289367675781
    3. ' print' → logprob: -8.376289367675781
    4. 'result' → logprob: -9.501289367675781
    5. '#' → logprob: -10.376289367675781
    6. ',' → logprob: -10.501289367675781
    7. 'n' → logprob: -10.876289367675781
    8. ')
' → logprob: -11.251289367675781
    9. '-' → logprob: -11.501289367675781
    10. ',
' → logprob: -11.626289367675781

Token 674: '-j' (ID: 19720)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3206094801425934
    2. '#' → logprob: -2.5706095695495605
    3. 'abs' → logprob: -2.8206095695495605
    4. 'tra' → logprob: -3.4456095695495605
    5. '-' → logprob: -4.3206095695495605
    6. '_one' → logprob: -4.4456095695495605
    7. 'traction' → logprob: -4.6956095695495605
    8. 'un' → logprob: -5.0706095695495605
    9. 'moins' → logprob: -5.0706095695495605
    10. '_abs' → logprob: -5.1956095695495605

Token 675: 'acent' (ID: 28063)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.2241714745759964
    2. 't' → logprob: -2.5991714000701904
    3. 'jac' → logprob: -2.9741714000701904
    4. '-ent' → logprob: -3.4741714000701904
    5. 'acent' → logprob: -4.5991716384887695
    6. 'end' → logprob: -5.4741716384887695
    7. '#' → logprob: -5.5991716384887695
    8. '-j' → logprob: -5.7241716384887695
    9. 'j' → logprob: -6.0991716384887695
    10. 'enti' → logprob: -6.0991716384887695

Token 676: ',
' (ID: 412)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0003488129877950996
    2. '
' → logprob: -8.875349044799805
    3. 'result' → logprob: -9.500349044799805
    4. ' print' → logprob: -10.375349044799805
    5. 'n' → logprob: -10.625349044799805
    6. '#' → logprob: -10.625349044799805
    7. ')
' → logprob: -11.250349044799805
    8. '-print' → logprob: -12.125349044799805
    9. '#print' → logprob: -12.500349044799805
    10. ',' → logprob: -12.625349044799805

Token 677: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.019536437466740608
    2. ' print' → logprob: -4.51953649520874
    3. ')
' → logprob: -6.14453649520874
    4. ')' → logprob: -6.26953649520874
    5. '-print' → logprob: -6.64453649520874
    6. ' -' → logprob: -7.01953649520874
    7. '-' → logprob: -7.14453649520874
    8. '#' → logprob: -7.39453649520874
    9. '-t' → logprob: -8.769536018371582
    10. 'n' → logprob: -8.894536018371582

Token 678: ' pour' (ID: 1930)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.03231732174754143
    2. ')' → logprob: -4.407317161560059
    3. ' print' → logprob: -4.532317161560059
    4. ')
' → logprob: -4.907317161560059
    5. '#' → logprob: -7.282317161560059
    6. ' )
' → logprob: -8.907317161560059
    7. ' )' → logprob: -9.032317161560059
    8. '-' → logprob: -9.407317161560059
    9. '-print' → logprob: -9.407317161560059
    10. ' -' → logprob: -9.657317161560059

Token 679: ' obtenir' (ID: 54423)
  Prédit: 'aff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aff' → logprob: -0.8497493267059326
    2. 'print' → logprob: -1.0997493267059326
    3. ')' → logprob: -2.3497493267059326
    4. '#' → logprob: -3.2247493267059326
    5. '   ' → logprob: -3.9747493267059326
    6. ')
' → logprob: -4.099749565124512
    7. ' afficher' → logprob: -4.099749565124512
    8. ' print' → logprob: -4.724749565124512
    9. 'comp' → logprob: -5.349749565124512
    10. ' obtenir' → logprob: -5.474749565124512

Token 680: ' le' (ID: 505)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7082987427711487
    2. ' n' → logprob: -0.7082987427711487
    3. '(n' → logprob: -5.833298683166504
    4. ' le' → logprob: -6.083298683166504
    5. ' la' → logprob: -6.208298683166504
    6. 'print' → logprob: -6.333298683166504
    7. ' (' → logprob: -6.958298683166504
    8. '"' → logprob: -7.458298683166504
    9. 'le' → logprob: -7.458298683166504
    10. ' l' → logprob: -7.458298683166504

Token 681: ' résultat' (ID: 62556)
  Prédit: 'rés'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rés' → logprob: -0.6892044544219971
    2. 'result' → logprob: -1.189204454421997
    3. ' résultat' → logprob: -1.814204454421997
    4. 'print' → logprob: -4.314204216003418
    5. 'total' → logprob: -5.189204216003418
    6. 's' → logprob: -5.939204216003418
    7. 'res' → logprob: -6.314204216003418
    8. ' resultat' → logprob: -6.564204216003418
    9. ' result' → logprob: -7.064204216003418
    10. ')' → logprob: -7.564204216003418

Token 682: ' final' (ID: 1721)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0006373812211677432
    2. 'result' → logprob: -7.500637531280518
    3. '
' → logprob: -10.25063705444336
    4. ' print' → logprob: -10.75063705444336
    5. ')
' → logprob: -11.12563705444336
    6. 'n' → logprob: -12.12563705444336
    7. '#' → logprob: -13.62563705444336
    8. ',' → logprob: -14.00063705444336
    9. '=' → logprob: -14.12563705444336
    10. '+' → logprob: -14.25063705444336

Token 683: ' en' (ID: 469)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.000836312014143914
    2. 'result' → logprob: -7.250836372375488
    3. ' print' → logprob: -9.875836372375488
    4. '
' → logprob: -10.000836372375488
    5. 'n' → logprob: -11.750836372375488
    6. '#' → logprob: -12.250836372375488
    7. ',' → logprob: -12.750836372375488
    8. ')
' → logprob: -13.625836372375488
    9. '=' → logprob: -13.750836372375488
    10. ' =' → logprob: -13.875836372375488

Token 684: ' excl' (ID: 57282)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00013560164370574057
    2. ' print' → logprob: -9.62513542175293
    3. 'aff' → logprob: -10.12513542175293
    4. 'abs' → logprob: -11.37513542175293
    5. '#' → logprob: -12.62513542175293
    6. 'python' → logprob: -13.00013542175293
    7. '```' → logprob: -13.25013542175293
    8. 'output' → logprob: -13.37513542175293
    9. ')' → logprob: -13.37513542175293
    10. '   ' → logprob: -13.87513542175293

Token 685: 'uant' (ID: 44411)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.078636884689331
    2. 'ant' → logprob: -1.203636884689331
    3. 'ignant' → logprob: -2.453636884689331
    4. 'cl' → logprob: -2.828636884689331
    5. 'uant' → logprob: -3.203636884689331
    6. 'ev' → logprob: -3.328636884689331
    7. 'u' → logprob: -3.578636884689331
    8. 'vant' → logprob: -3.703636884689331
    9. 'clude' → logprob: -4.70363712310791
    10. '#' → logprob: -5.07863712310791

Token 686: ' la' (ID: 557)
  Prédit: 'taste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'taste' → logprob: -0.38749960064888
    2. ' taste' → logprob: -1.1374995708465576
    3. '1' → logprob: -8.262499809265137
    4. ' ' → logprob: -8.887499809265137
    5. ' ' → logprob: -9.637499809265137
    6. '   ' → logprob: -10.762499809265137
    7. ' tast' → logprob: -10.887499809265137
    8. 'abs' → logprob: -11.137499809265137
    9. '```' → logprob: -11.262499809265137
    10. 't' → logprob: -11.387499809265137

Token 687: ' valeur' (ID: 41664)
  Prédit: 'taste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'taste' → logprob: -0.2289687693119049
    2. ' taste' → logprob: -1.6039687395095825
    3. ' ' → logprob: -7.478968620300293
    4. 'val' → logprob: -7.728968620300293
    5. 'save' → logprob: -8.103968620300293
    6. ' ' → logprob: -8.478968620300293
    7. ' save' → logprob: -8.853968620300293
    8. '```' → logprob: -9.228968620300293
    9. 'value' → logprob: -9.353968620300293
    10. '`' → logprob: -9.478968620300293

Token 688: ' la' (ID: 557)
  Prédit: 'taste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'taste' → logprob: -0.3025904893875122
    2. 'abs' → logprob: -3.0525903701782227
    3. ' taste' → logprob: -3.3025903701782227
    4. ' =' → logprob: -3.5525903701782227
    5. '_' → logprob: -3.6775903701782227
    6. 'print' → logprob: -4.052590370178223
    7. '-' → logprob: -4.302590370178223
    8. ' -' → logprob: -4.427590370178223
    9. '=' → logprob: -4.552590370178223
    10. '_abs' → logprob: -4.802590370178223

Token 689: ' plus' (ID: 2932)
  Prédit: 'taste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'taste' → logprob: -0.27122488617897034
    2. ' taste' → logprob: -3.3962249755859375
    3. ')' → logprob: -3.5212249755859375
    4. '+' → logprob: -3.5212249755859375
    5. 'plus' → logprob: -3.8962249755859375
    6. ' plus' → logprob: -4.2712249755859375
    7. 'aste' → logprob: -4.2712249755859375
    8. '   ' → logprob: -4.3962249755859375
    9. 's' → logprob: -4.5212249755859375
    10. ' ' → logprob: -4.7712249755859375

Token 690: ' "' (ID: 392)
  Prédit: 'pro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pro' → logprob: -0.5376442074775696
    2. 'fa' → logprob: -0.9126442074775696
    3. 'import' → logprob: -5.287644386291504
    4. 'abs' → logprob: -5.787644386291504
    5. 'pet' → logprob: -6.162644386291504
    6. '```' → logprob: -6.662644386291504
    7. ' faible' → logprob: -6.662644386291504
    8. 'fort' → logprob: -8.412644386291504
    9. 'gr' → logprob: -8.787644386291504
    10. 'absolute' → logprob: -9.037644386291504

Token 691: 'ne' (ID: 611)
  Prédit: 'pro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pro' → logprob: -0.574562668800354
    2. 'fa' → logprob: -0.949562668800354
    3. 'import' → logprob: -4.1995625495910645
    4. 'abs' → logprob: -4.3245625495910645
    5. ' faible' → logprob: -4.6995625495910645
    6. 'fort' → logprob: -4.9495625495910645
    7. '```' → logprob: -6.1995625495910645
    8. 'pet' → logprob: -7.0745625495910645
    9. 'é' → logprob: -7.5745625495910645
    10. 'gr' → logprob: -8.199563026428223

Token 692: 'ut' (ID: 339)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.0015389078762382269
    2. 'ut' → logprob: -7.3765387535095215
    3. '
' → logprob: -8.87653923034668
    4. 'f' → logprob: -8.87653923034668
    5. '...' → logprob: -9.50153923034668
    6. 'gs' → logprob: -10.00153923034668
    7. 'utra' → logprob: -10.00153923034668
    8. ' ' → logprob: -10.25153923034668
    9. 'gage' → logprob: -10.37653923034668
    10. 'gre' → logprob: -10.37653923034668

Token 693: 're' (ID: 264)
  Prédit: 're'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.07695451378822327
    2. 'rale' → logprob: -2.9519546031951904
    3. 'tre' → logprob: -5.326954364776611
    4. 'ral' → logprob: -5.576954364776611
    5. 'le' → logprob: -5.826954364776611
    6. 'e' → logprob: -6.076954364776611
    7. 'ut' → logprob: -6.326954364776611
    8. 't' → logprob: -6.451954364776611
    9. '#' → logprob: -7.076954364776611
    10. 've' → logprob: -7.076954364776611

Token 694: '"' (ID: 1)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.2515484690666199
    2. '"' → logprob: -2.5015485286712646
    3. ')' → logprob: -3.0015485286712646
    4. '")' → logprob: -3.0015485286712646
    5. '").' → logprob: -3.6265485286712646
    6. ').' → logprob: -5.7515482902526855
    7. ')"' → logprob: -5.8765482902526855
    8. ' ").' → logprob: -7.0015482902526855
    9. '".' → logprob: -7.6265482902526855
    10. 'te' → logprob: -7.6265482902526855

Token 695: ' selon' (ID: 27571)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.007507009897381067
    2. '
' → logprob: -5.882506847381592
    3. ' print' → logprob: -6.132506847381592
    4. '-' → logprob: -7.257506847381592
    5. '-print' → logprob: -7.882506847381592
    6. 'result' → logprob: -8.13250732421875
    7. '#' → logprob: -8.50750732421875
    8. 'n' → logprob: -8.75750732421875
    9. '*' → logprob: -9.13250732421875
    10. ')
' → logprob: -9.50750732421875

Token 696: ' la' (ID: 557)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.2786024808883667
    2. 'la' → logprob: -1.6536024808883667
    3. ' l' → logprob: -1.7786024808883667
    4. ' la' → logprob: -2.2786026000976562
    5. 'le' → logprob: -2.9036026000976562
    6. 'taste' → logprob: -3.0286026000976562
    7. ' le' → logprob: -3.2786026000976562
    8. 'abs' → logprob: -3.4036026000976562
    9. ' ' → logprob: -4.403602600097656
    10. 'son' → logprob: -4.528602600097656

Token 697: ' valeur' (ID: 41664)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.8325660824775696
    2. 'taste' → logprob: -0.9575660824775696
    3. 'val' → logprob: -2.832566022872925
    4. 'problem' → logprob: -3.582566022872925
    5. 'log' → logprob: -3.707566022872925
    6. 'pro' → logprob: -3.707566022872925
    7. 'description' → logprob: -4.957566261291504
    8. '#' → logprob: -5.457566261291504
    9. '```' → logprob: -5.582566261291504
    10. 'save' → logprob: -5.957566261291504

Token 698: ' absol' (ID: 7374)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0452096126973629
    2. 'n' → logprob: -4.7952094078063965
    3. '*' → logprob: -5.0452094078063965
    4. ',' → logprob: -5.5452094078063965
    5. ' print' → logprob: -5.7952094078063965
    6. '#' → logprob: -5.9202094078063965
    7. ')
' → logprob: -6.0452094078063965
    8. '+' → logprob: -6.1702094078063965
    9. 'result' → logprob: -6.5452094078063965
    10. '-' → logprob: -6.5452094078063965

Token 699: 'ue' (ID: 466)
  Prédit: 'ue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ue' → logprob: -0.25793445110321045
    2. 'ute' → logprob: -1.8829344511032104
    3. 'ule' → logprob: -2.8829345703125
    4. 'u' → logprob: -4.7579345703125
    5. 'te' → logprob: -6.0079345703125
    6. 'le' → logprob: -6.2579345703125
    7. 'utte' → logprob: -7.0079345703125
    8. 'e' → logprob: -7.3829345703125
    9. 'ol' → logprob: -7.3829345703125
    10. 'value' → logprob: -7.7579345703125

Token 700: '.
' (ID: 558)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.004984928295016289
    2. 'result' → logprob: -5.5049848556518555
    3. '
' → logprob: -7.6299848556518555
    4. ' print' → logprob: -9.004984855651855
    5. ')
' → logprob: -10.004984855651855
    6. '#' → logprob: -10.129984855651855
    7. ' =' → logprob: -10.129984855651855
    8. '=' → logprob: -10.379984855651855
    9. 'n' → logprob: -10.754984855651855
    10. ',' → logprob: -10.754984855651855

Token 701: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0004354373668320477
    2. '
' → logprob: -8.125435829162598
    3. 'result' → logprob: -9.375435829162598
    4. ' print' → logprob: -10.500435829162598
    5. '```' → logprob: -10.625435829162598
    6. '``' → logprob: -14.750435829162598
    7. '#' → logprob: -15.125435829162598
    8. '  
' → logprob: -15.250435829162598
    9. '
' → logprob: -15.375435829162598
    10. '+' → logprob: -15.375435829162598

Token 702: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.000730185944121331
    2. '(' → logprob: -7.750730037689209
    3. '((' → logprob: -8.125730514526367
    4. 'n' → logprob: -13.125730514526367
    5. ' (' → logprob: -14.125730514526367
    6. '(sum' → logprob: -14.500730514526367
    7. '(
' → logprob: -15.625730514526367
    8. '(print' → logprob: -16.375730514526367
    9. '(((' → logprob: -16.875730514526367
    10. ' n' → logprob: -17.125730514526367

Token 703: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.10030166804790497
    2. ' *' → logprob: -2.350301742553711
    3. ')' → logprob: -9.350301742553711
    4. ',' → logprob: -13.725301742553711
    5. ' ' → logprob: -13.850301742553711
    6. '"' → logprob: -13.975301742553711
    7. ' ' → logprob: -13.975301742553711
    8. '```' → logprob: -14.225301742553711
    9. '**' → logprob: -14.350301742553711
    10. '*)' → logprob: -14.725301742553711

Token 704: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0036079094279557467
    2. ' l' → logprob: -5.628607749938965
    3. '(l' → logprob: -12.128607749938965
    4. '(' → logprob: -13.753607749938965
    5. ' ' → logprob: -14.628607749938965
    6. ' (' → logprob: -14.628607749938965
    7. '	l' → logprob: -15.878607749938965
    8. 'n' → logprob: -16.25360870361328
    9. '   ' → logprob: -17.12860870361328
    10. '  ' → logprob: -17.12860870361328

Token 705: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.12878979742527008
    2. '+' → logprob: -2.1287899017333984
    3. ')' → logprob: -7.003789901733398
    4. ' -' → logprob: -7.128789901733398
    5. '-' → logprob: -9.878789901733398
    6. ' ' → logprob: -10.003789901733398
    7. '+n' → logprob: -10.503789901733398
    8. '   ' → logprob: -11.753789901733398
    9. ' )' → logprob: -12.128789901733398
    10. '  ' → logprob: -13.003789901733398

Token 706: ' (' (ID: 350)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.004760003183037043
    2. '(n' → logprob: -5.379759788513184
    3. ' n' → logprob: -9.004759788513184
    4. ' (' → logprob: -11.754759788513184
    5. '(' → logprob: -12.254759788513184
    6. '((' → logprob: -12.504759788513184
    7. '   ' → logprob: -15.504759788513184
    8. '_n' → logprob: -15.629759788513184
    9. '	n' → logprob: -16.0047607421875
    10. '
' → logprob: -16.8797607421875

Token 707: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0007324361358769238
    2. '(n' → logprob: -7.250732421875
    3. ' n' → logprob: -10.875732421875
    4. '(' → logprob: -13.875732421875
    5. 'i' → logprob: -14.000732421875
    6. ' (' → logprob: -14.500732421875
    7. '   ' → logprob: -14.625732421875
    8. '((' → logprob: -15.000732421875
    9. ')n' → logprob: -15.125732421875
    10. '(i' → logprob: -15.750732421875

Token 708: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.016559896990656853
    2. ' *' → logprob: -4.141560077667236
    3. '*(' → logprob: -7.766560077667236
    4. ')' → logprob: -9.516559600830078
    5. ' ' → logprob: -10.641559600830078
    6. ' ' → logprob: -14.016559600830078
    7. '-' → logprob: -14.141559600830078
    8. '+' → logprob: -14.641559600830078
    9. '(n' → logprob: -14.641559600830078
    10. ')*' → logprob: -14.891559600830078

Token 709: ' (' (ID: 350)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00978406984359026
    2. ' (' → logprob: -4.63478422164917
    3. '(' → logprob: -10.884783744812012
    4. 'n' → logprob: -12.134783744812012
    5. '((' → logprob: -13.634783744812012
    6. '   ' → logprob: -13.884783744812012
    7. ' ' → logprob: -14.759783744812012
    8. '
' → logprob: -15.509783744812012
    9. '*(' → logprob: -15.509783744812012
    10. ')' → logprob: -15.759783744812012

Token 710: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0003981376066803932
    2. '(n' → logprob: -7.8753981590271
    3. '+' → logprob: -11.500397682189941
    4. ' n' → logprob: -12.750397682189941
    5. '1' → logprob: -12.875397682189941
    6. '	n' → logprob: -14.375397682189941
    7. '(' → logprob: -15.000397682189941
    8. '```' → logprob: -15.000397682189941
    9. 'l' → logprob: -15.125397682189941
    10. '   ' → logprob: -15.250397682189941

Token 711: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0172920860350132
    2. ' +' → logprob: -4.142292022705078
    3. '-' → logprob: -6.767292022705078
    4. ' -' → logprob: -9.392292022705078
    5. ' ' → logprob: -12.142292022705078
    6. '1' → logprob: -12.267292022705078
    7. '+
' → logprob: -12.642292022705078
    8. '```' → logprob: -12.892292022705078
    9. ')' → logprob: -13.017292022705078
    10. '
' → logprob: -13.767292022705078

Token 712: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.125001907348633
    3. '```' → logprob: -18.750001907348633
    4. 'print' → logprob: -19.125001907348633
    5. ')' → logprob: -19.250001907348633
    6. '   ' → logprob: -19.625001907348633
    7. '
' → logprob: -20.500001907348633
    8. '(' → logprob: -20.500001907348633
    9. '-' → logprob: -20.625001907348633
    10. '۱' → logprob: -20.875001907348633

Token 713: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.5
    3. '```' → logprob: -17.875
    4. '-' → logprob: -18.0
    5. 'print' → logprob: -19.125
    6. ')' → logprob: -19.5
    7. '(' → logprob: -20.125
    8. '
' → logprob: -20.5
    9. '   ' → logprob: -20.5
    10. '１' → logprob: -20.875

Token 714: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06057412922382355
    2. '//' → logprob: -3.3105740547180176
    3. ' //' → logprob: -3.9355740547180176
    4. ')//' → logprob: -6.310574054718018
    5. ' )' → logprob: -8.185574531555176
    6. '#' → logprob: -8.185574531555176
    7. '()' → logprob: -8.310574531555176
    8. '```' → logprob: -9.310574531555176
    9. ' ' → logprob: -11.435574531555176
    10. '   ' → logprob: -11.935574531555176

Token 715: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.22632043063640594
    2. ' //' → logprob: -1.7263203859329224
    3. ')' → logprob: -3.726320505142212
    4. '#' → logprob: -8.601320266723633
    5. ')//' → logprob: -8.851320266723633
    6. '```' → logprob: -8.976320266723633
    7. '()' → logprob: -9.976320266723633
    8. ' ' → logprob: -11.601320266723633
    9. ' )' → logprob: -12.351320266723633
    10. '
' → logprob: -13.976320266723633

Token 716: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.5094070477061905e-05
    2. ' ' → logprob: -11.125015258789062
    3. ')' → logprob: -16.625015258789062
    4. '```' → logprob: -17.125015258789062
    5. '   ' → logprob: -17.375015258789062
    6. '
' → logprob: -18.500015258789062
    7. '1' → logprob: -18.625015258789062
    8. '
' → logprob: -19.750015258789062
    9. '۲' → logprob: -19.875015258789062
    10. '  ' → logprob: -20.000015258789062

Token 717: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.127333340875339e-06
    2. ' ' → logprob: -12.500003814697266
    3. '   ' → logprob: -16.000003814697266
    4. '1' → logprob: -16.875003814697266
    5. '```' → logprob: -17.562503814697266
    6. '  ' → logprob: -17.812503814697266
    7. '22' → logprob: -17.875003814697266
    8. '۲' → logprob: -18.062503814697266
    9. '212' → logprob: -18.250003814697266
    10. '21' → logprob: -18.375003814697266

Token 718: ')' (ID: 8)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.2048265039920807
    2. ')' → logprob: -1.8298264741897583
    3. '-' → logprob: -3.704826593399048
    4. ' )' → logprob: -9.204826354980469
    5. ' ' → logprob: -9.954826354980469
    6. ')-' → logprob: -11.454826354980469
    7. '   ' → logprob: -13.204826354980469
    8. '#' → logprob: -13.579826354980469
    9. '  ' → logprob: -14.204826354980469
    10. ' ' → logprob: -14.329826354980469

Token 719: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0017362285871058702
    2. '-' → logprob: -6.376736164093018
    3. ' ' → logprob: -10.626736640930176
    4. ')' → logprob: -11.626736640930176
    5. '  ' → logprob: -15.001736640930176
    6. '   ' → logprob: -15.251736640930176
    7. ' )' → logprob: -16.50173568725586
    8. ' ' → logprob: -16.87673568725586
    9. '    ' → logprob: -17.25173568725586
    10. '```' → logprob: -17.50173568725586

Token 720: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0670701190829277
    2. '1' → logprob: -2.8170700073242188
    3. ' n' → logprob: -5.317070007324219
    4. ' ' → logprob: -9.442070007324219
    5. 'taste' → logprob: -10.317070007324219
    6. '(n' → logprob: -10.692070007324219
    7. '   ' → logprob: -11.192070007324219
    8. '	n' → logprob: -11.567070007324219
    9. '(' → logprob: -12.692070007324219
    10. '
' → logprob: -12.754570007324219

Token 721: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.016201525926589966
    2. '-' → logprob: -4.141201496124268
    3. ' ' → logprob: -9.016201972961426
    4. ')' → logprob: -10.391201972961426
    5. '*' → logprob: -11.641201972961426
    6. ' ' → logprob: -12.516201972961426
    7. '  ' → logprob: -14.516201972961426
    8. '#' → logprob: -14.891201972961426
    9. '+' → logprob: -15.016201972961426
    10. '<|end|>' → logprob: -15.391201972961426

Token 722: ' taste' (ID: 14673)
  Prédit: 'taste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'taste' → logprob: -0.0006267757853493094
    2. ' taste' → logprob: -7.375626564025879
    3. 't' → logprob: -16.250627517700195
    4. 'Taste' → logprob: -16.625627517700195
    5. 'abs' → logprob: -16.750627517700195
    6. '   ' → logprob: -17.000627517700195
    7. '(t' → logprob: -17.750627517700195
    8. ' ' → logprob: -18.750627517700195
    9. ' ' → logprob: -19.000627517700195
    10. '	t' → logprob: -19.250627517700195

Token 723: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.084206375409849e-05
    2. ' )' → logprob: -10.125041007995605
    3. ')`' → logprob: -15.250041007995605
    4. '+' → logprob: -15.875041007995605
    5. '))' → logprob: -16.00004005432129
    6. ')
' → logprob: -16.00004005432129
    7. '`)' → logprob: -16.62504005432129
    8. '')' → logprob: -18.00004005432129
    9. ')#' → logprob: -18.12504005432129
    10. '```' → logprob: -18.25004005432129


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 721
Tokens correctement prédits (1ère position, stricte): 169
Tokens correctement prédits (1ère position, avec adaptation): 170
Tokens correctement prédits (top 10): 399
Précision stricte (1ère position): 23.44%
Précision adaptée (1ère position): 23.58%
Précision (top 10): 55.34%
================================================================================
