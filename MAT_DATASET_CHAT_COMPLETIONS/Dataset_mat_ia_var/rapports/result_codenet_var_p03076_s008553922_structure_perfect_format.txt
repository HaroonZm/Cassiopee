================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:03:35
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from math import ceil

a = [int(input()) for _ in range(5)]
b = [ceil(i / 10) * 10 for i in a]
c = [
    sum([a[i]] + [b[j] for j in range(5) if i != j])
    for i in range(5)
]
print(min(c))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' math' (ID: 13324)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' ceil' (ID: 35964)
  Prédit: 'sqrt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sqrt' → logprob: -0.2518087923526764
    2. ' sqrt' → logprob: -1.751808762550354
    3. 'pow' → logprob: -4.0018086433410645
    4. 'pi' → logprob: -4.7518086433410645
    5. 'sin' → logprob: -4.7518086433410645
    6. ' pi' → logprob: -5.0018086433410645
    7. 'import' → logprob: -6.3768086433410645
    8. 'ceil' → logprob: -7.0018086433410645
    9. ' sin' → logprob: -7.1268086433410645
    10. 'log' → logprob: -7.6268086433410645

Token 4: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00012284684635233134
    2. '\(' → logprob: -9.375123023986816
    3. '(
' → logprob: -11.000123023986816
    4. ' (' → logprob: -12.375123023986816
    5. '\' → logprob: -12.500123023986816
    6. ',' → logprob: -12.500123023986816
    7. ' ' → logprob: -12.750123023986816
    8. 'a' → logprob: -13.500123023986816
    9. '\n' → logprob: -13.750123023986816
    10. '.' → logprob: -13.750123023986816

Token 5: 'a' (ID: 64)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0027203490026295185
    2. '\(' → logprob: -6.377720355987549
    3. '(
' → logprob: -7.752720355987549
    4. '\' → logprob: -8.00271987915039
    5. ',' → logprob: -10.25271987915039
    6. 'd' → logprob: -10.37771987915039
    7. '#' → logprob: -10.50271987915039
    8. ' ' → logprob: -10.75271987915039
    9. '
' → logprob: -10.75271987915039
    10. '\n' → logprob: -10.87771987915039

Token 6: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -1.7611631155014038
    2. ')' → logprob: -1.8861631155014038
    3. '_' → logprob: -2.0111632347106934
    4. ' ' → logprob: -2.0111632347106934
    5. '=' → logprob: -2.2611632347106934
    6. '(' → logprob: -2.5111632347106934
    7. '[' → logprob: -2.6361632347106934
    8. 'p' → logprob: -3.1361632347106934
    9. 'r' → logprob: -3.7611632347106934
    10. 's' → logprob: -3.8861632347106934

Token 7: ' [' (ID: 723)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.011284544132649899
    2. '5' → logprob: -5.636284351348877
    3. ' ceil' → logprob: -6.261284351348877
    4. '10' → logprob: -6.386284351348877
    5. '0' → logprob: -6.761284351348877
    6. '1' → logprob: -7.386284351348877
    7. '4' → logprob: -7.386284351348877
    8. '3' → logprob: -7.386284351348877
    9. '2' → logprob: -8.761284828186035
    10. '20' → logprob: -9.136284828186035

Token 8: 'int' (ID: 491)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.47701409459114075
    2. '0' → logprob: -0.9770140647888184
    3. ']' → logprob: -6.852014064788818
    4. '10' → logprob: -7.477014064788818
    5. ' ' → logprob: -7.602014064788818
    6. '42' → logprob: -7.977014064788818
    7. '2' → logprob: -9.477014541625977
    8. '   ' → logprob: -9.727014541625977
    9. '5' → logprob: -9.727014541625977
    10. '3' → logprob: -9.852014541625977

Token 9: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.000873347744345665
    2. '(x' → logprob: -8.000873565673828
    3. ' ' → logprob: -8.750873565673828
    4. '(a' → logprob: -8.875873565673828
    5. ']' → logprob: -9.125873565673828
    6. '('' → logprob: -10.625873565673828
    7. '(token' → logprob: -10.875873565673828
    8. ' (' → logprob: -11.125873565673828
    9. '(s' → logprob: -11.500873565673828
    10. ')' → logprob: -12.000873565673828

Token 10: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.6789966821670532
    2. '()' → logprob: -0.9289966821670532
    3. '(' → logprob: -2.5539965629577637
    4. '()))' → logprob: -4.678996562957764
    5. '()]' → logprob: -5.678996562957764
    6. '(()' → logprob: -5.928996562957764
    7. '('' → logprob: -6.553996562957764
    8. ')' → logprob: -6.928996562957764
    9. '());' → logprob: -7.678996562957764
    10. '(""))' → logprob: -8.678997039794922

Token 11: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3193248510360718
    2. ']' → logprob: -1.6943248510360718
    3. ')]' → logprob: -2.4443249702453613
    4. ')])' → logprob: -6.819324970245361
    5. '])' → logprob: -6.819324970245361
    6. '])]' → logprob: -8.944324493408203
    7. '[' → logprob: -9.069324493408203
    8. '),' → logprob: -9.444324493408203
    9. ' )' → logprob: -9.944324493408203
    10. '`]' → logprob: -10.069324493408203

Token 12: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.00039623770862817764
    2. ' ' → logprob: -8.125395774841309
    3. ' i' → logprob: -10.250395774841309
    4. 'range' → logprob: -10.750395774841309
    5. ' _' → logprob: -10.875395774841309
    6. ' a' → logprob: -11.250395774841309
    7. ' in' → logprob: -12.125395774841309
    8. '	range' → logprob: -13.250395774841309
    9. ' xrange' → logprob: -13.625395774841309
    10. '_range' → logprob: -13.625395774841309

Token 13: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.47413066029548645
    2. 'in' → logprob: -0.9741306304931641
    3. ' ' → logprob: -11.224130630493164
    4. '	in' → logprob: -11.474130630493164
    5. 'import' → logprob: -12.099130630493164
    6. '<|end|>' → logprob: -12.099130630493164
    7. 'a' → logprob: -12.599130630493164
    8. 'i' → logprob: -13.224130630493164
    9. 'n' → logprob: -13.224130630493164
    10. 'range' → logprob: -13.599130630493164

Token 14: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.20142795145511627
    2. ' range' → logprob: -1.701427936553955
    3. 'a' → logprob: -11.451428413391113
    4. ' a' → logprob: -13.701428413391113
    5. '[' → logprob: -13.826428413391113
    6. '	range' → logprob: -14.326428413391113
    7. '(range' → logprob: -14.576428413391113
    8. 'iter' → logprob: -15.451428413391113
    9. ' xrange' → logprob: -15.701428413391113
    10. ' ' → logprob: -16.201427459716797

Token 15: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -5.9153885558771435e-06
    2. '(len' → logprob: -12.500005722045898
    3. ' (' → logprob: -14.000005722045898
    4. '(n' → logprob: -14.375005722045898
    5. '4' → logprob: -15.375005722045898
    6. '3' → logprob: -16.0000057220459
    7. '6' → logprob: -16.3750057220459
    8. '(range' → logprob: -16.3750057220459
    9. '(a' → logprob: -17.0000057220459
    10. '5' → logprob: -17.0000057220459

Token 16: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.5482925772666931
    2. '10' → logprob: -1.173292636871338
    3. '3' → logprob: -2.298292636871338
    4. '4' → logprob: -5.173292636871338
    5. '6' → logprob: -5.423292636871338
    6. '7' → logprob: -7.673292636871338
    7. '8' → logprob: -7.673292636871338
    8. '2' → logprob: -7.798292636871338
    9. '1' → logprob: -8.67329216003418
    10. '100' → logprob: -8.79829216003418

Token 17: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0013586864806711674
    2. ')' → logprob: -7.001358509063721
    3. ']' → logprob: -8.001358985900879
    4. ')])' → logprob: -9.251358985900879
    5. '])]' → logprob: -11.751358985900879
    6. '')]' → logprob: -12.876358985900879
    7. '])' → logprob: -13.751358985900879
    8. '))' → logprob: -13.751358985900879
    9. ' )' → logprob: -13.876358985900879
    10. '`]' → logprob: -15.001358985900879

Token 18: 'b' (ID: 65)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -1.4199018478393555
    2. 's' → logprob: -1.9199018478393555
    3. 'avg' → logprob: -2.1699018478393555
    4. 'result' → logprob: -2.5449018478393555
    5. 'mean' → logprob: -2.6699018478393555
    6. 'm' → logprob: -2.7949018478393555
    7. 'a' → logprob: -2.9199018478393555
    8. 'b' → logprob: -3.0449018478393555
    9. 'average' → logprob: -3.0449018478393555
    10. 'print' → logprob: -3.1699018478393555

Token 19: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.13058458268642426
    2. '=' → logprob: -3.130584478378296
    3. '[' → logprob: -3.130584478378296
    4. '_' → logprob: -3.505584478378296
    5. '[:]' → logprob: -6.380584716796875
    6. '.' → logprob: -7.005584716796875
    7. ' ' → logprob: -7.505584716796875
    8. '[]' → logprob: -7.505584716796875
    9. '=[]' → logprob: -8.130584716796875
    10. ')' → logprob: -8.630584716796875

Token 20: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.26410791277885437
    2. '[' → logprob: -1.7641079425811768
    3. ' sorted' → logprob: -4.514107704162598
    4. ' ceil' → logprob: -4.514107704162598
    5. ' a' → logprob: -5.139107704162598
    6. '[a' → logprob: -5.139107704162598
    7. '[max' → logprob: -5.139107704162598
    8. ' sum' → logprob: -5.264107704162598
    9. '[int' → logprob: -5.389107704162598
    10. 'sorted' → logprob: -5.639107704162598

Token 21: 'ceil' (ID: 43552)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00521288625895977
    2. ' int' → logprob: -6.255212783813477
    3. '0' → logprob: -6.630212783813477
    4. 'ceil' → logprob: -7.130212783813477
    5. 'a' → logprob: -7.880212783813477
    6. '(int' → logprob: -8.130212783813477
    7. 'input' → logprob: -8.755212783813477
    8. 'float' → logprob: -9.005212783813477
    9. '1' → logprob: -10.130212783813477
    10. 'abs' → logprob: -10.755212783813477

Token 22: '(i' (ID: 3649)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.07978757470846176
    2. '(' → logprob: -3.079787492752075
    3. '((' → logprob: -3.954787492752075
    4. '(x' → logprob: -4.579787731170654
    5. '(i' → logprob: -7.204787731170654
    6. '(sum' → logprob: -8.954787254333496
    7. '(s' → logprob: -9.329787254333496
    8. '(b' → logprob: -9.579787254333496
    9. '(len' → logprob: -10.329787254333496
    10. '(n' → logprob: -10.329787254333496

Token 23: ' /' (ID: 820)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6740574836730957
    2. '/' → logprob: -0.9240574836730957
    3. ' /' → logprob: -2.4240574836730957
    4. ' (' → logprob: -6.549057483673096
    5. '(a' → logprob: -6.674057483673096
    6. '(/' → logprob: -7.549057483673096
    7. '(i' → logprob: -7.674057483673096
    8. '(s' → logprob: -7.924057483673096
    9. ')' → logprob: -8.424057006835938
    10. '*' → logprob: -8.549057006835938

Token 24: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.02447340078651905
    2. '2' → logprob: -4.149473190307617
    3. '3' → logprob: -5.399473190307617
    4. ' ' → logprob: -6.274473190307617
    5. '5' → logprob: -6.899473190307617
    6. '4' → logprob: -7.899473190307617
    7. '9' → logprob: -9.149473190307617
    8. '   ' → logprob: -9.399473190307617
    9. '100' → logprob: -9.524473190307617
    10. '1' → logprob: -10.024473190307617

Token 25: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -2.856408536899835e-05
    2. '5' → logprob: -11.375028610229492
    3. ' ' → logprob: -12.625028610229492
    4. '1' → logprob: -12.625028610229492
    5. '30' → logprob: -13.625028610229492
    6. '{' → logprob: -13.625028610229492
    7. '3' → logprob: -13.750028610229492
    8. '

' → logprob: -14.187528610229492
    9. 'a' → logprob: -14.187528610229492
    10. '100' → logprob: -14.562528610229492

Token 26: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0034722555428743362
    2. ')*' → logprob: -5.753472328186035
    3. ')]' → logprob: -8.378472328186035
    4. ')])' → logprob: -10.503472328186035
    5. ' )' → logprob: -11.503472328186035
    6. '))' → logprob: -11.628472328186035
    7. '),' → logprob: -11.878472328186035
    8. '0' → logprob: -12.128472328186035
    9. ')`' → logprob: -14.378472328186035
    10. ')**' → logprob: -14.503472328186035

Token 27: ' *' (ID: 425)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16602648794651031
    2. ')*' → logprob: -2.0410265922546387
    3. '*' → logprob: -3.9160265922546387
    4. ' *' → logprob: -6.166026592254639
    5. ')]' → logprob: -7.416026592254639
    6. ' )' → logprob: -8.41602611541748
    7. '0' → logprob: -9.41602611541748
    8. '),' → logprob: -10.04102611541748
    9. '*)' → logprob: -10.41602611541748
    10. ']' → logprob: -10.66602611541748

Token 28: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -3.273621405242011e-05
    2. ' ' → logprob: -10.625032424926758
    3. '1' → logprob: -12.500032424926758
    4. '100' → logprob: -13.625032424926758
    5. '```' → logprob: -14.437532424926758
    6. '0' → logprob: -14.687532424926758
    7. '  ' → logprob: -15.187532424926758
    8. '110' → logprob: -15.250032424926758
    9. '`' → logprob: -15.312532424926758
    10. ')' → logprob: -15.500032424926758

Token 29: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -1.723973582556937e-05
    2. ' ' → logprob: -11.500017166137695
    3. '1' → logprob: -12.250017166137695
    4. '```' → logprob: -14.687517166137695
    5. '100' → logprob: -15.000017166137695
    6. '  ' → logprob: -15.625017166137695
    7. '   ' → logprob: -15.750017166137695
    8. 'a' → logprob: -15.750017166137695
    9. '0' → logprob: -15.937517166137695
    10. 'i' → logprob: -16.062517166137695

Token 30: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6706842184066772
    2. ']' → logprob: -1.1706842184066772
    3. ')' → logprob: -2.420684337615967
    4. 'for' → logprob: -2.545684337615967
    5. ')]' → logprob: -4.795684337615967
    6. ' ]' → logprob: -6.170684337615967
    7. ' ' → logprob: -8.045683860778809
    8. ' )' → logprob: -8.545683860778809
    9. ',' → logprob: -9.545683860778809
    10. '])' → logprob: -9.795683860778809

Token 31: ' i' (ID: 575)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.17975468933582306
    2. ' a' → logprob: -1.8047547340393066
    3. ' ' → logprob: -11.804754257202148
    4. ' range' → logprob: -14.679754257202148
    5. 'b' → logprob: -14.804754257202148
    6. '	a' → logprob: -14.929754257202148
    7. ' b' → logprob: -15.179754257202148
    8. ')a' → logprob: -15.429754257202148
    9. '(a' → logprob: -15.679754257202148
    10. 'range' → logprob: -15.804754257202148

Token 32: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3628736734390259
    2. 'a' → logprob: -1.7378736734390259
    3. ' a' → logprob: -2.4878735542297363
    4. 'in' → logprob: -3.1128735542297363
    5. ')' → logprob: -7.862873554229736
    6. '(a' → logprob: -8.237874031066895
    7. ' ' → logprob: -8.862874031066895
    8. ')a' → logprob: -10.487874031066895
    9. ']' → logprob: -11.362874031066895
    10. ' )' → logprob: -11.612874031066895

Token 33: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.01603507250547409
    2. ' a' → logprob: -4.141035079956055
    3. 'b' → logprob: -14.891035079956055
    4. '(a' → logprob: -16.016035079956055
    5. ')a' → logprob: -16.141035079956055
    6. ' ' → logprob: -16.391035079956055
    7. 'а' → logprob: -16.641035079956055
    8. ')' → logprob: -17.141035079956055
    9. '_a' → logprob: -17.641035079956055
    10. '	a' → logprob: -17.641035079956055

Token 34: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.038661807775497437
    2. ')]' → logprob: -3.2886617183685303
    3. ')' → logprob: -7.663661956787109
    4. '])' → logprob: -8.91366195678711
    5. '])]' → logprob: -11.91366195678711
    6. ' ]' → logprob: -12.66366195678711
    7. ')])' → logprob: -13.03866195678711
    8. '`]' → logprob: -13.53866195678711
    9. ']
' → logprob: -14.16366195678711
    10. ']]' → logprob: -15.03866195678711

Token 35: 'c' (ID: 66)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.37254762649536133
    2. '[' → logprob: -2.7475476264953613
    3. '<|end|>' → logprob: -2.7475476264953613
    4. '#' → logprob: -3.1225476264953613
    5. 'b' → logprob: -3.3725476264953613
    6. ')' → logprob: -3.6225476264953613
    7. 'print' → logprob: -4.122547626495361
    8. ']' → logprob: -4.247547626495361
    9. '+' → logprob: -4.247547626495361
    10. ' ' → logprob: -4.747547626495361

Token 36: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3467042148113251
    2. '=' → logprob: -2.0967042446136475
    3. '.' → logprob: -2.2217042446136475
    4. '[' → logprob: -2.9717042446136475
    5. '_' → logprob: -5.346704006195068
    6. 's' → logprob: -6.096704006195068
    7. '[:]' → logprob: -7.096704006195068
    8. ')' → logprob: -7.971704006195068
    9. '.append' → logprob: -8.096704483032227
    10. ',' → logprob: -8.221704483032227

Token 37: ' [
' (ID: 4240)
  Prédit: ' sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sum' → logprob: -1.529184103012085
    2. 'sum' → logprob: -1.529184103012085
    3. '[' → logprob: -1.654184103012085
    4. ' [' → logprob: -1.904184103012085
    5. '[min' → logprob: -2.904184103012085
    6. '[max' → logprob: -3.029184103012085
    7. '[b' → logprob: -3.529184103012085
    8. ' b' → logprob: -3.779184103012085
    9. ' max' → logprob: -3.904184103012085
    10. 'b' → logprob: -3.904184103012085

Token 38: '   ' (ID: 271)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.6766819357872009
    2. 'i' → logprob: -1.1766819953918457
    3. 'max' → logprob: -2.5516819953918457
    4. 'x' → logprob: -3.8016819953918457
    5. 'ceil' → logprob: -4.051681995391846
    6. 'min' → logprob: -4.301681995391846
    7. 'sum' → logprob: -4.801681995391846
    8. '(i' → logprob: -5.051681995391846
    9. '(b' → logprob: -5.426681995391846
    10. '0' → logprob: -5.551681995391846

Token 39: ' sum' (ID: 4215)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.6197897791862488
    2. 'i' → logprob: -1.4947898387908936
    3. 'max' → logprob: -2.3697898387908936
    4. 'x' → logprob: -3.7447898387908936
    5. '(i' → logprob: -3.7447898387908936
    6. 'ceil' → logprob: -3.9947898387908936
    7. 'min' → logprob: -4.1197896003723145
    8. 'sum' (adapté à ' sum') → logprob: -4.2447896003723145
    9. '(b' → logprob: -4.2447896003723145
    10. 'abs' → logprob: -5.4947896003723145

Token 40: '([' (ID: 5194)
  Prédit: '(b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.08391311019659042
    2. '(' → logprob: -3.4589130878448486
    3. '(a' → logprob: -4.083913326263428
    4. '(i' → logprob: -4.208913326263428
    5. '([' → logprob: -4.583913326263428
    6. 'b' → logprob: -5.958913326263428
    7. '((' → logprob: -6.708913326263428
    8. '(x' → logprob: -6.833913326263428
    9. '(min' → logprob: -7.833913326263428
    10. '(c' → logprob: -7.958913326263428

Token 41: 'a' (ID: 64)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.43743085861206055
    2. 'i' → logprob: -2.3124308586120605
    3. 'max' → logprob: -2.8124308586120605
    4. 'x' → logprob: -3.0624308586120605
    5. 'a' → logprob: -3.8124308586120605
    6. '(b' → logprob: -3.9374308586120605
    7. 'j' → logprob: -4.0624308586120605
    8. '(i' → logprob: -4.1874308586120605
    9. '(' → logprob: -4.4374308586120605
    10. 'abs' → logprob: -4.4374308586120605

Token 42: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.14491529762744904
    2. '[:' → logprob: -2.1449153423309326
    3. '[j' → logprob: -4.6449151039123535
    4. '])' → logprob: -5.1449151039123535
    5. '[' → logprob: -7.2699151039123535
    6. '[:-' → logprob: -8.019915580749512
    7. '[k' → logprob: -8.644915580749512
    8. '[x' → logprob: -8.769915580749512
    9. '])]' → logprob: -8.894915580749512
    10. ')' → logprob: -9.019915580749512

Token 43: ']]' (ID: 8928)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.016836214810609818
    2. ']+' → logprob: -6.016836166381836
    3. ']-' → logprob: -6.391836166381836
    4. '])' → logprob: -6.391836166381836
    5. '],' → logprob: -6.391836166381836
    6. '][' → logprob: -6.641836166381836
    7. ']])' → logprob: -6.641836166381836
    8. '-' → logprob: -6.766836166381836
    9. ']*' → logprob: -7.266836166381836
    10. '+' → logprob: -7.266836166381836

Token 44: ' +' (ID: 659)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.34608420729637146
    2. 'for' → logprob: -1.3460842370986938
    3. ')' → logprob: -4.096084117889404
    4. '+' → logprob: -4.971084117889404
    5. '   ' → logprob: -5.971084117889404
    6. '-' → logprob: -6.096084117889404
    7. ',' → logprob: -6.721084117889404
    8. '  ' → logprob: -7.346084117889404
    9. ' ' → logprob: -8.096084594726562
    10. ' -' → logprob: -8.096084594726562

Token 45: ' [' (ID: 723)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.5672005414962769
    2. ' b' → logprob: -1.8172005414962769
    3. '[b' → logprob: -2.0672006607055664
    4. ' [' → logprob: -2.4422006607055664
    5. '[' → logprob: -3.1922006607055664
    6. '[a' → logprob: -4.567200660705566
    7. 'a' → logprob: -6.567200660705566
    8. '   ' → logprob: -7.192200660705566
    9. '([' → logprob: -7.442200660705566
    10. '[i' → logprob: -7.567200660705566

Token 46: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0240310151129961
    2. 'a' → logprob: -5.024031162261963
    3. '(' → logprob: -5.774031162261963
    4. '10' → logprob: -6.024031162261963
    5. 'j' → logprob: -6.149031162261963
    6. 'c' → logprob: -6.274031162261963
    7. '(b' → logprob: -6.274031162261963
    8. 'x' → logprob: -6.899031162261963
    9. 'max' → logprob: -7.024031162261963
    10. ' b' → logprob: -7.149031162261963

Token 47: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.09047027677297592
    2. '[i' → logprob: -2.465470314025879
    3. '[(' → logprob: -6.840470314025879
    4. '[-' → logprob: -8.840470314025879
    5. 'j' → logprob: -8.965470314025879
    6. '[' → logprob: -9.715470314025879
    7. '][' → logprob: -11.090470314025879
    8. '[:' → logprob: -11.090470314025879
    9. 'i' → logprob: -11.090470314025879
    10. '[idx' → logprob: -11.340470314025879

Token 48: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.19429579377174377
    2. ' for' → logprob: -2.319295883178711
    3. 'for' → logprob: -2.569295883178711
    4. ']])' → logprob: -7.319295883178711
    5. '])' → logprob: -7.819295883178711
    6. '	for' → logprob: -9.319295883178711
    7. ' ' → logprob: -9.444295883178711
    8. '   ' → logprob: -9.694295883178711
    9. 'j' → logprob: -9.819295883178711
    10. '-' → logprob: -10.069295883178711

Token 49: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.42950382828712463
    2. 'for' → logprob: -1.0545037984848022
    3. ']' → logprob: -8.304503440856934
    4. '	for' → logprob: -8.429503440856934
    5. ' ' → logprob: -8.929503440856934
    6. '   ' → logprob: -9.554503440856934
    7. '])' → logprob: -9.929503440856934
    8. '-' → logprob: -10.179503440856934
    9. '    ' → logprob: -11.804503440856934
    10. '  ' → logprob: -11.929503440856934

Token 50: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.3488452136516571
    2. ' j' → logprob: -1.2238452434539795
    3. ' in' → logprob: -7.8488450050354
    4. '	j' → logprob: -13.098845481872559
    5. ' ' → logprob: -13.223845481872559
    6. 'in' → logprob: -13.223845481872559
    7. 'jj' → logprob: -14.098845481872559
    8. '_j' → logprob: -14.348845481872559
    9. '   ' → logprob: -14.473845481872559
    10. ' ' → logprob: -14.723845481872559

Token 51: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005959964822977781
    2. 'in' → logprob: -5.130959987640381
    3. '	in' → logprob: -11.380959510803223
    4. ' ' → logprob: -12.130959510803223
    5. 'range' → logprob: -12.130959510803223
    6. ' i' → logprob: -13.380959510803223
    7. ' range' → logprob: -13.880959510803223
    8. 'if' → logprob: -13.880959510803223
    9. '   ' → logprob: -14.005959510803223
    10. 'not' → logprob: -14.130959510803223

Token 52: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.11293880641460419
    2. 'range' → logprob: -2.23793888092041
    3. ' ' → logprob: -10.36293888092041
    4. '[' → logprob: -10.73793888092041
    5. ' [' → logprob: -11.48793888092041
    6. '(range' → logprob: -11.61293888092041
    7. '	range' → logprob: -11.67543888092041
    8. ' xrange' → logprob: -12.23793888092041
    9. '   ' → logprob: -12.73793888092041
    10. 'ran' → logprob: -12.80043888092041

Token 53: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.09391474723815918
    2. '(len' → logprob: -2.843914747238159
    3. '(i' → logprob: -3.468914747238159
    4. '5' → logprob: -8.593914985656738
    5. 'len' → logprob: -10.343914985656738
    6. '4' → logprob: -10.593914985656738
    7. ' (' → logprob: -10.968914985656738
    8. '   ' → logprob: -11.468914985656738
    9. ' ' → logprob: -12.218914985656738
    10. ' len' → logprob: -12.968914985656738

Token 54: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.02837359718978405
    2. 'i' → logprob: -4.028373718261719
    3. 'len' → logprob: -5.153373718261719
    4. '4' → logprob: -5.903373718261719
    5. '0' → logprob: -7.278373718261719
    6. ' ' → logprob: -7.903373718261719
    7. '   ' → logprob: -8.278373718261719
    8. ' i' → logprob: -9.028373718261719
    9. '(i' → logprob: -9.653373718261719
    10. ' len' → logprob: -9.778373718261719

Token 55: ')' (ID: 8)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.1393146514892578
    2. ')' → logprob: -2.639314651489258
    3. 'if' → logprob: -3.139314651489258
    4. ')])' → logprob: -4.264314651489258
    5. ')]' → logprob: -8.389314651489258
    6. ' ' → logprob: -8.389314651489258
    7. '   ' → logprob: -8.639314651489258
    8. '])' → logprob: -8.764314651489258
    9. ' )' → logprob: -9.014314651489258
    10. ')],' → logprob: -9.389314651489258

Token 56: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.009240536950528622
    2. 'if' → logprob: -4.759240627288818
    3. '   ' → logprob: -8.13424015045166
    4. '])' → logprob: -8.25924015045166
    5. '	if' → logprob: -10.88424015045166
    6. ' ' → logprob: -11.13424015045166
    7. '    ' → logprob: -11.25924015045166
    8. ']),' → logprob: -11.75924015045166
    9. '])]' → logprob: -12.50924015045166
    10. '  ' → logprob: -12.63424015045166

Token 57: ' i' (ID: 575)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.3933617174625397
    2. ' j' → logprob: -1.1433616876602173
    3. 'i' → logprob: -5.393361568450928
    4. ' i' → logprob: -6.268361568450928
    5. ' ' → logprob: -11.893362045288086
    6. ' not' → logprob: -12.268362045288086
    7. '	j' → logprob: -12.268362045288086
    8. 'not' → logprob: -13.143362045288086
    9. '   ' → logprob: -13.143362045288086
    10. '    ' → logprob: -13.393362045288086

Token 58: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.20337635278701782
    2. ' !=' → logprob: -1.703376293182373
    3. '==' → logprob: -6.328376293182373
    4. ' ==' → logprob: -9.078376770019531
    5. '<|end|>' → logprob: -10.578376770019531
    6. '>' → logprob: -10.953376770019531
    7. ' ' → logprob: -11.953376770019531
    8. ']!=' → logprob: -12.703376770019531
    9. '<|end|>' → logprob: -13.203376770019531
    10. ' >' → logprob: -13.203376770019531

Token 59: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.012524253688752651
    2. ' j' → logprob: -4.387524127960205
    3. 'i' → logprob: -12.012524604797363
    4. ' ' → logprob: -12.387524604797363
    5. '	j' → logprob: -12.762524604797363
    6. '   ' → logprob: -14.637524604797363
    7. '    ' → logprob: -14.762524604797363
    8. ' i' → logprob: -15.137524604797363
    9. '  ' → logprob: -15.887524604797363
    10. '```' → logprob: -16.137523651123047

Token 60: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.000584249384701252
    2. '])
' → logprob: -7.875584125518799
    3. ' ])' → logprob: -9.875584602355957
    4. ')' → logprob: -10.000584602355957
    5. ']' → logprob: -10.250584602355957
    6. '   ' → logprob: -10.750584602355957
    7. ' ' → logprob: -11.375584602355957
    8. '])

' → logprob: -11.625584602355957
    9. '])
' → logprob: -11.750584602355957
    10. ']),' → logprob: -12.500584602355957

Token 61: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26881447434425354
    2. ' for' → logprob: -1.5188144445419312
    3. 'for' → logprob: -4.143814563751221
    4. ']' → logprob: -7.518814563751221
    5. '	for' → logprob: -8.768814086914062
    6. ')' → logprob: -9.143814086914062
    7. ' ' → logprob: -10.768814086914062
    8. ',' → logprob: -10.893814086914062
    9. '       ' → logprob: -11.393814086914062
    10. '    ' → logprob: -11.893814086914062

Token 62: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.45142313838005066
    2. 'for' (adapté à ' for') → logprob: -1.326423168182373
    3. ' for' → logprob: -2.326423168182373
    4. '	for' → logprob: -8.951422691345215
    5. ' ' → logprob: -10.576422691345215
    6. ']' → logprob: -10.576422691345215
    7. '       ' → logprob: -11.701422691345215
    8. ')' → logprob: -12.076422691345215
    9. '  ' → logprob: -12.576422691345215
    10. '    ' → logprob: -12.576422691345215

Token 63: ' i' (ID: 575)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.16238459944725037
    2. 'range' → logprob: -2.287384510040283
    3. ' i' → logprob: -3.662384510040283
    4. 'i' → logprob: -3.787384510040283
    5. ' ' → logprob: -11.537384986877441
    6. '(range' → logprob: -12.662384986877441
    7. '   ' → logprob: -12.912384986877441
    8. '_' → logprob: -13.037384986877441
    9. ' in' → logprob: -13.162384986877441
    10. '  ' → logprob: -13.537384986877441

Token 64: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.014221210032701492
    2. 'in' → logprob: -4.26422119140625
    3. ' ' → logprob: -10.26422119140625
    4. '<|end|>' → logprob: -11.38922119140625
    5. 'range' → logprob: -12.13922119140625
    6. ',' → logprob: -13.26422119140625
    7. ' range' → logprob: -13.38922119140625
    8. ')' → logprob: -14.01422119140625
    9. '	in' → logprob: -14.38922119140625
    10. '  ' → logprob: -15.01422119140625

Token 65: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.3132762610912323
    2. 'range' → logprob: -1.3132762908935547
    3. ' ' → logprob: -11.938276290893555
    4. '	range' → logprob: -12.688276290893555
    5. '(range' → logprob: -13.063276290893555
    6. '[' → logprob: -13.563276290893555
    7. ' xrange' → logprob: -14.688276290893555
    8. ')' → logprob: -15.563276290893555
    9. '  ' → logprob: -15.563276290893555
    10. '   ' → logprob: -15.813276290893555

Token 66: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.7014437364414334e-05
    2. '5' → logprob: -10.62502670288086
    3. '(len' → logprob: -13.25002670288086
    4. ' (' → logprob: -14.37502670288086
    5. '(
' → logprob: -15.00002670288086
    6. ' ' → logprob: -18.00002670288086
    7. '4' → logprob: -18.12502670288086
    8. 'len' → logprob: -18.50002670288086
    9. '6' → logprob: -19.00002670288086
    10. ')' → logprob: -19.00002670288086

Token 67: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -1.2113979209971149e-05
    2. ' ' → logprob: -11.500012397766113
    3. 'len' → logprob: -13.375012397766113
    4. '   ' → logprob: -15.125012397766113
    5. '```' → logprob: -16.750011444091797
    6. ' len' → logprob: -17.125011444091797
    7. ')' → logprob: -17.750011444091797
    8. '  ' → logprob: -18.000011444091797
    9. '0' → logprob: -18.437511444091797
    10. '1' → logprob: -18.500011444091797

Token 68: ')
' (ID: 446)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.002941209590062499
    2. ')' → logprob: -6.502941131591797
    3. ']' → logprob: -6.877941131591797
    4. '])' → logprob: -8.127941131591797
    5. ')])' → logprob: -9.752941131591797
    6. '])]' → logprob: -9.877941131591797
    7. '))' → logprob: -14.127941131591797
    8. ')],' → logprob: -14.627941131591797
    9. ' )' → logprob: -15.127941131591797
    10. ')}' → logprob: -15.377941131591797

Token 69: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -1.8789383830153383e-05
    2. ' ]' → logprob: -11.875019073486328
    3. ']
' → logprob: -12.000019073486328
    4. '   ' → logprob: -13.250019073486328
    5. ')' → logprob: -13.250019073486328
    6. '}' → logprob: -14.125019073486328
    7. ')]' → logprob: -14.375019073486328
    8. ']

' → logprob: -15.250019073486328
    9. '']' → logprob: -16.250019073486328
    10. '`]' → logprob: -16.250019073486328

Token 70: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.06337768584489822
    2. 'max' → logprob: -2.813377618789673
    3. 'result' → logprob: -7.813377857208252
    4. ')' → logprob: -8.188377380371094
    5. 'c' → logprob: -8.313377380371094
    6. 'd' → logprob: -8.563377380371094
    7. 'sum' → logprob: -8.938377380371094
    8. ']' → logprob: -10.063377380371094
    9. 'answer' → logprob: -10.438377380371094
    10. 'idx' → logprob: -11.313377380371094

Token 71: '(min' (ID: 26035)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07895742356777191
    2. '(max' → logprob: -2.5789573192596436
    3. '(c' → logprob: -10.578957557678223
    4. '(sum' → logprob: -10.953957557678223
    5. '(
' → logprob: -11.078957557678223
    6. '(

' → logprob: -12.828957557678223
    7. 'max' → logprob: -12.953957557678223
    8. '((' → logprob: -13.703957557678223
    9. '()' → logprob: -14.328957557678223
    10. '('' → logprob: -14.328957557678223

Token 72: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.0007163656409829855
    2. '(' → logprob: -7.250716209411621
    3. ')c' → logprob: -12.500716209411621
    4. ')' → logprob: -13.375716209411621
    5. '(a' → logprob: -14.625716209411621
    6. '()' → logprob: -15.375716209411621
    7. '(max' → logprob: -16.625717163085938
    8. '(
' → logprob: -16.750717163085938
    9. ' (' → logprob: -16.875717163085938
    10. '(C' → logprob: -17.125717163085938

Token 73: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.038062144070863724
    2. ')' → logprob: -3.28806209564209
    3. ')))' → logprob: -11.03806209564209
    4. ' ))' → logprob: -13.28806209564209
    5. '))
' → logprob: -13.41306209564209
    6. ' )' → logprob: -14.91306209564209
    7. '),' → logprob: -15.41306209564209
    8. ')
' → logprob: -15.66306209564209
    9. '()))' → logprob: -16.163063049316406
    10. ')}' → logprob: -16.288063049316406


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 71
Tokens correctement prédits (1ère position, stricte): 30
Tokens correctement prédits (1ère position, avec adaptation): 30
Tokens correctement prédits (top 10): 54
Précision stricte (1ère position): 42.25%
Précision adaptée (1ère position): 42.25%
Précision (top 10): 76.06%
================================================================================
