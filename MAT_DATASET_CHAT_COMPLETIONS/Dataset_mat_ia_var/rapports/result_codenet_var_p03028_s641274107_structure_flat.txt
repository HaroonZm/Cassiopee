================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:59:10
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

n = int(sys.stdin.readline())
aa = []
for _ in range(n - 1):
    s = sys.stdin.readline()[:-1]
    row = []
    for c in s:
        row.append(int(c))
    aa.append(row)

win = [0] * n
for i in range(1, n):
    row = aa[i - 1]
    for j in range(len(row)):
        a = row[j]
        if a:
            win[i] |= 1 << j
        else:
            win[j] |= 1 << i

dpl = []
for i in range(n):
    dpl.append(1 << i)
dpr = []
for i in range(n):
    dpr.append(1 << i)

for d in range(1, n):
    for i in range(n):
        j = i + d
        if j < n:
            if (dpl[j] & dpr[i + 1] & win[i]):
                dpl[j] |= 1 << i
        j = i - d
        if j >= 0:
            if (dpl[i - 1] & dpr[j] & win[i]):
                dpr[j] |= 1 << i

x = dpl[n - 1] & dpr[0]
print(bin(x).count("1"))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'n' (ID: 77)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.042949914932251
    2. '.' → logprob: -1.167949914932251
    3. '<|end|>' → logprob: -2.292949914932251
    4. 'import' → logprob: -2.542949914932251
    5. '' → logprob: -2.542949914932251
    6. '#' → logprob: -3.792949914932251
    7. '\' → logprob: -4.417949676513672
    8. '
' → logprob: -4.792949676513672
    9. 'print' → logprob: -5.042949676513672
    10. ';' → logprob: -5.667949676513672

Token 4: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6679863333702087
    2. '.' → logprob: -1.5429863929748535
    3. ' ' → logprob: -2.4179863929748535
    4. ' =' → logprob: -2.5429863929748535
    5. '_' → logprob: -2.7929863929748535
    6. 'u' → logprob: -4.1679863929748535
    7. 'e' → logprob: -4.2929863929748535
    8. ',' → logprob: -5.9179863929748535
    9. ')' → logprob: -6.1679863929748535
    10. 'a' → logprob: -6.2929863929748535

Token 5: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.019662216305732727
    2. ' ' → logprob: -4.644662380218506
    3. 'int' → logprob: -4.644662380218506
    4. '10' → logprob: -9.394661903381348
    5. ' input' → logprob: -9.519661903381348
    6. ' sys' → logprob: -10.769661903381348
    7. '=int' → logprob: -11.519661903381348
    8. ' len' → logprob: -11.519661903381348
    9. 'input' → logprob: -11.769661903381348
    10. '1' → logprob: -11.769661903381348

Token 6: '(sys' (ID: 41042)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00038598617538809776
    2. '(sys' → logprob: -8.125386238098145
    3. '('' → logprob: -10.500386238098145
    4. '()' → logprob: -11.000386238098145
    5. ' (' → logprob: -11.250386238098145
    6. '```' → logprob: -12.125386238098145
    7. '(input' → logprob: -12.375386238098145
    8. '(n' → logprob: -12.500386238098145
    9. ''' → logprob: -12.625386238098145
    10. '(`' → logprob: -13.000386238098145

Token 7: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0013761838199570775
    2. '.)' → logprob: -7.126376152038574
    3. '.argv' → logprob: -8.376376152038574
    4. '[' → logprob: -9.126376152038574
    5. ')' → logprob: -9.626376152038574
    6. '.stdin' → logprob: -9.876376152038574
    7. '.readline' → logprob: -10.251376152038574
    8. '.")' → logprob: -10.501376152038574
    9. '.')' → logprob: -11.251376152038574
    10. '.​' → logprob: -11.751376152038574

Token 8: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.5015133023262024
    2. '.' → logprob: -1.0015132427215576
    3. '.read' → logprob: -3.6265132427215576
    4. '.)' → logprob: -7.876513481140137
    5. '.Read' → logprob: -10.751513481140137
    6. '.readlines' → logprob: -11.626513481140137
    7. ')' → logprob: -11.751513481140137
    8. ').' → logprob: -12.001513481140137
    9. '.READ' → logprob: -12.251513481140137
    10. '.")' → logprob: -12.376513481140137

Token 9: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.05034276470541954
    2. '()' → logprob: -3.0503427982330322
    3. ')' → logprob: -6.550342559814453
    4. '().' → logprob: -8.925342559814453
    5. '()))' → logprob: -9.925342559814453
    6. '(' → logprob: -9.925342559814453
    7. ' ())' → logprob: -10.175342559814453
    8. '()[' → logprob: -10.675342559814453
    9. '('' → logprob: -11.425342559814453
    10. '())
' → logprob: -11.925342559814453

Token 10: 'aa' (ID: 3545)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.5310510993003845
    2. 'for' → logprob: -1.1560511589050293
    3. 'if' → logprob: -4.031051158905029
    4. ' for' → logprob: -4.406051158905029
    5. '\' → logprob: -4.781051158905029
    6. ')' → logprob: -4.781051158905029
    7. ' ' → logprob: -4.906051158905029
    8. '.' → logprob: -5.156051158905029
    9. 'a' → logprob: -5.406051158905029
    10. 'data' → logprob: -5.656051158905029

Token 11: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.020015865564346313
    2. '.' → logprob: -4.520015716552734
    3. '[:]' → logprob: -5.645015716552734
    4. '[]' → logprob: -6.020015716552734
    5. '.append' → logprob: -7.145015716552734
    6. '[a' → logprob: -7.270015716552734
    7. '[i' → logprob: -7.895015716552734
    8. 'b' → logprob: -8.895015716552734
    9. '\[' → logprob: -8.895015716552734
    10. 'a' → logprob: -9.020015716552734

Token 12: ' []
' (ID: 8911)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.968900203704834
    2. 'list' → logprob: -1.343900203704834
    3. '[]' → logprob: -1.843900203704834
    4. ' list' → logprob: -1.843900203704834
    5. ' [' → logprob: -3.593900203704834
    6. '[' → logprob: -4.343900203704834
    7. '[list' → logprob: -6.218900203704834
    8. ' ' → logprob: -7.968900203704834
    9. '[int' → logprob: -8.968900680541992
    10. '[input' → logprob: -9.468900680541992

Token 13: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.007916893810033798
    2. ' for' → logprob: -4.8829169273376465
    3. '[' → logprob: -8.507916450500488
    4. '
' → logprob: -10.132916450500488
    5. ' 
' → logprob: -10.757916450500488
    6. ' ' → logprob: -11.132916450500488
    7. '\n' → logprob: -11.632916450500488
    8. '\' → logprob: -12.257916450500488
    9. '```' → logprob: -12.632916450500488
    10. '[]' → logprob: -13.007916450500488

Token 14: ' _' (ID: 1175)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.029629334807395935
    2. ' i' → logprob: -3.7796292304992676
    3. '  ' → logprob: -5.154629230499268
    4. '_' → logprob: -8.529629707336426
    5. ' _' → logprob: -8.654629707336426
    6. 'i' → logprob: -9.404629707336426
    7. ' ‌' → logprob: -10.029629707336426
    8. ' a' → logprob: -10.154629707336426
    9. ' )' → logprob: -11.779629707336426
    10. ' ▁' → logprob: -11.904629707336426

Token 15: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03668420761823654
    2. 'in' → logprob: -3.411684274673462
    3. ' ' → logprob: -6.036684036254883
    4. ' i' → logprob: -8.036684036254883
    5. 'i' → logprob: -8.661684036254883
    6. 'import' → logprob: -10.411684036254883
    7. '  ' → logprob: -10.536684036254883
    8. ' _' → logprob: -10.911684036254883
    9. 'n' → logprob: -11.224184036254883
    10. '	in' → logprob: -11.849184036254883

Token 16: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.5759507417678833
    2. 'range' → logprob: -0.8259507417678833
    3. ' xrange' → logprob: -12.700950622558594
    4. '	range' → logprob: -12.825950622558594
    5. '(range' → logprob: -13.450950622558594
    6. ' ' → logprob: -13.825950622558594
    7. '_range' → logprob: -13.825950622558594
    8. 'n' → logprob: -14.200950622558594
    9. ')' → logprob: -15.450950622558594
    10. 'ran' → logprob: -15.950950622558594

Token 17: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11195316165685654
    2. ' (' → logprob: -2.3619532585144043
    3. '(n' → logprob: -5.236953258514404
    4. ' ' → logprob: -5.486953258514404
    5. ' n' → logprob: -6.861953258514404
    6. ' range' → logprob: -7.486953258514404
    7. ' )' → logprob: -8.236952781677246
    8. ' in' → logprob: -9.111952781677246
    9. 'range' → logprob: -9.486952781677246
    10. '(range' → logprob: -9.861952781677246

Token 18: ' -' (ID: 533)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00530645065009594
    2. ')' → logprob: -5.380306243896484
    3. ' ):' → logprob: -7.880306243896484
    4. ':' → logprob: -8.630306243896484
    5. '):
' → logprob: -9.380306243896484
    6. '+' → logprob: -10.380306243896484
    7. ' )' → logprob: -12.130306243896484
    8. '-' → logprob: -13.505306243896484
    9. ' ' → logprob: -13.505306243896484
    10. ',' → logprob: -14.005306243896484

Token 19: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.22544430196285248
    2. ' ' → logprob: -1.6004443168640137
    3. '2' → logprob: -10.725443840026855
    4. '0' → logprob: -12.600443840026855
    5. ')' → logprob: -13.600443840026855
    6. '+' → logprob: -13.725443840026855
    7. ' )' → logprob: -14.475443840026855
    8. '   ' → logprob: -14.725443840026855
    9. '>' → logprob: -14.850443840026855
    10. '  ' → logprob: -15.100443840026855

Token 20: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008051026379689574
    2. ' ' → logprob: -7.125804901123047
    3. '2' → logprob: -15.375804901123047
    4. '0' → logprob: -15.375804901123047
    5. '   ' → logprob: -16.750804901123047
    6. '  ' → logprob: -18.500804901123047
    7. ')' → logprob: -18.625804901123047
    8. '3' → logprob: -19.625804901123047
    9. '+' → logprob: -19.750804901123047
    10. '4' → logprob: -19.875804901123047

Token 21: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.02214129827916622
    2. ')' → logprob: -4.522141456604004
    3. ':' → logprob: -4.647141456604004
    4. '):
' → logprob: -6.647141456604004
    5. ' ):' → logprob: -9.147141456604004
    6. ' )' → logprob: -11.397141456604004
    7. ',' → logprob: -11.897141456604004
    8. '):
' → logprob: -12.647141456604004
    9. ':
' → logprob: -12.772141456604004
    10. '+' → logprob: -12.897141456604004

Token 22: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5614392757415771
    2. ' aa' → logprob: -0.9364392757415771
    3. ' aaa' → logprob: -4.436439514160156
    4. ' a' → logprob: -4.686439514160156
    5. ' line' → logprob: -4.811439514160156
    6. 'aa' → logprob: -6.311439514160156
    7. '    ' → logprob: -6.436439514160156
    8. 'a' → logprob: -6.936439514160156
    9. ' ' → logprob: -7.561439514160156
    10. '    
' → logprob: -7.811439514160156

Token 23: ' s' (ID: 265)
  Prédit: ' aa'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' aa' → logprob: -0.26882949471473694
    2. '   ' → logprob: -2.018829584121704
    3. 'aa' → logprob: -2.768829584121704
    4. ' line' → logprob: -4.518829345703125
    5. 'a' → logprob: -4.768829345703125
    6. ' a' → logprob: -4.893829345703125
    7. '```' → logprob: -5.268829345703125
    8. ' aaa' → logprob: -5.393829345703125
    9. 'aaa' → logprob: -7.393829345703125
    10. 'line' → logprob: -7.393829345703125

Token 24: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05127888172864914
    2. 'tr' → logprob: -3.426278829574585
    3. '=' → logprob: -4.301279067993164
    4. 't' → logprob: -6.676279067993164
    5. 's' → logprob: -6.926279067993164
    6. 'ys' → logprob: -8.176279067993164
    7. '.append' → logprob: -8.801279067993164
    8. ' ' → logprob: -8.801279067993164
    9. '=input' → logprob: -8.801279067993164
    10. 'tri' → logprob: -9.176279067993164

Token 25: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.6537808775901794
    2. ' sys' → logprob: -0.7787808775901794
    3. 'int' → logprob: -4.028780937194824
    4. ' int' → logprob: -5.903780937194824
    5. 'input' → logprob: -8.278780937194824
    6. ' input' → logprob: -9.028780937194824
    7. '=sys' → logprob: -10.403780937194824
    8. '	sys' → logprob: -11.903780937194824
    9. '(sys' → logprob: -12.028780937194824
    10. ' ' → logprob: -12.278780937194824

Token 26: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0036086246836930513
    2. '.' → logprob: -5.753608703613281
    3. '.stdout' → logprob: -8.128608703613281
    4. '.readline' → logprob: -9.503608703613281
    5. '.argv' → logprob: -10.753608703613281
    6. ' .' → logprob: -11.128608703613281
    7. '.std' → logprob: -11.253608703613281
    8. '.st' → logprob: -12.003608703613281
    9. 'stdin' → logprob: -13.128608703613281
    10. '.stderr' → logprob: -13.378608703613281

Token 27: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -5.438573680294212e-06
    2. '.read' → logprob: -12.625005722045898
    3. '.readlines' → logprob: -13.375005722045898
    4. '.' → logprob: -14.875005722045898
    5. '.stdin' → logprob: -17.0000057220459
    6. ' .' → logprob: -17.2500057220459
    7. ' readline' → logprob: -18.0000057220459
    8. '().' → logprob: -19.2500057220459
    9. '.write' → logprob: -19.7500057220459
    10. 'read' → logprob: -20.2500057220459

Token 28: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.005248818546533585
    2. '().' → logprob: -5.2552490234375
    3. '())' → logprob: -11.7552490234375
    4. '()
' → logprob: -13.2552490234375
    5. ')' → logprob: -13.7552490234375
    6. ' ()' → logprob: -13.7552490234375
    7. '()

' → logprob: -14.2552490234375
    8. '()`' → logprob: -14.3802490234375
    9. '(' → logprob: -14.5052490234375
    10. '`()' → logprob: -15.1302490234375

Token 29: '[:-' (ID: 63556)
  Prédit: '.strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.07973849028348923
    2. '.rstrip' → logprob: -2.8297383785247803
    3. '.' → logprob: -4.704738616943359
    4. '.split' → logprob: -4.829738616943359
    5. '[:-' → logprob: -7.829738616943359
    6. '().' → logprob: -9.82973861694336
    7. '.readline' → logprob: -9.95473861694336
    8. 'rstrip' → logprob: -10.82973861694336
    9. '   ' → logprob: -10.95473861694336
    10. 'strip' → logprob: -11.82973861694336

Token 30: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -14.875000953674316
    3. '2' → logprob: -15.875000953674316
    4. '\n' → logprob: -16.000001907348633
    5. '```' → logprob: -16.000001907348633
    6. '   ' → logprob: -17.500001907348633
    7. '``' → logprob: -17.562501907348633
    8. '\' → logprob: -17.687501907348633
    9. '"\' → logprob: -18.000001907348633
    10. '１' → logprob: -18.000001907348633

Token 31: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02354220300912857
    2. ')
' → logprob: -3.8985421657562256
    3. ']' → logprob: -6.148542404174805
    4. '])' → logprob: -8.148542404174805
    5. ')
' → logprob: -8.773542404174805
    6. ' )' → logprob: -9.148542404174805
    7. '')' → logprob: -9.523542404174805
    8. '）' → logprob: -9.773542404174805
    9. '`)' → logprob: -9.773542404174805
    10. ')]' → logprob: -10.898542404174805

Token 32: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005701907211914659
    2. 'aa' → logprob: -7.500570297241211
    3. ' aa' → logprob: -11.500570297241211
    4. '<|end|>' → logprob: -13.250570297241211
    5. '  ' → logprob: -14.250570297241211
    6. '```' → logprob: -14.375570297241211
    7. '#aa' → logprob: -14.375570297241211
    8. '   ' → logprob: -14.500570297241211
    9. 'a' → logprob: -14.500570297241211
    10. '    
' → logprob: -14.875570297241211

Token 33: ' row' (ID: 5225)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6426523923873901
    2. 'aa' → logprob: -0.7676523923873901
    3. ' aa' → logprob: -4.64265251159668
    4. 'a' → logprob: -8.76765251159668
    5. ' ' → logprob: -9.64265251159668
    6. '#aa' → logprob: -10.14265251159668
    7. '  ' → logprob: -10.39265251159668
    8. 'if' → logprob: -10.76765251159668
    9. 'aaa' → logprob: -11.26765251159668
    10. ' if' → logprob: -12.26765251159668

Token 34: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2868659198284149
    2. '.append' → logprob: -1.4118659496307373
    3. '=' → logprob: -5.786865711212158
    4. '.' → logprob: -6.536865711212158
    5. 's' → logprob: -7.036865711212158
    6. '.extend' → logprob: -8.661866188049316
    7. ' ' → logprob: -10.161866188049316
    8. ' .' → logprob: -10.786866188049316
    9. ',' → logprob: -11.161866188049316
    10. '   ' → logprob: -11.661866188049316

Token 35: ' []
' (ID: 8911)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.6559376120567322
    2. ' list' → logprob: -1.405937671661377
    3. '[s' → logprob: -1.780937671661377
    4. ' [' → logprob: -3.530937671661377
    5. 's' → logprob: -3.905937671661377
    6. '[list' → logprob: -4.780937671661377
    7. '[' → logprob: -5.280937671661377
    8. ' s' → logprob: -5.905937671661377
    9. '[]' → logprob: -7.280937671661377
    10. '[int' → logprob: -7.655937671661377

Token 36: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15256932377815247
    2. 'for' → logprob: -2.15256929397583
    3. ' for' → logprob: -3.77756929397583
    4. ' ' → logprob: -6.27756929397583
    5. '    ' → logprob: -8.527569770812988
    6. '  ' → logprob: -9.402569770812988
    7. '<|end|>' → logprob: -9.402569770812988
    8. '	for' → logprob: -9.652569770812988
    9. '[' → logprob: -10.027569770812988
    10. '    
' → logprob: -10.527569770812988

Token 37: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.1631256490945816
    2. ' for' → logprob: -1.9131256341934204
    3. '   ' → logprob: -5.913125514984131
    4. ' ' → logprob: -9.413125991821289
    5. '	for' → logprob: -9.538125991821289
    6. '  ' → logprob: -11.288125991821289
    7. 'tokens' → logprob: -11.913125991821289
    8. 's' → logprob: -12.413125991821289
    9. ' tokens' → logprob: -12.538125991821289
    10. '<|end|>' → logprob: -12.913125991821289

Token 38: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.6572495698928833
    2. ' c' → logprob: -1.1572495698928833
    3. 'x' → logprob: -3.2822494506835938
    4. 'i' → logprob: -3.6572494506835938
    5. ' j' → logprob: -4.032249450683594
    6. ' x' → logprob: -4.032249450683594
    7. ' i' → logprob: -4.157249450683594
    8. 'j' → logprob: -4.157249450683594
    9. 'ch' → logprob: -4.407249450683594
    10. ' ch' → logprob: -4.782249450683594

Token 39: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0068155392073094845
    2. 'in' → logprob: -5.006815433502197
    3. 's' → logprob: -10.131815910339355
    4. ' ' → logprob: -10.756815910339355
    5. 'n' → logprob: -10.881815910339355
    6. ' i' → logprob: -12.631815910339355
    7. '  ' → logprob: -13.131815910339355
    8. 'i' → logprob: -13.506815910339355
    9. '   ' → logprob: -13.506815910339355
    10. '	in' → logprob: -13.631815910339355

Token 40: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.38815703988075256
    2. ' s' → logprob: -1.1381570100784302
    3. 'range' → logprob: -7.013156890869141
    4. ' range' → logprob: -8.01315689086914
    5. ' ' → logprob: -10.13815689086914
    6. 'c' → logprob: -12.51315689086914
    7. 'list' → logprob: -13.13815689086914
    8. 'a' → logprob: -13.82565689086914
    9. '(s' → logprob: -14.26315689086914
    10. 'str' → logprob: -14.51315689086914

Token 41: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004389528650790453
    2. ' :' → logprob: -5.504389762878418
    3. ' in' → logprob: -9.129389762878418
    4. '):' → logprob: -9.504389762878418
    5. 'in' → logprob: -10.629389762878418
    6. ':
' → logprob: -11.129389762878418
    7. ':**' → logprob: -11.879389762878418
    8. '>:' → logprob: -12.004389762878418
    9. '<|end|>' → logprob: -12.004389762878418
    10. ' if' → logprob: -12.129389762878418

Token 42: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007632770109921694
    2. ' if' → logprob: -5.757632732391357
    3. ' row' → logprob: -6.007632732391357
    4. '0' → logprob: -7.507632732391357
    5. 'row' → logprob: -7.757632732391357
    6. '   ' → logprob: -8.257633209228516
    7. ' ' → logprob: -8.507633209228516
    8. '    ' → logprob: -8.632633209228516
    9. 'if' → logprob: -9.507633209228516
    10. '1' → logprob: -10.132633209228516

Token 43: ' row' (ID: 5225)
  Prédit: ' row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' row' → logprob: -0.02685599774122238
    2. 'row' (adapté à ' row') → logprob: -4.401855945587158
    3. ' if' → logprob: -4.526855945587158
    4. ' ' → logprob: -6.651855945587158
    5. '    ' → logprob: -7.151855945587158
    6. '0' → logprob: -8.026856422424316
    7. '   ' → logprob: -8.026856422424316
    8. '       ' → logprob: -8.401856422424316
    9. '	row' → logprob: -8.901856422424316
    10. 'if' → logprob: -9.026856422424316

Token 44: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.008622609078884125
    2. '.' → logprob: -4.758622646331787
    3. '.add' → logprob: -12.883622169494629
    4. '.extend' → logprob: -12.883622169494629
    5. ' .' → logprob: -13.508622169494629
    6. '.Append' → logprob: -14.258622169494629
    7. '.ap' → logprob: -14.883622169494629
    8. '.push' → logprob: -15.008622169494629
    9. '.app' → logprob: -15.258622169494629
    10. '.=' → logprob: -16.633623123168945

Token 45: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.05355582386255264
    2. '(c' → logprob: -3.303555727005005
    3. 'int' → logprob: -4.678555965423584
    4. '(' → logprob: -5.553555965423584
    5. '(ord' → logprob: -6.928555965423584
    6. '(bool' → logprob: -7.803555965423584
    7. ' int' → logprob: -8.178555488586426
    8. 'c' → logprob: -8.928555488586426
    9. '(True' → logprob: -9.053555488586426
    10. '(False' → logprob: -9.178555488586426

Token 46: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.0040915776044130325
    2. '(' → logprob: -5.504091739654541
    3. ')c' → logprob: -12.004091262817383
    4. ')' → logprob: -12.504091262817383
    5. ' (' → logprob: -13.504091262817383
    6. 'c' → logprob: -14.754091262817383
    7. '(
' → logprob: -15.004091262817383
    8. ')(' → logprob: -15.254091262817383
    9. ' )' → logprob: -15.379091262817383
    10. '('' → logprob: -15.504091262817383

Token 47: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0032958246301859617
    2. ')' → logprob: -5.7532958984375
    3. ')))' → logprob: -9.5032958984375
    4. '))
' → logprob: -10.3782958984375
    5. ' ))' → logprob: -11.7532958984375
    6. ''))' → logprob: -13.2532958984375
    7. ' ' → logprob: -14.3782958984375
    8. '),' → logprob: -14.3782958984375
    9. '   ' → logprob: -14.3782958984375
    10. '))

' → logprob: -16.0032958984375

Token 48: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018520263954997063
    2. 'aa' → logprob: -4.143520355224609
    3. ')' → logprob: -6.768520355224609
    4. '<|end|>' → logprob: -8.14352035522461
    5. '#aa' → logprob: -8.26852035522461
    6. ' ' → logprob: -8.64352035522461
    7. '
' → logprob: -9.14352035522461
    8. '```' → logprob: -9.14352035522461
    9. '  ' → logprob: -9.26852035522461
    10. '    
' → logprob: -10.01852035522461

Token 49: ' aa' (ID: 40260)
  Prédit: 'aa'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aa' (adapté à ' aa') → logprob: -0.04856942966580391
    2. '   ' → logprob: -3.423569440841675
    3. ' aa' → logprob: -4.423569202423096
    4. ' ' → logprob: -6.548569202423096
    5. ')' → logprob: -7.298569202423096
    6. '#aa' → logprob: -7.798569202423096
    7. '  ' → logprob: -9.923569679260254
    8. '	' → logprob: -10.173569679260254
    9. '    
' → logprob: -10.673569679260254
    10. 'a' → logprob: -10.798569679260254

Token 50: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.004154975991696119
    2. '.' → logprob: -5.504155158996582
    3. '.app' → logprob: -10.129155158996582
    4. '.extend' → logprob: -10.504155158996582
    5. '.ap' → logprob: -12.879155158996582
    6. '.Append' → logprob: -13.004155158996582
    7. '.push' → logprob: -13.879155158996582
    8. ' .' → logprob: -13.879155158996582
    9. '​.' → logprob: -13.879155158996582
    10. 'append' → logprob: -14.629155158996582

Token 51: '(row' (ID: 15945)
  Prédit: '(row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(row' → logprob: -7.941850526549388e-06
    2. '(' → logprob: -11.750007629394531
    3. '(rows' → logprob: -18.25000762939453
    4. '(line' → logprob: -18.50000762939453
    5. 'row' → logprob: -18.75000762939453
    6. ' (' → logprob: -19.50000762939453
    7. ' row' → logprob: -19.75000762939453
    8. '(Row' → logprob: -19.75000762939453
    9. '(r' → logprob: -20.50000762939453
    10. ',row' → logprob: -21.25000762939453

Token 52: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.723352049040841e-06
    2. ')
' → logprob: -12.375004768371582
    3. '))' → logprob: -15.625004768371582
    4. ' )' → logprob: -16.375003814697266
    5. '`)' → logprob: -16.875003814697266
    6. '）' → logprob: -18.000003814697266
    7. ')return' → logprob: -18.500003814697266
    8. '')' → logprob: -18.625003814697266
    9. ')`' → logprob: -18.625003814697266
    10. ')a' → logprob: -19.000003814697266

Token 53: 'win' (ID: 11668)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.221482276916504
    2. 'for' → logprob: -1.596482276916504
    3. 'd' → logprob: -2.346482276916504
    4. 'a' → logprob: -2.346482276916504
    5. 'm' → logprob: -2.596482276916504
    6. 'n' → logprob: -2.971482276916504
    7. 'print' → logprob: -3.096482276916504
    8. 'f' → logprob: -3.721482276916504
    9. 'dp' → logprob: -3.971482276916504
    10. 'max' → logprob: -4.471482276916504

Token 54: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2826457917690277
    2. ' =' → logprob: -2.2826457023620605
    3. '_' → logprob: -2.4076457023620605
    4. 'ning' → logprob: -4.2826457023620605
    5. '_count' → logprob: -4.5326457023620605
    6. 'd' → logprob: -5.0326457023620605
    7. 'ner' → logprob: -5.0326457023620605
    8. 'dow' → logprob: -6.5326457023620605
    9. '_counts' → logprob: -6.5326457023620605
    10. '_s' → logprob: -6.7826457023620605

Token 55: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.9669346213340759
    2. 'False' → logprob: -1.0919346809387207
    3. '0' → logprob: -2.2169346809387207
    4. '[]' → logprob: -2.8419346809387207
    5. '[n' → logprob: -3.8419346809387207
    6. ' [' → logprob: -3.9669346809387207
    7. 'True' → logprob: -4.216934680938721
    8. '[[' → logprob: -4.466934680938721
    9. ' False' → logprob: -4.841934680938721
    10. 'aa' → logprob: -5.216934680938721

Token 56: '0' (ID: 15)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.6557422280311584
    2. '0' → logprob: -0.7807422280311584
    3. '[' → logprob: -4.655742168426514
    4. 'True' → logprob: -5.280742168426514
    5. '-' → logprob: -6.030742168426514
    6. ' False' → logprob: -6.280742168426514
    7. '1' → logprob: -6.405742168426514
    8. ' ' → logprob: -6.905742168426514
    9. ' [' → logprob: -7.905742168426514
    10. ']' → logprob: -8.530742645263672

Token 57: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.026681432500481606
    2. ',' → logprob: -4.026681423187256
    3. ']*' → logprob: -5.276681423187256
    4. ' for' → logprob: -5.901681423187256
    5. ' ]' → logprob: -8.151681900024414
    6. ']*(' → logprob: -8.901681900024414
    7. ')]' → logprob: -9.151681900024414
    8. 'for' → logprob: -10.026681900024414
    9. ')' → logprob: -10.151681900024414
    10. ']+' → logprob: -11.901681900024414

Token 58: ' *' (ID: 425)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.534928560256958
    2. ' for' → logprob: -2.159928560256958
    3. '*' → logprob: -2.784928560256958
    4. ',' → logprob: -2.909928560256958
    5. ']*' → logprob: -2.909928560256958
    6. '<|end|>' → logprob: -3.284928560256958
    7. ' *' → logprob: -3.534928560256958
    8. 'for' → logprob: -3.784928560256958
    9. ']*(' → logprob: -4.284928321838379
    10. '0' → logprob: -4.659928321838379

Token 59: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.13597539067268372
    2. '(n' → logprob: -2.2609753608703613
    3. '3' → logprob: -4.760975360870361
    4. '(' → logprob: -5.260975360870361
    5. ' n' → logprob: -6.385975360870361
    6. '9' → logprob: -6.885975360870361
    7. '7' → logprob: -6.885975360870361
    8. '10' → logprob: -6.885975360870361
    9. '4' → logprob: -7.135975360870361
    10. '2' → logprob: -7.260975360870361

Token 60: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.39966389536857605
    2. 'for' → logprob: -2.1496639251708984
    3. '<|end|>' → logprob: -2.1496639251708984
    4. '\n' → logprob: -3.2746639251708984
    5. ' for' → logprob: -3.7746639251708984
    6. 'win' → logprob: -4.774663925170898
    7. ' 
' → logprob: -5.024663925170898
    8. 'n' → logprob: -5.774663925170898
    9. '```' → logprob: -5.899663925170898
    10. '' → logprob: -6.024663925170898

Token 61: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.017469331622123718
    2. 'win' → logprob: -5.01746940612793
    3. ' for' → logprob: -6.14246940612793
    4. '```' → logprob: -6.51746940612793
    5. 'i' → logprob: -6.89246940612793
    6. 'b' → logprob: -7.26746940612793
    7. '<|end|>' → logprob: -7.39246940612793
    8. 'turn' → logprob: -7.51746940612793
    9. 'dp' → logprob: -7.64246940612793
    10. 'def' → logprob: -8.01746940612793

Token 62: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.01701999641954899
    2. 'i' → logprob: -4.142020225524902
    3. ' _' → logprob: -8.142020225524902
    4. '_' → logprob: -8.142020225524902
    5. ' j' → logprob: -8.892020225524902
    6. ' ' → logprob: -9.017020225524902
    7. ' range' → logprob: -10.267020225524902
    8. ' x' → logprob: -10.892020225524902
    9. ' a' → logprob: -11.392020225524902
    10. '_i' → logprob: -11.767020225524902

Token 63: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07947075366973877
    2. 'in' → logprob: -2.579470634460449
    3. ' ' → logprob: -7.704470634460449
    4. ',' → logprob: -9.82947063446045
    5. '	in' → logprob: -10.70447063446045
    6. 'n' → logprob: -10.95447063446045
    7. '  ' → logprob: -11.32947063446045
    8. '+' → logprob: -12.70447063446045
    9. '(' → logprob: -12.82947063446045
    10. ')' → logprob: -13.07947063446045

Token 64: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.08896346390247345
    2. ' range' → logprob: -2.463963508605957
    3. ' ' → logprob: -10.963963508605957
    4. '  ' → logprob: -13.713963508605957
    5. 'aa' → logprob: -13.838963508605957
    6. '	range' → logprob: -14.088963508605957
    7. 'ra' → logprob: -14.213963508605957
    8. ' aa' → logprob: -14.213963508605957
    9. '   ' → logprob: -14.463963508605957
    10. 'ran' → logprob: -14.713963508605957

Token 65: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5759620666503906
    2. '(n' → logprob: -0.8259620666503906
    3. ' (' → logprob: -11.45096206665039
    4. '(len' → logprob: -12.57596206665039
    5. '(
' → logprob: -12.82596206665039
    6. 'n' → logprob: -13.95096206665039
    7. '1' → logprob: -13.95096206665039
    8. '(

' → logprob: -14.20096206665039
    9. '(i' → logprob: -14.45096206665039
    10. '((' → logprob: -14.70096206665039

Token 66: '1' (ID: 16)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.14331741631031036
    2. '1' → logprob: -2.018317461013794
    3. '(n' → logprob: -8.143317222595215
    4. '(' → logprob: -8.893317222595215
    5. ' n' → logprob: -9.268317222595215
    6. '2' → logprob: -10.143317222595215
    7. ')' → logprob: -11.018317222595215
    8. 'len' → logprob: -11.018317222595215
    9. '0' → logprob: -11.143317222595215
    10. ')n' → logprob: -11.768317222595215

Token 67: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004137649200856686
    2. ',n' → logprob: -5.8791375160217285
    3. ' ,' → logprob: -6.7541375160217285
    4. 'n' → logprob: -9.129137992858887
    5. ' n' → logprob: -9.879137992858887
    6. ')' → logprob: -13.504137992858887
    7. '(n' → logprob: -13.879137992858887
    8. ',
' → logprob: -14.004137992858887
    9. '1' → logprob: -14.254137992858887
    10. ' ' → logprob: -14.379137992858887

Token 68: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.006716555915772915
    2. ' n' → logprob: -5.006716728210449
    3. ' ' → logprob: -15.13171672821045
    4. '	n' → logprob: -15.25671672821045
    5. '   ' → logprob: -15.25671672821045
    6. ')n' → logprob: -15.75671672821045
    7. ')' → logprob: -16.006715774536133
    8. 'len' → logprob: -16.756715774536133
    9. '  ' → logprob: -16.881715774536133
    10. '```' → logprob: -17.506715774536133

Token 69: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0006371428607963026
    2. '):
' → logprob: -7.750637054443359
    3. '+' → logprob: -9.12563705444336
    4. ' ):' → logprob: -9.62563705444336
    5. ')' → logprob: -11.00063705444336
    6. ':' → logprob: -12.25063705444336
    7. '-' → logprob: -12.37563705444336
    8. ',' → logprob: -13.12563705444336
    9. ' +' → logprob: -13.75063705444336
    10. '):
' → logprob: -14.75063705444336

Token 70: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03496553376317024
    2. ' for' → logprob: -3.5349655151367188
    3. 'for' → logprob: -5.409965515136719
    4. ' ' → logprob: -8.909965515136719
    5. '<|end|>' → logprob: -8.909965515136719
    6. '   ' → logprob: -9.284965515136719
    7. ' win' → logprob: -9.409965515136719
    8. ' if' → logprob: -9.534965515136719
    9. 'win' → logprob: -9.784965515136719
    10. '	for' → logprob: -10.284965515136719

Token 71: ' row' (ID: 5225)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.13010689616203308
    2. ' for' → logprob: -2.2551069259643555
    3. '   ' → logprob: -4.3801069259643555
    4. 'win' → logprob: -6.3801069259643555
    5. 'j' → logprob: -6.7551069259643555
    6. 'if' → logprob: -7.2551069259643555
    7. ' win' → logprob: -7.7551069259643555
    8. ' ' → logprob: -8.880106925964355
    9. ' if' → logprob: -9.130106925964355
    10. ' j' → logprob: -9.130106925964355

Token 72: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20199443399906158
    2. '=' → logprob: -1.7019944190979004
    3. '[' → logprob: -8.701994895935059
    4. '.append' → logprob: -9.076994895935059
    5. ')' → logprob: -9.701994895935059
    6. 'for' → logprob: -9.951994895935059
    7. '[i' → logprob: -10.076994895935059
    8. ' ' → logprob: -10.451994895935059
    9. '   ' → logprob: -10.701994895935059
    10. ']' → logprob: -11.201994895935059

Token 73: ' aa' (ID: 40260)
  Prédit: 'aa'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aa' → logprob: -0.02962389402091503
    2. 'win' → logprob: -4.154623985290527
    3. ' aa' → logprob: -5.029623985290527
    4. 'i' → logprob: -6.279623985290527
    5. '[' → logprob: -6.529623985290527
    6. ' win' → logprob: -6.904623985290527
    7. '   ' → logprob: -7.029623985290527
    8. '[i' → logprob: -7.154623985290527
    9. '0' → logprob: -8.029623985290527
    10. ' i' → logprob: -8.779623985290527

Token 74: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0003890854713972658
    2. '[' → logprob: -7.875389099121094
    3. '[n' → logprob: -13.375389099121094
    4. '   ' → logprob: -13.500389099121094
    5. 'i' → logprob: -13.625389099121094
    6. '[:' → logprob: -13.875389099121094
    7. ' [' → logprob: -14.000389099121094
    8. '[-' → logprob: -14.250389099121094
    9. '[max' → logprob: -14.750389099121094
    10. '[m' → logprob: -15.250389099121094

Token 75: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.03866100683808327
    2. ' -' → logprob: -3.538661003112793
    3. '][:' → logprob: -5.163661003112793
    4. '])' → logprob: -6.413661003112793
    5. ']' → logprob: -7.413661003112793
    6. '[:' → logprob: -8.538661003112793
    7. '][' → logprob: -8.913661003112793
    8. '1' → logprob: -9.038661003112793
    9. 'i' → logprob: -9.288661003112793
    10. ' ' → logprob: -9.538661003112793

Token 76: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.76759916334413e-05
    2. ' ' → logprob: -9.625077247619629
    3. ')' → logprob: -12.500077247619629
    4. ']' → logprob: -13.312577247619629
    5. 'i' → logprob: -13.312577247619629
    6. '   ' → logprob: -13.750077247619629
    7. '])' → logprob: -14.250077247619629
    8. ' i' → logprob: -14.437577247619629
    9. '2' → logprob: -15.125077247619629
    10. ',' → logprob: -15.937577247619629

Token 77: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1756367712223437e-05
    2. ' ' → logprob: -11.625011444091797
    3. 'i' → logprob: -13.250011444091797
    4. '0' → logprob: -14.875011444091797
    5. ']' → logprob: -14.875011444091797
    6. ' i' → logprob: -16.562511444091797
    7. '   ' → logprob: -16.812511444091797
    8. ')' → logprob: -16.812511444091797
    9. '2' → logprob: -17.125011444091797
    10. '][' → logprob: -17.625011444091797

Token 78: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.6789309978485107
    2. ']' → logprob: -0.8039309978485107
    3. ')
' → logprob: -3.4289309978485107
    4. ')' → logprob: -4.42893123626709
    5. '])' → logprob: -7.92893123626709
    6. ']
' → logprob: -8.55393123626709
    7. '])
' → logprob: -8.80393123626709
    8. '   ' → logprob: -9.42893123626709
    9. '][' → logprob: -11.17893123626709
    10. ')
' → logprob: -11.30393123626709

Token 79: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.34148526191711426
    2. '   ' → logprob: -1.5914852619171143
    3. ' for' → logprob: -2.4664852619171143
    4. 'win' → logprob: -8.466485023498535
    5. 'j' → logprob: -9.091485023498535
    6. '<|end|>' → logprob: -9.216485023498535
    7. 'sum' → logprob: -9.966485023498535
    8. '	for' → logprob: -10.091485023498535
    9. '```' → logprob: -10.091485023498535
    10. 'count' → logprob: -10.091485023498535

Token 80: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0082936342805624
    2. '   ' → logprob: -5.758293628692627
    3. 'j' → logprob: -6.008293628692627
    4. ' for' → logprob: -6.383293628692627
    5. 'win' → logprob: -7.883293628692627
    6. 'if' → logprob: -9.008294105529785
    7. 'count' → logprob: -9.133294105529785
    8. 'sum' → logprob: -9.383294105529785
    9. 'cnt' → logprob: -9.633294105529785
    10. 'max' → logprob: -10.633294105529785

Token 81: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.08896858245134354
    2. ' j' → logprob: -2.463968515396118
    3. ' ' → logprob: -11.713968276977539
    4. '   ' → logprob: -12.088968276977539
    5. 'range' → logprob: -13.088968276977539
    6. '	j' → logprob: -13.463968276977539
    7. '```' → logprob: -13.588968276977539
    8. 'x' → logprob: -13.713968276977539
    9. 'k' → logprob: -13.776468276977539
    10. 'v' → logprob: -13.901468276977539

Token 82: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07013504952192307
    2. 'in' → logprob: -2.6951351165771484
    3. 'range' → logprob: -8.945135116577148
    4. ' range' → logprob: -10.445135116577148
    5. ' ' → logprob: -10.570135116577148
    6. '   ' → logprob: -12.320135116577148
    7. '  ' → logprob: -12.695135116577148
    8. '(' → logprob: -13.070135116577148
    9. '(range' → logprob: -13.820135116577148
    10. ')' → logprob: -14.320135116577148

Token 83: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.20152832567691803
    2. ' range' → logprob: -1.7015283107757568
    3. '   ' → logprob: -9.701528549194336
    4. '(range' → logprob: -10.451528549194336
    5. ' ' → logprob: -11.701528549194336
    6. '  ' → logprob: -12.076528549194336
    7. 'i' → logprob: -12.826528549194336
    8. '	range' → logprob: -12.951528549194336
    9. '    ' → logprob: -13.701528549194336
    10. 'ange' → logprob: -13.701528549194336

Token 84: '(len' (ID: 14990)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0012633290607482195
    2. '(' → logprob: -6.75126314163208
    3. '(n' → logprob: -9.626263618469238
    4. '(len' → logprob: -10.876263618469238
    5. '(j' → logprob: -12.501263618469238
    6. 'i' → logprob: -13.251263618469238
    7. '(win' → logprob: -13.626263618469238
    8. ' (' → logprob: -14.626263618469238
    9. '(a' → logprob: -16.126262664794922
    10. ' i' → logprob: -16.126262664794922

Token 85: '(row' (ID: 15945)
  Prédit: '(row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(row' → logprob: -0.006412893533706665
    2. '(win' → logprob: -5.256412982940674
    3. '(' → logprob: -6.756412982940674
    4. ' (' → logprob: -11.506412506103516
    5. 'row' → logprob: -14.006412506103516
    6. '(w' → logprob: -14.381412506103516
    7. ' ' → logprob: -14.506412506103516
    8. '(r' → logprob: -15.006412506103516
    9. 'win' → logprob: -15.131412506103516
    10. '(rows' → logprob: -15.256412506103516

Token 86: ')):
' (ID: 22530)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004567661788314581
    2. '):
' → logprob: -5.754567623138428
    3. '+' → logprob: -7.254567623138428
    4. '   ' → logprob: -8.004568099975586
    5. ' ):' → logprob: -8.754568099975586
    6. ')):' → logprob: -9.504568099975586
    7. '       ' → logprob: -10.004568099975586
    8. ')' → logprob: -10.379568099975586
    9. ' +' → logprob: -12.129568099975586
    10. '):
' → logprob: -12.379568099975586

Token 87: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0022833608090877533
    2. ' if' → logprob: -7.252283573150635
    3. ':' → logprob: -7.502283573150635
    4. '   ' → logprob: -8.377283096313477
    5. ',' → logprob: -8.502283096313477
    6. '<|end|>' → logprob: -8.627283096313477
    7. 'if' → logprob: -9.127283096313477
    8. ' ' → logprob: -9.252283096313477
    9. '    ' → logprob: -10.002283096313477
    10. '      ' → logprob: -10.502283096313477

Token 88: ' a' (ID: 261)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.22087538242340088
    2. 'if' → logprob: -1.7208753824234009
    3. '           ' → logprob: -4.970875263214111
    4. ' win' → logprob: -5.095875263214111
    5. 'win' → logprob: -5.220875263214111
    6. '       ' → logprob: -7.845875263214111
    7. '   ' → logprob: -9.22087574005127
    8. ' ' → logprob: -9.34587574005127
    9. '        ' → logprob: -9.59587574005127
    10. '    ' → logprob: -10.47087574005127

Token 89: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05903065577149391
    2. '=' → logprob: -3.059030771255493
    3. ' ' → logprob: -5.434030532836914
    4. 'b' → logprob: -6.559030532836914
    5. ' +=' → logprob: -6.934030532836914
    6. '   ' → logprob: -7.309030532836914
    7. 'if' → logprob: -7.309030532836914
    8. '  ' → logprob: -7.809030532836914
    9. '+=' → logprob: -8.184030532836914
    10. '       ' → logprob: -8.934030532836914

Token 90: ' row' (ID: 5225)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.42650896310806274
    2. 'win' → logprob: -2.176508903503418
    3. 'i' → logprob: -2.676508903503418
    4. ' win' → logprob: -2.801508903503418
    5. ' row' → logprob: -3.176508903503418
    6. 'aa' → logprob: -3.926508903503418
    7. ' i' → logprob: -4.176508903503418
    8. 'j' → logprob: -5.301508903503418
    9. ' aa' → logprob: -5.301508903503418
    10. 'max' → logprob: -5.551508903503418

Token 91: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.0031424202024936676
    2. '[i' → logprob: -5.878142356872559
    3. '[' → logprob: -8.628142356872559
    4. '[a' → logprob: -9.378142356872559
    5. ' [' → logprob: -11.253142356872559
    6. '   ' → logprob: -12.003142356872559
    7. '       ' → logprob: -12.253142356872559
    8. ')' → logprob: -12.503142356872559
    9. 'a' → logprob: -12.503142356872559
    10. 'j' → logprob: -12.503142356872559

Token 92: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12670883536338806
    2. ')
' → logprob: -2.376708745956421
    3. ' )' → logprob: -4.501708984375
    4. '+' → logprob: -4.751708984375
    5. ' )
' → logprob: -5.876708984375
    6. ' +' → logprob: -6.126708984375
    7. ')+' → logprob: -8.126708984375
    8. '==' → logprob: -8.626708984375
    9. ']' → logprob: -8.876708984375
    10. '[' → logprob: -9.126708984375

Token 93: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08181452006101608
    2. '<|end|>' → logprob: -3.3318145275115967
    3. ' ' → logprob: -4.081814289093018
    4. ' if' → logprob: -4.206814289093018
    5. '
' → logprob: -5.206814289093018
    6. 'if' → logprob: -5.956814289093018
    7. ',' → logprob: -7.331814289093018
    8. '        
' → logprob: -7.456814289093018
    9. '   ' → logprob: -7.706814289093018
    10. '<|end|>' → logprob: -8.456814765930176

Token 94: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.2508939802646637
    2. ' if' → logprob: -1.8758939504623413
    3. 'win' → logprob: -3.375894069671631
    4. '       ' → logprob: -4.000894069671631
    5. ' win' → logprob: -4.250894069671631
    6. 'for' → logprob: -7.625894069671631
    7. 'k' → logprob: -8.000893592834473
    8. ' for' → logprob: -8.625893592834473
    9. '   ' → logprob: -8.625893592834473
    10. 'b' → logprob: -9.000893592834473

Token 95: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.45234888792037964
    2. 'a' → logprob: -1.5773489475250244
    3. ' win' → logprob: -2.2023489475250244
    4. 'win' → logprob: -4.202348709106445
    5. ' i' → logprob: -4.452348709106445
    6. ' j' → logprob: -4.452348709106445
    7. 'i' → logprob: -6.202348709106445
    8. ' (' → logprob: -6.577348709106445
    9. 'j' → logprob: -6.577348709106445
    10. ' ' → logprob: -6.827348709106445

Token 96: ':
' (ID: 734)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.29645004868507385
    2. '==' → logprob: -1.4214500188827515
    3. ' >' → logprob: -4.671450138092041
    4. '>' → logprob: -5.546450138092041
    5. ' <' → logprob: -6.796450138092041
    6. '<' → logprob: -8.546449661254883
    7. ' ' → logprob: -8.921449661254883
    8. ':' → logprob: -8.921449661254883
    9. ' >=' → logprob: -9.421449661254883
    10. ' !=' → logprob: -9.671449661254883

Token 97: '           ' (ID: 352)
  Prédit: ' win'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' win' → logprob: -1.3043556213378906
    2. 'win' → logprob: -1.3043556213378906
    3. ' and' → logprob: -1.4293556213378906
    4. '           ' → logprob: -1.9293556213378906
    5. '       ' → logprob: -3.3043556213378906
    6. ':
' → logprob: -4.929355621337891
    7. 'and' → logprob: -4.929355621337891
    8. ' if' → logprob: -5.304355621337891
    9. ':' → logprob: -5.304355621337891
    10. '   ' → logprob: -5.804355621337891

Token 98: ' win' (ID: 4449)
  Prédit: 'win'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'win' (adapté à ' win') → logprob: -0.03534844517707825
    2. ' win' → logprob: -3.535348415374756
    3. 'if' → logprob: -5.910348415374756
    4. '   ' → logprob: -6.410348415374756
    5. '           ' → logprob: -7.535348415374756
    6. ' if' → logprob: -8.285348892211914
    7. '       ' → logprob: -8.785348892211914
    8. '
' → logprob: -9.535348892211914
    9. ' ' → logprob: -10.035348892211914
    10. '	win' → logprob: -10.410348892211914

Token 99: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.18091212213039398
    2. '[j' → logprob: -1.8059121370315552
    3. '[' → logprob: -7.055912017822266
    4. '[a' → logprob: -8.805912017822266
    5. '[max' → logprob: -9.305912017822266
    6. '[min' → logprob: -10.680912017822266
    7. ' [' → logprob: -11.930912017822266
    8. '[w' → logprob: -12.055912017822266
    9. '[m' → logprob: -12.805912017822266
    10. '[k' → logprob: -12.930912017822266

Token 100: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2359670102596283
    2. ']+=' → logprob: -1.6109670400619507
    3. '|' → logprob: -4.98596715927124
    4. ']=' → logprob: -5.98596715927124
    5. ' ]' → logprob: -7.86096715927124
    6. '-' → logprob: -8.485966682434082
    7. '[j' → logprob: -8.860966682434082
    8. ']|' → logprob: -9.610966682434082
    9. '+' → logprob: -9.860966682434082
    10. '+=' → logprob: -10.110966682434082

Token 101: ' |=' (ID: 19917)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.14097663760185242
    2. ' +=' → logprob: -2.140976667404175
    3. '=' → logprob: -4.765976428985596
    4. '|' → logprob: -5.640976428985596
    5. ' |=' → logprob: -6.765976428985596
    6. ' =' → logprob: -7.515976428985596
    7. '+' → logprob: -9.890976905822754
    8. ']+=' → logprob: -10.140976905822754
    9. ' ^=' → logprob: -10.265976905822754
    10. ' ' → logprob: -10.640976905822754

Token 102: ' ' (ID: 220)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6717806458473206
    2. '1' → logprob: -0.9217806458473206
    3. 'win' → logprob: -2.421780586242676
    4. ' (' → logprob: -7.046780586242676
    5. 'j' → logprob: -7.421780586242676
    6. ' ' → logprob: -7.546780586242676
    7. ' win' → logprob: -8.171780586242676
    8. '(win' → logprob: -8.671780586242676
    9. '(j' → logprob: -9.546780586242676
    10. '2' → logprob: -10.421780586242676

Token 103: '1' (ID: 16)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8281310200691223
    2. '1' → logprob: -0.8281310200691223
    3. 'win' → logprob: -2.0781309604644775
    4. '(win' → logprob: -7.953131198883057
    5. ' (' → logprob: -8.328130722045898
    6. 'j' → logprob: -8.453130722045898
    7. ' ' → logprob: -9.453130722045898
    8. ' win' → logprob: -9.828130722045898
    9. '(j' → logprob: -9.953130722045898
    10. '2' → logprob: -10.453130722045898

Token 104: ' <<' (ID: 2256)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.02777678333222866
    2. ' <<' → logprob: -3.6527767181396484
    3. '<' → logprob: -6.902776718139648
    4. '0' → logprob: -8.777776718139648
    5. '           ' → logprob: -9.527776718139648
    6. '<<<' → logprob: -9.527776718139648
    7. ' ' → logprob: -10.277776718139648
    8. '<<(' → logprob: -10.402776718139648
    9. '    ' → logprob: -11.277776718139648
    10. ' <<=' → logprob: -11.902776718139648

Token 105: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.00014072739577386528
    2. 'i' → logprob: -9.125141143798828
    3. ' j' → logprob: -11.250141143798828
    4. '(' → logprob: -12.000141143798828
    5. '   ' → logprob: -12.375141143798828
    6. '           ' → logprob: -12.625141143798828
    7. '(j' → logprob: -13.250141143798828
    8. 'n' → logprob: -14.500141143798828
    9. '	j' → logprob: -14.500141143798828
    10. '       ' → logprob: -14.750141143798828

Token 106: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 107: '       ' (ID: 309)
  Prédit: 'win'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'win' → logprob: -0.0936431735754013
    2. '       ' → logprob: -3.2186431884765625
    3. '           ' → logprob: -4.2186431884765625
    4. '<|end|>' → logprob: -4.4686431884765625
    5. ' win' → logprob: -4.7186431884765625
    6. ' ' → logprob: -5.7186431884765625
    7. 'else' → logprob: -5.7186431884765625
    8. 'print' → logprob: -6.3436431884765625
    9. '   ' → logprob: -6.7186431884765625
    10. '```' → logprob: -6.9686431884765625

Token 108: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.286334365606308
    2. ' else' → logprob: -1.4113343954086304
    3. 'elif' → logprob: -5.78633451461792
    4. ' elif' → logprob: -7.03633451461792
    5. '<|end|>' → logprob: -7.66133451461792
    6. ' ' → logprob: -8.036334037780762
    7. 'win' → logprob: -9.661334037780762
    8. 's' → logprob: -9.786334037780762
    9. '	else' → logprob: -9.786334037780762
    10. '       ' → logprob: -10.161334037780762

Token 109: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6393861770629883
    2. ':
' → logprob: -1.3893861770629883
    3. ':' → logprob: -1.5143861770629883
    4. '       ' → logprob: -6.764386177062988
    5. '          ' → logprob: -7.889386177062988
    6. '   ' → logprob: -8.139386177062988
    7. '            
' → logprob: -8.139386177062988
    8. ' :
' → logprob: -8.139386177062988
    9. '
' → logprob: -8.639386177062988
    10. ',' → logprob: -9.139386177062988

Token 110: '           ' (ID: 352)
  Prédit: 'win'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'win' → logprob: -0.007470089942216873
    2. '       ' → logprob: -5.38247013092041
    3. '           ' → logprob: -6.25747013092041
    4. ' win' → logprob: -7.13247013092041
    5. '   ' → logprob: -9.25747013092041
    6. '	win' → logprob: -11.00747013092041
    7. '```' → logprob: -11.50747013092041
    8. ' ' → logprob: -12.63247013092041
    9. '               ' → logprob: -13.75747013092041
    10. '  ' → logprob: -14.38247013092041

Token 111: ' win' (ID: 4449)
  Prédit: 'win'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'win' (adapté à ' win') → logprob: -0.0002933942887466401
    2. ' win' → logprob: -8.500293731689453
    3. '           ' → logprob: -9.750293731689453
    4. '   ' → logprob: -11.500293731689453
    5. '
' → logprob: -11.875293731689453
    6. '       ' → logprob: -12.250293731689453
    7. '	win' → logprob: -12.500293731689453
    8. ' ' → logprob: -13.750293731689453
    9. '```' → logprob: -14.125293731689453
    10. '               ' → logprob: -14.250293731689453

Token 112: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.09808282554149628
    2. '[i' → logprob: -2.4730827808380127
    3. '[' → logprob: -4.723083019256592
    4. '   ' → logprob: -9.098082542419434
    5. 'j' → logprob: -10.973082542419434
    6. '```' → logprob: -10.973082542419434
    7. '       ' → logprob: -11.223082542419434
    8. '           ' → logprob: -11.723082542419434
    9. '\[' → logprob: -11.848082542419434
    10. '|' → logprob: -12.098082542419434

Token 113: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.02075185254216194
    2. '|' → logprob: -4.020751953125
    3. ']|' → logprob: -6.270751953125
    4. ' |=' → logprob: -8.020751953125
    5. ')' → logprob: -8.645751953125
    6. ' ]' → logprob: -8.770751953125
    7. ' |' → logprob: -11.020751953125
    8. '"]' → logprob: -11.770751953125
    9. ' ' → logprob: -11.770751953125
    10. '   ' → logprob: -13.020751953125

Token 114: ' |=' (ID: 19917)
  Prédit: '|'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '|' → logprob: -0.00018161057960242033
    2. ' |=' → logprob: -8.625181198120117
    3. '&' → logprob: -14.250181198120117
    4. '|=
' → logprob: -14.625181198120117
    5. ')' → logprob: -15.250181198120117
    6. '=' → logprob: -15.625181198120117
    7. ' ' → logprob: -16.125181198120117
    8. ')|' → logprob: -16.375181198120117
    9. '"|' → logprob: -16.625181198120117
    10. ' |' → logprob: -16.750181198120117

Token 115: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004081959370523691
    2. ' ' → logprob: -5.504081726074219
    3. '(' → logprob: -12.629081726074219
    4. ' (' → logprob: -15.754081726074219
    5. '   ' → logprob: -16.25408172607422
    6. '0' → logprob: -18.62908172607422
    7. '           ' → logprob: -19.00408172607422
    8. ')' → logprob: -19.00408172607422
    9. '```' → logprob: -19.00408172607422
    10. '  ' → logprob: -19.12908172607422

Token 116: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2723104848410003e-05
    2. ' ' → logprob: -10.750022888183594
    3. '(' → logprob: -13.625022888183594
    4. '   ' → logprob: -18.250022888183594
    5. ' (' → logprob: -19.500022888183594
    6. '`' → logprob: -20.125022888183594
    7. '[' → logprob: -20.750022888183594
    8. '```' → logprob: -21.000022888183594
    9. '１' → logprob: -21.125022888183594
    10. '0' → logprob: -21.250022888183594

Token 117: ' <<' (ID: 2256)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.10327904671430588
    2. ' <<' → logprob: -3.4782791137695312
    3. '<' → logprob: -3.8532791137695312
    4. '1' → logprob: -3.8532791137695312
    5. '(' → logprob: -5.103279113769531
    6. '3' → logprob: -5.603279113769531
    7. '0' → logprob: -6.103279113769531
    8. 'i' → logprob: -6.103279113769531
    9. '7' → logprob: -6.478279113769531
    10. '6' → logprob: -6.728279113769531

Token 118: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -2.339278580620885e-06
    2. ' i' → logprob: -13.000001907348633
    3. '	i' → logprob: -19.625001907348633
    4. '   ' → logprob: -19.625001907348633
    5. '[i' → logprob: -20.750001907348633
    6. '<|end|>' → logprob: -21.375001907348633
    7. ' ' → logprob: -21.500001907348633
    8. '(i' → logprob: -21.500001907348633
    9. '           ' → logprob: -21.625001907348633
    10. '```' → logprob: -21.750001907348633

Token 119: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 120: 'd' (ID: 67)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.12793338298797607
    2. 'print' → logprob: -3.2529335021972656
    3. 'mask' → logprob: -3.7529335021972656
    4. 'dp' → logprob: -5.002933502197266
    5. '#' → logprob: -5.127933502197266
    6. 'i' → logprob: -5.252933502197266
    7. 'answer' → logprob: -5.252933502197266
    8. 'def' → logprob: -5.752933502197266
    9. 'n' → logprob: -5.752933502197266
    10. 'result' → logprob: -6.002933502197266

Token 121: 'pl' (ID: 528)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -8.709308167453855e-05
    2. ' =' → logprob: -9.375086784362793
    3. '=' → logprob: -13.875086784362793
    4. 'ps' → logprob: -15.625086784362793
    5. 'pd' → logprob: -15.750086784362793
    6. 'P' → logprob: -15.875086784362793
    7. '[' → logprob: -16.25008773803711
    8. '   ' → logprob: -16.37508773803711
    9. 'dp' → logprob: -16.37508773803711
    10. 'pp' → logprob: -16.50008773803711

Token 122: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06880798935890198
    2. 'o' → logprob: -3.193808078765869
    3. 'p' → logprob: -5.318808078765869
    4. 'e' → logprob: -5.443808078765869
    5. '=' → logprob: -5.693808078765869
    6. 'a' → logprob: -5.943808078765869
    7. '1' → logprob: -6.068808078765869
    8. '0' → logprob: -6.318808078765869
    9. 'l' → logprob: -6.818808078765869
    10. '[' → logprob: -6.943808078765869

Token 123: ' []
' (ID: 8911)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00674793915823102
    2. 'win' → logprob: -5.381747722625732
    3. ' [' → logprob: -6.506747722625732
    4. '0' → logprob: -8.50674819946289
    5. '[-' → logprob: -8.50674819946289
    6. '{}' → logprob: -9.75674819946289
    7. '{' → logprob: -10.38174819946289
    8. '(' → logprob: -10.38174819946289
    9. '[[' → logprob: -10.75674819946289
    10. '1' → logprob: -10.88174819946289

Token 124: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2925313413143158
    2. '[' → logprob: -1.4175313711166382
    3. ' for' → logprob: -5.292531490325928
    4. '[d' → logprob: -6.542531490325928
    5. '[-' → logprob: -6.917531490325928
    6. 'd' → logprob: -7.167531490325928
    7. '[(' → logprob: -7.417531490325928
    8. 'dp' → logprob: -7.417531490325928
    9. '[[' → logprob: -7.417531490325928
    10. '[n' → logprob: -7.667531490325928

Token 125: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5283256769180298
    2. '_' → logprob: -1.2783256769180298
    3. 'mask' → logprob: -2.5283255577087402
    4. ' i' → logprob: -3.9033255577087402
    5. ' mask' → logprob: -4.02832555770874
    6. '_mask' → logprob: -5.15332555770874
    7. ' _' → logprob: -5.90332555770874
    8. '_i' → logprob: -6.27832555770874
    9. 's' → logprob: -7.65332555770874
    10. 'k' → logprob: -7.77832555770874

Token 126: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03815533220767975
    2. 'in' → logprob: -3.2881553173065186
    3. ' ' → logprob: -9.538155555725098
    4. 'n' → logprob: -10.913155555725098
    5. ',' → logprob: -12.038155555725098
    6. '_' → logprob: -12.538155555725098
    7. 'd' → logprob: -12.913155555725098
    8. '0' → logprob: -13.538155555725098
    9. ' =' → logprob: -13.663155555725098
    10. 'range' → logprob: -13.913155555725098

Token 127: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.033651575446128845
    2. ' range' → logprob: -3.40865159034729
    3. '[' → logprob: -13.283651351928711
    4. '(range' → logprob: -13.783651351928711
    5. '	range' → logprob: -14.658651351928711
    6. 'r' → logprob: -14.783651351928711
    7. ' ' → logprob: -14.908651351928711
    8. 'win' → logprob: -15.408651351928711
    9. 'rang' → logprob: -15.408651351928711
    10. 'n' → logprob: -15.408651351928711

Token 128: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.14283688366413116
    2. '(n' → logprob: -2.017836809158325
    3. '((' → logprob: -9.017836570739746
    4. '(len' → logprob: -10.767836570739746
    5. '(win' → logprob: -12.392836570739746
    6. ' (' → logprob: -12.517836570739746
    7. '(pow' → logprob: -12.642836570739746
    8. '1' → logprob: -13.017836570739746
    9. '(s' → logprob: -13.642836570739746
    10. 'n' → logprob: -14.267836570739746

Token 129: '):
' (ID: 1883)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7346550226211548
    2. '):' → logprob: -0.9846550226211548
    3. '):
' → logprob: -2.3596549034118652
    4. ' +' → logprob: -2.9846549034118652
    5. ' ):' → logprob: -7.234654903411865
    6. '   ' → logprob: -8.359655380249023
    7. ')' → logprob: -8.359655380249023
    8. '-' → logprob: -8.734655380249023
    9. ',' → logprob: -9.734655380249023
    10. ' ' → logprob: -9.984655380249023

Token 130: '   ' (ID: 271)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0970943346619606
    2. '   ' → logprob: -2.5970942974090576
    3. ' d' → logprob: -4.222094535827637
    4. 'dp' → logprob: -5.972094535827637
    5. ' ' → logprob: -7.597094535827637
    6. ' dp' → logprob: -9.097094535827637
    7. '	d' → logprob: -9.722094535827637
    8. 'import' → logprob: -10.222094535827637
    9. 'for' → logprob: -10.347094535827637
    10. 'row' → logprob: -10.597094535827637

Token 131: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.002265636110678315
    2. ' d' → logprob: -6.752265453338623
    3. 'dp' → logprob: -7.127265453338623
    4. '   ' → logprob: -8.877265930175781
    5. 'for' → logprob: -9.502265930175781
    6. 'import' → logprob: -10.752265930175781
    7. 'tmp' → logprob: -11.252265930175781
    8. 'mask' → logprob: -11.502265930175781
    9. 'row' → logprob: -11.627265930175781
    10. ' ' → logprob: -12.002265930175781

Token 132: 'pl' (ID: 528)
  Prédit: 'pl'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pl' → logprob: -0.029847217723727226
    2. 'p' → logprob: -3.5298471450805664
    3. 'l' → logprob: -9.904847145080566
    4. '_pl' → logprob: -11.279847145080566
    5. 'plen' → logprob: -12.404847145080566
    6. 'plist' → logprob: -12.529847145080566
    7. 'pll' → logprob: -12.529847145080566
    8. 'pls' → logprob: -13.029847145080566
    9. '```' → logprob: -13.279847145080566
    10. ' pl' → logprob: -13.279847145080566

Token 133: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.01667022332549095
    2. '.' → logprob: -4.266670227050781
    3. '=' → logprob: -6.141670227050781
    4. ' =' → logprob: -9.016670227050781
    5. '.extend' → logprob: -9.516670227050781
    6. 'append' → logprob: -10.141670227050781
    7. ' .' → logprob: -10.141670227050781
    8. '.app' → logprob: -10.141670227050781
    9. '.ap' → logprob: -11.016670227050781
    10. '.=' → logprob: -11.391670227050781

Token 134: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.25445666909217834
    2. '({' → logprob: -1.629456639289856
    3. '([' → logprob: -4.129456520080566
    4. '0' → logprob: -4.754456520080566
    5. '((' → logprob: -7.129456520080566
    6. '{}' → logprob: -7.254456520080566
    7. '{' → logprob: -7.754456520080566
    8. '[' → logprob: -7.754456520080566
    9. '(set' → logprob: -8.004456520080566
    10. '1' → logprob: -8.004456520080566

Token 135: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6167293787002563
    2. '0' → logprob: -1.6167293787002563
    3. 'win' → logprob: -1.6167293787002563
    4. '(' → logprob: -3.741729259490967
    5. '{' → logprob: -3.991729259490967
    6. '[' → logprob: -4.241729259490967
    7. 'set' → logprob: -5.741729259490967
    8. '{}' → logprob: -6.991729259490967
    9. ' ' → logprob: -7.241729259490967
    10. '(win' → logprob: -7.491729259490967

Token 136: ' <<' (ID: 2256)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.03024064563214779
    2. ' <<' → logprob: -3.530240535736084
    3. ')' → logprob: -7.655240535736084
    4. '<' → logprob: -12.405241012573242
    5. ')<<' → logprob: -12.405241012573242
    6. '<<(' → logprob: -12.655241012573242
    7. '<<<' → logprob: -12.780241012573242
    8. ' ' → logprob: -15.030241012573242
    9. ' ' → logprob: -15.030241012573242
    10. '1' → logprob: -15.280241012573242

Token 137: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -5.872261317563243e-05
    2. ' i' → logprob: -9.750059127807617
    3. '   ' → logprob: -15.500059127807617
    4. 'n' → logprob: -16.125059127807617
    5. ')i' → logprob: -17.500059127807617
    6. '
' → logprob: -17.750059127807617
    7. ' ' → logprob: -17.750059127807617
    8. '(i' → logprob: -17.875059127807617
    9. '	i' → logprob: -17.875059127807617
    10. '{i' → logprob: -19.125059127807617

Token 138: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.68022444692906e-05
    2. ' )' → logprob: -10.125046730041504
    3. ')
' → logprob: -12.500046730041504
    4. '   ' → logprob: -14.250046730041504
    5. '))' → logprob: -15.000046730041504
    6. '])' → logprob: -15.375046730041504
    7. ' ' → logprob: -15.625046730041504
    8. ']' → logprob: -15.625046730041504
    9. 'd' → logprob: -15.625046730041504
    10. '')' → logprob: -15.625046730041504

Token 139: 'd' (ID: 67)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.31514573097229004
    2. 'd' → logprob: -1.31514573097229
    3. 'for' → logprob: -7.440145492553711
    4. ']' → logprob: -7.815145492553711
    5. 'dl' → logprob: -8.940145492553711
    6. 'dpi' → logprob: -8.940145492553711
    7. ')' → logprob: -9.065145492553711
    8. 'dfs' → logprob: -10.065145492553711
    9. '0' → logprob: -10.315145492553711
    10. ' ' → logprob: -10.690145492553711

Token 140: 'pr' (ID: 638)
  Prédit: 'pr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.0002819544170051813
    2. 'p' → logprob: -8.625282287597656
    3. 'pl' → logprob: -10.125282287597656
    4. '```' → logprob: -11.625282287597656
    5. ' =' → logprob: -12.000282287597656
    6. 'r' → logprob: -12.125282287597656
    7. 'print' → logprob: -12.125282287597656
    8. '=' → logprob: -12.250282287597656
    9. 'pm' → logprob: -12.625282287597656
    10. ' pr' → logprob: -12.625282287597656

Token 141: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10327377915382385
    2. '=' → logprob: -2.353273868560791
    3. '.append' → logprob: -5.853273868560791
    4. '=[]' → logprob: -8.978273391723633
    5. '[]' → logprob: -11.103273391723633
    6. '.extend' → logprob: -11.353273391723633
    7. '.' → logprob: -12.103273391723633
    8. ']' → logprob: -12.228273391723633
    9. ' ' → logprob: -12.353273391723633
    10. 'append' → logprob: -12.478273391723633

Token 142: ' []
' (ID: 8911)
  Prédit: '[]
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]
' → logprob: -0.1199556291103363
    2. '[' → logprob: -2.869955539703369
    3. '[]' → logprob: -3.119955539703369
    4. 'd' → logprob: -4.619955539703369
    5. '[
' → logprob: -7.369955539703369
    6. ' []
' → logprob: -7.369955539703369
    7. '[(' → logprob: -8.119956016540527
    8. ' [' → logprob: -8.494956016540527
    9. ' d' → logprob: -8.869956016540527
    10. '1' → logprob: -9.119956016540527

Token 143: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -9.088346359931165e-07
    2. '=' → logprob: -14.375000953674316
    3. ' for' → logprob: -16.625
    4. '.append' → logprob: -16.875
    5. '=
' → logprob: -17.75
    6. '[' → logprob: -18.25
    7. 'd' → logprob: -18.375
    8. '+=' → logprob: -18.375
    9. '
' → logprob: -18.625
    10. 'import' → logprob: -19.0

Token 144: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.20253199338912964
    2. ' i' → logprob: -1.7025320529937744
    3. '_' → logprob: -6.952531814575195
    4. ' _' → logprob: -8.952531814575195
    5. '_i' → logprob: -11.327531814575195
    6. ' range' → logprob: -11.702531814575195
    7. 'range' → logprob: -11.952531814575195
    8. ' in' → logprob: -12.702531814575195
    9. 'in' → logprob: -14.077531814575195
    10. ' ' → logprob: -14.327531814575195

Token 145: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5760104656219482
    2. 'in' → logprob: -0.8260104656219482
    3. 'range' → logprob: -10.576010704040527
    4. 'd' → logprob: -11.076010704040527
    5. 'n' → logprob: -11.326010704040527
    6. '   ' → logprob: -12.076010704040527
    7. ' ' → logprob: -12.701010704040527
    8. '=' → logprob: -13.076010704040527
    9. '_' → logprob: -13.076010704040527
    10. '(' → logprob: -13.951010704040527

Token 146: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.030438514426350594
    2. ' range' → logprob: -3.5304384231567383
    3. '(range' → logprob: -7.405438423156738
    4. '(' → logprob: -9.530438423156738
    5. '(n' → logprob: -12.280438423156738
    6. 'n' → logprob: -13.405438423156738
    7. 'd' → logprob: -15.405438423156738
    8. '[' → logprob: -15.405438423156738
    9. '	range' → logprob: -16.030439376831055
    10. 'in' → logprob: -16.155439376831055

Token 147: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.002942282473668456
    2. 'range' → logprob: -6.502942085266113
    3. 'n' → logprob: -6.627942085266113
    4. '(range' → logprob: -9.252942085266113
    5. '(' → logprob: -11.127942085266113
    6. ' range' → logprob: -12.377942085266113
    7. '[n' → logprob: -14.377942085266113
    8. ' (' → logprob: -15.502942085266113
    9. 'in' → logprob: -15.752942085266113
    10. '<n' → logprob: -16.37794303894043

Token 148: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.02086568810045719
    2. '):' → logprob: -3.8958656787872314
    3. ':
' → logprob: -9.020865440368652
    4. ':' → logprob: -10.145865440368652
    5. '):
' → logprob: -10.145865440368652
    6. '   ' → logprob: -10.270865440368652
    7. 'd' → logprob: -10.395865440368652
    8. ']:
' → logprob: -11.020865440368652
    9. ' ' → logprob: -11.520865440368652
    10. '():
' → logprob: -11.770865440368652

Token 149: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18046195805072784
    2. 'd' → logprob: -1.8054620027542114
    3. ' d' → logprob: -7.305461883544922
    4. '	d' → logprob: -11.055461883544922
    5. ' ' → logprob: -11.680461883544922
    6. '       ' → logprob: -11.680461883544922
    7. '  ' → logprob: -12.430461883544922
    8. '[d' → logprob: -12.805461883544922
    9. '(d' → logprob: -13.180461883544922
    10. '    ' → logprob: -14.055461883544922

Token 150: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.0006669254507869482
    2. ' d' → logprob: -7.375667095184326
    3. '   ' → logprob: -10.125666618347168
    4. 'append' → logprob: -15.500666618347168
    5. '	d' → logprob: -17.375667572021484
    6. '.append' → logprob: -17.500667572021484
    7. '       ' → logprob: -17.625667572021484
    8. '(' → logprob: -17.625667572021484
    9. ' ' → logprob: -17.875667572021484
    10. '[' → logprob: -18.000667572021484

Token 151: 'pr' (ID: 638)
  Prédit: 'pr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.002153115114197135
    2. 'pl' → logprob: -6.252152919769287
    3. 'p' → logprob: -8.502153396606445
    4. 'r' → logprob: -11.877153396606445
    5. '.append' → logprob: -11.877153396606445
    6. 'append' → logprob: -12.002153396606445
    7. 'rl' → logprob: -15.002153396606445
    8. 'prt' → logprob: -15.377153396606445
    9. 'l' → logprob: -15.502153396606445
    10. 'pll' → logprob: -16.127153396606445

Token 152: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0004528374411165714
    2. '=' → logprob: -8.375452995300293
    3. '.' → logprob: -8.500452995300293
    4. 'append' → logprob: -11.125452995300293
    5. ' .' → logprob: -13.625452995300293
    6. '.=' → logprob: -13.625452995300293
    7. '.extend' → logprob: -14.625452995300293
    8. '=.' → logprob: -15.375452995300293
    9. '+=' → logprob: -15.500452995300293
    10. '.app' → logprob: -15.500452995300293

Token 153: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.010944887064397335
    2. '1' → logprob: -4.760944843292236
    3. '((' → logprob: -6.510944843292236
    4. '0' → logprob: -8.260945320129395
    5. 'win' → logprob: -8.385945320129395
    6. '(win' → logprob: -8.885945320129395
    7. 'd' → logprob: -10.010945320129395
    8. '([' → logprob: -10.260945320129395
    9. '({' → logprob: -10.635945320129395
    10. ' (' → logprob: -11.010945320129395

Token 154: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0019502983195707202
    2. '(' → logprob: -6.751950263977051
    3. ' ' → logprob: -7.751950263977051
    4. '0' → logprob: -8.12695026397705
    5. 'win' → logprob: -10.87695026397705
    6. '[' → logprob: -11.25195026397705
    7. '{' → logprob: -11.75195026397705
    8. ')' → logprob: -12.87695026397705
    9. ' (' → logprob: -12.87695026397705
    10. '~' → logprob: -13.50195026397705

Token 155: ' <<' (ID: 2256)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.2520529627799988
    2. ' <<' → logprob: -1.5020530223846436
    3. ')' → logprob: -9.252053260803223
    4. ')<<' → logprob: -12.002053260803223
    5. '()<<' → logprob: -12.627053260803223
    6. '<<<' → logprob: -12.877053260803223
    7. '1' → logprob: -12.877053260803223
    8. '(' → logprob: -13.002053260803223
    9. '<' → logprob: -13.252053260803223
    10. '   ' → logprob: -13.502053260803223

Token 156: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0011741555063053966
    2. ' i' → logprob: -6.751173973083496
    3. '(i' → logprob: -13.376173973083496
    4. '   ' → logprob: -13.626173973083496
    5. ' ' → logprob: -14.626173973083496
    6. '(' → logprob: -15.126173973083496
    7. '	i' → logprob: -16.501174926757812
    8. ' (' → logprob: -16.626174926757812
    9. 'n' → logprob: -16.751174926757812
    10. '  ' → logprob: -16.876174926757812

Token 157: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5048530030981055e-06
    2. ')
' → logprob: -13.750001907348633
    3. ' )' → logprob: -15.125001907348633
    4. '))' → logprob: -17.000001907348633
    5. '   ' → logprob: -17.000001907348633
    6. ')`' → logprob: -17.375001907348633
    7. ')

' → logprob: -18.250001907348633
    8. '')' → logprob: -19.000001907348633
    9. '())' → logprob: -19.000001907348633
    10. '#' → logprob: -19.125001907348633

Token 158: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.005716538988053799
    2. 'mask' → logprob: -6.255716323852539
    3. 'm' → logprob: -6.630716323852539
    4. 'q' → logprob: -6.880716323852539
    5. 'from' → logprob: -8.255716323852539
    6. 'full' → logprob: -8.380716323852539
    7. 'dp' → logprob: -8.505716323852539
    8. 'all' → logprob: -8.505716323852539
    9. 'def' → logprob: -9.005716323852539
    10. 'Q' → logprob: -9.755716323852539

Token 159: ' d' (ID: 272)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.781450629234314
    2. 'i' → logprob: -1.156450629234314
    3. ' mask' → logprob: -1.906450629234314
    4. 'mask' → logprob: -3.5314507484436035
    5. ' size' → logprob: -4.9064507484436035
    6. ' k' → logprob: -5.4064507484436035
    7. 'k' → logprob: -5.5314507484436035
    8. '_' → logprob: -5.5314507484436035
    9. ' s' → logprob: -5.5314507484436035
    10. ' l' → logprob: -5.6564507484436035

Token 160: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.017552267760038376
    2. ' i' → logprob: -4.642552375793457
    3. ' ' → logprob: -5.392552375793457
    4. 'in' → logprob: -6.642552375793457
    5. 'i' → logprob: -7.517552375793457
    6. ' _' → logprob: -7.642552375793457
    7. 'l' → logprob: -8.267552375793457
    8. '_' → logprob: -8.267552375793457
    9. 'd' → logprob: -9.017552375793457
    10. '   ' → logprob: -10.267552375793457

Token 161: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3869000971317291
    2. ' range' → logprob: -1.1369000673294067
    3. '(range' → logprob: -11.261899948120117
    4. ' ' → logprob: -11.886899948120117
    5. '   ' → logprob: -13.011899948120117
    6. '[' → logprob: -13.636899948120117
    7. '1' → logprob: -13.761899948120117
    8. 'd' → logprob: -14.011899948120117
    9. '	range' → logprob: -14.136899948120117
    10. 'win' → logprob: -14.386899948120117

Token 162: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.001718019717372954
    2. '(n' → logprob: -6.376718044281006
    3. '1' → logprob: -11.376717567443848
    4. ' (' → logprob: -13.251717567443848
    5. '2' → logprob: -13.626717567443848
    6. 'n' → logprob: -14.001717567443848
    7. '(
' → logprob: -16.001718521118164
    8. '((' → logprob: -16.376718521118164
    9. ' ' → logprob: -16.501718521118164
    10. '(win' → logprob: -17.501718521118164

Token 163: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.09531807154417038
    2. 'n' → logprob: -2.470318078994751
    3. '2' → logprob: -5.095317840576172
    4. '3' → logprob: -9.720317840576172
    5. '(' → logprob: -9.845317840576172
    6. '0' → logprob: -9.970317840576172
    7. '(n' → logprob: -10.470317840576172
    8. ' ' → logprob: -10.845317840576172
    9. ' n' → logprob: -11.970317840576172
    10. '   ' → logprob: -12.470317840576172

Token 164: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0019091233843937516
    2. ',n' → logprob: -7.001909255981445
    3. ' ,' → logprob: -7.001909255981445
    4. '+' → logprob: -10.251909255981445
    5. 'n' → logprob: -10.251909255981445
    6. ' +' → logprob: -11.876909255981445
    7. '<<' → logprob: -12.376909255981445
    8. '+n' → logprob: -13.751909255981445
    9. '   ' → logprob: -14.001909255981445
    10. '1' → logprob: -14.001909255981445

Token 165: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0004377022560220212
    2. ' n' → logprob: -8.37543773651123
    3. '1' → logprob: -8.50043773651123
    4. '(n' → logprob: -13.75043773651123
    5. ' ' → logprob: -14.25043773651123
    6. '(' → logprob: -14.25043773651123
    7. '10' → logprob: -14.37543773651123
    8. '   ' → logprob: -15.25043773651123
    9. '20' → logprob: -15.75043773651123
    10. '2' → logprob: -16.500436782836914

Token 166: '):
' (ID: 1883)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3066430389881134
    2. '):
' → logprob: -1.931643009185791
    3. '):' → logprob: -2.556643009185791
    4. ' +' → logprob: -3.181643009185791
    5. ' ):' → logprob: -10.55664348602295
    6. '   ' → logprob: -11.30664348602295
    7. ' ):
' → logprob: -11.43164348602295
    8. '+n' → logprob: -11.68164348602295
    9. '):
' → logprob: -11.93164348602295
    10. ')' → logprob: -11.93164348602295

Token 167: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5020461678504944
    2. ' for' → logprob: -1.6270461082458496
    3. 'for' → logprob: -1.6270461082458496
    4. 'mask' → logprob: -7.25204610824585
    5. ' mask' → logprob: -7.25204610824585
    6. ' ' → logprob: -9.252046585083008
    7. 'm' → logprob: -10.252046585083008
    8. '	for' → logprob: -10.752046585083008
    9. ' m' → logprob: -11.002046585083008
    10. 'dp' → logprob: -11.002046585083008

Token 168: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.004679560661315918
    2. 'new' → logprob: -6.3796796798706055
    3. 'nd' → logprob: -6.7546796798706055
    4. 'dp' → logprob: -7.5046796798706055
    5. 'mask' → logprob: -7.8796796798706055
    6. 'd' → logprob: -8.629679679870605
    7. 'next' → logprob: -8.629679679870605
    8. 'tmp' → logprob: -9.254679679870605
    9. '   ' → logprob: -9.379679679870605
    10. 'ndl' → logprob: -9.629679679870605

Token 169: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.849267840385437
    2. 'l' → logprob: -0.849267840385437
    3. 's' → logprob: -3.2242679595947266
    4. 'mask' → logprob: -3.4742679595947266
    5. 'left' → logprob: -3.5992679595947266
    6. 'j' → logprob: -4.599267959594727
    7. 'x' → logprob: -5.099267959594727
    8. 'L' → logprob: -5.599267959594727
    9. 'S' → logprob: -5.724267959594727
    10. 'k' → logprob: -5.974267959594727

Token 170: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004148087929934263
    2. 'in' → logprob: -5.504148006439209
    3. 'n' → logprob: -10.879148483276367
    4. 'd' → logprob: -11.629148483276367
    5. ',' → logprob: -11.754148483276367
    6. 'range' → logprob: -12.129148483276367
    7. '+' → logprob: -12.129148483276367
    8. '	in' → logprob: -12.379148483276367
    9. ' ' → logprob: -12.379148483276367
    10. '   ' → logprob: -12.879148483276367

Token 171: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.11284541338682175
    2. 'range' → logprob: -2.2378454208374023
    3. ' ' → logprob: -11.987845420837402
    4. 'd' → logprob: -12.487845420837402
    5. '(range' → logprob: -12.612845420837402
    6. '   ' → logprob: -13.237845420837402
    7. '[' → logprob: -13.737845420837402
    8. 'ran' → logprob: -13.737845420837402
    9. '  ' → logprob: -13.987845420837402
    10. 'n' → logprob: -14.237845420837402

Token 172: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0024421238340437412
    2. '(d' → logprob: -6.377442359924316
    3. '(' → logprob: -7.252442359924316
    4. '(range' → logprob: -10.752442359924316
    5. 'd' → logprob: -12.377442359924316
    6. 'range' → logprob: -13.127442359924316
    7. 'n' → logprob: -13.752442359924316
    8. ' range' → logprob: -13.752442359924316
    9. ' ' → logprob: -15.002442359924316
    10. '   ' → logprob: -15.002442359924316

Token 173: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.0518740713596344
    2. '):' → logprob: -3.1768741607666016
    3. '-' → logprob: -5.676874160766602
    4. '+' → logprob: -6.301874160766602
    5. ' -' → logprob: -6.551874160766602
    6. '   ' → logprob: -7.301874160766602
    7. '+d' → logprob: -7.301874160766602
    8. '-d' → logprob: -7.926874160766602
    9. 'd' → logprob: -9.176874160766602
    10. ' +' → logprob: -9.301874160766602

Token 174: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.058973684906959534
    2. 'if' → logprob: -3.433973789215088
    3. '   ' → logprob: -4.308973789215088
    4. ' if' → logprob: -4.808973789215088
    5. 'for' → logprob: -6.058973789215088
    6. ' for' → logprob: -7.183973789215088
    7. 'mask' → logprob: -9.68397331237793
    8. 'next' → logprob: -10.30897331237793
    9. ' j' → logprob: -10.43397331237793
    10. 'j' → logprob: -10.43397331237793

Token 175: ' j' (ID: 441)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8965213894844055
    2. 'if' → logprob: -1.1465213298797607
    3. 'for' → logprob: -1.5215213298797607
    4. ' for' → logprob: -3.8965213298797607
    5. ' if' → logprob: -4.27152156829834
    6. '       ' → logprob: -4.89652156829834
    7. 'j' (adapté à ' j') → logprob: -5.27152156829834
    8. 'mask' → logprob: -5.27152156829834
    9. ' j' → logprob: -7.14652156829834
    10. ' ' → logprob: -7.77152156829834

Token 176: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5760510563850403
    2. '=' → logprob: -0.8260510563850403
    3. ' in' → logprob: -9.826050758361816
    4. 'range' → logprob: -10.951050758361816
    5. ' ' → logprob: -11.826050758361816
    6. 'if' → logprob: -12.076050758361816
    7. 'for' → logprob: -12.326050758361816
    8. '   ' → logprob: -12.451050758361816
    9. ' range' → logprob: -12.451050758361816
    10. '=i' → logprob: -12.576050758361816

Token 177: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.12424345314502716
    2. '0' → logprob: -2.8742434978485107
    3. 'win' → logprob: -3.4992434978485107
    4. '(i' → logprob: -3.7492434978485107
    5. ' i' → logprob: -5.624243259429932
    6. '(win' → logprob: -6.749243259429932
    7. '(' → logprob: -7.624243259429932
    8. 'd' → logprob: -7.874243259429932
    9. ' win' → logprob: -8.24924373626709
    10. ' (' → logprob: -8.37424373626709

Token 178: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.03293484449386597
    2. ' +' → logprob: -3.5329349040985107
    3. '+d' → logprob: -6.157934665679932
    4. '+i' → logprob: -7.407934665679932
    5. '^' → logprob: -8.28293514251709
    6. ' ^' → logprob: -9.65793514251709
    7. '-' → logprob: -9.90793514251709
    8. '+n' → logprob: -10.65793514251709
    9. '+
' → logprob: -11.28293514251709
    10. '|' → logprob: -11.28293514251709

Token 179: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0014492794871330261
    2. '1' → logprob: -6.626449108123779
    3. ' d' → logprob: -9.001449584960938
    4. ' ' → logprob: -16.001449584960938
    5. '
' → logprob: -17.626449584960938
    6. '(' → logprob: -18.501449584960938
    7. '   ' → logprob: -19.001449584960938
    8. '2' → logprob: -19.251449584960938
    9. '(d' → logprob: -19.376449584960938
    10. '	d' → logprob: -19.876449584960938

Token 180: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6230254173278809
    2. 'if' → logprob: -1.7480254173278809
    3. '
' → logprob: -2.123025417327881
    4. ' if' → logprob: -2.623025417327881
    5. '<|end|>' → logprob: -2.748025417327881
    6. '   ' → logprob: -3.748025417327881
    7. '<n' → logprob: -5.748025417327881
    8. ' ' → logprob: -6.373025417327881
    9. '           ' → logprob: -7.248025417327881
    10. ' <' → logprob: -7.248025417327881

Token 181: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20205755531787872
    2. ' if' → logprob: -1.8270576000213623
    3. 'if' → logprob: -4.827057361602783
    4. '<|end|>' → logprob: -4.827057361602783
    5. ' <' → logprob: -5.327057361602783
    6. ',' → logprob: -8.577057838439941
    7. ' ' → logprob: -8.702057838439941
    8. '   ' → logprob: -8.702057838439941
    9. '<' → logprob: -9.202057838439941
    10. '<|end|>' → logprob: -9.702057838439941

Token 182: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3872932493686676
    2. 'if' (adapté à ' if') → logprob: -1.1372932195663452
    3. '       ' → logprob: -8.137292861938477
    4. ' <' → logprob: -9.387292861938477
    5. '<' → logprob: -10.762292861938477
    6. '   ' → logprob: -12.012292861938477
    7. '<n' → logprob: -12.137292861938477
    8. '	if' → logprob: -12.637292861938477
    9. ' ' → logprob: -12.637292861938477
    10. '
' → logprob: -13.387292861938477

Token 183: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.3869369328022003
    2. 'j' → logprob: -1.136936902999878
    3. ' n' → logprob: -10.136937141418457
    4. 'n' → logprob: -10.761937141418457
    5. '   ' → logprob: -12.886937141418457
    6. ' ' → logprob: -14.511937141418457
    7. '>' → logprob: -15.136937141418457
    8. ' not' → logprob: -15.261937141418457
    9. '```' → logprob: -15.386937141418457
    10. ' >=' → logprob: -15.511937141418457

Token 184: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.08713800460100174
    2. ' <' → logprob: -2.9621379375457764
    3. '<n' → logprob: -3.4621379375457764
    4. '>=' → logprob: -8.587138175964355
    5. ' >=' → logprob: -9.337138175964355
    6. '<num' → logprob: -10.587138175964355
    7. '<len' → logprob: -11.212138175964355
    8. '<|end|>' → logprob: -11.212138175964355
    9. '<size' → logprob: -11.462138175964355
    10. '<int' → logprob: -11.462138175964355

Token 185: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00861468818038702
    2. ' n' → logprob: -4.758614540100098
    3. '	n' → logprob: -16.758615493774414
    4. '   ' → logprob: -16.758615493774414
    5. ' ' → logprob: -16.883615493774414
    6. ' ' → logprob: -18.383615493774414
    7. ')n' → logprob: -19.008615493774414
    8. '
' → logprob: -19.133615493774414
    9. '```' → logprob: -19.383615493774414
    10. '       ' → logprob: -19.383615493774414

Token 186: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.22505372762680054
    2. ':
' → logprob: -1.7250537872314453
    3. ':' → logprob: -3.8500537872314453
    4. '           ' → logprob: -6.475053787231445
    5. 'and' → logprob: -8.225053787231445
    6. '       ' → logprob: -8.725053787231445
    7. ' :
' → logprob: -10.100053787231445
    8. ':

' → logprob: -10.975053787231445
    9. '):
' → logprob: -11.600053787231445
    10. '   ' → logprob: -11.600053787231445

Token 187: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.013933360576629639
    2. 'dp' → logprob: -5.388933181762695
    3. ' if' → logprob: -6.388933181762695
    4. 'if' → logprob: -6.638933181762695
    5. ' dp' → logprob: -7.013933181762695
    6. ' for' → logprob: -7.138933181762695
    7. 'mask' → logprob: -7.138933181762695
    8. 'd' → logprob: -7.388933181762695
    9. '       ' → logprob: -7.388933181762695
    10. 'for' → logprob: -7.513933181762695

Token 188: ' if' (ID: 538)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.5005488991737366
    2. '           ' → logprob: -1.8755488395690918
    3. 'dp' → logprob: -2.250548839569092
    4. 'mask' → logprob: -2.625548839569092
    5. 'if' (adapté à ' if') → logprob: -3.875548839569092
    6. 'for' → logprob: -5.000548839569092
    7. 'k' → logprob: -5.375548839569092
    8. 'm' → logprob: -5.625548839569092
    9. '   ' → logprob: -5.875548839569092
    10. 'cur' → logprob: -5.875548839569092

Token 189: ' (' (ID: 350)
  Prédit: 'win'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'win' → logprob: -0.671774685382843
    2. '(win' → logprob: -1.0467746257781982
    3. ' win' → logprob: -2.5467746257781982
    4. 'd' → logprob: -3.5467746257781982
    5. '(d' → logprob: -4.296774864196777
    6. ' (' → logprob: -4.921774864196777
    7. ' d' → logprob: -5.421774864196777
    8. '((' → logprob: -6.296774864196777
    9. '   ' → logprob: -7.296774864196777
    10. '(' → logprob: -7.296774864196777

Token 190: 'd' (ID: 67)
  Prédit: 'win'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'win' → logprob: -0.04235951974987984
    2. '(win' → logprob: -3.2923595905303955
    3. ' win' → logprob: -6.292359352111816
    4. 'd' → logprob: -6.417359352111816
    5. '(d' → logprob: -8.042359352111816
    6. '((' → logprob: -9.167359352111816
    7. ' (' → logprob: -9.167359352111816
    8. '(' → logprob: -10.167359352111816
    9. '   ' → logprob: -10.167359352111816
    10. '(w' → logprob: -10.417359352111816

Token 191: 'pl' (ID: 528)
  Prédit: ' &'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' &' → logprob: -0.922447681427002
    2. ')' → logprob: -1.172447681427002
    3. '&' → logprob: -2.547447681427002
    4. '-' → logprob: -3.047447681427002
    5. '==' → logprob: -3.172447681427002
    6. '[i' → logprob: -3.672447681427002
    7. ']' → logprob: -3.922447681427002
    8. ' ==' → logprob: -4.297447681427002
    9. '>>' → logprob: -4.547447681427002
    10. '[' → logprob: -5.172447681427002

Token 192: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.1603999137878418
    2. '[i' → logprob: -1.9103999137878418
    3. '[' → logprob: -9.535400390625
    4. ')[' → logprob: -10.160400390625
    5. ' [' → logprob: -10.535400390625
    6. '][' → logprob: -11.160400390625
    7. 'j' → logprob: -11.410400390625
    8. 'i' → logprob: -12.535400390625
    9. ')' → logprob: -12.910400390625
    10. '   ' → logprob: -13.785400390625

Token 193: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.020288551226258278
    2. '][' → logprob: -4.645288467407227
    3. '[i' → logprob: -5.395288467407227
    4. ']&' → logprob: -5.895288467407227
    5. '-' → logprob: -6.645288467407227
    6. '[j' → logprob: -6.770288467407227
    7. '&' → logprob: -8.645288467407227
    8. ' &' → logprob: -8.895288467407227
    9. '[' → logprob: -8.895288467407227
    10. ' ]' → logprob: -9.645288467407227

Token 194: ' &' (ID: 827)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&' → logprob: -0.4175421893596649
    2. ' &' → logprob: -1.1675422191619873
    3. '|' → logprob: -3.5425422191619873
    4. ' |' → logprob: -8.042542457580566
    5. ')' → logprob: -8.292542457580566
    6. ' ' → logprob: -9.042542457580566
    7. '&i' → logprob: -9.292542457580566
    8. '&p' → logprob: -9.542542457580566
    9. '&amp' → logprob: -10.167542457580566
    10. '[' → logprob: -10.292542457580566

Token 195: ' d' (ID: 272)
  Prédit: 'win'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'win' → logprob: -0.00505787180736661
    2. ' win' → logprob: -5.3800578117370605
    3. '(' → logprob: -8.255058288574219
    4. '(win' → logprob: -9.380058288574219
    5. '   ' → logprob: -10.130058288574219
    6. ' ' → logprob: -11.380058288574219
    7. '  ' → logprob: -12.005058288574219
    8. ' (' → logprob: -12.005058288574219
    9. '	win' → logprob: -12.005058288574219
    10. 'w' → logprob: -12.130058288574219

Token 196: 'pr' (ID: 638)
  Prédit: 'win'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'win' → logprob: -0.8815712332725525
    2. '[i' → logprob: -1.0065712928771973
    3. 'i' → logprob: -2.2565712928771973
    4. ' win' → logprob: -3.2565712928771973
    5. 'pl' → logprob: -3.6315712928771973
    6. ' i' → logprob: -4.256571292877197
    7. '(i' → logprob: -4.631571292877197
    8. '[' → logprob: -4.756571292877197
    9. '           ' → logprob: -6.131571292877197
    10. 'p' → logprob: -6.256571292877197

Token 197: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0014047559816390276
    2. 'i' → logprob: -7.251404762268066
    3. '[j' → logprob: -7.626404762268066
    4. ' [' → logprob: -9.126404762268066
    5. '[' → logprob: -10.126404762268066
    6. ')' → logprob: -11.501404762268066
    7. '(i' → logprob: -11.626404762268066
    8. '```' → logprob: -11.626404762268066
    9. ')[' → logprob: -12.001404762268066
    10. ' i' → logprob: -12.376404762268066

Token 198: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01461847685277462
    2. ')==' → logprob: -4.264618396759033
    3. ' )' → logprob: -8.264618873596191
    4. '==' → logprob: -8.764618873596191
    5. '):
' → logprob: -11.139618873596191
    6. ' ==' → logprob: -12.014618873596191
    7. '）' → logprob: -12.639618873596191
    8. ')!=' → logprob: -12.764618873596191
    9. '])' → logprob: -13.139618873596191
    10. ']==' → logprob: -13.264618873596191

Token 199: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00024500858853571117
    2. 'd' → logprob: -8.625245094299316
    3. ' ' → logprob: -10.250245094299316
    4. '   ' → logprob: -11.125245094299316
    5. '           ' → logprob: -11.875245094299316
    6. '       ' → logprob: -13.000245094299316
    7. '```' → logprob: -14.000245094299316
    8. '     ' → logprob: -14.375245094299316
    9. '               ' → logprob: -14.375245094299316
    10. '                   ' → logprob: -14.375245094299316

Token 200: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002034634118899703
    2. 'd' → logprob: -6.252034664154053
    3. ' ' → logprob: -10.002034187316895
    4. '   ' → logprob: -10.377034187316895
    5. '
' → logprob: -12.127034187316895
    6. '           ' → logprob: -12.377034187316895
    7. '       ' → logprob: -12.627034187316895
    8. '0' → logprob: -12.752034187316895
    9. '```' → logprob: -13.002034187316895
    10. '     ' → logprob: -13.627034187316895

Token 201: ']' (ID: 60)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0015517598949372768
    2. ')==' → logprob: -6.626551628112793
    3. ' )' → logprob: -9.126551628112793
    4. '):
' → logprob: -9.376551628112793
    5. '):' → logprob: -11.626551628112793
    6. ')!=' → logprob: -12.751551628112793
    7. '）' → logprob: -12.876551628112793
    8. '==' → logprob: -12.876551628112793
    9. '))' → logprob: -12.876551628112793
    10. '`)' → logprob: -13.001551628112793

Token 202: ' &' (ID: 827)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08035790175199509
    2. ')==' → logprob: -2.580357789993286
    3. ' )' → logprob: -7.580358028411865
    4. '==' → logprob: -7.705358028411865
    5. ')!=' → logprob: -8.330357551574707
    6. ' ==' → logprob: -9.080357551574707
    7. '):
' → logprob: -9.205357551574707
    8. '):' → logprob: -10.955357551574707
    9. '):

' → logprob: -12.830357551574707
    10. ')>>' → logprob: -12.955357551574707

Token 203: ' win' (ID: 4449)
  Prédit: 'win'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'win' → logprob: -0.12794524431228638
    2. ' win' → logprob: -2.1279451847076416
    3. '   ' → logprob: -7.627945423126221
    4. '(win' → logprob: -8.627944946289062
    5. '	win' → logprob: -9.752944946289062
    6. ' ' → logprob: -9.877944946289062
    7. '           ' → logprob: -10.127944946289062
    8. '~' → logprob: -10.127944946289062
    9. '  ' → logprob: -10.377944946289062
    10. '               ' → logprob: -10.502944946289062

Token 204: '[i' (ID: 1768)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.005275737959891558
    2. '[i' → logprob: -5.255275726318359
    3. '[' → logprob: -10.38027572631836
    4. ')' → logprob: -12.25527572631836
    5. 'j' → logprob: -13.00527572631836
    6. ' [' → logprob: -13.88027572631836
    7. '[d' → logprob: -14.00527572631836
    8. ')[' → logprob: -14.50527572631836
    9. '   ' → logprob: -15.00527572631836
    10. '[
' → logprob: -15.25527572631836

Token 205: ']):
' (ID: 51989)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0029867328703403473
    2. '[j' → logprob: -6.627986907958984
    3. '):
' → logprob: -7.627986907958984
    4. '])' → logprob: -7.877986907958984
    5. ')==' → logprob: -7.877986907958984
    6. '):' → logprob: -8.252986907958984
    7. ' )' → logprob: -9.627986907958984
    8. '))' → logprob: -10.752986907958984
    9. '）' → logprob: -11.127986907958984
    10. '[' → logprob: -11.377986907958984

Token 206: '               ' (ID: 506)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.9376667141914368
    2. ':' → logprob: -1.562666654586792
    3. ':
' → logprob: -2.437666654586792
    4. '!=' → logprob: -2.437666654586792
    5. ' ==' → logprob: -2.562666654586792
    6. '               ' → logprob: -2.687666654586792
    7. ' !=' → logprob: -3.437666654586792
    8. '                   ' → logprob: -3.937666654586792
    9. '                       ' → logprob: -5.062666893005371
    10. '|' → logprob: -5.437666893005371

Token 207: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.6474235653877258
    2. 'd' (adapté à ' d') → logprob: -0.7724235653877258
    3. '               ' → logprob: -4.89742374420166
    4. '                   ' → logprob: -5.02242374420166
    5. '           ' → logprob: -8.52242374420166
    6. '                       ' → logprob: -9.02242374420166
    7. '   ' → logprob: -10.02242374420166
    8. ' ' → logprob: -10.02242374420166
    9. '                ' → logprob: -10.14742374420166
    10. '              ' → logprob: -10.27242374420166

Token 208: 'pl' (ID: 528)
  Prédit: 'pl'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pl' → logprob: -0.01832856610417366
    2. 'pr' → logprob: -4.018328666687012
    3. 'p' → logprob: -8.643328666687012
    4. 'l' → logprob: -13.393328666687012
    5. '_pl' → logprob: -16.018327713012695
    6. 'r' → logprob: -16.143327713012695
    7. 'pls' → logprob: -16.268327713012695
    8. 'lp' → logprob: -16.518327713012695
    9. 'rl' → logprob: -16.643327713012695
    10. 'plt' → logprob: -16.643327713012695

Token 209: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -1.1472419600977446e-06
    2. '[i' → logprob: -14.500000953674316
    3. '[' → logprob: -15.000000953674316
    4. ' [' → logprob: -15.750000953674316
    5. 'j' → logprob: -15.875000953674316
    6. '```' → logprob: -17.750001907348633
    7. '][' → logprob: -18.250001907348633
    8. '[
' → logprob: -18.375001907348633
    9. '[js' → logprob: -18.750001907348633
    10. '\[' → logprob: -19.125001907348633

Token 210: ']' (ID: 60)
  Prédit: '|'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '|' → logprob: -0.0006674022297374904
    2. ' |=' → logprob: -7.375667572021484
    3. '=' → logprob: -10.250667572021484
    4. ')' → logprob: -12.750667572021484
    5. '|=
' → logprob: -13.625667572021484
    6. ']' → logprob: -14.500667572021484
    7. '```' → logprob: -15.750667572021484
    8. '[' → logprob: -16.125667572021484
    9. ' =' → logprob: -16.125667572021484
    10. '[i' → logprob: -16.750667572021484

Token 211: ' |=' (ID: 19917)
  Prédit: '|'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '|' → logprob: -0.00030900631099939346
    2. ' |=' → logprob: -8.250308990478516
    3. '=' → logprob: -10.000308990478516
    4. '|=
' → logprob: -13.125308990478516
    5. '!=' → logprob: -16.750308990478516
    6. '```' → logprob: -16.875308990478516
    7. '+=' → logprob: -17.375308990478516
    8. '   ' → logprob: -17.750308990478516
    9. ' =' → logprob: -17.875308990478516
    10. '^' → logprob: -18.125308990478516

Token 212: ' ' (ID: 220)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.10039418190717697
    2. ' d' → logprob: -2.3503942489624023
    3. ' ' → logprob: -9.725394248962402
    4. '   ' → logprob: -10.475394248962402
    5. '(d' → logprob: -10.475394248962402
    6. '	d' → logprob: -10.850394248962402
    7. '  ' → logprob: -11.350394248962402
    8. '1' → logprob: -11.350394248962402
    9. 'dp' → logprob: -11.850394248962402
    10. ' ' → logprob: -12.100394248962402

Token 213: '1' (ID: 16)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0012096378486603498
    2. ' d' → logprob: -6.751209735870361
    3. 'dp' → logprob: -11.626209259033203
    4. '1' → logprob: -11.626209259033203
    5. '   ' → logprob: -11.751209259033203
    6. ' ' → logprob: -12.376209259033203
    7. '	d' → logprob: -12.751209259033203
    8. '(d' → logprob: -12.876209259033203
    9. '(' → logprob: -13.126209259033203
    10. '  ' → logprob: -14.126209259033203

Token 214: ' <<' (ID: 2256)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.03579999506473541
    2. ' <<' → logprob: -3.410799980163574
    3. '<<(' → logprob: -6.285799980163574
    4. '<' → logprob: -9.910799980163574
    5. '(' → logprob: -10.160799980163574
    6. '0' → logprob: -10.285799980163574
    7. '000' → logprob: -10.410799980163574
    8. 'pl' → logprob: -10.785799980163574
    9. '[' → logprob: -10.785799980163574
    10. '<<<' → logprob: -10.910799980163574

Token 215: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0013333364622667432
    2. '(i' → logprob: -7.126333236694336
    3. 'j' → logprob: -7.626333236694336
    4. ' i' → logprob: -11.126333236694336
    5. '(' → logprob: -11.251333236694336
    6. '   ' → logprob: -12.376333236694336
    7. 'd' → logprob: -12.501333236694336
    8. ' (' → logprob: -13.501333236694336
    9. '(j' → logprob: -13.501333236694336
    10. ' ' → logprob: -14.126333236694336

Token 216: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008678747341036797
    2. '<|end|>' → logprob: -5.258678913116455
    3. '               ' → logprob: -5.883678913116455
    4. '          ' → logprob: -8.008678436279297
    5. '       ' → logprob: -9.508678436279297
    6. '            
' → logprob: -9.633678436279297
    7. '            ' → logprob: -10.633678436279297
    8. ')' → logprob: -10.758678436279297
    9. '                   ' → logprob: -10.758678436279297
    10. '<|end|>' → logprob: -10.758678436279297

Token 217: '       ' (ID: 309)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0011461719404906034
    2. '          ' → logprob: -7.62614631652832
    3. '               ' → logprob: -8.00114631652832
    4. '<|end|>' → logprob: -8.75114631652832
    5. '            ' → logprob: -10.00114631652832
    6. '       ' → logprob: -10.50114631652832
    7. '		' → logprob: -10.75114631652832
    8. '        ' → logprob: -11.37614631652832
    9. ' ' → logprob: -11.50114631652832
    10. '   ' → logprob: -11.87614631652832

Token 218: ' j' (ID: 441)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.054139502346515656
    2. 'if' → logprob: -4.054139614105225
    3. '       ' → logprob: -4.054139614105225
    4. 'else' → logprob: -4.929139614105225
    5. ' if' → logprob: -5.429139614105225
    6. ' else' → logprob: -5.929139614105225
    7. '   ' → logprob: -6.804139614105225
    8. '               ' → logprob: -7.054139614105225
    9. '<|end|>' → logprob: -7.929139614105225
    10. '          ' → logprob: -8.304139137268066

Token 219: ' =' (ID: 314)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.6124322414398193
    2. '=' → logprob: -1.4874322414398193
    3. ' +=' → logprob: -1.7374322414398193
    4. '<|end|>' → logprob: -3.7374322414398193
    5. '+' → logprob: -3.8624322414398193
    6. ' =' → logprob: -4.737432479858398
    7. ' ' → logprob: -6.612432479858398
    8. ')' → logprob: -7.987432479858398
    9. '==' → logprob: -8.737432479858398
    10. '++' → logprob: -9.112432479858398

Token 220: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.09793064743280411
    2. 'n' → logprob: -2.597930669784546
    3. 'j' → logprob: -4.597930431365967
    4. 'd' → logprob: -5.722930431365967
    5. ' i' → logprob: -5.847930431365967
    6. ' n' → logprob: -7.347930431365967
    7. '       ' → logprob: -7.347930431365967
    8. '   ' → logprob: -7.722930431365967
    9. '    ' → logprob: -8.472930908203125
    10. '     ' → logprob: -8.722930908203125

Token 221: ' -' (ID: 533)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.21259592473506927
    2. ' +' → logprob: -1.8375959396362305
    3. '-' → logprob: -3.9625959396362305
    4. ' -' → logprob: -4.3375959396362305
    5. '+d' → logprob: -8.96259593963623
    6. ' ' → logprob: -10.33759593963623
    7. '+
' → logprob: -10.58759593963623
    8. '+j' → logprob: -11.08759593963623
    9. '   ' → logprob: -11.96259593963623
    10. '
' → logprob: -12.21259593963623

Token 222: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.04486057162284851
    2. '1' → logprob: -3.169860601425171
    3. ' d' → logprob: -6.294860363006592
    4. ' ' → logprob: -11.41986083984375
    5. '(d' → logprob: -13.41986083984375
    6. '           ' → logprob: -15.29486083984375
    7. '(' → logprob: -15.29486083984375
    8. '   ' → logprob: -15.54486083984375
    9. '	d' → logprob: -15.91986083984375
    10. '>d' → logprob: -16.66986083984375

Token 223: '
' (ID: 198)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005599428550340235
    2. ' ' → logprob: -7.7505598068237305
    3. '           ' → logprob: -9.62555980682373
    4. '       ' → logprob: -10.37555980682373
    5. '   ' → logprob: -11.75055980682373
    6. '        ' → logprob: -12.37555980682373
    7. '<|end|>' → logprob: -12.62555980682373
    8. '```' → logprob: -12.75055980682373
    9. '[' → logprob: -13.12555980682373
    10. '          ' → logprob: -13.37555980682373

Token 224: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20303070545196533
    2. 'if' → logprob: -2.203030586242676
    3. ' if' → logprob: -3.203030586242676
    4. '           ' → logprob: -3.453030586242676
    5. '   ' → logprob: -7.453030586242676
    6. '	if' → logprob: -8.953030586242676
    7. '<|end|>' → logprob: -9.328030586242676
    8. '```' → logprob: -9.828030586242676
    9. '        ' → logprob: -10.703030586242676
    10. '               ' → logprob: -10.953030586242676

Token 225: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0042876917868852615
    2. ' if' → logprob: -5.5042877197265625
    3. '           ' → logprob: -8.504287719726562
    4. '       ' → logprob: -12.379287719726562
    5. '```' → logprob: -13.504287719726562
    6. '>' → logprob: -15.254287719726562
    7. '               ' → logprob: -15.379287719726562
    8. '   ' → logprob: -16.129287719726562
    9. '         ' → logprob: -16.379287719726562
    10. '	if' → logprob: -16.379287719726562

Token 226: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.25496813654899597
    2. 'j' → logprob: -1.5049681663513184
    3. ' (' → logprob: -6.379968166351318
    4. '(j' → logprob: -7.254968166351318
    5. ' i' → logprob: -8.12996768951416
    6. '(' → logprob: -8.62996768951416
    7. 'i' → logprob: -9.25496768951416
    8. '(i' → logprob: -10.37996768951416
    9. ' ' → logprob: -11.37996768951416
    10. '0' → logprob: -11.75496768951416

Token 227: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.154836505651474
    2. '>=' → logprob: -2.154836416244507
    3. '>' → logprob: -3.779836416244507
    4. ' >' → logprob: -5.404836654663086
    5. ' ' → logprob: -9.404836654663086
    6. '   ' → logprob: -10.529836654663086
    7. '=' → logprob: -10.779836654663086
    8. '(' → logprob: -11.279836654663086
    9. 'if' → logprob: -11.279836654663086
    10. '       ' → logprob: -12.154836654663086

Token 228: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0046264105476439
    2. ' ' → logprob: -5.379626274108887
    3. '   ' → logprob: -13.129626274108887
    4. 'i' → logprob: -13.629626274108887
    5. '           ' → logprob: -14.504626274108887
    6. 'j' → logprob: -14.504626274108887
    7. '       ' → logprob: -14.629626274108887
    8. '(' → logprob: -15.004626274108887
    9. ' i' → logprob: -15.629626274108887
    10. '               ' → logprob: -16.192127227783203

Token 229: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.607391408877447e-05
    2. ' ' → logprob: -10.250036239624023
    3. 'i' → logprob: -15.000036239624023
    4. 'j' → logprob: -15.375036239624023
    5. '   ' → logprob: -16.375036239624023
    6. '1' → logprob: -17.000036239624023
    7. 'd' → logprob: -18.187536239624023
    8. 'n' → logprob: -18.500036239624023
    9. '۰' → logprob: -18.750036239624023
    10. '
' → logprob: -18.812536239624023

Token 230: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.011452257633209229
    2. ':' → logprob: -5.0114521980285645
    3. '           ' → logprob: -5.6364521980285645
    4. ' and' → logprob: -7.2614521980285645
    5. '):
' → logprob: -7.7614521980285645
    6. 'and' → logprob: -11.136452674865723
    7. '       ' → logprob: -12.261452674865723
    8. '():
' → logprob: -12.511452674865723
    9. ':

' → logprob: -13.261452674865723
    10. '          ' → logprob: -13.386452674865723

Token 231: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00233818544074893
    2. 'if' → logprob: -6.502338409423828
    3. ' if' → logprob: -7.252338409423828
    4. '```' → logprob: -9.252338409423828
    5. '               ' → logprob: -11.502338409423828
    6. ':
' → logprob: -12.002338409423828
    7. ':' → logprob: -12.127338409423828
    8. '       ' → logprob: -13.252338409423828
    9. ' and' → logprob: -13.377338409423828
    10. 'and' → logprob: -13.752338409423828

Token 232: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0006221305229701102
    2. ' if' → logprob: -7.500622272491455
    3. '           ' → logprob: -9.625621795654297
    4. '               ' → logprob: -12.875621795654297
    5. '                   ' → logprob: -14.875621795654297
    6. '```' → logprob: -15.500621795654297
    7. 'for' → logprob: -17.750621795654297
    8. '             ' → logprob: -18.000621795654297
    9. '(if' → logprob: -18.125621795654297
    10. '            
' → logprob: -18.125621795654297

Token 233: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.2574976980686188
    2. '(d' → logprob: -1.5074976682662964
    3. '(win' → logprob: -5.257497787475586
    4. '((' → logprob: -9.132497787475586
    5. '(j' → logprob: -9.757497787475586
    6. ' ((' → logprob: -10.132497787475586
    7. '   ' → logprob: -10.132497787475586
    8. '           ' → logprob: -10.632497787475586
    9. '(w' → logprob: -11.382497787475586
    10. 'win' → logprob: -11.757497787475586

Token 234: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.015235739760100842
    2. ' d' → logprob: -4.390235900878906
    3. 'win' → logprob: -6.640235900878906
    4. '(d' → logprob: -6.765235900878906
    5. ' win' → logprob: -9.265235900878906
    6. ' (' → logprob: -10.015235900878906
    7. '   ' → logprob: -10.265235900878906
    8. '(win' → logprob: -10.390235900878906
    9. '           ' → logprob: -10.765235900878906
    10. '       ' → logprob: -12.265235900878906

Token 235: 'pl' (ID: 528)
  Prédit: 'pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.08724606037139893
    2. 'pl' → logprob: -3.0872459411621094
    3. 'p' → logprob: -3.3372459411621094
    4. ' pr' → logprob: -6.837245941162109
    5. ' p' → logprob: -7.462245941162109
    6. 'l' → logprob: -7.587245941162109
    7. ' pl' → logprob: -10.33724594116211
    8. ' d' → logprob: -10.33724594116211
    9. 'd' → logprob: -10.46224594116211
    10. 'pls' → logprob: -10.71224594116211

Token 236: '[i' (ID: 1768)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.1300055831670761
    2. '[i' → logprob: -2.1300055980682373
    3. 'j' → logprob: -6.005005359649658
    4. 'i' → logprob: -7.505005359649658
    5. '[' → logprob: -10.380005836486816
    6. ' [' → logprob: -11.880005836486816
    7. '   ' → logprob: -12.505005836486816
    8. '       ' → logprob: -12.505005836486816
    9. ' j' → logprob: -13.130005836486816
    10. '```' → logprob: -13.755005836486816

Token 237: ' -' (ID: 533)
  Prédit: ' &'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' &' → logprob: -0.14358852803707123
    2. '&' → logprob: -2.0185885429382324
    3. ']' → logprob: -7.143588542938232
    4. ')' → logprob: -10.518588066101074
    5. '&amp' → logprob: -11.018588066101074
    6. ']&' → logprob: -11.018588066101074
    7. ' &
' → logprob: -11.143588066101074
    8. ' ' → logprob: -11.643588066101074
    9. '&nbsp' → logprob: -12.018588066101074
    10. '&gt' → logprob: -12.018588066101074

Token 238: ' ' (ID: 220)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.07896040380001068
    2. '1' → logprob: -2.578960418701172
    3. ' d' → logprob: -9.703960418701172
    4. '           ' → logprob: -12.328960418701172
    5. ' ' → logprob: -12.828960418701172
    6. ']' → logprob: -13.703960418701172
    7. '   ' → logprob: -13.828960418701172
    8. '                   ' → logprob: -16.953960418701172
    9. '               ' → logprob: -16.953960418701172
    10. '       ' → logprob: -16.953960418701172

Token 239: '1' (ID: 16)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.06997022777795792
    2. '1' → logprob: -2.69497013092041
    3. ' d' → logprob: -10.69497013092041
    4. '           ' → logprob: -12.69497013092041
    5. ' ' → logprob: -12.94497013092041
    6. '   ' → logprob: -13.56997013092041
    7. ']' → logprob: -13.94497013092041
    8. '```' → logprob: -13.94497013092041
    9. '
' → logprob: -14.56997013092041
    10. '       ' → logprob: -14.69497013092041

Token 240: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.8401737809181213
    2. ' &' → logprob: -1.0901737213134766
    3. '&' → logprob: -1.4651737213134766
    4. ']&' → logprob: -7.465173721313477
    5. ')' → logprob: -8.215173721313477
    6. '>' → logprob: -9.215173721313477
    7. '&gt' → logprob: -10.215173721313477
    8. ' ' → logprob: -10.340173721313477
    9. ' &
' → logprob: -10.840173721313477
    10. '&
' → logprob: -10.965173721313477

Token 241: ' &' (ID: 827)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&' → logprob: -0.07890300452709198
    2. ' &' → logprob: -2.5789029598236084
    3. '&amp' → logprob: -12.328903198242188
    4. '&
' → logprob: -12.453903198242188
    5. '＆' → logprob: -14.203903198242188
    6. '&nbsp' → logprob: -14.453903198242188
    7. '&p' → logprob: -14.578903198242188
    8. ' &
' → logprob: -14.578903198242188
    9. '&i' → logprob: -14.953903198242188
    10. '|' → logprob: -14.953903198242188

Token 242: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.6483473777770996
    2. ' d' → logprob: -0.7733473777770996
    3. 'win' → logprob: -4.7733473777771
    4. ' win' → logprob: -5.0233473777771
    5. ' ' → logprob: -9.273347854614258
    6. '   ' → logprob: -9.523347854614258
    7. '          ' → logprob: -10.023347854614258
    8. '           ' → logprob: -10.023347854614258
    9. '(d' → logprob: -10.148347854614258
    10. ' (' → logprob: -10.335847854614258

Token 243: 'pr' (ID: 638)
  Prédit: 'pr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.0025393941905349493
    2. 'pl' → logprob: -6.127539157867432
    3. 'r' → logprob: -8.12753963470459
    4. 'rp' → logprob: -10.75253963470459
    5. 'p' → logprob: -11.00253963470459
    6. 'l' → logprob: -12.37753963470459
    7. '[i' → logprob: -12.87753963470459
    8. 'lr' → logprob: -13.25253963470459
    9. 'prt' → logprob: -13.25253963470459
    10. '[r' → logprob: -13.25253963470459

Token 244: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.0012167827226221561
    2. '[i' → logprob: -7.001216888427734
    3. 'j' → logprob: -8.126216888427734
    4. '[' → logprob: -12.626216888427734
    5. '   ' → logprob: -12.751216888427734
    6. ' [' → logprob: -13.626216888427734
    7. 'i' → logprob: -14.126216888427734
    8. '[
' → logprob: -15.126216888427734
    9. '       ' → logprob: -15.626216888427734
    10. '	j' → logprob: -15.626216888427734

Token 245: ']' (ID: 60)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&' → logprob: -0.12155736982822418
    2. ' &' → logprob: -2.4965574741363525
    3. ']' → logprob: -3.4965574741363525
    4. ')' → logprob: -6.871557235717773
    5. ']&' → logprob: -7.996557235717773
    6. ' ' → logprob: -9.246557235717773
    7. '&
' → logprob: -9.496557235717773
    8. ')&' → logprob: -9.621557235717773
    9. 'and' → logprob: -10.621557235717773
    10. '&amp' → logprob: -10.746557235717773

Token 246: ' &' (ID: 827)
  Prédit: ' &'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' &' → logprob: -0.10022328048944473
    2. '&' → logprob: -2.3502233028411865
    3. ')' → logprob: -11.850223541259766
    4. ' and' → logprob: -13.350223541259766
    5. 'and' → logprob: -13.350223541259766
    6. '&amp' → logprob: -13.350223541259766
    7. '＆' → logprob: -13.975223541259766
    8. ' ' → logprob: -14.100223541259766
    9. ' ' → logprob: -14.350223541259766
    10. ' &
' → logprob: -14.350223541259766

Token 247: ' win' (ID: 4449)
  Prédit: 'win'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'win' → logprob: -0.038450635969638824
    2. ' win' → logprob: -3.2884507179260254
    3. '   ' → logprob: -8.538450241088867
    4. '           ' → logprob: -9.538450241088867
    5. '       ' → logprob: -10.538450241088867
    6. '               ' → logprob: -10.663450241088867
    7. ' ' → logprob: -10.913450241088867
    8. '	win' → logprob: -11.038450241088867
    9. '(win' → logprob: -11.288450241088867
    10. '                   ' → logprob: -12.038450241088867

Token 248: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.2820119857788086
    2. '[j' → logprob: -1.4070119857788086
    3. 'j' → logprob: -7.657011985778809
    4. 'i' → logprob: -8.407011985778809
    5. '[' → logprob: -9.782011985778809
    6. ' [' → logprob: -10.532011985778809
    7. '   ' → logprob: -10.657011985778809
    8. ' j' → logprob: -11.407011985778809
    9. ' i' → logprob: -11.532011985778809
    10. '[
' → logprob: -12.282011985778809

Token 249: ']):
' (ID: 51989)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.2620520293712616
    2. '):' → logprob: -2.012052059173584
    3. ']):
' → logprob: -3.012052059173584
    4. ']):' → logprob: -3.387052059173584
    5. ')' → logprob: -4.387052059173584
    6. ')):
' → logprob: -8.012051582336426
    7. ']' → logprob: -8.637051582336426
    8. ')):' → logprob: -8.762051582336426
    9. '):

' → logprob: -8.887051582336426
    10. '])' → logprob: -9.137051582336426

Token 250: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.038229800760746
    2. '):
' → logprob: -3.9132297039031982
    3. '           ' → logprob: -4.788229942321777
    4. 'd' → logprob: -5.413229942321777
    5. '```' → logprob: -6.413229942321777
    6. ' d' → logprob: -6.788229942321777
    7. ':
' → logprob: -6.913229942321777
    8. ')' → logprob: -7.788229942321777
    9. '              ' → logprob: -9.163229942321777
    10. '       ' → logprob: -9.288229942321777

Token 251: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.0013586864806711674
    2. ' d' → logprob: -6.626358509063721
    3. '           ' → logprob: -11.376358985900879
    4. '                   ' → logprob: -11.376358985900879
    5. '               ' → logprob: -12.126358985900879
    6. ' ' → logprob: -13.876358985900879
    7. '   ' → logprob: -13.876358985900879
    8. '          ' → logprob: -14.376358985900879
    9. '  ' → logprob: -14.876358985900879
    10. '	d' → logprob: -15.126358985900879

Token 252: 'pr' (ID: 638)
  Prédit: 'pr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.007995779626071453
    2. 'pl' → logprob: -4.88299560546875
    3. 'p' → logprob: -7.88299560546875
    4. 'l' → logprob: -11.75799560546875
    5. 'r' → logprob: -13.13299560546875
    6. ' pr' → logprob: -14.75799560546875
    7. 'lr' → logprob: -14.75799560546875
    8. 'PR' → logprob: -15.13299560546875
    9. '_pr' → logprob: -15.38299560546875
    10. 'rp' → logprob: -15.63299560546875

Token 253: '[j' (ID: 7895)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.04303881525993347
    2. '[j' → logprob: -3.168038845062256
    3. 'i' → logprob: -10.418038368225098
    4. 'j' → logprob: -12.293038368225098
    5. '[' → logprob: -12.418038368225098
    6. '   ' → logprob: -15.043038368225098
    7. '```' → logprob: -16.043039321899414
    8. '[d' → logprob: -16.418039321899414
    9. '|' → logprob: -16.543039321899414
    10. '\[' → logprob: -16.918039321899414

Token 254: ']' (ID: 60)
  Prédit: '|'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '|' → logprob: -0.0011705794604495168
    2. ' |=' → logprob: -6.751170635223389
    3. ')' → logprob: -15.87617015838623
    4. '=' → logprob: -16.626171112060547
    5. ')|' → logprob: -16.876171112060547
    6. '│' → logprob: -17.751171112060547
    7. ']' → logprob: -18.376171112060547
    8. ']|' → logprob: -18.376171112060547
    9. '   ' → logprob: -19.001171112060547
    10. ' ' → logprob: -19.001171112060547

Token 255: ' |=' (ID: 19917)
  Prédit: '|'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '|' → logprob: -0.00015860427811276168
    2. ' |=' → logprob: -8.750158309936523
    3. '=' → logprob: -16.125158309936523
    4. '|=
' → logprob: -17.375158309936523
    5. '│' → logprob: -18.625158309936523
    6. ')|' → logprob: -18.750158309936523
    7. ')' → logprob: -19.000158309936523
    8. '```' → logprob: -19.500158309936523
    9. '||' → logprob: -20.875158309936523
    10. ' ' → logprob: -20.875158309936523

Token 256: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.018151817843317986
    2. ' ' → logprob: -4.018151760101318
    3. '   ' → logprob: -13.393152236938477
    4. '(' → logprob: -15.393152236938477
    5. ' (' → logprob: -17.393152236938477
    6. '  ' → logprob: -17.643152236938477
    7. ' ' → logprob: -18.018152236938477
    8. '`' → logprob: -18.143152236938477
    9. '           ' → logprob: -18.268152236938477
    10. '
' → logprob: -18.518152236938477

Token 257: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.024604277219623e-05
    2. ' ' → logprob: -10.125040054321289
    3. '   ' → logprob: -16.50004005432129
    4. '(' → logprob: -17.00004005432129
    5. ' (' → logprob: -20.12504005432129
    6. '  ' → logprob: -20.37504005432129
    7. '           ' → logprob: -20.75004005432129
    8. '
' → logprob: -20.87504005432129
    9. '`' → logprob: -21.50004005432129
    10. '１' → logprob: -22.25004005432129

Token 258: ' <<' (ID: 2256)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.013917608186602592
    2. '1' → logprob: -5.513917446136475
    3. 'i' → logprob: -5.638917446136475
    4. '>>' → logprob: -6.013917446136475
    5. '<' → logprob: -6.763917446136475
    6. ' <<' → logprob: -7.263917446136475
    7. '>' → logprob: -7.513917446136475
    8. '|' → logprob: -8.388917922973633
    9. '[i' → logprob: -8.763917922973633
    10. '```' → logprob: -8.763917922973633

Token 259: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -4.096126576769166e-05
    2. ' i' → logprob: -10.125041007995605
    3. '   ' → logprob: -15.250041007995605
    4. ' ' → logprob: -15.375041007995605
    5. '	i' → logprob: -15.625041007995605
    6. 'j' → logprob: -16.00004005432129
    7. '  ' → logprob: -17.25004005432129
    8. '     ' → logprob: -18.00004005432129
    9. '(i' → logprob: -18.25004005432129
    10. 'd' → logprob: -18.25004005432129

Token 260: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 261: 'x' (ID: 87)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.21608789265155792
    2. 'for' → logprob: -2.216087818145752
    3. 'result' → logprob: -3.091087818145752
    4. ')' → logprob: -4.341087818145752
    5. 'answer' → logprob: -4.841087818145752
    6. 'max' → logprob: -5.341087818145752
    7. '#' → logprob: -5.591087818145752
    8. 'ans' → logprob: -6.341087818145752
    9. 'mask' → logprob: -6.341087818145752
    10. '<|end|>' → logprob: -6.591087818145752

Token 262: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12965434789657593
    2. '=' → logprob: -2.7546544075012207
    3. 'd' → logprob: -4.504654407501221
    4. ' ' → logprob: -4.629654407501221
    5. 'i' → logprob: -4.629654407501221
    6. 'p' → logprob: -5.629654407501221
    7. 'a' → logprob: -5.629654407501221
    8. '_' → logprob: -5.754654407501221
    9. ',' → logprob: -5.879654407501221
    10. '[' → logprob: -6.004654407501221

Token 263: ' d' (ID: 272)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5459194779396057
    2. '(' → logprob: -1.670919418334961
    3. 'd' → logprob: -2.420919418334961
    4. 'n' → logprob: -3.045919418334961
    5. '(n' → logprob: -3.795919418334961
    6. '1' → logprob: -4.170919418334961
    7. 'win' → logprob: -4.295919418334961
    8. ' ' → logprob: -4.670919418334961
    9. ' (' → logprob: -5.045919418334961
    10. 'max' → logprob: -5.545919418334961

Token 264: 'pl' (ID: 528)
  Prédit: 'pl'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pl' → logprob: -0.65240079164505
    2. '+' → logprob: -1.0274007320404053
    3. 'p' → logprob: -2.5274007320404053
    4. ' +' → logprob: -3.2774007320404053
    5. 'l' → logprob: -7.152400970458984
    6. 'n' → logprob: -7.652400970458984
    7. ' ' → logprob: -7.777400970458984
    8. 'x' → logprob: -8.277400970458984
    9. 'plus' → logprob: -8.652400970458984
    10. 'r' → logprob: -8.652400970458984

Token 265: '[n' (ID: 15433)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.15185502171516418
    2. '[n' → logprob: -2.401854991912842
    3. '[' → logprob: -3.401854991912842
    4. '.copy' → logprob: -5.651854991912842
    5. '<|end|>' → logprob: -5.651854991912842
    6. '[:]' → logprob: -5.776854991912842
    7. '[:-' → logprob: -6.776854991912842
    8. '[]' → logprob: -7.276854991912842
    9. '[j' → logprob: -7.276854991912842
    10. '[x' → logprob: -7.401854991912842

Token 266: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00280784466303885
    2. ' -' → logprob: -5.8778076171875
    3. ']' → logprob: -13.3778076171875
    4. '1' → logprob: -13.8778076171875
    5. '[-' → logprob: -15.0028076171875
    6. '[' → logprob: -15.7528076171875
    7. ']-' → logprob: -17.3778076171875
    8. ' ' → logprob: -17.6278076171875
    9. ')' → logprob: -17.7528076171875
    10. '   ' → logprob: -18.2528076171875

Token 267: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.749814019713085e-06
    2. '2' → logprob: -12.625006675720215
    3. ' ' → logprob: -13.125006675720215
    4. '   ' → logprob: -14.000006675720215
    5. '
' → logprob: -15.375006675720215
    6. '```' → logprob: -15.687506675720215
    7. '  ' → logprob: -17.25000762939453
    8. '0' → logprob: -17.43750762939453
    9. '``' → logprob: -17.87500762939453
    10. '3' → logprob: -17.93750762939453

Token 268: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.849109119386412e-06
    2. '2' → logprob: -12.000009536743164
    3. ' ' → logprob: -12.750009536743164
    4. '   ' → logprob: -16.000009536743164
    5. '0' → logprob: -16.125009536743164
    6. '```' → logprob: -16.125009536743164
    7. '
' → logprob: -16.375009536743164
    8. '１' → logprob: -17.312509536743164
    9. '3' → logprob: -17.625009536743164
    10. '11' → logprob: -18.312509536743164

Token 269: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.12004739791154861
    2. ')' → logprob: -2.2450473308563232
    3. '[' → logprob: -6.370047569274902
    4. '])' → logprob: -6.620047569274902
    5. '<|end|>' → logprob: -6.745047569274902
    6. ' ]' → logprob: -7.245047569274902
    7. '
' → logprob: -7.870047569274902
    8. '-' → logprob: -7.870047569274902
    9. ')]' → logprob: -8.245047569274902
    10. ']+' → logprob: -8.620047569274902

Token 270: ' &' (ID: 827)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 271: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.002043913584202528
    2. '(' → logprob: -6.627043724060059
    3. '((' → logprob: -8.252043724060059
    4. ' d' → logprob: -9.002043724060059
    5. 'win' → logprob: -9.002043724060059
    6. '1' → logprob: -9.252043724060059
    7. '   ' → logprob: -10.252043724060059
    8. '(d' → logprob: -10.627043724060059
    9. '(~' → logprob: -11.377043724060059
    10. '0' → logprob: -11.502043724060059

Token 272: 'pr' (ID: 638)
  Prédit: 'pr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pr' → logprob: -6.718606891809031e-05
    2. 'pl' → logprob: -10.000066757202148
    3. 'p' → logprob: -10.875066757202148
    4. 'l' → logprob: -13.625066757202148
    5. ' pr' → logprob: -14.125066757202148
    6. 'r' → logprob: -15.125066757202148
    7. 'd' → logprob: -15.750066757202148
    8. 'prt' → logprob: -16.12506675720215
    9. 'prs' → logprob: -16.75006675720215
    10. '	pr' → logprob: -17.12506675720215

Token 273: '[' (ID: 58)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.22568708658218384
    2. '[' → logprob: -1.600687026977539
    3. '[n' → logprob: -8.225687026977539
    4. 'n' → logprob: -13.100687026977539
    5. '```' → logprob: -13.725687026977539
    6. ' ' → logprob: -14.100687026977539
    7. '1' → logprob: -14.225687026977539
    8. '`' → logprob: -14.600687026977539
    9. '\[' → logprob: -15.100687026977539
    10. ' [' → logprob: -15.725687026977539

Token 274: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.816093228830141e-06
    2. ' ' → logprob: -13.00000286102295
    3. '   ' → logprob: -15.50000286102295
    4. '[' → logprob: -16.625001907348633
    5. '1' → logprob: -16.750001907348633
    6. '     ' → logprob: -17.500001907348633
    7. '       ' → logprob: -17.625001907348633
    8. '    ' → logprob: -17.625001907348633
    9. 'n' → logprob: -18.125001907348633
    10. '  ' → logprob: -18.375001907348633

Token 275: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.003909915219992399
    2. ']
' → logprob: -6.503910064697266
    3. ')' → logprob: -6.753910064697266
    4. ' ]' → logprob: -7.128910064697266
    5. '<|end|>' → logprob: -8.753910064697266
    6. '])' → logprob: -9.003910064697266
    7. '
' → logprob: -10.128910064697266
    8. 'x' → logprob: -10.628910064697266
    9. ']

' → logprob: -10.753910064697266
    10. ')
' → logprob: -11.628910064697266

Token 276: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.17709051072597504
    2. 'if' → logprob: -2.1770904064178467
    3. 'for' → logprob: -3.8020904064178467
    4. ' if' → logprob: -4.677090644836426
    5. ' print' → logprob: -5.052090644836426
    6. ' for' → logprob: -5.427090644836426
    7. '0' → logprob: -6.177090644836426
    8. '
' → logprob: -6.302090644836426
    9. '```' → logprob: -7.677090644836426
    10. 'count' → logprob: -7.802090644836426

Token 277: '(bin' (ID: 117327)
  Prédit: '(bin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(bin' → logprob: -0.4912530481815338
    2. '(x' → logprob: -1.2412530183792114
    3. '(len' → logprob: -2.366253137588501
    4. '(' → logprob: -5.491252899169922
    5. '(f' → logprob: -7.866252899169922
    6. '(sum' → logprob: -8.491252899169922
    7. '((' → logprob: -8.616252899169922
    8. '(list' → logprob: -8.991252899169922
    9. 'bin' → logprob: -9.741252899169922
    10. '(max' → logprob: -10.116252899169922

Token 278: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -3.054500666621607e-06
    2. '(' → logprob: -13.00000286102295
    3. 'x' → logprob: -14.25000286102295
    4. ' (' → logprob: -17.000003814697266
    5. '(
' → logprob: -18.250003814697266
    6. '((' → logprob: -18.875003814697266
    7. ')(' → logprob: -19.250003814697266
    8. ')' → logprob: -20.500003814697266
    9. ')x' → logprob: -20.625003814697266
    10. '[x' → logprob: -20.750003814697266

Token 279: ').' (ID: 741)
  Prédit: '())['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())[' → logprob: -1.3437565565109253
    2. ')[' → logprob: -1.5937565565109253
    3. '()))' → logprob: -1.7187565565109253
    4. '()).' → logprob: -2.218756675720215
    5. '()[' → logprob: -2.218756675720215
    6. '().' → logprob: -3.218756675720215
    7. '())' → logprob: -3.218756675720215
    8. '()' → logprob: -4.218756675720215
    9. '))' → logprob: -4.343756675720215
    10. ').' → logprob: -4.343756675720215

Token 280: 'count' (ID: 5420)
  Prédit: 'count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.005425254348665476
    2. 'bit' → logprob: -5.255425453186035
    3. 'r' → logprob: -9.505425453186035
    4. 'index' → logprob: -9.755425453186035
    5. '```' → logprob: -10.880425453186035
    6. '0' → logprob: -11.255425453186035
    7. 'find' → logprob: -11.380425453186035
    8. ' count' → logprob: -12.755425453186035
    9. '.count' → logprob: -13.505425453186035
    10. '1' → logprob: -13.755425453186035

Token 281: '("' (ID: 568)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.018556077033281326
    2. '("' → logprob: -4.018556118011475
    3. '(' → logprob: -8.143555641174316
    4. '1' → logprob: -9.268555641174316
    5. ''' → logprob: -11.393555641174316
    6. ')' → logprob: -12.143555641174316
    7. '("("' → logprob: -13.518555641174316
    8. '"' → logprob: -13.518555641174316
    9. '(
' → logprob: -14.643555641174316
    10. '```' → logprob: -15.143555641174316

Token 282: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001129498123191297
    2. ''' → logprob: -6.876129627227783
    3. '"' → logprob: -9.251129150390625
    4. ' ' → logprob: -14.876129150390625
    5. '`' → logprob: -16.001129150390625
    6. ')' → logprob: -16.626129150390625
    7. ' '' → logprob: -16.876129150390625
    8. '
' → logprob: -17.126129150390625
    9. '   ' → logprob: -17.876129150390625
    10. '  ' → logprob: -18.126129150390625

Token 283: '"))' (ID: 5063)
  Prédit: '"))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"))' → logprob: -0.5849961638450623
    2. ')' → logprob: -0.9599961638450623
    3. '))' → logprob: -3.459996223449707
    4. ')")' → logprob: -3.709996223449707
    5. '()' → logprob: -6.459996223449707
    6. '")' → logprob: -6.709996223449707
    7. '("' → logprob: -6.834996223449707
    8. ' "))' → logprob: -9.334996223449707
    9. '()))' → logprob: -9.584996223449707
    10. '(' → logprob: -11.084996223449707


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 281
Tokens correctement prédits (1ère position, stricte): 117
Tokens correctement prédits (1ère position, avec adaptation): 130
Tokens correctement prédits (top 10): 243
Précision stricte (1ère position): 41.64%
Précision adaptée (1ère position): 46.26%
Précision (top 10): 86.48%
================================================================================
