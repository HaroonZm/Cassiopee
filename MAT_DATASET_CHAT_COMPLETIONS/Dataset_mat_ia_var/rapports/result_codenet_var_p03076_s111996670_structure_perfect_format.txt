================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:03:38
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
a = int(input())
b = int(input())
c = int(input())
d = int(input())
e = int(input())
input_list = [a, b, c, d, e]
ten_up_list = []
amari_list = []
total = 0
for i in input_list:
    amari = i % 10
    if amari == 0:
        ten_up_list.append(i)
    else:
        ten_up_list.append(i + 10 - amari)
        amari_list.append(amari)
for i in ten_up_list:
    total += i
if len(amari_list) != 0:
    amari_list.sort()
    total = total - 10 + amari_list[0]
print(total)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'a' (ID: 64)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0006926587666384876
    2. '(a' → logprob: -7.875692844390869
    3. 'a' → logprob: -9.125692367553711
    4. '```' → logprob: -9.625692367553711
    5. ''' → logprob: -9.875692367553711
    6. '`' → logprob: -10.375692367553711
    7. ' (' → logprob: -11.375692367553711
    8. '('' → logprob: -11.500692367553711
    9. ')' → logprob: -11.750692367553711
    10. '\(' → logprob: -12.250692367553711

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11546096950769424
    2. ')' → logprob: -2.2404608726501465
    3. '()' → logprob: -6.7404608726501465
    4. '())' → logprob: -7.9904608726501465
    5. '(
' → logprob: -8.865461349487305
    6. '))' → logprob: -9.115461349487305
    7. '```' → logprob: -9.115461349487305
    8. '(a' → logprob: -9.365461349487305
    9. 'a' → logprob: -9.740461349487305
    10. ''' → logprob: -9.865461349487305

Token 5: 'b' (ID: 65)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.08680318295955658
    2. '\n' → logprob: -3.4618031978607178
    3. '*' → logprob: -3.8368031978607178
    4. '%' → logprob: -3.8368031978607178
    5. '\' → logprob: -5.461802959442139
    6. '+
' → logprob: -6.836802959442139
    7. '**' → logprob: -7.086802959442139
    8. '```' → logprob: -7.461802959442139
    9. 'if' → logprob: -7.961802959442139
    10. ')' → logprob: -8.336803436279297

Token 6: ' =' (ID: 314)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.08262693136930466
    2. ' ' → logprob: -3.4576268196105957
    3. ')' → logprob: -4.207626819610596
    4. '=' → logprob: -4.707626819610596
    5. '[' → logprob: -4.832626819610596
    6. ' +' → logprob: -4.957626819610596
    7. '*' → logprob: -5.582626819610596
    8. ' =' → logprob: -6.332626819610596
    9. ''' → logprob: -7.582626819610596
    10. '**' → logprob: -7.957626819610596

Token 7: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.027502650395035744
    2. 'int' → logprob: -3.6525025367736816
    3. ' a' → logprob: -7.027502536773682
    4. 'a' → logprob: -8.15250301361084
    5. ' input' → logprob: -11.40250301361084
    6. ' ' → logprob: -12.02750301361084
    7. '=int' → logprob: -13.02750301361084
    8. 'input' → logprob: -13.27750301361084
    9. '<int' → logprob: -13.65250301361084
    10. '(int' → logprob: -14.02750301361084

Token 8: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0006836029351688921
    2. ')' → logprob: -8.000683784484863
    3. '()' → logprob: -9.125683784484863
    4. ' (' → logprob: -9.625683784484863
    5. '```' → logprob: -10.000683784484863
    6. '(a' → logprob: -10.500683784484863
    7. ''' → logprob: -10.625683784484863
    8. '`' → logprob: -11.000683784484863
    9. ' ' → logprob: -11.125683784484863
    10. '('' → logprob: -11.875683784484863

Token 9: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.05383114889264107
    2. '()' → logprob: -3.178831100463867
    3. ')' → logprob: -4.553831100463867
    4. '(' → logprob: -9.178831100463867
    5. ' ())' → logprob: -9.678831100463867
    6. '()))' → logprob: -9.928831100463867
    7. '`)' → logprob: -12.303831100463867
    8. '();)' → logprob: -12.553831100463867
    9. '()>' → logprob: -13.053831100463867
    10. '())
' → logprob: -13.178831100463867

Token 10: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.7165117859840393
    2. 'if' → logprob: -0.7165117859840393
    3. 's' → logprob: -4.2165117263793945
    4. '+' → logprob: -5.9665117263793945
    5. 'print' → logprob: -5.9665117263793945
    6. 'sum' → logprob: -6.7165117263793945
    7. 'result' → logprob: -6.8415117263793945
    8. ' if' → logprob: -8.591511726379395
    9. '+
' → logprob: -8.591511726379395
    10. '#' → logprob: -8.716511726379395

Token 11: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6418255567550659
    2. '=' → logprob: -0.7668255567550659
    3. '+' → logprob: -5.1418256759643555
    4. '_' → logprob: -6.6418256759643555
    5. ')' → logprob: -7.5168256759643555
    6. ' ' → logprob: -7.7668256759643555
    7. ' +=' → logprob: -8.141825675964355
    8. 'a' → logprob: -8.766825675964355
    9. ' +' → logprob: -9.141825675964355
    10. '+=' → logprob: -9.266825675964355

Token 12: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -1.0961365699768066
    2. ' a' → logprob: -1.3461365699768066
    3. 'int' → logprob: -1.5961365699768066
    4. 'a' → logprob: -1.5961365699768066
    5. ' input' → logprob: -9.096136093139648
    6. 'input' → logprob: -9.721136093139648
    7. ' ' → logprob: -10.971136093139648
    8. '(int' → logprob: -11.096136093139648
    9. ' max' → logprob: -11.596136093139648
    10. 'max' → logprob: -12.221136093139648

Token 13: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0030031390488147736
    2. ')' → logprob: -7.503003120422363
    3. '()' → logprob: -7.503003120422363
    4. '('' → logprob: -7.628003120422363
    5. '(a' → logprob: -7.878003120422363
    6. ' (' → logprob: -7.878003120422363
    7. 'a' → logprob: -8.878003120422363
    8. ' ' → logprob: -8.878003120422363
    9. '(input' → logprob: -9.503003120422363
    10. ''' → logprob: -10.253003120422363

Token 14: '())
' (ID: 4574)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.8115600943565369
    2. '())' → logprob: -1.0615601539611816
    3. ')' → logprob: -1.5615601539611816
    4. '(' → logprob: -9.811559677124023
    5. '`)' → logprob: -11.061559677124023
    6. ' ())' → logprob: -11.436559677124023
    7. '()
' → logprob: -11.561559677124023
    8. 'a' → logprob: -12.936559677124023
    9. '())
' → logprob: -13.186559677124023
    10. ' )' → logprob: -13.311559677124023

Token 15: 'd' (ID: 67)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4192640483379364
    2. 'd' → logprob: -1.6692640781402588
    3. 'sum' → logprob: -2.794264078140259
    4. 's' → logprob: -2.919264078140259
    5. 'max' → logprob: -3.669264078140259
    6. 'total' → logprob: -5.29426383972168
    7. 'print' → logprob: -5.54426383972168
    8. 'result' → logprob: -6.54426383972168
    9. 'n' → logprob: -6.79426383972168
    10. 'x' → logprob: -7.41926383972168

Token 16: ' =' (ID: 314)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.3576632738113403
    2. ' ' → logprob: -1.3576632738113403
    3. ' =' → logprob: -1.4826632738113403
    4. '=' → logprob: -1.7326632738113403
    5. ')' → logprob: -3.857663154602051
    6. ' +' → logprob: -3.857663154602051
    7. '*' → logprob: -5.232663154602051
    8. '[' → logprob: -5.482663154602051
    9. '_' → logprob: -5.482663154602051
    10. '>' → logprob: -5.607663154602051

Token 17: ' int' (ID: 677)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.32455405592918396
    2. 'a' → logprob: -1.5745540857315063
    3. ' int' → logprob: -2.824553966522217
    4. 'int' → logprob: -4.574553966522217
    5. ' ' → logprob: -8.574554443359375
    6. ' max' → logprob: -9.199554443359375
    7. 'max' → logprob: -10.699554443359375
    8. '(a' → logprob: -10.824554443359375
    9. ' (' → logprob: -11.074554443359375
    10. '(int' → logprob: -11.699554443359375

Token 18: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0003143704670947045
    2. ' (' → logprob: -8.625314712524414
    3. 'a' → logprob: -10.875314712524414
    4. ')' → logprob: -11.000314712524414
    5. ''' → logprob: -11.125314712524414
    6. '('' → logprob: -11.250314712524414
    7. '(input' → logprob: -11.500314712524414
    8. '(
' → logprob: -11.625314712524414
    9. '()' → logprob: -11.750314712524414
    10. '(a' → logprob: -11.750314712524414

Token 19: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09796080738306046
    2. '()' → logprob: -2.8479607105255127
    3. '())' → logprob: -3.3479607105255127
    4. '`)' → logprob: -8.847960472106934
    5. ' )' → logprob: -11.472960472106934
    6. '）' → logprob: -11.972960472106934
    7. '()
' → logprob: -12.097960472106934
    8. '')' → logprob: -12.222960472106934
    9. '))' → logprob: -12.347960472106934
    10. '(' → logprob: -12.347960472106934

Token 20: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.266204833984375
    2. 'if' → logprob: -1.891204833984375
    3. 'print' → logprob: -3.516204833984375
    4. 's' → logprob: -4.516204833984375
    5. 'sum' → logprob: -4.766204833984375
    6. 'max' → logprob: -4.891204833984375
    7. 'n' → logprob: -5.141204833984375
    8. 'x' → logprob: -5.391204833984375
    9. 'p' → logprob: -5.516204833984375
    10. 'result' → logprob: -5.516204833984375

Token 21: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09271614253520966
    2. '=' → logprob: -2.4677162170410156
    3. ')' → logprob: -6.842716217041016
    4. '+' → logprob: -7.092716217041016
    5. '_' → logprob: -7.967716217041016
    6. ' ' → logprob: -8.217716217041016
    7. '>' → logprob: -8.842716217041016
    8. '.' → logprob: -9.092716217041016
    9. 'space' → logprob: -9.092716217041016
    10. 'a' → logprob: -9.342716217041016

Token 22: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -1.2536637783050537
    2. ' a' → logprob: -1.3786637783050537
    3. 'a' → logprob: -1.5036637783050537
    4. ' ' → logprob: -1.7536637783050537
    5. 'int' → logprob: -2.8786637783050537
    6. ' (' → logprob: -5.878664016723633
    7. 'e' → logprob: -6.253664016723633
    8. 'd' → logprob: -6.628664016723633
    9. ' e' → logprob: -7.378664016723633
    10. 's' → logprob: -7.503664016723633

Token 23: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0037107658572494984
    2. '(input' → logprob: -5.753710746765137
    3. ' (' → logprob: -8.503710746765137
    4. '('' → logprob: -9.628710746765137
    5. '()' → logprob: -9.628710746765137
    6. '(
' → logprob: -9.878710746765137
    7. ')' → logprob: -10.878710746765137
    8. '(a' → logprob: -11.128710746765137
    9. '((' → logprob: -11.503710746765137
    10. '(

' → logprob: -11.503710746765137

Token 24: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.46421173214912415
    2. '()' → logprob: -1.3392117023468018
    3. ')' → logprob: -2.2142117023468018
    4. '`)' → logprob: -10.839211463928223
    5. ' ())' → logprob: -10.964211463928223
    6. '(' → logprob: -11.339211463928223
    7. ' )' → logprob: -11.839211463928223
    8. '()
' → logprob: -12.089211463928223
    9. '();)' → logprob: -13.339211463928223
    10. '())
' → logprob: -13.339211463928223

Token 25: 'input' (ID: 2586)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.2554052770137787
    2. 's' → logprob: -2.5054051876068115
    3. 'sum' → logprob: -3.3804051876068115
    4. 'if' → logprob: -3.6304051876068115
    5. 'print' → logprob: -3.7554051876068115
    6. 'max' → logprob: -3.8804051876068115
    7. 'total' → logprob: -4.005405426025391
    8. 'x' → logprob: -4.880405426025391
    9. 'result' → logprob: -5.505405426025391
    10. 'n' → logprob: -6.005405426025391

Token 26: '_list' (ID: 4162)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.11684973537921906
    2. '(' → logprob: -2.241849660873413
    3. ')' → logprob: -6.241849899291992
    4. '_' → logprob: -7.116849899291992
    5. 's' → logprob: -8.616849899291992
    6. '())' → logprob: -8.741849899291992
    7. '_data' → logprob: -8.991849899291992
    8. '()
' → logprob: -9.116849899291992
    9. 'a' → logprob: -9.241849899291992
    10. 't' → logprob: -9.491849899291992

Token 27: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4848681688308716
    2. '.' → logprob: -2.234868049621582
    3. 's' → logprob: -2.234868049621582
    4. '_' → logprob: -2.484868049621582
    5. ' =' → logprob: -3.859868049621582
    6. '=' → logprob: -4.109868049621582
    7. '```' → logprob: -4.609868049621582
    8. '[:]' → logprob: -4.859868049621582
    9. ')' → logprob: -4.984868049621582
    10. '(' → logprob: -5.234868049621582

Token 28: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.598874032497406
    2. ' [' → logprob: -1.0988740921020508
    3. '[a' → logprob: -2.723874092102051
    4. '[input' → logprob: -3.223874092102051
    5. '[int' → logprob: -4.723874092102051
    6. ' []' → logprob: -6.473874092102051
    7. '[]' → logprob: -6.848874092102051
    8. '[list' → logprob: -8.84887409210205
    9. '[s' → logprob: -10.72387409210205
    10. '[len' → logprob: -10.84887409210205

Token 29: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.7120533811976202e-05
    2. ' a' → logprob: -11.000017166137695
    3. ''a' → logprob: -15.375017166137695
    4. ')a' → logprob: -15.875017166137695
    5. '	a' → logprob: -17.625017166137695
    6. '0' → logprob: -17.625017166137695
    7. '"a' → logprob: -17.875017166137695
    8. '_a' → logprob: -18.000017166137695
    9. ']' → logprob: -18.250017166137695
    10. '\a' → logprob: -18.375017166137695

Token 30: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00013846253568772227
    2. ',
' → logprob: -9.250138282775879
    3. ' ,' → logprob: -10.625138282775879
    4. ']' → logprob: -12.000138282775879
    5. ',

' → logprob: -12.125138282775879
    6. ')' → logprob: -12.125138282775879
    7. ',b' → logprob: -15.375138282775879
    8. ' ' → logprob: -15.750138282775879
    9. ',)' → logprob: -15.875138282775879
    10. ',",' → logprob: -16.625139236450195

Token 31: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.5039348602294922
    2. 'b' → logprob: -1.1289348602294922
    3. ' ' → logprob: -2.628934860229492
    4. ' ,' → logprob: -9.003934860229492
    5. ''' → logprob: -9.753934860229492
    6. 'space' → logprob: -10.003934860229492
    7. ' ' → logprob: -10.503934860229492
    8. ',' → logprob: -10.878934860229492
    9. ' б' → logprob: -12.003934860229492
    10. ' ​' → logprob: -12.003934860229492

Token 32: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00013369438238441944
    2. ' ,' → logprob: -9.250133514404297
    3. ',
' → logprob: -10.500133514404297
    4. ')' → logprob: -13.000133514404297
    5. ']' → logprob: -13.125133514404297
    6. ',c' → logprob: -13.250133514404297
    7. '`,' → logprob: -13.375133514404297
    8. ',

' → logprob: -14.000133514404297
    9. '<|end|>' → logprob: -15.375133514404297
    10. ' ' → logprob: -15.500133514404297

Token 33: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.6931883096694946
    2. ' c' → logprob: -0.6931883096694946
    3. ' ' → logprob: -10.943188667297363
    4. ',c' → logprob: -11.818188667297363
    5. ' ,' → logprob: -12.193188667297363
    6. '	c' → logprob: -12.568188667297363
    7. ',' → logprob: -12.568188667297363
    8. ''' → logprob: -14.568188667297363
    9. ' ' → logprob: -14.693188667297363
    10. ' 
' → logprob: -14.693188667297363

Token 34: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00026205103495158255
    2. ' ,' → logprob: -8.750262260437012
    3. ',d' → logprob: -9.375262260437012
    4. ',
' → logprob: -11.750262260437012
    5. ']' → logprob: -12.125262260437012
    6. '`,' → logprob: -12.875262260437012
    7. ')' → logprob: -14.125262260437012
    8. ' ' → logprob: -14.500262260437012
    9. ',

' → logprob: -15.000262260437012
    10. '```' → logprob: -15.125262260437012

Token 35: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.5783260464668274
    2. ' d' → logprob: -0.8283260464668274
    3. ' ' → logprob: -6.078326225280762
    4. ' ,' → logprob: -10.078326225280762
    5. ' ' → logprob: -10.828326225280762
    6. ''' → logprob: -11.953326225280762
    7. ',' → logprob: -12.828326225280762
    8. '`' → logprob: -12.953326225280762
    9. '4' → logprob: -13.078326225280762
    10. ' ]' → logprob: -13.078326225280762

Token 36: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00037597675691358745
    2. ',e' → logprob: -8.375375747680664
    3. ' ,' → logprob: -9.625375747680664
    4. ']' → logprob: -9.875375747680664
    5. 'e' → logprob: -11.125375747680664
    6. ',
' → logprob: -12.000375747680664
    7. ')' → logprob: -12.375375747680664
    8. '`,' → logprob: -13.875375747680664
    9. ',f' → logprob: -14.250375747680664
    10. ' ' → logprob: -15.500375747680664

Token 37: ' e' (ID: 319)
  Prédit: ' e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' e' → logprob: -0.4740869402885437
    2. 'e' → logprob: -0.9740869402885437
    3. ' ' → logprob: -12.09908676147461
    4. '	e' → logprob: -13.84908676147461
    5. ''e' → logprob: -13.84908676147461
    6. ' ' → logprob: -14.22408676147461
    7. '`' → logprob: -15.34908676147461
    8. ''' → logprob: -15.34908676147461
    9. ')e' → logprob: -15.59908676147461
    10. ',e' → logprob: -15.72408676147461

Token 38: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -7.584239938296378e-06
    2. ' ]' → logprob: -12.250007629394531
    3. ']
' → logprob: -14.000007629394531
    4. ')' → logprob: -14.375007629394531
    5. '']' → logprob: -14.750007629394531
    6. ',' → logprob: -15.125007629394531
    7. '`]' → logprob: -15.375007629394531
    8. '])' → logprob: -16.00000762939453
    9. '[' → logprob: -16.37500762939453
    10. ')]' → logprob: -16.62500762939453

Token 39: 'ten' (ID: 1305)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.9827427268028259
    2. 's' → logprob: -1.4827427864074707
    3. 'm' → logprob: -2.2327427864074707
    4. '\n' → logprob: -2.3577427864074707
    5. 'result' → logprob: -3.1077427864074707
    6. '.' → logprob: -3.6077427864074707
    7. 'sum' → logprob: -3.7327427864074707
    8. 'f' → logprob: -3.7327427864074707
    9. 'n' → logprob: -4.482742786407471
    10. '.
' → logprob: -5.232742786407471

Token 40: '_up' (ID: 18721)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3030124008655548
    2. '_' → logprob: -1.6780123710632324
    3. '_sum' → logprob: -3.4280123710632324
    4. ' =' → logprob: -4.303012371063232
    5. '_s' → logprob: -5.303012371063232
    6. '_list' → logprob: -5.428012371063232
    7. '_count' → logprob: -5.803012371063232
    8. 't' → logprob: -6.053012371063232
    9. '_times' → logprob: -6.428012371063232
    10. '=' → logprob: -6.553012371063232

Token 41: '_list' (ID: 4162)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6716894507408142
    2. '_list' → logprob: -1.046689510345459
    3. '=' → logprob: -2.296689510345459
    4. 's' → logprob: -4.296689510345459
    5. 'd' → logprob: -5.296689510345459
    6. '_' → logprob: -5.546689510345459
    7. 'list' → logprob: -5.671689510345459
    8. '=[]' → logprob: -5.796689510345459
    9. 'ed' → logprob: -6.171689510345459
    10. 'per' → logprob: -6.546689510345459

Token 42: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16407305002212524
    2. '(' → logprob: -2.5390729904174805
    3. '=' → logprob: -2.6640729904174805
    4. '_' → logprob: -6.9140729904174805
    5. ' ' → logprob: -7.2890729904174805
    6. '[' → logprob: -7.9140729904174805
    7. ' (' → logprob: -8.16407299041748
    8. 's' → logprob: -8.78907299041748
    9. ')' → logprob: -9.91407299041748
    10. ']' → logprob: -10.41407299041748

Token 43: ' []
' (ID: 8911)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.24465246498584747
    2. '[]' → logprob: -1.869652509689331
    3. ' []' → logprob: -3.869652509689331
    4. '[input' → logprob: -3.869652509689331
    5. ' [' → logprob: -3.994652509689331
    6. '[i' → logprob: -7.494652271270752
    7. '[list' → logprob: -7.619652271270752
    8. '[a' → logprob: -7.619652271270752
    9. 'list' → logprob: -8.24465274810791
    10. '[len' → logprob: -8.49465274810791

Token 44: 'am' (ID: 313)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.002916618948802352
    2. 'f' → logprob: -6.0029168128967285
    3. '
' → logprob: -8.50291633605957
    4. 'i' → logprob: -9.25291633605957
    5. ' for' → logprob: -9.62791633605957
    6. '\n' → logprob: -10.12791633605957
    7. '```' → logprob: -11.50291633605957
    8. ' 
' → logprob: -12.00291633605957
    9. '' → logprob: -12.37791633605957
    10. '[' → logprob: -12.87791633605957

Token 45: 'ari' (ID: 1683)
  Prédit: 'ount'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ount' → logprob: -0.0059433747082948685
    2. '=' → logprob: -5.505943298339844
    3. ' =' → logprob: -7.630943298339844
    4. 't' → logprob: -7.755943298339844
    5. 'e' → logprob: -8.505943298339844
    6. '_' → logprob: -9.005943298339844
    7. 'plitude' → logprob: -9.255943298339844
    8. 'i' → logprob: -9.380943298339844
    9. 'a' → logprob: -9.755943298339844
    10. 'ax' → logprob: -9.880943298339844

Token 46: '_list' (ID: 4162)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05672343075275421
    2. '=' → logprob: -3.5567233562469482
    3. '_' → logprob: -3.6817233562469482
    4. 's' → logprob: -7.056723594665527
    5. ' ' → logprob: -7.931723594665527
    6. '_list' → logprob: -9.306723594665527
    7. ' _' → logprob: -10.181723594665527
    8. '_=' → logprob: -11.181723594665527
    9. '  ' → logprob: -11.681723594665527
    10. ',' → logprob: -12.181723594665527

Token 47: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03622662276029587
    2. '=' → logprob: -3.411226511001587
    3. '[' → logprob: -6.786226749420166
    4. '_' → logprob: -7.536226749420166
    5. ' ' → logprob: -8.161226272583008
    6. '.append' → logprob: -8.661226272583008
    7. '=[]' → logprob: -8.911226272583008
    8. '[]' → logprob: -9.661226272583008
    9. ' =[' → logprob: -9.786226272583008
    10. 's' → logprob: -9.786226272583008

Token 48: ' []
' (ID: 8911)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.1546269655227661
    2. '[' → logprob: -2.7796268463134766
    3. ' [' → logprob: -3.1546268463134766
    4. '[]' → logprob: -3.2796268463134766
    5. ' ' → logprob: -7.154626846313477
    6. '[input' → logprob: -9.904626846313477
    7. '[int' → logprob: -10.904626846313477
    8. ' []
' → logprob: -11.529626846313477
    9. ' [
' → logprob: -12.154626846313477
    10. '[]
' → logprob: -12.279626846313477

Token 49: 'total' (ID: 9577)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0010661551496014
    2. 'f' → logprob: -7.001066207885742
    3. '
' → logprob: -9.376066207885742
    4. '\n' → logprob: -10.501066207885742
    5. '```' → logprob: -11.626066207885742
    6. 'i' → logprob: -11.626066207885742
    7. 'n' → logprob: -11.751066207885742
    8. ' for' → logprob: -11.751066207885742
    9. '\' → logprob: -12.501066207885742
    10. 'fo' → logprob: -13.751066207885742

Token 50: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.194933220744133
    2. '=' → logprob: -1.9449331760406494
    3. '_' → logprob: -3.4449331760406494
    4. ' ' → logprob: -6.4449334144592285
    5. '_space' → logprob: -8.56993293762207
    6. '(' → logprob: -9.19493293762207
    7. 's' → logprob: -9.44493293762207
    8. '_list' → logprob: -10.19493293762207
    9. ' _' → logprob: -10.31993293762207
    10. 'space' → logprob: -10.56993293762207

Token 51: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.47436147928237915
    2. ' ' → logprob: -0.9743614792823792
    3. ' sum' → logprob: -8.849361419677734
    4. 'sum' → logprob: -8.974361419677734
    5. ' ' → logprob: -12.099361419677734
    6. '10' → logprob: -13.599361419677734
    7. ' a' → logprob: -14.161861419677734
    8. '(sum' → logprob: -14.349361419677734
    9. 'a' → logprob: -14.536861419677734
    10. ')' → logprob: -14.661861419677734

Token 52: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.97024549683556e-05
    2. ' ' → logprob: -9.625080108642578
    3. 'sum' → logprob: -11.250080108642578
    4. 'a' → logprob: -14.875080108642578
    5. ' sum' → logprob: -16.625080108642578
    6. '[]' → logprob: -17.000080108642578
    7. '(' → logprob: -17.125080108642578
    8. '10' → logprob: -17.250080108642578
    9. '100' → logprob: -17.500080108642578
    10. 'total' → logprob: -18.125080108642578

Token 53: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05921122804284096
    2. '
' → logprob: -2.934211254119873
    3. '\n' → logprob: -5.809211254119873
    4. 'f' → logprob: -7.559211254119873
    5. ' for' → logprob: -8.434210777282715
    6. '' → logprob: -8.434210777282715
    7. '\' → logprob: -9.059210777282715
    8. 'n' → logprob: -9.309210777282715
    9. '```' → logprob: -9.434210777282715
    10. 'i' → logprob: -10.434210777282715

Token 54: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0006502442411147058
    2. '
' → logprob: -8.000650405883789
    3. 'f' → logprob: -8.250650405883789
    4. '\n' → logprob: -10.750650405883789
    5. '```' → logprob: -11.500650405883789
    6. 'i' → logprob: -11.500650405883789
    7. ' for' → logprob: -12.250650405883789
    8. '' → logprob: -13.125650405883789
    9. 'n' → logprob: -13.500650405883789
    10. '\' → logprob: -13.625650405883789

Token 55: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.2868703305721283
    2. ' ' → logprob: -1.5368703603744507
    3. ' num' → logprob: -3.911870241165161
    4. ' x' → logprob: -4.78687047958374
    5. ' item' → logprob: -6.53687047958374
    6. ' _' → logprob: -6.78687047958374
    7. ' number' → logprob: -7.03687047958374
    8. 'i' → logprob: -7.16187047958374
    9. '_' → logprob: -7.78687047958374
    10. ' value' → logprob: -8.161870002746582

Token 56: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.13426829874515533
    2. ' ' → logprob: -2.134268283843994
    3. 'in' → logprob: -5.134268283843994
    4. '  ' → logprob: -6.759268283843994
    5. ' i' → logprob: -8.509268760681152
    6. ' ,' → logprob: -12.009268760681152
    7. '.' → logprob: -12.134268760681152
    8. '	in' → logprob: -12.134268760681152
    9. ' n' → logprob: -12.384268760681152
    10. 'n' → logprob: -12.384268760681152

Token 57: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.0462210513651371
    2. ' range' → logprob: -3.2962210178375244
    3. 'input' → logprob: -5.2962212562561035
    4. ' ' → logprob: -5.9212212562561035
    5. 'range' → logprob: -7.7962212562561035
    6. ' in' → logprob: -11.421220779418945
    7. '[input' → logprob: -11.671220779418945
    8. '(input' → logprob: -12.046220779418945
    9. '	input' → logprob: -12.546220779418945
    10. '  ' → logprob: -12.546220779418945

Token 58: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.08017241209745407
    2. '_' → logprob: -2.580172300338745
    3. ' _' → logprob: -6.830172538757324
    4. ')' → logprob: -9.205172538757324
    5. '_lst' → logprob: -10.455172538757324
    6. '_l' → logprob: -11.205172538757324
    7. ' in' → logprob: -11.580172538757324
    8. ')_' → logprob: -11.955172538757324
    9. ' )' → logprob: -12.705172538757324
    10. ' ' → logprob: -12.705172538757324

Token 59: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.009349792264401913
    2. ' :' → logprob: -4.759349822998047
    3. ' in' → logprob: -7.759349822998047
    4. 'in' → logprob: -8.759349822998047
    5. ':
' → logprob: -10.259349822998047
    6. '=' → logprob: -11.134349822998047
    7. '):' → logprob: -11.134349822998047
    8. '>' → logprob: -11.259349822998047
    9. ',' → logprob: -11.509349822998047
    10. ':**' → logprob: -11.634349822998047

Token 60: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.12557584047317505
    2. ' 
' → logprob: -2.3755757808685303
    3. '    ' → logprob: -5.125576019287109
    4. '   ' → logprob: -5.625576019287109
    5. '     
' → logprob: -5.750576019287109
    6. ' if' → logprob: -5.875576019287109
    7. '\' → logprob: -6.125576019287109
    8. '    
' → logprob: -6.625576019287109
    9. ' i' → logprob: -6.625576019287109
    10. ' t' → logprob: -7.125576019287109

Token 61: ' am' (ID: 939)
  Prédit: ' total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.716131329536438
    2. ' if' → logprob: -0.966131329536438
    3. ' remainder' → logprob: -2.9661312103271484
    4. ' t' → logprob: -3.7161312103271484
    5. ' ' → logprob: -4.341131210327148
    6. ' x' → logprob: -5.341131210327148
    7. ' r' → logprob: -5.466131210327148
    8. ' amount' → logprob: -5.591131210327148
    9. ' n' → logprob: -5.716131210327148
    10. ' ten' → logprob: -5.716131210327148

Token 62: 'ari' (ID: 1683)
  Prédit: 'ari'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ari' → logprob: -0.000636308453977108
    2. 'a' → logprob: -7.625636100769043
    3. ' ari' → logprob: -9.125636100769043
    4. '   ' → logprob: -11.500636100769043
    5. ' =' → logprob: -12.125636100769043
    6. '=' → logprob: -12.125636100769043
    7. 'u' → logprob: -12.625636100769043
    8. '1' → logprob: -13.000636100769043
    9. 'ai' → logprob: -13.875636100769043
    10. '_' → logprob: -13.875636100769043

Token 63: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4694525897502899
    2. ' =' → logprob: -1.0944526195526123
    3. '=' → logprob: -3.3444526195526123
    4. '_list' → logprob: -5.594452381134033
    5. ' _' → logprob: -7.469452381134033
    6. ' ' → logprob: -8.969452857971191
    7. '%' → logprob: -9.719452857971191
    8. '_=' → logprob: -9.719452857971191
    9. '   ' → logprob: -10.344452857971191
    10. 's' → logprob: -11.344452857971191

Token 64: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.02872011624276638
    2. 'i' → logprob: -4.278719902038574
    3. ' ' → logprob: -4.528719902038574
    4. '10' → logprob: -6.278719902038574
    5. ' (' → logprob: -6.403719902038574
    6. '100' → logprob: -10.403719902038574
    7. '(i' → logprob: -10.403719902038574
    8. '(' → logprob: -10.528719902038574
    9. '  ' → logprob: -11.028719902038574
    10. '   ' → logprob: -12.278719902038574

Token 65: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.026889992877840996
    2. '%' → logprob: -3.6518900394439697
    3. ' ' → logprob: -7.526889801025391
    4. ' //' → logprob: -11.02688980102539
    5. '10' → logprob: -11.77688980102539
    6. ' %=' → logprob: -11.90188980102539
    7. '
' → logprob: -12.40188980102539
    8. '   ' → logprob: -13.02688980102539
    9. '  ' → logprob: -13.27688980102539
    10. ' ' → logprob: -13.40188980102539

Token 66: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0024863574653863907
    2. ' ' → logprob: -6.002486228942871
    3. '1' → logprob: -12.627486228942871
    4. '  ' → logprob: -13.377486228942871
    5. '100' → logprob: -13.564986228942871
    6. '5' → logprob: -14.439986228942871
    7. 't' → logprob: -14.689986228942871
    8. '１０' → logprob: -14.689986228942871
    9. '   ' → logprob: -15.314986228942871
    10. 'ten' → logprob: -15.377486228942871

Token 67: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -8.97155623533763e-05
    2. '1' → logprob: -10.375089645385742
    3. '```' → logprob: -11.500089645385742
    4. ' ' → logprob: -11.500089645385742
    5. '

' → logprob: -12.000089645385742
    6. '{' → logprob: -12.625089645385742
    7. '``' → logprob: -12.812589645385742
    8. '5' → logprob: -12.937589645385742
    9. '	' → logprob: -13.062589645385742
    10. '   ' → logprob: -13.062589645385742

Token 68: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1902458816766739
    2. '    
' → logprob: -2.8152458667755127
    3. '<|end|>' → logprob: -3.3152458667755127
    4. '
' → logprob: -3.5652458667755127
    5. ' if' → logprob: -3.6902458667755127
    6. ' 
' → logprob: -5.315246105194092
    7. '    ' → logprob: -5.565246105194092
    8. ')' → logprob: -6.065246105194092
    9. 'if' → logprob: -6.190246105194092
    10. '\n' → logprob: -6.315246105194092

Token 69: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2503184378147125
    2. '    
' → logprob: -2.3753185272216797
    3. '
' → logprob: -3.0003185272216797
    4. '<|end|>' → logprob: -3.1253185272216797
    5. ' if' → logprob: -4.62531852722168
    6. '    ' → logprob: -5.62531852722168
    7. ' ' → logprob: -5.62531852722168
    8. '   
' → logprob: -5.87531852722168
    9. ' 
' → logprob: -5.87531852722168
    10. '  
' → logprob: -5.87531852722168

Token 70: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.20343072712421417
    2. 'total' → logprob: -2.328430652618408
    3. ' if' → logprob: -3.078430652618408
    4. '   ' → logprob: -3.578430652618408
    5. 'ten' → logprob: -5.703430652618408
    6. ' ' → logprob: -5.953430652618408
    7. 't' → logprob: -6.328430652618408
    8. ' total' → logprob: -7.203430652618408
    9. '10' → logprob: -7.453430652618408
    10. 'i' → logprob: -7.453430652618408

Token 71: ' am' (ID: 939)
  Prédit: ' am'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' am' → logprob: -0.0002581209992058575
    2. 'am' → logprob: -8.875258445739746
    3. ' ' → logprob: -9.500258445739746
    4. '   ' → logprob: -11.000258445739746
    5. '10' → logprob: -11.250258445739746
    6. '  ' → logprob: -11.875258445739746
    7. ' i' → logprob: -13.625258445739746
    8. ' a' → logprob: -13.625258445739746
    9. '    ' → logprob: -13.750258445739746
    10. ' ' → logprob: -13.875258445739746

Token 72: 'ari' (ID: 1683)
  Prédit: 'ari'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ari' → logprob: -0.021940024569630623
    2. 'a' → logprob: -4.521940231323242
    3. 'i' → logprob: -4.896940231323242
    4. '   ' → logprob: -6.771940231323242
    5. 'ar' → logprob: -6.896940231323242
    6. 'u' → logprob: -8.771940231323242
    7. '>' → logprob: -8.771940231323242
    8. 'ri' → logprob: -8.896940231323242
    9. '  ' → logprob: -9.146940231323242
    10. ' ' → logprob: -9.396940231323242

Token 73: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.2484268695116043
    2. '!=' → logprob: -1.998426914215088
    3. '>' → logprob: -3.373426914215088
    4. ' ==' → logprob: -3.498426914215088
    5. ' !=' → logprob: -4.998426914215088
    6. ':' → logprob: -5.123426914215088
    7. '=' → logprob: -5.248426914215088
    8. ' >' → logprob: -6.998426914215088
    9. '<' → logprob: -8.12342643737793
    10. ' ' → logprob: -8.24842643737793

Token 74: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.38689786195755005
    2. ' ' → logprob: -1.1368978023529053
    3. 'o' → logprob: -12.386898040771484
    4. '9' → logprob: -12.636898040771484
    5. '

' → logprob: -12.949398040771484
    6. '>' → logprob: -13.136898040771484
    7. '1' → logprob: -13.199398040771484
    8. '<|end|>' → logprob: -13.511898040771484
    9. '6' → logprob: -13.699398040771484
    10. ')' → logprob: -13.699398040771484

Token 75: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0028065370861440897
    2. ' ' → logprob: -5.877806663513184
    3. '1' → logprob: -15.440306663513184
    4. '9' → logprob: -15.565306663513184
    5. 'o' → logprob: -15.565306663513184
    6. ''' → logprob: -15.752806663513184
    7. ')' → logprob: -16.252805709838867
    8. '>' → logprob: -16.315305709838867
    9. '#' → logprob: -16.377805709838867
    10. '```' → logprob: -16.627805709838867

Token 76: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0002019907406065613
    2. ' or' → logprob: -9.125202178955078
    3. '):' → logprob: -10.500202178955078
    4. ':
' → logprob: -10.625202178955078
    5. '<|end|>' → logprob: -11.250202178955078
    6. ',' → logprob: -11.500202178955078
    7. ' :' → logprob: -12.375202178955078
    8. '   ' → logprob: -12.625202178955078
    9. ':**' → logprob: -12.875202178955078
    10. ')' → logprob: -13.000202178955078

Token 77: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.058926817029714584
    2. '   ' → logprob: -3.183926820755005
    3. '
' → logprob: -4.808926582336426
    4. ' ten' → logprob: -5.933926582336426
    5. 'ten' → logprob: -6.808926582336426
    6. ')' → logprob: -6.933926582336426
    7. '        
' → logprob: -7.308926582336426
    8. '    
' → logprob: -7.433926582336426
    9. '    ' → logprob: -7.933926582336426
    10. '<|end|>' → logprob: -8.183926582336426

Token 78: ' ten' (ID: 4325)
  Prédit: ' ten'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ten' → logprob: -0.9012635946273804
    2. 'ten' (adapté à ' ten') → logprob: -1.1512635946273804
    3. '   ' → logprob: -1.6512635946273804
    4. 'total' → logprob: -2.77626371383667
    5. ' total' → logprob: -3.90126371383667
    6. '    ' → logprob: -6.90126371383667
    7. '    
' → logprob: -7.90126371383667
    8. '       ' → logprob: -8.026263236999512
    9. '  ' → logprob: -8.151263236999512
    10. ' ' → logprob: -8.276263236999512

Token 79: '_up' (ID: 18721)
  Prédit: '_up'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_up' → logprob: -1.3425219549390022e-05
    2. '_' → logprob: -11.75001335144043
    3. '_u' → logprob: -12.25001335144043
    4. 'up' → logprob: -15.25001335144043
    5. '_UP' → logprob: -15.50001335144043
    6. '_down' → logprob: -15.87501335144043
    7. '_upper' → logprob: -17.25001335144043
    8. '	up' → logprob: -18.00001335144043
    9. '

' → logprob: -18.12501335144043
    10. ' _' → logprob: -18.62501335144043

Token 80: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -2.939851037808694e-05
    2. '_' → logprob: -10.875029563903809
    3. ' =' → logprob: -12.125029563903809
    4. '=' → logprob: -12.875029563903809
    5. '_l' → logprob: -14.000029563903809
    6. '10' → logprob: -15.625029563903809
    7. '_li' → logprob: -15.625029563903809
    8. '_i' → logprob: -15.750029563903809
    9. 'list' → logprob: -15.750029563903809
    10. '.append' → logprob: -16.000028610229492

Token 81: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0789487287402153
    2. '.' → logprob: -2.578948736190796
    3. '.ap' → logprob: -10.328948974609375
    4. '.add' → logprob: -11.703948974609375
    5. '.app' → logprob: -11.953948974609375
    6. '.extend' → logprob: -12.078948974609375
    7. ' .' → logprob: -12.953948974609375
    8. '.Append' → logprob: -13.953948974609375
    9. ').' → logprob: -13.953948974609375
    10. '.a' → logprob: -14.703948974609375

Token 82: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -4.024604277219623e-05
    2. '(' → logprob: -10.125040054321289
    3. 'i' → logprob: -16.37504005432129
    4. '(
' → logprob: -17.37504005432129
    5. '(int' → logprob: -17.37504005432129
    6. '((' → logprob: -17.87504005432129
    7. '(a' → logprob: -18.87504005432129
    8. ' (' → logprob: -19.12504005432129
    9. '()' → logprob: -19.25004005432129
    10. ' i' → logprob: -20.00004005432129

Token 83: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.021214943379163742
    2. '   ' → logprob: -4.521214962005615
    3. ')
' → logprob: -4.646214962005615
    4. ' )' → logprob: -7.771214962005615
    5. ' else' → logprob: -10.396214485168457
    6. 'else' → logprob: -10.521214485168457
    7. ' )
' → logprob: -10.521214485168457
    8. ')
' → logprob: -12.646214485168457
    9. '       ' → logprob: -13.271214485168457
    10. '))' → logprob: -13.896214485168457

Token 84: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7451393008232117
    2. ' else' → logprob: -0.7451393008232117
    3. 'else' → logprob: -2.9951393604278564
    4. '    
' → logprob: -7.995139122009277
    5. ' elif' → logprob: -9.620139122009277
    6. 'elif' → logprob: -9.745139122009277
    7. '  ' → logprob: -9.995139122009277
    8. '    ' → logprob: -10.620139122009277
    9. '	else' → logprob: -10.745139122009277
    10. '<|end|>' → logprob: -10.870139122009277

Token 85: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.3415277898311615
    2. 'else' (adapté à ' else') → logprob: -1.4665278196334839
    3. '   ' → logprob: -2.8415277004241943
    4. '	else' → logprob: -9.716527938842773
    5. 'elif' → logprob: -9.716527938842773
    6. '  ' → logprob: -9.841527938842773
    7. ' elif' → logprob: -10.091527938842773
    8. '    ' → logprob: -11.341527938842773
    9. ' ' → logprob: -11.341527938842773
    10. '    
' → logprob: -12.716527938842773

Token 86: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.016519324854016304
    2. ' :' → logprob: -4.141519546508789
    3. '       ' → logprob: -8.516519546508789
    4. ',' → logprob: -8.891519546508789
    5. '    ' → logprob: -10.016519546508789
    6. '        ' → logprob: -10.641519546508789
    7. '<|end|>' → logprob: -10.891519546508789
    8. ' :
' → logprob: -11.516519546508789
    9. ':
' → logprob: -11.641519546508789
    10. ' ,' → logprob: -11.641519546508789

Token 87: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0012566609075292945
    2. ' ten' → logprob: -7.251256465911865
    3. '   ' → logprob: -8.251256942749023
    4. '        
' → logprob: -9.126256942749023
    5. '10' → logprob: -10.126256942749023
    6. '    ' → logprob: -10.501256942749023
    7. '        ' → logprob: -10.751256942749023
    8. '      ' → logprob: -11.001256942749023
    9. '     ' → logprob: -11.251256942749023
    10. '    ' → logprob: -11.251256942749023

Token 88: ' ten' (ID: 4325)
  Prédit: ' ten'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ten' → logprob: -0.7508411407470703
    2. 'ten' (adapté à ' ten') → logprob: -1.0008411407470703
    3. '   ' → logprob: -2.0008411407470703
    4. '       ' → logprob: -4.00084114074707
    5. '    ' → logprob: -6.00084114074707
    6. '10' → logprob: -6.50084114074707
    7. '        ' → logprob: -7.62584114074707
    8. 't' → logprob: -7.62584114074707
    9. '           ' → logprob: -7.75084114074707
    10. '```' → logprob: -8.00084114074707

Token 89: '_up' (ID: 18721)
  Prédit: '_up'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_up' → logprob: -3.5716304410016164e-05
    2. '-' → logprob: -11.625035285949707
    3. '   ' → logprob: -12.125035285949707
    4. '_UP' → logprob: -12.625035285949707
    5. '-up' → logprob: -13.000035285949707
    6. ' _' → logprob: -13.500035285949707
    7. ' -' → logprob: -13.875035285949707
    8. '_u' → logprob: -14.000035285949707
    9. '_' → logprob: -14.125035285949707
    10. ')_' → logprob: -14.125035285949707

Token 90: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -4.429896944202483e-05
    2. '_up' → logprob: -10.750043869018555
    3. '10' → logprob: -11.625043869018555
    4. '_' → logprob: -11.875043869018555
    5. 'list' → logprob: -13.250043869018555
    6. 'List' → logprob: -13.375043869018555
    7. '_l' → logprob: -14.750043869018555
    8. '_lst' → logprob: -15.000043869018555
    9. 'up' → logprob: -15.125043869018555
    10. 's' → logprob: -15.250043869018555

Token 91: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0001785112835932523
    2. '.extend' → logprob: -9.250178337097168
    3. '.' → logprob: -9.625178337097168
    4. ' +=' → logprob: -11.750178337097168
    5. '.add' → logprob: -13.625178337097168
    6. 'append' → logprob: -13.750178337097168
    7. '+' → logprob: -14.000178337097168
    8. '+=' → logprob: -14.125178337097168
    9. '<|end|>' → logprob: -14.250178337097168
    10. '_append' → logprob: -14.500178337097168

Token 92: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.03224772587418556
    2. '(' → logprob: -4.032247543334961
    3. '((' → logprob: -4.282247543334961
    4. '(((' → logprob: -8.782247543334961
    5. ' (' → logprob: -10.657247543334961
    6. ' i' → logprob: -12.532247543334961
    7. '(int' → logprob: -12.782247543334961
    8. ' ((' → logprob: -13.407247543334961
    9. '(a' → logprob: -13.907247543334961
    10. '((((' → logprob: -14.032247543334961

Token 93: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1509505957365036
    2. ' +' → logprob: -2.1509506702423096
    3. '-' → logprob: -4.0259504318237305
    4. ' -' → logprob: -5.1509504318237305
    5. '+(' → logprob: -9.77595043182373
    6. '//' → logprob: -10.65095043182373
    7. ' ' → logprob: -12.65095043182373
    8. ' //' → logprob: -13.02595043182373
    9. '+
' → logprob: -13.15095043182373
    10. ')' → logprob: -13.40095043182373

Token 94: ' ' (ID: 220)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.09390976279973984
    2. ' (' → logprob: -3.093909740447998
    3. '10' → logprob: -3.218909740447998
    4. ' ' → logprob: -5.468909740447998
    5. '1' → logprob: -9.968910217285156
    6. '   ' → logprob: -10.468910217285156
    7. '9' → logprob: -11.718910217285156
    8. '  ' → logprob: -13.093910217285156
    9. '[' → logprob: -13.343910217285156
    10. ')' → logprob: -13.343910217285156

Token 95: '10' (ID: 702)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.018743058666586876
    2. '10' → logprob: -4.01874303817749
    3. ' (' → logprob: -7.51874303817749
    4. ' ' → logprob: -10.018743515014648
    5. '   ' → logprob: -13.393743515014648
    6. '1' → logprob: -13.393743515014648
    7. '[' → logprob: -13.518743515014648
    8. '{' → logprob: -15.018743515014648
    9. '
' → logprob: -15.518743515014648
    10. '（' → logprob: -16.14374351501465

Token 96: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.012623007409274578
    2. '-' → logprob: -4.387622833251953
    3. '-am' → logprob: -9.637622833251953
    4. ' ' → logprob: -10.262622833251953
    5. ' am' → logprob: -11.762622833251953
    6. '   ' → logprob: -12.262622833251953
    7. ')' → logprob: -15.137622833251953
    8. '  ' → logprob: -15.762622833251953
    9. ' ' → logprob: -16.387622833251953
    10. ' -
' → logprob: -17.387622833251953

Token 97: ' am' (ID: 939)
  Prédit: 'am'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'am' → logprob: -0.011048170737922192
    2. ' am' → logprob: -4.511048316955566
    3. '   ' → logprob: -16.26104736328125
    4. ' ' → logprob: -16.38604736328125
    5. 'amu' → logprob: -16.88604736328125
    6. 'ami' → logprob: -17.26104736328125
    7. '(am' → logprob: -17.26104736328125
    8. 'amn' → logprob: -17.38604736328125
    9. '  ' → logprob: -18.01104736328125
    10. '_am' → logprob: -18.13604736328125

Token 98: 'ari' (ID: 1683)
  Prédit: 'ari'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ari' → logprob: -6.56364209135063e-05
    2. 'a' → logprob: -10.375065803527832
    3. 'ar' → logprob: -10.500065803527832
    4. 'ари' → logprob: -13.000065803527832
    5. 'arri' → logprob: -13.000065803527832
    6. 'ri' → logprob: -15.000065803527832
    7. 'arih' → logprob: -15.000065803527832
    8. 'ariya' → logprob: -15.125065803527832
    9. ' ari' → logprob: -15.250065803527832
    10. 'lari' → logprob: -15.750065803527832

Token 99: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.240481914370321e-05
    2. ')
' → logprob: -10.375052452087402
    3. '   ' → logprob: -11.250052452087402
    4. ' )' → logprob: -12.000052452087402
    5. '<|end|>' → logprob: -13.500052452087402
    6. '```' → logprob: -16.625051498413086
    7. '
' → logprob: -16.750051498413086
    8. '`)' → logprob: -17.125051498413086
    9. ' ' → logprob: -17.250051498413086
    10. '),' → logprob: -17.500051498413086

Token 100: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16433484852313995
    2. 'print' → logprob: -2.914334774017334
    3. '<|end|>' → logprob: -3.414334774017334
    4. ' ' → logprob: -3.664334774017334
    5. '    ' → logprob: -4.414334774017334
    6. 'for' → logprob: -4.914334774017334
    7. '    
' → logprob: -5.664334774017334
    8. ' for' → logprob: -5.914334774017334
    9. '```' → logprob: -5.914334774017334
    10. 'total' → logprob: -6.414334774017334

Token 101: ' am' (ID: 939)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6383475065231323
    2. 'am' (adapté à ' am') → logprob: -1.1383475065231323
    3. ' am' → logprob: -2.013347625732422
    4. '       ' → logprob: -4.138347625732422
    5. ' total' → logprob: -7.263347625732422
    6. ' ' → logprob: -7.513347625732422
    7. 'total' → logprob: -7.888347625732422
    8. '  ' → logprob: -8.638347625732422
    9. '    ' → logprob: -9.388347625732422
    10. '```' → logprob: -11.013347625732422

Token 102: 'ari' (ID: 1683)
  Prédit: 'ari'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ari' → logprob: -0.050963882356882095
    2. 'a' → logprob: -3.050963878631592
    3. 'ar' → logprob: -6.050963878631592
    4. ' ari' → logprob: -11.67596435546875
    5. 'ари' → logprob: -12.80096435546875
    6. '   ' → logprob: -13.67596435546875
    7. 'ariya' → logprob: -13.67596435546875
    8. 'arih' → logprob: -14.17596435546875
    9. ' a' → logprob: -14.55096435546875
    10. 'arri' → logprob: -14.80096435546875

Token 103: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.018508559092879295
    2. '_' → logprob: -4.018508434295654
    3. 's' → logprob: -8.143508911132812
    4. '_lst' → logprob: -10.518508911132812
    5. '=' → logprob: -11.768508911132812
    6. '_l' → logprob: -12.268508911132812
    7. '_=' → logprob: -12.393508911132812
    8. '_
' → logprob: -12.643508911132812
    9. '<|end|>' → logprob: -12.643508911132812
    10. ')' → logprob: -12.768508911132812

Token 104: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.007623899728059769
    2. '.' → logprob: -4.882623672485352
    3. '.app' → logprob: -11.882623672485352
    4. '.setdefault' → logprob: -13.007623672485352
    5. '.extend' → logprob: -13.007623672485352
    6. ' .' → logprob: -13.382623672485352
    7. '.ap' → logprob: -13.632623672485352
    8. '<|end|>' → logprob: -13.632623672485352
    9. '.add' → logprob: -14.132623672485352
    10. '.push' → logprob: -14.257623672485352

Token 105: '(am' (ID: 158066)
  Prédit: '(am'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(am' → logprob: -0.006425575353205204
    2. '(i' → logprob: -5.256425380706787
    3. '(' → logprob: -6.756425380706787
    4. 'am' → logprob: -10.506425857543945
    5. '(a' → logprob: -15.881425857543945
    6. '(an' → logprob: -17.256425857543945
    7. ' am' → logprob: -17.256425857543945
    8. 'i' → logprob: -17.256425857543945
    9. '(im' → logprob: -17.506425857543945
    10. '(max' → logprob: -17.631425857543945

Token 106: 'ari' (ID: 1683)
  Prédit: 'ari'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ari' → logprob: -0.00024144348572008312
    2. 'i' → logprob: -8.62524127960205
    3. 'arri' → logprob: -11.00024127960205
    4. 'a' → logprob: -11.75024127960205
    5. '<|end|>' → logprob: -11.75024127960205
    6. 'ri' → logprob: -12.50024127960205
    7. 'arii' → logprob: -12.87524127960205
    8. 'ари' → logprob: -12.87524127960205
    9. 'arih' → logprob: -12.87524127960205
    10. 'ar' → logprob: -13.00024127960205

Token 107: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.451116051815916e-05
    2. ')
' → logprob: -11.375024795532227
    3. '   ' → logprob: -11.625024795532227
    4. ' )' → logprob: -12.750024795532227
    5. '<|end|>' → logprob: -15.375024795532227
    6. '```' → logprob: -16.125024795532227
    7. ')return' → logprob: -16.625024795532227
    8. '`)' → logprob: -16.750024795532227
    9. ' ' → logprob: -16.750024795532227
    10. ')

' → logprob: -16.875024795532227

Token 108: 'for' (ID: 1938)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.524871826171875
    2. 'am' → logprob: -1.399871826171875
    3. 'min' → logprob: -2.774871826171875
    4. 'm' → logprob: -3.274871826171875
    5. 'max' → logprob: -4.024871826171875
    6. 'if' → logprob: -4.149871826171875
    7. 'total' → logprob: -4.774871826171875
    8. 'minimum' → logprob: -5.399871826171875
    9. '

' → logprob: -5.899871826171875
    10. '#' → logprob: -6.399871826171875

Token 109: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.16979871690273285
    2. ' a' → logprob: -3.0447986125946045
    3. ' am' → logprob: -3.1697986125946045
    4. ' ' → logprob: -4.044798851013184
    5. ' x' → logprob: -4.419798851013184
    6. ' num' → logprob: -4.794798851013184
    7. 'i' → logprob: -4.919798851013184
    8. ' t' → logprob: -5.294798851013184
    9. ' total' → logprob: -5.794798851013184
    10. ' j' → logprob: -5.919798851013184

Token 110: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.013273640535771847
    2. 'in' → logprob: -4.3882737159729
    3. ' ' → logprob: -7.3882737159729
    4. '  ' → logprob: -9.763273239135742
    5. ' _' → logprob: -11.138273239135742
    6. ' i' → logprob: -11.263273239135742
    7. '_' → logprob: -11.513273239135742
    8. '	in' → logprob: -11.763273239135742
    9. ' ' → logprob: -11.763273239135742
    10. 's' → logprob: -11.888273239135742

Token 111: ' ten' (ID: 4325)
  Prédit: ' am'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' am' → logprob: -0.6247722506523132
    2. ' ten' → logprob: -1.499772310256958
    3. ' range' → logprob: -1.499772310256958
    4. ' input' → logprob: -4.874772071838379
    5. 'ten' → logprob: -5.499772071838379
    6. 'am' → logprob: -6.124772071838379
    7. 'range' → logprob: -6.124772071838379
    8. ' sorted' → logprob: -7.499772071838379
    9. ' ' → logprob: -8.124772071838379
    10. '[' → logprob: -8.374772071838379

Token 112: '_up' (ID: 18721)
  Prédit: '_up'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_up' → logprob: -2.8325677703833207e-05
    2. '_' → logprob: -10.500028610229492
    3. '_u' → logprob: -14.875028610229492
    4. 'up' → logprob: -15.500028610229492
    5. '_list' → logprob: -16.375028610229492
    6. '_down' → logprob: -16.750028610229492
    7. '_UP' → logprob: -17.000028610229492
    8. ' _' → logprob: -19.375028610229492
    9. '_put' → logprob: -19.500028610229492
    10. '_upper' → logprob: -19.750028610229492

Token 113: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.0005736440070904791
    2. 'list' → logprob: -7.500573635101318
    3. '_' → logprob: -11.375574111938477
    4. 'List' → logprob: -12.500574111938477
    5. '_l' → logprob: -12.625574111938477
    6. '_lst' → logprob: -14.375574111938477
    7. '_li' → logprob: -15.000574111938477
    8. 'l' → logprob: -15.875574111938477
    9. '_lists' → logprob: -16.000574111938477
    10. '_up' → logprob: -16.125574111938477

Token 114: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0004056474717799574
    2. ':
' → logprob: -8.625405311584473
    3. '+' → logprob: -9.000405311584473
    4. ',' → logprob: -10.000405311584473
    5. '<|end|>' → logprob: -10.500405311584473
    6. '=' → logprob: -12.250405311584473
    7. ''s' → logprob: -12.750405311584473
    8. '>' → logprob: -12.750405311584473
    9. 'print' → logprob: -13.125405311584473
    10. ')' → logprob: -13.125405311584473

Token 115: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0061734868213534355
    2. '
' → logprob: -5.381173610687256
    3. '    
' → logprob: -6.881173610687256
    4. 'total' → logprob: -8.131173133850098
    5. ' total' → logprob: -9.381173133850098
    6. '<|end|>' → logprob: -10.256173133850098
    7. '	total' → logprob: -10.506173133850098
    8. '       ' → logprob: -10.506173133850098
    9. '```' → logprob: -11.256173133850098
    10. '(total' → logprob: -11.506173133850098

Token 116: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' (adapté à ' total') → logprob: -0.009455605410039425
    2. '   ' → logprob: -5.259455680847168
    3. 'if' → logprob: -5.634455680847168
    4. ' total' → logprob: -7.384455680847168
    5. ' ' → logprob: -11.509455680847168
    6. ' if' → logprob: -12.134455680847168
    7. '	total' → logprob: -13.134455680847168
    8. '  ' → logprob: -14.634455680847168
    9. '       ' → logprob: -15.009455680847168
    10. 't' → logprob: -15.634455680847168

Token 117: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.10026911646127701
    2. '+=' → logprob: -2.350269079208374
    3. '+' → logprob: -9.850269317626953
    4. ']+=' → logprob: -12.850269317626953
    5. '<|end|>' → logprob: -13.225269317626953
    6. ' +' → logprob: -13.600269317626953
    7. '=' → logprob: -13.725269317626953
    8. '+='' → logprob: -13.975269317626953
    9. '```' → logprob: -14.350269317626953
    10. '   ' → logprob: -15.350269317626953

Token 118: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0485873706638813
    2. ' i' → logprob: -3.0485873222351074
    3. '   ' → logprob: -17.923587799072266
    4. ' ' → logprob: -17.923587799072266
    5. '	i' → logprob: -18.048587799072266
    6. '(i' → logprob: -18.923587799072266
    7. 'int' → logprob: -19.423587799072266
    8. '  ' → logprob: -20.423587799072266
    9. '_i' → logprob: -20.673587799072266
    10. '    ' → logprob: -21.173587799072266

Token 119: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5981244444847107
    2. '
' → logprob: -1.5981245040893555
    3. 'if' → logprob: -1.5981245040893555
    4. '#' → logprob: -4.2231245040893555
    5. 'total' → logprob: -4.4731245040893555
    6. '<|end|>' → logprob: -5.0981245040893555
    7. 'am' → logprob: -6.3481245040893555
    8. 'for' → logprob: -6.4731245040893555
    9. 'max' → logprob: -6.5981245040893555
    10. '```' → logprob: -6.5981245040893555

Token 120: 'if' (ID: 366)
  Prédit: 'am'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'am' → logprob: -0.1620437353849411
    2. 'if' → logprob: -2.412043809890747
    3. 'print' → logprob: -3.162043809890747
    4. '#' → logprob: -4.787043571472168
    5. 'total' → logprob: -5.912043571472168
    6. 'max' → logprob: -5.912043571472168
    7. 'min' → logprob: -6.412043571472168
    8. 'ten' → logprob: -8.037043571472168
    9. ' am' → logprob: -8.162043571472168
    10. 'remaining' → logprob: -8.662043571472168

Token 121: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.42146533727645874
    2. ' am' → logprob: -1.4214653968811035
    3. 'len' → logprob: -2.4214653968811035
    4. 'am' → logprob: -4.5464653968811035
    5. ' ' → logprob: -6.1714653968811035
    6. '10' → logprob: -8.546464920043945
    7. ' not' → logprob: -8.921464920043945
    8. '(len' → logprob: -9.046464920043945
    9. ' max' → logprob: -9.233964920043945
    10. ' sorted' → logprob: -9.421464920043945

Token 122: '(am' (ID: 158066)
  Prédit: '(am'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(am' → logprob: -0.03818114846944809
    2. '(' → logprob: -3.2881810665130615
    3. ' (' → logprob: -8.91318130493164
    4. 'am' → logprob: -13.03818130493164
    5. '(im' → logprob: -14.53818130493164
    6. ' am' → logprob: -14.78818130493164
    7. '(s' → logprob: -15.16318130493164
    8. ' ' → logprob: -15.53818130493164
    9. '(max' → logprob: -15.53818130493164
    10. '(a' → logprob: -15.66318130493164

Token 123: 'ari' (ID: 1683)
  Prédit: 'ari'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ari' → logprob: -0.00046451209345832467
    2. 'ar' → logprob: -7.87546443939209
    3. 'arri' → logprob: -11.00046443939209
    4. '_' → logprob: -11.25046443939209
    5. 'i' → logprob: -11.75046443939209
    6. 'ary' → logprob: -12.12546443939209
    7. 'am' → logprob: -12.50046443939209
    8. 'a' → logprob: -12.50046443939209
    9. '_list' → logprob: -12.75046443939209
    10. 'ri' → logprob: -12.75046443939209

Token 124: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.17211169004440308
    2. ')' → logprob: -1.9221117496490479
    3. ')>' → logprob: -4.922111511230469
    4. ')==' → logprob: -6.297111511230469
    5. '_' → logprob: -6.672111511230469
    6. '_)' → logprob: -7.047111511230469
    7. '>' → logprob: -8.172111511230469
    8. ' )' → logprob: -8.797111511230469
    9. ' >' → logprob: -10.297111511230469
    10. ')_' → logprob: -11.047111511230469

Token 125: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.050099927932024
    2. '>' → logprob: -3.9250998497009277
    3. ' >' → logprob: -4.050099849700928
    4. '==' → logprob: -5.175099849700928
    5. ' ==' → logprob: -5.675099849700928
    6. ')>' → logprob: -6.550099849700928
    7. ' )' → logprob: -7.675099849700928
    8. '!=' → logprob: -8.300100326538086
    9. ' !=' → logprob: -8.425100326538086
    10. ')==' → logprob: -8.800100326538086

Token 126: ' !=' (ID: 1666)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.6594945192337036
    2. '==' → logprob: -0.7844945192337036
    3. ' ==' → logprob: -4.284494400024414
    4. '!=' → logprob: -5.159494400024414
    5. ' >' → logprob: -5.534494400024414
    6. ')' → logprob: -7.034494400024414
    7. '=' → logprob: -7.159494400024414
    8. '<' → logprob: -7.534494400024414
    9. '>=' → logprob: -7.659494400024414
    10. ' !=' → logprob: -8.784494400024414

Token 127: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02980221062898636
    2. ' ' → logprob: -3.5298023223876953
    3. '5' → logprob: -9.904802322387695
    4. 'len' → logprob: -13.779802322387695
    5. '1' → logprob: -15.279802322387695
    6. ' len' → logprob: -15.654802322387695
    7. '4' → logprob: -16.154802322387695
    8. '10' → logprob: -16.529802322387695
    9. '  ' → logprob: -17.029802322387695
    10. '    ' → logprob: -17.592302322387695

Token 128: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0008537048124708235
    2. '5' → logprob: -7.500853538513184
    3. ' ' → logprob: -8.125853538513184
    4. 'len' → logprob: -12.875853538513184
    5. '1' → logprob: -13.625853538513184
    6. '```' → logprob: -14.750853538513184
    7. '4' → logprob: -15.813353538513184
    8. '10' → logprob: -16.3133544921875
    9. ' len' → logprob: -16.3758544921875
    10. '  ' → logprob: -16.8758544921875

Token 129: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0003045994380954653
    2. ':
' → logprob: -8.375304222106934
    3. ' :' → logprob: -9.625304222106934
    4. ' and' → logprob: -11.875304222106934
    5. 'and' → logprob: -15.375304222106934
    6. ':

' → logprob: -15.750304222106934
    7. ':
' → logprob: -15.875304222106934
    8. ',' → logprob: -16.12530517578125
    9. ' :
' → logprob: -16.25030517578125
    10. ':return' → logprob: -16.87530517578125

Token 130: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0458734929561615
    2. ':' → logprob: -3.9208734035491943
    3. ' total' → logprob: -4.420873641967773
    4. 'total' → logprob: -4.420873641967773
    5. ' ' → logprob: -7.670873641967773
    6. ' am' → logprob: -8.920873641967773
    7. ':
' → logprob: -8.920873641967773
    8. 'am' → logprob: -10.045873641967773
    9. '
' → logprob: -10.420873641967773
    10. '	total' → logprob: -10.795873641967773

Token 131: ' am' (ID: 939)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.24490733444690704
    2. ' total' → logprob: -1.6199073791503906
    3. 'min' → logprob: -4.869907379150391
    4. '   ' → logprob: -4.994907379150391
    5. 'minimum' → logprob: -6.494907379150391
    6. ' min' → logprob: -6.869907379150391
    7. ' am' → logprob: -6.869907379150391
    8. 'am' (adapté à ' am') → logprob: -7.494907379150391
    9. ' ' → logprob: -8.24490737915039
    10. ' minimum' → logprob: -8.49490737915039

Token 132: 'ari' (ID: 1683)
  Prédit: 'ari'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ari' → logprob: -0.0014192804228514433
    2. 'a' → logprob: -6.7514190673828125
    3. 'ar' → logprob: -9.251419067382812
    4. 't' → logprob: -10.751419067382812
    5. '   ' → logprob: -10.876419067382812
    6. 'arri' → logprob: -11.001419067382812
    7. 'aru' → logprob: -11.251419067382812
    8. 's' → logprob: -11.626419067382812
    9. ' ari' → logprob: -12.001419067382812
    10. 'ri' → logprob: -12.376419067382812

Token 133: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.0878140926361084
    2. '_min' → logprob: -2.8378140926361084
    3. '_max' → logprob: -4.5878143310546875
    4. '_sorted' → logprob: -4.7128143310546875
    5. '.sort' → logprob: -6.4628143310546875
    6. 'max' → logprob: -6.7128143310546875
    7. '_total' → logprob: -6.8378143310546875
    8. 'min' → logprob: -6.9628143310546875
    9. '_sum' → logprob: -8.337814331054688
    10. '_sort' → logprob: -8.837814331054688

Token 134: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.09095311164855957
    2. '.' → logprob: -3.0909531116485596
    3. '.remove' → logprob: -3.2159531116485596
    4. '.append' → logprob: -7.3409528732299805
    5. '=' → logprob: -7.8409528732299805
    6. 'sort' → logprob: -8.84095287322998
    7. ' .' → logprob: -10.09095287322998
    8. 'remove' → logprob: -10.71595287322998
    9. '_am' → logprob: -10.96595287322998
    10. '_sorted' → logprob: -11.09095287322998

Token 135: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00020056030189152807
    2. '(' → logprob: -9.000200271606445
    3. '(reverse' → logprob: -10.000200271606445
    4. '()
' → logprob: -10.875200271606445
    5. '()[' → logprob: -11.750200271606445
    6. '()`' → logprob: -13.625200271606445
    7. '()>' → logprob: -14.375200271606445
    8. '())' → logprob: -14.500200271606445
    9. 'reverse' → logprob: -15.125200271606445
    10. '();' → logprob: -15.250200271606445

Token 136: '   ' (ID: 271)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.00099958258215338
    2. '   ' → logprob: -7.625999450683594
    3. 'for' → logprob: -8.000999450683594
    4. ' total' → logprob: -9.375999450683594
    5. '
' → logprob: -9.875999450683594
    6. '```' → logprob: -10.875999450683594
    7. 'print' → logprob: -11.625999450683594
    8. '	total' → logprob: -12.875999450683594
    9. '[' → logprob: -12.875999450683594
    10. '``' → logprob: -13.000999450683594

Token 137: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' (adapté à ' total') → logprob: -0.0017146894242614508
    2. 'for' → logprob: -6.376714706420898
    3. '   ' → logprob: -12.626714706420898
    4. ' total' → logprob: -12.876714706420898
    5. 'to' → logprob: -12.876714706420898
    6. 'am' → logprob: -13.251714706420898
    7. '
' → logprob: -14.876714706420898
    8. 'first' → logprob: -15.001714706420898
    9. 'answer' → logprob: -15.126714706420898
    10. 'last' → logprob: -15.376714706420898

Token 138: ' =' (ID: 314)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.15835542976856232
    2. '+=' → logprob: -2.408355474472046
    3. ' -=' → logprob: -3.283355474472046
    4. '-' → logprob: -4.033355236053467
    5. ' +=' → logprob: -7.408355236053467
    6. '=' → logprob: -7.408355236053467
    7. '+=(' → logprob: -10.158355712890625
    8. ' -' → logprob: -11.033355712890625
    9. ' =' → logprob: -13.283355712890625
    10. '+' → logprob: -13.408355712890625

Token 139: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.11323562264442444
    2. ' total' → logprob: -2.2382357120513916
    3. '(total' → logprob: -7.9882354736328125
    4. ' ' → logprob: -10.738235473632812
    5. ' (' → logprob: -11.363235473632812
    6. '   ' → logprob: -11.488235473632812
    7. 'tot' → logprob: -11.988235473632812
    8. 't' → logprob: -12.113235473632812
    9. '	total' → logprob: -12.488235473632812
    10. 'ten' → logprob: -13.113235473632812

Token 140: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.02646087482571602
    2. ' -' → logprob: -3.651460886001587
    3. '+' → logprob: -8.776460647583008
    4. '-(' → logprob: -13.276460647583008
    5. ' +' → logprob: -13.401460647583008
    6. '-total' → logprob: -13.401460647583008
    7. '-t' → logprob: -15.151460647583008
    8. '-am' → logprob: -15.276460647583008
    9. ' ' → logprob: -15.401460647583008
    10. '-int' → logprob: -16.276460647583008

Token 141: ' ' (ID: 220)
  Prédit: 'am'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'am' → logprob: -0.30854758620262146
    2. '(' → logprob: -1.8085476160049438
    3. '10' → logprob: -2.4335474967956543
    4. 'min' → logprob: -5.308547496795654
    5. 'amin' → logprob: -6.058547496795654
    6. ' am' → logprob: -6.183547496795654
    7. '(am' → logprob: -6.308547496795654
    8. ' (' → logprob: -7.183547496795654
    9. 'max' → logprob: -7.683547496795654
    10. ' ' → logprob: -8.058547973632812

Token 142: '10' (ID: 702)
  Prédit: 'am'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'am' → logprob: -0.08400529623031616
    2. '(' → logprob: -2.959005355834961
    3. 'min' → logprob: -4.459005355834961
    4. '10' → logprob: -4.584005355834961
    5. 'max' → logprob: -5.834005355834961
    6. 'amin' → logprob: -6.209005355834961
    7. '(am' → logprob: -7.084005355834961
    8. '(min' → logprob: -7.834005355834961
    9. ' am' → logprob: -8.584005355834961
    10. ' (' → logprob: -9.584005355834961

Token 143: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.011049113236367702
    2. ' +' → logprob: -4.511049270629883
    3. ' plus' → logprob: -15.011049270629883
    4. '0' → logprob: -15.636049270629883
    5. '   ' → logprob: -15.886049270629883
    6. '＋' → logprob: -16.261049270629883
    7. '+
' → logprob: -16.386049270629883
    8. 'plus' → logprob: -16.636049270629883
    9. '+k' → logprob: -17.011049270629883
    10. '+n' → logprob: -17.011049270629883

Token 144: ' am' (ID: 939)
  Prédit: 'am'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'am' → logprob: -0.008678862825036049
    2. ' am' → logprob: -4.758678913116455
    3. 'amar' → logprob: -11.383678436279297
    4. '   ' → logprob: -11.508678436279297
    5. 'amani' → logprob: -11.758678436279297
    6. '(' → logprob: -12.008678436279297
    7. '(am' → logprob: -12.008678436279297
    8. 'amarin' → logprob: -12.508678436279297
    9. 'aram' → logprob: -12.883678436279297
    10. 'min' → logprob: -13.008678436279297

Token 145: 'ari' (ID: 1683)
  Prédit: 'ari'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ari' → logprob: -7.226628895296017e-06
    2. 'a' → logprob: -12.375007629394531
    3. 'ar' → logprob: -13.500007629394531
    4. 'arri' → logprob: -14.375007629394531
    5. 'ари' → logprob: -15.625007629394531
    6. 'am' → logprob: -15.750007629394531
    7. '1' → logprob: -16.00000762939453
    8. 'ary' → logprob: -16.50000762939453
    9. 'ariam' → logprob: -16.62500762939453
    10. ' ari' → logprob: -16.62500762939453

Token 146: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.005693184677511454
    2. '_' → logprob: -5.255692958831787
    3. '[' → logprob: -8.630693435668945
    4. '_lst' → logprob: -9.505693435668945
    5. ' _' → logprob: -9.755693435668945
    6. ']' → logprob: -10.380693435668945
    7. ')' → logprob: -11.005693435668945
    8. '_i' → logprob: -11.380693435668945
    9. '_
' → logprob: -11.630693435668945
    10. 'List' → logprob: -11.755693435668945

Token 147: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0013842822518199682
    2. '[-' → logprob: -6.751384258270264
    3. '0' → logprob: -8.501384735107422
    4. '[len' → logprob: -12.876384735107422
    5. '.pop' → logprob: -13.001384735107422
    6. ' [' → logprob: -13.251384735107422
    7. '```' → logprob: -13.501384735107422
    8. 'pop' → logprob: -14.001384735107422
    9. '[
' → logprob: -15.126384735107422
    10. '\[' → logprob: -15.126384735107422

Token 148: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.012644199654459953
    2. '-' → logprob: -4.387644290924072
    3. ' -' → logprob: -9.512643814086914
    4. ' ' → logprob: -9.762643814086914
    5. '
' → logprob: -14.387643814086914
    6. '   ' → logprob: -14.575143814086914
    7. '-
' → logprob: -14.887643814086914
    8. 'len' → logprob: -15.700143814086914
    9. '  ' → logprob: -15.762643814086914
    10. ']' → logprob: -15.887643814086914

Token 149: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0017365860985592008
    2. ' )' → logprob: -6.501736640930176
    3. ')
' → logprob: -9.001736640930176
    4. ']' → logprob: -9.376736640930176
    5. '])' → logprob: -12.376736640930176
    6. '）' → logprob: -12.501736640930176
    7. ')return' → logprob: -12.501736640930176
    8. '}' → logprob: -12.626736640930176
    9. '0' → logprob: -13.251736640930176
    10. ')

' → logprob: -13.501736640930176

Token 150: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -4.961759259458631e-06
    2. ' print' → logprob: -12.250004768371582
    3. '
' → logprob: -16.1250057220459
    4. '```' → logprob: -20.5000057220459
    5. '  
' → logprob: -21.5000057220459
    6. '    
' → logprob: -21.5000057220459
    7. '(print' → logprob: -21.7500057220459
    8. ')
' → logprob: -21.8750057220459
    9. ' 
' → logprob: -22.0000057220459
    10. '#print' → logprob: -22.0000057220459

Token 151: '(total' (ID: 39744)
  Prédit: '(total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(total' → logprob: -0.01416398212313652
    2. '(' → logprob: -4.264163970947266
    3. 'total' → logprob: -14.764163970947266
    4. '(
' → logprob: -16.264163970947266
    5. '(t' → logprob: -17.264163970947266
    6. '()' → logprob: -18.389163970947266
    7. '(max' → logprob: -18.639163970947266
    8. '('' → logprob: -18.764163970947266
    9. '(

' → logprob: -18.764163970947266
    10. '((' → logprob: -19.639163970947266

Token 152: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.320199877838604e-07
    2. ' )' → logprob: -15.375
    3. ')
' → logprob: -17.375
    4. ')`' → logprob: -17.375
    5. '))' → logprob: -19.0
    6. '）' → logprob: -21.375
    7. ')#' → logprob: -21.5
    8. ')}' → logprob: -21.625
    9. '(' → logprob: -21.625
    10. ')**' → logprob: -21.625


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 150
Tokens correctement prédits (1ère position, stricte): 75
Tokens correctement prédits (1ère position, avec adaptation): 78
Tokens correctement prédits (top 10): 133
Précision stricte (1ère position): 50.00%
Précision adaptée (1ère position): 52.00%
Précision (top 10): 88.67%
================================================================================
