================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:16:20
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
X = int(input())
now = 100
ans = 0
while now < X:
    ans += 1
    now = now * 101 // 100
print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'X' (ID: 55)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.000925753265619278
    2. ''' → logprob: -7.375925540924072
    3. 'X' → logprob: -9.50092601776123
    4. '[' → logprob: -10.12592601776123
    5. ')' → logprob: -10.50092601776123
    6. '('' → logprob: -10.50092601776123
    7. '```' → logprob: -10.50092601776123
    8. '(
' → logprob: -11.00092601776123
    9. '`' → logprob: -11.12592601776123
    10. '"' → logprob: -11.12592601776123

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07195987552404404
    2. ')' → logprob: -2.696959972381592
    3. '()' → logprob: -6.946959972381592
    4. '())' → logprob: -7.696959972381592
    5. '(
' → logprob: -9.196959495544434
    6. '[' → logprob: -9.321959495544434
    7. '```' → logprob: -9.821959495544434
    8. '('' → logprob: -9.946959495544434
    9. '(X' → logprob: -10.196959495544434
    10. '(()' → logprob: -10.696959495544434

Token 5: 'now' (ID: 6201)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.02348608337342739
    2. '*' → logprob: -4.398486137390137
    3. '%' → logprob: -4.773486137390137
    4. '#' → logprob: -6.773486137390137
    5. '+
' → logprob: -8.148486137390137
    6. ')' → logprob: -8.398486137390137
    7. '\n' → logprob: -8.648486137390137
    8. 'if' → logprob: -8.648486137390137
    9. '**' → logprob: -8.773486137390137
    10. '>' → logprob: -10.023486137390137

Token 6: ' =' (ID: 314)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1474744975566864
    2. '*' → logprob: -2.147474527359009
    3. ')' → logprob: -5.27247428894043
    4. '(' → logprob: -5.64747428894043
    5. '**' → logprob: -5.89747428894043
    6. '=' → logprob: -6.27247428894043
    7. '%' → logprob: -6.39747428894043
    8. ' ' → logprob: -6.64747428894043
    9. '-' → logprob: -7.89747428894043
    10. '_' → logprob: -8.02247428894043

Token 7: ' ' (ID: 220)
  Prédit: ' X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' X' → logprob: -0.9174977540969849
    2. ' ' → logprob: -1.2924977540969849
    3. '0' → logprob: -1.5424977540969849
    4. 'X' → logprob: -2.4174976348876953
    5. '1' → logprob: -4.917497634887695
    6. ' input' → logprob: -5.167497634887695
    7. '"' → logprob: -6.167497634887695
    8. 'input' → logprob: -6.417497634887695
    9. ' now' → logprob: -6.417497634887695
    10. ' int' → logprob: -7.167497634887695

Token 8: '100' (ID: 1353)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.28928232192993164
    2. '0' → logprob: -1.4142823219299316
    3. 'input' → logprob: -6.289282321929932
    4. '1' → logprob: -6.414282321929932
    5. '"' → logprob: -6.664282321929932
    6. 'max' → logprob: -6.789282321929932
    7. 'int' → logprob: -6.914282321929932
    8. 'str' → logprob: -8.289281845092773
    9. 'now' → logprob: -8.539281845092773
    10. '10' → logprob: -9.164281845092773

Token 9: '
' (ID: 198)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.1154421716928482
    2. '%' → logprob: -3.3654422760009766
    3. '<|end|>' → logprob: -3.9904422760009766
    4. '0' → logprob: -4.865442276000977
    5. '+' → logprob: -4.990442276000977
    6. ')' → logprob: -5.115442276000977
    7. '```' → logprob: -5.115442276000977
    8. ' ' → logprob: -5.490442276000977
    9. '-' → logprob: -5.615442276000977
    10. '\' → logprob: -5.865442276000977

Token 10: 'ans' (ID: 616)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.6142195463180542
    2. 'if' → logprob: -1.1142195463180542
    3. 'for' → logprob: -3.2392196655273438
    4. '*' → logprob: -3.9892196655273438
    5. '```' → logprob: -3.9892196655273438
    6. ' while' → logprob: -4.364219665527344
    7. ' if' → logprob: -4.614219665527344
    8. '\n' → logprob: -4.739219665527344
    9. '%' → logprob: -5.489219665527344
    10. '`' → logprob: -5.739219665527344

Token 11: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6670426726341248
    2. ' =' → logprob: -1.0420427322387695
    3. ' +=' → logprob: -2.5420427322387695
    4. '_' → logprob: -3.4170427322387695
    5. '+=' → logprob: -4.4170427322387695
    6. ' ' → logprob: -5.0420427322387695
    7. '+' → logprob: -6.4170427322387695
    8. ')' → logprob: -7.6670427322387695
    9. ' *=' → logprob: -7.9170427322387695
    10. '*' → logprob: -8.04204273223877

Token 12: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4918009638786316
    2. ' ' → logprob: -1.6168010234832764
    3. ' now' → logprob: -2.1168010234832764
    4. 'now' → logprob: -2.9918010234832764
    5. ''' → logprob: -4.741800785064697
    6. ' X' → logprob: -5.991800785064697
    7. '(now' → logprob: -5.991800785064697
    8. '"' → logprob: -6.366800785064697
    9. ' max' → logprob: -6.866800785064697
    10. '100' → logprob: -6.866800785064697

Token 13: '0' (ID: 15)
  Prédit: 'now'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'now' → logprob: -0.6812233328819275
    2. '0' → logprob: -0.8062233328819275
    3. '100' → logprob: -3.6812233924865723
    4. 'max' → logprob: -4.681223392486572
    5. 'X' → logprob: -5.306223392486572
    6. '"' → logprob: -6.056223392486572
    7. 'abs' → logprob: -6.681223392486572
    8. '1' → logprob: -6.681223392486572
    9. '(now' → logprob: -7.056223392486572
    10. 'min' → logprob: -7.681223392486572

Token 14: '
' (ID: 198)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.3535703718662262
    2. '\n' → logprob: -1.6035703420639038
    3. 'if' → logprob: -3.1035704612731934
    4. ' while' → logprob: -3.6035704612731934
    5. '
' → logprob: -4.853570461273193
    6. '\' → logprob: -5.353570461273193
    7. '' → logprob: -5.853570461273193
    8. '```' → logprob: -5.853570461273193
    9. 'for' → logprob: -6.728570461273193
    10. ' 
' → logprob: -6.728570461273193

Token 15: 'while' (ID: 7032)
  Prédit: 'while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.08415424078702927
    2. 'if' → logprob: -2.5841541290283203
    3. 'for' → logprob: -5.95915412902832
    4. ' while' → logprob: -6.33415412902832
    5. '```' → logprob: -7.33415412902832
    6. '>' → logprob: -9.08415412902832
    7. ' if' → logprob: -10.08415412902832
    8. '``' → logprob: -10.45915412902832
    9. '`' → logprob: -10.83415412902832
    10. ')' → logprob: -12.33415412902832

Token 16: ' now' (ID: 1954)
  Prédit: ' X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' X' → logprob: -0.0471138171851635
    2. ' now' → logprob: -3.1721138954162598
    3. ' ' → logprob: -5.67211389541626
    4. 'X' → logprob: -7.67211389541626
    5. ' ' → logprob: -9.547113418579102
    6. 'now' → logprob: -9.797113418579102
    7. ' ans' → logprob: -10.672113418579102
    8. ' not' → logprob: -10.797113418579102
    9. ' (' → logprob: -11.797113418579102
    10. ' x' → logprob: -12.297113418579102

Token 17: ' <' (ID: 464)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.3559482991695404
    2. ' <' → logprob: -2.2309482097625732
    3. '>=' → logprob: -2.6059482097625732
    4. ' <=' → logprob: -2.8559482097625732
    5. '<' → logprob: -3.3559482097625732
    6. ' >' → logprob: -4.230948448181152
    7. '<=' → logprob: -4.855948448181152
    8. '>' → logprob: -5.855948448181152
    9. ' ' → logprob: -7.480948448181152
    10. '＜' → logprob: -11.105948448181152

Token 18: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.15112227201461792
    2. ' X' → logprob: -2.0261223316192627
    3. '=' → logprob: -5.276122093200684
    4. '100' → logprob: -6.026122093200684
    5. ' ' → logprob: -7.651122093200684
    6. '=X' → logprob: -8.276122093200684
    7. '>X' → logprob: -9.901122093200684
    8. ' =' → logprob: -10.901122093200684
    9. '10' → logprob: -11.276122093200684
    10. '	X' → logprob: -11.651122093200684

Token 19: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005362890660762787
    2. ' :' → logprob: -5.2553629875183105
    3. ':
' → logprob: -9.505362510681152
    4. '+:' → logprob: -10.005362510681152
    5. ' :
' → logprob: -12.880362510681152
    6. '+' → logprob: -13.130362510681152
    7. '：' → logprob: -13.630362510681152
    8. '*:' → logprob: -13.880362510681152
    9. ' and' → logprob: -14.505362510681152
    10. '*' → logprob: -14.755362510681152

Token 20: '   ' (ID: 271)
  Prédit: 'now'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'now' → logprob: -0.18153735995292664
    2. ' now' → logprob: -1.806537389755249
    3. '	now' → logprob: -6.68153715133667
    4. 'ans' → logprob: -8.806537628173828
    5. ' ans' → logprob: -9.306537628173828
    6. '_now' → logprob: -9.681537628173828
    7. '[now' → logprob: -9.806537628173828
    8. '   ' → logprob: -10.056537628173828
    9. '    ' → logprob: -10.806537628173828
    10. '(now' → logprob: -10.806537628173828

Token 21: ' ans' (ID: 3345)
  Prédit: 'now'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'now' → logprob: -0.09031213819980621
    2. ' now' → logprob: -2.4653122425079346
    3. 'ans' (adapté à ' ans') → logprob: -7.2153120040893555
    4. '   ' → logprob: -8.215312004089355
    5. ' ans' → logprob: -8.965312004089355
    6. '	now' → logprob: -8.965312004089355
    7. '100' → logprob: -10.465312004089355
    8. ' ' → logprob: -10.965312004089355
    9. '```' → logprob: -11.215312004089355
    10. '    ' → logprob: -11.590312004089355

Token 22: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.02994256280362606
    2. '+=' → logprob: -3.529942512512207
    3. ' =' → logprob: -9.029942512512207
    4. '=' → logprob: -11.029942512512207
    5. '   ' → logprob: -11.029942512512207
    6. '+' → logprob: -11.154942512512207
    7. '    ' → logprob: -11.904942512512207
    8. '```' → logprob: -12.279942512512207
    9. ' ' → logprob: -12.529942512512207
    10. ' *=' → logprob: -13.529942512512207

Token 23: ' ' (ID: 220)
  Prédit: 'now'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'now' → logprob: -0.932992160320282
    2. '100' → logprob: -1.4329922199249268
    3. '10' → logprob: -1.6829922199249268
    4. '1' → logprob: -1.9329922199249268
    5. ' ' → logprob: -4.057991981506348
    6. '(now' → logprob: -4.932991981506348
    7. '5' → logprob: -5.432991981506348
    8. ' now' → logprob: -5.432991981506348
    9. '50' → logprob: -7.182991981506348
    10. '2' → logprob: -7.307991981506348

Token 24: '1' (ID: 16)
  Prédit: 'now'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'now' → logprob: -0.32163572311401367
    2. '1' → logprob: -1.9466357231140137
    3. '5' → logprob: -2.5716357231140137
    4. '10' → logprob: -3.5716357231140137
    5. '(now' → logprob: -4.071635723114014
    6. 'ans' → logprob: -5.571635723114014
    7. ' ' → logprob: -6.446635723114014
    8. '(' → logprob: -6.821635723114014
    9. '100' → logprob: -6.946635723114014
    10. ' now' → logprob: -7.071635723114014

Token 25: '
' (ID: 198)
  Prédit: 'now'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'now' → logprob: -0.1197146400809288
    2. '   ' → logprob: -2.6197147369384766
    3. ' now' → logprob: -3.2447147369384766
    4. '	now' → logprob: -7.744714736938477
    5. '*' → logprob: -8.619714736938477
    6. '```' → logprob: -9.369714736938477
    7. '[now' → logprob: -9.494714736938477
    8. '  ' → logprob: -10.119714736938477
    9. '(now' → logprob: -10.369714736938477
    10. '    ' → logprob: -10.619714736938477

Token 26: '   ' (ID: 271)
  Prédit: 'now'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'now' → logprob: -0.024819884449243546
    2. ' now' → logprob: -4.149819850921631
    3. '   ' → logprob: -4.774819850921631
    4. '	now' → logprob: -9.024820327758789
    5. '```' → logprob: -10.024820327758789
    6. '*' → logprob: -10.024820327758789
    7. '3' → logprob: -11.399820327758789
    8. '[now' → logprob: -11.399820327758789
    9. '100' → logprob: -11.524820327758789
    10. '6' → logprob: -11.649820327758789

Token 27: ' now' (ID: 1954)
  Prédit: 'now'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'now' (adapté à ' now') → logprob: -0.008119356818497181
    2. ' now' → logprob: -4.883119583129883
    3. '*' → logprob: -8.258119583129883
    4. '	now' → logprob: -9.508119583129883
    5. '   ' → logprob: -9.633119583129883
    6. '_now' → logprob: -10.383119583129883
    7. '[now' → logprob: -11.008119583129883
    8. '```' → logprob: -11.133119583129883
    9. '*=' → logprob: -11.383119583129883
    10. '100' → logprob: -11.883119583129883

Token 28: ' =' (ID: 314)
  Prédit: '*='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*=' → logprob: -0.006686718203127384
    2. ' *=' → logprob: -5.256686687469482
    3. '=' → logprob: -6.631686687469482
    4. '+=' → logprob: -9.50668716430664
    5. '*' → logprob: -10.25668716430664
    6. '//=' → logprob: -11.13168716430664
    7. '   ' → logprob: -12.88168716430664
    8. ' =' → logprob: -12.88168716430664
    9. '```' → logprob: -13.38168716430664
    10. '	' → logprob: -14.13168716430664

Token 29: ' now' (ID: 1954)
  Prédit: 'now'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'now' → logprob: -0.00806389469653368
    2. ' now' → logprob: -4.883063793182373
    3. 'int' → logprob: -8.633064270019531
    4. '(now' → logprob: -9.133064270019531
    5. '	now' → logprob: -9.258064270019531
    6. '[now' → logprob: -10.383064270019531
    7. '   ' → logprob: -11.508064270019531
    8. '*' → logprob: -11.508064270019531
    9. '_now' → logprob: -11.758064270019531
    10. '10' → logprob: -12.383064270019531

Token 30: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.06205608323216438
    2. ' *' → logprob: -2.812056064605713
    3. ' +' → logprob: -9.562056541442871
    4. '+' → logprob: -11.062056541442871
    5. '**' → logprob: -14.312056541442871
    6. ' *=' → logprob: -15.062056541442871
    7. '*=' → logprob: -15.312056541442871
    8. ' ' → logprob: -15.562056541442871
    9. '*(' → logprob: -15.687056541442871
    10. '2' → logprob: -16.062055587768555

Token 31: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.03975282236933708
    2. '1' → logprob: -3.289752721786499
    3. '101' → logprob: -6.539752960205078
    4. '10' → logprob: -9.539752960205078
    5. '3' → logprob: -9.789752960205078
    6. '   ' → logprob: -10.164752960205078
    7. ' ' → logprob: -10.664752960205078
    8. '  ' → logprob: -11.164752960205078
    9. '```' → logprob: -11.414752960205078
    10. '98' → logprob: -11.789752960205078

Token 32: '101' (ID: 7959)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.03148967772722244
    2. '1' → logprob: -3.906489610671997
    3. '101' → logprob: -4.531489849090576
    4. '10' → logprob: -10.531489372253418
    5. '   ' → logprob: -10.656489372253418
    6. '3' → logprob: -10.781489372253418
    7. ' ' → logprob: -11.031489372253418
    8. '  ' → logprob: -11.281489372253418
    9. '```' → logprob: -12.031489372253418
    10. '98' → logprob: -13.031489372253418

Token 33: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.7558550238609314
    2. ' //' → logprob: -0.7558550238609314
    3. '0' → logprob: -4.255855083465576
    4. '100' → logprob: -4.505855083465576
    5. '<|end|>' → logprob: -4.505855083465576
    6. '/' → logprob: -4.630855083465576
    7. '00' → logprob: -5.255855083465576
    8. '```' → logprob: -5.630855083465576
    9. ' ' → logprob: -6.880855083465576
    10. '
' → logprob: -7.505855083465576

Token 34: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -1.3856492842023727e-06
    2. ' ' → logprob: -14.000000953674316
    3. '10' → logprob: -15.000000953674316
    4. '1' → logprob: -16.500001907348633
    5. '0' → logprob: -16.625001907348633
    6. '   ' → logprob: -17.750001907348633
    7. '  ' → logprob: -18.500001907348633
    8. '１００' → logprob: -18.750001907348633
    9. '00' → logprob: -19.625001907348633
    10. '000' → logprob: -20.250001907348633

Token 35: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -1.1472419600977446e-06
    2. '10' → logprob: -14.250000953674316
    3. ' ' → logprob: -15.000000953674316
    4. '1' → logprob: -16.625001907348633
    5. '0' → logprob: -17.250001907348633
    6. '１００' → logprob: -18.750001907348633
    7. '   ' → logprob: -19.500001907348633
    8. '  ' → logprob: -19.875001907348633
    9. '00' → logprob: -21.500001907348633
    10. '000' → logprob: -21.500001907348633

Token 36: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0011999934213235974
    2. '
' → logprob: -7.626200199127197
    3. '<|end|>' → logprob: -8.001199722290039
    4. ' print' → logprob: -8.376199722290039
    5. '\n' → logprob: -9.501199722290039
    6. '```' → logprob: -10.751199722290039
    7. ')' → logprob: -11.251199722290039
    8. '(print' → logprob: -11.876199722290039
    9. '<|end|>' → logprob: -11.876199722290039
    10. '\' → logprob: -12.001199722290039

Token 37: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.47899511456489563
    2. '\n' → logprob: -0.9789950847625732
    3. '\' → logprob: -5.603995323181152
    4. '\r' → logprob: -8.103995323181152
    5. '<|end|>' → logprob: -8.228995323181152
    6. '
' → logprob: -8.728995323181152
    7. ' print' → logprob: -8.728995323181152
    8. ')' → logprob: -8.978995323181152
    9. '```' → logprob: -9.978995323181152
    10. '(print' → logprob: -10.353995323181152

Token 38: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.20142823457717896
    2. '(' → logprob: -1.7014281749725342
    3. '()' → logprob: -12.201428413391113
    4. '(answer' → logprob: -12.701428413391113
    5. '('' → logprob: -12.951428413391113
    6. ' (' → logprob: -13.326428413391113
    7. 'ans' → logprob: -13.826428413391113
    8. '(
' → logprob: -14.701428413391113
    9. '(

' → logprob: -15.701428413391113
    10. '(now' → logprob: -15.701428413391113

Token 39: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9361264946837764e-07
    2. '))' → logprob: -16.75
    3. ')
' → logprob: -17.875
    4. ' )' → logprob: -17.875
    5. '`)' → logprob: -18.5
    6. ')`' → logprob: -18.625
    7. '）' → logprob: -18.875
    8. '')' → logprob: -19.5
    9. '}' → logprob: -20.125
    10. ')}' → logprob: -20.75


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 37
Tokens correctement prédits (1ère position, stricte): 6
Tokens correctement prédits (1ère position, avec adaptation): 7
Tokens correctement prédits (top 10): 29
Précision stricte (1ère position): 16.22%
Précision adaptée (1ère position): 18.92%
Précision (top 10): 78.38%
================================================================================
