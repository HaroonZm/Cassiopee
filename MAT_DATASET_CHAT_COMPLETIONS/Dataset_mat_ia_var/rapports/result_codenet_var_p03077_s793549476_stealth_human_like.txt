================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:03:42
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import math

n = int(input())
a = int(input())
b = int(input())
c = int(input())
d = int(input())
e = int(input())

# franchement, on pourrait faire mieux ici mais bon ça passe
liste = [a, b, c, d, e]
min_num = min(liste)

# j'utilise encore math parce que c'est plus sûr
x = n // min_num
if n % min_num != 0:
    x += 1

# 4 c'est la constante magique ici on dirait bien ^^  
print(x+4)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' math' (ID: 13324)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'n' (ID: 77)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.002430951688438654
    2. '```' → logprob: -7.2524309158325195
    3. '\n' → logprob: -7.3774309158325195
    4. '\' → logprob: -7.8774309158325195
    5. 'import' → logprob: -8.00243091583252
    6. '<|end|>' → logprob: -9.25243091583252
    7. '.pi' → logprob: -10.25243091583252
    8. 'a' → logprob: -11.00243091583252
    9. '.e' → logprob: -11.12743091583252
    10. '<|end|>' → logprob: -11.12743091583252

Token 4: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.7463604807853699
    2. '_' → logprob: -1.3713605403900146
    3. ' ' → logprob: -2.1213605403900146
    4. ')' → logprob: -2.9963605403900146
    5. '=' → logprob: -3.3713605403900146
    6. 'u' → logprob: -3.9963605403900146
    7. ',' → logprob: -4.4963603019714355
    8. 'a' → logprob: -4.7463603019714355
    9. 'e' → logprob: -5.1213603019714355
    10. ' =' → logprob: -5.2463603019714355

Token 5: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.005524373147636652
    2. '10' → logprob: -5.755524158477783
    3. ' int' → logprob: -6.755524158477783
    4. '0' → logprob: -7.880524158477783
    5. 'int' → logprob: -8.255524635314941
    6. '1' → logprob: -8.380524635314941
    7. '5' → logprob: -8.630524635314941
    8. ' math' → logprob: -10.130524635314941
    9. '20' → logprob: -10.505524635314941
    10. '42' → logprob: -11.505524635314941

Token 6: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0001158211671281606
    2. '('' → logprob: -10.500115394592285
    3. ''' → logprob: -10.625115394592285
    4. ')' → logprob: -11.375115394592285
    5. '(n' → logprob: -11.625115394592285
    6. '()' → logprob: -11.750115394592285
    7. '```' → logprob: -11.750115394592285
    8. ' (' → logprob: -11.875115394592285
    9. '("("' → logprob: -12.000115394592285
    10. '(
' → logprob: -12.250115394592285

Token 7: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4853132367134094
    2. ')' → logprob: -0.9853132367134094
    3. '()' → logprob: -4.735313415527344
    4. '())' → logprob: -6.735313415527344
    5. '(
' → logprob: -7.735313415527344
    6. '))' → logprob: -8.860313415527344
    7. '('' → logprob: -8.985313415527344
    8. '")' → logprob: -9.235313415527344
    9. '')' → logprob: -9.735313415527344
    10. '```' → logprob: -9.735313415527344

Token 8: 'a' (ID: 64)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.9119911193847656
    2. '`' → logprob: -2.2869911193847656
    3. 's' → logprob: -2.5369911193847656
    4. ')' → logprob: -2.9119911193847656
    5. ' ' → logprob: -2.9119911193847656
    6. 'x' → logprob: -3.4119911193847656
    7. '*' → logprob: -3.4119911193847656
    8. '```' → logprob: -3.5369911193847656
    9. 'f' → logprob: -3.9119911193847656
    10. 'for' → logprob: -3.9119911193847656

Token 9: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0021464545279741287
    2. '[a' → logprob: -7.752146244049072
    3. '[i' → logprob: -8.00214672088623
    4. 'a' → logprob: -8.12714672088623
    5. '[]' → logprob: -8.37714672088623
    6. '[n' → logprob: -8.50214672088623
    7. '.' → logprob: -8.87714672088623
    8. '\[' → logprob: -9.50214672088623
    9. '[:]' → logprob: -10.00214672088623
    10. ')' → logprob: -10.00214672088623

Token 10: ' int' (ID: 677)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.6447702646255493
    2. ' []' → logprob: -1.0197702646255493
    3. '[' → logprob: -2.3947701454162598
    4. '[]' → logprob: -4.14477014541626
    5. ' list' → logprob: -6.01977014541626
    6. '[int' → logprob: -6.51977014541626
    7. '[input' → logprob: -6.64477014541626
    8. 'list' → logprob: -7.39477014541626
    9. ' ' → logprob: -7.76977014541626
    10. '[n' → logprob: -8.019770622253418

Token 11: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.003002423793077469
    2. ' ' → logprob: -7.128002643585205
    3. ')' → logprob: -7.753002643585205
    4. ''' → logprob: -7.753002643585205
    5. ' (' → logprob: -7.878002643585205
    6. '('' → logprob: -8.503002166748047
    7. '[' → logprob: -8.503002166748047
    8. '32' → logprob: -9.003002166748047
    9. '()' → logprob: -9.128002166748047
    10. 'a' → logprob: -9.128002166748047

Token 12: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.39764443039894104
    2. '()' → logprob: -1.6476444005966187
    3. '())' → logprob: -2.022644519805908
    4. '(' → logprob: -5.772644519805908
    5. 'a' → logprob: -9.77264404296875
    6. ' )' → logprob: -10.14764404296875
    7. ' ())' → logprob: -10.89764404296875
    8. ' ' → logprob: -11.14764404296875
    9. '))' → logprob: -11.52264404296875
    10. '`)' → logprob: -11.64764404296875

Token 13: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.02110896445810795
    2. 's' → logprob: -5.646109104156494
    3. 'if' → logprob: -6.021109104156494
    4. '+' → logprob: -6.396109104156494
    5. ' b' → logprob: -6.396109104156494
    6. '**' → logprob: -6.521109104156494
    7. 'result' → logprob: -6.771109104156494
    8. 'pow' → logprob: -7.021109104156494
    9. ')' → logprob: -7.146109104156494
    10. '*' → logprob: -7.146109104156494

Token 14: ' =' (ID: 314)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.0854761600494385
    2. ' ' → logprob: -1.2104761600494385
    3. ')' → logprob: -1.5854761600494385
    4. '=' → logprob: -2.3354761600494385
    5. '_' → logprob: -4.210475921630859
    6. '[' → logprob: -4.585475921630859
    7. '*' → logprob: -4.710475921630859
    8. '<|end|>' → logprob: -4.960475921630859
    9. ' +' → logprob: -5.210475921630859
    10. ' =' → logprob: -5.335475921630859

Token 15: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.8305042386054993
    2. ' math' → logprob: -1.0805041790008545
    3. ' a' → logprob: -2.5805041790008545
    4. 'a' → logprob: -3.2055041790008545
    5. 'int' → logprob: -3.2055041790008545
    6. 'math' → logprob: -3.2055041790008545
    7. ' n' → logprob: -4.580504417419434
    8. ' ' → logprob: -4.830504417419434
    9. ' input' → logprob: -5.455504417419434
    10. 'n' → logprob: -6.330504417419434

Token 16: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -7.266944157890975e-05
    2. '(
' → logprob: -10.750072479248047
    3. ' (' → logprob: -10.875072479248047
    4. '(a' → logprob: -12.250072479248047
    5. ''' → logprob: -12.500072479248047
    6. '('' → logprob: -12.500072479248047
    7. '(

' → logprob: -12.625072479248047
    8. '(input' → logprob: -12.875072479248047
    9. '```' → logprob: -12.875072479248047
    10. '((' → logprob: -13.125072479248047

Token 17: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004168745130300522
    2. '()' → logprob: -5.629168510437012
    3. '())' → logprob: -7.629168510437012
    4. '`)' → logprob: -9.754168510437012
    5. '')' → logprob: -12.129168510437012
    6. ' )' → logprob: -12.254168510437012
    7. '))' → logprob: -12.504168510437012
    8. ')
' → logprob: -12.629168510437012
    9. '(' → logprob: -12.879168510437012
    10. '")' → logprob: -13.379168510437012

Token 18: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.15636524558067322
    2. 's' → logprob: -2.656365156173706
    3. 'x' → logprob: -3.281365156173706
    4. '\n' → logprob: -5.281365394592285
    5. 'result' → logprob: -5.406365394592285
    6. 'g' → logprob: -5.406365394592285
    7. 'if' → logprob: -5.656365394592285
    8. 'm' → logprob: -5.656365394592285
    9. 'd' → logprob: -6.156365394592285
    10. '#' → logprob: -6.406365394592285

Token 19: ' =' (ID: 314)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8113152384757996
    2. '+' → logprob: -1.4363152980804443
    3. ' ' → logprob: -2.4363152980804443
    4. '.' → logprob: -2.6863152980804443
    5. '*' → logprob: -3.1863152980804443
    6. '=' → logprob: -3.3113152980804443
    7. ' =' → logprob: -4.561315059661865
    8. 'a' → logprob: -4.561315059661865
    9. ' +' → logprob: -4.561315059661865
    10. ' )' → logprob: -4.561315059661865

Token 20: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.3442704379558563
    2. ' a' → logprob: -1.7192704677581787
    3. ' ' → logprob: -2.8442704677581787
    4. ' math' → logprob: -3.8442704677581787
    5. 'a' → logprob: -4.3442702293396
    6. ' n' → logprob: -4.8442702293396
    7. 'int' → logprob: -5.0942702293396
    8. ' (' → logprob: -6.5942702293396
    9. ' m' → logprob: -7.4692702293396
    10. ' 
' → logprob: -7.4692702293396

Token 21: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.32475972175598145
    2. '.' → logprob: -1.3247597217559814
    3. ')' → logprob: -4.824759483337402
    4. '<|end|>' → logprob: -7.449759483337402
    5. ' (' → logprob: -7.699759483337402
    6. '[' → logprob: -7.824759483337402
    7. '```' → logprob: -7.949759483337402
    8. ''' → logprob: -8.074759483337402
    9. '(input' → logprob: -9.199759483337402
    10. ',' → logprob: -9.324759483337402

Token 22: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.029089083895087242
    2. '()' → logprob: -4.029088973999023
    3. '())' → logprob: -4.529088973999023
    4. '(' → logprob: -10.904088973999023
    5. ')
' → logprob: -11.029088973999023
    6. '()
' → logprob: -11.154088973999023
    7. '))' → logprob: -11.404088973999023
    8. '`)' → logprob: -11.529088973999023
    9. ' )' → logprob: -11.779088973999023
    10. '')' → logprob: -13.029088973999023

Token 23: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.5700328350067139
    2. 's' → logprob: -1.5700328350067139
    3. 'max' → logprob: -2.070032835006714
    4. 'dp' → logprob: -2.070032835006714
    5. 'x' → logprob: -2.445032835006714
    6. '\n' → logprob: -2.695032835006714
    7. 't' → logprob: -3.195032835006714
    8. 'm' → logprob: -3.320032835006714
    9. '
' → logprob: -3.570032835006714
    10. 'n' → logprob: -4.070033073425293

Token 24: ' =' (ID: 314)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4161612391471863
    2. ')' → logprob: -1.791161298751831
    3. '+' → logprob: -1.916161298751831
    4. ' )' → logprob: -4.791161060333252
    5. '=' → logprob: -5.541161060333252
    6. ' +' → logprob: -5.666161060333252
    7. ' =' → logprob: -6.041161060333252
    8. '  ' → logprob: -6.416161060333252
    9. '<|end|>' → logprob: -6.541161060333252
    10. '.' → logprob: -6.916161060333252

Token 25: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6920675039291382
    2. ' max' → logprob: -1.5670675039291382
    3. ' a' → logprob: -2.4420676231384277
    4. ' int' → logprob: -3.0670676231384277
    5. 'a' → logprob: -3.3170676231384277
    6. ' n' → logprob: -3.4420676231384277
    7. 'max' → logprob: -3.5670676231384277
    8. ' math' → logprob: -4.067067623138428
    9. ' (' → logprob: -4.567067623138428
    10. 'n' → logprob: -5.317067623138428

Token 26: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005172681529074907
    2. '.' → logprob: -5.8801727294921875
    3. '(input' → logprob: -7.1301727294921875
    4. ' (' → logprob: -7.3801727294921875
    5. ')' → logprob: -8.005172729492188
    6. '('' → logprob: -9.130172729492188
    7. '()' → logprob: -9.255172729492188
    8. '[' → logprob: -9.380172729492188
    9. '(
' → logprob: -10.380172729492188
    10. '(space' → logprob: -10.380172729492188

Token 27: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00018685187387745827
    2. '()' → logprob: -8.875186920166016
    3. '())' → logprob: -10.625186920166016
    4. '))' → logprob: -11.625186920166016
    5. '`)' → logprob: -11.875186920166016
    6. '')' → logprob: -12.375186920166016
    7. ')
' → logprob: -13.875186920166016
    8. ' )' → logprob: -14.375186920166016
    9. '")' → logprob: -14.750186920166016
    10. '）' → logprob: -15.125186920166016

Token 28: 'e' (ID: 68)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.758160412311554
    2. '\' → logprob: -1.7581603527069092
    3. 'e' → logprob: -2.133160352706909
    4. 'max' → logprob: -3.008160352706909
    5. 's' → logprob: -3.133160352706909
    6. 'if' → logprob: -3.508160352706909
    7. 'x' → logprob: -3.508160352706909
    8. 'n' → logprob: -4.008160591125488
    9. ' 
' → logprob: -4.133160591125488
    10. 'w' → logprob: -5.133160591125488

Token 29: ' =' (ID: 314)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.8029842972755432
    2. ')' → logprob: -1.3029842376708984
    3. ' ' → logprob: -2.4279842376708984
    4. '*' → logprob: -3.3029842376708984
    5. ' =' → logprob: -3.3029842376708984
    6. ' +' → logprob: -3.5529842376708984
    7. '(' → logprob: -3.9279842376708984
    8. ' *' → logprob: -4.177984237670898
    9. '=' → logprob: -4.302984237670898
    10. ' )' → logprob: -4.302984237670898

Token 30: ' int' (ID: 677)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -1.1150977611541748
    2. ' math' → logprob: -1.3650977611541748
    3. ' int' → logprob: -2.240097761154175
    4. ' n' → logprob: -2.365097761154175
    5. 'a' → logprob: -2.865097761154175
    6. ' max' → logprob: -2.990097761154175
    7. ' min' → logprob: -2.990097761154175
    8. ' (' → logprob: -4.115097999572754
    9. ' ' → logprob: -4.490097999572754
    10. 'math' → logprob: -4.615097999572754

Token 31: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005289373453706503
    2. '(input' → logprob: -5.630289554595947
    3. '.' → logprob: -7.380289554595947
    4. ' (' → logprob: -7.880289554595947
    5. '```' → logprob: -8.880289077758789
    6. '(space' → logprob: -9.130289077758789
    7. '()' → logprob: -9.755289077758789
    8. ')' → logprob: -9.755289077758789
    9. '(x' → logprob: -9.755289077758789
    10. '(int' → logprob: -10.380289077758789

Token 32: '())

' (ID: 27654)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001533428207039833
    2. '()' → logprob: -6.876533508300781
    3. '())' → logprob: -7.626533508300781
    4. '`)' → logprob: -12.376533508300781
    5. '')' → logprob: -13.001533508300781
    6. '))' → logprob: -13.126533508300781
    7. ' )' → logprob: -13.376533508300781
    8. ')
' → logprob: -13.501533508300781
    9. '")' → logprob: -13.876533508300781
    10. '）' → logprob: -15.376533508300781

Token 33: '#' (ID: 2)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.7047135829925537
    2. 's' → logprob: -2.4547135829925537
    3. 'n' → logprob: -2.5797135829925537
    4. 'f' → logprob: -2.5797135829925537
    5. '
' → logprob: -2.7047135829925537
    6. '\' → logprob: -3.2047135829925537
    7. 'max' → logprob: -3.5797135829925537
    8. 'x' → logprob: -3.5797135829925537
    9. 't' → logprob: -3.7047135829925537
    10. ' 
' → logprob: -4.079713821411133

Token 34: ' franchement' (ID: 182681)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -2.1003568172454834
    2. ' max' → logprob: -2.3503568172454834
    3. 'result' → logprob: -2.3503568172454834
    4. 'max' → logprob: -2.3503568172454834
    5. 'total' → logprob: -2.3503568172454834
    6. ' min' → logprob: -2.4753568172454834
    7. ' total' → logprob: -2.6003568172454834
    8. 'min' → logprob: -2.7253568172454834
    9. ' result' → logprob: -2.8503568172454834
    10. ' x' → logprob: -3.6003568172454834

Token 35: ',' (ID: 11)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.2365128993988037
    2. 'm' → logprob: -2.2365128993988037
    3. 'x' → logprob: -2.2365128993988037
    4. 'n' → logprob: -2.3615128993988037
    5. ' max' → logprob: -2.7365128993988037
    6. 'min' → logprob: -2.8615128993988037
    7. 'total' → logprob: -3.2365128993988037
    8. 's' → logprob: -3.2365128993988037
    9. 't' → logprob: -3.7365128993988037
    10. 'r' → logprob: -3.9865128993988037

Token 36: ' on' (ID: 402)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.4151447117328644
    2. ' min' → logprob: -2.165144681930542
    3. ' m' → logprob: -2.915144681930542
    4. ' total' → logprob: -3.415144681930542
    5. ' x' → logprob: -3.665144681930542
    6. ' n' → logprob: -4.040144920349121
    7. 'max' → logprob: -4.290144920349121
    8. ' t' → logprob: -4.665144920349121
    9. ' result' → logprob: -4.665144920349121
    10. ' ans' → logprob: -4.915144920349121

Token 37: ' pourrait' (ID: 39622)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.778225302696228
    2. ' a' → logprob: -0.903225302696228
    3. ' veut' → logprob: -3.5282254219055176
    4. ' va' → logprob: -3.7782254219055176
    5. ' n' → logprob: -4.028225421905518
    6. ' ' → logprob: -4.153225421905518
    7. ' peut' → logprob: -4.528225421905518
    8. 'a' → logprob: -5.028225421905518
    9. ' pense' → logprob: -5.653225421905518
    10. ' calc' → logprob: -5.778225421905518

Token 38: ' faire' (ID: 8119)
  Prédit: ' calcul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' calcul' → logprob: -1.479817509651184
    2. ' ' → logprob: -1.729817509651184
    3. ' max' → logprob: -2.1048173904418945
    4. ' utiliser' → logprob: -2.7298173904418945
    5. 'calcul' → logprob: -3.1048173904418945
    6. 'max' → logprob: -3.4798173904418945
    7. 'contin' → logprob: -3.6048173904418945
    8. ' faire' → logprob: -3.8548173904418945
    9. ' a' → logprob: -3.9798173904418945
    10. 'a' → logprob: -3.9798173904418945

Token 39: ' mieux' (ID: 26345)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.2569563388824463
    2. ' max' → logprob: -1.6319563388824463
    3. ' ' → logprob: -2.3819563388824463
    4. ' =' → logprob: -3.0069563388824463
    5. 'x' → logprob: -3.2569563388824463
    6. 'total' → logprob: -3.2569563388824463
    7. 'min' → logprob: -3.5069563388824463
    8. 's' → logprob: -3.8819563388824463
    9. 'result' → logprob: -4.131956100463867
    10. 'n' → logprob: -4.131956100463867

Token 40: ' ici' (ID: 27994)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.2019613981246948
    2. 'total' → logprob: -1.7019613981246948
    3. 'x' → logprob: -2.2019615173339844
    4. 's' → logprob: -2.8269615173339844
    5. 'n' → logprob: -2.9519615173339844
    6. 'min' → logprob: -3.7019615173339844
    7. 'm' → logprob: -3.7019615173339844
    8. 't' → logprob: -4.076961517333984
    9. 'result' → logprob: -4.076961517333984
    10. 'if' → logprob: -4.326961517333984

Token 41: ' mais' (ID: 2899)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.0330477952957153
    2. 'total' → logprob: -2.408047676086426
    3. 'x' → logprob: -2.783047676086426
    4. 'result' → logprob: -2.908047676086426
    5. 'min' → logprob: -2.908047676086426
    6. 'n' → logprob: -3.033047676086426
    7. ' max' → logprob: -3.033047676086426
    8. 's' → logprob: -3.158047676086426
    9. '\n' → logprob: -3.283047676086426
    10. ' 
' → logprob: -4.033047676086426

Token 42: ' bon' (ID: 4846)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.2789875566959381
    2. ' result' → logprob: -1.9039875268936157
    3. ' total' → logprob: -3.5289876461029053
    4. 'result' → logprob: -4.403987407684326
    5. ' ans' → logprob: -4.778987407684326
    6. 'max' → logprob: -5.028987407684326
    7. ' ' → logprob: -5.403987407684326
    8. ' =' → logprob: -5.653987407684326
    9. ' n' → logprob: -5.778987407684326
    10. 'n' → logprob: -5.778987407684326

Token 43: ' ça' (ID: 13590)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.2687561511993408
    2. 'total' → logprob: -1.2687561511993408
    3. 'result' → logprob: -2.518756151199341
    4. 'x' → logprob: -3.143756151199341
    5. 'min' → logprob: -3.518756151199341
    6. 'm' → logprob: -3.768756151199341
    7. 'n' → logprob: -3.893756151199341
    8. 'f' → logprob: -4.018755912780762
    9. 's' → logprob: -4.268755912780762
    10. 'if' → logprob: -4.518755912780762

Token 44: ' passe' (ID: 22210)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.29010918736457825
    2. '=' → logprob: -2.665109157562256
    3. '\n' → logprob: -3.040109157562256
    4. 's' → logprob: -3.415109157562256
    5. 'n' → logprob: -4.040109157562256
    6. '\' → logprob: -4.540109157562256
    7. ' ' → logprob: -4.665109157562256
    8. ' 

' → logprob: -4.915109157562256
    9. 'max' → logprob: -4.915109157562256
    10. ' 
' → logprob: -5.040109157562256

Token 45: '
' (ID: 198)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -1.2244846820831299
    2. 'max' → logprob: -1.4744846820831299
    3. 'min' → logprob: -2.72448468208313
    4. 'x' → logprob: -3.09948468208313
    5. 'result' → logprob: -3.09948468208313
    6. 'if' → logprob: -3.47448468208313
    7. 's' → logprob: -3.47448468208313
    8. 'f' → logprob: -3.72448468208313
    9. 'n' → logprob: -3.84948468208313
    10. 'm' → logprob: -3.84948468208313

Token 46: 'liste' (ID: 69656)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.296908974647522
    2. 'total' → logprob: -1.546908974647522
    3. 'min' → logprob: -2.5469088554382324
    4. 'x' → logprob: -2.6719088554382324
    5. 'if' → logprob: -2.9219088554382324
    6. 'n' → logprob: -2.9219088554382324
    7. 'result' → logprob: -3.1719088554382324
    8. 'res' → logprob: -4.046908855438232
    9. 's' → logprob: -4.046908855438232
    10. 'm' → logprob: -4.171908855438232

Token 47: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.41074615716934204
    2. '_' → logprob: -1.2857460975646973
    3. '=' → logprob: -2.9107460975646973
    4. ' ' → logprob: -5.910746097564697
    5. 's' → logprob: -7.035746097564697
    6. '_de' → logprob: -7.285746097564697
    7. '_space' → logprob: -8.785746574401855
    8. '=[]' → logprob: -9.035746574401855
    9. ' =[' → logprob: -9.285746574401855
    10. 'a' → logprob: -9.285746574401855

Token 48: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8153954744338989
    2. ' [' → logprob: -0.8153954744338989
    3. '[a' → logprob: -2.4403953552246094
    4. '[min' → logprob: -4.190395355224609
    5. '[list' → logprob: -5.690395355224609
    6. '[max' → logprob: -5.815395355224609
    7. '[m' → logprob: -5.940395355224609
    8. '[]' → logprob: -7.190395355224609
    9. '[
' → logprob: -7.565395355224609
    10. '[n' → logprob: -8.06539535522461

Token 49: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.017787441611289978
    2. 'math' → logprob: -4.267787456512451
    3. 'n' → logprob: -6.267787456512451
    4. ' a' → logprob: -7.642787456512451
    5. 'max' → logprob: -7.892787456512451
    6. '(a' → logprob: -8.392786979675293
    7. ' math' → logprob: -8.392786979675293
    8. 'e' → logprob: -9.267786979675293
    9. '(math' → logprob: -9.767786979675293
    10. ' ' → logprob: -10.267786979675293

Token 50: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.017095692455768585
    2. ' ,' → logprob: -4.517095565795898
    3. ',b' → logprob: -5.142095565795898
    4. ' ' → logprob: -10.267095565795898
    5. ',n' → logprob: -10.517095565795898
    6. ',d' → logprob: -10.892095565795898
    7. ',c' → logprob: -11.017095565795898
    8. ',a' → logprob: -11.142095565795898
    9. '//' → logprob: -11.517095565795898
    10. '+' → logprob: -11.767095565795898

Token 51: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.023247458040714264
    2. ' b' → logprob: -3.773247480392456
    3. ' ' → logprob: -13.273247718811035
    4. '	b' → logprob: -15.523247718811035
    5. ',b' → logprob: -18.39824676513672
    6. '   ' → logprob: -18.52324676513672
    7. ')b' → logprob: -18.77324676513672
    8. 'a' → logprob: -18.89824676513672
    9. 'c' → logprob: -19.02324676513672
    10. ',' → logprob: -19.14824676513672

Token 52: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007086210534907877
    2. ',c' → logprob: -7.62570858001709
    3. ' ,' → logprob: -8.50070858001709
    4. 'c' → logprob: -11.50070858001709
    5. ',
' → logprob: -12.37570858001709
    6. ')' → logprob: -13.75070858001709
    7. ']' → logprob: -14.87570858001709
    8. ' ' → logprob: -15.00070858001709
    9. '<|end|>' → logprob: -15.12570858001709
    10. ',d' → logprob: -16.500709533691406

Token 53: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.4740821421146393
    2. ' c' → logprob: -0.9740821123123169
    3. ' ' → logprob: -12.849081993103027
    4. '	c' → logprob: -13.224081993103027
    5. ',c' → logprob: -15.474081993103027
    6. ' ' → logprob: -15.724081993103027
    7. '_c' → logprob: -15.974081993103027
    8. ',' → logprob: -16.474082946777344
    9. ')c' → logprob: -16.474082946777344
    10. ' ,' → logprob: -17.724082946777344

Token 54: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013321444857865572
    2. ',d' → logprob: -6.7513322830200195
    3. ' ,' → logprob: -8.75133228302002
    4. 'd' → logprob: -13.12633228302002
    5. ',
' → logprob: -14.25133228302002
    6. ' ' → logprob: -14.87633228302002
    7. ']' → logprob: -15.00133228302002
    8. ')' → logprob: -15.75133228302002
    9. ',e' → logprob: -17.501331329345703
    10. '‌,' → logprob: -17.626331329345703

Token 55: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.4741078019142151
    2. 'd' → logprob: -0.9741078019142151
    3. ' ' → logprob: -10.59910774230957
    4. ',' → logprob: -13.47410774230957
    5. ',d' → logprob: -13.47410774230957
    6. ' ,' → logprob: -14.09910774230957
    7. ' ' → logprob: -14.22410774230957
    8. '	d' → logprob: -14.59910774230957
    9. '_d' → logprob: -15.22410774230957
    10. 's' → logprob: -15.59910774230957

Token 56: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003335275687277317
    2. ',e' → logprob: -5.753335475921631
    3. ' ,' → logprob: -9.128334999084473
    4. 'e' → logprob: -10.253334999084473
    5. ']' → logprob: -11.503334999084473
    6. ' ' → logprob: -14.003334999084473
    7. ')' → logprob: -14.003334999084473
    8. ',
' → logprob: -14.253334999084473
    9. ' e' → logprob: -15.003334999084473
    10. '```' → logprob: -16.12833595275879

Token 57: ' e' (ID: 319)
  Prédit: ' e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' e' → logprob: -0.6326056122779846
    2. 'e' → logprob: -0.7576056122779846
    3. '	e' → logprob: -12.63260555267334
    4. ' ' → logprob: -14.13260555267334
    5. ',e' → logprob: -14.13260555267334
    6. '_e' → logprob: -14.75760555267334
    7. ' ' → logprob: -14.88260555267334
    8. ',' → logprob: -15.13260555267334
    9. ''e' → logprob: -16.007606506347656
    10. ')e' → logprob: -16.195106506347656

Token 58: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -9.627176768844947e-05
    2. ',' → logprob: -10.250096321105957
    3. ' ]' → logprob: -10.250096321105957
    4. ')' → logprob: -11.000096321105957
    5. ']
' → logprob: -12.250096321105957
    6. '])' → logprob: -13.125096321105957
    7. ')]' → logprob: -14.625096321105957
    8. ']

' → logprob: -14.625096321105957
    9. ',
' → logprob: -15.000096321105957
    10. '],' → logprob: -15.750096321105957

Token 59: 'min' (ID: 1493)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.9826033115386963
    2. 'liste' → logprob: -1.6076033115386963
    3. 'print' → logprob: -2.7326033115386963
    4. 'm' → logprob: -2.9826033115386963
    5. 'min' → logprob: -3.1076033115386963
    6. 'while' → logprob: -3.2326033115386963
    7. 'total' → logprob: -3.6076033115386963
    8. 'count' → logprob: -3.7326033115386963
    9. 's' → logprob: -3.7326033115386963
    10. 'for' → logprob: -3.8576033115386963

Token 60: '_num' (ID: 9834)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.12169332057237625
    2. '_val' → logprob: -2.4966933727264404
    3. '_l' → logprob: -4.121693134307861
    4. '_value' → logprob: -4.371693134307861
    5. '_v' → logprob: -6.871693134307861
    6. '_list' → logprob: -7.996693134307861
    7. '_len' → logprob: -7.996693134307861
    8. 'imum' → logprob: -7.996693134307861
    9. '(' → logprob: -8.87169361114502
    10. '_elem' → logprob: -9.49669361114502

Token 61: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04639905318617821
    2. '=' → logprob: -3.7963991165161133
    3. '_' → logprob: -4.546399116516113
    4. 'ber' → logprob: -4.546399116516113
    5. 's' → logprob: -7.046399116516113
    6. 'er' → logprob: -7.796399116516113
    7. 'bers' → logprob: -9.046399116516113
    8. ' ' → logprob: -9.046399116516113
    9. '=_' → logprob: -10.421399116516113
    10. '_=' → logprob: -10.796399116516113

Token 62: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.02613842487335205
    2. 'min' → logprob: -4.0261383056640625
    3. ' math' → logprob: -5.1511383056640625
    4. ' max' → logprob: -6.2761383056640625
    5. 'math' → logprob: -9.151138305664062
    6. 'max' → logprob: -9.526138305664062
    7. ' float' → logprob: -9.901138305664062
    8. ' ' → logprob: -11.151138305664062
    9. '100' → logprob: -12.401138305664062
    10. ' a' → logprob: -12.526138305664062

Token 63: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.0381050631403923
    2. '(' → logprob: -3.288105010986328
    3. '(a' → logprob: -10.913105010986328
    4. '(n' → logprob: -11.538105010986328
    5. ' (' → logprob: -11.913105010986328
    6. '(
' → logprob: -11.913105010986328
    7. '([' → logprob: -12.038105010986328
    8. '(lst' → logprob: -12.788105010986328
    9. '(lista' → logprob: -12.913105010986328
    10. '(s' → logprob: -13.163105010986328

Token 64: 'iste' (ID: 4872)
  Prédit: 'iste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iste' → logprob: -0.01437691505998373
    2. 'ist' → logprob: -4.264377117156982
    3. '(' → logprob: -9.889376640319824
    4. 'ite' → logprob: -10.014376640319824
    5. 'is' → logprob: -10.389376640319824
    6. 'liste' → logprob: -11.014376640319824
    7. '[' → logprob: -11.264376640319824
    8. 'ste' → logprob: -11.264376640319824
    9. ')' → logprob: -11.514376640319824
    10. 'ise' → logprob: -11.764376640319824

Token 65: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005998577689751983
    2. ' )' → logprob: -7.6255998611450195
    3. ')
' → logprob: -9.87559986114502
    4. '))' → logprob: -10.37559986114502
    5. ',' → logprob: -12.25059986114502
    6. ')`' → logprob: -12.87559986114502
    7. ']' → logprob: -13.37559986114502
    8. ')/' → logprob: -13.37559986114502
    9. '```' → logprob: -13.50059986114502
    10. ')

' → logprob: -13.50059986114502

Token 66: '#' (ID: 2)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.0961238145828247
    2. '+' → logprob: -1.7211238145828247
    3. '\' → logprob: -1.8461238145828247
    4. '
' → logprob: -2.721123695373535
    5. 'if' → logprob: -2.971123695373535
    6. '*' → logprob: -3.346123695373535
    7. ' ' → logprob: -3.346123695373535
    8. ' if' → logprob: -4.096123695373535
    9. 'import' → logprob: -4.346123695373535
    10. '-' → logprob: -4.346123695373535

Token 67: ' j' (ID: 441)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.059754859656095505
    2. 'import' → logprob: -4.184754848480225
    3. 'result' → logprob: -4.559754848480225
    4. 'if' → logprob: -4.559754848480225
    5. 'num' → logprob: -5.184754848480225
    6. 'for' → logprob: -5.434754848480225
    7. 'ans' → logprob: -6.059754848480225
    8. 'math' → logprob: -6.309754848480225
    9. 'answer' → logprob: -6.559754848480225
    10. ' print' → logprob: -6.559754848480225

Token 68: ''util' (ID: 37761)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0883508920669556
    2. ''ai' → logprob: -1.5883508920669556
    3. 'for' → logprob: -2.588350772857666
    4. '_' → logprob: -2.963350772857666
    5. '=' → logprob: -3.213350772857666
    6. ''espère' → logprob: -3.463350772857666
    7. 'u' → logprob: -3.963350772857666
    8. 'uste' → logprob: -3.963350772857666
    9. 'oueur' → logprob: -3.963350772857666
    10. 'f' → logprob: -3.963350772857666

Token 69: 'ise' (ID: 1096)
  Prédit: 'se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'se' → logprob: -0.0040243761613965034
    2. 's' → logprob: -5.879024505615234
    3. 'ser' → logprob: -7.004024505615234
    4. 'sé' → logprob: -9.379024505615234
    5. 'ise' → logprob: -10.004024505615234
    6. 'sement' → logprob: -10.379024505615234
    7. '```' → logprob: -10.504024505615234
    8. 'ses' → logprob: -10.629024505615234
    9. 'set' → logprob: -11.379024505615234
    10. 'seb' → logprob: -11.754024505615234

Token 70: ' encore' (ID: 14043)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.011484082788228989
    2. 'math' → logprob: -4.511484146118164
    3. ' ' → logprob: -8.386484146118164
    4. '(math' → logprob: -9.136484146118164
    5. 'import' → logprob: -10.386484146118164
    6. ' la' → logprob: -10.636484146118164
    7. ' le' → logprob: -11.886484146118164
    8. ' une' → logprob: -12.011484146118164
    9. '_' → logprob: -12.511484146118164
    10. '_math' → logprob: -13.011484146118164

Token 71: ' math' (ID: 13324)
  Prédit: ' math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.0015311705647036433
    2. 'math' → logprob: -7.25153112411499
    3. ' la' → logprob: -8.251531600952148
    4. ' une' → logprob: -9.126531600952148
    5. ' le' → logprob: -9.251531600952148
    6. '_' → logprob: -9.626531600952148
    7. ' un' → logprob: -9.876531600952148
    8. ' max' → logprob: -10.001531600952148
    9. 'import' → logprob: -10.376531600952148
    10. ' import' → logprob: -10.626531600952148

Token 72: ' parce' (ID: 27146)
  Prédit: '.ceil'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.ceil' → logprob: -0.1281459778547287
    2. '.' → logprob: -2.128145933151245
    3. 'import' → logprob: -7.253146171569824
    4. 'ceil' → logprob: -8.003146171569824
    5. '.
' → logprob: -10.128146171569824
    6. ' ceil' → logprob: -10.253146171569824
    7. ' .' → logprob: -10.503146171569824
    8. '.floor' → logprob: -11.003146171569824
    9. '.sqrt' → logprob: -11.628146171569824
    10. ' import' → logprob: -11.628146171569824

Token 73: ' que' (ID: 661)
  Prédit: ' que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.03723657876253128
    2. ' ceil' → logprob: -4.03723669052124
    3. ' math' → logprob: -5.41223669052124
    4. ' ' → logprob: -5.78723669052124
    5. ' de' → logprob: -5.78723669052124
    6. ' qu' → logprob: -6.28723669052124
    7. 'ceil' → logprob: -6.78723669052124
    8. ' for' → logprob: -7.03723669052124
    9. ',' → logprob: -7.28723669052124
    10. ' je' → logprob: -7.66223669052124

Token 74: ' c' (ID: 274)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.0020741254556924105
    2. ' ' → logprob: -6.627074241638184
    3. 'math' → logprob: -7.502074241638184
    4. ' -' → logprob: -10.002074241638184
    5. ' max' → logprob: -10.752074241638184
    6. '-m' → logprob: -10.752074241638184
    7. '  ' → logprob: -11.002074241638184
    8. 'import' → logprob: -11.252074241638184
    9. '(math' → logprob: -11.502074241638184
    10. ' (' → logprob: -11.752074241638184

Token 75: ''est' (ID: 6616)
  Prédit: ''est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''est' → logprob: -0.6526957750320435
    2. 'e' → logprob: -1.1526957750320435
    3. 'est' → logprob: -2.902695655822754
    4. ''' → logprob: -3.902695655822754
    5. 'a' → logprob: -4.027695655822754
    6. 'eil' → logprob: -4.527695655822754
    7. 'eux' → logprob: -4.777695655822754
    8. '#' → logprob: -4.777695655822754
    9. '_' → logprob: -5.777695655822754
    10. '`' → logprob: -5.777695655822754

Token 76: ' plus' (ID: 2932)
  Prédit: ' ceil'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ceil' → logprob: -0.8602731227874756
    2. ' math' → logprob: -0.9852731227874756
    3. ' une' → logprob: -2.4852731227874756
    4. 'ceil' → logprob: -2.8602731227874756
    5. ' le' → logprob: -4.360273361206055
    6. ' un' → logprob: -4.610273361206055
    7. ' la' → logprob: -4.610273361206055
    8. 'math' → logprob: -5.110273361206055
    9. '.ceil' → logprob: -5.360273361206055
    10. ' mieux' → logprob: -5.860273361206055

Token 77: ' sûr' (ID: 46415)
  Prédit: 'pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.6782314777374268
    2. 'pro' → logprob: -0.8032314777374268
    3. 'rob' → logprob: -4.303231239318848
    4. 'clair' → logprob: -5.303231239318848
    5. 'simple' → logprob: -5.553231239318848
    6. 'prec' → logprob: -5.678231239318848
    7. 'cl' → logprob: -6.178231239318848
    8. ' propre' → logprob: -6.303231239318848
    9. ' sûr' → logprob: -6.553231239318848
    10. 'fac' → logprob: -6.928231239318848

Token 78: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2006494104862213
    2. 'import' → logprob: -2.5756494998931885
    3. '(' → logprob: -2.8256494998931885
    4. ' (' → logprob: -4.825649261474609
    5. ' math' → logprob: -4.950649261474609
    6. '(math' → logprob: -5.075649261474609
    7. 'print' → logprob: -5.325649261474609
    8. '(
' → logprob: -5.575649261474609
    9. '  
' → logprob: -5.950649261474609
    10. ' =' → logprob: -6.200649261474609

Token 79: 'x' (ID: 87)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10709486901760101
    2. 'print' → logprob: -2.4820947647094727
    3. 'import' → logprob: -4.482094764709473
    4. '\n' → logprob: -6.357094764709473
    5. '

' → logprob: -6.607094764709473
    6. '
' → logprob: -6.732094764709473
    7. 'n' → logprob: -6.982094764709473
    8. ' print' → logprob: -7.482094764709473
    9. '\' → logprob: -7.732094764709473
    10. ' 
' → logprob: -9.232094764709473

Token 80: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07128363102674484
    2. '=' → logprob: -2.8212835788726807
    3. '_' → logprob: -5.32128381729126
    4. ' ' → logprob: -6.94628381729126
    5. '=int' → logprob: -7.19628381729126
    6. 'u' → logprob: -7.57128381729126
    7. '`' → logprob: -8.071283340454102
    8. '0' → logprob: -8.696283340454102
    9. '_needed' → logprob: -8.696283340454102
    10. 'o' → logprob: -9.196283340454102

Token 81: ' n' (ID: 297)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.5012503266334534
    2. ' math' → logprob: -1.0012502670288086
    3. '(math' → logprob: -3.8762502670288086
    4. '-m' → logprob: -6.126250267028809
    5. ' (' → logprob: -6.876250267028809
    6. ' -' → logprob: -7.501250267028809
    7. ' n' → logprob: -7.626250267028809
    8. '-' → logprob: -7.751250267028809
    9. 'n' → logprob: -7.751250267028809
    10. '(n' → logprob: -7.751250267028809

Token 82: ' //' (ID: 602)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.6735554337501526
    2. ' /' → logprob: -1.1735553741455078
    3. ' //' → logprob: -1.9235553741455078
    4. '//' → logprob: -3.548555374145508
    5. ' ' → logprob: -6.048555374145508
    6. '/math' → logprob: -6.048555374145508
    7. ' ' → logprob: -8.048555374145508
    8. ' math' → logprob: -8.423555374145508
    9. '+' → logprob: -8.673555374145508
    10. '-' → logprob: -8.923555374145508

Token 83: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.0028076060116291046
    2. ' min' → logprob: -5.8778076171875
    3. 'max' → logprob: -13.6278076171875
    4. '(min' → logprob: -14.3778076171875
    5. '	min' → logprob: -15.1278076171875
    6. 'm' → logprob: -15.3778076171875
    7. ' ' → logprob: -15.5028076171875
    8. '10' → logprob: -16.2528076171875
    9. '[min' → logprob: -16.7528076171875
    10. 'int' → logprob: -16.8778076171875

Token 84: '_num' (ID: 9834)
  Prédit: '_num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -3.833878508885391e-05
    2. '_' → logprob: -10.250038146972656
    3. '_n' → logprob: -13.500038146972656
    4. 'num' → logprob: -13.750038146972656
    5. ' _' → logprob: -16.250038146972656
    6. '-num' → logprob: -16.500038146972656
    7. '_nums' → logprob: -16.875038146972656
    8. '_min' → logprob: -17.125038146972656
    9. '__' → logprob: -17.125038146972656
    10. '-' → logprob: -17.375038146972656

Token 85: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.04941881075501442
    2. ' +' → logprob: -3.0494189262390137
    3. '+
' → logprob: -7.299418926239014
    4. ' +
' → logprob: -9.924418449401855
    5. ' ' → logprob: -10.424418449401855
    6. ' if' → logprob: -11.174418449401855
    7. '
' → logprob: -11.174418449401855
    8. 'if' → logprob: -11.299418449401855
    9. '+\' → logprob: -11.674418449401855
    10. '+x' → logprob: -12.299418449401855

Token 86: 'if' (ID: 366)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.027822230011224747
    2. ' +' → logprob: -4.652822017669678
    3. 'if' → logprob: -5.152822017669678
    4. ' if' → logprob: -5.152822017669678
    5. '+
' → logprob: -5.652822017669678
    6. '
' → logprob: -6.027822017669678
    7. ' +
' → logprob: -9.277822494506836
    8. '\n' → logprob: -10.027822494506836
    9. '<|end|>' → logprob: -10.027822494506836
    10. 'x' → logprob: -10.152822494506836

Token 87: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.02232072688639164
    2. ' x' → logprob: -4.272320747375488
    3. 'n' → logprob: -5.022320747375488
    4. ' (' → logprob: -6.897320747375488
    5. ' ' → logprob: -8.022320747375488
    6. 'x' → logprob: -8.772320747375488
    7. '(' → logprob: -11.272320747375488
    8. ' ' → logprob: -11.397320747375488
    9. '(n' → logprob: -11.897320747375488
    10. ' not' → logprob: -12.897320747375488

Token 88: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.38688066601753235
    2. ' %' → logprob: -1.13688063621521
    3. '%x' → logprob: -12.636880874633789
    4. ' ' → logprob: -13.261880874633789
    5. ' ' → logprob: -14.011880874633789
    6. '%i' → logprob: -14.136880874633789
    7. '>' → logprob: -14.261880874633789
    8. '%n' → logprob: -14.636880874633789
    9. '%s' → logprob: -15.011880874633789
    10. '-' → logprob: -15.136880874633789

Token 89: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.023268306627869606
    2. 'min' → logprob: -3.773268222808838
    3. ' ' → logprob: -10.773268699645996
    4. '	min' → logprob: -13.648268699645996
    5. ' ' → logprob: -15.898268699645996
    6. ' x' → logprob: -16.02326774597168
    7. '[min' → logprob: -16.27326774597168
    8. '  ' → logprob: -16.27326774597168
    9. '_min' → logprob: -16.39826774597168
    10. '(min' → logprob: -16.64826774597168

Token 90: '_num' (ID: 9834)
  Prédit: '_num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -1.8670179997570813e-05
    2. 'num' → logprob: -11.125019073486328
    3. 'um' → logprob: -12.875019073486328
    4. '_' → logprob: -14.750019073486328
    5. 'inum' → logprob: -16.000019073486328
    6. '-num' → logprob: -16.125019073486328
    7. 'Num' → logprob: -16.250019073486328
    8. '_min' → logprob: -16.375019073486328
    9. '_NUM' → logprob: -17.000019073486328
    10. 'm' → logprob: -17.000019073486328

Token 91: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.07047384232282639
    2. ' !=' → logprob: -2.8204739093780518
    3. '>' → logprob: -5.070473670959473
    4. ':' → logprob: -6.445473670959473
    5. '==' → logprob: -7.695473670959473
    6. ' >' → logprob: -9.570473670959473
    7. '!==' → logprob: -9.945473670959473
    8. ' ==' → logprob: -11.445473670959473
    9. '=' → logprob: -11.820473670959473
    10. '>:' → logprob: -12.195473670959473

Token 92: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04858759790658951
    2. ' ' → logprob: -3.0485875606536865
    3. ' ' → logprob: -16.673587799072266
    4. '  ' → logprob: -17.923587799072266
    5. ' 
' → logprob: -17.923587799072266
    6. '۰' → logprob: -18.298587799072266
    7. ' ' → logprob: -18.423587799072266
    8. ')' → logprob: -18.548587799072266
    9. ' 

' → logprob: -18.798587799072266
    10. '=' → logprob: -18.798587799072266

Token 93: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.615255839889869e-05
    2. ' ' → logprob: -9.250096321105957
    3. '۰' → logprob: -18.75009536743164
    4. '０' → logprob: -19.25009536743164
    5. '٠' → logprob: -20.62509536743164
    6. ' ' → logprob: -21.12509536743164
    7. '  ' → logprob: -21.50009536743164
    8. '০' → logprob: -21.62509536743164
    9. '```' → logprob: -21.75009536743164
    10. '=' → logprob: -21.87509536743164

Token 94: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.013610840775072575
    2. ' :' → logprob: -4.88861083984375
    3. ':
' → logprob: -5.26361083984375
    4. ' :
' → logprob: -7.38861083984375
    5. 'x' → logprob: -9.01361083984375
    6. '+' → logprob: -10.63861083984375
    7. ' x' → logprob: -11.01361083984375
    8. ':x' → logprob: -11.13861083984375
    9. '+:' → logprob: -12.13861083984375
    10. '1' → logprob: -13.01361083984375

Token 95: '   ' (ID: 271)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5929039716720581
    2. ' x' → logprob: -1.592903971672058
    3. '   ' → logprob: -1.717903971672058
    4. '
' → logprob: -3.0929040908813477
    5. ' 
' → logprob: -4.217904090881348
    6. '<|end|>' → logprob: -6.592904090881348
    7. '1' → logprob: -6.717904090881348
    8. '    
' → logprob: -7.342904090881348
    9. '	x' → logprob: -8.092904090881348
    10. '```' → logprob: -8.467904090881348

Token 96: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.2909580171108246
    2. ' x' → logprob: -1.415958046913147
    3. ' 
' → logprob: -4.790957927703857
    4. '
' → logprob: -6.665957927703857
    5. '1' → logprob: -9.165958404541016
    6. '<|end|>' → logprob: -10.165958404541016
    7. '    
' → logprob: -11.915958404541016
    8. ' ' → logprob: -12.165958404541016
    9. '<|end|>' → logprob: -12.290958404541016
    10. '    ' → logprob: -12.290958404541016

Token 97: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.048969291150569916
    2. '+=' → logprob: -3.048969268798828
    3. ' =' → logprob: -8.423969268798828
    4. '+' → logprob: -9.173969268798828
    5. '=' → logprob: -10.173969268798828
    6. ' +' → logprob: -10.923969268798828
    7. ' ' → logprob: -13.423969268798828
    8. 'x' → logprob: -14.548969268798828
    9. '1' → logprob: -15.048969268798828
    10. ']+=' → logprob: -16.798969268798828

Token 98: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001398929744027555
    2. ' ' → logprob: -8.875140190124512
    3. '   ' → logprob: -17.750139236450195
    4. '  ' → logprob: -18.500139236450195
    5. ' ' → logprob: -18.750139236450195
    6. '+' → logprob: -20.250139236450195
    7. '１' → logprob: -20.625139236450195
    8. '```' → logprob: -20.812639236450195
    9. '    ' → logprob: -21.125139236450195
    10. '
' → logprob: -21.312639236450195

Token 99: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4855663721391466e-05
    2. ' ' → logprob: -11.125015258789062
    3. '   ' → logprob: -17.625015258789062
    4. '  ' → logprob: -18.312515258789062
    5. '+' → logprob: -18.437515258789062
    6. '-' → logprob: -18.812515258789062
    7. 'math' → logprob: -19.250015258789062
    8. '```' → logprob: -19.500015258789062
    9. 'a' → logprob: -19.750015258789062
    10. ' math' → logprob: -19.875015258789062

Token 100: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.10291367769241333
    2. '
' → logprob: -2.3529136180877686
    3. ' print' → logprob: -6.227913856506348
    4. '\n' → logprob: -7.852913856506348
    5. '
' → logprob: -8.477913856506348
    6. ')' → logprob: -10.227913856506348
    7. '\' → logprob: -10.977913856506348
    8. ')
' → logprob: -11.102913856506348
    9. ' 
' → logprob: -11.102913856506348
    10. '

' → logprob: -11.727913856506348

Token 101: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -7.684157026233152e-05
    2. '
' → logprob: -10.375077247619629
    3. ' print' → logprob: -10.625077247619629
    4. '\n' → logprob: -11.000077247619629
    5. '
' → logprob: -13.375077247619629
    6. '\' → logprob: -13.375077247619629
    7. '"\' → logprob: -15.000077247619629
    8. 'x' → logprob: -15.125077247619629
    9. '(print' → logprob: -15.875077247619629
    10. '' → logprob: -16.000076293945312

Token 102: ' ' (ID: 220)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.006775761488825083
    2. ' print' → logprob: -5.006775856018066
    3. 'x' → logprob: -10.131775856018066
    4. 'pr' → logprob: -11.256775856018066
    5. ' x' → logprob: -12.506775856018066
    6. 'prin' → logprob: -14.006775856018066
    7. ' ' → logprob: -14.881775856018066
    8. 'a' → logprob: -15.006775856018066
    9. 'import' → logprob: -15.256775856018066
    10. 'printf' → logprob: -15.506775856018066

Token 103: '4' (ID: 19)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.012961626052856445
    2. 'x' → logprob: -4.387961387634277
    3. 'max' → logprob: -8.762961387634277
    4. 'math' → logprob: -10.012961387634277
    5. 'pr' → logprob: -10.387961387634277
    6. 'for' → logprob: -10.512961387634277
    7. 'min' → logprob: -10.512961387634277
    8. 'if' → logprob: -10.512961387634277
    9. ' print' → logprob: -10.762961387634277
    10. '0' → logprob: -10.887961387634277

Token 104: ' c' (ID: 274)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.03523153066635132
    2. ' print' → logprob: -4.535231590270996
    3. 'x' → logprob: -4.660231590270996
    4. '+' → logprob: -5.410231590270996
    5. '*' → logprob: -5.535231590270996
    6. 'for' → logprob: -6.660231590270996
    7. ' *' → logprob: -6.660231590270996
    8. ' ' → logprob: -7.160231590270996
    9. ' +' → logprob: -7.785231590270996
    10. '#' → logprob: -7.910231590270996

Token 105: ''est' (ID: 6616)
  Prédit: 'om'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'om' → logprob: -1.3239697217941284
    2. 'print' → logprob: -1.8239697217941284
    3. 'al' → logprob: -2.448969841003418
    4. 'ar' → logprob: -2.823969841003418
    5. 'omp' → logprob: -3.073969841003418
    6. '*' → logprob: -3.073969841003418
    7. '#' → logprob: -3.198969841003418
    8. 'ode' → logprob: -3.323969841003418
    9. '0' → logprob: -3.573969841003418
    10. 'on' → logprob: -3.698969841003418

Token 106: ' la' (ID: 557)
  Prédit: ' len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' len' → logprob: -1.075225591659546
    2. ' ' → logprob: -2.075225591659546
    3. ' x' → logprob: -2.450225591659546
    4. 'len' → logprob: -2.575225591659546
    5. 'x' → logprob: -2.700225591659546
    6. ' min' → logprob: -2.950225591659546
    7. ' math' → logprob: -3.325225591659546
    8. ' n' → logprob: -3.450225591659546
    9. ' max' → logprob: -3.700225591659546
    10. '100' → logprob: -3.950225591659546

Token 107: ' constante' (ID: 49652)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.059898924082517624
    2. '*' → logprob: -4.184898853302002
    3. 'x' → logprob: -4.184898853302002
    4. ' print' → logprob: -4.559898853302002
    5. '+' → logprob: -5.184898853302002
    6. ' ' → logprob: -5.434898853302002
    7. ' *' → logprob: -6.434898853302002
    8. ' x' → logprob: -6.684898853302002
    9. '#' → logprob: -6.809898853302002
    10. ' +' → logprob: -7.559898853302002

Token 108: ' magique' (ID: 154560)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.3213168680667877
    2. ' *' → logprob: -1.5713168382644653
    3. '+' → logprob: -4.071316719055176
    4. 'print' → logprob: -4.196316719055176
    5. ' +' → logprob: -4.321316719055176
    6. 'x' → logprob: -4.571316719055176
    7. ' ' → logprob: -6.196316719055176
    8. ' x' → logprob: -6.446316719055176
    9. 'import' → logprob: -6.946316719055176
    10. '4' → logprob: -7.321316719055176

Token 109: ' ici' (ID: 27994)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.42207762598991394
    2. ' *' → logprob: -1.2970776557922363
    3. 'print' → logprob: -3.7970776557922363
    4. '+' → logprob: -3.9220776557922363
    5. ' +' → logprob: -4.422077655792236
    6. 'x' → logprob: -4.547077655792236
    7. '4' → logprob: -6.422077655792236
    8. ' x' → logprob: -7.047077655792236
    9. '**' → logprob: -7.672077655792236
    10. '*
' → logprob: -7.922077655792236

Token 110: ' on' (ID: 402)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.16799476742744446
    2. 'result' → logprob: -2.292994737625122
    3. 'x' → logprob: -4.042994976043701
    4. 'answer' → logprob: -4.667994976043701
    5. '4' → logprob: -4.792994976043701
    6. 'if' → logprob: -5.292994976043701
    7. '*' → logprob: -5.667994976043701
    8. '+' → logprob: -6.417994976043701
    9. 'ans' → logprob: -6.542994976043701
    10. 'for' → logprob: -6.667994976043701

Token 111: ' dir' (ID: 5609)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' print' → logprob: -1.187329888343811
    2. ' multipl' → logprob: -1.562329888343811
    3. 'print' → logprob: -2.0623297691345215
    4. 'div' → logprob: -2.8123297691345215
    5. ' div' → logprob: -2.8123297691345215
    6. ' calc' → logprob: -3.0623297691345215
    7. ' fait' → logprob: -3.3123297691345215
    8. 'mult' → logprob: -3.4373297691345215
    9. ' doit' → logprob: -4.3123297691345215
    10. ' a' → logprob: -4.3123297691345215

Token 112: 'ait' (ID: 1271)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.3951297104358673
    2. 'ait' → logprob: -1.395129680633545
    3. 've' → logprob: -4.645129680633545
    4. 'f' → logprob: -5.145129680633545
    5. 'ai' → logprob: -5.145129680633545
    6. 'ving' → logprob: -5.145129680633545
    7. ''' → logprob: -5.270129680633545
    8. 'ct' → logprob: -5.270129680633545
    9. 'v' → logprob: -5.645129680633545
    10. '#' → logprob: -5.645129680633545

Token 113: ' bien' (ID: 5340)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.01694626919925213
    2. ' print' → logprob: -4.641946315765381
    3. '
' → logprob: -5.641946315765381
    4. '*' → logprob: -7.141946315765381
    5. 'result' → logprob: -7.141946315765381
    6. '4' → logprob: -7.391946315765381
    7. 'x' → logprob: -8.016945838928223
    8. '+' → logprob: -8.516945838928223
    9. ' +' → logprob: -9.641945838928223
    10. 'total' → logprob: -9.641945838928223

Token 114: ' ^^' (ID: 54054)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.4335661828517914
    2. ' *' → logprob: -1.4335662126541138
    3. 'print' → logprob: -2.308566093444824
    4. ' print' → logprob: -5.683566093444824
    5. ' +' → logprob: -6.183566093444824
    6. '+' → logprob: -6.433566093444824
    7. 'x' → logprob: -6.558566093444824
    8. ' x' → logprob: -6.558566093444824
    9. '
' → logprob: -7.058566093444824
    10. '4' → logprob: -7.058566093444824

Token 115: '  
' (ID: 4066)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.13324758410453796
    2. 'print' → logprob: -2.6332476139068604
    3. ' *' → logprob: -3.3832476139068604
    4. ' print' → logprob: -5.383247375488281
    5. '4' → logprob: -5.508247375488281
    6. 'x' → logprob: -5.758247375488281
    7. '*
' → logprob: -5.883247375488281
    8. ' x' → logprob: -6.758247375488281
    9. '+' → logprob: -7.133247375488281
    10. '
' → logprob: -7.883247375488281

Token 116: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.03872648999094963
    2. 'x' → logprob: -3.538726568222046
    3. 'result' → logprob: -5.538726329803467
    4. '4' → logprob: -6.413726329803467
    5. 'if' → logprob: -6.413726329803467
    6. 'total' → logprob: -8.038726806640625
    7. 'ans' → logprob: -8.163726806640625
    8. 'answer' → logprob: -8.288726806640625
    9. 'y' → logprob: -8.538726806640625
    10. ' print' → logprob: -8.663726806640625

Token 117: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.20144179463386536
    2. '(' → logprob: -1.701441764831543
    3. '((' → logprob: -10.826441764831543
    4. '('' → logprob: -13.326441764831543
    5. '(max' → logprob: -13.326441764831543
    6. 'x' → logprob: -13.576441764831543
    7. '(
' → logprob: -13.576441764831543
    8. '("' → logprob: -14.201441764831543
    9. ' (' → logprob: -14.451441764831543
    10. '(math' → logprob: -14.951441764831543

Token 118: '+' (ID: 10)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.038841161876916885
    2. '*' → logprob: -3.2888412475585938
    3. ' *' → logprob: -7.288841247558594
    4. ' )' → logprob: -9.288841247558594
    5. '*)' → logprob: -11.288841247558594
    6. '//' → logprob: -12.413841247558594
    7. '+' → logprob: -12.663841247558594
    8. '))' → logprob: -13.663841247558594
    9. '**' → logprob: -14.163841247558594
    10. ' //' → logprob: -15.538841247558594

Token 119: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.03008021041750908
    2. '3' → logprob: -3.5300803184509277
    3. ' ' → logprob: -8.03007984161377
    4. '  ' → logprob: -14.03007984161377
    5. '5' → logprob: -14.28007984161377
    6. '   ' → logprob: -14.53007984161377
    7. '2' → logprob: -14.65507984161377
    8. '

' → logprob: -14.78007984161377
    9. '
' → logprob: -14.90507984161377
    10. '(' → logprob: -15.28007984161377

Token 120: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.723973582556937e-05
    2. ' )' → logprob: -11.000017166137695
    3. '))' → logprob: -15.375017166137695
    4. ')`' → logprob: -15.625017166137695
    5. ')
' → logprob: -16.375017166137695
    6. ')#' → logprob: -17.750017166137695
    7. '`)' → logprob: -17.750017166137695
    8. '*' → logprob: -18.125017166137695
    9. '')' → logprob: -18.750017166137695
    10. '+' → logprob: -18.750017166137695


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 118
Tokens correctement prédits (1ère position, stricte): 33
Tokens correctement prédits (1ère position, avec adaptation): 34
Tokens correctement prédits (top 10): 71
Précision stricte (1ère position): 27.97%
Précision adaptée (1ère position): 28.81%
Précision (top 10): 60.17%
================================================================================
