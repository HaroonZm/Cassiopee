================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:43:09
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
mod = 998244353
import collections

n = int(input())
x = input()
ans = (2 * n * (int(x, 2) + 1)) % mod

def make_divisors(num):
    divisors = []
    i = 1
    while i * i <= num:
        if num % i == 0:
            divisors.append(i)
            if i != num // i:
                divisors.append(num // i)
        i += 1
    divisors.sort(reverse=True)
    return divisors

divisors_list = make_divisors(n)
ct_dict = collections.defaultdict(int)

for d in divisors_list:
    if d % 2 == 0 or d == 1:
        continue
    else:
        k = n // d
        # On cherche le nombre y
        # y = (2^n - 2^k) // (2^k + 1)
        y = (2 ** n - 2 ** k) // (2 ** k + 1)
        # On compte le nombre de valeurs possibles de y+1
        count = (int(x, 2) - y) // (y + 1) + 1
        # On enlève les doublons
        dk_list = make_divisors(k)
        for dk in dk_list:
            if dk < k:
                count -= ct_dict[dk]
        ct_dict[k] = count
        # On ajuste ans
        ans -= count * 2 * (n - k)

print(ans % mod)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'mod' (ID: 4847)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' ' (ID: 220)
  → Token d'amorce (pas de prédiction)

Token 3: '998' (ID: 34589)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.6599450707435608
    2. '__' → logprob: -2.034945011138916
    3. 'torch' → logprob: -2.159945011138916
    4. '1' → logprob: -3.659945011138916
    5. '42' → logprob: -3.784945011138916
    6. '123' → logprob: -4.034945011138916
    7. '100' → logprob: -4.034945011138916
    8. 'math' → logprob: -4.159945011138916
    9. ' ' → logprob: -4.409945011138916
    10. '"' → logprob: -4.909945011138916

Token 4: '244' (ID: 25291)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.3812074363231659
    2. '*' → logprob: -2.6312074661254883
    3. '=' → logprob: -3.1312074661254883
    4. '.' → logprob: -3.1312074661254883
    5. '**' → logprob: -3.5062074661254883
    6. '`' → logprob: -3.7562074661254883
    7. '_' → logprob: -3.8812074661254883
    8. ',' → logprob: -4.131207466125488
    9. ';' → logprob: -4.381207466125488
    10. '+' → logprob: -4.631207466125488

Token 5: '353' (ID: 32996)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.11291653662919998
    2. '```' → logprob: -3.1129164695739746
    3. '`' → logprob: -3.9879164695739746
    4. '**' → logprob: -3.9879164695739746
    5. '.' → logprob: -4.862916469573975
    6. '#' → logprob: -5.362916469573975
    7. '+' → logprob: -5.362916469573975
    8. '\' → logprob: -6.112916469573975
    9. '_' → logprob: -6.237916469573975
    10. '4' → logprob: -7.237916469573975

Token 6: '
' (ID: 198)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.36786434054374695
    2. '**' → logprob: -1.8678643703460693
    3. '```' → logprob: -2.7428643703460693
    4. '\n' → logprob: -3.4928643703460693
    5. '`' → logprob: -4.24286413192749
    6. '+' → logprob: -4.36786413192749
    7. '#' → logprob: -4.36786413192749
    8. '\' → logprob: -4.74286413192749
    9. '.' → logprob: -6.49286413192749
    10. ')' → logprob: -6.49286413192749

Token 7: 'import' (ID: 561)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.28328460454940796
    2. '+' → logprob: -2.5332846641540527
    3. '```' → logprob: -3.1582846641540527
    4. '**' → logprob: -3.5332846641540527
    5. '`' → logprob: -3.9082846641540527
    6. '.' → logprob: -4.158284664154053
    7. '\n' → logprob: -4.408284664154053
    8. '#' → logprob: -4.533284664154053
    9. '\' → logprob: -4.658284664154053
    10. ',' → logprob: -4.783284664154053

Token 8: ' collections' (ID: 22690)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.537053644657135
    2. ' math' → logprob: -1.0370535850524902
    3. ' ' → logprob: -3.2870535850524902
    4. ' numpy' → logprob: -3.9120535850524902
    5. ' random' → logprob: -6.28705358505249
    6. ' space' → logprob: -7.53705358505249
    7. ' os' → logprob: -7.53705358505249
    8. ' itertools' → logprob: -8.662054061889648
    9. '_' → logprob: -8.787054061889648
    10. 'math' → logprob: -9.787054061889648

Token 9: '

' (ID: 279)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5531328916549683
    2. 'n' → logprob: -2.053133010864258
    3. '.' → logprob: -2.303133010864258
    4. '\' → logprob: -3.428133010864258
    5. '\n' → logprob: -3.553133010864258
    6. 'newline' → logprob: -3.803133010864258
    7. '
' → logprob: -3.928133010864258
    8. 'a' → logprob: -4.053133010864258
    9. '.Counter' → logprob: -4.553133010864258
    10. '`' → logprob: -4.678133010864258

Token 10: 'n' (ID: 77)
  Prédit: 'Counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Counter' → logprob: -0.8954676389694214
    2. 'dp' → logprob: -1.5204676389694214
    3. 'deque' → logprob: -2.145467758178711
    4. 'd' → logprob: -2.895467758178711
    5. 'a' → logprob: -3.145467758178711
    6. 'def' → logprob: -3.145467758178711
    7. 'n' → logprob: -3.145467758178711
    8. '`' → logprob: -3.520467758178711
    9. 'Deque' → logprob: -5.020467758178711
    10. 'A' → logprob: -5.020467758178711

Token 11: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09154526144266129
    2. '=' → logprob: -2.591545343399048
    3. ' ' → logprob: -4.591545104980469
    4. ',' → logprob: -6.091545104980469
    5. ' ,' → logprob: -9.341545104980469
    6. ')' → logprob: -10.591545104980469
    7. '=int' → logprob: -10.841545104980469
    8. '.' → logprob: -11.716545104980469
    9. '_' → logprob: -11.841545104980469
    10. ' =)' → logprob: -12.091545104980469

Token 12: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.12943725287914276
    2. ' ' → logprob: -2.629437208175659
    3. 'int' → logprob: -3.254437208175659
    4. ' collections' → logprob: -5.004437446594238
    5. '10' → logprob: -6.129437446594238
    6. 'collections' → logprob: -7.129437446594238
    7. '5' → logprob: -7.629437446594238
    8. '0' → logprob: -8.379437446594238
    9. ' input' → logprob: -8.754437446594238
    10. '20' → logprob: -10.879437446594238

Token 13: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0005094261723570526
    2. '(input' → logprob: -7.875509262084961
    3. '()' → logprob: -9.625509262084961
    4. '('' → logprob: -10.375509262084961
    5. ' (' → logprob: -12.250509262084961
    6. '(n' → logprob: -12.500509262084961
    7. 'input' → logprob: -12.500509262084961
    8. '(
' → logprob: -12.625509262084961
    9. '(`' → logprob: -12.875509262084961
    10. '("' → logprob: -13.250509262084961

Token 14: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.43912672996520996
    2. '(' → logprob: -1.43912672996521
    3. '()' → logprob: -2.18912672996521
    4. '())' → logprob: -5.189126968383789
    5. '))' → logprob: -8.439126968383789
    6. '(
' → logprob: -8.564126968383789
    7. '")' → logprob: -10.064126968383789
    8. '`)' → logprob: -10.064126968383789
    9. '')' → logprob: -10.189126968383789
    10. '(

' → logprob: -10.439126968383789

Token 15: 'x' (ID: 87)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.05256685987114906
    2. 'arr' → logprob: -3.5525667667388916
    3. 's' → logprob: -4.427567005157471
    4. 'data' → logprob: -5.927567005157471
    5. 'lst' → logprob: -6.427567005157471
    6. 'array' → logprob: -6.552567005157471
    7. ' a' → logprob: -6.677567005157471
    8. 'd' → logprob: -7.052567005157471
    9. 'A' → logprob: -7.302567005157471
    10. ')' → logprob: -8.302566528320312

Token 16: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6313735246658325
    2. '_' → logprob: -1.7563735246658325
    3. '=' → logprob: -2.006373405456543
    4. 's' → logprob: -2.131373405456543
    5. ' ' → logprob: -4.006373405456543
    6. '[' → logprob: -4.631373405456543
    7. ',' → logprob: -4.756373405456543
    8. ')' → logprob: -6.756373405456543
    9. 'a' → logprob: -7.131373405456543
    10. 'i' → logprob: -7.506373405456543

Token 17: ' input' (ID: 3422)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'collections' → logprob: -0.5995131134986877
    2. 'list' → logprob: -1.724513053894043
    3. ' collections' → logprob: -2.599513053894043
    4. '[int' → logprob: -3.099513053894043
    5. ' [' → logprob: -3.224513053894043
    6. ' list' → logprob: -3.599513053894043
    7. '[' → logprob: -3.599513053894043
    8. '[]' → logprob: -3.724513053894043
    9. '[input' → logprob: -4.349513053894043
    10. ' []' → logprob: -4.724513053894043

Token 18: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.025526084005832672
    2. '()' → logprob: -3.9005260467529297
    3. '.' → logprob: -6.90052604675293
    4. ''' → logprob: -6.90052604675293
    5. '('' → logprob: -7.15052604675293
    6. ')' → logprob: -7.15052604675293
    7. '"' → logprob: -7.77552604675293
    8. '[' → logprob: -8.40052604675293
    9. '```' → logprob: -8.52552604675293
    10. '(
' → logprob: -9.15052604675293

Token 19: 'ans' (ID: 616)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8258138298988342
    2. 's' → logprob: -1.2008137702941895
    3. '=' → logprob: -2.4508137702941895
    4. '
' → logprob: -3.4508137702941895
    5. 'a' → logprob: -3.5758137702941895
    6. 'd' → logprob: -3.8258137702941895
    7. '[' → logprob: -4.0758137702941895
    8. 'x' → logprob: -4.0758137702941895
    9. ')' → logprob: -4.3258137702941895
    10. ' =' → logprob: -5.5758137702941895

Token 20: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14429789781570435
    2. '=' → logprob: -2.0192978382110596
    3. '_' → logprob: -6.644298076629639
    4. '[' → logprob: -9.51929759979248
    5. ' ' → logprob: -9.51929759979248
    6. ' +=' → logprob: -9.51929759979248
    7. '.' → logprob: -10.76929759979248
    8. '[:]' → logprob: -10.76929759979248
    9. ',' → logprob: -11.14429759979248
    10. 's' → logprob: -11.39429759979248

Token 21: ' (' (ID: 350)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.15195025503635406
    2. 'collections' → logprob: -2.5269503593444824
    3. '[]' → logprob: -3.7769503593444824
    4. ' ' → logprob: -3.9019503593444824
    5. '[' → logprob: -4.276950359344482
    6. ' collections' → logprob: -6.276950359344482
    7. ' [' → logprob: -7.276950359344482
    8. ' []' → logprob: -7.401950359344482
    9. '1' → logprob: -8.276949882507324
    10. 'x' → logprob: -8.526949882507324

Token 22: '2' (ID: 17)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.034092362970113754
    2. 'collections' → logprob: -4.284092426300049
    3. ')' → logprob: -5.284092426300049
    4. '1' → logprob: -5.534092426300049
    5. '[' → logprob: -5.659092426300049
    6. 'n' → logprob: -5.909092426300049
    7. 'x' → logprob: -6.409092426300049
    8. '[n' → logprob: -7.534092426300049
    9. ' ' → logprob: -7.534092426300049
    10. '-' → logprob: -8.28409194946289

Token 23: ' *' (ID: 425)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.4185531735420227
    2. ' **' → logprob: -1.168553113937378
    3. ' **)' → logprob: -4.293553352355957
    4. ' *' → logprob: -5.043553352355957
    5. '**)' → logprob: -5.543553352355957
    6. '*' → logprob: -5.543553352355957
    7. ')' → logprob: -6.043553352355957
    8. '*n' → logprob: -7.793553352355957
    9. '*)' → logprob: -9.543553352355957
    10. ' )' → logprob: -9.668553352355957

Token 24: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.4996574819087982
    2. 'n' → logprob: -0.9996575117111206
    3. ' (' → logprob: -4.99965763092041
    4. 'pow' → logprob: -5.87465763092041
    5. '(n' → logprob: -5.99965763092041
    6. 'int' → logprob: -6.37465763092041
    7. ')' → logprob: -6.37465763092041
    8. ' ' → logprob: -6.49965763092041
    9. ' int' → logprob: -6.87465763092041
    10. 'x' → logprob: -6.87465763092041

Token 25: ' *' (ID: 425)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08136888593435287
    2. '+' → logprob: -3.581368923187256
    3. ' +' → logprob: -4.081368923187256
    4. ' -' → logprob: -4.331368923187256
    5. '-' → logprob: -4.581368923187256
    6. ' )' → logprob: -4.706368923187256
    7. '*' → logprob: -8.206368446350098
    8. '%' → logprob: -8.206368446350098
    9. ')%' → logprob: -8.456368446350098
    10. ' *' → logprob: -9.831368446350098

Token 26: ' (' (ID: 350)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.5559858083724976
    2. '(' → logprob: -1.9309858083724976
    3. ' n' → logprob: -1.9309858083724976
    4. '(n' → logprob: -2.055985927581787
    5. '2' → logprob: -2.555985927581787
    6. ' (' → logprob: -2.680985927581787
    7. '3' → logprob: -3.055985927581787
    8. 'mod' → logprob: -3.180985927581787
    9. ' mod' → logprob: -3.430985927581787
    10. ')' → logprob: -3.805985927581787

Token 27: 'int' (ID: 491)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.19360363483428955
    2. '2' → logprob: -2.318603515625
    3. ' n' → logprob: -3.568603515625
    4. '(' → logprob: -4.068603515625
    5. '(n' → logprob: -4.068603515625
    6. ')' → logprob: -5.818603515625
    7. ' (' → logprob: -6.068603515625
    8. ' ' → logprob: -6.193603515625
    9. '1' → logprob: -6.443603515625
    10. 'x' → logprob: -6.568603515625

Token 28: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.05600512772798538
    2. 'x' → logprob: -3.5560052394866943
    3. '(' → logprob: -4.306005001068115
    4. '(n' → logprob: -4.681005001068115
    5. ' (' → logprob: -6.806005001068115
    6. ')' → logprob: -7.556005001068115
    7. ' x' → logprob: -7.931005001068115
    8. '`' → logprob: -8.306005477905273
    9. ' ' → logprob: -9.681005477905273
    10. '(pow' → logprob: -9.681005477905273

Token 29: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12624895572662354
    2. ')))' → logprob: -2.876248836517334
    3. ')**' → logprob: -3.876248836517334
    4. '[' → logprob: -4.126248836517334
    5. '+' → logprob: -4.751248836517334
    6. '))' → logprob: -5.251248836517334
    7. '-' → logprob: -6.126248836517334
    8. ')+' → logprob: -6.126248836517334
    9. ')%' → logprob: -6.251248836517334
    10. '%' → logprob: -6.876248836517334

Token 30: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.12151165306568146
    2. ' ' → logprob: -2.621511697769165
    3. '10' → logprob: -3.371511697769165
    4. '16' → logprob: -5.746511459350586
    5. ')' → logprob: -6.621511459350586
    6. '9' → logprob: -7.121511459350586
    7. '))' → logprob: -7.871511459350586
    8. 'mod' → logprob: -7.871511459350586
    9. '```' → logprob: -7.996511459350586
    10. '4' → logprob: -8.996511459350586

Token 31: '2' (ID: 17)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.4789835810661316
    2. '2' → logprob: -1.3539836406707764
    3. 'mod' → logprob: -2.7289836406707764
    4. '16' → logprob: -2.9789836406707764
    5. '9' → logprob: -6.353983402252197
    6. '4' → logprob: -6.728983402252197
    7. ' ' → logprob: -7.478983402252197
    8. '```' → logprob: -7.978983402252197
    9. ')' → logprob: -8.103983879089355
    10. 'base' → logprob: -8.353983879089355

Token 32: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08725130558013916
    2. ')))' → logprob: -2.8372511863708496
    3. '))' → logprob: -3.8372511863708496
    4. ')+' → logprob: -6.96225118637085
    5. ')**' → logprob: -7.58725118637085
    6. ' )' → logprob: -7.83725118637085
    7. '+' → logprob: -7.83725118637085
    8. '-' → logprob: -7.83725118637085
    9. ')%' → logprob: -7.83725118637085
    10. '%' → logprob: -9.462251663208008

Token 33: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.24189254641532898
    2. '))' → logprob: -2.2418925762176514
    3. '+' → logprob: -2.4918925762176514
    4. ' +' → logprob: -4.366892337799072
    5. ' )' → logprob: -5.616892337799072
    6. '%' → logprob: -5.866892337799072
    7. '-' → logprob: -5.991892337799072
    8. ')%' → logprob: -5.991892337799072
    9. ' -' → logprob: -7.241892337799072
    10. ' ))' → logprob: -7.616892337799072

Token 34: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04348084330558777
    2. ' ' → logprob: -3.16848087310791
    3. '2' → logprob: -8.66848087310791
    4. 'mod' → logprob: -9.66848087310791
    5. ' mod' → logprob: -10.66848087310791
    6. ' n' → logprob: -10.66848087310791
    7. '3' → logprob: -10.79348087310791
    8. ')' → logprob: -10.79348087310791
    9. '0' → logprob: -10.79348087310791
    10. '10' → logprob: -10.91848087310791

Token 35: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0016186459688469768
    2. ' ' → logprob: -7.5016188621521
    3. 'mod' → logprob: -8.001618385314941
    4. '2' → logprob: -8.001618385314941
    5. '(' → logprob: -9.501618385314941
    6. 'n' → logprob: -9.876618385314941
    7. '0' → logprob: -10.126618385314941
    8. '3' → logprob: -10.626618385314941
    9. 'int' → logprob: -10.626618385314941
    10. 'x' → logprob: -10.626618385314941

Token 36: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.13387298583984375
    2. '))' → logprob: -2.1338729858398438
    3. ')))' → logprob: -5.883872985839844
    4. '+' → logprob: -6.508872985839844
    5. ' )' → logprob: -6.883872985839844
    6. '-' → logprob: -7.508872985839844
    7. ' -' → logprob: -8.008872985839844
    8. ' +' → logprob: -8.133872985839844
    9. ' ))' → logprob: -8.383872985839844
    10. ')%' → logprob: -9.883872985839844

Token 37: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.21213214099407196
    2. ')' → logprob: -2.462132215499878
    3. ' %' → logprob: -2.462132215499878
    4. '**' → logprob: -4.587131977081299
    5. ' ' → logprob: -5.462131977081299
    6. '+' → logprob: -6.587131977081299
    7. '%
' → logprob: -6.962131977081299
    8. ' **' → logprob: -7.087131977081299
    9. '\n' → logprob: -7.462131977081299
    10. '%n' → logprob: -7.837131977081299

Token 38: ' mod' (ID: 1812)
  Prédit: ' mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mod' → logprob: -0.13036350905895233
    2. 'mod' → logprob: -2.6303634643554688
    3. ' ' → logprob: -3.6303634643554688
    4. '998' → logprob: -3.7553634643554688
    5. '(mod' → logprob: -9.255363464355469
    6. '`' → logprob: -9.255363464355469
    7. ' modul' → logprob: -10.755363464355469
    8. '999' → logprob: -11.005363464355469
    9. ' ' → logprob: -11.130363464355469
    10. ' `' → logprob: -12.130363464355469

Token 39: '

' (ID: 279)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.18878011405467987
    2. '\n' → logprob: -2.6887800693511963
    3. '
' → logprob: -3.1887800693511963
    4. '%' → logprob: -4.063780307769775
    5. '*' → logprob: -4.313780307769775
    6. ')' → logprob: -5.063780307769775
    7. '+
' → logprob: -5.063780307769775
    8. '#' → logprob: -5.688780307769775
    9. '<|end|>' → logprob: -5.813780307769775
    10. '\' → logprob: -5.938780307769775

Token 40: 'def' (ID: 1314)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.06474290788173676
    2. ')' → logprob: -3.3147428035736084
    3. '<|end|>' → logprob: -4.8147430419921875
    4. '
' → logprob: -4.9397430419921875
    5. '+' → logprob: -5.5647430419921875
    6. '\n' → logprob: -5.8147430419921875
    7. '#' → logprob: -6.3147430419921875
    8. '```' → logprob: -7.8147430419921875
    9. 'n' → logprob: -7.9397430419921875
    10. '*' → logprob: -8.064743041992188

Token 41: ' make' (ID: 1520)
  Prédit: ' solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' solve' → logprob: -0.4864597022533417
    2. ' count' → logprob: -1.861459732055664
    3. ' add' → logprob: -3.361459732055664
    4. ' pow' → logprob: -3.361459732055664
    5. ' calculate' → logprob: -3.611459732055664
    6. ' f' → logprob: -4.236459732055664
    7. ' main' → logprob: -4.236459732055664
    8. ' factorial' → logprob: -4.361459732055664
    9. ' calc' → logprob: -4.611459732055664
    10. ' max' → logprob: -4.986459732055664

Token 42: '_div' (ID: 36926)
  Prédit: '_array'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_array' → logprob: -0.8740341663360596
    2. '_counter' → logprob: -1.9990341663360596
    3. '_list' → logprob: -2.3740341663360596
    4. '_div' → logprob: -2.4990341663360596
    5. '_' → logprob: -2.7490341663360596
    6. '_set' → logprob: -3.2490341663360596
    7. '_string' → logprob: -3.3740341663360596
    8. '_arr' → logprob: -3.8740341663360596
    9. '_dp' → logprob: -4.1240339279174805
    10. '_hash' → logprob: -4.7490339279174805

Token 43: 'is' (ID: 276)
  Prédit: 'isible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isible' → logprob: -0.3533931374549866
    2. 'isor' → logprob: -1.3533930778503418
    3. 'is' → logprob: -4.228393077850342
    4. 'ide' → logprob: -4.978393077850342
    5. 'mod' → logprob: -4.978393077850342
    6. 'ider' → logprob: -5.978393077850342
    7. 'ision' → logprob: -5.978393077850342
    8. 's' → logprob: -6.228393077850342
    9. '`' → logprob: -7.728393077850342
    10. '```' → logprob: -7.978393077850342

Token 44: 'ors' (ID: 914)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.26934385299682617
    2. 'ible' → logprob: -1.5193438529968262
    3. 'ibility' → logprob: -5.269343852996826
    4. 'ors' → logprob: -5.394343852996826
    5. 'ion' → logprob: -5.769343852996826
    6. 'e' → logprob: -6.394343852996826
    7. 'ble' → logprob: -7.144343852996826
    8. 'isible' → logprob: -7.394343852996826
    9. ' or' → logprob: -7.644343852996826
    10. 'able' → logprob: -9.519344329833984

Token 45: '(num' (ID: 15828)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.016269903630018234
    2. '(' → logprob: -4.141269683837891
    3. '(x' → logprob: -9.26626968383789
    4. '(num' → logprob: -10.01626968383789
    5. '(a' → logprob: -10.14126968383789
    6. 'n' → logprob: -10.89126968383789
    7. '(number' → logprob: -11.64126968383789
    8. '(m' → logprob: -12.01626968383789
    9. '(k' → logprob: -12.26626968383789
    10. '(N' → logprob: -12.39126968383789

Token 46: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.009140492416918278
    2. ')' → logprob: -5.259140491485596
    3. '(' → logprob: -6.259140491485596
    4. '(num' → logprob: -6.884140491485596
    5. ':' → logprob: -7.759140491485596
    6. '(n' → logprob: -7.884140491485596
    7. '):
' → logprob: -10.009140968322754
    8. '):
' → logprob: -10.134140968322754
    9. ' ):' → logprob: -11.009140968322754
    10. ')(' → logprob: -11.509140968322754

Token 47: '   ' (ID: 271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0900333896279335
    2. '(n' → logprob: -2.8400332927703857
    3. '   ' → logprob: -5.215033531188965
    4. 's' → logprob: -5.215033531188965
    5. '(num' → logprob: -5.215033531188965
    6. 'def' → logprob: -6.215033531188965
    7. ' ' → logprob: -6.465033531188965
    8. ':' → logprob: -6.840033531188965
    9. '():' → logprob: -6.840033531188965
    10. '```' → logprob: -7.215033531188965

Token 48: ' divis' (ID: 37826)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.7011237740516663
    2. ' divis' → logprob: -0.7011237740516663
    3. ' div' → logprob: -5.7011237144470215
    4. '	div' → logprob: -6.2011237144470215
    5. '   ' → logprob: -6.4511237144470215
    6. 'd' → logprob: -8.07612419128418
    7. 'l' → logprob: -8.32612419128418
    8. ' ' → logprob: -8.45112419128418
    9. '_div' → logprob: -9.20112419128418
    10. ' l' → logprob: -10.70112419128418

Token 49: 'ors' (ID: 914)
  Prédit: 'ors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ors' → logprob: -2.45848218582978e-06
    2. '[' → logprob: -14.62500286102295
    3. 'iors' → logprob: -14.62500286102295
    4. '```' → logprob: -14.75000286102295
    5. '   ' → logprob: -15.00000286102295
    6. 's' → logprob: -15.75000286102295
    7. '=' → logprob: -15.87500286102295
    8. 'orsi' → logprob: -16.000001907348633
    9. 'or' → logprob: -16.125001907348633
    10. ' ors' → logprob: -16.250001907348633

Token 50: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.003179855877533555
    2. '=' → logprob: -5.753180027008057
    3. '=[]' → logprob: -14.003179550170898
    4. ' ' → logprob: -14.253179550170898
    5. ',' → logprob: -14.878179550170898
    6. '   ' → logprob: -16.6281795501709
    7. '  ' → logprob: -16.6281795501709
    8. ')' → logprob: -17.0031795501709
    9. '=[]
' → logprob: -17.0031795501709
    10. 's' → logprob: -18.0031795501709

Token 51: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.003322318894788623
    2. ' []' → logprob: -6.128322124481201
    3. 'collections' → logprob: -7.378322124481201
    4. '[' → logprob: -7.878322124481201
    5. 'set' → logprob: -9.62832260131836
    6. '[]}' → logprob: -10.50332260131836
    7. ' ' → logprob: -11.37832260131836
    8. '[]
' → logprob: -12.00332260131836
    9. ' collections' → logprob: -12.25332260131836
    10. ' [' → logprob: -12.37832260131836

Token 52: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.44531169533729553
    2. ' for' → logprob: -1.3203116655349731
    3. '   ' → logprob: -2.4453117847442627
    4. 'i' → logprob: -5.570311546325684
    5. ' ' → logprob: -6.695311546325684
    6. ' i' → logprob: -7.820311546325684
    7. '	for' → logprob: -9.320311546325684
    8. 'import' → logprob: -9.945311546325684
    9. '  ' → logprob: -10.820311546325684
    10. '1' → logprob: -12.820311546325684

Token 53: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.2520585358142853
    2. 'for' → logprob: -1.502058506011963
    3. ' for' → logprob: -9.252058982849121
    4. ' i' → logprob: -11.252058982849121
    5. ' ' → logprob: -11.377058982849121
    6. 'd' → logprob: -12.127058982849121
    7. '   ' → logprob: -13.127058982849121
    8. 'a' → logprob: -15.252058982849121
    9. 'p' → logprob: -15.377058982849121
    10. '	i' → logprob: -15.377058982849121

Token 54: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5234662294387817
    2. ' =' → logprob: -0.8984662294387817
    3. 'n' → logprob: -8.398466110229492
    4. 'nt' → logprob: -9.398466110229492
    5. ' ' → logprob: -11.023466110229492
    6. 's' → logprob: -11.773466110229492
    7. '1' → logprob: -12.148466110229492
    8. 'd' → logprob: -13.148466110229492
    9. 't' → logprob: -14.523466110229492
    10. '2' → logprob: -14.898466110229492

Token 55: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.022688012570142746
    2. ' ' → logprob: -3.8976879119873047
    3. '2' → logprob: -6.147687911987305
    4. '   ' → logprob: -13.335187911987305
    5. '  ' → logprob: -14.460187911987305
    6. '```' → logprob: -14.585187911987305
    7. ' ' → logprob: -14.960187911987305
    8. '    ' → logprob: -15.210187911987305
    9. '0' → logprob: -15.272687911987305
    10. '(' → logprob: -15.585187911987305

Token 56: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011071753688156605
    2. '2' → logprob: -4.636071681976318
    3. ' ' → logprob: -6.636071681976318
    4. '0' → logprob: -13.511072158813477
    5. '3' → logprob: -15.448572158813477
    6. '(' → logprob: -16.011072158813477
    7. '   ' → logprob: -16.011072158813477
    8. '  ' → logprob: -16.011072158813477
    9. '```' → logprob: -16.323572158813477
    10. '5' → logprob: -16.448572158813477

Token 57: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 58: '   ' (ID: 271)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.49276113510131836
    2. ' while' → logprob: -0.9927611351013184
    3. '
' → logprob: -4.742761135101318
    4. '	while' → logprob: -4.992761135101318
    5. ' ' → logprob: -7.117761135101318
    6. ' 
' → logprob: -7.992761135101318
    7. '   ' → logprob: -8.242761611938477
    8. '1' → logprob: -8.492761611938477
    9. '<|end|>' → logprob: -8.617761611938477
    10. '2' → logprob: -9.117761611938477

Token 59: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.38839319348335266
    2. ' while' → logprob: -1.1383931636810303
    3. '	while' → logprob: -6.888393402099609
    4. '   ' → logprob: -8.51339340209961
    5. ' ' → logprob: -10.01339340209961
    6. '2' → logprob: -10.13839340209961
    7. '
' → logprob: -10.13839340209961
    8. '1' → logprob: -10.13839340209961
    9. 'While' → logprob: -11.01339340209961
    10. '```' → logprob: -11.13839340209961

Token 60: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.07004747539758682
    2. 'i' → logprob: -2.695047378540039
    3. '(i' → logprob: -9.820047378540039
    4. '	i' → logprob: -10.195047378540039
    5. ' ' → logprob: -11.695047378540039
    6. ' (' → logprob: -12.820047378540039
    7. ' ' → logprob: -13.195047378540039
    8. '1' → logprob: -13.445047378540039
    9. '   ' → logprob: -13.820047378540039
    10. '*i' → logprob: -14.320047378540039

Token 61: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.7268886566162109
    2. '*i' → logprob: -0.7268886566162109
    3. ' <=' → logprob: -4.351888656616211
    4. '<=' → logprob: -4.476888656616211
    5. '*' → logprob: -4.726888656616211
    6. '**' → logprob: -9.726888656616211
    7. 'i' → logprob: -12.351888656616211
    8. ' ' → logprob: -13.351888656616211
    9. ' **' → logprob: -13.351888656616211
    10. '*num' → logprob: -13.476888656616211

Token 62: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -7.5649528298527e-05
    2. ' i' → logprob: -9.500075340270996
    3. '	i' → logprob: -15.500075340270996
    4. ' ' → logprob: -15.875075340270996
    5. '<|end|>' → logprob: -16.500076293945312
    6. '*i' → logprob: -16.625076293945312
    7. '`' → logprob: -17.250076293945312
    8. '  ' → logprob: -17.375076293945312
    9. '
' → logprob: -17.500076293945312
    10. '1' → logprob: -17.500076293945312

Token 63: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.22541557252407074
    2. '<=' → logprob: -1.600415587425232
    3. ' ' → logprob: -14.350415229797363
    4. ' <<=' → logprob: -14.600415229797363
    5. ')<=' → logprob: -14.725415229797363
    6. ' ' → logprob: -15.100415229797363
    7. ']<=' → logprob: -15.100415229797363
    8. ' <=",' → logprob: -15.600415229797363
    9. '<|end|>' → logprob: -15.600415229797363
    10. ' ≤' → logprob: -16.10041618347168

Token 64: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.1602269560098648
    2. ' num' → logprob: -1.9102269411087036
    3. '	num' → logprob: -13.410226821899414
    4. '<num' → logprob: -14.660226821899414
    5. '(num' → logprob: -15.160226821899414
    6. ' ' → logprob: -15.660226821899414
    7. '   ' → logprob: -16.285226821899414
    8. '[num' → logprob: -16.410226821899414
    9. ',num' → logprob: -16.535226821899414
    10. '$num' → logprob: -16.660226821899414

Token 65: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004126488231122494
    2. ' :' → logprob: -5.50412654876709
    3. ':
' → logprob: -10.12912654876709
    4. '):' → logprob: -12.87912654876709
    5. ' and' → logprob: -13.50412654876709
    6. ':**' → logprob: -13.75412654876709
    7. '():' → logprob: -14.12912654876709
    8. ' :
' → logprob: -14.50412654876709
    9. 'and' → logprob: -14.62912654876709
    10. '：' → logprob: -14.75412654876709

Token 66: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2777292728424072
    2. '       ' → logprob: -1.6527292728424072
    3. '   ' → logprob: -3.4027292728424072
    4. ':
' → logprob: -4.777729034423828
    5. ' :' → logprob: -5.402729034423828
    6. ' ' → logprob: -6.152729034423828
    7. '<|end|>' → logprob: -7.027729034423828
    8. '```' → logprob: -8.027729034423828
    9. '    ' → logprob: -8.152729034423828
    10. '<|end|>' → logprob: -8.527729034423828

Token 67: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.14773470163345337
    2. '       ' → logprob: -2.5227346420288086
    3. 'if' (adapté à ' if') → logprob: -3.1477346420288086
    4. ' ' → logprob: -4.772734642028809
    5. ' i' → logprob: -6.272734642028809
    6. '   ' → logprob: -6.272734642028809
    7. '1' → logprob: -7.522734642028809
    8. '<|end|>' → logprob: -8.147734642028809
    9. ' 
' → logprob: -8.397734642028809
    10. 'i' → logprob: -8.897734642028809

Token 68: ' num' (ID: 2269)
  Prédit: ' num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' num' → logprob: -0.014165272004902363
    2. 'num' → logprob: -4.26416540145874
    3. ' ' → logprob: -14.014164924621582
    4. '(num' → logprob: -14.389164924621582
    5. '	num' → logprob: -15.389164924621582
    6. '<num' → logprob: -15.889164924621582
    7. '[num' → logprob: -17.3891658782959
    8. ' ' → logprob: -17.6391658782959
    9. '=num' → logprob: -17.7641658782959
    10. ',num' → logprob: -18.0141658782959

Token 69: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.026781022548675537
    2. '%' → logprob: -3.6517810821533203
    3. '%i' → logprob: -7.77678108215332
    4. ' ' → logprob: -10.15178108215332
    5. ' ' → logprob: -11.52678108215332
    6. '<|end|>' → logprob: -12.52678108215332
    7. '<|end|>' → logprob: -13.15178108215332
    8. '%n' → logprob: -13.52678108215332
    9. '%e' → logprob: -13.65178108215332
    10. ' i' → logprob: -14.02678108215332

Token 70: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.061969365924596786
    2. ' i' → logprob: -2.81196928024292
    3. '	i' → logprob: -13.936969757080078
    4. ' ' → logprob: -14.311969757080078
    5. '<|end|>' → logprob: -16.436969757080078
    6. '   ' → logprob: -16.686969757080078
    7. '*i' → logprob: -17.686969757080078
    8. ' ' → logprob: -18.186969757080078
    9. '<|end|>' → logprob: -18.186969757080078
    10. '  ' → logprob: -18.436969757080078

Token 71: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.07890091091394424
    2. '==' → logprob: -2.5789008140563965
    3. ' ' → logprob: -12.453901290893555
    4. '=' → logprob: -12.703901290893555
    5. '===' → logprob: -13.453901290893555
    6. ' =' → logprob: -13.953901290893555
    7. ')==' → logprob: -14.203901290893555
    8. ' ===' → logprob: -14.703901290893555
    9. ']==' → logprob: -15.328901290893555
    10. '0' → logprob: -15.703901290893555

Token 72: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1602243334054947
    2. ' ' → logprob: -1.9102243185043335
    3. ' ' → logprob: -16.53522491455078
    4. '   ' → logprob: -16.91022491455078
    5. '  ' → logprob: -17.03522491455078
    6. '    ' → logprob: -17.91022491455078
    7. '```' → logprob: -18.16022491455078
    8. '<|end|>' → logprob: -18.59772491455078
    9. '۰' → logprob: -18.84772491455078
    10. '00' → logprob: -19.47272491455078

Token 73: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001170225441455841
    2. ' ' → logprob: -6.7511701583862305
    3. '۰' → logprob: -20.001171112060547
    4. '  ' → logprob: -20.126171112060547
    5. '   ' → logprob: -20.501171112060547
    6. ' ' → logprob: -20.876171112060547
    7. '00' → logprob: -21.563671112060547
    8. '٠' → logprob: -22.188671112060547
    9. '```' → logprob: -22.501171112060547
    10. ' ' → logprob: -22.626171112060547

Token 74: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.28132304549217224
    2. ':
' → logprob: -1.4063230752944946
    3. ':
' → logprob: -9.281323432922363
    4. '):
' → logprob: -10.031323432922363
    5. ':

' → logprob: -11.156323432922363
    6. '       ' → logprob: -11.656323432922363
    7. '):' → logprob: -12.406323432922363
    8. ' and' → logprob: -12.656323432922363
    9. ' :' → logprob: -13.406323432922363
    10. '           ' → logprob: -14.406323432922363

Token 75: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01763414591550827
    2. 'div' → logprob: -4.39263391494751
    3. '       ' → logprob: -5.76763391494751
    4. '```' → logprob: -7.39263391494751
    5. ' divis' → logprob: -8.017634391784668
    6. '[' → logprob: -8.642634391784668
    7. ',' → logprob: -8.767634391784668
    8. ':' → logprob: -9.017634391784668
    9. ':
' → logprob: -9.142634391784668
    10. '          ' → logprob: -9.142634391784668

Token 76: ' divis' (ID: 37826)
  Prédit: ' divis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' divis' → logprob: -0.5567633509635925
    2. 'div' → logprob: -0.9317633509635925
    3. '           ' → logprob: -3.4317634105682373
    4. '               ' → logprob: -7.681763172149658
    5. '       ' → logprob: -9.431763648986816
    6. '	div' → logprob: -9.431763648986816
    7. ' div' → logprob: -9.556763648986816
    8. '```' → logprob: -11.181763648986816
    9. '(div' → logprob: -11.556763648986816
    10. '_div' → logprob: -11.806763648986816

Token 77: 'ors' (ID: 914)
  Prédit: 'ors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ors' → logprob: -1.700132997939363e-05
    2. 'iors' → logprob: -12.375017166137695
    3. '       ' → logprob: -13.000017166137695
    4. 'tors' → logprob: -13.125017166137695
    5. '           ' → logprob: -13.250017166137695
    6. 's' → logprob: -13.375017166137695
    7. 'orsi' → logprob: -13.875017166137695
    8. 'rors' → logprob: -14.000017166137695
    9. 'orsa' → logprob: -14.375017166137695
    10. 'itors' → logprob: -14.750017166137695

Token 78: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.023468030616641045
    2. '.' → logprob: -3.773468017578125
    3. '.extend' → logprob: -8.523468017578125
    4. ' .' → logprob: -10.773468017578125
    5. '.app' → logprob: -13.648468017578125
    6. '.ap' → logprob: -14.398468017578125
    7. '.py' → logprob: -15.398468017578125
    8. '​.' → logprob: -15.398468017578125
    9. 'append' → logprob: -15.523468017578125
    10. '.Append' → logprob: -15.648468017578125

Token 79: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.00043126524542458355
    2. '(' → logprob: -7.750431060791016
    3. '(
' → logprob: -14.500431060791016
    4. ' (' → logprob: -18.500431060791016
    5. 'i' → logprob: -18.625431060791016
    6. '(

' → logprob: -19.125431060791016
    7. '(a' → logprob: -19.500431060791016
    8. ')' → logprob: -20.125431060791016
    9. '(x' → logprob: -20.250431060791016
    10. '()' → logprob: -20.250431060791016

Token 80: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.10105501860380173
    2. ')' → logprob: -2.3510549068450928
    3. ')
' → logprob: -7.726055145263672
    4. '           ' → logprob: -8.226055145263672
    5. '       ' → logprob: -9.476055145263672
    6. '               ' → logprob: -10.851055145263672
    7. ' )
' → logprob: -11.601055145263672
    8. ')

' → logprob: -11.976055145263672
    9. ')i' → logprob: -12.101055145263672
    10. ');
' → logprob: -12.601055145263672

Token 81: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00025084958178922534
    2. '       ' → logprob: -8.500250816345215
    3. ' if' → logprob: -11.125250816345215
    4. '            
' → logprob: -11.125250816345215
    5. 'if' → logprob: -11.875250816345215
    6. '```' → logprob: -12.875250816345215
    7. '
' → logprob: -13.125250816345215
    8. ',' → logprob: -13.625250816345215
    9. '          ' → logprob: -14.125250816345215
    10. '        
' → logprob: -14.500250816345215

Token 82: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.07997246831655502
    2. ' if' → logprob: -2.579972505569458
    3. ' ' → logprob: -7.954972267150879
    4. '           ' → logprob: -8.079972267150879
    5. '
' → logprob: -8.454972267150879
    6. ' 
' → logprob: -8.954972267150879
    7. '```' → logprob: -10.704972267150879
    8. 'mod' → logprob: -11.079972267150879
    9. '            
' → logprob: -11.704972267150879
    10. '               ' → logprob: -11.954972267150879

Token 83: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5785300135612488
    2. ' i' → logprob: -0.8285300135612488
    3. ' num' → logprob: -6.2035298347473145
    4. 'num' → logprob: -7.5785298347473145
    5. '(i' → logprob: -10.953530311584473
    6. '	i' → logprob: -11.078530311584473
    7. ' ' → logprob: -11.578530311584473
    8. ' (' → logprob: -12.453530311584473
    9. ' ' → logprob: -12.828530311584473
    10. '(num' → logprob: -12.953530311584473

Token 84: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.18519528210163116
    2. ' !=' → logprob: -1.8101953268051147
    3. '*' → logprob: -5.560195446014404
    4. '*i' → logprob: -6.685195446014404
    5. ')!=' → logprob: -9.560194969177246
    6. '!==' → logprob: -9.560194969177246
    7. ']!=' → logprob: -9.685194969177246
    8. ' *' → logprob: -10.310194969177246
    9. '()!=' → logprob: -10.810194969177246
    10. ' ' → logprob: -10.935194969177246

Token 85: ' num' (ID: 2269)
  Prédit: ' num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' num' → logprob: -0.16026942431926727
    2. 'num' → logprob: -1.9102693796157837
    3. ' ' → logprob: -10.660269737243652
    4. '(num' → logprob: -11.535269737243652
    5. '	num' → logprob: -11.910269737243652
    6. '1' → logprob: -13.285269737243652
    7. '<num' → logprob: -13.535269737243652
    8. ' (' → logprob: -14.285269737243652
    9. '[num' → logprob: -15.160269737243652
    10. ' ' → logprob: -15.285269737243652

Token 86: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.20209018886089325
    2. ' //' → logprob: -1.7020901441574097
    3. ' ' → logprob: -7.452090263366699
    4. ' ' → logprob: -9.5770902633667
    5. '```' → logprob: -11.8270902633667
    6. '/' → logprob: -12.2020902633667
    7. '/i' → logprob: -12.7020902633667
    8. '`' → logprob: -13.4520902633667
    9. '//=' → logprob: -13.5770902633667
    10. '   ' → logprob: -13.7020902633667

Token 87: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.007607339881360531
    2. ' i' → logprob: -4.882607460021973
    3. '   ' → logprob: -14.757607460021973
    4. ' ' → logprob: -14.757607460021973
    5. '	i' → logprob: -14.882607460021973
    6. '  ' → logprob: -16.632606506347656
    7. '    ' → logprob: -18.757606506347656
    8. ' ' → logprob: -18.757606506347656
    9. '```' → logprob: -18.757606506347656
    10. '_i' → logprob: -19.632606506347656

Token 88: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1609867364168167
    2. ':
' → logprob: -1.9109867811203003
    3. ' and' → logprob: -8.03598690032959
    4. ':
' → logprob: -8.91098690032959
    5. '):
' → logprob: -9.03598690032959
    6. '):' → logprob: -9.91098690032959
    7. '           ' → logprob: -10.41098690032959
    8. ':

' → logprob: -10.91098690032959
    9. '       ' → logprob: -11.41098690032959
    10. 'and' → logprob: -11.53598690032959

Token 89: '               ' (ID: 506)
  Prédit: ' divis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' divis' → logprob: -0.18803809583187103
    2. '               ' → logprob: -1.8130381107330322
    3. 'div' → logprob: -5.063037872314453
    4. '           ' → logprob: -7.563037872314453
    5. '	div' → logprob: -7.563037872314453
    6. '```' → logprob: -8.313037872314453
    7. ' div' → logprob: -8.813037872314453
    8. '(div' → logprob: -9.313037872314453
    9. ' ' → logprob: -9.438037872314453
    10. '                
' → logprob: -9.813037872314453

Token 90: ' divis' (ID: 37826)
  Prédit: ' divis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' divis' → logprob: -0.04888903722167015
    2. 'div' → logprob: -3.048888921737671
    3. '               ' → logprob: -8.67388916015625
    4. '           ' → logprob: -9.29888916015625
    5. '	div' → logprob: -11.42388916015625
    6. '                   ' → logprob: -11.67388916015625
    7. '```' → logprob: -11.92388916015625
    8. ' dividends' → logprob: -12.29888916015625
    9. ' div' → logprob: -13.29888916015625
    10. '_div' → logprob: -13.42388916015625

Token 91: 'ors' (ID: 914)
  Prédit: 'ors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ors' → logprob: -0.002988755702972412
    2. 's' → logprob: -5.877988815307617
    3. 'is' → logprob: -9.877988815307617
    4. 'tors' → logprob: -10.252988815307617
    5. 'ators' → logprob: -10.627988815307617
    6. '.append' → logprob: -11.502988815307617
    7. 'os' → logprob: -11.627988815307617
    8. 'itors' → logprob: -11.627988815307617
    9. 'iors' → logprob: -11.877988815307617
    10. '               ' → logprob: -12.502988815307617

Token 92: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00019293125660624355
    2. '.' → logprob: -8.750192642211914
    3. '.extend' → logprob: -11.375192642211914
    4. '.app' → logprob: -12.125192642211914
    5. '.setdefault' → logprob: -12.250192642211914
    6. ').' → logprob: -12.375192642211914
    7. '`.' → logprob: -13.000192642211914
    8. ' .' → logprob: -13.875192642211914
    9. 'append' → logprob: -14.250192642211914
    10. '.add' → logprob: -14.375192642211914

Token 93: '(num' (ID: 15828)
  Prédit: '(num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(num' → logprob: -0.0009177703177556396
    2. '(' → logprob: -7.000917911529541
    3. 'num' → logprob: -12.625917434692383
    4. '(
' → logprob: -13.750917434692383
    5. ' (' → logprob: -13.750917434692383
    6. '	num' → logprob: -15.000917434692383
    7. ' num' → logprob: -15.125917434692383
    8. ',num' → logprob: -16.375917434692383
    9. ' ' → logprob: -16.500917434692383
    10. '((' → logprob: -17.375917434692383

Token 94: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.033665064722299576
    2. ' //' → logprob: -3.408665180206299
    3. ' ' → logprob: -12.03366470336914
    4. '/' → logprob: -12.53366470336914
    5. '/i' → logprob: -12.53366470336914
    6. ' ' → logprob: -12.78366470336914
    7. '```' → logprob: -14.28366470336914
    8. '//=' → logprob: -14.28366470336914
    9. '	' → logprob: -14.65866470336914
    10. ' /' → logprob: -14.90866470336914

Token 95: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.004080301150679588
    2. ' i' → logprob: -5.504080295562744
    3. '	i' → logprob: -13.754080772399902
    4. ' ' → logprob: -15.129080772399902
    5. '```' → logprob: -15.129080772399902
    6. '   ' → logprob: -15.629080772399902
    7. '_i' → logprob: -16.754079818725586
    8. ')i' → logprob: -17.379079818725586
    9. ')' → logprob: -18.379079818725586
    10. '  ' → logprob: -18.379079818725586

Token 96: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.038255155086517334
    2. ')
' → logprob: -3.288255214691162
    3. '       ' → logprob: -8.913254737854004
    4. ')
' → logprob: -9.788254737854004
    5. ')i' → logprob: -11.288254737854004
    6. '   ' → logprob: -12.163254737854004
    7. ')

' → logprob: -13.413254737854004
    8. ')`
' → logprob: -14.538254737854004
    9. ')`' → logprob: -14.663254737854004
    10. '           ' → logprob: -14.788254737854004

Token 97: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008037998341023922
    2. '   ' → logprob: -5.63303804397583
    3. '
' → logprob: -6.25803804397583
    4. '	' → logprob: -6.25803804397583
    5. '        
' → logprob: -8.383037567138672
    6. ' i' → logprob: -9.133037567138672
    7. '    ' → logprob: -10.133037567138672
    8. 'i' → logprob: -10.383037567138672
    9. '	i' → logprob: -10.383037567138672
    10. '```' → logprob: -10.383037567138672

Token 98: ' i' (ID: 575)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.024495260789990425
    2. '       ' → logprob: -4.1494951248168945
    3. ' i' → logprob: -4.8994951248168945
    4. 'i' (adapté à ' i') → logprob: -7.0244951248168945
    5. '    
' → logprob: -10.399495124816895
    6. '	i' → logprob: -10.524495124816895
    7. '
' → logprob: -11.024495124816895
    8. ' ' → logprob: -12.774495124816895
    9. '        
' → logprob: -12.899495124816895
    10. '```' → logprob: -13.399495124816895

Token 99: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.010404232889413834
    2. ' +=' → logprob: -4.885404109954834
    3. '+' → logprob: -5.885404109954834
    4. '=' → logprob: -11.760404586791992
    5. '+="' → logprob: -13.260404586791992
    6. '1' → logprob: -13.635404586791992
    7. ' ' → logprob: -13.635404586791992
    8. '+='' → logprob: -13.885404586791992
    9. ']+=' → logprob: -14.635404586791992
    10. '++' → logprob: -14.760404586791992

Token 100: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006265374249778688
    2. ' ' → logprob: -7.375626564025879
    3. '```' → logprob: -19.125625610351562
    4. '   ' → logprob: -21.125625610351562
    5. '
' → logprob: -21.250625610351562
    6. '１' → logprob: -21.375625610351562
    7. '2' → logprob: -21.625625610351562
    8. ' ' → logprob: -21.625625610351562
    9. '  ' → logprob: -21.625625610351562
    10. '۱' → logprob: -22.938125610351562

Token 101: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. '```' → logprob: -19.375001907348633
    4. '   ' → logprob: -20.750001907348633
    5. '  ' → logprob: -21.125001907348633
    6. '１' → logprob: -21.250001907348633
    7. '
' → logprob: -21.750001907348633
    8. '۱' → logprob: -22.250001907348633
    9. '2' → logprob: -22.562501907348633
    10. '<|end|>' → logprob: -22.750001907348633

Token 102: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0009614814771339297
    2. ' return' → logprob: -7.3759613037109375
    3. 'return' → logprob: -8.625961303710938
    4. ' ' → logprob: -9.625961303710938
    5. '    
' → logprob: -10.375961303710938
    6. '   ' → logprob: -11.125961303710938
    7. '	return' → logprob: -11.375961303710938
    8. '
' → logprob: -11.750961303710938
    9. ' 
' → logprob: -12.000961303710938
    10. '       ' → logprob: -12.250961303710938

Token 103: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00015836587408557534
    2. ' return' → logprob: -9.625158309936523
    3. 'return' → logprob: -9.875158309936523
    4. ' ' → logprob: -11.375158309936523
    5. '    
' → logprob: -11.375158309936523
    6. '    ' → logprob: -13.000158309936523
    7. '
' → logprob: -13.250158309936523
    8. '       ' → logprob: -13.375158309936523
    9. '.' → logprob: -13.500158309936523
    10. '   ' → logprob: -13.500158309936523

Token 104: ' divis' (ID: 37826)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6963528990745544
    2. 'return' → logprob: -0.9463528990745544
    3. ' return' → logprob: -2.446352958679199
    4. 'div' → logprob: -3.821352958679199
    5. ' divis' → logprob: -5.696352958679199
    6. ' ' → logprob: -6.821352958679199
    7. ' div' → logprob: -8.8213529586792
    8. '	div' → logprob: -9.4463529586792
    9. '    ' → logprob: -9.5713529586792
    10. '	return' → logprob: -9.6963529586792

Token 105: 'ors' (ID: 914)
  Prédit: 'ors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ors' → logprob: -0.0008610807126387954
    2. 's' → logprob: -7.125861167907715
    3. 'is' → logprob: -11.125861167907715
    4. 'tors' → logprob: -11.125861167907715
    5. 'iors' → logprob: -12.250861167907715
    6. 'ators' → logprob: -12.375861167907715
    7. '```' → logprob: -12.750861167907715
    8. 'ectors' → logprob: -13.000861167907715
    9. 'orsi' → logprob: -13.125861167907715
    10. 'rs' → logprob: -13.125861167907715

Token 106: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.014025876298546791
    2. '.' → logprob: -4.764025688171387
    3. '.append' → logprob: -5.264025688171387
    4. 'return' → logprob: -9.139025688171387
    5. '.return' → logprob: -9.514025688171387
    6. 'sort' → logprob: -11.014025688171387
    7. '.reverse' → logprob: -12.014025688171387
    8. '.extend' → logprob: -12.139025688171387
    9. '<|end|>' → logprob: -12.264025688171387
    10. '.remove' → logprob: -13.264025688171387

Token 107: '(reverse' (ID: 110806)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -2.057743949990254e-05
    2. '()
' → logprob: -11.250020980834961
    3. '(' → logprob: -11.875020980834961
    4. ' ()' → logprob: -15.750020980834961
    5. '()

' → logprob: -16.37502098083496
    6. '(reverse' → logprob: -16.37502098083496
    7. '();' → logprob: -16.87502098083496
    8. '()
' → logprob: -17.25002098083496
    9. '()`' → logprob: -17.25002098083496
    10. '())' → logprob: -17.37502098083496

Token 108: '=True' (ID: 7827)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.48386242985725403
    2. '()' → logprob: -1.1088624000549316
    3. ')' → logprob: -2.9838624000549316
    4. '=True' → logprob: -5.983862400054932
    5. '(True' → logprob: -7.983862400054932
    6. '())
' → logprob: -9.60886287689209
    7. '()
' → logprob: -9.98386287689209
    8. '();)' → logprob: -10.73386287689209
    9. ' ())' → logprob: -11.10886287689209
    10. '(False' → logprob: -11.35886287689209

Token 109: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0019397038267925382
    2. ')
' → logprob: -6.25193977355957
    3. '   ' → logprob: -11.50193977355957
    4. ')
' → logprob: -14.87693977355957
    5. ')return' → logprob: -15.25193977355957
    6. ' )' → logprob: -15.50193977355957
    7. ')

' → logprob: -16.25193977355957
    8. ')`' → logprob: -17.87693977355957
    9. '),' → logprob: -18.50193977355957
    10. ' ' → logprob: -18.75193977355957

Token 110: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009267820976674557
    2. 'return' → logprob: -5.634267807006836
    3. ' return' → logprob: -6.384267807006836
    4. '
' → logprob: -6.384267807006836
    5. '<|end|>' → logprob: -6.884267807006836
    6. '	return' → logprob: -7.509267807006836
    7. '    
' → logprob: -8.134267807006836
    8. ' ' → logprob: -8.384267807006836
    9. '<|end|>' → logprob: -10.259267807006836
    10. '  
' → logprob: -10.259267807006836

Token 111: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003266361076384783
    2. 'return' (adapté à ' return') → logprob: -6.253266334533691
    3. ' return' → logprob: -6.628266334533691
    4. '	return' → logprob: -11.878266334533691
    5. ' ' → logprob: -12.628266334533691
    6. '    
' → logprob: -14.253266334533691
    7. '       ' → logprob: -14.253266334533691
    8. '  ' → logprob: -14.378266334533691
    9. '<|end|>' → logprob: -14.628266334533691
    10. '
' → logprob: -15.128266334533691

Token 112: ' divis' (ID: 37826)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.048588622361421585
    2. ' divis' → logprob: -3.048588514328003
    3. '(div' → logprob: -13.798588752746582
    4. '	div' → logprob: -15.923588752746582
    5. '_div' → logprob: -17.673587799072266
    6. '-div' → logprob: -18.173587799072266
    7. '<div' → logprob: -18.423587799072266
    8. ' divers' → logprob: -18.548587799072266
    9. '[' → logprob: -18.798587799072266
    10. 'd' → logprob: -19.173587799072266

Token 113: 'ors' (ID: 914)
  Prédit: 'tors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tors' → logprob: -0.0827813446521759
    2. 'ors' → logprob: -3.0827813148498535
    3. 's' → logprob: -3.4577813148498535
    4. 'rs' → logprob: -6.7077813148498535
    5. 'rors' → logprob: -8.332781791687012
    6. 'n' → logprob: -8.582781791687012
    7. '   ' → logprob: -10.207781791687012
    8. 'ators' → logprob: -10.332781791687012
    9. '[' → logprob: -10.332781791687012
    10. 'ctors' → logprob: -10.582781791687012

Token 114: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.47741207480430603
    2. '<|end|>' → logprob: -1.9774121046066284
    3. 'd' → logprob: -2.227411985397339
    4. 'for' → logprob: -3.227411985397339
    5. 'div' → logprob: -3.227411985397339
    6. 'p' → logprob: -4.477412223815918
    7. 'k' → logprob: -4.852412223815918
    8. 'l' → logprob: -5.602412223815918
    9. 'mask' → logprob: -5.727412223815918
    10. 's' → logprob: -5.977412223815918

Token 115: 'div' (ID: 862)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1981264054775238
    2. 'def' → logprob: -3.0731263160705566
    3. 'd' → logprob: -3.5731263160705566
    4. 'p' → logprob: -3.8231263160705566
    5. 'g' → logprob: -4.448126316070557
    6. 'k' → logprob: -4.823126316070557
    7. 'l' → logprob: -4.948126316070557
    8. 's' → logprob: -5.073126316070557
    9. 'cnt' → logprob: -5.073126316070557
    10. 'ans' → logprob: -5.323126316070557

Token 116: 'is' (ID: 276)
  Prédit: 'is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.0026505710557103157
    2. 's' → logprob: -6.252650737762451
    3. 'iors' → logprob: -8.627650260925293
    4. '```' → logprob: -9.127650260925293
    5. 'ors' → logprob: -9.377650260925293
    6. 'isible' → logprob: -9.877650260925293
    7. 'isi' → logprob: -10.252650260925293
    8. '=' → logprob: -10.377650260925293
    9. ' =' → logprob: -10.502650260925293
    10. 'es' → logprob: -10.752650260925293

Token 117: 'ors' (ID: 914)
  Prédit: 'ors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ors' → logprob: -0.045100461691617966
    2. 's' → logprob: -3.170100450515747
    3. 'tors' → logprob: -7.170100688934326
    4. 'rors' → logprob: -7.545100688934326
    5. 'rs' → logprob: -7.670100688934326
    6. 'iors' → logprob: -9.420100212097168
    7. '=' → logprob: -10.045100212097168
    8. '```' → logprob: -10.545100212097168
    9. '   ' → logprob: -11.045100212097168
    10. '[' → logprob: -11.357600212097168

Token 118: '_list' (ID: 4162)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.23319973051548004
    2. '(' → logprob: -1.6081997156143188
    3. '=' → logprob: -5.108199596405029
    4. ' =' → logprob: -6.608199596405029
    5. '=n' → logprob: -8.608200073242188
    6. '(
' → logprob: -9.733200073242188
    7. '=(' → logprob: -10.483200073242188
    8. '(num' → logprob: -10.483200073242188
    9. '((' → logprob: -10.733200073242188
    10. ' (' → logprob: -11.358200073242188

Token 119: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.201999694108963
    2. ' =' → logprob: -1.7019996643066406
    3. '(' → logprob: -7.576999664306641
    4. '=n' → logprob: -9.95199966430664
    5. '(n' → logprob: -10.70199966430664
    6. '＝' → logprob: -13.70199966430664
    7. '=num' → logprob: -13.95199966430664
    8. ' (=' → logprob: -15.20199966430664
    9. '("="' → logprob: -15.57699966430664
    10. '(num' → logprob: -15.70199966430664

Token 120: ' make' (ID: 1520)
  Prédit: 'make'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'make' → logprob: -0.06256493180990219
    2. ' make' → logprob: -2.8125648498535156
    3. '(make' → logprob: -7.437564849853516
    4. '	make' → logprob: -12.437564849853516
    5. 'n' → logprob: -13.562564849853516
    6. 'div' → logprob: -13.687564849853516
    7. ' n' → logprob: -14.562564849853516
    8. 'list' → logprob: -14.562564849853516
    9. '   ' → logprob: -15.562564849853516
    10. ' ' → logprob: -15.812564849853516

Token 121: '_div' (ID: 36926)
  Prédit: '_div'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_div' → logprob: -0.0001239196863025427
    2. 'div' → logprob: -9.000123977661133
    3. '(div' → logprob: -15.000123977661133
    4. '<div' → logprob: -17.250123977661133
    5. '_dist' → logprob: -17.500123977661133
    6. '_dis' → logprob: -18.125123977661133
    7. '_def' → logprob: -18.125123977661133
    8. '_' → logprob: -18.625123977661133
    9. '_d' → logprob: -18.625123977661133
    10. '_di' → logprob: -18.875123977661133

Token 122: 'is' (ID: 276)
  Prédit: 'is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.005106387659907341
    2. 'div' → logprob: -5.630106449127197
    3. 's' → logprob: -7.130106449127197
    4. '_div' → logprob: -7.505106449127197
    5. '_' → logprob: -10.005105972290039
    6. ' divis' → logprob: -11.005105972290039
    7. '(div' → logprob: -11.380105972290039
    8. 'itors' → logprob: -11.505105972290039
    9. 'tors' → logprob: -11.505105972290039
    10. 'ors' → logprob: -11.755105972290039

Token 123: 'ors' (ID: 914)
  Prédit: 'ors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ors' → logprob: -0.055533185601234436
    2. 'tors' → logprob: -2.9305331707000732
    3. 's' → logprob: -7.930533409118652
    4. 'rors' → logprob: -9.305533409118652
    5. 'n' → logprob: -9.930533409118652
    6. 'rs' → logprob: -10.430533409118652
    7. 'ators' → logprob: -10.805533409118652
    8. 'd' → logprob: -11.555533409118652
    9. 'div' → logprob: -11.805533409118652
    10. 'iors' → logprob: -11.805533409118652

Token 124: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00011403311509639025
    2. '(' → logprob: -9.125114440917969
    3. '(len' → logprob: -12.750114440917969
    4. '(x' → logprob: -13.500114440917969
    5. 'n' → logprob: -15.125114440917969
    6. '((' → logprob: -15.500114440917969
    7. ' (' → logprob: -16.25011444091797
    8. '(
' → logprob: -16.62511444091797
    9. '(num' → logprob: -16.62511444091797
    10. '(s' → logprob: -17.50011444091797

Token 125: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.6166903151315637e-05
    2. ')
' → logprob: -11.125016212463379
    3. ')

' → logprob: -14.000016212463379
    4. ' )' → logprob: -14.500016212463379
    5. ')`' → logprob: -17.625015258789062
    6. '))' → logprob: -17.750015258789062
    7. ')
' → logprob: -18.125015258789062
    8. '[' → logprob: -18.250015258789062
    9. ')[' → logprob: -19.000015258789062
    10. '),' → logprob: -19.125015258789062

Token 126: 'ct' (ID: 308)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.004364132881164551
    2. 'result' → logprob: -6.629364013671875
    3. ' for' → logprob: -6.879364013671875
    4. 'def' → logprob: -7.754364013671875
    5. 'res' → logprob: -8.004364013671875
    6. 'answer' → logprob: -8.754364013671875
    7. 'cnt' → logprob: -9.129364013671875
    8. 'count' → logprob: -9.129364013671875
    9. 'p' → logprob: -9.504364013671875
    10. 'valid' → logprob: -9.629364013671875

Token 127: '_dict' (ID: 11295)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5786193013191223
    2. '=' → logprob: -0.8286193013191223
    3. 'r' → logprob: -6.578619480133057
    4. 's' → logprob: -8.078619003295898
    5. 'f' → logprob: -8.078619003295898
    6. 'rs' → logprob: -8.453619003295898
    7. '=count' → logprob: -9.828619003295898
    8. 'o' → logprob: -9.953619003295898
    9. 'x' → logprob: -10.078619003295898
    10. '_counts' → logprob: -10.703619003295898

Token 128: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2014152854681015
    2. '=' → logprob: -1.7014153003692627
    3. ' ' → logprob: -13.826415061950684
    4. '={}' → logprob: -14.326415061950684
    5. 's' → logprob: -16.826416015625
    6. '=[]' → logprob: -16.951416015625
    7. '＝' → logprob: -16.951416015625
    8. ' ={' → logprob: -17.076416015625
    9. '  ' → logprob: -17.076416015625
    10. ' ' → logprob: -17.326416015625

Token 129: ' collections' (ID: 22690)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'collections' → logprob: -0.012551801279187202
    2. ' collections' → logprob: -4.387551784515381
    3. '{}' → logprob: -10.762552261352539
    4. 'default' → logprob: -11.137552261352539
    5. '{' → logprob: -12.262552261352539
    6. 'collection' → logprob: -13.762552261352539
    7. ' ' → logprob: -15.762552261352539
    8. 'collect' → logprob: -16.38755226135254
    9. '.collections' → logprob: -16.51255226135254
    10. '   ' → logprob: -16.76255226135254

Token 130: '.default' (ID: 15648)
  Prédit: '.Counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.Counter' → logprob: -0.012220711447298527
    2. '.default' → logprob: -4.512220859527588
    3. '.' → logprob: -6.762220859527588
    4. ' defaultdict' → logprob: -12.63722038269043
    5. ' .' → logprob: -13.38722038269043
    6. '.Default' → logprob: -13.38722038269043
    7. '.Order' → logprob: -13.38722038269043
    8. '.counter' → logprob: -13.38722038269043
    9. '.deepcopy' → logprob: -14.01222038269043
    10. 'import' → logprob: -14.13722038269043

Token 131: 'dict' (ID: 20993)
  Prédit: 'dict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dict' → logprob: -4.320199877838604e-07
    2. ' dict' → logprob: -15.125
    3. 'ict' → logprob: -16.25
    4. 'ct' → logprob: -16.625
    5. 'Dict' → logprob: -18.875
    6. 'dic' → logprob: -19.75
    7. 'default' → logprob: -20.75
    8. 'def' → logprob: -21.0
    9. 'd' → logprob: -21.25
    10. '_dict' → logprob: -21.625

Token 132: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00022678142704535276
    2. '(lambda' → logprob: -8.750226974487305
    3. 'int' → logprob: -9.875226974487305
    4. '<int' → logprob: -11.625226974487305
    5. '(' → logprob: -12.375226974487305
    6. '[int' → logprob: -13.125226974487305
    7. ' (' → logprob: -14.500226974487305
    8. '(list' → logprob: -14.750226974487305
    9. '(
' → logprob: -15.750226974487305
    10. ',int' → logprob: -15.875226974487305

Token 133: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0017639553407207131
    2. ')
' → logprob: -6.376763820648193
    3. ')

' → logprob: -10.001764297485352
    4. ')
' → logprob: -11.626764297485352
    5. ' )' → logprob: -12.501764297485352
    6. '
' → logprob: -13.376764297485352
    7. ')n' → logprob: -14.751764297485352
    8. ')

' → logprob: -15.126764297485352
    9. ')`' → logprob: -15.376764297485352
    10. '[' → logprob: -15.876764297485352

Token 134: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0002547832846175879
    2. 'i' → logprob: -10.00025463104248
    3. 'def' → logprob: -10.75025463104248
    4. 'l' → logprob: -10.75025463104248
    5. 'k' → logprob: -11.12525463104248
    6. ' for' → logprob: -11.12525463104248
    7. 'cnt' → logprob: -11.12525463104248
    8. 'current' → logprob: -11.25025463104248
    9. 's' → logprob: -11.25025463104248
    10. 'count' → logprob: -11.50025463104248

Token 135: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.2728658616542816
    2. 'd' → logprob: -1.772865891456604
    3. ' i' → logprob: -3.1478657722473145
    4. 'i' → logprob: -4.6478657722473145
    5. ' k' → logprob: -6.1478657722473145
    6. ' length' → logprob: -6.1478657722473145
    7. ' div' → logprob: -6.2728657722473145
    8. 'div' → logprob: -6.2728657722473145
    9. ' divisor' → logprob: -6.3978657722473145
    10. ' l' → logprob: -6.5228657722473145

Token 136: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.048637326806783676
    2. 'in' → logprob: -3.0486373901367188
    3. ' ' → logprob: -10.798637390136719
    4. 'd' → logprob: -11.423637390136719
    5. 'n' → logprob: -11.673637390136719
    6. '	in' → logprob: -11.798637390136719
    7. ' i' → logprob: -14.298637390136719
    8. ' ' → logprob: -14.548637390136719
    9. 'i' → logprob: -15.173637390136719
    10. ',' → logprob: -15.173637390136719

Token 137: ' divis' (ID: 37826)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.2519313097000122
    2. ' divis' → logprob: -1.5019313097000122
    3. '	div' → logprob: -13.751931190490723
    4. 'range' → logprob: -15.001931190490723
    5. '(div' → logprob: -15.376931190490723
    6. ' ' → logprob: -15.876931190490723
    7. '[' → logprob: -16.00193214416504
    8. '   ' → logprob: -16.12693214416504
    9. 'n' → logprob: -16.25193214416504
    10. '_div' → logprob: -16.62693214416504

Token 138: 'ors' (ID: 914)
  Prédit: 'ors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ors' → logprob: -0.06055449694395065
    2. 'is' → logprob: -2.9355545043945312
    3. 's' → logprob: -5.435554504394531
    4. 'tors' → logprob: -7.185554504394531
    5. 'rs' → logprob: -8.935554504394531
    6. 'iors' → logprob: -9.560554504394531
    7. 'itors' → logprob: -10.185554504394531
    8. '```' → logprob: -10.185554504394531
    9. 'ectors' → logprob: -10.560554504394531
    10. 'ators' → logprob: -10.560554504394531

Token 139: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.11782900989055634
    2. ':' → logprob: -2.2428290843963623
    3. '_:' → logprob: -5.367828845977783
    4. ':
' → logprob: -8.992829322814941
    5. '_' → logprob: -9.992829322814941
    6. 's' → logprob: -10.492829322814941
    7. '):' → logprob: -10.617829322814941
    8. 'd' → logprob: -10.867829322814941
    9. '[:' → logprob: -11.242829322814941
    10. '>:' → logprob: -11.367829322814941

Token 140: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0003818140830844641
    2. ':
' → logprob: -7.875381946563721
    3. ' :' → logprob: -13.750381469726562
    4. ',' → logprob: -15.750381469726562
    5. ':

' → logprob: -15.875381469726562
    6. ':def' → logprob: -16.250381469726562
    7. '):' → logprob: -16.375381469726562
    8. ':
' → logprob: -16.875381469726562
    9. ':**' → logprob: -17.750381469726562
    10. '():' → logprob: -18.125381469726562

Token 141: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021301066502928734
    2. '    
' → logprob: -4.52130126953125
    3. ':' → logprob: -4.89630126953125
    4. ' ' → logprob: -7.64630126953125
    5. '	ct' → logprob: -8.14630126953125
    6. ':
' → logprob: -8.39630126953125
    7. '
' → logprob: -8.64630126953125
    8. '   
' → logprob: -8.89630126953125
    9. ' if' → logprob: -9.02130126953125
    10. '    
' → logprob: -9.14630126953125

Token 142: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7037334442138672
    2. 'for' → logprob: -1.5787334442138672
    3. 'valid' → logprob: -2.703733444213867
    4. 'ok' → logprob: -2.953733444213867
    5. 'flag' → logprob: -2.953733444213867
    6. 'if' (adapté à ' if') → logprob: -3.453733444213867
    7. 'cnt' → logprob: -3.453733444213867
    8. 'ct' → logprob: -4.328733444213867
    9. 'i' → logprob: -4.828733444213867
    10. 'found' → logprob: -5.078733444213867

Token 143: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.6006290912628174
    2. 'x' → logprob: -1.8506290912628174
    3. 'n' → logprob: -1.9756290912628174
    4. ' x' → logprob: -2.1006290912628174
    5. ' d' → logprob: -2.3506290912628174
    6. ' n' → logprob: -2.3506290912628174
    7. ' all' → logprob: -2.8506290912628174
    8. '(x' → logprob: -3.2256290912628174
    9. ' (' → logprob: -3.3506290912628174
    10. '(n' → logprob: -4.100628852844238

Token 144: ' %' (ID: 1851)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.07396657019853592
    2. '==' → logprob: -3.3239665031433105
    3. ' !=' → logprob: -4.0739665031433105
    4. ' <' → logprob: -4.4489665031433105
    5. ' <=' → logprob: -5.8239665031433105
    6. ' ' → logprob: -6.5739665031433105
    7. '!=' → logprob: -7.5739665031433105
    8. ' *' → logprob: -7.8239665031433105
    9. '<n' → logprob: -8.448966979980469
    10. ' %' → logprob: -8.448966979980469

Token 145: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.03185243532061577
    2. ' ' → logprob: -5.2818522453308105
    3. '(n' → logprob: -5.4068522453308105
    4. '(' → logprob: -5.4068522453308105
    5. 'x' → logprob: -5.9068522453308105
    6. '(x' → logprob: -5.9068522453308105
    7. ' (' → logprob: -6.0318522453308105
    8. 'n' → logprob: -6.4068522453308105
    9. 'ct' → logprob: -6.4068522453308105
    10. '(div' → logprob: -6.7818522453308105

Token 146: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.013284110464155674
    2. '(' → logprob: -5.388284206390381
    3. '(n' → logprob: -5.763284206390381
    4. '4' → logprob: -6.638284206390381
    5. '3' → logprob: -6.763284206390381
    6. 'n' → logprob: -7.138284206390381
    7. '1' → logprob: -7.388284206390381
    8. 'd' → logprob: -8.138283729553223
    9. '(int' → logprob: -8.388283729553223
    10. '(d' → logprob: -8.638283729553223

Token 147: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5793688297271729
    2. '==' → logprob: -0.8293688297271729
    3. ' !=' → logprob: -6.204368591308594
    4. '!=' → logprob: -6.954368591308594
    5. '0' → logprob: -8.454368591308594
    6. '=' → logprob: -8.704368591308594
    7. ' =' → logprob: -10.579368591308594
    8. ':' → logprob: -10.829368591308594
    9. ' ' → logprob: -11.829368591308594
    10. '==
' → logprob: -12.204368591308594

Token 148: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0463440865278244
    2. ' ' → logprob: -3.296344041824341
    3. '1' → logprob: -4.79634428024292
    4. 'd' → logprob: -12.858843803405762
    5. '```' → logprob: -14.233843803405762
    6. ' d' → logprob: -14.733843803405762
    7. ' ' → logprob: -14.733843803405762
    8. '   ' → logprob: -15.171343803405762
    9. '  ' → logprob: -15.233843803405762
    10. '=' → logprob: -15.233843803405762

Token 149: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01624937355518341
    2. '1' → logprob: -4.141249179840088
    3. ' ' → logprob: -8.516249656677246
    4. 'd' → logprob: -11.516249656677246
    5. 'n' → logprob: -13.516249656677246
    6. '
' → logprob: -14.203749656677246
    7. '```' → logprob: -14.391249656677246
    8. '   ' → logprob: -14.703749656677246
    9. ' d' → logprob: -15.891249656677246
    10. '

' → logprob: -15.953749656677246

Token 150: ' or' (ID: 503)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01209917850792408
    2. ':
' → logprob: -4.512099266052246
    3. ' :' → logprob: -8.137099266052246
    4. ' or' → logprob: -8.137099266052246
    5. ' and' → logprob: -8.262099266052246
    6. ' continue' → logprob: -9.762099266052246
    7. '   ' → logprob: -9.887099266052246
    8. 'continue' → logprob: -10.637099266052246
    9. '       ' → logprob: -11.262099266052246
    10. ' :
' → logprob: -11.262099266052246

Token 151: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.7617021203041077
    2. ' n' → logprob: -2.011702060699463
    3. ' x' → logprob: -2.386702060699463
    4. 'd' → logprob: -2.636702060699463
    5. ' ct' → logprob: -2.761702060699463
    6. 'n' → logprob: -3.386702060699463
    7. ' (' → logprob: -3.511702060699463
    8. 'ct' → logprob: -3.636702060699463
    9. 'x' → logprob: -3.886702060699463
    10. ' not' → logprob: -4.261702060699463

Token 152: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.026840565726161003
    2. '==' → logprob: -3.9018404483795166
    3. ' !=' → logprob: -5.776840686798096
    4. ' ' → logprob: -6.651840686798096
    5. ' >' → logprob: -7.026840686798096
    6. ' <' → logprob: -7.651840686798096
    7. ' %' → logprob: -8.651840209960938
    8. '%' → logprob: -9.401840209960938
    9. '>' → logprob: -9.526840209960938
    10. ' not' → logprob: -10.151840209960938

Token 153: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7215185165405273
    2. ' ' → logprob: -1.3465185165405273
    3. '0' → logprob: -1.9715185165405273
    4. 'n' → logprob: -2.5965185165405273
    5. ' n' → logprob: -3.2215185165405273
    6. '2' → logprob: -9.471518516540527
    7. '3' → logprob: -11.596518516540527
    8. '	n' → logprob: -11.596518516540527
    9. '   ' → logprob: -11.659018516540527
    10. '  ' → logprob: -11.971518516540527

Token 154: '1' (ID: 16)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5296152234077454
    2. '1' → logprob: -1.2796151638031006
    3. '0' → logprob: -2.0296151638031006
    4. '2' → logprob: -7.02961540222168
    5. ' ' → logprob: -8.02961540222168
    6. ' n' → logprob: -8.15461540222168
    7. '3' → logprob: -10.40461540222168
    8. '4' → logprob: -10.65461540222168
    9. '6' → logprob: -11.02961540222168
    10. '7' → logprob: -11.71711540222168

Token 155: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04344739764928818
    2. ':
' → logprob: -3.168447494506836
    3. '       ' → logprob: -8.168447494506836
    4. '   ' → logprob: -9.043447494506836
    5. ':return' → logprob: -11.543447494506836
    6. ' continue' → logprob: -11.668447494506836
    7. '	continue' → logprob: -11.793447494506836
    8. ' :' → logprob: -12.418447494506836
    9. ' or' → logprob: -12.418447494506836
    10. ':
' → logprob: -12.918447494506836

Token 156: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013342450372874737
    2. ' continue' → logprob: -4.888342380523682
    3. 'continue' → logprob: -5.513342380523682
    4. '   ' → logprob: -6.638342380523682
    5. '	continue' → logprob: -8.88834285736084
    6. ':
' → logprob: -9.88834285736084
    7. '
' → logprob: -10.38834285736084
    8. ':' → logprob: -10.51334285736084
    9. 'ct' → logprob: -10.76334285736084
    10. '	   ' → logprob: -11.01334285736084

Token 157: ' continue' (ID: 4901)
  Prédit: ' continue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.5193533897399902
    2. '   ' → logprob: -1.5193533897399902
    3. 'continue' (adapté à ' continue') → logprob: -2.1443533897399902
    4. '       ' → logprob: -2.7693533897399902
    5. '	continue' → logprob: -5.64435338973999
    6. 'ct' → logprob: -7.39435338973999
    7. ' ct' → logprob: -7.51935338973999
    8. ' ' → logprob: -7.51935338973999
    9. '
' → logprob: -8.019353866577148
    10. '   ' → logprob: -8.269353866577148

Token 158: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10470160841941833
    2. '   ' → logprob: -2.729701519012451
    3. '    
' → logprob: -3.729701519012451
    4. '  
' → logprob: -5.604701519012451
    5. ' 
' → logprob: -5.604701519012451
    6. '   
' → logprob: -6.479701519012451
    7. '<|end|>' → logprob: -8.10470199584961
    8. '\n' → logprob: -8.60470199584961
    9. '
' → logprob: -8.85470199584961
    10. '

' → logprob: -9.22970199584961

Token 159: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13564415276050568
    2. '
' → logprob: -2.2606441974639893
    3. '    
' → logprob: -3.8856441974639893
    4. '  
' → logprob: -7.76064395904541
    5. '   
' → logprob: -8.63564395904541
    6. 'ct' → logprob: -8.76064395904541
    7. ' 
' → logprob: -9.01064395904541
    8. ' for' → logprob: -9.13564395904541
    9. 'for' → logprob: -9.13564395904541
    10. '  ' → logprob: -9.13564395904541

Token 160: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.045770525932312
    2. 'cnt' → logprob: -2.0457706451416016
    3. 's' → logprob: -2.6707706451416016
    4. 'count' → logprob: -2.9207706451416016
    5. 'pattern' → logprob: -3.1707706451416016
    6. 'length' → logprob: -3.2957706451416016
    7. 'for' → logprob: -3.4207706451416016
    8. 'mask' → logprob: -3.7957706451416016
    9. ' for' → logprob: -3.9207706451416016
    10. 'm' → logprob: -3.9207706451416016

Token 161: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002855755155906081
    2. ':
' → logprob: -5.8778557777404785
    3. ' :' → logprob: -10.12785530090332
    4. '   ' → logprob: -12.25285530090332
    5. ',' → logprob: -13.25285530090332
    6. ' :
' → logprob: -13.62785530090332
    7. '       ' → logprob: -14.37785530090332
    8. ':

' → logprob: -14.37785530090332
    9. '):' → logprob: -14.62785530090332
    10. ':def' → logprob: -15.37785530090332

Token 162: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6923651695251465
    2. '       ' → logprob: -1.6923651695251465
    3. ' for' → logprob: -2.1923651695251465
    4. 'count' → logprob: -2.3173651695251465
    5. ' count' → logprob: -3.1923651695251465
    6. 'for' → logprob: -4.1923651695251465
    7. ' cnt' → logprob: -4.6923651695251465
    8. 'cnt' → logprob: -5.1923651695251465
    9. ' ct' → logprob: -5.3173651695251465
    10. 'ct' → logprob: -5.4423651695251465

Token 163: ' k' (ID: 372)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -1.5208561420440674
    2. 'cnt' → logprob: -1.8958561420440674
    3. 'pattern' → logprob: -1.8958561420440674
    4. '   ' → logprob: -2.2708561420440674
    5. 'flag' → logprob: -2.8958561420440674
    6. 'valid' → logprob: -3.3958561420440674
    7. 'period' → logprob: -3.7708561420440674
    8. 'ok' → logprob: -4.020855903625488
    9. 'ct' → logprob: -4.145855903625488
    10. 'length' → logprob: -4.145855903625488

Token 164: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.007622722536325455
    2. '=' → logprob: -4.882622718811035
    3. ' ' → logprob: -12.132622718811035
    4. 'd' → logprob: -12.882622718811035
    5. ',' → logprob: -13.257622718811035
    6. 'x' → logprob: -14.257622718811035
    7. 'for' → logprob: -14.257622718811035
    8. '   ' → logprob: -14.757622718811035
    9. '    ' → logprob: -14.820122718811035
    10. 'k' → logprob: -14.945122718811035

Token 165: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.06348150223493576
    2. '0' → logprob: -4.313481330871582
    3. ' n' → logprob: -4.688481330871582
    4. 'x' → logprob: -4.813481330871582
    5. 'd' → logprob: -4.813481330871582
    6. '[n' → logprob: -5.438481330871582
    7. '(n' → logprob: -5.688481330871582
    8. 'int' → logprob: -5.813481330871582
    9. 'all' → logprob: -5.938481330871582
    10. '2' → logprob: -6.313481330871582

Token 166: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.4741705358028412
    2. ' //' → logprob: -0.9741705656051636
    3. 'd' → logprob: -9.599170684814453
    4. '
' → logprob: -11.849170684814453
    5. '#' → logprob: -12.474170684814453
    6. ' d' → logprob: -12.474170684814453
    7. '/d' → logprob: -13.099170684814453
    8. ' ' → logprob: -13.474170684814453
    9. '   ' → logprob: -13.599170684814453
    10. '%d' → logprob: -13.724170684814453

Token 167: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.0206720617134124e-05
    2. ' d' → logprob: -11.50001049041748
    3. ' ' → logprob: -19.125009536743164
    4. '	d' → logprob: -20.250009536743164
    5. '   ' → logprob: -20.625009536743164
    6. '
' → logprob: -20.750009536743164
    7. '<|end|>' → logprob: -20.875009536743164
    8. '(d' → logprob: -21.500009536743164
    9. ')d' → logprob: -21.625009536743164
    10. '  ' → logprob: -21.625009536743164

Token 168: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1189928874373436
    2. '       ' → logprob: -2.618992805480957
    3. '        
' → logprob: -4.243992805480957
    4. '
' → logprob: -4.493992805480957
    5. 'count' → logprob: -5.118992805480957
    6. '  
' → logprob: -5.993992805480957
    7. ' 
' → logprob: -7.368992805480957
    8. '   ' → logprob: -7.493992805480957
    9. '0' → logprob: -7.618992805480957
    10. '    
' → logprob: -7.993992805480957

Token 169: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10394994914531708
    2. '
' → logprob: -2.978950023651123
    3. 'count' → logprob: -3.978950023651123
    4. '   ' → logprob: -4.228950023651123
    5. '        
' → logprob: -5.853950023651123
    6. 'for' → logprob: -6.353950023651123
    7. 'cnt' → logprob: -6.353950023651123
    8. ' for' → logprob: -6.728950023651123
    9. 's' → logprob: -6.978950023651123
    10. '  
' → logprob: -7.603950023651123

Token 170: ' #' (ID: 1069)
  Prédit: 'flag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'flag' → logprob: -1.585630178451538
    2. '       ' → logprob: -1.960630178451538
    3. 'pattern' → logprob: -1.960630178451538
    4. 'cnt' → logprob: -2.710630178451538
    5. 'valid' → logprob: -2.835630178451538
    6. 'ok' → logprob: -3.085630178451538
    7. 'count' → logprob: -3.210630178451538
    8. 'ct' → logprob: -3.210630178451538
    9. 's' → logprob: -3.460630178451538
    10. 'for' → logprob: -3.460630178451538

Token 171: ' On' (ID: 2160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.6981489658355713
    2. 'pattern' → logprob: -1.6981489658355713
    3. 'cnt' → logprob: -1.9481489658355713
    4. 's' → logprob: -1.9481489658355713
    5. 'count' → logprob: -2.6981489658355713
    6. 'ct' → logprob: -3.1981489658355713
    7. 'flag' → logprob: -3.5731489658355713
    8. 'ok' → logprob: -3.8231489658355713
    9. 'sub' → logprob: -4.198148727416992
    10. 'tmp' → logprob: -4.323148727416992

Token 172: ' cherche' (ID: 52345)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.010128716006875038
    2. 'es' → logprob: -4.760128498077393
    3. 'ce' → logprob: -8.01012897491455
    4. 'ly' → logprob: -8.13512897491455
    5. ' e' → logprob: -8.13512897491455
    6. ' for' → logprob: -8.63512897491455
    7. 's' → logprob: -9.88512897491455
    8. '       ' → logprob: -9.88512897491455
    9. 'for' → logprob: -10.13512897491455
    10. 't' → logprob: -10.51012897491455

Token 173: ' le' (ID: 505)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.1874713897705078
    2. ' if' → logprob: -1.5624713897705078
    3. 'to' → logprob: -2.062471389770508
    4. 'à' → logprob: -2.312471389770508
    5. ' à' → logprob: -2.562471389770508
    6. ' to' → logprob: -2.687471389770508
    7. 'si' → logprob: -4.187471389770508
    8. 'le' → logprob: -4.312471389770508
    9. 'la' → logprob: -4.687471389770508
    10. 'un' → logprob: -4.812471389770508

Token 174: ' nombre' (ID: 9733)
  Prédit: 'pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pattern' → logprob: -1.4948313236236572
    2. ' pattern' → logprob: -1.8698313236236572
    3. 'for' → logprob: -2.7448313236236572
    4. ' first' → logprob: -2.9948313236236572
    5. 'k' → logprob: -3.1198313236236572
    6. 'first' → logprob: -3.1198313236236572
    7. 'period' → logprob: -3.2448313236236572
    8. ' for' → logprob: -3.3698313236236572
    9. 'minimum' → logprob: -3.6198313236236572
    10. 'count' → logprob: -3.9948313236236572

Token 175: ' y' (ID: 342)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.24326756596565247
    2. 'de' → logprob: -1.74326753616333
    3. ' of' → logprob: -4.24326753616333
    4. '       ' → logprob: -4.36826753616333
    5. 'of' → logprob: -5.49326753616333
    6. 'd' → logprob: -5.86826753616333
    7. 's' → logprob: -6.36826753616333
    8. ' d' → logprob: -7.49326753616333
    9. ' des' → logprob: -7.61826753616333
    10. 'des' → logprob: -7.86826753616333

Token 176: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.074272520840168
    2. ' de' → logprob: -3.199272632598877
    3. '=' → logprob: -4.574272632598877
    4. '       ' → logprob: -5.074272632598877
    5. 'de' → logprob: -5.574272632598877
    6. 's' → logprob: -6.074272632598877
    7. ',' → logprob: -6.199272632598877
    8. 'for' → logprob: -7.074272632598877
    9. ' for' → logprob: -7.199272632598877
    10. ' of' → logprob: -7.824272632598877

Token 177: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19002635776996613
    2. ' =' → logprob: -1.9400264024734497
    3. ' de' → logprob: -4.44002628326416
    4. '=' → logprob: -4.69002628326416
    5. ' for' → logprob: -6.56502628326416
    6. ' of' → logprob: -6.81502628326416
    7. ',' → logprob: -7.06502628326416
    8. 'de' → logprob: -7.44002628326416
    9. '        ' → logprob: -7.56502628326416
    10. ' d' → logprob: -7.69002628326416

Token 178: ' #' (ID: 1069)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.32156476378440857
    2. ' =' → logprob: -2.0715646743774414
    3. '=' → logprob: -2.5715646743774414
    4. '       ' → logprob: -3.8215646743774414
    5. 'for' → logprob: -4.321564674377441
    6. 'cnt' → logprob: -4.446564674377441
    7. 'count' → logprob: -4.696564674377441
    8. ' y' → logprob: -5.446564674377441
    9. ' for' → logprob: -6.321564674377441
    10. 'ans' → logprob: -6.821564674377441

Token 179: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.15378442406654358
    2. ' y' → logprob: -3.4037845134735107
    3. 'for' → logprob: -3.7787845134735107
    4. 'count' → logprob: -4.403784275054932
    5. 'cnt' → logprob: -4.528784275054932
    6. ' for' → logprob: -5.153784275054932
    7. 'found' → logprob: -5.153784275054932
    8. 'flag' → logprob: -5.403784275054932
    9. '#' → logprob: -5.403784275054932
    10. 's' → logprob: -5.653784275054932

Token 180: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31336382031440735
    2. '=' → logprob: -1.313363790512085
    3. ' ' → logprob: -10.688364028930664
    4. '_bits' → logprob: -11.313364028930664
    5. 's' → logprob: -11.438364028930664
    6. ',' → logprob: -12.188364028930664
    7. ' ' → logprob: -12.313364028930664
    8. '   ' → logprob: -12.688364028930664
    9. 'count' → logprob: -12.688364028930664
    10. '=int' → logprob: -13.188364028930664

Token 181: ' (' (ID: 350)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -1.0880950689315796
    2. 'int' → logprob: -1.4630950689315796
    3. 'x' → logprob: -2.338095188140869
    4. '0' → logprob: -2.338095188140869
    5. '(int' → logprob: -2.588095188140869
    6. '(' → logprob: -2.838095188140869
    7. ' (' → logprob: -3.588095188140869
    8. '(k' → logprob: -4.588095188140869
    9. 'pow' → logprob: -4.713095188140869
    10. 'sum' → logprob: -4.713095188140869

Token 182: '2' (ID: 17)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.37498342990875244
    2. 'x' → logprob: -1.6249834299087524
    3. '(x' → logprob: -3.124983310699463
    4. '(int' → logprob: -3.874983310699463
    5. 'sum' → logprob: -4.624983310699463
    6. '(' → logprob: -4.749983310699463
    7. 'pow' → logprob: -4.749983310699463
    8. '1' → logprob: -5.249983310699463
    9. '2' → logprob: -5.624983310699463
    10. 'k' → logprob: -5.874983310699463

Token 183: '^' (ID: 61)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -0.3727504014968872
    2. ' **' → logprob: -1.2477504014968872
    3. ' *' → logprob: -3.8727502822875977
    4. '*k' → logprob: -6.497750282287598
    5. '*' → logprob: -7.497750282287598
    6. ')' → logprob: -8.122750282287598
    7. ' **)' → logprob: -8.622750282287598
    8. '**)' → logprob: -8.872750282287598
    9. ')**' → logprob: -9.372750282287598
    10. '*d' → logprob: -9.497750282287598

Token 184: 'n' (ID: 77)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.013618605211377144
    2. '(k' → logprob: -5.013618469238281
    3. 'd' → logprob: -5.138618469238281
    4. '(' → logprob: -8.013618469238281
    5. '(n' → logprob: -8.138618469238281
    6. 'n' → logprob: -9.263618469238281
    7. '(d' → logprob: -9.763618469238281
    8. ' (' → logprob: -9.888618469238281
    9. ')' → logprob: -10.138618469238281
    10. ' k' → logprob: -10.638618469238281

Token 185: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.040514618158340454
    2. '-' → logprob: -3.2905147075653076
    3. ')' → logprob: -7.0405144691467285
    4. ' ' → logprob: -7.1655144691467285
    5. '-k' → logprob: -8.290514945983887
    6. '
' → logprob: -9.415514945983887
    7. ' %' → logprob: -9.540514945983887
    8. '%' → logprob: -9.540514945983887
    9. ' //' → logprob: -9.915514945983887
    10. ' *' → logprob: -10.165514945983887

Token 186: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5352563261985779
    2. '(' → logprob: -1.4102563858032227
    3. '2' → logprob: -2.6602563858032227
    4. 'pow' → logprob: -2.6602563858032227
    5. 'k' → logprob: -4.410256385803223
    6. '(k' → logprob: -5.035256385803223
    7. ' (' → logprob: -5.785256385803223
    8. ' ' → logprob: -6.410256385803223
    9. '(pow' → logprob: -6.410256385803223
    10. ' pow' → logprob: -6.660256385803223

Token 187: '2' (ID: 17)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.8725212216377258
    2. '(' → logprob: -0.9975212216377258
    3. '2' → logprob: -2.122521162033081
    4. '1' → logprob: -2.497521162033081
    5. '(pow' → logprob: -5.37252140045166
    6. 'k' → logprob: -5.87252140045166
    7. '((' → logprob: -6.99752140045166
    8. ')' → logprob: -7.12252140045166
    9. '(k' → logprob: -7.24752140045166
    10. ' pow' → logprob: -7.87252140045166

Token 188: '^' (ID: 61)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.14983601868152618
    2. ')' → logprob: -2.2748360633850098
    3. 'k' → logprob: -4.39983606338501
    4. ' **' → logprob: -5.14983606338501
    5. '^' → logprob: -5.27483606338501
    6. ' )' → logprob: -5.27483606338501
    7. '*k' → logprob: -5.77483606338501
    8. '**)' → logprob: -6.77483606338501
    9. 'd' → logprob: -7.52483606338501
    10. '*' → logprob: -8.024835586547852

Token 189: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0016275715315714478
    2. '(k' → logprob: -7.001627445220947
    3. 'd' → logprob: -7.626627445220947
    4. '(' → logprob: -8.501627922058105
    5. '(n' → logprob: -11.876627922058105
    6. '((' → logprob: -12.126627922058105
    7. '(d' → logprob: -12.626627922058105
    8. ' k' → logprob: -12.876627922058105
    9. 'n' → logprob: -12.876627922058105
    10. '{k' → logprob: -13.376627922058105

Token 190: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05952160432934761
    2. '+' → logprob: -3.3095216751098633
    3. ' +' → logprob: -4.059521675109863
    4. ' )' → logprob: -6.184521675109863
    5. '-' → logprob: -7.934521675109863
    6. '*' → logprob: -7.934521675109863
    7. '%' → logprob: -8.559521675109863
    8. ')+' → logprob: -8.809521675109863
    9. ' -' → logprob: -8.934521675109863
    10. ')%' → logprob: -9.059521675109863

Token 191: ' //' (ID: 602)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -1.0058844089508057
    2. '       ' → logprob: -1.6308844089508057
    3. ')' → logprob: -1.7558844089508057
    4. ' ' → logprob: -2.5058844089508057
    5. ' +' → logprob: -2.7558844089508057
    6. '
' → logprob: -2.8808844089508057
    7. '-' → logprob: -4.505884170532227
    8. '<|end|>' → logprob: -4.755884170532227
    9. ' )' → logprob: -5.005884170532227
    10. '+' → logprob: -5.255884170532227

Token 192: ' (' (ID: 350)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.217605859041214
    2. 'k' → logprob: -1.7176058292388916
    3. '2' → logprob: -5.092606067657471
    4. '(' → logprob: -5.092606067657471
    5. '1' → logprob: -6.842606067657471
    6. ' d' → logprob: -7.342606067657471
    7. '(k' → logprob: -7.467606067657471
    8. 'mod' → logprob: -7.842606067657471
    9. ' k' → logprob: -8.217605590820312
    10. '(d' → logprob: -8.342605590820312

Token 193: '2' (ID: 17)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4927672743797302
    2. '2' → logprob: -0.9927672743797302
    3. ')' → logprob: -4.867767333984375
    4. '1' → logprob: -5.492767333984375
    5. ' (' → logprob: -6.242767333984375
    6. '(mod' → logprob: -6.992767333984375
    7. 'pow' → logprob: -6.992767333984375
    8. '((' → logprob: -7.242767333984375
    9. ' ' → logprob: -7.492767333984375
    10. 'mod' → logprob: -7.492767333984375

Token 194: '^' (ID: 61)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.7662319540977478
    2. 'k' → logprob: -0.7662319540977478
    3. '**' → logprob: -3.0162320137023926
    4. '^' → logprob: -4.516232013702393
    5. '*k' → logprob: -5.766232013702393
    6. '*d' → logprob: -5.891232013702393
    7. ')' → logprob: -7.141232013702393
    8. ' d' → logprob: -7.266232013702393
    9. ' k' → logprob: -7.516232013702393
    10. '*' → logprob: -7.766232013702393

Token 195: 'k' (ID: 74)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.42941731214523315
    2. 'k' → logprob: -1.054417371749878
    3. '(k' → logprob: -8.304417610168457
    4. '(d' → logprob: -8.679417610168457
    5. 'n' → logprob: -9.179417610168457
    6. '(' → logprob: -10.054417610168457
    7. ' d' → logprob: -10.304417610168457
    8. ' k' → logprob: -10.804417610168457
    9. '1' → logprob: -10.929417610168457
    10. ' ' → logprob: -11.054417610168457

Token 196: ' +' (ID: 659)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.07958503067493439
    2. ')' → logprob: -2.829585075378418
    3. '-' → logprob: -4.954585075378418
    4. ' )' → logprob: -5.454585075378418
    5. ' ' → logprob: -5.954585075378418
    6. ' +' → logprob: -6.204585075378418
    7. '+' → logprob: -7.329585075378418
    8. ')-' → logprob: -8.454585075378418
    9. '       ' → logprob: -10.079585075378418
    10. '    ' → logprob: -10.079585075378418

Token 197: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002748646307736635
    2. ' ' → logprob: -6.127748489379883
    3. '2' → logprob: -8.127748489379883
    4. '(' → logprob: -9.127748489379883
    5. ')' → logprob: -9.127748489379883
    6. 'mod' → logprob: -11.502748489379883
    7. ' (' → logprob: -11.627748489379883
    8. '0' → logprob: -11.752748489379883
    9. '
' → logprob: -12.377748489379883
    10. '...' → logprob: -13.252748489379883

Token 198: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008116515236906707
    2. '2' → logprob: -8.000811576843262
    3. ' ' → logprob: -8.250811576843262
    4. '(' → logprob: -9.375811576843262
    5. ')' → logprob: -9.875811576843262
    6. '0' → logprob: -10.375811576843262
    7. 'mod' → logprob: -11.000811576843262
    8. '
' → logprob: -12.000811576843262
    9. 'x' → logprob: -13.125811576843262
    10. '...' → logprob: -13.188311576843262

Token 199: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008002190152183175
    2. ' )' → logprob: -7.500800132751465
    3. ')
' → logprob: -8.500800132751465
    4. '       ' → logprob: -11.125800132751465
    5. '   ' → logprob: -12.500800132751465
    6. '#' → logprob: -12.750800132751465
    7. '))' → logprob: -12.750800132751465
    8. ')n' → logprob: -12.750800132751465
    9. ')

' → logprob: -13.000800132751465
    10. ')`' → logprob: -13.375800132751465

Token 200: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 201: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' (adapté à ' y') → logprob: -0.7102391719818115
    2. '       ' → logprob: -1.4602391719818115
    3. ' y' → logprob: -2.7102391719818115
    4. 'pow' → logprob: -2.8352391719818115
    5. 'ans' → logprob: -2.9602391719818115
    6. ' ans' → logprob: -3.9602391719818115
    7. 'ct' → logprob: -4.210239410400391
    8. 'for' → logprob: -4.835239410400391
    9. ' for' → logprob: -4.960239410400391
    10. 'if' → logprob: -4.960239410400391

Token 202: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023249903693795204
    2. '=' → logprob: -3.773249864578247
    3. ' =(' → logprob: -13.148249626159668
    4. ' ' → logprob: -13.898249626159668
    5. ',' → logprob: -14.523249626159668
    6. ' =
' → logprob: -15.148249626159668
    7. ')' → logprob: -15.273249626159668
    8. ' +=' → logprob: -15.773249626159668
    9. ' *=' → logprob: -15.773249626159668
    10. ' ' → logprob: -17.148250579833984

Token 203: ' (' (ID: 350)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.47755515575408936
    2. '(' → logprob: -0.9775551557540894
    3. ' (' → logprob: -6.352555274963379
    4. '(pow' → logprob: -6.852555274963379
    5. '(((' → logprob: -8.102555274963379
    6. ' ((' → logprob: -8.602555274963379
    7. '   ' → logprob: -9.727555274963379
    8. '(int' → logprob: -10.227555274963379
    9. '(mod' → logprob: -10.727555274963379
    10. 'pow' → logprob: -11.352555274963379

Token 204: '2' (ID: 17)
  Prédit: '(pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(pow' → logprob: -0.20225174725055695
    2. 'pow' → logprob: -1.9522517919540405
    3. '(' → logprob: -3.202251672744751
    4. '(p' → logprob: -8.452251434326172
    5. '((' → logprob: -8.952251434326172
    6. '(mod' → logprob: -9.702251434326172
    7. '(power' → logprob: -10.577251434326172
    8. ' pow' → logprob: -10.702251434326172
    9. ' (' → logprob: -11.452251434326172
    10. '   ' → logprob: -11.952251434326172

Token 205: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.000375380739569664
    2. ' **' → logprob: -8.000375747680664
    3. '*n' → logprob: -10.625375747680664
    4. '
' → logprob: -12.875375747680664
    5. '^' → logprob: -13.125375747680664
    6. 'pow' → logprob: -13.250375747680664
    7. 'n' → logprob: -13.375375747680664
    8. '**)' → logprob: -13.375375747680664
    9. '```' → logprob: -13.625375747680664
    10. '%n' → logprob: -13.625375747680664

Token 206: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00025108797126449645
    2. '(n' → logprob: -8.500250816345215
    3. '(' → logprob: -10.250250816345215
    4. 'k' → logprob: -12.000250816345215
    5. ' n' → logprob: -13.000250816345215
    6. 'd' → logprob: -14.375250816345215
    7. 'mod' → logprob: -14.625250816345215
    8. '(k' → logprob: -14.750250816345215
    9. '
' → logprob: -15.375250816345215
    10. ')n' → logprob: -15.500250816345215

Token 207: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.05257726460695267
    2. ')' → logprob: -3.677577257156372
    3. '-' → logprob: -3.677577257156372
    4. ' )' → logprob: -8.677577018737793
    5. ' ' → logprob: -8.802577018737793
    6. ')-' → logprob: -8.802577018737793
    7. ' ' → logprob: -10.052577018737793
    8. ')-(' → logprob: -10.802577018737793
    9. '-)' → logprob: -11.115077018737793
    10. ',' → logprob: -11.365077018737793

Token 208: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.006275132764130831
    2. '(' → logprob: -5.881275177001953
    3. 'pow' → logprob: -6.256275177001953
    4. ' ' → logprob: -6.506275177001953
    5. ' (' → logprob: -11.006275177001953
    6. '(pow' → logprob: -11.006275177001953
    7. ' pow' → logprob: -11.756275177001953
    8. '1' → logprob: -12.006275177001953
    9. ')' → logprob: -13.631275177001953
    10. '
' → logprob: -14.131275177001953

Token 209: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.04771999269723892
    2. '(' → logprob: -3.172719955444336
    3. 'pow' → logprob: -5.422719955444336
    4. ' ' → logprob: -8.547719955444336
    5. '(pow' → logprob: -10.297719955444336
    6. ' (' → logprob: -10.672719955444336
    7. '1' → logprob: -11.422719955444336
    8. ')' → logprob: -11.547719955444336
    9. '   ' → logprob: -12.297719955444336
    10. ' pow' → logprob: -12.547719955444336

Token 210: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.13659870624542236
    2. 'k' → logprob: -2.136598587036133
    3. ' k' → logprob: -5.011598587036133
    4. ' **' → logprob: -6.636598587036133
    5. '*k' → logprob: -7.261598587036133
    6. '```' → logprob: -7.636598587036133
    7. '^' → logprob: -8.761598587036133
    8. '
' → logprob: -8.886598587036133
    9. '[k' → logprob: -10.386598587036133
    10. '(k' → logprob: -10.386598587036133

Token 211: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -4.842555426876061e-06
    2. ' k' → logprob: -12.750004768371582
    3. '(k' → logprob: -13.375004768371582
    4. '(' → logprob: -15.250004768371582
    5. 'n' → logprob: -17.3750057220459
    6. ' ' → logprob: -17.3750057220459
    7. '	k' → logprob: -18.5000057220459
    8. '```' → logprob: -18.6250057220459
    9. '{k' → logprob: -19.0000057220459
    10. '
' → logprob: -19.3750057220459

Token 212: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005972284823656082
    2. ' )' → logprob: -5.130972385406494
    3. '-' → logprob: -11.630971908569336
    4. ' -' → logprob: -11.880971908569336
    5. ')//' → logprob: -12.130971908569336
    6. '   ' → logprob: -12.505971908569336
    7. ')
' → logprob: -12.630971908569336
    8. ' ' → logprob: -12.880971908569336
    9. '       ' → logprob: -13.130971908569336
    10. '))' → logprob: -13.630971908569336

Token 213: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.1532297283411026
    2. ')' → logprob: -2.4032297134399414
    3. ' ' → logprob: -3.9032297134399414
    4. ' %' → logprob: -4.153229713439941
    5. '//' → logprob: -4.653229713439941
    6. ' )' → logprob: -6.028229713439941
    7. '%' → logprob: -6.403229713439941
    8. '       ' → logprob: -7.778229713439941
    9. '#' → logprob: -8.653229713439941
    10. '
' → logprob: -8.778229713439941

Token 214: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0024904031306505203
    2. ' (' → logprob: -6.002490520477295
    3. '((' → logprob: -11.377490043640137
    4. '2' → logprob: -13.877490043640137
    5. '   ' → logprob: -14.252490043640137
    6. '
' → logprob: -14.502490043640137
    7. ' ' → logprob: -14.502490043640137
    8. '(
' → logprob: -15.627490043640137
    9. '(int' → logprob: -15.752490043640137
    10. '(k' → logprob: -16.252490997314453

Token 215: '2' (ID: 17)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.026714637875556946
    2. '2' → logprob: -3.651714563369751
    3. ' (' → logprob: -8.401714324951172
    4. '   ' → logprob: -9.651714324951172
    5. '((' → logprob: -10.026714324951172
    6. '
' → logprob: -10.901714324951172
    7. ' ' → logprob: -11.401714324951172
    8. 'pow' → logprob: -11.526714324951172
    9. '       ' → logprob: -11.651714324951172
    10. ')' → logprob: -12.026714324951172

Token 216: ' **' (ID: 6240)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.05491015315055847
    2. ' k' → logprob: -3.054910182952881
    3. '**' → logprob: -5.304910182952881
    4. '*k' → logprob: -7.679910182952881
    5. '_k' → logprob: -7.679910182952881
    6. '```' → logprob: -9.179909706115723
    7. '	k' → logprob: -9.679909706115723
    8. ' **' → logprob: -9.679909706115723
    9. '[k' → logprob: -10.429909706115723
    10. '^' → logprob: -10.429909706115723

Token 217: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.7120533811976202e-05
    2. ' k' → logprob: -11.000017166137695
    3. 'n' → logprob: -16.125017166137695
    4. '(' → logprob: -16.250017166137695
    5. '(k' → logprob: -16.500017166137695
    6. ' ' → logprob: -16.625017166137695
    7. '	k' → logprob: -17.250017166137695
    8. '   ' → logprob: -17.500017166137695
    9. '{k' → logprob: -18.750017166137695
    10. 'kx' → logprob: -19.250017166137695

Token 218: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.16046519577503204
    2. ' +' → logprob: -1.9104652404785156
    3. ')' → logprob: -9.035465240478516
    4. ' ' → logprob: -10.285465240478516
    5. ')+' → logprob: -10.285465240478516
    6. '        ' → logprob: -11.285465240478516
    7. '+)' → logprob: -11.785465240478516
    8. '    ' → logprob: -11.910465240478516
    9. '       ' → logprob: -12.035465240478516
    10. '   ' → logprob: -12.410465240478516

Token 219: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004894073354080319
    2. ' ' → logprob: -7.625489234924316
    3. ')' → logprob: -14.500489234924316
    4. '   ' → logprob: -15.500489234924316
    5. '
' → logprob: -16.250490188598633
    6. '```' → logprob: -16.437990188598633
    7. '2' → logprob: -16.562990188598633
    8. '       ' → logprob: -17.000490188598633
    9. '[' → logprob: -17.062990188598633
    10. '(' → logprob: -17.312990188598633

Token 220: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00012439649435691535
    2. ' ' → logprob: -9.000123977661133
    3. ')' → logprob: -14.750123977661133
    4. '<|end|>' → logprob: -16.125123977661133
    5. '   ' → logprob: -16.500123977661133
    6. '```' → logprob: -16.500123977661133
    7. '
' → logprob: -16.750123977661133
    8. '2' → logprob: -17.062623977661133
    9. 'k' → logprob: -17.375123977661133
    10. '[' → logprob: -17.437623977661133

Token 221: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0015078396536409855
    2. ')
' → logprob: -6.501507759094238
    3. ')
' → logprob: -13.251507759094238
    4. '       ' → logprob: -14.126507759094238
    5. ' )' → logprob: -14.251507759094238
    6. ')

' → logprob: -15.001507759094238
    7. ')return' → logprob: -15.126507759094238
    8. ')`' → logprob: -15.251507759094238
    9. ')**' → logprob: -15.376507759094238
    10. '))' → logprob: -15.501507759094238

Token 222: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 223: ' #' (ID: 1069)
  Prédit: 'ct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ct' → logprob: -0.9092681407928467
    2. 'for' → logprob: -1.7842681407928467
    3. 'if' → logprob: -2.2842681407928467
    4. 'bits' → logprob: -3.1592681407928467
    5. '       ' → logprob: -3.2842681407928467
    6. 'bin' → logprob: -3.4092681407928467
    7. 'cnt' → logprob: -3.4092681407928467
    8. 'bit' → logprob: -3.5342681407928467
    9. 'count' → logprob: -3.9092681407928467
    10. 'binary' → logprob: -3.9092681407928467

Token 224: ' On' (ID: 2160)
  Prédit: 'ct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ct' → logprob: -0.5892272591590881
    2. 'for' → logprob: -1.3392271995544434
    3. 'if' → logprob: -2.0892271995544434
    4. 'count' → logprob: -4.589227199554443
    5. 'bin' → logprob: -4.964227199554443
    6. ' ct' → logprob: -5.339227199554443
    7. 'binary' → logprob: -5.464227199554443
    8. 'y' → logprob: -5.589227199554443
    9. ' for' → logprob: -5.589227199554443
    10. 'cnt' → logprob: -5.714227199554443

Token 225: ' compte' (ID: 19657)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.677539050579071
    2. ' for' → logprob: -0.802539050579071
    3. 'ct' → logprob: -3.927539110183716
    4. ' ct' → logprob: -5.052538871765137
    5. '=' → logprob: -5.927538871765137
    6. '       ' → logprob: -6.052538871765137
    7. ' ans' → logprob: -6.302538871765137
    8. 'ans' → logprob: -6.427538871765137
    9. ' =' → logprob: -6.427538871765137
    10. 'if' → logprob: -6.677538871765137

Token 226: ' le' (ID: 505)
  Prédit: 'ct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ct' → logprob: -0.7715415954589844
    2. ' ct' → logprob: -1.1465415954589844
    3. ' for' → logprob: -2.6465415954589844
    4. 'for' → logprob: -2.8965415954589844
    5. 'cnt' → logprob: -3.5215415954589844
    6. ' cnt' → logprob: -4.396541595458984
    7. ' ones' → logprob: -4.396541595458984
    8. '   ' → logprob: -5.021541595458984
    9. '       ' → logprob: -5.146541595458984
    10. 'bits' → logprob: -5.271541595458984

Token 227: ' nombre' (ID: 9733)
  Prédit: 'ct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ct' → logprob: -1.026729941368103
    2. 'for' → logprob: -1.151729941368103
    3. ' for' → logprob: -1.901729941368103
    4. ' ct' → logprob: -3.1517300605773926
    5. 'cnt' → logprob: -3.2767300605773926
    6. 'count' → logprob: -3.7767300605773926
    7. 'y' → logprob: -3.9017300605773926
    8. ' cnt' → logprob: -5.026730060577393
    9. ' y' → logprob: -5.276730060577393
    10. 'bits' → logprob: -5.276730060577393

Token 228: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -1.1575695276260376
    2. 'of' → logprob: -1.6575695276260376
    3. ' de' → logprob: -1.9075695276260376
    4. '       ' → logprob: -2.157569408416748
    5. ' =' → logprob: -2.407569408416748
    6. '=' → logprob: -2.657569408416748
    7. ' of' → logprob: -3.907569408416748
    8. 'y' → logprob: -4.282569408416748
    9. 'd' → logprob: -4.532569408416748
    10. 's' → logprob: -5.032569408416748

Token 229: ' valeurs' (ID: 73668)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6072229743003845
    2. 'bin' → logprob: -2.2322230339050293
    3. 'ones' → logprob: -2.3572230339050293
    4. 'y' → logprob: -2.7322230339050293
    5. 'for' → logprob: -2.9822230339050293
    6. 'i' → logprob: -3.7322230339050293
    7. 'ct' → logprob: -3.9822230339050293
    8. 'div' → logprob: -4.357223033905029
    9. 'bits' → logprob: -4.357223033905029
    10. 'd' → logprob: -4.732223033905029

Token 230: ' possibles' (ID: 97753)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9318511486053467
    2. ' for' → logprob: -1.5568511486053467
    3. ' of' → logprob: -2.1818511486053467
    4. 'for' → logprob: -2.4318511486053467
    5. 'ct' → logprob: -2.9318511486053467
    6. 'of' → logprob: -3.4318511486053467
    7. 's' → logprob: -4.181851387023926
    8. '<|end|>' → logprob: -4.181851387023926
    9. ' ct' → logprob: -4.431851387023926
    10. 'cnt' → logprob: -4.556851387023926

Token 231: ' de' (ID: 334)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.345242440700531
    2. ' for' → logprob: -2.095242500305176
    3. '<|end|>' → logprob: -2.470242500305176
    4. 'ct' → logprob: -3.470242500305176
    5. ' ct' → logprob: -3.470242500305176
    6. '	ct' → logprob: -5.095242500305176
    7. 'for' → logprob: -6.095242500305176
    8. '(ct' → logprob: -6.345242500305176
    9. '        
' → logprob: -6.470242500305176
    10. '<|end|>' → logprob: -6.845242500305176

Token 232: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.20030222833156586
    2. 'x' → logprob: -1.825302243232727
    3. ' y' → logprob: -4.4503021240234375
    4. 'd' → logprob: -6.5753021240234375
    5. 'ct' → logprob: -6.5753021240234375
    6. 'k' → logprob: -6.7003021240234375
    7. 'ans' → logprob: -7.0753021240234375
    8. ' x' → logprob: -7.2003021240234375
    9. 'i' → logprob: -7.3253021240234375
    10. 'a' → logprob: -7.5753021240234375

Token 233: '+' (ID: 10)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 234: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.05543551966547966
    2. ' ' → logprob: -3.9304354190826416
    3. 'x' → logprob: -4.555435657501221
    4. 'y' → logprob: -4.680435657501221
    5. '0' → logprob: -6.055435657501221
    6. ' y' → logprob: -6.805435657501221
    7. 'for' → logprob: -6.805435657501221
    8. 'k' → logprob: -7.055435657501221
    9. 'i' → logprob: -7.305435657501221
    10. '(' → logprob: -7.305435657501221

Token 235: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.046805355697870255
    2. 'ct' → logprob: -3.5468053817749023
    3. '
' → logprob: -5.171805381774902
    4. ' ct' → logprob: -5.671805381774902
    5. '   ' → logprob: -6.046805381774902
    6. '        
' → logprob: -6.296805381774902
    7. '	ct' → logprob: -6.796805381774902
    8. ' for' → logprob: -7.671805381774902
    9. '<|end|>' → logprob: -7.921805381774902
    10. ' y' → logprob: -8.046805381774902

Token 236: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07153558731079102
    2. '<|end|>' → logprob: -3.071535587310791
    3. '   ' → logprob: -4.071535587310791
    4. '        
' → logprob: -6.321535587310791
    5. 'ct' → logprob: -6.696535587310791
    6. ' for' → logprob: -7.071535587310791
    7. '	ct' → logprob: -7.696535587310791
    8. '
' → logprob: -8.446535110473633
    9. '<|end|>' → logprob: -8.446535110473633
    10. ' ct' → logprob: -8.696535110473633

Token 237: ' count' (ID: 3605)
  Prédit: 'ct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ct' → logprob: -0.06634705513715744
    2. 'for' → logprob: -3.441347122192383
    3. 'ans' → logprob: -4.441347122192383
    4. 'count' (adapté à ' count') → logprob: -5.316347122192383
    5. 'if' → logprob: -5.691347122192383
    6. 'cnt' → logprob: -6.191347122192383
    7. ' ct' → logprob: -6.441347122192383
    8. 'val' → logprob: -6.441347122192383
    9. 'y' → logprob: -6.691347122192383
    10. '   ' → logprob: -7.566347122192383

Token 238: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.013078697957098484
    2. '=' → logprob: -4.388078689575195
    3. '_dict' → logprob: -8.513078689575195
    4. ' ' → logprob: -8.638078689575195
    5. '[' → logprob: -9.138078689575195
    6. 's' → logprob: -10.638078689575195
    7. '_' → logprob: -11.638078689575195
    8. '   ' → logprob: -11.888078689575195
    9. ',' → logprob: -12.013078689575195
    10. 'dict' → logprob: -12.013078689575195

Token 239: ' (' (ID: 350)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.3889634907245636
    2. '(' → logprob: -2.013963460922241
    3. '0' → logprob: -2.763963460922241
    4. 'ct' → logprob: -3.013963460922241
    5. '2' → logprob: -3.638963460922241
    6. '1' → logprob: -3.763963460922241
    7. '(pow' → logprob: -5.01396369934082
    8. 'y' → logprob: -5.63896369934082
    9. '(y' → logprob: -5.88896369934082
    10. 'x' → logprob: -6.01396369934082

Token 240: 'int' (ID: 491)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.5956296324729919
    2. '2' → logprob: -1.3456296920776367
    3. '(' → logprob: -1.9706296920776367
    4. '1' → logprob: -4.095629692077637
    5. 'ans' → logprob: -4.220629692077637
    6. 'int' → logprob: -5.595629692077637
    7. '(ans' → logprob: -5.845629692077637
    8. '(pow' → logprob: -5.845629692077637
    9. 'y' → logprob: -6.095629692077637
    10. '(y' → logprob: -6.595629692077637

Token 241: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.2782781720161438
    2. '('' → logprob: -2.028278112411499
    3. '(y' → logprob: -3.153278112411499
    4. '(bin' → logprob: -3.528278112411499
    5. '(' → logprob: -4.278278350830078
    6. '("' → logprob: -4.903278350830078
    7. '(str' → logprob: -5.153278350830078
    8. '((' → logprob: -5.528278350830078
    9. 'x' → logprob: -5.903278350830078
    10. '(ans' → logprob: -6.278278350830078

Token 242: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.27778851985931396
    2. ' ,' → logprob: -2.5277886390686035
    3. '[:' → logprob: -2.5277886390686035
    4. ',k' → logprob: -3.4027886390686035
    5. '[-' → logprob: -3.9027886390686035
    6. ',d' → logprob: -4.9027886390686035
    7. '[d' → logprob: -4.9027886390686035
    8. '[k' → logprob: -4.9027886390686035
    9. '[(' → logprob: -6.4027886390686035
    10. '[' → logprob: -6.5277886390686035

Token 243: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.07003691047430038
    2. ' ' → logprob: -2.6950368881225586
    3. 'k' → logprob: -10.195036888122559
    4. ' k' → logprob: -10.695036888122559
    5. 'd' → logprob: -11.695036888122559
    6. '  ' → logprob: -12.070036888122559
    7. ' d' → logprob: -12.570036888122559
    8. 'y' → logprob: -12.695036888122559
    9. ')' → logprob: -12.820036888122559
    10. '0' → logprob: -13.070036888122559

Token 244: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.958325295476243e-05
    2. ' ' → logprob: -9.625079154968262
    3. 'k' → logprob: -12.125079154968262
    4. '1' → logprob: -12.625079154968262
    5. 'd' → logprob: -13.000079154968262
    6. ')' → logprob: -13.875079154968262
    7. 'y' → logprob: -15.250079154968262
    8. '0' → logprob: -15.250079154968262
    9. '
' → logprob: -15.500079154968262
    10. '16' → logprob: -15.875079154968262

Token 245: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0067266179248690605
    2. '>>' → logprob: -6.1317267417907715
    3. ')+' → logprob: -6.2567267417907715
    4. '[:' → logprob: -6.3817267417907715
    5. ')>>' → logprob: -7.3817267417907715
    6. '))' → logprob: -9.381726264953613
    7. ')&' → logprob: -10.506726264953613
    8. '   ' → logprob: -10.631726264953613
    9. '[-' → logprob: -10.756726264953613
    10. ')==' → logprob: -11.006726264953613

Token 246: ' -' (ID: 533)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.19247347116470337
    2. ' +' → logprob: -2.5674734115600586
    3. '>>' → logprob: -2.6924734115600586
    4. ' >>' → logprob: -3.8174734115600586
    5. ' //' → logprob: -5.067473411560059
    6. '//' → logprob: -6.567473411560059
    7. '%' → logprob: -8.817473411560059
    8. ' %' → logprob: -8.942473411560059
    9. ')' → logprob: -9.067473411560059
    10. '>=' → logprob: -9.192473411560059

Token 247: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.06014668196439743
    2. '(' → logprob: -3.4351465702056885
    3. ' y' → logprob: -4.435146808624268
    4. '(y' → logprob: -5.060146808624268
    5. '((' → logprob: -6.060146808624268
    6. '0' → logprob: -6.310146808624268
    7. '1' → logprob: -7.060146808624268
    8. '2' → logprob: -7.185146808624268
    9. ' (' → logprob: -7.185146808624268
    10. 'int' → logprob: -7.560146808624268

Token 248: ')' (ID: 8)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.341798335313797
    2. '+' → logprob: -1.3417983055114746
    3. ')' → logprob: -3.5917983055114746
    4. ' )' → logprob: -7.966798305511475
    5. ')+' → logprob: -8.841798782348633
    6. '+)' → logprob: -10.966798782348633
    7. '   ' → logprob: -11.216798782348633
    8. ')>>' → logprob: -11.466798782348633
    9. '+
' → logprob: -12.216798782348633
    10. ' ' → logprob: -12.216798782348633

Token 249: ' //' (ID: 602)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.437198668718338
    2. '+' → logprob: -1.3121986389160156
    3. '<|end|>' → logprob: -2.5621986389160156
    4. ')' → logprob: -5.437198638916016
    5. '<|end|>' → logprob: -6.187198638916016
    6. '       ' → logprob: -8.062198638916016
    7. '
' → logprob: -8.562198638916016
    8. '   ' → logprob: -8.812198638916016
    9. ' ' → logprob: -9.062198638916016
    10. ' if' → logprob: -9.437198638916016

Token 250: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.44124287366867065
    2. 'k' → logprob: -1.1912429332733154
    3. 'd' → logprob: -3.4412429332733154
    4. '2' → logprob: -4.691242694854736
    5. '(k' → logprob: -5.191242694854736
    6. ' (' → logprob: -6.691242694854736
    7. '((' → logprob: -6.691242694854736
    8. 'div' → logprob: -7.066242694854736
    9. '(d' → logprob: -7.191242694854736
    10. '   ' → logprob: -7.816242694854736

Token 251: 'y' (ID: 88)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.11519274860620499
    2. '(' → logprob: -2.2401926517486572
    3. '1' → logprob: -6.490192890167236
    4. 'pow' → logprob: -8.365192413330078
    5. ' ' → logprob: -8.740192413330078
    6. ' (' → logprob: -9.115192413330078
    7. '   ' → logprob: -9.365192413330078
    8. '((' → logprob: -10.490192413330078
    9. 'mod' → logprob: -10.615192413330078
    10. 'd' → logprob: -10.615192413330078

Token 252: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.006755752023309469
    2. ' +' → logprob: -5.006755828857422
    3. '+k' → logprob: -11.006755828857422
    4. '+
' → logprob: -11.756755828857422
    5. '1' → logprob: -12.631755828857422
    6. 'd' → logprob: -12.756755828857422
    7. 'k' → logprob: -12.756755828857422
    8. '+)' → logprob: -13.006755828857422
    9. '
' → logprob: -13.756755828857422
    10. '```' → logprob: -14.131755828857422

Token 253: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00011355629976605996
    2. ' ' → logprob: -9.250113487243652
    3. '2' → logprob: -11.125113487243652
    4. ')' → logprob: -14.250113487243652
    5. '+' → logprob: -14.625113487243652
    6. '
' → logprob: -14.875113487243652
    7. '(' → logprob: -15.000113487243652
    8. '   ' → logprob: -15.625113487243652
    9. '0' → logprob: -16.25011444091797
    10. '=' → logprob: -16.75011444091797

Token 254: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00013953536108601838
    2. ' ' → logprob: -9.125139236450195
    3. '2' → logprob: -10.500139236450195
    4. ')' → logprob: -14.062639236450195
    5. '+' → logprob: -14.187639236450195
    6. '   ' → logprob: -14.750139236450195
    7. '0' → logprob: -15.750139236450195
    8. '(' → logprob: -15.875139236450195
    9. '
' → logprob: -16.125139236450195
    10. '  ' → logprob: -16.687639236450195

Token 255: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0316750593483448
    2. '+' → logprob: -4.031674861907959
    3. ' +' → logprob: -5.156674861907959
    4. ')+' → logprob: -5.156674861907959
    5. ' )' → logprob: -7.031674861907959
    6. ')
' → logprob: -7.281674861907959
    7. '   ' → logprob: -8.281675338745117
    8. '       ' → logprob: -9.781675338745117
    9. '+)' → logprob: -11.406675338745117
    10. ' )
' → logprob: -12.781675338745117

Token 256: ' +' (ID: 659)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.019225774332880974
    2. '   ' → logprob: -4.019225597381592
    3. '<|end|>' → logprob: -7.019225597381592
    4. '	ct' → logprob: -10.14422607421875
    5. ' ' → logprob: -10.51922607421875
    6. ')' → logprob: -10.64422607421875
    7. 'ct' → logprob: -10.64422607421875
    8. ' if' → logprob: -11.76922607421875
    9. '           ' → logprob: -11.89422607421875
    10. '	' → logprob: -12.01922607421875

Token 257: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003357006062287837
    2. ' ' → logprob: -8.000335693359375
    3. '2' → logprob: -16.000335693359375
    4. '(' → logprob: -17.250335693359375
    5. '0' → logprob: -17.250335693359375
    6. '
' → logprob: -17.625335693359375
    7. '   ' → logprob: -18.125335693359375
    8. ' (' → logprob: -18.625335693359375
    9. '100' → logprob: -19.250335693359375
    10. '       ' → logprob: -19.500335693359375

Token 258: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.607391408877447e-05
    2. ' ' → logprob: -10.375036239624023
    3. '2' → logprob: -12.750036239624023
    4. '(' → logprob: -14.000036239624023
    5. 'ct' → logprob: -15.375036239624023
    6. 'int' → logprob: -15.500036239624023
    7. '
' → logprob: -16.312536239624023
    8. '0' → logprob: -16.312536239624023
    9. 'n' → logprob: -16.375036239624023
    10. 'mod' → logprob: -16.375036239624023

Token 259: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 260: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 261: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.134872555732727
    2. ' if' → logprob: -1.509872555732727
    3. '<|end|>' → logprob: -1.634872555732727
    4. 'if' → logprob: -1.884872555732727
    5. 'count' → logprob: -3.1348724365234375
    6. 'ct' → logprob: -4.2598724365234375
    7. ' for' → logprob: -4.3848724365234375
    8. '   ' → logprob: -4.5098724365234375
    9. ')' → logprob: -4.5098724365234375
    10. 'for' → logprob: -4.7598724365234375

Token 262: ' On' (ID: 2160)
  Prédit: 'ct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ct' → logprob: -0.1943613737821579
    2. 'if' → logprob: -1.8193613290786743
    3. 'count' → logprob: -4.569361209869385
    4. 'for' → logprob: -5.694361209869385
    5. '   ' → logprob: -8.444361686706543
    6. ' ct' → logprob: -8.444361686706543
    7. '       ' → logprob: -8.694361686706543
    8. ' if' → logprob: -9.694361686706543
    9. 'ans' → logprob: -10.444361686706543
    10. 'while' → logprob: -10.694361686706543

Token 263: ' enl' (ID: 116494)
  Prédit: ' ct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ct' → logprob: -0.6525235176086426
    2. 'ct' → logprob: -1.5275235176086426
    3. 'if' → logprob: -2.1525235176086426
    4. ' if' → logprob: -2.2775235176086426
    5. ' for' → logprob: -3.6525235176086426
    6. 'for' → logprob: -4.652523517608643
    7. '       ' → logprob: -5.777523517608643
    8. ' ans' → logprob: -6.652523517608643
    9. 'count' → logprob: -6.777523517608643
    10. '   ' → logprob: -6.777523517608643

Token 264: 'ève' (ID: 41151)
  Prédit: 'ève'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ève' → logprob: -1.1466313600540161
    2. 'if' → logprob: -1.7716313600540161
    3. 'e' → logprob: -2.0216312408447266
    4. '   ' → logprob: -2.2716312408447266
    5. '       ' → logprob: -2.8966312408447266
    6. 't' → logprob: -2.8966312408447266
    7. 'for' → logprob: -3.0216312408447266
    8. 'ct' → logprob: -3.6466312408447266
    9. 've' → logprob: -4.271631240844727
    10. ' for' → logprob: -4.896631240844727

Token 265: ' les' (ID: 1341)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.42517712712287903
    2. ' count' → logprob: -1.9251770973205566
    3. ' for' → logprob: -2.3001770973205566
    4. '       ' → logprob: -2.9251770973205566
    5. 'for' → logprob: -3.9251770973205566
    6. 'ct' → logprob: -4.675177097320557
    7. '   ' → logprob: -6.175177097320557
    8. ' ct' → logprob: -6.425177097320557
    9. '	count' → logprob: -6.675177097320557
    10. ' counts' → logprob: -6.800177097320557

Token 266: ' doubl' (ID: 127992)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.2214319705963135
    2. 'ct' → logprob: -1.3464319705963135
    3. 'count' → logprob: -1.5964319705963135
    4. ' for' → logprob: -2.3464319705963135
    5. 'max' → logprob: -3.9714319705963135
    6. 'if' → logprob: -4.221431732177734
    7. 'prev' → logprob: -4.596431732177734
    8. ' ct' → logprob: -4.596431732177734
    9. 'multip' → logprob: -4.721431732177734
    10. 'val' → logprob: -4.721431732177734

Token 267: 'ons' (ID: 1808)
  Prédit: 'és'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.07242335379123688
    2. 'es' → logprob: -2.8224234580993652
    3. 'ons' → logprob: -5.572423458099365
    4. 'ets' → logprob: -5.697423458099365
    5. 'e' → logprob: -6.822423458099365
    6. 'é' → logprob: -7.572423458099365
    7. 'onts' → logprob: -8.072422981262207
    8. 'ies' → logprob: -8.447422981262207
    9. 'eurs' → logprob: -8.697422981262207
    10. 'auts' → logprob: -9.447422981262207

Token 268: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.455476313829422
    2. ' for' → logprob: -1.7054762840270996
    3. '   ' → logprob: -2.7054762840270996
    4. 'ct' → logprob: -3.3304762840270996
    5. '<|end|>' → logprob: -3.7054762840270996
    6. '
' → logprob: -4.3304762840271
    7. '	ct' → logprob: -4.3304762840271
    8. 'for' → logprob: -4.4554762840271
    9. '        
' → logprob: -4.9554762840271
    10. ' ct' → logprob: -5.7054762840271

Token 269: '       ' (ID: 309)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.46498510241508484
    2. '       ' → logprob: -1.5899851322174072
    3. '	ct' → logprob: -2.5899851322174072
    4. 'ct' → logprob: -3.8399851322174072
    5. '   ' → logprob: -3.9649851322174072
    6. 'for' → logprob: -4.464984893798828
    7. ' ct' → logprob: -4.464984893798828
    8. '
' → logprob: -4.589984893798828
    9. '```' → logprob: -4.839984893798828
    10. '	for' → logprob: -5.714984893798828

Token 270: ' dk' (ID: 88261)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04337926208972931
    2. 'count' → logprob: -3.793379306793213
    3. 'ct' → logprob: -4.043379306793213
    4. '       ' → logprob: -6.293379306793213
    5. 'temp' → logprob: -8.543378829956055
    6. '   ' → logprob: -8.793378829956055
    7. ' for' → logprob: -9.543378829956055
    8. 'cnt' → logprob: -10.043378829956055
    9. 'if' → logprob: -10.168378829956055
    10. 'tmp' → logprob: -12.168378829956055

Token 271: '_list' (ID: 4162)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4380897283554077
    2. '_dict' → logprob: -1.4380897283554077
    3. '=' → logprob: -2.3130898475646973
    4. '=d' → logprob: -4.938089847564697
    5. '[d' → logprob: -5.438089847564697
    6. 'ict' → logprob: -6.688089847564697
    7. 'd' → logprob: -6.938089847564697
    8. '_' → logprob: -6.938089847564697
    9. '=_' → logprob: -7.063089847564697
    10. '=[' → logprob: -7.313089847564697

Token 272: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1602327525615692
    2. '=' → logprob: -1.9102327823638916
    3. '[' → logprob: -12.410232543945312
    4. '=[]' → logprob: -13.910232543945312
    5. '=[' → logprob: -14.285232543945312
    6. ' =[' → logprob: -14.410232543945312
    7. ',' → logprob: -14.660232543945312
    8. 'for' → logprob: -15.160232543945312
    9. '.' → logprob: -15.160232543945312
    10. '=d' → logprob: -15.410232543945312

Token 273: ' make' (ID: 1520)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.13866938650608063
    2. '[d' → logprob: -2.138669490814209
    3. '[]
' → logprob: -5.013669490814209
    4. '[k' → logprob: -6.263669490814209
    5. 'ct' → logprob: -6.763669490814209
    6. '[]' → logprob: -6.888669490814209
    7. '[c' → logprob: -8.38866901397705
    8. '[count' → logprob: -8.76366901397705
    9. '[i' → logprob: -9.13866901397705
    10. ' [' → logprob: -9.63866901397705

Token 274: '_div' (ID: 36926)
  Prédit: '_div'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_div' → logprob: -0.07894200831651688
    2. 'div' → logprob: -2.578942060470581
    3. '(div' → logprob: -10.70394229888916
    4. 'd' → logprob: -11.20394229888916
    5. ' divis' → logprob: -12.32894229888916
    6. '<div' → logprob: -12.45394229888916
    7. 'Div' → logprob: -12.70394229888916
    8. '	div' → logprob: -13.32894229888916
    9. '_dist' → logprob: -14.57894229888916
    10. '_d' → logprob: -14.57894229888916

Token 275: 'is' (ID: 276)
  Prédit: 'is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.0012224898673593998
    2. 's' → logprob: -7.501222610473633
    3. 'div' → logprob: -7.501222610473633
    4. 'ors' → logprob: -10.501222610473633
    5. 'vis' → logprob: -11.376222610473633
    6. '_div' → logprob: -11.501222610473633
    7. 'tors' → logprob: -11.501222610473633
    8. 'iv' → logprob: -11.751222610473633
    9. 'istors' → logprob: -12.001222610473633
    10. 'ectors' → logprob: -12.376222610473633

Token 276: 'ors' (ID: 914)
  Prédit: 'ors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ors' → logprob: -9.014684110297821e-06
    2. 'tors' → logprob: -12.500008583068848
    3. 'or' → logprob: -13.500008583068848
    4. 'iors' → logprob: -14.000008583068848
    5. 'urs' → logprob: -14.125008583068848
    6. 'rs' → logprob: -14.875008583068848
    7. 'div' → logprob: -15.375008583068848
    8. '[' → logprob: -15.375008583068848
    9. 's' → logprob: -15.500008583068848
    10. 'eurs' → logprob: -15.750008583068848

Token 277: '(k' (ID: 12125)
  Prédit: '(count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(count' → logprob: -0.8345376253128052
    2. '(d' → logprob: -1.0845376253128052
    3. '(k' → logprob: -2.2095375061035156
    4. '(y' → logprob: -2.2095375061035156
    5. 'count' → logprob: -5.209537506103516
    6. 'd' → logprob: -6.709537506103516
    7. 'y' → logprob: -7.834537506103516
    8. '(n' → logprob: -8.084537506103516
    9. 'k' → logprob: -8.084537506103516
    10. '((' → logprob: -8.209537506103516

Token 278: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.08903391659259796
    2. ')' → logprob: -2.464033842086792
    3. ')
' → logprob: -9.964034080505371
    4. '   ' → logprob: -10.589034080505371
    5. ')

' → logprob: -11.589034080505371
    6. '       ' → logprob: -11.714034080505371
    7. ' )
' → logprob: -13.839034080505371
    8. '):
' → logprob: -13.839034080505371
    9. '[' → logprob: -13.964034080505371
    10. '[])
' → logprob: -14.714034080505371

Token 279: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012860181741416454
    2. ' for' → logprob: -4.887860298156738
    3. 'for' → logprob: -5.387860298156738
    4. '   ' → logprob: -7.762860298156738
    5. '<|end|>' → logprob: -9.137860298156738
    6. 'count' → logprob: -9.637860298156738
    7. '        
' → logprob: -10.262860298156738
    8. 'ct' → logprob: -11.012860298156738
    9. '	for' → logprob: -12.762860298156738
    10. ',' → logprob: -13.137860298156738

Token 280: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0440189465880394
    2. '       ' → logprob: -3.5440189838409424
    3. 'count' → logprob: -4.544018745422363
    4. ' for' → logprob: -5.919018745422363
    5. 'ct' → logprob: -7.919018745422363
    6. 'cnt' → logprob: -8.419018745422363
    7. 'remove' → logprob: -9.419018745422363
    8. '   ' → logprob: -9.544018745422363
    9. 'valid' → logprob: -11.044018745422363
    10. 'duplicate' → logprob: -11.419018745422363

Token 281: ' dk' (ID: 88261)
  Prédit: 'dd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dd' → logprob: -0.0486091673374176
    2. 'd' → logprob: -4.048609256744385
    3. 'dk' → logprob: -4.423609256744385
    4. 'e' → logprob: -5.173609256744385
    5. 'div' → logprob: -6.298609256744385
    6. ' dd' → logprob: -6.298609256744385
    7. 'v' → logprob: -6.673609256744385
    8. 'ck' → logprob: -6.923609256744385
    9. 'sd' → logprob: -7.298609256744385
    10. 'cd' → logprob: -7.548609256744385

Token 282: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04860236495733261
    2. 'in' → logprob: -3.048602342605591
    3. '_in' → logprob: -12.048602104187012
    4. 'd' → logprob: -12.423602104187012
    5. '_' → logprob: -13.048602104187012
    6. '_list' → logprob: -13.923602104187012
    7. '	in' → logprob: -14.173602104187012
    8. ' ' → logprob: -14.423602104187012
    9. ' _' → logprob: -15.923602104187012
    10. '   ' → logprob: -15.923602104187012

Token 283: ' dk' (ID: 88261)
  Prédit: 'dk'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dk' → logprob: -0.0008737052557989955
    2. ' dk' → logprob: -7.375873565673828
    3. 'ct' → logprob: -8.500873565673828
    4. 'make' → logprob: -10.625873565673828
    5. '[' → logprob: -12.000873565673828
    6. '   ' → logprob: -12.250873565673828
    7. 'div' → logprob: -12.750873565673828
    8. 'd' → logprob: -13.625873565673828
    9. ' ' → logprob: -13.875873565673828
    10. 'sorted' → logprob: -14.000873565673828

Token 284: '_list' (ID: 4162)
  Prédit: 'dk'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dk' → logprob: -0.35448792576789856
    2. 'k' → logprob: -1.6044878959655762
    3. '_list' → logprob: -2.354487895965576
    4. ' dk' → logprob: -6.479487895965576
    5. 'd' → logprob: -7.979487895965576
    6. '[k' → logprob: -8.729488372802734
    7. 's' → logprob: -8.854488372802734
    8. ':' → logprob: -9.104488372802734
    9. 'list' → logprob: -9.854488372802734
    10. '_dict' → logprob: -9.854488372802734

Token 285: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.28324583172798157
    2. ':
' → logprob: -1.4082458019256592
    3. '           ' → logprob: -6.283246040344238
    4. '[' → logprob: -9.658246040344238
    5. '=' → logprob: -10.533246040344238
    6. ' if' → logprob: -10.658246040344238
    7. '   ' → logprob: -10.783246040344238
    8. '<|end|>' → logprob: -10.908246040344238
    9. '):
' → logprob: -11.408246040344238
    10. ',' → logprob: -11.783246040344238

Token 286: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01499974075704813
    2. 'if' → logprob: -4.389999866485596
    3. ' if' → logprob: -6.264999866485596
    4. '   ' → logprob: -7.514999866485596
    5. 'ct' → logprob: -11.514999389648438
    6. '               ' → logprob: -11.889999389648438
    7. 'count' → logprob: -11.889999389648438
    8. '       ' → logprob: -12.014999389648438
    9. '            
' → logprob: -13.139999389648438
    10. ' ' → logprob: -13.264999389648438

Token 287: ' if' (ID: 538)
  Prédit: 'ct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ct' → logprob: -0.6431594491004944
    2. 'if' (adapté à ' if') → logprob: -1.1431593894958496
    3. '               ' → logprob: -1.8931593894958496
    4. '   ' → logprob: -6.14315938949585
    5. ' if' → logprob: -6.39315938949585
    6. '           ' → logprob: -7.51815938949585
    7. ' ct' → logprob: -8.143159866333008
    8. ' ' → logprob: -8.893159866333008
    9. '	ct' → logprob: -9.018159866333008
    10. '       ' → logprob: -11.143159866333008

Token 288: ' dk' (ID: 88261)
  Prédit: 'dk'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dk' → logprob: -0.007991285994648933
    2. ' dk' → logprob: -5.007991313934326
    3. 'd' → logprob: -7.507991313934326
    4. 'ct' → logprob: -7.632991313934326
    5. 'k' → logprob: -9.007990837097168
    6. '   ' → logprob: -9.507990837097168
    7. ' d' → logprob: -11.382990837097168
    8. ' ' → logprob: -12.257990837097168
    9. '       ' → logprob: -12.382990837097168
    10. '  ' → logprob: -12.757990837097168

Token 289: ' <' (ID: 464)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.023165356367826462
    2. 'in' → logprob: -3.898165464401245
    3. '==' → logprob: -7.023165225982666
    4. '<|end|>' → logprob: -7.273165225982666
    5. ' ==' → logprob: -7.648165225982666
    6. '>=' → logprob: -9.023165702819824
    7. '%' → logprob: -9.148165702819824
    8. ' not' → logprob: -9.273165702819824
    9. '>' → logprob: -10.148165702819824
    10. ' ' → logprob: -10.273165702819824

Token 290: ' k' (ID: 372)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.14325472712516785
    2. 'k' → logprob: -2.0182547569274902
    3. 'dk' → logprob: -7.89325475692749
    4. 'n' → logprob: -9.268254280090332
    5. '1' → logprob: -10.018254280090332
    6. 'len' → logprob: -10.643254280090332
    7. ' d' → logprob: -10.893254280090332
    8. ' k' → logprob: -12.143254280090332
    9. 'div' → logprob: -12.268254280090332
    10. 'ct' → logprob: -12.643254280090332

Token 291: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.11819098889827728
    2. ':' → logprob: -2.9931910037994385
    3. ' and' → logprob: -2.9931910037994385
    4. 'and' → logprob: -4.868190765380859
    5. '           ' → logprob: -5.993190765380859
    6. '               ' → logprob: -6.993190765380859
    7. '       ' → logprob: -10.24319076538086
    8. ' :
' → logprob: -10.99319076538086
    9. '):
' → logprob: -11.11819076538086
    10. ':

' → logprob: -11.74319076538086

Token 292: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.02137400582432747
    2. '           ' → logprob: -3.896373987197876
    3. '	       ' → logprob: -7.646374225616455
    4. '	           ' → logprob: -9.146373748779297
    5. ' and' → logprob: -9.521373748779297
    6. 'ct' → logprob: -10.271373748779297
    7. '<|end|>' → logprob: -10.521373748779297
    8. '		       ' → logprob: -10.771373748779297
    9. ',' → logprob: -11.521373748779297
    10. '```' → logprob: -11.521373748779297

Token 293: ' count' (ID: 3605)
  Prédit: 'ct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ct' → logprob: -0.06663962453603745
    2. 'count' (adapté à ' count') → logprob: -3.3166396617889404
    3. '               ' → logprob: -4.566639423370361
    4. '                   ' → logprob: -4.691639423370361
    5. ' ct' → logprob: -4.816639423370361
    6. '   ' → logprob: -8.31663990020752
    7. ' count' → logprob: -9.31663990020752
    8. 'if' → logprob: -9.81663990020752
    9. '	ct' → logprob: -10.19163990020752
    10. '                       ' → logprob: -10.44163990020752

Token 294: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.10361139476299286
    2. ' -=' → logprob: -2.353611469268799
    3. '-' → logprob: -5.728611469268799
    4. '   ' → logprob: -9.10361099243164
    5. '=' → logprob: -11.22861099243164
    6. ' -' → logprob: -11.47861099243164
    7. '    ' → logprob: -12.22861099243164
    8. '       ' → logprob: -12.60361099243164
    9. '           ' → logprob: -13.47861099243164
    10. '+=' → logprob: -13.97861099243164

Token 295: ' ct' (ID: 40541)
  Prédit: 'ct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ct' → logprob: -3.173704271830502e-06
    2. ' ct' → logprob: -12.75000286102295
    3. '	ct' → logprob: -15.75000286102295
    4. '   ' → logprob: -18.500003814697266
    5. '(ct' → logprob: -20.125003814697266
    6. 'ck' → logprob: -21.625003814697266
    7. 'cts' → logprob: -22.000003814697266
    8. '_ct' → logprob: -22.250003814697266
    9. ' ' → logprob: -22.250003814697266
    10. '  ' → logprob: -22.750003814697266

Token 296: '_dict' (ID: 11295)
  Prédit: '_dict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dict' → logprob: -0.0004938178462907672
    2. '[d' → logprob: -7.875494003295898
    3. '[' → logprob: -10.000494003295898
    4. 'd' → logprob: -10.250494003295898
    5. 'dict' → logprob: -10.500494003295898
    6. '[k' → logprob: -13.000494003295898
    7. '_d' → logprob: -14.000494003295898
    8. '[(' → logprob: -14.125494003295898
    9. '_DICT' → logprob: -15.500494003295898
    10. 's' → logprob: -15.750494003295898

Token 297: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0921942703134846e-05
    2. '[d' → logprob: -11.87501049041748
    3. '[(' → logprob: -12.87501049041748
    4. 'dk' → logprob: -14.12501049041748
    5. '[k' → logprob: -14.62501049041748
    6. '[
' → logprob: -17.000011444091797
    7. '[df' → logprob: -17.250011444091797
    8. '[key' → logprob: -18.000011444091797
    9. ' [' → logprob: -18.500011444091797
    10. '[[' → logprob: -19.000011444091797

Token 298: 'dk' (ID: 11963)
  Prédit: 'dk'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dk' → logprob: -6.611323624383658e-05
    2. '[' → logprob: -10.000065803527832
    3. ' dk' → logprob: -11.125065803527832
    4. 'd' → logprob: -12.500065803527832
    5. 'k' → logprob: -14.500065803527832
    6. '[d' → logprob: -14.875065803527832
    7. '(d' → logprob: -15.375065803527832
    8. '
' → logprob: -15.875065803527832
    9. '```' → logprob: -16.00006675720215
    10. ' ' → logprob: -16.12506675720215

Token 299: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00031413204851560295
    2. ']
' → logprob: -8.250313758850098
    3. ' ]' → logprob: -9.875313758850098
    4. '       ' → logprob: -14.000313758850098
    5. ']

' → logprob: -15.500313758850098
    6. ']>' → logprob: -16.375314712524414
    7. ']
' → logprob: -16.375314712524414
    8. '()]' → logprob: -17.125314712524414
    9. '   ' → logprob: -17.500314712524414
    10. '])' → logprob: -17.500314712524414

Token 300: '       ' (ID: 309)
  Prédit: '	ct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	ct' → logprob: -0.6903274655342102
    2. '   ' → logprob: -1.0653274059295654
    3. 'ct' → logprob: -1.9403274059295654
    4. '       ' → logprob: -4.9403276443481445
    5. '
' → logprob: -6.0653276443481445
    6. ' ct' → logprob: -7.4403276443481445
    7. '    
' → logprob: -9.565327644348145
    8. '```' → logprob: -9.690327644348145
    9. '_ct' → logprob: -10.565327644348145
    10. '(ct' → logprob: -10.690327644348145

Token 301: ' ct' (ID: 40541)
  Prédit: 'ct'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ct' (adapté à ' ct') → logprob: -0.320337176322937
    2. '   ' → logprob: -1.320337176322937
    3. '	ct' → logprob: -5.195337295532227
    4. ' ct' → logprob: -7.070337295532227
    5. '
' → logprob: -7.820337295532227
    6. '       ' → logprob: -8.445337295532227
    7. ' ' → logprob: -11.445337295532227
    8. '(ct' → logprob: -11.820337295532227
    9. '    
' → logprob: -12.070337295532227
    10. '_ct' → logprob: -12.320337295532227

Token 302: '_dict' (ID: 11295)
  Prédit: '_dict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dict' → logprob: -5.512236498361744e-07
    2. 'dict' → logprob: -14.875000953674316
    3. '[' → logprob: -16.25
    4. '_DICT' → logprob: -17.375
    5. 'd' → logprob: -17.75
    6. '_d' → logprob: -18.0
    7. '_dic' → logprob: -18.875
    8. '[_' → logprob: -19.0
    9. '_' → logprob: -19.125
    10. '```' → logprob: -19.125

Token 303: '[k' (ID: 14298)
  Prédit: '[d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[d' → logprob: -7.226628895296017e-06
    2. '[' → logprob: -11.875007629394531
    3. 'd' → logprob: -16.87500762939453
    4. '\[' → logprob: -17.12500762939453
    5. '[k' → logprob: -17.50000762939453
    6. '[s' → logprob: -18.75000762939453
    7. '[c' → logprob: -19.37500762939453
    8. '[
' → logprob: -19.75000762939453
    9. '[df' → logprob: -19.75000762939453
    10. ' [' → logprob: -19.87500762939453

Token 304: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0001848254178185016
    2. ']=' → logprob: -8.750185012817383
    3. ']+=' → logprob: -10.875185012817383
    4. ' ]' → logprob: -12.000185012817383
    5. '=' → logprob: -13.750185012817383
    6. ')' → logprob: -15.625185012817383
    7. ']
' → logprob: -16.500185012817383
    8. ']+' → logprob: -17.750185012817383
    9. '+=' → logprob: -18.250185012817383
    10. ' =' → logprob: -19.375185012817383

Token 305: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.005664852447807789
    2. ' =' → logprob: -5.755664825439453
    3. '+=' → logprob: -6.005664825439453
    4. ' +=' → logprob: -10.880664825439453
    5. '=count' → logprob: -15.255664825439453
    6. '.=' → logprob: -16.005664825439453
    7. '=int' → logprob: -18.005664825439453
    8. ']+=' → logprob: -18.380664825439453
    9. '=k' → logprob: -18.880664825439453
    10. '=c' → logprob: -19.005664825439453

Token 306: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.0005588700296357274
    2. 'max' → logprob: -7.750558853149414
    3. ' count' → logprob: -9.000558853149414
    4. ' max' → logprob: -12.250558853149414
    5. '	count' → logprob: -19.000558853149414
    6. 'c' → logprob: -19.000558853149414
    7. ' ' → logprob: -19.500558853149414
    8. '(count' → logprob: -20.125558853149414
    9. 'int' → logprob: -20.625558853149414
    10. '[count' → logprob: -20.750558853149414

Token 307: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 308: '       ' (ID: 309)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10320958495140076
    2. '<|end|>' → logprob: -2.6032094955444336
    3. 'for' → logprob: -4.603209495544434
    4. '
' → logprob: -4.603209495544434
    5. ' for' → logprob: -7.478209495544434
    6. '  
' → logprob: -7.728209495544434
    7. '\n' → logprob: -7.853209495544434
    8. '}' → logprob: -8.103209495544434
    9. '%' → logprob: -8.228209495544434
    10. '   ' → logprob: -8.228209495544434

Token 309: ' #' (ID: 1069)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.08207756280899048
    2. ' ans' → logprob: -2.5820775032043457
    3. ')' → logprob: -6.707077503204346
    4. '	ans' → logprob: -7.207077503204346
    5. '(ans' → logprob: -7.457077503204346
    6. '
' → logprob: -8.457077980041504
    7. 'for' → logprob: -9.207077980041504
    8. '_ans' → logprob: -9.332077980041504
    9. '   ' → logprob: -9.957077980041504
    10. ' 
' → logprob: -9.957077980041504

Token 310: ' On' (ID: 2160)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.18181757628917694
    2. ' ans' → logprob: -1.8068175315856934
    3. '   ' → logprob: -6.806817531585693
    4. '	ans' → logprob: -7.806817531585693
    5. 'if' → logprob: -8.931818008422852
    6. 'for' → logprob: -9.306818008422852
    7. '(ans' → logprob: -9.431818008422852
    8. ' for' → logprob: -9.681818008422852
    9. 'answer' → logprob: -10.056818008422852
    10. '       ' → logprob: -10.306818008422852

Token 311: ' ajuste' (ID: 94049)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.05830896645784378
    2. '
' → logprob: -4.183309078216553
    3. '+=' → logprob: -4.558309078216553
    4. 'answer' → logprob: -5.058309078216553
    5. ' ans' → logprob: -5.058309078216553
    6. '_ans' → logprob: -5.058309078216553
    7. '=' → logprob: -6.558309078216553
    8. ' 
' → logprob: -6.683309078216553
    9. '   ' → logprob: -6.683309078216553
    10. 'for' → logprob: -7.058309078216553

Token 312: ' ans' (ID: 3345)
  Prédit: ' ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.47480157017707825
    2. 'ans' → logprob: -0.9748015403747559
    3. '(ans' → logprob: -8.099802017211914
    4. '   ' → logprob: -8.599802017211914
    5. '	ans' → logprob: -9.349802017211914
    6. '       ' → logprob: -9.724802017211914
    7. ' for' → logprob: -10.474802017211914
    8. ' if' → logprob: -10.724802017211914
    9. 'if' → logprob: -11.224802017211914
    10. 'for' → logprob: -11.974802017211914

Token 313: '
' (ID: 198)
  Prédit: ' -='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.008034685626626015
    2. '-=' → logprob: -4.883034706115723
    3. ' +=' → logprob: -8.508034706115723
    4. '-' → logprob: -9.008034706115723
    5. '+=' → logprob: -9.883034706115723
    6. ' -' → logprob: -10.633034706115723
    7. '   ' → logprob: -11.508034706115723
    8. ' %=' → logprob: -12.008034706115723
    9. ' ans' → logprob: -12.633034706115723
    10. '=' → logprob: -13.383034706115723

Token 314: '       ' (ID: 309)
  Prédit: ' -='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.16498824954032898
    2. '-=' → logprob: -2.0399882793426514
    3. '       ' → logprob: -5.039988040924072
    4. '+=' → logprob: -5.414988040924072
    5. '   ' → logprob: -5.664988040924072
    6. '-' → logprob: -5.789988040924072
    7. ' +=' → logprob: -5.789988040924072
    8. ' ans' → logprob: -7.164988040924072
    9. ' 
' → logprob: -7.914988040924072
    10. 'ans' → logprob: -9.66498851776123

Token 315: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.009983669966459274
    2. ' ans' → logprob: -4.634983539581299
    3. '   ' → logprob: -9.134984016418457
    4. '       ' → logprob: -9.384984016418457
    5. '	ans' → logprob: -10.759984016418457
    6. 'for' → logprob: -12.384984016418457
    7. '(ans' → logprob: -13.134984016418457
    8. '```' → logprob: -13.134984016418457
    9. 'if' → logprob: -13.634984016418457
    10. 'answer' → logprob: -13.759984016418457

Token 316: ' -=' (ID: 12583)
  Prédit: ' -='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.3415067791938782
    2. '-=' → logprob: -1.5915067195892334
    3. '+=' → logprob: -3.0915067195892334
    4. ' +=' → logprob: -3.4665067195892334
    5. '-' → logprob: -4.8415069580078125
    6. '=' → logprob: -7.8415069580078125
    7. ' =' → logprob: -8.091506958007812
    8. '%=' → logprob: -8.841506958007812
    9. ' ^=' → logprob: -9.341506958007812
    10. ' -' → logprob: -9.591506958007812

Token 317: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.5580269694328308
    2. 'd' → logprob: -1.6830270290374756
    3. '(d' → logprob: -2.4330270290374756
    4. 'ct' → logprob: -2.9330270290374756
    5. '(count' → logprob: -3.0580270290374756
    6. '(' → logprob: -3.5580270290374756
    7. '2' → logprob: -4.4330267906188965
    8. '(ct' → logprob: -4.9330267906188965
    9. '((' → logprob: -6.1830267906188965
    10. '(n' → logprob: -6.5580267906188965

Token 318: ' *' (ID: 425)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8688065409660339
    2. '%' → logprob: -1.3688066005706787
    3. ' 
' → logprob: -1.9938066005706787
    4. ' %' → logprob: -2.4938066005706787
    5. '<|end|>' → logprob: -2.8688066005706787
    6. ' ' → logprob: -3.6188066005706787
    7. '%n' → logprob: -4.7438063621521
    8. '\n' → logprob: -5.9938063621521
    9. '*' → logprob: -5.9938063621521
    10. ')' → logprob: -6.2438063621521

Token 319: ' ' (ID: 220)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.21765975654125214
    2. '(d' → logprob: -2.2176597118377686
    3. '(' → logprob: -2.8426597118377686
    4. '2' → logprob: -4.092659950256348
    5. '(n' → logprob: -5.592659950256348
    6. 'k' → logprob: -5.842659950256348
    7. '((' → logprob: -6.592659950256348
    8. '(k' → logprob: -6.592659950256348
    9. '(mod' → logprob: -7.467659950256348
    10. 'n' → logprob: -7.717659950256348

Token 320: '2' (ID: 17)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.18477033078670502
    2. '(d' → logprob: -2.434770345687866
    3. '(' → logprob: -2.809770345687866
    4. '2' → logprob: -4.309770107269287
    5. '(n' → logprob: -5.684770107269287
    6. 'k' → logprob: -6.934770107269287
    7. '((' → logprob: -7.309770107269287
    8. '(mod' → logprob: -7.559770107269287
    9. '(k' → logprob: -7.684770107269287
    10. 'mod' → logprob: -7.684770107269287

Token 321: ' *' (ID: 425)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.17195601761341095
    2. ' ' → logprob: -2.4219560623168945
    3. '*' → logprob: -4.1719560623168945
    4. ' *' → logprob: -4.4219560623168945
    5. '
' → logprob: -4.4219560623168945
    6. '<|end|>' → logprob: -4.7969560623168945
    7. '  
' → logprob: -5.2969560623168945
    8. ')' → logprob: -5.4219560623168945
    9. '%' → logprob: -5.6719560623168945
    10. ' %' → logprob: -6.4219560623168945

Token 322: ' (' (ID: 350)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.012523079290986061
    2. 'k' → logprob: -4.512523174285889
    3. '(d' → logprob: -7.012523174285889
    4. '(k' → logprob: -8.26252269744873
    5. '(n' → logprob: -8.88752269744873
    6. 'n' → logprob: -9.26252269744873
    7. 'dk' → logprob: -10.26252269744873
    8. 'mod' → logprob: -11.38752269744873
    9. '(' → logprob: -11.51252269744873
    10. ' d' → logprob: -11.51252269744873

Token 323: 'n' (ID: 77)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.13205139338970184
    2. 'k' → logprob: -2.132051467895508
    3. '(d' → logprob: -6.132051467895508
    4. '(k' → logprob: -6.257051467895508
    5. 'n' → logprob: -7.382051467895508
    6. '(n' → logprob: -8.507051467895508
    7. '(' → logprob: -9.632051467895508
    8. 'dk' → logprob: -10.132051467895508
    9. 'mod' → logprob: -10.382051467895508
    10. ' d' → logprob: -11.132051467895508

Token 324: ' -' (ID: 533)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '//' → logprob: -0.20607970654964447
    2. ' //' → logprob: -1.7060797214508057
    3. 'd' → logprob: -5.831079483032227
    4. '*' → logprob: -7.456079483032227
    5. '#' → logprob: -7.831079483032227
    6. '   ' → logprob: -8.581079483032227
    7. '*d' → logprob: -9.456079483032227
    8. ' ' → logprob: -9.581079483032227
    9. ' *' → logprob: -9.706079483032227
    10. ' d' → logprob: -10.081079483032227

Token 325: ' k' (ID: 372)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.004022237844765186
    2. 'k' → logprob: -5.879022121429443
    3. 'n' → logprob: -6.879022121429443
    4. ' d' → logprob: -9.379022598266602
    5. '(d' → logprob: -10.004022598266602
    6. '(n' → logprob: -10.754022598266602
    7. '1' → logprob: -11.254022598266602
    8. 'dk' → logprob: -11.754022598266602
    9. '2' → logprob: -12.379022598266602
    10. '(k' → logprob: -12.879022598266602

Token 326: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.030994946137070656
    2. ' )' → logprob: -4.030994892120361
    3. '//' → logprob: -4.905994892120361
    4. ' //' → logprob: -6.530994892120361
    5. ')//' → logprob: -6.780994892120361
    6. 'd' → logprob: -7.405994892120361
    7. ')d' → logprob: -7.780994892120361
    8. ')
' → logprob: -7.780994892120361
    9. '*' → logprob: -8.15599536895752
    10. '*d' → logprob: -8.15599536895752

Token 327: 'print' (ID: 1598)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 328: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.00035536551149562
    2. '(' → logprob: -8.00035572052002
    3. 'ans' → logprob: -11.62535572052002
    4. '(
' → logprob: -12.37535572052002
    5. '()' → logprob: -12.50035572052002
    6. ' (' → logprob: -13.00035572052002
    7. '(abs' → logprob: -15.00035572052002
    8. '(answer' → logprob: -15.37535572052002
    9. '((' → logprob: -16.250354766845703
    10. '('' → logprob: -16.625354766845703

Token 329: ' %' (ID: 1851)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2664456789934775e-06
    2. '))' → logprob: -14.625000953674316
    3. ' )' → logprob: -14.750000953674316
    4. ')`' → logprob: -15.375000953674316
    5. '+' → logprob: -15.875000953674316
    6. ')
' → logprob: -16.875001907348633
    7. '}' → logprob: -18.500001907348633
    8. ')}' → logprob: -18.500001907348633
    9. ')#' → logprob: -18.625001907348633
    10. '**' → logprob: -18.750001907348633

Token 330: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.001502717612311244
    2. ' mod' → logprob: -6.501502513885498
    3. '(mod' → logprob: -15.126502990722656
    4. '998' → logprob: -16.251502990722656
    5. '	mod' → logprob: -17.626502990722656
    6. ' мод' → logprob: -19.376502990722656
    7. ' ' → logprob: -19.876502990722656
    8. '_mod' → logprob: -20.751502990722656
    9. '.mod' → logprob: -21.376502990722656
    10. 'MOD' → logprob: -21.876502990722656

Token 331: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.676292231422849e-05
    2. ')
' → logprob: -11.250017166137695
    3. ' )' → logprob: -13.500017166137695
    4. '```' → logprob: -13.500017166137695
    5. '`)' → logprob: -15.375017166137695
    6. '
' → logprob: -15.500017166137695
    7. '))' → logprob: -16.375017166137695
    8. ')`' → logprob: -16.500017166137695
    9. '+' → logprob: -16.625017166137695
    10. '\n' → logprob: -16.750017166137695


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 329
Tokens correctement prédits (1ère position, stricte): 107
Tokens correctement prédits (1ère position, avec adaptation): 114
Tokens correctement prédits (top 10): 246
Précision stricte (1ère position): 32.52%
Précision adaptée (1ère position): 34.65%
Précision (top 10): 74.77%
================================================================================
