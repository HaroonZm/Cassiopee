================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:37:21
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

def read_input():
    """
    Lit les valeurs de N et M, puis lit la chaîne S et l'inverse.

    Returns:
        N (int): Longueur totale de la chaîne.
        M (int): Longueur maximale de saut autorisé.
        S (str): Chaîne inversée représentant les positions libres et bloquées.
    """
    N, M = map(int, input().split())
    S = input()[::-1]    # On inverse l'entrée pour faciliter le traitement depuis le début réel.
    return N, M, S

def calculate_steps(N, M, S):
    """
    Calcule la séquence minimale de sauts pour atteindre la fin de la chaîne S en respectant les contraintes.

    Args:
        N (int): Longueur totale de la chaîne.
        M (int): Longueur maximale de saut autorisé.
        S (str): Chaîne inversée contenant '0' (libre) ou '1' (bloquée).

    Returns:
        str: Une chaîne d'entiers représentant les sauts, séparés par des espaces, ou '-1' si impossible.
    """
    ans = ''   # Chaîne qui va accumuler les sauts effectués
    i = 0      # Position actuelle dans la chaîne
    while i < N - M:
        found = False    # Indique si un saut valide a été trouvé depuis la position courante
        # On cherche le saut maximal possible allant de M à 1
        for j in range(M, 0, -1):
            if S[i + j] == '0':   # Vérifie si la destination est libre
                ans += str(j) + ' '   # Ajoute ce saut à la séquence de réponses
                i += j                # Avance à la prochaine position atteinte
                found = True
                break
        if not found:
            return '-1'      # Si aucun saut n'est possible, on retourne -1 immédiatement
    # Dernier saut pour couvrir les cases restantes jusqu'à la fin
    ans += str(N - i)
    # On inverse la séquence pour retrouver l'ordre "naturel" (puisqu'on a traité la chaîne inversée)
    return ' '.join(ans.split()[::-1])

def main():
    """
    Point d'entrée du programme.
    Lit les entrées, calcule les sauts, et affiche la solution.
    """
    N, M, S = read_input()
    result = calculate_steps(N, M, S)
    print(result)

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.18268179893493652
    2. '\n' → logprob: -2.1826817989349365
    3. 'import' → logprob: -3.5576817989349365
    4. '<|end|>' → logprob: -4.932682037353516
    5. '' → logprob: -5.807682037353516
    6. 'newline' → logprob: -5.932682037353516
    7. '\' → logprob: -6.057682037353516
    8. 'print' → logprob: -6.432682037353516
    9. '[' → logprob: -6.557682037353516
    10. '<|end|>' → logprob: -6.807682037353516

Token 4: ' read' (ID: 1729)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.021233972162008286
    2. ' main' → logprob: -5.646234035491943
    3. ' ' → logprob: -5.771234035491943
    4. ' space' → logprob: -6.021234035491943
    5. ' process' → logprob: -6.396234035491943
    6. ' sys' → logprob: -6.896234035491943
    7. '  ' → logprob: -7.021234035491943
    8. '_' → logprob: -7.271234035491943
    9. '<|end|>' → logprob: -7.396234035491943
    10. ' a' → logprob: -7.521234035491943

Token 5: '_input' (ID: 12507)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.38957807421684265
    2. '_' → logprob: -1.139578104019165
    3. ' (' → logprob: -6.389577865600586
    4. '_line' → logprob: -8.389577865600586
    5. ':' → logprob: -9.514577865600586
    6. '```' → logprob: -9.514577865600586
    7. '_data' → logprob: -9.639577865600586
    8. ' ' → logprob: -9.764577865600586
    9. '():' → logprob: -9.764577865600586
    10. '_space' → logprob: -9.889577865600586

Token 6: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.009401277638971806
    2. '_' → logprob: -4.759401321411133
    3. ' (' → logprob: -8.384401321411133
    4. '():' → logprob: -8.759401321411133
    5. '(_' → logprob: -9.759401321411133
    6. '("("' → logprob: -9.884401321411133
    7. '_parent' → logprob: -10.009401321411133
    8. '(:' → logprob: -10.509401321411133
    9. ':' → logprob: -10.509401321411133
    10. '(_:' → logprob: -10.759401321411133

Token 7: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6885358095169067
    2. '(' → logprob: -1.3135358095169067
    3. '```' → logprob: -2.563535690307617
    4. '\' → logprob: -3.313535690307617
    5. '\n' → logprob: -4.063535690307617
    6. ' return' → logprob: -4.313535690307617
    7. '(return' → logprob: -4.438535690307617
    8. '()' → logprob: -4.938535690307617
    9. ''' → logprob: -4.938535690307617
    10. '<|end|>' → logprob: -5.063535690307617

Token 8: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7457908987998962
    2. 'return' → logprob: -0.9957908987998962
    3. ' return' → logprob: -2.370790958404541
    4. 'data' → logprob: -3.370790958404541
    5. ' line' → logprob: -4.745790958404541
    6. 'input' → logprob: -4.870790958404541
    7. ' data' → logprob: -5.870790958404541
    8. 'line' → logprob: -6.120790958404541
    9. ' ' → logprob: -6.245790958404541
    10. ' input' → logprob: -6.370790958404541

Token 9: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1368769407272339
    2. '"""' → logprob: -2.7618770599365234
    3. 'Reads' → logprob: -3.3868770599365234
    4. ' Reads' → logprob: -4.511877059936523
    5. ' reads' → logprob: -4.761877059936523
    6. 'Read' → logprob: -5.011877059936523
    7. ' Read' → logprob: -6.761877059936523
    8. ' """' → logprob: -7.511877059936523
    9. 'return' → logprob: -7.761877059936523
    10. ''''' → logprob: -8.261877059936523

Token 10: ' Lit' (ID: 45595)
  Prédit: 'Reads'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Reads' → logprob: -0.6102210879325867
    2. '   ' → logprob: -1.2352211475372314
    3. 'Read' → logprob: -2.1102211475372314
    4. '"""' → logprob: -3.9852211475372314
    5. ' Reads' → logprob: -4.235220909118652
    6. ' reads' → logprob: -5.860220909118652
    7. ' Read' → logprob: -6.610220909118652
    8. 'reads' → logprob: -6.610220909118652
    9. 'return' → logprob: -7.110220909118652
    10. 'Returns' → logprob: -7.110220909118652

Token 11: ' les' (ID: 1341)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.15092630684375763
    2. 'er' → logprob: -2.400926351547241
    3. '   ' → logprob: -4.025926113128662
    4. ' les' → logprob: -4.400926113128662
    5. ' input' → logprob: -5.900926113128662
    6. ' ' → logprob: -6.025926113128662
    7. 'es' → logprob: -6.150926113128662
    8. ' e' → logprob: -6.650926113128662
    9. ' inputs' → logprob: -6.650926113128662
    10. ' le' → logprob: -6.775926113128662

Token 12: ' valeurs' (ID: 73668)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.729218602180481
    2. ' la' → logprob: -1.854218602180481
    3. 'l' → logprob: -2.4792184829711914
    4. ' une' → logprob: -2.6042184829711914
    5. ' l' → logprob: -3.1042184829711914
    6. 'les' → logprob: -3.2292184829711914
    7. '   ' → logprob: -3.4792184829711914
    8. ' ' → logprob: -3.8542184829711914
    9. ' input' → logprob: -3.9792184829711914
    10. 'la' → logprob: -4.354218482971191

Token 13: ' de' (ID: 334)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.7930163741111755
    2. '   ' → logprob: -2.1680164337158203
    3. 'du' → logprob: -2.4180164337158203
    4. ' de' → logprob: -2.4180164337158203
    5. ' d' → logprob: -2.6680164337158203
    6. ' du' → logprob: -3.2930164337158203
    7. ' ' → logprob: -3.2930164337158203
    8. 'd' → logprob: -3.5430164337158203
    9. ' à' → logprob: -3.5430164337158203
    10. 'de' → logprob: -3.9180164337158203

Token 14: ' N' (ID: 478)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.1795666217803955
    2. ' sys' → logprob: -2.0545666217803955
    3. ' input' → logprob: -2.0545666217803955
    4. ' stdin' → logprob: -2.1795666217803955
    5. 'stdin' → logprob: -2.4295666217803955
    6. ' l' → logprob: -2.5545666217803955
    7. 'sys' → logprob: -3.0545666217803955
    8. 'entrée' → logprob: -3.0545666217803955
    9. ' ' → logprob: -4.179566383361816
    10. 'la' → logprob: -4.679566383361816

Token 15: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4997459948062897
    2. ' et' → logprob: -1.3747459650039673
    3. ' ' → logprob: -3.749746084213257
    4. ',' → logprob: -3.874746084213257
    5. '
' → logprob: -3.999746084213257
    6. ' (' → logprob: -4.249745845794678
    7. ' à' → logprob: -4.374745845794678
    8. '    ' → logprob: -4.874745845794678
    9. ' de' → logprob: -4.874745845794678
    10. 'et' → logprob: -5.624745845794678

Token 16: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.3149259090423584
    2. ' M' → logprob: -2.0649259090423584
    3. 'K' → logprob: -2.9399259090423584
    4. '   ' → logprob: -3.6899259090423584
    5. 'les' → logprob: -4.3149261474609375
    6. 'l' → logprob: -4.9399261474609375
    7. 'la' → logprob: -4.9399261474609375
    8. ' K' → logprob: -4.9399261474609375
    9. 'X' → logprob: -5.0649261474609375
    10. 'le' → logprob: -5.3149261474609375

Token 17: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03407486528158188
    2. '
' → logprob: -3.7840747833251953
    3. 'de' → logprob: -6.284074783325195
    4. '\n' → logprob: -6.284074783325195
    5. 'from' → logprob: -6.409074783325195
    6. ' de' → logprob: -6.534074783325195
    7. '    
' → logprob: -6.909074783325195
    8. '    ' → logprob: -7.284074783325195
    9. '```' → logprob: -8.159074783325195
    10. ',' → logprob: -8.659074783325195

Token 18: ' puis' (ID: 18766)
  Prédit: ' puis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' puis' → logprob: -0.7143638134002686
    2. ' et' → logprob: -1.5893638134002686
    3. 'p' → logprob: -1.8393638134002686
    4. '   ' → logprob: -2.7143638134002686
    5. ' les' → logprob: -3.4643638134002686
    6. ' ainsi' → logprob: -3.7143638134002686
    7. 'et' → logprob: -4.089364051818848
    8. '    ' → logprob: -5.714364051818848
    9. 'ains' → logprob: -6.964364051818848
    10. 'ens' → logprob: -7.089364051818848

Token 19: ' lit' (ID: 11980)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.12865708768367767
    2. 'les' → logprob: -3.003657102584839
    3. ' retourne' → logprob: -4.12865686416626
    4. ' récup' → logprob: -5.12865686416626
    5. 'l' → logprob: -5.25365686416626
    6. 'r' → logprob: -5.50365686416626
    7. '   ' → logprob: -5.50365686416626
    8. 'return' → logprob: -5.62865686416626
    9. ' la' → logprob: -5.87865686416626
    10. ' appelle' → logprob: -6.25365686416626

Token 20: ' la' (ID: 557)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.24304649233818054
    2. ' ' → logprob: -2.368046522140503
    3. '   ' → logprob: -2.868046522140503
    4. ' la' → logprob: -3.493046522140503
    5. 'les' → logprob: -4.368046283721924
    6. 'l' → logprob: -5.243046283721924
    7. ' des' → logprob: -5.368046283721924
    8. '```' → logprob: -5.868046283721924
    9. ' le' → logprob: -6.618046283721924
    10. '    ' → logprob: -6.618046283721924

Token 21: ' chaîne' (ID: 89288)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7901251316070557
    2. ' suite' → logprob: -1.4151251316070557
    3. ' chaîne' → logprob: -2.6651251316070557
    4. 'suite' → logprob: -2.9151251316070557
    5. ' ligne' → logprob: -3.2901251316070557
    6. ' suivante' → logprob: -3.2901251316070557
    7. ' prochaine' → logprob: -3.4151251316070557
    8. ' liste' → logprob: -4.415124893188477
    9. 'chaine' → logprob: -5.290124893188477
    10. '   ' → logprob: -5.415124893188477

Token 22: ' S' (ID: 336)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.009852062910795212
    2. 'de' → logprob: -5.134851932525635
    3. ' complète' → logprob: -7.009851932525635
    4. 's' → logprob: -7.384851932525635
    5. ' d' → logprob: -7.384851932525635
    6. '   ' → logprob: -8.134852409362793
    7. ' en' → logprob: -8.384852409362793
    8. ' ' → logprob: -9.259852409362793
    9. ' des' → logprob: -9.259852409362793
    10. ' ' → logprob: -9.509852409362793

Token 23: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007566634099930525
    2. '    
' → logprob: -5.882566452026367
    3. '
' → logprob: -6.507566452026367
    4. '\n' → logprob: -7.007566452026367
    5. ' ' → logprob: -7.507566452026367
    6. '\' → logprob: -7.882566452026367
    7. '    ' → logprob: -8.382566452026367
    8. '```' → logprob: -8.382566452026367
    9. '  ' → logprob: -8.757566452026367
    10. '.' → logprob: -8.882566452026367

Token 24: ' l' (ID: 305)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.7313958406448364
    2. 'les' → logprob: -2.231395721435547
    3. ' la' → logprob: -2.606395721435547
    4. 'return' → logprob: -2.981395721435547
    5. 's' → logprob: -3.731395721435547
    6. 'ses' → logprob: -3.731395721435547
    7. ' ses' → logprob: -3.731395721435547
    8. ' retourne' → logprob: -3.856395721435547
    9. 'es' → logprob: -3.981395721435547
    10. ' le' → logprob: -4.231395721435547

Token 25: ''in' (ID: 17942)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.726350724697113
    2. 'e' → logprob: -0.726350724697113
    3. 'es' → logprob: -3.601350784301758
    4. ''ensemble' → logprob: -6.351350784301758
    5. ''espace' → logprob: -7.601350784301758
    6. ''a' → logprob: -7.851350784301758
    7. ''objectif' → logprob: -8.101350784301758
    8. 'iste' → logprob: -8.226350784301758
    9. ''autre' → logprob: -8.476350784301758
    10. ''environnement' → logprob: -8.726350784301758

Token 26: 'verse' (ID: 7093)
  Prédit: 'put'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'put' → logprob: -0.1626148223876953
    2. '[' → logprob: -2.7876148223876953
    3. 't' → logprob: -3.1626148223876953
    4. 'd' → logprob: -3.9126148223876953
    5. 'puts' → logprob: -4.287614822387695
    6. 'dex' → logprob: -5.537614822387695
    7. 'it' → logprob: -6.162614822387695
    8. 'struction' → logprob: -7.287614822387695
    9. 'de' → logprob: -7.412614822387695
    10. '_put' → logprob: -7.412614822387695

Token 27: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2589190006256104
    2. ' de' → logprob: -1.6339190006256104
    3. '\' → logprob: -1.7589190006256104
    4. '\n' → logprob: -2.6339190006256104
    5. ' ' → logprob: -2.6339190006256104
    6. 'e' → logprob: -3.1339190006256104
    7. '.' → logprob: -3.6339190006256104
    8. '```' → logprob: -3.7589190006256104
    9. '    
' → logprob: -4.133918762207031
    10. '"""
' → logprob: -4.508918762207031

Token 28: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008232753723859787
    2. '"""' → logprob: -5.383232593536377
    3. '```' → logprob: -6.508232593536377
    4. '"""
' → logprob: -7.008232593536377
    5. '"' → logprob: -7.508232593536377
    6. '`' → logprob: -9.008233070373535
    7. ' ' → logprob: -9.258233070373535
    8. ' """
' → logprob: -9.633233070373535
    9. '
' → logprob: -10.258233070373535
    10. '    
' → logprob: -10.258233070373535

Token 29: ' Returns' (ID: 9609)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007204149151220918
    2. '"""' → logprob: -8.125720024108887
    3. 'return' → logprob: -9.000720024108887
    4. '```' → logprob: -9.125720024108887
    5. 'Returns' (adapté à ' Returns') → logprob: -9.500720024108887
    6. '"""
' → logprob: -10.625720024108887
    7. ' ' → logprob: -10.750720024108887
    8. '    ' → logprob: -11.000720024108887
    9. '  ' → logprob: -11.625720024108887
    10. '""' → logprob: -12.000720024108887

Token 30: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5265041589736938
    2. ' :' → logprob: -1.9015041589736938
    3. '```' → logprob: -2.2765040397644043
    4. ':' → logprob: -2.5265040397644043
    5. '    ' → logprob: -3.6515040397644043
    6. ' `' → logprob: -5.276504039764404
    7. ' ```' → logprob: -5.276504039764404
    8. ' N' → logprob: -5.401504039764404
    9. 'def' → logprob: -5.901504039764404
    10. '`' → logprob: -6.026504039764404

Token 31: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14631353318691254
    2. ' tuple' → logprob: -3.021313428878784
    3. ' Tuple' → logprob: -3.146313428878784
    4. ' int' → logprob: -3.771313428878784
    5. ' N' → logprob: -4.771313667297363
    6. ' (' → logprob: -5.771313667297363
    7. 'int' → logprob: -5.771313667297363
    8. '    ' → logprob: -6.271313667297363
    9. 'Tuple' → logprob: -6.521313667297363
    10. '```' → logprob: -6.771313667297363

Token 32: ' N' (ID: 478)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.508940577507019
    2. 'tuple' → logprob: -1.508940577507019
    3. ' tuple' → logprob: -2.0089406967163086
    4. 'Tuple' → logprob: -3.3839406967163086
    5. ' int' → logprob: -5.133940696716309
    6. '   ' → logprob: -5.883940696716309
    7. ' Tuple' → logprob: -7.383940696716309
    8. 'dict' → logprob: -8.758940696716309
    9. '```' → logprob: -9.008940696716309
    10. '       ' → logprob: -10.383940696716309

Token 33: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.019794175401329994
    2. ':' → logprob: -4.26979398727417
    3. ':int' → logprob: -6.01979398727417
    4. '<|end|>' → logprob: -7.01979398727417
    5. '   ' → logprob: -7.14479398727417
    6. ',int' → logprob: -7.89479398727417
    7. 'int' → logprob: -8.019794464111328
    8. '(int' → logprob: -8.894794464111328
    9. '=int' → logprob: -9.144794464111328
    10. ' ,' → logprob: -9.269794464111328

Token 34: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.20183546841144562
    2. ' int' → logprob: -1.7018355131149292
    3. ',' → logprob: -8.576835632324219
    4. ')' → logprob: -8.826835632324219
    5. ' )' → logprob: -10.326835632324219
    6. ',int' → logprob: -10.951835632324219
    7. ':int' → logprob: -11.826835632324219
    8. '[int' → logprob: -11.826835632324219
    9. '=int' → logprob: -12.201835632324219
    10. ' ,' → logprob: -12.701835632324219

Token 35: '):' (ID: 3127)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.020943906158208847
    2. '):' → logprob: -4.395944118499756
    3. '),' → logprob: -4.895944118499756
    4. ',' → logprob: -7.770944118499756
    5. '   ' → logprob: -7.895944118499756
    6. '):
' → logprob: -9.770943641662598
    7. ' )' → logprob: -10.270943641662598
    8. ')
' → logprob: -11.270943641662598
    9. '```' → logprob: -12.020943641662598
    10. '),
' → logprob: -12.645943641662598

Token 36: ' Long' (ID: 7790)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.003858389565721154
    2. '<|end|>' → logprob: -7.25385856628418
    3. '    ' → logprob: -7.62885856628418
    4. ' N' → logprob: -7.75385856628418
    5. ' )' → logprob: -7.75385856628418
    6. ' int' → logprob: -8.25385856628418
    7. ')' → logprob: -8.25385856628418
    8. '  ' → logprob: -8.37885856628418
    9. ' ' → logprob: -8.37885856628418
    10. ' """' → logprob: -8.87885856628418

Token 37: 'ueur' (ID: 43728)
  Prédit: 'ueur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ueur' → logprob: -0.00029482474201358855
    2. ' int' → logprob: -9.50029468536377
    3. 'ue' → logprob: -10.00029468536377
    4. 'int' → logprob: -10.25029468536377
    5. '   ' → logprob: -10.37529468536377
    6. 'itud' → logprob: -10.62529468536377
    7. 's' → logprob: -11.37529468536377
    8. ' ' → logprob: -11.62529468536377
    9. '```' → logprob: -11.62529468536377
    10. 'itudes' → logprob: -11.62529468536377

Token 38: ' totale' (ID: 52898)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7768459320068359
    2. ' ' → logprob: -0.9018459320068359
    3. ')' → logprob: -3.276845932006836
    4. ' de' → logprob: -3.651845932006836
    5. '   ' → logprob: -4.026845932006836
    6. 's' → logprob: -4.026845932006836
    7. '  ' → logprob: -4.776845932006836
    8. ',' → logprob: -5.151845932006836
    9. '```' → logprob: -5.651845932006836
    10. '=' → logprob: -6.026845932006836

Token 39: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.4140753746032715
    2. ' ' → logprob: -1.6640753746032715
    3. ' des' → logprob: -1.6640753746032715
    4. '   ' → logprob: -1.6640753746032715
    5. ')' → logprob: -2.2890753746032715
    6. ',' → logprob: -3.7890753746032715
    7. '```' → logprob: -4.0390753746032715
    8. '  ' → logprob: -4.1640753746032715
    9. ' )' → logprob: -4.9140753746032715
    10. 's' → logprob: -5.1640753746032715

Token 40: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.06398270279169083
    2. 'la' → logprob: -3.6889827251434326
    3. ' l' → logprob: -3.6889827251434326
    4. 'l' → logprob: -4.5639824867248535
    5. 's' → logprob: -7.3139824867248535
    6. ' ' → logprob: -8.063982963562012
    7. ' the' → logprob: -8.938982963562012
    8. ' ' → logprob: -9.063982963562012
    9. ' N' → logprob: -10.188982963562012
    10. '```' → logprob: -10.876482963562012

Token 41: ' chaîne' (ID: 89288)
  Prédit: ' chaîne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.0995766744017601
    2. 'cha' → logprob: -2.974576711654663
    3. 'chaine' → logprob: -3.349576711654663
    4. ' chaine' → logprob: -5.849576473236084
    5. ' ' → logprob: -6.099576473236084
    6. 's' → logprob: -6.599576473236084
    7. '   ' → logprob: -7.599576473236084
    8. 'sé' → logprob: -7.724576473236084
    9. 'entrée' → logprob: -7.974576473236084
    10. '```' → logprob: -9.099576950073242

Token 42: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6784201264381409
    2. ',' → logprob: -1.428420066833496
    3. '```' → logprob: -2.303420066833496
    4. ')' → logprob: -2.553420066833496
    5. ' ' → logprob: -4.678420066833496
    6. 's' → logprob: -4.678420066833496
    7. '\' → logprob: -4.803420066833496
    8. ' des' → logprob: -5.178420066833496
    9. ',
' → logprob: -5.178420066833496
    10. ' ,' → logprob: -5.303420066833496

Token 43: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0028185509145259857
    2. '```' → logprob: -6.377818584442139
    3. '    ' → logprob: -7.752818584442139
    4. '    
' → logprob: -8.25281810760498
    5. '\n' → logprob: -9.75281810760498
    6. ')' → logprob: -9.75281810760498
    7. ',' → logprob: -10.25281810760498
    8. '  ' → logprob: -10.25281810760498
    9. '       ' → logprob: -10.25281810760498
    10. '`' → logprob: -10.25281810760498

Token 44: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' (adapté à ' M') → logprob: -0.48712435364723206
    2. ' M' → logprob: -0.9871243238449097
    3. '   ' → logprob: -4.362124443054199
    4. '    ' → logprob: -9.7371244430542
    5. '```' → logprob: -10.2371244430542
    6. 'S' → logprob: -10.7371244430542
    7. '  ' → logprob: -11.2371244430542
    8. ' ' → logprob: -11.4871244430542
    9. '       ' → logprob: -11.6121244430542
    10. ')' → logprob: -12.0496244430542

Token 45: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.0001684981834841892
    2. '(int' → logprob: -9.000168800354004
    3. '   ' → logprob: -11.875168800354004
    4. ' ' → logprob: -12.125168800354004
    5. '<|end|>' → logprob: -12.125168800354004
    6. ')' → logprob: -12.250168800354004
    7. '(' → logprob: -12.250168800354004
    8. '```' → logprob: -12.375168800354004
    9. '<|end|>' → logprob: -12.625168800354004
    10. '  ' → logprob: -12.750168800354004

Token 46: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0008067715098150074
    2. ' int' → logprob: -7.25080680847168
    3. ')' → logprob: -9.75080680847168
    4. ':int' → logprob: -11.12580680847168
    5. '(int' → logprob: -11.12580680847168
    6. '=int' → logprob: -12.50080680847168
    7. '):' → logprob: -13.37580680847168
    8. '[int' → logprob: -14.00080680847168
    9. '   ' → logprob: -14.50080680847168
    10. ' )' → logprob: -14.62580680847168

Token 47: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.12443188577890396
    2. ')' → logprob: -2.249431848526001
    3. ' ):' → logprob: -5.24943208694458
    4. ' (' → logprob: -5.99943208694458
    5. ':int' → logprob: -6.74943208694458
    6. ':' → logprob: -7.62443208694458
    7. 'int' → logprob: -7.87443208694458
    8. '(int' → logprob: -7.99943208694458
    9. ' :' → logprob: -8.249431610107422
    10. ' int' → logprob: -8.249431610107422

Token 48: ' Long' (ID: 7790)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.18448954820632935
    2. 'int' → logprob: -2.0594894886016846
    3. ' La' → logprob: -4.184489727020264
    4. ' Le' → logprob: -5.559489727020264
    5. 'La' → logprob: -5.809489727020264
    6. ' L' → logprob: -5.809489727020264
    7. ' Nombre' → logprob: -6.559489727020264
    8. ' Long' → logprob: -6.684489727020264
    9. 'L' → logprob: -7.059489727020264
    10. '   ' → logprob: -7.059489727020264

Token 49: 'ueur' (ID: 43728)
  Prédit: 'ueur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ueur' → logprob: -0.0011428380385041237
    2. 'ue' → logprob: -8.001142501831055
    3. 'int' → logprob: -8.626142501831055
    4. ')' → logprob: -9.126142501831055
    5. 'itude' → logprob: -9.501142501831055
    6. '=int' → logprob: -9.626142501831055
    7. 'itud' → logprob: -10.126142501831055
    8. 'e' → logprob: -10.126142501831055
    9. '_int' → logprob: -10.251142501831055
    10. 'itudes' → logprob: -10.501142501831055

Token 50: ' maximale' (ID: 76380)
  Prédit: ' maximale'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' maximale' → logprob: -0.8475437164306641
    2. ' de' → logprob: -0.9725437164306641
    3. ' des' → logprob: -2.972543716430664
    4. ' du' → logprob: -3.222543716430664
    5. '_' → logprob: -3.847543716430664
    6. '   ' → logprob: -4.222543716430664
    7. ' totale' → logprob: -4.722543716430664
    8. 'de' → logprob: -5.347543716430664
    9. ' (' → logprob: -5.347543716430664
    10. ' ' → logprob: -5.597543716430664

Token 51: ' de' (ID: 334)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.3733366131782532
    2. ' de' → logprob: -2.3733365535736084
    3. ')' → logprob: -2.4983365535736084
    4. '   ' → logprob: -3.6233365535736084
    5. 'de' → logprob: -3.7483365535736084
    6. ' )' → logprob: -3.9983365535736084
    7. ' du' → logprob: -4.1233367919921875
    8. ' d' → logprob: -4.3733367919921875
    9. ' que' → logprob: -4.7483367919921875
    10. 'des' → logprob: -5.2483367919921875

Token 52: ' saut' (ID: 111480)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.1746913194656372
    2. ' l' → logprob: -2.9246912002563477
    3. 'la' → logprob: -3.1746912002563477
    4. 'l' → logprob: -3.6746912002563477
    5. 's' → logprob: -4.799691200256348
    6. 'pal' → logprob: -4.924691200256348
    7. 'substring' → logprob: -6.049691200256348
    8. ' substring' → logprob: -6.174691200256348
    9. ' motif' → logprob: -6.299691200256348
    10. ' palindrome' → logprob: -6.299691200256348

Token 53: ' autor' (ID: 13432)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6209617853164673
    2. ')' → logprob: -0.8709617853164673
    3. ' )' → logprob: -4.745961666107178
    4. '.' → logprob: -5.120961666107178
    5. ' ' → logprob: -5.245961666107178
    6. '```' → logprob: -5.245961666107178
    7. '):' → logprob: -5.370961666107178
    8. ',' → logprob: -6.620961666107178
    9. 's' → logprob: -6.745961666107178
    10. ' entre' → logprob: -6.995961666107178

Token 54: 'isé' (ID: 30065)
  Prédit: 'isé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isé' → logprob: -0.10828632861375809
    2. 'isée' → logprob: -2.4832863807678223
    3. 'isés' → logprob: -4.983286380767822
    4. 'isées' → logprob: -5.108286380767822
    5. 'is' → logprob: -5.608286380767822
    6. 'i' → logprob: -6.733286380767822
    7. 'é' → logprob: -7.358286380767822
    8. '```' → logprob: -7.983286380767822
    9. 'ise' → logprob: -9.358285903930664
    10. '#' → logprob: -9.733285903930664

Token 55: '.
' (ID: 558)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02923763170838356
    2. ')
' → logprob: -4.029237747192383
    3. '   ' → logprob: -4.904237747192383
    4. ' )' → logprob: -6.154237747192383
    5. ' )
' → logprob: -7.904237747192383
    6. ' ' → logprob: -8.154237747192383
    7. '```' → logprob: -8.279237747192383
    8. '):
' → logprob: -9.154237747192383
    9. 's' → logprob: -9.279237747192383
    10. '.' → logprob: -9.404237747192383

Token 56: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07371623814105988
    2. '"""' → logprob: -3.448716163635254
    3. '"""
' → logprob: -3.573716163635254
    4. '```' → logprob: -5.323716163635254
    5. ')' → logprob: -5.698716163635254
    6. '"' → logprob: -6.948716163635254
    7. '\n' → logprob: -7.198716163635254
    8. '""' → logprob: -8.073716163635254
    9. ')
' → logprob: -8.573716163635254
    10. '\' → logprob: -8.823716163635254

Token 57: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' (adapté à ' S') → logprob: -0.290690541267395
    2. ' S' → logprob: -1.540690541267395
    3. '   ' → logprob: -3.5406904220581055
    4. ' str' → logprob: -5.6656904220581055
    5. 's' → logprob: -6.1656904220581055
    6. 'str' → logprob: -6.2906904220581055
    7. '       ' → logprob: -7.5406904220581055
    8. '```' → logprob: -8.290690422058105
    9. ' ' → logprob: -8.790690422058105
    10. '  ' → logprob: -9.415690422058105

Token 58: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6816110014915466
    2. ' (' → logprob: -1.3066110610961914
    3. '   ' → logprob: -1.6816110610961914
    4. ' =' → logprob: -4.556611061096191
    5. '  ' → logprob: -5.056611061096191
    6. ':' → logprob: -5.431611061096191
    7. ' ,' → logprob: -5.556611061096191
    8. ' :' → logprob: -6.056611061096191
    9. '```' → logprob: -6.056611061096191
    10. '    ' → logprob: -6.181611061096191

Token 59: 'str' (ID: 689)
  Prédit: 'str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.021175960078835487
    2. ' str' → logprob: -4.146175861358643
    3. ')' → logprob: -6.146175861358643
    4. '[str' → logprob: -6.146175861358643
    5. '(str' → logprob: -7.771175861358643
    6. ':str' → logprob: -8.2711763381958
    7. '=str' → logprob: -9.0211763381958
    8. '   ' → logprob: -11.2711763381958
    9. 'string' → logprob: -11.5211763381958
    10. ' =' → logprob: -12.0211763381958

Token 60: '):' (ID: 3127)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.22702746093273163
    2. '):' → logprob: -1.602027416229248
    3. '   ' → logprob: -6.852027416229248
    4. ' ):' → logprob: -8.352027893066406
    5. ' )' → logprob: -8.352027893066406
    6. '):
' → logprob: -10.227027893066406
    7. '")' → logprob: -11.977027893066406
    8. '"):' → logprob: -12.352027893066406
    9. '),' → logprob: -12.477027893066406
    10. '    ' → logprob: -12.477027893066406

Token 61: ' Cha' (ID: 37219)
  Prédit: ' La'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' La' → logprob: -0.7388513684272766
    2. 'La' → logprob: -0.9888513684272766
    3. '   ' → logprob: -2.238851308822632
    4. ' la' → logprob: -4.238851547241211
    5. '    ' → logprob: -5.488851547241211
    6. ' str' → logprob: -5.613851547241211
    7. 'chaine' → logprob: -5.988851547241211
    8. ' ' → logprob: -6.363851547241211
    9. ' chaîne' → logprob: -6.363851547241211
    10. 'la' → logprob: -6.488851547241211

Token 62: 'îne' (ID: 55188)
  Prédit: 'î'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'î' → logprob: -0.06262102723121643
    2. 'îne' → logprob: -2.9376211166381836
    3. '\' → logprob: -5.812621116638184
    4. 'i' → logprob: -6.562621116638184
    5. 'ï' → logprob: -7.437621116638184
    6. 'în' → logprob: -7.687621116638184
    7. 'â' → logprob: -8.062621116638184
    8. 'ı' → logprob: -8.437621116638184
    9. '```' → logprob: -8.437621116638184
    10. 'ïne' → logprob: -8.562621116638184

Token 63: ' invers' (ID: 38721)
  Prédit: ' complète'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' complète' → logprob: -0.7575001120567322
    2. '   ' → logprob: -0.8825001120567322
    3. ' completa' → logprob: -3.382500171661377
    4. ')' → logprob: -4.007500171661377
    5. ' complet' → logprob: -4.507500171661377
    6. ' de' → logprob: -4.757500171661377
    7. 'com' → logprob: -5.007500171661377
    8. ' ' → logprob: -5.132500171661377
    9. ' des' → logprob: -5.132500171661377
    10. '"""' → logprob: -5.632500171661377

Token 64: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.08126931637525558
    2. 'é' → logprob: -2.5812692642211914
    3. 'e' → logprob: -6.081269264221191
    4. 'ee' → logprob: -10.331269264221191
    5. 'ées' → logprob: -11.206269264221191
    6. 'ê' → logprob: -12.081269264221191
    7. 'è' → logprob: -12.331269264221191
    8. ' é' → logprob: -12.456269264221191
    9. 'éer' → logprob: -12.831269264221191
    10. '�' → logprob: -13.081269264221191

Token 65: ' représentant' (ID: 136122)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6644436717033386
    2. '"""' → logprob: -1.4144437313079834
    3. ')' → logprob: -1.6644437313079834
    4. '"""
' → logprob: -3.9144437313079834
    5. '")' → logprob: -4.539443492889404
    6. '```' → logprob: -4.789443492889404
    7. '"' → logprob: -5.164443492889404
    8. ')
' → logprob: -6.539443492889404
    9. ' """' → logprob: -6.914443492889404
    10. '.' → logprob: -6.914443492889404

Token 66: ' les' (ID: 1341)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.25769543647766113
    2. 'la' → logprob: -2.632695436477661
    3. ' l' → logprob: -3.132695436477661
    4. 'le' → logprob: -3.757695436477661
    5. ' une' → logprob: -3.882695436477661
    6. ' le' → logprob: -4.007695198059082
    7. ' un' → logprob: -4.382695198059082
    8. 'une' → logprob: -4.507695198059082
    9. ' ' → logprob: -4.632695198059082
    10. 'l' → logprob: -4.882695198059082

Token 67: ' positions' (ID: 15897)
  Prédit: ' indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' indices' → logprob: -1.5700929164886475
    2. 's' → logprob: -2.0700929164886475
    3. ' sa' → logprob: -2.4450929164886475
    4. ' caractères' → logprob: -2.4450929164886475
    5. ' positions' → logprob: -2.6950929164886475
    6. ' points' → logprob: -2.6950929164886475
    7. ' ' → logprob: -3.0700929164886475
    8. 'positions' → logprob: -3.1950929164886475
    9. ' déplacements' → logprob: -3.6950929164886475
    10. ' données' → logprob: -3.8200929164886475

Token 68: ' libres' (ID: 79503)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.513903021812439
    2. ' )' → logprob: -1.638903021812439
    3. ' des' → logprob: -1.638903021812439
    4. ' de' → logprob: -1.888903021812439
    5. '   ' → logprob: -2.5139031410217285
    6. ' du' → logprob: -3.3889031410217285
    7. ' correct' → logprob: -4.2639031410217285
    8. '"""' → logprob: -4.2639031410217285
    9. ' valid' → logprob: -4.7639031410217285
    10. ' d' → logprob: -5.1389031410217285

Token 69: ' et' (ID: 859)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.35156533122062683
    2. '   ' → logprob: -2.351565361022949
    3. '")' → logprob: -2.851565361022949
    4. '"""' → logprob: -3.601565361022949
    5. '"' → logprob: -3.851565361022949
    6. '.' → logprob: -3.851565361022949
    7. ' des' → logprob: -4.476565361022949
    8. ' de' → logprob: -4.601565361022949
    9. '```' → logprob: -4.726565361022949
    10. ' )' → logprob: -4.726565361022949

Token 70: ' blo' (ID: 13098)
  Prédit: 'occup'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'occup' → logprob: -0.8963051438331604
    2. ' occup' → logprob: -1.7713050842285156
    3. 'les' → logprob: -2.0213050842285156
    4. ' les' → logprob: -2.0213050842285156
    5. 'occupied' → logprob: -3.5213050842285156
    6. ' blo' → logprob: -3.7713050842285156
    7. 'blo' → logprob: -4.021305084228516
    8. 's' → logprob: -4.646305084228516
    9. ' occupied' → logprob: -4.646305084228516
    10. ' verrou' → logprob: -4.896305084228516

Token 71: 'quées' (ID: 111264)
  Prédit: 'quées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quées' → logprob: -0.11978337913751602
    2. 'qu' → logprob: -2.494783401489258
    3. 'q' → logprob: -3.994783401489258
    4. 'u' → logprob: -5.494783401489258
    5. '```' → logprob: -6.619783401489258
    6. 'ées' → logprob: -6.619783401489258
    7. 'qué' → logprob: -7.244783401489258
    8. 'uq' → logprob: -7.369783401489258
    9. 'c' → logprob: -7.619783401489258
    10. 'qués' → logprob: -7.619783401489258

Token 72: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22499814629554749
    2. ')' → logprob: -2.3499982357025146
    3. '"' → logprob: -3.4749982357025146
    4. '.' → logprob: -3.5999982357025146
    5. '"""' → logprob: -3.7249982357025146
    6. '")' → logprob: -4.8499979972839355
    7. '"""
' → logprob: -5.3499979972839355
    8. '```' → logprob: -5.8499979972839355
    9. ')
' → logprob: -6.9749979972839355
    10. ',' → logprob: -7.2249979972839355

Token 73: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.39446091651916504
    2. '"""' → logprob: -1.144460916519165
    3. '"""
' → logprob: -6.019460678100586
    4. '```' → logprob: -6.269460678100586
    5. ')' → logprob: -6.894460678100586
    6. '"' → logprob: -7.019460678100586
    7. ' """' → logprob: -7.269460678100586
    8. '""' → logprob: -7.769460678100586
    9. ' """
' → logprob: -9.644460678100586
    10. '`' → logprob: -10.144460678100586

Token 74: ' """
' (ID: 7037)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.04800375550985336
    2. '   ' → logprob: -3.298003673553467
    3. '"""
' (adapté à ' """
') → logprob: -4.798003673553467
    4. ' """' → logprob: -7.298003673553467
    5. '""' → logprob: -7.548003673553467
    6. '```' → logprob: -8.423004150390625
    7. '"' → logprob: -8.673004150390625
    8. ' """
' → logprob: -10.173004150390625
    9. ')' → logprob: -11.173004150390625
    10. ''''' → logprob: -11.673004150390625

Token 75: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002083166502416134
    2. '\n' → logprob: -7.2520833015441895
    3. '    
' → logprob: -7.5020833015441895
    4. '
' → logprob: -8.252082824707031
    5. '```' → logprob: -8.252082824707031
    6. 'return' → logprob: -9.502082824707031
    7. 'newline' → logprob: -9.502082824707031
    8. 'n' → logprob: -9.752082824707031
    9. '    ' → logprob: -11.127082824707031
    10. 'import' → logprob: -11.627082824707031

Token 76: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' (adapté à ' N') → logprob: -0.39281943440437317
    2. '   ' → logprob: -1.5178194046020508
    3. 'lines' → logprob: -2.892819404602051
    4. 'line' → logprob: -3.767819404602051
    5. 'n' → logprob: -4.517819404602051
    6. 'input' → logprob: -5.392819404602051
    7. 'data' → logprob: -5.642819404602051
    8. 'return' → logprob: -5.642819404602051
    9. ' lines' → logprob: -6.267819404602051
    10. 'values' → logprob: -7.267819404602051

Token 77: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00026526954025030136
    2. ' ,' → logprob: -8.250265121459961
    3. '   ' → logprob: -13.500265121459961
    4. '=' → logprob: -14.000265121459961
    5. ',int' → logprob: -14.500265121459961
    6. ',N' → logprob: -14.875265121459961
    7. ' =' → logprob: -15.500265121459961
    8. ',M' → logprob: -16.12526512145996
    9. '‌,' → logprob: -16.25026512145996
    10. ')' → logprob: -16.50026512145996

Token 78: ' M' (ID: 391)
  Prédit: ' M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' M' → logprob: -0.20151996612548828
    2. 'M' → logprob: -1.7015199661254883
    3. ' ' → logprob: -9.451519966125488
    4. '  ' → logprob: -11.326519966125488
    5. ' =' → logprob: -12.326519966125488
    6. '=' → logprob: -12.326519966125488
    7. ' ' → logprob: -13.326519966125488
    8. '=M' → logprob: -13.826519966125488
    9. '<|end|>' → logprob: -13.951519966125488
    10. ',' → logprob: -13.951519966125488

Token 79: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.008821024559438229
    2. '=' → logprob: -4.7588210105896
    3. ',' → logprob: -8.508821487426758
    4. ' ,' → logprob: -13.133821487426758
    5. ' ' → logprob: -13.758821487426758
    6. ')' → logprob: -13.883821487426758
    7. '   ' → logprob: -15.383821487426758
    8. ' =
' → logprob: -16.008821487426758
    9. '=input' → logprob: -16.258821487426758
    10. ' ' → logprob: -16.383821487426758

Token 80: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.004667099565267563
    2. 'map' → logprob: -5.379667282104492
    3. ' sys' → logprob: -10.379667282104492
    4. ' [' → logprob: -11.879667282104492
    5. ' ' → logprob: -12.254667282104492
    6. ' tuple' → logprob: -13.754667282104492
    7. ' list' → logprob: -14.379667282104492
    8. ' read' → logprob: -14.504667282104492
    9. '[' → logprob: -14.754667282104492
    10. ' input' → logprob: -15.004667282104492

Token 81: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.5928221344947815
    2. '(' → logprob: -0.8428221344947815
    3. '(str' → logprob: -4.217822074890137
    4. '(input' → logprob: -6.717822074890137
    5. '(lambda' → logprob: -7.842822074890137
    6. '(
' → logprob: -8.467822074890137
    7. '(sys' → logprob: -9.717822074890137
    8. ' (' → logprob: -10.217822074890137
    9. '(list' → logprob: -10.217822074890137
    10. 'int' → logprob: -10.842822074890137

Token 82: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.37382474541664124
    2. '(sys' → logprob: -1.4988247156143188
    3. '(' → logprob: -2.7488248348236084
    4. ')' → logprob: -4.123824596405029
    5. ',' → logprob: -5.123824596405029
    6. 'input' → logprob: -7.248824596405029
    7. ',input' → logprob: -7.623824596405029
    8. ' (' → logprob: -7.998824596405029
    9. '(stdin' → logprob: -8.873825073242188
    10. '(
' → logprob: -8.873825073242188

Token 83: ' input' (ID: 3422)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.2935246229171753
    2. ' sys' → logprob: -1.7935246229171753
    3. 'input' → logprob: -2.543524742126465
    4. ' input' → logprob: -4.668524742126465
    5. '(sys' → logprob: -11.543524742126465
    6. ')' → logprob: -11.793524742126465
    7. '=sys' → logprob: -12.918524742126465
    8. '	sys' → logprob: -14.293524742126465
    9. 'stdin' → logprob: -14.543524742126465
    10. ' ' → logprob: -15.918524742126465

Token 84: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.009923127479851246
    2. '()' → logprob: -5.009922981262207
    3. '())' → logprob: -5.759922981262207
    4. ')' → logprob: -10.259922981262207
    5. '()
' → logprob: -12.884922981262207
    6. '(' → logprob: -13.259922981262207
    7. '());' → logprob: -13.259922981262207
    8. ' ().' → logprob: -13.509922981262207
    9. '()))' → logprob: -13.759922981262207
    10. '()>' → logprob: -14.509922981262207

Token 85: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00016027313540689647
    2. 'strip' → logprob: -8.750160217285156
    3. ' split' → logprob: -14.375160217285156
    4. 'rstrip' → logprob: -14.375160217285156
    5. 'spl' → logprob: -15.000160217285156
    6. '(split' → logprob: -15.125160217285156
    7. ')' → logprob: -16.875160217285156
    8. 'read' → logprob: -17.625160217285156
    9. '_split' → logprob: -19.125160217285156
    10. '().' → logprob: -19.500160217285156

Token 86: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.010264652781188488
    2. '))' → logprob: -4.885264873504639
    3. '())' → logprob: -6.385264873504639
    4. '(' → logprob: -7.760264873504639
    5. '()' → logprob: -7.885264873504639
    6. '('' → logprob: -9.13526439666748
    7. ' )' → logprob: -11.26026439666748
    8. '(','' → logprob: -12.26026439666748
    9. ')`' → logprob: -12.38526439666748
    10. ')))' → logprob: -12.38526439666748

Token 87: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8238093256950378
    2. '    
' → logprob: -1.4488093852996826
    3. '
' → logprob: -2.0738093852996826
    4. '\n' → logprob: -2.8238093852996826
    5. 'return' → logprob: -3.3238093852996826
    6. '  
' → logprob: -3.4488093852996826
    7. ' 
' → logprob: -4.3238091468811035
    8. '   
' → logprob: -4.3238091468811035
    9. ')' → logprob: -4.5738091468811035
    10. '' → logprob: -4.8238091468811035

Token 88: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' (adapté à ' S') → logprob: -0.24675880372524261
    2. ' S' → logprob: -1.6217588186264038
    3. '   ' → logprob: -4.496758937835693
    4. 's' → logprob: -5.246758937835693
    5. ' 
' → logprob: -6.496758937835693
    6. '    
' → logprob: -6.621758937835693
    7. ' ' → logprob: -7.496758937835693
    8. 'return' → logprob: -8.246758460998535
    9. ' return' → logprob: -8.621758460998535
    10. ' s' → logprob: -8.871758460998535

Token 89: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.002817358821630478
    2. '=' → logprob: -5.877817153930664
    3. ' ' → logprob: -11.752817153930664
    4. ' ' → logprob: -13.627817153930664
    5. '_' → logprob: -14.127817153930664
    6. ',' → logprob: -14.127817153930664
    7. 's' → logprob: -15.127817153930664
    8. ' =
' → logprob: -15.252817153930664
    9. '.' → logprob: -15.377817153930664
    10. ' ,' → logprob: -15.502817153930664

Token 90: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.029768425971269608
    2. 'input' → logprob: -3.529768466949463
    3. ' ' → logprob: -11.529767990112305
    4. ' sys' → logprob: -13.029767990112305
    5. ' list' → logprob: -13.404767990112305
    6. '	input' → logprob: -13.529767990112305
    7. '   ' → logprob: -14.029767990112305
    8. ' ' → logprob: -14.904767990112305
    9. '=input' → logprob: -15.029767990112305
    10. ' str' → logprob: -15.029767990112305

Token 91: '()[' (ID: 20778)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00017541198758408427
    2. '().' → logprob: -8.750175476074219
    3. ' ()' → logprob: -11.250175476074219
    4. '(' → logprob: -13.625175476074219
    5. '()
' → logprob: -14.250175476074219
    6. '()>' → logprob: -14.375175476074219
    7. '())' → logprob: -14.625175476074219
    8. '()`' → logprob: -15.125175476074219
    9. '（）' → logprob: -16.00017547607422
    10. '()<' → logprob: -16.37517547607422

Token 92: '::-' (ID: 96612)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.46003544330596924
    2. '::-' → logprob: -1.2100354433059692
    3. ':]' → logprob: -3.0850353240966797
    4. '::' → logprob: -4.08503532409668
    5. ' :' → logprob: -6.08503532409668
    6. '[::-' → logprob: -6.83503532409668
    7. ']' → logprob: -6.96003532409668
    8. ':
' → logprob: -7.08503532409668
    9. '<' → logprob: -7.33503532409668
    10. ':<' → logprob: -7.58503532409668

Token 93: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.931863051955588e-05
    2. '-' → logprob: -10.000059127807617
    3. '::-' → logprob: -12.250059127807617
    4. ']' → logprob: -12.750059127807617
    5. ':' → logprob: -13.000059127807617
    6. '```' → logprob: -13.500059127807617
    7. ' ' → logprob: -14.125059127807617
    8. '１' → logprob: -15.625059127807617
    9. '``' → logprob: -15.750059127807617
    10. '[::-' → logprob: -16.125059127807617

Token 94: ']' (ID: 60)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00013119110371917486
    2. ' )' → logprob: -9.500131607055664
    3. ']' → logprob: -10.125131607055664
    4. ')
' → logprob: -11.750131607055664
    5. '')' → logprob: -13.000131607055664
    6. '）' → logprob: -13.875131607055664
    7. '")' → logprob: -14.125131607055664
    8. '   ' → logprob: -14.250131607055664
    9. '()' → logprob: -14.375131607055664
    10. '`)' → logprob: -14.500131607055664

Token 95: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10038339346647263
    2. '
' → logprob: -2.9753832817077637
    3. '<|end|>' → logprob: -3.9753832817077637
    4. '    
' → logprob: -4.475383281707764
    5. 'return' → logprob: -5.100383281707764
    6. ' return' → logprob: -5.975383281707764
    7. ' 
' → logprob: -6.475383281707764
    8. '  
' → logprob: -6.475383281707764
    9. '	return' → logprob: -6.975383281707764
    10. '\n' → logprob: -8.350383758544922

Token 96: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2799258232116699
    2. 'return' → logprob: -1.77992582321167
    3. '   ' → logprob: -2.77992582321167
    4. '<|end|>' → logprob: -5.40492582321167
    5. ' return' → logprob: -5.90492582321167
    6. '	return' → logprob: -6.02992582321167
    7. '    
' → logprob: -6.90492582321167
    8. '  
' → logprob: -6.90492582321167
    9. ' 
' → logprob: -7.15492582321167
    10. ' ' → logprob: -8.279926300048828

Token 97: ' On' (ID: 2160)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.24862462282180786
    2. 'return' → logprob: -1.748624563217163
    3. '<|end|>' → logprob: -3.498624563217163
    4. 'Return' → logprob: -6.248624801635742
    5. ' Retour' → logprob: -6.248624801635742
    6. '   ' → logprob: -6.373624801635742
    7. 'rstrip' → logprob: -6.498624801635742
    8. ' Return' → logprob: -6.873624801635742
    9. 'Retour' → logprob: -6.998624801635742
    10. 'strip' → logprob: -7.623624801635742

Token 98: ' inverse' (ID: 53743)
  Prédit: ' lit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lit' → logprob: -1.2930314540863037
    2. ' inverse' → logprob: -1.5430314540863037
    3. 'inverse' → logprob: -1.7930314540863037
    4. 'lit' → logprob: -1.9180314540863037
    5. ' reverse' → logprob: -2.9180314540863037
    6. 'reverse' → logprob: -3.1680314540863037
    7. 's' → logprob: -4.043031692504883
    8. ' récup' → logprob: -4.293031692504883
    9. ' continue' → logprob: -4.418031692504883
    10. ' ren' → logprob: -5.168031692504883

Token 99: ' l' (ID: 305)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.08078297972679138
    2. 'la' → logprob: -3.205782890319824
    3. 's' → logprob: -4.830782890319824
    4. 'l' → logprob: -5.080782890319824
    5. 'le' → logprob: -5.330782890319824
    6. ' l' → logprob: -5.830782890319824
    7. 'the' → logprob: -5.955782890319824
    8. '<|end|>' → logprob: -6.080782890319824
    9. ' le' → logprob: -6.205782890319824
    10. '   ' → logprob: -6.330782890319824

Token 100: ''entrée' (ID: 115820)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00613058777526021
    2. 'e' → logprob: -5.256130695343018
    3. ''entrée' → logprob: -8.38113021850586
    4. ''ensemble' → logprob: -8.63113021850586
    5. ''ordre' → logprob: -9.38113021850586
    6. ''a' → logprob: -9.75613021850586
    7. 'es' → logprob: -9.75613021850586
    8. 'а' → logprob: -10.00613021850586
    9. 'input' → logprob: -10.38113021850586
    10. '```' → logprob: -10.38113021850586

Token 101: ' pour' (ID: 1930)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 102: ' faciliter' (ID: 106284)
  Prédit: ' faciliter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' faciliter' → logprob: -0.4143524169921875
    2. 'simpl' → logprob: -2.6643524169921875
    3. ' traiter' → logprob: -3.0393524169921875
    4. ' simpl' → logprob: -3.2893524169921875
    5. 'trait' → logprob: -3.2893524169921875
    6. 'tr' → logprob: -3.5393524169921875
    7. 'fac' → logprob: -3.9143524169921875
    8. 'align' → logprob: -4.1643524169921875
    9. ' lire' → logprob: -4.2893524169921875
    10. 's' → logprob: -4.9143524169921875

Token 103: ' le' (ID: 505)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.6407642364501953
    2. ' l' → logprob: -1.2657642364501953
    3. 'la' → logprob: -2.6407642364501953
    4. ' la' → logprob: -3.1407642364501953
    5. 'les' → logprob: -3.3907642364501953
    6. ' les' → logprob: -3.7657642364501953
    7. 'le' → logprob: -4.265764236450195
    8. ' le' → logprob: -5.515764236450195
    9. 'index' → logprob: -8.640764236450195
    10. 's' → logprob: -8.703264236450195

Token 104: ' traitement' (ID: 42434)
  Prédit: ' traitement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' traitement' → logprob: -0.530922532081604
    2. ' parcours' → logprob: -1.530922532081604
    3. 'trait' → logprob: -1.905922532081604
    4. 's' → logprob: -4.5309224128723145
    5. ' accès' → logprob: -5.2809224128723145
    6. ' calcul' → logprob: -5.5309224128723145
    7. 'par' → logprob: -5.6559224128723145
    8. 'calcul' → logprob: -5.6559224128723145
    9. ' déplacement' → logprob: -5.6559224128723145
    10. 'dé' → logprob: -6.2809224128723145

Token 105: ' depuis' (ID: 16277)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08996399492025375
    2. 'return' → logprob: -3.089963912963867
    3. '
' → logprob: -3.964963912963867
    4. '<|end|>' → logprob: -4.714963912963867
    5. '    
' → logprob: -4.964963912963867
    6. ' return' → logprob: -6.089963912963867
    7. '<|end|>' → logprob: -6.464963912963867
    8. '  
' → logprob: -7.214963912963867
    9. '	return' → logprob: -8.339963912963867
    10. ' 
' → logprob: -8.339963912963867

Token 106: ' le' (ID: 505)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.20251484215259552
    2. 'la' → logprob: -2.327514886856079
    3. ' l' → logprob: -2.577514886856079
    4. 'l' → logprob: -5.3275146484375
    5. ' le' → logprob: -6.5775146484375
    6. ' ' → logprob: -6.9525146484375
    7. 'le' → logprob: -7.0775146484375
    8. ' the' → logprob: -8.0775146484375
    9. '<|end|>' → logprob: -8.3275146484375
    10. 'the' → logprob: -8.5775146484375

Token 107: ' début' (ID: 29589)
  Prédit: 'dé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dé' → logprob: -0.027510419487953186
    2. 'd' → logprob: -3.777510404586792
    3. 'de' → logprob: -6.902510643005371
    4. ' début' → logprob: -7.152510643005371
    5. 'prem' → logprob: -7.527510643005371
    6. 'dro' → logprob: -8.027510643005371
    7. '0' → logprob: -8.277510643005371
    8. 'fin' → logprob: -8.277510643005371
    9. 'bas' → logprob: -8.777510643005371
    10. 'c' → logprob: -8.777510643005371

Token 108: ' réel' (ID: 58265)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03957351669669151
    2. '    
' → logprob: -4.164573669433594
    3. '\n' → logprob: -4.664573669433594
    4. '<|end|>' → logprob: -5.289573669433594
    5. ' 
' → logprob: -6.164573669433594
    6. '  
' → logprob: -6.414573669433594
    7. '
' → logprob: -6.414573669433594
    8. '\' → logprob: -7.289573669433594
    9. '   
' → logprob: -7.539573669433594
    10. '  ' → logprob: -7.664573669433594

Token 109: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010057912208139896
    2. '    
' → logprob: -4.7600579261779785
    3. '\n' → logprob: -7.5100579261779785
    4. '  
' → logprob: -8.88505744934082
    5. 'return' → logprob: -8.88505744934082
    6. '   
' → logprob: -9.38505744934082
    7. '    ' → logprob: -9.51005744934082
    8. '
' → logprob: -9.51005744934082
    9. ' 
' → logprob: -9.63505744934082
    10. '  ' → logprob: -9.63505744934082

Token 110: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013249402865767479
    2. 'return' → logprob: -4.763249397277832
    3. '    
' → logprob: -6.138249397277832
    4. '
' → logprob: -6.388249397277832
    5. ' return' → logprob: -8.138249397277832
    6. '```' → logprob: -8.388249397277832
    7. '  
' → logprob: -9.888249397277832
    8. '\n' → logprob: -10.013249397277832
    9. ' 
' → logprob: -10.263249397277832
    10. '	return' → logprob: -10.263249397277832

Token 111: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1171804890036583
    2. 'return' (adapté à ' return') → logprob: -2.242180585861206
    3. ' return' → logprob: -5.992180347442627
    4. '	return' → logprob: -7.242180347442627
    5. '    
' → logprob: -7.367180347442627
    6. '
' → logprob: -7.992180347442627
    7. '  ' → logprob: -10.617180824279785
    8. ' ' → logprob: -10.742180824279785
    9. '<|end|>' → logprob: -10.742180824279785
    10. '```' → logprob: -11.242180824279785

Token 112: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.07889452576637268
    2. ' N' → logprob: -2.57889461517334
    3. '(N' → logprob: -13.20389461517334
    4. ' ' → logprob: -13.70389461517334
    5. ' (' → logprob: -13.95389461517334
    6. '   ' → logprob: -14.20389461517334
    7. '	N' → logprob: -15.20389461517334
    8. '  ' → logprob: -16.328893661499023
    9. ' ' → logprob: -17.453893661499023
    10. '(' → logprob: -17.453893661499023

Token 113: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0022323327139019966
    2. ' ,' → logprob: -6.377232551574707
    3. '<|end|>' → logprob: -7.627232551574707
    4. ',N' → logprob: -12.002232551574707
    5. '<|end|>' → logprob: -12.002232551574707
    6. ',
' → logprob: -12.127232551574707
    7. '‌,' → logprob: -12.127232551574707
    8. ')' → logprob: -12.752232551574707
    9. ',...' → logprob: -13.002232551574707
    10. '  ' → logprob: -13.627232551574707

Token 114: ' M' (ID: 391)
  Prédit: ' M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' M' → logprob: -0.05498507618904114
    2. 'M' → logprob: -2.9299850463867188
    3. ' ' → logprob: -9.304985046386719
    4. ' ' → logprob: -11.804985046386719
    5. 'space' → logprob: -13.804985046386719
    6. ',' → logprob: -14.804985046386719
    7. '<|end|>' → logprob: -14.929985046386719
    8. '‌' → logprob: -14.929985046386719
    9. '```' → logprob: -14.929985046386719
    10. ''' → logprob: -15.054985046386719

Token 115: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002922206884250045
    2. ' ,' → logprob: -6.002922058105469
    3. ',S' → logprob: -7.877922058105469
    4. '   ' → logprob: -11.002922058105469
    5. 'S' → logprob: -11.252922058105469
    6. ' S' → logprob: -11.252922058105469
    7. '<|end|>' → logprob: -11.752922058105469
    8. ',N' → logprob: -12.877922058105469
    9. 's' → logprob: -13.127922058105469
    10. ',
' → logprob: -13.252922058105469

Token 116: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.16022492945194244
    2. ' S' → logprob: -1.9102249145507812
    3. '	S' → logprob: -15.410224914550781
    4. ' ' → logprob: -16.03522491455078
    5. ' ' → logprob: -16.16022491455078
    6. '   ' → logprob: -16.28522491455078
    7. 's' → logprob: -16.78522491455078
    8. '    ' → logprob: -16.91022491455078
    9. '_S' → logprob: -17.03522491455078
    10. '<|end|>' → logprob: -18.03522491455078

Token 117: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2395448386669159
    2. '<|end|>' → logprob: -2.3645448684692383
    3. '

' → logprob: -2.8645448684692383
    4. '\n' → logprob: -3.6145448684692383
    5. '```' → logprob: -3.8645448684692383
    6. 'def' → logprob: -5.239544868469238
    7. '    
' → logprob: -6.489544868469238
    8. '\' → logprob: -6.614544868469238
    9. ' 
' → logprob: -6.989544868469238
    10. '<|end|>' → logprob: -7.114544868469238

Token 118: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3543584942817688
    2. 'def' → logprob: -1.354358434677124
    3. '```' → logprob: -3.979358434677124
    4. '<|end|>' → logprob: -5.104358673095703
    5. '

' → logprob: -5.354358673095703
    6. '#' → logprob: -5.604358673095703
    7. '\n' → logprob: -5.854358673095703
    8. '' → logprob: -7.104358673095703
    9. '\' → logprob: -7.479358673095703
    10. 'd' → logprob: -7.604358673095703

Token 119: ' calculate' (ID: 17950)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.3421526253223419
    2. ' solve' → logprob: -2.8421525955200195
    3. ' max' → logprob: -3.0921525955200195
    4. ' find' → logprob: -3.2171525955200195
    5. ' main' → logprob: -3.3421525955200195
    6. ' is' → logprob: -3.3421525955200195
    7. ' check' → logprob: -4.4671525955200195
    8. ' longest' → logprob: -4.5921525955200195
    9. ' ' → logprob: -5.0921525955200195
    10. ' calculate' → logprob: -5.2171525955200195

Token 120: '_steps' (ID: 52120)
  Prédit: '_max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.9166944026947021
    2. '_jump' → logprob: -2.041694402694702
    3. '_steps' → logprob: -2.291694402694702
    4. '_j' → logprob: -2.541694402694702
    5. '_distance' → logprob: -2.666694402694702
    6. '_path' → logprob: -2.916694402694702
    7. '_next' → logprob: -3.041694402694702
    8. '_dp' → logprob: -3.291694402694702
    9. '_step' → logprob: -3.791694402694702
    10. '_' → logprob: -4.416694641113281

Token 121: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00758733693510294
    2. '():' → logprob: -5.507587432861328
    3. '(N' → logprob: -6.007587432861328
    4. ':' → logprob: -8.007587432861328
    5. '_' → logprob: -8.257587432861328
    6. '(S' → logprob: -9.507587432861328
    7. '(n' → logprob: -9.632587432861328
    8. '(
' → logprob: -10.382587432861328
    9. ' (' → logprob: -10.757587432861328
    10. '(s' → logprob: -10.882587432861328

Token 122: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00013119110371917486
    2. ' ,' → logprob: -9.250131607055664
    3. ',M' → logprob: -11.250131607055664
    4. '):' → logprob: -11.500131607055664
    5. ')' → logprob: -13.000131607055664
    6. '‌,' → logprob: -13.000131607055664
    7. '<|end|>' → logprob: -13.625131607055664
    8. ',N' → logprob: -13.875131607055664
    9. '   ' → logprob: -13.875131607055664
    10. '<|end|>' → logprob: -14.625131607055664

Token 123: ' M' (ID: 391)
  Prédit: ' M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' M' → logprob: -0.6327778697013855
    2. 'M' → logprob: -0.7577778697013855
    3. 'S' → logprob: -9.50777816772461
    4. ' S' → logprob: -9.88277816772461
    5. ' ' → logprob: -10.75777816772461
    6. ')' → logprob: -11.25777816772461
    7. ',' → logprob: -12.25777816772461
    8. '   ' → logprob: -12.50777816772461
    9. 'def' → logprob: -12.88277816772461
    10. 's' → logprob: -13.44527816772461

Token 124: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0030202565249055624
    2. '):' → logprob: -5.878020286560059
    3. ')' → logprob: -9.003020286560059
    4. ' ,' → logprob: -9.503020286560059
    5. '   ' → logprob: -13.003020286560059
    6. ' ):' → logprob: -13.003020286560059
    7. ',S' → logprob: -13.128020286560059
    8. ',s' → logprob: -13.378020286560059
    9. 's' → logprob: -13.378020286560059
    10. '‌,' → logprob: -13.753020286560059

Token 125: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.42877891659736633
    2. ' S' → logprob: -1.053778886795044
    3. 's' → logprob: -10.178778648376465
    4. ' ' → logprob: -10.928778648376465
    5. ')' → logprob: -11.428778648376465
    6. ' s' → logprob: -13.053778648376465
    7. ' )' → logprob: -13.178778648376465
    8. '<|end|>' → logprob: -13.741278648376465
    9. '   ' → logprob: -13.928778648376465
    10. ' 
' → logprob: -13.928778648376465

Token 126: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0007419686880894005
    2. ')' → logprob: -7.625741958618164
    3. '):
' → logprob: -8.375741958618164
    4. ' ):' → logprob: -11.000741958618164
    5. '   ' → logprob: -12.750741958618164
    6. ':' → logprob: -13.250741958618164
    7. '):
' → logprob: -13.625741958618164
    8. ',' → logprob: -15.125741958618164
    9. ')：' → logprob: -16.125741958618164
    10. '）：' → logprob: -16.500741958618164

Token 127: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.43813034892082214
    2. '
' → logprob: -2.4381303787231445
    3. '    ' → logprob: -2.5631303787231445
    4. ':' → logprob: -2.8131303787231445
    5. ' 
' → logprob: -2.8131303787231445
    6. ' ' → logprob: -3.6881303787231445
    7. '    
' → logprob: -4.0631303787231445
    8. '\' → logprob: -5.5631303787231445
    9. ':
' → logprob: -5.6881303787231445
    10. '<|end|>' → logprob: -5.6881303787231445

Token 128: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9020447134971619
    2. '    ' → logprob: -1.0270447731018066
    3. ' steps' → logprob: -2.1520447731018066
    4. 'steps' → logprob: -3.2770447731018066
    5. ' 
' → logprob: -3.9020447731018066
    6. ' dp' → logprob: -4.777044773101807
    7. 'dp' → logprob: -4.902044773101807
    8. 'positions' → logprob: -4.902044773101807
    9. ' positions' → logprob: -5.027044773101807
    10. '     
' → logprob: -5.152044773101807

Token 129: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.896678626537323
    2. ' steps' → logprob: -1.2716786861419678
    3. 'steps' → logprob: -2.5216786861419678
    4. ' ' → logprob: -2.5216786861419678
    5. ' current' → logprob: -3.1466786861419678
    6. ' dp' → logprob: -3.6466786861419678
    7. ' result' → logprob: -4.396678447723389
    8. 'current' → logprob: -4.896678447723389
    9. ' i' → logprob: -5.021678447723389
    10. ' step' → logprob: -5.021678447723389

Token 130: ' Cal' (ID: 4453)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2295897901058197
    2. '    ' → logprob: -2.8545897006988525
    3. ' 
' → logprob: -3.1045897006988525
    4. ' ' → logprob: -3.9795897006988525
    5. ' ' → logprob: -4.354589939117432
    6. 'n' → logprob: -4.354589939117432
    7. ' indentation' → logprob: -4.479589939117432
    8. ' """' → logprob: -4.729589939117432
    9. 'def' → logprob: -4.854589939117432
    10. ' #' → logprob: -5.229589939117432

Token 131: 'cule' (ID: 45017)
  Prédit: 'cule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cule' → logprob: -0.9824453592300415
    2. 'culate' → logprob: -1.1074453592300415
    3. 'cul' → logprob: -1.2324453592300415
    4. 'c' → logprob: -5.857445240020752
    5. 'cular' → logprob: -7.857445240020752
    6. 'cula' → logprob: -8.48244571685791
    7. 'culator' → logprob: -10.10744571685791
    8. 'cules' → logprob: -10.23244571685791
    9. 'culated' → logprob: -10.60744571685791
    10. 'cut' → logprob: -10.60744571685791

Token 132: ' la' (ID: 557)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.22927336394786835
    2. '_' → logprob: -2.2292733192443848
    3. ' l' → logprob: -3.4792733192443848
    4. '  ' → logprob: -3.8542733192443848
    5. '   ' → logprob: -4.104273319244385
    6. ' le' → logprob: -4.729273319244385
    7. ' la' → logprob: -4.854273319244385
    8. '<|end|>' → logprob: -5.854273319244385
    9. ' les' → logprob: -6.354273319244385
    10. '    ' → logprob: -6.479273319244385

Token 133: ' sé' (ID: 7462)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.4038330316543579
    2. ' plus' → logprob: -1.278833031654358
    3. 'nombre' → logprob: -4.403832912445068
    4. ' minimal' → logprob: -4.528832912445068
    5. 's' → logprob: -4.778832912445068
    6. 'liste' → logprob: -5.528832912445068
    7. 'minimal' → logprob: -5.528832912445068
    8. ' liste' → logprob: -6.153832912445068
    9. 'minimum' → logprob: -6.278832912445068
    10. 'steps' → logprob: -6.403832912445068

Token 134: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -0.23829545080661774
    2. 'q' → logprob: -1.7382954359054565
    3. 'qu' → logprob: -3.988295555114746
    4. 'quences' → logprob: -4.613295555114746
    5. 'rie' → logprob: -5.613295555114746
    6. 'r' → logprob: -6.863295555114746
    7. 'que' → logprob: -7.238295555114746
    8. 'quent' → logprob: -7.238295555114746
    9. 'quen' → logprob: -8.238295555114746
    10. 'quential' → logprob: -8.363295555114746

Token 135: ' minimale' (ID: 143217)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.23802772164344788
    2. ' de' → logprob: -2.363027811050415
    3. '<|end|>' → logprob: -3.113027811050415
    4. '_' → logprob: -3.738027811050415
    5. ' ' → logprob: -4.113027572631836
    6. '_des' → logprob: -4.238027572631836
    7. 'des' → logprob: -5.488027572631836
    8. ' d' → logprob: -5.738027572631836
    9. ' of' → logprob: -5.863027572631836
    10. '_possible' → logprob: -6.988027572631836

Token 136: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.4720214605331421
    2. ' des' → logprob: -1.222021460533142
    3. ' d' → logprob: -2.7220215797424316
    4. 'des' → logprob: -5.472021579742432
    5. 'de' → logprob: -5.972021579742432
    6. '_des' → logprob: -6.097021579742432
    7. ' ' → logprob: -6.597021579742432
    8. '<|end|>' → logprob: -6.597021579742432
    9. 'def' → logprob: -6.722021579742432
    10. '_' → logprob: -7.472021579742432

Token 137: ' sa' (ID: 880)
  Prédit: ' sa'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sa' → logprob: -0.5992760062217712
    2. 's' → logprob: -1.224276065826416
    3. ' déplacements' → logprob: -2.974276065826416
    4. ' pas' → logprob: -3.099276065826416
    5. ' steps' → logprob: -4.099276065826416
    6. 'pas' → logprob: -4.724276065826416
    7. ' passages' → logprob: -4.974276065826416
    8. ' saut' → logprob: -5.599276065826416
    9. ' salt' → logprob: -5.974276065826416
    10. ' s' → logprob: -6.099276065826416

Token 138: 'uts' (ID: 4639)
  Prédit: 'uts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uts' → logprob: -0.08074206858873367
    2. 'p' → logprob: -3.455742120742798
    3. 'u' → logprob: -3.955742120742798
    4. 'pas' → logprob: -4.580741882324219
    5. 'ps' → logprob: -5.080741882324219
    6. '_' → logprob: -5.830741882324219
    7. 'ut' → logprob: -6.080741882324219
    8. 'pts' → logprob: -7.080741882324219
    9. 'quences' → logprob: -7.705741882324219
    10. 'utions' → logprob: -8.080741882324219

Token 139: ' pour' (ID: 1930)
  Prédit: ' :'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' :' → logprob: -0.6329576969146729
    2. '   ' → logprob: -1.7579576969146729
    3. ' ' → logprob: -2.132957696914673
    4. '_' → logprob: -3.507957696914673
    5. ' ,' → logprob: -3.507957696914673
    6. ':' → logprob: -3.757957696914673
    7. ',' → logprob: -4.257957458496094
    8. '_possible' → logprob: -4.757957458496094
    9. '<|end|>' → logprob: -5.007957458496094
    10. ' suivante' → logprob: -5.382957458496094

Token 140: ' atteindre' (ID: 95734)
  Prédit: ' atteindre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' atteindre' → logprob: -0.25377023220062256
    2. ' parcour' → logprob: -2.878770351409912
    3. ' arriver' → logprob: -3.253770351409912
    4. ' travers' → logprob: -3.878770351409912
    5. 'reach' → logprob: -4.253770351409912
    6. ' reach' → logprob: -4.378770351409912
    7. ' parvenir' → logprob: -4.628770351409912
    8. 're' → logprob: -4.628770351409912
    9. ' rejoindre' → logprob: -5.003770351409912
    10. 'r' → logprob: -5.128770351409912

Token 141: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.012903837487101555
    2. 'la' → logprob: -5.387903690338135
    3. ' l' → logprob: -5.637903690338135
    4. ' le' → logprob: -5.762903690338135
    5. ' N' → logprob: -7.637903690338135
    6. 'le' → logprob: -8.387904167175293
    7. 'l' → logprob: -8.512904167175293
    8. ' position' → logprob: -8.762904167175293
    9. ' ' → logprob: -9.262904167175293
    10. ' ' → logprob: -9.387904167175293

Token 142: ' fin' (ID: 2131)
  Prédit: 'fin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fin' → logprob: -1.279141902923584
    2. ' N' → logprob: -1.654141902923584
    3. ' fin' → logprob: -1.779141902923584
    4. 'N' → logprob: -2.154141902923584
    5. 'position' → logprob: -2.779141902923584
    6. ' position' → logprob: -3.529141902923584
    7. ''' → logprob: -3.779141902923584
    8. 'n' → logprob: -4.029141902923584
    9. ' ' → logprob: -4.029141902923584
    10. 'b' → logprob: -4.154141902923584

Token 143: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.34222933650016785
    2. ' de' → logprob: -1.3422293663024902
    3. ' du' → logprob: -4.46722936630249
    4. ' ' → logprob: -5.46722936630249
    5. '  ' → logprob: -5.84222936630249
    6. 'de' → logprob: -6.21722936630249
    7. '    ' → logprob: -6.34222936630249
    8. ',' → logprob: -6.59222936630249
    9. ' (' → logprob: -7.46722936630249
    10. '.' → logprob: -7.46722936630249

Token 144: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.05614364147186279
    2. 'la' → logprob: -3.0561437606811523
    3. ' S' → logprob: -6.056143760681152
    4. 'l' → logprob: -6.306143760681152
    5. 'S' → logprob: -6.681143760681152
    6. ' l' → logprob: -6.806143760681152
    7. 'a' → logprob: -8.056143760681152
    8. ' ' → logprob: -8.181143760681152
    9. 's' → logprob: -9.181143760681152
    10. ' the' → logprob: -9.556143760681152

Token 145: ' chaîne' (ID: 89288)
  Prédit: ' chaîne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.2202286422252655
    2. 'chaine' → logprob: -1.720228672027588
    3. 'cha' → logprob: -4.595228672027588
    4. ' chaine' → logprob: -4.970228672027588
    5. 'ligne' → logprob: -7.720228672027588
    6. 'chain' → logprob: -8.34522819519043
    7. 's' → logprob: -8.84522819519043
    8. 'liste' → logprob: -9.09522819519043
    9. ' ligne' → logprob: -9.09522819519043
    10. 'string' → logprob: -9.22022819519043

Token 146: ' S' (ID: 336)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.29131004214286804
    2. '   ' → logprob: -1.6663100719451904
    3. ' :' → logprob: -3.0413100719451904
    4. ',' → logprob: -4.666309833526611
    5. ':
' → logprob: -6.041309833526611
    6. '.' → logprob: -6.541309833526611
    7. ' ' → logprob: -7.041309833526611
    8. ' :
' → logprob: -7.541309833526611
    9. ''' → logprob: -8.91631031036377
    10. '):' → logprob: -9.04131031036377

Token 147: ' en' (ID: 469)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04695175588130951
    2. '   ' → logprob: -3.4219517707824707
    3. ' :' → logprob: -4.546951770782471
    4. ',' → logprob: -6.546951770782471
    5. ':
' → logprob: -7.546951770782471
    6. ' ' → logprob: -8.421951293945312
    7. '):' → logprob: -8.796951293945312
    8. '.' → logprob: -9.421951293945312
    9. ' :
' → logprob: -10.046951293945312
    10. ')' → logprob: -10.921951293945312

Token 148: ' respect' (ID: 5618)
  Prédit: ' utilisant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' utilisant' → logprob: -1.7693175077438354
    2. '_' → logprob: -1.8943175077438354
    3. ' passant' → logprob: -2.269317626953125
    4. 's' → logprob: -2.269317626953125
    5. 't' → logprob: -2.894317626953125
    6. ' suivant' → logprob: -3.019317626953125
    7. 'util' → logprob: -3.019317626953125
    8. '1' → logprob: -3.519317626953125
    9. ' respect' → logprob: -4.019317626953125
    10. ' ' → logprob: -4.019317626953125

Token 149: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.004784561228007078
    2. 'e' → logprob: -5.75478458404541
    3. '   ' → logprob: -7.25478458404541
    4. 'er' → logprob: -7.62978458404541
    5. 'a' → logprob: -9.25478458404541
    6. 'ect' → logprob: -9.37978458404541
    7. 'ent' → logprob: -9.50478458404541
    8. '       ' → logprob: -10.62978458404541
    9. ' ant' → logprob: -11.00478458404541
    10. 'ing' → logprob: -11.12978458404541

Token 150: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.10539340227842331
    2. ' la' → logprob: -2.730393409729004
    3. ' l' → logprob: -4.105393409729004
    4. ' le' → logprob: -4.605393409729004
    5. '   ' → logprob: -5.730393409729004
    6. ' ' → logprob: -6.355393409729004
    7. ' ' → logprob: -7.105393409729004
    8. ' des' → logprob: -7.480393409729004
    9. ' the' → logprob: -7.855393409729004
    10. ' un' → logprob: -7.855393409729004

Token 151: ' contraintes' (ID: 167366)
  Prédit: ' contraintes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' contraintes' → logprob: -0.02065856009721756
    2. ' constraints' → logprob: -4.645658493041992
    3. ' espaces' → logprob: -5.520658493041992
    4. ' règles' → logprob: -5.645658493041992
    5. ' restrictions' → logprob: -7.020658493041992
    6. 'constraints' → logprob: -7.395658493041992
    7. ' conditions' → logprob: -8.145658493041992
    8. '   ' → logprob: -8.770658493041992
    9. ' cons' → logprob: -8.770658493041992
    10. ' sa' → logprob: -9.020658493041992

Token 152: '.

' (ID: 364)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.884699821472168
    2. '   ' → logprob: -1.134699821472168
    3. ' :' → logprob: -2.384699821472168
    4. ',' → logprob: -2.884699821472168
    5. ':' → logprob: -3.009699821472168
    6. '<|end|>' → logprob: -3.509699821472168
    7. ' ' → logprob: -4.634699821472168
    8. '<|end|>' → logprob: -5.259699821472168
    9. ' ,' → logprob: -5.384699821472168
    10. ' de' → logprob: -5.509699821472168

Token 153: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03262971341609955
    2. ' ' → logprob: -4.532629489898682
    3. '    
' → logprob: -5.782629489898682
    4. ':' → logprob: -5.907629489898682
    5. '
' → logprob: -5.907629489898682
    6. ' 
' → logprob: -5.907629489898682
    7. '  
' → logprob: -6.032629489898682
    8. ')' → logprob: -6.282629489898682
    9. '<|end|>' → logprob: -6.657629489898682
    10. '```' → logprob: -6.782629489898682

Token 154: ' Args' (ID: 39185)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007269748020917177
    2. '
' → logprob: -6.007269859313965
    3. '    
' → logprob: -6.132269859313965
    4. ' indentation' → logprob: -7.257269859313965
    5. ' 
' → logprob: -7.632269859313965
    6. '    ' → logprob: -8.507269859313965
    7. ' ' → logprob: -8.507269859313965
    8. '   
' → logprob: -9.007269859313965
    9. ' """
' → logprob: -9.007269859313965
    10. 'def' → logprob: -9.132269859313965

Token 155: ':
' (ID: 734)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.295170396566391
    2. ':' → logprob: -2.295170307159424
    3. '   ' → logprob: -2.420170307159424
    4. '<|end|>' → logprob: -3.920170307159424
    5. ' ' → logprob: -4.545170307159424
    6. ' ,' → logprob: -4.920170307159424
    7. '  ' → logprob: -5.295170307159424
    8. '=' → logprob: -5.420170307159424
    9. ')' → logprob: -5.420170307159424
    10. '    ' → logprob: -5.545170307159424

Token 156: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16547319293022156
    2. ')' → logprob: -2.540473222732544
    3. ' ' → logprob: -3.040473222732544
    4. '    ' → logprob: -4.540472984313965
    5. ' )' → logprob: -5.540472984313965
    6. '  ' → logprob: -6.040472984313965
    7. ' N' → logprob: -6.040472984313965
    8. '[' → logprob: -6.415472984313965
    9. ' ' → logprob: -6.540472984313965
    10. '       ' → logprob: -7.040472984313965

Token 157: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' (adapté à ' N') → logprob: -0.01648789830505848
    2. ' N' → logprob: -4.391488075256348
    3. '   ' → logprob: -5.641488075256348
    4. 'self' → logprob: -8.016488075256348
    5. ')' → logprob: -10.516488075256348
    6. '	N' → logprob: -11.266488075256348
    7. ' ' → logprob: -11.516488075256348
    8. ' self' → logprob: -11.891488075256348
    9. 'n' → logprob: -12.141488075256348
    10. 'S' → logprob: -12.141488075256348

Token 158: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -4.906711546937004e-05
    2. ',int' → logprob: -11.000048637390137
    3. '<|end|>' → logprob: -11.375048637390137
    4. ' ,' → logprob: -11.500048637390137
    5. ':' → logprob: -12.750048637390137
    6. ':int' → logprob: -12.875048637390137
    7. ')' → logprob: -13.625048637390137
    8. 'int' → logprob: -14.250048637390137
    9. ',M' → logprob: -14.500048637390137
    10. '   ' → logprob: -14.500048637390137

Token 159: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0009461151785217226
    2. ',' → logprob: -7.500946044921875
    3. ' int' → logprob: -8.375946044921875
    4. ',int' → logprob: -8.750946044921875
    5. '   ' → logprob: -13.750946044921875
    6. '[int' → logprob: -14.000946044921875
    7. ')' → logprob: -14.250946044921875
    8. ' ,' → logprob: -14.500946044921875
    9. '=int' → logprob: -15.000946044921875
    10. ':int' → logprob: -15.125946044921875

Token 160: '):' (ID: 3127)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00026169343618676066
    2. '<|end|>' → logprob: -9.250261306762695
    3. '):' → logprob: -10.000261306762695
    4. ')' → logprob: -10.000261306762695
    5. '   ' → logprob: -10.500261306762695
    6. ' ,' → logprob: -10.875261306762695
    7. '),' → logprob: -11.125261306762695
    8. ',int' → logprob: -12.250261306762695
    9. ',N' → logprob: -13.375261306762695
    10. '<|end|>' → logprob: -13.750261306762695

Token 161: ' Long' (ID: 7790)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 162: 'ueur' (ID: 43728)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07049195468425751
    2. 'ueur' → logprob: -3.8204920291900635
    3. '```' → logprob: -4.195491790771484
    4. 'ength' → logprob: -4.570491790771484
    5. '  ' → logprob: -5.695491790771484
    6. ',' → logprob: -6.070491790771484
    7. '    ' → logprob: -6.070491790771484
    8. ')' → logprob: -6.195491790771484
    9. 'def' → logprob: -6.320491790771484
    10. 'e' → logprob: -6.820491790771484

Token 163: ' totale' (ID: 52898)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2246488332748413
    2. ',' → logprob: -1.3496488332748413
    3. '_' → logprob: -1.3496488332748413
    4. ' ' → logprob: -2.724648952484131
    5. ' de' → logprob: -2.974648952484131
    6. ' )' → logprob: -3.474648952484131
    7. '   ' → logprob: -3.974648952484131
    8. ' ,' → logprob: -5.849648952484131
    9. '<|end|>' → logprob: -5.849648952484131
    10. '[' → logprob: -6.099648952484131

Token 164: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.2529115676879883
    2. '   ' → logprob: -2.6279115676879883
    3. ')' → logprob: -2.7529115676879883
    4. '<|end|>' → logprob: -3.2529115676879883
    5. ',' → logprob: -3.3779115676879883
    6. 'de' → logprob: -5.252911567687988
    7. ' of' → logprob: -6.002911567687988
    8. '    ' → logprob: -6.127911567687988
    9. ' )' → logprob: -6.127911567687988
    10. ' des' → logprob: -7.627911567687988

Token 165: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.11449813842773438
    2. 'la' → logprob: -2.4894981384277344
    3. 'l' → logprob: -4.864498138427734
    4. ' S' → logprob: -5.114498138427734
    5. ' l' → logprob: -5.364498138427734
    6. 'S' → logprob: -5.489498138427734
    7. ' ' → logprob: -6.364498138427734
    8. 's' → logprob: -7.989498138427734
    9. ' ' → logprob: -8.614498138427734
    10. '   ' → logprob: -9.614498138427734

Token 166: ' chaîne' (ID: 89288)
  Prédit: ' chaîne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.6500048041343689
    2. 'chaine' → logprob: -1.0250048637390137
    3. 'cha' → logprob: -2.1500048637390137
    4. ' chaine' → logprob: -6.400004863739014
    5. 'chain' → logprob: -7.900004863739014
    6. 'string' → logprob: -8.400004386901855
    7. '```' → logprob: -9.150004386901855
    8. 's' → logprob: -9.400004386901855
    9. 'code' → logprob: -9.400004386901855
    10. ' chaînes' → logprob: -10.275004386901855

Token 167: '.
' (ID: 558)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01748819276690483
    2. '   ' → logprob: -4.2674880027771
    3. '<|end|>' → logprob: -6.6424880027771
    4. ',' → logprob: -7.0174880027771
    5. ')
' → logprob: -7.6424880027771
    6. '
' → logprob: -8.892488479614258
    7. '       ' → logprob: -9.142488479614258
    8. '):
' → logprob: -9.392488479614258
    9. '),' → logprob: -9.392488479614258
    10. '<|end|>' → logprob: -9.517488479614258

Token 168: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9465023875236511
    2. ')' → logprob: -1.446502447128296
    3. ' 
' → logprob: -2.071502447128296
    4. ' ' → logprob: -2.446502447128296
    5. ',' → logprob: -2.821502447128296
    6. '    
' → logprob: -3.446502447128296
    7. '<|end|>' → logprob: -3.571502447128296
    8. '  
' → logprob: -4.696502208709717
    9. '    ' → logprob: -5.071502208709717
    10. ' ,' → logprob: -5.071502208709717

Token 169: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' (adapté à ' M') → logprob: -0.32210731506347656
    2. ' M' → logprob: -1.4471073150634766
    3. '   ' → logprob: -3.6971073150634766
    4. 'S' → logprob: -4.322107315063477
    5. ' S' → logprob: -6.572107315063477
    6. ' ' → logprob: -7.947107315063477
    7. '    ' → logprob: -9.572107315063477
    8. ' ' → logprob: -9.822107315063477
    9. '       ' → logprob: -9.947107315063477
    10. 'N' → logprob: -10.697107315063477

Token 170: ' (' (ID: 350)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.11689556390047073
    2. ',' → logprob: -3.1168956756591797
    3. ')' → logprob: -3.4918956756591797
    4. ':' → logprob: -3.7418956756591797
    5. '   ' → logprob: -5.11689567565918
    6. ' ):' → logprob: -6.36689567565918
    7. '):
' → logprob: -6.49189567565918
    8. ':int' → logprob: -6.49189567565918
    9. ',int' → logprob: -8.11689567565918
    10. ' ' → logprob: -8.61689567565918

Token 171: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.10037197172641754
    2. ' int' → logprob: -2.350372076034546
    3. ')' → logprob: -9.475372314453125
    4. ':int' → logprob: -10.350372314453125
    5. '[int' → logprob: -11.225372314453125
    6. '=int' → logprob: -11.475372314453125
    7. ' )' → logprob: -11.600372314453125
    8. ',int' → logprob: -12.225372314453125
    9. '<int' → logprob: -12.600372314453125
    10. ' ' → logprob: -12.725372314453125

Token 172: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5346977710723877
    2. ')' → logprob: -0.9096977710723877
    3. ':' → logprob: -4.909697532653809
    4. ',' → logprob: -5.784697532653809
    5. '):
' → logprob: -7.284697532653809
    6. ' ):' → logprob: -9.534697532653809
    7. '   ' → logprob: -9.909697532653809
    8. ')
' → logprob: -9.909697532653809
    9. ' ' → logprob: -10.284697532653809
    10. '=' → logprob: -10.409697532653809

Token 173: ' Long' (ID: 7790)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.004919212311506271
    2. 'int' → logprob: -5.379919052124023
    3. ' max' → logprob: -8.754919052124023
    4. ' ' → logprob: -10.379919052124023
    5. ' maximum' → logprob: -10.754919052124023
    6. 'max' → logprob: -10.754919052124023
    7. ' Maximum' → logprob: -10.879919052124023
    8. ' Int' → logprob: -11.629919052124023
    9. ' ' → logprob: -12.129919052124023
    10. '(int' → logprob: -12.504919052124023

Token 174: 'ueur' (ID: 43728)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.43151187896728516
    2. 'ueur' → logprob: -1.9315118789672852
    3. ')' → logprob: -3.181511878967285
    4. 'def' → logprob: -3.681511878967285
    5. '       ' → logprob: -3.806511878967285
    6. '    ' → logprob: -4.306511878967285
    7. '=None' → logprob: -4.431511878967285
    8. '=' → logprob: -4.556511878967285
    9. '```' → logprob: -5.306511878967285
    10. '<|end|>' → logprob: -5.431511878967285

Token 175: ' maximale' (ID: 76380)
  Prédit: ' maximale'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' maximale' → logprob: -0.06231272593140602
    2. 'max' → logprob: -3.0623128414154053
    3. '_max' → logprob: -4.687312602996826
    4. ' maximal' → logprob: -6.312312602996826
    5. '(max' → logprob: -7.062312602996826
    6. ' maximum' → logprob: -7.312312602996826
    7. ' max' → logprob: -7.562312602996826
    8. 'maximum' → logprob: -8.687313079833984
    9. '   ' → logprob: -8.812313079833984
    10. ')' → logprob: -9.687313079833984

Token 176: ' de' (ID: 334)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.018282216042280197
    2. '_' → logprob: -5.143282413482666
    3. ' de' → logprob: -5.393282413482666
    4. ' )' → logprob: -5.518282413482666
    5. ',' → logprob: -7.018282413482666
    6. '```' → logprob: -7.518282413482666
    7. '   ' → logprob: -7.893282413482666
    8. 'de' → logprob: -8.143281936645508
    9. ' ' → logprob: -8.518281936645508
    10. '_de' → logprob: -8.768281936645508

Token 177: ' saut' (ID: 111480)
  Prédit: ' saut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' saut' → logprob: -0.03592570498585701
    2. 's' → logprob: -3.6609256267547607
    3. ' salto' → logprob: -5.53592586517334
    4. ' ' → logprob: -6.16092586517334
    5. ' jump' → logprob: -6.53592586517334
    6. ' sa' → logprob: -6.78592586517334
    7. 'jump' → logprob: -7.91092586517334
    8. '_' → logprob: -8.16092586517334
    9. '_s' → logprob: -9.41092586517334
    10. '_jump' → logprob: -10.03592586517334

Token 178: ' autor' (ID: 13432)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.48895788192749023
    2. ')' → logprob: -0.9889578819274902
    3. '):' → logprob: -5.23895788192749
    4. '    ' → logprob: -5.98895788192749
    5. ' )' → logprob: -6.11395788192749
    6. '       ' → logprob: -6.98895788192749
    7. '```' → logprob: -7.36395788192749
    8. ' autor' → logprob: -7.61395788192749
    9. '  ' → logprob: -7.86395788192749
    10. ',' → logprob: -7.98895788192749

Token 179: 'isé' (ID: 30065)
  Prédit: 'isé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isé' → logprob: -0.0002831464516930282
    2. 'isée' → logprob: -8.500283241271973
    3. 'isés' → logprob: -10.250283241271973
    4. 'ise' → logprob: -10.625283241271973
    5. 'é' → logprob: -11.125283241271973
    6. 'isées' → logprob: -13.125283241271973
    7. 'is' → logprob: -13.625283241271973
    8. ')' → logprob: -15.000283241271973
    9. '```' → logprob: -15.000283241271973
    10. '#' → logprob: -15.250283241271973

Token 180: '.
' (ID: 558)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02377551794052124
    2. '):' → logprob: -3.773775577545166
    3. '):
' → logprob: -8.648775100708008
    4. '   ' → logprob: -8.773775100708008
    5. ')
' → logprob: -9.023775100708008
    6. ' )' → logprob: -9.898775100708008
    7. ',' → logprob: -11.148775100708008
    8. ' ' → logprob: -12.523775100708008
    9. ' ):' → logprob: -12.898775100708008
    10. '),' → logprob: -13.148775100708008

Token 181: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06826088577508926
    2. '
' → logprob: -3.443260908126831
    3. '       ' → logprob: -4.068260669708252
    4. ')' → logprob: -5.193260669708252
    5. '    
' → logprob: -5.443260669708252
    6. ' 
' → logprob: -6.068260669708252
    7. '  
' → logprob: -7.068260669708252
    8. '    ' → logprob: -7.443260669708252
    9. ',' → logprob: -7.693260669708252
    10. '```' → logprob: -7.818260669708252

Token 182: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' (adapté à ' S') → logprob: -0.01569763571023941
    2. ' S' → logprob: -4.515697479248047
    3. '   ' → logprob: -5.390697479248047
    4. '       ' → logprob: -10.265697479248047
    5. '
' → logprob: -10.890697479248047
    6. ' ' → logprob: -11.140697479248047
    7. 's' → logprob: -12.765697479248047
    8. '  ' → logprob: -13.265697479248047
    9. '    
' → logprob: -13.515697479248047
    10. '```' → logprob: -13.890697479248047

Token 183: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5930997133255005
    2. '):' → logprob: -1.5930997133255005
    3. ')' → logprob: -2.218099594116211
    4. '   ' → logprob: -2.593099594116211
    5. ',' → logprob: -3.218099594116211
    6. '[' → logprob: -4.593099594116211
    7. ' :' → logprob: -5.218099594116211
    8. '):
' → logprob: -5.968099594116211
    9. ' ):' → logprob: -7.468099594116211
    10. ' ' → logprob: -8.343099594116211

Token 184: 'str' (ID: 689)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.546431303024292
    2. ' str' → logprob: -1.296431303024292
    3. '[str' → logprob: -2.671431303024292
    4. 'str' → logprob: -3.296431303024292
    5. ':str' → logprob: -4.421431541442871
    6. '[int' → logprob: -4.671431541442871
    7. ' )' → logprob: -4.921431541442871
    8. ' ' → logprob: -5.796431541442871
    9. '   ' → logprob: -5.921431541442871
    10. '[' → logprob: -6.421431541442871

Token 185: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03195440024137497
    2. ')' → logprob: -4.156954288482666
    3. '   ' → logprob: -4.656954288482666
    4. '):
' → logprob: -6.031954288482666
    5. ' ):' → logprob: -6.656954288482666
    6. '[' → logprob: -7.406954288482666
    7. '"):' → logprob: -7.531954288482666
    8. ''):' → logprob: -7.781954288482666
    9. ':' → logprob: -7.906954288482666
    10. ']):' → logprob: -8.531954765319824

Token 186: ' Cha' (ID: 37219)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.3706796169281006
    2. ' ' → logprob: -1.7456796169281006
    3. ' "' → logprob: -2.1206796169281006
    4. ' str' → logprob: -2.1206796169281006
    5. ' '' → logprob: -2.4956796169281006
    6. ''' → logprob: -2.8706796169281006
    7. '"' → logprob: -2.9956796169281006
    8. ' ' → logprob: -3.4956796169281006
    9. '    ' → logprob: -3.8706796169281006
    10. ' """' → logprob: -4.24567985534668

Token 187: 'îne' (ID: 55188)
  Prédit: 'îne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'îne' → logprob: -0.40089085698127747
    2. 'î' → logprob: -1.525890827178955
    3. '   ' → logprob: -3.025890827178955
    4. '  ' → logprob: -4.025890827178955
    5. 'ïne' → logprob: -4.650890827178955
    6. 'r' → logprob: -4.775890827178955
    7. 'i' → logprob: -4.900890827178955
    8. ' ' → logprob: -5.775890827178955
    9. 'ï' → logprob: -5.900890827178955
    10. '    ' → logprob: -6.150890827178955

Token 188: ' invers' (ID: 38721)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 189: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.012968452647328377
    2. 'é' → logprob: -5.38796854019165
    3. '   ' → logprob: -6.63796854019165
    4. 'érée' → logprob: -6.63796854019165
    5. 'e' → logprob: -6.88796854019165
    6. 'rée' → logprob: -7.01296854019165
    7. ']' → logprob: -7.01296854019165
    8. '[::-' → logprob: -7.26296854019165
    9. ')' → logprob: -7.88796854019165
    10. 'ivée' → logprob: -8.262968063354492

Token 190: ' contenant' (ID: 131049)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6818786263465881
    2. '   ' → logprob: -1.4318785667419434
    3. ')' → logprob: -1.6818785667419434
    4. ',' → logprob: -4.056878566741943
    5. ' representing' → logprob: -4.056878566741943
    6. 'represent' → logprob: -4.431878566741943
    7. ' représentant' → logprob: -5.056878566741943
    8. ' ):' → logprob: -5.181878566741943
    9. '):
' → logprob: -5.681878566741943
    10. ' )' → logprob: -5.931878566741943

Token 191: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.8507111668586731
    2. ' des' → logprob: -1.3507111072540283
    3. ' les' → logprob: -1.6007111072540283
    4. ' '' → logprob: -2.8507111072540283
    5. 'des' → logprob: -3.8507111072540283
    6. 'les' → logprob: -4.225711345672607
    7. ' uniquement' → logprob: -5.600711345672607
    8. '"' → logprob: -5.725711345672607
    9. ''s' → logprob: -7.100711345672607
    10. '')' → logprob: -7.350711345672607

Token 192: '0' (ID: 15)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.7554822564125061
    2. '0' → logprob: -1.6304821968078613
    3. ''.' → logprob: -1.8804821968078613
    4. ''' → logprob: -2.0054821968078613
    5. '.'' → logprob: -3.7554821968078613
    6. ' ' → logprob: -5.130482196807861
    7. ' .' → logprob: -5.255482196807861
    8. '1' → logprob: -5.755482196807861
    9. '.')' → logprob: -6.255482196807861
    10. ' '' → logprob: -6.380482196807861

Token 193: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0009256341145373881
    2. '')' → logprob: -7.375925540924072
    3. ' '' → logprob: -8.75092601776123
    4. ''s' → logprob: -10.37592601776123
    5. ''or' → logprob: -10.75092601776123
    6. '',' → logprob: -10.87592601776123
    7. '"' → logprob: -11.75092601776123
    8. 'def' → logprob: -12.25092601776123
    9. ' or' → logprob: -12.68842601776123
    10. ''''' → logprob: -12.81342601776123

Token 194: ' (' (ID: 350)
  Prédit: ' ou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ou' → logprob: -0.995026171207428
    2. ' et' → logprob: -1.8700261116027832
    3. ')' → logprob: -1.9950261116027832
    4. ' or' → logprob: -2.120026111602783
    5. ''' → logprob: -2.495026111602783
    6. '')' → logprob: -2.995026111602783
    7. '   ' → logprob: -3.620026111602783
    8. ',' → logprob: -4.245026111602783
    9. ' and' → logprob: -4.370026111602783
    10. ']' → logprob: -4.745026111602783

Token 195: 'lib' (ID: 5997)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.8876634836196899
    2. ')' → logprob: -1.38766348361969
    3. ''' → logprob: -1.76266348361969
    4. 'lib' → logprob: -2.0126633644104004
    5. ' libre' → logprob: -4.1376633644104
    6. ' libres' → logprob: -5.6376633644104
    7. ' ')' → logprob: -6.1376633644104
    8. 's' → logprob: -6.8876633644104
    9. 'free' → logprob: -6.8876633644104
    10. ' )' → logprob: -6.8876633644104

Token 196: 're' (ID: 264)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.3328763544559479
    2. 're' → logprob: -1.9578763246536255
    3. 'ère' → logprob: -3.332876443862915
    4. 'e' → logprob: -3.457876443862915
    5. 'è' → logprob: -3.457876443862915
    6. 'èr' → logprob: -4.707876205444336
    7. 'é' → logprob: -5.207876205444336
    8. ')' → logprob: -5.457876205444336
    9. '```' → logprob: -5.832876205444336
    10. 'éré' → logprob: -6.082876205444336

Token 197: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07606137543916702
    2. '')' → logprob: -2.701061487197876
    3. ''' → logprob: -6.326061248779297
    4. ' )' → logprob: -6.451061248779297
    5. ' ou' → logprob: -6.451061248779297
    6. ' or' → logprob: -7.576061248779297
    7. ' et' → logprob: -8.826061248779297
    8. ',' → logprob: -9.451061248779297
    9. 's' → logprob: -9.951061248779297
    10. ' ')' → logprob: -10.076061248779297

Token 198: ' ou' (ID: 2031)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.28959137201309204
    2. ' or' → logprob: -2.6645913124084473
    3. ' et' → logprob: -3.1645913124084473
    4. ' and' → logprob: -3.2895913124084473
    5. '<|end|>' → logprob: -3.6645913124084473
    6. ''' → logprob: -4.164591312408447
    7. ' ou' → logprob: -4.164591312408447
    8. '')' → logprob: -4.414591312408447
    9. ',' → logprob: -4.539591312408447
    10. '   ' → logprob: -4.914591312408447

Token 199: ' '' (ID: 461)
  Prédit: ' ''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.47491568326950073
    2. ''' → logprob: -0.9749156832695007
    3. '<|end|>' → logprob: -7.724915504455566
    4. '1' → logprob: -8.974915504455566
    5. ' ' → logprob: -9.474915504455566
    6. '"' → logprob: -9.474915504455566
    7. 's' → logprob: -10.724915504455566
    8. ''un' → logprob: -10.849915504455566
    9. ''s' → logprob: -11.724915504455566
    10. ' ' → logprob: -12.099915504455566

Token 200: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00045902872807346284
    2. ''' → logprob: -7.75045919418335
    3. '0' → logprob: -11.250458717346191
    4. ' ' → logprob: -11.750458717346191
    5. '.' → logprob: -12.625458717346191
    6. '')' → logprob: -13.125458717346191
    7. ''s' → logprob: -15.000458717346191
    8. ' '' → logprob: -15.125458717346191
    9. '#' → logprob: -15.625458717346191
    10. 'x' → logprob: -15.875458717346191

Token 201: ''' (ID: 6)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.25518861413002014
    2. ')' → logprob: -1.5051885843276978
    3. ''' → logprob: -5.755188465118408
    4. '")' → logprob: -10.505188941955566
    5. ' )' → logprob: -11.630188941955566
    6. ')'' → logprob: -11.630188941955566
    7. '')
' → logprob: -12.380188941955566
    8. '`)' → logprob: -12.505188941955566
    9. ']' → logprob: -12.755188941955566
    10. '   ' → logprob: -12.755188941955566

Token 202: ' (' (ID: 350)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.37506017088890076
    2. ' (' → logprob: -1.2500602006912231
    3. '   ' → logprob: -4.750060081481934
    4. '')' → logprob: -4.750060081481934
    5. '(' → logprob: -5.625060081481934
    6. ' )' → logprob: -6.375060081481934
    7. ''' → logprob: -6.625060081481934
    8. ' ' → logprob: -7.625060081481934
    9. ']' → logprob: -7.750060081481934
    10. '```' → logprob: -8.500060081481934

Token 203: 'blo' (ID: 82456)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.01607084274292
    2. 'blo' → logprob: -1.01607084274292
    3. 'b' → logprob: -2.14107084274292
    4. '')' → logprob: -2.76607084274292
    5. 'lib' → logprob: -2.89107084274292
    6. 'bloc' → logprob: -4.76607084274292
    7. ''' → logprob: -4.89107084274292
    8. ' ' → logprob: -5.51607084274292
    9. ' blo' → logprob: -5.76607084274292
    10. 's' → logprob: -6.01607084274292

Token 204: 'quée' (ID: 63772)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5263291001319885
    2. ')' → logprob: -1.5263290405273438
    3. ''' → logprob: -2.7763290405273438
    4. '```' → logprob: -3.6513290405273438
    5. 'ock' → logprob: -3.9013290405273438
    6. '_' → logprob: -4.026329040527344
    7. 'c' → logprob: -4.651329040527344
    8. 'o' → logprob: -4.776329040527344
    9. 'q' → logprob: -4.901329040527344
    10. '')' → logprob: -5.401329040527344

Token 205: ').

' (ID: 3991)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07156788557767868
    2. '')' → logprob: -2.6965677738189697
    3. ''' → logprob: -7.446568012237549
    4. ' )' → logprob: -8.32156753540039
    5. ' ')' → logprob: -8.57156753540039
    6. ').' → logprob: -8.69656753540039
    7. '   ' → logprob: -9.32156753540039
    8. '):' → logprob: -9.69656753540039
    9. ''):' → logprob: -9.94656753540039
    10. '.' → logprob: -10.19656753540039

Token 206: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018734164535999298
    2. '    
' → logprob: -4.893733978271484
    3. '
' → logprob: -5.393733978271484
    4. ')' → logprob: -5.518733978271484
    5. ' 
' → logprob: -7.143733978271484
    6. '```' → logprob: -8.018733978271484
    7. ' )' → logprob: -8.268733978271484
    8. '  
' → logprob: -9.018733978271484
    9. '   
' → logprob: -9.018733978271484
    10. ' steps' → logprob: -9.143733978271484

Token 207: ' Returns' (ID: 9609)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25354862213134766
    2. 'steps' → logprob: -2.1285486221313477
    3. 'positions' → logprob: -2.8785486221313477
    4. ' steps' → logprob: -4.128548622131348
    5. 'def' → logprob: -4.878548622131348
    6. '
' → logprob: -5.378548622131348
    7. ' positions' → logprob: -5.378548622131348
    8. 'result' → logprob: -5.628548622131348
    9. 'dp' → logprob: -6.128548622131348
    10. '    
' → logprob: -6.628548622131348

Token 208: ':
' (ID: 734)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.2577234208583832
    2. ' None' → logprob: -2.507723331451416
    3. ' [' → logprob: -2.632723331451416
    4. ' ' → logprob: -3.632723331451416
    5. '[' → logprob: -4.007723331451416
    6. '[]' → logprob: -4.382723331451416
    7. ':' → logprob: -4.382723331451416
    8. ' [
' → logprob: -6.882723331451416
    9. ' ```' → logprob: -7.132723331451416
    10. ' :' → logprob: -7.757723331451416

Token 209: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24747240543365479
    2. ' None' → logprob: -1.6224724054336548
    3. '    ' → logprob: -4.747472286224365
    4. 'None' → logprob: -5.372472286224365
    5. ' []' → logprob: -5.497472286224365
    6. ' list' → logprob: -6.122472286224365
    7. ' List' → logprob: -7.247472286224365
    8. ' Optional' → logprob: -7.622472286224365
    9. 'List' → logprob: -7.997472286224365
    10. '       ' → logprob: -8.622472763061523

Token 210: ' str' (ID: 989)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.019666308537125587
    2. ' list' → logprob: -4.5196661949157715
    3. 'List' → logprob: -4.7696661949157715
    4. 'None' → logprob: -10.14466667175293
    5. ' List' → logprob: -10.64466667175293
    6. '   ' → logprob: -11.89466667175293
    7. 'tuple' → logprob: -11.89466667175293
    8. 'Optional' → logprob: -12.14466667175293
    9. 'A' → logprob: -12.76966667175293
    10. 'int' → logprob: -13.26966667175293

Token 211: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6112724542617798
    2. ' or' → logprob: -0.8612724542617798
    3. '   ' → logprob: -4.11127233505249
    4. ' :' → logprob: -4.73627233505249
    5. '"' → logprob: -6.23627233505249
    6. '       ' → logprob: -6.61127233505249
    7. '    ' → logprob: -6.73627233505249
    8. ',' → logprob: -6.98627233505249
    9. ':
' → logprob: -7.48627233505249
    10. ' if' → logprob: -7.86127233505249

Token 212: ' Une' (ID: 19758)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -1.3573877811431885
    2. '"' → logprob: -1.6073877811431885
    3. ' '' → logprob: -1.7323877811431885
    4. ' "' → logprob: -2.3573877811431885
    5. ' Une' → logprob: -2.8573877811431885
    6. ' La' → logprob: -2.9823877811431885
    7. 'str' → logprob: -3.6073877811431885
    8. 'A' → logprob: -3.8573877811431885
    9. 'Une' → logprob: -3.8573877811431885
    10. ' str' → logprob: -4.107387542724609

Token 213: ' chaîne' (ID: 89288)
  Prédit: ' liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.017899051308631897
    2. ' ' → logprob: -4.642899036407471
    3. 'liste' → logprob: -5.767899036407471
    4. ' sequence' → logprob: -6.767899036407471
    5. ' list' → logprob: -6.767899036407471
    6. ' solution' → logprob: -6.892899036407471
    7. ' chaîne' → logprob: -7.392899036407471
    8. ' sé' → logprob: -8.767899513244629
    9. 'sequence' → logprob: -9.142899513244629
    10. ' chaine' → logprob: -9.142899513244629

Token 214: ' d' (ID: 272)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.5282794237136841
    2. ' des' → logprob: -1.028279423713684
    3. '<|end|>' → logprob: -3.9032793045043945
    4. ''' → logprob: -4.7782793045043945
    5. ' de' → logprob: -4.9032793045043945
    6. ' "' → logprob: -5.9032793045043945
    7. '```' → logprob: -6.1532793045043945
    8. ' ' → logprob: -6.4032793045043945
    9. ' of' → logprob: -6.5282793045043945
    10. ' contenant' → logprob: -6.5282793045043945

Token 215: ''ent' (ID: 53422)
  Prédit: ''ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''ent' → logprob: -0.08022939413785934
    2. 'e' → logprob: -4.08022928237915
    3. 'ent' → logprob: -4.08022928237915
    4. ''ex' → logprob: -4.45522928237915
    5. ''' → logprob: -4.58022928237915
    6. ''espace' → logprob: -5.08022928237915
    7. ''esp' → logprob: -5.08022928237915
    8. ''in' → logprob: -7.20522928237915
    9. ''imp' → logprob: -7.20522928237915
    10. 'esp' → logprob: -7.33022928237915

Token 216: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.0632355660200119
    2. 'ier' → logprob: -3.5632355213165283
    3. 'er' → logprob: -3.9382355213165283
    4. 'ers' → logprob: -5.063235759735107
    5. 'ières' → logprob: -5.563235759735107
    6. 'e' → logprob: -7.688235759735107
    7. 'r' → logprob: -7.813235759735107
    8. 'ités' → logprob: -7.938235759735107
    9. 'êtes' → logprob: -8.68823528289795
    10. '"' → logprob: -8.81323528289795

Token 217: ' représentant' (ID: 136122)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 218: ' les' (ID: 1341)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.520424485206604
    2. '"' → logprob: -1.520424485206604
    3. ' les' → logprob: -2.2704243659973145
    4. ' des' → logprob: -3.5204243659973145
    5. ' ' → logprob: -4.6454243659973145
    6. ' l' → logprob: -4.6454243659973145
    7. ' la' → logprob: -4.8954243659973145
    8. '<|end|>' → logprob: -5.2704243659973145
    9. ' le' → logprob: -5.3954243659973145
    10. ' '' → logprob: -5.6454243659973145

Token 219: ' sa' (ID: 880)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8063254952430725
    2. ' espaces' → logprob: -1.1813254356384277
    3. 'positions' → logprob: -2.9313254356384277
    4. ' pas' → logprob: -3.1813254356384277
    5. ' distances' → logprob: -3.3063254356384277
    6. ' positions' → logprob: -3.6813254356384277
    7. 'esp' → logprob: -4.056325435638428
    8. ' espac' → logprob: -4.556325435638428
    9. 's' → logprob: -4.931325435638428
    10. ' déplacements' → logprob: -5.056325435638428

Token 220: 'uts' (ID: 4639)
  Prédit: 'uts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uts' → logprob: -0.03195231780409813
    2. 'auts' → logprob: -4.156952381134033
    3. 'u' → logprob: -5.406952381134033
    4. 'p' → logprob: -5.906952381134033
    5. '_' → logprob: -5.906952381134033
    6. ' ' → logprob: -7.281952381134033
    7. '   ' → logprob: -7.406952381134033
    8. 'pas' → logprob: -7.531952381134033
    9. '```' → logprob: -7.656952381134033
    10. '  ' → logprob: -7.781952381134033

Token 221: ',' (ID: 11)
  Prédit: ' separated'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' separated' → logprob: -1.5090528726577759
    2. ''' → logprob: -1.8840528726577759
    3. ' sépar' → logprob: -1.8840528726577759
    4. '"' → logprob: -2.1340527534484863
    5. 's' → logprob: -2.3840527534484863
    6. ',' → logprob: -3.2590527534484863
    7. ' "' → logprob: -3.5090527534484863
    8. ' ' → logprob: -3.7590527534484863
    9. ' des' → logprob: -3.7590527534484863
    10. '   ' → logprob: -4.384052753448486

Token 222: ' sépar' (ID: 97160)
  Prédit: ' sépar'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sépar' → logprob: -0.750857412815094
    2. ' ou' → logprob: -0.875857412815094
    3. ' separated' → logprob: -2.500857353210449
    4. '"' → logprob: -4.625857353210449
    5. ' or' → logprob: -5.000857353210449
    6. ''' → logprob: -5.375857353210449
    7. 'ou' → logprob: -6.125857353210449
    8. 's' → logprob: -7.000857353210449
    9. '"""' → logprob: -7.125857353210449
    10. ' ' → logprob: -7.250857353210449

Token 223: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.5057738423347473
    2. 'é' → logprob: -1.0057737827301025
    3. 'ée' → logprob: -3.5057737827301025
    4. 'ées' → logprob: -7.380774021148682
    5. ' par' → logprob: -8.755773544311523
    6. 'e' → logprob: -9.255773544311523
    7. 'er' → logprob: -9.505773544311523
    8. 'es' → logprob: -9.880773544311523
    9. ''' → logprob: -10.505773544311523
    10. ' by' → logprob: -10.880773544311523

Token 224: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.019168829545378685
    2. 'par' → logprob: -4.019168853759766
    3. '"' → logprob: -7.769168853759766
    4. ''' → logprob: -8.894168853759766
    5. 'by' → logprob: -9.519168853759766
    6. '```' → logprob: -9.644168853759766
    7. ' by' → logprob: -9.769168853759766
    8. '<|end|>' → logprob: -9.894168853759766
    9. 'b' → logprob: -10.394168853759766
    10. '_par' → logprob: -10.394168853759766

Token 225: ' des' (ID: 731)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.6402421593666077
    2. ' des' → logprob: -2.015242099761963
    3. ' espaces' → logprob: -2.140242099761963
    4. ''esp' → logprob: -2.890242099761963
    5. ' ' → logprob: -3.015242099761963
    6. ''espace' → logprob: -3.640242099761963
    7. 'space' → logprob: -4.140242099761963
    8. '"' → logprob: -4.140242099761963
    9. 'des' → logprob: -4.265242099761963
    10. 'esp' → logprob: -4.390242099761963

Token 226: ' espaces' (ID: 98361)
  Prédit: ' espaces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' espaces' → logprob: -0.09203867614269257
    2. 'esp' → logprob: -2.467038631439209
    3. 'spaces' → logprob: -7.092038631439209
    4. ''esp' → logprob: -7.217038631439209
    5. ' espace' → logprob: -7.217038631439209
    6. 'space' → logprob: -8.217039108276367
    7. 'es' → logprob: -8.467039108276367
    8. ''espace' → logprob: -8.592039108276367
    9. 'sp' → logprob: -10.342039108276367
    10. ' espac' → logprob: -10.967039108276367

Token 227: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9393289685249329
    2. '   ' → logprob: -1.314328908920288
    3. ' ou' → logprob: -1.939328908920288
    4. '"' → logprob: -2.564328908920288
    5. '.' → logprob: -3.439328908920288
    6. ' or' → logprob: -3.564328908920288
    7. ' if' → logprob: -4.439329147338867
    8. ' ' → logprob: -4.689329147338867
    9. ''' → logprob: -5.189329147338867
    10. '
' → logprob: -5.564329147338867

Token 228: ' ou' (ID: 2031)
  Prédit: ' ou'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ou' → logprob: -0.05164869502186775
    2. 'ou' → logprob: -3.3016486167907715
    3. ' or' → logprob: -4.8016486167907715
    4. ''' → logprob: -5.9266486167907715
    5. ' ' → logprob: -6.8016486167907715
    6. '"' → logprob: -7.4266486167907715
    7. ' 
' → logprob: -8.30164909362793
    8. 'or' → logprob: -8.55164909362793
    9. ' None' → logprob: -8.80164909362793
    10. ' '' → logprob: -9.80164909362793

Token 229: ' '-' (ID: 17489)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.7687662243843079
    2. '-' → logprob: -1.143766164779663
    3. ' "-' → logprob: -2.393766164779663
    4. '"-' → logprob: -3.143766164779663
    5. ' "' → logprob: -3.268766164779663
    6. ''' → logprob: -4.018766403198242
    7. ' -' → logprob: -4.768766403198242
    8. ''-' → logprob: -5.268766403198242
    9. ' '-' → logprob: -5.393766403198242
    10. ' "\' → logprob: -5.893766403198242

Token 230: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1008713702030946e-06
    2. '１' → logprob: -14.625001907348633
    3. 'Impossible' → logprob: -14.750001907348633
    4. '2' → logprob: -15.125001907348633
    5. '۱' → logprob: -15.250001907348633
    6. ''' → logprob: -15.937501907348633
    7. '')' → logprob: -16.187501907348633
    8. '```' → logprob: -16.437501907348633
    9. '"' → logprob: -17.125001907348633
    10. '১' → logprob: -17.250001907348633

Token 231: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0001793457195162773
    2. '\n' → logprob: -9.625179290771484
    3. ''''' → logprob: -9.875179290771484
    4. '')' → logprob: -10.750179290771484
    5. ''
' → logprob: -11.125179290771484
    6. ' '' → logprob: -11.375179290771484
    7. '"""' → logprob: -12.625179290771484
    8. '"' → logprob: -13.000179290771484
    9. ''"' → logprob: -13.250179290771484
    10. '1' → logprob: -13.375179290771484

Token 232: ' si' (ID: 1784)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.24314062297344208
    2. '   ' → logprob: -1.7431405782699585
    3. 'if' → logprob: -4.118140697479248
    4. '"' → logprob: -4.993140697479248
    5. '```' → logprob: -5.243140697479248
    6. ' si' → logprob: -5.743140697479248
    7. ' ' → logprob: -6.118140697479248
    8. '<|end|>' → logprob: -6.743140697479248
    9. '    ' → logprob: -6.868140697479248
    10. '"""' → logprob: -6.868140697479248

Token 233: ' impossible' (ID: 19786)
  Prédit: ' impossible'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' impossible' → logprob: -0.013543937355279922
    2. 'im' → logprob: -4.388544082641602
    3. 'Impossible' → logprob: -8.263544082641602
    4. '"' → logprob: -8.763544082641602
    5. ' imposible' → logprob: -8.888544082641602
    6. ' imposs' → logprob: -9.388544082641602
    7. ' Impossible' → logprob: -9.638544082641602
    8. ''' → logprob: -9.888544082641602
    9. ' aucune' → logprob: -10.013544082641602
    10. ' ' → logprob: -10.013544082641602

Token 234: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6007612943649292
    2. '.' → logprob: -1.3507612943649292
    3. ' de' → logprob: -2.2257614135742188
    4. '```' → logprob: -3.8507614135742188
    5. ' à' → logprob: -4.600761413574219
    6. ')' → logprob: -4.600761413574219
    7. '"""' → logprob: -4.725761413574219
    8. '"""
' → logprob: -4.850761413574219
    9. '"' → logprob: -4.850761413574219
    10. ''' → logprob: -5.225761413574219

Token 235: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.30510926246643066
    2. ')' → logprob: -2.1801092624664307
    3. '
' → logprob: -2.1801092624664307
    4. '):' → logprob: -4.680109024047852
    5. '    
' → logprob: -5.055109024047852
    6. '\n' → logprob: -5.430109024047852
    7. '  
' → logprob: -5.805109024047852
    8. ' 
' → logprob: -6.055109024047852
    9. '"""' → logprob: -6.055109024047852
    10. ':' → logprob: -6.305109024047852

Token 236: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015046111308038235
    2. '
' → logprob: -4.890046119689941
    3. '    
' → logprob: -5.515046119689941
    4. ')' → logprob: -6.765046119689941
    5. ':' → logprob: -7.265046119689941
    6. '\n' → logprob: -7.265046119689941
    7. '   
' → logprob: -8.515046119689941
    8. '  
' → logprob: -9.015046119689941
    9. ' 
' → logprob: -9.390046119689941
    10. '"""' → logprob: -9.390046119689941

Token 237: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007964316755533218
    2. ' position' → logprob: -5.882964134216309
    3. ' pos' → logprob: -6.132964134216309
    4. 'pos' → logprob: -6.632964134216309
    5. ' positions' → logprob: -7.382964134216309
    6. 'position' → logprob: -7.632964134216309
    7. ' current' → logprob: -8.382964134216309
    8. 'positions' → logprob: -9.257964134216309
    9. '    
' → logprob: -10.132964134216309
    10. ' steps' → logprob: -10.257964134216309

Token 238: ' ans' (ID: 3345)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -1.021165370941162
    2. 'positions' → logprob: -1.396165370941162
    3. 'position' → logprob: -1.646165370941162
    4. '   ' → logprob: -2.896165370941162
    5. 'steps' → logprob: -2.896165370941162
    6. 'dp' → logprob: -4.021165370941162
    7. ' position' → logprob: -4.271165370941162
    8. ' positions' → logprob: -4.396165370941162
    9. ' pos' → logprob: -4.521165370941162
    10. 'if' → logprob: -5.021165370941162

Token 239: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004650491755455732
    2. '=' → logprob: -5.379650592803955
    3. '=[]' → logprob: -11.754650115966797
    4. ' ' → logprob: -11.879650115966797
    5. '_steps' → logprob: -12.379650115966797
    6. 's' → logprob: -12.379650115966797
    7. '_' → logprob: -13.379650115966797
    8. '=[]
' → logprob: -13.379650115966797
    9. ' =[' → logprob: -14.004650115966797
    10. '=[]
' → logprob: -14.754650115966797

Token 240: ' ''' (ID: 8686)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.006294922437518835
    2. ' []' → logprob: -5.7562947273254395
    3. '[]
' → logprob: -6.1312947273254395
    4. '[' → logprob: -7.0062947273254395
    5. '["' → logprob: -11.756295204162598
    6. '[]

' → logprob: -12.131295204162598
    7. ' []
' → logprob: -12.381295204162598
    8. ' [' → logprob: -12.506295204162598
    9. '[-' → logprob: -13.131295204162598
    10. ' ' → logprob: -13.256295204162598

Token 241: '  ' (ID: 256)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.7576720714569092
    2. '   ' → logprob: -0.8826720714569092
    3. ' pos' → logprob: -3.132672071456909
    4. 'current' → logprob: -4.007672309875488
    5. 'position' → logprob: -4.007672309875488
    6. ' i' → logprob: -4.507672309875488
    7. 'i' → logprob: -4.632672309875488
    8. 'last' → logprob: -5.507672309875488
    9. '
' → logprob: -5.632672309875488
    10. ' current' → logprob: -5.882672309875488

Token 242: ' #' (ID: 1069)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.04572082310914993
    2. 'position' → logprob: -4.170721054077148
    3. 'i' → logprob: -4.420721054077148
    4. ' pos' → logprob: -5.420721054077148
    5. 'current' → logprob: -5.420721054077148
    6. 'steps' → logprob: -6.295721054077148
    7. ' i' → logprob: -6.670721054077148
    8. 'cur' → logprob: -6.795721054077148
    9. '   ' → logprob: -7.045721054077148
    10. 'prev' → logprob: -7.545721054077148

Token 243: ' Cha' (ID: 37219)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.8810660243034363
    2. 'current' → logprob: -1.006066083908081
    3. 'position' → logprob: -2.006066083908081
    4. ' current' → logprob: -4.381065845489502
    5. ' pos' → logprob: -4.506065845489502
    6. ''' → logprob: -4.756065845489502
    7. ' ' → logprob: -5.006065845489502
    8. 'steps' → logprob: -5.006065845489502
    9. 'i' → logprob: -5.256065845489502
    10. ' '' → logprob: -5.256065845489502

Token 244: 'îne' (ID: 55188)
  Prédit: 'îne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'îne' → logprob: -0.1827031373977661
    2. 'ine' → logprob: -2.0577030181884766
    3. 'ïne' → logprob: -3.9327030181884766
    4. 'r' → logprob: -5.057703018188477
    5. 'î' → logprob: -5.182703018188477
    6. '   ' → logprob: -5.932703018188477
    7. 'ne' → logprob: -6.682703018188477
    8. '  ' → logprob: -7.432703018188477
    9. 'rine' → logprob: -7.557703018188477
    10. '```' → logprob: -7.932703018188477

Token 245: ' qui' (ID: 2780)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 246: ' va' (ID: 3423)
  Prédit: 'cont'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cont' → logprob: -0.6370383501052856
    2. 'acc' → logprob: -2.262038230895996
    3. ' accum' → logprob: -2.512038230895996
    4. ' cont' → logprob: -2.637038230895996
    5. ' contient' → logprob: -3.637038230895996
    6. 'conten' → logprob: -3.637038230895996
    7. ' va' → logprob: -3.887038230895996
    8. 'stock' → logprob: -3.887038230895996
    9. '   ' → logprob: -4.387038230895996
    10. 'represent' → logprob: -4.512038230895996

Token 247: ' accum' (ID: 23148)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.8618968725204468
    2. 'con' → logprob: -1.3618968725204468
    3. ' accum' → logprob: -2.2368969917297363
    4. ' conten' → logprob: -2.4868969917297363
    5. 'conten' → logprob: -2.9868969917297363
    6. ' accumulate' → logprob: -3.3618969917297363
    7. 'rec' → logprob: -4.986896991729736
    8. 'cont' → logprob: -5.111896991729736
    9. 'stock' → logprob: -5.111896991729736
    10. ' stock' → logprob: -5.111896991729736

Token 248: 'uler' (ID: 11802)
  Prédit: 'uler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uler' → logprob: -0.33910471200942993
    2. 'érer' → logprob: -2.214104652404785
    3. 'uer' → logprob: -2.714104652404785
    4. '=' → logprob: -3.089104652404785
    5. 'er' → logprob: -4.214104652404785
    6. '   ' → logprob: -4.214104652404785
    7. 'u' → logprob: -4.714104652404785
    8. 'urer' → logprob: -4.839104652404785
    9. ''' → logprob: -4.964104652404785
    10. '       ' → logprob: -6.464104652404785

Token 249: ' les' (ID: 1341)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.03643009811639786
    2. '"' → logprob: -4.6614298820495605
    3. '<|end|>' → logprob: -4.6614298820495605
    4. ' '' → logprob: -4.9114298820495605
    5. 'str' → logprob: -6.1614298820495605
    6. 'the' → logprob: -6.5364298820495605
    7. ')' → logprob: -7.2864298820495605
    8. 'des' → logprob: -7.4114298820495605
    9. 'les' → logprob: -7.5364298820495605
    10. 'es' → logprob: -7.7864298820495605

Token 250: ' sa' (ID: 880)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.19831500947475433
    2. 's' → logprob: -2.448314905166626
    3. 'steps' → logprob: -3.323314905166626
    4. ''' → logprob: -4.073315143585205
    5. ' '' → logprob: -4.198315143585205
    6. ' ' → logprob: -5.198315143585205
    7. 'result' → logprob: -5.948315143585205
    8. ' steps' → logprob: -6.073315143585205
    9. 'pas' → logprob: -6.323315143585205
    10. ' str' → logprob: -6.323315143585205

Token 251: 'uts' (ID: 4639)
  Prédit: 'uts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uts' → logprob: -0.0016282867873087525
    2. 'u' → logprob: -7.501628398895264
    3. 'ut' → logprob: -7.751628398895264
    4. 'puts' → logprob: -9.251627922058105
    5. '   ' → logprob: -9.626627922058105
    6. ' uts' → logprob: -10.001627922058105
    7. 'ts' → logprob: -10.251627922058105
    8. '	' → logprob: -10.501627922058105
    9. '+' → logprob: -10.501627922058105
    10. 'utions' → logprob: -10.501627922058105

Token 252: ' effectu' (ID: 100880)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.1873043030500412
    2. '   ' → logprob: -2.8123042583465576
    3. 'position' → logprob: -3.3123042583465576
    4. 'current' → logprob: -3.3123042583465576
    5. ' pos' → logprob: -4.312304496765137
    6. 'i' → logprob: -4.437304496765137
    7. ' current' → logprob: -5.812304496765137
    8. ' i' → logprob: -6.062304496765137
    9. 'last' → logprob: -6.562304496765137
    10. ' position' → logprob: -6.562304496765137

Token 253: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.21170702576637268
    2. 'es' → logprob: -2.21170711517334
    3. ''' → logprob: -2.71170711517334
    4. 'é' → logprob: -4.33670711517334
    5. 's' → logprob: -7.46170711517334
    6. 'er' → logprob: -7.83670711517334
    7. 'e' → logprob: -8.71170711517334
    8. ''s' → logprob: -8.71170711517334
    9. 'ées' → logprob: -8.96170711517334
    10. 'u' → logprob: -8.96170711517334

Token 254: '
' (ID: 198)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.4848019480705261
    2. '   ' → logprob: -1.984802007675171
    3. 'position' → logprob: -2.609802007675171
    4. 'i' → logprob: -2.984802007675171
    5. ' i' → logprob: -3.234802007675171
    6. ' pos' → logprob: -3.484802007675171
    7. 'current' → logprob: -3.609802007675171
    8. ' position' → logprob: -5.234801769256592
    9. ' current' → logprob: -5.359801769256592
    10. ' ' → logprob: -5.359801769256592

Token 255: '   ' (ID: 271)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.0918809175491333
    2. '   ' → logprob: -1.2168809175491333
    3. 'pos' → logprob: -1.2168809175491333
    4. 'position' → logprob: -3.5918807983398438
    5. 'current' → logprob: -4.091880798339844
    6. ' i' → logprob: -4.591880798339844
    7. ' ' → logprob: -5.341880798339844
    8. ' pos' → logprob: -5.466880798339844
    9. 'last' → logprob: -6.966880798339844
    10. 'p' → logprob: -7.091880798339844

Token 256: ' i' (ID: 575)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.24555329978466034
    2. 'position' → logprob: -1.7455532550811768
    3. 'i' (adapté à ' i') → logprob: -3.9955532550811768
    4. 'current' → logprob: -4.120553493499756
    5. 'cur' → logprob: -6.370553493499756
    6. 'last' → logprob: -6.495553493499756
    7. 'index' → logprob: -6.745553493499756
    8. ' pos' → logprob: -7.495553493499756
    9. 'curr' → logprob: -7.620553493499756
    10. ' position' → logprob: -7.745553493499756

Token 257: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03808658942580223
    2. '=' → logprob: -3.2880866527557373
    3. ' ' → logprob: -10.788086891174316
    4. ',' → logprob: -10.788086891174316
    5. 'n' → logprob: -13.413086891174316
    6. ' =
' → logprob: -14.538086891174316
    7. ' +=' → logprob: -14.788086891174316
    8. ' ,' → logprob: -14.913086891174316
    9. 's' → logprob: -15.663086891174316
    10. '_' → logprob: -15.788086891174316

Token 258: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.003238555509597063
    2. ' ' → logprob: -5.753238677978516
    3. 'N' → logprob: -10.628238677978516
    4. '1' → logprob: -10.628238677978516
    5. ' N' → logprob: -11.753238677978516
    6. 'len' → logprob: -14.378238677978516
    7. 's' → logprob: -15.253238677978516
    8. '-' → logprob: -15.315738677978516
    9. '2' → logprob: -15.440738677978516
    10. '(' → logprob: -15.440738677978516

Token 259: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005607772618532181
    2. ' ' → logprob: -8.125560760498047
    3. 'N' → logprob: -8.250560760498047
    4. ' N' → logprob: -13.750560760498047
    5. '1' → logprob: -13.875560760498047
    6. 'len' → logprob: -14.375560760498047
    7. '-' → logprob: -16.063060760498047
    8. '   ' → logprob: -16.188060760498047
    9. '[' → logprob: -16.625560760498047
    10. '2' → logprob: -16.938060760498047

Token 260: '     ' (ID: 530)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.00556018203496933
    2. 'while' → logprob: -6.505560398101807
    3. ' while' → logprob: -6.630560398101807
    4. '   ' → logprob: -6.755560398101807
    5. '    
' → logprob: -7.505560398101807
    6. ' 
' → logprob: -7.630560398101807
    7. '<|end|>' → logprob: -8.880559921264648
    8. '	while' → logprob: -9.380559921264648
    9. '
' → logprob: -9.380559921264648
    10. '\n' → logprob: -9.755559921264648

Token 261: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.00635532708838582
    2. '<|end|>' → logprob: -5.506355285644531
    3. ' 
' → logprob: -7.381355285644531
    4. '    
' → logprob: -8.006355285644531
    5. '\n' → logprob: -8.131355285644531
    6. '<|end|>' → logprob: -8.631355285644531
    7. 'while' → logprob: -8.756355285644531
    8. '' → logprob: -8.756355285644531
    9. '
' → logprob: -9.256355285644531
    10. ' ' → logprob: -9.506355285644531

Token 262: ' Position' (ID: 21829)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -1.1485552787780762
    2. 'position' → logprob: -1.8985552787780762
    3. ' current' → logprob: -2.023555278778076
    4. '0' → logprob: -2.023555278778076
    5. 'current' → logprob: -2.148555278778076
    6. ' position' → logprob: -2.648555278778076
    7. ' ' → logprob: -3.773555278778076
    8. 'N' → logprob: -4.148555278778076
    9. ' pos' → logprob: -4.523555278778076
    10. ' N' → logprob: -4.648555278778076

Token 263: ' actuelle' (ID: 104951)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 264: ' dans' (ID: 2671)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07716409862041473
    2. 'while' → logprob: -3.4521641731262207
    3. '   ' → logprob: -4.202164173126221
    4. ' while' → logprob: -4.827164173126221
    5. '    
' → logprob: -5.202164173126221
    6. '<|end|>' → logprob: -5.702164173126221
    7. ' 
' → logprob: -5.827164173126221
    8. '+' → logprob: -6.327164173126221
    9. '\n' → logprob: -6.702164173126221
    10. ' ' → logprob: -7.077164173126221

Token 265: ' la' (ID: 557)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.032614365220069885
    2. ' la' → logprob: -4.407614231109619
    3. ' S' → logprob: -4.657614231109619
    4. 'la' → logprob: -4.782614231109619
    5. 'le' → logprob: -7.157614231109619
    6. 'the' → logprob: -7.282614231109619
    7. ' le' → logprob: -8.782614707946777
    8. 'l' → logprob: -8.782614707946777
    9. ' the' → logprob: -9.282614707946777
    10. 'N' → logprob: -10.032614707946777

Token 266: ' chaîne' (ID: 89288)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.08174333721399307
    2. 'chaine' → logprob: -2.9567432403564453
    3. ' S' → logprob: -4.206743240356445
    4. 'code' → logprob: -5.206743240356445
    5. ' chaîne' → logprob: -5.956743240356445
    6. ' code' → logprob: -6.706743240356445
    7. 's' → logprob: -6.831743240356445
    8. 'chain' → logprob: -8.206743240356445
    9. ' chaine' → logprob: -8.206743240356445
    10. 'string' → logprob: -9.081743240356445

Token 267: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.11725745350122452
    2. '   ' → logprob: -3.1172573566436768
    3. '    
' → logprob: -4.117257595062256
    4. ' while' → logprob: -4.117257595062256
    5. 'while' → logprob: -4.617257595062256
    6. ' 
' → logprob: -4.992257595062256
    7. '\n' → logprob: -5.242257595062256
    8. ',' → logprob: -5.617257595062256
    9. '	while' → logprob: -6.117257595062256
    10. '   
' → logprob: -7.117257595062256

Token 268: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26047998666763306
    2. '
' → logprob: -1.8854799270629883
    3. 'while' → logprob: -3.5104799270629883
    4. ' while' → logprob: -3.7604799270629883
    5. '    
' → logprob: -4.135479927062988
    6. '\n' → logprob: -6.010479927062988
    7. ' 
' → logprob: -6.135479927062988
    8. '	while' → logprob: -6.135479927062988
    9. '  
' → logprob: -8.510479927062988
    10. '   
' → logprob: -8.510479927062988

Token 269: ' while' (ID: 2049)
  Prédit: ' while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.594122588634491
    2. 'while' (adapté à ' while') → logprob: -1.4691226482391357
    3. ' ' → logprob: -1.5941226482391357
    4. ' 
' → logprob: -4.969122409820557
    5. '   ' → logprob: -5.594122409820557
    6. '    
' → logprob: -7.594122409820557
    7. '    ' → logprob: -7.594122409820557
    8. 'n' → logprob: -7.719122409820557
    9. '	while' → logprob: -7.844122409820557
    10. ',' → logprob: -7.969122409820557

Token 270: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.06859686970710754
    2. ' i' → logprob: -2.818596839904785
    3. 'True' → logprob: -5.443596839904785
    4. ' True' → logprob: -6.443596839904785
    5. '   ' → logprob: -7.443596839904785
    6. 'S' → logprob: -9.818596839904785
    7. '(i' → logprob: -11.318596839904785
    8. 'N' → logprob: -11.443596839904785
    9. '	i' → logprob: -12.068596839904785
    10. ' ' → logprob: -12.068596839904785

Token 271: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.29449939727783203
    2. ' +' → logprob: -1.919499397277832
    3. '+' → logprob: -2.294499397277832
    4. '<' → logprob: -5.169499397277832
    5. ' ' → logprob: -7.044499397277832
    6. ' +=' → logprob: -7.169499397277832
    7. ' !=' → logprob: -9.044499397277832
    8. '   ' → logprob: -10.294499397277832
    9. ' <=' → logprob: -10.419499397277832
    10. '+=' → logprob: -10.919499397277832

Token 272: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0009292102768085897
    2. ' N' → logprob: -7.000929355621338
    3. 'len' → logprob: -11.00092887878418
    4. '   ' → logprob: -14.62592887878418
    5. ' len' → logprob: -16.00092887878418
    6. 'n' → logprob: -16.12592887878418
    7. '	N' → logprob: -16.12592887878418
    8. '>N' → logprob: -16.37592887878418
    9. '(N' → logprob: -17.12592887878418
    10. ' ' → logprob: -17.75092887878418

Token 273: ' -' (ID: 533)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14898061752319336
    2. ' and' → logprob: -2.3989806175231934
    3. ':
' → logprob: -3.2739806175231934
    4. '+' → logprob: -5.398980617523193
    5. 'and' → logprob: -6.023980617523193
    6. ' :' → logprob: -6.523980617523193
    7. '   ' → logprob: -7.773980617523193
    8. ' :
' → logprob: -8.398981094360352
    9. '-' → logprob: -8.773981094360352
    10. '+:' → logprob: -9.273981094360352

Token 274: ' M' (ID: 391)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0010329303331673145
    2. ' ' → logprob: -6.876032829284668
    3. '   ' → logprob: -16.438533782958984
    4. '2' → logprob: -17.376033782958984
    5. '-' → logprob: -17.501033782958984
    6. '```' → logprob: -17.876033782958984
    7. '0' → logprob: -18.001033782958984
    8. '  ' → logprob: -18.063533782958984
    9. '
' → logprob: -18.188533782958984
    10. ',' → logprob: -18.688533782958984

Token 275: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5407783389091492
    2. '+' → logprob: -1.165778398513794
    3. ' +' → logprob: -2.540778398513794
    4. ' or' → logprob: -4.790778160095215
    5. ' and' → logprob: -5.040778160095215
    6. ':
' → logprob: -5.290778160095215
    7. ' :' → logprob: -5.290778160095215
    8. '+:' → logprob: -6.915778160095215
    9. '   ' → logprob: -7.665778160095215
    10. 'and' → logprob: -7.790778160095215

Token 276: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7928769588470459
    2. '   ' → logprob: -1.167876958847046
    3. '    ' → logprob: -2.417876958847046
    4. ' 
' → logprob: -2.792876958847046
    5. '    
' → logprob: -3.292876958847046
    6. ' ' → logprob: -4.292877197265625
    7. '   
' → logprob: -4.542877197265625
    8. '     
' → logprob: -4.667877197265625
    9. '        
' → logprob: -5.542877197265625
    10. '  
' → logprob: -6.542877197265625

Token 277: ' found' (ID: 2491)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.5646330118179321
    2. ' found' → logprob: -1.5646330118179321
    3. 'jump' → logprob: -1.9396330118179321
    4. 'found' (adapté à ' found') → logprob: -2.4396328926086426
    5. ' jump' → logprob: -2.5646328926086426
    6. 'j' → logprob: -2.5646328926086426
    7. 'for' → logprob: -2.6896328926086426
    8. 'step' → logprob: -3.1896328926086426
    9. '   ' → logprob: -3.4396328926086426
    10. ' step' → logprob: -3.6896328926086426

Token 278: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.039669185876846313
    2. '_' → logprob: -3.6646692752838135
    3. '=' → logprob: -4.664669036865234
    4. '_jump' → logprob: -5.914669036865234
    5. '_step' → logprob: -7.789669036865234
    6. '_space' → logprob: -8.539669036865234
    7. '_j' → logprob: -8.914669036865234
    8. ' ' → logprob: -9.289669036865234
    9. 'jump' → logprob: -9.414669036865234
    10. '_=' → logprob: -10.414669036865234

Token 279: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.004640168976038694
    2. ' False' → logprob: -5.379640102386475
    3. '   ' → logprob: -11.004640579223633
    4. 'True' → logprob: -13.254640579223633
    5. '0' → logprob: -14.004640579223633
    6. '-' → logprob: -15.004640579223633
    7. 'F' → logprob: -16.504640579223633
    8. '=False' → logprob: -16.504640579223633
    9. 'false' → logprob: -17.004640579223633
    10. '(False' → logprob: -17.254640579223633

Token 280: '   ' (ID: 271)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02161586843430996
    2. '<|end|>' → logprob: -4.896615982055664
    3. '   ' → logprob: -5.646615982055664
    4. ',' → logprob: -6.521615982055664
    5. ' ' → logprob: -6.521615982055664
    6. ' for' → logprob: -6.646615982055664
    7. '        
' → logprob: -7.021615982055664
    8. 'for' → logprob: -7.146615982055664
    9. '    ' → logprob: -7.271615982055664
    10. ' 
' → logprob: -7.521615982055664

Token 281: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6523540019989014
    2. '       ' → logprob: -2.0273540019989014
    3. ' 
' → logprob: -2.1523540019989014
    4. 'for' → logprob: -2.5273540019989014
    5. '   ' → logprob: -2.6523540019989014
    6. ' ' → logprob: -3.6523540019989014
    7. '    
' → logprob: -4.1523542404174805
    8. '    ' → logprob: -5.1523542404174805
    9. '        
' → logprob: -5.2773542404174805
    10. '
' → logprob: -5.5273542404174805

Token 282: ' Ind' (ID: 2761)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.18049132823944092
    2. ' for' → logprob: -1.805491328239441
    3. '   ' → logprob: -8.30549144744873
    4. 'jump' → logprob: -8.80549144744873
    5. '       ' → logprob: -9.30549144744873
    6. 'j' → logprob: -9.43049144744873
    7. 'step' → logprob: -10.18049144744873
    8. ' jump' → logprob: -10.30549144744873
    9. 'max' → logprob: -10.30549144744873
    10. 'For' → logprob: -11.55549144744873

Token 283: 'ique' (ID: 2222)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.7272046208381653
    2. 'ent' → logprob: -1.2272045612335205
    3. 'icate' → logprob: -2.6022045612335205
    4. 'iqué' → logprob: -2.6022045612335205
    5. 'ique' → logprob: -3.1022045612335205
    6. 'ice' → logprob: -4.4772047996521
    7. 'ic' → logprob: -4.7272047996521
    8. 'icator' → logprob: -5.6022047996521
    9. 'icat' → logprob: -6.7272047996521
    10. 'entation' → logprob: -7.4772047996521

Token 284: ' si' (ID: 1784)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6582810282707214
    2. ' if' → logprob: -2.158281087875366
    3. '    ' → logprob: -2.408281087875366
    4. '  ' → logprob: -2.533281087875366
    5. 'if' → logprob: -3.033281087875366
    6. ''' → logprob: -3.658281087875366
    7. '   ' → logprob: -3.908281087875366
    8. 'le' → logprob: -4.408280849456787
    9. '       ' → logprob: -4.658280849456787
    10. ' ' → logprob: -5.033280849456787

Token 285: ' un' (ID: 537)
  Prédit: ' True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.49893811345100403
    2. ' une' → logprob: -1.8739380836486816
    3. 'True' → logprob: -1.9989380836486816
    4. ' a' → logprob: -3.1239380836486816
    5. ' on' → logprob: -4.373938083648682
    6. ' un' → logprob: -4.873938083648682
    7. ' la' → logprob: -5.123938083648682
    8. ' we' → logprob: -5.623938083648682
    9. ' j' → logprob: -5.748938083648682
    10. ' found' → logprob: -5.748938083648682

Token 286: ' saut' (ID: 111480)
  Prédit: ' saut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' saut' → logprob: -0.9355182647705078
    2. 'jump' → logprob: -1.8105182647705078
    3. ' ' → logprob: -2.060518264770508
    4. 's' → logprob: -2.560518264770508
    5. ' jump' → logprob: -2.810518264770508
    6. 'j' → logprob: -3.310518264770508
    7. ' salto' → logprob: -3.560518264770508
    8. 'e' → logprob: -4.060518264770508
    9. 'possible' → logprob: -4.185518264770508
    10. ' pas' → logprob: -4.685518264770508

Token 287: ' valide' (ID: 137323)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.4895766079425812
    2. '   ' → logprob: -2.239576578140259
    3. ' ' → logprob: -2.864576578140259
    4. ' possible' → logprob: -2.989576578140259
    5. 'possible' → logprob: -3.239576578140259
    6. 'a' → logprob: -3.239576578140259
    7. '       ' → logprob: -3.864576578140259
    8. '=' → logprob: -4.114576816558838
    9. '    ' → logprob: -4.114576816558838
    10. '<|end|>' → logprob: -5.114576816558838

Token 288: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.4752642512321472
    2. ' de' → logprob: -2.600264310836792
    3. 'a' → logprob: -2.975264310836792
    4. ' has' → logprob: -3.100264310836792
    5. '   ' → logprob: -3.225264310836792
    6. ' ' → logprob: -3.350264310836792
    7. ' was' → logprob: -3.725264310836792
    8. ' for' → logprob: -3.975264310836792
    9. ' est' → logprob: -4.100264072418213
    10. ' dans' → logprob: -4.225264072418213

Token 289: ' été' (ID: 9799)
  Prédit: ' été'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' été' → logprob: -0.043664589524269104
    2. 'été' → logprob: -3.2936646938323975
    3. 't' → logprob: -6.418664455413818
    4. ' a' → logprob: -7.418664455413818
    5. ' trouvé' → logprob: -7.418664455413818
    6. 'a' → logprob: -7.668664455413818
    7. ' been' → logprob: -7.668664455413818
    8. ' ' → logprob: -8.293664932250977
    9. 'u' → logprob: -8.293664932250977
    10. 'e' → logprob: -9.043664932250977

Token 290: ' trouvé' (ID: 60081)
  Prédit: ' trouvé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' trouvé' → logprob: -0.2941610813140869
    2. 'tr' → logprob: -1.419161081314087
    3. 'found' → logprob: -4.919160842895508
    4. ' effectué' → logprob: -6.294160842895508
    5. ' trouv' → logprob: -6.669160842895508
    6. ' found' → logprob: -7.294160842895508
    7. 'effect' → logprob: -7.794160842895508
    8. ' trou' → logprob: -7.919160842895508
    9. 'fait' → logprob: -8.044160842895508
    10. '   ' → logprob: -8.669160842895508

Token 291: ' depuis' (ID: 16277)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 292: ' la' (ID: 557)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.21438176929950714
    2. ' i' → logprob: -1.7143818140029907
    3. '1' → logprob: -4.964381694793701
    4. 'M' → logprob: -5.714381694793701
    5. ' M' → logprob: -6.464381694793701
    6. ' ' → logprob: -7.589381694793701
    7. 'j' → logprob: -9.08938217163086
    8. '   ' → logprob: -9.46438217163086
    9. ' the' → logprob: -9.58938217163086
    10. '0' → logprob: -10.33938217163086

Token 293: ' position' (ID: 4010)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.01474136020988226
    2. ' i' → logprob: -4.88974142074585
    3. '+' → logprob: -5.38974142074585
    4. 'current' → logprob: -7.76474142074585
    5. 'position' → logprob: -8.014740943908691
    6. ' +' → logprob: -8.014740943908691
    7. 'N' → logprob: -8.139740943908691
    8. '`' → logprob: -8.764740943908691
    9. ' ' → logprob: -8.889740943908691
    10. 'pos' → logprob: -9.264740943908691

Token 294: ' cour' (ID: 2871)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7449998259544373
    2. 'i' → logprob: -2.244999885559082
    3. ' i' → logprob: -2.369999885559082
    4. '   ' → logprob: -2.744999885559082
    5. ' +' → logprob: -2.994999885559082
    6. '+i' → logprob: -3.244999885559082
    7. '=i' → logprob: -3.244999885559082
    8. '    ' → logprob: -3.494999885559082
    9. ' ' → logprob: -3.494999885559082
    10. '=' → logprob: -3.869999885559082

Token 295: 'ante' (ID: 2116)
  Prédit: 'ante'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ante' → logprob: -0.03079880028963089
    2. '   ' → logprob: -4.03079891204834
    3. 'r' → logprob: -4.78079891204834
    4. 'ant' → logprob: -5.90579891204834
    5. '       ' → logprob: -7.53079891204834
    6. 'i' → logprob: -8.15579891204834
    7. ' i' → logprob: -8.40579891204834
    8. '           ' → logprob: -9.15579891204834
    9. ' ' → logprob: -9.78079891204834
    10. 'a' → logprob: -10.15579891204834

Token 296: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.39795804023742676
    2. '<|end|>' → logprob: -1.3979580402374268
    3. '   ' → logprob: -3.5229580402374268
    4. '<|end|>' → logprob: -4.272957801818848
    5. '    ' → logprob: -4.647957801818848
    6. ',' → logprob: -5.272957801818848
    7. ' ' → logprob: -5.397957801818848
    8. '	' → logprob: -5.522957801818848
    9. '        
' → logprob: -5.897957801818848
    10. '    
' → logprob: -6.772957801818848

Token 297: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1974136233329773
    2. ' for' → logprob: -2.447413682937622
    3. '   ' → logprob: -2.822413682937622
    4. '	' → logprob: -5.697413444519043
    5. 'for' → logprob: -5.697413444519043
    6. ',' → logprob: -5.822413444519043
    7. ' ' → logprob: -5.947413444519043
    8. '        
' → logprob: -5.947413444519043
    9. ' 
' → logprob: -5.947413444519043
    10. '\' → logprob: -6.322413444519043

Token 298: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.006018268410116434
    2. ' for' → logprob: -5.381018161773682
    3. 'jump' → logprob: -7.131018161773682
    4. 'j' → logprob: -8.50601863861084
    5. 'step' → logprob: -9.00601863861084
    6. '       ' → logprob: -9.00601863861084
    7. '   ' → logprob: -9.25601863861084
    8. 'max' → logprob: -10.25601863861084
    9. ' jump' → logprob: -12.25601863861084
    10. 'next' → logprob: -12.88101863861084

Token 299: ' On' (ID: 2160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.10139447450637817
    2. ' for' → logprob: -2.3513944149017334
    3. '   ' → logprob: -7.2263946533203125
    4. 'range' → logprob: -8.726394653320312
    5. 'j' → logprob: -9.601394653320312
    6. 'step' → logprob: -9.976394653320312
    7. 'jump' → logprob: -10.101394653320312
    8. 'max' → logprob: -10.226394653320312
    9. '       ' → logprob: -10.976394653320312
    10. 'start' → logprob: -11.476394653320312

Token 300: ' cherche' (ID: 52345)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.050642095506191254
    2. 'for' → logprob: -3.0506420135498047
    3. ' range' → logprob: -7.050642013549805
    4. '    ' → logprob: -7.550642013549805
    5. '   ' → logprob: -8.800642013549805
    6. 'range' → logprob: -8.800642013549805
    7. '	for' → logprob: -9.550642013549805
    8. ' ' → logprob: -10.050642013549805
    9. '
' → logprob: -10.300642013549805
    10. ' =' → logprob: -10.550642013549805

Token 301: ' le' (ID: 505)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.25320708751678467
    2. 'j' → logprob: -2.378207206726074
    3. ' for' → logprob: -2.378207206726074
    4. 'for' → logprob: -4.628207206726074
    5. ' un' → logprob: -5.503207206726074
    6. ' d' → logprob: -5.503207206726074
    7. '    ' → logprob: -5.628207206726074
    8. ' de' → logprob: -6.128207206726074
    9. ' ' → logprob: -6.253207206726074
    10. '       ' → logprob: -6.378207206726074

Token 302: ' saut' (ID: 111480)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.7434531450271606
    2. 'M' → logprob: -1.8684531450271606
    3. 'pas' → logprob: -1.9934531450271606
    4. 'for' → logprob: -2.243453025817871
    5. ' for' → logprob: -2.618453025817871
    6. ' pas' → logprob: -2.993453025817871
    7. ' saut' → logprob: -2.993453025817871
    8. 'jump' → logprob: -3.118453025817871
    9. ' M' → logprob: -3.243453025817871
    10. ' j' → logprob: -3.493453025817871

Token 303: ' maximal' (ID: 65414)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3291308283805847
    2. 'for' → logprob: -2.7041308879852295
    3. '    ' → logprob: -3.2041308879852295
    4. ' j' → logprob: -3.2041308879852295
    5. '=' → logprob: -3.3291308879852295
    6. ' =' → logprob: -3.4541308879852295
    7. '   ' → logprob: -4.07913064956665
    8. 'j' → logprob: -4.07913064956665
    9. ' possible' → logprob: -5.70413064956665
    10. 'possible' → logprob: -5.82913064956665

Token 304: ' possible' (ID: 4149)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.4694483280181885
    2. ' possible' → logprob: -1.4694483280181885
    3. ' j' → logprob: -2.0944483280181885
    4. '       ' → logprob: -2.2194483280181885
    5. 'j' → logprob: -3.0944483280181885
    6. ',' → logprob: -3.2194483280181885
    7. 'possible' → logprob: -3.3444483280181885
    8. ' from' → logprob: -3.3444483280181885
    9. 'for' → logprob: -3.5944483280181885
    10. 'from' → logprob: -3.7194483280181885

Token 305: ' allant' (ID: 122150)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3755292594432831
    2. ',' → logprob: -2.2505292892456055
    3. ' for' → logprob: -2.2505292892456055
    4. 'from' → logprob: -3.7505292892456055
    5. 'for' → logprob: -4.2505292892456055
    6. ' from' → logprob: -4.3755292892456055
    7. '   ' → logprob: -4.6255292892456055
    8. '        ' → logprob: -5.1255292892456055
    9. ' in' → logprob: -5.5005292892456055
    10. '    ' → logprob: -5.7505292892456055

Token 306: ' de' (ID: 334)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -1.0122736692428589
    2. ' de' → logprob: -1.2622736692428589
    3. ' jusqu' → logprob: -1.8872736692428589
    4. 'de' → logprob: -2.6372737884521484
    5. ' from' → logprob: -2.7622737884521484
    6. 'jus' → logprob: -3.5122737884521484
    7. ' jusque' → logprob: -4.012273788452148
    8. 'j' → logprob: -5.387273788452148
    9. ' depuis' → logprob: -6.387273788452148
    10. ' up' → logprob: -6.512273788452148

Token 307: ' M' (ID: 391)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.1419476419687271
    2. ' i' → logprob: -2.1419477462768555
    3. 'M' → logprob: -5.1419477462768555
    4. '1' → logprob: -5.1419477462768555
    5. ' M' → logprob: -6.0169477462768555
    6. '   ' → logprob: -7.6419477462768555
    7. ' ' → logprob: -9.266947746276855
    8. '(i' → logprob: -10.016947746276855
    9. 'min' → logprob: -10.266947746276855
    10. ' min' → logprob: -10.641947746276855

Token 308: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.5652952790260315
    2. 'à' → logprob: -1.4402952194213867
    3. '   ' → logprob: -2.6902952194213867
    4. ' ' → logprob: -3.4402952194213867
    5. ',' → logprob: -4.065295219421387
    6. ' au' → logprob: -4.065295219421387
    7. ' jusqu' → logprob: -4.315295219421387
    8. ' a' → logprob: -4.690295219421387
    9. ' down' → logprob: -4.690295219421387
    10. ' jusque' → logprob: -5.065295219421387

Token 309: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.043135520070791245
    2. ' ' → logprob: -3.168135404586792
    3. ' M' → logprob: -9.543135643005371
    4. 'M' → logprob: -10.043135643005371
    5. '   ' → logprob: -12.168135643005371
    6. '-' → logprob: -12.418135643005371
    7. '0' → logprob: -12.793135643005371
    8. 'i' → logprob: -13.480635643005371
    9. ' i' → logprob: -13.605635643005371
    10. ' -' → logprob: -13.730635643005371

Token 310: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0012608295073732734
    2. ' ' → logprob: -6.751260757446289
    3. '   ' → logprob: -10.376260757446289
    4. 'M' → logprob: -10.876260757446289
    5. '0' → logprob: -11.126260757446289
    6. 'i' → logprob: -11.251260757446289
    7. '-' → logprob: -12.251260757446289
    8. '
' → logprob: -13.501260757446289
    9. ' M' → logprob: -13.501260757446289
    10. '    ' → logprob: -13.751260757446289

Token 311: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7196803689002991
    2. ',' → logprob: -1.0946803092956543
    3. ' for' → logprob: -2.7196803092956543
    4. '   ' → logprob: -3.2196803092956543
    5. '    ' → logprob: -3.9696803092956543
    6. ':' → logprob: -4.469680309295654
    7. '        
' → logprob: -4.844680309295654
    8. ' in' → logprob: -5.344680309295654
    9. 'for' → logprob: -5.344680309295654
    10. '        ' → logprob: -6.094680309295654

Token 312: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9004462957382202
    2. '   ' → logprob: -1.0254462957382202
    3. ' for' → logprob: -1.7754462957382202
    4. '    ' → logprob: -3.7754464149475098
    5. 'for' → logprob: -4.65044641494751
    6. '  ' → logprob: -5.15044641494751
    7. ' ' → logprob: -5.27544641494751
    8. '	' → logprob: -6.02544641494751
    9. '	for' → logprob: -6.15044641494751
    10. ':' → logprob: -6.27544641494751

Token 313: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.09042844921350479
    2. 'for' (adapté à ' for') → logprob: -2.590428352355957
    3. '   ' → logprob: -5.215428352355957
    4. '       ' → logprob: -5.590428352355957
    5. '	for' → logprob: -7.215428352355957
    6. ' ' → logprob: -7.840428352355957
    7. '    ' → logprob: -8.090428352355957
    8. ' 
' → logprob: -8.215428352355957
    9. '    
' → logprob: -9.465428352355957
    10. '
' → logprob: -9.465428352355957

Token 314: ' j' (ID: 441)
  Prédit: ' step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' step' → logprob: -0.7312401533126831
    2. ' j' → logprob: -0.9812401533126831
    3. ' jump' → logprob: -2.2312402725219727
    4. ' d' → logprob: -4.731240272521973
    5. 'step' → logprob: -4.981240272521973
    6. ' ' → logprob: -5.481240272521973
    7. ' dist' → logprob: -5.606240272521973
    8. 'j' → logprob: -5.731240272521973
    9. ' salto' → logprob: -6.481240272521973
    10. ' m' → logprob: -6.481240272521973

Token 315: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.003193874144926667
    2. 'in' → logprob: -5.7531938552856445
    3. '=' → logprob: -12.253193855285645
    4. ' =' → logprob: -12.628193855285645
    5. ' ' → logprob: -13.378193855285645
    6. 'range' → logprob: -13.628193855285645
    7. '   ' → logprob: -14.378193855285645
    8. 's' → logprob: -14.378193855285645
    9. '	in' → logprob: -14.378193855285645
    10. 'd' → logprob: -14.503193855285645

Token 316: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.023294508457183838
    2. 'range' → logprob: -3.773294448852539
    3. ' reversed' → logprob: -10.273294448852539
    4. ' xrange' → logprob: -12.148294448852539
    5. ' ' → logprob: -12.898294448852539
    6. '	range' → logprob: -13.398294448852539
    7. '(range' → logprob: -13.523294448852539
    8. '   ' → logprob: -13.523294448852539
    9. ' M' → logprob: -13.648294448852539
    10. 'M' → logprob: -14.898294448852539

Token 317: '(M' (ID: 6103)
  Prédit: '(M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.0001895935565698892
    2. '(' → logprob: -9.250189781188965
    3. 'M' → logprob: -9.375189781188965
    4. ' M' → logprob: -13.000189781188965
    5. ',M' → logprob: -13.500189781188965
    6. '   ' → logprob: -13.500189781188965
    7. ' (' → logprob: -13.500189781188965
    8. '[M' → logprob: -14.250189781188965
    9. ',' → logprob: -14.500189781188965
    10. '	M' → logprob: -14.750189781188965

Token 318: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009223000961355865
    2. ' ,' → logprob: -7.000922203063965
    3. '   ' → logprob: -12.375922203063965
    4. '‌,' → logprob: -13.750922203063965
    5. ',j' → logprob: -13.875922203063965
    6. '),' → logprob: -14.000922203063965
    7. ',
' → logprob: -14.250922203063965
    8. '1' → logprob: -15.000922203063965
    9. '',' → logprob: -15.250922203063965
    10. ' ' → logprob: -15.375922203063965

Token 319: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00091217877343297
    2. ' ' → logprob: -7.000912189483643
    3. '   ' → logprob: -15.625911712646484
    4. '```' → logprob: -15.875911712646484
    5. '  ' → logprob: -16.375911712646484
    6. ')' → logprob: -17.000911712646484
    7. '1' → logprob: -17.125911712646484
    8. 'j' → logprob: -17.375911712646484
    9. ' ' → logprob: -17.875911712646484
    10. '-' → logprob: -17.875911712646484

Token 320: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004902417422272265
    2. ' ' → logprob: -7.625490188598633
    3. '-' → logprob: -14.125490188598633
    4. '   ' → logprob: -14.750490188598633
    5. ' -' → logprob: -15.250490188598633
    6. '  ' → logprob: -15.875490188598633
    7. '1' → logprob: -16.187990188598633
    8. '    ' → logprob: -16.375490188598633
    9. '
' → logprob: -16.437990188598633
    10. '=' → logprob: -16.562990188598633

Token 321: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04352318122982979
    2. '-' → logprob: -3.918523073196411
    3. ',-' → logprob: -4.04352331161499
    4. ' ,' → logprob: -5.54352331161499
    5. '0' → logprob: -7.79352331161499
    6. ' -' → logprob: -8.043522834777832
    7. '   ' → logprob: -8.043522834777832
    8. ' ,-' → logprob: -9.168522834777832
    9. '-,' → logprob: -9.543522834777832
    10. '```' → logprob: -11.668522834777832

Token 322: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.004623087588697672
    2. ' -' → logprob: -5.379622936248779
    3. '```' → logprob: -13.754623413085938
    4. ')' → logprob: -14.129623413085938
    5. ' ' → logprob: -15.504623413085938
    6. '﻿' → logprob: -15.879623413085938
    7. '   ' → logprob: -15.879623413085938
    8. '  ' → logprob: -16.379623413085938
    9. '0' → logprob: -16.379623413085938
    10. '−' → logprob: -17.004623413085938

Token 323: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3856492842023727e-06
    2. ' ' → logprob: -13.750000953674316
    3. ')' → logprob: -16.625001907348633
    4. '```' → logprob: -16.750001907348633
    5. '   ' → logprob: -17.750001907348633
    6. '<|end|>' → logprob: -18.000001907348633
    7. '">' → logprob: -18.250001907348633
    8. '১' → logprob: -18.250001907348633
    9. '
' → logprob: -18.500001907348633
    10. ' -' → logprob: -18.500001907348633

Token 324: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.010472183115780354
    2. '):
' → logprob: -4.635472297668457
    3. ' ):' → logprob: -7.385472297668457
    4. '):
' → logprob: -9.510472297668457
    5. '   ' → logprob: -11.885472297668457
    6. ' ):
' → logprob: -12.510472297668457
    7. ':' → logprob: -12.760472297668457
    8. ')' → logprob: -12.760472297668457
    9. ',' → logprob: -13.135472297668457
    10. '):-' → logprob: -14.260472297668457

Token 325: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4504378139972687
    2. '       ' → logprob: -1.2004377841949463
    3. '<|end|>' → logprob: -3.2004377841949463
    4. ':
' → logprob: -4.575438022613525
    5. ' :' → logprob: -5.700438022613525
    6. '<|end|>' → logprob: -6.200438022613525
    7. ',' → logprob: -6.825438022613525
    8. '   ' → logprob: -7.325438022613525
    9. ' if' → logprob: -7.450438022613525
    10. '           ' → logprob: -7.450438022613525

Token 326: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.16083471477031708
    2. 'if' (adapté à ' if') → logprob: -2.035834789276123
    3. ' ' → logprob: -4.535834789276123
    4. ' i' → logprob: -5.535834789276123
    5. 'i' → logprob: -5.785834789276123
    6. '    ' → logprob: -9.660834312438965
    7. ')' → logprob: -9.910834312438965
    8. '       ' → logprob: -10.285834312438965
    9. '           ' → logprob: -11.160834312438965
    10. ' 
' → logprob: -11.410834312438965

Token 327: ' S' (ID: 336)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.28731298446655273
    2. 'i' → logprob: -1.5373129844665527
    3. ' S' → logprob: -3.7873129844665527
    4. 'S' → logprob: -4.537312984466553
    5. '   ' → logprob: -7.662312984466553
    6. ' ' → logprob: -7.787312984466553
    7. ' (' → logprob: -8.162313461303711
    8. 's' → logprob: -10.037313461303711
    9. '(i' → logprob: -10.037313461303711
    10. ' s' → logprob: -10.724813461303711

Token 328: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0002141458389814943
    2. '[' → logprob: -8.625214576721191
    3. ' [' → logprob: -11.125214576721191
    4. '[j' → logprob: -11.250214576721191
    5. 'i' → logprob: -12.125214576721191
    6. '   ' → logprob: -15.000214576721191
    7. ' i' → logprob: -15.125214576721191
    8. '[
' → logprob: -15.250214576721191
    9. '[I' → logprob: -15.375214576721191
    10. '```' → logprob: -17.000213623046875

Token 329: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4794202148914337
    2. '+j' → logprob: -1.3544201850891113
    3. ' +' → logprob: -2.1044201850891113
    4. '+i' → logprob: -7.229420185089111
    5. '[j' → logprob: -9.60442066192627
    6. ']' → logprob: -11.10442066192627
    7. '+]' → logprob: -12.10442066192627
    8. '[' → logprob: -12.22942066192627
    9. '   ' → logprob: -12.35442066192627
    10. '+
' → logprob: -12.47942066192627

Token 330: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.00012356207298580557
    2. ' j' → logprob: -9.000123977661133
    3. '<|end|>' → logprob: -16.500123977661133
    4. '	j' → logprob: -16.875123977661133
    5. '[j' → logprob: -17.250123977661133
    6. '   ' → logprob: -17.625123977661133
    7. ' ' → logprob: -18.125123977661133
    8. '*j' → logprob: -18.500123977661133
    9. '$j' → logprob: -19.000123977661133
    10. '+j' → logprob: -19.250123977661133

Token 331: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0019129343563690782
    2. ']==' → logprob: -6.751913070678711
    3. ' ]' → logprob: -7.751913070678711
    4. '']' → logprob: -8.751913070678711
    5. ']=='' → logprob: -8.876913070678711
    6. '   ' → logprob: -12.876913070678711
    7. '==' → logprob: -12.876913070678711
    8. ''' → logprob: -13.376913070678711
    9. ' ==' → logprob: -13.501913070678711
    10. '`]' → logprob: -13.501913070678711

Token 332: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.11183025687932968
    2. '==' → logprob: -2.361830234527588
    3. '=='' → logprob: -4.611830234527588
    4. ' =='' → logprob: -6.611830234527588
    5. '=' → logprob: -8.861830711364746
    6. ''' → logprob: -10.236830711364746
    7. ']=='' → logprob: -10.986830711364746
    8. ' ' → logprob: -10.986830711364746
    9. ']==' → logprob: -11.111830711364746
    10. '=="' → logprob: -11.361830711364746

Token 333: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0005282493657432497
    2. ' '' → logprob: -8.125528335571289
    3. '"' → logprob: -8.375528335571289
    4. '0' → logprob: -13.625528335571289
    5. '`' → logprob: -16.50052833557129
    6. '   ' → logprob: -16.62552833557129
    7. '‘' → logprob: -16.62552833557129
    8. '('' → logprob: -16.87552833557129
    9. '’' → logprob: -17.00052833557129
    10. ' ' → logprob: -17.25052833557129

Token 334: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ''' → logprob: -16.625
    3. ' ' → logprob: -18.25
    4. '۰' → logprob: -20.625
    5. '०' → logprob: -21.625
    6. '０' → logprob: -21.625
    7. '০' → logprob: -21.875
    8. '')' → logprob: -21.875
    9. '1' → logprob: -22.25
    10. '٠' → logprob: -22.25

Token 335: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.006963416468352079
    2. ''' → logprob: -5.00696325302124
    3. '':
' → logprob: -9.506963729858398
    4. ':' → logprob: -9.881963729858398
    5. ' ':' → logprob: -10.131963729858398
    6. ''):' → logprob: -10.256963729858398
    7. '":' → logprob: -10.881963729858398
    8. ' '' → logprob: -11.506963729858398
    9. '':
' → logprob: -12.131963729858398
    10. ''>' → logprob: -12.381963729858398

Token 336: '  ' (ID: 256)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.131751149892807
    2. '           ' → logprob: -2.50675106048584
    3. '                
' → logprob: -4.38175106048584
    4. ' 
' → logprob: -4.50675106048584
    5. '            
' → logprob: -5.13175106048584
    6. '\n' → logprob: -5.75675106048584
    7. ' ' → logprob: -6.38175106048584
    8. '<|end|>' → logprob: -6.50675106048584
    9. ':' → logprob: -6.63175106048584
    10. ':
' → logprob: -7.25675106048584

Token 337: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.20700562000274658
    2. '           ' → logprob: -3.082005500793457
    3. '                
' → logprob: -3.457005500793457
    4. ' 
' → logprob: -3.582005500793457
    5. ':' → logprob: -3.957005500793457
    6. ':
' → logprob: -4.082005500793457
    7. '
' → logprob: -4.082005500793457
    8. '\n' → logprob: -4.707005500793457
    9. '            
' → logprob: -4.957005500793457
    10. '  
' → logprob: -6.082005500793457

Token 338: ' Vér' (ID: 159169)
  Prédit: ' found'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' found' → logprob: -0.5041525363922119
    2. '           ' → logprob: -1.504152536392212
    3. 'found' → logprob: -2.629152536392212
    4. '               ' → logprob: -2.879152536392212
    5. '            ' → logprob: -3.629152536392212
    6. ' ' → logprob: -4.629152297973633
    7. ' ans' → logprob: -5.879152297973633
    8. ' ' → logprob: -7.004152297973633
    9. '                ' → logprob: -7.129152297973633
    10. ' i' → logprob: -7.379152297973633

Token 339: 'ifie' (ID: 46409)
  Prédit: 'ifie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifie' → logprob: -0.01527553703635931
    2. 'if' → logprob: -4.390275478363037
    3. 'ifier' → logprob: -7.265275478363037
    4. 'ifiez' → logprob: -7.765275478363037
    5. 'ifié' → logprob: -7.890275478363037
    6. 'i' → logprob: -8.015275955200195
    7. 'ification' → logprob: -8.140275955200195
    8. 'ifi' → logprob: -8.890275955200195
    9. '```' → logprob: -9.015275955200195
    10. 'ify' → logprob: -9.515275955200195

Token 340: ' si' (ID: 1784)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 341: ' la' (ID: 557)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.1555726528167725
    2. ' S' → logprob: -1.5305726528167725
    3. ' i' → logprob: -1.7805726528167725
    4. ' not' → logprob: -3.0305726528167725
    5. ' le' → logprob: -3.1555726528167725
    6. '<|end|>' → logprob: -3.4055726528167725
    7. 'S' → logprob: -3.5305726528167725
    8. ' the' → logprob: -3.6555726528167725
    9. ' ' → logprob: -3.9055726528167725
    10. ' la' → logprob: -4.155572891235352

Token 342: ' destination' (ID: 13330)
  Prédit: 'position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'position' → logprob: -0.3419151306152344
    2. 'case' → logprob: -1.7169151306152344
    3. ' position' → logprob: -3.0919151306152344
    4. ' case' → logprob: -3.0919151306152344
    5. 'token' → logprob: -5.091915130615234
    6. 's' → logprob: -6.466915130615234
    7. ' prochaine' → logprob: -6.716915130615234
    8. 'pos' → logprob: -6.966915130615234
    9. ' ' → logprob: -6.966915130615234
    10. 'chaine' → logprob: -7.091915130615234

Token 343: ' est' (ID: 893)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 344: ' libre' (ID: 25486)
  Prédit: ' libre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' libre' → logprob: -0.5780087113380432
    2. 'lib' → logprob: -0.9530087113380432
    3. 'accessible' → logprob: -3.8280086517333984
    4. 'un' → logprob: -4.078008651733398
    5. ' accessible' → logprob: -5.078008651733398
    6. 'free' → logprob: -6.453008651733398
    7. 'une' → logprob: -6.828008651733398
    8. ' un' → logprob: -6.953008651733398
    9. 'reachable' → logprob: -7.328008651733398
    10. ' ' → logprob: -7.453008651733398

Token 345: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5391032099723816
    2. '               ' → logprob: -1.5391032695770264
    3. ':
' → logprob: -1.7891032695770264
    4. '           ' → logprob: -3.4141032695770264
    5. ' and' → logprob: -6.914103031158447
    6. ' :' → logprob: -8.414103507995605
    7. ' :
' → logprob: -8.914103507995605
    8. '<|end|>' → logprob: -8.914103507995605
    9. ',' → logprob: -9.289103507995605
    10. '.' → logprob: -9.539103507995605

Token 346: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.43582627177238464
    2. '               ' → logprob: -1.185826301574707
    3. ':' → logprob: -3.560826301574707
    4. '            
' → logprob: -5.185826301574707
    5. ':
' → logprob: -5.310826301574707
    6. '                
' → logprob: -6.060826301574707
    7. ' :' → logprob: -6.560826301574707
    8. ' 
' → logprob: -7.310826301574707
    9. '            ' → logprob: -7.560826301574707
    10. ' :
' → logprob: -7.685826301574707

Token 347: ' ans' (ID: 3345)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.5573914051055908
    2. ' ans' → logprob: -1.4323914051055908
    3. 'i' → logprob: -1.9323914051055908
    4. 'ans' (adapté à ' ans') → logprob: -3.307391405105591
    5. '           ' → logprob: -5.682391166687012
    6. '   ' → logprob: -6.682391166687012
    7. '       ' → logprob: -8.057391166687012
    8. ' step' → logprob: -8.182391166687012
    9. '               ' → logprob: -8.432391166687012
    10. ' found' → logprob: -8.557391166687012

Token 348: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.16035370528697968
    2. '+=' → logprob: -1.910353660583496
    3. '+='' → logprob: -9.535353660583496
    4. '+' → logprob: -10.660353660583496
    5. '+="' → logprob: -10.910353660583496
    6. ' +' → logprob: -11.785353660583496
    7. '=' → logprob: -12.535353660583496
    8. '   ' → logprob: -13.410353660583496
    9. '+=(' → logprob: -13.910353660583496
    10. ' =' → logprob: -13.910353660583496

Token 349: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.12058337777853012
    2. ' str' → logprob: -2.2455832958221436
    3. 'f' → logprob: -5.620583534240723
    4. ' f' → logprob: -5.745583534240723
    5. ''' → logprob: -7.245583534240723
    6. '(str' → logprob: -9.120583534240723
    7. '"' → logprob: -9.870583534240723
    8. '	str' → logprob: -10.995583534240723
    9. ' '' → logprob: -11.995583534240723
    10. '=str' → logprob: -12.120583534240723

Token 350: '(j' (ID: 4997)
  Prédit: '(j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -7.111979357432574e-05
    2. '(' → logprob: -9.62507152557373
    3. 'j' → logprob: -12.37507152557373
    4. ' (' → logprob: -14.87507152557373
    5. '[j' → logprob: -15.00007152557373
    6. '	j' → logprob: -16.500070571899414
    7. '('' → logprob: -17.000070571899414
    8. '(
' → logprob: -17.875070571899414
    9. '(i' → logprob: -18.250070571899414
    10. '((' → logprob: -18.375070571899414

Token 351: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0023471000604331493
    2. ')+' → logprob: -6.127346992492676
    3. ')+'' → logprob: -8.877346992492676
    4. '+' → logprob: -11.627346992492676
    5. '')' → logprob: -12.627346992492676
    6. ')+"' → logprob: -12.627346992492676
    7. ' )' → logprob: -12.627346992492676
    8. ')
' → logprob: -13.877346992492676
    9. '   ' → logprob: -14.002346992492676
    10. '           ' → logprob: -15.002346992492676

Token 352: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.16046203672885895
    2. ' +' → logprob: -1.9104620218276978
    3. '               ' → logprob: -9.285462379455566
    4. '+
' → logprob: -10.035462379455566
    5. '+'' → logprob: -10.160462379455566
    6. 'if' → logprob: -10.660462379455566
    7. '           ' → logprob: -11.910462379455566
    8. '                   ' → logprob: -11.910462379455566
    9. '+"' → logprob: -12.660462379455566
    10. ''' → logprob: -12.660462379455566

Token 353: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0011711753904819489
    2. '"' → logprob: -6.751171112060547
    3. ' '' → logprob: -13.876171112060547
    4. '`' → logprob: -17.251171112060547
    5. ' ' → logprob: -17.251171112060547
    6. ' ' → logprob: -17.626171112060547
    7. ''''' → logprob: -18.251171112060547
    8. '''' → logprob: -18.376171112060547
    9. '('' → logprob: -18.501171112060547
    10. '',' → logprob: -18.751171112060547

Token 354: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0037542327772825956
    2. ' '' → logprob: -5.878754138946533
    3. ' ' → logprob: -7.503754138946533
    4. '"' → logprob: -7.878754138946533
    5. ' ' → logprob: -11.628754615783691
    6. ' "' → logprob: -12.128754615783691
    7. ' (' → logprob: -13.753754615783691
    8. '  ' → logprob: -14.128754615783691
    9. '_' → logprob: -14.253754615783691
    10. ''''' → logprob: -14.878754615783691

Token 355: '  ' (ID: 256)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.027094101533293724
    2. 'i' → logprob: -3.6520941257476807
    3. '                
' → logprob: -7.902093887329102
    4. '           ' → logprob: -8.902093887329102
    5. '
' → logprob: -9.277093887329102
    6. '<|end|>' → logprob: -10.027093887329102
    7. ' i' → logprob: -10.152093887329102
    8. '              ' → logprob: -10.527093887329102
    9. '                   ' → logprob: -10.777093887329102
    10. ',' → logprob: -12.027093887329102

Token 356: ' #' (ID: 1069)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.04248417168855667
    2. '               ' → logprob: -3.6674842834472656
    3. '           ' → logprob: -4.667484283447266
    4. '                   ' → logprob: -6.042484283447266
    5. '       ' → logprob: -6.792484283447266
    6. '
' → logprob: -6.792484283447266
    7. ' i' → logprob: -7.292484283447266
    8. '<|end|>' → logprob: -8.042484283447266
    9. '                
' → logprob: -8.292484283447266
    10. '   ' → logprob: -9.167484283447266

Token 357: ' Aj' (ID: 28294)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -5.621933451038785e-05
    2. ' i' → logprob: -10.750056266784668
    3. '           ' → logprob: -11.375056266784668
    4. '       ' → logprob: -12.125056266784668
    5. '               ' → logprob: -12.125056266784668
    6. '                   ' → logprob: -12.375056266784668
    7. '   ' → logprob: -12.875056266784668
    8. '
' → logprob: -13.375056266784668
    9. ' ' → logprob: -13.625056266784668
    10. 'break' → logprob: -14.375056266784668

Token 358: 'oute' (ID: 3509)
  Prédit: 'oute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oute' → logprob: -0.0002786167024169117
    2. 'out' → logprob: -8.50027847290039
    3. 'outer' → logprob: -9.87527847290039
    4. 'outez' → logprob: -10.87527847290039
    5. 'outes' → logprob: -12.37527847290039
    6. 'o' → logprob: -15.00027847290039
    7. 'ou' → logprob: -16.75027847290039
    8. 'oue' → logprob: -16.87527847290039
    9. 'OUT' → logprob: -17.50027847290039
    10. '```' → logprob: -17.50027847290039

Token 359: ' ce' (ID: 2357)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 360: ' saut' (ID: 111480)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.010730030946433544
    2. 'jump' → logprob: -4.885730266571045
    3. 's' → logprob: -6.635730266571045
    4. 'token' → logprob: -7.010730266571045
    5. 'jet' → logprob: -7.385730266571045
    6. 'str' → logprob: -9.260729789733887
    7. 'jmp' → logprob: -9.635729789733887
    8. '<|end|>' → logprob: -9.885729789733887
    9. '```' → logprob: -11.010729789733887
    10. ' ' → logprob: -11.635729789733887

Token 361: ' à' (ID: 1221)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4863255023956299
    2. '<|end|>' → logprob: -0.9863255023956299
    3. '<|end|>' → logprob: -4.611325263977051
    4. 'to' → logprob: -7.486325263977051
    5. '           ' → logprob: -8.11132526397705
    6. '                   ' → logprob: -8.23632526397705
    7. '                ' → logprob: -8.73632526397705
    8. '       ' → logprob: -8.73632526397705
    9. '                
' → logprob: -9.11132526397705
    10. '   ' → logprob: -9.61132526397705

Token 362: ' la' (ID: 557)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.03867052495479584
    2. 'la' → logprob: -3.288670539855957
    3. 'l' → logprob: -7.538670539855957
    4. 'answer' → logprob: -9.788670539855957
    5. ' la' → logprob: -10.788670539855957
    6. '(ans' → logprob: -11.788670539855957
    7. ' ans' → logprob: -12.413670539855957
    8. '	ans' → logprob: -12.788670539855957
    9. 'a' → logprob: -14.288670539855957
    10. 'lam' → logprob: -14.413670539855957

Token 363: ' sé' (ID: 7462)
  Prédit: 'chaine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'chaine' → logprob: -0.39455804228782654
    2. 'ans' → logprob: -1.769558072090149
    3. 'answer' → logprob: -2.5195579528808594
    4. 'ré' → logprob: -2.6445579528808594
    5. 'sequence' → logprob: -7.394557952880859
    6. 'chain' → logprob: -7.394557952880859
    7. ' chaîne' → logprob: -7.394557952880859
    8. 'solution' → logprob: -7.644557952880859
    9. 'cha' → logprob: -7.769557952880859
    10. 'string' → logprob: -7.769557952880859

Token 364: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -0.7989931702613831
    2. 'q' → logprob: -1.1739931106567383
    3. 'quences' → logprob: -1.7989931106567383
    4. 'p' → logprob: -2.6739931106567383
    5. 'ans' → logprob: -5.423993110656738
    6. 'ance' → logprob: -7.048993110656738
    7. 'par' → logprob: -7.423993110656738
    8. 'paration' → logprob: -8.298993110656738
    9. 'qu' → logprob: -9.173993110656738
    10. 'qs' → logprob: -10.048993110656738

Token 365: ' de' (ID: 334)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.007610532455146313
    2. 'i' → logprob: -5.132610321044922
    3. '<|end|>' → logprob: -6.757610321044922
    4. '           ' → logprob: -8.132610321044922
    5. ' i' → logprob: -10.007610321044922
    6. '<|end|>' → logprob: -10.257610321044922
    7. '       ' → logprob: -10.757610321044922
    8. '                
' → logprob: -10.882610321044922
    9. '                   ' → logprob: -11.132610321044922
    10. '              ' → logprob: -11.257610321044922

Token 366: ' réponses' (ID: 88884)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.11210769414901733
    2. 's' → logprob: -2.362107753753662
    3. 'pas' → logprob: -4.862107753753662
    4. 'steps' → logprob: -6.612107753753662
    5. 'm' → logprob: -6.987107753753662
    6. 'moves' → logprob: -7.237107753753662
    7. 'sa' → logprob: -7.612107753753662
    8. 'answers' → logprob: -9.612107276916504
    9. 'tokens' → logprob: -9.737107276916504
    10. 'cou' → logprob: -9.862107276916504

Token 367: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04379112645983696
    2. 'i' → logprob: -3.1687910556793213
    3. '           ' → logprob: -7.9187912940979
    4. ' i' → logprob: -8.668790817260742
    5. '
' → logprob: -9.043790817260742
    6. '                
' → logprob: -10.418790817260742
    7. '       ' → logprob: -10.543790817260742
    8. '                   ' → logprob: -10.543790817260742
    9. ',' → logprob: -11.168790817260742
    10. ',i' → logprob: -11.293790817260742

Token 368: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03681451454758644
    2. 'i' → logprob: -3.4118144512176514
    3. '           ' → logprob: -6.0368146896362305
    4. '       ' → logprob: -7.7868146896362305
    5. '
' → logprob: -8.91181468963623
    6. '                
' → logprob: -9.28681468963623
    7. ' i' → logprob: -9.41181468963623
    8. '   ' → logprob: -10.78681468963623
    9. '            
' → logprob: -12.16181468963623
    10. '    
' → logprob: -12.41181468963623

Token 369: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -1.1472419600977446e-06
    2. ' i' → logprob: -13.875000953674316
    3. '           ' → logprob: -16.625001907348633
    4. '
' → logprob: -17.875001907348633
    5. '   ' → logprob: -18.000001907348633
    6. '       ' → logprob: -18.125001907348633
    7. '               ' → logprob: -19.125001907348633
    8. '                   ' → logprob: -21.125001907348633
    9. 'found' → logprob: -22.000001907348633
    10. '_i' → logprob: -22.375001907348633

Token 370: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.029824884608387947
    2. ' +=' → logprob: -3.52982497215271
    3. '=' → logprob: -9.529825210571289
    4. ']+=' → logprob: -13.779825210571289
    5. '+' → logprob: -14.654825210571289
    6. ' =' → logprob: -16.02982521057129
    7. '+=(' → logprob: -16.77982521057129
    8. '```' → logprob: -17.15482521057129
    9. '+='' → logprob: -17.27982521057129
    10. '+="' → logprob: -17.52982521057129

Token 371: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0011703446507453918
    2. ' j' → logprob: -6.7511701583862305
    3. '	j' → logprob: -16.251171112060547
    4. '$j' → logprob: -18.876171112060547
    5. '+j' → logprob: -19.626171112060547
    6. '[j' → logprob: -19.876171112060547
    7. '   ' → logprob: -20.001171112060547
    8. '
' → logprob: -20.376171112060547
    9. '_j' → logprob: -20.626171112060547
    10. '```' → logprob: -20.751171112060547

Token 372: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.06231854483485222
    2. '
' → logprob: -3.0623185634613037
    3. 'found' → logprob: -4.937318325042725
    4. '                
' → logprob: -5.312318325042725
    5. '<|end|>' → logprob: -7.937318325042725
    6. ' found' → logprob: -8.062318801879883
    7. '                   ' → logprob: -8.562318801879883
    8. '           ' → logprob: -9.437318801879883
    9. 'Found' → logprob: -9.687318801879883
    10. '                ' → logprob: -9.687318801879883

Token 373: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.08175893872976303
    2. '
' → logprob: -2.831758975982666
    3. 'found' → logprob: -4.456758975982666
    4. '                
' → logprob: -5.081758975982666
    5. ' found' → logprob: -7.706758975982666
    6. '                   ' → logprob: -7.956758975982666
    7. '<|end|>' → logprob: -8.706758499145508
    8. '                ' → logprob: -8.956758499145508
    9. '  
' → logprob: -9.331758499145508
    10. ' 
' → logprob: -9.456758499145508

Token 374: ' Av' (ID: 7541)
  Prédit: 'found'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'found' → logprob: -0.2373095452785492
    2. 'break' → logprob: -1.7373095750808716
    3. ' found' → logprob: -3.487309455871582
    4. ' break' → logprob: -5.487309455871582
    5. '               ' → logprob: -7.862309455871582
    6. 'Found' → logprob: -9.112309455871582
    7. 'Break' → logprob: -11.112309455871582
    8. '
' → logprob: -11.737309455871582
    9. '                
' → logprob: -12.237309455871582
    10. '                   ' → logprob: -12.737309455871582

Token 375: 'ance' (ID: 766)
  Prédit: 'ance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ance' → logprob: -0.04973384737968445
    2. 'ancer' → logprob: -3.424733877182007
    3. 'anç' → logprob: -4.924733638763428
    4. 'ancée' → logprob: -5.049733638763428
    5. 'ancé' → logprob: -6.424733638763428
    6. '#' → logprob: -8.424734115600586
    7. 'a' → logprob: -8.924734115600586
    8. 'er' → logprob: -9.174734115600586
    9. 'an' → logprob: -9.299734115600586
    10. 'ancement' → logprob: -10.924734115600586

Token 376: ' à' (ID: 1221)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 377: ' la' (ID: 557)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.006354377605021
    2. ' i' → logprob: -5.131354331970215
    3. 'la' → logprob: -8.006354331970215
    4. ' la' → logprob: -9.506354331970215
    5. 'l' → logprob: -11.381354331970215
    6. ' ' → logprob: -13.381354331970215
    7. '[i' → logprob: -13.756354331970215
    8. '```' → logprob: -13.881354331970215
    9. '   ' → logprob: -14.381354331970215
    10. '(i' → logprob: -14.631354331970215

Token 378: ' prochaine' (ID: 78876)
  Prédit: 'position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'position' → logprob: -0.47526711225509644
    2. 'i' → logprob: -1.2252671718597412
    3. 'nou' → logprob: -2.600267171859741
    4. 'new' → logprob: -4.975266933441162
    5. 'destination' → logprob: -6.725266933441162
    6. ' nouvelle' → logprob: -7.100266933441162
    7. ' i' → logprob: -8.35026741027832
    8. 'pos' → logprob: -8.47526741027832
    9. 'place' → logprob: -8.60026741027832
    10. ' position' → logprob: -8.72526741027832

Token 379: ' position' (ID: 4010)
  Prédit: 'position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'position' → logprob: -0.003415824379771948
    2. ' position' → logprob: -5.753416061401367
    3. 'pos' → logprob: -8.878416061401367
    4. '<|end|>' → logprob: -10.003416061401367
    5. '	position' → logprob: -11.253416061401367
    6. '_position' → logprob: -11.378416061401367
    7. ' ' → logprob: -12.128416061401367
    8. '   ' → logprob: -12.253416061401367
    9. 'positions' → logprob: -12.753416061401367
    10. '```' → logprob: -13.253416061401367

Token 380: ' atte' (ID: 43312)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0010803256882354617
    2. '                
' → logprob: -7.626080513000488
    3. '<|end|>' → logprob: -8.751080513000488
    4. '                   ' → logprob: -9.001080513000488
    5. '           ' → logprob: -9.876080513000488
    6. '  
' → logprob: -9.876080513000488
    7. '       ' → logprob: -10.001080513000488
    8. '
' → logprob: -10.251080513000488
    9. '                       ' → logprob: -11.001080513000488
    10. ' 
' → logprob: -11.251080513000488

Token 381: 'inte' (ID: 18750)
  Prédit: 'inte'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inte' → logprob: -3.869639476761222e-05
    2. 'int' → logprob: -11.250039100646973
    3. 'nte' → logprob: -11.500039100646973
    4. 'i' → logprob: -11.750039100646973
    5. 'in' → logprob: -12.500039100646973
    6. 'ign' → logprob: -13.500039100646973
    7. 'indre' → logprob: -13.500039100646973
    8. 'ind' → logprob: -14.875039100646973
    9. 'intes' → logprob: -16.000038146972656
    10. 'ignée' → logprob: -16.000038146972656

Token 382: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0006606113165616989
    2. '
' → logprob: -8.25066089630127
    3. '                
' → logprob: -8.50066089630127
    4. '<|end|>' → logprob: -9.25066089630127
    5. '                   ' → logprob: -10.12566089630127
    6. '  
' → logprob: -11.25066089630127
    7. ' 
' → logprob: -11.87566089630127
    8. '           ' → logprob: -11.87566089630127
    9. '       ' → logprob: -12.12566089630127
    10. '    
' → logprob: -12.25066089630127

Token 383: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -3.953082341467962e-05
    2. '                
' → logprob: -11.125039100646973
    3. '                   ' → logprob: -11.375039100646973
    4. '           ' → logprob: -12.750039100646973
    5. '              ' → logprob: -13.125039100646973
    6. '<|end|>' → logprob: -13.750039100646973
    7. '                ' → logprob: -13.875039100646973
    8. '
' → logprob: -14.000039100646973
    9. '```' → logprob: -14.125039100646973
    10. '                       ' → logprob: -14.375039100646973

Token 384: ' found' (ID: 2491)
  Prédit: 'found'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'found' (adapté à ' found') → logprob: -4.723352049040841e-06
    2. ' found' → logprob: -12.500004768371582
    3. 'break' → logprob: -14.000004768371582
    4. 'Found' → logprob: -17.625003814697266
    5. '   ' → logprob: -18.000003814697266
    6. '       ' → logprob: -18.250003814697266
    7. '	found' → logprob: -18.375003814697266
    8. '           ' → logprob: -18.875003814697266
    9. '               ' → logprob: -19.125003814697266
    10. '
' → logprob: -19.500003814697266

Token 385: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.576003909111023
    2. ' =' → logprob: -0.826003909111023
    3. '=True' → logprob: -9.701004028320312
    4. ' ' → logprob: -13.201004028320312
    5. '=False' → logprob: -15.076004028320312
    6. '=true' → logprob: -15.451004028320312
    7. '	' → logprob: -15.576004028320312
    8. '<|end|>' → logprob: -15.701004028320312
    9. ')' → logprob: -16.326004028320312
    10. ' =
' → logprob: -16.701004028320312

Token 386: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0031777136027812958
    2. ' True' → logprob: -5.753177642822266
    3. '   ' → logprob: -19.503177642822266
    4. '=True' → logprob: -19.503177642822266
    5. '(True' → logprob: -19.753177642822266
    6. 'true' → logprob: -21.378177642822266
    7. 'Tr' → logprob: -21.378177642822266
    8. ' ' → logprob: -22.878177642822266
    9. '.True' → logprob: -23.628177642822266
    10. '_true' → logprob: -24.003177642822266

Token 387: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0004788128426298499
    2. '<|end|>' → logprob: -7.875478744506836
    3. '                
' → logprob: -10.625478744506836
    4. '                   ' → logprob: -10.875478744506836
    5. '			' → logprob: -11.250478744506836
    6. '           ' → logprob: -11.250478744506836
    7. '<|end|>' → logprob: -12.125478744506836
    8. '       ' → logprob: -12.375478744506836
    9. '                ' → logprob: -12.625478744506836
    10. '		       ' → logprob: -12.750478744506836

Token 388: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -4.9186317482963204e-05
    2. '<|end|>' → logprob: -10.750049591064453
    3. '       ' → logprob: -11.625049591064453
    4. '			' → logprob: -12.500049591064453
    5. '		       ' → logprob: -12.625049591064453
    6. '           ' → logprob: -12.875049591064453
    7. '                
' → logprob: -12.875049591064453
    8. '              ' → logprob: -13.500049591064453
    9. '                ' → logprob: -13.625049591064453
    10. '                   ' → logprob: -13.750049591064453

Token 389: ' break' (ID: 2338)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0025467700324952602
    2. 'break' (adapté à ' break') → logprob: -6.002546787261963
    3. ' break' → logprob: -9.752546310424805
    4. '			' → logprob: -11.627546310424805
    5. '	break' → logprob: -13.502546310424805
    6. '           ' → logprob: -14.377546310424805
    7. '                   ' → logprob: -14.752546310424805
    8. '       ' → logprob: -15.127546310424805
    9. '	           ' → logprob: -15.127546310424805
    10. '              ' → logprob: -15.377546310424805

Token 390: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 391: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.21413254737854
    2. '
' → logprob: -1.33913254737854
    3. '<|end|>' → logprob: -1.96413254737854
    4. ' 
' → logprob: -2.46413254737854
    5. '   ' → logprob: -2.46413254737854
    6. '  
' → logprob: -2.71413254737854
    7. '    
' → logprob: -3.46413254737854
    8. '        
' → logprob: -3.96413254737854
    9. '   
' → logprob: -6.214132308959961
    10. '\n' → logprob: -6.464132308959961

Token 392: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5595870614051819
    2. '       ' → logprob: -1.434587001800537
    3. ' if' → logprob: -2.059587001800537
    4. 'if' (adapté à ' if') → logprob: -2.809587001800537
    5. '    
' → logprob: -7.184587001800537
    6. '	if' → logprob: -7.684587001800537
    7. '
' → logprob: -8.059587478637695
    8. '        
' → logprob: -8.184587478637695
    9. '	' → logprob: -8.809587478637695
    10. '    ' → logprob: -9.184587478637695

Token 393: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.04860905185341835
    2. 'not' → logprob: -3.0486090183258057
    3. '	not' → logprob: -10.923608779907227
    4. 'found' → logprob: -13.923608779907227
    5. '   ' → logprob: -13.923608779907227
    6. ' found' → logprob: -14.423608779907227
    7. ' ' → logprob: -14.923608779907227
    8. ' ' → logprob: -15.048608779907227
    9. '!' → logprob: -15.673608779907227
    10. '(not' → logprob: -16.048608779907227

Token 394: ' found' (ID: 2491)
  Prédit: ' found'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' found' → logprob: -0.038043100386857986
    2. 'found' → logprob: -3.2880430221557617
    3. '	found' → logprob: -13.788043022155762
    4. '_found' → logprob: -14.663043022155762
    5. ' ' → logprob: -16.288043975830078
    6. ' ' → logprob: -17.663043975830078
    7. 'Found' → logprob: -17.663043975830078
    8. '(found' → logprob: -17.788043975830078
    9. ' find' → logprob: -19.163043975830078
    10. 'f' → logprob: -20.663043975830078

Token 395: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008090144954621792
    2. ':
' → logprob: -4.883090019226074
    3. ':return' → logprob: -8.258090019226074
    4. ' :' → logprob: -8.508090019226074
    5. '   ' → logprob: -12.258090019226074
    6. '       ' → logprob: -12.508090019226074
    7. ':
' → logprob: -12.758090019226074
    8. '           ' → logprob: -12.883090019226074
    9. ' :
' → logprob: -12.883090019226074
    10. ':

' → logprob: -13.008090019226074

Token 396: '           ' (ID: 352)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.4354603886604309
    2. '       ' → logprob: -2.060460329055786
    3. ' return' → logprob: -2.060460329055786
    4. '           ' → logprob: -2.435460329055786
    5. '   ' → logprob: -4.685460567474365
    6. '	return' → logprob: -7.560460567474365
    7. '
' → logprob: -7.810460567474365
    8. ':return' → logprob: -8.310460090637207
    9. '```' → logprob: -9.810460090637207
    10. '{return' → logprob: -9.935460090637207

Token 397: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0040243761613965034
    2. ' return' → logprob: -5.629024505615234
    3. '   ' → logprob: -8.004024505615234
    4. 'print' → logprob: -10.379024505615234
    5. '       ' → logprob: -10.629024505615234
    6. '           ' → logprob: -11.254024505615234
    7. '
' → logprob: -11.629024505615234
    8. '	return' → logprob: -13.004024505615234
    9. 'ans' → logprob: -13.129024505615234
    10. '```' → logprob: -13.129024505615234

Token 398: ' '-' (ID: 17489)
  Prédit: ''-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''-' → logprob: -0.03217281773686409
    2. '"-' → logprob: -3.532172918319702
    3. '-' → logprob: -6.032172679901123
    4. ' '-' → logprob: -11.157173156738281
    5. ' "-' → logprob: -13.532173156738281
    6. ''' → logprob: -13.907173156738281
    7. '"' → logprob: -14.157173156738281
    8. '`' → logprob: -14.532173156738281
    9. '   ' → logprob: -14.782173156738281
    10. '“-' → logprob: -14.782173156738281

Token 399: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ''' → logprob: -18.75
    3. '-' → logprob: -19.25
    4. ' ' → logprob: -19.25
    5. '```' → logprob: -19.875
    6. '<|end|>' → logprob: -20.25
    7. '１' → logprob: -20.3125
    8. '.' → logprob: -20.375
    9. ''''' → logprob: -20.4375
    10. '')' → logprob: -20.5625

Token 400: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.03917284309864044
    2. ''
' → logprob: -3.289172887802124
    3. ' '' → logprob: -7.164172649383545
    4. '   ' → logprob: -8.664173126220703
    5. ' '
' → logprob: -8.789173126220703
    6. '\n' → logprob: -11.414173126220703
    7. '')' → logprob: -11.664173126220703
    8. ')' → logprob: -12.039173126220703
    9. ''
' → logprob: -12.539173126220703
    10. ')'
' → logprob: -14.414173126220703

Token 401: '     ' (ID: 530)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14805868268013
    2. '
' → logprob: -2.0230586528778076
    3. '    
' → logprob: -5.523058891296387
    4. '       ' → logprob: -7.773058891296387
    5. '<|end|>' → logprob: -8.023058891296387
    6. '  
' → logprob: -8.773058891296387
    7. ' 
' → logprob: -9.023058891296387
    8. '        
' → logprob: -9.148058891296387
    9. '\n' → logprob: -9.273058891296387
    10. '   
' → logprob: -9.648058891296387

Token 402: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1551584154367447
    2. '
' → logprob: -2.155158519744873
    3. '<|end|>' → logprob: -4.905158519744873
    4. 'return' → logprob: -5.030158519744873
    5. '    
' → logprob: -5.280158519744873
    6. '  ' → logprob: -5.780158519744873
    7. '   
' → logprob: -6.530158519744873
    8. '\n' → logprob: -6.530158519744873
    9. '  
' → logprob: -6.780158519744873
    10. ' return' → logprob: -7.530158519744873

Token 403: ' Si' (ID: 7832)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.017140930518507957
    2. '   ' → logprob: -5.267140865325928
    3. ' return' → logprob: -5.392140865325928
    4. '```' → logprob: -6.267140865325928
    5. '-' → logprob: -6.642140865325928
    6. '<|end|>' → logprob: -6.892140865325928
    7. '       ' → logprob: -7.517140865325928
    8. '"' → logprob: -7.767140865325928
    9. 'Impossible' → logprob: -7.892140865325928
    10. 'break' → logprob: -8.017141342163086

Token 404: ' aucun' (ID: 41678)
  Prédit: ' impossible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' impossible' → logprob: -0.16058234870433807
    2. ' aucun' → logprob: -2.5355823040008545
    3. ' aucune' → logprob: -2.9105823040008545
    4. '-' → logprob: -5.535582542419434
    5. 'auc' → logprob: -5.535582542419434
    6. 'A' → logprob: -6.410582542419434
    7. ''' → logprob: -6.535582542419434
    8. ' no' → logprob: -6.785582542419434
    9. ' on' → logprob: -7.910582542419434
    10. ' not' → logprob: -8.160582542419434

Token 405: ' saut' (ID: 111480)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.02337673306465149
    2. ' saut' → logprob: -3.898376703262329
    3. 'jump' → logprob: -6.773376941680908
    4. '```' → logprob: -8.39837646484375
    5. 'possible' → logprob: -8.77337646484375
    6. 'sa' → logprob: -8.77337646484375
    7. 'pas' → logprob: -8.89837646484375
    8. ' déplacement' → logprob: -9.02337646484375
    9. '<|end|>' → logprob: -9.02337646484375
    10. 'de' → logprob: -9.39837646484375

Token 406: ' n' (ID: 297)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.7783428430557251
    2. 'possible' → logprob: -1.028342843055725
    3. ' valide' → logprob: -2.7783427238464355
    4. 'n' → logprob: -3.2783427238464355
    5. ' possible' → logprob: -3.2783427238464355
    6. ' n' → logprob: -3.9033427238464355
    7. 'valid' → logprob: -4.1533427238464355
    8. ' valid' → logprob: -5.4033427238464355
    9. ' valable' → logprob: -5.7783427238464355
    10. ' val' → logprob: -7.1533427238464355

Token 407: ''est' (ID: 6616)
  Prédit: ''est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''est' → logprob: -0.0628780797123909
    2. 'a' → logprob: -4.437878131866455
    3. ''a' → logprob: -4.687878131866455
    4. 'n' → logprob: -4.812878131866455
    5. 'e' → logprob: -4.812878131866455
    6. 'u' → logprob: -5.562878131866455
    7. 'est' → logprob: -5.687878131866455
    8. ' n' → logprob: -5.687878131866455
    9. '_possible' → logprob: -5.812878131866455
    10. ''était' → logprob: -6.437878131866455

Token 408: ' possible' (ID: 4149)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.28877997398376465
    2. ' possible' → logprob: -1.4137799739837646
    3. ' trouvé' → logprob: -5.413780212402344
    4. 'tr' → logprob: -5.913780212402344
    5. ' trouv' → logprob: -8.913780212402344
    6. 'poss' → logprob: -9.288780212402344
    7. '_possible' → logprob: -9.788780212402344
    8. 'valid' → logprob: -10.288780212402344
    9. 'pas' → logprob: -11.038780212402344
    10. ' trou' → logprob: -11.288780212402344

Token 409: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7241883873939514
    2. '<|end|>' → logprob: -1.0991883277893066
    3. '
' → logprob: -2.0991883277893066
    4. '       ' → logprob: -3.7241883277893066
    5. ' return' → logprob: -4.849188327789307
    6. '    ' → logprob: -5.599188327789307
    7. 'return' → logprob: -5.599188327789307
    8. ' ' → logprob: -5.599188327789307
    9. '<|end|>' → logprob: -5.724188327789307
    10. '  ' → logprob: -5.849188327789307

Token 410: ' on' (ID: 402)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.18334610760211945
    2. ' return' → logprob: -1.808346152305603
    3. '    ' → logprob: -7.183346271514893
    4. '   ' → logprob: -7.433346271514893
    5. ' ' → logprob: -7.683346271514893
    6. '           ' → logprob: -7.808346271514893
    7. '       ' → logprob: -7.808346271514893
    8. '<|end|>' → logprob: -7.933346271514893
    9. '```' → logprob: -9.183345794677734
    10. '  ' → logprob: -9.433345794677734

Token 411: ' retourne' (ID: 178818)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.24393190443515778
    2. ' return' → logprob: -1.6189318895339966
    3. 'break' → logprob: -4.993931770324707
    4. '   ' → logprob: -5.493931770324707
    5. '           ' → logprob: -5.618931770324707
    6. ' break' → logprob: -6.993931770324707
    7. ' retourne' → logprob: -7.118931770324707
    8. '       ' → logprob: -7.368931770324707
    9. '```' → logprob: -7.618931770324707
    10. 'ret' → logprob: -8.993931770324707

Token 412: ' -' (ID: 533)
  Prédit: ''-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''-' → logprob: -0.00953613966703415
    2. ' '-' → logprob: -5.134536266326904
    3. '-' → logprob: -5.634536266326904
    4. '"-' → logprob: -11.259535789489746
    5. ' -' → logprob: -12.134535789489746
    6. '   ' → logprob: -12.134535789489746
    7. ''' → logprob: -13.384535789489746
    8. ' ' → logprob: -13.884535789489746
    9. '-l' → logprob: -14.759535789489746
    10. '('-' → logprob: -15.009535789489746

Token 413: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0030888281762599945
    2. ''' → logprob: -6.50308895111084
    3. '-' → logprob: -6.50308895111084
    4. ''-' → logprob: -9.37808895111084
    5. ' -' → logprob: -13.50308895111084
    6. '   ' → logprob: -15.25308895111084
    7. '           ' → logprob: -16.628087997436523
    8. ' ' → logprob: -17.253087997436523
    9. '"' → logprob: -17.753087997436523
    10. ''un' → logprob: -18.253087997436523

Token 414: ' immédiatement' (ID: 100743)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03437713533639908
    2. '
' → logprob: -3.784377098083496
    3. '    
' → logprob: -4.784377098083496
    4. '       ' → logprob: -6.909377098083496
    5. '<|end|>' → logprob: -7.409377098083496
    6. '        
' → logprob: -8.284377098083496
    7. '\n' → logprob: -8.534377098083496
    8. 'return' → logprob: -8.909377098083496
    9. '   
' → logprob: -9.159377098083496
    10. '  
' → logprob: -9.284377098083496

Token 415: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6153742671012878
    2. '
' → logprob: -1.1153743267059326
    3. '<|end|>' → logprob: -2.6153743267059326
    4. '    
' → logprob: -3.3653743267059326
    5. '\n' → logprob: -4.4903740882873535
    6. '       ' → logprob: -5.6153740882873535
    7. '  
' → logprob: -6.1153740882873535
    8. '        
' → logprob: -6.6153740882873535
    9. '   
' → logprob: -6.8653740882873535
    10. '<|end|>' → logprob: -7.1153740882873535

Token 416: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03344477713108063
    2. '
' → logprob: -3.533444881439209
    3. '    
' → logprob: -5.783444881439209
    4. '       ' → logprob: -8.78344440460205
    5. '\n' → logprob: -9.40844440460205
    6. 'return' → logprob: -9.40844440460205
    7. ' return' → logprob: -9.53344440460205
    8. '  
' → logprob: -9.78344440460205
    9. '        
' → logprob: -9.78344440460205
    10. '<|end|>' → logprob: -10.40844440460205

Token 417: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20240794122219086
    2. 'return' → logprob: -1.702407956123352
    3. ' return' → logprob: -7.0774078369140625
    4. '    
' → logprob: -9.452407836914062
    5. '
' → logprob: -9.827407836914062
    6. 'if' → logprob: -11.827407836914062
    7. '	return' → logprob: -12.952407836914062
    8. '       ' → logprob: -13.327407836914062
    9. '```' → logprob: -13.702407836914062
    10. '  ' → logprob: -13.827407836914062

Token 418: ' Dern' (ID: 159363)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.03992558270692825
    2. ' return' → logprob: -3.5399255752563477
    3. 'if' → logprob: -5.164925575256348
    4. '   ' → logprob: -6.164925575256348
    5. 'ans' → logprob: -6.914925575256348
    6. ' if' → logprob: -7.664925575256348
    7. 'i' → logprob: -7.789925575256348
    8. '#' → logprob: -8.789925575256348
    9. ' ans' → logprob: -9.539925575256348
    10. 'while' → logprob: -10.039925575256348

Token 419: 'ier' (ID: 905)
  Prédit: 'ière'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ière' → logprob: -0.21887147426605225
    2. 'ier' → logprob: -1.8438714742660522
    3. 'iers' → logprob: -3.968871593475342
    4. 'ières' → logprob: -4.718871593475342
    5. 'i' → logprob: -5.218871593475342
    6. '   ' → logprob: -6.718871593475342
    7. 'iere' → logprob: -7.093871593475342
    8. ' i' → logprob: -7.468871593475342
    9. '_' → logprob: -7.718871593475342
    10. 'ieres' → logprob: -8.093871116638184

Token 420: ' saut' (ID: 111480)
  Prédit: ' saut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' saut' → logprob: -0.6111477017402649
    2. 's' → logprob: -0.8611477017402649
    3. 'if' → logprob: -3.73614764213562
    4. 'jump' → logprob: -5.236147880554199
    5. ' if' → logprob: -6.111147880554199
    6. 'j' → logprob: -7.236147880554199
    7. ' ' → logprob: -7.986147880554199
    8. 'segment' → logprob: -8.7361478805542
    9. ' jump' → logprob: -8.7361478805542
    10. '#' → logprob: -8.8611478805542

Token 421: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3924402892589569
    2. 'j' → logprob: -1.8924403190612793
    3. ' j' → logprob: -2.8924403190612793
    4. ' if' → logprob: -2.8924403190612793
    5. ' ans' → logprob: -3.0174403190612793
    6. 'if' → logprob: -5.392440319061279
    7. 'ans' → logprob: -5.392440319061279
    8. ' for' → logprob: -6.642440319061279
    9. ' M' → logprob: -6.642440319061279
    10. 'M' → logprob: -7.767440319061279

Token 422: ' couvrir' (ID: 197187)
  Prédit: 'atte'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'atte' → logprob: -0.0040830280631780624
    2. 'arr' → logprob: -6.879083156585693
    3. 'aller' → logprob: -6.879083156585693
    4. 're' → logprob: -7.504083156585693
    5. 'N' → logprob: -7.754083156585693
    6. ' atteindre' → logprob: -8.879082679748535
    7. 'sort' → logprob: -9.004082679748535
    8. 'fr' → logprob: -9.004082679748535
    9. 'at' → logprob: -9.129082679748535
    10. 'fin' → logprob: -9.379082679748535

Token 423: ' les' (ID: 1341)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.5092740058898926
    2. ' le' → logprob: -1.8842740058898926
    3. 'la' → logprob: -2.3842740058898926
    4. ' la' → logprob: -2.3842740058898926
    5. 'N' → logprob: -4.134274005889893
    6. 'les' → logprob: -4.509274005889893
    7. 'l' → logprob: -4.634274005889893
    8. 'i' → logprob: -4.884274005889893
    9. ' N' → logprob: -5.384274005889893
    10. ' i' → logprob: -5.384274005889893

Token 424: ' cases' (ID: 7911)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rest' → logprob: -1.1449203491210938
    2. 'positions' → logprob: -1.6449203491210938
    3. 'reste' → logprob: -1.6449203491210938
    4. ' N' → logprob: -2.3949203491210938
    5. 'N' → logprob: -2.7699203491210938
    6. ' rest' → logprob: -3.2699203491210938
    7. ' positions' → logprob: -4.019920349121094
    8. 'éc' → logprob: -4.519920349121094
    9. ' distances' → logprob: -4.769920349121094
    10. 'distance' → logprob: -4.769920349121094

Token 425: ' restantes' (ID: 159241)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.3922176361083984
    2. 'if' → logprob: -1.5172176361083984
    3. 'rest' → logprob: -1.7672176361083984
    4. ' ans' → logprob: -2.1422176361083984
    5. 'while' → logprob: -3.1422176361083984
    6. '   ' → logprob: -3.1422176361083984
    7. 'ans' → logprob: -3.2672176361083984
    8. 'from' → logprob: -4.267217636108398
    9. 'remaining' → logprob: -4.267217636108398
    10. ' while' → logprob: -4.267217636108398

Token 426: ' jusqu' (ID: 21961)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.8581278920173645
    2. '   ' → logprob: -1.1081278324127197
    3. 'if' → logprob: -2.4831278324127197
    4. 'ans' → logprob: -2.8581278324127197
    5. ' ans' → logprob: -2.9831278324127197
    6. ' if' → logprob: -3.6081278324127197
    7. 'for' → logprob: -4.733128070831299
    8. ' for' → logprob: -5.358128070831299
    9. ' j' → logprob: -5.483128070831299
    10. 'i' → logprob: -5.983128070831299

Token 427: ''à' (ID: 33688)
  Prédit: ''à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''à' → logprob: -0.0020109564065933228
    2. ''au' → logprob: -6.502010822296143
    3. 'à' → logprob: -7.752010822296143
    4. '’à' → logprob: -10.0020112991333
    5. 'au' → logprob: -11.1270112991333
    6. 'a' → logprob: -11.8770112991333
    7. ''a' → logprob: -11.8770112991333
    8. ''' → logprob: -12.3770112991333
    9. ' à' → logprob: -15.7520112991333
    10. '’au' → logprob: -16.502010345458984

Token 428: ' la' (ID: 557)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.04920855164527893
    2. 'la' → logprob: -3.174208641052246
    3. ' N' → logprob: -5.799208641052246
    4. ' la' → logprob: -5.799208641052246
    5. 'l' → logprob: -9.924208641052246
    6. 'i' → logprob: -10.424208641052246
    7. 'le' → logprob: -11.174208641052246
    8. 'len' → logprob: -11.674208641052246
    9. '   ' → logprob: -12.049208641052246
    10. 'position' → logprob: -12.174208641052246

Token 429: ' fin' (ID: 2131)
  Prédit: 'fin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fin' → logprob: -0.3066689968109131
    2. 'N' → logprob: -1.556668996810913
    3. ' fin' → logprob: -3.056668996810913
    4. ' N' → logprob: -5.431669235229492
    5. 'n' → logprob: -6.431669235229492
    6. ' ' → logprob: -10.306669235229492
    7. '#' → logprob: -10.306669235229492
    8. 'f' → logprob: -10.431669235229492
    9. '   ' → logprob: -10.431669235229492
    10. 'end' → logprob: -10.806669235229492

Token 430: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47925806045532227
    2. ' if' → logprob: -1.9792580604553223
    3. 'if' → logprob: -2.1042580604553223
    4. 'j' → logprob: -2.6042580604553223
    5. 'ans' → logprob: -3.4792580604553223
    6. ' ans' → logprob: -4.854258060455322
    7. ' j' → logprob: -5.729258060455322
    8. 'for' → logprob: -6.604258060455322
    9. ' for' → logprob: -6.854258060455322
    10. 'i' → logprob: -6.979258060455322

Token 431: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8450279831886292
    2. 'ans' → logprob: -1.8450279235839844
    3. 'if' → logprob: -1.9700279235839844
    4. 'j' → logprob: -2.3450279235839844
    5. ' if' → logprob: -2.7200279235839844
    6. ' ans' → logprob: -2.9700279235839844
    7. 'for' → logprob: -3.3450279235839844
    8. ' for' → logprob: -3.9700279235839844
    9. ' j' → logprob: -6.095027923583984
    10. 'i' → logprob: -6.720027923583984

Token 432: ' ans' (ID: 3345)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.0954638719558716
    2. 'for' → logprob: -1.4704638719558716
    3. 'j' → logprob: -1.9704638719558716
    4. ' if' → logprob: -2.095463752746582
    5. ' for' → logprob: -2.345463752746582
    6. '   ' → logprob: -3.095463752746582
    7. 'ans' (adapté à ' ans') → logprob: -4.220463752746582
    8. ' j' → logprob: -4.845463752746582
    9. ' ans' → logprob: -4.970463752746582
    10. 'i' → logprob: -7.345463752746582

Token 433: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.25368940830230713
    2. ' +=' → logprob: -1.5036894083023071
    3. '=' → logprob: -6.753689289093018
    4. '.strip' → logprob: -8.378689765930176
    5. ' =' → logprob: -9.253689765930176
    6. '.rstrip' → logprob: -9.503689765930176
    7. '+='' → logprob: -9.628689765930176
    8. '+' → logprob: -10.003689765930176
    9. 'strip' → logprob: -10.378689765930176
    10. '+="' → logprob: -10.503689765930176

Token 434: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.0013671426568180323
    2. ' str' → logprob: -6.626367092132568
    3. ''' → logprob: -10.251367568969727
    4. '(str' → logprob: -12.626367568969727
    5. '"' → logprob: -14.001367568969727
    6. '[str' → logprob: -14.876367568969727
    7. 's' → logprob: -15.126367568969727
    8. ''s' → logprob: -15.876367568969727
    9. ' ' → logprob: -15.876367568969727
    10. 'f' → logprob: -16.126367568969727

Token 435: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -4.60414821645827e-06
    2. '(' → logprob: -12.875004768371582
    3. '((' → logprob: -13.875004768371582
    4. 'N' → logprob: -14.000004768371582
    5. '(n' → logprob: -16.125003814697266
    6. '(i' → logprob: -17.000003814697266
    7. '(S' → logprob: -17.125003814697266
    8. '(len' → logprob: -17.250003814697266
    9. '(M' → logprob: -18.000003814697266
    10. '(int' → logprob: -19.875003814697266

Token 436: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6326727271080017
    2. ' -' → logprob: -0.7576727271080017
    3. ')' → logprob: -10.007672309875488
    4. '-i' → logprob: -10.632672309875488
    5. ' ' → logprob: -13.507672309875488
    6. '   ' → logprob: -13.757672309875488
    7. '−' → logprob: -14.757672309875488
    8. ')-' → logprob: -14.757672309875488
    9. '-end' → logprob: -15.945172309875488
    10. 'i' → logprob: -16.195173263549805

Token 437: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.006144811399281025
    2. '1' → logprob: -5.256145000457764
    3. ' i' → logprob: -7.006145000457764
    4. ' ' → logprob: -12.381144523620605
    5. '[i' → logprob: -16.381145477294922
    6. ')i' → logprob: -17.006145477294922
    7. 'I' → logprob: -17.256145477294922
    8. '	i' → logprob: -17.381145477294922
    9. '   ' → logprob: -17.506145477294922
    10. '_i' → logprob: -17.631145477294922

Token 438: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.4192871175473556e-05
    2. ' )' → logprob: -10.750054359436035
    3. ')+' → logprob: -11.250054359436035
    4. ')+'' → logprob: -11.375054359436035
    5. ')
' → logprob: -11.875054359436035
    6. ')`' → logprob: -15.000054359436035
    7. '')' → logprob: -15.500054359436035
    8. '))' → logprob: -16.12505340576172
    9. ')+"' → logprob: -16.37505340576172
    10. '),' → logprob: -16.50005340576172

Token 439: '   ' (ID: 271)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.8213708400726318
    2. '+' → logprob: -1.1963708400726318
    3. '<|end|>' → logprob: -1.5713708400726318
    4. 'return' → logprob: -3.696370840072632
    5. ' return' → logprob: -4.696371078491211
    6. ' ' → logprob: -4.821371078491211
    7. ')' → logprob: -5.946371078491211
    8. ' 
' → logprob: -6.696371078491211
    9. '<|end|>' → logprob: -7.321371078491211
    10. '[' → logprob: -7.571371078491211

Token 440: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.7255691289901733
    2. ' return' → logprob: -1.4755691289901733
    3. '   ' → logprob: -2.100569248199463
    4. '<|end|>' → logprob: -2.350569248199463
    5. '
' → logprob: -3.475569248199463
    6. '	return' → logprob: -4.225569248199463
    7. ' 
' → logprob: -4.475569248199463
    8. ' ' → logprob: -5.475569248199463
    9. '+' → logprob: -6.600569248199463
    10. '<|end|>' → logprob: -6.725569248199463

Token 441: ' On' (ID: 2160)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.001730510382913053
    2. ' return' → logprob: -6.376730442047119
    3. '   ' → logprob: -10.626730918884277
    4. 'ans' → logprob: -13.126730918884277
    5. 'if' → logprob: -13.751730918884277
    6. 'print' → logprob: -14.376730918884277
    7. 'eturn' → logprob: -16.37672996520996
    8. '	return' → logprob: -16.87672996520996
    9. '    
' → logprob: -16.87672996520996
    10. ' ans' → logprob: -17.25172996520996

Token 442: ' inverse' (ID: 53743)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.16201068460941315
    2. ' return' → logprob: -1.912010669708252
    3. 'eturn' → logprob: -7.412010669708252
    4. 'rstrip' → logprob: -7.662010669708252
    5. 'r' → logprob: -8.16201114654541
    6. '
' → logprob: -9.03701114654541
    7. 'ret' → logprob: -10.16201114654541
    8. 'strip' → logprob: -10.16201114654541
    9. 'print' → logprob: -10.53701114654541
    10. '   ' → logprob: -10.78701114654541

Token 443: ' la' (ID: 557)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.2434053272008896
    2. ' ans' → logprob: -2.368405342102051
    3. 'return' → logprob: -2.743405342102051
    4. '(ans' → logprob: -3.118405342102051
    5. ' and' → logprob: -5.118405342102051
    6. '()' → logprob: -6.243405342102051
    7. 'and' → logprob: -6.368405342102051
    8. ' return' → logprob: -6.493405342102051
    9. '	ans' → logprob: -7.743405342102051
    10. 'et' → logprob: -7.868405342102051

Token 444: ' sé' (ID: 7462)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.20927657186985016
    2. ' ans' → logprob: -1.709276556968689
    3. 'return' → logprob: -5.5842766761779785
    4. '(ans' → logprob: -6.8342766761779785
    5. '[::-' → logprob: -7.0842766761779785
    6. ' return' → logprob: -7.7092766761779785
    7. 'answer' → logprob: -8.45927619934082
    8. '_ans' → logprob: -8.45927619934082
    9. 'chaine' → logprob: -8.58427619934082
    10. '[' → logprob: -8.70927619934082

Token 445: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -0.012328336015343666
    2. 'quences' → logprob: -4.512328147888184
    3. 'ance' → logprob: -7.387328147888184
    4. 'q' → logprob: -7.512328147888184
    5. 'que' → logprob: -10.512328147888184
    6. 'qu' → logprob: -11.262328147888184
    7. 'QUENCE' → logprob: -11.387328147888184
    8. 'ence' → logprob: -11.762328147888184
    9. 'rence' → logprob: -11.887328147888184
    10. 'lection' → logprob: -11.887328147888184

Token 446: ' pour' (ID: 1930)
  Prédit: '[::-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[::-' → logprob: -0.3085669279098511
    2. 'ans' → logprob: -1.683566927909851
    3. '.split' → logprob: -3.8085670471191406
    4. ' ans' → logprob: -4.058567047119141
    5. '.' → logprob: -4.308567047119141
    6. '[' → logprob: -4.808567047119141
    7. '.strip' → logprob: -5.058567047119141
    8. ' .' → logprob: -5.933567047119141
    9. '(ans' → logprob: -5.933567047119141
    10. 'return' → logprob: -6.183567047119141

Token 447: ' retrouver' (ID: 53435)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.35698401927948
    2. ' return' → logprob: -1.60698401927948
    3. 'ans' → logprob: -3.2319841384887695
    4. ' retourner' → logprob: -3.2319841384887695
    5. ' ans' → logprob: -4.6069841384887695
    6. 'print' → logprob: -5.3569841384887695
    7. 'final' → logprob: -7.4819841384887695
    8. ''' → logprob: -7.6069841384887695
    9. '(ans' → logprob: -7.6069841384887695
    10. '#' → logprob: -7.9819841384887695

Token 448: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -1.0464805364608765
    2. ' la' → logprob: -1.0464805364608765
    3. 'la' → logprob: -2.671480655670166
    4. '[::-' → logprob: -2.671480655670166
    5. 'ans' → logprob: -2.921480655670166
    6. ' ans' → logprob: -3.796480655670166
    7. 'l' → logprob: -4.046480655670166
    8. ' les' → logprob: -4.171480655670166
    9. 'the' → logprob: -4.671480655670166
    10. ' the' → logprob: -4.921480655670166

Token 449: ''ordre' (ID: 124753)
  Prédit: ''ordre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''ordre' → logprob: -0.1983293890953064
    2. 'a' → logprob: -1.8233294486999512
    3. 'e' → logprob: -4.573329448699951
    4. ''espace' → logprob: -5.948329448699951
    5. ''' → logprob: -6.198329448699951
    6. ''ex' → logprob: -7.323329448699951
    7. ' ordre' → logprob: -7.448329448699951
    8. '’ordre' → logprob: -7.573329448699951
    9. 'ordre' → logprob: -7.823329448699951
    10. ''a' → logprob: -7.948329448699951

Token 450: ' "' (ID: 392)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.06868312507867813
    2. ' return' → logprob: -3.44368314743042
    3. 'ans' → logprob: -3.69368314743042
    4. '[::-' → logprob: -5.31868314743042
    5. '   ' → logprob: -6.19368314743042
    6. ' ans' → logprob: -7.56868314743042
    7. '(ans' → logprob: -7.56868314743042
    8. ',' → logprob: -7.94368314743042
    9. '[' → logprob: -8.193682670593262
    10. 'print' → logprob: -8.443682670593262

Token 451: 'nature' (ID: 170480)
  Prédit: '[::-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[::-' → logprob: -1.2243849039077759
    2. 'ans' → logprob: -1.7243849039077759
    3. 'correct' → logprob: -1.9743849039077759
    4. '[' → logprob: -2.3493847846984863
    5. ' correct' → logprob: -2.5993847846984863
    6. ' naturel' → logprob: -3.0993847846984863
    7. 'inverse' → logprob: -3.3493847846984863
    8. ' ans' → logprob: -3.7243847846984863
    9. 'des' → logprob: -3.7243847846984863
    10. 'normal' → logprob: -3.9743847846984863

Token 452: 'l' (ID: 75)
  Prédit: 'el'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'el' → logprob: -0.09133835136890411
    2. 'l' → logprob: -2.4663383960723877
    3. 'nel' → logprob: -6.966338157653809
    4. 'le' → logprob: -7.091338157653809
    5. '```' → logprob: -8.091338157653809
    6. 'al' → logprob: -8.216338157653809
    7. 'elle' → logprob: -10.716338157653809
    8. 'lle' → logprob: -11.841338157653809
    9. ',' → logprob: -12.341338157653809
    10. 'nelle' → logprob: -12.716338157653809

Token 453: '"' (ID: 1)
  Prédit: '[::-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[::-' → logprob: -0.04245835542678833
    2. '[' → logprob: -3.7924582958221436
    3. ')' → logprob: -5.042458534240723
    4. ' ans' → logprob: -5.417458534240723
    5. '(ans' → logprob: -6.167458534240723
    6. ' des' → logprob: -6.417458534240723
    7. 'ans' → logprob: -7.167458534240723
    8. '.' → logprob: -7.667458534240723
    9. 'des' → logprob: -7.917458534240723
    10. '[:-' → logprob: -8.042458534240723

Token 454: ' (' (ID: 350)
  Prédit: '[::-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[::-' → logprob: -0.8050225973129272
    2. 'return' → logprob: -1.0550225973129272
    3. ' return' → logprob: -2.430022716522217
    4. '   ' → logprob: -3.305022716522217
    5. '[' → logprob: -3.930022716522217
    6. 'ans' → logprob: -4.055022716522217
    7. '
' → logprob: -4.180022716522217
    8. ',' → logprob: -4.805022716522217
    9. '.split' → logprob: -5.180022716522217
    10. ' ans' → logprob: -5.305022716522217

Token 455: 'p' (ID: 79)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.6215432286262512
    2. '[::-' → logprob: -1.6215431690216064
    3. 'ans' → logprob: -1.7465431690216064
    4. ')' → logprob: -3.2465431690216064
    5. ' return' → logprob: -3.3715431690216064
    6. ' ans' → logprob: -4.9965434074401855
    7. ').' → logprob: -5.3715434074401855
    8. '(ans' → logprob: -6.6215434074401855
    9. ')[' → logprob: -7.2465434074401855
    10. ')return' → logprob: -7.3715434074401855

Token 456: 'uis' (ID: 4560)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.9050618410110474
    2. 'ar' → logprob: -1.5300618410110474
    3. 'lus' → logprob: -1.5300618410110474
    4. 'our' → logprob: -2.030061721801758
    5. 'uis' → logprob: -4.905061721801758
    6. 'rem' → logprob: -5.280061721801758
    7. 'ro' → logprob: -5.280061721801758
    8. 'rès' → logprob: -5.780061721801758
    9. 'rés' → logprob: -6.405061721801758
    10. 'res' → logprob: -6.905061721801758

Token 457: 'qu' (ID: 351)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.20398345589637756
    2. '`' → logprob: -3.7039835453033447
    3. '.split' → logprob: -3.9539835453033447
    4. '.strip' → logprob: -4.078983306884766
    5. 'la' → logprob: -4.453983306884766
    6. '[:-' → logprob: -4.578983306884766
    7. 'rstrip' → logprob: -4.578983306884766
    8. 'r' → logprob: -4.828983306884766
    9. '[::-' → logprob: -4.828983306884766
    10. ''' → logprob: -4.828983306884766

Token 458: ''on' (ID: 25812)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.7666510939598083
    2. ' on' → logprob: -1.2666511535644531
    3. 'ans' → logprob: -1.6416511535644531
    4. '(ans' → logprob: -3.641651153564453
    5. 'on' → logprob: -4.391651153564453
    6. ' we' → logprob: -5.266651153564453
    7. ' the' → logprob: -5.641651153564453
    8. ' la' → logprob: -6.641651153564453
    9. ' l' → logprob: -6.641651153564453
    10. ' le' → logprob: -6.891651153564453

Token 459: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -1.5796639919281006
    2. 're' → logprob: -1.5796639919281006
    3. 'a' → logprob: -1.7046639919281006
    4. 'reverse' → logprob: -1.9546639919281006
    5. 'read' → logprob: -1.9546639919281006
    6. '[::-' → logprob: -4.32966423034668
    7. 'return' → logprob: -4.57966423034668
    8. 'inverse' → logprob: -4.70466423034668
    9. ' reverse' → logprob: -4.82966423034668
    10. ' retourne' → logprob: -4.95466423034668

Token 460: ' traité' (ID: 160836)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'acc' → logprob: -1.0658718347549438
    2. 'con' → logprob: -1.3158718347549438
    3. ' accum' → logprob: -1.6908718347549438
    4. ' stock' → logprob: -3.1908717155456543
    5. ' construit' → logprob: -3.1908717155456543
    6. 'stock' → logprob: -3.6908717155456543
    7. 'aj' → logprob: -3.8158717155456543
    8. 'collect' → logprob: -4.565871715545654
    9. 'r' → logprob: -5.565871715545654
    10. ' ajouté' → logprob: -5.690871715545654

Token 461: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.8827229142189026
    2. 'la' → logprob: -1.2577228546142578
    3. ' les' → logprob: -2.507722854614258
    4. 'les' → logprob: -3.007722854614258
    5. ' the' → logprob: -3.382722854614258
    6. ' le' → logprob: -3.382722854614258
    7. 'le' → logprob: -3.507722854614258
    8. ' en' → logprob: -3.882722854614258
    9. 'the' → logprob: -5.257722854614258
    10. 'en' → logprob: -5.382722854614258

Token 462: ' chaîne' (ID: 89288)
  Prédit: ' chaîne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.4878964424133301
    2. 'chaine' → logprob: -1.23789644241333
    3. 'cha' → logprob: -2.48789644241333
    4. 'string' → logprob: -5.23789644241333
    5. ' chaine' → logprob: -5.48789644241333
    6. 's' → logprob: -7.11289644241333
    7. ' string' → logprob: -7.36289644241333
    8. 'chain' → logprob: -7.98789644241333
    9. 'code' → logprob: -8.112895965576172
    10. 'entrée' → logprob: -8.362895965576172

Token 463: ' invers' (ID: 38721)
  Prédit: '[::-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[::-' → logprob: -0.012246032245457172
    2. '[' → logprob: -4.762246131896973
    3. ' à' → logprob: -6.637246131896973
    4. ' en' → logprob: -7.762246131896973
    5. ' [' → logprob: -7.762246131896973
    6. ')' → logprob: -7.887246131896973
    7. ' )' → logprob: -8.387246131896973
    8. ' =' → logprob: -9.387246131896973
    9. ')[' → logprob: -9.387246131896973
    10. ',' → logprob: -9.512246131896973

Token 464: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.018668290227651596
    2. 'é' → logprob: -4.268668174743652
    3. 'e' → logprob: -6.018668174743652
    4. 's' → logprob: -6.518668174743652
    5. 'se' → logprob: -8.268668174743652
    6. 'rée' → logprob: -9.268668174743652
    7. 'cée' → logprob: -9.393668174743652
    8. 'es' → logprob: -10.768668174743652
    9. 'ee' → logprob: -10.893668174743652
    10. 'ed' → logprob: -10.893668174743652

Token 465: ')
' (ID: 446)
  Prédit: ')['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')[' → logprob: -0.43663454055786133
    2. ')' → logprob: -1.9366345405578613
    3. '[::-' → logprob: -2.3116345405578613
    4. ')
' → logprob: -2.4366345405578613
    5. ').' → logprob: -4.061634540557861
    6. '   ' → logprob: -5.811634540557861
    7. '[' → logprob: -7.311634540557861
    8. 'ans' → logprob: -7.686634540557861
    9. 'return' → logprob: -7.936634540557861
    10. ' )' → logprob: -8.311634063720703

Token 466: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.07568469643592834
    2. '   ' → logprob: -3.3256847858428955
    3. '
' → logprob: -3.5756847858428955
    4. ' return' → logprob: -4.825684547424316
    5. '[::-' → logprob: -8.075684547424316
    6. '    
' → logprob: -8.200684547424316
    7. '	return' → logprob: -8.700684547424316
    8. '.split' → logprob: -10.325684547424316
    9. '   
' → logprob: -10.450684547424316
    10. '\n' → logprob: -10.700684547424316

Token 467: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.01428467407822609
    2. 'ans' → logprob: -5.014284610748291
    3. '[::-' → logprob: -5.264284610748291
    4. ' return' → logprob: -6.139284610748291
    5. '.split' → logprob: -10.01428508758545
    6. 'print' → logprob: -10.01428508758545
    7. 'split' → logprob: -10.26428508758545
    8. ' ans' → logprob: -10.38928508758545
    9. 'answer' → logprob: -11.01428508758545
    10. '[' → logprob: -11.51428508758545

Token 468: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.06979658454656601
    2. 'ans' → logprob: -3.319796562194824
    3. ' ans' → logprob: -4.069796562194824
    4. ' '' → logprob: -4.319796562194824
    5. '"' → logprob: -7.569796562194824
    6. '(ans' → logprob: -8.944796562194824
    7. ''an' → logprob: -9.944796562194824
    8. ' ' → logprob: -10.194796562194824
    9. ''s' → logprob: -10.319796562194824
    10. '	ans' → logprob: -10.319796562194824

Token 469: ' '.' (ID: 12662)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.012118023820221424
    2. 'ans' → logprob: -4.762117862701416
    3. '"' → logprob: -6.262117862701416
    4. ' '' → logprob: -6.637117862701416
    5. ' ans' → logprob: -9.012118339538574
    6. '(ans' → logprob: -10.512118339538574
    7. '''.' → logprob: -10.637118339538574
    8. ''.' → logprob: -10.887118339538574
    9. '[::-' → logprob: -10.887118339538574
    10. ''-' → logprob: -11.387118339538574

Token 470: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -2.176947600673884e-05
    2. 'strip' → logprob: -10.750021934509277
    3. 'jo' → logprob: -15.875021934509277
    4. 'split' → logprob: -16.12502098083496
    5. ' join' → logprob: -16.87502098083496
    6. ''.' → logprob: -18.75002098083496
    7. '(join' → logprob: -19.37502098083496
    8. 'j' → logprob: -19.87502098083496
    9. 'trim' → logprob: -20.00002098083496
    10. '.join' → logprob: -20.00002098083496

Token 471: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.10101935267448425
    2. 'ans' → logprob: -2.3510193824768066
    3. '(re' → logprob: -7.351019382476807
    4. 're' → logprob: -8.726018905639648
    5. '(sorted' → logprob: -12.601018905639648
    6. '(list' → logprob: -13.851018905639648
    7. 'map' → logprob: -14.101018905639648
    8. 'list' → logprob: -14.226018905639648
    9. 'sorted' → logprob: -14.601018905639648
    10. '(map' → logprob: -14.726018905639648

Token 472: '.split' (ID: 10347)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.43922340869903564
    2. '.strip' → logprob: -1.4392234086990356
    3. '.split' → logprob: -2.189223289489746
    4. '[::-' → logprob: -5.314223289489746
    5. '.' → logprob: -7.564223289489746
    6. ' .' → logprob: -7.814223289489746
    7. '.rstrip' → logprob: -8.314223289489746
    8. '[:-' → logprob: -9.189223289489746
    9. '()[' → logprob: -9.439223289489746
    10. ').' → logprob: -10.814223289489746

Token 473: '()[' (ID: 20778)
  Prédit: '()['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()[' → logprob: -9.829823102336377e-05
    2. '()' → logprob: -9.62509822845459
    3. '())' → logprob: -10.50009822845459
    4. '('' → logprob: -13.25009822845459
    5. '[::-' → logprob: -13.62509822845459
    6. '(' → logprob: -14.25009822845459
    7. '()][' → logprob: -15.50009822845459
    8. '().__' → logprob: -15.87509822845459
    9. '(None' → logprob: -16.000099182128906
    10. '()`' → logprob: -16.625099182128906

Token 474: '::-' (ID: 96612)
  Prédit: '[::-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[::-' → logprob: -0.0010471008718013763
    2. ')[' → logprob: -7.376047134399414
    3. '[' → logprob: -8.501047134399414
    4. '][' → logprob: -9.376047134399414
    5. '::-' → logprob: -9.626047134399414
    6. '()[' → logprob: -9.751047134399414
    7. ' [' → logprob: -12.376047134399414
    8. '[
' → logprob: -13.876047134399414
    9. '   ' → logprob: -14.126047134399414
    10. '[-' → logprob: -15.001047134399414

Token 475: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1888679839321412e-05
    2. '-' → logprob: -10.875021934509277
    3. ' ' → logprob: -14.500021934509277
    4. '])' → logprob: -14.500021934509277
    5. '[::-' → logprob: -14.625021934509277
    6. '))' → logprob: -15.000021934509277
    7. '```' → logprob: -15.250021934509277
    8. 'er' → logprob: -15.250021934509277
    9. '``' → logprob: -16.37502098083496
    10. ']))' → logprob: -16.62502098083496

Token 476: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.6240566083070007e-06
    2. '))' → logprob: -14.375001907348633
    3. ' )' → logprob: -15.250001907348633
    4. '])' → logprob: -15.500001907348633
    5. ')`' → logprob: -16.000001907348633
    6. '())' → logprob: -16.125001907348633
    7. ')
' → logprob: -17.000001907348633
    8. '})' → logprob: -17.000001907348633
    9. ')return' → logprob: -17.125001907348633
    10. '）' → logprob: -17.250001907348633

Token 477: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 478: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.31326526403427124
    2. 'main' → logprob: -1.313265323638916
    3. 'solve' → logprob: -13.813264846801758
    4. '__' → logprob: -14.813264846801758
    5. 'read' → logprob: -14.813264846801758
    6. ' solve' → logprob: -14.813264846801758
    7. ' test' → logprob: -15.313264846801758
    8. 'print' → logprob: -15.313264846801758
    9. 'run' → logprob: -15.563264846801758
    10. 'test' → logprob: -15.563264846801758

Token 479: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -3.5716304410016164e-05
    2. '():
' → logprob: -11.000035285949707
    3. ' ():' → logprob: -11.375035285949707
    4. '()' → logprob: -12.250035285949707
    5. '()>' → logprob: -13.500035285949707
    6. '():
' → logprob: -14.625035285949707
    7. '(' → logprob: -15.000035285949707
    8. '()">' → logprob: -15.125035285949707
    9. '():

' → logprob: -16.750036239624023
    10. ':' → logprob: -16.875036239624023

Token 480: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01928330399096012
    2. 'N' → logprob: -4.019283294677734
    3. ' N' → logprob: -7.769283294677734
    4. '```' → logprob: -8.269283294677734
    5. 'n' → logprob: -9.019283294677734
    6. '	N' → logprob: -9.394283294677734
    7. 'def' → logprob: -9.644283294677734
    8. ' ' → logprob: -10.269283294677734
    9. '(N' → logprob: -10.394283294677734
    10. '  ' → logprob: -10.394283294677734

Token 481: ' """
' (ID: 7037)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0001940040965564549
    2. '   ' → logprob: -8.75019359588623
    3. ' N' → logprob: -10.25019359588623
    4. '	N' → logprob: -16.000194549560547
    5. ' ' → logprob: -19.125194549560547
    6. 'n' → logprob: -19.375194549560547
    7. 'import' → logprob: -19.625194549560547
    8. '  ' → logprob: -20.125194549560547
    9. 'if' → logprob: -20.625194549560547
    10. '```' → logprob: -20.875194549560547

Token 482: '   ' (ID: 271)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.02494628168642521
    2. '   ' → logprob: -3.7749462127685547
    3. ' N' → logprob: -6.399946212768555
    4. 'if' → logprob: -10.399946212768555
    5. 'import' → logprob: -13.399946212768555
    6. ' ' → logprob: -13.399946212768555
    7. '	N' → logprob: -13.399946212768555
    8. ' if' → logprob: -13.899946212768555
    9. 'n' → logprob: -14.274946212768555
    10. '  ' → logprob: -14.399946212768555

Token 483: ' Point' (ID: 9971)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.44300925731658936
    2. ' N' → logprob: -1.1930092573165894
    3. '   ' → logprob: -2.943009376525879
    4. '#' → logprob: -7.693009376525879
    5. 'import' → logprob: -7.943009376525879
    6. ' for' → logprob: -8.193009376525879
    7. 'n' → logprob: -8.318009376525879
    8. ' n' → logprob: -8.943009376525879
    9. 'for' → logprob: -9.443009376525879
    10. ' import' → logprob: -9.818009376525879

Token 484: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.049862466752529144
    2. 'd' → logprob: -3.0498623847961426
    3. ' ' → logprob: -7.924862384796143
    4. ' de' → logprob: -8.5498628616333
    5. '	d' → logprob: -8.7998628616333
    6. '   ' → logprob: -8.9248628616333
    7. ' ' → logprob: -9.1748628616333
    8. 'entrée' → logprob: -9.6748628616333
    9. '  ' → logprob: -9.9248628616333
    10. '_d' → logprob: -10.1748628616333

Token 485: ''entrée' (ID: 115820)
  Prédit: 'entrée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'entrée' → logprob: -0.02990078739821911
    2. ''entrée' → logprob: -3.5299007892608643
    3. 'entr' → logprob: -9.029900550842285
    4. 'entry' → logprob: -11.279900550842285
    5. 'ent' → logprob: -11.779900550842285
    6. '’entrée' → logprob: -12.154900550842285
    7. 'entrant' → logprob: -13.029900550842285
    8. 'entra' → logprob: -14.279900550842285
    9. ' entrée' → logprob: -14.404900550842285
    10. '_' → logprob: -14.404900550842285

Token 486: ' du' (ID: 1462)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7141830325126648
    2. '   ' → logprob: -1.4641830921173096
    3. ' de' → logprob: -2.2141830921173096
    4. 'def' → logprob: -2.5891830921173096
    5. 'de' → logprob: -3.3391830921173096
    6. ' du' → logprob: -3.8391830921173096
    7. ':
' → logprob: -4.5891828536987305
    8. ' :' → logprob: -5.2141828536987305
    9. '    
' → logprob: -5.3391828536987305
    10. 'du' → logprob: -6.2141828536987305

Token 487: ' programme' (ID: 18190)
  Prédit: 'programme'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'programme' → logprob: -0.051459163427352905
    2. 'program' → logprob: -3.0514590740203857
    3. ' programme' → logprob: -6.176459312438965
    4. 'script' → logprob: -7.426459312438965
    5. 'programma' → logprob: -9.176459312438965
    6. 'code' → logprob: -10.426459312438965
    7. ' program' → logprob: -11.051459312438965
    8. 'programm' → logprob: -11.051459312438965
    9. ' script' → logprob: -11.426459312438965
    10. 'rogram' → logprob: -11.926459312438965

Token 488: '.
' (ID: 558)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7979365587234497
    2. '():' → logprob: -0.7979365587234497
    3. '   ' → logprob: -2.67293643951416
    4. '():
' → logprob: -4.67293643951416
    5. '()' → logprob: -5.04793643951416
    6. 'def' → logprob: -5.04793643951416
    7. ' :' → logprob: -5.92293643951416
    8. '):' → logprob: -6.54793643951416
    9. ':
' → logprob: -6.92293643951416
    10. '<|end|>' → logprob: -7.17293643951416

Token 489: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.017356641590595245
    2. 'def' → logprob: -5.017356872558594
    3. ':' → logprob: -5.142356872558594
    4. '():' → logprob: -6.017356872558594
    5. '```' → logprob: -7.642356872558594
    6. '
' → logprob: -7.767356872558594
    7. '    
' → logprob: -7.892356872558594
    8. ')' → logprob: -8.267356872558594
    9. '()' → logprob: -8.392356872558594
    10. '):' → logprob: -9.017356872558594

Token 490: ' Lit' (ID: 45595)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00021069261129014194
    2. '```' → logprob: -9.000210762023926
    3. '    
' → logprob: -10.375210762023926
    4. 'def' → logprob: -10.500210762023926
    5. 'N' → logprob: -10.875210762023926
    6. ' N' → logprob: -12.375210762023926
    7. '
' → logprob: -12.625210762023926
    8. 'import' → logprob: -15.125210762023926
    9. 'n' → logprob: -15.125210762023926
    10. '    ' → logprob: -15.250210762023926

Token 491: ' les' (ID: 1341)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.007604612503200769
    2. '   ' → logprob: -5.132604598999023
    3. ' ()' → logprob: -7.132604598999023
    4. ' les' → logprob: -8.882604598999023
    5. 'input' → logprob: -9.632604598999023
    6. ' l' → logprob: -9.757604598999023
    7. ' la' → logprob: -9.757604598999023
    8. '()<' → logprob: -9.757604598999023
    9. 'import' → logprob: -9.882604598999023
    10. '():' → logprob: -10.132604598999023

Token 492: ' entr' (ID: 7072)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.622570276260376
    2. 'import' → logprob: -1.372570276260376
    3. 'N' → logprob: -2.747570276260376
    4. ' N' → logprob: -3.122570276260376
    5. 'd' → logprob: -4.372570037841797
    6. ' inputs' → logprob: -4.497570037841797
    7. ' données' → logprob: -4.622570037841797
    8. 'param' → logprob: -4.747570037841797
    9. 'inputs' → logprob: -4.872570037841797
    10. ' paramètres' → logprob: -5.122570037841797

Token 493: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.0004223323194310069
    2. 'ée' → logprob: -7.875422477722168
    3. 'ees' → logprob: -10.500422477722168
    4. 'es' → logprob: -12.375422477722168
    5. 'êtes' → logprob: -12.750422477722168
    6. 'és' → logprob: -12.875422477722168
    7. 'é' → logprob: -13.250422477722168
    8. '```' → logprob: -14.250422477722168
    9. 'ies' → logprob: -14.750422477722168
    10. '__' → logprob: -15.375422477722168

Token 494: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015920575708150864
    2. ',' → logprob: -4.265920639038086
    3. ':' → logprob: -6.640920639038086
    4. 'import' → logprob: -8.890920639038086
    5. '    
' → logprob: -9.390920639038086
    6. '```' → logprob: -10.265920639038086
    7. ',
' → logprob: -10.390920639038086
    8. '()' → logprob: -10.515920639038086
    9. '.' → logprob: -10.765920639038086
    10. ' ' → logprob: -10.890920639038086

Token 495: ' calc' (ID: 25691)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06476055085659027
    2. ' calc' → logprob: -3.939760446548462
    3. ' N' → logprob: -4.814760684967041
    4. 'calcul' → logprob: -4.814760684967041
    5. 'cal' → logprob: -4.939760684967041
    6. ' appelle' → logprob: -5.689760684967041
    7. '    
' → logprob: -5.939760684967041
    8. ' calculates' → logprob: -6.189760684967041
    9. 'calc' → logprob: -6.439760684967041
    10. ' calcul' → logprob: -6.564760684967041

Token 496: 'ule' (ID: 1601)
  Prédit: 'ule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ule' → logprob: -0.0004926258116029203
    2. 'û' → logprob: -8.750493049621582
    3. 'ulte' → logprob: -9.375493049621582
    4. 'ul' → logprob: -9.750493049621582
    5. 'ulture' → logprob: -10.500493049621582
    6. 'ute' → logprob: -10.625493049621582
    7. 'ulé' → logprob: -10.750493049621582
    8. 'cule' → logprob: -11.125493049621582
    9. 'ult' → logprob: -11.125493049621582
    10. 'ôle' → logprob: -11.500493049621582

Token 497: ' les' (ID: 1341)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6557400226593018
    2. ' les' → logprob: -1.0307400226593018
    3. ' la' → logprob: -3.4057400226593018
    4. 'les' → logprob: -3.5307400226593018
    5. ' le' → logprob: -4.155739784240723
    6. '_' → logprob: -4.405739784240723
    7. 'le' → logprob: -4.655739784240723
    8. ',' → logprob: -5.155739784240723
    9. ' ' → logprob: -5.155739784240723
    10. ' et' → logprob: -5.530739784240723

Token 498: ' sa' (ID: 880)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0172886922955513
    2. '_' → logprob: -5.392288684844971
    3. 'pas' → logprob: -5.517288684844971
    4. ' sa' → logprob: -5.642288684844971
    5. '   ' → logprob: -7.017288684844971
    6. ' pas' → logprob: -7.142288684844971
    7. ' ' → logprob: -7.642288684844971
    8. ' ' → logprob: -7.642288684844971
    9. '_s' → logprob: -7.767288684844971
    10. '	s' → logprob: -8.142289161682129

Token 499: 'uts' (ID: 4639)
  Prédit: 'uts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uts' → logprob: -8.41866585687967e-06
    2. 'u' → logprob: -12.625008583068848
    3. 'pts' → logprob: -13.750008583068848
    4. '
' → logprob: -13.875008583068848
    5. 'ut' → logprob: -15.125008583068848
    6. 'lts' → logprob: -15.125008583068848
    7. 'ps' → logprob: -15.375008583068848
    8. '

' → logprob: -15.625008583068848
    9. 'ts' → logprob: -15.875008583068848
    10. '{' → logprob: -15.875008583068848

Token 500: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22766336798667908
    2. ',' → logprob: -1.6026633977890015
    3. ' et' → logprob: -6.227663516998291
    4. 'et' → logprob: -8.852663040161133
    5. ' ,' → logprob: -9.977663040161133
    6. ' and' → logprob: -10.352663040161133
    7. ' ' → logprob: -11.227663040161133
    8. '  ' → logprob: -12.102663040161133
    9. '    
' → logprob: -12.102663040161133
    10. 'and' → logprob: -12.102663040161133

Token 501: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0061489581130445
    2. 'et' → logprob: -5.631148815155029
    3. ' et' → logprob: -6.631148815155029
    4. ' and' → logprob: -7.256148815155029
    5. ' puis' → logprob: -9.006149291992188
    6. 'and' → logprob: -9.131149291992188
    7. 'p' → logprob: -9.381149291992188
    8. '    
' → logprob: -9.506149291992188
    9. '   ' → logprob: -10.256149291992188
    10. '  ' → logprob: -11.131149291992188

Token 502: ' affiche' (ID: 127479)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.4242658019065857
    2. '   ' → logprob: -1.9242658615112305
    3. 'print' → logprob: -2.2992658615112305
    4. ' affiche' → logprob: -2.6742658615112305
    5. ' imprime' → logprob: -3.6742658615112305
    6. ' les' → logprob: -6.0492658615112305
    7. 'aff' → logprob: -6.1742658615112305
    8. ' prints' → logprob: -8.04926586151123
    9. '_print' → logprob: -9.67426586151123
    10. ' impr' → logprob: -10.04926586151123

Token 503: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.45606955885887146
    2. '()' → logprob: -1.7060695886611938
    3. ' le' → logprob: -2.5810694694519043
    4. '(' → logprob: -3.2060694694519043
    5. '   ' → logprob: -3.3310694694519043
    6. 'le' → logprob: -4.581069469451904
    7. ' les' → logprob: -4.706069469451904
    8. '(l' → logprob: -5.581069469451904
    9. 'la' → logprob: -6.206069469451904
    10. 'les' → logprob: -6.831069469451904

Token 504: ' solution' (ID: 7578)
  Prédit: 'rés'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rés' → logprob: -0.04045657068490982
    2. 'result' → logprob: -4.290456771850586
    3. 'solution' → logprob: -4.415456771850586
    4. 'ré' → logprob: -4.540456771850586
    5. ' solution' → logprob: -6.665456771850586
    6. 'r' → logprob: -7.040456771850586
    7. 's' → logprob: -7.790456771850586
    8. ' résultat' → logprob: -8.415456771850586
    9. '   ' → logprob: -9.290456771850586
    10. ' result' → logprob: -10.290456771850586

Token 505: '.
' (ID: 558)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.7064878344535828
    2. '():' → logprob: -1.3314878940582275
    3. '   ' → logprob: -1.8314878940582275
    4. ':' → logprob: -2.8314878940582275
    5. '():
' → logprob: -4.206487655639648
    6. '()
' → logprob: -5.706487655639648
    7. '):' → logprob: -6.706487655639648
    8. ')' → logprob: -6.956487655639648
    9. '
' → logprob: -7.081487655639648
    10. ':
' → logprob: -7.706487655639648

Token 506: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04488791525363922
    2. ':' → logprob: -4.419888019561768
    3. '
' → logprob: -4.544888019561768
    4. '```' → logprob: -4.794888019561768
    5. '<|end|>' → logprob: -5.544888019561768
    6. '    
' → logprob: -5.794888019561768
    7. '  
' → logprob: -6.669888019561768
    8. ')' → logprob: -6.794888019561768
    9. 'def' → logprob: -7.294888019561768
    10. '():' → logprob: -7.544888019561768

Token 507: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004303953144699335
    2. 'if' → logprob: -6.379303932189941
    3. '    
' → logprob: -6.379303932189941
    4. '
' → logprob: -8.379303932189941
    5. '```' → logprob: -8.629303932189941
    6. '  
' → logprob: -9.379303932189941
    7. '<|end|>' → logprob: -9.754303932189941
    8. '  ' → logprob: -10.129303932189941
    9. 'n' → logprob: -10.504303932189941
    10. '{' → logprob: -10.504303932189941

Token 508: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001148313982412219
    2. 'if' → logprob: -7.001148223876953
    3. 'N' → logprob: -8.751148223876953
    4. '    
' → logprob: -10.001148223876953
    5. '	N' → logprob: -11.251148223876953
    6. ' if' → logprob: -12.751148223876953
    7. '  ' → logprob: -12.876148223876953
    8. '```' → logprob: -13.126148223876953
    9. '
' → logprob: -13.251148223876953
    10. 'n' → logprob: -13.251148223876953

Token 509: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' (adapté à ' N') → logprob: -2.5776860184123507e-06
    2. '   ' → logprob: -13.00000286102295
    3. ' N' → logprob: -15.25000286102295
    4. 'if' → logprob: -16.625001907348633
    5. '	N' → logprob: -20.625001907348633
    6. '```' → logprob: -20.625001907348633
    7. 'import' → logprob: -22.000001907348633
    8. 'n' → logprob: -22.500001907348633
    9. ' ' → logprob: -22.625001907348633
    10. '    
' → logprob: -22.875001907348633

Token 510: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001612267515156418
    2. ',M' → logprob: -8.750161170959473
    3. ' ,' → logprob: -12.875161170959473
    4. ',N' → logprob: -17.00016212463379
    5. ',
' → logprob: -17.50016212463379
    6. '=' → logprob: -17.75016212463379
    7. ',m' → logprob: -18.75016212463379
    8. 'M' → logprob: -19.00016212463379
    9. '   ' → logprob: -19.37516212463379
    10. ',S' → logprob: -19.62516212463379

Token 511: ' M' (ID: 391)
  Prédit: ' M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' M' → logprob: -0.06217113509774208
    2. 'M' → logprob: -2.812171220779419
    3. '<|end|>' → logprob: -8.81217098236084
    4. ' ' → logprob: -10.18717098236084
    5. ',' → logprob: -11.81217098236084
    6. ' ' → logprob: -12.43717098236084
    7. '  ' → logprob: -13.06217098236084
    8. ')' → logprob: -14.43717098236084
    9. '    ' → logprob: -14.56217098236084
    10. ' ,' → logprob: -14.93717098236084

Token 512: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002190233441069722
    2. '=' → logprob: -6.252190113067627
    3. ' =' → logprob: -8.252190589904785
    4. ' ,' → logprob: -14.377190589904785
    5. ',M' → logprob: -16.00218963623047
    6. ',N' → logprob: -16.87718963623047
    7. '،' → logprob: -17.75218963623047
    8. '   ' → logprob: -17.75218963623047
    9. '=sys' → logprob: -18.25218963623047
    10. '<|end|>' → logprob: -18.25218963623047

Token 513: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.011047814972698689
    2. ' S' → logprob: -4.511047840118408
    3. '=S' → logprob: -19.26104736328125
    4. '	S' → logprob: -19.38604736328125
    5. '_S' → logprob: -19.51104736328125
    6. ' ' → logprob: -19.51104736328125
    7. 's' → logprob: -19.88604736328125
    8. ' =' → logprob: -20.51104736328125
    9. '*S' → logprob: -20.63604736328125
    10. '  ' → logprob: -20.76104736328125

Token 514: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07889077812433243
    2. ' =' → logprob: -2.578890800476074
    3. ',' → logprob: -14.328890800476074
    4. '=sys' → logprob: -15.953890800476074
    5. ')' → logprob: -16.078889846801758
    6. '＝' → logprob: -16.953889846801758
    7. '   ' → logprob: -16.953889846801758
    8. '<|end|>' → logprob: -17.203889846801758
    9. '=input' → logprob: -17.953889846801758
    10. '=N' → logprob: -17.953889846801758

Token 515: ' read' (ID: 1729)
  Prédit: ' read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.3868710398674011
    2. 'read' → logprob: -1.136871099472046
    3. '	read' → logprob: -17.761871337890625
    4. '(read' → logprob: -19.761871337890625
    5. '_read' → logprob: -21.386871337890625
    6. '.read' → logprob: -22.386871337890625
    7. 're' → logprob: -23.636871337890625
    8. 'Read' → logprob: -24.136871337890625
    9. '   ' → logprob: -24.136871337890625
    10. ' reading' → logprob: -24.261871337890625

Token 516: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.029881587252020836
    2. '_' → logprob: -3.529881477355957
    3. '_inputs' → logprob: -9.029881477355957
    4. 'input' → logprob: -13.154881477355957
    5. '_output' → logprob: -13.529881477355957
    6. '_line' → logprob: -13.779881477355957
    7. '_Input' → logprob: -13.904881477355957
    8. '(' → logprob: -14.154881477355957
    9. '_
' → logprob: -14.404881477355957
    10. ' _' → logprob: -14.404881477355957

Token 517: '()
' (ID: 1234)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06290450692176819
    2. '   ' → logprob: -3.0629045963287354
    3. '<|end|>' → logprob: -4.562904357910156
    4. '<|end|>' → logprob: -7.187904357910156
    5. '    
' → logprob: -7.312904357910156
    6. '  
' → logprob: -7.437904357910156
    7. '
' → logprob: -7.687904357910156
    8. ')' → logprob: -7.687904357910156
    9. 'def' → logprob: -8.812904357910156
    10. ' 
' → logprob: -9.187904357910156

Token 518: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7601755857467651
    2. 'result' → logprob: -0.7601755857467651
    3. ' result' → logprob: -2.7601757049560547
    4. 'print' → logprob: -7.010175704956055
    5. '
' → logprob: -8.385175704956055
    6. ' print' → logprob: -9.385175704956055
    7. 'res' → logprob: -9.635175704956055
    8. 'solution' → logprob: -10.010175704956055
    9. 'output' → logprob: -10.135175704956055
    10. ' solution' → logprob: -10.135175704956055

Token 519: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -0.016846762970089912
    2. 'steps' → logprob: -4.766846656799316
    3. 'print' → logprob: -5.266846656799316
    4. 'res' → logprob: -6.016846656799316
    5. 'answer' → logprob: -7.766846656799316
    6. ' result' → logprob: -9.391846656799316
    7. 'solution' → logprob: -10.516846656799316
    8. '   ' → logprob: -10.641846656799316
    9. 'ans' → logprob: -11.141846656799316
    10. 'output' → logprob: -11.391846656799316

Token 520: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10020720958709717
    2. '=' → logprob: -2.3502073287963867
    3. ' ' → logprob: -16.10020637512207
    4. '_' → logprob: -16.22520637512207
    5. ')' → logprob: -16.35020637512207
    6. ',' → logprob: -16.60020637512207
    7. ' =
' → logprob: -16.85020637512207
    8. ' ' → logprob: -17.10020637512207
    9. '	' → logprob: -17.47520637512207
    10. '＝' → logprob: -17.60020637512207

Token 521: ' calculate' (ID: 17950)
  Prédit: 'calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calculate' → logprob: -0.0004306692280806601
    2. ' calculate' → logprob: -7.750430583953857
    3. 'calc' → logprob: -22.500431060791016
    4. 'compute' → logprob: -22.875431060791016
    5. '.calculate' → logprob: -23.125431060791016
    6. 'calcul' → logprob: -24.500431060791016
    7. 'Calculate' → logprob: -24.875431060791016
    8. 'alculate' → logprob: -26.125431060791016
    9. 'c' → logprob: -26.875431060791016
    10. 'cal' → logprob: -27.625431060791016

Token 522: '_steps' (ID: 52120)
  Prédit: '_steps'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_steps' → logprob: -1.9361264946837764e-07
    2. 'steps' → logprob: -16.125
    3. '_' → logprob: -16.875
    4. '```' → logprob: -18.5
    5. '_step' → logprob: -18.625
    6. '_results' → logprob: -19.125
    7. '_
' → logprob: -19.5
    8. 'Steps' → logprob: -19.75
    9. '_s' → logprob: -20.0
    10. '\' → logprob: -21.0

Token 523: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0003361774142831564
    2. '(' → logprob: -8.000336647033691
    3. '(
' → logprob: -14.500336647033691
    4. ' (' → logprob: -16.125335693359375
    5. '   ' → logprob: -17.375335693359375
    6. '((' → logprob: -18.000335693359375
    7. '(
' → logprob: -18.125335693359375
    8. '```' → logprob: -18.125335693359375
    9. '(n' → logprob: -18.500335693359375
    10. '()' → logprob: -18.625335693359375

Token 524: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002981624274980277
    2. ',N' → logprob: -8.250298500061035
    3. '(N' → logprob: -10.750298500061035
    4. ' ,' → logprob: -11.250298500061035
    5. ',
' → logprob: -14.000298500061035
    6. ')' → logprob: -14.250298500061035
    7. '(' → logprob: -14.625298500061035
    8. '   ' → logprob: -15.375298500061035
    9. 'N' → logprob: -15.500298500061035
    10. '```' → logprob: -17.50029754638672

Token 525: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.0001867326645879075
    2. ' M' → logprob: -8.625186920166016
    3. 'S' → logprob: -11.875186920166016
    4. 'N' → logprob: -16.000186920166016
    5. ')' → logprob: -17.375186920166016
    6. 'len' → logprob: -17.625186920166016
    7. ' ' → logprob: -18.000186920166016
    8. '   ' → logprob: -18.125186920166016
    9. '```' → logprob: -18.750186920166016
    10. 'm' → logprob: -20.000186920166016

Token 526: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.5120287066092715e-05
    2. ')' → logprob: -11.000035285949707
    3. ',S' → logprob: -12.125035285949707
    4. '   ' → logprob: -12.375035285949707
    5. '(N' → logprob: -12.375035285949707
    6. ' ,' → logprob: -13.125035285949707
    7. ',N' → logprob: -13.250035285949707
    8. '(' → logprob: -15.125035285949707
    9. '(S' → logprob: -15.375035285949707
    10. ',
' → logprob: -15.625035285949707

Token 527: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -5.836499985889532e-05
    2. ' S' → logprob: -9.7500581741333
    3. '   ' → logprob: -17.625059127807617
    4. '	S' → logprob: -19.875059127807617
    5. '(S' → logprob: -19.875059127807617
    6. ')' → logprob: -20.000059127807617
    7. '  ' → logprob: -20.125059127807617
    8. ' ' → logprob: -20.375059127807617
    9. 's' → logprob: -20.500059127807617
    10. '"S' → logprob: -21.125059127807617

Token 528: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3134704828262329
    2. ')
' → logprob: -1.313470482826233
    3. '   ' → logprob: -8.563470840454102
    4. ')
' → logprob: -11.438470840454102
    5. '()' → logprob: -13.313470840454102
    6. ' )
' → logprob: -13.563470840454102
    7. '()
' → logprob: -13.688470840454102
    8. '())
' → logprob: -13.938470840454102
    9. ' )' → logprob: -13.938470840454102
    10. '())' → logprob: -14.938470840454102

Token 529: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1602383404970169
    2. 'print' → logprob: -1.9102383852005005
    3. '```' → logprob: -12.160238265991211
    4. ' print' → logprob: -12.410238265991211
    5. '    
' → logprob: -12.910238265991211
    6. '
' → logprob: -13.285238265991211
    7. '	print' → logprob: -14.410238265991211
    8. '(print' → logprob: -17.03523826599121
    9. '`' → logprob: -17.41023826599121
    10. '<|end|>' → logprob: -18.16023826599121

Token 530: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -5.9153885558771435e-06
    2. '   ' → logprob: -12.250005722045898
    3. ' print' → logprob: -13.750005722045898
    4. 'if' → logprob: -17.5000057220459
    5. '```' → logprob: -19.2500057220459
    6. '
' → logprob: -20.6250057220459
    7. '	print' → logprob: -21.3750057220459
    8. 'printf' → logprob: -23.2500057220459
    9. '    
' → logprob: -23.2500057220459
    10. 'for' → logprob: -23.3750057220459

Token 531: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.00861729308962822
    2. '(' → logprob: -4.758617401123047
    3. '()' → logprob: -13.508617401123047
    4. '(res' → logprob: -14.758617401123047
    5. '(results' → logprob: -15.008617401123047
    6. '(resultado' → logprob: -15.758617401123047
    7. '(
' → logprob: -16.133617401123047
    8. ' (' → logprob: -16.133617401123047
    9. '('' → logprob: -16.258617401123047
    10. 'result' → logprob: -16.508617401123047

Token 532: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9361264946837764e-07
    2. ' )' → logprob: -16.625
    3. ')`' → logprob: -17.5
    4. '`)' → logprob: -18.875
    5. '))' → logprob: -19.375
    6. '   ' → logprob: -19.5
    7. ')
' → logprob: -19.875
    8. '()' → logprob: -19.875
    9. '')' → logprob: -20.0
    10. ')**' → logprob: -20.5

Token 533: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.002879057079553604
    2. '
' → logprob: -5.8778791427612305
    3. ' if' → logprob: -10.12787914276123
    4. '```' → logprob: -11.12787914276123
    5. '\n' → logprob: -11.25287914276123
    6. '

' → logprob: -13.00287914276123
    7. '<|end|>' → logprob: -13.62787914276123
    8. '\' → logprob: -13.75287914276123
    9. '#' → logprob: -14.25287914276123
    10. '  
' → logprob: -14.75287914276123

Token 534: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.5240186452865601
    2. '__' → logprob: -1.02401864528656
    3. ' ' → logprob: -3.5240187644958496
    4. '_' → logprob: -4.14901876449585
    5. ' ' → logprob: -6.14901876449585
    6. ' ' → logprob: -7.39901876449585
    7. '​' → logprob: -8.774018287658691
    8. '_name' → logprob: -9.274018287658691
    9. '﻿' → logprob: -9.399018287658691
    10. ' ' → logprob: -9.774018287658691

Token 535: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.05136381834745407
    2. ' ==' → logprob: -3.176363706588745
    3. ' __' → logprob: -5.676363945007324
    4. '==' → logprob: -5.801363945007324
    5. 'name' → logprob: -6.801363945007324
    6. '[' → logprob: -7.926363945007324
    7. '.__' → logprob: -9.551363945007324
    8. '__.__' → logprob: -9.551363945007324
    9. '__[' → logprob: -10.426363945007324
    10. '__["' → logprob: -10.551363945007324

Token 536: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -1.9862216504407115e-05
    2. '__.__' → logprob: -10.875020027160645
    3. '==' → logprob: -14.250020027160645
    4. '__.' → logprob: -16.000019073486328
    5. '__["' → logprob: -17.500019073486328
    6. '__('' → logprob: -17.500019073486328
    7. '____' → logprob: -17.500019073486328
    8. '___' → logprob: -18.250019073486328
    9. '__
' → logprob: -18.375019073486328
    10. '__
' → logprob: -18.375019073486328

Token 537: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.513106644153595
    2. '==' → logprob: -1.2631065845489502
    3. '__' → logprob: -2.26310658454895
    4. '=="' → logprob: -4.513106822967529
    5. '=='' → logprob: -5.638106822967529
    6. '===' → logprob: -12.013106346130371
    7. '"' → logprob: -12.013106346130371
    8. '['' → logprob: -12.013106346130371
    9. '.__' → logprob: -12.138106346130371
    10. '=' → logprob: -12.513106346130371

Token 538: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.048764266073703766
    2. ''' → logprob: -3.048764228820801
    3. '__' → logprob: -8.7987642288208
    4. ' "__' → logprob: -10.6737642288208
    5. ' '__' → logprob: -13.6737642288208
    6. '"user' → logprob: -14.1737642288208
    7. '"name' → logprob: -14.9237642288208
    8. '("__' → logprob: -16.548765182495117
    9. '('__' → logprob: -16.923765182495117
    10. '"class' → logprob: -17.048765182495117

Token 539: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0025264339055866003
    2. '__' → logprob: -6.12752628326416
    3. 'py' → logprob: -8.00252628326416
    4. 'python' → logprob: -13.50252628326416
    5. '_main' → logprob: -13.75252628326416
    6. 'name' → logprob: -14.12752628326416
    7. 'built' → logprob: -14.12752628326416
    8. '__":
' → logprob: -14.25252628326416
    9. '"' → logprob: -14.62752628326416
    10. 'm' → logprob: -15.62752628326416

Token 540: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.014272807165980339
    2. '__' → logprob: -4.264272689819336
    3. '__':
' → logprob: -9.139272689819336
    4. '__.' → logprob: -13.764272689819336
    5. '__["' → logprob: -14.639272689819336
    6. '__.__' → logprob: -15.264272689819336
    7. '__:' → logprob: -16.639272689819336
    8. '__("' → logprob: -17.389272689819336
    9. '__",' → logprob: -17.389272689819336
    10. '__
' → logprob: -17.514272689819336

Token 541: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.00036382899270392954
    2. ' main' → logprob: -8.000364303588867
    3. '	main' → logprob: -11.125364303588867
    4. '   ' → logprob: -11.250364303588867
    5. '__' → logprob: -15.000364303588867
    6. '_main' → logprob: -15.000364303588867
    7. '(main' → logprob: -19.875364303588867
    8. ' ' → logprob: -20.375364303588867
    9. '.main' → logprob: -20.500364303588867
    10. '```' → logprob: -20.750364303588867

Token 542: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -1.9361264946837764e-07
    2. ' main' → logprob: -16.0
    3. '	main' → logprob: -17.5
    4. '   ' → logprob: -20.0
    5. '_main' → logprob: -23.75
    6. '.main' → logprob: -25.5
    7. '(main' → logprob: -26.125
    8. 'Main' → logprob: -27.0
    9. '  ' → logprob: -28.125
    10. '    
' → logprob: -28.375

Token 543: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 541
Tokens correctement prédits (1ère position, stricte): 189
Tokens correctement prédits (1ère position, avec adaptation): 204
Tokens correctement prédits (top 10): 366
Précision stricte (1ère position): 34.94%
Précision adaptée (1ère position): 37.71%
Précision (top 10): 67.65%
================================================================================
