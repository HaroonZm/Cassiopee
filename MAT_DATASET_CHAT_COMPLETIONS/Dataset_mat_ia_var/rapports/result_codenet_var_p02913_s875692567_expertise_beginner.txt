================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:44:53
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
N = int(input())
S = input()

ans = 0
l = 0
r = 1

while l < N and r < N:
    found = False
    length = r - l
    first_sub = S[l:r]
    for k in range(l + length, N - length + 1):
        second_sub = S[k:k + length]
        if first_sub == second_sub:
            ans = max(ans, length)
            found = True
            break
    if found and r < N - 1:
        r += 1
    else:
        l += 1
        r = min(r + 1, N - 1)

print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'N' (ID: 45)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0002943479048553854
    2. ''' → logprob: -8.75029468536377
    3. '`' → logprob: -10.00029468536377
    4. '```' → logprob: -10.62529468536377
    5. '(
' → logprob: -10.75029468536377
    6. '(N' → logprob: -11.00029468536377
    7. '\(' → logprob: -12.25029468536377
    8. ')' → logprob: -12.25029468536377
    9. '"' → logprob: -12.62529468536377
    10. '("("' → logprob: -12.87529468536377

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2372170090675354
    2. ')' → logprob: -1.7372169494628906
    3. '()' → logprob: -3.4872169494628906
    4. '())' → logprob: -5.737216949462891
    5. '```' → logprob: -7.987216949462891
    6. '(
' → logprob: -8.23721694946289
    7. '`' → logprob: -9.61221694946289
    8. '(()' → logprob: -9.61221694946289
    9. '("("' → logprob: -9.61221694946289
    10. '")' → logprob: -9.73721694946289

Token 5: 'S' (ID: 50)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5391327142715454
    2. 'if' → logprob: -2.289132595062256
    3. 's' → logprob: -2.664132595062256
    4. 'a' → logprob: -2.664132595062256
    5. 'x' → logprob: -3.539132595062256
    6. 'i' → logprob: -3.539132595062256
    7. ' ' → logprob: -4.039132595062256
    8. 'f' → logprob: -4.164132595062256
    9. '[' → logprob: -4.539132595062256
    10. ' for' → logprob: -4.664132595062256

Token 6: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2287689596414566
    2. '.' → logprob: -1.6037689447402954
    3. '=' → logprob: -6.853768825531006
    4. '+' → logprob: -7.603768825531006
    5. '\[' → logprob: -7.978768825531006
    6. '[:]' → logprob: -8.228769302368164
    7. '[i' → logprob: -8.478769302368164
    8. '[]' → logprob: -8.478769302368164
    9. ')' → logprob: -8.853769302368164
    10. ''' → logprob: -9.603769302368164

Token 7: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.2521769404411316
    2. ' input' → logprob: -1.5021770000457764
    3. ' ' → logprob: -9.627177238464355
    4. '""' → logprob: -9.752177238464355
    5. '"' → logprob: -10.002177238464355
    6. '0' → logprob: -11.252177238464355
    7. ' "' → logprob: -11.877177238464355
    8. 'int' → logprob: -12.002177238464355
    9. '(input' → logprob: -12.002177238464355
    10. '[input' → logprob: -12.127177238464355

Token 8: '()

' (ID: 5874)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.017396001145243645
    2. '()' → logprob: -4.142395973205566
    3. '('' → logprob: -7.642395973205566
    4. ')' → logprob: -8.267395973205566
    5. ''' → logprob: -8.767395973205566
    6. '("("' → logprob: -9.142395973205566
    7. '"' → logprob: -9.642395973205566
    8. ' (' → logprob: -9.767395973205566
    9. '(
' → logprob: -9.892395973205566
    10. '```' → logprob: -10.142395973205566

Token 9: 'ans' (ID: 616)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.42300817370414734
    2. 'count' → logprob: -1.5480082035064697
    3. 'result' → logprob: -2.7980082035064697
    4. 'if' → logprob: -3.2980082035064697
    5. 'f' → logprob: -5.048007965087891
    6. 'c' → logprob: -5.173007965087891
    7. 'd' → logprob: -5.548007965087891
    8. 'sum' → logprob: -6.048007965087891
    9. 's' → logprob: -6.173007965087891
    10. 'i' → logprob: -6.298007965087891

Token 10: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2540178894996643
    2. '=' → logprob: -1.5040178298950195
    3. '_' → logprob: -6.2540178298950195
    4. ' +=' → logprob: -9.25401782989502
    5. ' ' → logprob: -10.50401782989502
    6. '+=' → logprob: -11.75401782989502
    7. '[' → logprob: -11.75401782989502
    8. '_=' → logprob: -12.25401782989502
    9. ')' → logprob: -12.62901782989502
    10. ',' → logprob: -13.00401782989502

Token 11: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.042186856269836426
    2. '""' → logprob: -3.917186737060547
    3. ' ' → logprob: -4.542186737060547
    4. '"' → logprob: -5.542186737060547
    5. '''' → logprob: -5.667186737060547
    6. '[]' → logprob: -7.042186737060547
    7. ''' → logprob: -7.542186737060547
    8. 'len' → logprob: -7.792186737060547
    9. 'set' → logprob: -8.042186737060547
    10. '[' → logprob: -8.417186737060547

Token 12: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02445024624466896
    2. '""' → logprob: -4.399450302124023
    3. '[]' → logprob: -5.024450302124023
    4. '''' → logprob: -5.774450302124023
    5. 'set' → logprob: -7.274450302124023
    6. '"' → logprob: -7.399450302124023
    7. '[' → logprob: -8.274450302124023
    8. 'len' → logprob: -8.524450302124023
    9. 'S' → logprob: -9.774450302124023
    10. 'N' → logprob: -9.899450302124023

Token 13: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.010924381203949451
    2. ' for' → logprob: -4.760924339294434
    3. 'i' → logprob: -7.260924339294434
    4. '
' → logprob: -7.635924339294434
    5. '\n' → logprob: -7.635924339294434
    6. '\' → logprob: -8.635924339294434
    7. '' → logprob: -8.635924339294434
    8. 'f' → logprob: -9.635924339294434
    9. ' ' → logprob: -9.760924339294434
    10. ' 
' → logprob: -10.385924339294434

Token 14: 'l' (ID: 75)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05506665259599686
    2. 'f' → logprob: -3.0550665855407715
    3. ' for' → logprob: -5.8050665855407715
    4. 'i' → logprob: -5.8050665855407715
    5. '_' → logprob: -9.05506706237793
    6. 'd' → logprob: -10.30506706237793
    7. '```' → logprob: -10.68006706237793
    8. 'F' → logprob: -10.80506706237793
    9. 'fo' → logprob: -10.80506706237793
    10. '=' → logprob: -10.80506706237793

Token 15: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4585590958595276
    2. 'e' → logprob: -1.9585590362548828
    3. '=' → logprob: -2.083559036254883
    4. 'en' → logprob: -2.583559036254883
    5. 'f' → logprob: -4.583559036254883
    6. ' +=' → logprob: -5.083559036254883
    7. 'ength' → logprob: -5.708559036254883
    8. ' ' → logprob: -6.458559036254883
    9. '+=' → logprob: -6.583559036254883
    10. '+' → logprob: -7.083559036254883

Token 16: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0017073206836357713
    2. ' ' → logprob: -6.501707553863525
    3. '1' → logprob: -8.626707077026367
    4. '[]' → logprob: -11.876707077026367
    5. '-' → logprob: -12.126707077026367
    6. 'len' → logprob: -13.001707077026367
    7. '2' → logprob: -13.001707077026367
    8. ' -' → logprob: -13.251707077026367
    9. 'r' → logprob: -13.376707077026367
    10. '[' → logprob: -14.001707077026367

Token 17: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0027416350785642862
    2. '1' → logprob: -6.502741813659668
    3. '-' → logprob: -7.752741813659668
    4. 'r' → logprob: -8.252741813659668
    5. '[]' → logprob: -8.752741813659668
    6. '2' → logprob: -9.627741813659668
    7. 'len' → logprob: -9.752741813659668
    8. '[' → logprob: -9.752741813659668
    9. '{}' → logprob: -10.252741813659668
    10. 'ans' → logprob: -10.377741813659668

Token 18: '
' (ID: 198)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.4526021480560303
    2. ' r' → logprob: -1.2026021480560303
    3. ' ' → logprob: -2.8276021480560303
    4. ' for' → logprob: -5.952602386474609
    5. 'for' → logprob: -6.952602386474609
    6. 's' → logprob: -8.57760238647461
    7. ' s' → logprob: -8.95260238647461
    8. '<|end|>' → logprob: -9.07760238647461
    9. ' 
' → logprob: -9.45260238647461
    10. 'n' → logprob: -9.70260238647461

Token 19: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.1919882446527481
    2. ' r' → logprob: -2.441988229751587
    3. ' ' → logprob: -3.191988229751587
    4. 'for' → logprob: -3.691988229751587
    5. ' for' → logprob: -3.941988229751587
    6. ')' → logprob: -7.691988468170166
    7. ',' → logprob: -7.941988468170166
    8. 's' → logprob: -8.316987991333008
    9. 'f' → logprob: -8.566987991333008
    10. 'd' → logprob: -8.941987991333008

Token 20: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03912344574928284
    2. '=' → logprob: -3.28912353515625
    3. ' ' → logprob: -6.91412353515625
    4. ' +=' → logprob: -10.03912353515625
    5. '+' → logprob: -10.53912353515625
    6. ' =
' → logprob: -12.28912353515625
    7. ' +' → logprob: -12.41412353515625
    8. '+=' → logprob: -13.03912353515625
    9. '<|end|>' → logprob: -13.91412353515625
    10. ',' → logprob: -14.03912353515625

Token 21: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01843530312180519
    2. ' ' → logprob: -4.018435478210449
    3. 'l' → logprob: -9.39343547821045
    4. '1' → logprob: -9.39343547821045
    5. 'N' → logprob: -9.64343547821045
    6. ' N' → logprob: -10.76843547821045
    7. ' l' → logprob: -10.89343547821045
    8. 'len' → logprob: -11.89343547821045
    9. '-' → logprob: -12.89343547821045
    10. ' -' → logprob: -13.39343547821045

Token 22: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0016697037499397993
    2. ' ' → logprob: -7.501669883728027
    3. '1' → logprob: -7.626669883728027
    4. 'l' → logprob: -7.751669883728027
    5. 'N' → logprob: -8.876669883728027
    6. '-' → logprob: -10.501669883728027
    7. 'len' → logprob: -11.001669883728027
    8. ' l' → logprob: -12.126669883728027
    9. ' N' → logprob: -12.626669883728027
    10. ' -' → logprob: -13.126669883728027

Token 23: '

' (ID: 279)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.22457437217235565
    2. ' ' → logprob: -2.724574327468872
    3. ' while' → logprob: -2.974574327468872
    4. '
' → logprob: -3.224574327468872
    5. 'while' → logprob: -3.349574327468872
    6. '\n' → logprob: -5.849574565887451
    7. '<|end|>' → logprob: -5.974574565887451
    8. ' if' → logprob: -7.349574565887451
    9. '  
' → logprob: -7.724574565887451
    10. '+' → logprob: -7.849574565887451

Token 24: 'while' (ID: 7032)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.154227375984192
    2. ' 
' → logprob: -1.154227375984192
    3. 'while' → logprob: -1.779227375984192
    4. ' while' → logprob: -1.904227375984192
    5. ' ' → logprob: -3.6542272567749023
    6. '<|end|>' → logprob: -5.029227256774902
    7. '```' → logprob: -5.529227256774902
    8. ',' → logprob: -5.654227256774902
    9. '\n' → logprob: -6.279227256774902
    10. '+' → logprob: -6.529227256774902

Token 25: ' l' (ID: 305)
  Prédit: ' r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.1481008380651474
    2. ' l' → logprob: -2.1481008529663086
    3. ' ' → logprob: -4.023100852966309
    4. 'r' → logprob: -6.023100852966309
    5. 'l' → logprob: -8.273100852966309
    6. ' S' → logprob: -8.773100852966309
    7. ' ' → logprob: -9.398100852966309
    8. ' N' → logprob: -9.648100852966309
    9. ')' → logprob: -11.023100852966309
    10. ' (' → logprob: -11.398100852966309

Token 26: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.03833155333995819
    2. '<' → logprob: -3.2883315086364746
    3. ' ' → logprob: -8.913331985473633
    4. ' <=' → logprob: -9.163331985473633
    5. '<n' → logprob: -11.288331985473633
    6. '<len' → logprob: -11.413331985473633
    7. '<=' → logprob: -11.788331985473633
    8. ' !=' → logprob: -11.788331985473633
    9. '+' → logprob: -12.538331985473633
    10. '<N' → logprob: -12.913331985473633

Token 27: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.003239505458623171
    2. ' N' → logprob: -5.753239631652832
    3. 'n' → logprob: -10.253239631652832
    4. 'r' → logprob: -11.003239631652832
    5. ' ' → logprob: -12.128239631652832
    6. 'len' → logprob: -12.628239631652832
    7. 'l' → logprob: -15.003239631652832
    8. ' n' → logprob: -15.503239631652832
    9. ' len' → logprob: -15.628239631652832
    10. ' r' → logprob: -16.128238677978516

Token 28: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.004103573504835367
    2. 'and' → logprob: -6.004103660583496
    3. ' ' → logprob: -6.754103660583496
    4. ':' → logprob: -8.004103660583496
    5. '   ' → logprob: -9.879103660583496
    6. ':
' → logprob: -10.754103660583496
    7. '```' → logprob: -11.129103660583496
    8. '<|end|>' → logprob: -11.504103660583496
    9. '    ' → logprob: -11.754103660583496
    10. ' :' → logprob: -12.254103660583496

Token 29: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.12705735862255096
    2. 'r' → logprob: -2.1270573139190674
    3. ' ' → logprob: -9.127057075500488
    4. ' S' → logprob: -11.627057075500488
    5. 'S' → logprob: -11.877057075500488
    6. '	r' → logprob: -13.877057075500488
    7. ' ' → logprob: -13.877057075500488
    8. ' s' → logprob: -14.002057075500488
    9. 's' → logprob: -15.064557075500488
    10. '  ' → logprob: -15.127057075500488

Token 30: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.016293121501803398
    2. '<' → logprob: -4.141293048858643
    3. ' <=' → logprob: -8.6412935256958
    4. ' ' → logprob: -10.1412935256958
    5. '<|end|>' → logprob: -10.6412935256958
    6. '<=' → logprob: -11.3912935256958
    7. '<n' → logprob: -13.7662935256958
    8. '<len' → logprob: -13.7662935256958
    9. ' <
' → logprob: -13.8912935256958
    10. '<N' → logprob: -13.8912935256958

Token 31: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.029754776507616043
    2. ' N' → logprob: -3.529754877090454
    3. ' ' → logprob: -12.529754638671875
    4. 'n' → logprob: -15.029754638671875
    5. 'l' → logprob: -15.654754638671875
    6. '  ' → logprob: -17.029754638671875
    7. '	N' → logprob: -17.404754638671875
    8. '>N' → logprob: -17.404754638671875
    9. 'S' → logprob: -17.529754638671875
    10. 'len' → logprob: -17.654754638671875

Token 32: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0285904910415411
    2. ':
' → logprob: -3.903590440750122
    3. ' and' → logprob: -5.278590679168701
    4. ' :' → logprob: -6.528590679168701
    5. '<|end|>' → logprob: -7.903590679168701
    6. ' :
' → logprob: -8.153590202331543
    7. '   ' → logprob: -8.153590202331543
    8. ' ' → logprob: -8.278590202331543
    9. 'and' → logprob: -9.153590202331543
    10. '<|end|>' → logprob: -10.028590202331543

Token 33: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6508922576904297
    2. ' and' → logprob: -1.2758922576904297
    3. ' ' → logprob: -1.9008922576904297
    4. ':' → logprob: -4.15089225769043
    5. ' if' → logprob: -4.27589225769043
    6. 'and' → logprob: -5.15089225769043
    7. ':
' → logprob: -5.40089225769043
    8. ' :' → logprob: -6.15089225769043
    9. '    ' → logprob: -6.52589225769043
    10. ' :
' → logprob: -6.65089225769043

Token 34: ' found' (ID: 2491)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.43425336480140686
    2. 'if' → logprob: -1.8092533349990845
    3. '   ' → logprob: -2.559253454208374
    4. ' and' → logprob: -2.684253454208374
    5. '    ' → logprob: -3.934253454208374
    6. ' ' → logprob: -5.184253215789795
    7. '       ' → logprob: -5.184253215789795
    8. 'and' → logprob: -5.309253215789795
    9. 's' → logprob: -6.059253215789795
    10. ':
' → logprob: -7.059253215789795

Token 35: ' =' (ID: 314)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.35741257667541504
    2. '+' → logprob: -2.482412576675415
    3. '=' → logprob: -2.982412576675415
    4. ' +' → logprob: -2.982412576675415
    5. ' ==' → logprob: -2.982412576675415
    6. ' =' → logprob: -3.857412576675415
    7. ' in' → logprob: -4.857412338256836
    8. ' +=' → logprob: -4.857412338256836
    9. ' <' → logprob: -5.107412338256836
    10. '_' → logprob: -5.482412338256836

Token 36: ' False' (ID: 7983)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.1111244484782219
    2. 'False' → logprob: -2.7361245155334473
    3. ' S' → logprob: -4.236124515533447
    4. '{}' → logprob: -4.361124515533447
    5. 'True' → logprob: -5.611124515533447
    6. '{' → logprob: -6.236124515533447
    7. ' False' → logprob: -6.236124515533447
    8. '0' → logprob: -6.736124515533447
    9. '1' → logprob: -7.486124515533447
    10. 'r' → logprob: -7.611124515533447

Token 37: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.36912837624549866
    2. '<|end|>' → logprob: -1.7441283464431763
    3. ' ' → logprob: -2.619128465652466
    4. '    ' → logprob: -3.619128465652466
    5. ':' → logprob: -4.619128227233887
    6. '       ' → logprob: -5.244128227233887
    7. ' 
' → logprob: -5.244128227233887
    8. '    
' → logprob: -5.869128227233887
    9. ' if' → logprob: -6.119128227233887
    10. '<|end|>' → logprob: -6.494128227233887

Token 38: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 39: ' length' (ID: 5517)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.402854859828949
    2. ' if' → logprob: -1.9028549194335938
    3. 'if' → logprob: -3.1528549194335938
    4. '       ' → logprob: -3.4028549194335938
    5. '    ' → logprob: -3.5278549194335938
    6. ' for' → logprob: -3.7778549194335938
    7. ' ' → logprob: -3.9028549194335938
    8. ' while' → logprob: -3.9028549194335938
    9. 'while' → logprob: -5.277854919433594
    10. 'for' → logprob: -5.402854919433594

Token 40: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09623653441667557
    2. '=' → logprob: -2.59623646736145
    3. '   ' → logprob: -5.221236705780029
    4. '<|end|>' → logprob: -5.221236705780029
    5. ' ' → logprob: -5.596236705780029
    6. ' +=' → logprob: -6.846236705780029
    7. '<|end|>' → logprob: -6.971236705780029
    8. '+' → logprob: -8.471236228942871
    9. '    ' → logprob: -9.096236228942871
    10. ',' → logprob: -9.846236228942871

Token 41: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.43966934084892273
    2. '1' → logprob: -2.314669370651245
    3. ' ' → logprob: -2.314669370651245
    4. 'r' → logprob: -2.439669370651245
    5. '0' → logprob: -2.689669370651245
    6. '2' → logprob: -7.189669132232666
    7. ' min' → logprob: -7.439669132232666
    8. ' l' → logprob: -7.939669132232666
    9. 'min' → logprob: -8.064669609069824
    10. '(r' → logprob: -8.314669609069824

Token 42: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.2817342281341553
    2. '-' → logprob: -1.4067342281341553
    3. '-l' → logprob: -7.531734466552734
    4. '+' → logprob: -10.656734466552734
    5. ' ' → logprob: -12.031734466552734
    6. '   ' → logprob: -12.156734466552734
    7. '-r' → logprob: -12.406734466552734
    8. '```' → logprob: -13.406734466552734
    9. '<|end|>' → logprob: -13.781734466552734
    10. ' +' → logprob: -14.406734466552734

Token 43: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -4.036524842376821e-05
    2. ' l' → logprob: -10.125040054321289
    3. '	l' → logprob: -16.00004005432129
    4. '<|end|>' → logprob: -17.00004005432129
    5. '1' → logprob: -18.00004005432129
    6. '_l' → logprob: -19.00004005432129
    7. ' ' → logprob: -19.25004005432129
    8. '   ' → logprob: -19.62504005432129
    9. ' л' → logprob: -19.75004005432129
    10. '-l' → logprob: -20.37504005432129

Token 44: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3747997283935547
    2. ' +' → logprob: -1.8747997283935547
    3. '<|end|>' → logprob: -2.1247997283935547
    4. '   ' → logprob: -3.7497997283935547
    5. '1' → logprob: -4.999799728393555
    6. '<|end|>' → logprob: -5.374799728393555
    7. ' ' → logprob: -5.999799728393555
    8. '+
' → logprob: -7.624799728393555
    9. '
' → logprob: -7.749799728393555
    10. ' +
' → logprob: -8.249799728393555

Token 45: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7294196486473083
    2. '<|end|>' → logprob: -1.2294197082519531
    3. '+' → logprob: -1.6044197082519531
    4. '<|end|>' → logprob: -4.854419708251953
    5. ' ' → logprob: -5.229419708251953
    6. ' +' → logprob: -6.229419708251953
    7. ' 
' → logprob: -6.729419708251953
    8. '    
' → logprob: -6.729419708251953
    9. ')' → logprob: -7.104419708251953
    10. '  ' → logprob: -7.104419708251953

Token 46: ' first' (ID: 1577)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.34252122044563293
    2. '   ' → logprob: -1.8425211906433105
    3. '
' → logprob: -3.7175211906433105
    4. '    ' → logprob: -3.8425211906433105
    5. ' while' → logprob: -4.3425211906433105
    6. ' 
' → logprob: -4.4675211906433105
    7. '    
' → logprob: -4.5925211906433105
    8. ' +' → logprob: -4.7175211906433105
    9. 'while' → logprob: -4.8425211906433105
    10. ' ' → logprob: -5.4675211906433105

Token 47: '_sub' (ID: 11572)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.3506333827972412
    2. '_' → logprob: -1.3506333827972412
    3. ' =' → logprob: -1.7256333827972412
    4. '_sub' → logprob: -2.850633382797241
    5. ' +' → logprob: -3.350633382797241
    6. '_length' → logprob: -3.600633382797241
    7. '=' → logprob: -3.600633382797241
    8. '_s' → logprob: -3.725633382797241
    9. '   ' → logprob: -4.47563362121582
    10. 's' → logprob: -4.47563362121582

Token 48: ' =' (ID: 314)
  Prédit: 'string'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'string' → logprob: -0.33061838150024414
    2. 'str' → logprob: -1.7056183815002441
    3. ' =' → logprob: -2.705618381500244
    4. '=' → logprob: -3.955618381500244
    5. 's' → logprob: -4.455618381500244
    6. '_str' → logprob: -7.580618381500244
    7. 'stri' → logprob: -7.580618381500244
    8. 'tring' → logprob: -7.955618381500244
    9. '_' → logprob: -8.330617904663086
    10. 'st' → logprob: -8.705617904663086

Token 49: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.3868807554244995
    2. ' S' → logprob: -1.1368807554244995
    3. '   ' → logprob: -12.511880874633789
    4. 's' → logprob: -12.761880874633789
    5. ' ' → logprob: -14.011880874633789
    6. ' ' → logprob: -14.511880874633789
    7. '	S' → logprob: -15.011880874633789
    8. '_S' → logprob: -15.636880874633789
    9. '>S' → logprob: -15.761880874633789
    10. '`' → logprob: -15.886880874633789

Token 50: '[l' (ID: 38286)
  Prédit: '[l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[l' → logprob: -0.00014370749704539776
    2. '[' → logprob: -8.875144004821777
    3. '[r' → logprob: -13.000144004821777
    4. '```' → logprob: -15.250144004821777
    5. '[
' → logprob: -15.625144004821777
    6. '[i' → logprob: -15.625144004821777
    7. ' [' → logprob: -15.875144004821777
    8. '[]' → logprob: -15.875144004821777
    9. '\[' → logprob: -16.12514305114746
    10. '[:' → logprob: -16.12514305114746

Token 51: ':r' (ID: 118417)
  Prédit: ':l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':l' → logprob: -0.0027022813446819782
    2. ':' → logprob: -6.002702236175537
    3. ' :' → logprob: -8.627702713012695
    4. 'l' → logprob: -10.752702713012695
    5. ':r' → logprob: -11.252702713012695
    6. '+l' → logprob: -11.752702713012695
    7. '+' → logprob: -14.002702713012695
    8. ' ' → logprob: -14.127702713012695
    9. '	l' → logprob: -14.502702713012695
    10. ':length' → logprob: -14.752702713012695

Token 52: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5493307113647461
    2. '+' → logprob: -1.049330711364746
    3. '+l' → logprob: -2.674330711364746
    4. ' +' → logprob: -6.549330711364746
    5. '+]' → logprob: -7.174330711364746
    6. ' ]' → logprob: -8.049330711364746
    7. '+s' → logprob: -8.049330711364746
    8. ']
' → logprob: -8.424330711364746
    9. 'l' → logprob: -9.549330711364746
    10. '+n' → logprob: -9.674330711364746

Token 53: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4210991859436035
    2. '+' → logprob: -1.4210991859436035
    3. '<|end|>' → logprob: -2.9210991859436035
    4. '
' → logprob: -4.2960991859436035
    5. '+
' → logprob: -4.4210991859436035
    6. '\n' → logprob: -5.6710991859436035
    7. 'r' → logprob: -5.9210991859436035
    8. 's' → logprob: -6.0460991859436035
    9. '    
' → logprob: -6.2960991859436035
    10. '<|end|>' → logprob: -6.5460991859436035

Token 54: ' for' (ID: 395)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6669501662254333
    2. 'r' → logprob: -0.7919501662254333
    3. '+r' → logprob: -4.666950225830078
    4. '+
' → logprob: -5.291950225830078
    5. '   ' → logprob: -5.416950225830078
    6. '+l' → logprob: -5.541950225830078
    7. 'l' → logprob: -5.541950225830078
    8. ' r' → logprob: -6.166950225830078
    9. ' +' → logprob: -6.791950225830078
    10. '```' → logprob: -7.666950225830078

Token 55: ' k' (ID: 372)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.3430388569831848
    2. ' j' → logprob: -1.96803879737854
    3. 'i' → logprob: -2.34303879737854
    4. 'j' → logprob: -3.84303879737854
    5. ' length' → logprob: -4.468039035797119
    6. ' k' → logprob: -5.093039035797119
    7. 'k' → logprob: -5.843039035797119
    8. ' start' → logprob: -6.218039035797119
    9. ' x' → logprob: -6.468039035797119
    10. ' in' → logprob: -6.843039035797119

Token 56: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.018434954807162285
    2. 'in' → logprob: -4.018435001373291
    3. '    ' → logprob: -9.518434524536133
    4. ' ' → logprob: -9.518434524536133
    5. '+' → logprob: -9.768434524536133
    6. '   ' → logprob: -10.018434524536133
    7. '	in' → logprob: -12.018434524536133
    8. '  ' → logprob: -12.268434524536133
    9. ',' → logprob: -12.268434524536133
    10. 'range' → logprob: -12.643434524536133

Token 57: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.05489695072174072
    2. 'range' → logprob: -2.929896831512451
    3. '(range' → logprob: -12.42989730834961
    4. ' ' → logprob: -12.55489730834961
    5. '   ' → logprob: -13.55489730834961
    6. '	range' → logprob: -13.55489730834961
    7. ' r' → logprob: -13.92989730834961
    8. ' xrange' → logprob: -14.05489730834961
    9. ' in' → logprob: -14.92989730834961
    10. '  ' → logprob: -15.05489730834961

Token 58: '(l' (ID: 4179)
  Prédit: '(r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.2290804535150528
    2. '(l' → logprob: -2.1040804386138916
    3. '(' → logprob: -2.9790804386138916
    4. 'r' → logprob: -3.8540804386138916
    5. '   ' → logprob: -5.479080677032471
    6. 'l' → logprob: -5.854080677032471
    7. ' r' → logprob: -6.479080677032471
    8. '1' → logprob: -7.604080677032471
    9. ' (' → logprob: -7.729080677032471
    10. '(length' → logprob: -7.854080677032471

Token 59: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.048675935715436935
    2. ' +' → logprob: -3.298676013946533
    3. '+r' → logprob: -5.048676013946533
    4. ',' → logprob: -6.798676013946533
    5. '+k' → logprob: -7.048676013946533
    6. ' ,' → logprob: -7.798676013946533
    7. '    ' → logprob: -7.923676013946533
    8. ')' → logprob: -8.423675537109375
    9. '   ' → logprob: -8.548675537109375
    10. ',r' → logprob: -8.673675537109375

Token 60: ' length' (ID: 5517)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.639241099357605
    2. 'length' → logprob: -0.764241099357605
    3. ' length' → logprob: -5.3892412185668945
    4. ' ' → logprob: -6.2642412185668945
    5. 'k' → logprob: -10.389241218566895
    6. '2' → logprob: -10.514241218566895
    7. 'r' → logprob: -10.889241218566895
    8. '   ' → logprob: -11.389241218566895
    9. '(length' → logprob: -11.514241218566895
    10. '[length' → logprob: -11.639241218566895

Token 61: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.33407554030418396
    2. ' ,' → logprob: -1.7090755701065063
    3. '+' → logprob: -2.709075450897217
    4. ' +' → logprob: -3.584075450897217
    5. ',r' → logprob: -5.084075450897217
    6. ',n' → logprob: -7.084075450897217
    7. ' ' → logprob: -7.334075450897217
    8. ',k' → logprob: -7.834075450897217
    9. '   ' → logprob: -8.334075927734375
    10. '    ' → logprob: -9.584075927734375

Token 62: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.34848734736442566
    2. ' N' → logprob: -1.223487377166748
    3. ' ' → logprob: -11.22348690032959
    4. 'n' → logprob: -11.22348690032959
    5. '<|end|>' → logprob: -12.47348690032959
    6. '	N' → logprob: -12.72348690032959
    7. '<N' → logprob: -13.34848690032959
    8. ' n' → logprob: -13.47348690032959
    9. '>N' → logprob: -13.72348690032959
    10. ')' → logprob: -14.22348690032959

Token 63: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.7574577927589417
    2. '):' → logprob: -1.3824577331542969
    3. '+' → logprob: -2.132457733154297
    4. '-length' → logprob: -2.757457733154297
    5. '-' → logprob: -3.007457733154297
    6. '):
' → logprob: -3.507457733154297
    7. ' +' → logprob: -5.632457733154297
    8. ' ):' → logprob: -5.757457733154297
    9. '-r' → logprob: -6.007457733154297
    10. '-n' → logprob: -6.007457733154297

Token 64: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.06223498657345772
    2. ' length' → logprob: -2.812234878540039
    3. 'leng' → logprob: -9.187234878540039
    4. 'ength' → logprob: -9.937234878540039
    5. '+' → logprob: -10.187234878540039
    6. ' +' → logprob: -10.812234878540039
    7. 'l' → logprob: -11.187234878540039
    8. '	length' → logprob: -11.187234878540039
    9. 'len' → logprob: -11.937234878540039
    10. '(length' → logprob: -12.437234878540039

Token 65: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.20145592093467712
    2. ' +' → logprob: -1.7014559507369995
    3. ' ' → logprob: -10.951456069946289
    4. ')' → logprob: -12.076456069946289
    5. '1' → logprob: -12.701456069946289
    6. '
' → logprob: -12.826456069946289
    7. '   ' → logprob: -13.076456069946289
    8. '-' → logprob: -13.576456069946289
    9. '```' → logprob: -13.701456069946289
    10. '+
' → logprob: -13.951456069946289

Token 66: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0019368429202586412
    2. ' ' → logprob: -6.251936912536621
    3. '+' → logprob: -12.751936912536621
    4. ')' → logprob: -13.126936912536621
    5. ' +' → logprob: -13.626936912536621
    6. '   ' → logprob: -14.126936912536621
    7. '```' → logprob: -15.001936912536621
    8. '  ' → logprob: -15.751936912536621
    9. '2' → logprob: -15.751936912536621
    10. '    ' → logprob: -16.564435958862305

Token 67: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.690834273584187e-05
    2. ' ' → logprob: -10.37503719329834
    3. ')' → logprob: -13.25003719329834
    4. '+' → logprob: -13.50003719329834
    5. '```' → logprob: -13.87503719329834
    6. '   ' → logprob: -14.50003719329834
    7. '{' → logprob: -15.56253719329834
    8. '`' → logprob: -16.250036239624023
    9. '):
' → logprob: -16.375036239624023
    10. '2' → logprob: -16.812536239624023

Token 68: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0017574065132066607
    2. ':' → logprob: -6.876757621765137
    3. '):
' → logprob: -7.376757621765137
    4. ' ):' → logprob: -9.751757621765137
    5. ')' → logprob: -10.376757621765137
    6. '   ' → logprob: -12.501757621765137
    7. '):
' → logprob: -13.876757621765137
    8. '+' → logprob: -13.876757621765137
    9. '):

' → logprob: -14.876757621765137
    10. ',' → logprob: -15.126757621765137

Token 69: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 70: ' second' (ID: 3099)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 71: '_sub' (ID: 11572)
  Prédit: '_sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sub' → logprob: -0.001573663903400302
    2. '_s' → logprob: -7.12657356262207
    3. '_' → logprob: -7.50157356262207
    4. ' =' → logprob: -10.12657356262207
    5. '_S' → logprob: -10.87657356262207
    6. '[' → logprob: -11.12657356262207
    7. '```' → logprob: -11.25157356262207
    8. '   ' → logprob: -11.37657356262207
    9. '_SUB' → logprob: -11.50157356262207
    10. 'Sub' → logprob: -11.62657356262207

Token 72: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25196900963783264
    2. '=' → logprob: -1.5019689798355103
    3. ' ==' → logprob: -11.376969337463379
    4. ' ' → logprob: -11.751969337463379
    5. '==' → logprob: -11.751969337463379
    6. '[' → logprob: -12.126969337463379
    7. ')' → logprob: -12.751969337463379
    8. 's' → logprob: -14.126969337463379
    9. '   ' → logprob: -14.376969337463379
    10. ']' → logprob: -15.126969337463379

Token 73: ' S' (ID: 336)
  Prédit: ' S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' S' → logprob: -0.28116071224212646
    2. 'S' → logprob: -1.4061607122421265
    3. ' ' → logprob: -12.531160354614258
    4. ' ' → logprob: -12.906160354614258
    5. '<|end|>' → logprob: -13.781160354614258
    6. ''S' → logprob: -14.406160354614258
    7. '>S' → logprob: -14.781160354614258
    8. '_S' → logprob: -14.906160354614258
    9. '	S' → logprob: -15.031160354614258
    10. '(S' → logprob: -15.156160354614258

Token 74: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -6.074907287256792e-05
    2. '[' → logprob: -9.75006103515625
    3. 'k' → logprob: -13.62506103515625
    4. '[key' → logprob: -15.37506103515625
    5. '[
' → logprob: -15.50006103515625
    6. ' [' → logprob: -15.62506103515625
    7. '```' → logprob: -15.62506103515625
    8. '[l' → logprob: -16.25006103515625
    9. '[user' → logprob: -16.50006103515625
    10. '	k' → logprob: -16.62506103515625

Token 75: ':k' (ID: 69335)
  Prédit: ':k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':k' → logprob: -0.003522502724081278
    2. ':' → logprob: -6.3785223960876465
    3. 'k' → logprob: -7.0035223960876465
    4. ' :' → logprob: -7.2535223960876465
    5. ':l' → logprob: -8.628522872924805
    6. ':r' → logprob: -11.128522872924805
    7. ' k' → logprob: -12.753522872924805
    8. '	k' → logprob: -13.128522872924805
    9. ':j' → logprob: -14.628522872924805
    10. ' ' → logprob: -14.878522872924805

Token 76: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0024779161904007196
    2. ' +' → logprob: -6.002478122711182
    3. '   ' → logprob: -14.252477645874023
    4. '+r' → logprob: -14.877477645874023
    5. '＋' → logprob: -15.127477645874023
    6. 'length' → logprob: -15.627477645874023
    7. '+l' → logprob: -15.627477645874023
    8. ' ' → logprob: -15.877477645874023
    9. ']' → logprob: -16.002477645874023
    10. ']+' → logprob: -16.127477645874023

Token 77: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.0004901225329376757
    2. ' length' → logprob: -7.625490188598633
    3. 'r' → logprob: -14.250490188598633
    4. 'len' → logprob: -14.375490188598633
    5. '(length' → logprob: -15.250490188598633
    6. ' ' → logprob: -15.500490188598633
    7. 'ength' → logprob: -16.625490188598633
    8. 'leng' → logprob: -16.625490188598633
    9. '[length' → logprob: -17.000490188598633
    10. '   ' → logprob: -17.125490188598633

Token 78: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.16063900291919708
    2. ']
' → logprob: -1.9106390476226807
    3. ']
' → logprob: -8.035638809204102
    4. ']

' → logprob: -10.410638809204102
    5. ' ]' → logprob: -10.535638809204102
    6. ':]' → logprob: -11.410638809204102
    7. ':]
' → logprob: -12.035638809204102
    8. ']==' → logprob: -12.910638809204102
    9. '   ' → logprob: -12.910638809204102
    10. ' ]
' → logprob: -12.910638809204102

Token 79: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 80: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.3887014091014862
    2. ' if' → logprob: -1.1387014389038086
    3. '       ' → logprob: -6.513701438903809
    4. '           ' → logprob: -8.763701438903809
    5. '   ' → logprob: -9.638701438903809
    6. '
' → logprob: -10.013701438903809
    7. '<|end|>' → logprob: -10.763701438903809
    8. '```' → logprob: -11.263701438903809
    9. ' found' → logprob: -11.513701438903809
    10. 'found' → logprob: -11.638701438903809

Token 81: ' first' (ID: 1577)
  Prédit: ' first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' first' → logprob: -0.0073355380445718765
    2. 'first' → logprob: -5.507335662841797
    3. ' second' → logprob: -5.757335662841797
    4. 'second' → logprob: -9.382335662841797
    5. ' found' → logprob: -12.882335662841797
    6. ' ' → logprob: -12.882335662841797
    7. '	first' → logprob: -14.257335662841797
    8. '(first' → logprob: -14.507335662841797
    9. 'found' → logprob: -15.382335662841797
    10. ' not' → logprob: -15.507335662841797

Token 82: '_sub' (ID: 11572)
  Prédit: '_sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sub' → logprob: -5.478889215737581e-05
    2. '_' → logprob: -9.875054359436035
    3. '[_' → logprob: -14.625054359436035
    4. ' _' → logprob: -14.625054359436035
    5. 'sub' → logprob: -14.625054359436035
    6. '_s' → logprob: -15.250054359436035
    7. '[' → logprob: -15.500054359436035
    8. '_SUB' → logprob: -15.500054359436035
    9. '_Sub' → logprob: -15.750054359436035
    10. '   ' → logprob: -16.00005531311035

Token 83: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.07892757654190063
    2. '==' → logprob: -2.578927516937256
    3. ' in' → logprob: -11.078927993774414
    4. '=' → logprob: -11.953927993774414
    5. ')' → logprob: -12.203927993774414
    6. ' ' → logprob: -12.328927993774414
    7. ')==' → logprob: -13.703927993774414
    8. ' <=' → logprob: -13.828927993774414
    9. ' !=' → logprob: -13.953927993774414
    10. ' =' → logprob: -14.453927993774414

Token 84: ' second' (ID: 3099)
  Prédit: 'second'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'second' → logprob: -0.31326964497566223
    2. ' second' → logprob: -1.3132696151733398
    3. '	second' → logprob: -12.18826961517334
    4. '(second' → logprob: -13.56326961517334
    5. ' ' → logprob: -14.06326961517334
    6. '_second' → logprob: -15.68826961517334
    7. '.second' → logprob: -15.93826961517334
    8. '<|end|>' → logprob: -16.188270568847656
    9. '-second' → logprob: -16.563270568847656
    10. 's' → logprob: -16.563270568847656

Token 85: '_sub' (ID: 11572)
  Prédit: '_sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sub' → logprob: -2.3199920178740285e-05
    2. '_' → logprob: -11.250022888183594
    3. 'sub' → logprob: -11.750022888183594
    4. '_s' → logprob: -13.750022888183594
    5. 's' → logprob: -15.250022888183594
    6. 'Sub' → logprob: -15.875022888183594
    7. '<|end|>' → logprob: -16.000022888183594
    8. '_SUB' → logprob: -16.250022888183594
    9. '{sub' → logprob: -17.000022888183594

Token 86: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0006713286275044084
    2. ':
' → logprob: -7.37567138671875
    3. ' and' → logprob: -11.25067138671875
    4. '):' → logprob: -11.87567138671875
    5. '<|end|>' → logprob: -12.00067138671875
    6. '       ' → logprob: -12.12567138671875
    7. '           ' → logprob: -12.25067138671875
    8. ':return' → logprob: -13.37567138671875
    9. ':**' → logprob: -13.62567138671875
    10. '<|end|>' → logprob: -13.87567138671875

Token 87: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6384164094924927
    2. ':' → logprob: -0.7634164094924927
    3. ':
' → logprob: -5.388416290283203
    4. '       ' → logprob: -8.013416290283203
    5. ' :' → logprob: -8.888416290283203
    6. '               ' → logprob: -9.138416290283203
    7. ',' → logprob: -9.513416290283203
    8. '<|end|>' → logprob: -9.513416290283203
    9. ' found' → logprob: -9.638416290283203
    10. '):' → logprob: -9.888416290283203

Token 88: ' ans' (ID: 3345)
  Prédit: 'found'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'found' → logprob: -0.3246697783470154
    2. ' found' → logprob: -2.07466983795166
    3. 'ans' (adapté à ' ans') → logprob: -2.44966983795166
    4. '           ' → logprob: -2.82466983795166
    5. ' ans' → logprob: -5.44966983795166
    6. '            
' → logprob: -8.07466983795166
    7. '       ' → logprob: -8.32466983795166
    8. '```' → logprob: -8.32466983795166
    9. 'answer' → logprob: -8.57466983795166
    10. '
' → logprob: -8.82466983795166

Token 89: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.008654518984258175
    2. ' =' → logprob: -5.133654594421387
    3. '+=' → logprob: -6.383654594421387
    4. '+' → logprob: -7.008654594421387
    5. ' +' → logprob: -9.508654594421387
    6. '=' → logprob: -10.383654594421387
    7. ' ' → logprob: -10.883654594421387
    8. ' |=' → logprob: -13.383654594421387
    9. '<|end|>' → logprob: -13.383654594421387
    10. ' -=' → logprob: -14.633654594421387

Token 90: ' max' (ID: 2999)
  Prédit: ' length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' length' → logprob: -0.4885956943035126
    2. 'length' → logprob: -1.613595724105835
    3. ' max' → logprob: -1.988595724105835
    4. 'max' → logprob: -3.238595724105835
    5. 'r' → logprob: -5.238595485687256
    6. ' r' → logprob: -5.613595485687256
    7. 'l' → logprob: -6.738595485687256
    8. ' l' → logprob: -6.988595485687256
    9. 'k' → logprob: -10.613595962524414
    10. ' ' → logprob: -10.863595962524414

Token 91: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.12699110805988312
    2. '(' → logprob: -2.126991033554077
    3. ' (' → logprob: -10.251991271972656
    4. '(len' → logprob: -11.001991271972656
    5. '(length' → logprob: -12.751991271972656
    6. 'ans' → logprob: -13.001991271972656
    7. '(
' → logprob: -13.251991271972656
    8. '(answer' → logprob: -14.126991271972656
    9. '(max' → logprob: -14.251991271972656
    10. '(an' → logprob: -14.376991271972656

Token 92: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11542762070894241
    2. ',length' → logprob: -2.2404277324676514
    3. ' ,' → logprob: -6.615427494049072
    4. 'length' → logprob: -6.740427494049072
    5. ',len' → logprob: -10.86542797088623
    6. ' length' → logprob: -10.99042797088623
    7. '[length' → logprob: -11.36542797088623
    8. '(length' → logprob: -11.36542797088623
    9. 'ength' → logprob: -11.61542797088623
    10. '	length' → logprob: -13.11542797088623

Token 93: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.3132915198802948
    2. ' length' → logprob: -1.3132915496826172
    3. 'ength' → logprob: -10.813291549682617
    4. '	length' → logprob: -12.438291549682617
    5. 'r' → logprob: -13.063291549682617
    6. 'len' → logprob: -14.063291549682617
    7. ' r' → logprob: -14.313291549682617
    8. 'leng' → logprob: -14.563291549682617
    9. ',length' → logprob: -14.563291549682617
    10. '(length' → logprob: -14.563291549682617

Token 94: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7002063393592834
    2. ')
' → logprob: -0.7002063393592834
    3. '           ' → logprob: -5.075206279754639
    4. '+' → logprob: -7.825206279754639
    5. ')
' → logprob: -8.450206756591797
    6. '       ' → logprob: -10.325206756591797
    7. '
' → logprob: -10.450206756591797
    8. '               ' → logprob: -10.700206756591797
    9. ' )
' → logprob: -10.700206756591797
    10. '   ' → logprob: -11.200206756591797

Token 95: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0009315869538113475
    2. '            
' → logprob: -8.125931739807129
    3. '       ' → logprob: -8.250931739807129
    4. '
' → logprob: -9.000931739807129
    5. '               ' → logprob: -9.875931739807129
    6. '```' → logprob: -10.250931739807129
    7. '\n' → logprob: -10.500931739807129
    8. '   ' → logprob: -10.625931739807129
    9. '            ' → logprob: -11.000931739807129
    10. ' 
' → logprob: -11.000931739807129

Token 96: ' found' (ID: 2491)
  Prédit: 'found'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'found' (adapté à ' found') → logprob: -9.186122770188376e-05
    2. ' found' → logprob: -9.625091552734375
    3. '           ' → logprob: -10.875091552734375
    4. 'break' → logprob: -12.500091552734375
    5. '   ' → logprob: -13.250091552734375
    6. 'r' → logprob: -14.000091552734375
    7. 'Found' → logprob: -15.875091552734375
    8. '	found' → logprob: -16.000091552734375
    9. '```' → logprob: -16.250091552734375
    10. 'l' → logprob: -16.625091552734375

Token 97: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.026401545852422714
    2. '=' → logprob: -3.6514015197753906
    3. '=True' → logprob: -9.40140151977539
    4. ' ' → logprob: -11.40140151977539
    5. '<|end|>' → logprob: -12.27640151977539
    6. ' =
' → logprob: -13.52640151977539
    7. '=False' → logprob: -14.90140151977539
    8. '   ' → logprob: -15.65140151977539
    9. '    ' → logprob: -15.90140151977539
    10. ' |=' → logprob: -16.15140151977539

Token 98: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.16022412478923798
    2. ' True' → logprob: -1.9102240800857544
    3. '(True' → logprob: -17.28522491455078
    4. '=True' → logprob: -17.66022491455078
    5. ' Tru' → logprob: -18.78522491455078
    6. 'Tr' → logprob: -19.53522491455078
    7. '.True' → logprob: -20.66022491455078
    8. '_true' → logprob: -21.41022491455078
    9. ' ' → logprob: -22.16022491455078
    10. 'true' → logprob: -22.41022491455078

Token 99: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004004553891718388
    2. '            
' → logprob: -6.62900447845459
    3. ' 
' → logprob: -6.87900447845459
    4. '               ' → logprob: -7.62900447845459
    5. '       ' → logprob: -8.37900447845459
    6. '\n' → logprob: -8.50400447845459
    7. '    
' → logprob: -8.62900447845459
    8. '
' → logprob: -9.50400447845459
    9. '   ' → logprob: -9.50400447845459
    10. ' ' → logprob: -9.62900447845459

Token 100: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00046606172691099346
    2. '		' → logprob: -8.375466346740723
    3. '<|end|>' → logprob: -10.000466346740723
    4. '               ' → logprob: -10.125466346740723
    5. '            
' → logprob: -10.250466346740723
    6. ' ' → logprob: -10.875466346740723
    7. ' ' → logprob: -11.750466346740723
    8. '       ' → logprob: -11.875466346740723
    9. 'break' → logprob: -11.875466346740723
    10. '	' → logprob: -11.875466346740723

Token 101: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.017945056781172752
    2. '           ' → logprob: -4.642945289611816
    3. ' break' → logprob: -4.892945289611816
    4. 'r' → logprob: -7.767945289611816
    5. '       ' → logprob: -9.142945289611816
    6. '	break' → logprob: -9.892945289611816
    7. '   ' → logprob: -10.142945289611816
    8. '               ' → logprob: -11.017945289611816
    9. '```' → logprob: -11.517945289611816
    10. 'br' → logprob: -13.017945289611816

Token 102: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20494113862514496
    2. '    
' → logprob: -2.5799410343170166
    3. ' 
' → logprob: -3.0799410343170166
    4. 'r' → logprob: -3.4549410343170166
    5. '
' → logprob: -4.329941272735596
    6. '  
' → logprob: -4.454941272735596
    7. '   
' → logprob: -5.829941272735596
    8. ' r' → logprob: -7.204941272735596
    9. '        
' → logprob: -7.454941272735596
    10. ' ' → logprob: -7.704941272735596

Token 103: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16408893465995789
    2. 'r' → logprob: -3.1640889644622803
    3. ' 
' → logprob: -3.2890889644622803
    4. '
' → logprob: -3.5390889644622803
    5. '    
' → logprob: -3.5390889644622803
    6. '  
' → logprob: -5.164088726043701
    7. ' ' → logprob: -6.289088726043701
    8. '\n' → logprob: -6.539088726043701
    9. '   
' → logprob: -6.914088726043701
    10. ' r' → logprob: -7.039088726043701

Token 104: ' if' (ID: 538)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.18278318643569946
    2. '   ' → logprob: -2.0577831268310547
    3. 'if' (adapté à ' if') → logprob: -3.6827831268310547
    4. ' if' → logprob: -4.557783126831055
    5. ' r' → logprob: -5.932783126831055
    6. '    
' → logprob: -7.682783126831055
    7. ' 
' → logprob: -8.057783126831055
    8. '```' → logprob: -9.682783126831055
    9. ' ' → logprob: -10.182783126831055
    10. '
' → logprob: -10.557783126831055

Token 105: ' found' (ID: 2491)
  Prédit: ' found'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' found' → logprob: -0.023291246965527534
    2. 'found' → logprob: -3.7732913494110107
    3. ' not' → logprob: -10.02329158782959
    4. '(found' → logprob: -14.64829158782959
    5. '	found' → logprob: -14.77329158782959
    6. 'not' → logprob: -15.02329158782959
    7. ' ' → logprob: -16.648290634155273
    8. '_found' → logprob: -17.273290634155273
    9. ' find' → logprob: -17.523290634155273
    10. ' Found' → logprob: -17.523290634155273

Token 106: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006427348591387272
    2. ':
' → logprob: -5.13142728805542
    3. ' :' → logprob: -8.381427764892578
    4. ' ==' → logprob: -9.506427764892578
    5. '==' → logprob: -9.631427764892578
    6. '   ' → logprob: -9.631427764892578
    7. '=' → logprob: -11.756427764892578
    8. ' else' → logprob: -11.881427764892578
    9. ' :
' → logprob: -11.881427764892578
    10. '<|end|>' → logprob: -11.881427764892578

Token 107: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.5238306522369385
    2. 'r' → logprob: -0.8988306522369385
    3. ' length' → logprob: -8.27383041381836
    4. ' l' → logprob: -9.02383041381836
    5. 'length' → logprob: -9.27383041381836
    6. 'l' → logprob: -9.39883041381836
    7. '   ' → logprob: -9.64883041381836
    8. ' ' → logprob: -10.39883041381836
    9. ' not' → logprob: -10.52383041381836
    10. '(r' → logprob: -12.64883041381836

Token 108: ' <' (ID: 464)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.8918740749359131
    2. '+' → logprob: -1.391874074935913
    3. '<' → logprob: -1.516874074935913
    4. ' <' → logprob: -2.891874074935913
    5. ' +=' → logprob: -2.891874074935913
    6. ' +' → logprob: -4.641874313354492
    7. ' ' → logprob: -7.266874313354492
    8. '=' → logprob: -8.641874313354492
    9. '<|end|>' → logprob: -8.891874313354492
    10. '[' → logprob: -9.266874313354492

Token 109: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -4.5491004129871726e-05
    2. ' N' → logprob: -10.000045776367188
    3. ' ' → logprob: -17.500045776367188
    4. 'n' → logprob: -17.625045776367188
    5. '   ' → logprob: -18.000045776367188
    6. 'r' → logprob: -18.750045776367188
    7. 'len' → logprob: -19.000045776367188
    8. '  ' → logprob: -20.000045776367188
    9. '<N' → logprob: -20.000045776367188
    10. 'l' → logprob: -20.250045776367188

Token 110: ' -' (ID: 533)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06700804084539413
    2. '+' → logprob: -3.3170080184936523
    3. '   ' → logprob: -3.9420080184936523
    4. ':
' → logprob: -4.942008018493652
    5. ' +' → logprob: -7.817008018493652
    6. '+:' → logprob: -8.192008018493652
    7. '       ' → logprob: -8.317008018493652
    8. 'r' → logprob: -8.442008018493652
    9. ' :' → logprob: -8.817008018493652
    10. '=' → logprob: -9.067008018493652

Token 111: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002528575947508216
    2. ' ' → logprob: -6.002528667449951
    3. '   ' → logprob: -10.002528190612793
    4. '-' → logprob: -13.377528190612793
    5. '2' → logprob: -14.127528190612793
    6. '```' → logprob: -14.127528190612793
    7. '  ' → logprob: -14.252528190612793
    8. 'r' → logprob: -14.690028190612793
    9. '0' → logprob: -14.877528190612793
    10. '       ' → logprob: -14.940028190612793

Token 112: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00035608073812909424
    2. ' ' → logprob: -8.00035572052002
    3. 'length' → logprob: -11.37535572052002
    4. '2' → logprob: -12.00035572052002
    5. ' length' → logprob: -14.00035572052002
    6. '-' → logprob: -14.50035572052002
    7. '0' → logprob: -14.87535572052002
    8. '   ' → logprob: -14.87535572052002
    9. 'r' → logprob: -15.25035572052002
    10. '```' → logprob: -16.625356674194336

Token 113: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08224018663167953
    2. '   ' → logprob: -3.332240104675293
    3. ':
' → logprob: -3.582240104675293
    4. '       ' → logprob: -4.457240104675293
    5. '+' → logprob: -6.207240104675293
    6. '<|end|>' → logprob: -7.457240104675293
    7. 'r' → logprob: -8.207240104675293
    8. ':r' → logprob: -8.707240104675293
    9. ' :' → logprob: -8.707240104675293
    10. '    ' → logprob: -9.332240104675293

Token 114: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.024347173050045967
    2. '   ' → logprob: -4.274347305297852
    3. 'r' → logprob: -5.024347305297852
    4. '	r' → logprob: -6.274347305297852
    5. ' r' → logprob: -7.524347305297852
    6. '	' → logprob: -7.899347305297852
    7. '	   ' → logprob: -8.024347305297852
    8. '    
' → logprob: -9.899347305297852
    9. '<|end|>' → logprob: -9.899347305297852
    10. '    ' → logprob: -10.024347305297852

Token 115: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' (adapté à ' r') → logprob: -0.2543761730194092
    2. ' r' → logprob: -1.6293761730194092
    3. '       ' → logprob: -3.879376173019409
    4. '   ' → logprob: -4.879376411437988
    5. '	r' → logprob: -9.129376411437988
    6. '    ' → logprob: -10.379376411437988
    7. ' ' → logprob: -10.379376411437988
    8. '           ' → logprob: -10.629376411437988
    9. ' 
' → logprob: -10.629376411437988
    10. '_r' → logprob: -11.004376411437988

Token 116: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.15066251158714294
    2. ' +=' → logprob: -2.025662422180176
    3. '+' → logprob: -5.400662422180176
    4. '=' → logprob: -5.775662422180176
    5. '<|end|>' → logprob: -8.650662422180176
    6. '++' → logprob: -9.275662422180176
    7. ' ' → logprob: -10.525662422180176
    8. ' =' → logprob: -11.400662422180176
    9. '+='' → logprob: -11.650662422180176
    10. '```' → logprob: -12.025662422180176

Token 117: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.5491004129871726e-05
    2. ' ' → logprob: -10.000045776367188
    3. '<|end|>' → logprob: -17.375045776367188
    4. '   ' → logprob: -18.625045776367188
    5. '2' → logprob: -18.875045776367188
    6. '```' → logprob: -19.125045776367188
    7. '۱' → logprob: -19.250045776367188
    8. '１' → logprob: -19.375045776367188
    9. '+' → logprob: -19.625045776367188
    10. '<|end|>' → logprob: -20.375045776367188

Token 118: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -13.875000953674316
    3. '   ' → logprob: -19.625001907348633
    4. '```' → logprob: -19.625001907348633
    5. '+' → logprob: -19.875001907348633
    6. '１' → logprob: -20.125001907348633
    7. '2' → logprob: -20.250001907348633
    8. '۱' → logprob: -20.750001907348633
    9. '-' → logprob: -20.750001907348633
    10. '' → logprob: -21.250001907348633

Token 119: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023306740447878838
    2. 'else' → logprob: -3.8983068466186523
    3. ' else' → logprob: -5.898306846618652
    4. '	else' → logprob: -11.773306846618652
    5. 'elif' → logprob: -12.273306846618652
    6. '    
' → logprob: -13.398306846618652
    7. '```' → logprob: -13.898306846618652
    8. ' elif' → logprob: -14.273306846618652
    9. '
' → logprob: -14.398306846618652
    10. '<|end|>' → logprob: -15.273306846618652

Token 120: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15026313066482544
    2. 'else' → logprob: -2.1502630710601807
    3. ' else' → logprob: -3.7752630710601807
    4. 'elif' → logprob: -9.525262832641602
    5. '	else' → logprob: -11.025262832641602
    6. '```' → logprob: -11.025262832641602
    7. ' elif' → logprob: -11.275262832641602
    8. '    
' → logprob: -12.150262832641602
    9. '<|end|>' → logprob: -12.400262832641602
    10. '
' → logprob: -12.900262832641602

Token 121: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.08511979132890701
    2. '   ' → logprob: -2.5851197242736816
    3. ' else' → logprob: -5.085119724273682
    4. 'elif' → logprob: -11.08512020111084
    5. '	else' → logprob: -12.08512020111084
    6. ' ' → logprob: -14.21012020111084
    7. '  ' → logprob: -15.33512020111084
    8. '```' → logprob: -15.33512020111084
    9. ' elif' → logprob: -16.335119247436523
    10. '_else' → logprob: -16.460119247436523

Token 122: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.38850802183151245
    2. ':' → logprob: -1.1385080814361572
    3. '   ' → logprob: -7.013507843017578
    4. '       ' → logprob: -8.388507843017578
    5. 'l' → logprob: -8.763507843017578
    6. '):
' → logprob: -9.513507843017578
    7. ' l' → logprob: -9.638507843017578
    8. '
' → logprob: -9.888507843017578
    9. ':l' → logprob: -9.888507843017578
    10. ':

' → logprob: -10.263507843017578

Token 123: '       ' (ID: 309)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.16345106065273285
    2. '   ' → logprob: -1.913451075553894
    3. '       ' → logprob: -5.913451194763184
    4. ' l' → logprob: -7.913451194763184
    5. '	l' → logprob: -8.913451194763184
    6. '```' → logprob: -11.538451194763184
    7. '  ' → logprob: -13.038451194763184
    8. '    
' → logprob: -13.788451194763184
    9. '_l' → logprob: -13.788451194763184
    10. '    ' → logprob: -14.288451194763184

Token 124: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' (adapté à ' l') → logprob: -2.4868770196917467e-05
    2. '   ' → logprob: -11.000024795532227
    3. '	l' → logprob: -12.375024795532227
    4. ' l' → logprob: -12.500024795532227
    5. '       ' → logprob: -15.250024795532227
    6. '  ' → logprob: -20.000024795532227
    7. ' ' → logprob: -20.125024795532227
    8. '           ' → logprob: -20.125024795532227
    9. '```' → logprob: -20.125024795532227
    10. '_l' → logprob: -20.250024795532227

Token 125: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.3928470313549042
    2. ' +=' → logprob: -1.1428470611572266
    3. '+' → logprob: -5.142847061157227
    4. '=' → logprob: -9.392847061157227
    5. ' +' → logprob: -11.267847061157227
    6. '<|end|>' → logprob: -12.017847061157227
    7. '   ' → logprob: -12.767847061157227
    8. ']+=' → logprob: -13.142847061157227
    9. '+='' → logprob: -13.267847061157227
    10. '++' → logprob: -13.267847061157227

Token 126: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008048642775975168
    2. ' ' → logprob: -7.125804901123047
    3. '   ' → logprob: -15.250804901123047
    4. '```' → logprob: -16.188304901123047
    5. '2' → logprob: -17.063304901123047
    6. '１' → logprob: -17.313304901123047
    7. '0' → logprob: -17.688304901123047
    8. '<|end|>' → logprob: -18.063304901123047
    9. '‌' → logprob: -18.438304901123047
    10. '۱' → logprob: -18.500804901123047

Token 127: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.500000953674316
    3. '```' → logprob: -16.875
    4. '   ' → logprob: -18.875
    5. '<|end|>' → logprob: -18.875
    6. '１' → logprob: -19.4375
    7. '' → logprob: -19.6875
    8. '2' → logprob: -19.6875
    9. '0' → logprob: -19.8125
    10. '१' → logprob: -19.9375

Token 128: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0001222508290084079
    2. ')' → logprob: -10.0001220703125
    3. '
' → logprob: -10.0001220703125
    4. '<|end|>' → logprob: -10.8751220703125
    5. ' print' → logprob: -12.0001220703125
    6. '```' → logprob: -12.5001220703125
    7. 'return' → logprob: -13.6251220703125
    8. '(print' → logprob: -14.5001220703125
    9. '#print' → logprob: -14.8751220703125
    10. '#' → logprob: -16.1251220703125

Token 129: '       ' (ID: 309)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0668792650103569
    2. '<|end|>' → logprob: -3.0668792724609375
    3. '```' → logprob: -4.3168792724609375
    4. ')' → logprob: -5.8168792724609375
    5. '#' → logprob: -7.6918792724609375
    6. 'return' → logprob: -8.066879272460938
    7. '\n' → logprob: -8.316879272460938
    8. '#print' → logprob: -9.066879272460938
    9. '+' → logprob: -9.316879272460938
    10. '
' → logprob: -9.441879272460938

Token 130: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' (adapté à ' r') → logprob: -2.339278580620885e-06
    2. ' r' → logprob: -13.625001907348633
    3. 'if' → logprob: -14.750001907348633
    4. '	r' → logprob: -15.375001907348633
    5. '   ' → logprob: -15.500001907348633
    6. '```' → logprob: -15.625001907348633
    7. '<|end|>' → logprob: -17.125001907348633
    8. '       ' → logprob: -18.125001907348633
    9. 'rstrip' → logprob: -19.000001907348633
    10. '0' → logprob: -19.125001907348633

Token 131: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00038086410495452583
    2. ' =' → logprob: -7.875380992889404
    3. '=l' → logprob: -14.250380516052246
    4. '+=' → logprob: -16.125381469726562
    5. '=
' → logprob: -17.625381469726562
    6. '=

' → logprob: -18.250381469726562
    7. '=r' → logprob: -18.625381469726562
    8. 'l' → logprob: -18.750381469726562
    9. '＝' → logprob: -18.750381469726562
    10. '=max' → logprob: -19.125381469726562

Token 132: ' min' (ID: 1349)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -5.5577775128767826e-06
    2. ' l' → logprob: -12.125005722045898
    3. '   ' → logprob: -16.3750057220459
    4. '	l' → logprob: -17.6250057220459
    5. '```' → logprob: -19.3750057220459
    6. '+l' → logprob: -19.3750057220459
    7. 'ltr' → logprob: -20.3750057220459
    8. '[l' → logprob: -20.6250057220459
    9. '`' → logprob: -20.8750057220459
    10. '<|end|>' → logprob: -21.1250057220459

Token 133: '(r' (ID: 4729)
  Prédit: '(l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.22683601081371307
    2. '(N' → logprob: -1.6018359661102295
    3. '(n' → logprob: -7.476836204528809
    4. '(r' → logprob: -8.226836204528809
    5. '(' → logprob: -8.476836204528809
    6. 'N' → logprob: -8.601836204528809
    7. '(len' → logprob: -9.726836204528809
    8. '(
' → logprob: -10.226836204528809
    9. 'l' → logprob: -10.351836204528809
    10. '(L' → logprob: -10.476836204528809

Token 134: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.37698492407798767
    2. 'l' → logprob: -1.50198495388031
    3. ' +' → logprob: -2.7519848346710205
    4. '+l' → logprob: -4.0019850730896
    5. ' l' → logprob: -5.1269850730896
    6. '(l' → logprob: -6.5019850730896
    7. ',' → logprob: -7.5019850730896
    8. '+
' → logprob: -8.501984596252441
    9. ',l' → logprob: -8.626984596252441
    10. '<|end|>' → logprob: -9.001984596252441

Token 135: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00011307948443572968
    2. ' ' → logprob: -9.125113487243652
    3. '   ' → logprob: -12.500113487243652
    4. '  ' → logprob: -15.375113487243652
    5. '0' → logprob: -15.750113487243652
    6. '10' → logprob: -17.312612533569336
    7. '2' → logprob: -17.625112533569336
    8. '' → logprob: -17.812612533569336
    9. '	' → logprob: -18.125112533569336
    10. '```' → logprob: -18.562612533569336

Token 136: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.860340752406046e-05
    2. ' ' → logprob: -10.1250581741333
    3. '0' → logprob: -11.1250581741333
    4. '   ' → logprob: -13.1250581741333
    5. '  ' → logprob: -14.5000581741333
    6. '' → logprob: -15.3125581741333
    7. '2' → logprob: -15.6875581741333
    8. '	' → logprob: -16.375059127807617
    9. 's' → logprob: -16.500059127807617
    10. '-' → logprob: -16.625059127807617

Token 137: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001940057729370892
    2. ',N' → logprob: -7.1269402503967285
    3. ')' → logprob: -7.2519402503967285
    4. ',l' → logprob: -8.00193977355957
    5. ' ,' → logprob: -9.62693977355957
    6. ',r' → logprob: -11.50193977355957
    7. ',n' → logprob: -12.12693977355957
    8. ',len' → logprob: -12.25193977355957
    9. '1' → logprob: -14.25193977355957
    10. '   ' → logprob: -14.37693977355957

Token 138: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -4.5491004129871726e-05
    2. ' N' → logprob: -10.000045776367188
    3. '	N' → logprob: -17.125045776367188
    4. 'n' → logprob: -18.250045776367188
    5. '   ' → logprob: -18.625045776367188
    6. '>N' → logprob: -19.250045776367188
    7. 'Ｎ' → logprob: -20.125045776367188
    8. '_N' → logprob: -20.375045776367188
    9. ')' → logprob: -20.500045776367188
    10. '```' → logprob: -20.625045776367188

Token 139: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00012511172099038959
    2. '-' → logprob: -9.12512493133545
    3. ')
' → logprob: -11.87512493133545
    4. ' )' → logprob: -12.50012493133545
    5. ' -' → logprob: -12.62512493133545
    6. '<|end|>' → logprob: -13.75012493133545
    7. '```' → logprob: -15.12512493133545
    8. '))' → logprob: -15.50012493133545
    9. '-)' → logprob: -16.500125885009766
    10. ')`' → logprob: -16.500125885009766

Token 140: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003825293097179383
    2. ' ' → logprob: -8.375382423400879
    3. '0' → logprob: -9.125382423400879
    4. '2' → logprob: -11.000382423400879
    5. '-' → logprob: -11.750382423400879
    6. 'length' → logprob: -12.375382423400879
    7. 'l' → logprob: -12.625382423400879
    8. ')' → logprob: -12.750382423400879
    9. 'r' → logprob: -13.125382423400879
    10. '```' → logprob: -13.250382423400879

Token 141: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3663626305060461e-05
    2. ' ' → logprob: -11.62501335144043
    3. '2' → logprob: -12.62501335144043
    4. '0' → logprob: -13.87501335144043
    5. '-' → logprob: -16.12501335144043
    6. 'length' → logprob: -16.50001335144043
    7. '```' → logprob: -16.87501335144043
    8. ')' → logprob: -16.87501335144043
    9. '   ' → logprob: -18.62501335144043
    10. '１' → logprob: -18.75001335144043

Token 142: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.1008713702030946e-06
    2. ')
' → logprob: -13.375001907348633
    3. ' )' → logprob: -15.500001907348633
    4. '   ' → logprob: -16.250001907348633
    5. '<|end|>' → logprob: -17.000001907348633
    6. '))' → logprob: -17.750001907348633
    7. '}' → logprob: -18.375001907348633
    8. ')#' → logprob: -18.500001907348633
    9. ')`' → logprob: -18.500001907348633
    10. ')}' → logprob: -18.500001907348633

Token 143: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00017302791820839047
    2. ')' → logprob: -8.75017261505127
    3. ' print' → logprob: -11.37517261505127
    4. '
' → logprob: -13.75017261505127
    5. '```' → logprob: -14.50017261505127
    6. '<|end|>' → logprob: -15.00017261505127
    7. '#print' → logprob: -15.12517261505127
    8. '(print' → logprob: -15.25017261505127
    9. ')
' → logprob: -15.62517261505127
    10. 'return' → logprob: -16.125173568725586

Token 144: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.014438489452004433
    2. '(' → logprob: -4.264438629150391
    3. '()' → logprob: -8.26443862915039
    4. '(len' → logprob: -11.76443862915039
    5. '(max' → logprob: -12.63943862915039
    6. 'ans' → logprob: -12.88943862915039
    7. '(
' → logprob: -13.63943862915039
    8. ' (' → logprob: -14.26443862915039
    9. '(answer' → logprob: -14.51443862915039
    10. '('' → logprob: -14.88943862915039

Token 145: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.981667537620524e-06
    2. ')
' → logprob: -13.875001907348633
    3. ' )' → logprob: -14.375001907348633
    4. '()' → logprob: -15.875001907348633
    5. ')`' → logprob: -16.375001907348633
    6. '`)' → logprob: -16.625001907348633
    7. '')' → logprob: -16.750001907348633
    8. '))' → logprob: -16.875001907348633
    9. '+' → logprob: -18.125001907348633
    10. '）' → logprob: -18.375001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 143
Tokens correctement prédits (1ère position, stricte): 52
Tokens correctement prédits (1ère position, avec adaptation): 59
Tokens correctement prédits (top 10): 120
Précision stricte (1ère position): 36.36%
Précision adaptée (1ère position): 41.26%
Précision (top 10): 83.92%
================================================================================
