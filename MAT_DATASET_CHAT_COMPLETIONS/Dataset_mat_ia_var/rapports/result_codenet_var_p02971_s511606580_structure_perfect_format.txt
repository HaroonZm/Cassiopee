================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:51:27
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
N = int(input())
ai = []
for i in range(N):
    ai.append(int(input()))
first = max(ai)
ai_ = ai[:]
ai_.remove(first)
second = max(ai_)
for x in ai:
    if x == first:
        print(second)
    else:
        print(first)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'N' (ID: 45)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0003063838230445981
    2. '('' → logprob: -8.500306129455566
    3. '(N' → logprob: -10.000306129455566
    4. '(
' → logprob: -10.750306129455566
    5. '(input' → logprob: -11.250306129455566
    6. ''' → logprob: -12.125306129455566
    7. '("("' → logprob: -12.375306129455566
    8. '```' → logprob: -12.375306129455566
    9. '`' → logprob: -12.750306129455566
    10. '(`' → logprob: -13.000306129455566

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5405747294425964
    2. ')' → logprob: -0.9155747294425964
    3. '()' → logprob: -4.290574550628662
    4. '())' → logprob: -5.915574550628662
    5. '(
' → logprob: -8.41557502746582
    6. '```' → logprob: -9.16557502746582
    7. '))' → logprob: -9.29057502746582
    8. '")' → logprob: -9.54057502746582
    9. '(

' → logprob: -9.79057502746582
    10. '`)' → logprob: -9.79057502746582

Token 5: 'ai' (ID: 1361)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5391327142715454
    2. 'if' → logprob: -2.289132595062256
    3. 's' → logprob: -2.664132595062256
    4. 'a' → logprob: -2.664132595062256
    5. 'x' → logprob: -3.539132595062256
    6. 'i' → logprob: -3.539132595062256
    7. ' ' → logprob: -4.039132595062256
    8. 'f' → logprob: -4.164132595062256
    9. '[' → logprob: -4.539132595062256
    10. ' for' → logprob: -4.664132595062256

Token 6: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0022885913494974375
    2. '[]' → logprob: -6.752288818359375
    3. '[i' → logprob: -8.002288818359375
    4. '[a' → logprob: -8.377288818359375
    5. '[n' → logprob: -8.752288818359375
    6. '\[' → logprob: -8.752288818359375
    7. '=' → logprob: -10.002288818359375
    8. 's' → logprob: -10.002288818359375
    9. ']' → logprob: -10.127288818359375
    10. '[N' → logprob: -10.752288818359375

Token 7: ' []
' (ID: 8911)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.8697366118431091
    2. 'list' → logprob: -0.9947366118431091
    3. 'int' → logprob: -2.869736671447754
    4. 'input' → logprob: -2.994736671447754
    5. '[]' → logprob: -3.369736671447754
    6. '[int' → logprob: -3.619736671447754
    7. ' input' → logprob: -4.369736671447754
    8. ' []' → logprob: -4.494736671447754
    9. ' int' → logprob: -4.494736671447754
    10. ' [' → logprob: -5.744736671447754

Token 8: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00039039674447849393
    2. ' for' → logprob: -8.50039005279541
    3. '```' → logprob: -9.00039005279541
    4. '_' → logprob: -10.25039005279541
    5. '   ' → logprob: -11.50039005279541
    6. '[' → logprob: -11.87539005279541
    7. '`' → logprob: -12.62539005279541
    8. '_for' → logprob: -13.00039005279541
    9. '\' → logprob: -13.62539005279541
    10. 'i' → logprob: -13.87539005279541

Token 9: ' i' (ID: 575)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.18071581423282623
    2. ' i' → logprob: -1.805715799331665
    3. '  ' → logprob: -7.680716037750244
    4. ' _' → logprob: -8.180715560913086
    5. 'i' → logprob: -8.805715560913086
    6. '_' → logprob: -10.180715560913086
    7. ' ‌' → logprob: -11.555715560913086
    8. ' range' → logprob: -11.930715560913086
    9. ' ▁' → logprob: -12.055715560913086
    10. ' ' → logprob: -12.055715560913086

Token 10: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04081358015537262
    2. 'in' → logprob: -3.290813684463501
    3. 'n' → logprob: -6.290813446044922
    4. ' ' → logprob: -7.165813446044922
    5. ' n' → logprob: -9.665813446044922
    6. '  ' → logprob: -10.790813446044922
    7. 'range' → logprob: -11.415813446044922
    8. ' i' → logprob: -11.540813446044922
    9. '	in' → logprob: -11.915813446044922
    10. 'space' → logprob: -11.915813446044922

Token 11: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.08908112347126007
    2. 'range' → logprob: -2.464081048965454
    3. ' ' → logprob: -8.964080810546875
    4. '	range' → logprob: -11.714080810546875
    5. ' in' → logprob: -13.589080810546875
    6. ' xrange' → logprob: -14.089080810546875
    7. '```' → logprob: -14.089080810546875
    8. ')' → logprob: -14.464080810546875
    9. '(range' → logprob: -14.714080810546875
    10. '_range' → logprob: -14.839080810546875

Token 12: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10032571107149124
    2. '(N' → logprob: -2.3503258228302
    3. '(n' → logprob: -9.850325584411621
    4. ' (' → logprob: -10.475325584411621
    5. '(len' → logprob: -10.600325584411621
    6. '(range' → logprob: -12.850325584411621
    7. '(`' → logprob: -13.100325584411621
    8. '(
' → logprob: -13.225325584411621
    9. '()' → logprob: -13.475325584411621
    10. '(i' → logprob: -13.475325584411621

Token 13: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.010039734654128551
    2. ')' → logprob: -4.635039806365967
    3. '):
' → logprob: -9.135039329528809
    4. ':' → logprob: -9.635039329528809
    5. ' ):' → logprob: -9.760039329528809
    6. '+' → logprob: -10.010039329528809
    7. ' )' → logprob: -13.260039329528809
    8. ',' → logprob: -14.135039329528809
    9. ' ' → logprob: -14.135039329528809
    10. 'in' → logprob: -14.510039329528809

Token 14: '   ' (ID: 271)
  Prédit: ' ai'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ai' → logprob: -0.1084616482257843
    2. '   ' → logprob: -2.358461618423462
    3. ' a' → logprob: -5.733461856842041
    4. ' ' → logprob: -6.108461856842041
    5. ' ```' → logprob: -6.983461856842041
    6. '    ' → logprob: -7.733461856842041
    7. '```' → logprob: -8.483461380004883
    8. ' ' → logprob: -8.483461380004883
    9. 'ai' → logprob: -8.858461380004883
    10. ' `' → logprob: -8.983461380004883

Token 15: ' ai' (ID: 8440)
  Prédit: ' ai'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ai' → logprob: -0.00682915560901165
    2. 'ai' (adapté à ' ai') → logprob: -5.131829261779785
    3. '   ' → logprob: -7.881829261779785
    4. ' a' → logprob: -8.131829261779785
    5. 'a' → logprob: -8.881829261779785
    6. ' ```' → logprob: -11.006829261779785
    7. ' ' → logprob: -11.381829261779785
    8. ' line' → logprob: -11.381829261779785
    9. '```' → logprob: -11.756829261779785
    10. ' `' → logprob: -12.131829261779785

Token 16: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.10022122412919998
    2. '.' → logprob: -2.3502211570739746
    3. '.extend' → logprob: -11.975221633911133
    4. ' .' → logprob: -12.350221633911133
    5. '.app' → logprob: -13.600221633911133
    6. 'append' → logprob: -13.850221633911133
    7. '.ap' → logprob: -14.475221633911133
    8. '   ' → logprob: -15.225221633911133
    9. '.setdefault' → logprob: -15.850221633911133
    10. '.insert' → logprob: -15.975221633911133

Token 17: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.004822887945920229
    2. '(' → logprob: -5.379822731018066
    3. '(list' → logprob: -9.004822731018066
    4. '(float' → logprob: -10.504822731018066
    5. 'int' → logprob: -10.629822731018066
    6. '(i' → logprob: -11.504822731018066
    7. '(input' → logprob: -12.129822731018066
    8. ' (' → logprob: -12.629822731018066
    9. '(
' → logprob: -12.879822731018066
    10. '()' → logprob: -13.379822731018066

Token 18: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.014172795228660107
    2. '(' → logprob: -4.2641730308532715
    3. 'input' → logprob: -12.514172554016113
    4. '()' → logprob: -13.139172554016113
    5. ')' → logprob: -13.389172554016113
    6. '(
' → logprob: -14.264172554016113
    7. ' (' → logprob: -14.889172554016113
    8. '(

' → logprob: -15.264172554016113
    9. '(in' → logprob: -15.389172554016113
    10. '(inp' → logprob: -16.01417350769043

Token 19: '()))
' (ID: 24521)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.48780015110969543
    2. '()))' → logprob: -0.987800121307373
    3. '()' → logprob: -4.612800121307373
    4. '())))' → logprob: -5.987800121307373
    5. ')' → logprob: -7.487800121307373
    6. '(' → logprob: -7.862800121307373
    7. '))' → logprob: -8.737800598144531
    8. ')))' → logprob: -10.987800598144531
    9. '()));' → logprob: -11.362800598144531
    10. '()))
' → logprob: -11.487800598144531

Token 20: 'first' (ID: 7743)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -1.0549355745315552
    2. 's' → logprob: -1.3049355745315552
    3. 'max' → logprob: -2.3049354553222656
    4. 'ai' → logprob: -2.3049354553222656
    5. 'for' → logprob: -2.5549354553222656
    6. 'total' → logprob: -4.054935455322266
    7. 'a' → logprob: -4.054935455322266
    8. '```' → logprob: -4.179935455322266
    9. '[' → logprob: -4.304935455322266
    10. 'print' → logprob: -4.679935455322266

Token 21: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.05226787552237511
    2. '_sum' → logprob: -4.177268028259277
    3. ' =' → logprob: -4.677268028259277
    4. '_space' → logprob: -5.052268028259277
    5. '_max' → logprob: -5.177268028259277
    6. '(' → logprob: -6.302268028259277
    7. 'space' → logprob: -7.052268028259277
    8. '_a' → logprob: -7.052268028259277
    9. '_i' → logprob: -7.177268028259277
    10. '=' → logprob: -7.302268028259277

Token 22: ' max' (ID: 2999)
  Prédit: ' ai'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ai' → logprob: -0.3552257716655731
    2. 'ai' → logprob: -1.2302258014678955
    3. 'min' → logprob: -6.230225563049316
    4. ' min' → logprob: -6.605225563049316
    5. 'max' → logprob: -6.855225563049316
    6. ' max' → logprob: -7.355225563049316
    7. '0' → logprob: -7.480225563049316
    8. 'sum' → logprob: -8.355225563049316
    9. 'a' → logprob: -8.480225563049316
    10. ' ' → logprob: -8.605225563049316

Token 23: '(ai' (ID: 172264)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06424454599618912
    2. '(ai' → logprob: -2.814244508743286
    3. '(a' → logprob: -7.439244747161865
    4. '(first' → logprob: -7.689244747161865
    5. '(_' → logprob: -7.814244747161865
    6. '_' → logprob: -8.689244270324707
    7. '_ai' → logprob: -9.189244270324707
    8. '(`' → logprob: -9.689244270324707
    9. ' (' → logprob: -9.814244270324707
    10. '(_)' → logprob: -9.814244270324707

Token 24: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00038384052459150553
    2. '[' → logprob: -8.375383377075195
    3. '))' → logprob: -9.250383377075195
    4. ' )' → logprob: -10.000383377075195
    5. '])' → logprob: -13.125383377075195
    6. ']' → logprob: -13.250383377075195
    7. ')))' → logprob: -13.500383377075195
    8. ')
' → logprob: -13.875383377075195
    9. ')])' → logprob: -14.000383377075195
    10. '')' → logprob: -14.375383377075195

Token 25: 'ai' (ID: 1361)
  Prédit: 'second'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'second' → logprob: -0.26393765211105347
    2. '_' → logprob: -3.3889377117156982
    3. ' 
' → logprob: -3.6389377117156982
    4. '*' → logprob: -3.8889377117156982
    5. ' ' → logprob: -4.013937473297119
    6. '+' → logprob: -4.388937473297119
    7. ' second' → logprob: -4.388937473297119
    8. '_second' → logprob: -4.513937473297119
    9. 'for' → logprob: -4.763937473297119
    10. 'ai' → logprob: -4.763937473297119

Token 26: '_' (ID: 62)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 27: ' =' (ID: 314)
  Prédit: 'remove'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'remove' → logprob: -0.21017369627952576
    2. 'count' → logprob: -1.7101737260818481
    3. 'index' → logprob: -5.460173606872559
    4. '.remove' → logprob: -6.085173606872559
    5. 'copy' → logprob: -6.335173606872559
    6. 'sort' → logprob: -8.585173606872559
    7. '.' → logprob: -8.960173606872559
    8. 'pop' → logprob: -10.085173606872559
    9. '.count' → logprob: -10.460173606872559
    10. 'append' → logprob: -11.460173606872559

Token 28: ' ai' (ID: 8440)
  Prédit: ' ai'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ai' → logprob: -0.7516101598739624
    2. 'ai' → logprob: -1.3766101598739624
    3. ' [' → logprob: -1.8766101598739624
    4. '[' → logprob: -2.251610279083252
    5. 'sorted' → logprob: -5.626610279083252
    6. ' sorted' → logprob: -5.626610279083252
    7. '[a' → logprob: -6.626610279083252
    8. 'list' → logprob: -6.626610279083252
    9. '[]' → logprob: -6.751610279083252
    10. '[max' → logprob: -6.876610279083252

Token 29: '[:' (ID: 7808)
  Prédit: '[:]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:]' → logprob: -0.0638575628399849
    2. '.copy' → logprob: -2.9388575553894043
    3. '.' → logprob: -5.313857555389404
    4. '[:' → logprob: -6.188857555389404
    5. '[' → logprob: -6.313857555389404
    6. '[::-' → logprob: -9.938858032226562
    7. '[:-' → logprob: -10.188858032226562
    8. '<|end|>' → logprob: -10.438858032226562
    9. '```' → logprob: -11.813858032226562
    10. '.remove' → logprob: -12.188858032226562

Token 30: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.004386202432215214
    2. '])' → logprob: -6.2543864250183105
    3. '-' → logprob: -7.1293864250183105
    4. ')' → logprob: -7.2543864250183105
    5. ')]' → logprob: -8.004385948181152
    6. 'first' → logprob: -8.129385948181152
    7. 'i' → logprob: -9.004385948181152
    8. ' ]' → logprob: -9.379385948181152
    9. '1' → logprob: -10.129385948181152
    10. 'ai' → logprob: -11.379385948181152

Token 31: 'ai' (ID: 1361)
  Prédit: 'ai'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ai' → logprob: -0.0001414426224073395
    2. 'first' → logprob: -9.625141143798828
    3. 'remove' → logprob: -11.125141143798828
    4. 'del' → logprob: -11.375141143798828
    5. ' ai' → logprob: -11.375141143798828
    6. 'for' → logprob: -12.125141143798828
    7. '```' → logprob: -12.125141143798828
    8. '_ai' → logprob: -12.500141143798828
    9. '.ai' → logprob: -12.625141143798828
    10. 'a' → logprob: -12.875141143798828

Token 32: '_.' (ID: 9881)
  Prédit: '.remove'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.remove' → logprob: -0.9182291626930237
    2. '.' → logprob: -1.168229103088379
    3. '.sort' → logprob: -1.293229103088379
    4. '.pop' → logprob: -4.418229103088379
    5. '_' → logprob: -6.793229103088379
    6. 'remove' → logprob: -7.668229103088379
    7. '.reverse' → logprob: -7.793229103088379
    8. '.append' → logprob: -7.918229103088379
    9. '[:]' → logprob: -8.668229103088379
    10. '<|end|>' → logprob: -8.918229103088379

Token 33: 'remove' (ID: 4942)
  Prédit: 'remove'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'remove' → logprob: -0.030883070081472397
    2. 'sort' → logprob: -3.6558830738067627
    3. 'count' → logprob: -5.905882835388184
    4. 'pop' → logprob: -6.405882835388184
    5. 'index' → logprob: -8.905882835388184
    6. 'append' → logprob: -10.405882835388184
    7. 'reverse' → logprob: -10.905882835388184
    8. 'copy' → logprob: -12.405882835388184
    9. 'clear' → logprob: -12.655882835388184
    10. '.remove' → logprob: -13.530882835388184

Token 34: '(first' (ID: 31998)
  Prédit: '(first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(first' → logprob: -0.0790729746222496
    2. '(' → logprob: -2.579072952270508
    3. 'first' → logprob: -9.204072952270508
    4. '(max' → logprob: -9.454072952270508
    5. '(f' → logprob: -13.579072952270508
    6. '('' → logprob: -14.579072952270508
    7. ' (' → logprob: -14.829072952270508
    8. '(
' → logprob: -14.829072952270508
    9. '(second' → logprob: -15.079072952270508
    10. '(fi' → logprob: -15.329072952270508

Token 35: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0013372665271162987
    2. ')
' → logprob: -6.626337051391602
    3. 'first' → logprob: -12.001337051391602
    4. 'max' → logprob: -13.376337051391602
    5. ' )' → logprob: -14.126337051391602
    6. ')

' → logprob: -14.251337051391602
    7. 'second' → logprob: -15.251337051391602
    8. ')
' → logprob: -15.251337051391602
    9. '')' → logprob: -15.501337051391602
    10. '<|end|>' → logprob: -15.876337051391602

Token 36: 'second' (ID: 13901)
  Prédit: 'second'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'second' → logprob: -0.017919417470693588
    2. 'if' → logprob: -4.142919540405273
    3. 'print' → logprob: -7.267919540405273
    4. 'first' → logprob: -7.892919540405273
    5. 'max' → logprob: -8.142919540405273
    6. 'for' → logprob: -9.017919540405273
    7. ' second' → logprob: -9.392919540405273
    8. 'ans' → logprob: -9.892919540405273
    9. 'sec' → logprob: -10.017919540405273
    10. 'mx' → logprob: -10.267919540405273

Token 37: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4027554988861084
    2. '=' → logprob: -1.1527554988861084
    3. '_' → logprob: -4.1527557373046875
    4. ' ' → logprob: -10.902755737304688
    5. '_max' → logprob: -11.902755737304688
    6. '_=' → logprob: -12.277755737304688
    7. 'max' → logprob: -13.277755737304688
    8. '=max' → logprob: -13.902755737304688
    9. '_space' → logprob: -14.027755737304688
    10. 'space' → logprob: -14.152755737304688

Token 38: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.003178071230649948
    2. ' max' → logprob: -5.753178119659424
    3. 'min' → logprob: -15.628177642822266
    4. ' ' → logprob: -16.628177642822266
    5. '(max' → logprob: -16.878177642822266
    6. '0' → logprob: -17.003177642822266
    7. 'ai' → logprob: -17.378177642822266
    8. '	max' → logprob: -18.003177642822266
    9. '   ' → logprob: -18.128177642822266
    10. '  ' → logprob: -18.503177642822266

Token 39: '(ai' (ID: 172264)
  Prédit: '(ai'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ai' → logprob: -0.07896227389574051
    2. '(' → logprob: -2.5789623260498047
    3. '(second' → logprob: -10.328962326049805
    4. '(first' → logprob: -10.453962326049805
    5. '(
' → logprob: -12.953962326049805
    6. '(a' → logprob: -13.328962326049805
    7. '<|end|>' → logprob: -13.828962326049805
    8. '(ii' → logprob: -13.953962326049805
    9. '(ui' → logprob: -14.453962326049805
    10. '(`' → logprob: -14.453962326049805

Token 40: '_)
' (ID: 58066)
  Prédit: '_)'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_)' → logprob: -0.00011117222311440855
    2. '_' → logprob: -9.37511157989502
    3. '_)
' → logprob: -10.87511157989502
    4. ')' → logprob: -11.87511157989502
    5. '__)' → logprob: -16.125110626220703
    6. '_
' → logprob: -16.375110626220703
    7. '_

' → logprob: -16.750110626220703
    8. '_]' → logprob: -17.250110626220703
    9. '_),' → logprob: -17.500110626220703
    10. '`)' → logprob: -18.000110626220703

Token 41: 'for' (ID: 1938)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 42: ' x' (ID: 1215)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.044903870671987534
    2. 'i' → logprob: -3.6699037551879883
    3. ' ai' → logprob: -4.669903755187988
    4. ' x' → logprob: -5.294903755187988
    5. ' num' → logprob: -6.294903755187988
    6. 'x' → logprob: -7.919903755187988
    7. ' number' → logprob: -7.919903755187988
    8. ' ' → logprob: -8.044903755187988
    9. 'ai' → logprob: -8.169903755187988
    10. 'num' → logprob: -8.294903755187988

Token 43: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004247930832207203
    2. 'in' → logprob: -5.504248142242432
    3. ' ' → logprob: -8.754247665405273
    4. '  ' → logprob: -11.754247665405273
    5. '   ' → logprob: -13.879247665405273
    6. '	in' → logprob: -13.879247665405273
    7. ' ' → logprob: -14.004247665405273
    8. ' i' → logprob: -15.566747665405273
    9. 's' → logprob: -15.879247665405273
    10. 'n' → logprob: -16.129247665405273

Token 44: ' ai' (ID: 8440)
  Prédit: 'ai'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ai' → logprob: -0.0017615711549296975
    2. ' ai' → logprob: -6.376761436462402
    3. '(ai' → logprob: -10.251761436462402
    4. 'range' → logprob: -10.751761436462402
    5. ' range' → logprob: -14.251761436462402
    6. '  ' → logprob: -14.626761436462402
    7. 'a' → logprob: -14.876761436462402
    8. ' ' → logprob: -15.126761436462402
    9. '[' → logprob: -15.126761436462402
    10. '_ai' → logprob: -15.251761436462402

Token 45: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0034261581022292376
    2. ':
' → logprob: -6.3784260749816895
    3. ' :' → logprob: -6.5034260749816895
    4. '<|end|>' → logprob: -9.003426551818848
    5. ' :
' → logprob: -10.878426551818848
    6. '):' → logprob: -11.003426551818848
    7. ' ' → logprob: -11.753426551818848
    8. '<|end|>' → logprob: -11.878426551818848
    9. '_' → logprob: -12.128426551818848
    10. '```' → logprob: -12.503426551818848

Token 46: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1564960479736328
    2. ' if' → logprob: -2.031496047973633
    3. ' ' → logprob: -5.281496047973633
    4. 'if' → logprob: -5.281496047973633
    5. 'print' → logprob: -6.906496047973633
    6. ' print' → logprob: -6.906496047973633
    7. '  ' → logprob: -8.031496047973633
    8. ':' → logprob: -8.281496047973633
    9. '    ' → logprob: -8.281496047973633
    10. '	if' → logprob: -8.656496047973633

Token 47: ' if' (ID: 538)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.5205597281455994
    2. 'print' → logprob: -1.0205597877502441
    3. '   ' → logprob: -3.395559787750244
    4. ' if' → logprob: -4.520559787750244
    5. 'if' (adapté à ' if') → logprob: -7.395559787750244
    6. '    ' → logprob: -8.145559310913086
    7. ' ' → logprob: -9.895559310913086
    8. '	print' → logprob: -11.520559310913086
    9. '```' → logprob: -11.770559310913086
    10. '  ' → logprob: -11.895559310913086

Token 48: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.06503695249557495
    2. 'x' → logprob: -2.8150370121002197
    3. ' ' → logprob: -6.315036773681641
    4. ' first' → logprob: -7.190036773681641
    5. '   ' → logprob: -7.940036773681641
    6. 'first' → logprob: -9.56503677368164
    7. '  ' → logprob: -10.06503677368164
    8. '    ' → logprob: -11.44003677368164
    9. '	x' → logprob: -12.69003677368164
    10. ' not' → logprob: -12.81503677368164

Token 49: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3935999572277069
    2. ' ==' → logprob: -1.7685999870300293
    3. '<' → logprob: -2.3935999870300293
    4. '!=' → logprob: -3.0185999870300293
    5. ' !=' → logprob: -4.518599987030029
    6. ' <' → logprob: -6.018599987030029
    7. ' ' → logprob: -7.768599987030029
    8. '=' → logprob: -7.893599987030029
    9. '%' → logprob: -8.643599510192871
    10. '+' → logprob: -10.018599510192871

Token 50: ' first' (ID: 1577)
  Prédit: 'first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'first' → logprob: -0.01197514496743679
    2. 'second' → logprob: -4.636975288391113
    3. ' first' → logprob: -6.136975288391113
    4. ' second' → logprob: -10.886975288391113
    5. 'max' → logprob: -11.761975288391113
    6. ' ' → logprob: -12.011975288391113
    7. 'f' → logprob: -12.261975288391113
    8. '	first' → logprob: -12.949475288391113
    9. '   ' → logprob: -13.074475288391113
    10. '1' → logprob: -13.386975288391113

Token 51: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00044092073221690953
    2. ':
' → logprob: -8.75044059753418
    3. ' and' → logprob: -9.00044059753418
    4. ' :' → logprob: -9.50044059753418
    5. '   ' → logprob: -10.62544059753418
    6. '):' → logprob: -11.25044059753418
    7. 'and' → logprob: -11.25044059753418
    8. ')' → logprob: -12.00044059753418
    9. '>' → logprob: -12.37544059753418
    10. ':return' → logprob: -12.37544059753418

Token 52: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6052601933479309
    2. '   ' → logprob: -0.8552601933479309
    3. ' print' → logprob: -3.980260133743286
    4. 'print' → logprob: -5.230260372161865
    5. ':' → logprob: -5.605260372161865
    6. ' continue' → logprob: -7.730260372161865
    7. ':
' → logprob: -8.980259895324707
    8. ' or' → logprob: -9.355259895324707
    9. ' ' → logprob: -9.480259895324707
    10. '>' → logprob: -9.730259895324707

Token 53: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.009000146761536598
    2. '   ' → logprob: -4.884000301361084
    3. ' print' → logprob: -6.759000301361084
    4. 'continue' → logprob: -8.633999824523926
    5. ' ' → logprob: -11.258999824523926
    6. '       ' → logprob: -12.008999824523926
    7. 'second' → logprob: -12.133999824523926
    8. ' continue' → logprob: -12.633999824523926
    9. '0' → logprob: -12.633999824523926
    10. '    ' → logprob: -13.258999824523926

Token 54: '(second' (ID: 78627)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.12319681793451309
    2. '(x' → logprob: -2.998196840286255
    3. '0' → logprob: -3.873196840286255
    4. '(first' → logprob: -3.873196840286255
    5. '(second' → logprob: -4.248196601867676
    6. '("' → logprob: -5.748196601867676
    7. 'first' → logprob: -5.998196601867676
    8. 'second' → logprob: -6.498196601867676
    9. 'x' → logprob: -6.873196601867676
    10. '('' → logprob: -7.748196601867676

Token 55: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009750670287758112
    2. ')
' → logprob: -7.000975131988525
    3. '   ' → logprob: -10.000974655151367
    4. ' )' → logprob: -11.375974655151367
    5. 'else' → logprob: -13.375974655151367
    6. '')' → logprob: -14.000974655151367
    7. ',' → logprob: -14.125974655151367
    8. ')
' → logprob: -14.500974655151367
    9. '))' → logprob: -14.625974655151367
    10. ' else' → logprob: -14.875974655151367

Token 56: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.22638781368732452
    2. ' else' → logprob: -1.601387858390808
    3. '<|end|>' → logprob: -7.476387977600098
    4. '```' → logprob: -9.101387977600098
    5. ' ' → logprob: -9.476387977600098
    6. ')' → logprob: -9.851387977600098
    7. ' 
' → logprob: -10.226387977600098
    8. '   ' → logprob: -10.476387977600098
    9. 'elif' → logprob: -11.101387977600098
    10. '    
' → logprob: -11.101387977600098

Token 57: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.6804137229919434
    2. '   ' → logprob: -1.1804137229919434
    3. ' else' → logprob: -1.6804137229919434
    4. '```' → logprob: -9.555414199829102
    5. '<|end|>' → logprob: -10.680414199829102
    6. '	else' → logprob: -11.055414199829102
    7. 'elif' → logprob: -11.305414199829102
    8. ' ' → logprob: -11.680414199829102
    9. ')' → logprob: -12.805414199829102
    10. '    ' → logprob: -13.430414199829102

Token 58: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3516979515552521
    2. '   ' → logprob: -2.1016979217529297
    3. ' print' → logprob: -2.9766979217529297
    4. '(' → logprob: -3.3516979217529297
    5. ':' → logprob: -3.7266979217529297
    6. 'print' → logprob: -4.10169792175293
    7. ',' → logprob: -4.10169792175293
    8. '    ' → logprob: -4.35169792175293
    9. '(first' → logprob: -5.10169792175293
    10. '(print' → logprob: -5.97669792175293

Token 59: '       ' (ID: 309)
  Prédit: 'first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'first' → logprob: -0.839631974697113
    2. 'print' → logprob: -1.0896320343017578
    3. ' first' → logprob: -1.5896320343017578
    4. ' print' → logprob: -3.589632034301758
    5. '(first' → logprob: -9.464632034301758
    6. '   ' → logprob: -9.464632034301758
    7. '    ' → logprob: -11.714632034301758
    8. '[first' → logprob: -11.964632034301758
    9. '  ' → logprob: -13.089632034301758
    10. ' ' → logprob: -13.089632034301758

Token 60: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0040785204619169235
    2. 'first' → logprob: -5.504078388214111
    3. ' print' → logprob: -15.75407886505127
    4. ' first' → logprob: -17.254077911376953
    5. '   ' → logprob: -18.629077911376953
    6. '[first' → logprob: -19.129077911376953
    7. '(first' → logprob: -19.504077911376953
    8. 'pr' → logprob: -20.629077911376953
    9. 'printf' → logprob: -20.754077911376953
    10. ':first' → logprob: -21.754077911376953

Token 61: '(first' (ID: 31998)
  Prédit: '(first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(first' → logprob: -0.0005280109471641481
    2. '(' → logprob: -8.250528335571289
    3. 'first' → logprob: -8.250528335571289
    4. '(max' → logprob: -13.125528335571289
    5. ' first' → logprob: -13.250528335571289
    6. '(x' → logprob: -14.000528335571289
    7. ' (' → logprob: -14.875528335571289
    8. '(f' → logprob: -15.500528335571289
    9. '(second' → logprob: -15.875528335571289
    10. '()' → logprob: -16.12552833557129

Token 62: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5048530030981055e-06
    2. ')
' → logprob: -14.250001907348633
    3. '))' → logprob: -15.000001907348633
    4. ' )' → logprob: -15.125001907348633
    5. '')' → logprob: -16.625001907348633
    6. '`)' → logprob: -17.375001907348633
    7. ')`' → logprob: -17.500001907348633
    8. ')x' → logprob: -17.750001907348633
    9. '）' → logprob: -18.250001907348633
    10. '")' → logprob: -18.250001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 60
Tokens correctement prédits (1ère position, stricte): 20
Tokens correctement prédits (1ère position, avec adaptation): 23
Tokens correctement prédits (top 10): 48
Précision stricte (1ère position): 33.33%
Précision adaptée (1ère position): 38.33%
Précision (top 10): 80.00%
================================================================================
