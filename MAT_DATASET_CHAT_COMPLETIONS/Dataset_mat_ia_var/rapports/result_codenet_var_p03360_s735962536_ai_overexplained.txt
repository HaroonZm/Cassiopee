================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:19:47
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Demande à l'utilisateur de saisir des nombres entiers séparés par des espaces.
# La fonction input() récupère la saisie sous forme de chaîne de caractères.
# split() découpe la chaîne en une liste de sous-chaînes séparées par des espaces.
# map(int, ...) convertit chacune de ces sous-chaînes en entier.
# list(...) transforme l'itérable renvoyé par map en une liste Python standard, qui sera stockée dans la variable a.
a = list(map(int, input().split()))

# Demande à l'utilisateur de saisir un nombre entier (la valeur de k).
# input() récupère la saisie sous forme de chaîne de caractères, qui est ensuite convertie en entier avec int().
k = int(input())

# Trie la liste a sur place dans l'ordre croissant.
# Cela signifie que les éléments de la liste seront arrangés du plus petit au plus grand.
a.sort()

# Calcule la valeur suivante :
#   - a[0] : le plus petit élément de la liste (puisqu'elle a été triée),
#   - a[1] : le deuxième plus petit élément de la liste,
#   - a[2] : le troisième plus petit élément de la liste.
#   - pow(2, k) : calcule 2 à la puissance k.
#   - a[2] * pow(2, k) : le troisième élément multiplié par 2 puissance k.
# Additionne a[0], a[1] et le résultat précédent, puis affiche le résultat.
print(a[0] + a[1] + a[2] * pow(2, k))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Dem' (ID: 9458)
  → Token d'amorce (pas de prédiction)

Token 2: 'ande' (ID: 4102)
  → Token d'amorce (pas de prédiction)

Token 3: ' à' (ID: 1221)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7934136390686035
    2. ':' → logprob: -1.5434136390686035
    3. 's' → logprob: -1.6684136390686035
    4. ' de' → logprob: -2.7934136390686035
    5. ' ' → logprob: -3.1684136390686035
    6. '=' → logprob: -4.7934136390686035
    7. ' =' → logprob: -4.7934136390686035
    8. ' :' → logprob: -4.9184136390686035
    9. '.' → logprob: -5.2934136390686035
    10. ' d' → logprob: -5.7934136390686035

Token 4: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.16771981120109558
    2. ' l' → logprob: -1.917719841003418
    3. ' ' → logprob: -5.667719841003418
    4. ' user' → logprob: -6.667719841003418
    5. 'user' → logprob: -7.167719841003418
    6. ''' → logprob: -7.917719841003418
    7. 'u' → logprob: -8.167719841003418
    8. '_' → logprob: -8.417719841003418
    9. ' ' → logprob: -8.917719841003418
    10. ' utilisateur' → logprob: -9.042719841003418

Token 5: ''utilisateur' (ID: 140803)
  Prédit: ''utilisateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''utilisateur' → logprob: -0.13842537999153137
    2. 'u' → logprob: -2.763425350189209
    3. ''' → logprob: -3.263425350189209
    4. 'util' → logprob: -4.763425350189209
    5. 'a' → logprob: -5.013425350189209
    6. '’utilisateur' → logprob: -5.138425350189209
    7. ' utilisateur' → logprob: -5.513425350189209
    8. 'e' → logprob: -7.638425350189209
    9. ''user' → logprob: -7.763425350189209
    10. '_' → logprob: -7.888425350189209

Token 6: ' de' (ID: 334)
  Prédit: 'nom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nom' → logprob: -0.17538928985595703
    2. 'name' → logprob: -2.675389289855957
    3. 'n' → logprob: -3.425389289855957
    4. 's' → logprob: -4.300389289855957
    5. ' nom' → logprob: -4.800389289855957
    6. 'user' → logprob: -4.925389289855957
    7. ' =' → logprob: -5.925389289855957
    8. 'prenom' → logprob: -6.050389289855957
    9. 'input' → logprob: -6.175389289855957
    10. 'print' → logprob: -6.300389289855957

Token 7: ' saisir' (ID: 152120)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.028796790167689323
    2. 'entr' → logprob: -4.153796672821045
    3. ' saisir' → logprob: -5.153796672821045
    4. '```' → logprob: -6.028796672821045
    5. 'r' → logprob: -6.153796672821045
    6. 'sa' → logprob: -7.903796672821045
    7. 'don' → logprob: -8.153797149658203
    8. 'entrée' → logprob: -8.403797149658203
    9. '#' → logprob: -8.403797149658203
    10. ' entrer' → logprob: -8.653797149658203

Token 8: ' des' (ID: 731)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4754936993122101
    2. ' un' → logprob: -1.4754936695098877
    3. ' une' → logprob: -2.2254936695098877
    4. ''' → logprob: -4.350493907928467
    5. 's' → logprob: -5.725493907928467
    6. ''un' → logprob: -5.850493907928467
    7. ' ' → logprob: -5.850493907928467
    8. 'un' → logprob: -6.100493907928467
    9. 'une' → logprob: -6.225493907928467
    10. ''une' → logprob: -6.350493907928467

Token 9: ' nombres' (ID: 76205)
  Prédit: ' données'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' données' → logprob: -0.16737791895866394
    2. ''informations' → logprob: -3.4173779487609863
    3. ' caractères' → logprob: -3.5423779487609863
    4. '_' → logprob: -3.5423779487609863
    5. 'n' → logprob: -4.167377948760986
    6. 'car' → logprob: -4.792377948760986
    7. 'u' → logprob: -5.167377948760986
    8. ' espaces' → logprob: -5.417377948760986
    9. 'd' → logprob: -5.667377948760986
    10. ' lignes' → logprob: -5.792377948760986

Token 10: ' ent' (ID: 1121)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.04824187234044075
    2. '\n' → logprob: -3.4232418537139893
    3. 's' → logprob: -5.298242092132568
    4. '#' → logprob: -6.048242092132568
    5. 'x' → logprob: -6.673242092132568
    6. '\' → logprob: -7.048242092132568
    7. ' ' → logprob: -7.048242092132568
    8. 'numbers' → logprob: -7.173242092132568
    9. '```' → logprob: -7.673242092132568
    10. 'nombre' → logprob: -7.798242092132568

Token 11: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.00026455431361682713
    2. 'i' → logprob: -8.875264167785645
    3. 'ier' → logprob: -9.625264167785645
    4. '```' → logprob: -10.500264167785645
    5. 'irs' → logprob: -10.750264167785645
    6. 'rs' → logprob: -12.625264167785645
    7. 'riers' → logprob: -14.000264167785645
    8. '#' → logprob: -14.125264167785645
    9. 'ri' → logprob: -14.125264167785645
    10. 'ers' → logprob: -14.250264167785645

Token 12: ' sépar' (ID: 97160)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.04972568154335022
    2. '\n' → logprob: -3.1747257709503174
    3. '\' → logprob: -6.049725532531738
    4. '#' → logprob: -7.299725532531738
    5. 'nombre' → logprob: -7.299725532531738
    6. 's' → logprob: -7.674725532531738
    7. 'x' → logprob: -7.924725532531738
    8. 'input' → logprob: -7.924725532531738
    9. 'numbers' → logprob: -8.049725532531738
    10. '```' → logprob: -8.174725532531738

Token 13: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.0004837001906707883
    2. 'é' → logprob: -7.750483512878418
    3. 'es' → logprob: -10.250483512878418
    4. '```' → logprob: -12.125483512878418
    5. '#' → logprob: -12.500483512878418
    6. 'ès' → logprob: -12.625483512878418
    7. 's' → logprob: -13.000483512878418
    8. 'par' → logprob: -14.250483512878418
    9. 'ées' → logprob: -14.250483512878418
    10. 'ÉS' → logprob: -14.750483512878418

Token 14: ' par' (ID: 686)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.1201694905757904
    2. ' par' → logprob: -2.3701694011688232
    3. 'es' → logprob: -4.245169639587402
    4. 's' → logprob: -6.245169639587402
    5. '_par' → logprob: -6.995169639587402
    6. 'és' → logprob: -7.495169639587402
    7. ' ' → logprob: -7.620169639587402
    8. ',' → logprob: -8.245169639587402
    9. '(par' → logprob: -8.245169639587402
    10. '```' → logprob: -8.995169639587402

Token 15: ' des' (ID: 731)
  Prédit: 'des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'des' → logprob: -0.1014719158411026
    2. ' des' → logprob: -2.9764719009399414
    3. 'un' → logprob: -3.4764719009399414
    4. 'es' → logprob: -4.726471900939941
    5. 'une' → logprob: -6.101471900939941
    6. 'esp' → logprob: -6.476471900939941
    7. '```' → logprob: -7.351471900939941
    8. ' un' → logprob: -8.601471900939941
    9. 'spaces' → logprob: -8.601471900939941
    10. ''un' → logprob: -8.726471900939941

Token 16: ' espaces' (ID: 98361)
  Prédit: 'esp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'esp' → logprob: -0.1604257971048355
    2. ' espaces' → logprob: -2.535425901412964
    3. 'es' → logprob: -3.535425901412964
    4. ''esp' → logprob: -3.535425901412964
    5. 'spaces' → logprob: -5.160425662994385
    6. ''espace' → logprob: -6.035425662994385
    7. 'vir' → logprob: -7.160425662994385
    8. '```' → logprob: -8.160426139831543
    9. ',' → logprob: -8.285426139831543
    10. 's' → logprob: -8.535426139831543

Token 17: '.
' (ID: 558)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.08907109498977661
    2. 'numbers' → logprob: -2.714071035385132
    3. 'user' → logprob: -4.339071273803711
    4. 'input' → logprob: -6.339071273803711
    5. 's' → logprob: -6.339071273803711
    6. 'nums' → logprob: -7.214071273803711
    7. 'nombre' → logprob: -7.464071273803711
    8. '```' → logprob: -7.964071273803711
    9. 'ent' → logprob: -8.464071273803711
    10. '`' → logprob: -9.089071273803711

Token 18: '#' (ID: 2)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.01600280962884426
    2. 's' → logprob: -4.891002655029297
    3. 'numbers' → logprob: -5.641002655029297
    4. 'user' → logprob: -6.516002655029297
    5. 'nombre' → logprob: -6.891002655029297
    6. '#' → logprob: -7.016002655029297
    7. 'input' → logprob: -8.516002655029297
    8. 'x' → logprob: -8.641002655029297
    9. 'ent' → logprob: -8.766002655029297
    10. '```' → logprob: -8.766002655029297

Token 19: ' La' (ID: 3038)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.35577231645584106
    2. 'numbers' → logprob: -1.4807722568511963
    3. 'user' → logprob: -3.6057722568511963
    4. 's' → logprob: -3.8557722568511963
    5. 'nombre' → logprob: -4.980772495269775
    6. 'ent' → logprob: -5.230772495269775
    7. 'input' → logprob: -5.855772495269775
    8. 'nums' → logprob: -6.230772495269775
    9. '#' → logprob: -6.730772495269775
    10. ' numbers' → logprob: -7.355772495269775

Token 20: ' fonction' (ID: 17610)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4255232512950897
    2. 's' → logprob: -1.300523281097412
    3. ' n' → logprob: -4.175523281097412
    4. 'chaine' → logprob: -4.425523281097412
    5. 'def' → logprob: -4.800523281097412
    6. 'numbers' → logprob: -5.300523281097412
    7. ' nombres' → logprob: -5.550523281097412
    8. 'nombre' → logprob: -5.550523281097412
    9. ' ' → logprob: -5.925523281097412
    10. 'liste' → logprob: -6.050523281097412

Token 21: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.7902724146842957
    2. 'def' → logprob: -0.9152724146842957
    3. ' input' → logprob: -2.0402724742889404
    4. 's' → logprob: -4.415272235870361
    5. ' def' → logprob: -5.915272235870361
    6. 'split' → logprob: -7.540272235870361
    7. 'n' → logprob: -8.54027271270752
    8. 'int' → logprob: -9.79027271270752
    9. 'print' → logprob: -10.29027271270752
    10. 'sum' → logprob: -10.29027271270752

Token 22: '()' (ID: 416)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0031865055207163095
    2. '()' → logprob: -6.3781867027282715
    3. '('' → logprob: -7.1281867027282715
    4. 's' → logprob: -8.253186225891113
    5. '("' → logprob: -8.378186225891113
    6. '(
' → logprob: -10.378186225891113
    7. ' (' → logprob: -10.628186225891113
    8. ')' → logprob: -11.003186225891113
    9. '("""' → logprob: -11.128186225891113
    10. '_' → logprob: -11.253186225891113

Token 23: ' récup' (ID: 62856)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.4862234592437744
    2. ' ' → logprob: -1.2362234592437744
    3. ' )' → logprob: -3.7362234592437744
    4. ' s' → logprob: -4.611223220825195
    5. ')' → logprob: -4.736223220825195
    6. 'user' → logprob: -4.861223220825195
    7. '.' → logprob: -4.986223220825195
    8. ',' → logprob: -5.236223220825195
    9. ' =' → logprob: -5.361223220825195
    10. '(' → logprob: -5.486223220825195

Token 24: 'ère' (ID: 4346)
  Prédit: 'ère'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ère' → logprob: -0.20922820270061493
    2. 'è' → logprob: -1.7092281579971313
    3. 'èr' → logprob: -4.959228038787842
    4. 'é' → logprob: -7.959228038787842
    5. 'ére' → logprob: -8.834228515625
    6. 'èrent' → logprob: -9.834228515625
    7. 'č' → logprob: -10.334228515625
    8. 'érer' → logprob: -10.459228515625
    9. '�' → logprob: -10.584228515625
    10. '#' → logprob: -10.709228515625

Token 25: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.671181857585907
    2. ' des' → logprob: -1.9211819171905518
    3. ' l' → logprob: -2.0461819171905518
    4. ' les' → logprob: -2.6711819171905518
    5. ' une' → logprob: -2.9211819171905518
    6. ' ' → logprob: -3.0461819171905518
    7. 'la' → logprob: -4.921181678771973
    8. 'des' → logprob: -4.921181678771973
    9. 'l' → logprob: -5.546181678771973
    10. ' le' → logprob: -5.796181678771973

Token 26: ' sais' (ID: 30010)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.9191418290138245
    2. ' chaîne' → logprob: -1.0441417694091797
    3. 'chaine' → logprob: -1.7941417694091797
    4. 'cha' → logprob: -3.5441417694091797
    5. 'entrée' → logprob: -4.04414176940918
    6. ' sais' → logprob: -5.16914176940918
    7. ' chaine' → logprob: -5.16914176940918
    8. 'liste' → logprob: -5.29414176940918
    9. ' liste' → logprob: -5.29414176940918
    10. 'string' → logprob: -6.16914176940918

Token 27: 'ie' (ID: 396)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.10522206127643585
    2. 's' → logprob: -2.48022198677063
    3. 'es' → logprob: -4.230222225189209
    4. 'sie' → logprob: -6.605222225189209
    5. 'ie' → logprob: -8.85522174835205
    6. '#' → logprob: -10.23022174835205
    7. '```' → logprob: -11.35522174835205
    8. 'ss' → logprob: -11.48022174835205
    9. '   ' → logprob: -11.85522174835205
    10. ' ' → logprob: -11.98022174835205

Token 28: ' sous' (ID: 14487)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.09679549932479858
    2. 's' → logprob: -3.3467955589294434
    3. 'user' → logprob: -4.096795558929443
    4. ' ,' → logprob: -4.846795558929443
    5. ' user' → logprob: -5.471795558929443
    6. ' )' → logprob: -5.471795558929443
    7. '.' → logprob: -5.846795558929443
    8. ' d' → logprob: -5.846795558929443
    9. ' =' → logprob: -5.971795558929443
    10. ',' → logprob: -5.971795558929443

Token 29: ' forme' (ID: 27450)
  Prédit: ' forme'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' forme' → logprob: -0.10844998806715012
    2. 'forme' → logprob: -2.358449935913086
    3. 'form' → logprob: -4.983449935913086
    4. 'chaine' → logprob: -7.108449935913086
    5. ' form' → logprob: -7.983449935913086
    6. 'forma' → logprob: -9.483449935913086
    7. 'ent' → logprob: -10.233449935913086
    8. 'la' → logprob: -10.358449935913086
    9. ' la' → logprob: -11.108449935913086
    10. ' ' → logprob: -11.608449935913086

Token 30: ' de' (ID: 334)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.011083542369306087
    2. 'd' → logprob: -4.511083602905273
    3. ' de' → logprob: -10.636083602905273
    4. ' ' → logprob: -12.261083602905273
    5. 'de' → logprob: -12.761083602905273
    6. 's' → logprob: -14.636083602905273
    7. ''d' → logprob: -14.761083602905273
    8. ''' → logprob: -14.761083602905273
    9. 'space' → logprob: -14.886083602905273
    10. '<|end|>' → logprob: -15.261083602905273

Token 31: ' chaîne' (ID: 89288)
  Prédit: 'chaine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chaine' → logprob: -0.10455796867609024
    2. ' chaîne' → logprob: -2.854557991027832
    3. 'cha' → logprob: -3.229557991027832
    4. ' chaine' → logprob: -7.229557991027832
    5. 'texte' → logprob: -7.479557991027832
    6. 'string' → logprob: -7.604557991027832
    7. 'une' → logprob: -8.854557991027832
    8. 'str' → logprob: -8.854557991027832
    9. 'chain' → logprob: -11.104557991027832
    10. ' chaînes' → logprob: -11.604557991027832

Token 32: ' de' (ID: 334)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.41273033618927
    2. ' ' → logprob: -2.0377302169799805
    3. 'n' → logprob: -2.4127302169799805
    4. ',' → logprob: -3.0377302169799805
    5. 'user' → logprob: -4.5377302169799805
    6. '[' → logprob: -4.6627302169799805
    7. '.' → logprob: -4.7877302169799805
    8. 'numbers' → logprob: -5.1627302169799805
    9. ' )' → logprob: -5.2877302169799805
    10. 'e' → logprob: -5.4127302169799805

Token 33: ' caractères' (ID: 183106)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.060983672738075256
    2. ' caractères' → logprob: -2.935983657836914
    3. 'texte' → logprob: -5.560983657836914
    4. 'chaine' → logprob: -6.310983657836914
    5. 'cha' → logprob: -9.060983657836914
    6. ' caract' → logprob: -9.435983657836914
    7. ' caracteres' → logprob: -9.560983657836914
    8. 'char' → logprob: -10.185983657836914
    9. 'str' → logprob: -11.060983657836914
    10. 'chain' → logprob: -11.185983657836914

Token 34: '.
' (ID: 558)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.055930282920598984
    2. '#' → logprob: -3.8059303760528564
    3. ',' → logprob: -4.305930137634277
    4. 'numbers' → logprob: -5.555930137634277
    5. 'e' → logprob: -5.805930137634277
    6. '.' → logprob: -6.305930137634277
    7. 's' → logprob: -6.305930137634277
    8. '\' → logprob: -6.930930137634277
    9. '```' → logprob: -6.930930137634277
    10. 'i' → logprob: -7.180930137634277

Token 35: '#' (ID: 2)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.009282704442739487
    2. '#' → logprob: -5.50928258895874
    3. 'numbers' → logprob: -5.50928258895874
    4. 's' → logprob: -7.75928258895874
    5. '\' → logprob: -8.759283065795898
    6. 'nombre' → logprob: -9.259283065795898
    7. 'user' → logprob: -9.634283065795898
    8. '```' → logprob: -9.634283065795898
    9. 'a' → logprob: -9.884283065795898
    10. '\n' → logprob: -10.009283065795898

Token 36: ' split' (ID: 12648)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.016266029328107834
    2. '#' → logprob: -4.766265869140625
    3. 's' → logprob: -5.641265869140625
    4. 'numbers' → logprob: -6.016265869140625
    5. 'u' → logprob: -7.891265869140625
    6. 'i' → logprob: -8.641265869140625
    7. 'a' → logprob: -8.766265869140625
    8. 'e' → logprob: -8.766265869140625
    9. 'user' → logprob: -9.391265869140625
    10. 'nombre' → logprob: -9.516265869140625

Token 37: '()' (ID: 416)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03691941127181053
    2. '()' → logprob: -3.411919355392456
    3. '('' → logprob: -5.786919593811035
    4. '("' → logprob: -9.786919593811035
    5. '("("' → logprob: -9.911919593811035
    6. '(
' → logprob: -10.036919593811035
    7. ''' → logprob: -11.661919593811035
    8. 's' → logprob: -12.036919593811035
    9. '("""' → logprob: -12.411919593811035
    10. '```' → logprob: -12.661919593811035

Token 38: ' décou' (ID: 68302)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0066083152778446674
    2. '()' → logprob: -5.506608486175537
    3. '('' → logprob: -7.256608486175537
    4. ' (' → logprob: -7.256608486175537
    5. ' ' → logprob: -8.006608009338379
    6. ')' → logprob: -8.631608009338379
    7. ''' → logprob: -8.756608009338379
    8. '(
' → logprob: -8.756608009338379
    9. 's' → logprob: -10.006608009338379
    10. '<|end|>' → logprob: -10.381608009338379

Token 39: 'pe' (ID: 424)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.16030831634998322
    2. 'pe' → logprob: -1.9103083610534668
    3. 'page' → logprob: -10.660307884216309
    4. '```' → logprob: -11.660307884216309
    5. 'pé' → logprob: -11.660307884216309
    6. '`' → logprob: -11.910307884216309
    7. 'пе' → logprob: -12.410307884216309
    8. 'п' → logprob: -12.535307884216309
    9. '#' → logprob: -12.785307884216309
    10. '	p' → logprob: -12.785307884216309

Token 40: ' la' (ID: 557)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6767302751541138
    2. ' ' → logprob: -1.5517302751541138
    3. '()' → logprob: -2.051730155944824
    4. ' la' → logprob: -2.926730155944824
    5. '('' → logprob: -3.301730155944824
    6. ' (' → logprob: -3.926730155944824
    7. 'la' → logprob: -4.676730155944824
    8. 's' → logprob: -5.051730155944824
    9. ' ()' → logprob: -5.051730155944824
    10. ''' → logprob: -5.301730155944824

Token 41: ' chaîne' (ID: 89288)
  Prédit: ' chaîne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.12179864943027496
    2. 'chaine' → logprob: -2.3717987537384033
    3. 'cha' → logprob: -3.9967987537384033
    4. ' chaine' → logprob: -5.996798515319824
    5. ' chaînes' → logprob: -8.871798515319824
    6. 's' → logprob: -8.871798515319824
    7. 'string' → logprob: -9.371798515319824
    8. ' ' → logprob: -9.871798515319824
    9. ' cha' → logprob: -10.496798515319824
    10. ' string' → logprob: -10.996798515319824

Token 42: ' en' (ID: 469)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.078603744506836
    2. ' en' → logprob: -1.203603744506836
    3. '()' → logprob: -1.828603744506836
    4. ' )' → logprob: -3.078603744506836
    5. ' =' → logprob: -3.453603744506836
    6. ' par' → logprob: -3.703603744506836
    7. ')' → logprob: -3.828603744506836
    8. '<|end|>' → logprob: -3.953603744506836
    9. 'tokens' → logprob: -4.953603744506836
    10. '[' → logprob: -5.078603744506836

Token 43: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.058588821440935135
    2. 'une' → logprob: -3.808588743209839
    3. ' espaces' → logprob: -4.683588981628418
    4. ' liste' → logprob: -4.933588981628418
    5. ' des' → logprob: -5.183588981628418
    6. ' un' → logprob: -5.933588981628418
    7. 'liste' → logprob: -6.308588981628418
    8. ' morceaux' → logprob: -6.683588981628418
    9. ' tokens' → logprob: -6.808588981628418
    10. 'élé' → logprob: -7.058588981628418

Token 44: ' liste' (ID: 31719)
  Prédit: ' liste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.1166900023818016
    2. 'liste' → logprob: -2.241689920425415
    3. 's' → logprob: -6.116690158843994
    4. 'list' → logprob: -6.741690158843994
    5. ' list' → logprob: -8.991689682006836
    6. 'Liste' → logprob: -9.491689682006836
    7. ' chaîne' → logprob: -9.866689682006836
    8. 'chaine' → logprob: -9.866689682006836
    9. ' listes' → logprob: -10.116689682006836
    10. ' ' → logprob: -10.491689682006836

Token 45: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9541053771972656
    2. '[' → logprob: -1.3291053771972656
    3. '<|end|>' → logprob: -1.7041053771972656
    4. 's' → logprob: -2.8291053771972656
    5. '[]' → logprob: -3.9541053771972656
    6. 'tokens' → logprob: -4.579105377197266
    7. ',' → logprob: -4.704105377197266
    8. '[:]' → logprob: -4.829105377197266
    9. ' =' → logprob: -4.954105377197266
    10. ' de' → logprob: -5.079105377197266

Token 46: ' sous' (ID: 14487)
  Prédit: ' chaînes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' chaînes' → logprob: -0.10244153439998627
    2. ' mots' → logprob: -3.9774415493011475
    3. 'm' → logprob: -4.477441310882568
    4. 'tokens' → logprob: -4.602441310882568
    5. 'strings' → logprob: -4.602441310882568
    6. ' tokens' → logprob: -4.727441310882568
    7. 'str' → logprob: -4.727441310882568
    8. 'cha' → logprob: -5.102441310882568
    9. 'chain' → logprob: -5.102441310882568
    10. ' strings' → logprob: -5.227441310882568

Token 47: '-cha' (ID: 163177)
  Prédit: ' chaînes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaînes' → logprob: -0.02359658107161522
    2. 'cha' → logprob: -4.39859676361084
    3. 'chain' → logprob: -5.39859676361084
    4. '-cha' → logprob: -5.64859676361084
    5. '   ' → logprob: -7.14859676361084
    6. '-chain' → logprob: -7.77359676361084
    7. ' chain' → logprob: -8.02359676361084
    8. 'chaine' → logprob: -8.27359676361084
    9. '_' → logprob: -8.39859676361084
    10. ' chaîne' → logprob: -8.52359676361084

Token 48: 'înes' (ID: 171517)
  Prédit: 'înes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'înes' → logprob: -0.38067200779914856
    2. 'î' → logprob: -1.2556719779968262
    3. 'nes' → logprob: -3.755671977996826
    4. 'r' → logprob: -5.755671977996826
    5. 'Î' → logprob: -6.380671977996826
    6. '```' → logprob: -7.880671977996826
    7. 'ï' → logprob: -8.005672454833984
    8. 'ì' → logprob: -8.380672454833984
    9. 'ines' → logprob: -8.505672454833984
    10. 'nés' → logprob: -8.505672454833984

Token 49: ' sépar' (ID: 97160)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.04472732171416283
    2. 's' → logprob: -4.044727325439453
    3. '[' → logprob: -5.294727325439453
    4. 'numbers' → logprob: -5.294727325439453
    5. ',' → logprob: -5.419727325439453
    6. 'user' → logprob: -6.294727325439453
    7. '```' → logprob: -6.544727325439453
    8. '.' → logprob: -6.794727325439453
    9. '#' → logprob: -7.044727325439453
    10. 'ent' → logprob: -7.294727325439453

Token 50: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.013757120817899704
    2. 'é' → logprob: -4.513757228851318
    3. 'ée' → logprob: -6.263757228851318
    4. 'és' → logprob: -7.138757228851318
    5. 'e' → logprob: -12.88875675201416
    6. 'er' → logprob: -13.76375675201416
    7. 'par' → logprob: -13.76375675201416
    8. 'É' → logprob: -14.26375675201416
    9. 'es' → logprob: -14.51375675201416
    10. '```' → logprob: -14.63875675201416

Token 51: ' par' (ID: 686)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.04949483647942543
    2. ' par' → logprob: -3.424494743347168
    3. ' ' → logprob: -5.049494743347168
    4. '<|end|>' → logprob: -6.299494743347168
    5. '_par' → logprob: -6.549494743347168
    6. ''' → logprob: -6.674494743347168
    7. '(par' → logprob: -6.799494743347168
    8. 's' → logprob: -7.424494743347168
    9. ')' → logprob: -7.549494743347168
    10. '.' → logprob: -7.799494743347168

Token 52: ' des' (ID: 731)
  Prédit: 'des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'des' → logprob: -0.8769750595092773
    2. ' des' → logprob: -1.6269750595092773
    3. ' espaces' → logprob: -2.1269750595092773
    4. ''' → logprob: -2.6269750595092773
    5. ''esp' → logprob: -2.7519750595092773
    6. 'esp' → logprob: -3.2519750595092773
    7. ''espace' → logprob: -3.6269750595092773
    8. ' ' → logprob: -3.8769750595092773
    9. 'es' → logprob: -4.001975059509277
    10. ''un' → logprob: -4.876975059509277

Token 53: ' espaces' (ID: 98361)
  Prédit: ' espaces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' espaces' → logprob: -0.15066556632518768
    2. 'esp' → logprob: -2.025665521621704
    3. ''esp' → logprob: -5.275665760040283
    4. 'spaces' → logprob: -6.525665760040283
    5. 'es' → logprob: -7.525665760040283
    6. ''espace' → logprob: -7.775665760040283
    7. ' ' → logprob: -8.775665283203125
    8. ' espace' → logprob: -9.525665283203125
    9. 'space' → logprob: -10.275665283203125
    10. ''' → logprob: -10.400665283203125

Token 54: '.
' (ID: 558)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.06646038591861725
    2. 'numbers' → logprob: -2.941460371017456
    3. 'user' → logprob: -5.816460609436035
    4. '```' → logprob: -6.066460609436035
    5. 'nombre' → logprob: -6.441460609436035
    6. 's' → logprob: -6.816460609436035
    7. 'nums' → logprob: -7.191460609436035
    8. 'ent' → logprob: -7.441460609436035
    9. ',' → logprob: -7.566460609436035
    10. 'num' → logprob: -8.691460609436035

Token 55: '#' (ID: 2)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0341184027493
    2. 'numbers' → logprob: -3.534118413925171
    3. 'nombre' → logprob: -6.784118175506592
    4. 'nums' → logprob: -6.784118175506592
    5. 'ent' → logprob: -7.284118175506592
    6. 's' → logprob: -7.659118175506592
    7. '```' → logprob: -7.909118175506592
    8. 'names' → logprob: -8.78411865234375
    9. 'user' → logprob: -8.78411865234375
    10. '#' → logprob: -10.15911865234375

Token 56: ' map' (ID: 4014)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.09513620287179947
    2. 'numbers' → logprob: -2.4701361656188965
    3. 'nums' → logprob: -6.0951361656188965
    4. '#' → logprob: -6.4701361656188965
    5. 'nombre' → logprob: -7.0951361656188965
    6. 'ent' → logprob: -7.3451361656188965
    7. 's' → logprob: -8.220136642456055
    8. 'user' → logprob: -8.970136642456055
    9. 'names' → logprob: -9.095136642456055
    10. 'l' → logprob: -9.345136642456055

Token 57: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.016517216339707375
    2. '(lambda' → logprob: -4.141517162322998
    3. '(int' → logprob: -7.891517162322998
    4. '(str' → logprob: -9.641517639160156
    5. '(
' → logprob: -11.141517639160156
    6. '(list' → logprob: -12.391517639160156
    7. '(convert' → logprob: -13.016517639160156
    8. '(func' → logprob: -13.141517639160156
    9. '(function' → logprob: -13.391517639160156
    10. '(float' → logprob: -13.391517639160156

Token 58: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003983892500400543
    2. ',' → logprob: -5.628983974456787
    3. '(' → logprob: -8.628983497619629
    4. ' )' → logprob: -9.628983497619629
    5. '())' → logprob: -10.253983497619629
    6. ',)' → logprob: -10.503983497619629
    7. '))' → logprob: -11.253983497619629
    8. '),' → logprob: -11.753983497619629
    9. ')`' → logprob: -11.878983497619629
    10. ')>' → logprob: -12.003983497619629

Token 59: ' ...)' (ID: 100545)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.5959989428520203
    2. 'input' → logprob: -1.595999002456665
    3. ')' → logprob: -1.720999002456665
    4. ' )' → logprob: -2.845999002456665
    5. ' user' → logprob: -5.845998764038086
    6. 'user' → logprob: -6.220998764038086
    7. '...)' → logprob: -7.095998764038086
    8. 's' → logprob: -7.345998764038086
    9. 'split' → logprob: -7.720998764038086
    10. '...' → logprob: -8.345998764038086

Token 60: ' convert' (ID: 8452)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5880617499351501
    2. ')' → logprob: -0.8380617499351501
    3. '(convert' → logprob: -5.338061809539795
    4. 'convert' → logprob: -5.713061809539795
    5. '(
' → logprob: -6.963061809539795
    6. '()' → logprob: -7.088061809539795
    7. '#' → logprob: -8.213061332702637
    8. '(...)' → logprob: -8.463061332702637
    9. '(int' → logprob: -8.463061332702637
    10. ' )' → logprob: -8.463061332702637

Token 61: 'it' (ID: 278)
  Prédit: 'it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.020714489743113518
    2. 't' → logprob: -4.520714282989502
    3. 'i' → logprob: -5.520714282989502
    4. 'ies' → logprob: -6.520714282989502
    5. 'iert' → logprob: -7.145714282989502
    6. '()' → logprob: -7.520714282989502
    7. ')' → logprob: -8.02071475982666
    8. 'issez' → logprob: -8.27071475982666
    9. 'issent' → logprob: -8.27071475982666
    10. 'ie' → logprob: -8.27071475982666

Token 62: ' chacune' (ID: 127465)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.34161725640296936
    2. ' la' → logprob: -1.841617226600647
    3. ' chaque' → logprob: -2.9666173458099365
    4. ' les' → logprob: -3.2166173458099365
    5. ')' → logprob: -4.216617107391357
    6. 'les' → logprob: -4.966617107391357
    7. '(
' → logprob: -5.841617107391357
    8. 'la' → logprob: -5.966617107391357
    9. '<|end|>' → logprob: -6.341617107391357
    10. ' each' → logprob: -6.591617107391357

Token 63: ' de' (ID: 334)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.036148667335510254
    2. 'des' → logprob: -3.5361485481262207
    3. '(' → logprob: -6.536148548126221
    4. '<|end|>' → logprob: -6.786148548126221
    5. ' les' → logprob: -6.911148548126221
    6. ')' → logprob: -7.161148548126221
    7. ' en' → logprob: -7.411148548126221
    8. '(des' → logprob: -7.911148548126221
    9. 'les' → logprob: -8.036149024963379
    10. ' ' → logprob: -8.911149024963379

Token 64: ' ces' (ID: 10532)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.6540480852127075
    2. 'l' → logprob: -0.9040480852127075
    3. 'input' → logprob: -3.279047966003418
    4. ' la' → logprob: -4.154047966003418
    5. 's' → logprob: -4.904047966003418
    6. ' l' → logprob: -5.654047966003418
    7. ' input' → logprob: -5.779047966003418
    8. 'strings' → logprob: -6.279047966003418
    9. 'chaine' → logprob: -6.404047966003418
    10. 'split' → logprob: -6.904047966003418

Token 65: ' sous' (ID: 14487)
  Prédit: ' chaînes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaînes' → logprob: -0.2655048668384552
    2. 's' → logprob: -2.015504837036133
    3. ' sous' → logprob: -3.140504837036133
    4. ' valeurs' → logprob: -4.015504837036133
    5. 'élé' → logprob: -4.390504837036133
    6. ' chain' → logprob: -4.765504837036133
    7. 'chain' → logprob: -5.015504837036133
    8. 'cha' → logprob: -5.265504837036133
    9. 'val' → logprob: -6.015504837036133
    10. ' éléments' → logprob: -6.515504837036133

Token 66: '-cha' (ID: 163177)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.8749510049819946
    2. ' chaînes' → logprob: -1.1249510049819946
    3. '-cha' → logprob: -1.9999510049819946
    4. '-chain' → logprob: -3.124950885772705
    5. '_' → logprob: -3.374950885772705
    6. '_chain' → logprob: -4.249950885772705
    7. '()' → logprob: -4.749950885772705
    8. '()-' → logprob: -5.499950885772705
    9. '-)' → logprob: -5.499950885772705
    10. 'chaine' → logprob: -6.124950885772705

Token 67: 'înes' (ID: 171517)
  Prédit: 'înes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'înes' → logprob: -0.47892722487449646
    2. 'î' → logprob: -0.9789272546768188
    3. 'nes' → logprob: -5.978927135467529
    4. 'ines' → logprob: -6.478927135467529
    5. 'ì' → logprob: -8.353927612304688
    6. 'ï' → logprob: -9.103927612304688
    7. 'în' → logprob: -9.103927612304688
    8. 'îne' → logprob: -9.103927612304688
    9. 'Î' → logprob: -10.228927612304688
    10. 'ên' → logprob: -10.728927612304688

Token 68: ' en' (ID: 469)
  Prédit: ' en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.07829615473747253
    2. 'en' → logprob: -2.703296184539795
    3. ')' → logprob: -4.828296184539795
    4. ' )' → logprob: -9.453295707702637
    5. ''en' → logprob: -9.578295707702637
    6. '<|end|>' → logprob: -10.078295707702637
    7. '(en' → logprob: -10.203295707702637
    8. '_en' → logprob: -10.828295707702637
    9. ' ' → logprob: -10.828295707702637
    10. '	en' → logprob: -11.453295707702637

Token 69: ' entier' (ID: 80473)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.0017472924664616585
    2. 'des' → logprob: -7.251747131347656
    3. ' ent' → logprob: -7.751747131347656
    4. 'ent' → logprob: -8.126747131347656
    5. ' un' → logprob: -8.751747131347656
    6. ' integers' → logprob: -9.126747131347656
    7. ' int' → logprob: -11.001747131347656
    8. ' entier' → logprob: -11.126747131347656
    9. ' nombres' → logprob: -12.626747131347656
    10. 'int' → logprob: -13.001747131347656

Token 70: '.
' (ID: 558)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.06995844095945358
    2. ')' → logprob: -3.694958448410034
    3. 's' → logprob: -3.694958448410034
    4. 'numbers' → logprob: -5.069958209991455
    5. 'l' → logprob: -6.569958209991455
    6. '.' → logprob: -6.569958209991455
    7. 'e' → logprob: -6.944958209991455
    8. ',' → logprob: -7.069958209991455
    9. 'x' → logprob: -7.069958209991455
    10. '#' → logprob: -7.069958209991455

Token 71: '#' (ID: 2)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.015382608398795128
    2. 'numbers' → logprob: -4.390382766723633
    3. '```' → logprob: -7.265382766723633
    4. 'nums' → logprob: -7.390382766723633
    5. 'ent' → logprob: -7.515382766723633
    6. 's' → logprob: -8.015382766723633
    7. 'nombre' → logprob: -8.765382766723633
    8. 'user' → logprob: -8.765382766723633
    9. 'x' → logprob: -9.765382766723633
    10. 'a' → logprob: -9.890382766723633

Token 72: ' list' (ID: 1562)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.42013299465179443
    2. 'numbers' → logprob: -1.1701329946517944
    3. ' numbers' → logprob: -4.420133113861084
    4. 'nums' → logprob: -5.045133113861084
    5. ' nombres' → logprob: -5.545133113861084
    6. 'ent' → logprob: -5.795133113861084
    7. '#' → logprob: -6.545133113861084
    8. 'values' → logprob: -6.920133113861084
    9. 'nombre' → logprob: -6.920133113861084
    10. 'l' → logprob: -6.920133113861084

Token 73: '(...)' (ID: 96375)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -6.694766489090398e-05
    2. '()' → logprob: -10.500066757202148
    3. '(...)' → logprob: -11.750066757202148
    4. '(
' → logprob: -11.875066757202148
    5. ' (' → logprob: -12.125066757202148
    6. '(s' → logprob: -13.250066757202148
    7. 's' → logprob: -13.375066757202148
    8. '(convert' → logprob: -13.625066757202148
    9. '(user' → logprob: -13.750066757202148
    10. '([...' → logprob: -13.750066757202148

Token 74: ' transforme' (ID: 184109)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0040712784975767136
    2. '(
' → logprob: -6.254071235656738
    3. ')' → logprob: -7.129071235656738
    4. '()' → logprob: -8.129071235656738
    5. 'def' → logprob: -8.754071235656738
    6. '#' → logprob: -9.004071235656738
    7. ',' → logprob: -9.129071235656738
    8. '<|end|>' → logprob: -9.754071235656738
    9. '```' → logprob: -9.754071235656738
    10. '(convert' → logprob: -9.879071235656738

Token 75: ' l' (ID: 305)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005848085507750511
    2. '(map' → logprob: -5.255847930908203
    3. ' (' → logprob: -8.755847930908203
    4. '(
' → logprob: -9.380847930908203
    5. '(input' → logprob: -10.005847930908203
    6. ' la' → logprob: -10.130847930908203
    7. ' ' → logprob: -10.255847930908203
    8. '(...)' → logprob: -10.380847930908203
    9. '(int' → logprob: -10.505847930908203
    10. '()' → logprob: -10.505847930908203

Token 76: ''' (ID: 6)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6982567310333252
    2. 'e' → logprob: -0.8232567310333252
    3. ''' → logprob: -3.448256731033325
    4. '('' → logprob: -5.198256492614746
    5. '(e' → logprob: -5.573256492614746
    6. ''ensemble' → logprob: -5.573256492614746
    7. '(' → logprob: -5.698256492614746
    8. ''a' → logprob: -6.198256492614746
    9. ' a' → logprob: -6.573256492614746
    10. ''utilisateur' → logprob: -6.698256492614746

Token 77: 'it' (ID: 278)
  Prédit: 'it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.6429852247238159
    2. 'objet' → logprob: -1.642985224723816
    3. ' it' → logprob: -2.2679853439331055
    4. 'iter' → logprob: -3.3929853439331055
    5. 'entrée' → logprob: -3.6429853439331055
    6. ''objet' → logprob: -3.7679853439331055
    7. ' iterable' → logprob: -3.8929853439331055
    8. 'ensemble' → logprob: -4.2679853439331055
    9. 'a' → logprob: -4.5179853439331055
    10. ''ensemble' → logprob: -5.0179853439331055

Token 78: 'ér' (ID: 2156)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.04242750257253647
    2. 'ér' → logprob: -3.2924275398254395
    3. 'ération' → logprob: -6.5424275398254395
    4. 'rá' → logprob: -7.1674275398254395
    5. 'érance' → logprob: -7.6674275398254395
    6. 'érateur' → logprob: -8.292427062988281
    7. '```' → logprob: -8.667427062988281
    8. 'ra' → logprob: -8.792427062988281
    9. 'er' → logprob: -8.917427062988281
    10. 'z' → logprob: -8.917427062988281

Token 79: 'able' (ID: 562)
  Prédit: 'able'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'able' → logprob: -4.274932143744081e-05
    2. 'ateur' → logprob: -10.750042915344238
    3. 'ables' → logprob: -11.375042915344238
    4. '```' → logprob: -12.750042915344238
    5. 'ble' → logprob: -13.000042915344238
    6. 'ator' → logprob: -13.625042915344238
    7. 'abl' → logprob: -14.000042915344238
    8. 'a' → logprob: -14.750042915344238
    9. 'teur' → logprob: -15.000042915344238
    10. '__' → logprob: -15.250042915344238

Token 80: ' ren' (ID: 5427)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0033788802102208138
    2. '(...)' → logprob: -6.878378868103027
    3. 'des' → logprob: -7.253378868103027
    4. ' des' → logprob: -7.378378868103027
    5. '(
' → logprob: -8.003378868103027
    6. '()' → logprob: -9.003378868103027
    7. 'en' → logprob: -9.128378868103027
    8. ' en' → logprob: -9.503378868103027
    9. '```' → logprob: -9.628378868103027
    10. ')' → logprob: -9.753378868103027

Token 81: 'voy' (ID: 83465)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.007080133073031902
    2. 'du' → logprob: -6.632080078125
    3. 't' → logprob: -6.882080078125
    4. 'u' → logprob: -7.007080078125
    5. 'erg' → logprob: -7.132080078125
    6. 'um' → logprob: -8.382080078125
    7. 'er' → logprob: -8.507080078125
    8. '```' → logprob: -8.507080078125
    9. 'd' → logprob: -8.757080078125
    10. 'voie' → logprob: -8.882080078125

Token 82: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.735656201839447
    2. 'ée' → logprob: -1.2356562614440918
    3. 'ant' → logprob: -1.9856562614440918
    4. 'e' → logprob: -2.485656261444092
    5. 'er' → logprob: -4.860656261444092
    6. 'rée' → logprob: -6.985656261444092
    7. 'eur' → logprob: -8.860655784606934
    8. 'ey' → logprob: -9.235655784606934
    9. 'oyant' → logprob: -9.235655784606934
    10. 'ez' → logprob: -9.360655784606934

Token 83: ' par' (ID: 686)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.17649243772029877
    2. ' en' → logprob: -2.55149245262146
    3. ')' → logprob: -3.67649245262146
    4. 'en' → logprob: -3.80149245262146
    5. 'par' → logprob: -4.176492214202881
    6. ' par' → logprob: -4.176492214202881
    7. '(
' → logprob: -6.551492214202881
    8. '>' → logprob: -7.176492214202881
    9. '[' → logprob: -7.301492214202881
    10. ']' → logprob: -7.801492214202881

Token 84: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.0017164701130241156
    2. ' map' → logprob: -6.376716613769531
    3. 'la' → logprob: -11.626716613769531
    4. '(map' → logprob: -13.751716613769531
    5. 'm' → logprob: -14.501716613769531
    6. 'l' → logprob: -14.501716613769531
    7. ' la' → logprob: -14.626716613769531
    8. 'int' → logprob: -14.751716613769531
    9. '	map' → logprob: -14.751716613769531
    10. ',map' → logprob: -14.751716613769531

Token 85: ' en' (ID: 469)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.006112939678132534
    2. '()' → logprob: -5.631113052368164
    3. '(...)' → logprob: -7.631113052368164
    4. '```' → logprob: -7.631113052368164
    5. '>' → logprob: -8.756113052368164
    6. ')' → logprob: -8.881113052368164
    7. '#' → logprob: -8.881113052368164
    8. '(en' → logprob: -9.256113052368164
    9. '(
' → logprob: -9.256113052368164
    10. 'def' → logprob: -9.381113052368164

Token 86: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.13720862567424774
    2. ' liste' → logprob: -2.6372087001800537
    3. 'une' → logprob: -2.8872087001800537
    4. 'liste' → logprob: -7.262208461761475
    5. ' list' → logprob: -9.512208938598633
    6. ' ' → logprob: -9.637208938598633
    7. '[]' → logprob: -11.387208938598633
    8. ''une' → logprob: -11.387208938598633
    9. ' un' → logprob: -11.512208938598633
    10. 'list' → logprob: -11.762208938598633

Token 87: ' liste' (ID: 31719)
  Prédit: ' liste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.02052086777985096
    2. 'liste' → logprob: -4.0205206871032715
    3. ' list' → logprob: -6.2705206871032715
    4. 'list' → logprob: -7.7705206871032715
    5. 'Liste' → logprob: -11.27052116394043
    6. ' listes' → logprob: -11.27052116394043
    7. ' Liste' → logprob: -11.64552116394043
    8. ' ' → logprob: -12.39552116394043
    9. 's' → logprob: -12.52052116394043
    10. ' lista' → logprob: -12.89552116394043

Token 88: ' Python' (ID: 26534)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00932227075099945
    2. '#' → logprob: -6.009322166442871
    3. 'numbers' → logprob: -6.009322166442871
    4. 's' → logprob: -6.509322166442871
    5. ',' → logprob: -7.259322166442871
    6. 'nombre' → logprob: -7.884322166442871
    7. 'a' → logprob: -8.134322166442871
    8. ':' → logprob: -8.259322166442871
    9. ' nombres' → logprob: -8.759322166442871
    10. '```' → logprob: -9.009322166442871

Token 89: ' standard' (ID: 7024)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.009321559220552444
    2. 'numbers' → logprob: -5.634321689605713
    3. 's' → logprob: -6.259321689605713
    4. '#' → logprob: -6.634321689605713
    5. 'nombre' → logprob: -7.384321689605713
    6. 'ent' → logprob: -7.634321689605713
    7. ' nombres' → logprob: -8.134321212768555
    8. 'a' → logprob: -9.134321212768555
    9. 'r' → logprob: -9.134321212768555
    10. 'l' → logprob: -9.384321212768555

Token 90: ',' (ID: 11)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.006831170991063118
    2. 'numbers' → logprob: -6.131831169128418
    3. '#' → logprob: -6.506831169128418
    4. 's' → logprob: -7.006831169128418
    5. 'nombre' → logprob: -7.006831169128418
    6. 'ent' → logprob: -8.131831169128418
    7. ',' → logprob: -8.631831169128418
    8. ' nombres' → logprob: -8.881831169128418
    9. '```' → logprob: -8.881831169128418
    10. ':' → logprob: -9.256831169128418

Token 91: ' qui' (ID: 2780)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.82390296459198
    2. 'n' → logprob: -0.94890296459198
    3. ' ]' → logprob: -2.9489030838012695
    4. ']' → logprob: -3.4489030838012695
    5. ')' → logprob: -4.3239030838012695
    6. ' ' → logprob: -4.3239030838012695
    7. '[' → logprob: -4.4489030838012695
    8. ' nombres' → logprob: -4.6989030838012695
    9. ' n' → logprob: -5.0739030838012695
    10. 'a' → logprob: -5.4489030838012695

Token 92: ' sera' (ID: 15511)
  Prédit: ' peut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' peut' → logprob: -1.173769235610962
    2. ' pourra' → logprob: -2.048769235610962
    3. ' contient' → logprob: -2.048769235610962
    4. ' =' → logprob: -2.173769235610962
    5. ' s' → logprob: -2.548769235610962
    6. ' sera' → logprob: -2.923769235610962
    7. 's' → logprob: -3.048769235610962
    8. ' est' → logprob: -3.548769235610962
    9. ' devient' → logprob: -4.173768997192383
    10. ' ' → logprob: -4.423768997192383

Token 93: ' stock' (ID: 6546)
  Prédit: ' stock'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stock' → logprob: -0.2607583999633789
    2. 'stock' → logprob: -2.510758399963379
    3. ' utilisée' → logprob: -2.635758399963379
    4. ' affect' → logprob: -3.760758399963379
    5. ' assign' → logprob: -3.885758399963379
    6. ' assigned' → logprob: -4.635758399963379
    7. 'assign' → logprob: -5.010758399963379
    8. ' attrib' → logprob: -5.885758399963379
    9. 'aff' → logprob: -6.385758399963379
    10. 's' → logprob: -6.635758399963379

Token 94: 'ée' (ID: 2894)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.7171204090118408
    2. 'ée' → logprob: -0.7171204090118408
    3. '=' → logprob: -4.592120170593262
    4. 'e' → logprob: -5.092120170593262
    5. '_' → logprob: -5.842120170593262
    6. ' =' → logprob: -6.592120170593262
    7. 'u' → logprob: -7.092120170593262
    8. ' ' → logprob: -7.217120170593262
    9. 'er' → logprob: -7.342120170593262
    10. ' e' → logprob: -8.717120170593262

Token 95: ' dans' (ID: 2671)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.08527786284685135
    2. '=' → logprob: -3.710277795791626
    3. 's' → logprob: -3.960277795791626
    4. ' ' → logprob: -4.585278034210205
    5. ' =' → logprob: -5.210278034210205
    6. ',' → logprob: -6.460278034210205
    7. ')' → logprob: -6.460278034210205
    8. '_user' → logprob: -6.585278034210205
    9. '_list' → logprob: -6.835278034210205
    10. 'user' → logprob: -6.835278034210205

Token 96: ' la' (ID: 557)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6788787245750427
    2. ' la' → logprob: -1.4288787841796875
    3. ' nombres' → logprob: -1.9288787841796875
    4. 'la' → logprob: -3.6788787841796875
    5. ' n' → logprob: -3.8038787841796875
    6. ' ma' → logprob: -4.5538787841796875
    7. 'numbers' → logprob: -4.9288787841796875
    8. ' numbers' → logprob: -5.0538787841796875
    9. 'ma' → logprob: -5.3038787841796875
    10. 'nombre' → logprob: -5.4288787841796875

Token 97: ' variable' (ID: 11076)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.1995208263397217
    2. 'variable' → logprob: -1.1995208263397217
    3. ' variable' → logprob: -1.1995208263397217
    4. ' nombres' → logprob: -3.4495208263397217
    5. 'liste' → logprob: -3.8245208263397217
    6. 'nombre' → logprob: -4.324521064758301
    7. 'numbers' → logprob: -4.949521064758301
    8. 'variables' → logprob: -5.324521064758301
    9. ' liste' → logprob: -5.324521064758301
    10. ' variables' → logprob: -6.199521064758301

Token 98: ' a' (ID: 261)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4794895648956299
    2. 'numbers' → logprob: -1.7294895648956299
    3. ' nombres' → logprob: -2.35448956489563
    4. ' numbers' → logprob: -2.72948956489563
    5. 'nombre' → logprob: -4.104489326477051
    6. ' n' → logprob: -5.104489326477051
    7. 'ent' → logprob: -5.229489326477051
    8. '`' → logprob: -5.479489326477051
    9. 'nums' → logprob: -5.729489326477051
    10. 'user' → logprob: -6.604489326477051

Token 99: '.
' (ID: 558)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22998124361038208
    2. '=' → logprob: -1.6049811840057373
    3. ' ' → logprob: -6.604981422424316
    4. 'a' → logprob: -7.104981422424316
    5. 's' → logprob: -7.229981422424316
    6. '_' → logprob: -7.479981422424316
    7. ',' → logprob: -7.979981422424316
    8. '[' → logprob: -8.354981422424316
    9. 'u' → logprob: -9.354981422424316
    10. ')' → logprob: -9.479981422424316

Token 100: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -6.630610641877865e-06
    2. '#' → logprob: -12.875006675720215
    3. '```' → logprob: -12.875006675720215
    4. ' a' → logprob: -13.875006675720215
    5. ' 
' → logprob: -16.5000057220459
    6. 'n' → logprob: -16.7500057220459
    7. ',' → logprob: -17.3750057220459
    8. '[' → logprob: -17.6250057220459
    9. '`' → logprob: -17.6250057220459
    10. ':' → logprob: -17.7500057220459

Token 101: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03378089889883995
    2. '=' → logprob: -3.408780813217163
    3. 's' → logprob: -9.783781051635742
    4. 'a' → logprob: -10.783781051635742
    5. ' ' → logprob: -11.658781051635742
    6. '.' → logprob: -11.783781051635742
    7. ' =[' → logprob: -11.783781051635742
    8. '[' → logprob: -11.908781051635742
    9. ' =
' → logprob: -11.908781051635742
    10. '=[]' → logprob: -12.158781051635742

Token 102: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.014165864326059818
    2. ' list' → logprob: -4.264165878295898
    3. '[list' → logprob: -13.389165878295898
    4. '[' → logprob: -15.389165878295898
    5. 'liste' → logprob: -15.639165878295898
    6. ' [' → logprob: -16.2641658782959
    7. '	list' → logprob: -16.3891658782959
    8. 'map' → logprob: -17.2641658782959
    9. ' liste' → logprob: -17.3891658782959
    10. 'List' → logprob: -17.3891658782959

Token 103: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.2526751160621643
    2. '(' → logprob: -1.7526750564575195
    3. '(input' → logprob: -3.0026750564575195
    4. '(int' → logprob: -8.25267505645752
    5. ' (' → logprob: -10.37767505645752
    6. '(
' → logprob: -11.37767505645752
    7. '(

' → logprob: -12.25267505645752
    8. '(m' → logprob: -13.37767505645752
    9. 'map' → logprob: -13.50267505645752
    10. '(eval' → logprob: -13.87767505645752

Token 104: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.01817183382809162
    2. '(' → logprob: -4.018171787261963
    3. ' (' → logprob: -11.643172264099121
    4. '<int' → logprob: -12.018172264099121
    5. '(
' → logprob: -13.018172264099121
    6. '(input' → logprob: -13.393172264099121
    7. 'int' → logprob: -13.643172264099121
    8. '[int' → logprob: -14.143172264099121
    9. ',int' → logprob: -15.143172264099121
    10. '(str' → logprob: -15.143172264099121

Token 105: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0006943239714019
    2. '(' → logprob: -8.000694274902344
    3. 'input' → logprob: -8.125694274902344
    4. ',input' → logprob: -10.250694274902344
    5. ' (' → logprob: -10.625694274902344
    6. '=input' → logprob: -13.875694274902344
    7. ' input' → logprob: -14.000694274902344
    8. '(
' → logprob: -14.625694274902344
    9. ')' → logprob: -14.750694274902344
    10. '))' → logprob: -15.375694274902344

Token 106: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0007182692061178386
    2. ' input' → logprob: -7.250718116760254
    3. '(input' → logprob: -11.750718116760254
    4. ' ' → logprob: -15.750718116760254
    5. '   ' → logprob: -16.50071907043457
    6. ',input' → logprob: -16.75071907043457
    7. '<input' → logprob: -16.87571907043457
    8. ')' → logprob: -17.50071907043457
    9. '	input' → logprob: -17.75071907043457
    10. '=input' → logprob: -18.12571907043457

Token 107: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0950375646352768
    2. '(' → logprob: -3.2200374603271484
    3. '().' → logprob: -3.9700374603271484
    4. '("' → logprob: -4.345037460327148
    5. '()))' → logprob: -5.220037460327148
    6. '('' → logprob: -5.345037460327148
    7. '(()' → logprob: -5.970037460327148
    8. '("("' → logprob: -5.970037460327148
    9. '())' → logprob: -6.345037460327148
    10. '())))' → logprob: -8.345037460327148

Token 108: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0002043748099822551
    2. 'strip' → logprob: -8.500204086303711
    3. ' split' → logprob: -14.125204086303711
    4. 'rstrip' → logprob: -16.75020408630371
    5. '(split' → logprob: -18.50020408630371
    6. 'spl' → logprob: -20.12520408630371
    7. '_split' → logprob: -21.50020408630371
    8. ')' → logprob: -21.62520408630371
    9. 'plit' → logprob: -21.75020408630371
    10. '.split' → logprob: -22.12520408630371

Token 109: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.134234219789505
    2. '()' → logprob: -2.1342341899871826
    3. '())' → logprob: -5.384234428405762
    4. '())))' → logprob: -6.009234428405762
    5. '))' → logprob: -9.009234428405762
    6. '(' → logprob: -9.384234428405762
    7. ')))' → logprob: -11.634234428405762
    8. '()));' → logprob: -11.884234428405762
    9. '()))
' → logprob: -12.759234428405762
    10. '())).' → logprob: -12.759234428405762

Token 110: '#' (ID: 2)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.24145282804965973
    2. '#' → logprob: -2.241452932357788
    3. 'a' → logprob: -3.616452932357788
    4. '
' → logprob: -3.741452932357788
    5. '.' → logprob: -4.116452693939209
    6. 'print' → logprob: -4.491452693939209
    7. '[' → logprob: -5.116452693939209
    8. '<|end|>' → logprob: -5.116452693939209
    9. '  
' → logprob: -5.616452693939209
    10. ' 
' → logprob: -5.866452693939209

Token 111: ' Dem' (ID: 9458)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.4870234429836273
    2. 'print' → logprob: -1.3620234727859497
    3. 's' → logprob: -2.86202335357666
    4. 'sum' → logprob: -4.36202335357666
    5. 'a' → logprob: -4.48702335357666
    6. 'b' → logprob: -5.23702335357666
    7. 'max' → logprob: -5.23702335357666
    8. 'm' → logprob: -5.36202335357666
    9. 'total' → logprob: -5.36202335357666
    10. ' #' → logprob: -5.48702335357666

Token 112: 'ande' (ID: 4102)
  Prédit: 'ande'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ande' → logprob: -0.022210218012332916
    2. '#' → logprob: -4.772210121154785
    3. 'e' → logprob: -5.397210121154785
    4. 'andez' → logprob: -5.772210121154785
    5. 'a' → logprob: -6.022210121154785
    6. 'and' → logprob: -6.522210121154785
    7. 'ade' → logprob: -7.147210121154785
    8. 'ander' → logprob: -7.897210121154785
    9. 'ar' → logprob: -8.522210121154785
    10. 'andre' → logprob: -8.772210121154785

Token 113: ' à' (ID: 1221)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.2871534824371338
    2. ' à' → logprob: -2.412153482437134
    3. '#' → logprob: -2.787153482437134
    4. ' a' → logprob: -3.662153482437134
    5. 'au' → logprob: -4.037153244018555
    6. 'à' → logprob: -4.037153244018555
    7. '()' → logprob: -4.662153244018555
    8. 's' → logprob: -4.787153244018555
    9. '(' → logprob: -5.287153244018555
    10. ')' → logprob: -6.162153244018555

Token 114: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.5746802687644958
    2. 'user' → logprob: -1.8246803283691406
    3. 'a' → logprob: -1.9496803283691406
    4. ' l' → logprob: -2.8246803283691406
    5. 'b' → logprob: -4.949680328369141
    6. 's' → logprob: -5.199680328369141
    7. '#' → logprob: -5.199680328369141
    8. 'len' → logprob: -5.199680328369141
    9. 'sum' → logprob: -5.449680328369141
    10. 'print' → logprob: -5.449680328369141

Token 115: ''utilisateur' (ID: 140803)
  Prédit: ''utilisateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''utilisateur' → logprob: -0.014103447087109089
    2. 'util' → logprob: -4.389103412628174
    3. 'a' → logprob: -6.764103412628174
    4. 'user' → logprob: -8.889103889465332
    5. ''user' → logprob: -9.639103889465332
    6. ' utilisateur' → logprob: -9.764103889465332
    7. '’utilisateur' → logprob: -9.889103889465332
    8. ''util' → logprob: -10.264103889465332
    9. ''' → logprob: -10.639103889465332
    10. 'u' → logprob: -11.264103889465332

Token 116: ' de' (ID: 334)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.23888838291168213
    2. '(' → logprob: -2.8638882637023926
    3. 'des' → logprob: -2.9888882637023926
    4. 's' → logprob: -3.3638882637023926
    5. 'de' → logprob: -4.113888263702393
    6. ' de' → logprob: -4.238888263702393
    7. '("' → logprob: -4.488888263702393
    8. 'a' → logprob: -5.113888263702393
    9. 'd' → logprob: -5.738888263702393
    10. ')' → logprob: -5.988888263702393

Token 117: ' saisir' (ID: 152120)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.2697511911392212
    2. 'list' → logprob: -1.6447511911392212
    3. 'a' → logprob: -3.3947510719299316
    4. ' saisir' → logprob: -5.519751071929932
    5. ' ' → logprob: -6.769751071929932
    6. ' la' → logprob: -7.019751071929932
    7. 'l' → logprob: -7.644751071929932
    8. ' ' → logprob: -7.644751071929932
    9. ' liste' → logprob: -7.894751071929932
    10. 'b' → logprob: -8.01975154876709

Token 118: ' un' (ID: 537)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.14838050305843353
    2. 'des' → logprob: -2.0233805179595947
    3. 'a' → logprob: -5.773380279541016
    4. ' une' → logprob: -7.023380279541016
    5. ' la' → logprob: -7.148380279541016
    6. '#' → logprob: -8.648380279541016
    7. ' ' → logprob: -8.898380279541016
    8. 's' → logprob: -9.398380279541016
    9. 'd' → logprob: -9.773380279541016
    10. '[' → logprob: -10.023380279541016

Token 119: ' nombre' (ID: 9733)
  Prédit: ' nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.7761734127998352
    2. 'e' → logprob: -2.0261733531951904
    3. 'nombre' → logprob: -2.0261733531951904
    4. 'a' → logprob: -2.5261733531951904
    5. ' second' → logprob: -2.7761733531951904
    6. ' autre' → logprob: -3.0261733531951904
    7. ' ' → logprob: -3.6511733531951904
    8. ' deuxième' → logprob: -4.4011735916137695
    9. 'second' → logprob: -4.7761735916137695
    10. ' entier' → logprob: -4.7761735916137695

Token 120: ' entier' (ID: 80473)
  Prédit: ' )'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' )' → logprob: -1.1787680387496948
    2. ')' → logprob: -1.3037680387496948
    3. '()' → logprob: -1.8037680387496948
    4. '_' → logprob: -2.5537681579589844
    5. ' ' → logprob: -2.8037681579589844
    6. ' entier' → logprob: -2.9287681579589844
    7. 's' → logprob: -3.9287681579589844
    8. '(' → logprob: -5.053768157958984
    9. 'n' → logprob: -5.053768157958984
    10. ' n' → logprob: -5.928768157958984

Token 121: ' (' (ID: 350)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.07362288236618042
    2. 'b' → logprob: -2.823622941970825
    3. 'x' → logprob: -5.948622703552246
    4. '()' → logprob: -6.073622703552246
    5. 'k' → logprob: -6.198622703552246
    6. 'p' → logprob: -6.698622703552246
    7. 't' → logprob: -6.823622703552246
    8. 'a' → logprob: -7.073622703552246
    9. ' n' → logprob: -7.323622703552246
    10. 'm' → logprob: -8.198622703552246

Token 122: 'la' (ID: 1675)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.23904737830162048
    2. ' )' → logprob: -2.4890472888946533
    3. 'n' → logprob: -2.7390472888946533
    4. ' n' → logprob: -3.3640472888946533
    5. ')n' → logprob: -4.989047527313232
    6. 'k' → logprob: -5.239047527313232
    7. 'b' → logprob: -5.489047527313232
    8. 'à' → logprob: -5.989047527313232
    9. 'm' → logprob: -6.364047527313232
    10. ' à' → logprob: -6.489047527313232

Token 123: ' valeur' (ID: 41664)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -1.1102136373519897
    2. 'n' → logprob: -1.8602136373519897
    3. 'k' → logprob: -2.3602137565612793
    4. '#' → logprob: -2.4852137565612793
    5. 'c' → logprob: -2.7352137565612793
    6. 'val' → logprob: -2.8602137565612793
    7. 'élé' → logprob: -3.1102137565612793
    8. 'b' → logprob: -3.7352137565612793
    9. 're' → logprob: -3.7352137565612793
    10. 's' → logprob: -4.110213756561279

Token 124: ' de' (ID: 334)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.0794459581375122
    2. ' cible' → logprob: -1.3294459581375122
    3. 'b' → logprob: -2.5794458389282227
    4. 'n' → logprob: -3.0794458389282227
    5. ' n' → logprob: -3.3294458389282227
    6. 'de' → logprob: -3.3294458389282227
    7. 'max' → logprob: -3.3294458389282227
    8. ')' → logprob: -3.4544458389282227
    9. ' maximale' → logprob: -3.7044458389282227
    10. ' de' → logprob: -4.079445838928223

Token 125: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.4688059091567993
    2. 'n' → logprob: -1.8438059091567993
    3. ' k' → logprob: -2.4688057899475098
    4. 'x' → logprob: -2.9688057899475098
    5. ' n' → logprob: -3.4688057899475098
    6. 'b' → logprob: -3.7188057899475098
    7. 'p' → logprob: -5.09380578994751
    8. 'm' → logprob: -5.34380578994751
    9. ' x' → logprob: -5.96880578994751
    10. 'l' → logprob: -6.21880578994751

Token 126: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005303369835019112
    2. ' )' → logprob: -5.255303382873535
    3. ' =' → logprob: -10.880303382873535
    4. ').' → logprob: -11.130303382873535
    5. 'a' → logprob: -11.505303382873535
    6. '=' → logprob: -11.630303382873535
    7. ' ' → logprob: -12.755303382873535
    8. '),' → logprob: -12.880303382873535
    9. '#' → logprob: -13.130303382873535
    10. '):' → logprob: -13.255303382873535

Token 127: '#' (ID: 2)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.00020354038861114532
    2. ' k' → logprob: -8.500203132629395
    3. 'b' → logprob: -17.25020408630371
    4. '
' → logprob: -19.37520408630371
    5. ' 
' → logprob: -20.25020408630371
    6. '#' → logprob: -20.62520408630371
    7. 'n' → logprob: -21.25020408630371
    8. 'a' → logprob: -21.25020408630371
    9. ',' → logprob: -21.50020408630371
    10. '_k' → logprob: -21.50020408630371

Token 128: ' input' (ID: 3422)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.006715370807796717
    2. ' k' → logprob: -5.006715297698975
    3. '#' → logprob: -17.756715774536133
    4. '
' → logprob: -17.881715774536133
    5. ' 
' → logprob: -18.006715774536133
    6. 'n' → logprob: -18.756715774536133
    7. '	k' → logprob: -18.881715774536133
    8. ' ' → logprob: -19.006715774536133
    9. ' к' → logprob: -19.006715774536133
    10. '```' → logprob: -19.256715774536133

Token 129: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0321660041809082
    2. '())' → logprob: -3.532166004180908
    3. ')' → logprob: -6.657166004180908
    4. '_k' → logprob: -8.03216552734375
    5. 'k' → logprob: -8.90716552734375
    6. '()
' → logprob: -9.40716552734375
    7. '().' → logprob: -9.65716552734375
    8. ' ()' → logprob: -9.78216552734375
    9. '_str' → logprob: -9.90716552734375
    10. ' )' → logprob: -10.15716552734375

Token 130: ' récup' (ID: 62856)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.03293218836188316
    2. 'k' → logprob: -4.032932281494141
    3. '_k' → logprob: -4.782932281494141
    4. ' =' → logprob: -5.907932281494141
    5. '=' → logprob: -7.032932281494141
    6. 's' → logprob: -7.532932281494141
    7. '_' → logprob: -8.15793228149414
    8. '().' → logprob: -8.28293228149414
    9. '<|end|>' → logprob: -8.53293228149414
    10. '()
' → logprob: -8.65793228149414

Token 131: 'ère' (ID: 4346)
  Prédit: 'ère'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ère' → logprob: -0.0007865179213695228
    2. '()' → logprob: -7.375786304473877
    3. 'ere' → logprob: -9.375786781311035
    4. 'ére' → logprob: -10.750786781311035
    5. 're' → logprob: -11.250786781311035
    6. 'e' → logprob: -11.375786781311035
    7. 'èr' → logprob: -12.000786781311035
    8. 'er' → logprob: -12.125786781311035
    9. 'è' → logprob: -12.875786781311035
    10. 'èrent' → logprob: -13.125786781311035

Token 132: ' la' (ID: 557)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.004027226008474827
    2. 'l' → logprob: -6.754027366638184
    3. 'la' → logprob: -7.629027366638184
    4. ' ' → logprob: -7.629027366638184
    5. '(' → logprob: -7.879027366638184
    6. ' la' → logprob: -8.004027366638184
    7. ' un' → logprob: -8.754027366638184
    8. '("")' → logprob: -8.754027366638184
    9. ' ()' → logprob: -9.004027366638184
    10. 'k' → logprob: -9.254027366638184

Token 133: ' sais' (ID: 30010)
  Prédit: ' chaîne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.35144901275634766
    2. 'chaine' → logprob: -1.8514490127563477
    3. 's' → logprob: -3.1014490127563477
    4. ' sais' → logprob: -3.3514490127563477
    5. ' valeur' → logprob: -3.4764490127563477
    6. ' chaine' → logprob: -4.476449012756348
    7. 'val' → logprob: -4.476449012756348
    8. 'entrée' → logprob: -6.351449012756348
    9. 'ent' → logprob: -6.976449012756348
    10. 'cha' → logprob: -7.351449012756348

Token 134: 'ie' (ID: 396)
  Prédit: 'ie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ie' → logprob: -0.06865307688713074
    2. 'e' → logprob: -2.943653106689453
    3. 'sie' → logprob: -4.318653106689453
    4. 'rie' → logprob: -8.818653106689453
    5. 's' → logprob: -9.568653106689453
    6. '#' → logprob: -10.443653106689453
    7. 'is' → logprob: -11.068653106689453
    8. 'a' → logprob: -11.318653106689453
    9. '```' → logprob: -11.318653106689453
    10. 'input' → logprob: -11.693653106689453

Token 135: ' sous' (ID: 14487)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0005755512393079698
    2. '().' → logprob: -8.00057601928711
    3. '()
' → logprob: -9.00057601928711
    4. ' ()' → logprob: -10.12557601928711
    5. '())' → logprob: -10.62557601928711
    6. '(),' → logprob: -10.87557601928711
    7. ')' → logprob: -11.12557601928711
    8. '()

' → logprob: -12.37557601928711
    9. ',' → logprob: -12.62557601928711
    10. '(' → logprob: -12.75057601928711

Token 136: ' forme' (ID: 27450)
  Prédit: ' forme'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' forme' → logprob: -0.04452906548976898
    2. 'forme' → logprob: -3.1695289611816406
    3. 'form' → logprob: -6.544528961181641
    4. 'forma' → logprob: -9.66952896118164
    5. ' form' → logprob: -11.91952896118164
    6. 'la' → logprob: -12.41952896118164
    7. 'une' → logprob: -12.66952896118164
    8. 'a' → logprob: -13.29452896118164
    9. '()' → logprob: -13.54452896118164
    10. 'f' → logprob: -13.66952896118164

Token 137: ' de' (ID: 334)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.16074559092521667
    2. ' de' → logprob: -1.910745620727539
    3. 'd' → logprob: -7.910745620727539
    4. 'de' → logprob: -8.785745620727539
    5. ' ' → logprob: -13.910745620727539
    6. '()' → logprob: -14.785745620727539
    7. ' ' → logprob: -16.53574562072754
    8. ' of' → logprob: -16.66074562072754
    9. 'def' → logprob: -16.66074562072754
    10. '  ' → logprob: -17.41074562072754

Token 138: ' chaîne' (ID: 89288)
  Prédit: 'chaine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chaine' → logprob: -0.6506508588790894
    2. ' chaîne' → logprob: -0.9006508588790894
    3. 'cha' → logprob: -2.650650978088379
    4. ' chaine' → logprob: -6.650650978088379
    5. 'string' → logprob: -9.900650978088379
    6. ' chaînes' → logprob: -11.150650978088379
    7. 'str' → logprob: -11.275650978088379
    8. 'chain' → logprob: -11.900650978088379
    9. 'une' → logprob: -12.900650978088379
    10. ' string' → logprob: -14.025650978088379

Token 139: ' de' (ID: 334)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.07168450951576233
    2. 'de' → logprob: -3.0716845989227295
    3. ' de' → logprob: -3.8216845989227295
    4. '()
' → logprob: -7.57168436050415
    5. '#' → logprob: -9.321684837341309
    6. ' ()' → logprob: -9.446684837341309
    7. 'd' → logprob: -10.071684837341309
    8. '())' → logprob: -10.321684837341309
    9. '().' → logprob: -10.321684837341309
    10. '_de' → logprob: -10.821684837341309

Token 140: ' caractères' (ID: 183106)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.16035400331020355
    2. ' caractères' → logprob: -1.9103540182113647
    3. '#' → logprob: -9.410353660583496
    4. ' caractère' → logprob: -11.535353660583496
    5. ' caracteres' → logprob: -11.785353660583496
    6. ' caract' → logprob: -12.160353660583496
    7. 'chaine' → logprob: -12.285353660583496
    8. ' ' → logprob: -12.410353660583496
    9. 'code' → logprob: -12.660353660583496
    10. ' car' → logprob: -12.785353660583496

Token 141: ',' (ID: 11)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.012698236852884293
    2. '()' → logprob: -5.137698173522949
    3. ')' → logprob: -5.387698173522949
    4. 'a' → logprob: -6.387698173522949
    5. '()
' → logprob: -8.13769817352295
    6. '())' → logprob: -9.63769817352295
    7. '#' → logprob: -9.88769817352295
    8. ' k' → logprob: -10.76269817352295
    9. ')
' → logprob: -11.13769817352295
    10. '_k' → logprob: -11.26269817352295

Token 142: ' qui' (ID: 2780)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.06197004392743111
    2. ' k' → logprob: -2.8119699954986572
    3. '#' → logprob: -13.311969757080078
    4. ' #' → logprob: -15.311969757080078
    5. 'a' → logprob: -15.686969757080078
    6. '	k' → logprob: -16.061969757080078
    7. '"k' → logprob: -17.061969757080078
    8. ' ' → logprob: -17.061969757080078
    9. ' 
' → logprob: -17.186969757080078
    10. '
' → logprob: -17.436969757080078

Token 143: ' est' (ID: 893)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.2830188274383545
    2. '<|end|>' → logprob: -1.9080188274383545
    3. ' sera' → logprob: -2.1580188274383545
    4. ' est' → logprob: -2.6580188274383545
    5. 'k' → logprob: -2.7830188274383545
    6. 'a' → logprob: -2.9080188274383545
    7. ')' → logprob: -2.9080188274383545
    8. '#' → logprob: -3.0330188274383545
    9. '=' → logprob: -3.1580188274383545
    10. ' =' → logprob: -3.2830188274383545

Token 144: ' ensuite' (ID: 39713)
  Prédit: 'convert'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'convert' → logprob: -0.8227245211601257
    2. ' ensuite' → logprob: -0.8227245211601257
    3. ' convert' → logprob: -2.3227245807647705
    4. 'ens' → logprob: -3.8227245807647705
    5. 'transform' → logprob: -7.572724342346191
    6. 'int' → logprob: -7.822724342346191
    7. 'con' → logprob: -8.572724342346191
    8. '#' → logprob: -8.822724342346191
    9. ' transform' → logprob: -8.947724342346191
    10. 'al' → logprob: -9.947724342346191

Token 145: ' convert' (ID: 8452)
  Prédit: 'convert'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'convert' → logprob: -0.02454632893204689
    2. ' convert' → logprob: -3.7745463848114014
    3. 'converted' → logprob: -7.649546146392822
    4. 'transform' → logprob: -7.774546146392822
    5. 'int' → logprob: -8.27454662322998
    6. 'con' → logprob: -10.02454662322998
    7. ' converted' → logprob: -10.52454662322998
    8. '.convert' → logprob: -10.89954662322998
    9. '#' → logprob: -11.14954662322998
    10. 'conv' → logprob: -11.89954662322998

Token 146: 'ie' (ID: 396)
  Prédit: 'ie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ie' → logprob: -0.021081069484353065
    2. 'i' → logprob: -3.89608097076416
    3. 'ée' → logprob: -8.64608097076416
    4. 'e' → logprob: -9.64608097076416
    5. 'tie' → logprob: -9.77108097076416
    6. 'int' → logprob: -9.89608097076416
    7. 't' → logprob: -10.52108097076416
    8. 'ies' → logprob: -10.89608097076416
    9. 'é' → logprob: -10.89608097076416
    10. ')' → logprob: -11.27108097076416

Token 147: ' en' (ID: 469)
  Prédit: 'en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.4061323404312134
    2. ' en' → logprob: -1.1561323404312134
    3. 'int' → logprob: -4.406132221221924
    4. ')' → logprob: -5.656132221221924
    5. '(int' → logprob: -6.656132221221924
    6. '()' → logprob: -6.656132221221924
    7. '(en' → logprob: -8.406132698059082
    8. '(' → logprob: -9.781132698059082
    9. '=int' → logprob: -9.781132698059082
    10. '	en' → logprob: -9.906132698059082

Token 148: ' entier' (ID: 80473)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.031331997364759445
    2. 'ent' → logprob: -4.031332015991211
    3. ' entier' → logprob: -4.781332015991211
    4. ' int' → logprob: -5.406332015991211
    5. ' un' → logprob: -9.406332015991211
    6. 'un' → logprob: -9.781332015991211
    7. '=int' → logprob: -10.406332015991211
    8. 'k' → logprob: -11.406332015991211
    9. '<int' → logprob: -11.906332015991211
    10. ' ent' → logprob: -11.906332015991211

Token 149: ' avec' (ID: 3937)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0198782030493021
    2. '(k' → logprob: -4.394878387451172
    3. '()' → logprob: -5.269878387451172
    4. ')' → logprob: -7.019878387451172
    5. 'a' → logprob: -7.144878387451172
    6. '(' → logprob: -7.894878387451172
    7. ' k' → logprob: -9.519878387451172
    8. '_k' → logprob: -11.269878387451172
    9. '(
' → logprob: -12.019878387451172
    10. '#' → logprob: -12.144878387451172

Token 150: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -5.085517113911919e-05
    2. '(int' → logprob: -10.37505054473877
    3. ' int' → logprob: -11.00005054473877
    4. '=int' → logprob: -13.25005054473877
    5. ':int' → logprob: -15.00005054473877
    6. 'k' → logprob: -15.37505054473877
    7. 'intval' → logprob: -15.62505054473877
    8. '<int' → logprob: -15.87505054473877
    9. '```' → logprob: -16.250051498413086
    10. ']int' → logprob: -16.500051498413086

Token 151: '().
' (ID: 58434)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.29561999440193176
    2. ')' → logprob: -1.5456199645996094
    3. '(k' → logprob: -3.4206199645996094
    4. '(' → logprob: -4.795619964599609
    5. '()' → logprob: -6.920619964599609
    6. '())' → logprob: -7.545619964599609
    7. '(
' → logprob: -9.04561996459961
    8. 'a' → logprob: -9.54561996459961
    9. '_k' → logprob: -10.42061996459961
    10. ' k' → logprob: -11.29561996459961

Token 152: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -3.128163257315464e-07
    2. ' k' → logprob: -15.375
    3. '
' → logprob: -17.875
    4. '```' → logprob: -18.875
    5. 'b' → logprob: -20.75
    6. '	k' → logprob: -22.25
    7. 'к' → logprob: -22.375
    8. ' 
' → logprob: -22.5
    9. '`' → logprob: -23.0
    10. '

' → logprob: -23.0

Token 153: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3868825435638428
    2. ' =' → logprob: -1.1368825435638428
    3. '=int' → logprob: -11.511882781982422
    4. ')' → logprob: -13.886882781982422
    5. '=input' → logprob: -16.011882781982422
    6. '()' → logprob: -16.636882781982422
    7. '=

' → logprob: -16.886882781982422
    8. '=k' → logprob: -16.886882781982422
    9. '＝' → logprob: -17.136882781982422
    10. ' =
' → logprob: -17.261882781982422

Token 154: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.029751762747764587
    2. 'int' → logprob: -3.529751777648926
    3. '(int' → logprob: -14.154751777648926
    4. '=int' → logprob: -15.029751777648926
    5. '[int' → logprob: -15.904751777648926
    6. ' ' → logprob: -16.40475082397461
    7. '<int' → logprob: -17.02975082397461
    8. ' ' → logprob: -18.15475082397461
    9. '	int' → logprob: -19.27975082397461
    10. ':int' → logprob: -20.52975082397461

Token 155: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0024819616228342056
    2. '(' → logprob: -6.002481937408447
    3. ' (' → logprob: -12.377482414245605
    4. '()' → logprob: -13.752482414245605
    5. 'input' → logprob: -14.877482414245605
    6. '(
' → logprob: -15.002482414245605
    7. '=input' → logprob: -15.752482414245605
    8. '(

' → logprob: -16.62748146057129
    9. '(int' → logprob: -17.00248146057129
    10. ',input' → logprob: -17.25248146057129

Token 156: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0032728989608585835
    2. '()))' → logprob: -5.753273010253906
    3. '()' → logprob: -9.378273010253906
    4. ' ())' → logprob: -12.128273010253906
    5. '())
' → logprob: -13.003273010253906
    6. ')' → logprob: -13.503273010253906
    7. '().' → logprob: -14.253273010253906
    8. '(' → logprob: -15.128273010253906
    9. '()).' → logprob: -16.128273010253906
    10. '()))
' → logprob: -16.253273010253906

Token 157: '#' (ID: 2)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.1551322937011719
    2. 'count' → logprob: -1.1551322937011719
    3. 'result' → logprob: -1.6551322937011719
    4. 'for' → logprob: -2.405132293701172
    5. '#' → logprob: -3.280132293701172
    6. 'n' → logprob: -4.280132293701172
    7. 'indices' → logprob: -4.655132293701172
    8. 'filtered' → logprob: -5.030132293701172
    9. 'def' → logprob: -5.530132293701172
    10. 's' → logprob: -5.905132293701172

Token 158: ' Trie' (ID: 131955)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.7288385629653931
    2. 'count' → logprob: -1.728838562965393
    3. '#' → logprob: -1.853838562965393
    4. 'for' → logprob: -2.2288384437561035
    5. 'a' → logprob: -3.7288384437561035
    6. 'filtered' → logprob: -3.8538384437561035
    7. 'def' → logprob: -4.7288384437561035
    8. 'sorted' → logprob: -5.7288384437561035
    9. 'n' → logprob: -5.8538384437561035
    10. 's' → logprob: -5.9788384437561035

Token 159: ' la' (ID: 557)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.6396315693855286
    2. 'a' → logprob: -0.7646315693855286
    3. '(' → logprob: -5.264631748199463
    4. '_a' → logprob: -6.764631748199463
    5. '()' → logprob: -7.514631748199463
    6. ' a' → logprob: -9.889631271362305
    7. '#a' → logprob: -10.639631271362305
    8. '_' → logprob: -11.264631271362305
    9. 's' → logprob: -11.889631271362305
    10. '#' → logprob: -12.014631271362305

Token 160: ' liste' (ID: 31719)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.05079733580350876
    2. ' a' → logprob: -3.1757972240448
    3. ' liste' → logprob: -5.175797462463379
    4. 'liste' → logprob: -6.175797462463379
    5. 'list' → logprob: -10.800797462463379
    6. ' list' → logprob: -12.300797462463379
    7. 'A' → logprob: -13.425797462463379
    8. 's' → logprob: -13.675797462463379
    9. '_a' → logprob: -13.925797462463379
    10. '	a' → logprob: -14.175797462463379

Token 161: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.001065559103153646
    2. '(a' → logprob: -6.876065731048584
    3. '(' → logprob: -10.751065254211426
    4. '()' → logprob: -11.876065254211426
    5. ' a' → logprob: -12.876065254211426
    6. '#a' → logprob: -14.126065254211426
    7. '#' → logprob: -14.501065254211426
    8. '(
' → logprob: -16.001066207885742
    9. '```' → logprob: -16.376066207885742
    10. '.' → logprob: -16.501066207885742

Token 162: ' sur' (ID: 1512)
  Prédit: '.sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.0331328809261322
    2. '.' → logprob: -3.658132791519165
    3. 'a' → logprob: -5.283133029937744
    4. '.a' → logprob: -6.408133029937744
    5. ' =' → logprob: -11.033132553100586
    6. '().' → logprob: -11.658132553100586
    7. '=' → logprob: -11.658132553100586
    8. '(a' → logprob: -11.783132553100586
    9. '.sorted' → logprob: -11.783132553100586
    10. '.
' → logprob: -11.908132553100586

Token 163: ' place' (ID: 2475)
  Prédit: ' place'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' place' → logprob: -0.13633109629154205
    2. 'place' → logprob: -3.261331081390381
    3. 'a' → logprob: -3.386331081390381
    4. ' la' → logprob: -3.761331081390381
    5. '()' → logprob: -4.511331081390381
    6. 'e' → logprob: -4.761331081390381
    7. ' a' → logprob: -6.011331081390381
    8. ' reverse' → logprob: -6.136331081390381
    9. 'la' → logprob: -6.386331081390381
    10. 'reverse' → logprob: -6.636331081390381

Token 164: ' dans' (ID: 2671)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.016346359625458717
    2. '.' → logprob: -4.266346454620361
    3. '.sort' → logprob: -6.641346454620361
    4. '.a' → logprob: -7.766346454620361
    5. ' a' → logprob: -8.891345977783203
    6. ',' → logprob: -9.141345977783203
    7. '.
' → logprob: -9.391345977783203
    8. '(a' → logprob: -9.516345977783203
    9. ',a' → logprob: -11.266345977783203
    10. '_a' → logprob: -11.516345977783203

Token 165: ' l' (ID: 305)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.004187498241662979
    2. 'l' → logprob: -6.50418758392334
    3. ' a' → logprob: -6.62918758392334
    4. 'la' → logprob: -6.87918758392334
    5. 'reverse' → logprob: -8.62918758392334
    6. ' la' → logprob: -10.50418758392334
    7. ' l' → logprob: -10.62918758392334
    8. '```' → logprob: -10.62918758392334
    9. '#a' → logprob: -11.12918758392334
    10. ' reverse' → logprob: -11.87918758392334

Token 166: ''ordre' (ID: 124753)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.011993405409157276
    2. ' a' → logprob: -5.761993408203125
    3. 'e' → logprob: -6.136993408203125
    4. ''a' → logprob: -6.136993408203125
    5. '(a' → logprob: -6.261993408203125
    6. '()' → logprob: -7.261993408203125
    7. ''' → logprob: -8.261993408203125
    8. '#' → logprob: -8.386993408203125
    9. '('' → logprob: -8.511993408203125
    10. ''ordre' → logprob: -8.761993408203125

Token 167: ' cro' (ID: 11270)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7038319110870361
    2. 'cro' → logprob: -0.8288319110870361
    3. ' a' → logprob: -2.953831911087036
    4. ' cro' → logprob: -4.328831672668457
    5. 'asc' → logprob: -5.828831672668457
    6. 'c' → logprob: -9.203831672668457
    7. 'cres' → logprob: -9.703831672668457
    8. '.a' → logprob: -10.203831672668457
    9. '.' → logprob: -10.578831672668457
    10. 'def' → logprob: -10.703831672668457

Token 168: 'issant' (ID: 31359)
  Prédit: 'issant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'issant' → logprob: -4.0722858102526516e-05
    2. 'issent' → logprob: -10.875041007995605
    3. 'issante' → logprob: -11.250041007995605
    4. 'issement' → logprob: -12.500041007995605
    5. 'issance' → logprob: -13.375041007995605
    6. 'iss' → logprob: -13.500041007995605
    7. 'ss' → logprob: -13.875041007995605
    8. 'issa' → logprob: -15.375041007995605
    9. 'issan' → logprob: -15.750041007995605
    10. '```' → logprob: -15.875041007995605

Token 169: '.
' (ID: 558)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0001605115394340828
    2. ' a' → logprob: -9.750160217285156
    3. '
' → logprob: -10.375160217285156
    4. '.
' → logprob: -10.500160217285156
    5. '(a' → logprob: -11.000160217285156
    6. '.' → logprob: -11.875160217285156
    7. '.a' → logprob: -12.250160217285156
    8. ')
' → logprob: -12.500160217285156
    9. ')' → logprob: -13.000160217285156
    10. '#a' → logprob: -13.000160217285156

Token 170: '#' (ID: 2)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: 0.0
    2. ' a' → logprob: -17.625
    3. 'а' → logprob: -23.75
    4. '
' → logprob: -24.375
    5. '```' → logprob: -24.5
    6. '#a' → logprob: -25.0
    7. '	a' → logprob: -25.875
    8. '#' → logprob: -26.625
    9. '_a' → logprob: -26.875
    10. ' 
' → logprob: -27.375

Token 171: ' Cela' (ID: 44403)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: 0.0
    2. ' a' → logprob: -18.0
    3. 'а' → logprob: -23.375
    4. '```' → logprob: -23.375
    5. '	a' → logprob: -24.0
    6. '
' → logprob: -24.375
    7. '#a' → logprob: -24.375
    8. '#' → logprob: -24.375
    9. 'print' → logprob: -25.625
    10. 'sorted' → logprob: -26.5

Token 172: ' signifie' (ID: 81149)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.3614465892314911
    2. 'a' → logprob: -1.2364466190338135
    3. ' permet' → logprob: -4.486446380615234
    4. ' garantit' → logprob: -6.861446380615234
    5. 'n' → logprob: -9.486446380615234
    6. ' continue' → logprob: -9.486446380615234
    7. ' permettra' → logprob: -9.986446380615234
    8. 's' → logprob: -9.986446380615234
    9. ' peut' → logprob: -10.111446380615234
    10. ' rend' → logprob: -10.236446380615234

Token 173: ' que' (ID: 661)
  Prédit: ' que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.07544982433319092
    2. 'a' → logprob: -2.9504499435424805
    3. ' a' → logprob: -3.9504499435424805
    4. 'que' → logprob: -7.7004499435424805
    5. ' that' → logprob: -7.8254499435424805
    6. ' qu' → logprob: -8.95044994354248
    7. ' ' → logprob: -10.45044994354248
    8. ' ' → logprob: -10.45044994354248
    9. 'qu' → logprob: -10.95044994354248
    10. '_a' → logprob: -11.20044994354248

Token 174: ' les' (ID: 1341)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.036970194429159164
    2. ' a' → logprob: -3.4119701385498047
    3. ' la' → logprob: -5.911970138549805
    4. 'la' → logprob: -7.661970138549805
    5. 'l' → logprob: -10.411970138549805
    6. ' les' → logprob: -10.786970138549805
    7. ' l' → logprob: -11.286970138549805
    8. ' the' → logprob: -11.411970138549805
    9. ' le' → logprob: -11.411970138549805
    10. '#' → logprob: -11.786970138549805

Token 175: ' éléments' (ID: 57375)
  Prédit: ' éléments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' éléments' → logprob: -0.8406046032905579
    2. 'a' → logprob: -1.090604543685913
    3. 'élé' → logprob: -1.840604543685913
    4. ' a' → logprob: -3.465604543685913
    5. ' valeurs' → logprob: -3.965604543685913
    6. ' elements' → logprob: -4.590604782104492
    7. ' plus' → logprob: -5.340604782104492
    8. 'elements' → logprob: -5.840604782104492
    9. ' nombres' → logprob: -5.840604782104492
    10. 'val' → logprob: -7.090604782104492

Token 176: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.8385504484176636
    2. 'a' → logprob: -1.2135504484176636
    3. ' a' → logprob: -1.3385504484176636
    4. 'de' → logprob: -5.088550567626953
    5. 's' → logprob: -7.963550567626953
    6. ' présents' → logprob: -8.213550567626953
    7. ' qui' → logprob: -8.463550567626953
    8. '#' → logprob: -8.588550567626953
    9. ' à' → logprob: -8.588550567626953
    10. ' les' → logprob: -9.213550567626953

Token 177: ' la' (ID: 557)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5759692788124084
    2. ' a' → logprob: -0.8259692788124084
    3. ' la' → logprob: -10.450969696044922
    4. 'la' → logprob: -15.075969696044922
    5. ' ' → logprob: -15.450969696044922
    6. ' ' → logprob: -15.575969696044922
    7. '	a' → logprob: -16.575969696044922
    8. 'l' → logprob: -17.075969696044922
    9. ' the' → logprob: -17.075969696044922
    10. '#a' → logprob: -17.325969696044922

Token 178: ' liste' (ID: 31719)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.13596926629543304
    2. 'liste' → logprob: -2.1359691619873047
    3. ' liste' → logprob: -5.385969161987305
    4. 'list' → logprob: -6.010969161987305
    5. ' a' → logprob: -6.260969161987305
    6. ' list' → logprob: -10.760969161987305
    7. 'lista' → logprob: -11.135969161987305
    8. 'l' → logprob: -12.510969161987305
    9. 'Liste' → logprob: -12.635969161987305
    10. 'b' → logprob: -13.010969161987305

Token 179: ' seront' (ID: 35024)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.03814178705215454
    2. ' a' → logprob: -3.2881417274475098
    3. 's' → logprob: -9.413142204284668
    4. ' sont' → logprob: -11.663142204284668
    5. ' seront' → logprob: -12.288142204284668
    6. '#' → logprob: -13.288142204284668
    7. ' vont' → logprob: -14.163142204284668
    8. '#a' → logprob: -14.413142204284668
    9. ' restent' → logprob: -14.913142204284668
    10. ' are' → logprob: -15.038142204284668

Token 180: ' arrang' (ID: 15378)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.1206820011138916
    2. 'ré' → logprob: -1.7456820011138916
    3. ' tri' → logprob: -1.7456820011138916
    4. ' reposition' → logprob: -2.9956820011138916
    5. 're' → logprob: -3.1206820011138916
    6. ' rearr' → logprob: -3.2456820011138916
    7. ' a' → logprob: -3.6206820011138916
    8. ' ré' → logprob: -3.7456820011138916
    9. 'rang' → logprob: -3.9956820011138916
    10. ' désormais' → logprob: -4.1206817626953125

Token 181: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.002341992687433958
    2. 's' → logprob: -6.127342224121094
    3. 'é' → logprob: -9.127342224121094
    4. 'es' → logprob: -10.252342224121094
    5. 'nés' → logprob: -12.377342224121094
    6. '```' → logprob: -12.752342224121094
    7. 'ées' → logprob: -13.877342224121094
    8. '́s' → logprob: -14.002342224121094
    9. 'ée' → logprob: -14.127342224121094
    10. 'ès' → logprob: -14.252342224121094

Token 182: ' du' (ID: 1462)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.12930968403816223
    2. 'a' → logprob: -2.12930965423584
    3. ' par' → logprob: -6.87930965423584
    4. ' à' → logprob: -7.62930965423584
    5. ' en' → logprob: -8.12930965423584
    6. '()' → logprob: -8.50430965423584
    7. ',' → logprob: -9.50430965423584
    8. '(a' → logprob: -9.75430965423584
    9. ' ' → logprob: -10.00430965423584
    10. '_a' → logprob: -10.12930965423584

Token 183: ' plus' (ID: 2932)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.16493122279644012
    2. ' plus' → logprob: -1.9149311780929565
    3. 'moins' → logprob: -6.039931297302246
    4. '#' → logprob: -6.789931297302246
    5. 'prem' → logprob: -8.039931297302246
    6. 'a' → logprob: -8.164931297302246
    7. '+' → logprob: -9.164931297302246
    8. 'dé' → logprob: -9.664931297302246
    9. 'pet' → logprob: -9.914931297302246
    10. 'élé' → logprob: -10.539931297302246

Token 184: ' petit' (ID: 20577)
  Prédit: 'pet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pet' → logprob: -0.08182670921087265
    2. 'a' → logprob: -3.206826686859131
    3. ' petit' → logprob: -3.456826686859131
    4. ' a' → logprob: -6.081826686859131
    5. '```' → logprob: -6.081826686859131
    6. 'prem' → logprob: -7.331826686859131
    7. 'plus' → logprob: -7.456826686859131
    8. ' ' → logprob: -9.206827163696289
    9. 'b' → logprob: -9.456827163696289
    10. 'p' → logprob: -9.456827163696289

Token 185: ' au' (ID: 2791)
  Prédit: ' au'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' au' → logprob: -0.08507096022367477
    2. 'au' → logprob: -2.710070848464966
    3. ' a' → logprob: -4.710071086883545
    4. 'a' → logprob: -5.335071086883545
    5. ' à' → logprob: -7.085071086883545
    6. ' ' → logprob: -8.460070610046387
    7. 'à' → logprob: -9.585070610046387
    8. ' vers' → logprob: -10.460070610046387
    9. ',' → logprob: -11.460070610046387
    10. ' jusqu' → logprob: -11.960070610046387

Token 186: ' plus' (ID: 2932)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.201218381524086
    2. ' plus' → logprob: -1.9512183666229248
    3. 'prem' → logprob: -3.826218366622925
    4. 'a' → logprob: -5.076218605041504
    5. '```' → logprob: -5.576218605041504
    6. 'pet' → logprob: -5.951218605041504
    7. 'moins' → logprob: -6.701218605041504
    8. '#' → logprob: -6.826218605041504
    9. 'au' → logprob: -7.326218605041504
    10. ' a' → logprob: -7.701218605041504

Token 187: ' grand' (ID: 6363)
  Prédit: 'grand'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grand' → logprob: -0.23022086918354034
    2. 'pet' → logprob: -1.605220913887024
    3. 'prem' → logprob: -5.855220794677734
    4. 'a' → logprob: -7.105220794677734
    5. '```' → logprob: -8.230220794677734
    6. ' petit' → logprob: -8.480220794677734
    7. 'élé' → logprob: -8.855220794677734
    8. ' grand' → logprob: -8.980220794677734
    9. '#' → logprob: -9.230220794677734
    10. 'bas' → logprob: -9.730220794677734

Token 188: '.
' (ID: 558)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.008978292346000671
    2. ' a' → logprob: -5.258978366851807
    3. '.' → logprob: -5.633978366851807
    4. ',' → logprob: -9.008977890014648
    5. '.
' → logprob: -10.383977890014648
    6. ' ' → logprob: -13.383977890014648
    7. '.a' → logprob: -13.508977890014648
    8. ' à' → logprob: -14.133977890014648
    9. ',a' → logprob: -14.383977890014648
    10. 'à' → logprob: -14.508977890014648

Token 189: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.9361264946837764e-07
    2. ' a' → logprob: -16.125
    3. '
' → logprob: -17.625
    4. 'а' → logprob: -21.5
    5. '```' → logprob: -21.5
    6. '#' → logprob: -21.75
    7. '#a' → logprob: -21.875
    8. ' 
' → logprob: -23.25
    9. '

' → logprob: -23.875
    10. '_a' → logprob: -24.125

Token 190: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.023247458040714264
    2. '.' → logprob: -3.773247480392456
    3. '.sorted' → logprob: -14.523247718811035
    4. '.s' → logprob: -14.773247718811035
    5. '.reverse' → logprob: -15.398247718811035
    6. 'sort' → logprob: -15.398247718811035
    7. ' .' → logprob: -15.398247718811035
    8. '.
' → logprob: -15.773247718811035
    9. '.append' → logprob: -15.898247718811035
    10. '.Sort' → logprob: -16.14824676513672

Token 191: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -2.951771421066951e-05
    2. '(' → logprob: -10.625029563903809
    3. '()
' → logprob: -12.625029563903809
    4. '()`' → logprob: -13.875029563903809
    5. '())' → logprob: -15.250029563903809
    6. ' ()' → logprob: -15.750029563903809
    7. '()

' → logprob: -15.875029563903809
    8. '();' → logprob: -16.000028610229492
    9. '()]' → logprob: -16.625028610229492
    10. '()<' → logprob: -17.125028610229492

Token 192: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.1457624435424805
    2. 'count' → logprob: -1.3957624435424805
    3. 'i' → logprob: -1.5207624435424805
    4. 'if' → logprob: -2.5207624435424805
    5. 'result' → logprob: -2.7707624435424805
    6. 'n' → logprob: -3.3957624435424805
    7. 'index' → logprob: -4.1457624435424805
    8. 'found' → logprob: -4.7707624435424805
    9. '#' → logprob: -5.2707624435424805
    10. 'left' → logprob: -6.6457624435424805

Token 193: ' Cal' (ID: 4453)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.8654534816741943
    2. 'for' → logprob: -1.8654534816741943
    3. 'result' → logprob: -1.9904534816741943
    4. 'index' → logprob: -2.4904534816741943
    5. 'i' → logprob: -2.9904534816741943
    6. '#' → logprob: -3.3654534816741943
    7. 'def' → logprob: -3.6154534816741943
    8. 'left' → logprob: -3.8654534816741943
    9. 'if' → logprob: -4.115453720092773
    10. 'filtered' → logprob: -4.490453720092773

Token 194: 'cule' (ID: 45017)
  Prédit: 'cul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cul' → logprob: -0.045684151351451874
    2. 'c' → logprob: -3.2956840991973877
    3. 'cule' → logprob: -5.295684337615967
    4. 'culate' → logprob: -6.295684337615967
    5. '#' → logprob: -8.670683860778809
    6. 'culated' → logprob: -9.045683860778809
    7. 'e' → logprob: -9.295683860778809
    8. ' cul' → logprob: -10.170683860778809
    9. 's' → logprob: -10.170683860778809
    10. 'cules' → logprob: -10.170683860778809

Token 195: ' la' (ID: 557)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.7192745208740234
    2. '()' → logprob: -2.0942745208740234
    3. 's' → logprob: -2.7192745208740234
    4. 'le' → logprob: -2.9692745208740234
    5. 'result' → logprob: -3.2192745208740234
    6. '#' → logprob: -3.5942745208740234
    7. 'n' → logprob: -3.7192745208740234
    8. ' =' → logprob: -3.8442745208740234
    9. 'e' → logprob: -3.8442745208740234
    10. 'for' → logprob: -3.8442745208740234

Token 196: ' valeur' (ID: 41664)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'comp' → logprob: -1.3549410104751587
    2. '#' → logprob: -1.8549410104751587
    3. 'count' → logprob: -1.8549410104751587
    4. 'n' → logprob: -2.729940891265869
    5. 's' → logprob: -2.854940891265869
    6. 'i' → logprob: -2.854940891265869
    7. 'import' → logprob: -2.854940891265869
    8. 'position' → logprob: -2.979940891265869
    9. 'nombre' → logprob: -3.229940891265869
    10. 'index' → logprob: -3.854940891265869

Token 197: ' suivante' (ID: 107439)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'de' → logprob: -1.2785818576812744
    2. 'se' → logprob: -2.0285818576812744
    3. 'du' → logprob: -2.0285818576812744
    4. 'min' → logprob: -2.4035818576812744
    5. 'c' → logprob: -2.9035818576812744
    6. 'max' → logprob: -2.9035818576812744
    7. 'k' → logprob: -3.2785818576812744
    8. 'm' → logprob: -3.4035818576812744
    9. 's' → logprob: -3.7785818576812744
    10. 'd' → logprob: -3.7785818576812744

Token 198: ' :
' (ID: 10039)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.4392564296722412
    2. 'se' → logprob: -1.4392564296722412
    3. 'threshold' → logprob: -1.8142564296722412
    4. 'm' → logprob: -2.689256429672241
    5. 'result' → logprob: -3.064256429672241
    6. 's' → logprob: -3.314256429672241
    7. '=' → logprob: -3.314256429672241
    8. ':' → logprob: -3.564256429672241
    9. ' =' → logprob: -3.814256429672241
    10. 'th' → logprob: -4.06425666809082

Token 199: '#' (ID: 2)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.32042354345321655
    2. 'k' → logprob: -2.8204236030578613
    3. 'count' → logprob: -3.0704236030578613
    4. 'res' → logprob: -3.0704236030578613
    5. 'sum' → logprob: -3.3204236030578613
    6. 'a' → logprob: -3.4454236030578613
    7. 's' → logprob: -4.320423603057861
    8. 'val' → logprob: -4.820423603057861
    9. 'threshold' → logprob: -4.820423603057861
    10. 'b' → logprob: -5.445423603057861

Token 200: '  ' (ID: 256)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.10741216689348221
    2. 'res' → logprob: -3.732412099838257
    3. 'count' → logprob: -4.482412338256836
    4. 'sum' → logprob: -4.607412338256836
    5. 'diff' → logprob: -4.732412338256836
    6. 's' → logprob: -4.982412338256836
    7. 'k' → logprob: -5.107412338256836
    8. 'median' → logprob: -5.232412338256836
    9. 'n' → logprob: -5.607412338256836
    10. 'b' → logprob: -5.607412338256836

Token 201: ' -' (ID: 533)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.13725122809410095
    2. 'count' → logprob: -3.262251138687134
    3. 'res' → logprob: -3.637251138687134
    4. 'val' → logprob: -4.762251377105713
    5. 's' → logprob: -4.887251377105713
    6. 'diff' → logprob: -4.887251377105713
    7. 'k' → logprob: -5.137251377105713
    8. 'sum' → logprob: -5.262251377105713
    9. 'x' → logprob: -5.637251377105713
    10. 'n' → logprob: -5.887251377105713

Token 202: ' a' (ID: 261)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.6669871211051941
    2. 'count' → logprob: -1.2919871807098389
    3. 'res' → logprob: -3.166987180709839
    4. 's' → logprob: -3.541987180709839
    5. 'index' → logprob: -3.916987180709839
    6. 'n' → logprob: -4.04198694229126
    7. 'val' → logprob: -4.41698694229126
    8. 'comp' → logprob: -4.54198694229126
    9. 'diff' → logprob: -4.66698694229126
    10. 'sum' → logprob: -4.91698694229126

Token 203: '[' (ID: 58)
  Prédit: '[k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.014492539688944817
    2. '[-' → logprob: -4.514492511749268
    3. '[len' → logprob: -6.139492511749268
    4. 'k' → logprob: -7.889492511749268
    5. '[:' → logprob: -7.889492511749268
    6. '[' → logprob: -8.139492988586426
    7. '[min' → logprob: -9.889492988586426
    8. '[a' → logprob: -10.639492988586426
    9. '[::-' → logprob: -10.889492988586426
    10. '.count' → logprob: -10.889492988586426

Token 204: '0' (ID: 15)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0018091757083311677
    2. '-' → logprob: -6.876809120178223
    3. 'len' → logprob: -8.251809120178223
    4. '-k' → logprob: -8.501809120178223
    5. '0' → logprob: -9.001809120178223
    6. ' k' → logprob: -9.876809120178223
    7. ']' → logprob: -10.376809120178223
    8. '[k' → logprob: -10.376809120178223
    9. '
' → logprob: -10.626809120178223
    10. 'a' → logprob: -11.376809120178223

Token 205: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.007273656316101551
    2. ']+' → logprob: -5.0072736740112305
    3. '+' → logprob: -8.50727367401123
    4. '[' → logprob: -9.13227367401123
    5. '+k' → logprob: -9.63227367401123
    6. ' ]' → logprob: -10.50727367401123
    7. '[k' → logprob: -10.50727367401123
    8. 'k' → logprob: -10.75727367401123
    9. ']
' → logprob: -11.00727367401123
    10. ']*' → logprob: -11.13227367401123

Token 206: ' :' (ID: 712)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4459187388420105
    2. ' +' → logprob: -1.4459187984466553
    3. '+k' → logprob: -2.4459187984466553
    4. '*' → logprob: -4.195918560028076
    5. ' *' → logprob: -4.570918560028076
    6. '*k' → logprob: -4.820918560028076
    7. '**' → logprob: -6.570918560028076
    8. '+a' → logprob: -7.320918560028076
    9. '-' → logprob: -7.570918560028076
    10. 'k' → logprob: -8.070919036865234

Token 207: ' le' (ID: 505)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.8336524367332458
    2. ' k' → logprob: -1.2086524963378906
    3. 'a' → logprob: -2.2086524963378906
    4. ' a' → logprob: -2.5836524963378906
    5. ' la' → logprob: -3.8336524963378906
    6. ' le' → logprob: -4.833652496337891
    7. '+' → logprob: -5.458652496337891
    8. ' kth' → logprob: -5.458652496337891
    9. 'le' → logprob: -5.583652496337891
    10. ' +' → logprob: -5.708652496337891

Token 208: ' plus' (ID: 2932)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.4389023184776306
    2. 'plus' → logprob: -1.3139023780822754
    3. ' k' → logprob: -3.4389023780822754
    4. 'prem' → logprob: -3.9389023780822754
    5. ' plus' → logprob: -4.063902378082275
    6. 'élé' → logprob: -4.938902378082275
    7. 'nombre' → logprob: -6.063902378082275
    8. 'minimum' → logprob: -6.188902378082275
    9. 'i' → logprob: -6.688902378082275
    10. 'a' → logprob: -7.063902378082275

Token 209: ' petit' (ID: 20577)
  Prédit: 'pet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pet' → logprob: -0.01923244446516037
    2. ' petit' → logprob: -4.019232273101807
    3. 'grand' → logprob: -7.519232273101807
    4. 'prem' → logprob: -8.519232749938965
    5. 'élé' → logprob: -9.269232749938965
    6. '```' → logprob: -9.519232749938965
    7. 'small' → logprob: -9.644232749938965
    8. 'Petit' → logprob: -9.769232749938965
    9. 'a' → logprob: -11.269232749938965
    10. 'bas' → logprob: -11.644232749938965

Token 210: ' élément' (ID: 99627)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.3446040451526642
    2. ' élément' → logprob: -1.4696040153503418
    3. '+' → logprob: -3.094604015350342
    4. 'a' → logprob: -5.469604015350342
    5. 'element' → logprob: -5.719604015350342
    6. 'nombre' → logprob: -6.094604015350342
    7. 'é' → logprob: -6.719604015350342
    8. 'de' → logprob: -7.094604015350342
    9. ' +' → logprob: -7.469604015350342
    10. ' nombre' → logprob: -7.469604015350342

Token 211: ' de' (ID: 334)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.49371564388275146
    2. '+' → logprob: -0.9937156438827515
    3. '*' → logprob: -5.118715763092041
    4. 'a' → logprob: -5.243715763092041
    5. ' *' → logprob: -5.618715763092041
    6. '+a' → logprob: -7.243715763092041
    7. '#' → logprob: -7.368715763092041
    8. '[' → logprob: -7.493715763092041
    9. ' a' → logprob: -8.368715286254883
    10. ',' → logprob: -8.368715286254883

Token 212: ' la' (ID: 557)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.1597284972667694
    2. ' la' → logprob: -2.534728527069092
    3. 'la' → logprob: -2.784728527069092
    4. ' a' → logprob: -5.034728527069092
    5. ' the' → logprob: -10.659728050231934
    6. 'l' → logprob: -11.034728050231934
    7. ' ' → logprob: -11.159728050231934
    8. 'liste' → logprob: -11.909728050231934
    9. ' ' → logprob: -12.159728050231934
    10. 'the' → logprob: -12.284728050231934

Token 213: ' liste' (ID: 31719)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.4389059543609619
    2. 'a' → logprob: -1.063905954360962
    3. ' liste' → logprob: -5.188905715942383
    4. 'list' → logprob: -5.813905715942383
    5. ' a' → logprob: -7.188905715942383
    6. '#' → logprob: -7.438905715942383
    7. ' ' → logprob: -10.313905715942383
    8. 'la' → logprob: -10.688905715942383
    9. 'table' → logprob: -10.813905715942383
    10. '```' → logprob: -10.938905715942383

Token 214: ' (' (ID: 350)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4821755886077881
    2. ' +' → logprob: -0.9821755886077881
    3. 'a' → logprob: -6.357175827026367
    4. '*' → logprob: -6.482175827026367
    5. '+k' → logprob: -6.607175827026367
    6. ' *' → logprob: -7.232175827026367
    7. '+a' → logprob: -7.482175827026367
    8. '-' → logprob: -7.857175827026367
    9. 'k' → logprob: -7.857175827026367
    10. '#' → logprob: -7.857175827026367

Token 215: 'p' (ID: 79)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7987858057022095
    2. ')' → logprob: -0.9237858057022095
    3. ' +' → logprob: -3.54878568649292
    4. ' )' → logprob: -3.67378568649292
    5. 'k' → logprob: -3.92378568649292
    6. ')
' → logprob: -4.04878568649292
    7. ']' → logprob: -4.29878568649292
    8. ' a' → logprob: -4.79878568649292
    9. ' plus' → logprob: -5.04878568649292
    10. '+' → logprob: -5.17378568649292

Token 216: 'uis' (ID: 4560)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.4366641342639923
    2. 'a' → logprob: -1.68666410446167
    3. ')' → logprob: -2.68666410446167
    4. '#' → logprob: -3.93666410446167
    5. 'u' → logprob: -4.06166410446167
    6. 'uis' → logprob: -4.06166410446167
    7. 'our' → logprob: -4.18666410446167
    8. '+' → logprob: -5.43666410446167
    9. ']+' → logprob: -5.81166410446167
    10. 'r' → logprob: -5.81166410446167

Token 217: 'qu' (ID: 351)
  Prédit: 'uis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'uis' → logprob: -0.23382219672203064
    2. 'r' → logprob: -2.4838221073150635
    3. 'u' → logprob: -3.2338221073150635
    4. 'our' → logprob: -3.4838221073150635
    5. 'rem' → logprob: -3.9838221073150635
    6. '#' → logprob: -4.483822345733643
    7. 'ui' → logprob: -5.483822345733643
    8. 'rès' → logprob: -5.733822345733643
    9. 'lus' → logprob: -5.983822345733643
    10. 'a' → logprob: -5.983822345733643

Token 218: ''elle' (ID: 36421)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7547545433044434
    2. ' la' → logprob: -1.3797545433044434
    3. 'la' → logprob: -1.3797545433044434
    4. '#' → logprob: -4.254754543304443
    5. ' a' → logprob: -4.879754543304443
    6. 'list' → logprob: -7.129754543304443
    7. ' celle' → logprob: -7.129754543304443
    8. 'liste' → logprob: -7.879754543304443
    9. ' elle' → logprob: -8.004755020141602
    10. ' the' → logprob: -8.379755020141602

Token 219: ' a' (ID: 261)
  Prédit: 'est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.3409689962863922
    2. 'a' → logprob: -1.5909689664840698
    3. ' est' → logprob: -2.9659690856933594
    4. '#' → logprob: -3.5909690856933594
    5. ' a' → logprob: -5.340969085693359
    6. 'vient' → logprob: -8.59096908569336
    7. 'tri' → logprob: -8.96596908569336
    8. ' #' → logprob: -8.96596908569336
    9. '```' → logprob: -9.21596908569336
    10. ''est' → logprob: -9.46596908569336

Token 220: ' été' (ID: 9799)
  Prédit: 'est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.14226461946964264
    2. 'a' → logprob: -2.1422646045684814
    3. ' est' → logprob: -5.0172648429870605
    4. '#' → logprob: -5.1422648429870605
    5. ' a' → logprob: -7.0172648429870605
    6. '[' → logprob: -7.5172648429870605
    7. 's' → logprob: -8.392264366149902
    8. 'vient' → logprob: -8.767264366149902
    9. ''est' → logprob: -9.142264366149902
    10. 'sort' → logprob: -9.267264366149902

Token 221: ' tri' (ID: 12665)
  Prédit: 'tri'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tri' → logprob: -0.22044306993484497
    2. ' tri' → logprob: -1.8454430103302002
    3. 'tr' → logprob: -3.3454430103302
    4. '#' → logprob: -5.595443248748779
    5. 'tris' → logprob: -7.595443248748779
    6. ' #' → logprob: -8.470442771911621
    7. ' tr' → logprob: -9.720442771911621
    8. 'sorted' → logprob: -9.720442771911621
    9. 'Tri' → logprob: -10.845442771911621
    10. 't' → logprob: -11.845442771911621

Token 222: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.008269633166491985
    2. 'a' → logprob: -5.383269786834717
    3. 'é' → logprob: -6.383269786834717
    4. '#' → logprob: -7.883269786834717
    5. 'e' → logprob: -7.883269786834717
    6. 'és' → logprob: -8.758269309997559
    7. 's' → logprob: -9.008269309997559
    8. 'ées' → logprob: -9.133269309997559
    9. 'agée' → logprob: -9.383269309997559
    10. 't' → logprob: -9.508269309997559

Token 223: '),
' (ID: 2313)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11346860975027084
    2. ')
' → logprob: -2.488468647003174
    3. 'a' → logprob: -4.613468647003174
    4. ' )' → logprob: -5.113468647003174
    5. ' )
' → logprob: -6.238468647003174
    6. '#' → logprob: -6.613468647003174
    7. ')#' → logprob: -6.863468647003174
    8. '[' → logprob: -7.363468647003174
    9. '),' → logprob: -7.613468647003174
    10. ').' → logprob: -7.738468647003174

Token 224: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.2824767529964447
    2. 'a' → logprob: -2.2824766635894775
    3. 'k' → logprob: -2.7824766635894775
    4. 'print' → logprob: -3.4074766635894775
    5. 'result' → logprob: -4.657476902008057
    6. ' a' → logprob: -5.032476902008057
    7. 'val' → logprob: -5.407476902008057
    8. 'x' → logprob: -5.657476902008057
    9. ' #' → logprob: -5.907476902008057
    10. ' k' → logprob: -6.032476902008057

Token 225: '  ' (ID: 256)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5712028741836548
    2. 'a' → logprob: -1.1962028741836548
    3. ' a' → logprob: -2.6962027549743652
    4. 'k' → logprob: -4.071202754974365
    5. 'print' → logprob: -4.321202754974365
    6. ' k' → logprob: -4.571202754974365
    7. ' #' → logprob: -5.571202754974365
    8. 'result' → logprob: -5.696202754974365
    9. 'val' → logprob: -6.071202754974365
    10. ' print' → logprob: -6.071202754974365

Token 226: ' -' (ID: 533)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5670614242553711
    2. 'a' → logprob: -1.317061424255371
    3. 'k' → logprob: -2.817061424255371
    4. 'result' → logprob: -3.442061424255371
    5. ' a' → logprob: -4.067061424255371
    6. ' k' → logprob: -4.567061424255371
    7. 'print' → logprob: -4.817061424255371
    8. 'b' → logprob: -5.192061424255371
    9. 'val' → logprob: -5.192061424255371
    10. ' result' → logprob: -5.317061424255371

Token 227: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.2722369134426117
    2. ' a' → logprob: -1.772236943244934
    3. 'k' → logprob: -3.2722368240356445
    4. ' k' → logprob: -4.1472368240356445
    5. 'abs' → logprob: -5.6472368240356445
    6. ' ' → logprob: -6.1472368240356445
    7. 'max' → logprob: -6.5222368240356445
    8. 'print' → logprob: -6.6472368240356445
    9. ' max' → logprob: -6.7722368240356445
    10. ' abs' → logprob: -7.1472368240356445

Token 228: '[' (ID: 58)
  Prédit: '[k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.36081838607788086
    2. '[-' → logprob: -1.2358183860778809
    3. '[' → logprob: -5.235818386077881
    4. '.index' → logprob: -5.610818386077881
    5. '[len' → logprob: -6.360818386077881
    6. 'k' → logprob: -7.360818386077881
    7. 'index' → logprob: -9.360818862915039
    8. 'len' → logprob: -9.485818862915039
    9. '[::-' → logprob: -9.485818862915039
    10. '[:' → logprob: -9.735818862915039

Token 229: '1' (ID: 16)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.013216354884207249
    2. '-' → logprob: -4.763216495513916
    3. '[k' → logprob: -6.263216495513916
    4. '[-' → logprob: -6.388216495513916
    5. '-k' → logprob: -7.388216495513916
    6. 'len' → logprob: -9.263216018676758
    7. '1' → logprob: -9.638216018676758
    8. ' k' → logprob: -9.888216018676758
    9. '[' → logprob: -10.388216018676758
    10. '
' → logprob: -10.513216018676758

Token 230: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.001287736464291811
    2. ']+' → logprob: -7.376287937164307
    3. ']-' → logprob: -8.751287460327148
    4. '+' → logprob: -9.376287460327148
    5. ' ]' → logprob: -9.626287460327148
    6. ':' → logprob: -9.626287460327148
    7. ']
' → logprob: -9.876287460327148
    8. '])' → logprob: -10.001287460327148
    9. '],' → logprob: -10.126287460327148
    10. '[' → logprob: -10.376287460327148

Token 231: ' :' (ID: 712)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6815251111984253
    2. ' +' → logprob: -1.5565251111984253
    3. ' -' → logprob: -2.806525230407715
    4. '-' → logprob: -2.806525230407715
    5. '*' → logprob: -3.056525230407715
    6. ' *' → logprob: -3.056525230407715
    7. ']' → logprob: -3.181525230407715
    8. '+k' → logprob: -4.556525230407715
    9. '[' → logprob: -5.431525230407715
    10. '-k' → logprob: -6.181525230407715

Token 232: ' le' (ID: 505)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6640791893005371
    2. ' a' → logprob: -1.164079189300537
    3. 'k' → logprob: -2.539079189300537
    4. ' k' → logprob: -2.664079189300537
    5. ' +' → logprob: -4.914079189300537
    6. ' ' → logprob: -5.039079189300537
    7. '+' → logprob: -6.414079189300537
    8. ' '' → logprob: -6.664079189300537
    9. ''' → logprob: -6.914079189300537
    10. ' len' → logprob: -7.039079189300537

Token 233: ' deuxième' (ID: 51664)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.06832078844308853
    2. 'second' → logprob: -4.1933207511901855
    3. ' k' → logprob: -4.3183207511901855
    4. 'de' → logprob: -4.4433207511901855
    5. 'plus' → logprob: -4.8183207511901855
    6. 'élé' → logprob: -5.0683207511901855
    7. ' deuxième' → logprob: -5.3183207511901855
    8. 'a' → logprob: -5.9433207511901855
    9. ' second' → logprob: -7.0683207511901855
    10. '2' → logprob: -7.9433207511901855

Token 234: ' plus' (ID: 2932)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -1.4843599796295166
    2. '[' → logprob: -1.6093599796295166
    3. ' plus' → logprob: -1.6093599796295166
    4. ' élément' → logprob: -2.2343599796295166
    5. '+' → logprob: -2.6093599796295166
    6. ']' → logprob: -2.7343599796295166
    7. 'plus' → logprob: -3.3593599796295166
    8. ' smallest' → logprob: -3.7343599796295166
    9. 'element' → logprob: -4.2343597412109375
    10. 'a' → logprob: -4.7343597412109375

Token 235: ' petit' (ID: 20577)
  Prédit: 'pet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pet' → logprob: -0.008962692692875862
    2. ' petit' → logprob: -4.758962631225586
    3. 'small' → logprob: -8.258962631225586
    4. 'grand' → logprob: -10.383962631225586
    5. '```' → logprob: -10.508962631225586
    6. 'Petit' → logprob: -11.383962631225586
    7. '小' → logprob: -12.758962631225586
    8. 'plus' → logprob: -13.008962631225586
    9. 'min' → logprob: -13.383962631225586
    10. '#' → logprob: -13.383962631225586

Token 236: ' élément' (ID: 99627)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.017744701355695724
    2. '+' → logprob: -5.642744541168213
    3. ' ]' → logprob: -5.767744541168213
    4. 'a' → logprob: -6.017744541168213
    5. ')' → logprob: -6.767744541168213
    6. 'élé' → logprob: -6.767744541168213
    7. 'element' → logprob: -7.017744541168213
    8. ']+' → logprob: -7.017744541168213
    9. ' élément' → logprob: -7.392744541168213
    10. '[' → logprob: -7.392744541168213

Token 237: ' de' (ID: 334)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6118040680885315
    2. '+' → logprob: -1.2368040084838867
    3. 'if' → logprob: -3.7368040084838867
    4. ' +' → logprob: -3.8618040084838867
    5. '-' → logprob: -3.9868040084838867
    6. ']' → logprob: -3.9868040084838867
    7. 'print' → logprob: -3.9868040084838867
    8. ',' → logprob: -3.9868040084838867
    9. 'a' → logprob: -4.236804008483887
    10. '*' → logprob: -4.986804008483887

Token 238: ' la' (ID: 557)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6005164384841919
    2. 'la' → logprob: -0.8505164384841919
    3. ' la' → logprob: -3.7255163192749023
    4. ' a' → logprob: -8.725516319274902
    5. 'l' → logprob: -12.350516319274902
    6. 'liste' → logprob: -12.850516319274902
    7. ' ' → logprob: -13.100516319274902
    8. 'list' → logprob: -13.350516319274902
    9. 'the' → logprob: -13.850516319274902
    10. '#' → logprob: -14.975516319274902

Token 239: ' liste' (ID: 31719)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.11067236959934235
    2. 'liste' → logprob: -2.4856724739074707
    3. ' a' → logprob: -3.9856724739074707
    4. ' liste' → logprob: -6.360672473907471
    5. 'list' → logprob: -7.610672473907471
    6. '#' → logprob: -7.985672473907471
    7. 'la' → logprob: -9.485671997070312
    8. 'à' → logprob: -9.610671997070312
    9. 'code' → logprob: -10.485671997070312
    10. 'l' → logprob: -10.860671997070312

Token 240: ',
' (ID: 412)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7693978548049927
    2. '#' → logprob: -1.6443978548049927
    3. ' +' → logprob: -2.019397735595703
    4. '[' → logprob: -2.644397735595703
    5. '[i' → logprob: -3.894397735595703
    6. 'print' → logprob: -4.144397735595703
    7. 'a' → logprob: -4.269397735595703
    8. '**' → logprob: -4.519397735595703
    9. '-' → logprob: -4.644397735595703
    10. ',' → logprob: -4.644397735595703

Token 241: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.22124186158180237
    2. 'a' → logprob: -1.97124183177948
    3. 'result' → logprob: -4.0962419509887695
    4. 'print' → logprob: -4.3462419509887695
    5. ' a' → logprob: -5.4712419509887695
    6. ' #' → logprob: -5.7212419509887695
    7. 'diff' → logprob: -5.9712419509887695
    8. 'res' → logprob: -5.9712419509887695
    9. 'answer' → logprob: -6.0962419509887695
    10. 'median' → logprob: -6.3462419509887695

Token 242: '  ' (ID: 256)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8049908876419067
    2. 'a' → logprob: -1.3049908876419067
    3. 'result' → logprob: -2.179990768432617
    4. ' a' → logprob: -3.304990768432617
    5. ' result' → logprob: -3.304990768432617
    6. 'print' → logprob: -3.804990768432617
    7. ' #' → logprob: -4.679990768432617
    8. 'res' → logprob: -5.054990768432617
    9. 'answer' → logprob: -5.054990768432617
    10. 'diff' → logprob: -5.304990768432617

Token 243: ' -' (ID: 533)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.29054248332977295
    2. '#' → logprob: -2.5405426025390625
    3. 'result' → logprob: -2.7905426025390625
    4. 'print' → logprob: -3.4155426025390625
    5. ' a' → logprob: -3.5405426025390625
    6. ' result' → logprob: -5.1655426025390625
    7. 'k' → logprob: -5.1655426025390625
    8. 'diff' → logprob: -5.2905426025390625
    9. 'val' → logprob: -5.4155426025390625
    10. 'res' → logprob: -5.5405426025390625

Token 244: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.11194740980863571
    2. ' a' → logprob: -2.6119472980499268
    3. 'k' → logprob: -3.9869472980499268
    4. 'result' → logprob: -5.486947536468506
    5. ' k' → logprob: -6.236947536468506
    6. 'max' → logprob: -6.236947536468506
    7. ' max' → logprob: -7.361947536468506
    8. ''' → logprob: -7.486947536468506
    9. ' result' → logprob: -7.611947536468506
    10. ' ' → logprob: -7.611947536468506

Token 245: '[' (ID: 58)
  Prédit: '[k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.011425851844251156
    2. '[' → logprob: -4.886425971984863
    3. '[-' → logprob: -5.886425971984863
    4. 'k' → logprob: -7.386425971984863
    5. '[len' → logprob: -9.011425971984863
    6. 'a' → logprob: -10.136425971984863
    7. '[a' → logprob: -10.136425971984863
    8. ' [' → logprob: -10.386425971984863
    9. '#' → logprob: -10.761425971984863
    10. 'len' → logprob: -10.886425971984863

Token 246: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.6300511956214905
    2. 'k' → logprob: -1.1300511360168457
    3. '1' → logprob: -2.7550511360168457
    4. '0' → logprob: -3.0050511360168457
    5. '-' → logprob: -3.5050511360168457
    6. '-k' → logprob: -8.380051612854004
    7. 'len' → logprob: -9.005051612854004
    8. ' k' → logprob: -9.255051612854004
    9. 'n' → logprob: -9.255051612854004
    10. '3' → logprob: -9.380051612854004

Token 247: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00034058792516589165
    2. '+' → logprob: -9.125340461730957
    3. ']+' → logprob: -9.125340461730957
    4. 'a' → logprob: -10.500340461730957
    5. ']
' → logprob: -10.500340461730957
    6. ']*' → logprob: -11.375340461730957
    7. '-' → logprob: -11.375340461730957
    8. '[' → logprob: -11.500340461730957
    9. ']-' → logprob: -11.750340461730957
    10. ' ]' → logprob: -12.000340461730957

Token 248: ' :' (ID: 712)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9326196312904358
    2. ']' → logprob: -1.057619571685791
    3. ' *' → logprob: -2.807619571685791
    4. '+' → logprob: -3.307619571685791
    5. '**' → logprob: -3.557619571685791
    6. '*' → logprob: -3.557619571685791
    7. ' +' → logprob: -3.682619571685791
    8. '#' → logprob: -3.932619571685791
    9. ' :' → logprob: -3.932619571685791
    10. '-' → logprob: -4.682619571685791

Token 249: ' le' (ID: 505)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.22690698504447937
    2. 'a' → logprob: -1.6019070148468018
    3. ' '' → logprob: -7.851906776428223
    4. ' ' → logprob: -7.851906776428223
    5. ''' → logprob: -8.226906776428223
    6. ' k' → logprob: -9.226906776428223
    7. 'k' → logprob: -9.351906776428223
    8. '#' → logprob: -9.726906776428223
    9. ''a' → logprob: -10.226906776428223
    10. '"' → logprob: -10.601906776428223

Token 250: ' troisième' (ID: 75373)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.1175004169344902
    2. '[k' → logprob: -3.4925003051757812
    3. 'a' → logprob: -3.8675003051757812
    4. '#' → logprob: -3.8675003051757812
    5. ' k' → logprob: -4.367500305175781
    6. '[' → logprob: -5.367500305175781
    7. '+' → logprob: -5.617500305175781
    8. 'plus' → logprob: -5.867500305175781
    9. '*k' → logprob: -6.242500305175781
    10. '+k' → logprob: -6.242500305175781

Token 251: ' plus' (ID: 2932)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0344371423125267
    2. 'a' → logprob: -4.03443717956543
    3. 'élé' → logprob: -5.15943717956543
    4. '#' → logprob: -5.65943717956543
    5. '+' → logprob: -5.90943717956543
    6. '[' → logprob: -6.65943717956543
    7. ']+' → logprob: -7.65943717956543
    8. ' a' → logprob: -7.78443717956543
    9. 'element' → logprob: -8.03443717956543
    10. ' ]' → logprob: -8.53443717956543

Token 252: ' petit' (ID: 20577)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.4214346706867218
    2. ' plus' → logprob: -2.0464346408843994
    3. ']' → logprob: -2.6714346408843994
    4. 'a' → logprob: -2.9214346408843994
    5. ' a' → logprob: -4.1714348793029785
    6. ' smallest' → logprob: -4.4214348793029785
    7. '[' → logprob: -4.5464348793029785
    8. '#' → logprob: -4.6714348793029785
    9. 'élé' → logprob: -4.6714348793029785
    10. 'small' → logprob: -5.1714348793029785

Token 253: ' élément' (ID: 99627)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0687701553106308
    2. 'élé' → logprob: -3.068770170211792
    3. 'element' → logprob: -4.443769931793213
    4. 'a' → logprob: -5.568769931793213
    5. ' élément' → logprob: -5.693769931793213
    6. ']+' → logprob: -8.318770408630371
    7. '+' → logprob: -9.068770408630371
    8. ']
' → logprob: -9.318770408630371
    9. ' element' → logprob: -9.318770408630371
    10. ' ]' → logprob: -9.443770408630371

Token 254: ' de' (ID: 334)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.42120161652565
    2. '#' → logprob: -2.296201705932617
    3. 'a' → logprob: -2.296201705932617
    4. 'if' → logprob: -2.796201705932617
    5. '+' → logprob: -3.546201705932617
    6. '[' → logprob: -3.921201705932617
    7. ']+' → logprob: -5.046201705932617
    8. '()' → logprob: -5.171201705932617
    9. ')' → logprob: -5.796201705932617
    10. ' +' → logprob: -6.171201705932617

Token 255: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.1531999558210373
    2. ' la' → logprob: -2.5281999111175537
    3. 'a' → logprob: -2.7781999111175537
    4. 'l' → logprob: -10.153200149536133
    5. ' a' → logprob: -10.403200149536133
    6. 'the' → logprob: -11.653200149536133
    7. 'list' → logprob: -13.153200149536133
    8. ' ' → logprob: -13.278200149536133
    9. '#' → logprob: -13.403200149536133
    10. 'liste' → logprob: -13.778200149536133

Token 256: ' liste' (ID: 31719)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.008699782192707062
    2. ' liste' → logprob: -5.133699893951416
    3. 'a' → logprob: -6.258699893951416
    4. 'list' → logprob: -7.133699893951416
    5. ' a' → logprob: -10.008699417114258
    6. 'Liste' → logprob: -12.758699417114258
    7. '#' → logprob: -12.883699417114258
    8. ' list' → logprob: -13.133699417114258
    9. 'lis' → logprob: -13.383699417114258
    10. 'lista' → logprob: -14.383699417114258

Token 257: '.
' (ID: 558)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.4195687770843506
    2. 'if' → logprob: -1.7945687770843506
    3. '#' → logprob: -1.9195687770843506
    4. 'print' → logprob: -2.0445687770843506
    5. 'a' → logprob: -3.0445687770843506
    6. 'val' → logprob: -3.1695687770843506
    7. '+' → logprob: -3.4195687770843506
    8. 'diff' → logprob: -3.4195687770843506
    9. 'res' → logprob: -3.5445687770843506
    10. 'x' → logprob: -4.16956901550293

Token 258: '#' (ID: 2)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.05654117092490196
    2. 'print' → logprob: -4.5565409660339355
    3. 'val' → logprob: -4.6815409660339355
    4. 'if' → logprob: -4.8065409660339355
    5. 'res' → logprob: -5.0565409660339355
    6. 'answer' → logprob: -5.6815409660339355
    7. 'sum' → logprob: -5.9315409660339355
    8. 'value' → logprob: -6.1815409660339355
    9. 'median' → logprob: -6.1815409660339355
    10. 'x' → logprob: -6.4315409660339355

Token 259: '  ' (ID: 256)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.05701037868857384
    2. 'res' → logprob: -4.557010173797607
    3. 'val' → logprob: -4.557010173797607
    4. 'if' → logprob: -5.057010173797607
    5. 'print' → logprob: -5.057010173797607
    6. 'answer' → logprob: -5.307010173797607
    7. 'min' → logprob: -5.807010173797607
    8. 'median' → logprob: -6.057010173797607
    9. 'diff' → logprob: -6.057010173797607
    10. 'value' → logprob: -6.307010173797607

Token 260: ' -' (ID: 533)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.23386918008327484
    2. 'if' → logprob: -2.3588690757751465
    3. 'val' → logprob: -3.4838690757751465
    4. 'res' → logprob: -4.3588690757751465
    5. 'diff' → logprob: -4.4838690757751465
    6. '#' → logprob: -4.8588690757751465
    7. 'print' → logprob: -5.1088690757751465
    8. 'min' → logprob: -5.2338690757751465
    9. 'median' → logprob: -5.3588690757751465
    10. 'b' → logprob: -5.4838690757751465

Token 261: ' pow' (ID: 9779)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.18220263719558716
    2. 'if' → logprob: -2.8072025775909424
    3. 'res' → logprob: -4.1822028160095215
    4. 'print' → logprob: -4.3072028160095215
    5. ' result' → logprob: -4.4322028160095215
    6. 'val' → logprob: -4.6822028160095215
    7. 'median' → logprob: -4.9322028160095215
    8. 'b' → logprob: -5.0572028160095215
    9. 'diff' → logprob: -5.0572028160095215
    10. 'sum' → logprob: -5.3072028160095215

Token 262: '(' (ID: 7)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.05123176798224449
    2. '(' → logprob: -3.551231861114502
    3. '(k' → logprob: -3.926231861114502
    4. '(pow' → logprob: -6.926231861114502
    5. 'a' → logprob: -7.801231861114502
    6. 'pow' → logprob: -9.926231384277344
    7. '(
' → logprob: -10.676231384277344
    8. '((' → logprob: -10.926231384277344
    9. 'k' → logprob: -11.426231384277344
    10. '(abs' → logprob: -12.176231384277344

Token 263: '2' (ID: 17)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.06014162302017212
    2. '(' → logprob: -3.3101415634155273
    3. '(k' → logprob: -4.060141563415527
    4. 'a' → logprob: -5.560141563415527
    5. 'k' → logprob: -8.310141563415527
    6. '2' → logprob: -8.560141563415527
    7. '(
' → logprob: -9.310141563415527
    8. '10' → logprob: -9.935141563415527
    9. '(pow' → logprob: -9.935141563415527
    10. ')' → logprob: -10.435141563415527

Token 264: ',' (ID: 11)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.814392626285553
    2. '(' → logprob: -1.0643925666809082
    3. ',' → logprob: -2.064392566680908
    4. '(k' → logprob: -2.939392566680908
    5. ',k' → logprob: -4.314392566680908
    6. 'a' → logprob: -4.564392566680908
    7. ',a' → logprob: -4.939392566680908
    8. ' ,' → logprob: -7.439392566680908
    9. 'k' → logprob: -7.689392566680908
    10. '(
' → logprob: -8.939393043518066

Token 265: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.00781954824924469
    2. '3' → logprob: -5.132819652557373
    3. '2' → logprob: -7.132819652557373
    4. 'a' → logprob: -7.257819652557373
    5. '10' → logprob: -8.882819175720215
    6. ' k' → logprob: -9.382819175720215
    7. '1' → logprob: -9.882819175720215
    8. '30' → logprob: -10.882819175720215
    9. '31' → logprob: -11.007819175720215
    10. '(' → logprob: -11.382819175720215

Token 266: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.019038306549191475
    2. ',' → logprob: -4.644038200378418
    3. '))' → logprob: -5.144038200378418
    4. '-' → logprob: -6.894038200378418
    5. ')*' → logprob: -7.019038200378418
    6. ' )' → logprob: -8.144038200378418
    7. ')))' → logprob: -8.519038200378418
    8. '[' → logprob: -8.644038200378418
    9. ' -' → logprob: -8.769038200378418
    10. ')**' → logprob: -8.894038200378418

Token 267: ' :' (ID: 712)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.06396927684545517
    2. 'val' → logprob: -4.313969135284424
    3. 'print' → logprob: -4.438969135284424
    4. '=' → logprob: -4.563969135284424
    5. ' =' → logprob: -5.063969135284424
    6. 'res' → logprob: -5.313969135284424
    7. 'rés' → logprob: -5.563969135284424
    8. 'answer' → logprob: -6.063969135284424
    9. 'value' → logprob: -6.563969135284424
    10. 'pow' → logprob: -6.688969135284424

Token 268: ' calc' (ID: 25691)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4374699294567108
    2. '2' → logprob: -1.0624699592590332
    3. ' pow' → logprob: -5.562469959259033
    4. 'pow' → logprob: -5.562469959259033
    5. ' (' → logprob: -8.062469482421875
    6. '(' → logprob: -8.437469482421875
    7. ' a' → logprob: -8.937469482421875
    8. ' min' → logprob: -9.812469482421875
    9. '1' → logprob: -10.187469482421875
    10. 'a' → logprob: -10.312469482421875

Token 269: 'ule' (ID: 1601)
  Prédit: 'ule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ule' → logprob: -0.07626673579216003
    2. '(' → logprob: -2.7012667655944824
    3. 'ul' → logprob: -5.451266765594482
    4. '2' → logprob: -7.076266765594482
    5. '**' → logprob: -7.201266765594482
    6. 'ulé' → logprob: -9.076266288757324
    7. '(pow' → logprob: -9.701266288757324
    8. 'cule' → logprob: -10.076266288757324
    9. '()' → logprob: -10.451266288757324
    10. 'pow' → logprob: -10.826266288757324

Token 270: ' ' (ID: 220)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.006858397275209427
    2. ' (' → logprob: -5.8818583488464355
    3. '2' → logprob: -6.2568583488464355
    4. ' la' → logprob: -6.6318583488464355
    5. ' ' → logprob: -7.7568583488464355
    6. '(pow' → logprob: -9.006858825683594
    7. 'la' → logprob: -9.506858825683594
    8. ' le' → logprob: -10.131858825683594
    9. ' pow' → logprob: -10.131858825683594
    10. 'pow' → logprob: -10.381858825683594

Token 271: '2' (ID: 17)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0006226073601283133
    2. '2' → logprob: -7.625622749328613
    3. '(pow' → logprob: -9.375622749328613
    4. 'la' → logprob: -11.125622749328613
    5. 'pow' → logprob: -11.125622749328613
    6. ')' → logprob: -11.750622749328613
    7. 'une' → logprob: -12.875622749328613
    8. 'le' → logprob: -13.125622749328613
    9. 'l' → logprob: -13.250622749328613
    10. 'a' → logprob: -13.750622749328613

Token 272: ' à' (ID: 1221)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -0.2357017546892166
    2. ',' → logprob: -2.1107017993927
    3. ' **' → logprob: -3.3607017993927
    4. ',k' → logprob: -3.4857017993927
    5. '(k' → logprob: -4.110701560974121
    6. '**,' → logprob: -6.110701560974121
    7. ')' → logprob: -6.360701560974121
    8. '(' → logprob: -6.485701560974121
    9. ' ,' → logprob: -6.860701560974121
    10. ' k' → logprob: -8.360701560974121

Token 273: ' la' (ID: 557)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.13881279528141022
    2. 'la' → logprob: -2.138812780380249
    3. 'pow' → logprob: -4.763813018798828
    4. ' k' → logprob: -7.013813018798828
    5. 'l' → logprob: -7.013813018798828
    6. ' la' → logprob: -7.513813018798828
    7. '(k' → logprob: -8.388813018798828
    8. '**' → logprob: -8.638813018798828
    9. 'power' → logprob: -9.013813018798828
    10. ' puissance' → logprob: -9.263813018798828

Token 274: ' puissance' (ID: 63494)
  Prédit: 'pu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pu' → logprob: -0.1398601084947586
    2. 'k' → logprob: -2.264860153198242
    3. 'pow' → logprob: -3.889860153198242
    4. ' puissance' → logprob: -5.514860153198242
    5. 'power' → logprob: -6.514860153198242
    6. '```' → logprob: -7.514860153198242
    7. '#' → logprob: -9.639860153198242
    8. '**' → logprob: -10.764860153198242
    9. 'pot' → logprob: -10.889860153198242
    10. ' puiss' → logprob: -11.139860153198242

Token 275: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.25618430972099304
    2. '(k' → logprob: -1.5061843395233154
    3. '(' → logprob: -5.631184101104736
    4. ' k' → logprob: -8.006184577941895
    5. ' (' → logprob: -8.381184577941895
    6. ',' → logprob: -10.256184577941895
    7. ',k' → logprob: -10.631184577941895
    8. '2' → logprob: -11.256184577941895
    9. ')' → logprob: -11.756184577941895
    10. 'pow' → logprob: -11.881184577941895

Token 276: '.
' (ID: 558)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.10297560691833496
    2. 'res' → logprob: -2.852975606918335
    3. 'val' → logprob: -3.602975606918335
    4. 'print' → logprob: -5.852975845336914
    5. 'r' → logprob: -6.602975845336914
    6. 'x' → logprob: -6.727975845336914
    7. 's' → logprob: -6.852975845336914
    8. 'value' → logprob: -6.852975845336914
    9. 'rés' → logprob: -6.977975845336914
    10. 'diff' → logprob: -7.102975845336914

Token 277: '#' (ID: 2)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.0684618428349495
    2. 'print' → logprob: -3.0684618949890137
    3. 'a' → logprob: -4.318461894989014
    4. 'res' → logprob: -5.693461894989014
    5. 'answer' → logprob: -6.443461894989014
    6. 'val' → logprob: -7.818461894989014
    7. 'b' → logprob: -8.318461418151855
    8. 'rés' → logprob: -8.568461418151855
    9. 'ans' → logprob: -8.693461418151855
    10. 'value' → logprob: -9.193461418151855

Token 278: '  ' (ID: 256)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.07408458739519119
    2. 'print' → logprob: -2.824084520339966
    3. 'a' → logprob: -5.074084758758545
    4. 'answer' → logprob: -6.074084758758545
    5. 'res' → logprob: -6.699084758758545
    6. 'value' → logprob: -7.449084758758545
    7. 'val' → logprob: -7.699084758758545
    8. 'b' → logprob: -7.824084758758545
    9. 'x' → logprob: -8.824084281921387
    10. 'rés' → logprob: -8.824084281921387

Token 279: ' -' (ID: 533)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.11848338693380356
    2. 'a' → logprob: -2.993483304977417
    3. 'print' → logprob: -3.243483304977417
    4. 'val' → logprob: -5.243483543395996
    5. 'res' → logprob: -5.368483543395996
    6. 'value' → logprob: -5.868483543395996
    7. 'b' → logprob: -5.993483543395996
    8. 'answer' → logprob: -6.243483543395996
    9. 'if' → logprob: -7.118483543395996
    10. 'diff' → logprob: -7.243483543395996

Token 280: ' a' (ID: 261)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.3338882625102997
    2. 'a' → logprob: -1.583888292312622
    3. '(a' → logprob: -3.583888292312622
    4. 'pow' → logprob: -3.958888292312622
    5. 'res' → logprob: -4.833888053894043
    6. ' result' → logprob: -4.958888053894043
    7. 'print' → logprob: -5.458888053894043
    8. 'val' → logprob: -5.958888053894043
    9. ' a' → logprob: -6.583888053894043
    10. 'rés' → logprob: -6.708888053894043

Token 281: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.010333678685128689
    2. '[k' → logprob: -5.26033353805542
    3. '[min' → logprob: -5.51033353805542
    4. '[:' → logprob: -8.135334014892578
    5. '[a' → logprob: -8.635334014892578
    6. 'pow' → logprob: -8.760334014892578
    7. '[p' → logprob: -8.760334014892578
    8. '[-' → logprob: -8.885334014892578
    9. 'min' → logprob: -10.760334014892578
    10. 'a' → logprob: -10.760334014892578

Token 282: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.3917940855026245
    2. '0' → logprob: -1.1417940855026245
    3. '1' → logprob: -5.641794204711914
    4. '3' → logprob: -7.266794204711914
    5. '[' → logprob: -7.516794204711914
    6. 'k' → logprob: -9.766794204711914
    7. ' ' → logprob: -11.266794204711914
    8. '-' → logprob: -11.641794204711914
    9. '
' → logprob: -11.891794204711914
    10. '(' → logprob: -12.079294204711914

Token 283: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0001698094274615869
    2. ']*' → logprob: -9.62516975402832
    3. ']+' → logprob: -10.37516975402832
    4. '[' → logprob: -10.37516975402832
    5. '-' → logprob: -10.87516975402832
    6. '+' → logprob: -11.75016975402832
    7. '*' → logprob: -12.25016975402832
    8. '])' → logprob: -12.87516975402832
    9. ']
' → logprob: -13.50016975402832
    10. ')' → logprob: -13.62516975402832

Token 284: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.41267648339271545
    2. '+' → logprob: -1.912676453590393
    3. ' *' → logprob: -1.912676453590393
    4. ' +' → logprob: -3.9126765727996826
    5. '-' → logprob: -4.6626763343811035
    6. '**' → logprob: -4.6626763343811035
    7. '=' → logprob: -6.4126763343811035
    8. ' -' → logprob: -6.9126763343811035
    9. '+=' → logprob: -7.7876763343811035
    10. '*=' → logprob: -8.162676811218262

Token 285: ' pow' (ID: 9779)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.0013301216531544924
    2. ' pow' → logprob: -6.6263298988342285
    3. '(pow' → logprob: -12.501330375671387
    4. '(' → logprob: -15.251330375671387
    5. '2' → logprob: -16.50132942199707
    6. ' ' → logprob: -17.25132942199707
    7. ' (' → logprob: -17.25132942199707
    8. '_pow' → logprob: -17.87632942199707
    9. '   ' → logprob: -18.12632942199707
    10. 'pw' → logprob: -18.37632942199707

Token 286: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.580929347255733e-05
    2. '(
' → logprob: -11.625016212463379
    3. '2' → logprob: -12.250016212463379
    4. ' (' → logprob: -13.125016212463379
    5. '```' → logprob: -17.000015258789062
    6. '(
' → logprob: -17.500015258789062
    7. ',' → logprob: -17.625015258789062
    8. ' ' → logprob: -17.750015258789062
    9. '(

' → logprob: -18.250015258789062
    10. ')' → logprob: -18.875015258789062

Token 287: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0005587508203461766
    2. '(' → logprob: -7.500558853149414
    3. ' ' → logprob: -12.125558853149414
    4. ')' → logprob: -16.250558853149414
    5. ',' → logprob: -16.750558853149414
    6. ' (' → logprob: -17.125558853149414
    7. '```' → logprob: -17.750558853149414
    8. '
' → logprob: -18.250558853149414
    9. '  ' → logprob: -18.375558853149414
    10. '   ' → logprob: -18.625558853149414

Token 288: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10080177336931229
    2. ',k' → logprob: -2.350801706314087
    3. '(k' → logprob: -8.100801467895508
    4. '(' → logprob: -8.600801467895508
    5. ' ,' → logprob: -9.475801467895508
    6. 'k' → logprob: -10.600801467895508
    7. ' k' → logprob: -13.600801467895508
    8. ',
' → logprob: -13.975801467895508
    9. ',p' → logprob: -14.225801467895508
    10. '
' → logprob: -14.350801467895508

Token 289: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0003811025235336274
    2. ' k' → logprob: -7.875380992889404
    3. '(k' → logprob: -14.125381469726562
    4. ')' → logprob: -15.125381469726562
    5. ' ' → logprob: -17.875381469726562
    6. ',k' → logprob: -18.375381469726562
    7. '	k' → logprob: -18.375381469726562
    8. '   ' → logprob: -19.000381469726562
    9. '
' → logprob: -19.000381469726562
    10. ',' → logprob: -19.375381469726562

Token 290: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001462107611587271
    2. ')
' → logprob: -9.75014591217041
    3. '))' → logprob: -10.25014591217041
    4. ' )' → logprob: -11.00014591217041
    5. '())' → logprob: -11.75014591217041
    6. ')#' → logprob: -12.12514591217041
    7. '#' → logprob: -12.50014591217041
    8. 'a' → logprob: -13.00014591217041
    9. ')a' → logprob: -13.00014591217041
    10. '()' → logprob: -13.00014591217041

Token 291: ' :' (ID: 712)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.10401740670204163
    2. 'print' → logprob: -2.479017496109009
    3. '+' → logprob: -5.60401725769043
    4. 'a' → logprob: -5.60401725769043
    5. '=' → logprob: -5.97901725769043
    6. ' =' → logprob: -6.10401725769043
    7. 'answer' → logprob: -7.60401725769043
    8. 'rés' → logprob: -7.60401725769043
    9. ' result' → logprob: -8.10401725769043
    10. '#' → logprob: -8.35401725769043

Token 292: ' le' (ID: 505)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.6979019641876221
    2. 'a' → logprob: -0.9479019641876221
    3. ' (' → logprob: -2.322901964187622
    4. '(' → logprob: -4.572901725769043
    5. '"' → logprob: -6.322901725769043
    6. ' ' → logprob: -6.697901725769043
    7. ' "' → logprob: -7.197901725769043
    8. '(a' → logprob: -7.197901725769043
    9. ' '' → logprob: -7.822901725769043
    10. ')' → logprob: -8.447901725769043

Token 293: ' troisième' (ID: 75373)
  Prédit: ' troisième'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' troisième' → logprob: -0.45022013783454895
    2. 'tro' → logprob: -2.4502201080322266
    3. 'plus' → logprob: -2.8252201080322266
    4. ' plus' → logprob: -3.0752201080322266
    5. 'multip' → logprob: -3.2002201080322266
    6. 'po' → logprob: -3.8252201080322266
    7. 'mult' → logprob: -3.9502201080322266
    8. '3' → logprob: -4.325220108032227
    9. ' produit' → logprob: -4.950220108032227
    10. ' résultat' → logprob: -4.950220108032227

Token 294: ' élément' (ID: 99627)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.8902177214622498
    2. ' *' → logprob: -1.5152177810668945
    3. '*' → logprob: -1.7652177810668945
    4. '[' → logprob: -2.1402177810668945
    5. '<|end|>' → logprob: -3.7652177810668945
    6. ' a' → logprob: -4.0152177810668945
    7. ')' → logprob: -4.8902177810668945
    8. ' ' → logprob: -5.1402177810668945
    9. ']' → logprob: -5.2652177810668945
    10. 'element' → logprob: -5.8902177810668945

Token 295: ' multip' (ID: 17524)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -1.1373540163040161
    2. '+' → logprob: -1.2623540163040161
    3. ' *' → logprob: -1.3873540163040161
    4. ' +' → logprob: -2.6373538970947266
    5. 'a' → logprob: -3.0123538970947266
    6. '#' → logprob: -4.387353897094727
    7. 'import' → logprob: -6.012353897094727
    8. '<|end|>' → logprob: -6.012353897094727
    9. '**' → logprob: -6.512353897094727
    10. '[' → logprob: -6.887353897094727

Token 296: 'lié' (ID: 102412)
  Prédit: 'lié'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lié' → logprob: -0.012092692777514458
    2. 'li' → logprob: -5.012092590332031
    3. 'lic' → logprob: -5.262092590332031
    4. 'lication' → logprob: -9.762092590332031
    5. 'lique' → logprob: -10.762092590332031
    6. 'l' → logprob: -10.762092590332031
    7. 'lé' → logprob: -11.512092590332031
    8. '#' → logprob: -11.762092590332031
    9. 'lie' → logprob: -11.887092590332031
    10. 'iqué' → logprob: -12.137092590332031

Token 297: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -1.0816515684127808
    2. 'a' → logprob: -1.4566515684127808
    3. '#' → logprob: -2.0816516876220703
    4. '+' → logprob: -2.2066516876220703
    5. '=' → logprob: -2.7066516876220703
    6. 'par' → logprob: -3.7066516876220703
    7. 'by' → logprob: -3.9566516876220703
    8. ',' → logprob: -4.08165168762207
    9. ' by' → logprob: -4.20665168762207
    10. ' a' → logprob: -4.70665168762207

Token 298: ' ' (ID: 220)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.8910508155822754
    2. '2' → logprob: -1.3910508155822754
    3. '(' → logprob: -2.3910508155822754
    4. ' pow' → logprob: -2.8910508155822754
    5. 'la' → logprob: -3.3910508155822754
    6. ' ' → logprob: -3.5160508155822754
    7. '(pow' → logprob: -3.5160508155822754
    8. ' (' → logprob: -3.5160508155822754
    9. ' la' → logprob: -3.7660508155822754
    10. 'le' → logprob: -4.266050815582275

Token 299: '2' (ID: 17)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.011397577822208405
    2. '2' → logprob: -4.886397361755371
    3. ' pow' → logprob: -6.761397361755371
    4. 'la' → logprob: -6.761397361755371
    5. '(pow' → logprob: -7.011397361755371
    6. '(' → logprob: -8.386397361755371
    7. 'le' → logprob: -8.636397361755371
    8. ' ' → logprob: -10.011397361755371
    9. ' (' → logprob: -10.136397361755371
    10. ' la' → logprob: -10.261397361755371

Token 300: ' puissance' (ID: 63494)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -0.010910107754170895
    2. ',' → logprob: -5.7609100341796875
    3. 'k' → logprob: -6.0109100341796875
    4. ',k' → logprob: -6.0109100341796875
    5. '*k' → logprob: -6.5109100341796875
    6. ' k' → logprob: -7.8859100341796875
    7. '**,' → logprob: -8.135910034179688
    8. ' **' → logprob: -8.510910034179688
    9. 'a' → logprob: -9.010910034179688
    10. '*' → logprob: -9.010910034179688

Token 301: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.07889111340045929
    2. ' k' → logprob: -2.5788910388946533
    3. ' ' → logprob: -14.578890800476074
    4. '(k' → logprob: -14.703890800476074
    5. ' ' → logprob: -15.578890800476074
    6. '```' → logprob: -16.20389175415039
    7. ' (' → logprob: -16.82889175415039
    8. '	k' → logprob: -17.20389175415039
    9. '{k' → logprob: -17.70389175415039
    10. '(' → logprob: -18.07889175415039

Token 302: '.
' (ID: 558)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.0384061262011528
    2. 'print' → logprob: -3.2884061336517334
    3. '#' → logprob: -9.413406372070312
    4. 'res' → logprob: -9.413406372070312
    5. 'answer' → logprob: -9.788406372070312
    6. 'rés' → logprob: -10.288406372070312
    7. ' result' → logprob: -10.288406372070312
    8. '+' → logprob: -10.788406372070312
    9. 'a' → logprob: -11.413406372070312
    10. '
' → logprob: -11.913406372070312

Token 303: '#' (ID: 2)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.03853197023272514
    2. 'print' → logprob: -3.288532018661499
    3. 'answer' → logprob: -8.163532257080078
    4. 'res' → logprob: -9.663532257080078
    5. 'a' → logprob: -9.913532257080078
    6. 'rés' → logprob: -10.538532257080078
    7. ' result' → logprob: -11.038532257080078
    8. 'r' → logprob: -11.288532257080078
    9. '#' → logprob: -11.663532257080078
    10. 'ans' → logprob: -11.913532257080078

Token 304: ' Addition' (ID: 129345)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.693321943283081
    2. 'result' → logprob: -0.693321943283081
    3. 'answer' → logprob: -9.56832218170166
    4. '#' → logprob: -10.19332218170166
    5. 'a' → logprob: -10.31832218170166
    6. 'rés' → logprob: -10.81832218170166
    7. 'res' → logprob: -13.06832218170166
    8. 'output' → logprob: -13.19332218170166
    9. 'value' → logprob: -13.31832218170166
    10. ' result' → logprob: -13.31832218170166

Token 305: 'ne' (ID: 611)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.9598540663719177
    2. ' =' → logprob: -1.7098541259765625
    3. 'result' → logprob: -1.9598541259765625
    4. ' a' → logprob: -2.2098541259765625
    5. 'n' → logprob: -2.4598541259765625
    6. 'ner' → logprob: -3.4598541259765625
    7. '=' → logprob: -3.7098541259765625
    8. ' result' → logprob: -4.3348541259765625
    9. '_result' → logprob: -4.7098541259765625
    10. 'sum' → logprob: -4.8348541259765625

Token 306: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.004598161205649376
    2. '(a' → logprob: -5.629598140716553
    3. ' a' → logprob: -7.254598140716553
    4. '(' → logprob: -8.254598617553711
    5. ' (' → logprob: -11.004598617553711
    6. '(
' → logprob: -11.879598617553711
    7. ':' → logprob: -13.379598617553711
    8. ',' → logprob: -13.879598617553711
    9. ' ' → logprob: -14.004598617553711
    10. 'а' → logprob: -14.629598617553711

Token 307: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.001521526137366891
    2. 'a' → logprob: -7.251521587371826
    3. 's' → logprob: -8.376521110534668
    4. '(' → logprob: -8.376521110534668
    5. '(a' → logprob: -8.376521110534668
    6. '[a' → logprob: -9.251521110534668
    7. ' =' → logprob: -12.376521110534668
    8. 'e' → logprob: -12.501521110534668
    9. 'es' → logprob: -13.376521110534668
    10. '[:' → logprob: -13.501521110534668

Token 308: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00042804674012586474
    2. '[' → logprob: -8.000428199768066
    3. '1' → logprob: -10.000428199768066
    4. '2' → logprob: -11.125428199768066
    5. '(' → logprob: -11.125428199768066
    6. ' ' → logprob: -11.250428199768066
    7. '```' → logprob: -13.625428199768066
    8. ']' → logprob: -14.125428199768066
    9. '   ' → logprob: -14.187928199768066
    10. ':' → logprob: -14.875428199768066

Token 309: '],' (ID: 2155)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.06299169361591339
    2. '+' → logprob: -2.8129916191101074
    3. ')' → logprob: -7.187991619110107
    4. 'a' → logprob: -9.187992095947266
    5. ']' → logprob: -9.562992095947266
    6. '[' → logprob: -10.062992095947266
    7. ',' → logprob: -10.937992095947266
    8. ' ' → logprob: -11.562992095947266
    9. '+a' → logprob: -12.062992095947266
    10. ' ,' → logprob: -12.312992095947266

Token 310: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5764607787132263
    2. ' a' → logprob: -0.8264607787132263
    3. '"' → logprob: -7.951460838317871
    4. ''' → logprob: -9.326460838317871
    5. ' "' → logprob: -10.826460838317871
    6. ' '' → logprob: -11.076460838317871
    7. ' ' → logprob: -11.076460838317871
    8. ''a' → logprob: -11.701460838317871
    9. ' +' → logprob: -12.451460838317871
    10. '"a' → logprob: -12.451460838317871

Token 311: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.723352049040841e-06
    2. '1' → logprob: -12.375004768371582
    3. ' [' → logprob: -15.500004768371582
    4. '[
' → logprob: -16.375003814697266
    5. '```' → logprob: -16.750003814697266
    6. 'a' → logprob: -16.875003814697266
    7. '[a' → logprob: -18.250003814697266
    8. ' ' → logprob: -18.375003814697266
    9. 's' → logprob: -18.500003814697266
    10. '][' → logprob: -18.750003814697266

Token 312: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.988221684878226e-06
    2. '2' → logprob: -12.750006675720215
    3. ' ' → logprob: -13.000006675720215
    4. '0' → logprob: -13.625006675720215
    5. ']' → logprob: -15.000006675720215
    6. '[' → logprob: -16.37500762939453
    7. '   ' → logprob: -16.81250762939453
    8. '```' → logprob: -17.50000762939453
    9. '
' → logprob: -17.56250762939453
    10. '3' → logprob: -17.68750762939453

Token 313: ']' (ID: 60)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5709602236747742
    2. ')' → logprob: -1.570960283279419
    3. ']' → logprob: -1.570960283279419
    4. '+' → logprob: -4.82096004486084
    5. '),' → logprob: -5.07096004486084
    6. '],' → logprob: -5.57096004486084
    7. ' ,' → logprob: -7.44596004486084
    8. 'a' → logprob: -8.32096004486084
    9. ']+' → logprob: -9.07096004486084
    10. ' +' → logprob: -9.44596004486084

Token 314: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12201878428459167
    2. '+' → logprob: -2.497018814086914
    3. ' +' → logprob: -3.497018814086914
    4. ' ,' → logprob: -6.372018814086914
    5. 'a' → logprob: -7.872018814086914
    6. '+,' → logprob: -9.622018814086914
    7. ' a' → logprob: -10.872018814086914
    8. ')' → logprob: -11.122018814086914
    9. '+a' → logprob: -11.372018814086914
    10. ' et' → logprob: -11.372018814086914

Token 315: ' le' (ID: 505)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.4289571940898895
    2. ' a' → logprob: -1.053957223892212
    3. '(a' → logprob: -9.303956985473633
    4. ' (' → logprob: -9.428956985473633
    5. ' ' → logprob: -10.678956985473633
    6. '(' → logprob: -10.803956985473633
    7. '"' → logprob: -11.553956985473633
    8. '    ' → logprob: -11.678956985473633
    9. ''' → logprob: -11.928956985473633
    10. '   ' → logprob: -12.303956985473633

Token 316: ' résultat' (ID: 62556)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.05319192260503769
    2. '+' → logprob: -3.178191900253296
    3. ' a' → logprob: -5.428192138671875
    4. '(a' → logprob: -5.928192138671875
    5. ' +' → logprob: -6.428192138671875
    6. '(' → logprob: -7.428192138671875
    7. '+a' → logprob: -8.303192138671875
    8. '*' → logprob: -8.553192138671875
    9. '3' → logprob: -9.303192138671875
    10. 'pow' → logprob: -10.178192138671875

Token 317: ' précédent' (ID: 128462)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.5639258027076721
    2. 'a' → logprob: -1.1889257431030273
    3. 'de' → logprob: -2.8139257431030273
    4. ' a' → logprob: -2.8139257431030273
    5. '+' → logprob: -5.688925743103027
    6. '=' → logprob: -6.188925743103027
    7. ' =' → logprob: -8.063925743103027
    8. 'final' → logprob: -8.563925743103027
    9. ' ' → logprob: -9.313925743103027
    10. ' +' → logprob: -9.438925743103027

Token 318: ',' (ID: 11)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.0018861611606553197
    2. 'print' → logprob: -6.501886367797852
    3. 'total' → logprob: -8.376886367797852
    4. 'res' → logprob: -9.876886367797852
    5. 'answer' → logprob: -10.501886367797852
    6. 's' → logprob: -10.751886367797852
    7. 'sum' → logprob: -11.501886367797852
    8. 'a' → logprob: -11.501886367797852
    9. '
' → logprob: -12.001886367797852
    10. ' result' → logprob: -12.126886367797852

Token 319: ' puis' (ID: 18766)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.02817809209227562
    2. 'print' → logprob: -3.6531779766082764
    3. 'res' → logprob: -6.9031782150268555
    4. 'a' → logprob: -7.9031782150268555
    5. 'answer' → logprob: -8.153178215026855
    6. 'total' → logprob: -9.778178215026855
    7. 'r' → logprob: -10.153178215026855
    8. 'ans' → logprob: -10.653178215026855
    9. ' result' → logprob: -10.903178215026855
    10. 's' → logprob: -10.903178215026855

Token 320: ' affiche' (ID: 127479)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.02063625305891037
    2. 'aff' → logprob: -4.020636081695557
    3. ' print' → logprob: -6.270636081695557
    4. 'stock' → logprob: -8.270636558532715
    5. ' stock' → logprob: -8.770636558532715
    6. ' affiche' → logprob: -9.270636558532715
    7. '#' → logprob: -10.270636558532715
    8. ' imprime' → logprob: -10.520636558532715
    9. 'assign' → logprob: -11.645636558532715
    10. '#print' → logprob: -11.895636558532715

Token 321: ' le' (ID: 505)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.1187090054154396
    2. '(' → logprob: -2.243709087371826
    3. 'print' → logprob: -5.868709087371826
    4. '(print' → logprob: -6.368709087371826
    5. 'a' → logprob: -6.993709087371826
    6. '(sum' → logprob: -8.618708610534668
    7. '(
' → logprob: -8.993708610534668
    8. 'sum' → logprob: -9.868708610534668
    9. '(

' → logprob: -11.243708610534668
    10. '((' → logprob: -11.743708610534668

Token 322: ' résultat' (ID: 62556)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.2448796033859253
    2. 'rés' → logprob: -2.744879722595215
    3. 'total' → logprob: -3.119879722595215
    4. 'a' → logprob: -3.369879722595215
    5. ' résultat' → logprob: -3.369879722595215
    6. 'res' → logprob: -4.244879722595215
    7. ' result' → logprob: -5.244879722595215
    8. 's' → logprob: -5.369879722595215
    9. '(a' → logprob: -5.744879722595215
    10. 'r' → logprob: -5.994879722595215

Token 323: '.
' (ID: 558)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.2007883671903983e-05
    2. '
' → logprob: -10.875021934509277
    3. ' print' → logprob: -12.875021934509277
    4. '(print' → logprob: -15.500021934509277
    5. 'a' → logprob: -16.250022888183594
    6. '#print' → logprob: -17.125022888183594
    7. '
' → logprob: -17.250022888183594
    8. '.print' → logprob: -17.750022888183594
    9. ')
' → logprob: -17.875022888183594
    10. ')' → logprob: -18.625022888183594

Token 324: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -7.896309739408025e-07
    2. ' print' → logprob: -14.375000953674316
    3. '
' → logprob: -15.875000953674316
    4. '```' → logprob: -16.875
    5. 'a' → logprob: -19.0
    6. '(print' → logprob: -20.75
    7. '#print' → logprob: -21.125
    8. 'result' → logprob: -21.375
    9. '``' → logprob: -21.5
    10. '#' → logprob: -22.5

Token 325: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0052398028783500195
    2. '(' → logprob: -5.255239963531494
    3. 'a' → logprob: -12.130239486694336
    4. '(
' → logprob: -15.255239486694336
    5. ' (' → logprob: -16.130239486694336
    6. '((' → logprob: -16.130239486694336
    7. '(sum' → logprob: -16.505239486694336
    8. '()' → logprob: -18.005239486694336
    9. '(A' → logprob: -19.380239486694336
    10. '(

' → logprob: -19.755239486694336

Token 326: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.796184723294573e-06
    2. '0' → logprob: -12.125005722045898
    3. ' [' → logprob: -15.250005722045898
    4. ')' → logprob: -17.5000057220459
    5. '[
' → logprob: -17.5000057220459
    6. '```' → logprob: -17.8750057220459
    7. '\[' → logprob: -18.0000057220459
    8. '3' → logprob: -18.6250057220459
    9. ' ' → logprob: -19.1250057220459
    10. '1' → logprob: -19.2500057220459

Token 327: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.7697225252486533e-06
    2. '2' → logprob: -12.625003814697266
    3. ' ' → logprob: -14.750003814697266
    4. '02' → logprob: -17.000003814697266
    5. '1' → logprob: -18.625003814697266
    6. '۰' → logprob: -18.812503814697266
    7. '   ' → logprob: -19.000003814697266
    8. '012' → logprob: -19.000003814697266
    9. '０' → logprob: -19.187503814697266
    10. '```' → logprob: -19.250003814697266

Token 328: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.009206283837556839
    2. '],' → logprob: -5.134206295013428
    3. ']+' → logprob: -6.009206295013428
    4. '+' → logprob: -7.759206295013428
    5. ' ]' → logprob: -8.25920581817627
    6. '])' → logprob: -9.38420581817627
    7. ')' → logprob: -10.50920581817627
    8. ' +' → logprob: -11.75920581817627
    9. ' ],' → logprob: -11.88420581817627
    10. ',' → logprob: -13.25920581817627

Token 329: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5765606760978699
    2. '+' → logprob: -0.8265606760978699
    3. ')' → logprob: -8.076560974121094
    4. ',' → logprob: -8.826560974121094
    5. '+a' → logprob: -9.201560974121094
    6. ' ,' → logprob: -10.201560974121094
    7. '+)' → logprob: -11.576560974121094
    8. ' ' → logprob: -12.326560974121094
    9. ' )' → logprob: -12.451560974121094
    10. '+,' → logprob: -12.576560974121094

Token 330: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6931514143943787
    2. ' a' → logprob: -0.6931514143943787
    3. ' ' → logprob: -13.068151473999023
    4. ''' → logprob: -14.443151473999023
    5. ' ' → logprob: -14.568151473999023
    6. '"' → logprob: -14.943151473999023
    7. '	a' → logprob: -15.693151473999023
    8. ''a' → logprob: -16.193151473999023
    9. ')' → logprob: -16.318151473999023
    10. ',' → logprob: -16.693151473999023

Token 331: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.45848218582978e-06
    2. '1' → logprob: -13.00000286102295
    3. '[
' → logprob: -16.250001907348633
    4. ' [' → logprob: -16.500001907348633
    5. ']' → logprob: -18.250001907348633
    6. '][' → logprob: -18.875001907348633
    7. '
' → logprob: -19.125001907348633
    8. '```' → logprob: -20.125001907348633
    9. '\[' → logprob: -20.250001907348633
    10. '[[' → logprob: -21.250001907348633

Token 332: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.375001907348633
    3. ']' → logprob: -17.125001907348633
    4. '[' → logprob: -18.750001907348633
    5. '   ' → logprob: -19.375001907348633
    6. '１' → logprob: -19.750001907348633
    7. '2' → logprob: -20.250001907348633
    8. '```' → logprob: -20.687501907348633
    9. '۱' → logprob: -20.750001907348633
    10. '  ' → logprob: -21.125001907348633

Token 333: ']' (ID: 60)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4747711718082428
    2. ' +' → logprob: -0.9747711420059204
    3. ']' → logprob: -7.599771022796631
    4. ')' → logprob: -8.599771499633789
    5. ']+' → logprob: -12.224771499633789
    6. '+a' → logprob: -13.224771499633789
    7. ')+' → logprob: -14.224771499633789
    8. ' ' → logprob: -14.599771499633789
    9. ' ' → logprob: -15.099771499633789
    10. 'a' → logprob: -15.224771499633789

Token 334: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.31326615810394287
    2. '+' → logprob: -1.3132661581039429
    3. '+a' → logprob: -12.688265800476074
    4. ')' → logprob: -14.313265800476074
    5. '+
' → logprob: -15.563265800476074
    6. ' ' → logprob: -15.563265800476074
    7. ' +
' → logprob: -16.06326675415039
    8. 'a' → logprob: -16.81326675415039
    9. ' ' → logprob: -17.06326675415039
    10. '+b' → logprob: -17.81326675415039

Token 335: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.2519448399543762
    2. ' a' → logprob: -1.5019447803497314
    3. '(a' → logprob: -11.251944541931152
    4. ' (' → logprob: -13.501944541931152
    5. ' ' → logprob: -14.126944541931152
    6. '(' → logprob: -15.126944541931152
    7. ' ' → logprob: -16.75194549560547
    8. '   ' → logprob: -16.75194549560547
    9. '	a' → logprob: -16.75194549560547
    10. '"' → logprob: -17.00194549560547

Token 336: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -9.088346359931165e-07
    2. '2' → logprob: -14.125000953674316
    3. ' [' → logprob: -16.625
    4. '][' → logprob: -16.875
    5. '```' → logprob: -18.125
    6. '[
' → logprob: -18.375
    7. '3' → logprob: -18.5
    8. 'a' → logprob: -18.75
    9. ']' → logprob: -18.75
    10. '
' → logprob: -19.375

Token 337: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.875000953674316
    3. '   ' → logprob: -17.375001907348633
    4. '
' → logprob: -17.562501907348633
    5. '２' → logprob: -18.125001907348633
    6. '```' → logprob: -18.125001907348633
    7. '1' → logprob: -18.250001907348633
    8. '0' → logprob: -18.250001907348633
    9. '۲' → logprob: -18.625001907348633
    10. '3' → logprob: -18.937501907348633

Token 338: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -3.297462171758525e-05
    2. ']*' → logprob: -10.375033378601074
    3. ' ]' → logprob: -14.000033378601074
    4. '*' → logprob: -14.250033378601074
    5. ' *' → logprob: -16.500032424926758
    6. ')' → logprob: -16.875032424926758
    7. '])' → logprob: -17.625032424926758
    8. '   ' → logprob: -19.250032424926758
    9. ' ' → logprob: -19.375032424926758
    10. '],' → logprob: -19.750032424926758

Token 339: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.25225093960762024
    2. ' *' → logprob: -1.5022509098052979
    3. ')' → logprob: -8.127250671386719
    4. ']' → logprob: -11.127250671386719
    5. ')*' → logprob: -12.377250671386719
    6. ' ' → logprob: -12.627250671386719
    7. '   ' → logprob: -13.502250671386719
    8. ',' → logprob: -14.127250671386719
    9. '```' → logprob: -14.377250671386719
    10. ' ' → logprob: -15.002250671386719

Token 340: ' pow' (ID: 9779)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.008644593879580498
    2. ' pow' → logprob: -4.7586445808410645
    3. '2' → logprob: -10.633645057678223
    4. '(pow' → logprob: -12.133645057678223
    5. '(' → logprob: -15.258645057678223
    6. ' ' → logprob: -15.758645057678223
    7. ')' → logprob: -17.258644104003906
    8. '.pow' → logprob: -17.508644104003906
    9. ' (' → logprob: -17.633644104003906
    10. '```' → logprob: -17.883644104003906

Token 341: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -4.842555426876061e-06
    2. '(
' → logprob: -12.375004768371582
    3. ' (' → logprob: -14.875004768371582
    4. '2' → logprob: -15.500004768371582
    5. '(

' → logprob: -17.7500057220459
    6. ')' → logprob: -18.5000057220459
    7. '```' → logprob: -19.1250057220459
    8. ')(' → logprob: -20.0000057220459
    9. ' ' → logprob: -20.0000057220459
    10. '()' → logprob: -20.6250057220459

Token 342: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -12.87500286102295
    3. ')' → logprob: -18.750001907348633
    4. '```' → logprob: -19.000001907348633
    5. '   ' → logprob: -19.125001907348633
    6. '  ' → logprob: -19.625001907348633
    7. '(' → logprob: -19.750001907348633
    8. ',' → logprob: -21.250001907348633
    9. '
' → logprob: -21.375001907348633
    10. '۲' → logprob: -21.625001907348633

Token 343: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03529424965381622
    2. ',k' → logprob: -3.5352942943573
    3. '(' → logprob: -5.285294055938721
    4. ' ,' → logprob: -8.285294532775879
    5. '(k' → logprob: -9.285294532775879
    6. '2' → logprob: -9.285294532775879
    7. ',
' → logprob: -12.035294532775879
    8. ')' → logprob: -12.535294532775879
    9. ',K' → logprob: -12.535294532775879
    10. 'k' → logprob: -12.785294532775879

Token 344: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.005234002135694027
    2. ' k' → logprob: -5.2552337646484375
    3. '(k' → logprob: -15.255233764648438
    4. '	k' → logprob: -19.005233764648438
    5. ' ' → logprob: -19.130233764648438
    6. ')' → logprob: -19.255233764648438
    7. ',k' → logprob: -22.005233764648438
    8. '_k' → logprob: -22.255233764648438
    9. '{k' → logprob: -22.255233764648438
    10. '  ' → logprob: -23.130233764648438

Token 345: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0007133854669518769
    2. ')' → logprob: -7.250713348388672
    3. '()))' → logprob: -13.375713348388672
    4. ')))' → logprob: -13.625713348388672
    5. '))
' → logprob: -14.625713348388672
    6. ' ))' → logprob: -16.375713348388672
    7. '())' → logprob: -16.750713348388672
    8. '()' → logprob: -16.750713348388672
    9. ')
' → logprob: -17.875713348388672
    10. '(' → logprob: -19.000713348388672


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 343
Tokens correctement prédits (1ère position, stricte): 85
Tokens correctement prédits (1ère position, avec adaptation): 85
Tokens correctement prédits (top 10): 223
Précision stricte (1ère position): 24.78%
Précision adaptée (1ère position): 24.78%
Précision (top 10): 65.01%
================================================================================
