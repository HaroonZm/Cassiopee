================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:52:13
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
"""
Ce script calcule le nombre de manières de remplir un tableau de N éléments avec certaines contraintes de répétition, modulo M. 
K correspond à la taille maximale des blocs consécutifs admissibles selon une règle parité, avec un traitement spécial si K est pair ou impair.

Entrée : 
    N, K, M : trois entiers lus sur une même ligne.
Sortie : 
    Un entier représentant la solution modulo M.
"""

# Lecture des trois entiers N (taille), K (contrainte), M (modulo)
N, K, M = map(int, input().split())

# Détermine la taille maximale pour le DP à 3 dimensions (pour le cas impair)
L = (N + 1) // 2 + 1

def even(n, k):
    """
    Calcule le nombre de manières de remplir une séquence de longueur n, 
    où il n'y a jamais plus de k éléments identiques consécutifs.
    
    Utilise un DP où dp[i][j] représente le nombre de façons de construire
    une séquence de longueur i, se terminant par exactement j éléments consécutifs
    identiques.

    Args:
        n (int): longueur de la séquence à remplir.
        k (int): contrainte sur la longueur maximale de répétition.
    Returns:
        int: nombre de séquences valides modulo M.
    """
    # Initialisation du tableau DP: dp[position][longueur_bloc_actuel]
    dp = [[0] * (k + 1) for _ in range(n + 1)]
    # Cas de base : une séquence vide est valide
    dp[0][0] = 1
    for i in range(n):
        for j in range(k + 1):
            # Ajouter un nouvel élément différent (réinitialise le bloc à 0)
            dp[i + 1][0] = (dp[i + 1][0] + dp[i][j]) % M
            # Ajouter le même élément actuel, si la limite de répétition n'est pas atteinte
            if j != k:
                dp[i + 1][j + 1] = (dp[i + 1][j + 1] + dp[i][j]) % M
    # Somme de toutes les séquences complètes, pour tous les états de répétition
    return sum(dp[n]) % M

def loop(x, y):
    """
    Détecte si une configuration n'est pas autorisée selon les règles 
    combinatoires du problème (utilisé seulement pour K impair/patterns spéciaux).

    Args:
        x (int): nombre d'éléments consécutifs de parité différente.
        y (int): nombre d'éléments consécutifs de même parité.
    Returns:
        bool: True si la configuration est interdite, False sinon.
    """
    return (2 * x >= K + 1 and 2 * y >= K + 3)

if K % 2 == 0:
    # CAS K pair : Le problème se sépare en deux sous-parties indépendantes
    # Calcul sur chaque sous-partie puis on multiplie les résultats
    res1 = even(N // 2, K // 2)
    res2 = even((N + 1) // 2, K // 2)
    print(res1 * res2 % M)
else:
    # CAS K impair : Utilisation d'un DP à 3 dimensions 
    # dp[x][y][z] : nombre de façons de construire une séquence avec:
    # x éléments consécutifs de parité différente, 
    # y éléments de parité identique, 
    # et z = le maximum "potentiel" jusqu'où on peut allonger un bloc.
    dp0 = [[[0] * (L + 1) for _ in range(L + 1)] for _ in range(L + 1)]
    # Cas initial : aucune case placée, limite de bloc au max
    dp0[0][0][L] = 1

    for i in range(N):
        # Prépare DP de la prochaine étape
        dp1 = [[[0] * (L + 1) for _ in range(L + 1)] for _ in range(L + 1)]
        for x in range(L + 1):
            for y in range(L + 1):
                if loop(x, y):
                    # Ignore les patterns invalides selon la règle de loop
                    continue
                # Pour chaque z possible, où z > max(x, y)
                for z in range(max(x, y) + 1, L + 1):
                    if dp0[x][y][z] == 0:
                        # Pas de façon possible d'atteindre cet état, on saute
                        continue
                    # Cas où l'on ajoute un élément de parité différente
                    dp1[y][x + 1][z] = (dp1[y][x + 1][z] + dp0[x][y][z]) % M
                    # Cas où l'on ajoute un élément de même parité, mise à jour de z
                    # (1) Si le bloc actuel de même parité est plus long que l'autre, on garde z, sinon on remet z à L
                    if y > x:
                        zz = z
                    else:
                        zz = L
                    # (2) Si un motif spécial (le pattern "↖") est autorisé, on raffine zz
                    if 2 * y >= K + 3 and x > 0:
                        zz = min(zz, 1 + y - x + K // 2)
                    dp1[y][0][zz] = (dp1[y][0][zz] + dp0[x][y][z]) % M
        # Passage à l'étape suivante
        dp0 = dp1

    # Accumulation de toutes les configurations valides en respectant loop()
    ret = 0
    for x in range(L + 1):
        for y in range(L + 1):
            if loop(x, y):
                continue
            for z in range(max(x, y) + 1, L + 1):
                ret = (ret + dp0[x][y][z]) % M
    print(ret)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '"""
' (ID: 15611)
  → Token d'amorce (pas de prédiction)

Token 1: 'Ce' (ID: 24306)
  → Token d'amorce (pas de prédiction)

Token 2: ' script' (ID: 11713)
  → Token d'amorce (pas de prédiction)

Token 3: ' calc' (ID: 25691)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.05474324896931648
    2. ' ```' → logprob: -3.4297432899475098
    3. '```' → logprob: -4.92974328994751
    4. '_' → logprob: -5.92974328994751
    5. ' 
' → logprob: -6.80474328994751
    6. ' 

' → logprob: -6.80474328994751
    7. ' :' → logprob: -6.92974328994751
    8. '\' → logprob: -6.92974328994751
    9. ' `' → logprob: -7.05474328994751
    10. 's' → logprob: -7.17974328994751

Token 4: 'ule' (ID: 1601)
  Prédit: 'ule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ule' → logprob: -0.004063678905367851
    2. 'ul' → logprob: -5.629063606262207
    3. 'u' → logprob: -7.754063606262207
    4. 'cule' → logprob: -11.379063606262207
    5. 'ulé' → logprob: -11.629063606262207
    6. '```' → logprob: -12.504063606262207
    7. 'ula' → logprob: -13.379063606262207
    8. '\' → logprob: -13.379063606262207
    9. 'ulele' → logprob: -13.754063606262207
    10. 'ulte' → logprob: -13.754063606262207

Token 5: ' le' (ID: 505)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.017385227605700493
    2. 'r' → logprob: -4.767385005950928
    3. 's' → logprob: -5.767385005950928
    4. ' la' → logprob: -6.017385005950928
    5. ' l' → logprob: -6.767385005950928
    6. ' r' → logprob: -7.392385005950928
    7. '  ' → logprob: -7.767385005950928
    8. ' le' → logprob: -8.642385482788086
    9. ' ' → logprob: -9.017385482788086
    10. 'l' → logprob: -9.267385482788086

Token 6: ' nombre' (ID: 9733)
  Prédit: ' nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.12565627694129944
    2. ' facteur' → logprob: -3.3756563663482666
    3. ' montant' → logprob: -4.2506561279296875
    4. ' temps' → logprob: -4.2506561279296875
    5. ' rendement' → logprob: -4.7506561279296875
    6. ' résultat' → logprob: -4.8756561279296875
    7. ' ' → logprob: -5.1256561279296875
    8. ' espace' → logprob: -5.2506561279296875
    9. ' score' → logprob: -5.6256561279296875
    10. ' salaire' → logprob: -5.8756561279296875

Token 7: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.22140467166900635
    2. ' de' → logprob: -2.096404552459717
    3. 's' → logprob: -2.846404552459717
    4. ' s' → logprob: -4.346404552459717
    5. ' d' → logprob: -5.721404552459717
    6. '_' → logprob: -7.471404552459717
    7. '  ' → logprob: -8.346405029296875
    8. '(s' → logprob: -9.346405029296875
    9. '```' → logprob: -9.471405029296875
    10. ' ' → logprob: -9.721405029296875

Token 8: ' man' (ID: 873)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.009705453179776669
    2. 's' → logprob: -5.884705543518066
    3. ' caractères' → logprob: -5.884705543518066
    4. ' mots' → logprob: -6.634705543518066
    5. ' espaces' → logprob: -7.009705543518066
    6. ' s' → logprob: -8.259705543518066
    7. '_' → logprob: -8.759705543518066
    8. '  ' → logprob: -8.884705543518066
    9. ' jours' → logprob: -8.884705543518066
    10. '```' → logprob: -9.009705543518066

Token 9: 'ières' (ID: 44864)
  Prédit: 'ières'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ières' → logprob: -0.3446469306945801
    2. 'e' → logprob: -1.84464693069458
    3. 'u' → logprob: -2.96964693069458
    4. 'es' → logprob: -3.46964693069458
    5. '```' → logprob: -5.09464693069458
    6. 'd' → logprob: -5.21964693069458
    7. 'us' → logprob: -5.59464693069458
    8. 'ifest' → logprob: -5.71964693069458
    9. 'œ' → logprob: -5.84464693069458
    10. 'ière' → logprob: -5.84464693069458

Token 10: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.06763036549091339
    2. ' de' → logprob: -3.9426302909851074
    3. 's' → logprob: -4.067630290985107
    4. ' d' → logprob: -4.192630290985107
    5. 'de' → logprob: -4.942630290985107
    6. 'd' → logprob: -6.067630290985107
    7. '"""' → logprob: -6.192630290985107
    8. ' """' → logprob: -7.942630290985107
    9. '<|end|>' → logprob: -8.067630767822266
    10. 'space' → logprob: -8.192630767822266

Token 11: ' remplir' (ID: 113625)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.07382442057132721
    2. ' réaliser' → logprob: -4.323824405670166
    3. '```' → logprob: -4.573824405670166
    4. ' résoudre' → logprob: -5.198824405670166
    5. '"""' → logprob: -5.698824405670166
    6. 's' → logprob: -5.823824405670166
    7. ' s' → logprob: -5.948824405670166
    8. '  ' → logprob: -6.073824405670166
    9. ' faire' → logprob: -6.448824405670166
    10. '   ' → logprob: -6.573824405670166

Token 12: ' un' (ID: 537)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.004956104792654514
    2. ' d' → logprob: -6.754956245422363
    3. '"""' → logprob: -7.379956245422363
    4. 's' → logprob: -7.504956245422363
    5. '```' → logprob: -7.629956245422363
    6. '  ' → logprob: -7.754956245422363
    7. '_' → logprob: -8.129956245422363
    8. ' ' → logprob: -8.254956245422363
    9. ' un' → logprob: -8.504956245422363
    10. 'une' → logprob: -9.379956245422363

Token 13: ' tableau' (ID: 67053)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.33972182869911194
    2. ' espace' → logprob: -1.3397217988967896
    3. '  ' → logprob: -4.5897216796875
    4. ' tableau' → logprob: -5.5897216796875
    5. '"""' → logprob: -6.3397216796875
    6. '```' → logprob: -6.4647216796875
    7. ''espace' → logprob: -6.4647216796875
    8. 'es' → logprob: -7.0897216796875
    9. ' coffre' → logprob: -7.2147216796875
    10. ' espaces' → logprob: -7.5897216796875

Token 14: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.16778986155986786
    2. '.' → logprob: -3.042789936065674
    3. ' 
' → logprob: -3.917789936065674
    4. '_' → logprob: -4.542789936065674
    5. ' 

' → logprob: -4.917789936065674
    6. ',' → logprob: -5.042789936065674
    7. ' d' → logprob: -5.167789936065674
    8. '[' → logprob: -5.167789936065674
    9. '```' → logprob: -5.167789936065674
    10. 'e' → logprob: -5.542789936065674

Token 15: ' N' (ID: 478)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.01268045324832201
    2. '\n' → logprob: -5.887680530548096
    3. '\' → logprob: -6.137680530548096
    4. '[' → logprob: -7.137680530548096
    5. ' \' → logprob: -7.137680530548096
    6. '```' → logprob: -7.262680530548096
    7. 'a' → logprob: -7.387680530548096
    8. ' ```' → logprob: -7.512680530548096
    9. '"' → logprob: -7.887680530548096
    10. '_' → logprob: -8.137680053710938

Token 16: ' éléments' (ID: 57375)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.033074751496315
    2. '_' → logprob: -3.6580748558044434
    3. '-' → logprob: -6.533074855804443
    4. ' espaces' → logprob: -6.658074855804443
    5. ' ,' → logprob: -7.158074855804443
    6. '  ' → logprob: -7.908074855804443
    7. ',' → logprob: -8.033074378967285
    8. '  
' → logprob: -8.283074378967285
    9. '<|end|>' → logprob: -8.533074378967285
    10. 's' → logprob: -8.658074378967285

Token 17: ' avec' (ID: 3937)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.9008442163467407
    2. ' 
' → logprob: -2.150844097137451
    3. ' ' → logprob: -2.400844097137451
    4. ',' → logprob: -2.400844097137451
    5. '\' → logprob: -2.775844097137451
    6. '```' → logprob: -2.775844097137451
    7. '"""' → logprob: -3.525844097137451
    8. '_' → logprob: -3.775844097137451
    9. ':' → logprob: -4.025844097137451
    10. 'e' → logprob: -4.025844097137451

Token 18: ' certaines' (ID: 46662)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.4574177861213684
    2. ' ' → logprob: -1.0824177265167236
    3. ' deux' → logprob: -4.582417964935303
    4. '0' → logprob: -5.207417964935303
    5. '2' → logprob: -5.832417964935303
    6. 'des' → logprob: -6.207417964935303
    7. '```' → logprob: -6.457417964935303
    8. ' '' → logprob: -6.957417964935303
    9. '1' → logprob: -7.457417964935303
    10. ''' → logprob: -7.582417964935303

Token 19: ' contraintes' (ID: 167366)
  Prédit: ' contraintes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' contraintes' → logprob: -0.11375313997268677
    2. ' valeurs' → logprob: -3.363753080368042
    3. ' conditions' → logprob: -4.238753318786621
    4. ' ' → logprob: -4.238753318786621
    5. 'conditions' → logprob: -4.988753318786621
    6. ' restrictions' → logprob: -5.363753318786621
    7. 'val' → logprob: -5.863753318786621
    8. 'élé' → logprob: -5.863753318786621
    9. ' espaces' → logprob: -6.113753318786621
    10. 'constraints' → logprob: -6.363753318786621

Token 20: ' de' (ID: 334)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6498763561248779
    2. ':' → logprob: -1.774876356124878
    3. '#' → logprob: -2.774876356124878
    4. 'e' → logprob: -2.774876356124878
    5. '"""' → logprob: -3.149876356124878
    6. ',' → logprob: -3.274876356124878
    7. ' :' → logprob: -3.899876356124878
    8. ' ' → logprob: -4.274876594543457
    9. '_' → logprob: -4.399876594543457
    10. 's' → logprob: -4.774876594543457

Token 21: ' répét' (ID: 156936)
  Prédit: 'placement'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'placement' → logprob: -1.0572891235351562
    2. 'contin' → logprob: -1.6822891235351562
    3. ' rempl' → logprob: -1.9322891235351562
    4. ' couleurs' → logprob: -2.8072891235351562
    5. ' placement' → logprob: -3.4322891235351562
    6. 'composition' → logprob: -3.8072891235351562
    7. 'man' → logprob: -4.182289123535156
    8. ' couleur' → logprob: -4.182289123535156
    9. 's' → logprob: -4.307289123535156
    10. 'continu' → logprob: -4.432289123535156

Token 22: 'ition' (ID: 868)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.008099135011434555
    2. 'é' → logprob: -5.75809907913208
    3. 'e' → logprob: -6.38309907913208
    4. 's' → logprob: -6.63309907913208
    5. 'ation' → logprob: -7.50809907913208
    6. 'u' → logprob: -7.75809907913208
    7. '#' → logprob: -7.88309907913208
    8. ''' → logprob: -8.633099555969238
    9. 'es' → logprob: -9.633099555969238
    10. 'ations' → logprob: -9.883099555969238

Token 23: ',' (ID: 11)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5991330742835999
    2. '#' → logprob: -2.474133014678955
    3. ':' → logprob: -2.474133014678955
    4. '```' → logprob: -2.849133014678955
    5. '"""' → logprob: -2.849133014678955
    6. ',' → logprob: -3.099133014678955
    7. '_' → logprob: -4.099133014678955
    8. 's' → logprob: -4.099133014678955
    9. 'n' → logprob: -4.349133014678955
    10. '\' → logprob: -4.474133014678955

Token 24: ' modulo' (ID: 112372)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -1.3334416151046753
    2. ' ' → logprob: -1.4584416151046753
    3. ' en' → logprob: -1.5834416151046753
    4. 's' → logprob: -1.9584416151046753
    5. '"""' → logprob: -2.833441734313965
    6. ' """' → logprob: -3.708441734313965
    7. ',' → logprob: -3.833441734313965
    8. ' 
' → logprob: -4.708441734313965
    9. '```' → logprob: -4.708441734313965
    10. 'e' → logprob: -5.833441734313965

Token 25: ' M' (ID: 391)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.06695953011512756
    2. ' ' → logprob: -3.3169596195220947
    3. '32' → logprob: -5.066959381103516
    4. ' `' → logprob: -5.441959381103516
    5. ' ```' → logprob: -5.691959381103516
    6. 's' → logprob: -6.066959381103516
    7. '```' → logprob: -6.191959381103516
    8. '`' → logprob: -6.816959381103516
    9. '  ' → logprob: -7.316959381103516
    10. '1' → logprob: -7.566959381103516

Token 26: '.' (ID: 13)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -1.0114152431488037
    2. '#' → logprob: -1.7614152431488037
    3. '.' → logprob: -1.8864152431488037
    4. ':' → logprob: -2.0114152431488037
    5. '"""' → logprob: -3.2614152431488037
    6. 'n' → logprob: -3.7614152431488037
    7. '\' → logprob: -4.261415481567383
    8. '
' → logprob: -4.386415481567383
    9. 'a' → logprob: -4.386415481567383
    10. ',' → logprob: -4.511415481567383

Token 27: ' 
' (ID: 793)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.624642550945282
    2. 'd' → logprob: -0.999642550945282
    3. '#' → logprob: -3.1246426105499268
    4. 'i' → logprob: -3.9996426105499268
    5. '`' → logprob: -4.624642372131348
    6. ':' → logprob: -4.624642372131348
    7. '"""' → logprob: -5.249642372131348
    8. 'n' → logprob: -5.999642372131348
    9. '"""
' → logprob: -6.749642372131348
    10. 'import' → logprob: -6.749642372131348

Token 28: 'K' (ID: 42)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6053865551948547
    2. '"""' → logprob: -1.23038649559021
    3. '.' → logprob: -3.10538649559021
    4. '"""
' → logprob: -3.85538649559021
    5. 'i' → logprob: -3.98038649559021
    6. '```' → logprob: -4.480386734008789
    7. 'n' → logprob: -4.730386734008789
    8. 'd' → logprob: -4.730386734008789
    9. '\n' → logprob: -5.230386734008789
    10. ':' → logprob: -5.480386734008789

Token 29: ' correspond' (ID: 11095)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.35361745953559875
    2. '=' → logprob: -1.4786174297332764
    3. ',' → logprob: -3.4786174297332764
    4. '<|end|>' → logprob: -4.3536176681518555
    5. ' ' → logprob: -4.9786176681518555
    6. ')' → logprob: -4.9786176681518555
    7. ' ,' → logprob: -5.3536176681518555
    8. '.' → logprob: -6.4786176681518555
    9. '[' → logprob: -6.8536176681518555
    10. '_' → logprob: -7.3536176681518555

Token 30: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.0961933359503746
    2. ' au' → logprob: -2.471193313598633
    3. 'à' → logprob: -5.471193313598633
    4. 'au' → logprob: -6.596193313598633
    5. ' a' → logprob: -7.096193313598633
    6. ' ' → logprob: -7.846193313598633
    7. ' aux' → logprob: -8.471193313598633
    8. ''à' → logprob: -9.096193313598633
    9. 'a' → logprob: -10.471193313598633
    10. '  ' → logprob: -10.846193313598633

Token 31: ' la' (ID: 557)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.9136948585510254
    2. 'l' → logprob: -1.7886948585510254
    3. ' ' → logprob: -2.0386948585510254
    4. ' la' → logprob: -2.1636948585510254
    5. ' nombre' → logprob: -3.1636948585510254
    6. '<|end|>' → logprob: -3.2886948585510254
    7. '"""' → logprob: -3.6636948585510254
    8. 'nombre' → logprob: -3.9136948585510254
    9. ' """' → logprob: -4.163694858551025
    10. ' ' → logprob: -4.913694858551025

Token 32: ' taille' (ID: 41644)
  Prédit: ' longueur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' longueur' → logprob: -0.7406715154647827
    2. ' taille' → logprob: -1.6156715154647827
    3. 'tail' → logprob: -2.6156716346740723
    4. ' quantité' → logprob: -2.7406716346740723
    5. 'nombre' → logprob: -3.2406716346740723
    6. ' nombre' → logprob: -3.4906716346740723
    7. 's' → logprob: -3.9906716346740723
    8. ' valeur' → logprob: -4.365671634674072
    9. ' ' → logprob: -4.615671634674072
    10. 'long' → logprob: -4.740671634674072

Token 33: ' maximale' (ID: 76380)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3612879812717438
    2. '_' → logprob: -1.9862879514694214
    3. ' de' → logprob: -2.111288070678711
    4. '<|end|>' → logprob: -3.986288070678711
    5. 's' → logprob: -4.611288070678711
    6. ' d' → logprob: -4.986288070678711
    7. ' des' → logprob: -6.611288070678711
    8. ' _' → logprob: -7.111288070678711
    9. 'u' → logprob: -7.486288070678711
    10. ' du' → logprob: -7.611288070678711

Token 34: ' des' (ID: 731)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.21330626308918
    2. '_' → logprob: -2.338306188583374
    3. ' de' → logprob: -2.713306188583374
    4. '<|end|>' → logprob: -4.588306427001953
    5. ' d' → logprob: -5.838306427001953
    6. ',' → logprob: -5.838306427001953
    7. ' des' → logprob: -6.338306427001953
    8. 's' → logprob: -6.588306427001953
    9. '.' → logprob: -6.588306427001953
    10. ' maximale' → logprob: -6.838306427001953

Token 35: ' blocs' (ID: 182599)
  Prédit: ' sé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sé' → logprob: -0.7920778393745422
    2. ' blocs' → logprob: -1.2920777797698975
    3. ' groupes' → logprob: -2.4170777797698975
    4. ' sous' → logprob: -3.0420777797698975
    5. ' répét' → logprob: -3.6670777797698975
    6. ' segments' → logprob: -3.7920777797698975
    7. ' sequences' → logprob: -3.7920777797698975
    8. ' motifs' → logprob: -4.417078018188477
    9. ' ' → logprob: -4.792078018188477
    10. ' bloc' → logprob: -4.792078018188477

Token 36: ' cons' (ID: 1473)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -1.174812912940979
    2. ',' → logprob: -1.299812912940979
    3. '```' → logprob: -2.4248127937316895
    4. '#' → logprob: -3.0498127937316895
    5. '\' → logprob: -3.2998127937316895
    6. '
' → logprob: -3.2998127937316895
    7. ':' → logprob: -3.2998127937316895
    8. '\n' → logprob: -3.6748127937316895
    9. 'a' → logprob: -3.9248127937316895
    10. ' 
' → logprob: -4.2998127937316895

Token 37: 'écut' (ID: 96392)
  Prédit: 'écut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'écut' → logprob: -0.0007005225634202361
    2. 'ecut' → logprob: -8.125700950622559
    3. 'é' → logprob: -8.250700950622559
    4. 'éc' → logprob: -9.500700950622559
    5. 'e' → logprob: -10.625700950622559
    6. 'ec' → logprob: -11.625700950622559
    7. 'truct' → logprob: -11.750700950622559
    8. '```' → logprob: -11.750700950622559
    9. 'écution' → logprob: -12.500700950622559
    10. 'cut' → logprob: -12.625700950622559

Token 38: 'ifs' (ID: 14119)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.08114708960056305
    2. 'u' → logprob: -3.2061471939086914
    3. 'a' → logprob: -4.456147193908691
    4. '_' → logprob: -4.706147193908691
    5. 'ents' → logprob: -4.706147193908691
    6. ' e' → logprob: -6.206147193908691
    7. ' ' → logprob: -6.331147193908691
    8. 'es' → logprob: -7.581147193908691
    9. '```' → logprob: -7.581147193908691
    10. 's' → logprob: -8.206147193908691

Token 39: ' admiss' (ID: 177892)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.3517873287200928
    2. 'n' → logprob: -1.3517873287200928
    3. 'i' → logprob: -2.7267873287200928
    4. '_' → logprob: -2.7267873287200928
    5. '.' → logprob: -2.9767873287200928
    6. '#' → logprob: -2.9767873287200928
    7. ':' → logprob: -2.9767873287200928
    8. 'a' → logprob: -3.4767873287200928
    9. '```' → logprob: -3.4767873287200928
    10. '"""' → logprob: -3.7267873287200928

Token 40: 'ibles' (ID: 12234)
  Prédit: 'écut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'écut' → logprob: -0.5288025736808777
    2. 't' → logprob: -1.2788026332855225
    3. 'é' → logprob: -3.5288026332855225
    4. 'és' → logprob: -4.028802394866943
    5. 'ut' → logprob: -4.153802394866943
    6. 'té' → logprob: -4.278802394866943
    7. 'étés' → logprob: -4.528802394866943
    8. 'érés' → logprob: -4.528802394866943
    9. 'u' → logprob: -5.778802394866943
    10. 'ecut' → logprob: -5.903802394866943

Token 41: ' selon' (ID: 27571)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.5062057971954346
    2. ':' → logprob: -1.6312057971954346
    3. ',' → logprob: -1.8812057971954346
    4. 'n' → logprob: -2.0062057971954346
    5. '```' → logprob: -2.6312057971954346
    6. '.' → logprob: -3.1312057971954346
    7. 'a' → logprob: -3.3812057971954346
    8. ' 
' → logprob: -3.8812057971954346
    9. '=' → logprob: -4.1312055587768555
    10. 'i' → logprob: -4.3812055587768555

Token 42: ' une' (ID: 2463)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.26465702056884766
    2. ' l' → logprob: -2.3896570205688477
    3. ' un' → logprob: -3.5146570205688477
    4. ' la' → logprob: -3.6396570205688477
    5. ' une' → logprob: -4.139657020568848
    6. ' ' → logprob: -4.639657020568848
    7. '  ' → logprob: -4.764657020568848
    8. 'un' → logprob: -4.889657020568848
    9. ' le' → logprob: -4.889657020568848
    10. ' les' → logprob: -5.139657020568848

Token 43: ' règle' (ID: 115826)
  Prédit: ' contr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' contr' → logprob: -0.6579968333244324
    2. ' certaine' → logprob: -1.7829968929290771
    3. ' ' → logprob: -3.032996892929077
    4. 'certain' → logprob: -3.032996892929077
    5. ' règle' → logprob: -3.157996892929077
    6. ' certain' → logprob: -3.532996892929077
    7. ' condition' → logprob: -3.907996892929077
    8. ' logique' → logprob: -3.907996892929077
    9. ' cons' → logprob: -4.157996654510498
    10. ' espace' → logprob: -4.282996654510498

Token 44: ' par' (ID: 686)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.9404445290565491
    2. ':' → logprob: -1.0654444694519043
    3. ',' → logprob: -2.1904444694519043
    4. '```' → logprob: -3.3154444694519043
    5. '#' → logprob: -3.5654444694519043
    6. '_' → logprob: -4.440444469451904
    7. '"""' → logprob: -4.565444469451904
    8. ' :' → logprob: -4.690444469451904
    9. 'n' → logprob: -4.815444469451904
    10. '
' → logprob: -5.065444469451904

Token 45: 'ité' (ID: 3761)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -2.1289286613464355
    2. 'ligne' → logprob: -2.1289286613464355
    3. 'r' → logprob: -2.7539286613464355
    4. 'faite' → logprob: -3.0039286613464355
    5. 'bloc' → logprob: -3.0039286613464355
    6. 'rapport' → logprob: -3.1289286613464355
    7. 'bl' → logprob: -3.2539286613464355
    8. 'fait' → logprob: -3.5039286613464355
    9. ' ' → logprob: -3.5039286613464355
    10. '```' → logprob: -3.5039286613464355

Token 46: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.5806266069412231
    2. '.' → logprob: -1.7056266069412231
    3. ':' → logprob: -2.0806264877319336
    4. '#' → logprob: -2.3306264877319336
    5. '```' → logprob: -2.3306264877319336
    6. '
' → logprob: -2.4556264877319336
    7. '\n' → logprob: -3.4556264877319336
    8. ')' → logprob: -3.7056264877319336
    9. '\' → logprob: -3.8306264877319336
    10. ' 
' → logprob: -4.205626487731934

Token 47: ' avec' (ID: 3937)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.4264468848705292
    2. ',' → logprob: -1.9264469146728516
    3. '"""' → logprob: -2.8014469146728516
    4. ' ' → logprob: -3.5514469146728516
    5. '_' → logprob: -3.9264469146728516
    6. ':' → logprob: -4.301446914672852
    7. ' 
' → logprob: -4.551446914672852
    8. ' """' → logprob: -4.676446914672852
    9. '```' → logprob: -4.801446914672852
    10. ')' → logprob: -4.926446914672852

Token 48: ' un' (ID: 537)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1928042322397232
    2. ' la' → logprob: -2.8178043365478516
    3. ' ' → logprob: -3.6928043365478516
    4. ' un' → logprob: -4.192804336547852
    5. ' le' → logprob: -4.192804336547852
    6. ' une' → logprob: -4.317804336547852
    7. ' l' → logprob: -4.442804336547852
    8. ' K' → logprob: -4.942804336547852
    9. 'le' → logprob: -5.567804336547852
    10. ' des' → logprob: -5.567804336547852

Token 49: ' traitement' (ID: 42434)
  Prédit: ' espace'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' espace' → logprob: -0.0672089159488678
    2. 'es' → logprob: -3.192209005355835
    3. ' ' → logprob: -4.817208766937256
    4. 'esp' → logprob: -5.567208766937256
    5. ' espaces' → logprob: -6.067208766937256
    6. ' maximum' → logprob: -6.567208766937256
    7. ' esp' → logprob: -6.942208766937256
    8. ' facteur' → logprob: -7.067208766937256
    9. '_' → logprob: -7.317208766937256
    10. 'e' → logprob: -7.942208766937256

Token 50: ' spécial' (ID: 40397)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -1.0037968158721924
    2. ' ' → logprob: -1.2537968158721924
    3. 's' → logprob: -1.7537968158721924
    4. ' de' → logprob: -2.3787968158721924
    5. ' d' → logprob: -4.378796577453613
    6. '<|end|>' → logprob: -4.878796577453613
    7. ' du' → logprob: -5.003796577453613
    8. ' supplémentaire' → logprob: -5.253796577453613
    9. '  ' → logprob: -5.378796577453613
    10. ' particulier' → logprob: -5.628796577453613

Token 51: ' si' (ID: 1784)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.3305971324443817
    2. ':' → logprob: -2.330597162246704
    3. ',' → logprob: -3.080597162246704
    4. '```' → logprob: -3.330597162246704
    5. ' ' → logprob: -4.205596923828125
    6. '#' → logprob: -4.330596923828125
    7. 's' → logprob: -4.455596923828125
    8. ' :' → logprob: -4.455596923828125
    9. '<|end|>' → logprob: -4.455596923828125
    10. '_' → logprob: -4.580596923828125

Token 52: ' K' (ID: 658)
  Prédit: ' K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' K' → logprob: -0.4129371643066406
    2. ' la' → logprob: -2.4129371643066406
    3. ' l' → logprob: -2.7879371643066406
    4. ' le' → logprob: -2.7879371643066406
    5. 'K' → logprob: -3.4129371643066406
    6. 'l' → logprob: -4.162937164306641
    7. ' ' → logprob: -4.412937164306641
    8. ' i' → logprob: -4.662937164306641
    9. 'le' → logprob: -5.037937164306641
    10. ' k' → logprob: -5.037937164306641

Token 53: ' est' (ID: 893)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.4130691289901733
    2. ' >' → logprob: -1.4130691289901733
    3. '>' → logprob: -1.6630691289901733
    4. ' <' → logprob: -1.9130691289901733
    5. '<' → logprob: -2.413069248199463
    6. ' =' → logprob: -3.788069248199463
    7. ' <=' → logprob: -4.163069248199463
    8. ' ' → logprob: -4.413069248199463
    9. '<=' → logprob: -4.913069248199463
    10. ' ==' → logprob: -5.163069248199463

Token 54: ' pair' (ID: 10610)
  Prédit: ' pair'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pair' → logprob: -1.401898741722107
    2. ' égal' → logprob: -1.526898741722107
    3. '1' → logprob: -1.776898741722107
    4. '0' → logprob: -2.0268988609313965
    5. ' ' → logprob: -2.2768988609313965
    6. 'pair' → logprob: -2.5268988609313965
    7. ' impair' → logprob: -3.7768988609313965
    8. ' nul' → logprob: -4.5268988609313965
    9. 'égal' → logprob: -6.0268988609313965
    10. ' paire' → logprob: -6.0268988609313965

Token 55: ' ou' (ID: 2031)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.1478525400161743
    2. '```' → logprob: -1.2728525400161743
    3. '#' → logprob: -2.5228524208068848
    4. ',' → logprob: -3.2728524208068848
    5. '\n' → logprob: -3.2728524208068848
    6. '\' → logprob: -3.3978524208068848
    7. '.' → logprob: -3.5228524208068848
    8. ')' → logprob: -3.6478524208068848
    9. '[' → logprob: -3.8978524208068848
    10. '
' → logprob: -4.022852420806885

Token 56: ' impair' (ID: 64113)
  Prédit: ' impair'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' impair' → logprob: -0.029131345450878143
    2. ' imp' → logprob: -5.0291314125061035
    3. ' ' → logprob: -5.1541314125061035
    4. ' non' → logprob: -5.7791314125061035
    5. 'imp' → logprob: -5.7791314125061035
    6. 'im' → logprob: -6.4041314125061035
    7. '0' → logprob: -6.5291314125061035
    8. ' égal' → logprob: -6.6541314125061035
    9. '1' → logprob: -7.0291314125061035
    10. ' pair' → logprob: -7.1541314125061035

Token 57: '.

' (ID: 364)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.1636193990707397
    2. ':' → logprob: -1.6636193990707397
    3. 'n' → logprob: -2.4136195182800293
    4. ',' → logprob: -2.5386195182800293
    5. '.' → logprob: -2.6636195182800293
    6. 'i' → logprob: -3.5386195182800293
    7. 'd' → logprob: -3.6636195182800293
    8. '```' → logprob: -3.6636195182800293
    9. ' 
' → logprob: -3.7886195182800293
    10. '[' → logprob: -3.7886195182800293

Token 58: 'Entr' (ID: 46869)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.2714129090309143
    2. '```' → logprob: -2.7714128494262695
    3. 'n' → logprob: -3.3964128494262695
    4. 'i' → logprob: -3.6464128494262695
    5. '"""' → logprob: -3.7714128494262695
    6. 'a' → logprob: -4.1464128494262695
    7. 'import' → logprob: -4.1464128494262695
    8. 'd' → logprob: -4.2714128494262695
    9. '\n' → logprob: -5.0214128494262695
    10. '`' → logprob: -5.1464128494262695

Token 59: 'ée' (ID: 2894)
  Prédit: 'rée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rée' → logprob: -0.44385889172554016
    2. 'r' → logprob: -1.3188588619232178
    3. 'er' → logprob: -2.9438588619232178
    4. 'ée' → logprob: -3.4438588619232178
    5. 'ré' → logprob: -5.443859100341797
    6. 'é' → logprob: -6.943859100341797
    7. 'êt' → logprob: -8.693859100341797
    8. 'tr' → logprob: -8.693859100341797
    9. '```' → logprob: -9.068859100341797
    10. 't' → logprob: -9.443859100341797

Token 60: ' :' (ID: 712)
  Prédit: ' :'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' :' → logprob: -0.16447442770004272
    2. 's' → logprob: -2.1644744873046875
    3. ':' → logprob: -3.4144744873046875
    4. '```' → logprob: -6.6644744873046875
    5. '\n' → logprob: -7.2894744873046875
    6. '"""' → logprob: -7.5394744873046875
    7. '(s' → logprob: -7.5394744873046875
    8. ' s' → logprob: -8.789474487304688
    9. ' :
' → logprob: -9.164474487304688
    10. ' ' → logprob: -9.164474487304688

Token 61: ' 
' (ID: 793)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -1.1248223781585693
    2. 'n' → logprob: -1.8748223781585693
    3. '"""' → logprob: -1.8748223781585693
    4. 's' → logprob: -1.8748223781585693
    5. ' """' → logprob: -2.6248223781585693
    6. ' ```' → logprob: -3.3748223781585693
    7. ' N' → logprob: -3.4998223781585693
    8. ' ' → logprob: -4.124822616577148
    9. 'N' → logprob: -4.499822616577148
    10. ' "' → logprob: -4.999822616577148

Token 62: '   ' (ID: 271)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.2688826024532318
    2. '```' → logprob: -3.0188825130462646
    3. 'n' → logprob: -3.2688825130462646
    4. ' """' → logprob: -3.3938825130462646
    5. '4' → logprob: -4.018882751464844
    6. 'int' → logprob: -4.268882751464844
    7. 'N' → logprob: -4.268882751464844
    8. '"' → logprob: -4.893882751464844
    9. ' ' → logprob: -5.018882751464844
    10. '1' → logprob: -5.143882751464844

Token 63: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' (adapté à ' N') → logprob: -0.5608904361724854
    2. 'n' → logprob: -1.1858904361724854
    3. 'int' → logprob: -2.3108904361724854
    4. ' N' → logprob: -4.685890197753906
    5. '"""' → logprob: -5.560890197753906
    6. '```' → logprob: -5.810890197753906
    7. ' n' → logprob: -7.060890197753906
    8. 'K' → logprob: -7.060890197753906
    9. '`' → logprob: -7.060890197753906
    10. '"' → logprob: -7.560890197753906

Token 64: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.018178390339016914
    2. ' ,' → logprob: -4.143178462982178
    3. ' =' → logprob: -6.518178462982178
    4. ' ' → logprob: -8.14317798614502
    5. '<|end|>' → logprob: -9.01817798614502
    6. '=' → logprob: -9.26817798614502
    7. '   ' → logprob: -9.76817798614502
    8. '  ' → logprob: -11.14317798614502
    9. ',K' → logprob: -11.26817798614502
    10. ')' → logprob: -11.51817798614502

Token 65: ' K' (ID: 658)
  Prédit: ' K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' K' → logprob: -0.33107203245162964
    2. 'K' → logprob: -1.5810720920562744
    3. ' M' → logprob: -3.0810720920562744
    4. ' ' → logprob: -4.081071853637695
    5. 'M' → logprob: -4.456071853637695
    6. '  ' → logprob: -7.331071853637695
    7. '<|end|>' → logprob: -7.831071853637695
    8. ' ,' → logprob: -9.206071853637695
    9. 'space' → logprob: -9.331071853637695
    10. ' =' → logprob: -9.331071853637695

Token 66: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3992708921432495
    2. ' =' → logprob: -1.1492708921432495
    3. '=' → logprob: -4.899271011352539
    4. ' ' → logprob: -5.899271011352539
    5. ' ,' → logprob: -7.399271011352539
    6. '<|end|>' → logprob: -7.649271011352539
    7. '```' → logprob: -8.524271011352539
    8. '   ' → logprob: -9.024271011352539
    9. ',M' → logprob: -9.399271011352539
    10. ':' → logprob: -9.524271011352539

Token 67: ' M' (ID: 391)
  Prédit: ' M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' M' → logprob: -0.012261219322681427
    2. 'M' → logprob: -4.762261390686035
    3. ' ' → logprob: -5.637261390686035
    4. ',' → logprob: -10.512261390686035
    5. ' ,' → logprob: -11.137261390686035
    6. '  ' → logprob: -11.387261390686035
    7. ' ' → logprob: -12.262261390686035
    8. ' and' → logprob: -12.762261390686035
    9. '```' → logprob: -12.887261390686035
    10. ' 
' → logprob: -13.262261390686035

Token 68: ' :' (ID: 712)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.686374306678772
    2. '\n' → logprob: -0.811374306678772
    3. '```' → logprob: -3.6863741874694824
    4. '\' → logprob: -4.561374187469482
    5. 'n' → logprob: -5.561374187469482
    6. ' 
' → logprob: -5.936374187469482
    7. ':' → logprob: -6.311374187469482
    8. ' =' → logprob: -6.561374187469482
    9. '  
' → logprob: -6.686374187469482
    10. ',' → logprob: -7.186374187469482

Token 69: ' trois' (ID: 25564)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'map' → logprob: -1.3662062883377075
    2. ' map' → logprob: -1.3662062883377075
    3. 'input' → logprob: -1.6162062883377075
    4. ' ' → logprob: -1.8662062883377075
    5. ' input' → logprob: -2.741206169128418
    6. 'int' → logprob: -3.741206169128418
    7. ' int' → logprob: -5.116206169128418
    8. ' n' → logprob: -5.116206169128418
    9. '```' → logprob: -5.116206169128418
    10. ' =' → logprob: -5.241206169128418

Token 70: ' ent' (ID: 1121)
  Prédit: ' ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ent' → logprob: -0.13333375751972198
    2. ' integers' → logprob: -2.508333683013916
    3. 'ent' → logprob: -3.758333683013916
    4. ' ' → logprob: -5.508333683013916
    5. ' entier' → logprob: -5.508333683013916
    6. '<|end|>' → logprob: -5.883333683013916
    7. ' int' → logprob: -6.633333683013916
    8. 'int' → logprob: -6.758333683013916
    9. '_ent' → logprob: -6.883333683013916
    10. ' nombres' → logprob: -7.008333683013916

Token 71: 'iers' (ID: 11012)
  Prédit: 'ières'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ières' → logprob: -0.6302068829536438
    2. 'iers' → logprob: -1.005206823348999
    3. 'r' → logprob: -2.380206823348999
    4. 'i' → logprob: -5.130207061767578
    5. '```' → logprob: -7.630207061767578
    6. 'rees' → logprob: -8.005207061767578
    7. 't' → logprob: -8.630207061767578
    8. 'ires' → logprob: -8.630207061767578
    9. 'rée' → logprob: -8.755207061767578
    10. 'ier' → logprob: -8.880207061767578

Token 72: ' lus' (ID: 54762)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.32604655623435974
    2. '
' → logprob: -1.7010465860366821
    3. '```' → logprob: -2.8260464668273926
    4. '\' → logprob: -4.201046466827393
    5. 'def' → logprob: -5.326046466827393
    6. 'import' → logprob: -5.826046466827393
    7. '
' → logprob: -5.951046466827393
    8. 'n' → logprob: -6.076046466827393
    9. '

' → logprob: -6.451046466827393
    10. ',' → logprob: -6.576046466827393

Token 73: ' sur' (ID: 1512)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7409307360649109
    2. ' =' → logprob: -1.8659307956695557
    3. '\n' → logprob: -1.9909307956695557
    4. ' 
' → logprob: -3.1159307956695557
    5. '<|end|>' → logprob: -3.4909307956695557
    6. ' ' → logprob: -3.6159307956695557
    7. ',' → logprob: -3.8659307956695557
    8. 'n' → logprob: -3.9909307956695557
    9. 'import' → logprob: -3.9909307956695557
    10. '

' → logprob: -4.990930557250977

Token 74: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.21467448770999908
    2. 'l' → logprob: -2.964674472808838
    3. ' la' → logprob: -2.964674472808838
    4. ' input' → logprob: -3.339674472808838
    5. 'une' → logprob: -3.339674472808838
    6. ' ' → logprob: -5.089674472808838
    7. ' l' → logprob: -5.214674472808838
    8. 'input' → logprob: -5.589674472808838
    9. 'la' → logprob: -5.964674472808838
    10. ''une' → logprob: -8.464674949645996

Token 75: ' même' (ID: 9679)
  Prédit: ' seule'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' seule' → logprob: -0.43118974566459656
    2. ' ligne' → logprob: -1.806189775466919
    3. 'ligne' → logprob: -2.681189775466919
    4. ' même' → logprob: -2.931189775466919
    5. ' ' → logprob: -3.056189775466919
    6. ' unique' → logprob: -5.18118953704834
    7. 'l' → logprob: -5.30618953704834
    8. 'm' → logprob: -6.18118953704834
    9. ' seul' → logprob: -6.55618953704834
    10. 'unique' → logprob: -8.18118953704834

Token 76: ' ligne' (ID: 19583)
  Prédit: ' ligne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ligne' → logprob: -0.053569719195365906
    2. 'ligne' → logprob: -3.428569793701172
    3. 'l' → logprob: -4.553569793701172
    4. ' ' → logprob: -5.178569793701172
    5. ' line' → logprob: -5.803569793701172
    6. ' l' → logprob: -8.803569793701172
    7. 'line' → logprob: -8.803569793701172
    8. ' lign' → logprob: -9.928569793701172
    9. ' ' → logprob: -10.178569793701172
    10. 'li' → logprob: -10.553569793701172

Token 77: '.
' (ID: 558)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2164146602153778
    2. '\n' → logprob: -2.3414146900177
    3. '```' → logprob: -2.7164146900177
    4. 'n' → logprob: -4.466414451599121
    5. 'import' → logprob: -5.341414451599121
    6. ' 
' → logprob: -5.841414451599121
    7. '

' → logprob: -5.966414451599121
    8. '\' → logprob: -6.341414451599121
    9. '
' → logprob: -6.341414451599121
    10. ':' → logprob: -6.841414451599121

Token 78: 'Sort' (ID: 11602)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6408378481864929
    2. '\n' → logprob: -1.1408379077911377
    3. '```' → logprob: -2.2658379077911377
    4. '
' → logprob: -3.7658379077911377
    5. '\' → logprob: -4.390837669372559
    6. '"""
' → logprob: -5.140837669372559
    7. 'import' → logprob: -6.265837669372559
    8. ' 
' → logprob: -6.640837669372559
    9. 'a' → logprob: -6.765837669372559
    10. '``' → logprob: -6.890837669372559

Token 79: 'ie' (ID: 396)
  Prédit: 'ie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ie' → logprob: -0.056908708065748215
    2. 'i' → logprob: -3.30690860748291
    3. 'e' → logprob: -5.05690860748291
    4. 'ée' → logprob: -5.18190860748291
    5. 'ies' → logprob: -6.05690860748291
    6. 'r' → logprob: -6.93190860748291
    7. 'ir' → logprob: -6.93190860748291
    8. 'rie' → logprob: -7.43190860748291
    9. ' ie' → logprob: -7.68190860748291
    10. 'ié' → logprob: -8.18190860748291

Token 80: ' :' (ID: 712)
  Prédit: ' :'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' :' → logprob: -0.006240534130483866
    2. ':' → logprob: -5.131240367889404
    3. 's' → logprob: -8.881240844726562
    4. '"""' → logprob: -10.131240844726562
    5. ' :
' → logprob: -10.881240844726562
    6. ' """' → logprob: -11.006240844726562
    7. ' ' → logprob: -11.131240844726562
    8. '.' → logprob: -11.131240844726562
    9. '```' → logprob: -11.756240844726562
    10. ' =' → logprob: -12.006240844726562

Token 81: ' 
' (ID: 793)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.34565550088882446
    2. '"' → logprob: -2.5956554412841797
    3. '\n' → logprob: -2.7206554412841797
    4. ' \' → logprob: -3.0956554412841797
    5. ' 
' → logprob: -3.5956554412841797
    6. ' "' → logprob: -4.84565544128418
    7. '1' → logprob: -5.09565544128418
    8. 'print' → logprob: -5.22065544128418
    9. ''' → logprob: -5.34565544128418
    10. '\' → logprob: -5.47065544128418

Token 82: '   ' (ID: 271)
  Prédit: ' Le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Le' → logprob: -0.8901272416114807
    2. 'Le' → logprob: -1.140127182006836
    3. ' le' → logprob: -1.765127182006836
    4. ' Nombre' → logprob: -4.140127182006836
    5. 'Nombre' → logprob: -4.265127182006836
    6. ' ' → logprob: -4.515127182006836
    7. '"""' → logprob: -4.640127182006836
    8. '"' → logprob: -4.640127182006836
    9. 'L' → logprob: -4.890127182006836
    10. ' L' → logprob: -5.515127182006836

Token 83: ' Un' (ID: 1367)
  Prédit: ' Le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Le' → logprob: -0.9519987106323242
    2. 'Le' → logprob: -0.9519987106323242
    3. ' le' → logprob: -1.7019987106323242
    4. 'Nombre' → logprob: -4.076998710632324
    5. ' Nombre' → logprob: -5.451998710632324
    6. 'L' → logprob: -5.701998710632324
    7. '"' → logprob: -5.826998710632324
    8. 'le' → logprob: -5.951998710632324
    9. '1' → logprob: -6.201998710632324
    10. ' L' → logprob: -6.326998710632324

Token 84: ' entier' (ID: 80473)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.11648524552583694
    2. ' entier' → logprob: -2.241485357284546
    3. ' e' → logprob: -6.241485118865967
    4. ' nombre' → logprob: -6.616485118865967
    5. ' entière' → logprob: -8.741485595703125
    6. 'ent' → logprob: -9.741485595703125
    7. ' ' → logprob: -10.491485595703125
    8. ' ent' → logprob: -10.741485595703125
    9. ' résultat' → logprob: -10.866485595703125
    10. 'nombre' → logprob: -11.366485595703125

Token 85: ' représentant' (ID: 136122)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -1.174748420715332
    2. '\n' → logprob: -1.299748420715332
    3. 'import' → logprob: -2.049748420715332
    4. 'n' → logprob: -2.799748420715332
    5. '
' → logprob: -2.799748420715332
    6. '\' → logprob: -3.174748420715332
    7. 'def' → logprob: -3.549748420715332
    8. ' 
' → logprob: -3.549748420715332
    9. ':' → logprob: -4.799748420715332
    10. '#' → logprob: -5.049748420715332

Token 86: ' la' (ID: 557)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.07656966149806976
    2. ' ' → logprob: -2.9515695571899414
    3. ' la' → logprob: -3.9515695571899414
    4. '  ' → logprob: -7.326569557189941
    5. 'le' → logprob: -7.576569557189941
    6. ' nombre' → logprob: -7.951569557189941
    7. ' l' → logprob: -8.451569557189941
    8. '   ' → logprob: -8.576569557189941
    9. 'l' → logprob: -9.576569557189941
    10. ' modulo' → logprob: -9.701569557189941

Token 87: ' solution' (ID: 7578)
  Prédit: ' nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.004104046616703272
    2. 's' → logprob: -5.754104137420654
    3. 'nombre' → logprob: -7.504104137420654
    4. ' ' → logprob: -8.629103660583496
    5. ' résultat' → logprob: -9.379103660583496
    6. 'r' → logprob: -10.879103660583496
    7. ' nombres' → logprob: -11.004103660583496
    8. ' nombr' → logprob: -11.379103660583496
    9. '   ' → logprob: -11.629103660583496
    10. ' nom' → logprob: -11.629103660583496

Token 88: ' modulo' (ID: 112372)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7220757007598877
    2. '```' → logprob: -1.0970757007598877
    3. '
' → logprob: -2.4720757007598877
    4. 'import' → logprob: -3.4720757007598877
    5. '#' → logprob: -3.7220757007598877
    6. 'd' → logprob: -4.597075462341309
    7. ' 
' → logprob: -5.347075462341309
    8. '\n' → logprob: -5.472075462341309
    9. '"""
' → logprob: -5.597075462341309
    10. 'i' → logprob: -5.847075462341309

Token 89: ' M' (ID: 391)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.050710760056972504
    2. ' M' → logprob: -3.175710678100586
    3. ' (' → logprob: -6.050710678100586
    4. '1' → logprob: -7.550710678100586
    5. '10' → logprob: -7.550710678100586
    6. '0' → logprob: -7.925710678100586
    7. '```' → logprob: -7.925710678100586
    8. 'M' → logprob: -8.050710678100586
    9. ' ```' → logprob: -8.175710678100586
    10. '"' → logprob: -8.175710678100586

Token 90: '.
' (ID: 558)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.4801536798477173
    2. 'n' → logprob: -1.3551536798477173
    3. 'import' → logprob: -2.6051535606384277
    4. '#' → logprob: -4.355153560638428
    5. ' 
' → logprob: -5.105153560638428
    6. '
' → logprob: -5.230153560638428
    7. '``' → logprob: -5.605153560638428
    8. ':' → logprob: -5.605153560638428
    9. 'a' → logprob: -5.980153560638428
    10. 'def' → logprob: -5.980153560638428

Token 91: '"""

' (ID: 34508)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.16113905608654022
    2. '
' → logprob: -2.6611390113830566
    3. 'import' → logprob: -3.4111390113830566
    4. 'n' → logprob: -3.7861390113830566
    5. '\n' → logprob: -4.786139011383057
    6. 'a' → logprob: -5.786139011383057
    7. '``' → logprob: -5.911139011383057
    8. '#' → logprob: -6.036139011383057
    9. 'def' → logprob: -6.161139011383057
    10. ' 
' → logprob: -6.786139011383057

Token 92: '#' (ID: 2)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4136676490306854
    2. 'd' → logprob: -2.163667678833008
    3. '#' → logprob: -2.413667678833008
    4. 'i' → logprob: -3.038667678833008
    5. '```' → logprob: -3.163667678833008
    6. 'import' → logprob: -3.413667678833008
    7. 'f' → logprob: -5.663667678833008
    8. 'a' → logprob: -6.413667678833008
    9. 'def' → logprob: -6.538667678833008
    10. 'from' → logprob: -6.788667678833008

Token 93: ' Lecture' (ID: 106534)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.696864128112793
    2. 'import' → logprob: -1.821864128112793
    3. 'N' → logprob: -2.071864128112793
    4. 'def' → logprob: -2.821864128112793
    5. ' 
' → logprob: -3.321864128112793
    6. '```' → logprob: -3.446864128112793
    7. ' import' → logprob: -3.571864128112793
    8. 'from' → logprob: -3.946864128112793
    9. 'd' → logprob: -4.196864128112793
    10. ' n' → logprob: -4.946864128112793

Token 94: ' des' (ID: 731)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.8330904841423035
    2. ' n' → logprob: -1.4580905437469482
    3. ' N' → logprob: -2.5830905437469482
    4. '```' → logprob: -2.7080905437469482
    5. ' ' → logprob: -3.0830905437469482
    6. '[' → logprob: -3.4580905437469482
    7. ' =' → logprob: -3.5830905437469482
    8. 'input' → logprob: -3.9580905437469482
    9. 's' → logprob: -4.458090305328369
    10. 'N' → logprob: -4.958090305328369

Token 95: ' trois' (ID: 25564)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.08994492143392563
    2. ' données' → logprob: -3.339944839477539
    3. ' entr' → logprob: -4.089944839477539
    4. ' N' → logprob: -4.089944839477539
    5. ' inputs' → logprob: -5.214944839477539
    6. ' input' → logprob: -5.464944839477539
    7. ' data' → logprob: -5.964944839477539
    8. ' lignes' → logprob: -6.464944839477539
    9. ' ent' → logprob: -6.589944839477539
    10. ' trip' → logprob: -8.589944839477539

Token 96: ' ent' (ID: 1121)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.21185344457626343
    2. ' ent' → logprob: -1.9618535041809082
    3. ' integers' → logprob: -3.336853504180908
    4. ' variables' → logprob: -4.836853504180908
    5. ' éléments' → logprob: -7.211853504180908
    6. ' int' → logprob: -7.461853504180908
    7. 'ent' → logprob: -7.461853504180908
    8. ' valeurs' → logprob: -7.961853504180908
    9. ' entr' → logprob: -8.08685302734375
    10. ' caractères' → logprob: -8.08685302734375

Token 97: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.0041750334203243256
    2. 'i' → logprob: -5.754175186157227
    3. 'ières' → logprob: -7.254175186157227
    4. 'r' → logprob: -8.379175186157227
    5. 'ier' → logprob: -11.004175186157227
    6. 'ri' → logprob: -12.004175186157227
    7. 'I' → logprob: -12.254175186157227
    8. 't' → logprob: -12.379175186157227
    9. 'ière' → logprob: -12.379175186157227
    10. 'êtes' → logprob: -12.504175186157227

Token 98: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.7093961238861084
    2. 'n' → logprob: -0.7093961238861084
    3. ' N' → logprob: -4.2093963623046875
    4. ' n' → logprob: -7.4593963623046875
    5. ' 
' → logprob: -8.334396362304688
    6. '```' → logprob: -8.709396362304688
    7. '
' → logprob: -9.209396362304688
    8. 'import' → logprob: -10.459396362304688
    9. '\n' → logprob: -10.959396362304688
    10. 'data' → logprob: -10.959396362304688

Token 99: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0026267850771546364
    2. ' ,' → logprob: -6.127626895904541
    3. ',N' → logprob: -7.877626895904541
    4. ',n' → logprob: -10.877626419067383
    5. ' =' → logprob: -11.252626419067383
    6. ',K' → logprob: -11.502626419067383
    7. ' N' → logprob: -12.127626419067383
    8. 'N' → logprob: -12.252626419067383
    9. '```' → logprob: -13.002626419067383
    10. 'import' → logprob: -13.127626419067383

Token 100: 'tail' (ID: 20472)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.043127983808517456
    2. ',K' → logprob: -3.66812801361084
    3. ' K' → logprob: -4.79312801361084
    4. ' ,' → logprob: -5.41812801361084
    5. 'K' → logprob: -5.66812801361084
    6. ')' → logprob: -8.41812801361084
    7. '),' → logprob: -8.91812801361084
    8. ' ' → logprob: -9.66812801361084
    9. ' ),' → logprob: -10.29312801361084
    10. ',k' → logprob: -10.29312801361084

Token 101: 'le' (ID: 282)
  Prédit: 'le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.3847181797027588
    2. 'e' → logprob: -1.2597181797027588
    3. '#' → logprob: -3.759718179702759
    4. 'te' → logprob: -5.63471794128418
    5. ',' → logprob: -6.00971794128418
    6. '   ' → logprob: -6.13471794128418
    7. '```' → logprob: -7.13471794128418
    8. 've' → logprob: -8.00971794128418
    9. 're' → logprob: -8.25971794128418
    10. '    ' → logprob: -8.25971794128418

Token 102: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.023835239931941032
    2. ' ,' → logprob: -3.7738351821899414
    3. ' ),' → logprob: -7.898835182189941
    4. '),' → logprob: -8.773835182189941
    5. ' )' → logprob: -10.898835182189941
    6. ')' → logprob: -10.898835182189941
    7. ',N' → logprob: -11.398835182189941
    8. ' ' → logprob: -13.148835182189941
    9. ',),' → logprob: -13.273835182189941
    10. 'de' → logprob: -13.398835182189941

Token 103: ' K' (ID: 658)
  Prédit: ' K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' K' → logprob: -0.007859292440116405
    2. 'K' → logprob: -5.257859230041504
    3. ' ' → logprob: -6.007859230041504
    4. ' ,' → logprob: -9.632859230041504
    5. ',' → logprob: -10.132859230041504
    6. ' ' → logprob: -10.382859230041504
    7. '  ' → logprob: -10.757859230041504
    8. '```' → logprob: -13.507859230041504
    9. ',K' → logprob: -14.632859230041504
    10. ' )' → logprob: -14.757859230041504

Token 104: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -7.028536492725834e-05
    2. ' ,' → logprob: -9.875070571899414
    3. ',K' → logprob: -11.375070571899414
    4. ',N' → logprob: -12.125070571899414
    5. ',k' → logprob: -14.625070571899414
    6. ',M' → logprob: -15.875070571899414
    7. ',n' → logprob: -16.000070571899414
    8. ')' → logprob: -16.000070571899414
    9. ' et' → logprob: -16.000070571899414
    10. '   ' → logprob: -16.500070571899414

Token 105: 'contr' (ID: 8677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9123232364654541
    2. ' taille' → logprob: -1.412323236465454
    3. 'max' → logprob: -2.537323236465454
    4. ' )' → logprob: -2.787323236465454
    5. ' max' → logprob: -2.787323236465454
    6. ' nombre' → logprob: -3.787323236465454
    7. 'tail' → logprob: -3.912323236465454
    8. ' espace' → logprob: -4.162322998046875
    9. ' la' → logprob: -4.287322998046875
    10. ')' → logprob: -4.412322998046875

Token 106: 'ainte' (ID: 48434)
  Prédit: 'ainte'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ainte' → logprob: -0.002195933135226369
    2. 'a' → logprob: -7.127195835113525
    3. 'ôle' → logprob: -7.252195835113525
    4. '#' → logprob: -8.127196311950684
    5. '```' → logprob: -9.002196311950684
    6. 'aine' → logprob: -10.252196311950684
    7. '' → logprob: -10.877196311950684
    8. 'aint' → logprob: -10.877196311950684
    9. '``' → logprob: -11.127196311950684
    10. 'ain' → logprob: -11.377196311950684

Token 107: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.24168875813484192
    2. ')' → logprob: -1.7416887283325195
    3. '),' → logprob: -4.1166887283325195
    4. ' )' → logprob: -4.4916887283325195
    5. ' ,' → logprob: -4.7416887283325195
    6. ' ),' → logprob: -5.9916887283325195
    7. ' =' → logprob: -8.61668872833252
    8. 'de' → logprob: -9.36668872833252
    9. ',)' → logprob: -9.49168872833252
    10. ')=' → logprob: -9.49168872833252

Token 108: ' M' (ID: 391)
  Prédit: ' M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' M' → logprob: -0.35406234860420227
    2. 'M' → logprob: -1.2290623188018799
    3. ' ' → logprob: -5.479062557220459
    4. ',' → logprob: -7.354062557220459
    5. '```' → logprob: -8.3540620803833
    6. '   ' → logprob: -8.8540620803833
    7. ' et' → logprob: -8.9790620803833
    8. '  ' → logprob: -9.7290620803833
    9. 'et' → logprob: -10.1040620803833
    10. ' ' → logprob: -10.4790620803833

Token 109: ' (' (ID: 350)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.008859786204993725
    2. '=' → logprob: -4.883859634399414
    3. 'N' → logprob: -7.383859634399414
    4. 'n' → logprob: -7.633859634399414
    5. '```' → logprob: -10.383859634399414
    6. ' ' → logprob: -10.758859634399414
    7. 's' → logprob: -11.008859634399414
    8. ' N' → logprob: -11.258859634399414
    9. '=N' → logprob: -11.383859634399414
    10. ' =
' → logprob: -11.508859634399414

Token 110: 'mod' (ID: 4847)
  Prédit: ' modulo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' modulo' → logprob: -0.3899177610874176
    2. 'mod' → logprob: -1.6399177312850952
    3. ' mod' → logprob: -2.6399178504943848
    4. ')' → logprob: -3.2649178504943848
    5. 'tail' → logprob: -4.514917850494385
    6. ' )' → logprob: -6.139917850494385
    7. ' modulus' → logprob: -6.514917850494385
    8. ' modul' → logprob: -6.764917850494385
    9. ' module' → logprob: -7.139917850494385
    10. 'module' → logprob: -7.389917850494385

Token 111: 'ulo' (ID: 5953)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16295133531093597
    2. ' )' → logprob: -2.1629512310028076
    3. 'ération' → logprob: -5.537951469421387
    4. 'u' → logprob: -5.537951469421387
    5. 's' → logprob: -5.787951469421387
    6. 'érateur' → logprob: -5.787951469421387
    7. 'ètre' → logprob: -6.037951469421387
    8. 'ulo' → logprob: -6.162951469421387
    9. ' =' → logprob: -6.537951469421387
    10. '=' → logprob: -7.287951469421387

Token 112: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002367443637922406
    2. ' )' → logprob: -6.2523674964904785
    3. '):' → logprob: -7.8773674964904785
    4. ')=' → logprob: -10.12736701965332
    5. '):
' → logprob: -12.00236701965332
    6. ')
' → logprob: -12.12736701965332
    7. ' ' → logprob: -13.25236701965332
    8. ')

' → logprob: -14.00236701965332
    9. '):

' → logprob: -14.00236701965332
    10. ' ):' → logprob: -14.12736701965332

Token 113: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.009245965629816055
    2. ' N' → logprob: -4.759245872497559
    3. 'n' → logprob: -7.384245872497559
    4. '```' → logprob: -12.634245872497559
    5. 'ligne' → logprob: -13.634245872497559
    6. 'line' → logprob: -13.634245872497559
    7. ' n' → logprob: -14.009245872497559
    8. ' line' → logprob: -14.134245872497559
    9. '
' → logprob: -14.259245872497559
    10. 'input' → logprob: -14.384245872497559

Token 114: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.182190554682165e-05
    2. ',K' → logprob: -9.750061988830566
    3. ' ,' → logprob: -12.750061988830566
    4. ',
' → logprob: -15.250061988830566
    5. ',k' → logprob: -15.500061988830566
    6. 'K' → logprob: -16.00006103515625
    7. ',N' → logprob: -17.25006103515625
    8. ',

' → logprob: -18.25006103515625
    9. ',\
' → logprob: -18.87506103515625
    10. ' K' → logprob: -20.25006103515625

Token 115: ' K' (ID: 658)
  Prédit: ' K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' K' → logprob: -0.037461429834365845
    2. 'K' → logprob: -3.412461519241333
    3. ' ' → logprob: -5.662461280822754
    4. '<|end|>' → logprob: -8.787461280822754
    5. ' ' → logprob: -8.912461280822754
    6. '  ' → logprob: -10.537461280822754
    7. ' =' → logprob: -12.537461280822754
    8. ' ' → logprob: -13.412461280822754
    9. ' 
' → logprob: -13.537461280822754
    10. ')' → logprob: -13.537461280822754

Token 116: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007185076246969402
    2. ' =' → logprob: -7.875718593597412
    3. ' ,' → logprob: -8.250718116760254
    4. '=' → logprob: -9.625718116760254
    5. ' ' → logprob: -12.125718116760254
    6. '<|end|>' → logprob: -13.375718116760254
    7. '```' → logprob: -14.375718116760254
    8. ',K' → logprob: -14.500718116760254
    9. ',k' → logprob: -14.938218116760254
    10. '  ' → logprob: -15.000718116760254

Token 117: ' M' (ID: 391)
  Prédit: ' M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' M' → logprob: -0.35284847021102905
    2. 'M' → logprob: -1.2278485298156738
    3. ' ' → logprob: -5.477848529815674
    4. ' =' → logprob: -9.227848052978516
    5. '=' → logprob: -9.977848052978516
    6. '<|end|>' → logprob: -11.352848052978516
    7. '  ' → logprob: -11.727848052978516
    8. ' ' → logprob: -11.852848052978516
    9. ' 
' → logprob: -11.977848052978516
    10. 'm' → logprob: -12.227848052978516

Token 118: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20142270624637604
    2. '=' → logprob: -1.7014226913452148
    3. '=input' → logprob: -11.701422691345215
    4. '=int' → logprob: -14.076422691345215
    5. ',' → logprob: -15.951422691345215
    6. '=list' → logprob: -16.20142364501953
    7. ' =
' → logprob: -16.57642364501953
    8. ' ' → logprob: -17.20142364501953
    9. ' ' → logprob: -17.82642364501953
    10. '```' → logprob: -17.82642364501953

Token 119: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.008616345934569836
    2. 'map' → logprob: -4.7586164474487305
    3. ' input' → logprob: -14.50861644744873
    4. ' ' → logprob: -14.63361644744873
    5. '	map' → logprob: -15.00861644744873
    6. ' list' → logprob: -15.13361644744873
    7. ' ' → logprob: -16.383615493774414
    8. 'input' → logprob: -16.758615493774414
    9. '0' → logprob: -17.008615493774414
    10. '(map' → logprob: -17.383615493774414

Token 120: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00194565299898386
    2. '(' → logprob: -6.251945495605469
    3. '(input' → logprob: -11.751945495605469
    4. 'int' → logprob: -12.251945495605469
    5. '[int' → logprob: -13.251945495605469
    6. '<int' → logprob: -14.376945495605469
    7. '(str' → logprob: -14.501945495605469
    8. '(
' → logprob: -14.501945495605469
    9. '=int' → logprob: -14.626945495605469
    10. '(list' → logprob: -15.001945495605469

Token 121: ',' (ID: 11)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.1663193702697754
    2. '(input' → logprob: -1.9163193702697754
    3. ',input' → logprob: -5.416319370269775
    4. ' input' → logprob: -6.916319370269775
    5. ')' → logprob: -7.791319370269775
    6. '=input' → logprob: -9.166318893432617
    7. ',' → logprob: -9.666318893432617
    8. '(' → logprob: -10.041318893432617
    9. '```' → logprob: -12.291318893432617
    10. '[input' → logprob: -12.541318893432617

Token 122: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.008614926598966122
    2. ' input' → logprob: -4.758615016937256
    3. '(input' → logprob: -15.633614540100098
    4. '=input' → logprob: -16.508615493774414
    5. ',input' → logprob: -17.258615493774414
    6. ')' → logprob: -17.508615493774414
    7. '	input' → logprob: -17.508615493774414
    8. '```' → logprob: -18.133615493774414
    9. '   ' → logprob: -18.383615493774414
    10. '<input' → logprob: -19.258615493774414

Token 123: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0001246348983841017
    2. '()' → logprob: -9.00012493133545
    3. ' ().' → logprob: -14.00012493133545
    4. '())' → logprob: -15.87512493133545
    5. '(' → logprob: -16.125123977661133
    6. '()
' → logprob: -16.625123977661133
    7. ')' → logprob: -17.625123977661133
    8. ' ()' → logprob: -18.750123977661133
    9. '()[' → logprob: -18.875123977661133
    10. '("").' → logprob: -19.125123977661133

Token 124: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.004092292860150337
    2. 'strip' → logprob: -5.504092216491699
    3. 'rstrip' → logprob: -11.2540922164917
    4. '(split' → logprob: -14.5040922164917
    5. ' split' → logprob: -15.2540922164917
    6. 'read' → logprob: -15.6290922164917
    7. ')' → logprob: -17.254093170166016
    8. 'spl' → logprob: -17.379093170166016
    9. '()' → logprob: -17.629093170166016
    10. '_split' → logprob: -18.129093170166016

Token 125: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.03430595248937607
    2. ')' → logprob: -3.534306049346924
    3. '()' → logprob: -5.409306049346924
    4. '(' → logprob: -10.034305572509766
    5. '('' → logprob: -11.409305572509766
    6. '())
' → logprob: -12.034305572509766
    7. '()))' → logprob: -12.534305572509766
    8. ' ())' → logprob: -13.534305572509766
    9. '))' → logprob: -13.784305572509766
    10. '());' → logprob: -13.909305572509766

Token 126: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.012004478834569454
    2. '

' → logprob: -5.012004375457764
    3. 'dp' → logprob: -5.512004375457764
    4. ' 
' → logprob: -7.512004375457764
    5. '
' → logprob: -7.637004375457764
    6. '\n' → logprob: -9.512004852294922
    7. '```' → logprob: -10.762004852294922
    8. ' 

' → logprob: -10.887004852294922
    9. '#' → logprob: -11.012004852294922
    10. 'if' → logprob: -11.262004852294922

Token 127: ' Dé' (ID: 27247)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.16769078373908997
    2. 'if' → logprob: -2.0426907539367676
    3. '#' → logprob: -4.542690753936768
    4. ' if' → logprob: -5.042690753936768
    5. 'from' → logprob: -5.917690753936768
    6. ' dp' → logprob: -6.292690753936768
    7. 'def' → logprob: -6.667690753936768
    8. 'import' → logprob: -7.667690753936768
    9. 'Si' → logprob: -8.042691230773926
    10. 'MOD' → logprob: -8.917691230773926

Token 128: 'term' (ID: 8044)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.006549340207129717
    2. 'fin' → logprob: -5.75654935836792
    3. '#' → logprob: -6.00654935836792
    4. 'if' → logprob: -7.63154935836792
    5. 'def' → logprob: -8.631548881530762
    6. 'dp' → logprob: -8.881548881530762
    7. 'fi' → logprob: -10.256548881530762
    8. 'but' → logprob: -10.881548881530762
    9. '```' → logprob: -11.381548881530762
    10. 'p' → logprob: -12.131548881530762

Token 129: 'ine' (ID: 514)
  Prédit: 'iner'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iner' → logprob: -0.3367382287979126
    2. 'ine' → logprob: -1.9617382287979126
    3. 'in' → logprob: -3.586738109588623
    4. '#' → logprob: -3.711738109588623
    5. 'r' → logprob: -3.836738109588623
    6. 'miner' → logprob: -4.211738109588623
    7. 'inement' → logprob: -4.836738109588623
    8. 'rer' → logprob: -5.211738109588623
    9. 'rin' → logprob: -5.211738109588623
    10. 'ines' → logprob: -5.336738109588623

Token 130: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.887116014957428
    2. ' if' → logprob: -1.0121159553527832
    3. 'if' → logprob: -2.387115955352783
    4. ' si' → logprob: -2.637115955352783
    5. ' le' → logprob: -3.137115955352783
    6. 'def' → logprob: -4.887115955352783
    7. 's' → logprob: -6.512115955352783
    8. ' def' → logprob: -6.637115955352783
    9. 'le' → logprob: -6.762115955352783
    10. 'la' → logprob: -7.262115955352783

Token 131: ' taille' (ID: 41644)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.7604320645332336
    2. 'dp' → logprob: -0.8854320645332336
    3. 'def' → logprob: -2.760432004928589
    4. '#' → logprob: -4.260432243347168
    5. 'type' → logprob: -4.635432243347168
    6. ' par' → logprob: -4.635432243347168
    7. ' parity' → logprob: -4.760432243347168
    8. 'max' → logprob: -5.385432243347168
    9. ' dp' → logprob: -5.635432243347168
    10. 'nombre' → logprob: -7.260432243347168

Token 132: ' maximale' (ID: 76380)
  Prédit: '_max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.6026288866996765
    2. 'max' → logprob: -0.9776288866996765
    3. ' maximale' → logprob: -3.4776289463043213
    4. '_des' → logprob: -4.602628707885742
    5. '_min' → logprob: -4.977628707885742
    6. '_' → logprob: -5.352628707885742
    7. '_bloc' → logprob: -5.477628707885742
    8. 'des' → logprob: -5.602628707885742
    9. 'du' → logprob: -5.852628707885742
    10. 's' → logprob: -5.852628707885742

Token 133: ' pour' (ID: 1930)
  Prédit: 'des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'des' → logprob: -0.3574177324771881
    2. 'd' → logprob: -1.4824177026748657
    3. ' des' → logprob: -3.8574178218841553
    4. 'du' → logprob: -4.107417583465576
    5. 'de' → logprob: -4.232417583465576
    6. 'possible' → logprob: -4.607417583465576
    7. '_des' → logprob: -5.732417583465576
    8. ' d' → logprob: -6.107417583465576
    9. '<|end|>' → logprob: -6.107417583465576
    10. 'max' → logprob: -7.357417583465576

Token 134: ' le' (ID: 505)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.32861003279685974
    2. ' le' → logprob: -2.4536099433898926
    3. ' la' → logprob: -2.7036099433898926
    4. 'les' → logprob: -3.2036099433898926
    5. ' K' → logprob: -3.5786099433898926
    6. ' l' → logprob: -4.453609943389893
    7. 'le' → logprob: -4.828609943389893
    8. 'K' → logprob: -4.953609943389893
    9. ' un' → logprob: -4.953609943389893
    10. ' k' → logprob: -5.203609943389893

Token 135: ' DP' (ID: 51992)
  Prédit: 'bloc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bloc' → logprob: -1.1331077814102173
    2. 'dp' → logprob: -1.5081077814102173
    3. 'DP' → logprob: -2.3831076622009277
    4. ' bloc' → logprob: -2.3831076622009277
    5. ' tableau' → logprob: -2.5081076622009277
    6. 'table' → logprob: -2.5081076622009277
    7. ' DP' → logprob: -3.5081076622009277
    8. 'K' → logprob: -4.258107662200928
    9. 'block' → logprob: -4.758107662200928
    10. '#' → logprob: -4.883107662200928

Token 136: ' à' (ID: 1221)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.11079797893762589
    2. ' =' → logprob: -2.610797882080078
    3. 'if' → logprob: -4.235797882080078
    4. 'dp' → logprob: -4.610797882080078
    5. '=' → logprob: -6.235797882080078
    6. '_max' → logprob: -7.110797882080078
    7. 'size' → logprob: -7.360797882080078
    8. ' max' → logprob: -7.485797882080078
    9. 'block' → logprob: -7.735797882080078
    10. 'limit' → logprob: -7.860797882080078

Token 137: ' ' (ID: 220)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.4611411988735199
    2. 'K' → logprob: -1.0861412286758423
    3. ' K' → logprob: -4.961141109466553
    4. '2' → logprob: -5.461141109466553
    5. 'max' → logprob: -5.461141109466553
    6. ' N' → logprob: -5.586141109466553
    7. ' utiliser' → logprob: -6.211141109466553
    8. 'min' → logprob: -6.461141109466553
    9. '[N' → logprob: -6.461141109466553
    10. 'prendre' → logprob: -6.836141109466553

Token 138: '3' (ID: 18)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.49878615140914917
    2. 'K' → logprob: -1.248786211013794
    3. 'max' → logprob: -2.623786211013794
    4. 'min' → logprob: -3.623786211013794
    5. 'util' → logprob: -6.623785972595215
    6. '2' → logprob: -6.873785972595215
    7. '[N' → logprob: -7.248785972595215
    8. '100' → logprob: -7.623785972595215
    9. ' K' → logprob: -7.748785972595215
    10. ' N' → logprob: -7.998785972595215

Token 139: ' dimensions' (ID: 23995)
  Prédit: '*N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*N' → logprob: -1.0377516746520996
    2. ' *' → logprob: -1.1627516746520996
    3. '*' → logprob: -2.1627516746520996
    4. '0' → logprob: -2.2877516746520996
    5. '6' → logprob: -2.6627516746520996
    6. '*(' → logprob: -4.7877516746521
    7. '2' → logprob: -4.9127516746521
    8. '00' → logprob: -5.0377516746521
    9. '
' → logprob: -5.6627516746521
    10. '*K' → logprob: -5.7877516746521

Token 140: ' (' (ID: 350)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.6696915626525879
    2. 'max' → logprob: -0.7946915626525879
    3. 'size' → logprob: -4.294691562652588
    4. 'sz' → logprob: -5.544691562652588
    5. 'MAX' → logprob: -5.544691562652588
    6. 'T' → logprob: -5.919691562652588
    7. 'DP' → logprob: -5.919691562652588
    8. 'dim' → logprob: -6.294691562652588
    9. 'if' → logprob: -6.419691562652588
    10. 'L' → logprob: -6.919691562652588

Token 141: 'pour' (ID: 52723)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' max' → logprob: -1.3745543956756592
    2. 'max' → logprob: -1.4995543956756592
    3. ' min' → logprob: -1.7495543956756592
    4. 'min' → logprob: -2.249554395675659
    5. ')' → logprob: -2.374554395675659
    6. 'K' → logprob: -3.124554395675659
    7. ' K' → logprob: -3.874554395675659
    8. 'N' → logprob: -3.999554395675659
    9. ' N' → logprob: -3.999554395675659
    10. ',' → logprob: -4.124554634094238

Token 142: ' le' (ID: 505)
  Prédit: ' K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' K' → logprob: -0.936755895614624
    2. 'K' → logprob: -1.436755895614624
    3. ' i' → logprob: -2.686755895614624
    4. ' la' → logprob: -2.686755895614624
    5. ' le' → logprob: -3.061755895614624
    6. 'i' → logprob: -3.186755895614624
    7. ' les' → logprob: -3.311755895614624
    8. ')' → logprob: -3.811755895614624
    9. ' l' → logprob: -4.186756134033203
    10. 'l' → logprob: -4.686756134033203

Token 143: ' cas' (ID: 2108)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'par' → logprob: -1.1741780042648315
    2. ' K' → logprob: -1.6741780042648315
    3. 'K' → logprob: -1.9241780042648315
    4. ' bloc' → logprob: -2.174178123474121
    5. ' nombre' → logprob: -3.424178123474121
    6. 'dp' → logprob: -3.674178123474121
    7. 'bloc' → logprob: -3.924178123474121
    8. ' code' → logprob: -4.049178123474121
    9. ' par' → logprob: -4.174178123474121
    10. 'nombre' → logprob: -4.424178123474121

Token 144: ' impair' (ID: 64113)
  Prédit: ' K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' K' → logprob: -0.9550091624259949
    2. 'K' → logprob: -1.2050092220306396
    3. ' où' → logprob: -1.8300092220306396
    4. 'où' → logprob: -2.7050092220306396
    5. ' impair' → logprob: -4.2050089836120605
    6. 'd' → logprob: -4.3300089836120605
    7. ' d' → logprob: -4.7050089836120605
    8. ' where' → logprob: -4.8300089836120605
    9. ' imp' → logprob: -5.3300089836120605
    10. 'k' → logprob: -5.3300089836120605

Token 145: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0541357696056366
    2. ' )' → logprob: -3.054135799407959
    3. 'if' → logprob: -6.179135799407959
    4. ',' → logprob: -6.679135799407959
    5. ' if' → logprob: -7.054135799407959
    6. 'K' → logprob: -8.3041353225708
    7. '#' → logprob: -8.5541353225708
    8. ' ' → logprob: -8.6791353225708
    9. ')
' → logprob: -9.0541353225708
    10. ' ,' → logprob: -9.8041353225708

Token 146: 'L' (ID: 43)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.5903303027153015
    2. 'dp' → logprob: -0.8403303027153015
    3. 'if' → logprob: -4.965330123901367
    4. 'MAX' → logprob: -6.090330123901367
    5. 'size' → logprob: -6.590330123901367
    6. 'DP' → logprob: -6.840330123901367
    7. 'L' → logprob: -7.590330123901367
    8. 'sz' → logprob: -7.840330123901367
    9. 'dim' → logprob: -8.340330123901367
    10. 'limit' → logprob: -8.465330123901367

Token 147: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01647019386291504
    2. '=' → logprob: -4.266469955444336
    3. 'K' → logprob: -7.641469955444336
    4. 'im' → logprob: -7.766469955444336
    5. '=max' → logprob: -7.766469955444336
    6. 'en' → logprob: -8.266469955444336
    7. 'max' → logprob: -8.391469955444336
    8. '=(' → logprob: -10.141469955444336
    9. '=L' → logprob: -10.266469955444336
    10. ' ' → logprob: -10.391469955444336

Token 148: ' (' (ID: 350)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -1.2686108350753784
    2. '(K' → logprob: -1.2686108350753784
    3. ' (' → logprob: -1.3936108350753784
    4. ' K' → logprob: -2.143610954284668
    5. '(N' → logprob: -3.518610954284668
    6. 'N' → logprob: -4.143610954284668
    7. '(' → logprob: -4.268610954284668
    8. ' N' → logprob: -5.143610954284668
    9. ' ' → logprob: -5.643610954284668
    10. '2' → logprob: -7.393610954284668

Token 149: 'N' (ID: 45)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.0009900573641061783
    2. ' K' → logprob: -7.50098991394043
    3. '(K' → logprob: -8.50098991394043
    4. 'N' → logprob: -8.62598991394043
    5. ' (' → logprob: -10.50098991394043
    6. ' ' → logprob: -11.50098991394043
    7. '   ' → logprob: -12.12598991394043
    8. '(N' → logprob: -13.12598991394043
    9. '(' → logprob: -13.37598991394043
    10. '  ' → logprob: -13.75098991394043

Token 150: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4017188251018524
    2. ' +' → logprob: -1.1517188549041748
    3. ' //' → logprob: -4.776718616485596
    4. '//' → logprob: -5.776718616485596
    5. '-' → logprob: -6.401718616485596
    6. ' -' → logprob: -6.526718616485596
    7. ' if' → logprob: -11.026719093322754
    8. ')' → logprob: -11.151719093322754
    9. ' ' → logprob: -11.651719093322754
    10. '>>' → logprob: -11.651719093322754

Token 151: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.22237814962863922
    2. '2' → logprob: -2.0973782539367676
    3. 'K' → logprob: -2.8473782539367676
    4. ' ' → logprob: -4.472378253936768
    5. ' K' → logprob: -5.097378253936768
    6. '3' → logprob: -7.222378253936768
    7. ' (' → logprob: -8.97237777709961
    8. '(' → logprob: -9.22237777709961
    9. '(K' → logprob: -9.34737777709961
    10. '   ' → logprob: -12.09737777709961

Token 152: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1086273118853569
    2. '2' → logprob: -2.3586273193359375
    3. 'K' → logprob: -4.8586273193359375
    4. '3' → logprob: -7.6086273193359375
    5. ' ' → logprob: -9.733627319335938
    6. '(K' → logprob: -10.483627319335938
    7. '(' → logprob: -10.858627319335938
    8. ' K' → logprob: -11.983627319335938
    9. '4' → logprob: -12.983627319335938
    10. '
' → logprob: -13.858627319335938

Token 153: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002526553114876151
    2. ')//' → logprob: -6.127526760101318
    3. ' )' → logprob: -8.00252628326416
    4. '//' → logprob: -12.12752628326416
    5. ')>>' → logprob: -15.00252628326416
    6. '#' → logprob: -15.25252628326416
    7. ')
' → logprob: -15.50252628326416
    8. ' //' → logprob: -15.62752628326416
    9. '+' → logprob: -16.127527236938477
    10. ')#' → logprob: -16.627527236938477

Token 154: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.1009751707315445
    2. ' //' → logprob: -2.350975275039673
    3. '#' → logprob: -7.225975036621094
    4. '>>' → logprob: -11.100975036621094
    5. '//
' → logprob: -12.225975036621094
    6. ')' → logprob: -12.350975036621094
    7. '```' → logprob: -12.850975036621094
    8. ' #' → logprob: -12.850975036621094
    9. '
' → logprob: -12.975975036621094
    10. '//=' → logprob: -13.350975036621094

Token 155: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.03810185194015503
    2. ' ' → logprob: -3.2881019115448
    3. 'K' → logprob: -10.413102149963379
    4. '1' → logprob: -11.163102149963379
    5. '3' → logprob: -11.788102149963379
    6. ' K' → logprob: -11.788102149963379
    7. '(' → logprob: -15.038102149963379
    8. '  ' → logprob: -15.788102149963379
    9. '4' → logprob: -16.163101196289062
    10. ' (' → logprob: -16.850601196289062

Token 156: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00011093381908722222
    2. '1' → logprob: -9.875110626220703
    3. ' ' → logprob: -10.000110626220703
    4. 'K' → logprob: -11.625110626220703
    5. '3' → logprob: -12.750110626220703
    6. '(' → logprob: -13.375110626220703
    7. '4' → logprob: -16.250110626220703
    8. '(K' → logprob: -16.500110626220703
    9. 'k' → logprob: -16.750110626220703
    10. '
' → logprob: -16.875110626220703

Token 157: ' +' (ID: 659)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.053433895111083984
    2. '

' → logprob: -3.928433895111084
    3. '#' → logprob: -4.303433895111084
    4. 'dp' → logprob: -4.428433895111084
    5. '
' → logprob: -5.928433895111084
    6. ' 
' → logprob: -6.178433895111084
    7. 'DP' → logprob: -7.928433895111084
    8. '```' → logprob: -8.178434371948242
    9. 'import' → logprob: -8.553434371948242
    10. '\n' → logprob: -8.553434371948242

Token 158: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5039486885070801
    2. ' ' → logprob: -1.12894868850708
    3. '2' → logprob: -2.62894868850708
    4. ' K' → logprob: -9.378948211669922
    5. '3' → logprob: -9.503948211669922
    6. '10' → logprob: -9.753948211669922
    7. ' (' → logprob: -10.128948211669922
    8. 'K' → logprob: -10.503948211669922
    9. '5' → logprob: -10.753948211669922
    10. '(' → logprob: -11.253948211669922

Token 159: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.20968163013458252
    2. '2' → logprob: -1.8346816301345825
    3. ' ' → logprob: -3.584681510925293
    4. 'K' → logprob: -7.459681510925293
    5. '3' → logprob: -7.709681510925293
    6. '10' → logprob: -8.334681510925293
    7. ' K' → logprob: -8.584681510925293
    8. ' (' → logprob: -9.459681510925293
    9. '5' → logprob: -9.584681510925293
    10. '(' → logprob: -9.709681510925293

Token 160: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.007212341297417879
    2. '

' → logprob: -5.882212162017822
    3. 'dp' → logprob: -6.132212162017822
    4. '
' → logprob: -6.632212162017822
    5. '#' → logprob: -7.757212162017822
    6. ' 
' → logprob: -8.50721263885498
    7. '```' → logprob: -9.50721263885498
    8. '\n' → logprob: -9.88221263885498
    9. 'DP' → logprob: -10.50721263885498
    10. '' → logprob: -10.63221263885498

Token 161: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.18564815819263458
    2. 'dp' → logprob: -1.8106482028961182
    3. '#' → logprob: -6.185647964477539
    4. '

' → logprob: -6.685647964477539
    5. '
' → logprob: -6.810647964477539
    6. ' 
' → logprob: -7.935647964477539
    7. 'import' → logprob: -8.060647964477539
    8. 'DP' → logprob: -8.685647964477539
    9. '\n' → logprob: -9.060647964477539
    10. '```' → logprob: -9.185647964477539

Token 162: ' even' (ID: 1952)
  Prédit: ' mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' mod' → logprob: -1.2316733598709106
    2. ' solve' → logprob: -1.3566733598709106
    3. ' dp' → logprob: -2.481673240661621
    4. ' pow' → logprob: -2.481673240661621
    5. 'solve' → logprob: -2.731673240661621
    6. 'dp' → logprob: -2.856673240661621
    7. 'pow' → logprob: -3.106673240661621
    8. 'mod' → logprob: -3.231673240661621
    9. ' count' → logprob: -3.481673240661621
    10. ' calc' → logprob: -4.356673240661621

Token 163: '(n' (ID: 2406)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6520653367042542
    2. '_par' → logprob: -1.5270652770996094
    3. '(' → logprob: -2.1520652770996094
    4. '_block' → logprob: -2.6520652770996094
    5. '_length' → logprob: -4.277065277099609
    6. '_blocks' → logprob: -4.652065277099609
    7. '_bloc' → logprob: -4.777065277099609
    8. '_k' → logprob: -5.152065277099609
    9. '_sum' → logprob: -5.277065277099609
    10. '_size' → logprob: -5.402065277099609

Token 164: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.247354656457901
    2. ',' → logprob: -2.372354745864868
    3. '):
' → logprob: -2.747354745864868
    4. ')' → logprob: -2.997354745864868
    5. 'u' → logprob: -4.872354507446289
    6. 'um' → logprob: -7.122354507446289
    7. 'e' → logprob: -7.372354507446289
    8. '):

' → logprob: -7.372354507446289
    9. 'x' → logprob: -8.122354507446289
    10. 's' → logprob: -8.372354507446289

Token 165: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.5036859512329102
    2. 'm' → logprob: -1.1286859512329102
    3. 'K' → logprob: -4.12868595123291
    4. 'M' → logprob: -4.12868595123291
    5. ' k' → logprob: -4.37868595123291
    6. ' m' → logprob: -4.75368595123291
    7. 'dp' → logprob: -5.12868595123291
    8. 'mod' → logprob: -6.00368595123291
    9. ')' → logprob: -6.25368595123291
    10. ' M' → logprob: -6.25368595123291

Token 166: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5969524383544922
    2. '):' → logprob: -0.8469524383544922
    3. ')' → logprob: -3.971952438354492
    4. '):
' → logprob: -6.346952438354492
    5. ' ,' → logprob: -9.846952438354492
    6. '):
' → logprob: -10.596952438354492
    7. ',n' → logprob: -10.846952438354492
    8. ' ):' → logprob: -10.846952438354492
    9. ':' → logprob: -11.471952438354492
    10. 'n' → logprob: -11.471952438354492

Token 167: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.027143869549036026
    2. ' if' → logprob: -4.277143955230713
    3. 'dp' → logprob: -4.902143955230713
    4. ' dp' → logprob: -6.027143955230713
    5. 'if' → logprob: -6.777143955230713
    6. '
' → logprob: -6.902143955230713
    7. '    
' → logprob: -8.652143478393555
    8. ' res' → logprob: -9.152143478393555
    9. '```' → logprob: -9.152143478393555
    10. '    ' → logprob: -9.277143478393555

Token 168: ' """
' (ID: 7037)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.03875802829861641
    2. ' dp' → logprob: -4.038757801055908
    3. 'if' → logprob: -4.663757801055908
    4. ' if' → logprob: -5.038757801055908
    5. '   ' → logprob: -5.538757801055908
    6. '#' → logprob: -8.538758277893066
    7. 'res' → logprob: -8.788758277893066
    8. 'f' → logprob: -9.538758277893066
    9. ' res' → logprob: -10.038758277893066
    10. ' ' → logprob: -11.038758277893066

Token 169: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.053772296756505966
    2. 'if' → logprob: -3.678772211074829
    3. '#' → logprob: -5.178772449493408
    4. '"""' → logprob: -5.178772449493408
    5. ' if' → logprob: -5.428772449493408
    6. 'Calcul' → logprob: -5.678772449493408
    7. 'for' → logprob: -5.928772449493408
    8. '"""
' → logprob: -6.803772449493408
    9. 'return' → logprob: -7.678772449493408
    10. '"' → logprob: -7.803772449493408

Token 170: ' Cal' (ID: 4453)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.604865312576294
    2. 'Calcul' → logprob: -1.354865312576294
    3. '#' → logprob: -2.729865312576294
    4. ' if' → logprob: -3.479865312576294
    5. '"""' → logprob: -3.729865312576294
    6. '"""
' → logprob: -4.354865074157715
    7. 'if' → logprob: -4.354865074157715
    8. ' Calcul' → logprob: -4.604865074157715
    9. 'return' → logprob: -5.104865074157715
    10. ' return' → logprob: -5.104865074157715

Token 171: 'cule' (ID: 45017)
  Prédit: 'cule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cule' → logprob: -0.015345396474003792
    2. 'cul' → logprob: -4.640345573425293
    3. 'c' → logprob: -5.265345573425293
    4. 'cules' → logprob: -8.015345573425293
    5. 'culate' → logprob: -10.515345573425293
    6. 'cula' → logprob: -11.515345573425293
    7. '
' → logprob: -12.015345573425293
    8. '\' → logprob: -12.640345573425293
    9. '``' → logprob: -12.765345573425293
    10. '#' → logprob: -12.765345573425293

Token 172: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.16447745263576508
    2. ' les' → logprob: -2.7894773483276367
    3. ' la' → logprob: -3.5394773483276367
    4. 'le' → logprob: -4.414477348327637
    5. '   ' → logprob: -4.539477348327637
    6. 's' → logprob: -5.039477348327637
    7. ' dp' → logprob: -5.289477348327637
    8. ' l' → logprob: -5.539477348327637
    9. '(' → logprob: -5.539477348327637
    10. 'dp' → logprob: -5.664477348327637

Token 173: ' nombre' (ID: 9733)
  Prédit: ' nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.6770092248916626
    2. 'nombre' → logprob: -0.8020092248916626
    3. 'dp' → logprob: -3.427009105682373
    4. ' dp' → logprob: -4.927009105682373
    5. 'nb' → logprob: -6.427009105682373
    6. ' nb' → logprob: -7.177009105682373
    7. ' nombres' → logprob: -8.177009582519531
    8. 'rés' → logprob: -9.302009582519531
    9. '#' → logprob: -9.302009582519531
    10. 'res' → logprob: -9.427009582519531

Token 174: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.015814626589417458
    2. ' des' → logprob: -5.390814781188965
    3. ' ' → logprob: -5.515814781188965
    4. ')' → logprob: -6.265814781188965
    5. ' d' → logprob: -6.515814781188965
    6. '  ' → logprob: -7.015814781188965
    7. 'de' → logprob: -7.390814781188965
    8. 'def' → logprob: -7.890814781188965
    9. ' )' → logprob: -8.015814781188965
    10. '<|end|>' → logprob: -8.140814781188965

Token 175: ' man' (ID: 873)
  Prédit: ' façons'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' façons' → logprob: -0.20776450634002686
    2. 'man' → logprob: -2.4577646255493164
    3. ' man' → logprob: -2.8327646255493164
    4. 'fa' → logprob: -3.5827646255493164
    5. 'ways' → logprob: -4.957764625549316
    6. ' ways' → logprob: -6.332764625549316
    7. ' ' → logprob: -6.457764625549316
    8. ' comb' → logprob: -6.832764625549316
    9. ' fa' → logprob: -7.207764625549316
    10. '   ' → logprob: -7.332764625549316

Token 176: 'ières' (ID: 44864)
  Prédit: 'ières'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ières' → logprob: -3.9888433093437925e-05
    2. 'i' → logprob: -10.375040054321289
    3. 'ière' → logprob: -11.750040054321289
    4. '```' → logprob: -15.500040054321289
    5. 'ieres' → logprob: -16.12504005432129
    6. '#' → logprob: -16.50004005432129
    7. 'ié' → logprob: -16.62504005432129
    8. '   ' → logprob: -16.75004005432129
    9. 'y' → logprob: -17.37504005432129
    10. '``' → logprob: -17.87504005432129

Token 177: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.03946075960993767
    2. 'de' → logprob: -3.9144606590270996
    3. ' d' → logprob: -4.6644606590271
    4. 'def' → logprob: -5.9144606590271
    5. '(n' → logprob: -6.4144606590271
    6. '_de' → logprob: -6.6644606590271
    7. 'd' → logprob: -6.7894606590271
    8. 'dp' → logprob: -7.1644606590271
    9. ' ' → logprob: -7.9144606590271
    10. '   ' → logprob: -8.039461135864258

Token 178: ' remplir' (ID: 113625)
  Prédit: ' remplir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' remplir' → logprob: -0.021593593060970306
    2. 'rem' → logprob: -4.0215935707092285
    3. 'placer' → logprob: -7.6465935707092285
    4. ' rempl' → logprob: -7.7715935707092285
    5. 'arr' → logprob: -8.146594047546387
    6. ' rem' → logprob: -8.396594047546387
    7. 'n' → logprob: -8.396594047546387
    8. 'f' → logprob: -8.396594047546387
    9. ' placer' → logprob: -8.896594047546387
    10. ' ' → logprob: -8.896594047546387

Token 179: ' une' (ID: 2463)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.05574009194970131
    2. 'un' → logprob: -3.3057401180267334
    3. ' n' → logprob: -4.555739879608154
    4. ' le' → logprob: -5.680739879608154
    5. 'n' → logprob: -6.180739879608154
    6. 'le' → logprob: -7.805739879608154
    7. '[n' → logprob: -8.305740356445312
    8. ' ' → logprob: -8.680740356445312
    9. '(n' → logprob: -9.055740356445312
    10. '```' → logprob: -9.305740356445312

Token 180: ' sé' (ID: 7462)
  Prédit: ' liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.49986565113067627
    2. 'liste' → logprob: -1.3748656511306763
    3. 'table' → logprob: -3.1248655319213867
    4. 'sé' → logprob: -4.124865531921387
    5. ' sé' → logprob: -4.249865531921387
    6. 'sequence' → logprob: -4.624865531921387
    7. 'suite' → logprob: -4.624865531921387
    8. 's' → logprob: -4.874865531921387
    9. ' table' → logprob: -5.249865531921387
    10. ' tableau' → logprob: -5.374865531921387

Token 181: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -0.0036403348203748465
    2. 'rie' → logprob: -6.878640174865723
    3. 'q' → logprob: -7.003640174865723
    4. 'ction' → logprob: -7.503640174865723
    5. 'que' → logprob: -7.753640174865723
    6. 'qu' → logprob: -8.503640174865723
    7. '   ' → logprob: -8.503640174865723
    8. 'quences' → logprob: -9.753640174865723
    9. ' ' → logprob: -10.128640174865723
    10. 'liste' → logprob: -10.628640174865723

Token 182: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.022302189841866493
    2. '(n' → logprob: -4.147302150726318
    3. 'de' → logprob: -6.897302150726318
    4. '_' → logprob: -6.897302150726318
    5. '   ' → logprob: -7.022302150726318
    6. '[n' → logprob: -7.022302150726318
    7. '_de' → logprob: -7.522302150726318
    8. ' d' → logprob: -8.022302627563477
    9. ' (' → logprob: -8.147302627563477
    10. ' des' → logprob: -8.647302627563477

Token 183: ' longueur' (ID: 104613)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3133167624473572
    2. ' n' → logprob: -1.313316822052002
    3. 'k' → logprob: -10.938316345214844
    4. ' ' → logprob: -11.563316345214844
    5. ' k' → logprob: -11.938316345214844
    6. '(n' → logprob: -12.688316345214844
    7. '
' → logprob: -13.063316345214844
    8. '   ' → logprob: -13.688316345214844
    9. ' ' → logprob: -13.688316345214844
    10. 'l' → logprob: -13.813316345214844

Token 184: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.04338154196739197
    2. 'n' → logprob: -3.168381452560425
    3. '(n' → logprob: -8.418381690979004
    4. '_' → logprob: -10.293381690979004
    5. ' ' → logprob: -10.668381690979004
    6. '_n' → logprob: -10.793381690979004
    7. ' de' → logprob: -10.918381690979004
    8. ' ' → logprob: -11.293381690979004
    9. ' k' → logprob: -11.543381690979004
    10. ',' → logprob: -11.668381690979004

Token 185: ',' (ID: 11)
  Prédit: ' avec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' avec' → logprob: -0.19512733817100525
    2. 'avec' → logprob: -1.9451273679733276
    3. ' en' → logprob: -3.945127248764038
    4. ',' → logprob: -5.445127487182617
    5. 'en' → logprob: -5.570127487182617
    6. ' ' → logprob: -5.695127487182617
    7. '(n' → logprob: -7.070127487182617
    8. ' with' → logprob: -7.195127487182617
    9. ' de' → logprob: -7.820127487182617
    10. '   ' → logprob: -7.820127487182617

Token 186: ' 
' (ID: 793)
  Prédit: ' modulo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' modulo' → logprob: -0.41875159740448
    2. ' mod' → logprob: -1.66875159740448
    3. 'mod' → logprob: -3.1687517166137695
    4. ' k' → logprob: -3.2937517166137695
    5. ' avec' → logprob: -4.0437517166137695
    6. ' m' → logprob: -4.6687517166137695
    7. ' en' → logprob: -4.6687517166137695
    8. ' p' → logprob: -5.0437517166137695
    9. 'm' → logprob: -5.2937517166137695
    10. 'k' → logprob: -5.5437517166137695

Token 187: '   ' (ID: 271)
  Prédit: ' modulo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' modulo' → logprob: -0.1327507197856903
    2. ' en' → logprob: -3.5077507495880127
    3. ' avec' → logprob: -3.7577507495880127
    4. '   ' → logprob: -3.7577507495880127
    5. ' mod' → logprob: -3.8827507495880127
    6. '    ' → logprob: -5.382750511169434
    7. ' def' → logprob: -5.507750511169434
    8. 'mod' → logprob: -5.632750511169434
    9. ' k' → logprob: -6.257750511169434
    10. ' de' → logprob: -6.382750511169434

Token 188: ' où' (ID: 15113)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.8209892511367798
    2. 'mod' → logprob: -2.0709891319274902
    3. 'dp' → logprob: -2.1959891319274902
    4. ' k' → logprob: -2.4459891319274902
    5. ' modulo' → logprob: -2.4459891319274902
    6. 'm' → logprob: -2.6959891319274902
    7. '   ' → logprob: -4.07098913192749
    8. ' mod' → logprob: -4.19598913192749
    9. ' dp' → logprob: -4.19598913192749
    10. ' m' → logprob: -5.07098913192749

Token 189: ' il' (ID: 1793)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.5514783263206482
    2. ' chaque' → logprob: -1.551478385925293
    3. ' k' → logprob: -2.801478385925293
    4. 'les' → logprob: -3.051478385925293
    5. ' la' → logprob: -3.426478385925293
    6. ' on' → logprob: -4.176478385925293
    7. ' ' → logprob: -4.676478385925293
    8. ' le' → logprob: -4.801478385925293
    9. ' tous' → logprob: -4.926478385925293
    10. 'k' → logprob: -5.301478385925293

Token 190: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6075918674468994
    2. ' n' → logprob: -1.2325918674468994
    3. ' y' → logprob: -2.7325918674468994
    4. 'y' → logprob: -2.7325918674468994
    5. 'est' → logprob: -4.23259162902832
    6. 's' → logprob: -4.35759162902832
    7. 'n't' → logprob: -6.35759162902832
    8. ''y' → logprob: -6.35759162902832
    9. ' est' → logprob: -7.23259162902832
    10. '   ' → logprob: -7.35759162902832

Token 191: ''y' (ID: 27913)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.42204388976097107
    2. ''y' → logprob: -1.2970439195632935
    3. 'n' → logprob: -3.172043800354004
    4. 'est' → logprob: -3.797043800354004
    5. ' y' → logprob: -6.422043800354004
    6. ''est' → logprob: -6.547043800354004
    7. 'ex' → logprob: -6.922043800354004
    8. '‘y' → logprob: -7.547043800354004
    9. 'f' → logprob: -7.797043800354004
    10. '   ' → logprob: -7.922043800354004

Token 192: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0301095899194479
    2. ' a' → logprob: -3.5301096439361572
    3. ''a' → logprob: -8.155109405517578
    4. 'pas' → logprob: -10.405109405517578
    5. ' pas' → logprob: -10.905109405517578
    6. 'avait' → logprob: -12.405109405517578
    7. 'est' → logprob: -13.030109405517578
    8. 'ex' → logprob: -13.905109405517578
    9. '_a' → logprob: -14.030109405517578
    10. '	a' → logprob: -14.155109405517578

Token 193: ' jamais' (ID: 23077)
  Prédit: ' pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pas' → logprob: -0.04269768297672272
    2. 'pas' → logprob: -3.6676976680755615
    3. ' aucun' → logprob: -4.667697906494141
    4. ' aucune' → logprob: -5.417697906494141
    5. ' jamais' → logprob: -7.292697906494141
    6. ' ' → logprob: -7.292697906494141
    7. '

' → logprob: -8.16769790649414
    8. 'auc' → logprob: -8.41769790649414
    9. ' plus' → logprob: -8.66769790649414
    10. '```' → logprob: -9.54269790649414

Token 194: ' plus' (ID: 2932)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.14944925904273987
    2. ' deux' → logprob: -2.149449348449707
    3. ' de' → logprob: -4.399449348449707
    4. ' ' → logprob: -5.274449348449707
    5. '_de' → logprob: -6.399449348449707
    6. 'une' → logprob: -7.774449348449707
    7. 'plus' → logprob: -7.899449348449707
    8. '2' → logprob: -8.024449348449707
    9. ' plus' → logprob: -8.149449348449707
    10. '   ' → logprob: -8.399449348449707

Token 195: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.34644243121147156
    2. ' d' → logprob: -1.346442461013794
    3. ' que' → logprob: -4.471442222595215
    4. 'de' → logprob: -5.096442222595215
    5. '   ' → logprob: -5.346442222595215
    6. '```' → logprob: -5.846442222595215
    7. 'd' → logprob: -6.096442222595215
    8. '  ' → logprob: -6.221442222595215
    9. '=' → logprob: -6.846442222595215
    10. ' =' → logprob: -7.596442222595215

Token 196: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.47584787011146545
    2. 'k' → logprob: -0.9758478403091431
    3. ' ' → logprob: -6.7258477210998535
    4. ' deux' → logprob: -8.475848197937012
    5. '1' → logprob: -9.100848197937012
    6. ' une' → logprob: -9.850848197937012
    7. '2' → logprob: -9.975848197937012
    8. ' un' → logprob: -10.475848197937012
    9. 'un' → logprob: -11.225848197937012
    10. 'de' → logprob: -11.225848197937012

Token 197: ' éléments' (ID: 57375)
  Prédit: ' espaces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' espaces' → logprob: -1.05330491065979
    2. '_' → logprob: -1.30330491065979
    3. ' cons' → logprob: -2.17830491065979
    4. '_con' → logprob: -2.30330491065979
    5. 'con' → logprob: -2.42830491065979
    6. ' ' → logprob: -3.80330491065979
    7. ' de' → logprob: -4.053304672241211
    8. ' _' → logprob: -4.928304672241211
    9. '<|end|>' → logprob: -4.928304672241211
    10. ' ' → logprob: -5.678304672241211

Token 198: ' ident' (ID: 3951)
  Prédit: ' cons'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cons' → logprob: -0.007920678704977036
    2. 'con' → logprob: -5.257920742034912
    3. 'cons' → logprob: -6.882920742034912
    4. '_con' → logprob: -7.632920742034912
    5. '_' → logprob: -7.882920742034912
    6. ' ' → logprob: -8.132920265197754
    7. ' de' → logprob: -8.632920265197754
    8. 'd' → logprob: -9.382920265197754
    9. '   ' → logprob: -10.507920265197754
    10. ' consecut' → logprob: -10.507920265197754

Token 199: 'iques' (ID: 11654)
  Prédit: 'iques'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iques' → logprob: -0.012155702337622643
    2. 'ques' → logprob: -4.512155532836914
    3. 'ique' → logprob: -8.012155532836914
    4. 'i' → logprob: -8.262155532836914
    5. 'que' → logprob: -9.012155532836914
    6. 'iq' → logprob: -9.387155532836914
    7. '```' → logprob: -9.762155532836914
    8. 'ic' → logprob: -10.137155532836914
    9. '#' → logprob: -10.512155532836914
    10. 'tiques' → logprob: -10.762155532836914

Token 200: ' cons' (ID: 1473)
  Prédit: ' cons'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cons' → logprob: -0.0009655343601480126
    2. 'cons' → logprob: -7.375965595245361
    3. 'con' → logprob: -8.875965118408203
    4. 'd' → logprob: -9.375965118408203
    5. 'de' → logprob: -10.625965118408203
    6. ' de' → logprob: -10.625965118408203
    7. ' d' → logprob: -10.875965118408203
    8. '_' → logprob: -12.000965118408203
    9. '   ' → logprob: -12.000965118408203
    10. '```' → logprob: -12.250965118408203

Token 201: 'écut' (ID: 96392)
  Prédit: 'écut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'écut' → logprob: -0.007507487200200558
    2. 'secut' → logprob: -5.38250732421875
    3. 'ecut' → logprob: -5.88250732421875
    4. 'és' → logprob: -10.75750732421875
    5. '```' → logprob: -11.00750732421875
    6. 'cut' → logprob: -11.13250732421875
    7. 'éc' → logprob: -11.63250732421875
    8. 'é' → logprob: -11.63250732421875
    9. 'secutive' → logprob: -12.63250732421875
    10. 'ect' → logprob: -13.00750732421875

Token 202: 'ifs' (ID: 14119)
  Prédit: 'ut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ut' → logprob: -0.6850926280021667
    2. 'u' → logprob: -0.8100926280021667
    3. 'ents' → logprob: -4.185092449188232
    4. 'i' → logprob: -4.810092449188232
    5. '```' → logprob: -5.185092449188232
    6. '   ' → logprob: -5.310092449188232
    7. 'uts' → logprob: -5.435092449188232
    8. 'ifs' → logprob: -5.685092449188232
    9. 's' → logprob: -5.935092449188232
    10. 'if' → logprob: -6.560092449188232

Token 203: '.
' (ID: 558)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.026982307434082
    2. '   ' → logprob: -1.151982307434082
    3. ':' → logprob: -2.151982307434082
    4. '):' → logprob: -3.026982307434082
    5. '(n' → logprob: -3.151982307434082
    6. ')' → logprob: -3.526982307434082
    7. ' :' → logprob: -3.651982307434082
    8. '):
' → logprob: -4.026982307434082
    9. ':
' → logprob: -4.651982307434082
    10. ' ' → logprob: -5.151982307434082

Token 204: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22485506534576416
    2. ')' → logprob: -2.0998549461364746
    3. '"""' → logprob: -2.9748549461364746
    4. '):' → logprob: -4.349854946136475
    5. ' """' → logprob: -4.474854946136475
    6. '
' → logprob: -7.724854946136475
    7. '):
' → logprob: -7.974854946136475
    8. ' )' → logprob: -8.224855422973633
    9. '""' → logprob: -8.224855422973633
    10. ':' → logprob: -8.224855422973633

Token 205: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.062275417149066925
    2. ' """' → logprob: -4.187275409698486
    3. '"""' → logprob: -4.187275409698486
    4. ')' → logprob: -4.312275409698486
    5. ' if' → logprob: -4.437275409698486
    6. '""' → logprob: -6.812275409698486
    7. '    
' → logprob: -7.312275409698486
    8. 'dp' → logprob: -7.437275409698486
    9. '
' → logprob: -7.562275409698486
    10. ' dp' → logprob: -8.437275886535645

Token 206: ' Util' (ID: 13564)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.07308706641197205
    2. 'if' → logprob: -2.698086977005005
    3. ' if' → logprob: -5.948087215423584
    4. ' dp' → logprob: -8.698086738586426
    5. 'mod' → logprob: -8.823086738586426
    6. '#' → logprob: -9.198086738586426
    7. '   ' → logprob: -9.573086738586426
    8. 'MOD' → logprob: -10.448086738586426
    9. 'DP' → logprob: -12.073086738586426
    10. 'res' → logprob: -12.448086738586426

Token 207: 'ise' (ID: 1096)
  Prédit: 'se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'se' → logprob: -0.3674030900001526
    2. 's' → logprob: -1.3674030303955078
    3. 'ser' → logprob: -3.242403030395508
    4. 'sage' → logprob: -5.117403030395508
    5. 'sing' → logprob: -6.117403030395508
    6. 'sé' → logprob: -6.492403030395508
    7. 'ses' → logprob: -6.742403030395508
    8. '#' → logprob: -7.242403030395508
    9. 'isant' → logprob: -7.867403030395508
    10. '```' → logprob: -8.492403030395508

Token 208: ' un' (ID: 537)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.35987913608551025
    2. ' la' → logprob: -1.8598791360855103
    3. ' un' → logprob: -2.1098790168762207
    4. 'une' → logprob: -5.359879016876221
    5. ' dynamic' → logprob: -5.484879016876221
    6. ' l' → logprob: -5.484879016876221
    7. ' le' → logprob: -5.609879016876221
    8. ' ' → logprob: -6.484879016876221
    9. 'un' → logprob: -7.109879016876221
    10. '_' → logprob: -7.234879016876221

Token 209: ' DP' (ID: 51992)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.06917983293533325
    2. 'a' → logprob: -3.8191797733306885
    3. ' tableau' → logprob: -3.9441797733306885
    4. 'dp' → logprob: -5.444180011749268
    5. ' programme' → logprob: -5.694180011749268
    6. ' table' → logprob: -6.194180011749268
    7. 'table' → logprob: -6.569180011749268
    8. 'DP' → logprob: -6.569180011749268
    9. 'appro' → logprob: -6.694180011749268
    10. 'import' → logprob: -6.819180011749268

Token 210: ' où' (ID: 15113)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.36572539806365967
    2. '(n' → logprob: -1.9907253980636597
    3. '   ' → logprob: -2.990725517272949
    4. '[n' → logprob: -3.365725517272949
    5. 'dp' → logprob: -3.365725517272949
    6. '
' → logprob: -4.990725517272949
    7. '[' → logprob: -5.615725517272949
    8. 'def' → logprob: -5.615725517272949
    9. ' dp' → logprob: -5.615725517272949
    10. '(' → logprob: -5.740725517272949

Token 211: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.3582099974155426
    2. ' dp' → logprob: -1.2332099676132202
    3. '   ' → logprob: -5.48321008682251
    4. ' f' → logprob: -6.60821008682251
    5. ' la' → logprob: -7.73321008682251
    6. 'f' → logprob: -7.73321008682251
    7. ' ' → logprob: -7.73321008682251
    8. '#' → logprob: -7.85821008682251
    9. ' le' → logprob: -7.98321008682251
    10. 'prev' → logprob: -8.108209609985352

Token 212: '[i' (ID: 1768)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.40070095658302307
    2. '[i' → logprob: -1.9007009267807007
    3. '=' → logprob: -2.4007010459899902
    4. '[n' → logprob: -2.7757010459899902
    5. '[' → logprob: -4.02570104598999
    6. '=[' → logprob: -5.02570104598999
    7. ']' → logprob: -7.15070104598999
    8. '[s' → logprob: -7.90070104598999
    9. ')' → logprob: -8.150700569152832
    10. '[k' → logprob: -8.650700569152832

Token 213: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.005287953652441502
    2. ']' → logprob: -5.755288124084473
    3. ' ][' → logprob: -6.255288124084473
    4. '[' → logprob: -9.505288124084473
    5. ',' → logprob: -10.380288124084473
    6. ']=' → logprob: -10.505288124084473
    7. '   ' → logprob: -11.505288124084473
    8. '=' → logprob: -11.505288124084473
    9. '[i' → logprob: -11.755288124084473
    10. ' ]' → logprob: -12.755288124084473

Token 214: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.2007855623960495
    2. 'x' → logprob: -2.4507856369018555
    3. 'v' → logprob: -2.9507856369018555
    4. 'c' → logprob: -3.5757856369018555
    5. '][' → logprob: -5.5757856369018555
    6. 'val' → logprob: -5.9507856369018555
    7. 's' → logprob: -6.3257856369018555
    8. 'l' → logprob: -6.4507856369018555
    9. '
' → logprob: -6.5757856369018555
    10. 'length' → logprob: -6.9507856369018555

Token 215: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0636792778968811
    2. '][' → logprob: -2.8136792182922363
    3. ']=' → logprob: -7.188679218292236
    4. ' ]' → logprob: -7.563679218292236
    5. ' ][' → logprob: -7.813679218292236
    6. '[' → logprob: -12.188679695129395
    7. ']][' → logprob: -12.313679695129395
    8. '=' → logprob: -12.688679695129395
    9. ' ' → logprob: -13.063679695129395
    10. '][]' → logprob: -13.188679695129395

Token 216: ' représente' (ID: 88912)
  Prédit: ' représente'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' représente' → logprob: -0.6830006241798401
    2. ']' → logprob: -1.0580005645751953
    3. '[i' → logprob: -2.9330005645751953
    4. ' indique' → logprob: -3.5580005645751953
    5. '][' → logprob: -3.9330005645751953
    6. '[' → logprob: -4.433000564575195
    7. '[ind' → logprob: -4.808000564575195
    8. ' =' → logprob: -5.558000564575195
    9. 'rep' → logprob: -5.808000564575195
    10. 'ind' → logprob: -5.933000564575195

Token 217: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.008668344467878342
    2. 'le' → logprob: -5.508668422698975
    3. ' la' → logprob: -5.883668422698975
    4. ' nombre' → logprob: -7.008668422698975
    5. 'nombre' → logprob: -8.258667945861816
    6. ',' → logprob: -9.008667945861816
    7. ' the' → logprob: -9.133667945861816
    8. ' ' → logprob: -9.508667945861816
    9. ' les' → logprob: -9.883667945861816
    10. 'the' → logprob: -10.008667945861816

Token 218: ' nombre' (ID: 9733)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.0053372858092188835
    2. ' nombre' → logprob: -5.255337238311768
    3. 'nb' → logprob: -9.755337715148926
    4. 'n' → logprob: -11.630337715148926
    5. 'Nombre' → logprob: -11.755337715148926
    6. 'nom' → logprob: -11.755337715148926
    7. '#' → logprob: -12.630337715148926
    8. 'number' → logprob: -12.880337715148926
    9. 'nbr' → logprob: -13.005337715148926
    10. ' ' → logprob: -13.505337715148926

Token 219: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.5725057721138
    2. ']' → logprob: -2.0725057125091553
    3. ' des' → logprob: -2.3225057125091553
    4. ' d' → logprob: -2.5725057125091553
    5. '<|end|>' → logprob: -3.3225057125091553
    6. 'd' → logprob: -3.4475057125091553
    7. '[' → logprob: -3.9475057125091553
    8. 'de' → logprob: -4.697505950927734
    9. '[i' → logprob: -4.822505950927734
    10. ')' → logprob: -4.822505950927734

Token 220: ' façons' (ID: 165958)
  Prédit: ' façons'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' façons' → logprob: -0.18367630243301392
    2. 'man' → logprob: -2.183676242828369
    3. ' man' → logprob: -4.058676242828369
    4. 'fa' → logprob: -4.433676242828369
    5. 'sé' → logprob: -4.433676242828369
    6. ' sé' → logprob: -5.558676242828369
    7. ' ' → logprob: -5.683676242828369
    8. '   ' → logprob: -6.808676242828369
    9. '```' → logprob: -6.933676242828369
    10. 's' → logprob: -7.308676242828369

Token 221: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.5262323021888733
    2. ' d' → logprob: -1.5262322425842285
    3. 'de' → logprob: -2.6512322425842285
    4. 'd' → logprob: -3.1512322425842285
    5. ' ' → logprob: -3.5262322425842285
    6. '[i' → logprob: -3.9012322425842285
    7. '    ' → logprob: -5.1512322425842285
    8. '   ' → logprob: -5.1512322425842285
    9. '<|end|>' → logprob: -5.1512322425842285
    10. ' i' → logprob: -6.1512322425842285

Token 222: ' construire' (ID: 92473)
  Prédit: ' remplir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' remplir' → logprob: -0.007733919192105532
    2. ' construire' → logprob: -6.0077338218688965
    3. ' terminer' → logprob: -6.7577338218688965
    4. ' compléter' → logprob: -7.3827338218688965
    5. ' faire' → logprob: -7.8827338218688965
    6. 'f' → logprob: -7.8827338218688965
    7. ' continuer' → logprob: -8.007734298706055
    8. ' placer' → logprob: -8.132734298706055
    9. ' finir' → logprob: -8.132734298706055
    10. ' i' → logprob: -8.382734298706055

Token 223: '
' (ID: 198)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.30296996235847473
    2. 'i' → logprob: -1.9279699325561523
    3. ' une' → logprob: -2.5529699325561523
    4. ' la' → logprob: -4.177969932556152
    5. '[i' → logprob: -4.927969932556152
    6. 'une' → logprob: -5.177969932556152
    7. ' un' → logprob: -5.302969932556152
    8. '(i' → logprob: -7.177969932556152
    9. ' ' → logprob: -7.552969932556152
    10. 'un' → logprob: -7.927969932556152

Token 224: '   ' (ID: 271)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.1618095189332962
    2. '[i' → logprob: -2.4118094444274902
    3. 'i' → logprob: -3.6618094444274902
    4. ' une' → logprob: -4.53680944442749
    5. ']' → logprob: -5.41180944442749
    6. ' la' → logprob: -5.66180944442749
    7. ' ' → logprob: -5.78680944442749
    8. ' ]' → logprob: -6.03680944442749
    9. ' un' → logprob: -6.16180944442749
    10. '   ' → logprob: -6.28680944442749

Token 225: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -1.0036838054656982
    2. ' i' → logprob: -1.1286838054656982
    3. 'une' (adapté à ' une') → logprob: -2.1286838054656982
    4. 'i' → logprob: -2.7536838054656982
    5. ' la' → logprob: -3.0036838054656982
    6. '[i' → logprob: -3.6286838054656982
    7. 'la' → logprob: -4.378684043884277
    8. ' un' → logprob: -4.503684043884277
    9. ' ' → logprob: -5.003684043884277
    10. '   ' → logprob: -5.378684043884277

Token 226: ' sé' (ID: 7462)
  Prédit: 'sé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sé' → logprob: -1.025875449180603
    2. ' tableau' → logprob: -1.650875449180603
    3. 'table' → logprob: -1.775875449180603
    4. 'sequence' → logprob: -1.900875449180603
    5. ' sequence' → logprob: -3.4008755683898926
    6. ' sé' → logprob: -3.6508755683898926
    7. 'i' → logprob: -4.025875568389893
    8. 'liste' → logprob: -4.525875568389893
    9. ' i' → logprob: -4.775875568389893
    10. 's' → logprob: -4.900875568389893

Token 227: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -0.0011089015752077103
    2. 'rie' → logprob: -7.6261091232299805
    3. 'q' → logprob: -8.12610912322998
    4. 'que' → logprob: -9.25110912322998
    5. '   ' → logprob: -9.25110912322998
    6. '[' → logprob: -11.00110912322998
    7. 'quences' → logprob: -11.12610912322998
    8. 'ance' → logprob: -11.12610912322998
    9. '-' → logprob: -11.25110912322998
    10. 'QUENCE' → logprob: -11.37610912322998

Token 228: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.0993267297744751
    2. 'de' → logprob: -2.4743266105651855
    3. ' i' → logprob: -5.2243266105651855
    4. 'i' → logprob: -5.9743266105651855
    5. ' of' → logprob: -7.2243266105651855
    6. '[i' → logprob: -7.3493266105651855
    7. 'length' → logprob: -8.599327087402344
    8. ' ' → logprob: -8.974327087402344
    9. 's' → logprob: -9.599327087402344
    10. ' length' → logprob: -9.724327087402344

Token 229: ' longueur' (ID: 104613)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5165910720825195
    2. ' i' → logprob: -1.0165910720825195
    3. ' longueur' → logprob: -3.8915910720825195
    4. 'long' → logprob: -4.3915910720825195
    5. 'length' → logprob: -5.0165910720825195
    6. ' length' → logprob: -6.3915910720825195
    7. ' ' → logprob: -8.39159107208252
    8. ' long' → logprob: -8.64159107208252
    9. '   ' → logprob: -10.39159107208252
    10. '  ' → logprob: -11.14159107208252

Token 230: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.1603778600692749
    2. 'i' → logprob: -1.910377860069275
    3. ' ' → logprob: -10.035377502441406
    4. '   ' → logprob: -10.410377502441406
    5. ' (' → logprob: -10.785377502441406
    6. '[i' → logprob: -11.285377502441406
    7. '_i' → logprob: -11.535377502441406
    8. '(i' → logprob: -11.660377502441406
    9. '	i' → logprob: -12.035377502441406
    10. ',' → logprob: -12.535377502441406

Token 231: ',' (ID: 11)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.5445510149002075
    2. ' avec' → logprob: -1.1695510149002075
    3. ',' → logprob: -3.169550895690918
    4. 'avec' → logprob: -3.544550895690918
    5. ' ][' → logprob: -4.794550895690918
    6. ' with' → logprob: -5.044550895690918
    7. 'with' → logprob: -5.544550895690918
    8. '   ' → logprob: -5.794550895690918
    9. ']' → logprob: -5.794550895690918
    10. ' en' → logprob: -5.919550895690918

Token 232: ' se' (ID: 458)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.4982365071773529
    2. 'j' → logprob: -1.2482365369796753
    3. ' avec' → logprob: -2.8732364177703857
    4. ' en' → logprob: -4.373236656188965
    5. ' où' → logprob: -4.873236656188965
    6. 'où' → logprob: -4.998236656188965
    7. ' ' → logprob: -5.123236656188965
    8. 'avec' → logprob: -5.498236656188965
    9. 'dp' → logprob: -5.748236656188965
    10. ' i' → logprob: -5.998236656188965

Token 233: ' termin' (ID: 18412)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.27870380878448486
    2. 'termin' → logprob: -2.6537036895751953
    3. 'rv' → logprob: -2.9037036895751953
    4. 'rr' → logprob: -4.028703689575195
    5. 'rm' → logprob: -4.278703689575195
    6. '```' → logprob: -4.278703689575195
    7. ' termin' → logprob: -4.653703689575195
    8. 'nt' → logprob: -5.403703689575195
    9. '  ' → logprob: -5.403703689575195
    10. '   ' → logprob: -5.528703689575195

Token 234: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.0005728095420636237
    2. 'a' → logprob: -8.50057315826416
    3. 'par' → logprob: -8.62557315826416
    4. ' par' → logprob: -10.87557315826416
    5. 'er' → logprob: -11.00057315826416
    6. 'é' → logprob: -11.25057315826416
    7. '[' → logprob: -11.25057315826416
    8. 'an' → logprob: -11.37557315826416
    9. '   ' → logprob: -11.50057315826416
    10. 'à' → logprob: -11.75057315826416

Token 235: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.39155927300453186
    2. 'par' → logprob: -1.1415592432022095
    3. ' avec' → logprob: -6.01655912399292
    4. ',' → logprob: -7.39155912399292
    5. '_par' → logprob: -7.76655912399292
    6. 'avec' → logprob: -7.76655912399292
    7. ' ' → logprob: -8.641559600830078
    8. ')' → logprob: -8.891559600830078
    9. '	par' → logprob: -9.391559600830078
    10. ' with' → logprob: -9.391559600830078

Token 236: ' exactement' (ID: 108701)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.9457830786705017
    2. 'j' → logprob: -1.4457831382751465
    3. ' un' → logprob: -1.8207831382751465
    4. 'une' → logprob: -2.3207831382751465
    5. ' j' → logprob: -3.4457831382751465
    6. 'le' → logprob: -3.6957831382751465
    7. ' une' → logprob: -3.9457831382751465
    8. ''un' → logprob: -4.1957831382751465
    9. ' ' → logprob: -5.8207831382751465
    10. ''une' → logprob: -5.8207831382751465

Token 237: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.31329482793807983
    2. ' j' → logprob: -1.3132948875427246
    3. ' ' → logprob: -11.063294410705566
    4. '   ' → logprob: -12.313294410705566
    5. ' un' → logprob: -12.313294410705566
    6. 'un' → logprob: -13.063294410705566
    7. ' ' → logprob: -13.688294410705566
    8. '  ' → logprob: -13.938294410705566
    9. '	j' → logprob: -13.938294410705566
    10. '```' → logprob: -14.313294410705566

Token 238: ' éléments' (ID: 57375)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3309515118598938
    2. '_con' → logprob: -2.330951452255249
    3. ')' → logprob: -2.705951452255249
    4. '_same' → logprob: -3.455951452255249
    5. '_cons' → logprob: -3.580951452255249
    6. ' _' → logprob: -3.830951452255249
    7. ' ' → logprob: -4.830951690673828
    8. ' identical' → logprob: -5.580951690673828
    9. ']' → logprob: -5.705951690673828
    10. '   ' → logprob: -5.830951690673828

Token 239: ' cons' (ID: 1473)
  Prédit: ' ident'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ident' → logprob: -0.18269072473049164
    2. ' cons' → logprob: -1.9326907396316528
    3. 'ident' → logprob: -4.932690620422363
    4. '_' → logprob: -5.557690620422363
    5. '_ident' → logprob: -5.807690620422363
    6. ' identical' → logprob: -6.182690620422363
    7. 'cons' → logprob: -6.557690620422363
    8. 'con' → logprob: -6.557690620422363
    9. ' rép' → logprob: -7.182690620422363
    10. '_con' → logprob: -7.557690620422363

Token 240: 'écut' (ID: 96392)
  Prédit: 'écut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'écut' → logprob: -0.01850820891559124
    2. 'ecut' → logprob: -4.393508434295654
    3. 'ec' → logprob: -5.393508434295654
    4. 'éc' → logprob: -6.768508434295654
    5. 'é' → logprob: -8.893507957458496
    6. 'cut' → logprob: -9.393507957458496
    7. 'e' → logprob: -10.643507957458496
    8. 'ect' → logprob: -11.268507957458496
    9. 'secut' → logprob: -11.643507957458496
    10. 'ecu' → logprob: -11.893507957458496

Token 241: 'ifs' (ID: 14119)
  Prédit: 'ut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ut' → logprob: -0.06981737911701202
    2. 'u' → logprob: -2.944817304611206
    3. '   ' → logprob: -5.319817543029785
    4. 'cut' → logprob: -5.444817543029785
    5. ' u' → logprob: -5.944817543029785
    6. 'utive' → logprob: -7.569817543029785
    7. 't' → logprob: -7.819817543029785
    8. 'uti' → logprob: -8.194817543029785
    9. 'i' → logprob: -8.444817543029785
    10. ' ut' → logprob: -8.569817543029785

Token 242: '
' (ID: 198)
  Prédit: ' ident'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ident' → logprob: -0.41635364294052124
    2. ' identical' → logprob: -1.791353702545166
    3. ')' → logprob: -3.041353702545166
    4. '_ident' → logprob: -3.166353702545166
    5. ' ' → logprob: -4.541353702545166
    6. ' du' → logprob: -4.541353702545166
    7. ',' → logprob: -4.541353702545166
    8. '_' → logprob: -4.666353702545166
    9. ' de' → logprob: -4.791353702545166
    10. 'ident' → logprob: -4.916353702545166

Token 243: '   ' (ID: 271)
  Prédit: ' ident'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ident' → logprob: -0.4770459234714508
    2. ' cons' → logprob: -1.4770458936691284
    3. ']' → logprob: -2.852046012878418
    4. ')' → logprob: -3.477046012878418
    5. ' ' → logprob: -4.227046012878418
    6. '   ' → logprob: -4.602046012878418
    7. ',' → logprob: -4.977046012878418
    8. ' ]' → logprob: -5.477046012878418
    9. ' de' → logprob: -5.477046012878418
    10. 'de' → logprob: -5.977046012878418

Token 244: ' ident' (ID: 3951)
  Prédit: 'ident'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ident' (adapté à ' ident') → logprob: -0.6537856459617615
    2. ' ident' → logprob: -0.9037856459617615
    3. 'de' → logprob: -3.2787857055664062
    4. ' de' → logprob: -4.028785705566406
    5. ')' → logprob: -4.653785705566406
    6. '_ident' → logprob: -6.528785705566406
    7. ',' → logprob: -6.653785705566406
    8. '```' → logprob: -6.778785705566406
    9. ' du' → logprob: -7.028785705566406
    10. 'du' → logprob: -7.028785705566406

Token 245: 'iques' (ID: 11654)
  Prédit: 'iques'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iques' → logprob: -0.0006486945785582066
    2. 'ques' → logprob: -7.875648498535156
    3. 'ifiés' → logprob: -9.875648498535156
    4. 'ique' → logprob: -10.250648498535156
    5. '```' → logprob: -10.500648498535156
    6. 'aux' → logprob: -10.875648498535156
    7. 'iqu' → logprob: -11.125648498535156
    8. 'ical' → logprob: -11.375648498535156
    9. 't' → logprob: -11.500648498535156
    10. 's' → logprob: -11.500648498535156

Token 246: '.

' (ID: 364)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.8966875672340393
    2. ']' → logprob: -1.2716875076293945
    3. ',' → logprob: -1.6466875076293945
    4. ')' → logprob: -2.5216875076293945
    5. '):' → logprob: -4.6466875076293945
    6. '   ' → logprob: -4.8966875076293945
    7. 's' → logprob: -5.7716875076293945
    8. ' ]' → logprob: -6.0216875076293945
    9. '].' → logprob: -6.2716875076293945
    10. ']:' → logprob: -6.3966875076293945

Token 247: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5474059581756592
    2. '   ' → logprob: -1.5474059581756592
    3. '"""' → logprob: -1.7974059581756592
    4. '"""
' → logprob: -3.797405958175659
    5. ' """' → logprob: -4.922406196594238
    6. ' """
' → logprob: -5.797406196594238
    7. '```' → logprob: -6.297406196594238
    8. ')
' → logprob: -6.422406196594238
    9. ']' → logprob: -6.422406196594238
    10. '""' → logprob: -6.547406196594238

Token 248: ' Args' (ID: 39185)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.41213712096214294
    2. '   ' → logprob: -2.037137031555176
    3. 'dp' → logprob: -2.037137031555176
    4. '"""
' → logprob: -2.787137031555176
    5. ')' → logprob: -5.162137031555176
    6. ' """' → logprob: -5.287137031555176
    7. '""' → logprob: -6.037137031555176
    8. ' """
' → logprob: -7.162137031555176
    9. '```' → logprob: -7.912137031555176
    10. ' ' → logprob: -8.162137031555176

Token 249: ':
' (ID: 734)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08040355145931244
    2. ':' → logprob: -3.4554035663604736
    3. '=' → logprob: -4.3304033279418945
    4. '):' → logprob: -4.4554033279418945
    5. '   ' → logprob: -4.7054033279418945
    6. '(n' → logprob: -5.4554033279418945
    7. ')' → logprob: -6.0804033279418945
    8. '[' → logprob: -6.9554033279418945
    9. '[n' → logprob: -7.0804033279418945
    10. ' =' → logprob: -7.3304033279418945

Token 250: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6927787661552429
    2. ' n' → logprob: -0.9427787661552429
    3. 'n' → logprob: -2.3177788257598877
    4. '    ' → logprob: -4.567778587341309
    5. '    
' → logprob: -7.942778587341309
    6. ' 
' → logprob: -8.317778587341309
    7. '```' → logprob: -8.817778587341309
    8. ' None' → logprob: -8.942778587341309
    9. ' i' → logprob: -9.192778587341309
    10. ' ' → logprob: -9.192778587341309

Token 251: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.25301939249038696
    2. ' n' → logprob: -1.5030193328857422
    3. 'self' → logprob: -7.378019332885742
    4. '   ' → logprob: -8.003019332885742
    5. ' self' → logprob: -9.003019332885742
    6. '
' → logprob: -13.128019332885742
    7. '	n' → logprob: -13.378019332885742
    8. 'i' → logprob: -13.753019332885742
    9. ' ' → logprob: -14.003019332885742
    10. '    
' → logprob: -14.628019332885742

Token 252: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.9385402993066236e-05
    2. ' ,' → logprob: -12.125019073486328
    3. ',k' → logprob: -12.250019073486328
    4. ',int' → logprob: -12.625019073486328
    5. ':' → logprob: -13.125019073486328
    6. ':int' → logprob: -13.500019073486328
    7. ',
' → logprob: -14.125019073486328
    8. ',n' → logprob: -14.625019073486328
    9. 'int' → logprob: -14.750019073486328
    10. '   ' → logprob: -14.875019073486328

Token 253: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0001710014621494338
    2. ',' → logprob: -9.000170707702637
    3. ',int' → logprob: -10.750170707702637
    4. ' int' → logprob: -11.000170707702637
    5. 'n' → logprob: -12.500170707702637
    6. ')' → logprob: -13.125170707702637
    7. ':int' → logprob: -13.625170707702637
    8. '   ' → logprob: -14.000170707702637
    9. '):' → logprob: -14.375170707702637
    10. ']int' → logprob: -15.375170707702637

Token 254: '):' (ID: 3127)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -6.511406809295295e-06
    2. ' ,' → logprob: -13.000006675720215
    3. ',n' → logprob: -13.375006675720215
    4. ')' → logprob: -14.000006675720215
    5. ',
' → logprob: -14.250006675720215
    6. ',k' → logprob: -15.250006675720215
    7. '<|end|>' → logprob: -15.375006675720215
    8. '   ' → logprob: -15.625006675720215
    9. '‌,' → logprob: -15.625006675720215
    10. ',int' → logprob: -16.2500057220459

Token 255: ' longueur' (ID: 104613)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9641216993331909
    2. ' La' → logprob: -1.964121699333191
    3. ' Le' → logprob: -2.2141218185424805
    4. ' n' → logprob: -2.4641218185424805
    5. ' ' → logprob: -2.8391218185424805
    6. '   ' → logprob: -2.9641218185424805
    7. ' int' → logprob: -3.4641218185424805
    8. 'La' → logprob: -4.2141218185424805
    9. '    ' → logprob: -4.3391218185424805
    10. ',' → logprob: -4.3391218185424805

Token 256: ' de' (ID: 334)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04150113835930824
    2. '   ' → logprob: -3.541501045227051
    3. ',' → logprob: -5.166501045227051
    4. ')n' → logprob: -6.416501045227051
    5. ' )' → logprob: -6.666501045227051
    6. ')
' → logprob: -7.041501045227051
    7. '):' → logprob: -7.666501045227051
    8. '):
' → logprob: -8.04150104522705
    9. ' ' → logprob: -8.16650104522705
    10. '
' → logprob: -9.04150104522705

Token 257: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.018876999616622925
    2. ' la' → logprob: -4.018877029418945
    3. 'sequence' → logprob: -8.018877029418945
    4. 'l' → logprob: -8.393877029418945
    5. 'sé' → logprob: -9.018877029418945
    6. '   ' → logprob: -11.018877029418945
    7. ' ' → logprob: -11.518877029418945
    8. 's' → logprob: -11.768877029418945
    9. ' sequence' → logprob: -12.018877029418945
    10. 'n' → logprob: -13.393877029418945

Token 258: ' sé' (ID: 7462)
  Prédit: 'sé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sé' → logprob: -0.06422464549541473
    2. 'sequence' → logprob: -2.9392247200012207
    3. ' sé' → logprob: -4.939224720001221
    4. 's' → logprob: -6.439224720001221
    5. 'suite' → logprob: -8.439224243164062
    6. ' sequence' → logprob: -9.189224243164062
    7. ' ' → logprob: -9.689224243164062
    8. 'seq' → logprob: -9.689224243164062
    9. 'sequ' → logprob: -9.939224243164062
    10. '   ' → logprob: -10.939224243164062

Token 259: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -0.00010998018842656165
    2. 'rie' → logprob: -9.500109672546387
    3. 'q' → logprob: -11.000109672546387
    4. 'QUENCE' → logprob: -12.250109672546387
    5. 'qu' → logprob: -12.625109672546387
    6. 'quences' → logprob: -12.750109672546387
    7. '   ' → logprob: -12.875109672546387
    8. 'que' → logprob: -13.500109672546387
    9. '
' → logprob: -14.375109672546387
    10. '#' → logprob: -14.750109672546387

Token 260: ' à' (ID: 1221)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1486385315656662
    2. ')' → logprob: -2.7736384868621826
    3. '   ' → logprob: -2.7736384868621826
    4. '       ' → logprob: -4.398638725280762
    5. '):' → logprob: -7.898638725280762
    6. ' ,' → logprob: -8.773638725280762
    7. '),' → logprob: -9.148638725280762
    8. ')
' → logprob: -9.148638725280762
    9. '):
' → logprob: -9.648638725280762
    10. '
' → logprob: -10.773638725280762

Token 261: ' remplir' (ID: 113625)
  Prédit: 'con'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'con' → logprob: -0.2658003568649292
    2. 'trait' → logprob: -2.3908004760742188
    3. 'coder' → logprob: -3.0158004760742188
    4. 'calcul' → logprob: -3.2658004760742188
    5. 'rem' → logprob: -4.140800476074219
    6. 'composer' → logprob: -5.140800476074219
    7. 'builder' → logprob: -5.390800476074219
    8. '```' → logprob: -5.390800476074219
    9. ' construire' → logprob: -5.640800476074219
    10. 'faire' → logprob: -5.765800476074219

Token 262: '.
' (ID: 558)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07234417647123337
    2. ')
' → logprob: -2.9473440647125244
    3. '   ' → logprob: -4.3223443031311035
    4. '):' → logprob: -6.0723443031311035
    5. '):
' → logprob: -6.5723443031311035
    6. ')
' → logprob: -9.072343826293945
    7. ',' → logprob: -9.447343826293945
    8. '       ' → logprob: -9.947343826293945
    9. ' )' → logprob: -10.947343826293945
    10. '```' → logprob: -11.322343826293945

Token 263: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7785935997962952
    2. ' """' → logprob: -1.5285935401916504
    3. ')' → logprob: -1.7785935401916504
    4. ' )' → logprob: -2.6535935401916504
    5. '"""' → logprob: -2.6535935401916504
    6. ' 
' → logprob: -5.02859354019165
    7. ' """
' → logprob: -6.15359354019165
    8. '       ' → logprob: -6.40359354019165
    9. '    
' → logprob: -7.40359354019165
    10. '```' → logprob: -7.40359354019165

Token 264: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' (adapté à ' k') → logprob: -0.00044902291847392917
    2. ' k' → logprob: -8.000449180603027
    3. '   ' → logprob: -9.500449180603027
    4. '       ' → logprob: -10.500449180603027
    5. 'def' → logprob: -12.250449180603027
    6. '
' → logprob: -14.000449180603027
    7. '```' → logprob: -14.125449180603027
    8. ' ' → logprob: -14.250449180603027
    9. '        
' → logprob: -14.500449180603027
    10. '    
' → logprob: -14.750449180603027

Token 265: ' (' (ID: 350)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.009851470589637756
    2. ',' → logprob: -5.384851455688477
    3. ':' → logprob: -5.759851455688477
    4. ')' → logprob: -6.884851455688477
    5. '):
' → logprob: -7.259851455688477
    6. ':int' → logprob: -8.759851455688477
    7. '   ' → logprob: -9.134851455688477
    8. ' ):' → logprob: -10.759851455688477
    9. '):

' → logprob: -11.134851455688477
    10. 'int' → logprob: -11.259851455688477

Token 266: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.5570885807392187e-05
    2. ')' → logprob: -11.375015258789062
    3. ' int' → logprob: -12.500015258789062
    4. '):' → logprob: -16.625015258789062
    5. ':int' → logprob: -16.875015258789062
    6. '=int' → logprob: -17.125015258789062
    7. '[int' → logprob: -17.125015258789062
    8. '
' → logprob: -17.375015258789062
    9. '(int' → logprob: -17.500015258789062
    10. ']int' → logprob: -17.875015258789062

Token 267: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.018783530220389366
    2. ')' → logprob: -4.3937835693359375
    3. '):
' → logprob: -5.2687835693359375
    4. ' ):' → logprob: -7.1437835693359375
    5. '   ' → logprob: -9.393783569335938
    6. ':' → logprob: -9.393783569335938
    7. ',' → logprob: -9.768783569335938
    8. '+' → logprob: -10.518783569335938
    9. '):

' → logprob: -10.518783569335938
    10. '):
' → logprob: -11.268783569335938

Token 268: ' contr' (ID: 6030)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.3456164598464966
    2. 'max' → logprob: -1.4706164598464966
    3. ' int' → logprob: -3.470616340637207
    4. 'maximum' → logprob: -4.970616340637207
    5. ' max' → logprob: -5.345616340637207
    6. ' maximum' → logprob: -5.345616340637207
    7. ' maximal' → logprob: -5.720616340637207
    8. ')' → logprob: -5.970616340637207
    9. 'la' → logprob: -6.720616340637207
    10. ' la' → logprob: -6.845616340637207

Token 269: 'ainte' (ID: 48434)
  Prédit: 'ra'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ra' → logprob: -0.4964507520198822
    2. 'aint' → logprob: -2.121450662612915
    3. 'ainte' → logprob: -2.621450662612915
    4. '   ' → logprob: -2.871450662612915
    5. 'raint' → logprob: -3.746450662612915
    6. '#' → logprob: -3.746450662612915
    7. 'raine' → logprob: -3.871450662612915
    8. 'e' → logprob: -3.996450662612915
    9. 'r' → logprob: -4.371450901031494
    10. 'i' → logprob: -4.871450901031494

Token 270: ' sur' (ID: 1512)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.11784818768501282
    2. ')' → logprob: -3.3678481578826904
    3. '):
' → logprob: -3.3678481578826904
    4. '   ' → logprob: -3.3678481578826904
    5. ',' → logprob: -6.3678483963012695
    6. ' de' → logprob: -7.1178483963012695
    7. '=' → logprob: -7.2428483963012695
    8. ' ):' → logprob: -7.2428483963012695
    9. ':' → logprob: -7.4928483963012695
    10. 'max' → logprob: -7.8678483963012695

Token 271: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.34932899475097656
    2. ' la' → logprob: -1.3493289947509766
    3. 'max' → logprob: -4.349328994750977
    4. 'l' → logprob: -4.849328994750977
    5. 'le' → logprob: -5.099328994750977
    6. 'k' → logprob: -5.224328994750977
    7. 'con' → logprob: -7.099328994750977
    8. ' max' → logprob: -7.599328994750977
    9. ' k' → logprob: -7.849328994750977
    10. 'the' → logprob: -7.974328994750977

Token 272: ' longueur' (ID: 104613)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.4651169776916504
    2. 'tail' → logprob: -1.2151169776916504
    3. 'long' → logprob: -3.4651169776916504
    4. 'con' → logprob: -4.59011697769165
    5. 'cons' → logprob: -4.96511697769165
    6. 'bloc' → logprob: -5.34011697769165
    7. 'suite' → logprob: -5.46511697769165
    8. 'block' → logprob: -5.96511697769165
    9. 'max' → logprob: -5.96511697769165
    10. 'nb' → logprob: -6.34011697769165

Token 273: ' maximale' (ID: 76380)
  Prédit: ' maximale'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' maximale' → logprob: -0.39664551615715027
    2. 'max' → logprob: -1.6466455459594727
    3. '_max' → logprob: -3.0216455459594727
    4. ' max' → logprob: -3.2716455459594727
    5. ')' → logprob: -3.8966455459594727
    6. ' maximal' → logprob: -4.646645545959473
    7. ' maximum' → logprob: -4.771645545959473
    8. ' )' → logprob: -5.771645545959473
    9. 'maximum' → logprob: -5.896645545959473
    10. '   ' → logprob: -6.146645545959473

Token 274: ' de' (ID: 334)
  Prédit: ' cons'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cons' → logprob: -0.5151500701904297
    2. ' des' → logprob: -1.6401500701904297
    3. 'cons' → logprob: -2.0151500701904297
    4. '   ' → logprob: -4.14015007019043
    5. ' maximale' → logprob: -4.26515007019043
    6. 'des' → logprob: -4.39015007019043
    7. 'max' → logprob: -4.76515007019043
    8. ')' → logprob: -4.89015007019043
    9. 'con' → logprob: -5.26515007019043
    10. ' de' → logprob: -5.64015007019043

Token 275: ' répét' (ID: 156936)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.8609146475791931
    2. 'j' → logprob: -1.610914707183838
    3. ' la' → logprob: -1.610914707183838
    4. 'con' → logprob: -3.110914707183838
    5. ' j' → logprob: -3.485914707183838
    6. 'l' → logprob: -3.735914707183838
    7. 'cons' → logprob: -3.860914707183838
    8. 'k' → logprob: -3.985914707183838
    9. ' cons' → logprob: -4.735914707183838
    10. 'bloc' → logprob: -4.985914707183838

Token 276: 'ition' (ID: 868)
  Prédit: 'itions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'itions' → logprob: -0.8128324747085571
    2. 'ée' → logprob: -1.6878324747085571
    3. 'ition' → logprob: -1.8128324747085571
    4. 'és' → logprob: -2.4378323554992676
    5. 'es' → logprob: -3.4378323554992676
    6. 'itive' → logprob: -3.8128323554992676
    7. 'ées' → logprob: -4.187832355499268
    8. 'itives' → logprob: -4.437832355499268
    9. '   ' → logprob: -4.562832355499268
    10. 'ee' → logprob: -5.437832355499268

Token 277: '.
' (ID: 558)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.15020693838596344
    2. '   ' → logprob: -3.275207042694092
    3. ')
' → logprob: -3.275207042694092
    4. '):' → logprob: -3.650207042694092
    5. '):
' → logprob: -3.650207042694092
    6. ' )' → logprob: -6.150207042694092
    7. 'max' → logprob: -6.650207042694092
    8. '"""
' → logprob: -6.900207042694092
    9. '.' → logprob: -7.025207042694092
    10. ' des' → logprob: -7.150207042694092

Token 278: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1046697348356247
    2. ')' → logprob: -2.9796698093414307
    3. '"""' → logprob: -3.2296698093414307
    4. '"""
' → logprob: -5.479669570922852
    5. ' """' → logprob: -6.854669570922852
    6. '""' → logprob: -7.229669570922852
    7. '):' → logprob: -7.354669570922852
    8. ')
' → logprob: -7.479669570922852
    9. ' """
' → logprob: -7.479669570922852
    10. '):
' → logprob: -7.854669570922852

Token 279: ' Returns' (ID: 9609)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7653854489326477
    2. '"""' → logprob: -1.015385389328003
    3. ')' → logprob: -1.890385389328003
    4. ' """' → logprob: -4.515385627746582
    5. '"""
' → logprob: -5.015385627746582
    6. ' """
' → logprob: -6.890385627746582
    7. '""' → logprob: -7.015385627746582
    8. ')
' → logprob: -7.515385627746582
    9. ' )' → logprob: -7.890385627746582
    10. '```' → logprob: -8.140385627746582

Token 280: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02307984232902527
    2. ' :' → logprob: -4.523079872131348
    3. '[' → logprob: -5.648079872131348
    4. '   ' → logprob: -5.898079872131348
    5. ':
' → logprob: -6.398079872131348
    6. 'int' → logprob: -7.148079872131348
    7. 'def' → logprob: -7.648079872131348
    8. ')' → logprob: -7.648079872131348
    9. '):' → logprob: -7.773079872131348
    10. '    ' → logprob: -8.023079872131348

Token 281: '       ' (ID: 309)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.2919233739376068
    2. 'int' → logprob: -1.9169234037399292
    3. '   ' → logprob: -2.7919232845306396
    4. '       ' → logprob: -3.7919232845306396
    5. '    ' → logprob: -3.9169232845306396
    6. '        ' → logprob: -7.041923522949219
    7. '0' → logprob: -8.541923522949219
    8. ' ' → logprob: -8.541923522949219
    9. ' (' → logprob: -8.541923522949219
    10. '"' → logprob: -9.166923522949219

Token 282: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' (adapté à ' int') → logprob: -0.0003147280658595264
    2. 'list' → logprob: -8.875314712524414
    3. '(int' → logprob: -9.125314712524414
    4. ' int' → logprob: -10.125314712524414
    5. 'List' → logprob: -11.750314712524414
    6. '[int' → logprob: -11.875314712524414
    7. '   ' → logprob: -12.250314712524414
    8. 'dp' → logprob: -12.625314712524414
    9. '       ' → logprob: -14.750314712524414
    10. 'result' → logprob: -15.000314712524414

Token 283: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.010185365565121174
    2. '   ' → logprob: -6.010185241699219
    3. ' :' → logprob: -6.135185241699219
    4. ')' → logprob: -6.885185241699219
    5. ':
' → logprob: -7.260185241699219
    6. '```' → logprob: -7.260185241699219
    7. '):' → logprob: -7.385185241699219
    8. ':return' → logprob: -7.760185241699219
    9. '%' → logprob: -8.135185241699219
    10. ' =' → logprob: -8.510185241699219

Token 284: ' nombre' (ID: 9733)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.846821665763855
    2. ' le' → logprob: -1.846821665763855
    3. ' dp' → logprob: -2.5968217849731445
    4. ' int' → logprob: -2.7218217849731445
    5. ' Le' → logprob: -2.9718217849731445
    6. 'Le' → logprob: -3.0968217849731445
    7. '   ' → logprob: -3.2218217849731445
    8. ' nombre' → logprob: -3.4718217849731445
    9. 'Nombre' → logprob: -3.9718217849731445
    10. 'dp' → logprob: -4.2218217849731445

Token 285: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.63590008020401
    2. ')' → logprob: -1.8859000205993652
    3. ' des' → logprob: -2.3859000205993652
    4. '<|end|>' → logprob: -2.5109000205993652
    5. '_' → logprob: -3.3859000205993652
    6. ' mod' → logprob: -3.7609000205993652
    7. '   ' → logprob: -4.260900020599365
    8. 'mod' → logprob: -4.260900020599365
    9. ' modulo' → logprob: -4.760900020599365
    10. '    ' → logprob: -4.760900020599365

Token 286: ' sé' (ID: 7462)
  Prédit: 'man'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'man' → logprob: -0.9641076922416687
    2. 'ways' → logprob: -1.5891077518463135
    3. ' façons' → logprob: -1.5891077518463135
    4. 'dp' → logprob: -2.9641077518463135
    5. '0' → logprob: -3.0891077518463135
    6. '1' → logprob: -4.214107513427734
    7. 'sum' → logprob: -4.339107513427734
    8. ' ways' → logprob: -4.339107513427734
    9. 's' → logprob: -4.464107513427734
    10. 'pow' → logprob: -5.089107513427734

Token 287: 'quences' (ID: 16559)
  Prédit: 'quences'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quences' → logprob: -1.6166903151315637e-05
    2. 'quence' → logprob: -11.625016212463379
    3. 'ries' → logprob: -12.625016212463379
    4. 'q' → logprob: -13.750016212463379
    5. 'qu' → logprob: -13.750016212463379
    6. '   ' → logprob: -14.125016212463379
    7. 'rie' → logprob: -14.750016212463379
    8. 'quent' → logprob: -15.125016212463379
    9. '
' → logprob: -15.875016212463379
    10. 'lections' → logprob: -16.125015258789062

Token 288: ' val' (ID: 1459)
  Prédit: ' mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mod' → logprob: -0.6012192368507385
    2. ' modulo' → logprob: -1.2262191772460938
    3. 'mod' → logprob: -2.7262191772460938
    4. ' )' → logprob: -3.2262191772460938
    5. ')' → logprob: -3.4762191772460938
    6. '<|end|>' → logprob: -4.976219177246094
    7. ' ' → logprob: -5.476219177246094
    8. ' possible' → logprob: -6.351219177246094
    9. ' val' → logprob: -6.476219177246094
    10. '   ' → logprob: -6.601219177246094

Token 289: 'ides' (ID: 4105)
  Prédit: 'ur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ur' → logprob: -0.0995725691318512
    2. 'érées' → logprob: -2.8495726585388184
    3. 'ides' → logprob: -4.349572658538818
    4. 'idé' → logprob: -5.099572658538818
    5. 'id' → logprob: -5.349572658538818
    6. 'u' → logprob: -5.474572658538818
    7. 'urée' → logprob: -6.099572658538818
    8. 'r' → logprob: -6.974572658538818
    9. 'ér' → logprob: -6.974572658538818
    10. 'or' → logprob: -7.474572658538818

Token 290: ' modulo' (ID: 112372)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6412672400474548
    2. ')' → logprob: -1.3912672996520996
    3. ' mod' → logprob: -2.7662672996520996
    4. ' modulo' → logprob: -3.1412672996520996
    5. '<|end|>' → logprob: -3.5162672996520996
    6. '
' → logprob: -4.0162672996521
    7. ',' → logprob: -4.1412672996521
    8. 'mod' → logprob: -4.5162672996521
    9. ']' → logprob: -4.8912672996521
    10. '"""' → logprob: -4.8912672996521

Token 291: ' M' (ID: 391)
  Prédit: ' M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' M' → logprob: -0.06215399131178856
    2. 'M' → logprob: -2.8121540546417236
    3. ' ' → logprob: -9.562153816223145
    4. '"' → logprob: -10.062153816223145
    5. ' ' → logprob: -10.562153816223145
    6. ''' → logprob: -11.437153816223145
    7. '   ' → logprob: -11.687153816223145
    8. '`' → logprob: -12.062153816223145
    9. ' 
' → logprob: -12.062153816223145
    10. '```' → logprob: -13.312153816223145

Token 292: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3607867956161499
    2. ':' → logprob: -1.48578679561615
    3. '):' → logprob: -3.7357869148254395
    4. '):
' → logprob: -3.9857869148254395
    5. ':
' → logprob: -4.3607869148254395
    6. '
' → logprob: -4.4857869148254395
    7. ')' → logprob: -5.1107869148254395
    8. '```' → logprob: -7.2357869148254395
    9. ']' → logprob: -7.3607869148254395
    10. ' :' → logprob: -7.6107869148254395

Token 293: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16511811316013336
    2. '"""' → logprob: -2.0401182174682617
    3. '"""
' → logprob: -4.415118217468262
    4. ' """' → logprob: -5.540118217468262
    5. ')' → logprob: -5.790118217468262
    6. '""' → logprob: -6.540118217468262
    7. ' """
' → logprob: -6.915118217468262
    8. '
' → logprob: -8.790118217468262
    9. '"' → logprob: -8.915118217468262
    10. ':' → logprob: -9.540118217468262

Token 294: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.35122451186180115
    2. '"""
' (adapté à ' """
') → logprob: -1.7262245416641235
    3. '"""' → logprob: -2.351224422454834
    4. ')' → logprob: -4.976224422454834
    5. ':' → logprob: -5.601224422454834
    6. ':
' → logprob: -5.851224422454834
    7. '):
' → logprob: -5.976224422454834
    8. '""' → logprob: -6.476224422454834
    9. '
' → logprob: -6.601224422454834
    10. '\n' → logprob: -6.726224422454834

Token 295: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01675884611904621
    2. ' dp' → logprob: -4.766758918762207
    3. 'dp' → logprob: -5.016758918762207
    4. '	dp' → logprob: -7.141758918762207
    5. '    
' → logprob: -7.766758918762207
    6. '
' → logprob: -9.766758918762207
    7. '```' → logprob: -10.141758918762207
    8. ' if' → logprob: -10.516758918762207
    9. ' ' → logprob: -10.766758918762207
    10. ' 
' → logprob: -10.766758918762207

Token 296: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0006389308837242424
    2. '   ' → logprob: -7.375638961791992
    3. ' dp' → logprob: -11.750638961791992
    4. 'if' → logprob: -12.750638961791992
    5. '	dp' → logprob: -14.000638961791992
    6. '#' (adapté à ' #') → logprob: -15.000638961791992
    7. 'from' → logprob: -15.625638961791992
    8. '
' → logprob: -16.125638961791992
    9. ' ' → logprob: -16.250638961791992
    10. 'def' → logprob: -17.500638961791992

Token 297: ' Initial' (ID: 9209)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0005025160498917103
    2. 'from' → logprob: -8.500502586364746
    3. ' dp' → logprob: -8.625502586364746
    4. '   ' → logprob: -9.750502586364746
    5. 'import' → logprob: -10.250502586364746
    6. '	dp' → logprob: -12.250502586364746
    7. 'def' → logprob: -12.625502586364746
    8. ' ' → logprob: -12.750502586364746
    9. 'if' → logprob: -12.875502586364746
    10. '#' → logprob: -13.125502586364746

Token 298: 'isation' (ID: 6993)
  Prédit: 'iser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iser' → logprob: -0.35593685507774353
    2. 'er' → logprob: -2.2309367656707764
    3. 'izer' → logprob: -2.2309367656707764
    4. 'ize' → logprob: -2.8559367656707764
    5. 'isation' → logprob: -4.4809370040893555
    6. 'e' → logprob: -5.3559370040893555
    7. 'ization' → logprob: -5.4809370040893555
    8. 'dp' → logprob: -6.6059370040893555
    9. 'ise' → logprob: -6.7309370040893555
    10. '   ' → logprob: -6.8559370040893555

Token 299: ' du' (ID: 1462)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.2049356997013092
    2. ' dp' → logprob: -2.0799357891082764
    3. '   ' → logprob: -2.8299357891082764
    4. ' =' → logprob: -7.454935550689697
    5. '	dp' → logprob: -8.204936027526855
    6. '
' → logprob: -8.454936027526855
    7. ' ' → logprob: -9.204936027526855
    8. '(dp' → logprob: -10.204936027526855
    9. '    
' → logprob: -10.454936027526855
    10. '```' → logprob: -10.579936027526855

Token 300: ' tableau' (ID: 67053)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.9743012671824545e-05
    2. ' dp' → logprob: -10.875020027160645
    3. '[' → logprob: -15.375020027160645
    4. '	dp' → logprob: -15.625020027160645
    5. 'import' → logprob: -15.750020027160645
    6. 'mod' → logprob: -16.000019073486328
    7. 'from' → logprob: -16.625019073486328
    8. '```' → logprob: -17.500019073486328
    9. '#' → logprob: -17.750019073486328
    10. '   ' → logprob: -17.875019073486328

Token 301: ' DP' (ID: 51992)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.14609313011169434
    2. ' =' → logprob: -2.1460931301116943
    3. '   ' → logprob: -4.646093368530273
    4. ' dp' → logprob: -4.771093368530273
    5. '=' → logprob: -7.396093368530273
    6. ' ' → logprob: -9.396093368530273
    7. '	dp' → logprob: -9.771093368530273
    8. '[' → logprob: -10.521093368530273
    9. '_dp' → logprob: -10.521093368530273
    10. '
' → logprob: -10.646093368530273

Token 302: ':' (ID: 25)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.08841430395841599
    2. '   ' → logprob: -2.588414192199707
    3. ' dp' → logprob: -4.963414192199707
    4. '
' → logprob: -6.213414192199707
    5. '	dp' → logprob: -8.088414192199707
    6. ' =' → logprob: -9.588414192199707
    7. '    
' → logprob: -10.588414192199707
    8. '```' → logprob: -10.838414192199707
    9. '(dp' → logprob: -10.963414192199707
    10. ' ' → logprob: -11.463414192199707

Token 303: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.02101779356598854
    2. ' dp' → logprob: -3.8960177898406982
    3. '   ' → logprob: -7.771018028259277
    4. '[' → logprob: -10.896018028259277
    5. '	dp' → logprob: -10.896018028259277
    6. '```' → logprob: -11.646018028259277
    7. ' ' → logprob: -12.396018028259277
    8. 'import' → logprob: -13.896018028259277
    9. 'from' → logprob: -14.396018028259277
    10. '
' → logprob: -14.646018028259277

Token 304: '[position' (ID: 75596)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5236120223999023
    2. '=' → logprob: -0.8986120223999023
    3. '=[' → logprob: -8.023612022399902
    4. '=[[' → logprob: -9.023612022399902
    5. '[' → logprob: -11.023612022399902
    6. 'dp' → logprob: -11.898612022399902
    7. '   ' → logprob: -13.023612022399902
    8. '=
' → logprob: -13.023612022399902
    9. '```' → logprob: -13.023612022399902
    10. '=[]
' → logprob: -13.273612022399902

Token 305: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.345469206571579
    2. ']' → logprob: -1.3454692363739014
    3. ']=' → logprob: -4.345468997955322
    4. '=' → logprob: -4.595468997955322
    5. ' =' → logprob: -5.345468997955322
    6. ',' → logprob: -6.345468997955322
    7. '=[' → logprob: -7.720468997955322
    8. ' ][' → logprob: -7.845468997955322
    9. '[' → logprob: -7.970468997955322
    10. '][]' → logprob: -9.09546947479248

Token 306: 'long' (ID: 8431)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.5159615874290466
    2. 'con' → logprob: -1.8909616470336914
    3. 'run' → logprob: -1.8909616470336914
    4. 'repeat' → logprob: -3.3909616470336914
    5. '1' → logprob: -4.015961647033691
    6. 're' → logprob: -4.390961647033691
    7. 'ré' → logprob: -4.640961647033691
    8. 'st' → logprob: -4.890961647033691
    9. 'length' → logprob: -5.390961647033691
    10. 'block' → logprob: -5.390961647033691

Token 307: 'ueur' (ID: 43728)
  Prédit: 'ueur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ueur' → logprob: -0.026241309940814972
    2. 'est' → logprob: -4.526241302490234
    3. 'th' → logprob: -4.776241302490234
    4. 'uest' → logprob: -6.651241302490234
    5. 'max' → logprob: -7.026241302490234
    6. 'ue' → logprob: -7.026241302490234
    7. ']' → logprob: -7.151241302490234
    8. '```' → logprob: -7.651241302490234
    9. '][' → logprob: -8.151241302490234
    10. 'év' → logprob: -8.401241302490234

Token 308: '_bloc' (ID: 134095)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -1.1243780851364136
    2. '_con' → logprob: -1.3743780851364136
    3. '][' → logprob: -2.124378204345703
    4. '_cons' → logprob: -2.124378204345703
    5. '_des' → logprob: -2.374378204345703
    6. '_max' → logprob: -4.124378204345703
    7. 'des' → logprob: -4.124378204345703
    8. ']_' → logprob: -4.624378204345703
    9. 'con' → logprob: -4.999378204345703
    10. '_' → logprob: -4.999378204345703

Token 309: '_act' (ID: 67104)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.05800415948033333
    2. '][' → logprob: -3.183004140853882
    3. ']=' → logprob: -4.308004379272461
    4. 's' → logprob: -8.183004379272461
    5. ' ]' → logprob: -8.558004379272461
    6. '[' → logprob: -8.933004379272461
    7. ']
' → logprob: -9.683004379272461
    8. ']={' → logprob: -9.808004379272461
    9. '=' → logprob: -9.933004379272461
    10. ' ][' → logprob: -10.183004379272461

Token 310: 'uel' (ID: 4619)
  Prédit: 'uel'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uel' → logprob: -0.5787389874458313
    2. 'uelle' → logprob: -0.9537389874458313
    3. 'ive' → logprob: -3.4537389278411865
    4. 'if' → logprob: -4.828739166259766
    5. 'ual' → logprob: -5.078739166259766
    6. ']' → logprob: -6.078739166259766
    7. 'u' → logprob: -6.828739166259766
    8. 'uale' → logprob: -7.453739166259766
    9. 'uele' → logprob: -7.703739166259766
    10. 'e' → logprob: -7.828739166259766

Token 311: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0352097786962986
    2. '][' → logprob: -3.410209894180298
    3. ']=' → logprob: -6.660209655761719
    4. ' ]' → logprob: -9.285209655761719
    5. ']
' → logprob: -10.035209655761719
    6. ' ][' → logprob: -10.160209655761719
    7. ']={' → logprob: -10.410209655761719
    8. ',' → logprob: -10.785209655761719
    9. ' =' → logprob: -12.160209655761719
    10. ']
' → logprob: -12.160209655761719

Token 312: '   ' (ID: 271)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.008563037030398846
    2. 'dp' → logprob: -5.133563041687012
    3. '   ' → logprob: -6.633563041687012
    4. '=' → logprob: -7.258563041687012
    5. ' dp' → logprob: -8.008563041687012
    6. ' ' → logprob: -9.383563041687012
    7. '[' → logprob: -9.508563041687012
    8. '_dp' → logprob: -10.008563041687012
    9. '	dp' → logprob: -10.508563041687012
    10. ',' → logprob: -11.883563041687012

Token 313: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -9.93710636976175e-05
    2. ' dp' → logprob: -9.250099182128906
    3. '   ' → logprob: -12.750099182128906
    4. '	dp' → logprob: -15.375099182128906
    5. 'from' → logprob: -16.750099182128906
    6. '```' → logprob: -17.750099182128906
    7. ' ' → logprob: -18.250099182128906
    8. 'import' → logprob: -18.500099182128906
    9. '
' → logprob: -18.500099182128906
    10. '[' → logprob: -19.125099182128906

Token 314: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4741286039352417
    2. '=' → logprob: -0.9741286039352417
    3. '=[' → logprob: -10.224128723144531
    4. '[' → logprob: -11.599128723144531
    5. '=[[' → logprob: -12.599128723144531
    6. '=[]' → logprob: -14.724128723144531
    7. '=np' → logprob: -15.099128723144531
    8. '=
' → logprob: -15.224128723144531
    9. ')' → logprob: -15.349128723144531
    10. '=[]
' → logprob: -15.599128723144531

Token 315: ' [[' (ID: 9237)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.00041065402911044657
    2. ' [[' → logprob: -8.000411033630371
    3. '[' → logprob: -9.500411033630371
    4. ' [' → logprob: -14.875411033630371
    5. '[
' → logprob: -18.625410079956055
    6. '[(' → logprob: -19.250410079956055
    7. '   ' → logprob: -19.625410079956055
    8. '[n' → logprob: -19.875410079956055
    9. ' ' → logprob: -20.375410079956055
    10. '[['' → logprob: -21.500410079956055

Token 316: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.4121114822482923e-06
    2. '1' → logprob: -13.250003814697266
    3. '[' → logprob: -14.125003814697266
    4. ' ' → logprob: -15.000003814697266
    5. '(' → logprob: -15.375003814697266
    6. 'int' → logprob: -16.312503814697266
    7. '۰' → logprob: -16.500003814697266
    8. ']' → logprob: -17.062503814697266
    9. '[int' → logprob: -18.187503814697266
    10. '
' → logprob: -18.562503814697266

Token 317: ']' (ID: 60)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2035640925168991
    2. 'for' → logprob: -1.7035640478134155
    3. ']' → logprob: -6.453564167022705
    4. '   ' → logprob: -8.328563690185547
    5. ']*(' → logprob: -8.578563690185547
    6. ',' → logprob: -10.578563690185547
    7. ']*' → logprob: -10.703563690185547
    8. ' ' → logprob: -10.953563690185547
    9. '(n' → logprob: -11.703563690185547
    10. ')' → logprob: -11.828563690185547

Token 318: ' *' (ID: 425)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.08945998549461365
    2. 'for' → logprob: -2.4644598960876465
    3. '   ' → logprob: -7.9644598960876465
    4. ']*(' → logprob: -9.714460372924805
    5. '(n' → logprob: -9.964460372924805
    6. ']' → logprob: -10.839460372924805
    7. ' ' → logprob: -11.464460372924805
    8. ' (' → logprob: -11.964460372924805
    9. 'n' → logprob: -12.214460372924805
    10. '	for' → logprob: -12.589460372924805

Token 319: ' (' (ID: 350)
  Prédit: '(k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.012569108977913857
    2. '(K' → logprob: -4.387568950653076
    3. '(' → logprob: -10.137569427490234
    4. ' (' → logprob: -11.137569427490234
    5. '((' → logprob: -13.137569427490234
    6. '(max' → logprob: -14.012569427490234
    7. 'k' → logprob: -14.512569427490234
    8. '   ' → logprob: -14.512569427490234
    9. '
' → logprob: -14.887569427490234
    10. ' ' → logprob: -15.512569427490234

Token 320: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0022143693640828133
    2. '(k' → logprob: -6.127214431762695
    3. 'K' → logprob: -10.752214431762695
    4. ' k' → logprob: -12.752214431762695
    5. '{k' → logprob: -13.377214431762695
    6. ' (' → logprob: -13.502214431762695
    7. '(' → logprob: -13.877214431762695
    8. '(K' → logprob: -14.002214431762695
    9. '   ' → logprob: -16.002214431762695
    10. '[k' → logprob: -17.252214431762695

Token 321: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.012518366798758507
    2. ' +' → logprob: -4.387518405914307
    3. '+
' → logprob: -11.887517929077148
    4. ' +
' → logprob: -14.762517929077148
    5. '```' → logprob: -15.012517929077148
    6. '＋' → logprob: -15.512517929077148
    7. '+k' → logprob: -15.512517929077148
    8. '1' → logprob: -15.637517929077148
    9. '2' → logprob: -16.07501792907715
    10. ' ' → logprob: -16.26251792907715

Token 322: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.130576806142926e-05
    2. '2' → logprob: -10.500031471252441
    3. ' ' → logprob: -12.500031471252441
    4. '   ' → logprob: -17.375030517578125
    5. '```' → logprob: -18.750030517578125
    6. '  ' → logprob: -19.062530517578125
    7. '１' → logprob: -19.375030517578125
    8. '۱' → logprob: -20.000030517578125
    9. '0' → logprob: -20.312530517578125
    10. '3' → logprob: -20.375030517578125

Token 323: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007158888038247824
    2. '2' → logprob: -7.250715732574463
    3. ' ' → logprob: -12.125716209411621
    4. '   ' → logprob: -16.375715255737305
    5. '```' → logprob: -16.375715255737305
    6. '3' → logprob: -17.125715255737305
    7. '１' → logprob: -17.438215255737305
    8. '  ' → logprob: -17.438215255737305
    9. '۱' → logprob: -17.563215255737305
    10. '(' → logprob: -17.750715255737305

Token 324: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00022296691895462573
    2. ' for' → logprob: -9.500223159790039
    3. ' )' → logprob: -9.625223159790039
    4. 'for' → logprob: -10.000223159790039
    5. ']' → logprob: -10.625223159790039
    6. ')]' → logprob: -11.750223159790039
    7. ',' → logprob: -13.625223159790039
    8. ')
' → logprob: -13.750223159790039
    9. '   ' → logprob: -14.500223159790039
    10. '),' → logprob: -15.500223159790039

Token 325: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.0485946387052536
    2. 'for' → logprob: -3.0485947132110596
    3. ' ' → logprob: -12.29859447479248
    4. ']' → logprob: -13.29859447479248
    5. '   ' → logprob: -14.79859447479248
    6. '	for' → logprob: -15.17359447479248
    7. ' 
' → logprob: -15.67359447479248
    8. '
' → logprob: -16.673595428466797
    9. '[' → logprob: -17.048595428466797
    10. ',' → logprob: -17.298595428466797

Token 326: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.022113315761089325
    2. '_range' → logprob: -4.14711332321167
    3. ' _' → logprob: -5.52211332321167
    4. ' range' → logprob: -7.27211332321167
    5. '_i' → logprob: -7.39711332321167
    6. '_in' → logprob: -8.397112846374512
    7. 'range' → logprob: -8.897112846374512
    8. '_j' → logprob: -9.647112846374512
    9. '_k' → logprob: -9.647112846374512
    10. '_s' → logprob: -10.397112846374512

Token 327: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.2919805347919464
    2. ' in' → logprob: -1.416980504989624
    3. 'range' → logprob: -4.541980743408203
    4. ' ' → logprob: -9.916980743408203
    5. 'i' → logprob: -10.291980743408203
    6. ' range' → logprob: -11.291980743408203
    7. 'n' → logprob: -11.541980743408203
    8. '  ' → logprob: -12.416980743408203
    9. '(range' → logprob: -13.541980743408203
    10. '   ' → logprob: -13.916980743408203

Token 328: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.001170225441455841
    2. ' range' → logprob: -6.7511701583862305
    3. '(range' → logprob: -16.751171112060547
    4. '   ' → logprob: -16.876171112060547
    5. ' ' → logprob: -17.626171112060547
    6. '	range' → logprob: -18.876171112060547
    7. '  ' → logprob: -19.001171112060547
    8. '0' → logprob: -21.501171112060547
    9. 'in' → logprob: -22.001171112060547
    10. '    ' → logprob: -22.001171112060547

Token 329: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00019388488726690412
    2. 'n' → logprob: -9.00019359588623
    3. '(' → logprob: -9.75019359588623
    4. '(N' → logprob: -12.62519359588623
    5. ' (' → logprob: -12.87519359588623
    6. 'range' → logprob: -12.87519359588623
    7. '(range' → logprob: -13.37519359588623
    8. '((' → logprob: -13.62519359588623
    9. ' n' → logprob: -15.25019359588623
    10. '   ' → logprob: -15.50019359588623

Token 330: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.03371208906173706
    2. ' +' → logprob: -3.408712148666382
    3. ')' → logprob: -10.408712387084961
    4. ')]' → logprob: -10.783712387084961
    5. '+
' → logprob: -11.533712387084961
    6. ' +
' → logprob: -12.783712387084961
    7. ')],' → logprob: -14.283712387084961
    8. ')])' → logprob: -14.283712387084961
    9. '   ' → logprob: -15.283712387084961
    10. ')][' → logprob: -15.408712387084961

Token 331: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.158350151963532e-05
    2. ' ' → logprob: -9.750061988830566
    3. '   ' → logprob: -13.875061988830566
    4. '0' → logprob: -13.875061988830566
    5. '2' → logprob: -14.375061988830566
    6. '```' → logprob: -15.062561988830566
    7. '
' → logprob: -16.18756103515625
    8. '(' → logprob: -16.50006103515625
    9. '``' → logprob: -16.62506103515625
    10. '{' → logprob: -16.62506103515625

Token 332: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.966313281329349e-05
    2. '0' → logprob: -10.500049591064453
    3. ' ' → logprob: -10.875049591064453
    4. '2' → logprob: -13.000049591064453
    5. '   ' → logprob: -15.312549591064453
    6. '```' → logprob: -16.375049591064453
    7. 'n' → logprob: -16.562549591064453
    8. 'N' → logprob: -16.937549591064453
    9. ')' → logprob: -17.125049591064453
    10. '(' → logprob: -17.125049591064453

Token 333: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -6.265633419388905e-05
    2. ']' → logprob: -10.500062942504883
    3. ')]
' → logprob: -11.125062942504883
    4. ')' → logprob: -11.125062942504883
    5. '   ' → logprob: -12.625062942504883
    6. ' )' → logprob: -14.375062942504883
    7. ')]
' → logprob: -14.875062942504883
    8. ')][' → logprob: -15.125062942504883
    9. ')]

' → logprob: -15.250062942504883
    10. ' ]' → logprob: -15.750062942504883

Token 334: '   ' (ID: 271)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.009714432060718536
    2. '   ' → logprob: -4.884714603424072
    3. ' dp' → logprob: -6.259714603424072
    4. '	dp' → logprob: -9.509714126586914
    5. '    
' → logprob: -10.009714126586914
    6. ' ' → logprob: -11.009714126586914
    7. '(dp' → logprob: -11.259714126586914
    8. 'for' → logprob: -11.634714126586914
    9. ' for' → logprob: -11.884714126586914
    10. '  
' → logprob: -12.009714126586914

Token 335: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -6.587483221665025e-05
    2. ' dp' → logprob: -10.000065803527832
    3. '   ' → logprob: -11.250065803527832
    4. 'for' → logprob: -12.500065803527832
    5. '#' (adapté à ' #') → logprob: -13.375065803527832
    6. ' ' → logprob: -14.000065803527832
    7. '    
' → logprob: -14.625065803527832
    8. ' for' → logprob: -15.125065803527832
    9. '	dp' → logprob: -15.125065803527832
    10. 'if' → logprob: -16.62506675720215

Token 336: ' Cas' (ID: 8066)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.00409015454351902
    2. 'for' → logprob: -5.504090309143066
    3. '#' → logprob: -12.129090309143066
    4. 'if' → logprob: -13.504090309143066
    5. ' dp' → logprob: -13.504090309143066
    6. ' for' → logprob: -14.129090309143066
    7. 'pour' → logprob: -14.379090309143066
    8. 'Pour' → logprob: -15.129090309143066
    9. 'For' → logprob: -15.379090309143066
    10. '   ' → logprob: -15.379090309143066

Token 337: ' de' (ID: 334)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.041175149381160736
    2. '   ' → logprob: -3.416175127029419
    3. ' dp' → logprob: -5.041175365447998
    4. '0' → logprob: -7.416175365447998
    5. '[' → logprob: -8.79117488861084
    6. 'i' → logprob: -9.79117488861084
    7. '	dp' → logprob: -9.91617488861084
    8. ' ' → logprob: -10.04117488861084
    9. 'de' → logprob: -10.66617488861084
    10. '(dp' → logprob: -10.79117488861084

Token 338: ' base' (ID: 3611)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.09159965813159943
    2. 'dp' → logprob: -3.216599702835083
    3. ' ' → logprob: -3.716599702835083
    4. '1' → logprob: -4.091599464416504
    5. ' dp' → logprob: -5.216599464416504
    6. 'n' → logprob: -8.091599464416504
    7. '[' → logprob: -8.591599464416504
    8. ' la' → logprob: -9.216599464416504
    9. ' n' → logprob: -9.591599464416504
    10. '#' → logprob: -9.841599464416504

Token 339: ' :' (ID: 712)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.23495051264762878
    2. '   ' → logprob: -1.7349505424499512
    3. ' dp' → logprob: -3.484950542449951
    4. ' for' → logprob: -6.609950542449951
    5. 'for' → logprob: -7.234950542449951
    6. '	dp' → logprob: -9.484950065612793
    7. '(dp' → logprob: -9.734950065612793
    8. '[' → logprob: -9.859950065612793
    9. '_dp' → logprob: -10.609950065612793
    10. '
' → logprob: -10.734950065612793

Token 340: ' une' (ID: 2463)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.18120037019252777
    2. 'for' → logprob: -1.806200385093689
    3. ' for' → logprob: -7.0562005043029785
    4. ' dp' → logprob: -7.5562005043029785
    5. 'pour' → logprob: -10.18120002746582
    6. '   ' → logprob: -11.93120002746582
    7. '1' → logprob: -12.30620002746582
    8. '0' → logprob: -12.30620002746582
    9. '(dp' → logprob: -12.93120002746582
    10. '	dp' → logprob: -13.18120002746582

Token 341: ' sé' (ID: 7462)
  Prédit: ' sé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sé' → logprob: -1.4589303731918335
    2. 'sé' → logprob: -1.4589303731918335
    3. '[' → logprob: -1.9589303731918335
    4. ' seule' → logprob: -2.083930492401123
    5. 'dp' → logprob: -3.208930492401123
    6. ' sequence' → logprob: -3.208930492401123
    7. 'se' → logprob: -3.333930492401123
    8. 'sequence' → logprob: -3.333930492401123
    9. 's' → logprob: -3.458930492401123
    10. ' ' → logprob: -4.458930492401123

Token 342: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -0.0006547740194946527
    2. 'q' → logprob: -7.875654697418213
    3. 'quences' → logprob: -8.500655174255371
    4. 'dp' → logprob: -9.750655174255371
    5. 'QUENCE' → logprob: -12.750655174255371
    6. '[' → logprob: -12.875655174255371
    7. 'qu' → logprob: -13.000655174255371
    8. 'ance' → logprob: -13.125655174255371
    9. '   ' → logprob: -14.000655174255371
    10. '1' → logprob: -14.375655174255371

Token 343: ' vide' (ID: 21835)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.9091429114341736
    2. 'vide' → logprob: -1.2841429710388184
    3. ' de' → logprob: -1.4091429710388184
    4. 'dp' → logprob: -3.2841429710388184
    5. ' vide' → logprob: -3.6591429710388184
    6. '[' → logprob: -5.159142971038818
    7. 'd' → logprob: -5.534142971038818
    8. 'vid' → logprob: -7.659142971038818
    9. '   ' → logprob: -7.659142971038818
    10. ' of' → logprob: -7.784142971038818

Token 344: ' est' (ID: 893)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.022749193012714386
    2. '[' → logprob: -4.397749423980713
    3. ' =' → logprob: -5.147749423980713
    4. ' dp' → logprob: -5.772749423980713
    5. '   ' → logprob: -7.272749423980713
    6. '_dp' → logprob: -9.022748947143555
    7. ',' → logprob: -9.147748947143555
    8. '(dp' → logprob: -9.397748947143555
    9. '=' → logprob: -9.522748947143555
    10. '
' → logprob: -9.647748947143555

Token 345: ' valide' (ID: 137323)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.09119950234889984
    2. '1' → logprob: -2.9661993980407715
    3. '[' → logprob: -4.3411993980407715
    4. 'val' → logprob: -4.4661993980407715
    5. ' dp' → logprob: -5.0911993980407715
    6. ' valide' → logprob: -6.9661993980407715
    7. ' ' → logprob: -7.4661993980407715
    8. 'valid' → logprob: -7.7161993980407715
    9. '=' → logprob: -7.7161993980407715
    10. ' compt' → logprob: -8.21619987487793

Token 346: '
' (ID: 198)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.06192835420370102
    2. '   ' → logprob: -3.0619282722473145
    3. '
' → logprob: -5.0619282722473145
    4. ' dp' → logprob: -5.8119282722473145
    5. ',' → logprob: -6.3119282722473145
    6. '(dp' → logprob: -6.9369282722473145
    7. '[' → logprob: -7.8119282722473145
    8. ' =' → logprob: -7.9369282722473145
    9. ':' → logprob: -9.936928749084473
    10. '	dp' → logprob: -10.061928749084473

Token 347: '   ' (ID: 271)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.04907723516225815
    2. '   ' → logprob: -3.049077272415161
    3. '
' → logprob: -8.424077033996582
    4. ' dp' → logprob: -8.549077033996582
    5. '(dp' → logprob: -10.299077033996582
    6. '	dp' → logprob: -10.799077033996582
    7. '    
' → logprob: -12.174077033996582
    8. ',' → logprob: -12.549077033996582
    9. '```' → logprob: -12.549077033996582
    10. '_dp' → logprob: -12.924077033996582

Token 348: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -6.2729995988775045e-06
    2. ' dp' → logprob: -12.000006675720215
    3. 'for' → logprob: -17.5000057220459
    4. '   ' → logprob: -17.8750057220459
    5. '	dp' → logprob: -18.1250057220459
    6. '(dp' → logprob: -21.2500057220459
    7. 'd' → logprob: -22.2500057220459
    8. ' ' → logprob: -22.3750057220459
    9. 'dt' → logprob: -22.6250057220459
    10. ' for' → logprob: -22.7500057220459

Token 349: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -8.537868779967539e-06
    2. '0' → logprob: -11.750008583068848
    3. ' [' → logprob: -14.625008583068848
    4. '
' → logprob: -16.87500762939453
    5. '```' → logprob: -17.75000762939453
    6. ' ' → logprob: -17.87500762939453
    7. '[
' → logprob: -18.00000762939453
    8. '#' → logprob: -18.12500762939453
    9. '1' → logprob: -18.25000762939453
    10. '[n' → logprob: -18.37500762939453

Token 350: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -14.250000953674316
    3. '[' → logprob: -14.250000953674316
    4. '00' → logprob: -18.000001907348633
    5. '۰' → logprob: -18.500001907348633
    6. '   ' → logprob: -18.625001907348633
    7. '000' → logprob: -18.625001907348633
    8. '
' → logprob: -19.000001907348633
    9. '1' → logprob: -19.250001907348633
    10. '#' → logprob: -19.687501907348633

Token 351: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.043689001351594925
    2. '[' → logprob: -3.168689012527466
    3. ']' → logprob: -7.418688774108887
    4. '0' → logprob: -9.793688774108887
    5. ' ][' → logprob: -10.793688774108887
    6. '"][' → logprob: -12.418688774108887
    7. '1' → logprob: -13.168688774108887
    8. ''][' → logprob: -13.293688774108887
    9. '#' → logprob: -14.168688774108887
    10. ' [' → logprob: -14.293688774108887

Token 352: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. '1' → logprob: -16.125
    3. ' ' → logprob: -16.5
    4. '۰' → logprob: -17.0
    5. '০' → logprob: -19.6875
    6. '０' → logprob: -20.625
    7. '०' → logprob: -20.6875
    8. '```' → logprob: -20.875
    9. '٠' → logprob: -20.875
    10. '   ' → logprob: -21.125

Token 353: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -1.5928495486150496e-05
    2. ']=' → logprob: -11.750016212463379
    3. ' ]' → logprob: -11.750016212463379
    4. ']
' → logprob: -17.125015258789062
    5. ']+=' → logprob: -17.375015258789062
    6. '1' → logprob: -17.500015258789062
    7. ')' → logprob: -17.750015258789062
    8. '']' → logprob: -18.250015258789062
    9. '=' → logprob: -18.375015258789062
    10. '[' → logprob: -18.375015258789062

Token 354: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759396553039551
    2. '=' → logprob: -0.8259396553039551
    3. '[' → logprob: -16.700939178466797
    4. ']' → logprob: -17.325939178466797
    5. ',' → logprob: -17.450939178466797
    6. '+=' → logprob: -17.825939178466797
    7. '1' → logprob: -17.950939178466797
    8. ']=' → logprob: -18.200939178466797
    9. ' +=' → logprob: -18.325939178466797
    10. '=True' → logprob: -18.575939178466797

Token 355: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '0' → logprob: -17.0
    3. ' ' → logprob: -17.375
    4. '۱' → logprob: -18.375
    5. '```' → logprob: -19.125
    6. '   ' → logprob: -19.875
    7. '１' → logprob: -20.125
    8. '১' → logprob: -20.5
    9. '१' → logprob: -21.0
    10. '' → logprob: -21.5

Token 356: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '0' → logprob: -17.0
    3. '۱' → logprob: -19.5
    4. ' ' → logprob: -20.0
    5. '' → logprob: -20.25
    6. '```' → logprob: -21.0
    7. '
' → logprob: -21.25
    8. '১' → logprob: -21.375
    9. '１' → logprob: -21.375
    10. '१' → logprob: -21.375

Token 357: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.42961034178733826
    2. '
' → logprob: -1.3046103715896606
    3. ' for' → logprob: -3.179610252380371
    4. 'for' → logprob: -4.054610252380371
    5. '    
' → logprob: -5.054610252380371
    6. '\n' → logprob: -5.179610252380371
    7. '  
' → logprob: -6.054610252380371
    8. ' 
' → logprob: -6.429610252380371
    9. '<|end|>' → logprob: -7.304610252380371
    10. ' ' → logprob: -7.679610252380371

Token 358: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2242746353149414
    2. ' for' → logprob: -2.0992746353149414
    3. 'for' → logprob: -2.5992746353149414
    4. '
' → logprob: -5.849274635314941
    5. '	for' → logprob: -7.349274635314941
    6. '    
' → logprob: -8.099274635314941
    7. '  
' → logprob: -10.224274635314941
    8. ' ' → logprob: -10.224274635314941
    9. ' 
' → logprob: -10.349274635314941
    10. '  ' → logprob: -10.849274635314941

Token 359: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.004340156447142363
    2. ' for' → logprob: -5.504340171813965
    3. '   ' → logprob: -8.254340171813965
    4. '	for' → logprob: -13.379340171813965
    5. '    
' → logprob: -17.50433921813965
    6. '```' → logprob: -17.50433921813965
    7. ' ' → logprob: -17.75433921813965
    8. 'mod' → logprob: -18.25433921813965
    9. '#' → logprob: -18.62933921813965
    10. '
' → logprob: -18.75433921813965

Token 360: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.03806180879473686
    2. ' i' → logprob: -3.2880618572235107
    3. 'pos' → logprob: -11.53806209564209
    4. '	i' → logprob: -12.03806209564209
    5. 'length' → logprob: -13.41306209564209
    6. '   ' → logprob: -14.16306209564209
    7. ' length' → logprob: -14.66306209564209
    8. ' ' → logprob: -14.91306209564209
    9. ' pos' → logprob: -14.91306209564209
    10. ' longueur' → logprob: -15.16306209564209

Token 361: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07000645995140076
    2. 'in' → logprob: -2.6950063705444336
    3. ' ' → logprob: -10.195006370544434
    4. '1' → logprob: -11.820006370544434
    5. 'i' → logprob: -12.445006370544434
    6. '	in' → logprob: -12.570006370544434
    7. '+' → logprob: -12.695006370544434
    8. 'range' → logprob: -13.320006370544434
    9. '[' → logprob: -13.570006370544434
    10. 'n' → logprob: -13.570006370544434

Token 362: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.023257357999682426
    2. ' range' → logprob: -3.773257255554199
    3. '1' → logprob: -12.0232572555542
    4. ' ' → logprob: -12.7732572555542
    5. '   ' → logprob: -12.8982572555542
    6. '  ' → logprob: -15.6482572555542
    7. '    ' → logprob: -16.398258209228516
    8. '0' → logprob: -16.648258209228516
    9. '(range' → logprob: -17.023258209228516
    10. '	range' → logprob: -17.398258209228516

Token 363: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10021023452281952
    2. '1' → logprob: -2.350210189819336
    3. '(n' → logprob: -13.225210189819336
    4. ' ' → logprob: -13.725210189819336
    5. 'n' → logprob: -14.850210189819336
    6. '   ' → logprob: -16.225210189819336
    7. ' (' → logprob: -16.225210189819336
    8. '(
' → logprob: -16.975210189819336
    9. '
' → logprob: -17.225210189819336
    10. ',' → logprob: -17.725210189819336

Token 364: '):
' (ID: 1883)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.9672299027442932
    2. '):
' → logprob: -1.5922298431396484
    3. '):' → logprob: -1.7172298431396484
    4. '1' → logprob: -1.8422298431396484
    5. ' +' → logprob: -2.5922298431396484
    6. ')' → logprob: -6.467229843139648
    7. ' ' → logprob: -7.092229843139648
    8. ' ):' → logprob: -7.842229843139648
    9. '   ' → logprob: -8.217229843139648
    10. ' ):
' → logprob: -8.467229843139648

Token 365: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04009794443845749
    2. ' for' → logprob: -3.415097951889038
    3. '   ' → logprob: -5.415097713470459
    4. 'for' → logprob: -6.540097713470459
    5. '    ' → logprob: -8.665098190307617
    6. '	   ' → logprob: -9.165098190307617
    7. '	' → logprob: -9.540098190307617
    8. '	for' → logprob: -9.540098190307617
    9. ' ' → logprob: -9.665098190307617
    10. '    ' → logprob: -11.165098190307617

Token 366: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.02346593327820301
    2. ' for' → logprob: -3.898465871810913
    3. '   ' → logprob: -6.648466110229492
    4. 'total' → logprob: -7.523466110229492
    5. 'sum' → logprob: -7.648466110229492
    6. 's' → logprob: -8.023466110229492
    7. 'j' → logprob: -9.898466110229492
    8. 'acc' → logprob: -10.148466110229492
    9. 'prefix' → logprob: -10.148466110229492
    10. 'dp' → logprob: -10.273466110229492

Token 367: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.00039039674447849393
    2. ' j' → logprob: -8.12539005279541
    3. '1' → logprob: -9.37539005279541
    4. 'l' → logprob: -12.37539005279541
    5. 'length' → logprob: -12.37539005279541
    6. 'k' → logprob: -15.37539005279541
    7. '	j' → logprob: -15.50039005279541
    8. 'c' → logprob: -16.250391006469727
    9. '_j' → logprob: -16.375391006469727
    10. 'r' → logprob: -16.625391006469727

Token 368: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.18047559261322021
    2. 'in' → logprob: -1.8054755926132202
    3. '1' → logprob: -7.30547571182251
    4. '   ' → logprob: -11.180475234985352
    5. '	in' → logprob: -11.430475234985352
    6. ' ' → logprob: -12.180475234985352
    7. '2' → logprob: -12.805475234985352
    8. '0' → logprob: -12.805475234985352
    9. '
' → logprob: -12.930475234985352
    10. '[' → logprob: -13.180475234985352

Token 369: ' range' (ID: 3352)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.7101914882659912
    2. '1' → logprob: -0.9601914882659912
    3. 'range' → logprob: -2.085191488265991
    4. '(k' → logprob: -7.46019172668457
    5. ' range' → logprob: -7.58519172668457
    6. ' k' → logprob: -9.08519172668457
    7. ' ' → logprob: -9.46019172668457
    8. '(' → logprob: -10.08519172668457
    9. '0' → logprob: -11.33519172668457
    10. '(range' → logprob: -12.33519172668457

Token 370: '(k' (ID: 12125)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07299509644508362
    2. '(k' → logprob: -2.697995185852051
    3. '1' → logprob: -5.822995185852051
    4. 'k' → logprob: -9.32299518585205
    5. ' ' → logprob: -12.69799518585205
    6. ' (' → logprob: -13.82299518585205
    7. ',k' → logprob: -15.19799518585205
    8. '(K' → logprob: -15.51049518585205
    9. '(
' → logprob: -15.63549518585205
    10. ' k' → logprob: -15.76049518585205

Token 371: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.07049606740474701
    2. ' +' → logprob: -3.445496082305908
    3. '):
' → logprob: -3.945496082305908
    4. '):' → logprob: -4.320496082305908
    5. '1' → logprob: -5.695496082305908
    6. ' ' → logprob: -9.82049560546875
    7. '   ' → logprob: -10.19549560546875
    8. ')' → logprob: -10.19549560546875
    9. '+
' → logprob: -11.57049560546875
    10. ' ):' → logprob: -11.82049560546875

Token 372: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2842308680992573e-05
    2. ' ' → logprob: -10.750022888183594
    3. '0' → logprob: -13.750022888183594
    4. '2' → logprob: -16.500022888183594
    5. '   ' → logprob: -16.937522888183594
    6. '```' → logprob: -17.187522888183594
    7. '
' → logprob: -17.500022888183594
    8. ')' → logprob: -17.750022888183594
    9. '  ' → logprob: -18.500022888183594
    10. '(' → logprob: -18.562522888183594

Token 373: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.167648876318708e-05
    2. ' ' → logprob: -10.125041961669922
    3. '0' → logprob: -13.500041961669922
    4. ')' → logprob: -15.875041961669922
    5. '   ' → logprob: -18.250041961669922
    6. '2' → logprob: -18.437541961669922
    7. '
' → logprob: -18.625041961669922
    8. '(' → logprob: -18.687541961669922
    9. '```' → logprob: -19.125041961669922
    10. '  ' → logprob: -19.250041961669922

Token 374: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.12702669203281403
    2. '):' → logprob: -2.1270267963409424
    3. '):
' → logprob: -9.502026557922363
    4. ' ):
' → logprob: -11.627026557922363
    5. ')' → logprob: -12.127026557922363
    6. ' ):' → logprob: -12.877026557922363
    7. '):

' → logprob: -13.252026557922363
    8. ':' → logprob: -13.877026557922363
    9. '=' → logprob: -14.002026557922363
    10. '   ' → logprob: -14.252026557922363

Token 375: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03010762482881546
    2. ' if' → logprob: -3.6551077365875244
    3. '       ' → logprob: -6.030107498168945
    4. '	       ' → logprob: -7.780107498168945
    5. 'if' → logprob: -8.405107498168945
    6. '               ' → logprob: -8.405107498168945
    7. '		' → logprob: -9.030107498168945
    8. '   ' → logprob: -9.280107498168945
    9. '<|end|>' → logprob: -9.655107498168945
    10. ',' → logprob: -9.905107498168945

Token 376: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2295808047056198
    2. 'if' → logprob: -1.6045807600021362
    3. '           ' → logprob: -5.854580879211426
    4. '               ' → logprob: -6.729580879211426
    5. ' for' → logprob: -10.479580879211426
    6. '            ' → logprob: -10.604580879211426
    7. 'for' → logprob: -10.604580879211426
    8. '   ' → logprob: -12.479580879211426
    9. '                   ' → logprob: -12.854580879211426
    10. 'dp' → logprob: -12.854580879211426

Token 377: ' Ajouter' (ID: 165754)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.009814292192459106
    2. ' if' → logprob: -4.634814262390137
    3. 'for' → logprob: -10.509814262390137
    4. '           ' → logprob: -11.634814262390137
    5. 'val' → logprob: -11.634814262390137
    6. 'dp' → logprob: -12.259814262390137
    7. '   ' → logprob: -12.759814262390137
    8. 'next' → logprob: -12.884814262390137
    9. '               ' → logprob: -14.384814262390137
    10. '       ' → logprob: -14.634814262390137

Token 378: ' un' (ID: 537)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.9349082708358765
    2. '1' → logprob: -1.8099082708358765
    3. 'if' → logprob: -2.059908390045166
    4. ' dp' → logprob: -2.184908390045166
    5. 'dp' → logprob: -2.309908390045166
    6. ' j' → logprob: -3.559908390045166
    7. ' ' → logprob: -3.684908390045166
    8. '0' → logprob: -4.059908390045166
    9. ' (' → logprob: -5.309908390045166
    10. ' =' → logprob: -5.684908390045166

Token 379: ' nouvel' (ID: 76298)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.9502957463264465
    2. ' nouveau' → logprob: -1.9502956867218018
    3. ' ' → logprob: -2.5752956867218018
    4. ' j' → logprob: -2.8252956867218018
    5. ' new' → logprob: -3.2002956867218018
    6. 'nou' → logprob: -3.4502956867218018
    7. 'j' → logprob: -3.5752956867218018
    8. 'if' → logprob: -3.5752956867218018
    9. 'new' → logprob: -3.7002956867218018
    10. ' nouvel' → logprob: -3.7002956867218018

Token 380: ' élément' (ID: 99627)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.13430479168891907
    2. ' élément' → logprob: -2.1343047618865967
    3. '_' → logprob: -6.259305000305176
    4. 'element' → logprob: -6.634305000305176
    5. ' ' → logprob: -6.759305000305176
    6. 'é' → logprob: -7.009305000305176
    7. 'e' → logprob: -8.259305000305176
    8. 'él' → logprob: -8.384305000305176
    9. 'a' → logprob: -8.884305000305176
    10. ' caractère' → logprob: -9.134305000305176

Token 381: ' différent' (ID: 114823)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.032912351191043854
    2. ' =' → logprob: -4.657912254333496
    3. '           ' → logprob: -4.907912254333496
    4. 'if' → logprob: -5.282912254333496
    5. '=' → logprob: -6.157912254333496
    6. 'dp' → logprob: -6.157912254333496
    7. ' dp' → logprob: -6.532912254333496
    8. '               ' → logprob: -6.532912254333496
    9. ' à' → logprob: -7.532912254333496
    10. ',' → logprob: -7.782912254333496

Token 382: ' (' (ID: 350)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5242955088615417
    2. 'if' → logprob: -1.7742955684661865
    3. '           ' → logprob: -2.1492955684661865
    4. ' =' → logprob: -3.2742955684661865
    5. '               ' → logprob: -3.6492955684661865
    6. '=' → logprob: -4.399295330047607
    7. ':' → logprob: -4.774295330047607
    8. ',' → logprob: -5.024295330047607
    9. ' si' → logprob: -5.274295330047607
    10. ' (' → logprob: -5.899295330047607

Token 383: 'ré' (ID: 22830)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.0760118961334229
    2. ' if' → logprob: -1.4510118961334229
    3. 'dp' → logprob: -1.7010118961334229
    4. ' dp' → logprob: -2.576011896133423
    5. '0' → logprob: -2.826011896133423
    6. '1' → logprob: -3.326011896133423
    7. ')' → logprob: -3.951011896133423
    8. 'j' → logprob: -4.451011657714844
    9. 'k' → logprob: -4.576011657714844
    10. '           ' → logprob: -4.701011657714844

Token 384: 'initial' (ID: 17493)
  Prédit: 'initial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'initial' → logprob: -0.4510139524936676
    2. 'sum' → logprob: -1.5760139226913452
    3. 'init' → logprob: -2.5760140419006348
    4. 'p' → logprob: -3.3260140419006348
    5. 'duit' → logprob: -4.326014041900635
    6. 'set' → logprob: -5.326014041900635
    7. 's' → logprob: -5.576014041900635
    8. 'du' → logprob: -5.701014041900635
    9. 'int' → logprob: -5.826014041900635
    10. 'dp' → logprob: -5.951014041900635

Token 385: 'ise' (ID: 1096)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.4996480643749237
    2. 'é' → logprob: -0.9996480941772461
    3. 'e' → logprob: -4.249648094177246
    4. 'ier' → logprob: -5.624648094177246
    5. 'ée' → logprob: -6.124648094177246
    6. 'isé' → logprob: -6.249648094177246
    7. '   ' → logprob: -7.749648094177246
    8. ']' → logprob: -7.999648094177246
    9. 'iser' → logprob: -8.124648094177246
    10. '=' → logprob: -8.124648094177246

Token 386: ' le' (ID: 505)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2468547374010086
    2. ' à' → logprob: -1.9968547821044922
    3. ',' → logprob: -4.246854782104492
    4. 'à' → logprob: -4.621854782104492
    5. 'dp' → logprob: -4.621854782104492
    6. ' ' → logprob: -4.746854782104492
    7. ')' → logprob: -4.871854782104492
    8. '0' → logprob: -5.246854782104492
    9. ' la' → logprob: -5.371854782104492
    10. '   ' → logprob: -5.371854782104492

Token 387: ' bloc' (ID: 51218)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004518415778875351
    2. ' ' → logprob: -5.879518508911133
    3. 'j' → logprob: -7.504518508911133
    4. 'dp' → logprob: -7.629518508911133
    5. ' j' → logprob: -8.754518508911133
    6. 'count' → logprob: -9.254518508911133
    7. ' dp' → logprob: -9.629518508911133
    8. 'bloc' → logprob: -9.754518508911133
    9. ' bloc' → logprob: -10.129518508911133
    10. ')' → logprob: -10.254518508911133

Token 388: ' à' (ID: 1221)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.807490885257721
    2. ' à' → logprob: -1.1824908256530762
    3. '1' → logprob: -1.8074908256530762
    4. 'à' → logprob: -3.807490825653076
    5. ' ' → logprob: -4.682490825653076
    6. ')' → logprob: -4.807490825653076
    7. '           ' → logprob: -4.932490825653076
    8. ',' → logprob: -5.182490825653076
    9. '   ' → logprob: -5.307490825653076
    10. ' =' → logprob: -5.432490825653076

Token 389: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.6087021473795176e-05
    2. ' ' → logprob: -10.000045776367188
    3. '   ' → logprob: -14.625045776367188
    4. '
' → logprob: -16.875045776367188
    5. ')' → logprob: -17.875045776367188
    6. '0' → logprob: -18.375045776367188
    7. '  ' → logprob: -18.625045776367188
    8. '```' → logprob: -19.000045776367188
    9. '=' → logprob: -19.500045776367188
    10. '#' → logprob: -19.500045776367188

Token 390: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.127333340875339e-06
    2. ' ' → logprob: -13.125003814697266
    3. '
' → logprob: -14.625003814697266
    4. '   ' → logprob: -15.000003814697266
    5. 'un' → logprob: -15.250003814697266
    6. 'long' → logprob: -15.375003814697266
    7. '[' → logprob: -15.625003814697266
    8. '0' → logprob: -16.000003814697266
    9. 'length' → logprob: -16.000003814697266
    10. '```' → logprob: -16.625003814697266

Token 391: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03416483849287033
    2. ')
' → logprob: -4.034164905548096
    3. '           ' → logprob: -4.909164905548096
    4. '):
' → logprob: -5.659164905548096
    5. ' )' → logprob: -6.034164905548096
    6. '):' → logprob: -7.159164905548096
    7. '               ' → logprob: -7.659164905548096
    8. ',' → logprob: -8.659164428710938
    9. ' )
' → logprob: -8.784164428710938
    10. ')
' → logprob: -8.784164428710938

Token 392: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6508404016494751
    2. '               ' → logprob: -1.150840401649475
    3. ' dp' → logprob: -2.7758402824401855
    4. ' if' → logprob: -3.2758402824401855
    5. 'dp' → logprob: -3.9008402824401855
    6. ',' → logprob: -4.6508402824401855
    7. ':' → logprob: -4.6508402824401855
    8. ' =' → logprob: -4.7758402824401855
    9. '                   ' → logprob: -6.0258402824401855
    10. ' and' → logprob: -6.1508402824401855

Token 393: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.08638743311166763
    2. ' dp' → logprob: -2.5863873958587646
    3. 'if' → logprob: -5.461387634277344
    4. '           ' → logprob: -6.461387634277344
    5. ' if' → logprob: -6.836387634277344
    6. '               ' → logprob: -8.336387634277344
    7. '0' → logprob: -9.086387634277344
    8. '(dp' → logprob: -9.461387634277344
    9. 'for' → logprob: -9.711387634277344
    10. '	dp' → logprob: -10.586387634277344

Token 394: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.9027791495318525e-05
    2. '[' → logprob: -11.000019073486328
    3. '[j' → logprob: -14.125019073486328
    4. '[I' → logprob: -14.875019073486328
    5. 'i' → logprob: -15.125019073486328
    6. '[
' → logprob: -15.625019073486328
    7. '   ' → logprob: -16.000019073486328
    8. '[next' → logprob: -16.375019073486328
    9. '[n' → logprob: -17.000019073486328
    10. ' [' → logprob: -17.250019073486328

Token 395: ' +' (ID: 659)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '][' → logprob: -0.004629007540643215
    2. '[i' → logprob: -5.504629135131836
    3. ' ][' → logprob: -8.004629135131836
    4. ']' → logprob: -9.254629135131836
    5. '[' → logprob: -9.379629135131836
    6. '[j' → logprob: -11.254629135131836
    7. 'i' → logprob: -12.254629135131836
    8. '   ' → logprob: -12.754629135131836
    9. '[I' → logprob: -13.379629135131836
    10. ']][' → logprob: -13.504629135131836

Token 396: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.4868770196917467e-05
    2. ' ' → logprob: -10.625024795532227
    3. '   ' → logprob: -15.000024795532227
    4. '
' → logprob: -16.375024795532227
    5. '```' → logprob: -17.500024795532227
    6. '][' → logprob: -17.687524795532227
    7. '0' → logprob: -18.062524795532227
    8. '  ' → logprob: -18.687524795532227
    9. '１' → logprob: -18.937524795532227
    10. '`' → logprob: -19.125024795532227

Token 397: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0325924449716695e-05
    2. ' ' → logprob: -11.75001049041748
    3. '0' → logprob: -13.75001049041748
    4. '
' → logprob: -14.12501049041748
    5. '   ' → logprob: -15.50001049041748
    6. '```' → logprob: -16.625009536743164
    7. '

' → logprob: -17.687509536743164
    8. '  ' → logprob: -17.812509536743164
    9. '``' → logprob: -17.875009536743164
    10. '`' → logprob: -18.062509536743164

Token 398: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.014245301485061646
    2. '[' → logprob: -4.264245510101318
    3. ']' → logprob: -10.01424503326416
    4. '0' → logprob: -11.26424503326416
    5. ' ][' → logprob: -11.63924503326416
    6. '[j' → logprob: -11.88924503326416
    7. ' [' → logprob: -13.76424503326416
    8. 'j' → logprob: -13.88924503326416
    9. '"][' → logprob: -14.13924503326416
    10. '
' → logprob: -14.26424503326416

Token 399: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0013282144209370017
    2. '0' → logprob: -6.626327991485596
    3. '
' → logprob: -14.501328468322754
    4. ' ' → logprob: -14.501328468322754
    5. '   ' → logprob: -15.001328468322754
    6. '```' → logprob: -15.501328468322754
    7. ']' → logprob: -15.626328468322754
    8. 'j' → logprob: -16.126327514648438
    9. '`' → logprob: -16.376327514648438
    10. '(' → logprob: -16.751327514648438

Token 400: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.002816766733303666
    2. ']+=' → logprob: -5.877816677093506
    3. ' ]' → logprob: -11.752817153930664
    4. ']+' → logprob: -13.252817153930664
    5. '"]' → logprob: -14.252817153930664
    6. '+]' → logprob: -15.002817153930664
    7. ']]' → logprob: -15.252817153930664
    8. '']' → logprob: -15.627817153930664
    9. '`]' → logprob: -15.627817153930664
    10. ' ' → logprob: -15.752817153930664

Token 401: ' =' (ID: 314)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.1137591004371643
    2. '=' → logprob: -2.2387590408325195
    3. ']+=' → logprob: -7.6137590408325195
    4. ' =' → logprob: -8.61375904083252
    5. '=(' → logprob: -8.73875904083252
    6. ' +=' → logprob: -9.36375904083252
    7. '+=(' → logprob: -11.86375904083252
    8. '%=' → logprob: -12.48875904083252
    9. ']' → logprob: -13.86375904083252
    10. '+' → logprob: -14.11375904083252

Token 402: ' (' (ID: 350)
  Prédit: '(dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.0001968649885384366
    2. '(' → logprob: -8.87519645690918
    3. ' (' → logprob: -10.50019645690918
    4. '(dd' → logprob: -11.50019645690918
    5. '(df' → logprob: -11.75019645690918
    6. '(dx' → logprob: -13.12519645690918
    7. '   ' → logprob: -13.75019645690918
    8. '(dl' → logprob: -14.00019645690918
    9. '(ans' → logprob: -14.50019645690918
    10. '(pd' → logprob: -14.50019645690918

Token 403: 'dp' (ID: 19037)
  Prédit: 'dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.03446294739842415
    2. '(dp' → logprob: -3.4094629287719727
    3. ' dp' → logprob: -7.159462928771973
    4. '	dp' → logprob: -11.159462928771973
    5. ' (' → logprob: -11.534462928771973
    6. '           ' → logprob: -12.159462928771973
    7. '   ' → logprob: -13.284462928771973
    8. '(' → logprob: -13.659462928771973
    9. '_dp' → logprob: -13.659462928771973
    10. '               ' → logprob: -13.784462928771973

Token 404: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00017421995289623737
    2. 'i' → logprob: -9.000174522399902
    3. '[' → logprob: -10.000174522399902
    4. '[I' → logprob: -12.750174522399902
    5. ' i' → logprob: -15.250174522399902
    6. '][' → logprob: -15.375174522399902
    7. ')' → logprob: -15.500174522399902
    8. '[
' → logprob: -15.750174522399902
    9. '<|end|>' → logprob: -16.000173568725586
    10. '[ip' → logprob: -16.000173568725586

Token 405: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.14378729462623596
    2. '][' → logprob: -2.018787384033203
    3. ' +' → logprob: -7.393787384033203
    4. '[' → logprob: -8.518787384033203
    5. 'i' → logprob: -9.018787384033203
    6. '[i' → logprob: -9.893787384033203
    7. ']' → logprob: -10.143787384033203
    8. ' ][' → logprob: -10.143787384033203
    9. ')[' → logprob: -11.393787384033203
    10. '+i' → logprob: -11.518787384033203

Token 406: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00031294001382775605
    2. ' ' → logprob: -8.125312805175781
    3. '0' → logprob: -12.312812805175781
    4. 'dp' → logprob: -12.625312805175781
    5. '   ' → logprob: -13.437812805175781
    6. '[' → logprob: -13.750312805175781
    7. 'i' → logprob: -14.062812805175781
    8. ' dp' → logprob: -14.250312805175781
    9. '[i' → logprob: -14.437812805175781
    10. '(i' → logprob: -14.500312805175781

Token 407: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.28696703910827637
    2. '0' → logprob: -1.4119670391082764
    3. 'j' → logprob: -5.1619672775268555
    4. ' ' → logprob: -10.911967277526855
    5. '[' → logprob: -11.161967277526855
    6. '[j' → logprob: -11.536967277526855
    7. ' j' → logprob: -12.224467277526855
    8. '   ' → logprob: -12.286967277526855
    9. '+' → logprob: -12.911967277526855
    10. '```' → logprob: -13.411967277526855

Token 408: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0011023490224033594
    2. '[' → logprob: -6.876102447509766
    3. ' ][' → logprob: -10.126102447509766
    4. ']' → logprob: -10.626102447509766
    5. ')[' → logprob: -13.001102447509766
    6. '"][' → logprob: -14.126102447509766
    7. ' ' → logprob: -14.626102447509766
    8. '   ' → logprob: -14.751102447509766
    9. '0' → logprob: -15.001102447509766
    10. ''][' → logprob: -15.751102447509766

Token 409: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -14.500000953674316
    3. 'j' → logprob: -15.500000953674316
    4. '[' → logprob: -16.125001907348633
    5. '   ' → logprob: -16.250001907348633
    6. '
' → logprob: -17.250001907348633
    7. '```' → logprob: -18.062501907348633
    8. '۰' → logprob: -18.375001907348633
    9. '  ' → logprob: -18.750001907348633
    10. '1' → logprob: -18.750001907348633

Token 410: ']' (ID: 60)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.16266588866710663
    2. '+' → logprob: -1.912665843963623
    3. ']' → logprob: -6.037665843963623
    4. ']+' → logprob: -10.037666320800781
    5. ' ' → logprob: -12.912666320800781
    6. ' ]' → logprob: -13.787666320800781
    7. ' plus' → logprob: -14.162666320800781
    8. ')' → logprob: -14.162666320800781
    9. ' +
' → logprob: -14.287666320800781
    10. ' ' → logprob: -14.537666320800781

Token 411: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.16022492945194244
    2. ' +' → logprob: -1.9102249145507812
    3. '+
' → logprob: -14.910224914550781
    4. '+=' → logprob: -15.410224914550781
    5. '+[' → logprob: -16.91022491455078
    6. '＋' → logprob: -17.41022491455078
    7. ' +
' → logprob: -17.66022491455078
    8. ' ' → logprob: -17.78522491455078
    9. ' +=' → logprob: -18.28522491455078
    10. ' ' → logprob: -18.41022491455078

Token 412: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0004378214362077415
    2. ' dp' → logprob: -7.7504377365112305
    3. '(dp' → logprob: -12.37543773651123
    4. '	dp' → logprob: -14.12543773651123
    5. 'sum' → logprob: -14.62543773651123
    6. '   ' → logprob: -14.87543773651123
    7. '           ' → logprob: -15.00043773651123
    8. 'd' → logprob: -15.12543773651123
    9. '_dp' → logprob: -15.12543773651123
    10. '
' → logprob: -16.625438690185547

Token 413: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00021033499797340482
    2. 'i' → logprob: -8.500210762023926
    3. '[' → logprob: -12.375210762023926
    4. '[
' → logprob: -13.250210762023926
    5. '```' → logprob: -14.500210762023926
    6. ' i' → logprob: -16.50020980834961
    7. '[I' → logprob: -17.12520980834961
    8. '
' → logprob: -17.50020980834961
    9. ' [' → logprob: -17.62520980834961
    10. '[j' → logprob: -18.12520980834961

Token 414: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.04181765019893646
    2. '[i' → logprob: -3.2918176651000977
    3. '[' → logprob: -5.666817665100098
    4. ']' → logprob: -9.041817665100098
    5. 'i' → logprob: -9.541817665100098
    6. ' ][' → logprob: -9.791817665100098
    7. '```' → logprob: -11.416817665100098
    8. '[
' → logprob: -11.541817665100098
    9. ')[' → logprob: -11.916817665100098
    10. ' [' → logprob: -12.041817665100098

Token 415: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -7.226628895296017e-06
    2. ' j' → logprob: -11.875007629394531
    3. '[j' → logprob: -16.12500762939453
    4. '<|end|>' → logprob: -16.37500762939453
    5. '	j' → logprob: -17.37500762939453
    6. ' ' → logprob: -17.62500762939453
    7. '0' → logprob: -19.00000762939453
    8. ',j' → logprob: -19.12500762939453
    9. '_j' → logprob: -19.25000762939453
    10. '$j' → logprob: -19.75000762939453

Token 416: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0005710251862183213
    2. ')' → logprob: -8.125571250915527
    3. ']' → logprob: -8.875571250915527
    4. ' ])' → logprob: -9.000571250915527
    5. '*' → logprob: -12.250571250915527
    6. ' *' → logprob: -13.375571250915527
    7. ' )' → logprob: -13.500571250915527
    8. '   ' → logprob: -13.750571250915527
    9. '))' → logprob: -14.000571250915527
    10. '])
' → logprob: -14.625571250915527

Token 417: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.14483661949634552
    2. ' %' → logprob: -2.019836664199829
    3. ')' → logprob: -6.26983642578125
    4. ')%' → logprob: -8.39483642578125
    5. '%n' → logprob: -11.51983642578125
    6. '%d' → logprob: -12.01983642578125
    7. '%c' → logprob: -12.14483642578125
    8. ' )' → logprob: -12.64483642578125
    9. '           ' → logprob: -13.26983642578125
    10. '%i' → logprob: -13.39483642578125

Token 418: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -2.4391956685576588e-05
    2. ' M' → logprob: -10.625024795532227
    3. '   ' → logprob: -16.625024795532227
    4. ' ' → logprob: -19.125024795532227
    5. '  ' → logprob: -19.375024795532227
    6. '	M' → logprob: -20.000024795532227
    7. '```' → logprob: -20.250024795532227
    8. 'm' → logprob: -20.625024795532227
    9. '
' → logprob: -20.750024795532227
    10. 'М' → logprob: -21.500024795532227

Token 419: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.061286892741918564
    2. '
' → logprob: -3.0612869262695312
    3. '       ' → logprob: -5.436286926269531
    4. ' 
' → logprob: -6.311286926269531
    5. '<|end|>' → logprob: -6.311286926269531
    6. '            
' → logprob: -6.436286926269531
    7. '  
' → logprob: -7.561286926269531
    8. '          ' → logprob: -7.561286926269531
    9. ')' → logprob: -7.811286926269531
    10. ' ' → logprob: -8.561286926269531

Token 420: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.020490387454628944
    2. '       ' → logprob: -4.7704901695251465
    3. '
' → logprob: -5.7704901695251465
    4. ' ' → logprob: -6.1454901695251465
    5. '<|end|>' → logprob: -6.7704901695251465
    6. '        ' → logprob: -7.3954901695251465
    7. '		' → logprob: -7.5204901695251465
    8. ')' → logprob: -7.5204901695251465
    9. '            ' → logprob: -7.6454901695251465
    10. ',' → logprob: -7.6454901695251465

Token 421: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5776700973510742
    2. 'if' → logprob: -0.8276700973510742
    3. ' if' → logprob: -6.952670097351074
    4. '       ' → logprob: -7.827670097351074
    5. '#' (adapté à ' #') → logprob: -8.202670097351074
    6. '            
' → logprob: -10.577670097351074
    7. '          ' → logprob: -10.952670097351074
    8. 'for' → logprob: -10.952670097351074
    9. '   ' → logprob: -11.577670097351074
    10. '```' → logprob: -11.952670097351074

Token 422: ' Ajouter' (ID: 165754)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00020389800192788243
    2. ' if' → logprob: -8.875204086303711
    3. 'Si' → logprob: -10.250204086303711
    4. '           ' → logprob: -11.625204086303711
    5. 'If' → logprob: -11.625204086303711
    6. 'Ajouter' → logprob: -12.250204086303711
    7. 'si' → logprob: -12.375204086303711
    8. '#' → logprob: -14.750204086303711
    9. 'elif' → logprob: -14.750204086303711
    10. '1' → logprob: -15.250204086303711

Token 423: ' le' (ID: 505)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.09965965151786804
    2. '(j' → logprob: -3.5996596813201904
    3. 'un' → logprob: -3.5996596813201904
    4. ' j' → logprob: -3.8496596813201904
    5. ' (' → logprob: -4.599659442901611
    6. '1' → logprob: -5.474659442901611
    7. ' ' → logprob: -6.974659442901611
    8. '(' → logprob: -7.349659442901611
    9. '   ' → logprob: -7.724659442901611
    10. 'j' → logprob: -7.849659442901611

Token 424: ' même' (ID: 9679)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.1880197525024414
    2. '(j' → logprob: -1.4380197525024414
    3. 'dp' → logprob: -1.8130197525024414
    4. ' même' → logprob: -2.0630197525024414
    5. 'm' → logprob: -3.0630197525024414
    6. 'same' → logprob: -3.5630197525024414
    7. ' j' → logprob: -3.6880197525024414
    8. 'nou' → logprob: -4.813019752502441
    9. ' (' → logprob: -5.063019752502441
    10. '(dp' → logprob: -5.063019752502441

Token 425: ' élément' (ID: 99627)
  Prédit: 'element'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'element' → logprob: -0.45069757103919983
    2. 'élé' → logprob: -1.4506975412368774
    3. ' élément' → logprob: -2.825697660446167
    4. 'token' → logprob: -3.700697660446167
    5. ' element' → logprob: -4.325697422027588
    6. 'j' → logprob: -5.075697422027588
    7. 'elem' → logprob: -5.325697422027588
    8. 'if' → logprob: -5.450697422027588
    9. '+' → logprob: -5.950697422027588
    10. ' j' → logprob: -6.200697422027588

Token 426: ' actuel' (ID: 113646)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.21870949864387512
    2. ' if' → logprob: -1.7187094688415527
    3. '           ' → logprob: -4.468709468841553
    4. '[j' → logprob: -7.093709468841553
    5. ',' → logprob: -7.218709468841553
    6. 'and' → logprob: -7.968709468841553
    7. '               ' → logprob: -8.093709945678711
    8. '	if' → logprob: -8.093709945678711
    9. '(j' → logprob: -8.093709945678711
    10. '          ' → logprob: -8.468709945678711

Token 427: ',' (ID: 11)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7376210689544678
    2. ' if' → logprob: -0.7376210689544678
    3. '           ' → logprob: -3.2376210689544678
    4. ',' → logprob: -6.737621307373047
    5. '          ' → logprob: -7.862621307373047
    6. '<|end|>' → logprob: -7.987621307373047
    7. '		' → logprob: -8.112621307373047
    8. 'and' → logprob: -8.487621307373047
    9. '	if' → logprob: -8.612621307373047
    10. ' ' → logprob: -8.737621307373047

Token 428: ' si' (ID: 1784)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.1067495197057724
    2. ' if' → logprob: -2.4817495346069336
    3. '           ' → logprob: -4.231749534606934
    4. '               ' → logprob: -6.731749534606934
    5. '   ' → logprob: -7.856749534606934
    6. ' ' → logprob: -8.606749534606934
    7. ' si' → logprob: -8.856749534606934
    8. '```' → logprob: -8.856749534606934
    9. '       ' → logprob: -8.981749534606934
    10. '            
' → logprob: -9.231749534606934

Token 429: ' la' (ID: 557)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.006716317031532526
    2. ' j' → logprob: -5.006716251373291
    3. '	j' → logprob: -14.63171672821045
    4. '   ' → logprob: -15.50671672821045
    5. ' ' → logprob: -15.88171672821045
    6. '_j' → logprob: -16.506715774536133
    7. '(j' → logprob: -16.506715774536133
    8. '0' → logprob: -16.756715774536133
    9. ' ' → logprob: -17.256715774536133
    10. '1' → logprob: -17.256715774536133

Token 430: ' limite' (ID: 48939)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.11282677948474884
    2. ' j' → logprob: -2.2378268241882324
    3. '	j' → logprob: -13.737826347351074
    4. 'J' → logprob: -13.862826347351074
    5. '_j' → logprob: -13.987826347351074
    6. '[j' → logprob: -14.987826347351074
    7. '   ' → logprob: -15.612826347351074
    8. '=j' → logprob: -15.737826347351074
    9. 'i' → logprob: -15.862826347351074
    10. '(j' → logprob: -16.11282730102539

Token 431: ' de' (ID: 334)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.052067942917346954
    2. ' j' → logprob: -3.427067995071411
    3. 'n' → logprob: -4.427067756652832
    4. 'not' → logprob: -5.927067756652832
    5. '[j' → logprob: -6.802067756652832
    6. ' not' → logprob: -7.552067756652832
    7. '_j' → logprob: -7.802067756652832
    8. ' n' → logprob: -7.927067756652832
    9. '(j' → logprob: -8.302067756652832
    10. ':j' → logprob: -9.052067756652832

Token 432: ' répét' (ID: 156936)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0025031249970197678
    2. ' j' → logprob: -6.002502918243408
    3. 'k' → logprob: -10.877503395080566
    4. 'bloc' → logprob: -13.377503395080566
    5. ' répét' → logprob: -13.377503395080566
    6. 'con' → logprob: -13.877503395080566
    7. '```' → logprob: -14.127503395080566
    8. 're' → logprob: -14.377503395080566
    9. ' rép' → logprob: -14.877503395080566
    10. 'ré' → logprob: -14.877503395080566

Token 433: 'ition' (ID: 868)
  Prédit: 'ition'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ition' → logprob: -0.03468726575374603
    2. 'tion' → logprob: -3.5346872806549072
    3. 'ation' → logprob: -5.659687042236328
    4. 't' → logprob: -7.284687042236328
    5. 'itions' → logprob: -8.159687042236328
    6. 'ion' → logprob: -8.284687042236328
    7. 'k' → logprob: -10.409687042236328
    8. 's' → logprob: -10.534687042236328
    9. 'ence' → logprob: -10.534687042236328
    10. 'ution' → logprob: -10.784687042236328

Token 434: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.06303345412015915
    2. ' n' → logprob: -3.18803334236145
    3. 'j' → logprob: -4.438033580780029
    4. '>' → logprob: -5.813033580780029
    5. 'not' → logprob: -6.563033580780029
    6. 'est' → logprob: -6.688033580780029
    7. ' j' → logprob: -7.438033580780029
    8. 'n't' → logprob: -7.563033580780029
    9. '[j' → logprob: -7.688033580780029
    10. '_j' → logprob: -9.188033103942871

Token 435: ''est' (ID: 6616)
  Prédit: ''est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''est' → logprob: -0.10195904970169067
    2. ''' → logprob: -3.476958990097046
    3. 'est' → logprob: -4.351959228515625
    4. 'u' → logprob: -4.851959228515625
    5. 'n' → logprob: -4.976959228515625
    6. ''>' → logprob: -5.101959228515625
    7. 'on' → logprob: -5.601959228515625
    8. '```' → logprob: -5.851959228515625
    9. 'ull' → logprob: -5.976959228515625
    10. '’est' → logprob: -6.226959228515625

Token 436: ' pas' (ID: 2173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.042188115417957306
    2. 'j' → logprob: -3.2921881675720215
    3. ' pas' → logprob: -6.1671881675720215
    4. '0' → logprob: -6.4171881675720215
    5. 'not' → logprob: -8.542187690734863
    6. '(j' → logprob: -10.292187690734863
    7. '1' → logprob: -10.667187690734863
    8. '_pas' → logprob: -10.792187690734863
    9. '/j' → logprob: -11.167187690734863
    10. 't' → logprob: -11.167187690734863

Token 437: ' atte' (ID: 43312)
  Prédit: 'atte'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atte' → logprob: -0.007194592617452145
    2. ' atte' → logprob: -5.882194519042969
    3. 'j' → logprob: -6.257194519042969
    4. 'enc' → logprob: -7.132194519042969
    5. ' dépass' → logprob: -7.507194519042969
    6. 'pas' → logprob: -7.882194519042969
    7. 'jam' → logprob: -8.882194519042969
    8. ' ' → logprob: -9.132194519042969
    9. 'at' → logprob: -9.382194519042969
    10. 'dé' → logprob: -9.382194519042969

Token 438: 'inte' (ID: 18750)
  Prédit: 'inte'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inte' → logprob: -0.0006371428607963026
    2. 'nte' → logprob: -7.875637054443359
    3. 'int' → logprob: -9.25063705444336
    4. 'ite' → logprob: -9.87563705444336
    5. 'ainte' → logprob: -10.37563705444336
    6. 'unte' → logprob: -10.50063705444336
    7. 'e' → logprob: -11.75063705444336
    8. 'in' → logprob: -11.87563705444336
    9. '#' → logprob: -11.87563705444336
    10. 'a' → logprob: -12.00063705444336

Token 439: '
' (ID: 198)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.309686541557312
    2. 'and' → logprob: -2.0596866607666016
    3. '           ' → logprob: -2.1846866607666016
    4. ' if' → logprob: -3.8096866607666016
    5. 'if' → logprob: -5.934686660766602
    6. ',' → logprob: -6.934686660766602
    7. ' ' → logprob: -9.684686660766602
    8. '0' → logprob: -9.684686660766602
    9. '   ' → logprob: -9.684686660766602
    10. '       ' → logprob: -9.934686660766602

Token 440: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14716380834579468
    2. ' if' → logprob: -2.0221638679504395
    3. 'if' → logprob: -5.6471638679504395
    4. '<|end|>' → logprob: -7.3971638679504395
    5. '<|end|>' → logprob: -9.897163391113281
    6. '            
' → logprob: -10.272163391113281
    7. ',' → logprob: -10.397163391113281
    8. '       ' → logprob: -10.397163391113281
    9. 'and' → logprob: -10.522163391113281
    10. '          ' → logprob: -10.647163391113281

Token 441: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.011670015752315521
    2. ' if' → logprob: -4.511670112609863
    3. '           ' → logprob: -7.386670112609863
    4. '               ' → logprob: -14.386670112609863
    5. 'If' → logprob: -14.636670112609863
    6. '            
' → logprob: -14.886670112609863
    7. ' ' → logprob: -15.386670112609863
    8. '       ' → logprob: -15.386670112609863
    9. '            ' → logprob: -15.761670112609863
    10. '   ' → logprob: -15.761670112609863

Token 442: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.000804745068307966
    2. ' j' → logprob: -7.125804901123047
    3. '	j' → logprob: -16.125804901123047
    4. '(j' → logprob: -16.625804901123047
    5. '   ' → logprob: -16.875804901123047
    6. '_j' → logprob: -17.875804901123047
    7. '$j' → logprob: -18.500804901123047
    8. '[j' → logprob: -18.875804901123047
    9. ' ' → logprob: -19.625804901123047
    10. ' ' → logprob: -19.750804901123047

Token 443: ' !=' (ID: 1666)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<' → logprob: -0.09114041179418564
    2. ' <' → logprob: -3.0911405086517334
    3. '+' → logprob: -3.2161405086517334
    4. ' +' → logprob: -6.841140270233154
    5. '<len' → logprob: -9.341140747070312
    6. '>' → logprob: -9.591140747070312
    7. '<n' → logprob: -9.966140747070312
    8. '<int' → logprob: -10.216140747070312
    9. '<K' → logprob: -10.341140747070312
    10. ' ' → logprob: -10.591140747070312

Token 444: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -6.957014556974173e-05
    2. '0' → logprob: -9.625069618225098
    3. ' k' → logprob: -12.625069618225098
    4. ' ' → logprob: -15.750069618225098
    5. '   ' → logprob: -18.12506866455078
    6. 'j' → logprob: -18.12506866455078
    7. '  ' → logprob: -18.37506866455078
    8. '	k' → logprob: -18.50006866455078
    9. '(k' → logprob: -19.12506866455078
    10. 'K' → logprob: -19.12506866455078

Token 445: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0322103276848793
    2. ':
' → logprob: -3.657210350036621
    3. ' and' → logprob: -5.782210350036621
    4. ' :' → logprob: -6.407210350036621
    5. 'and' → logprob: -7.282210350036621
    6. '0' → logprob: -8.782210350036621
    7. ' :
' → logprob: -8.782210350036621
    8. ' ' → logprob: -9.782210350036621
    9. '):' → logprob: -10.407210350036621
    10. ')' → logprob: -10.532210350036621

Token 446: '               ' (ID: 506)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6114335656166077
    2. ':
' → logprob: -1.361433506011963
    3. '               ' → logprob: -1.611433506011963
    4. ' dp' → logprob: -7.611433506011963
    5. 'dp' → logprob: -8.361433982849121
    6. ' and' → logprob: -8.611433982849121
    7. ' :
' → logprob: -9.111433982849121
    8. ' :' → logprob: -9.111433982849121
    9. '	dp' → logprob: -9.111433982849121
    10. '           ' → logprob: -9.986433982849121

Token 447: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.07889353483915329
    2. ' dp' → logprob: -2.5788934230804443
    3. '               ' → logprob: -13.203893661499023
    4. '	dp' → logprob: -13.578893661499023
    5. '                   ' → logprob: -15.078893661499023
    6. '(dp' → logprob: -15.703893661499023
    7. '_dp' → logprob: -16.953893661499023
    8. ' ' → logprob: -16.953893661499023
    9. '   ' → logprob: -17.078893661499023
    10. ' ' → logprob: -17.328893661499023

Token 448: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.1160349458805285e-05
    2. 'i' → logprob: -12.125011444091797
    3. '[' → logprob: -12.250011444091797
    4. ' [' → logprob: -15.250011444091797
    5. '(i' → logprob: -16.625011444091797
    6. '```' → logprob: -16.625011444091797
    7. '[I' → logprob: -16.875011444091797
    8. 's' → logprob: -17.000011444091797
    9. '   ' → logprob: -17.000011444091797
    10. '           ' → logprob: -17.250011444091797

Token 449: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3224952816963196
    2. ' +' → logprob: -1.5724952220916748
    3. '][' → logprob: -2.697495222091675
    4. '[' → logprob: -7.447495460510254
    5. '1' → logprob: -10.447495460510254
    6. '[i' → logprob: -10.447495460510254
    7. ' [' → logprob: -10.822495460510254
    8. '   ' → logprob: -10.822495460510254
    9. ' ][' → logprob: -10.947495460510254
    10. ' ' → logprob: -11.322495460510254

Token 450: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.176947600673884e-05
    2. ' ' → logprob: -10.750021934509277
    3. '   ' → logprob: -15.937521934509277
    4. '```' → logprob: -16.93752098083496
    5. '2' → logprob: -17.31252098083496
    6. '  ' → logprob: -18.00002098083496
    7. '
' → logprob: -18.25002098083496
    8. '0' → logprob: -18.43752098083496
    9. '+' → logprob: -18.56252098083496
    10. '    ' → logprob: -19.12502098083496

Token 451: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2113979209971149e-05
    2. ' ' → logprob: -11.375012397766113
    3. '```' → logprob: -15.625012397766113
    4. '
' → logprob: -16.500011444091797
    5. '   ' → logprob: -16.625011444091797
    6. '+' → logprob: -17.000011444091797
    7. '１' → logprob: -17.312511444091797
    8. '۱' → logprob: -17.687511444091797
    9. '2' → logprob: -17.812511444091797
    10. '0' → logprob: -18.000011444091797

Token 452: '][' (ID: 2696)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.0008253490086644888
    2. '][' → logprob: -7.12582540512085
    3. '[' → logprob: -11.125824928283691
    4. '[i' → logprob: -12.750824928283691
    5. '[js' → logprob: -14.250824928283691
    6. ')[' → logprob: -14.375824928283691
    7. '[J' → logprob: -14.375824928283691
    8. ' [' → logprob: -14.875824928283691
    9. '[
' → logprob: -15.750824928283691
    10. '[[' → logprob: -16.125825881958008

Token 453: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -9.555654105497524e-05
    2. '[j' → logprob: -9.37509536743164
    3. ' j' → logprob: -11.87509536743164
    4. '(j' → logprob: -12.62509536743164
    5. '	j' → logprob: -16.00009536743164
    6. '$j' → logprob: -16.25009536743164
    7. ':j' → logprob: -16.87509536743164
    8. ',j' → logprob: -16.87509536743164
    9. '   ' → logprob: -17.25009536743164
    10. '{' → logprob: -17.37509536743164

Token 454: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0004886920796707273
    2. ' +' → logprob: -7.625488758087158
    3. '1' → logprob: -14.87548828125
    4. '+
' → logprob: -15.75048828125
    5. '＋' → logprob: -16.87548828125
    6. '+j' → logprob: -17.00048828125
    7. '[' → logprob: -17.37548828125
    8. '+]' → logprob: -17.62548828125
    9. ']+' → logprob: -17.87548828125
    10. ']' → logprob: -17.87548828125

Token 455: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.8889261304575484e-06
    2. ' ' → logprob: -12.500003814697266
    3. '   ' → logprob: -16.875003814697266
    4. '```' → logprob: -16.875003814697266
    5. '0' → logprob: -17.625003814697266
    6. '<|end|>' → logprob: -17.687503814697266
    7. '2' → logprob: -17.750003814697266
    8. '۱' → logprob: -18.500003814697266
    9. ']' → logprob: -18.500003814697266
    10. '  ' → logprob: -18.562503814697266

Token 456: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.981667537620524e-06
    2. ' ' → logprob: -13.250001907348633
    3. '```' → logprob: -17.687501907348633
    4. '   ' → logprob: -18.000001907348633
    5. '2' → logprob: -18.375001907348633
    6. '১' → logprob: -18.812501907348633
    7. '۱' → logprob: -18.812501907348633
    8. '
' → logprob: -18.937501907348633
    9. '१' → logprob: -18.937501907348633
    10. '0' → logprob: -19.000001907348633

Token 457: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0008875182829797268
    2. '=' → logprob: -7.250887393951416
    3. ']=' → logprob: -9.000887870788574
    4. ' =' → logprob: -10.750887870788574
    5. ']+=' → logprob: -11.000887870788574
    6. ' ]' → logprob: -11.375887870788574
    7. ')' → logprob: -12.375887870788574
    8. ']=(' → logprob: -15.125887870788574
    9. '           ' → logprob: -16.750886917114258
    10. '+=' → logprob: -16.750886917114258

Token 458: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.005240037105977535
    2. ' =' → logprob: -5.255239963531494
    3. '+=' → logprob: -12.005240440368652
    4. ' +=' → logprob: -16.755239486694336
    5. '   ' → logprob: -18.005239486694336
    6. '=(' → logprob: -18.380239486694336
    7. '           ' → logprob: -18.755239486694336
    8. ' ' → logprob: -18.880239486694336
    9. ']' → logprob: -19.005239486694336
    10. '=
' → logprob: -19.130239486694336

Token 459: ' (' (ID: 350)
  Prédit: '(dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.0619727298617363
    2. ' (' → logprob: -2.8119726181030273
    3. '(df' → logprob: -13.061972618103027
    4. '(' → logprob: -14.561972618103027
    5. '   ' → logprob: -15.311972618103027
    6. '(dd' → logprob: -15.311972618103027
    7. '(dx' → logprob: -15.436972618103027
    8. ' ' → logprob: -15.436972618103027
    9. '(dc' → logprob: -15.936972618103027
    10. '(pid' → logprob: -15.936972618103027

Token 460: 'dp' (ID: 19037)
  Prédit: 'dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -6.182190554682165e-05
    2. '(dp' → logprob: -9.750061988830566
    3. ' dp' → logprob: -12.625061988830566
    4. '	dp' → logprob: -16.37506103515625
    5. '   ' → logprob: -18.25006103515625
    6. 'd' → logprob: -18.62506103515625
    7. '_dp' → logprob: -19.12506103515625
    8. '.dp' → logprob: -20.37506103515625
    9. '(' → logprob: -20.37506103515625
    10. ' (' → logprob: -21.12506103515625

Token 461: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -8.625866030342877e-05
    2. 'i' → logprob: -9.375085830688477
    3. '[' → logprob: -13.750085830688477
    4. '[I' → logprob: -15.875085830688477
    5. '   ' → logprob: -17.625085830688477
    6. 'I' → logprob: -17.750085830688477
    7. '[user' → logprob: -18.000085830688477
    8. ' i' → logprob: -18.250085830688477
    9. '[j' → logprob: -18.250085830688477
    10. '```' → logprob: -18.250085830688477

Token 462: ' +' (ID: 659)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0678919330239296
    2. '+' → logprob: -3.067891836166382
    3. '[i' → logprob: -4.192892074584961
    4. ' +' → logprob: -5.567892074584961
    5. ' ][' → logprob: -9.192892074584961
    6. '   ' → logprob: -10.942892074584961
    7. ']' → logprob: -11.067892074584961
    8. ' ' → logprob: -11.067892074584961
    9. '+i' → logprob: -11.317892074584961
    10. ']+' → logprob: -11.692892074584961

Token 463: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00019185843120794743
    2. ' ' → logprob: -8.875191688537598
    3. '+' → logprob: -10.750191688537598
    4. '[i' → logprob: -10.875191688537598
    5. 'i' → logprob: -11.625191688537598
    6. '   ' → logprob: -14.250191688537598
    7. '```' → logprob: -15.000191688537598
    8. '
' → logprob: -15.125191688537598
    9. ' +' → logprob: -15.250191688537598
    10. '(i' → logprob: -15.375191688537598

Token 464: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4259644558478612e-05
    2. 'i' → logprob: -12.250014305114746
    3. '[i' → logprob: -12.500014305114746
    4. ' ' → logprob: -12.625014305114746
    5. '+' → logprob: -14.125014305114746
    6. '
' → logprob: -14.812514305114746
    7. '```' → logprob: -15.625014305114746
    8. '   ' → logprob: -15.750014305114746
    9. '(i' → logprob: -16.12501335144043
    10. 'j' → logprob: -16.37501335144043

Token 465: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.004718245472759008
    2. '[i' → logprob: -5.37971830368042
    3. ' ][' → logprob: -10.004717826843262
    4. '[j' → logprob: -10.879717826843262
    5. ']' → logprob: -11.004717826843262
    6. '   ' → logprob: -11.629717826843262
    7. '[' → logprob: -12.629717826843262
    8. ')[' → logprob: -13.379717826843262
    9. ' ' → logprob: -14.504717826843262
    10. ' [' → logprob: -14.629717826843262

Token 466: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -3.106736039626412e-05
    2. ' j' → logprob: -11.375031471252441
    3. 'i' → logprob: -11.625031471252441
    4. '0' → logprob: -12.000031471252441
    5. '[j' → logprob: -12.750031471252441
    6. '][' → logprob: -14.000031471252441
    7. ' ' → logprob: -15.625031471252441
    8. '   ' → logprob: -15.625031471252441
    9. '```' → logprob: -16.000030517578125
    10. '	j' → logprob: -16.375030517578125

Token 467: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.20142892003059387
    2. ' +' → logprob: -1.7014288902282715
    3. '][' → logprob: -11.45142936706543
    4. '   ' → logprob: -13.82642936706543
    5. ']+' → logprob: -13.95142936706543
    6. '[' → logprob: -14.20142936706543
    7. ' ' → logprob: -14.45142936706543
    8. '1' → logprob: -14.45142936706543
    9. '+j' → logprob: -14.70142936706543
    10. '+
' → logprob: -15.32642936706543

Token 468: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00013905855303164572
    2. ' ' → logprob: -9.000139236450195
    3. '0' → logprob: -12.250139236450195
    4. '2' → logprob: -13.000139236450195
    5. '   ' → logprob: -13.000139236450195
    6. '```' → logprob: -13.812639236450195
    7. '
' → logprob: -14.125139236450195
    8. '+' → logprob: -14.312639236450195
    9. '11' → logprob: -15.062639236450195
    10. ']' → logprob: -15.375139236450195

Token 469: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.822646693966817e-06
    2. ' ' → logprob: -12.000007629394531
    3. '   ' → logprob: -15.000007629394531
    4. 'j' → logprob: -15.000007629394531
    5. '+' → logprob: -15.125007629394531
    6. '0' → logprob: -15.812507629394531
    7. '```' → logprob: -16.12500762939453
    8. '
' → logprob: -16.43750762939453
    9. ']' → logprob: -16.87500762939453
    10. '2' → logprob: -17.12500762939453

Token 470: ']' (ID: 60)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.04420270770788193
    2. '+' → logprob: -3.1692028045654297
    3. ']' → logprob: -6.79420280456543
    4. '[' → logprob: -10.04420280456543
    5. ']+' → logprob: -10.29420280456543
    6. ' ' → logprob: -13.04420280456543
    7. ' ' → logprob: -13.54420280456543
    8. '][' → logprob: -14.79420280456543
    9. '```' → logprob: -15.29420280456543
    10. '
' → logprob: -15.29420280456543

Token 471: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.3132619559764862
    2. '+' → logprob: -1.3132619857788086
    3. ' ' → logprob: -16.063261032104492
    4. '+
' → logprob: -17.438261032104492
    5. ' ' → logprob: -17.813261032104492
    6. ' +
' → logprob: -18.438261032104492
    7. '[' → logprob: -19.188261032104492
    8. '+j' → logprob: -19.313261032104492
    9. '＋' → logprob: -19.563261032104492
    10. '+d' → logprob: -19.563261032104492

Token 472: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0024756586644798517
    2. ' dp' → logprob: -6.002475738525391
    3. '	dp' → logprob: -17.12747573852539
    4. '(dp' → logprob: -19.37747573852539
    5. '_dp' → logprob: -19.75247573852539
    6. 'd' → logprob: -19.87747573852539
    7. ' ' → logprob: -20.00247573852539
    8. '           ' → logprob: -20.25247573852539
    9. '   ' → logprob: -20.37747573852539
    10. '
' → logprob: -21.62747573852539

Token 473: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.9361264946837764e-07
    2. 'i' → logprob: -15.75
    3. '[' → logprob: -19.25
    4. '[I' → logprob: -19.5
    5. '```' → logprob: -19.75
    6. '[j' → logprob: -20.625
    7. '[n' → logprob: -20.75
    8. '{i' → logprob: -20.875
    9. '[u' → logprob: -22.0
    10. '[
' → logprob: -22.25

Token 474: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.12706512212753296
    2. '[i' → logprob: -2.1270651817321777
    3. ' ][' → logprob: -9.87706470489502
    4. 'i' → logprob: -10.25206470489502
    5. '[' → logprob: -11.00206470489502
    6. ']' → logprob: -11.25206470489502
    7. ' ' → logprob: -11.75206470489502
    8. '[j' → logprob: -12.62706470489502
    9. ' [' → logprob: -13.00206470489502
    10. '   ' → logprob: -13.25206470489502

Token 475: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -9.014684110297821e-06
    2. ' j' → logprob: -11.625008583068848
    3. '<|end|>' → logprob: -18.250009536743164
    4. '	j' → logprob: -18.750009536743164
    5. '[j' → logprob: -19.000009536743164
    6. '$j' → logprob: -19.625009536743164
    7. ' ' → logprob: -19.750009536743164
    8. '0' → logprob: -20.375009536743164
    9. '```' → logprob: -20.625009536743164
    10. '_j' → logprob: -20.875009536743164

Token 476: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -2.868328920158092e-05
    2. ')' → logprob: -10.750028610229492
    3. ']' → logprob: -12.125028610229492
    4. ' ])' → logprob: -14.250028610229492
    5. '   ' → logprob: -14.625028610229492
    6. '))' → logprob: -16.000028610229492
    7. ''])' → logprob: -16.125028610229492
    8. '])
' → logprob: -16.250028610229492
    9. '       ' → logprob: -16.375028610229492
    10. '           ' → logprob: -16.750028610229492

Token 477: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.31326213479042053
    2. ' %' → logprob: -1.3132621049880981
    3. ')' → logprob: -15.938261985778809
    4. ')%' → logprob: -16.313262939453125
    5. ' ' → logprob: -16.688262939453125
    6. ' ' → logprob: -16.938262939453125
    7. '%D' → logprob: -18.063262939453125
    8. '%
' → logprob: -18.188262939453125
    9. '%s' → logprob: -18.188262939453125
    10. '%A' → logprob: -18.313262939453125

Token 478: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -1.8624639324116288e-06
    2. ' M' → logprob: -13.250001907348633
    3. '```' → logprob: -19.250001907348633
    4. '	M' → logprob: -19.625001907348633
    5. '   ' → logprob: -19.750001907348633
    6. 'М' → logprob: -20.125001907348633
    7. '(M' → logprob: -21.125001907348633
    8. '<M' → logprob: -21.625001907348633
    9. '>M' → logprob: -21.875001907348633
    10. 'Ｍ' → logprob: -21.875001907348633

Token 479: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 480: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17827945947647095
    2. '<|end|>' → logprob: -2.303279399871826
    3. '    
' → logprob: -3.178279399871826
    4. '```' → logprob: -5.178279399871826
    5. '	return' → logprob: -5.428279399871826
    6. 'return' → logprob: -5.553279399871826
    7. ' return' → logprob: -6.178279399871826
    8. '       ' → logprob: -6.678279399871826
    9. '<|end|>' → logprob: -6.678279399871826
    10. '        
' → logprob: -7.053279399871826

Token 481: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.1651240736246109
    2. '   ' → logprob: -2.0401241779327393
    3. 'result' → logprob: -4.04012393951416
    4. ' return' → logprob: -6.29012393951416
    5. 'total' → logprob: -6.29012393951416
    6. 'res' → logprob: -8.29012393951416
    7. 'sum' → logprob: -8.54012393951416
    8. '```' → logprob: -8.54012393951416
    9. '#' (adapté à ' #') → logprob: -9.79012393951416
    10. 'answer' → logprob: -10.16512393951416

Token 482: ' Som' (ID: 12116)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -7.862962229410186e-05
    2. 'result' → logprob: -9.500078201293945
    3. ' return' → logprob: -12.625078201293945
    4. '   ' → logprob: -15.750078201293945
    5. 'ret' → logprob: -16.125078201293945
    6. '#' → logprob: -16.875078201293945
    7. 'res' → logprob: -17.250078201293945
    8. 'total' → logprob: -18.250078201293945
    9. '```' → logprob: -18.875078201293945
    10. '       ' → logprob: -18.875078201293945

Token 483: 'me' (ID: 1047)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.790095865726471
    2. '   ' → logprob: -1.5400958061218262
    3. 'e' → logprob: -2.040095806121826
    4. 'me' → logprob: -2.165095806121826
    5. '=sum' → logprob: -3.165095806121826
    6. '(sum' → logprob: -3.415095806121826
    7. '#' → logprob: -5.915095806121826
    8. 'a' → logprob: -6.290095806121826
    9. '=' → logprob: -6.415095806121826
    10. 'ma' → logprob: -6.665095806121826

Token 484: ' de' (ID: 334)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.028986958786845207
    2. 'result' → logprob: -4.028986930847168
    3. 'ret' → logprob: -6.028986930847168
    4. '   ' → logprob: -6.528986930847168
    5. '_result' → logprob: -6.653986930847168
    6. '(' → logprob: -6.653986930847168
    7. 'res' → logprob: -6.653986930847168
    8. ' return' → logprob: -7.153986930847168
    9. '=' → logprob: -7.403986930847168
    10. 'r' → logprob: -8.153986930847168

Token 485: ' toutes' (ID: 17502)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.5760060548782349
    2. '(dp' → logprob: -0.8260060548782349
    3. 'sum' → logprob: -10.451005935668945
    4. ' dp' → logprob: -10.701005935668945
    5. '(sum' → logprob: -11.576005935668945
    6. '(' → logprob: -12.701005935668945
    7. '	dp' → logprob: -13.576005935668945
    8. '((' → logprob: -14.451005935668945
    9. 'all' → logprob: -15.326005935668945
    10. '```' → logprob: -16.076005935668945

Token 486: ' les' (ID: 1341)
  Prédit: '(dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.0028208012226969004
    2. 'dp' → logprob: -5.87782096862793
    3. '(' → logprob: -11.25282096862793
    4. ' dp' → logprob: -13.37782096862793
    5. '	dp' → logprob: -14.25282096862793
    6. '([' → logprob: -15.62782096862793
    7. '_dp' → logprob: -16.37782096862793
    8. '((' → logprob: -16.62782096862793
    9. '(
' → logprob: -16.75282096862793
    10. '(df' → logprob: -17.25282096862793

Token 487: ' sé' (ID: 7462)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.020132940262556076
    2. 'man' → logprob: -4.645133018493652
    3. 'val' → logprob: -5.395133018493652
    4. '(dp' → logprob: -6.020133018493652
    5. 'fa' → logprob: -6.395133018493652
    6. 'valid' → logprob: -7.145133018493652
    7. ' façons' → logprob: -7.645133018493652
    8. 'ways' → logprob: -8.520133018493652
    9. 'poss' → logprob: -9.270133018493652
    10. ' dp' → logprob: -10.895133018493652

Token 488: 'quences' (ID: 16559)
  Prédit: 'quences'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quences' → logprob: -0.00012011249782517552
    2. 'q' → logprob: -9.125120162963867
    3. 'quence' → logprob: -12.125120162963867
    4. 'qu' → logprob: -13.125120162963867
    5. 'ries' → logprob: -14.125120162963867
    6. 'dp' → logprob: -14.375120162963867
    7. '[' → logprob: -14.625120162963867
    8. 'lections' → logprob: -14.625120162963867
    9. '#' → logprob: -14.750120162963867
    10. '   ' → logprob: -15.000120162963867

Token 489: ' compl' (ID: 8432)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.1873888373374939
    2. ' return' → logprob: -2.8123888969421387
    3. 'dp' → logprob: -3.6873888969421387
    4. '   ' → logprob: -3.8123888969421387
    5. 'res' → logprob: -4.062388896942139
    6. 'result' → logprob: -4.312388896942139
    7. 'rés' → logprob: -5.062388896942139
    8. '[n' → logprob: -5.062388896942139
    9. 'mod' → logprob: -5.562388896942139
    10. ' =' → logprob: -5.937388896942139

Token 490: 'ètes' (ID: 81660)
  Prédit: 'ètes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ètes' → logprob: -0.09469278156757355
    2. 'ét' → logprob: -3.2196927070617676
    3. 'et' → logprob: -3.3446927070617676
    4. 'tes' → logprob: -5.469692707061768
    5. 't' → logprob: -5.594692707061768
    6. 'etes' → logprob: -5.844692707061768
    7. 'è' → logprob: -7.469692707061768
    8. 'èt' → logprob: -7.469692707061768
    9. 'ète' → logprob: -7.719692707061768
    10. 'ues' → logprob: -7.719692707061768

Token 491: ',' (ID: 11)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.009261795319616795
    2. ' return' → logprob: -5.009261608123779
    3. '   ' → logprob: -6.509261608123779
    4. 'result' → logprob: -6.884261608123779
    5. 'ret' → logprob: -12.009262084960938
    6. '(' → logprob: -12.384262084960938
    7. 'res' → logprob: -12.634262084960938
    8. '(return' → logprob: -12.634262084960938
    9. 'answer' → logprob: -13.009262084960938
    10. ' result' → logprob: -13.134262084960938

Token 492: ' pour' (ID: 1930)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.20567916333675385
    2. ' return' → logprob: -1.705679178237915
    3. 'sum' → logprob: -6.330678939819336
    4. 'result' → logprob: -6.955678939819336
    5. '   ' → logprob: -6.955678939819336
    6. ' sum' → logprob: -9.080678939819336
    7. ' result' → logprob: -9.080678939819336
    8. 'rés' → logprob: -9.455678939819336
    9. 'res' → logprob: -9.705678939819336
    10. 'ret' → logprob: -10.080678939819336

Token 493: ' tous' (ID: 10688)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.006248595658689737
    2. 'i' → logprob: -5.631248474121094
    3. ' j' → logprob: -6.131248474121094
    4. 'l' → logprob: -8.756248474121094
    5. 'dp' → logprob: -9.131248474121094
    6. 'le' → logprob: -10.006248474121094
    7. 'length' → logprob: -10.381248474121094
    8. ' i' → logprob: -10.506248474121094
    9. 'long' → logprob: -10.631248474121094
    10. 'la' → logprob: -10.756248474121094

Token 494: ' les' (ID: 1341)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.000352266215486452
    2. 'long' → logprob: -8.875351905822754
    3. ' j' → logprob: -9.750351905822754
    4. '```' → logprob: -9.750351905822754
    5. 'length' → logprob: -10.875351905822754
    6. 'les' → logprob: -10.875351905822754
    7. 'le' → logprob: -11.375351905822754
    8. 'je' → logprob: -12.000351905822754
    9. '[j' → logprob: -12.000351905822754
    10. 'valid' → logprob: -12.125351905822754

Token 495: ' états' (ID: 184259)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0010872321436181664
    2. 'bloc' → logprob: -7.376087188720703
    3. 'long' → logprob: -8.501087188720703
    4. 'bl' → logprob: -8.751087188720703
    5. 'blocks' → logprob: -10.876087188720703
    6. 'blo' → logprob: -11.126087188720703
    7. '0' → logprob: -11.626087188720703
    8. ' j' → logprob: -11.876087188720703
    9. 'counts' → logprob: -12.001087188720703
    10. 'k' → logprob: -12.001087188720703

Token 496: ' de' (ID: 334)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.49237674474716187
    2. ' return' → logprob: -0.9923767447471619
    3. '   ' → logprob: -4.117376804351807
    4. 'result' → logprob: -6.492376804351807
    5. ' result' → logprob: -8.617376327514648
    6. '
' → logprob: -10.117376327514648
    7. 'res' → logprob: -10.992376327514648
    8. 'print' → logprob: -11.117376327514648
    9. '    
' → logprob: -11.242376327514648
    10. 'ret' → logprob: -11.367376327514648

Token 497: ' répét' (ID: 156936)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.08890173584222794
    2. 'bloc' → logprob: -2.7139017581939697
    3. 'la' → logprob: -4.838901519775391
    4. 'k' → logprob: -5.463901519775391
    5. 'le' → logprob: -5.838901519775391
    6. '0' → logprob: -6.713901519775391
    7. 'dp' → logprob: -7.713901519775391
    8. 'l' → logprob: -8.08890151977539
    9. 'block' → logprob: -8.08890151977539
    10. 'bl' → logprob: -8.08890151977539

Token 498: 'ition' (ID: 868)
  Prédit: 'ition'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ition' → logprob: -0.006005344446748495
    2. 'itions' → logprob: -5.13100528717041
    3. 'tion' → logprob: -9.88100528717041
    4. 'ation' → logprob: -11.88100528717041
    5. 'es' → logprob: -12.25600528717041
    6. 'ion' → logprob: -12.63100528717041
    7. 'e' → logprob: -13.00600528717041
    8. 't' → logprob: -13.13100528717041
    9. 's' → logprob: -13.75600528717041
    10. 'ution' → logprob: -13.88100528717041

Token 499: '
' (ID: 198)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.05405637249350548
    2. 'result' → logprob: -3.304056406021118
    3. '   ' → logprob: -4.429056167602539
    4. ' return' → logprob: -5.679056167602539
    5. '
' → logprob: -7.929056167602539
    6. '    
' → logprob: -10.054056167602539
    7. 'res' → logprob: -10.429056167602539
    8. ' result' → logprob: -10.429056167602539
    9. '```' → logprob: -10.429056167602539
    10. 'ret' → logprob: -11.054056167602539

Token 500: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.08015095442533493
    2. '   ' → logprob: -2.580150842666626
    3. ' return' → logprob: -7.330151081085205
    4. 'result' → logprob: -7.455151081085205
    5. 'ret' → logprob: -11.330150604248047
    6. '```' → logprob: -11.580150604248047
    7. '    
' → logprob: -13.080150604248047
    8. 'res' → logprob: -13.705150604248047
    9. '
' → logprob: -14.830150604248047
    10. '	return' → logprob: -14.955150604248047

Token 501: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.20272159576416016
    2. 'result' → logprob: -1.7027215957641602
    3. ' return' → logprob: -6.95272159576416
    4. ' result' → logprob: -8.95272159576416
    5. '   ' → logprob: -9.20272159576416
    6. 'total' → logprob: -9.95272159576416
    7. 'rés' → logprob: -10.95272159576416
    8. 'ret' → logprob: -10.95272159576416
    9. 'res' → logprob: -11.07772159576416
    10. 'answer' → logprob: -11.45272159576416

Token 502: ' sum' (ID: 4215)
  Prédit: ' sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.5759888291358948
    2. 'sum' → logprob: -0.8259888291358948
    3. '(sum' → logprob: -9.95098876953125
    4. ' ' → logprob: -14.45098876953125
    5. ' (' → logprob: -15.07598876953125
    6. '=sum' → logprob: -15.07598876953125
    7. ' ' → logprob: -15.57598876953125
    8. '	sum' → logprob: -15.82598876953125
    9. 'pow' → logprob: -16.70098876953125
    10. '   ' → logprob: -17.45098876953125

Token 503: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -3.1424973713001236e-05
    2. '(' → logprob: -11.250031471252441
    3. 'dp' → logprob: -11.375031471252441
    4. '((' → logprob: -12.125031471252441
    5. '([' → logprob: -13.750031471252441
    6. '(
' → logprob: -16.000030517578125
    7. '(d' → logprob: -16.125030517578125
    8. ' dp' → logprob: -16.750030517578125
    9. '	dp' → logprob: -17.125030517578125
    10. '(x' → logprob: -17.500030517578125

Token 504: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.00015669701679144055
    2. '[-' → logprob: -9.12515640258789
    3. '[N' → logprob: -10.00015640258789
    4. '[' → logprob: -13.62515640258789
    5. '[i' → logprob: -14.50015640258789
    6. 'n' → logprob: -15.62515640258789
    7. '```' → logprob: -16.12515640258789
    8. '[
' → logprob: -16.37515640258789
    9. ')[' → logprob: -16.75015640258789
    10. '
' → logprob: -17.00015640258789

Token 505: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.42046353220939636
    2. '])' → logprob: -1.1704635620117188
    3. ')%' → logprob: -3.5454635620117188
    4. ')[' → logprob: -6.795463562011719
    5. '[:' → logprob: -6.920463562011719
    6. '][' → logprob: -7.545463562011719
    7. '))' → logprob: -7.670463562011719
    8. '[' → logprob: -7.920463562011719
    9. '][:' → logprob: -8.045463562011719
    10. '%' → logprob: -9.670463562011719

Token 506: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.05557151511311531
    2. ' %' → logprob: -2.9305715560913086
    3. ')' → logprob: -7.805571556091309
    4. '()%' → logprob: -8.930571556091309
    5. ')%' → logprob: -9.555571556091309
    6. '()' → logprob: -10.180571556091309
    7. '%A' → logprob: -11.055571556091309
    8. '%B' → logprob: -12.180571556091309
    9. '%
' → logprob: -12.555571556091309
    10. '%D' → logprob: -12.555571556091309

Token 507: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -6.611323624383658e-05
    2. ' M' → logprob: -9.625065803527832
    3. '(M' → logprob: -18.50006675720215
    4. '```' → logprob: -18.62506675720215
    5. '	M' → logprob: -19.37506675720215
    6. 'М' → logprob: -20.00006675720215
    7. ' ' → logprob: -20.00006675720215
    8. '   ' → logprob: -20.25006675720215
    9. ' ' → logprob: -20.25006675720215
    10. 'Ｍ' → logprob: -20.87506675720215

Token 508: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 509: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00036144492332823575
    2. '```' → logprob: -8.500361442565918
    3. '#' → logprob: -9.125361442565918
    4. 'if' → logprob: -10.750361442565918
    5. '
' → logprob: -11.625361442565918
    6. 'even' → logprob: -12.875361442565918
    7. '"""' → logprob: -13.000361442565918
    8. '"""
' → logprob: -13.250361442565918
    9. ')' → logprob: -13.375361442565918
    10. '``' → logprob: -13.500361442565918

Token 510: ' loop' (ID: 11453)
  Prédit: 'odd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'odd' → logprob: -0.1271691620349884
    2. ' odd' → logprob: -2.127169132232666
    3. 'def' → logprob: -8.627169609069824
    4. 'even' → logprob: -10.377169609069824
    5. 'Odd' → logprob: -11.627169609069824
    6. 'une' → logprob: -11.877169609069824
    7. '```' → logprob: -12.127169609069824
    8. '(' → logprob: -12.752169609069824
    9. 'od' → logprob: -13.752169609069824
    10. 's' → logprob: -14.002169609069824

Token 511: '(x' (ID: 4061)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6411083936691284
    2. '(n' → logprob: -0.8911083936691284
    3. '(N' → logprob: -3.766108512878418
    4. '(' → logprob: -4.391108512878418
    5. '_im' → logprob: -5.016108512878418
    6. 'ing' → logprob: -5.891108512878418
    7. '(i' → logprob: -6.141108512878418
    8. '(k' → logprob: -6.266108512878418
    9. '_imp' → logprob: -6.266108512878418
    10. '_even' → logprob: -6.266108512878418

Token 512: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1670909970998764
    2. '):' → logprob: -2.292090892791748
    3. '):
' → logprob: -3.042090892791748
    4. ')' → logprob: -6.042090892791748
    5. 'def' → logprob: -7.792090892791748
    6. ' ,' → logprob: -7.917090892791748
    7. '(x' → logprob: -8.042091369628906
    8. '(n' → logprob: -8.042091369628906
    9. ',x' → logprob: -8.167091369628906
    10. ',n' → logprob: -8.292091369628906

Token 513: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.12174957990646362
    2. ' y' → logprob: -2.9967496395111084
    3. 'k' → logprob: -3.8717496395111084
    4. 'n' → logprob: -3.9967496395111084
    5. 'dp' → logprob: -4.871749401092529
    6. 'L' → logprob: -5.246749401092529
    7. 'l' → logprob: -5.621749401092529
    8. 'K' → logprob: -6.746749401092529
    9. 'm' → logprob: -6.871749401092529
    10. 'p' → logprob: -7.246749401092529

Token 514: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.06461764127016068
    2. '):
' → logprob: -3.18961763381958
    3. ',' → logprob: -4.06461763381958
    4. ')' → logprob: -5.56461763381958
    5. '   ' → logprob: -9.064618110656738
    6. ' ):' → logprob: -9.064618110656738
    7. '):
' → logprob: -10.439618110656738
    8. ':' → logprob: -10.814618110656738
    9. 'def' → logprob: -11.189618110656738
    10. '):

' → logprob: -11.814618110656738

Token 515: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07447479665279388
    2. '   ' → logprob: -2.699474811553955
    3. ':
' → logprob: -6.199474811553955
    4. '[' → logprob: -6.324474811553955
    5. 'def' → logprob: -8.324474334716797
    6. ' :' → logprob: -9.074474334716797
    7. ':def' → logprob: -10.199474334716797
    8. ':return' → logprob: -10.449474334716797
    9. '{' → logprob: -10.574474334716797
    10. 'for' → logprob: -10.824474334716797

Token 516: ' """
' (ID: 7037)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.8042696118354797
    2. '   ' → logprob: -0.9292696118354797
    3. ' res' → logprob: -2.429269552230835
    4. 'dp' → logprob: -3.929269552230835
    5. 'if' → logprob: -4.054269790649414
    6. 'result' → logprob: -4.679269790649414
    7. 'r' → logprob: -5.179269790649414
    8. ' if' → logprob: -5.304269790649414
    9. '"""
' (adapté à ' """
') → logprob: -5.554269790649414
    10. 'for' → logprob: -5.929269790649414

Token 517: '   ' (ID: 271)
  Prédit: '"""
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""
' → logprob: -0.4498785436153412
    2. 'for' → logprob: -2.074878454208374
    3. 'if' → logprob: -2.199878454208374
    4. '   ' → logprob: -2.949878454208374
    5. 'res' → logprob: -4.199878692626953
    6. '"""' → logprob: -4.449878692626953
    7. 'return' → logprob: -4.574878692626953
    8. 'result' → logprob: -4.824878692626953
    9. 'r' → logprob: -5.449878692626953
    10. 'dp' → logprob: -5.574878692626953

Token 518: ' Dé' (ID: 27247)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1371583193540573
    2. '"""
' → logprob: -2.7621583938598633
    3. 'for' → logprob: -3.0121583938598633
    4. ' for' → logprob: -5.387158393859863
    5. 'def' → logprob: -5.512158393859863
    6. 'if' → logprob: -5.637158393859863
    7. 'return' → logprob: -7.012158393859863
    8. '
' → logprob: -7.637158393859863
    9. '"""' → logprob: -7.762158393859863
    10. ' if' → logprob: -7.762158393859863

Token 519: 'tect' (ID: 8230)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0630926564335823
    2. 'term' → logprob: -2.8130927085876465
    3. '"""
' → logprob: -8.563092231750488
    4. 'compose' → logprob: -8.688092231750488
    5. 'fin' → logprob: -8.938092231750488
    6. '
' → logprob: -9.063092231750488
    7. 'crit' → logprob: -9.188092231750488
    8. '"""' → logprob: -9.813092231750488
    9. '' → logprob: -10.313092231750488
    10. 'nombre' → logprob: -10.438092231750488

Token 520: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.00011474833445390686
    2. 'te' → logprob: -9.250114440917969
    3. 'er' → logprob: -11.125114440917969
    4. 'é' → logprob: -13.750114440917969
    5. 'ect' → logprob: -14.625114440917969
    6. 'cte' → logprob: -14.625114440917969
    7. 't' → logprob: -14.875114440917969
    8. '
' → logprob: -15.125114440917969
    9. '```' → logprob: -15.125114440917969
    10. 'ection' → logprob: -15.500114440917969

Token 521: ' si' (ID: 1784)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.3436855375766754
    2. ' y' → logprob: -2.8436856269836426
    3. '(x' → logprob: -3.0936856269836426
    4. ' (' → logprob: -3.3436856269836426
    5. ' if' → logprob: -3.5936856269836426
    6. 'x' → logprob: -3.7186856269836426
    7. ' for' → logprob: -4.093685626983643
    8. 'if' → logprob: -4.218685626983643
    9. ' not' → logprob: -4.593685626983643
    10. '(' → logprob: -4.968685626983643

Token 522: ' une' (ID: 2463)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.760728657245636
    2. 'x' → logprob: -1.5107285976409912
    3. ' (' → logprob: -2.135728597640991
    4. ' y' → logprob: -2.385728597640991
    5. '(x' → logprob: -2.635728597640991
    6. 'y' → logprob: -3.885728597640991
    7. '(' → logprob: -6.01072883605957
    8. '(y' → logprob: -6.01072883605957
    9. ' abs' → logprob: -6.13572883605957
    10. 'abs' → logprob: -7.13572883605957

Token 523: ' configuration' (ID: 12282)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.1949891448020935
    2. 'x' → logprob: -3.3199892044067383
    3. '(x' → logprob: -3.3199892044067383
    4. ' boucle' → logprob: -3.4449892044067383
    5. ' y' → logprob: -3.8199892044067383
    6. 'y' → logprob: -4.819989204406738
    7. ' (' → logprob: -4.944989204406738
    8. 'abs' → logprob: -5.069989204406738
    9. ' for' → logprob: -5.569989204406738
    10. ' abs' → logprob: -5.694989204406738

Token 524: ' n' (ID: 297)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.39376360177993774
    2. ' est' → logprob: -2.143763542175293
    3. ' a' → logprob: -3.518763542175293
    4. ' (' → logprob: -3.643763542175293
    5. '(
' → logprob: -4.018763542175293
    6. 's' → logprob: -4.643763542175293
    7. ' de' → logprob: -4.643763542175293
    8. 'est' → logprob: -4.768763542175293
    9. '"""
' → logprob: -5.018763542175293
    10. ' existe' → logprob: -5.018763542175293

Token 525: ''est' (ID: 6616)
  Prédit: ''est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''est' → logprob: -0.036011599004268646
    2. 'est' → logprob: -4.286011695861816
    3. 'éc' → logprob: -5.286011695861816
    4. 'e' → logprob: -5.286011695861816
    5. 'a' → logprob: -5.786011695861816
    6. ''était' → logprob: -6.286011695861816
    7. '’est' → logprob: -6.786011695861816
    8. ''a' → logprob: -7.036011695861816
    9. ''ex' → logprob: -7.286011695861816
    10. 'é' → logprob: -7.536011695861816

Token 526: ' pas' (ID: 2173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.5023109912872314
    2. ' pas' → logprob: -1.2523109912872314
    3. 'a' → logprob: -3.3773109912872314
    4. 't' → logprob: -4.127310752868652
    5. '```' → logprob: -4.752310752868652
    6. 'est' → logprob: -5.377310752868652
    7. 'cess' → logprob: -5.627310752868652
    8. 'ot' → logprob: -5.877310752868652
    9. ''est' → logprob: -6.377310752868652
    10. 'x' → logprob: -6.377310752868652

Token 527: ' autor' (ID: 13432)
  Prédit: ' valide'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' valide' → logprob: -0.45800209045410156
    2. 'possible' → logprob: -2.4580020904541016
    3. ' possible' → logprob: -2.7080020904541016
    4. 'valid' → logprob: -2.7080020904541016
    5. ' valid' → logprob: -3.2080020904541016
    6. ' une' → logprob: -4.083002090454102
    7. 'une' → logprob: -4.208002090454102
    8. 'val' → logprob: -5.083002090454102
    9. ' un' → logprob: -5.083002090454102
    10. 'per' → logprob: -5.583002090454102

Token 528: 'isée' (ID: 59331)
  Prédit: 'ée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.33160296082496643
    2. 'e' → logprob: -1.831602931022644
    3. 'def' → logprob: -2.4566030502319336
    4. 'é' → logprob: -4.081603050231934
    5. '"""' → logprob: -5.706603050231934
    6. '=' → logprob: -5.956603050231934
    7. ''' → logprob: -6.206603050231934
    8. 'isée' → logprob: -6.456603050231934
    9. 'u' → logprob: -6.706603050231934
    10. 'pas' → logprob: -6.956603050231934

Token 529: ' selon' (ID: 27571)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31480872631073
    2. '(x' → logprob: -2.6898088455200195
    3. 'def' → logprob: -2.8148088455200195
    4. ',' → logprob: -2.9398088455200195
    5. ' (' → logprob: -3.8148088455200195
    6. '(
' → logprob: -4.1898088455200195
    7. ':' → logprob: -4.4398088455200195
    8. '(' → logprob: -4.5648088455200195
    9. '(n' → logprob: -5.1898088455200195
    10. ':
' → logprob: -5.4398088455200195

Token 530: ' les' (ID: 1341)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.591118335723877
    2. ' la' → logprob: -1.466118335723877
    3. 'x' → logprob: -2.716118335723877
    4. '(x' → logprob: -3.091118335723877
    5. ' les' → logprob: -3.716118335723877
    6. ' y' → logprob: -3.966118335723877
    7. ' le' → logprob: -4.341118335723877
    8. ' une' → logprob: -4.966118335723877
    9. 'y' → logprob: -5.091118335723877
    10. ' l' → logprob: -5.091118335723877

Token 531: ' règles' (ID: 67042)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.6117556095123291
    2. ' par' → logprob: -1.611755609512329
    3. ' contraintes' → logprob: -2.236755609512329
    4. ' règles' → logprob: -2.486755609512329
    5. '"""
' → logprob: -4.48675537109375
    6. '#' → logprob: -4.73675537109375
    7. ' x' → logprob: -4.86175537109375
    8. ' conditions' → logprob: -4.98675537109375
    9. 'x' → logprob: -5.61175537109375
    10. ' constraints' → logprob: -5.73675537109375

Token 532: ' 
' (ID: 793)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.7754678726196289
    2. '   ' → logprob: -0.9004678726196289
    3. '(x' → logprob: -3.275467872619629
    4. ' de' → logprob: -4.025467872619629
    5. ' (' → logprob: -4.150467872619629
    6. ',' → logprob: -4.150467872619629
    7. 'def' → logprob: -4.525467872619629
    8. '(
' → logprob: -5.275467872619629
    9. 'des' → logprob: -5.525467872619629
    10. '.' → logprob: -6.025467872619629

Token 533: '   ' (ID: 271)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.6866742968559265
    2. '(x' → logprob: -1.4366743564605713
    3. ' (' → logprob: -2.0616743564605713
    4. '   ' → logprob: -2.6866743564605713
    5. ' de' → logprob: -3.5616743564605713
    6. ',' → logprob: -5.311674118041992
    7. ' due' → logprob: -5.311674118041992
    8. ' du' → logprob: -5.811674118041992
    9. '(n' → logprob: -6.061674118041992
    10. 'de' → logprob: -6.061674118041992

Token 534: ' combin' (ID: 25307)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.8382977247238159
    2. ' des' → logprob: -1.963297724723816
    3. 'def' → logprob: -1.963297724723816
    4. ' (' → logprob: -2.7132978439331055
    5. ',' → logprob: -2.8382978439331055
    6. 'de' → logprob: -3.9632978439331055
    7. 'des' → logprob: -4.0882978439331055
    8. ' de' → logprob: -4.2132978439331055
    9. ' x' → logprob: -4.3382978439331055
    10. ':' → logprob: -4.4632978439331055

Token 535: 'atoires' (ID: 84948)
  Prédit: 'atoires'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atoires' → logprob: -0.0931883454322815
    2. 'atoire' → logprob: -2.8431882858276367
    3. '[' → logprob: -4.843188285827637
    4. 'ato' → logprob: -5.343188285827637
    5. 'a' → logprob: -5.843188285827637
    6. 'es' → logprob: -5.968188285827637
    7. 'e' → logprob: -6.093188285827637
    8. 'ées' → logprob: -6.468188285827637
    9. 'ai' → logprob: -6.718188285827637
    10. '{' → logprob: -6.843188285827637

Token 536: ' du' (ID: 1462)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.9220852255821228
    2. 'def' → logprob: -1.9220852851867676
    3. ':' → logprob: -2.1720852851867676
    4. '(n' → logprob: -2.2970852851867676
    5. ',' → logprob: -3.0470852851867676
    6. '   ' → logprob: -3.4220852851867676
    7. ' (' → logprob: -3.5470852851867676
    8. '(s' → logprob: -3.6720852851867676
    9. '(i' → logprob: -3.7970852851867676
    10. '```' → logprob: -4.422085285186768

Token 537: ' problème' (ID: 35630)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.6456320285797119
    2. 'x' → logprob: -1.645632028579712
    3. ' parity' → logprob: -2.520632028579712
    4. ' x' → logprob: -2.770632028579712
    5. 'y' → logprob: -3.145632028579712
    6. '(x' → logprob: -3.395632028579712
    7. ' par' → logprob: -4.520631790161133
    8. ' y' → logprob: -4.645631790161133
    9. 'def' → logprob: -4.895631790161133
    10. 'even' → logprob: -5.395631790161133

Token 538: ' (' (ID: 350)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.36111459136009216
    2. '   ' → logprob: -1.8611146211624146
    3. ':' → logprob: -3.236114501953125
    4. '(' → logprob: -3.486114501953125
    5. '(n' → logprob: -3.611114501953125
    6. ' (' → logprob: -4.361114501953125
    7. ',' → logprob: -4.486114501953125
    8. 'def' → logprob: -4.861114501953125
    9. '(i' → logprob: -4.986114501953125
    10. ':
' → logprob: -6.236114501953125

Token 539: 'util' (ID: 2056)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5494414567947388
    2. ' x' → logprob: -1.0494414567947388
    3. ')' → logprob: -2.924441337585449
    4. '):' → logprob: -5.174441337585449
    5. '   ' → logprob: -5.424441337585449
    6. ' (' → logprob: -6.549441337585449
    7. '):
' → logprob: -7.049441337585449
    8. ' )' → logprob: -7.049441337585449
    9. ' return' → logprob: -7.299441337585449
    10. ' not' → logprob: -7.549441337585449

Token 540: 'isé' (ID: 30065)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.05911426246166229
    2. 'ser' → logprob: -3.6841142177581787
    3. 'sé' → logprob: -4.309114456176758
    4. 'se' → logprob: -4.684114456176758
    5. '```' → logprob: -5.684114456176758
    6. '#' → logprob: -6.684114456176758
    7. ')' → logprob: -7.309114456176758
    8. 't' → logprob: -7.309114456176758
    9. 'sage' → logprob: -7.809114456176758
    10. 'sing' → logprob: -7.934114456176758

Token 541: ' seulement' (ID: 32072)
  Prédit: ' pour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pour' → logprob: -0.3291414678096771
    2. ' dans' → logprob: -1.9541414976119995
    3. ' ici' → logprob: -2.82914137840271
    4. 'dans' → logprob: -3.07914137840271
    5. 'pour' → logprob: -4.329141616821289
    6. '(x' → logprob: -5.204141616821289
    7. ')' → logprob: -5.454141616821289
    8. ' for' → logprob: -5.829141616821289
    9. 'def' → logprob: -6.329141616821289
    10. 'for' → logprob: -6.829141616821289

Token 542: ' pour' (ID: 1930)
  Prédit: ' dans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dans' → logprob: -0.7315945029258728
    2. ' pour' → logprob: -1.4815945625305176
    3. 'dans' → logprob: -1.4815945625305176
    4. 'pour' → logprob: -3.1065945625305176
    5. ' ici' → logprob: -5.106594562530518
    6. ' for' → logprob: -5.481594562530518
    7. 'for' → logprob: -5.731594562530518
    8. ')' → logprob: -6.481594562530518
    9. ' ' → logprob: -7.106594562530518
    10. ' lors' → logprob: -7.731594562530518

Token 543: ' K' (ID: 658)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -1.0204631090164185
    2. ' x' → logprob: -1.6454631090164185
    3. 'x' → logprob: -2.020462989807129
    4. ' le' → logprob: -2.645462989807129
    5. ' y' → logprob: -2.895462989807129
    6. ' l' → logprob: -3.020462989807129
    7. ' les' → logprob: -3.520462989807129
    8. 'la' → logprob: -4.020462989807129
    9. ')' → logprob: -4.520462989807129
    10. 'l' → logprob: -4.645462989807129

Token 544: ' impair' (ID: 64113)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -1.5321990251541138
    2. ' ==' → logprob: -1.5321990251541138
    3. ' %' → logprob: -1.7821990251541138
    4. ' >' → logprob: -1.7821990251541138
    5. '==' → logprob: -2.782198905944824
    6. ' <=' → logprob: -3.407198905944824
    7. '>' → logprob: -3.407198905944824
    8. ' >=' → logprob: -3.407198905944824
    9. ')' → logprob: -3.782198905944824
    10. '=' → logprob: -4.282198905944824

Token 545: '/p' (ID: 8138)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1979048103094101
    2. '):' → logprob: -1.8229048252105713
    3. '):
' → logprob: -4.072904586791992
    4. '   ' → logprob: -7.197904586791992
    5. '"""' → logprob: -9.697904586791992
    6. ').' → logprob: -10.072904586791992
    7. ')
' → logprob: -10.447904586791992
    8. ',' → logprob: -10.572904586791992
    9. '):
' → logprob: -10.697904586791992
    10. 'def' → logprob: -11.447904586791992

Token 546: 'attern' (ID: 20946)
  Prédit: 'ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ar' → logprob: -0.16206471621990204
    2. 'air' → logprob: -2.787064790725708
    3. 'r' → logprob: -4.412064552307129
    4. ')' → logprob: -4.537064552307129
    5. 'art' → logprob: -4.662064552307129
    6. 'ari' → logprob: -5.162064552307129
    7. 'aré' → logprob: -5.287064552307129
    8. 'aire' → logprob: -5.537064552307129
    9. 'er' → logprob: -5.662064552307129
    10. 'arity' → logprob: -6.162064552307129

Token 547: 's' (ID: 82)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2811931371688843
    2. 's' → logprob: -1.4061931371688843
    3. '):' → logprob: -1.9061931371688843
    4. ' !=' → logprob: -2.906193256378174
    5. '):
' → logprob: -3.156193256378174
    6. '_' → logprob: -3.281193256378174
    7. '=' → logprob: -3.656193256378174
    8. '==' → logprob: -3.781193256378174
    9. ' ==' → logprob: -3.906193256378174
    10. ':' → logprob: -4.406193256378174

Token 548: ' spé' (ID: 117582)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3099985122680664
    2. '):' → logprob: -1.8099985122680664
    3. ' !=' → logprob: -2.0599985122680664
    4. '==' → logprob: -2.5599985122680664
    5. '!=' → logprob: -2.6849985122680664
    6. '):
' → logprob: -2.8099985122680664
    7. '=' → logprob: -3.3099985122680664
    8. ' ==' → logprob: -3.6849985122680664
    9. ',' → logprob: -3.9349985122680664
    10. '_' → logprob: -4.059998512268066

Token 549: 'ciaux' (ID: 108930)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.2956435978412628
    2. 'cial' → logprob: -1.9206435680389404
    3. '```' → logprob: -2.7956435680389404
    4. 'ciaux' → logprob: -3.1706435680389404
    5. 'ci' → logprob: -6.9206438064575195
    6. '"""' → logprob: -7.0456438064575195
    7. ')' → logprob: -7.4206438064575195
    8. '")' → logprob: -7.6706438064575195
    9. '`)' → logprob: -7.9206438064575195
    10. '}' → logprob: -7.9206438064575195

Token 550: ').

' (ID: 3991)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07975796610116959
    2. '):' → logprob: -2.7047579288482666
    3. '):
' → logprob: -4.704758167266846
    4. ')
' → logprob: -8.329757690429688
    5. '"""' → logprob: -8.829757690429688
    6. ').' → logprob: -9.079757690429688
    7. '   ' → logprob: -9.704757690429688
    8. ' )' → logprob: -10.454757690429688
    9. 'def' → logprob: -10.579757690429688
    10. ',' → logprob: -10.829757690429688

Token 551: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.026401078328490257
    2. ')' → logprob: -4.276401042938232
    3. '):
' → logprob: -5.276401042938232
    4. '):' → logprob: -5.526401042938232
    5. '"""
' → logprob: -7.026401042938232
    6. 'def' → logprob: -7.651401042938232
    7. '```' → logprob: -7.651401042938232
    8. 'if' → logprob: -8.15140151977539
    9. ')
' → logprob: -8.27640151977539
    10. '"""' → logprob: -8.65140151977539

Token 552: ' Args' (ID: 39185)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18276681005954742
    2. 'if' → logprob: -2.307766914367676
    3. ' if' → logprob: -3.557766914367676
    4. 'return' → logprob: -4.807766914367676
    5. 'x' → logprob: -5.307766914367676
    6. '```' → logprob: -5.307766914367676
    7. 'for' → logprob: -5.557766914367676
    8. ' for' → logprob: -5.807766914367676
    9. ' return' → logprob: -5.932766914367676
    10. 'def' → logprob: -6.432766914367676

Token 553: ':
' (ID: 734)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.24296309053897858
    2. '):' → logprob: -2.2429630756378174
    3. '):
' → logprob: -2.8679630756378174
    4. '   ' → logprob: -3.7429630756378174
    5. ':' → logprob: -4.2429633140563965
    6. ',
' → logprob: -5.4929633140563965
    7. ')' → logprob: -5.4929633140563965
    8. '(x' → logprob: -6.3679633140563965
    9. '=' → logprob: -7.2429633140563965
    10. '(' → logprob: -7.3679633140563965

Token 554: '       ' (ID: 309)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.09374380856752396
    2. '   ' → logprob: -2.4687438011169434
    3. ' x' → logprob: -5.968743801116943
    4. 'y' → logprob: -6.218743801116943
    5. ' y' → logprob: -9.093744277954102
    6. 'def' → logprob: -9.468744277954102
    7. '```' → logprob: -11.093744277954102
    8. 'self' → logprob: -11.468744277954102
    9. '
' → logprob: -12.093744277954102
    10. ' ' → logprob: -12.343744277954102

Token 555: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.0003036457928828895
    2. 'a' → logprob: -9.000303268432617
    3. 'self' → logprob: -9.000303268432617
    4. 'i' → logprob: -11.000303268432617
    5. 'y' → logprob: -11.500303268432617
    6. '   ' → logprob: -11.625303268432617
    7. ' x' → logprob: -11.750303268432617
    8. 'state' → logprob: -12.750303268432617
    9. ')' → logprob: -13.000303268432617
    10. 'l' → logprob: -14.375303268432617

Token 556: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003231306094676256
    2. ':int' → logprob: -6.878231525421143
    3. ',y' → logprob: -7.253231525421143
    4. ':' → logprob: -7.253231525421143
    5. ' ,' → logprob: -7.878231525421143
    6. ',int' → logprob: -8.378231048583984
    7. ',
' → logprob: -9.628231048583984
    8. ',x' → logprob: -10.128231048583984
    9. ' :' → logprob: -10.878231048583984
    10. ',k' → logprob: -11.753231048583984

Token 557: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -2.3319124011322856e-05
    2. ' int' → logprob: -11.375022888183594
    3. ')' → logprob: -11.750022888183594
    4. ',' → logprob: -13.375022888183594
    5. '   ' → logprob: -14.125022888183594
    6. ',int' → logprob: -15.125022888183594
    7. '):' → logprob: -15.125022888183594
    8. '[int' → logprob: -15.125022888183594
    9. ':int' → logprob: -15.500022888183594
    10. '  ' → logprob: -15.625022888183594

Token 558: '):' (ID: 3127)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003664404503069818
    2. ',y' → logprob: -8.6253662109375
    3. ',
' → logprob: -9.8753662109375
    4. '):' → logprob: -10.0003662109375
    5. ',x' → logprob: -10.8753662109375
    6. ',int' → logprob: -11.2503662109375
    7. '):
' → logprob: -11.2503662109375
    8. ' ,' → logprob: -11.2503662109375
    9. ':int' → logprob: -11.3753662109375
    10. ':' → logprob: -11.7503662109375

Token 559: ' nombre' (ID: 9733)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.03049609065055847
    2. ' int' → logprob: -3.530496120452881
    3. 'y' → logprob: -7.780496120452881
    4. 'x' → logprob: -8.780495643615723
    5. '   ' → logprob: -9.405495643615723
    6. ' y' → logprob: -10.530495643615723
    7. ')' → logprob: -11.280495643615723
    8. '[int' → logprob: -11.405495643615723
    9. 'j' → logprob: -11.655495643615723
    10. '       ' → logprob: -11.905495643615723

Token 560: ' d' (ID: 272)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.4059934616088867
    2. ')' → logprob: -1.5309934616088867
    3. ' de' → logprob: -2.2809934616088867
    4. ' des' → logprob: -2.2809934616088867
    5. 'des' → logprob: -2.6559934616088867
    6. 'de' → logprob: -3.0309934616088867
    7. '_con' → logprob: -3.2809934616088867
    8. '_des' → logprob: -3.2809934616088867
    9. '_' → logprob: -3.4059934616088867
    10. '=' → logprob: -3.6559934616088867

Token 561: ''' (ID: 6)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6720079779624939
    2. 'élé' → logprob: -0.9220079779624939
    3. ' éléments' → logprob: -3.5470080375671387
    4. 'e' → logprob: -3.7970080375671387
    5. 'é' → logprob: -5.047008037567139
    6. '_con' → logprob: -5.047008037567139
    7. ' cons' → logprob: -5.297008037567139
    8. '_bloc' → logprob: -5.297008037567139
    9. ' répét' → logprob: -6.297008037567139
    10. '_elements' → logprob: -6.422008037567139

Token 562: 'élé' (ID: 15228)
  Prédit: 'élé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.2731384038925171
    2. 'x' → logprob: -2.8981385231018066
    3. '1' → logprob: -3.3981385231018066
    4. 'elements' → logprob: -3.5231385231018066
    5. 'con' → logprob: -4.023138523101807
    6. '0' → logprob: -4.023138523101807
    7. ''' → logprob: -4.398138523101807
    8. 'cons' → logprob: -5.023138523101807
    9. 'é' → logprob: -5.398138523101807
    10. ')' → logprob: -5.398138523101807

Token 563: 'ments' (ID: 1626)
  Prédit: 'ments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ments' → logprob: -0.0001887591351987794
    2. 'éments' → logprob: -9.500188827514648
    3. 'ment' → logprob: -10.500188827514648
    4. 'l' → logprob: -10.750188827514648
    5. 'ements' → logprob: -11.250188827514648
    6. 'm' → logprob: -11.375188827514648
    7. 'lé' → logprob: -11.500188827514648
    8. 'lements' → logprob: -11.875188827514648
    9. '1' → logprob: -12.375188827514648
    10. 'ents' → logprob: -12.625188827514648

Token 564: ' cons' (ID: 1473)
  Prédit: ' cons'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cons' → logprob: -0.6004582643508911
    2. ')' → logprob: -1.8504582643508911
    3. 'cons' → logprob: -2.4754581451416016
    4. ',' → logprob: -2.7254581451416016
    5. ' ==' → logprob: -3.6004581451416016
    6. '==' → logprob: -3.7254581451416016
    7. 'con' → logprob: -3.9754581451416016
    8. '>=' → logprob: -4.600458145141602
    9. '   ' → logprob: -4.725458145141602
    10. '_cons' → logprob: -4.725458145141602

Token 565: 'écut' (ID: 96392)
  Prédit: 'écut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'écut' → logprob: -0.000585322268307209
    2. 'secut' → logprob: -7.750585556030273
    3. 'ecut' → logprob: -8.875585556030273
    4. 'cut' → logprob: -11.750585556030273
    5. 'c' → logprob: -13.125585556030273
    6. 'éc' → logprob: -13.125585556030273
    7. 'é' → logprob: -14.375585556030273
    8. '```' → logprob: -14.375585556030273
    9. 'secutive' → logprob: -14.500585556030273
    10. '#' → logprob: -15.250585556030273

Token 566: 'ifs' (ID: 14119)
  Prédit: 'ents'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ents' → logprob: -0.8817618489265442
    2. 'uts' → logprob: -1.6317617893218994
    3. 'ut' → logprob: -2.0067617893218994
    4. 'u' → logprob: -2.3817617893218994
    5. 'ifs' → logprob: -2.8817617893218994
    6. ')' → logprob: -3.8817617893218994
    7. 'us' → logprob: -4.0067620277404785
    8. '```' → logprob: -4.1317620277404785
    9. 'if' → logprob: -4.5067620277404785
    10. '   ' → logprob: -4.6317620277404785

Token 567: ' de' (ID: 334)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6646866202354431
    2. ',' → logprob: -1.414686679840088
    3. '   ' → logprob: -2.664686679840088
    4. ' cons' → logprob: -3.414686679840088
    5. '):
' → logprob: -3.539686679840088
    6. '>=' → logprob: -3.914686679840088
    7. '<|end|>' → logprob: -4.164686679840088
    8. 'con' → logprob: -4.539686679840088
    9. '):' → logprob: -4.789686679840088
    10. '),' → logprob: -4.914686679840088

Token 568: ' par' (ID: 686)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.41647785902023315
    2. 'm' → logprob: -1.666477918624878
    3. 'le' → logprob: -3.291477918624878
    4. '0' → logprob: -3.541477918624878
    5. 'une' → logprob: -4.041477680206299
    6. '1' → logprob: -4.166477680206299
    7. 'un' → logprob: -4.916477680206299
    8. 'bloc' → logprob: -5.041477680206299
    9. ' même' → logprob: -5.416477680206299
    10. 'l' → logprob: -5.541477680206299

Token 569: 'ité' (ID: 3761)
  Prédit: 'té'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'té' → logprob: -0.4214388132095337
    2. 'ité' → logprob: -1.5464388132095337
    3. 't' → logprob: -2.171438694000244
    4. 'c' → logprob: -6.296438694000244
    5. 'tes' → logprob: -6.296438694000244
    6. 'ti' → logprob: -6.546438694000244
    7. 'x' → logprob: -6.796438694000244
    8. 'te' → logprob: -6.796438694000244
    9. 'secut' → logprob: -6.796438694000244
    10. '2' → logprob: -6.921438694000244

Token 570: ' différente' (ID: 140707)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -2.0282042026519775
    2. '1' → logprob: -2.1532042026519775
    3. 'im' → logprob: -2.4032042026519775
    4. ' x' → logprob: -2.4032042026519775
    5. 'pair' → logprob: -2.4032042026519775
    6. '   ' → logprob: -2.6532042026519775
    7. ' paire' → logprob: -2.9032042026519775
    8. ' imp' → logprob: -2.9032042026519775
    9. 'p' → logprob: -3.1532042026519775
    10. '0' → logprob: -3.4032042026519775

Token 571: '.
' (ID: 558)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16723906993865967
    2. ')
' → logprob: -2.417239189147949
    3. ',' → logprob: -3.417239189147949
    4. '):
' → logprob: -4.042239189147949
    5. '   ' → logprob: -5.417239189147949
    6. '):' → logprob: -5.542239189147949
    7. ',
' → logprob: -6.042239189147949
    8. '),
' → logprob: -6.042239189147949
    9. '),' → logprob: -7.792239189147949
    10. '       ' → logprob: -8.66723918914795

Token 572: '       ' (ID: 309)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2850223779678345
    2. '   ' → logprob: -2.035022258758545
    3. ')' → logprob: -2.910022258758545
    4. 'y' → logprob: -3.410022258758545
    5. ',
' → logprob: -3.660022258758545
    6. ' y' → logprob: -6.160022258758545
    7. ',y' → logprob: -7.535022258758545
    8. '):
' → logprob: -8.285022735595703
    9. ')
' → logprob: -8.535022735595703
    10. '       ' → logprob: -8.660022735595703

Token 573: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' (adapté à ' y') → logprob: -0.000912774819880724
    2. ' y' → logprob: -7.000912666320801
    3. '   ' → logprob: -13.7509126663208
    4. 'return' → logprob: -16.250913619995117
    5. ')' → logprob: -17.000913619995117
    6. '       ' → logprob: -17.125913619995117
    7. '```' → logprob: -17.500913619995117
    8. 'def' → logprob: -17.625913619995117
    9. 'z' → logprob: -19.000913619995117
    10. '
' → logprob: -19.125913619995117

Token 574: ' (' (ID: 350)
  Prédit: ':int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':int' → logprob: -1.327691912651062
    2. ')' → logprob: -1.577691912651062
    3. 'int' → logprob: -1.702691912651062
    4. ':' → logprob: -1.827691912651062
    5. '(int' → logprob: -2.0776920318603516
    6. '[int' → logprob: -3.7026920318603516
    7. ' (' → logprob: -4.327692031860352
    8. '):
' → logprob: -4.952692031860352
    9. ' int' → logprob: -5.452692031860352
    10. '=int' → logprob: -5.577692031860352

Token 575: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -8.721228368813172e-05
    2. ' int' → logprob: -9.375086784362793
    3. '[int' → logprob: -14.125086784362793
    4. ':int' → logprob: -14.625086784362793
    5. '(int' → logprob: -14.750086784362793
    6. '=int' → logprob: -15.000086784362793
    7. ')' → logprob: -15.250086784362793
    8. '<int' → logprob: -16.62508773803711
    9. ''int' → logprob: -17.87508773803711
    10. '```' → logprob: -18.12508773803711

Token 576: '):' (ID: 3127)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4336888790130615
    2. '):' → logprob: -1.6836888790130615
    3. ':int' → logprob: -2.4336888790130615
    4. 'int' → logprob: -3.1836888790130615
    5. '):
' → logprob: -4.558689117431641
    6. ',' → logprob: -4.808689117431641
    7. ')' → logprob: -5.058689117431641
    8. '[int' → logprob: -5.308689117431641
    9. '+' → logprob: -5.933689117431641
    10. ' int' → logprob: -7.183689117431641

Token 577: ' nombre' (ID: 9733)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0005106182070448995
    2. ' int' → logprob: -7.7505106925964355
    3. 'nombre' → logprob: -9.625510215759277
    4. '(int' → logprob: -12.500510215759277
    5. 'Nombre' → logprob: -13.000510215759277
    6. 'bool' → logprob: -13.125510215759277
    7. ' nombre' → logprob: -13.875510215759277
    8. 'number' → logprob: -14.125510215759277
    9. '[int' → logprob: -14.375510215759277
    10. '   ' → logprob: -14.750510215759277

Token 578: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.6521390080451965
    2. ' de' → logprob: -1.1521389484405518
    3. ')' → logprob: -2.5271389484405518
    4. 'd' → logprob: -3.4021389484405518
    5. ' of' → logprob: -4.277139186859131
    6. '   ' → logprob: -4.777139186859131
    7. 'de' → logprob: -5.027139186859131
    8. ' des' → logprob: -5.902139186859131
    9. ' ' → logprob: -6.027139186859131
    10. '[' → logprob: -6.277139186859131

Token 579: ''' (ID: 6)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.4874507784843445
    2. '_' → logprob: -1.1124508380889893
    3. ')' → logprob: -4.11245059967041
    4. '_con' → logprob: -4.98745059967041
    5. ' d' → logprob: -5.23745059967041
    6. 'd' → logprob: -5.48745059967041
    7. ''' → logprob: -5.48745059967041
    8. ' éléments' → logprob: -5.48745059967041
    9. ''int' → logprob: -6.36245059967041
    10. '+' → logprob: -6.48745059967041

Token 580: 'élé' (ID: 15228)
  Prédit: 'élé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.0013715495588257909
    2. '_' → logprob: -7.126371383666992
    3. 'x' → logprob: -8.251371383666992
    4. 'é' → logprob: -9.501371383666992
    5. ' éléments' → logprob: -9.501371383666992
    6. 'elements' → logprob: -10.001371383666992
    7. 'él' → logprob: -10.001371383666992
    8. 'y' → logprob: -10.501371383666992
    9. '0' → logprob: -11.126371383666992
    10. '```' → logprob: -12.501371383666992

Token 581: 'ments' (ID: 1626)
  Prédit: 'ments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ments' → logprob: -8.08944896562025e-05
    2. 'ment' → logprob: -9.625081062316895
    3. 'm' → logprob: -11.625081062316895
    4. 'nts' → logprob: -12.500081062316895
    5. 'me' → logprob: -14.250081062316895
    6. 'ents' → logprob: -14.750081062316895
    7. 'ts' → logprob: -14.750081062316895
    8. 'mente' → logprob: -15.875081062316895
    9. 'ements' → logprob: -16.125080108642578
    10. 'men' → logprob: -16.250080108642578

Token 582: ' cons' (ID: 1473)
  Prédit: ' cons'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cons' → logprob: -0.20086868107318878
    2. 'con' → logprob: -2.325868606567383
    3. 'cons' → logprob: -2.575868606567383
    4. ')' → logprob: -5.825868606567383
    5. '_con' → logprob: -6.450868606567383
    6. 'diff' → logprob: -6.825868606567383
    7. '   ' → logprob: -8.200868606567383
    8. '+' → logprob: -8.200868606567383
    9. '_cons' → logprob: -8.200868606567383
    10. ' ident' → logprob: -8.325868606567383

Token 583: 'écut' (ID: 96392)
  Prédit: 'écut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'écut' → logprob: -0.18437138199806213
    2. 'secut' → logprob: -1.8093713521957397
    3. 'secutive' → logprob: -5.809371471405029
    4. 'cut' → logprob: -7.059371471405029
    5. 'ecut' → logprob: -8.434370994567871
    6. 's' → logprob: -8.559370994567871
    7. 'sec' → logprob: -9.309370994567871
    8. 'sect' → logprob: -9.434370994567871
    9. '0' → logprob: -9.934370994567871
    10. '```' → logprob: -10.684370994567871

Token 584: 'ifs' (ID: 14119)
  Prédit: 'ents'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ents' → logprob: -0.013909492641687393
    2. 'ifs' → logprob: -4.388909339904785
    3. 'if' → logprob: -7.138909339904785
    4. 'ent' → logprob: -7.888909339904785
    5. 'és' → logprob: -10.013909339904785
    6. 'u' → logprob: -10.388909339904785
    7. 'aux' → logprob: -10.763909339904785
    8. 'aires' → logprob: -10.888909339904785
    9. 'ets' → logprob: -10.888909339904785
    10. 's' → logprob: -11.013909339904785

Token 585: ' de' (ID: 334)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.8408585786819458
    2. 'de' → logprob: -1.4658585786819458
    3. ')' → logprob: -2.3408584594726562
    4. ' de' → logprob: -2.8408584594726562
    5. 'd' → logprob: -3.2158584594726562
    6. '   ' → logprob: -3.5908584594726562
    7. '):' → logprob: -4.465858459472656
    8. 'con' → logprob: -4.590858459472656
    9. '```' → logprob: -4.590858459472656
    10. 'different' → logprob: -4.840858459472656

Token 586: ' même' (ID: 9679)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.7675313353538513
    2. 'la' → logprob: -1.017531394958496
    3. 'y' → logprob: -2.642531394958496
    4. '0' → logprob: -3.767531394958496
    5. ' même' → logprob: -3.767531394958496
    6. 'l' → logprob: -4.142531394958496
    7. 'm' → logprob: -4.642531394958496
    8. '1' → logprob: -5.142531394958496
    9. 'same' → logprob: -5.142531394958496
    10. 'x' → logprob: -5.517531394958496

Token 587: ' par' (ID: 686)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.001846889965236187
    2. '_' → logprob: -6.876846790313721
    3. 'pari' → logprob: -8.001847267150879
    4. ')' → logprob: -8.876847267150879
    5. '_par' → logprob: -9.376847267150879
    6. '(' → logprob: -9.626847267150879
    7. ' par' → logprob: -9.626847267150879
    8. '(
' → logprob: -10.876847267150879
    9. 'part' → logprob: -11.001847267150879
    10. '(x' → logprob: -11.126847267150879

Token 588: 'ité' (ID: 3761)
  Prédit: 'ité'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ité' → logprob: -0.0025844585616141558
    2. 'itié' → logprob: -6.377584457397461
    3. 'it' → logprob: -8.127584457397461
    4. 'ite' → logprob: -8.877584457397461
    5. 'i' → logprob: -9.127584457397461
    6. 'té' → logprob: -9.627584457397461
    7. 'ity' → logprob: -9.627584457397461
    8. 't' → logprob: -9.752584457397461
    9. 'rité' → logprob: -10.002584457397461
    10. 'ités' → logprob: -10.752584457397461

Token 589: '.
' (ID: 558)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.10588163882493973
    2. ')' → logprob: -2.980881690979004
    3. '):' → logprob: -3.105881690979004
    4. '):
' → logprob: -5.605881690979004
    5. ')
' → logprob: -6.980881690979004
    6. '   ' → logprob: -8.605881690979004
    7. '):

' → logprob: -10.355881690979004
    8. '"""
' → logprob: -10.605881690979004
    9. '```' → logprob: -11.105881690979004
    10. ' ):
' → logprob: -11.480881690979004

Token 590: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22129394114017487
    2. '):
' → logprob: -2.3462939262390137
    3. ')' → logprob: -2.5962939262390137
    4. '"""
' → logprob: -4.221293926239014
    5. '):' → logprob: -4.721293926239014
    6. '"""' → logprob: -6.096293926239014
    7. '```' → logprob: -6.596293926239014
    8. ':
' → logprob: -8.221294403076172
    9. 'if' → logprob: -8.471294403076172
    10. ')
' → logprob: -9.096294403076172

Token 591: ' Returns' (ID: 9609)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01878119260072708
    2. ')' → logprob: -4.6437811851501465
    3. '"""
' → logprob: -5.6437811851501465
    4. 'if' → logprob: -6.1437811851501465
    5. ' if' → logprob: -6.2687811851501465
    6. '"""' → logprob: -7.3937811851501465
    7. ')
' → logprob: -8.393781661987305
    8. 'def' → logprob: -8.768781661987305
    9. '```' → logprob: -9.018781661987305
    10. '):
' → logprob: -9.893781661987305

Token 592: ':
' (ID: 734)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.6638540625572205
    2. ' x' → logprob: -1.6638541221618652
    3. ' (
' → logprob: -1.7888541221618652
    4. ':' → logprob: -3.0388541221618652
    5. '   ' → logprob: -3.4138541221618652
    6. ' bool' → logprob: -4.538854122161865
    7. ' :' → logprob: -4.788854122161865
    8. '(x' → logprob: -5.913854122161865
    9. ' =' → logprob: -6.163854122161865
    10. ' int' → logprob: -6.163854122161865

Token 593: '       ' (ID: 309)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.9964355826377869
    2. ' x' → logprob: -1.1214356422424316
    3. '   ' → logprob: -1.3714356422424316
    4. 'x' → logprob: -4.496435642242432
    5. ' False' → logprob: -4.496435642242432
    6. '(x' → logprob: -4.746435642242432
    7. 'False' → logprob: -5.496435642242432
    8. ' not' → logprob: -5.496435642242432
    9. ' True' → logprob: -5.621435642242432
    10. '0' → logprob: -5.871435642242432

Token 594: ' bool' (ID: 3792)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bool' (adapté à ' bool') → logprob: -0.0009626734536141157
    2. '   ' → logprob: -7.625962734222412
    3. ' bool' → logprob: -7.750962734222412
    4. 'int' → logprob: -10.875962257385254
    5. 'True' → logprob: -11.000962257385254
    6. 'False' → logprob: -11.750962257385254
    7. '	bool' → logprob: -15.625962257385254
    8. '(bool' → logprob: -15.750962257385254
    9. '  ' → logprob: -16.00096321105957
    10. '
' → logprob: -16.75096321105957

Token 595: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.029857859015464783
    2. ':
' → logprob: -4.154857635498047
    3. '   ' → logprob: -4.404857635498047
    4. ' :' → logprob: -7.529857635498047
    5. ':return' → logprob: -8.029857635498047
    6. '       ' → logprob: -9.029857635498047
    7. '(x' → logprob: -9.279857635498047
    8. ' =' → logprob: -9.654857635498047
    9. '):' → logprob: -10.029857635498047
    10. ' return' → logprob: -10.404857635498047

Token 596: ' True' (ID: 6432)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.746379554271698
    2. 'x' → logprob: -1.4963796138763428
    3. 'False' → logprob: -1.8713796138763428
    4. 'True' → logprob: -2.3713796138763428
    5. ' True' → logprob: -3.3713796138763428
    6. ' False' → logprob: -3.9963796138763428
    7. ' not' → logprob: -6.746379375457764
    8. 'not' → logprob: -7.996379375457764
    9. '(x' → logprob: -8.621379852294922
    10. ' (' → logprob: -8.746379852294922

Token 597: ' si' (ID: 1784)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5884621739387512
    2. ' x' → logprob: -0.8384621739387512
    3. ' and' → logprob: -5.4634623527526855
    4. ' (' → logprob: -6.3384623527526855
    5. '(x' → logprob: -6.3384623527526855
    6. ',' → logprob: -6.4634623527526855
    7. '<|end|>' → logprob: -6.9634623527526855
    8. 'if' → logprob: -7.2134623527526855
    9. ' ' → logprob: -7.9634623527526855
    10. 'x' → logprob: -8.088461875915527

Token 598: ' la' (ID: 557)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.3986901044845581
    2. 'x' → logprob: -1.648690104484558
    3. ' (' → logprob: -2.5236902236938477
    4. 'False' → logprob: -4.273690223693848
    5. ' False' → logprob: -4.273690223693848
    6. '(x' → logprob: -4.523690223693848
    7. ' not' → logprob: -4.648690223693848
    8. ' y' → logprob: -6.273690223693848
    9. ' True' → logprob: -6.273690223693848
    10. 'True' → logprob: -6.398690223693848

Token 599: ' configuration' (ID: 12282)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.20626312494277954
    2. ' x' → logprob: -2.0812630653381348
    3. '(x' → logprob: -3.8312630653381348
    4. 'not' → logprob: -4.081263065338135
    5. ' not' → logprob: -4.331263065338135
    6. ' (' → logprob: -5.831263065338135
    7. '(' → logprob: -6.206263065338135
    8. 'y' → logprob: -6.331263065338135
    9. 'False' → logprob: -6.331263065338135
    10. ' False' → logprob: -7.456263065338135

Token 600: ' est' (ID: 893)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -1.1531398296356201
    2. ' is' → logprob: -1.4031398296356201
    3. ' est' → logprob: -1.9031398296356201
    4. '==' → logprob: -2.52813982963562
    5. ' not' → logprob: -2.77813982963562
    6. ' False' → logprob: -3.40313982963562
    7. 'False' → logprob: -3.65313982963562
    8. ')' → logprob: -3.65313982963562
    9. ' )' → logprob: -4.528140068054199
    10. 'not' → logprob: -4.903140068054199

Token 601: ' interd' (ID: 84840)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.26962703466415405
    2. ' False' → logprob: -1.8946270942687988
    3. 'True' → logprob: -2.769627094268799
    4. ' True' → logprob: -3.769627094268799
    5. 'not' → logprob: -9.01962661743164
    6. ' not' → logprob: -9.51962661743164
    7. '(False' → logprob: -11.89462661743164
    8. '(True' → logprob: -13.01962661743164
    9. 'x' → logprob: -13.14462661743164
    10. 'F' → logprob: -13.39462661743164

Token 602: 'ite' (ID: 651)
  Prédit: 'ite'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ite' → logprob: -2.0100624169572257e-05
    2. 'it' → logprob: -12.125020027160645
    3. 'i' → logprob: -13.000020027160645
    4. 'e' → logprob: -13.000020027160645
    5. 'uite' → logprob: -13.000020027160645
    6. 'ited' → logprob: -13.125020027160645
    7. 'é' → logprob: -13.500020027160645
    8. 'itte' → logprob: -13.750020027160645
    9. 'ie' → logprob: -14.375020027160645
    10. 'ITE' → logprob: -14.625020027160645

Token 603: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3689361810684204
    2. '   ' → logprob: -1.4939361810684204
    3. ' and' → logprob: -3.618936061859131
    4. ')' → logprob: -4.118936061859131
    5. 'and' → logprob: -4.743936061859131
    6. ',
' → logprob: -5.243936061859131
    7. '<|end|>' → logprob: -5.243936061859131
    8. '       ' → logprob: -5.368936061859131
    9. '
' → logprob: -5.993936061859131
    10. ' or' → logprob: -6.243936061859131

Token 604: ' False' (ID: 7983)
  Prédit: ' False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.3187367916107178
    2. 'False' → logprob: -1.3187367916107178
    3. ' True' → logprob: -6.068737030029297
    4. '    ' → logprob: -6.818737030029297
    5. ' not' → logprob: -6.818737030029297
    6. 'True' → logprob: -7.443737030029297
    7. ' lambda' → logprob: -8.943737030029297
    8. '   ' → logprob: -9.318737030029297
    9. 'not' → logprob: -9.568737030029297
    10. ' else' → logprob: -10.568737030029297

Token 605: ' sinon' (ID: 52915)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 606: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.026018332690000534
    2. '
' → logprob: -4.401018142700195
    3. '):
' → logprob: -5.401018142700195
    4. '"""
' → logprob: -5.401018142700195
    5. ')' → logprob: -5.901018142700195
    6. '```' → logprob: -7.276018142700195
    7. ':
' → logprob: -8.026018142700195
    8. '):' → logprob: -9.026018142700195
    9. ')
' → logprob: -9.151018142700195
    10. ':' → logprob: -9.526018142700195

Token 607: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005505294539034367
    2. ':' → logprob: -8.375550270080566
    3. ':
' → logprob: -8.875550270080566
    4. ')' → logprob: -9.500550270080566
    5. '```' → logprob: -10.000550270080566
    6. '):
' → logprob: -10.250550270080566
    7. '):' → logprob: -12.375550270080566
    8. 'def' → logprob: -12.625550270080566
    9. '       ' → logprob: -12.750550270080566
    10. '"""
' → logprob: -13.250550270080566

Token 608: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00014072739577386528
    2. '```' → logprob: -9.000141143798828
    3. ':
' → logprob: -12.000141143798828
    4. ':' → logprob: -12.375141143798828
    5. '):
' → logprob: -13.375141143798828
    6. ')' → logprob: -13.500141143798828
    7. '"""
' (adapté à ' """
') → logprob: -14.125141143798828
    8. '``' → logprob: -14.500141143798828
    9. '
' → logprob: -14.500141143798828
    10. '       ' → logprob: -14.750141143798828

Token 609: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001624356722459197
    2. '	return' → logprob: -6.626624584197998
    3. '	if' → logprob: -8.25162410736084
    4. ' return' → logprob: -11.37662410736084
    5. ' if' → logprob: -11.50162410736084
    6. '\t' → logprob: -11.62662410736084
    7. '   ' → logprob: -12.62662410736084
    8. '       ' → logprob: -14.25162410736084
    9. '```' → logprob: -14.25162410736084
    10. 'return' → logprob: -14.37662410736084

Token 610: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.41318246722221375
    2. '   ' → logprob: -1.5381824970245361
    3. 'if' → logprob: -2.163182497024536
    4. ' return' → logprob: -5.163182258605957
    5. ' if' → logprob: -5.913182258605957
    6. '#' → logprob: -8.288182258605957
    7. '	return' → logprob: -10.288182258605957
    8. '	if' → logprob: -12.288182258605957
    9. ' ' → logprob: -13.038182258605957
    10. ' #' → logprob: -13.163182258605957

Token 611: ' (' (ID: 350)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.36563640832901
    2. '(x' → logprob: -2.1156363487243652
    3. ' x' → logprob: -2.6156363487243652
    4. 'y' → logprob: -3.1156363487243652
    5. ' y' → logprob: -3.6156363487243652
    6. ' (' → logprob: -3.8656363487243652
    7. '(y' → logprob: -3.9906363487243652
    8. '(' → logprob: -6.740636348724365
    9. '(not' → logprob: -8.990636825561523
    10. '   ' → logprob: -9.240636825561523

Token 612: '2' (ID: 17)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.09609035402536392
    2. 'y' → logprob: -2.721090316772461
    3. '(x' → logprob: -3.846090316772461
    4. '(y' → logprob: -5.596090316772461
    5. ' x' → logprob: -8.096090316772461
    6. ' y' → logprob: -8.721090316772461
    7. ' (' → logprob: -8.971090316772461
    8. '(' → logprob: -9.846090316772461
    9. '   ' → logprob: -10.721090316772461
    10. '((' → logprob: -11.471090316772461

Token 613: ' *' (ID: 425)
  Prédit: '*x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*x' → logprob: -0.9410921335220337
    2. '*' → logprob: -1.1910921335220337
    3. ' *' → logprob: -1.5660921335220337
    4. '*y' → logprob: -2.566092014312744
    5. '*(' → logprob: -3.941092014312744
    6. '**' → logprob: -8.066092491149902
    7. ')' → logprob: -9.566092491149902
    8. '<=' → logprob: -9.941092491149902
    9. '>' → logprob: -9.941092491149902
    10. 'x' → logprob: -10.066092491149902

Token 614: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0842195525765419
    2. 'y' → logprob: -2.709219455718994
    3. '(x' → logprob: -4.334219455718994
    4. '(y' → logprob: -7.084219455718994
    5. '(' → logprob: -9.459219932556152
    6. 'max' → logprob: -10.584219932556152
    7. ' y' → logprob: -10.834219932556152
    8. ' x' → logprob: -10.834219932556152
    9. 'min' → logprob: -10.834219932556152
    10. '((' → logprob: -10.834219932556152

Token 615: ' >=' (ID: 5064)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.27926287055015564
    2. ' >' → logprob: -2.1542627811431885
    3. '+' → logprob: -2.4042627811431885
    4. '>=' → logprob: -4.279263019561768
    5. ')' → logprob: -4.779263019561768
    6. ' +' → logprob: -4.779263019561768
    7. ' >=' → logprob: -6.154263019561768
    8. '-' → logprob: -6.904263019561768
    9. '<' → logprob: -6.904263019561768
    10. ')>' → logprob: -7.154263019561768

Token 616: ' K' (ID: 658)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0015623578801751137
    2. ' y' → logprob: -7.376562595367432
    3. 'K' → logprob: -7.876562595367432
    4. '2' → logprob: -8.126562118530273
    5. '3' → logprob: -8.876562118530273
    6. 'L' → logprob: -10.501562118530273
    7. '   ' → logprob: -10.626562118530273
    8. 'k' → logprob: -11.001562118530273
    9. 'x' → logprob: -11.376562118530273
    10. '5' → logprob: -11.876562118530273

Token 617: ' +' (ID: 659)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.25136369466781616
    2. ')' → logprob: -2.001363754272461
    3. 'and' → logprob: -2.501363754272461
    4. '+' → logprob: -5.751363754272461
    5. ' )' → logprob: -7.126363754272461
    6. '-' → logprob: -8.126363754272461
    7. ' or' → logprob: -8.126363754272461
    8. ' +' → logprob: -8.251363754272461
    9. '   ' → logprob: -8.876363754272461
    10. ' -' → logprob: -9.626363754272461

Token 618: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006596710067242384
    2. '2' → logprob: -5.131596565246582
    3. 'y' → logprob: -7.756596565246582
    4. '3' → logprob: -8.381596565246582
    5. '(' → logprob: -12.381596565246582
    6. ' ' → logprob: -12.881596565246582
    7. '(y' → logprob: -13.881596565246582
    8. '0' → logprob: -14.006596565246582
    9. '4' → logprob: -14.631596565246582
    10. '5' → logprob: -14.756596565246582

Token 619: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003658864414319396
    2. '2' → logprob: -5.878658771514893
    3. 'y' → logprob: -7.503658771514893
    4. '3' → logprob: -8.12865924835205
    5. '(' → logprob: -12.50365924835205
    6. '(y' → logprob: -13.75365924835205
    7. 'x' → logprob: -14.87865924835205
    8. '5' → logprob: -14.87865924835205
    9. '4' → logprob: -15.00365924835205
    10. '0' → logprob: -15.25365924835205

Token 620: ' and' (ID: 326)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6281201243400574
    2. ' and' → logprob: -0.8781201243400574
    3. 'and' → logprob: -3.003120183944702
    4. ' )' → logprob: -7.128119945526123
    5. ' or' → logprob: -8.003120422363281
    6. '   ' → logprob: -10.253120422363281
    7. 'or' → logprob: -11.003120422363281
    8. ')
' → logprob: -11.128120422363281
    9. ' ' → logprob: -13.128120422363281
    10. '	and' → logprob: -14.253120422363281

Token 621: ' ' (ID: 220)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.29482370615005493
    2. '2' → logprob: -2.04482364654541
    3. 'x' → logprob: -2.66982364654541
    4. ' y' → logprob: -3.04482364654541
    5. ' x' → logprob: -6.16982364654541
    6. '(y' → logprob: -6.29482364654541
    7. '(' → logprob: -6.66982364654541
    8. ' ' → logprob: -6.66982364654541
    9. '(x' → logprob: -7.41982364654541
    10. '   ' → logprob: -7.41982364654541

Token 622: '2' (ID: 17)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.07769697904586792
    2. '2' → logprob: -2.9526970386505127
    3. 'x' → logprob: -4.702696800231934
    4. ' y' → logprob: -4.827696800231934
    5. '(' → logprob: -6.202696800231934
    6. '(y' → logprob: -6.202696800231934
    7. '1' → logprob: -8.077696800231934
    8. '(x' → logprob: -8.327696800231934
    9. ' ' → logprob: -8.827696800231934
    10. '   ' → logprob: -8.952696800231934

Token 623: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.7217414975166321
    2. ' *' → logprob: -0.8467414975166321
    3. '*y' → logprob: -2.4717414379119873
    4. '*x' → logprob: -7.721741676330566
    5. '*(' → logprob: -8.846741676330566
    6. 'y' → logprob: -8.846741676330566
    7. ')' → logprob: -9.846741676330566
    8. ' y' → logprob: -10.846741676330566
    9. '   ' → logprob: -12.096741676330566
    10. '(y' → logprob: -12.221741676330566

Token 624: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.009463991969823837
    2. 'x' → logprob: -5.009463787078857
    3. '(y' → logprob: -6.259463787078857
    4. '(' → logprob: -8.009464263916016
    5. '(x' → logprob: -8.384464263916016
    6. ' y' → logprob: -8.634464263916016
    7. '(K' → logprob: -10.009464263916016
    8. ' (' → logprob: -11.509464263916016
    9. 'K' → logprob: -11.821964263916016
    10. '
' → logprob: -12.321964263916016

Token 625: ' >=' (ID: 5064)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.4638563394546509
    2. '>=' → logprob: -1.7138563394546509
    3. ' >' → logprob: -1.9638563394546509
    4. ' >=' → logprob: -3.2138562202453613
    5. '<=' → logprob: -5.588856220245361
    6. ')' → logprob: -5.588856220245361
    7. ' <=' → logprob: -6.838856220245361
    8. '<' → logprob: -7.088856220245361
    9. '>K' → logprob: -8.21385669708252
    10. ' <' → logprob: -8.71385669708252

Token 626: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.00015038289711810648
    2. ' K' → logprob: -9.500150680541992
    3. '(' → logprob: -10.625150680541992
    4. '2' → logprob: -11.000150680541992
    5. '(K' → logprob: -11.250150680541992
    6. '   ' → logprob: -11.750150680541992
    7. ' ' → logprob: -12.625150680541992
    8. '  ' → logprob: -13.250150680541992
    9. '    ' → logprob: -13.625150680541992
    10. 'k' → logprob: -14.000150680541992

Token 627: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.38998040556907654
    2. ' +' → logprob: -1.139980435371399
    3. '-' → logprob: -6.639980316162109
    4. ' -' → logprob: -6.764980316162109
    5. ')' → logprob: -8.13998031616211
    6. '   ' → logprob: -8.26498031616211
    7. ' ' → logprob: -10.76498031616211
    8. '1' → logprob: -10.88998031616211
    9. ' and' → logprob: -11.01498031616211
    10. 'and' → logprob: -11.38998031616211

Token 628: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.024021469056606293
    2. '2' → logprob: -4.024021625518799
    3. '3' → logprob: -5.149021625518799
    4. '4' → logprob: -11.39902114868164
    5. '0' → logprob: -11.58652114868164
    6. ' ' → logprob: -12.21152114868164
    7. '11' → logprob: -12.33652114868164
    8. '5' → logprob: -12.64902114868164
    9. 'x' → logprob: -12.83652114868164
    10. '```' → logprob: -13.27402114868164

Token 629: '3' (ID: 18)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.11481914669275284
    2. '2' → logprob: -2.364819049835205
    3. '3' → logprob: -4.239819049835205
    4. '4' → logprob: -9.739819526672363
    5. '5' → logprob: -11.427319526672363
    6. '0' → logprob: -12.114819526672363
    7. '```' → logprob: -12.114819526672363
    8. '11' → logprob: -13.177319526672363
    9. '7' → logprob: -13.989819526672363
    10. ' ' → logprob: -13.989819526672363

Token 630: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005375436157919466
    2. ' and' → logprob: -8.375537872314453
    3. ' )' → logprob: -8.500537872314453
    4. 'and' → logprob: -9.250537872314453
    5. '   ' → logprob: -12.250537872314453
    6. ')
' → logprob: -13.750537872314453
    7. 'or' → logprob: -14.750537872314453
    8. '())' → logprob: -15.500537872314453
    9. ' or' → logprob: -15.625537872314453
    10. '),' → logprob: -15.875537872314453

Token 631: 'if' (ID: 366)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3815076947212219
    2. ')' → logprob: -1.5065076351165771
    3. '
' → logprob: -2.631507635116577
    4. '#' → logprob: -4.881507873535156
    5. '<|end|>' → logprob: -5.256507873535156
    6. '+' → logprob: -6.006507873535156
    7. '   ' → logprob: -6.256507873535156
    8. ':' → logprob: -6.881507873535156
    9. 'for' → logprob: -7.506507873535156
    10. '

' → logprob: -7.506507873535156

Token 632: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.39229339361190796
    2. ' K' → logprob: -1.1422934532165527
    3. ' __' → logprob: -5.892293453216553
    4. '__' → logprob: -6.017293453216553
    5. ' ' → logprob: -8.642292976379395
    6. '(K' → logprob: -11.517292976379395
    7. ' (' → logprob: -11.767292976379395
    8. '  ' → logprob: -12.142292976379395
    9. '	K' → logprob: -12.517292976379395
    10. '_K' → logprob: -13.517292976379395

Token 633: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.07901822775602341
    2. '%' → logprob: -2.5790181159973145
    3. ' ' → logprob: -9.204018592834473
    4. ' %
' → logprob: -11.079018592834473
    5. ' ==' → logprob: -12.829018592834473
    6. ' ' → logprob: -12.954018592834473
    7. '2' → logprob: -14.079018592834473
    8. ' >' → logprob: -14.079018592834473
    9. '1' → logprob: -14.204018592834473
    10. '<|end|>' → logprob: -14.329018592834473

Token 634: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.15310683415737e-05
    2. ' ' → logprob: -10.750021934509277
    3. '```' → logprob: -17.37502098083496
    4. '==' → logprob: -18.37502098083496
    5. '3' → logprob: -19.00002098083496
    6. '=' → logprob: -19.50002098083496
    7. '۲' → logprob: -19.62502098083496
    8. '1' → logprob: -21.06252098083496
    9. '२' → logprob: -21.18752098083496
    10. '₂' → logprob: -21.18752098083496

Token 635: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. ' ' → logprob: -17.375
    3. '```' → logprob: -18.125
    4. '3' → logprob: -20.0
    5. '1' → logprob: -21.25
    6. '=' → logprob: -21.375
    7. '202' → logprob: -21.875
    8. '==' → logprob: -22.25
    9. '۲' → logprob: -22.25
    10. '₂' → logprob: -22.5

Token 636: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.14367103576660156
    2. ' ==' → logprob: -2.0186710357666016
    3. ':' → logprob: -7.393671035766602
    4. '=' → logprob: -8.018671035766602
    5. '!=' → logprob: -11.518671035766602
    6. '1' → logprob: -11.518671035766602
    7. '==
' → logprob: -12.018671035766602
    8. ' =' → logprob: -12.518671035766602
    9. '0' → logprob: -12.643671035766602
    10. ' !=' → logprob: -12.768671035766602

Token 637: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006724960170686245
    2. '1' → logprob: -5.006724834442139
    3. ' ' → logprob: -11.631725311279297
    4. '```' → logprob: -15.131725311279297
    5. '
' → logprob: -15.631725311279297
    6. '=' → logprob: -15.819225311279297
    7. '==' → logprob: -17.444225311279297
    8. '(' → logprob: -17.756725311279297
    9. '2' → logprob: -18.069225311279297
    10. ' 
' → logprob: -18.194225311279297

Token 638: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0024829115718603134
    2. '1' → logprob: -6.002482891082764
    3. ' ' → logprob: -12.377483367919922
    4. '2' → logprob: -12.752483367919922
    5. '```' → logprob: -16.627483367919922
    6. '
' → logprob: -17.377483367919922
    7. '   ' → logprob: -18.814983367919922
    8. '00' → logprob: -19.314983367919922
    9. '==' → logprob: -19.502483367919922
    10. '4' → logprob: -19.689983367919922

Token 639: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0003820524725597352
    2. ':
' → logprob: -7.875381946563721
    3. ' :' → logprob: -13.250382423400879
    4. '):' → logprob: -16.625381469726562
    5. ':
' → logprob: -16.875381469726562
    6. ':

' → logprob: -17.625381469726562
    7. ':def' → logprob: -17.750381469726562
    8. '=' → logprob: -18.625381469726562
    9. ':**' → logprob: -18.875381469726562
    10. ' :
' → logprob: -19.375381469726562

Token 640: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0003729966701939702
    2. '
' → logprob: -8.625372886657715
    3. ':
' → logprob: -9.125372886657715
    4. ' print' → logprob: -9.625372886657715
    5. '#' → logprob: -12.125372886657715
    6. ':' → logprob: -12.250372886657715
    7. '   ' → logprob: -12.625372886657715
    8. '```' → logprob: -12.875372886657715
    9. 'result' → logprob: -13.250372886657715
    10. '	print' → logprob: -15.000372886657715

Token 641: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.002030230825766921
    2. '#' (adapté à ' #') → logprob: -6.252030372619629
    3. 'result' → logprob: -9.252030372619629
    4. '
' → logprob: -13.127030372619629
    5. ' print' → logprob: -13.252030372619629
    6. 'res' → logprob: -13.502030372619629
    7. '   ' → logprob: -15.627030372619629
    8. '#print' → logprob: -15.877030372619629
    9. '```' → logprob: -16.002029418945312
    10. 'r' → logprob: -16.627029418945312

Token 642: ' CAS' (ID: 44953)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00017874970217235386
    2. 'result' → logprob: -9.375178337097168
    3. ' print' → logprob: -10.000178337097168
    4. '#' → logprob: -10.875178337097168
    5. '```' → logprob: -11.000178337097168
    6. '   ' → logprob: -12.250178337097168
    7. 'prin' → logprob: -12.750178337097168
    8. 'pr' → logprob: -13.250178337097168
    9. '
' → logprob: -13.500178337097168
    10. 'res' → logprob: -14.125178337097168

Token 643: ' K' (ID: 658)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9154943227767944
    2. ':' → logprob: -1.5404943227767944
    3. 'even' → logprob: -1.7904943227767944
    4. 'N' → logprob: -3.040494441986084
    5. ' K' → logprob: -3.290494441986084
    6. ' even' → logprob: -3.415494441986084
    7. 'K' → logprob: -3.540494441986084
    8. ' =' → logprob: -3.915494441986084
    9. ' N' → logprob: -4.165494441986084
    10. '#' → logprob: -5.290494441986084

Token 644: ' pair' (ID: 10610)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.8286295533180237
    2. ':' → logprob: -1.328629493713379
    3. '==' → logprob: -2.578629493713379
    4. ' =' → logprob: -2.578629493713379
    5. '%' → logprob: -3.203629493713379
    6. ' <=' → logprob: -3.578629493713379
    7. ' %' → logprob: -3.953629493713379
    8. '=' → logprob: -3.953629493713379
    9. '   ' → logprob: -4.078629493713379
    10. ':
' → logprob: -4.828629493713379

Token 645: ' :' (ID: 712)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.03159479424357414
    2. '
' → logprob: -4.031594753265381
    3. '   ' → logprob: -5.156594753265381
    4. ':
' → logprob: -5.656594753265381
    5. 'result' → logprob: -6.406594753265381
    6. ' print' → logprob: -6.656594753265381
    7. ':' → logprob: -7.031594753265381
    8. '```' → logprob: -9.406595230102539
    9. '
' → logprob: -10.031595230102539
    10. '    
' → logprob: -10.656595230102539

Token 646: ' Le' (ID: 2018)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.001135454629547894
    2. 'result' → logprob: -7.001135349273682
    3. ' print' → logprob: -9.00113582611084
    4. '
' → logprob: -10.12613582611084
    5. '#' → logprob: -10.25113582611084
    6. 'res' → logprob: -10.75113582611084
    7. '```' → logprob: -14.25113582611084
    8. 'rés' → logprob: -14.37613582611084
    9. 'r' → logprob: -14.50113582611084
    10. '   ' → logprob: -14.50113582611084

Token 647: ' problème' (ID: 35630)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.027083422988653183
    2. ' print' → logprob: -4.527083396911621
    3. 'result' → logprob: -5.152083396911621
    4. 'r' → logprob: -5.527083396911621
    5. 'rés' → logprob: -5.902083396911621
    6. 'res' → logprob: -6.527083396911621
    7. '#' → logprob: -6.652083396911621
    8. ' résultat' → logprob: -8.652083396911621
    9. 'nombre' → logprob: -9.652083396911621
    10. ' result' → logprob: -10.027083396911621

Token 648: ' se' (ID: 458)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.34053102135658264
    2. ' =' → logprob: -1.5905309915542603
    3. 'est' → logprob: -3.59053111076355
    4. 'print' → logprob: -4.215530872344971
    5. 'rés' → logprob: -4.215530872344971
    6. 's' → logprob: -4.590530872344971
    7. '#' → logprob: -5.715530872344971
    8. 'res' → logprob: -6.090530872344971
    9. '   ' → logprob: -6.340530872344971
    10. 'def' → logprob: -6.715530872344971

Token 649: ' sé' (ID: 7462)
  Prédit: 'rés'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rés' → logprob: -0.02090386115014553
    2. 'res' → logprob: -4.770904064178467
    3. '#' → logprob: -5.020904064178467
    4. 'r' → logprob: -6.270904064178467
    5. 'ré' → logprob: -6.270904064178467
    6. '```' → logprob: -7.145904064178467
    7. ' rés' → logprob: -7.770904064178467
    8. 'solve' → logprob: -9.395903587341309
    9. 'continue' → logprob: -9.895903587341309
    10. 'resume' → logprob: -9.895903587341309

Token 650: 'pare' (ID: 6900)
  Prédit: 'rés'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rés' → logprob: -0.14535248279571533
    2. 'rie' → logprob: -3.770352363586426
    3. 'ré' → logprob: -4.020352363586426
    4. '#' → logprob: -4.395352363586426
    5. 'r' → logprob: -4.520352363586426
    6. 'rait' → logprob: -4.770352363586426
    7. 'res' → logprob: -5.020352363586426
    8. 'rv' → logprob: -5.270352363586426
    9. '{' → logprob: -5.520352363586426
    10. 'mble' → logprob: -5.645352363586426

Token 651: ' en' (ID: 469)
  Prédit: 'en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.4896039664745331
    2. '   ' → logprob: -0.9896039962768555
    3. ' en' → logprob: -5.1146039962768555
    4. '#' → logprob: -5.8646039962768555
    5. 'import' → logprob: -6.7396039962768555
    6. 'à' → logprob: -6.8646039962768555
    7. 'au' → logprob: -7.2396039962768555
    8. '=' → logprob: -7.2396039962768555
    9. ':' → logprob: -7.8646039962768555
    10. 'print' → logprob: -8.489603996276855

Token 652: ' deux' (ID: 10301)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.28860563039779663
    2. ' deux' → logprob: -2.5386056900024414
    3. '2' → logprob: -2.6636056900024414
    4. 'two' → logprob: -4.163605690002441
    5. '(N' → logprob: -4.163605690002441
    6. 'multip' → logprob: -4.913605690002441
    7. 'part' → logprob: -4.913605690002441
    8. 'N' → logprob: -4.913605690002441
    9. 'une' → logprob: -5.038605690002441
    10. '(' → logprob: -5.163605690002441

Token 653: ' sous' (ID: 14487)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'part' → logprob: -1.044364333152771
    2. 'mo' → logprob: -1.794364333152771
    3. 'fois' → logprob: -2.1693644523620605
    4. '#' → logprob: -2.4193644523620605
    5. 'parts' → logprob: -3.2943644523620605
    6. 'print' → logprob: -3.2943644523620605
    7. 'result' → logprob: -3.5443644523620605
    8. ' fois' → logprob: -3.6693644523620605
    9. 'val' → logprob: -4.0443644523620605
    10. 'sé' → logprob: -4.1693644523620605

Token 654: '-part' (ID: 41951)
  Prédit: 'pro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pro' → logprob: -0.005262218415737152
    2. 'part' → logprob: -6.00526237487793
    3. 's' → logprob: -7.13026237487793
    4. 'proble' → logprob: -7.13026237487793
    5. 'sé' → logprob: -7.75526237487793
    6. 'prob' → logprob: -8.88026237487793
    7. 'cas' → logprob: -9.50526237487793
    8. ' problèmes' → logprob: -9.75526237487793
    9. '   ' → logprob: -9.75526237487793
    10. 'bl' → logprob: -10.38026237487793

Token 655: 'ies' (ID: 566)
  Prédit: 'ies'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ies' → logprob: -0.0013139282818883657
    2. 'es' → logprob: -7.751314163208008
    3. 'ie' → logprob: -8.001314163208008
    4. 's' → logprob: -8.001314163208008
    5. 'i' → logprob: -9.126314163208008
    6. '#' → logprob: -9.626314163208008
    7. 'ié' → logprob: -12.126314163208008
    8. 'itions' → logprob: -12.251314163208008
    9. 'yes' → logprob: -12.501314163208008
    10. '```' → logprob: -12.626314163208008

Token 656: ' indépend' (ID: 68392)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07342717051506042
    2. ':' → logprob: -3.323427200317383
    3. ':
' → logprob: -3.448427200317383
    4. '
' → logprob: -7.573427200317383
    5. 'def' → logprob: -7.948427200317383
    6. '#' → logprob: -8.073427200317383
    7. '    
' → logprob: -8.573427200317383
    8. ',' → logprob: -8.573427200317383
    9. ' and' → logprob: -8.698427200317383
    10. ' =' → logprob: -8.948427200317383

Token 657: 'antes' (ID: 5193)
  Prédit: 'ies'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ies' → logprob: -0.5911170244216919
    2. 'es' → logprob: -1.091117024421692
    3. 'aires' → logprob: -3.3411169052124023
    4. 'antes' → logprob: -4.466116905212402
    5. 'is' → logprob: -4.591116905212402
    6. '#' → logprob: -4.716116905212402
    7. 'aites' → logprob: -4.716116905212402
    8. 'entes' → logprob: -5.216116905212402
    9. 'ent' → logprob: -5.216116905212402
    10. 'i' → logprob: -5.716116905212402

Token 658: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8195068836212158
    2. ':
' → logprob: -0.8195068836212158
    3. ':' → logprob: -2.319506883621216
    4. 'print' → logprob: -5.319506645202637
    5. '
' → logprob: -5.694506645202637
    6. '#' → logprob: -5.694506645202637
    7. 'def' → logprob: -5.819506645202637
    8. 'and' → logprob: -6.944506645202637
    9. 'result' → logprob: -7.069506645202637
    10. 'et' → logprob: -7.944506645202637

Token 659: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01370056439191103
    2. ':' → logprob: -4.888700485229492
    3. ':
' → logprob: -6.013700485229492
    4. 'print' → logprob: -6.263700485229492
    5. '
' → logprob: -7.638700485229492
    6. 'result' → logprob: -7.763700485229492
    7. '    
' → logprob: -8.388700485229492
    8. '#' → logprob: -8.638700485229492
    9. 'def' → logprob: -9.388700485229492
    10. ' and' → logprob: -9.888700485229492

Token 660: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3571670353412628
    2. 'res' → logprob: -1.8571670055389404
    3. 'result' → logprob: -2.4821670055389404
    4. '#' (adapté à ' #') → logprob: -3.6071670055389404
    5. 'ans' → logprob: -4.2321672439575195
    6. 'a' → logprob: -4.7321672439575195
    7. 'r' → logprob: -5.1071672439575195
    8. 'answer' → logprob: -6.8571672439575195
    9. 'x' → logprob: -7.4821672439575195
    10. 'part' → logprob: -7.6071672439575195

Token 661: ' Calcul' (ID: 57243)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.918062686920166
    2. 'result' → logprob: -1.043062686920166
    3. 'res' → logprob: -1.793062686920166
    4. '#' → logprob: -3.043062686920166
    5. 'r' → logprob: -4.543062686920166
    6. 'ans' → logprob: -5.168062686920166
    7. 'a' → logprob: -5.418062686920166
    8. 'half' → logprob: -5.668062686920166
    9. 'answer' → logprob: -5.793062686920166
    10. 'p' → logprob: -6.793062686920166

Token 662: ' sur' (ID: 1512)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.8629580140113831
    2. '=' → logprob: -1.4879579544067383
    3. ' =' → logprob: -2.1129579544067383
    4. 'res' → logprob: -2.3629579544067383
    5. 'r' → logprob: -2.6129579544067383
    6. '   ' → logprob: -3.7379579544067383
    7. ' result' → logprob: -4.862957954406738
    8. 'print' → logprob: -5.112957954406738
    9. 'de' → logprob: -5.237957954406738
    10. 'rés' → logprob: -5.612957954406738

Token 663: ' chaque' (ID: 21194)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.07956939935684204
    2. '(N' → logprob: -3.0795693397521973
    3. 'even' → logprob: -3.7045693397521973
    4. ' N' → logprob: -6.454569339752197
    5. '2' → logprob: -6.829569339752197
    6. 'la' → logprob: -7.704569339752197
    7. 'le' → logprob: -7.704569339752197
    8. '[N' → logprob: -8.329569816589355
    9. '(' → logprob: -8.454569816589355
    10. 'n' → logprob: -8.579569816589355

Token 664: ' sous' (ID: 14487)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'part' → logprob: -0.8080490827560425
    2. '(N' → logprob: -1.1830490827560425
    3. 'N' → logprob: -2.433049201965332
    4. 'mo' → logprob: -2.433049201965332
    5. ' moitié' → logprob: -3.558049201965332
    6. 'dem' → logprob: -3.933049201965332
    7. 'half' → logprob: -5.183049201965332
    8. ' partie' → logprob: -5.308049201965332
    9. ' mo' → logprob: -6.058049201965332
    10. '(n' → logprob: -6.558049201965332

Token 665: '-part' (ID: 41951)
  Prédit: 'sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sequence' → logprob: -1.0614796876907349
    2. 'suite' → logprob: -1.3114796876907349
    3. 'sé' → logprob: -1.8114796876907349
    4. 'part' → logprob: -2.0614795684814453
    5. 'N' → logprob: -2.9364795684814453
    6. 'pro' → logprob: -4.061479568481445
    7. 'table' → logprob: -4.936479568481445
    8. 's' → logprob: -5.811479568481445
    9. '(N' → logprob: -6.186479568481445
    10. 'liste' → logprob: -6.561479568481445

Token 666: 'ie' (ID: 396)
  Prédit: 'ie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ie' → logprob: -0.02607988379895687
    2. 'e' → logprob: -3.7760798931121826
    3. 'ies' → logprob: -7.5260796546936035
    4. 'N' → logprob: -7.5260796546936035
    5. 'é' → logprob: -8.151080131530762
    6. '#' → logprob: -8.401080131530762
    7. '(N' → logprob: -8.526080131530762
    8. 'i' → logprob: -8.526080131530762
    9. 'ée' → logprob: -8.901080131530762
    10. 'ion' → logprob: -9.026080131530762

Token 667: ' puis' (ID: 18766)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.2382692098617554
    2. 'res' → logprob: -1.7382692098617554
    3. 'print' → logprob: -1.8632692098617554
    4. ' =' → logprob: -2.613269329071045
    5. 'part' → logprob: -2.613269329071045
    6. '=' → logprob: -3.238269329071045
    7. 'even' → logprob: -3.238269329071045
    8. '   ' → logprob: -3.238269329071045
    9. '#' → logprob: -3.613269329071045
    10. 'answer' → logprob: -3.613269329071045

Token 668: ' on' (ID: 402)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.032762158662080765
    2. 'result' → logprob: -3.657762050628662
    3. 'res' → logprob: -6.157762050628662
    4. ' print' → logprob: -6.907762050628662
    5. '   ' → logprob: -7.032762050628662
    6. 'multip' → logprob: -7.032762050628662
    7. 'rés' → logprob: -8.03276252746582
    8. '(result' → logprob: -8.53276252746582
    9. '(print' → logprob: -8.65776252746582
    10. 'ans' → logprob: -8.78276252746582

Token 669: ' multipl' (ID: 44269)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.010460853576660156
    2. ' multipl' → logprob: -5.13546085357666
    3. 'mult' → logprob: -6.38546085357666
    4. ' print' → logprob: -6.63546085357666
    5. 'multiply' → logprob: -8.13546085357666
    6. 's' → logprob: -8.63546085357666
    7. 'prints' → logprob: -8.63546085357666
    8. '_print' → logprob: -9.01046085357666
    9. 'pr' → logprob: -9.38546085357666
    10. '
' → logprob: -9.38546085357666

Token 670: 'ie' (ID: 396)
  Prédit: 'ie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ie' → logprob: -0.005180154927074909
    2. 'ique' → logprob: -5.505180358886719
    3. 'ipl' → logprob: -8.005180358886719
    4. 'plique' → logprob: -8.130180358886719
    5. 'ier' → logprob: -9.255180358886719
    6. 'ies' → logprob: -9.755180358886719
    7. 'e' → logprob: -9.755180358886719
    8. 'ip' → logprob: -10.130180358886719
    9. 'y' → logprob: -10.630180358886719
    10. 'ue' → logprob: -10.880180358886719

Token 671: ' les' (ID: 1341)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.33373382687568665
    2. 'res' → logprob: -1.9587337970733643
    3. 'print' → logprob: -3.2087337970733643
    4. '   ' → logprob: -3.3337337970733643
    5. 'answer' → logprob: -4.333734035491943
    6. 'r' → logprob: -4.333734035491943
    7. 'ans' → logprob: -4.708734035491943
    8. ' =' → logprob: -4.708734035491943
    9. '#' → logprob: -5.208734035491943
    10. 'a' → logprob: -6.333734035491943

Token 672: ' résultats' (ID: 48985)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.14839982986450195
    2. 'rés' → logprob: -2.273399829864502
    3. 'res' → logprob: -3.523399829864502
    4. 'r' → logprob: -5.898399829864502
    5. 'results' → logprob: -6.523399829864502
    6. 'de' → logprob: -7.273399829864502
    7. '#' → logprob: -9.023399353027344
    8. 'ré' → logprob: -9.398399353027344
    9. 'print' → logprob: -9.648399353027344
    10. ' résultats' → logprob: -10.148399353027344

Token 673: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8760114908218384
    2. 'result' → logprob: -1.3760114908218384
    3. 'res' → logprob: -1.8760114908218384
    4. 'even' → logprob: -3.001011371612549
    5. '
' → logprob: -3.126011371612549
    6. 'print' → logprob: -3.251011371612549
    7. 'r' → logprob: -4.251011371612549
    8. 'answer' → logprob: -4.751011371612549
    9. 'a' → logprob: -5.751011371612549
    10. ':
' → logprob: -6.001011371612549

Token 674: '   ' (ID: 271)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.9813737273216248
    2. 'result' → logprob: -1.1063737869262695
    3. 'print' → logprob: -2.7313737869262695
    4. 'r' → logprob: -3.1063737869262695
    5. '   ' → logprob: -3.1063737869262695
    6. 'even' → logprob: -3.4813737869262695
    7. 'part' → logprob: -3.8563737869262695
    8. 'a' → logprob: -3.9813737869262695
    9. ':
' → logprob: -4.2313737869262695
    10. 'count' → logprob: -5.2313737869262695

Token 675: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.4378938674926758
    2. 'result' → logprob: -1.5628938674926758
    3. 'half' → logprob: -2.937893867492676
    4. 'part' → logprob: -3.437893867492676
    5. 'a' → logprob: -3.937893867492676
    6. 'r' → logprob: -4.062893867492676
    7. 'print' → logprob: -4.687893867492676
    8. 'ans' → logprob: -4.937893867492676
    9. 'x' → logprob: -6.562893867492676
    10. 'p' → logprob: -6.812893867492676

Token 676: '1' (ID: 16)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01693490892648697
    2. '=' → logprob: -4.141934871673584
    3. 'ult' → logprob: -7.391934871673584
    4. '1' → logprob: -9.016935348510742
    5. '_even' → logprob: -9.766935348510742
    6. 'u' → logprob: -9.891935348510742
    7. 'even' → logprob: -10.766935348510742
    8. 's' → logprob: -11.641935348510742
    9. 'ultat' → logprob: -11.891935348510742
    10. 'ults' → logprob: -12.266935348510742

Token 677: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931551694869995
    2. ' =' → logprob: -0.6931551694869995
    3. ',' → logprob: -11.818155288696289
    4. '=int' → logprob: -15.943155288696289
    5. ' ' → logprob: -16.06815528869629
    6. '=res' → logprob: -16.56815528869629
    7. ')' → logprob: -16.94315528869629
    8. '＝' → logprob: -17.19315528869629
    9. '=

' → logprob: -17.31815528869629
    10. ' =
' → logprob: -17.44315528869629

Token 678: ' even' (ID: 1952)
  Prédit: 'even'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'even' → logprob: -0.001331190811470151
    2. ' even' → logprob: -6.626331329345703
    3. 'pow' → logprob: -12.501331329345703
    4. '(e' → logprob: -15.126331329345703
    5. 'ev' → logprob: -15.376331329345703
    6. '(' → logprob: -15.626331329345703
    7. '_even' → logprob: -15.626331329345703
    8. 'e' → logprob: -16.126331329345703
    9. 'evenodd' → logprob: -16.126331329345703
    10. 'equal' → logprob: -16.501331329345703

Token 679: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.016552627086639404
    2. 'N' → logprob: -4.641552448272705
    3. '((' → logprob: -5.016552448272705
    4. '(' → logprob: -9.016552925109863
    5. '(n' → logprob: -11.641552925109863
    6. '(L' → logprob: -12.266552925109863
    7. '   ' → logprob: -12.891552925109863
    8. ' (' → logprob: -12.891552925109863
    9. 'L' → logprob: -13.266552925109863
    10. '(
' → logprob: -13.516552925109863

Token 680: ' //' (ID: 602)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0016732761869207025
    2. ' ,' → logprob: -6.751673221588135
    3. '//' → logprob: -8.126673698425293
    4. ',K' → logprob: -8.626673698425293
    5. ' //' → logprob: -11.251673698425293
    6. 'K' → logprob: -11.876673698425293
    7. ',
' → logprob: -12.876673698425293
    8. '   ' → logprob: -14.001673698425293
    9. ',k' → logprob: -14.251673698425293
    10. ' K' → logprob: -14.251673698425293

Token 681: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.8828707804204896e-05
    2. ' ' → logprob: -10.000048637390137
    3. '1' → logprob: -13.500048637390137
    4. '```' → logprob: -14.250048637390137
    5. '(' → logprob: -14.750048637390137
    6. '   ' → logprob: -15.812548637390137
    7. '4' → logprob: -15.937548637390137
    8. ')' → logprob: -16.125049591064453
    9. '3' → logprob: -16.625049591064453
    10. '  ' → logprob: -17.312549591064453

Token 682: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9623810658231378e-05
    2. '1' → logprob: -10.875020027160645
    3. ' ' → logprob: -15.500020027160645
    4. '4' → logprob: -15.625020027160645
    5. '```' → logprob: -16.875019073486328
    6. '3' → logprob: -17.375019073486328
    7. '(' → logprob: -17.500019073486328
    8. '   ' → logprob: -18.375019073486328
    9. '２' → logprob: -18.875019073486328
    10. '``' → logprob: -19.125019073486328

Token 683: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013644045684486628
    2. ' ,' → logprob: -6.626364231109619
    3. ',K' → logprob: -10.251364707946777
    4. '   ' → logprob: -13.626364707946777
    5. 'K' → logprob: -14.001364707946777
    6. ',
' → logprob: -14.251364707946777
    7. '  ' → logprob: -15.876364707946777
    8. ',k' → logprob: -16.25136375427246
    9. ')' → logprob: -16.37636375427246
    10. ' ' → logprob: -17.25136375427246

Token 684: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.00030900631099939346
    2. '(K' → logprob: -8.625308990478516
    3. ' K' → logprob: -9.375308990478516
    4. ' ' → logprob: -11.125308990478516
    5. '   ' → logprob: -11.375308990478516
    6. '(' → logprob: -11.750308990478516
    7. 'M' → logprob: -12.750308990478516
    8. ' (' → logprob: -13.250308990478516
    9. '  ' → logprob: -13.875308990478516
    10. 'res' → logprob: -14.000308990478516

Token 685: ' //' (ID: 602)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6141837239265442
    2. ',' → logprob: -0.8641837239265442
    3. '//' → logprob: -3.3641836643218994
    4. ')
' → logprob: -6.1141839027404785
    5. ' )' → logprob: -8.48918342590332
    6. ' ,' → logprob: -8.98918342590332
    7. ' //' → logprob: -9.48918342590332
    8. '```' → logprob: -9.98918342590332
    9. ')//' → logprob: -10.23918342590332
    10. ',res' → logprob: -10.36418342590332

Token 686: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.750000953674316
    3. '   ' → logprob: -18.750001907348633
    4. '1' → logprob: -18.875001907348633
    5. '```' → logprob: -19.250001907348633
    6. '4' → logprob: -19.375001907348633
    7. '۲' → logprob: -19.500001907348633
    8. '２' → logprob: -20.250001907348633
    9. '20' → logprob: -20.375001907348633
    10. ')' → logprob: -20.500001907348633

Token 687: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.339278580620885e-06
    2. '1' → logprob: -13.125001907348633
    3. ' ' → logprob: -15.500001907348633
    4. '۲' → logprob: -17.250001907348633
    5. '20' → logprob: -17.750001907348633
    6. '```' → logprob: -18.500001907348633
    7. '4' → logprob: -18.750001907348633
    8. '22' → logprob: -18.937501907348633
    9. ')' → logprob: -19.312501907348633
    10. '   ' → logprob: -19.375001907348633

Token 688: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.5282929539680481
    2. ')' → logprob: -0.9032929539680481
    3. ')
' → logprob: -5.528293132781982
    4. ',' → logprob: -6.778293132781982
    5. ' )
' → logprob: -11.278292655944824
    6. ' )' → logprob: -11.778292655944824
    7. '   ' → logprob: -12.278292655944824
    8. ')%' → logprob: -12.403292655944824
    9. ')

' → logprob: -12.903292655944824
    10. ')\' → logprob: -13.403292655944824

Token 689: '   ' (ID: 271)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.003256377298384905
    2. '
' → logprob: -5.753256320953369
    3. ' res' → logprob: -9.878256797790527
    4. '   ' → logprob: -10.753256797790527
    5. '    
' → logprob: -13.253256797790527
    6. '
' → logprob: -13.503256797790527
    7. ' 
' → logprob: -13.628256797790527
    8. '	res' → logprob: -14.128256797790527
    9. '  
' → logprob: -14.628256797790527
    10. '(res' → logprob: -16.37825584411621

Token 690: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -4.723352049040841e-06
    2. ' res' → logprob: -12.375004768371582
    3. '   ' → logprob: -15.000004768371582
    4. '
' → logprob: -17.500003814697266
    5. '(res' → logprob: -19.125003814697266
    6. '	res' → logprob: -19.500003814697266
    7. 'print' → logprob: -20.125003814697266
    8. '$res' → logprob: -20.125003814697266
    9. '_res' → logprob: -20.500003814697266
    10. 'resi' → logprob: -20.625003814697266

Token 691: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.128163257315464e-07
    2. ' =' → logprob: -16.0
    3. ' ' → logprob: -16.125
    4. '=' → logprob: -16.625
    5. '_' → logprob: -18.625
    6. '1' → logprob: -18.75
    7. '```' → logprob: -19.5
    8. '۲' → logprob: -21.1875
    9. '0' → logprob: -21.3125
    10. '
' → logprob: -21.5

Token 692: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931471824645996
    2. ' =' → logprob: -0.6931471824645996
    3. ' ' → logprob: -16.568147659301758
    4. '＝' → logprob: -18.568147659301758
    5. '   ' → logprob: -18.693147659301758
    6. ')' → logprob: -19.568147659301758
    7. ' ' → logprob: -19.693147659301758
    8. '_=' → logprob: -19.693147659301758
    9. '  ' → logprob: -19.943147659301758
    10. '=}' → logprob: -20.380647659301758

Token 693: ' even' (ID: 1952)
  Prédit: 'even'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'even' → logprob: -0.016038591042160988
    2. ' even' → logprob: -4.141038417816162
    3. 'e' → logprob: -14.14103889465332
    4. 'ev' → logprob: -14.26603889465332
    5. ' ' → logprob: -14.89103889465332
    6. 'evenodd' → logprob: -14.89103889465332
    7. '_even' → logprob: -15.01603889465332
    8. '(e' → logprob: -15.14103889465332
    9. '   ' → logprob: -15.26603889465332
    10. ' ' → logprob: -15.26603889465332

Token 694: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.38721564412117004
    2. '(N' → logprob: -1.1372156143188477
    3. '(' → logprob: -8.012215614318848
    4. 'N' → logprob: -11.887215614318848
    5. '(
' → logprob: -12.887215614318848
    6. '(n' → logprob: -13.137215614318848
    7. ' (' → logprob: -14.262215614318848
    8. '(((' → logprob: -15.262215614318848
    9. '(-' → logprob: -15.387215614318848
    10. '```' → logprob: -15.762215614318848

Token 695: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.22569869458675385
    2. '(N' → logprob: -1.600698709487915
    3. ' (' → logprob: -8.475698471069336
    4. ' N' → logprob: -10.350698471069336
    5. '(' → logprob: -10.850698471069336
    6. '   ' → logprob: -11.600698471069336
    7. '[N' → logprob: -12.663198471069336
    8. '	N' → logprob: -13.663198471069336
    9. ' ' → logprob: -13.663198471069336
    10. '(n' → logprob: -13.725698471069336

Token 696: ' +' (ID: 659)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(N' → logprob: -1.036081314086914
    2. ' -' → logprob: -1.661081314086914
    3. '(' → logprob: -1.786081314086914
    4. '-' → logprob: -2.161081314086914
    5. 'N' → logprob: -2.536081314086914
    6. ' (' → logprob: -2.911081314086914
    7. '+' → logprob: -4.286081314086914
    8. ' N' → logprob: -5.036081314086914
    9. '2' → logprob: -5.411081314086914
    10. ' ' → logprob: -5.536081314086914

Token 697: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. '(' → logprob: -14.750000953674316
    3. ' ' → logprob: -14.875000953674316
    4. '(N' → logprob: -17.625
    5. '2' → logprob: -18.125
    6. '-' → logprob: -18.625
    7. '0' → logprob: -19.25
    8. '
' → logprob: -19.5
    9. '   ' → logprob: -19.5
    10. '```' → logprob: -19.5

Token 698: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. '(' → logprob: -14.000000953674316
    3. ' ' → logprob: -16.500001907348633
    4. '-' → logprob: -17.250001907348633
    5. '(N' → logprob: -17.625001907348633
    6. '2' → logprob: -17.750001907348633
    7. '
' → logprob: -18.125001907348633
    8. '１' → logprob: -18.750001907348633
    9. '```' → logprob: -18.750001907348633
    10. '0' → logprob: -18.875001907348633

Token 699: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.023448003455996513
    2. ')//' → logprob: -3.8984479904174805
    3. '//' → logprob: -5.8984479904174805
    4. ' //' → logprob: -9.02344799041748
    5. ' )' → logprob: -11.27344799041748
    6. '```' → logprob: -11.64844799041748
    7. ' ' → logprob: -11.77344799041748
    8. '   ' → logprob: -12.64844799041748
    9. ')
' → logprob: -14.02344799041748
    10. '`' → logprob: -14.39844799041748

Token 700: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.3302778899669647
    2. ' //' → logprob: -1.330277919769287
    3. ')' → logprob: -4.330277919769287
    4. ' ' → logprob: -6.205277919769287
    5. '2' → logprob: -6.955277919769287
    6. '   ' → logprob: -8.330277442932129
    7. '```' → logprob: -8.580277442932129
    8. ')//' → logprob: -9.455277442932129
    9. '#' → logprob: -9.580277442932129
    10. '       ' → logprob: -10.705277442932129

Token 701: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.4974866644479334e-05
    2. ' ' → logprob: -11.125015258789062
    3. '   ' → logprob: -16.750015258789062
    4. '```' → logprob: -18.500015258789062
    5. '２' → logprob: -18.937515258789062
    6. '(' → logprob: -19.062515258789062
    7. '۲' → logprob: -19.250015258789062
    8. '
' → logprob: -19.812515258789062
    9. '1' → logprob: -19.875015258789062
    10. ')' → logprob: -19.937515258789062

Token 702: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.246537173457909e-06
    2. ' ' → logprob: -12.375003814697266
    3. '２' → logprob: -17.875003814697266
    4. '   ' → logprob: -18.500003814697266
    5. '۲' → logprob: -18.500003814697266
    6. '1' → logprob: -18.687503814697266
    7. '```' → logprob: -19.062503814697266
    8. '(' → logprob: -19.375003814697266
    9. '3' → logprob: -19.687503814697266
    10. '२' → logprob: -19.937503814697266

Token 703: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002466774603817612
    2. ' ,' → logprob: -8.62524700164795
    3. ',K' → logprob: -9.62524700164795
    4. ',
' → logprob: -14.87524700164795
    5. ',k' → logprob: -14.87524700164795
    6. '),' → logprob: -15.75024700164795
    7. ')' → logprob: -15.87524700164795
    8. '   ' → logprob: -16.625246047973633
    9. ',N' → logprob: -17.875246047973633
    10. '(),' → logprob: -18.250246047973633

Token 704: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.011061146855354309
    2. ' K' → logprob: -4.511061191558838
    3. '   ' → logprob: -11.88606071472168
    4. '(K' → logprob: -12.76106071472168
    5. ' (' → logprob: -14.01106071472168
    6. '(' → logprob: -14.01106071472168
    7. ' ' → logprob: -14.38606071472168
    8. '	K' → logprob: -14.63606071472168
    9. 'k' → logprob: -14.76106071472168
    10. '  ' → logprob: -15.38606071472168

Token 705: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.08895102888345718
    2. ' //' → logprob: -2.4639511108398438
    3. '#' → logprob: -11.963951110839844
    4. ' ' → logprob: -12.713951110839844
    5. '   ' → logprob: -14.338951110839844
    6. '/' → logprob: -15.088951110839844
    7. '2' → logprob: -15.463951110839844
    8. '```' → logprob: -15.463951110839844
    9. '//=' → logprob: -15.588951110839844
    10. ' ' → logprob: -15.838951110839844

Token 706: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.816093228830141e-06
    2. ' ' → logprob: -12.87500286102295
    3. '۲' → logprob: -17.250001907348633
    4. '```' → logprob: -17.500001907348633
    5. '   ' → logprob: -18.000001907348633
    6. '1' → logprob: -18.437501907348633
    7. '212' → logprob: -18.500001907348633
    8. '
' → logprob: -18.937501907348633
    9. '20' → logprob: -19.125001907348633
    10. '२' → logprob: -19.375001907348633

Token 707: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.5716304410016164e-05
    2. ' ' → logprob: -10.250035285949707
    3. '1' → logprob: -16.250036239624023
    4. '۲' → logprob: -17.375036239624023
    5. '   ' → logprob: -17.500036239624023
    6. '<|end|>' → logprob: -18.312536239624023
    7. ')' → logprob: -18.750036239624023
    8. '212' → logprob: -18.750036239624023
    9. '20' → logprob: -18.937536239624023
    10. '/' → logprob: -18.937536239624023

Token 708: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2520969808101654
    2. ')
' → logprob: -1.5020970106124878
    3. ')
' → logprob: -8.752097129821777
    4. ')

' → logprob: -11.752097129821777
    5. '   ' → logprob: -13.627097129821777
    6. ')`
' → logprob: -15.252097129821777
    7. ')

' → logprob: -16.62709617614746
    8. ' )' → logprob: -16.75209617614746
    9. '))' → logprob: -16.87709617614746
    10. ' )
' → logprob: -17.00209617614746

Token 709: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.006604883354157209
    2. '
' → logprob: -5.3816046714782715
    3. 'res' → logprob: -6.2566046714782715
    4. ' print' → logprob: -10.50660514831543
    5. '```' → logprob: -11.00660514831543
    6. '   ' → logprob: -11.25660514831543
    7. 'result' → logprob: -13.00660514831543
    8. '

' → logprob: -13.50660514831543
    9. '    
' → logprob: -13.75660514831543
    10. '
' → logprob: -14.13160514831543

Token 710: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0003896815178450197
    2. 'res' → logprob: -8.00039005279541
    3. '
' → logprob: -10.12539005279541
    4. 'result' → logprob: -11.25039005279541
    5. '```' → logprob: -14.37539005279541
    6. ' print' → logprob: -15.12539005279541
    7. '    
' → logprob: -16.750389099121094
    8. 'ans' → logprob: -17.000389099121094
    9. '#' → logprob: -17.125389099121094
    10. 'answer' → logprob: -17.375389099121094

Token 711: '(res' (ID: 8331)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.008621551096439362
    2. '(res' → logprob: -4.758621692657471
    3. '(' → logprob: -11.883621215820312
    4. ' (' → logprob: -15.883621215820312
    5. '(
' → logprob: -17.883621215820312
    6. '[(' → logprob: -18.133621215820312
    7. '
' → logprob: -18.258621215820312
    8. ' ((' → logprob: -18.633621215820312
    9. '(((' → logprob: -18.883621215820312
    10. '(result' → logprob: -19.258621215820312

Token 712: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.7835754988482222e-05
    2. ')' → logprob: -11.375018119812012
    3. '%' → logprob: -12.125018119812012
    4. '2' → logprob: -15.375018119812012
    5. '(res' → logprob: -15.625018119812012
    6. '```' → logprob: -15.875018119812012
    7. ')%' → logprob: -16.500017166137695
    8. ')
' → logprob: -16.875017166137695
    9. '(' → logprob: -17.125017166137695
    10. ' ' → logprob: -17.500017166137695

Token 713: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.5759502053260803
    2. ' *' → logprob: -0.8259502053260803
    3. ')' → logprob: -11.575950622558594
    4. ',' → logprob: -14.200950622558594
    5. ' ' → logprob: -15.075950622558594
    6. '   ' → logprob: -15.450950622558594
    7. '**' → logprob: -16.450950622558594
    8. '*)' → logprob: -17.075950622558594
    9. '*,' → logprob: -17.200950622558594
    10. '*object' → logprob: -17.325950622558594

Token 714: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.0001584850688232109
    2. ' res' → logprob: -8.750158309936523
    3. '(res' → logprob: -20.250158309936523
    4. '	res' → logprob: -20.750158309936523
    5. '
' → logprob: -22.750158309936523
    6. '_res' → logprob: -23.125158309936523
    7. '   ' → logprob: -23.375158309936523
    8. 'resi' → logprob: -23.875158309936523
    9. 'resc' → logprob: -24.625158309936523
    10. '```' → logprob: -24.625158309936523

Token 715: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0002512071805540472
    2. '%' → logprob: -9.000250816345215
    3. 'ult' → logprob: -9.625250816345215
    4. '```' → logprob: -11.000250816345215
    5. ')' → logprob: -12.000250816345215
    6. '1' → logprob: -12.000250816345215
    7. '3' → logprob: -12.125250816345215
    8. ' ' → logprob: -12.375250816345215
    9. 'M' → logprob: -12.625250816345215
    10. '_' → logprob: -13.000250816345215

Token 716: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.47409898042678833
    2. '%' → logprob: -0.9740989804267883
    3. ')' → logprob: -11.599099159240723
    4. '%A' → logprob: -12.599099159240723
    5. '%m' → logprob: -12.724099159240723
    6. '%D' → logprob: -12.724099159240723
    7. '%B' → logprob: -13.474099159240723
    8. '%C' → logprob: -14.099099159240723
    9. ')%' → logprob: -14.599099159240723
    10. '%c' → logprob: -15.599099159240723

Token 717: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -2.935296834039036e-06
    2. ' M' → logprob: -12.75000286102295
    3. '(M' → logprob: -21.250003814697266
    4. '	M' → logprob: -24.000003814697266
    5. 'М' → logprob: -24.125003814697266
    6. '   ' → logprob: -24.375003814697266
    7. '```' → logprob: -24.375003814697266
    8. '[M' → logprob: -24.625003814697266
    9. 'm' → logprob: -24.625003814697266
    10. '*M' → logprob: -25.125003814697266

Token 718: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.127333340875339e-06
    2. ')
' → logprob: -12.500003814697266
    3. ' )' → logprob: -14.875003814697266
    4. '")' → logprob: -18.125003814697266
    5. '),' → logprob: -19.250003814697266
    6. '))' → logprob: -19.750003814697266
    7. '')' → logprob: -19.750003814697266
    8. ')

' → logprob: -20.125003814697266
    9. '）' → logprob: -20.125003814697266
    10. ')#' → logprob: -20.375003814697266

Token 719: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -2.165027217415627e-05
    2. 'elif' → logprob: -11.000021934509277
    3. ' else' → logprob: -12.750021934509277
    4. '```' → logprob: -13.375021934509277
    5. '#else' → logprob: -15.250021934509277
    6. '#' → logprob: -16.62502098083496
    7. '<|end|>' → logprob: -16.75002098083496
    8. '``' → logprob: -18.25002098083496
    9. ')' → logprob: -19.25002098083496
    10. '...' → logprob: -19.50002098083496

Token 720: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.011053244583308697
    2. ':
' → logprob: -4.511053085327148
    3. ' :' → logprob: -12.761053085327148
    4. ':

' → logprob: -14.136053085327148
    5. ':def' → logprob: -14.886053085327148
    6. ':
' → logprob: -15.011053085327148
    7. ' :
' → logprob: -15.011053085327148
    8. ':#' → logprob: -15.511053085327148
    9. '):
' → logprob: -16.13605308532715
    10. '():
' → logprob: -16.38605308532715

Token 721: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00871289987117052
    2. '```' → logprob: -5.2587127685546875
    3. '#' → logprob: -5.8837127685546875
    4. 'def' → logprob: -7.6337127685546875
    5. '``' → logprob: -9.508712768554688
    6. 'L' → logprob: -9.883712768554688
    7. '    
' → logprob: -11.008712768554688
    8. '[' → logprob: -11.133712768554688
    9. '
' → logprob: -12.008712768554688
    10. '"""' → logprob: -12.133712768554688

Token 722: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.439127653837204
    2. 'dp' → logprob: -1.0641276836395264
    3. '   ' → logprob: -4.939127445220947
    4. 'L' → logprob: -6.314127445220947
    5. 'from' → logprob: -7.564127445220947
    6. 'DP' → logprob: -8.439127922058105
    7. 'def' → logprob: -8.564127922058105
    8. '```' → logprob: -8.814127922058105
    9. '
' → logprob: -9.439127922058105
    10. '"""
' → logprob: -9.814127922058105

Token 723: ' CAS' (ID: 44953)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.4205048084259033
    2. 'dp' → logprob: -1.1705048084259033
    3. 'from' → logprob: -4.295504570007324
    4. 'def' → logprob: -4.420504570007324
    5. 'L' → logprob: -5.045504570007324
    6. 'DP' → logprob: -8.295504570007324
    7. '
' → logprob: -8.670504570007324
    8. 'import' → logprob: -9.545504570007324
    9. 'max' → logprob: -9.920504570007324
    10. 'd' → logprob: -9.920504570007324

Token 724: ' K' (ID: 658)
  Prédit: ' K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' K' → logprob: -0.021117139607667923
    2. 'K' → logprob: -4.146117210388184
    3. '#' → logprob: -6.271117210388184
    4. ' #' → logprob: -6.646117210388184
    5. ' ' → logprob: -7.021117210388184
    6. '   ' → logprob: -7.396117210388184
    7. '  ' → logprob: -8.396117210388184
    8. ' N' → logprob: -10.271117210388184
    9. ' k' → logprob: -10.771117210388184
    10. ' n' → logprob: -11.146117210388184

Token 725: ' impair' (ID: 64113)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.2907618582248688
    2. ' %' → logprob: -1.6657618284225464
    3. '   ' → logprob: -3.415761947631836
    4. ' =' → logprob: -4.415761947631836
    5. ':' → logprob: -5.290761947631836
    6. ' %=' → logprob: -5.540761947631836
    7. ' odd' → logprob: -5.790761947631836
    8. '=' → logprob: -5.915761947631836
    9. '#' → logprob: -7.165761947631836
    10. ' #' → logprob: -7.290761947631836

Token 726: ' :' (ID: 712)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.6826671361923218
    2. '   ' → logprob: -0.8076671361923218
    3. '#' → logprob: -3.0576672554016113
    4. '
' → logprob: -7.182667255401611
    5. 'DP' → logprob: -7.807667255401611
    6. '```' → logprob: -8.182666778564453
    7. 'L' → logprob: -8.932666778564453
    8. 'def' → logprob: -9.182666778564453
    9. '    
' → logprob: -10.182666778564453
    10. ' dp' → logprob: -10.432666778564453

Token 727: ' Util' (ID: 13564)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.08913696557283401
    2. '#' → logprob: -2.464137077331543
    3. 'from' → logprob: -8.964137077331543
    4. 'DP' → logprob: -10.214137077331543
    5. '
' → logprob: -11.339137077331543
    6. 'def' → logprob: -12.214137077331543
    7. '   ' → logprob: -12.714137077331543
    8. 'd' → logprob: -12.964137077331543
    9. '```' → logprob: -13.339137077331543
    10. 'import' → logprob: -13.464137077331543

Token 728: 'isation' (ID: 6993)
  Prédit: 'ise'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ise' → logprob: -0.10581526160240173
    2. 'iser' → logprob: -3.3558151721954346
    3. 'isation' → logprob: -3.8558151721954346
    4. '#' → logprob: -4.105815410614014
    5. 'isant' → logprob: -4.605815410614014
    6. 'isez' → logprob: -5.605815410614014
    7. 'isé' → logprob: -5.855815410614014
    8. 'se' → logprob: -6.230815410614014
    9. 'import' → logprob: -6.605815410614014
    10. 'ize' → logprob: -6.605815410614014

Token 729: ' d' (ID: 272)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8059181571006775
    2. 'def' → logprob: -0.9309181571006775
    3. 'import' → logprob: -3.1809182167053223
    4. 'd' → logprob: -3.1809182167053223
    5. ' d' → logprob: -3.6809182167053223
    6. '#' → logprob: -4.180918216705322
    7. ' de' → logprob: -4.555918216705322
    8. '(
' → logprob: -4.805918216705322
    9. 'de' → logprob: -5.055918216705322
    10. '(' → logprob: -6.305918216705322

Token 730: ''un' (ID: 9788)
  Prédit: 'ef'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ef' → logprob: -0.2769666612148285
    2. 'e' → logprob: -2.5269665718078613
    3. ''une' → logprob: -2.7769665718078613
    4. 'une' → logprob: -3.6519665718078613
    5. ''un' → logprob: -3.7769665718078613
    6. 'un' → logprob: -4.276966571807861
    7. 'import' → logprob: -4.276966571807861
    8. 'def' → logprob: -4.651966571807861
    9. '#' → logprob: -6.026966571807861
    10. 'u' → logprob: -6.151966571807861

Token 731: ' DP' (ID: 51992)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9811162352561951
    2. 'from' → logprob: -1.1061162948608398
    3. '#' → logprob: -2.35611629486084
    4. 'dp' → logprob: -2.35611629486084
    5. 'DP' → logprob: -2.85611629486084
    6. 'import' → logprob: -3.10611629486084
    7. '```' → logprob: -7.10611629486084
    8. '
' → logprob: -7.23111629486084
    9. '3' → logprob: -8.10611629486084
    10. '...' → logprob: -9.73111629486084

Token 732: ' à' (ID: 1221)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05473930388689041
    2. 'dp' → logprob: -3.429739236831665
    3. '
' → logprob: -4.304739475250244
    4. ' =' → logprob: -5.679739475250244
    5. '=' → logprob: -7.304739475250244
    6. '#' → logprob: -7.304739475250244
    7. 'import' → logprob: -7.304739475250244
    8. ':' → logprob: -7.929739475250244
    9. ':
' → logprob: -7.929739475250244
    10. 'DP' → logprob: -8.429738998413086

Token 733: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '3' → logprob: -0.011197548359632492
    2. '[L' → logprob: -4.761197566986084
    3. '[[' → logprob: -6.386197566986084
    4. '(L' → logprob: -8.261197090148926
    5. '[' → logprob: -8.261197090148926
    6. 'L' → logprob: -8.761197090148926
    7. ' [[[' → logprob: -9.386197090148926
    8. '[N' → logprob: -10.136197090148926
    9. '[
' → logprob: -10.886197090148926
    10. 'import' → logprob: -11.011197090148926

Token 734: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.00012070851516909897
    2. '[L' → logprob: -9.250121116638184
    3. '(L' → logprob: -11.750121116638184
    4. 'L' → logprob: -12.250121116638184
    5. 'import' → logprob: -12.750121116638184
    6. '2' → logprob: -12.875121116638184
    7. 'three' → logprob: -13.125121116638184
    8. '[' → logprob: -13.750121116638184
    9. '```' → logprob: -13.750121116638184
    10. '4' → logprob: -14.375121116638184

Token 735: ' dimensions' (ID: 23995)
  Prédit: 'dimensions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dimensions' → logprob: -0.04959988594055176
    2. 'dim' → logprob: -3.9245998859405518
    3. 'd' → logprob: -4.674599647521973
    4. 'dims' → logprob: -4.799599647521973
    5. ' dimensions' → logprob: -5.049599647521973
    6. '_dimensions' → logprob: -6.174599647521973
    7. 'D' → logprob: -7.299599647521973
    8. '
' → logprob: -7.424599647521973
    9. 'dimension' → logprob: -7.674599647521973
    10. 'for' → logprob: -8.424599647521973

Token 736: ' 
' (ID: 793)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.047752730548381805
    2. '   ' → logprob: -3.422752618789673
    3. '#' → logprob: -5.172752857208252
    4. '
' → logprob: -5.422752857208252
    5. 'import' → logprob: -6.422752857208252
    6. ':' → logprob: -6.797752857208252
    7. ' dp' → logprob: -8.297752380371094
    8. ':
' → logprob: -8.547752380371094
    9. 'from' → logprob: -9.172752380371094
    10. 'DP' → logprob: -9.172752380371094

Token 737: '   ' (ID: 271)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.23808304965496063
    2. '   ' → logprob: -1.988083004951477
    3. ':' → logprob: -3.6130831241607666
    4. '
' → logprob: -3.7380831241607666
    5. ':
' → logprob: -4.9880828857421875
    6. '```' → logprob: -5.3630828857421875
    7. '#' → logprob: -5.4880828857421875
    8. '(dp' → logprob: -6.1130828857421875
    9. 'DP' → logprob: -6.6130828857421875
    10. 'import' → logprob: -6.6130828857421875

Token 738: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.006239352747797966
    2. 'from' → logprob: -5.131239414215088
    3. '#' (adapté à ' #') → logprob: -8.50623893737793
    4. 'import' → logprob: -9.25623893737793
    5. '
' → logprob: -11.63123893737793
    6. 'DP' → logprob: -13.75623893737793
    7. 'def' → logprob: -13.88123893737793
    8. 'L' → logprob: -14.38123893737793
    9. '```' → logprob: -15.50623893737793
    10. ' dp' → logprob: -15.63123893737793

Token 739: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.002088877372443676
    2. 'from' → logprob: -6.252089023590088
    3. 'import' → logprob: -9.25208854675293
    4. '#' → logprob: -9.75208854675293
    5. '   ' → logprob: -13.37708854675293
    6. 'L' → logprob: -13.37708854675293
    7. 'DP' → logprob: -13.75208854675293
    8. '
' → logprob: -14.25208854675293
    9. 'def' → logprob: -15.00208854675293
    10. '    
' → logprob: -15.75208854675293

Token 740: '[x' (ID: 17295)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07904577255249023
    2. '=' → logprob: -2.5790457725524902
    3. '=[' → logprob: -9.329046249389648
    4. '[' → logprob: -10.954046249389648
    5. '   ' → logprob: -11.079046249389648
    6. '=[[' → logprob: -12.204046249389648
    7. '```' → logprob: -12.704046249389648
    8. 'dp' → logprob: -12.829046249389648
    9. ']' → logprob: -12.954046249389648
    10. '	' → logprob: -13.204046249389648

Token 741: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.042758114635944366
    2. ']' → logprob: -3.7927582263946533
    3. ' =' → logprob: -4.292757987976074
    4. '=' → logprob: -5.667757987976074
    5. ']=' → logprob: -7.417757987976074
    6. ',' → logprob: -7.542757987976074
    7. '[' → logprob: -8.667757987976074
    8. ' ][' → logprob: -8.667757987976074
    9. '=[' → logprob: -9.042757987976074
    10. '   ' → logprob: -9.730257987976074

Token 742: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0017869214061647654
    2. '0' → logprob: -6.876786708831787
    3. 'L' → logprob: -8.376787185668945
    4. 'x' → logprob: -8.501787185668945
    5. ' y' → logprob: -8.876787185668945
    6. '][' → logprob: -9.876787185668945
    7. '
' → logprob: -11.001787185668945
    8. ']' → logprob: -11.126787185668945
    9. 'j' → logprob: -11.626787185668945
    10. '=' → logprob: -11.814287185668945

Token 743: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00043353010551072657
    2. ']' → logprob: -8.000433921813965
    3. '[' → logprob: -10.625433921813965
    4. ']=' → logprob: -11.375433921813965
    5. 'z' → logprob: -11.875433921813965
    6. ' ][' → logprob: -11.875433921813965
    7. '=' → logprob: -12.000433921813965
    8. '[z' → logprob: -12.000433921813965
    9. '   ' → logprob: -12.250433921813965
    10. '"][' → logprob: -12.500433921813965

Token 744: 'z' (ID: 89)
  Prédit: 'z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.06704013794660568
    2. '0' → logprob: -3.192040205001831
    3. 'j' → logprob: -5.317039966583252
    4. 'x' → logprob: -5.317039966583252
    5. 'L' → logprob: -5.442039966583252
    6. 'k' → logprob: -5.817039966583252
    7. 'l' → logprob: -5.942039966583252
    8. '1' → logprob: -6.817039966583252
    9. '2' → logprob: -7.567039966583252
    10. 's' → logprob: -8.06704044342041

Token 745: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.05223540589213371
    2. ' =' → logprob: -3.4272353649139404
    3. '=' → logprob: -4.0522356033325195
    4. ']=' → logprob: -7.0522356033325195
    5. ' ]' → logprob: -8.92723560333252
    6. '][' → logprob: -11.30223560333252
    7. ')' → logprob: -12.30223560333252
    8. '   ' → logprob: -12.42723560333252
    9. '[' → logprob: -12.80223560333252
    10. '```' → logprob: -13.17723560333252

Token 746: ' :' (ID: 712)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47410833835601807
    2. '=' → logprob: -0.9741083383560181
    3. '=[' → logprob: -11.599108695983887
    4. ']' → logprob: -12.224108695983887
    5. '[' → logprob: -12.599108695983887
    6. '   ' → logprob: -12.599108695983887
    7. ')' → logprob: -13.474108695983887
    8. '=[[' → logprob: -13.474108695983887
    9. ' ' → logprob: -13.599108695983887
    10. '=
' → logprob: -13.724108695983887

Token 747: ' nombre' (ID: 9733)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.24439816176891327
    2. '[[' → logprob: -2.1193981170654297
    3. '0' → logprob: -3.3693981170654297
    4. 'dp' → logprob: -4.24439811706543
    5. '[x' → logprob: -4.61939811706543
    6. ' [' → logprob: -5.24439811706543
    7. '#' → logprob: -5.24439811706543
    8. 'from' → logprob: -5.49439811706543
    9. '[
' → logprob: -5.49439811706543
    10. '[N' → logprob: -5.49439811706543

Token 748: ' de' (ID: 334)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0240397453308105
    2. 'de' → logprob: -2.0240397453308105
    3. '   ' → logprob: -2.2740397453308105
    4. ' de' → logprob: -2.2740397453308105
    5. '=' → logprob: -2.7740397453308105
    6. 'd' → logprob: -3.3990397453308105
    7. ')' → logprob: -3.5240397453308105
    8. '(
' → logprob: -3.6490397453308105
    9. ']' → logprob: -3.7740397453308105
    10. '#' → logprob: -3.8990397453308105

Token 749: ' façons' (ID: 165958)
  Prédit: 'man'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'man' → logprob: -0.4688773453235626
    2. 'sé' → logprob: -1.8438773155212402
    3. 'fa' → logprob: -1.8438773155212402
    4. ' façons' → logprob: -3.4688773155212402
    5. 'ways' → logprob: -4.96887731552124
    6. 'm' → logprob: -5.21887731552124
    7. 'positions' → logprob: -5.71887731552124
    8. 'config' → logprob: -6.34387731552124
    9. 's' → logprob: -6.46887731552124
    10. '[' → logprob: -6.96887731552124

Token 750: ' de' (ID: 334)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2511751055717468
    2. ' =' → logprob: -1.8761751651763916
    3. 'de' → logprob: -3.6261751651763916
    4. ' de' → logprob: -4.1261749267578125
    5. 'dp' → logprob: -4.8761749267578125
    6. '(N' → logprob: -6.0011749267578125
    7. 'd' → logprob: -6.1261749267578125
    8. '(' → logprob: -6.1261749267578125
    9. '(x' → logprob: -6.2511749267578125
    10. '   ' → logprob: -6.6261749267578125

Token 751: ' construire' (ID: 92473)
  Prédit: 'fill'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fill' → logprob: -0.9538934230804443
    2. '0' → logprob: -1.2038934230804443
    3. '[' → logprob: -1.7038934230804443
    4. '[[' → logprob: -2.9538934230804443
    5. 'build' → logprob: -3.9538934230804443
    6. 'x' → logprob: -4.078893661499023
    7. '[N' → logprob: -4.328893661499023
    8. 'construct' → logprob: -4.828893661499023
    9. 'faire' → logprob: -6.078893661499023
    10. ' remplir' → logprob: -6.203893661499023

Token 752: ' une' (ID: 2463)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.8797415494918823
    2. '[N' → logprob: -1.7547415494918823
    3. 'N' → logprob: -2.004741668701172
    4. '(N' → logprob: -2.504741668701172
    5. 'x' → logprob: -2.629741668701172
    6. '[[' → logprob: -4.004741668701172
    7. ' =' → logprob: -4.004741668701172
    8. '[x' → logprob: -4.379741668701172
    9. '0' → logprob: -4.504741668701172
    10. '(x' → logprob: -5.004741668701172

Token 753: ' sé' (ID: 7462)
  Prédit: 'sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sequence' → logprob: -0.07008060067892075
    2. 'sé' → logprob: -2.945080518722534
    3. 'seq' → logprob: -5.445080757141113
    4. ' sé' → logprob: -6.070080757141113
    5. 's' → logprob: -6.195080757141113
    6. 'x' → logprob: -6.695080757141113
    7. 'se' → logprob: -7.195080757141113
    8. '[x' → logprob: -7.445080757141113
    9. 'N' → logprob: -7.695080757141113
    10. ' sequence' → logprob: -7.820080757141113

Token 754: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -0.00943612027913332
    2. 'q' → logprob: -4.759436130523682
    3. 'quences' → logprob: -7.134436130523682
    4. 'que' → logprob: -11.509435653686523
    5. 'QUENCE' → logprob: -11.884435653686523
    6. 'qu' → logprob: -12.759435653686523
    7. '[' → logprob: -13.509435653686523
    8. '#' → logprob: -14.634435653686523
    9. '```' → logprob: -14.634435653686523
    10. '   ' → logprob: -15.259435653686523

Token 755: ' avec' (ID: 3937)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5491896271705627
    2. '=' → logprob: -1.424189567565918
    3. 'L' → logprob: -2.424189567565918
    4. '[L' → logprob: -3.674189567565918
    5. 'x' → logprob: -4.549189567565918
    6. 'de' → logprob: -4.674189567565918
    7. '=[' → logprob: -5.049189567565918
    8. '[x' → logprob: -5.049189567565918
    9. '=L' → logprob: -5.799189567565918
    10. '   ' → logprob: -5.924189567565918

Token 756: ':
' (ID: 734)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.04313426837325096
    2. 'dp' → logprob: -3.5431342124938965
    3. '[x' → logprob: -5.2931342124938965
    4. 'L' → logprob: -5.6681342124938965
    5. '0' → logprob: -6.5431342124938965
    6. ' x' → logprob: -7.2931342124938965
    7. 'z' → logprob: -7.2931342124938965
    8. 'N' → logprob: -7.5431342124938965
    9. '```' → logprob: -7.5431342124938965
    10. '(x' → logprob: -8.668134689331055

Token 757: '   ' (ID: 271)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -1.114210844039917
    2. '0' → logprob: -1.364210844039917
    3. 'N' → logprob: -1.364210844039917
    4. 'x' → logprob: -2.739210844039917
    5. ' ' → logprob: -4.114211082458496
    6. ' L' → logprob: -4.489211082458496
    7. '   ' → logprob: -4.489211082458496
    8. ' N' → logprob: -4.489211082458496
    9. '[
' → logprob: -4.614211082458496
    10. '[[' → logprob: -5.489211082458496

Token 758: ' #' (ID: 1069)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6948125958442688
    2. 'L' → logprob: -1.694812536239624
    3. 'x' → logprob: -2.069812536239624
    4. 'N' → logprob: -2.444812536239624
    5. '[x' → logprob: -3.194812536239624
    6. ' ' → logprob: -4.444812774658203
    7. ' L' → logprob: -4.694812774658203
    8. '[L' → logprob: -4.694812774658203
    9. ' x' → logprob: -5.319812774658203
    10. ' [' → logprob: -5.444812774658203

Token 759: ' x' (ID: 1215)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.8339925408363342
    2. 'N' → logprob: -1.3339924812316895
    3. 'x' → logprob: -1.4589924812316895
    4. '[x' → logprob: -4.0839924812316895
    5. '[N' → logprob: -4.8339924812316895
    6. 'z' → logprob: -5.0839924812316895
    7. ' N' → logprob: -5.2089924812316895
    8. ' ' → logprob: -5.3339924812316895
    9. 'dp' → logprob: -5.3339924812316895
    10. '[' → logprob: -5.4589924812316895

Token 760: ' éléments' (ID: 57375)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3601602613925934
    2. '][' → logprob: -1.985160231590271
    3. ',' → logprob: -2.9851603507995605
    4. '=' → logprob: -4.1101603507995605
    5. ' elements' → logprob: -4.4851603507995605
    6. ' consecutive' → logprob: -4.6101603507995605
    7. 'elements' → logprob: -4.7351603507995605
    8. '[' → logprob: -4.8601603507995605
    9. ']' → logprob: -4.9851603507995605
    10. 'cons' → logprob: -5.3601603507995605

Token 761: ' cons' (ID: 1473)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8451476097106934
    2. 'cons' → logprob: -1.7201476097106934
    3. '=' → logprob: -1.9701476097106934
    4. 'de' → logprob: -2.8451476097106934
    5. ' de' → logprob: -2.9701476097106934
    6. ' cons' → logprob: -3.3451476097106934
    7. 'con' → logprob: -3.3451476097106934
    8. ',' → logprob: -4.220147609710693
    9. '   ' → logprob: -4.470147609710693
    10. ' of' → logprob: -4.970147609710693

Token 762: 'écut' (ID: 96392)
  Prédit: 'écut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'écut' → logprob: -0.3079546093940735
    2. 'cut' → logprob: -1.4329545497894287
    3. 'secut' → logprob: -3.9329545497894287
    4. 'ecut' → logprob: -5.807954788208008
    5. '   ' → logprob: -6.307954788208008
    6. 'secutive' → logprob: -7.182954788208008
    7. 'x' → logprob: -7.932954788208008
    8. 'cuts' → logprob: -8.182954788208008
    9. '0' → logprob: -9.182954788208008
    10. 'éc' → logprob: -9.182954788208008

Token 763: 'ifs' (ID: 14119)
  Prédit: 'ut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ut' → logprob: -0.1297939121723175
    2. 't' → logprob: -3.504793882369995
    3. 'u' → logprob: -3.504793882369995
    4. '   ' → logprob: -3.629793882369995
    5. 'ents' → logprob: -4.504794120788574
    6. 'cut' → logprob: -5.629794120788574
    7. '[' → logprob: -5.879794120788574
    8. '][' → logprob: -5.879794120788574
    9. 'ifs' → logprob: -6.254794120788574
    10. '[]' → logprob: -6.379794120788574

Token 764: ' de' (ID: 334)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.031514048576355
    2. '=' → logprob: -1.156514048576355
    3. '][' → logprob: -2.7815141677856445
    4. 'cons' → logprob: -2.7815141677856445
    5. ',' → logprob: -3.5315141677856445
    6. 'de' → logprob: -3.7815141677856445
    7. '[' → logprob: -4.0315141677856445
    8. '+' → logprob: -4.2815141677856445
    9. ' de' → logprob: -4.2815141677856445
    10. 'con' → logprob: -4.2815141677856445

Token 765: ' par' (ID: 686)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.7969369888305664
    2. 'par' → logprob: -0.9219369888305664
    3. 'la' → logprob: -2.1719369888305664
    4. 'pair' → logprob: -4.546936988830566
    5. ' même' → logprob: -5.046936988830566
    6. '0' → logprob: -5.171936988830566
    7. '```' → logprob: -5.296936988830566
    8. 'type' → logprob: -6.296936988830566
    9. 'l' → logprob: -6.921936988830566
    10. 'y' → logprob: -6.921936988830566

Token 766: 'ité' (ID: 3761)
  Prédit: 'ité'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ité' → logprob: -0.13904444873332977
    2. 'it' → logprob: -2.8890445232391357
    3. 'ity' → logprob: -3.1390445232391357
    4. 'i' → logprob: -4.264044284820557
    5. 'ite' → logprob: -4.389044284820557
    6. 'itié' → logprob: -6.514044284820557
    7. 'x' → logprob: -7.639044284820557
    8. 't' → logprob: -7.764044284820557
    9. '2' → logprob: -8.389044761657715
    10. '__' → logprob: -8.639044761657715

Token 767: ' différente' (ID: 140707)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -1.4913337230682373
    2. '[' → logprob: -1.7413337230682373
    3. ' différente' → logprob: -1.7413337230682373
    4. 'different' → logprob: -1.9913337230682373
    5. ' different' → logprob: -3.1163337230682373
    6. '```' → logprob: -3.2413337230682373
    7. 'd' → logprob: -3.2413337230682373
    8. '   ' → logprob: -3.2413337230682373
    9. ' différent' → logprob: -3.4913337230682373
    10. '0' → logprob: -4.241333961486816

Token 768: ',' (ID: 11)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.5809718370437622
    2. ',' → logprob: -1.4559718370437622
    3. ',
' → logprob: -1.9559718370437622
    4. '   ' → logprob: -3.4559717178344727
    5. ' and' → logprob: -5.330971717834473
    6. ']' → logprob: -5.455971717834473
    7. '[x' → logprob: -5.705971717834473
    8. ',y' → logprob: -5.830971717834473
    9. 'and' → logprob: -6.080971717834473
    10. 'from' → logprob: -6.330971717834473

Token 769: ' 
' (ID: 793)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.08524196594953537
    2. ' y' → logprob: -2.9602420330047607
    3. 'z' → logprob: -3.7102420330047607
    4. '   ' → logprob: -6.085241794586182
    5. '#' → logprob: -6.335241794586182
    6. ' z' → logprob: -7.460241794586182
    7. '       ' → logprob: -8.08524227142334
    8. ',' → logprob: -9.08524227142334
    9. '[y' → logprob: -9.71024227142334
    10. '```' → logprob: -10.08524227142334

Token 770: '   ' (ID: 271)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.12789016962051392
    2. 'y' → logprob: -2.502890110015869
    3. '   ' → logprob: -3.377890110015869
    4. ' z' → logprob: -6.127890110015869
    5. '#' → logprob: -7.002890110015869
    6. ' y' → logprob: -7.377890110015869
    7. '```' → logprob: -9.377890586853027
    8. '       ' → logprob: -10.002890586853027
    9. ',' → logprob: -10.252890586853027
    10. '[z' → logprob: -10.377890586853027

Token 771: ' #' (ID: 1069)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.09937863796949387
    2. 'z' → logprob: -2.4743785858154297
    3. '#' (adapté à ' #') → logprob: -4.72437858581543
    4. ' y' → logprob: -7.34937858581543
    5. '   ' → logprob: -7.72437858581543
    6. 'x' → logprob: -9.47437858581543
    7. '```' → logprob: -9.59937858581543
    8. '       ' → logprob: -9.72437858581543
    9. '0' → logprob: -9.84937858581543
    10. ' z' → logprob: -10.47437858581543

Token 772: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.16168734431266785
    2. 'z' → logprob: -1.9116873741149902
    3. '   ' → logprob: -7.16168737411499
    4. ' y' → logprob: -7.53668737411499
    5. '```' → logprob: -9.286686897277832
    6. ' z' → logprob: -10.536686897277832
    7. '       ' → logprob: -11.661686897277832
    8. 'x' → logprob: -11.911686897277832
    9. '[' → logprob: -12.911686897277832
    10. '	y' → logprob: -13.036686897277832

Token 773: ' éléments' (ID: 57375)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '][' → logprob: -0.1362631767988205
    2. '[' → logprob: -2.511263132095337
    3. '[z' → logprob: -4.761263370513916
    4. 'cons' → logprob: -5.761263370513916
    5. 'elements' → logprob: -5.761263370513916
    6. 'con' → logprob: -6.136263370513916
    7. 'par' → logprob: -6.261263370513916
    8. '[int' → logprob: -6.261263370513916
    9. '+' → logprob: -6.261263370513916
    10. ')[' → logprob: -6.511263370513916

Token 774: ' de' (ID: 334)
  Prédit: 'con'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'con' → logprob: -0.5534533262252808
    2. 'cons' → logprob: -1.4284533262252808
    3. ' de' → logprob: -2.5534534454345703
    4. 'de' → logprob: -2.9284534454345703
    5. ' cons' → logprob: -3.0534534454345703
    6. 'of' → logprob: -6.42845344543457
    7. '[' → logprob: -6.55345344543457
    8. ' of' → logprob: -6.92845344543457
    9. '   ' → logprob: -7.17845344543457
    10. '```' → logprob: -7.67845344543457

Token 775: ' par' (ID: 686)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.20395079255104065
    2. 'm' → logprob: -1.8289507627487183
    3. 'la' → logprob: -4.078950881958008
    4. ' même' → logprob: -5.703950881958008
    5. 'con' → logprob: -6.578950881958008
    6. 'cons' → logprob: -7.203950881958008
    7. 'z' → logprob: -7.828950881958008
    8. 'same' → logprob: -8.328950881958008
    9. '```' → logprob: -8.328950881958008
    10. ' par' → logprob: -8.953950881958008

Token 776: 'ité' (ID: 3761)
  Prédit: 'ité'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ité' → logprob: -0.044803570955991745
    2. 'ity' → logprob: -4.044803619384766
    3. 'it' → logprob: -4.544803619384766
    4. 'ite' → logprob: -4.544803619384766
    5. 'i' → logprob: -5.919803619384766
    6. '2' → logprob: -7.544803619384766
    7. 'ti' → logprob: -8.294803619384766
    8. 'itié' → logprob: -8.294803619384766
    9. '_' → logprob: -8.919803619384766
    10. '[' → logprob: -8.919803619384766

Token 777: ' ident' (ID: 3951)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.0289018377661705
    2. 'z' → logprob: -4.778902053833008
    3. '```' → logprob: -4.778902053833008
    4. 'm' → logprob: -4.903902053833008
    5. 'ég' → logprob: -6.778902053833008
    6. ' différente' → logprob: -6.903902053833008
    7. 'ident' → logprob: -7.403902053833008
    8. 'different' → logprob: -7.403902053833008
    9. '   ' → logprob: -7.778902053833008
    10. 'same' → logprob: -9.278902053833008

Token 778: 'ique' (ID: 2222)
  Prédit: 'ique'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ique' → logprob: -0.019309859722852707
    2. 'que' → logprob: -4.894309997558594
    3. 'icale' → logprob: -5.019309997558594
    4. 'ical' → logprob: -6.894309997558594
    5. 'iques' → logprob: -7.019309997558594
    6. '```' → logprob: -7.269309997558594
    7. 'cal' → logprob: -7.894309997558594
    8. 't' → logprob: -8.144309997558594
    9. 'cale' → logprob: -8.519309997558594
    10. 'ale' → logprob: -8.644309997558594

Token 779: ',' (ID: 11)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.1294867992401123
    2. '[z' → logprob: -3.2544867992401123
    3. ',' → logprob: -3.7544867992401123
    4. ']' → logprob: -4.254487037658691
    5. '[' → logprob: -4.254487037658691
    6. '   ' → logprob: -4.754487037658691
    7. 'z' → logprob: -5.254487037658691
    8. '[x' → logprob: -5.754487037658691
    9. ',
' → logprob: -6.004487037658691
    10. '```' → logprob: -6.254487037658691

Token 780: ' 
' (ID: 793)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.0048785158433020115
    2. '#' → logprob: -5.879878520965576
    3. '   ' → logprob: -6.879878520965576
    4. ' z' → logprob: -7.504878520965576
    5. '
' → logprob: -8.879878044128418
    6. '       ' → logprob: -9.879878044128418
    7. '```' → logprob: -9.879878044128418
    8. ',' → logprob: -10.004878044128418
    9. ' and' → logprob: -10.004878044128418
    10. 'and' → logprob: -10.504878044128418

Token 781: '   ' (ID: 271)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.29480960965156555
    2. 'z' → logprob: -1.5448095798492432
    3. '   ' → logprob: -3.669809579849243
    4. 'and' → logprob: -4.919809818267822
    5. ' and' → logprob: -5.669809818267822
    6. 'N' → logprob: -6.794809818267822
    7. ' z' → logprob: -7.169809818267822
    8. '```' → logprob: -7.419809818267822
    9. '                   ' → logprob: -7.794809818267822
    10. 'L' → logprob: -8.544809341430664

Token 782: ' #' (ID: 1069)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.0010924735106527805
    2. ' z' → logprob: -8.251092910766602
    3. '#' (adapté à ' #') → logprob: -8.626092910766602
    4. '   ' → logprob: -8.751092910766602
    5. '][' → logprob: -8.876092910766602
    6. 'and' → logprob: -9.626092910766602
    7. '[' → logprob: -9.751092910766602
    8. ' and' → logprob: -10.001092910766602
    9. '       ' → logprob: -10.251092910766602
    10. ']' → logprob: -10.751092910766602

Token 783: ' et' (ID: 859)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.0014284518547356129
    2. ' z' → logprob: -6.876428604125977
    3. 'k' → logprob: -8.626428604125977
    4. '0' → logprob: -10.001428604125977
    5. 'L' → logprob: -10.501428604125977
    6. 'K' → logprob: -10.626428604125977
    7. 'N' → logprob: -10.876428604125977
    8. '   ' → logprob: -11.001428604125977
    9. '][' → logprob: -11.001428604125977
    10. '
' → logprob: -11.376428604125977

Token 784: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.06240355968475342
    2. ' z' → logprob: -2.812403678894043
    3. '0' → logprob: -9.187403678894043
    4. 'x' → logprob: -9.687403678894043
    5. 'N' → logprob: -9.812403678894043
    6. 'k' → logprob: -10.062403678894043
    7. '   ' → logprob: -10.562403678894043
    8. 'K' → logprob: -11.062403678894043
    9. ' (' → logprob: -11.062403678894043
    10. '(z' → logprob: -11.687403678894043

Token 785: ' =' (ID: 314)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.49547597765922546
    2. ' =' → logprob: -1.7454760074615479
    3. '+' → logprob: -2.870476007461548
    4. ']' → logprob: -3.495476007461548
    5. '=' → logprob: -3.745476007461548
    6. ' +' → logprob: -3.745476007461548
    7. '[' → logprob: -3.745476007461548
    8. ')' → logprob: -4.370475769042969
    9. 'in' → logprob: -4.620475769042969
    10. '][' → logprob: -5.245475769042969

Token 786: ' le' (ID: 505)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01951632834970951
    2. '1' → logprob: -4.894516468048096
    3. ' ' → logprob: -5.394516468048096
    4. 'L' → logprob: -5.894516468048096
    5. 'x' → logprob: -7.644516468048096
    6. '(L' → logprob: -7.644516468048096
    7. 'N' → logprob: -7.894516468048096
    8. '2' → logprob: -7.894516468048096
    9. ' (' → logprob: -8.144515991210938
    10. 'K' → logprob: -8.144515991210938

Token 787: ' maximum' (ID: 10562)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.48757630586624146
    2. '1' → logprob: -2.9875762462615967
    3. 'N' → logprob: -2.9875762462615967
    4. 'L' → logprob: -3.2375762462615967
    5. 'z' → logprob: -3.2375762462615967
    6. 'K' → logprob: -3.4875762462615967
    7. 'x' → logprob: -3.4875762462615967
    8. '(L' → logprob: -3.6125762462615967
    9. 'nombre' → logprob: -4.487576484680176
    10. 'y' → logprob: -4.487576484680176

Token 788: ' "' (ID: 392)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '][' → logprob: -0.5826597809791565
    2. '_' → logprob: -2.2076597213745117
    3. ']' → logprob: -2.5826597213745117
    4. '+' → logprob: -3.2076597213745117
    5. '_con' → logprob: -3.4576597213745117
    6. ')' → logprob: -3.5826597213745117
    7. 'con' → logprob: -3.8326597213745117
    8. 'x' → logprob: -4.207659721374512
    9. '[x' → logprob: -4.207659721374512
    10. 'de' → logprob: -4.582659721374512

Token 789: 'pot' (ID: 18147)
  Prédit: 'con'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'con' → logprob: -0.6092401146888733
    2. 'des' → logprob: -2.2342400550842285
    3. ' des' → logprob: -2.3592400550842285
    4. 'cons' → logprob: -2.4842400550842285
    5. '(x' → logprob: -3.7342400550842285
    6. 'max' → logprob: -3.9842400550842285
    7. 'de' → logprob: -3.9842400550842285
    8. ' cons' → logprob: -4.2342400550842285
    9. 'd' → logprob: -4.4842400550842285
    10. 'x' → logprob: -4.6092400550842285

Token 790: 'entiel' (ID: 108212)
  Prédit: 'entiel'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'entiel' → logprob: -0.5226846933364868
    2. 'ent' → logprob: -1.2726846933364868
    3. 'max' → logprob: -3.5226845741271973
    4. '```' → logprob: -4.147684574127197
    5. 'en' → logprob: -4.272684574127197
    6. '   ' → logprob: -4.397684574127197
    7. 'ence' → logprob: -4.772684574127197
    8. 'x' → logprob: -5.147684574127197
    9. 'ency' → logprob: -5.272684574127197
    10. '=' → logprob: -5.397684574127197

Token 791: '"' (ID: 1)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.942202091217041
    2. ' des' → logprob: -1.692202091217041
    3. ' +' → logprob: -2.692202091217041
    4. 'des' → logprob: -3.067202091217041
    5. 'de' → logprob: -3.192202091217041
    6. 'd' → logprob: -3.192202091217041
    7. ' de' → logprob: -3.317202091217041
    8. '_' → logprob: -3.442202091217041
    9. ' of' → logprob: -3.817202091217041
    10. 'z' → logprob: -3.817202091217041

Token 792: ' jusqu' (ID: 21961)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -1.0164172649383545
    2. ']' → logprob: -1.1414172649383545
    3. '][' → logprob: -1.6414172649383545
    4. ' +' → logprob: -3.8914172649383545
    5. ')' → logprob: -4.141417503356934
    6. '```' → logprob: -4.391417503356934
    7. '<|end|>' → logprob: -4.891417503356934
    8. '[' → logprob: -4.891417503356934
    9. 'size' → logprob: -5.016417503356934
    10. '[x' → logprob: -5.016417503356934

Token 793: ''où' (ID: 186468)
  Prédit: ''à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''à' → logprob: -0.058929961174726486
    2. ''ici' → logprob: -3.933929920196533
    3. ''au' → logprob: -4.558929920196533
    4. 'à' → logprob: -4.933929920196533
    5. '’à' → logprob: -5.058929920196533
    6. '[x' → logprob: -5.433929920196533
    7. '[z' → logprob: -5.933929920196533
    8. 'z' → logprob: -6.308929920196533
    9. '[' → logprob: -6.933929920196533
    10. 'au' → logprob: -6.933929920196533

Token 794: ' on' (ID: 402)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.08146745711565018
    2. 'z' → logprob: -3.456467390060425
    3. 'now' → logprob: -4.831467628479004
    4. '   ' → logprob: -4.956467628479004
    5. 'max' → logprob: -5.081467628479004
    6. 'y' → logprob: -5.581467628479004
    7. '(x' → logprob: -5.956467628479004
    8. '[x' → logprob: -5.956467628479004
    9. 'aux' → logprob: -6.081467628479004
    10. 'a' → logprob: -6.206467628479004

Token 795: ' peut' (ID: 9216)
  Prédit: 'pe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pe' → logprob: -0.40812766551971436
    2. 'x' → logprob: -2.283127784729004
    3. ']' → logprob: -2.533127784729004
    4. ' peux' → logprob: -3.158127784729004
    5. 'pour' → logprob: -3.783127784729004
    6. 'vais' → logprob: -4.158127784729004
    7. 'do' → logprob: -4.408127784729004
    8. '[' → logprob: -4.408127784729004
    9. 's' → logprob: -5.033127784729004
    10. 'z' → logprob: -5.158127784729004

Token 796: ' all' (ID: 722)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'z' → logprob: -1.3011150360107422
    2. 'aller' → logprob: -1.4261150360107422
    3. 'x' → logprob: -2.051115036010742
    4. 'contin' → logprob: -2.551115036010742
    5. 'all' → logprob: -2.676115036010742
    6. 'faire' → logprob: -2.926115036010742
    7. 'atte' → logprob: -3.176115036010742
    8. ' continuer' → logprob: -4.176115036010742
    9. '+' → logprob: -4.551115036010742
    10. 'arr' → logprob: -4.551115036010742

Token 797: 'onger' (ID: 71016)
  Prédit: 'owed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'owed' → logprob: -0.5386907458305359
    2. 'ow' → logprob: -0.9136907458305359
    3. 'x' → logprob: -5.413690567016602
    4. 'er' → logprob: -6.038690567016602
    5. 'e' → logprob: -6.163690567016602
    6. 'o' → logprob: -6.663690567016602
    7. 'ower' → logprob: -6.913690567016602
    8. 'é' → logprob: -7.288690567016602
    9. 'ed' → logprob: -7.913690567016602
    10. 'oved' → logprob: -8.163690567016602

Token 798: ' un' (ID: 537)
  Prédit: '[x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.5152787566184998
    2. '_' → logprob: -1.6402788162231445
    3. '[' → logprob: -3.0152788162231445
    4. '   ' → logprob: -3.8902788162231445
    5. ' _' → logprob: -4.2652788162231445
    6. 'x' → logprob: -4.2652788162231445
    7. '_con' → logprob: -4.5152788162231445
    8. 'z' → logprob: -4.6402788162231445
    9. '(x' → logprob: -5.0152788162231445
    10. '[z' → logprob: -5.0152788162231445

Token 799: ' bloc' (ID: 51218)
  Prédit: 'bloc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bloc' → logprob: -0.24113956093788147
    2. 'block' → logprob: -1.741139531135559
    3. ' bloc' → logprob: -3.8661396503448486
    4. 'con' → logprob: -5.8661394119262695
    5. '_bloc' → logprob: -6.2411394119262695
    6. '```' → logprob: -6.2411394119262695
    7. '[' → logprob: -6.2411394119262695
    8. 'par' → logprob: -6.4911394119262695
    9. 'segment' → logprob: -6.9911394119262695
    10. 'élé' → logprob: -6.9911394119262695

Token 800: '.
' (ID: 558)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16256822645664215
    2. '=' → logprob: -2.5375683307647705
    3. '   ' → logprob: -3.1625683307647705
    4. ']' → logprob: -3.7875683307647705
    5. ')' → logprob: -6.287568092346191
    6. '```' → logprob: -7.162568092346191
    7. 'import' → logprob: -7.787568092346191
    8. '][' → logprob: -7.787568092346191
    9. '=[' → logprob: -7.787568092346191
    10. '[' → logprob: -8.287568092346191

Token 801: '   ' (ID: 271)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.09001574665307999
    2. '   ' → logprob: -3.5900156497955322
    3. 'import' → logprob: -3.7150156497955322
    4. '[' → logprob: -4.840015888214111
    5. 'from' → logprob: -4.965015888214111
    6. ']' → logprob: -5.215015888214111
    7. '```' → logprob: -5.590015888214111
    8. '#' → logprob: -5.715015888214111
    9. ' dp' → logprob: -6.965015888214111
    10. '
' → logprob: -6.965015888214111

Token 802: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.003950763493776321
    2. 'from' → logprob: -6.378950595855713
    3. '
' → logprob: -6.878950595855713
    4. 'import' → logprob: -7.003950595855713
    5. ' dp' → logprob: -9.128951072692871
    6. '```' → logprob: -10.253951072692871
    7. '   ' → logprob: -10.378951072692871
    8. '[' → logprob: -10.753951072692871
    9. '#' → logprob: -10.878951072692871
    10. 'N' → logprob: -10.878951072692871

Token 803: '0' (ID: 15)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931617259979248
    2. ' =' → logprob: -0.6931617259979248
    3. '=[' → logprob: -11.443161964416504
    4. '=[[' → logprob: -13.068161964416504
    5. '[' → logprob: -14.068161964416504
    6. ' ' → logprob: -15.318161964416504
    7. '=
' → logprob: -15.693161964416504
    8. '[[' → logprob: -16.193161010742188
    9. '＝' → logprob: -16.568161010742188
    10. '	' → logprob: -16.568161010742188

Token 804: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5231677889823914
    2. ' =' → logprob: -0.8981677889823914
    3. '=[' → logprob: -10.773167610168457
    4. '[' → logprob: -11.398167610168457
    5. '0' → logprob: -12.523167610168457
    6. '=[[' → logprob: -12.898167610168457
    7. ' ' → logprob: -14.023167610168457
    8. ']' → logprob: -14.398167610168457
    9. '=
' → logprob: -14.523167610168457
    10. ',' → logprob: -14.523167610168457

Token 805: ' [[[' (ID: 121934)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.0002860073291230947
    2. ' [[[' → logprob: -8.250286102294922
    3. '[' → logprob: -10.625286102294922
    4. '[L' → logprob: -15.125286102294922
    5. '{' → logprob: -16.750286102294922
    6. ' [[' → logprob: -17.000286102294922
    7. '[
' → logprob: -17.375286102294922
    8. '[int' → logprob: -18.375286102294922
    9. '0' → logprob: -19.000286102294922
    10. '[((' → logprob: -19.250286102294922

Token 806: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.4121114822482923e-06
    2. '1' → logprob: -12.750003814697266
    3. ' ' → logprob: -15.750003814697266
    4. '
' → logprob: -16.750003814697266
    5. '[' → logprob: -16.937503814697266
    6. 'False' → logprob: -17.062503814697266
    7. '(' → logprob: -17.187503814697266
    8. 'int' → logprob: -17.687503814697266
    9. '۰' → logprob: -17.750003814697266
    10. ']' → logprob: -18.562503814697266

Token 807: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5291772484779358
    2. ' for' → logprob: -1.279177188873291
    3. 'for' → logprob: -2.154177188873291
    4. ']*(' → logprob: -4.529177188873291
    5. ']*' → logprob: -5.154177188873291
    6. ']+' → logprob: -10.40417766571045
    7. '	for' → logprob: -11.27917766571045
    8. '   ' → logprob: -11.77917766571045
    9. '*' → logprob: -11.77917766571045
    10. ' ]' → logprob: -12.27917766571045

Token 808: ' *' (ID: 425)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5801956653594971
    2. ' for' → logprob: -0.8301956653594971
    3. ']' → logprob: -5.955195426940918
    4. ']*(' → logprob: -6.705195426940918
    5. ']*' → logprob: -8.080195426940918
    6. '*' → logprob: -9.455195426940918
    7. '   ' → logprob: -11.205195426940918
    8. '	for' → logprob: -11.580195426940918
    9. ' *' → logprob: -12.080195426940918
    10. '*(' → logprob: -12.080195426940918

Token 809: ' (' (ID: 350)
  Prédit: '(L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(L' → logprob: -0.06895598769187927
    2. '(K' → logprob: -2.943955898284912
    3. 'L' → logprob: -4.693955898284912
    4. '(' → logprob: -5.568955898284912
    5. 'K' → logprob: -7.943955898284912
    6. ' (' → logprob: -8.06895637512207
    7. '((' → logprob: -8.94395637512207
    8. '(k' → logprob: -9.69395637512207
    9. '2' → logprob: -10.06895637512207
    10. '3' → logprob: -10.19395637512207

Token 810: 'L' (ID: 43)
  Prédit: 'L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.059353455901145935
    2. '(L' → logprob: -2.9343533515930176
    3. 'K' → logprob: -6.059353351593018
    4. '(K' → logprob: -6.559353351593018
    5. '(' → logprob: -7.434353351593018
    6. '2' → logprob: -10.434353828430176
    7. '3' → logprob: -10.684353828430176
    8. '((' → logprob: -10.934353828430176
    9. ' L' → logprob: -11.059353828430176
    10. ' (' → logprob: -11.309353828430176

Token 811: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6165771484375
    2. 'for' → logprob: -0.9915771484375
    3. ' for' → logprob: -2.4915771484375
    4. '+' → logprob: -5.1165771484375
    5. ' )' → logprob: -9.2415771484375
    6. ']' → logprob: -9.4915771484375
    7. '   ' → logprob: -9.9915771484375
    8. '[' → logprob: -9.9915771484375
    9. '       ' → logprob: -10.2415771484375
    10. ' ' → logprob: -10.7415771484375

Token 812: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.026633381843566895
    2. '2' → logprob: -3.6516332626342773
    3. '3' → logprob: -9.276633262634277
    4. 'L' → logprob: -9.276633262634277
    5. ' ' → logprob: -9.776633262634277
    6. 'K' → logprob: -10.276633262634277
    7. '(L' → logprob: -11.151633262634277
    8. '(K' → logprob: -11.276633262634277
    9. '(' → logprob: -11.401633262634277
    10. 'N' → logprob: -12.401633262634277

Token 813: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.10084143280982971
    2. '2' → logprob: -2.350841522216797
    3. '3' → logprob: -7.725841522216797
    4. ' ' → logprob: -9.975841522216797
    5. 'L' → logprob: -9.975841522216797
    6. '10' → logprob: -10.100841522216797
    7. '5' → logprob: -10.725841522216797
    8. '4' → logprob: -11.475841522216797
    9. 'K' → logprob: -12.038341522216797
    10. '(' → logprob: -12.475841522216797

Token 814: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00012880703434348106
    2. 'for' → logprob: -9.375128746032715
    3. ' )' → logprob: -10.625128746032715
    4. ' for' → logprob: -12.000128746032715
    5. ')]' → logprob: -12.125128746032715
    6. ']' → logprob: -12.500128746032715
    7. '```' → logprob: -13.625128746032715
    8. '   ' → logprob: -13.875128746032715
    9. ')
' → logprob: -14.250128746032715
    10. ' ' → logprob: -14.875128746032715

Token 815: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.47411850094795227
    2. 'for' → logprob: -0.9741184711456299
    3. '   ' → logprob: -10.47411823272705
    4. '	for' → logprob: -12.47411823272705
    5. '    ' → logprob: -12.97411823272705
    6. ' ' → logprob: -13.22411823272705
    7. '       ' → logprob: -13.72411823272705
    8. ']' → logprob: -13.97411823272705
    9. '           ' → logprob: -14.22411823272705
    10. '        ' → logprob: -14.97411823272705

Token 816: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.05150570347905159
    2. ' in' → logprob: -3.0515058040618896
    3. 'in' → logprob: -6.5515055656433105
    4. ' _' → logprob: -7.1765055656433105
    5. '_y' → logprob: -8.051506042480469
    6. 'y' → logprob: -9.051506042480469
    7. ' y' → logprob: -9.301506042480469
    8. '_in' → logprob: -9.676506042480469
    9. '_x' → logprob: -9.801506042480469
    10. 'x' → logprob: -11.051506042480469

Token 817: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.950789213180542
    2. '_' → logprob: -1.075789213180542
    3. 'in' → logprob: -1.325789213180542
    4. 'x' → logprob: -5.450789451599121
    5. 'y' → logprob: -6.450789451599121
    6. ' _' → logprob: -7.700789451599121
    7. ' y' → logprob: -9.200789451599121
    8. 'In' → logprob: -9.450789451599121
    9. '_in' → logprob: -9.575789451599121
    10. '_y' → logprob: -10.075789451599121

Token 818: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0027729051653295755
    2. ' range' → logprob: -6.002772808074951
    3. '_' → logprob: -8.25277328491211
    4. '_range' → logprob: -10.37777328491211
    5. 'in' → logprob: -12.50277328491211
    6. '(range' → logprob: -14.87777328491211
    7. '
' → logprob: -15.00277328491211
    8. ' in' → logprob: -15.12777328491211
    9. '	range' → logprob: -15.50277328491211
    10. '   ' → logprob: -16.12777328491211

Token 819: '(L' (ID: 11075)
  Prédit: '(L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(L' → logprob: -0.001655898173339665
    2. '(K' → logprob: -6.6266560554504395
    3. '((' → logprob: -8.876655578613281
    4. '(' → logprob: -9.126655578613281
    5. '(N' → logprob: -9.626655578613281
    6. 'L' → logprob: -11.626655578613281
    7. ' (' → logprob: -13.001655578613281
    8. '(D' → logprob: -13.876655578613281
    9. '(C' → logprob: -14.751655578613281
    10. 'K' → logprob: -14.751655578613281

Token 820: ' +' (ID: 659)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.04412458464503288
    2. '+' → logprob: -3.1691246032714844
    3. ' +' → logprob: -6.919124603271484
    4. ')' → logprob: -9.044124603271484
    5. ']' → logprob: -11.919124603271484
    6. ')]
' → logprob: -12.544124603271484
    7. ' )' → logprob: -13.419124603271484
    8. '   ' → logprob: -13.794124603271484
    9. ')][' → logprob: -13.794124603271484
    10. '```' → logprob: -14.044124603271484

Token 821: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0013885662192478776
    2. '(' → logprob: -7.3763885498046875
    3. '+' → logprob: -8.126388549804688
    4. '2' → logprob: -8.501388549804688
    5. 'L' → logprob: -9.126388549804688
    6. '(L' → logprob: -9.126388549804688
    7. '(N' → logprob: -10.876388549804688
    8. 'range' → logprob: -12.126388549804688
    9. ')' → logprob: -12.501388549804688
    10. '0' → logprob: -12.626388549804688

Token 822: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00822234433144331
    2. 'L' → logprob: -5.633222579956055
    3. '+' → logprob: -5.758222579956055
    4. '2' → logprob: -6.633222579956055
    5. '(L' → logprob: -9.383222579956055
    6. 'N' → logprob: -11.258222579956055
    7. '(' → logprob: -11.508222579956055
    8. ' ' → logprob: -11.758222579956055
    9. '(N' → logprob: -12.258222579956055
    10. ')' → logprob: -12.633222579956055

Token 823: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00039849523454904556
    2. ']' → logprob: -7.875398635864258
    3. ')' → logprob: -11.250398635864258
    4. ' ]' → logprob: -13.250398635864258
    5. ' )' → logprob: -13.750398635864258
    6. ']]' → logprob: -13.750398635864258
    7. '   ' → logprob: -14.250398635864258
    8. '       ' → logprob: -15.250398635864258
    9. '])' → logprob: -15.375398635864258
    10. ')]
' → logprob: -16.000398635864258

Token 824: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2520366609096527
    2. ' for' → logprob: -1.502036690711975
    3. '   ' → logprob: -9.752037048339844
    4. '       ' → logprob: -10.752037048339844
    5. '	for' → logprob: -11.502037048339844
    6. '           ' → logprob: -11.877037048339844
    7. '               ' → logprob: -13.127037048339844
    8. '    ' → logprob: -13.252037048339844
    9. ' ' → logprob: -13.627037048339844
    10. '        ' → logprob: -13.752037048339844

Token 825: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.07250882685184479
    2. 'range' → logprob: -2.8225088119506836
    3. '_range' → logprob: -4.947508811950684
    4. ' range' → logprob: -5.697508811950684
    5. '_in' → logprob: -10.822508811950684
    6. 'in' → logprob: -13.197508811950684
    7. ' _' → logprob: -13.447508811950684
    8. ' in' → logprob: -13.572508811950684
    9. '__' → logprob: -14.072508811950684
    10. '_
' → logprob: -14.197508811950684

Token 826: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00022797346173319966
    2. 'in' → logprob: -8.625227928161621
    3. ' range' → logprob: -10.250227928161621
    4. '_' → logprob: -11.375227928161621
    5. ' in' → logprob: -14.250227928161621
    6. '0' → logprob: -15.000227928161621
    7. '_range' → logprob: -15.750227928161621
    8. 'x' → logprob: -16.250228881835938
    9. '__' → logprob: -16.625228881835938
    10. '(range' → logprob: -16.625228881835938

Token 827: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.02975141443312168
    2. ' range' → logprob: -3.5297513008117676
    3. '_' → logprob: -14.279751777648926
    4. '_range' → logprob: -16.15475082397461
    5. '(range' → logprob: -16.52975082397461
    6. '	range' → logprob: -17.40475082397461
    7. '[' → logprob: -20.02975082397461
    8. '
' → logprob: -20.15475082397461
    9. '__' → logprob: -20.65475082397461
    10. '.range' → logprob: -20.77975082397461

Token 828: '(L' (ID: 11075)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0060430350713431835
    2. ' range' → logprob: -5.256042957305908
    3. '2' → logprob: -7.506042957305908
    4. '(range' → logprob: -9.381043434143066
    5. '(L' → logprob: -9.631043434143066
    6. '[' → logprob: -10.006043434143066
    7. '(' → logprob: -10.006043434143066
    8. '3' → logprob: -11.881043434143066
    9. '[L' → logprob: -11.881043434143066
    10. 'L' → logprob: -13.756043434143066

Token 829: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1429728865623474
    2. ' +' → logprob: -2.017972946166992
    3. ')]' → logprob: -8.142972946166992
    4. ')' → logprob: -12.642972946166992
    5. '[' → logprob: -14.392972946166992
    6. '0' → logprob: -14.642972946166992
    7. ')])' → logprob: -14.642972946166992
    8. ')]
' → logprob: -14.767972946166992
    9. 'L' → logprob: -15.392972946166992
    10. '   ' → logprob: -15.767972946166992

Token 830: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0010401944164186716
    2. '2' → logprob: -6.876039981842041
    3. '0' → logprob: -12.8760404586792
    4. '(' → logprob: -13.7510404586792
    5. 'L' → logprob: -13.8760404586792
    6. 'N' → logprob: -14.3760404586792
    7. ' ' → logprob: -14.5010404586792
    8. 'range' → logprob: -14.7510404586792
    9. '3' → logprob: -14.9385404586792
    10. '+' → logprob: -15.1885404586792

Token 831: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00044163595885038376
    2. '2' → logprob: -7.750441551208496
    3. '0' → logprob: -12.437941551208496
    4. '(' → logprob: -13.312941551208496
    5. '+' → logprob: -13.937941551208496
    6. '3' → logprob: -14.062941551208496
    7. ' ' → logprob: -14.250441551208496
    8. '```' → logprob: -14.500441551208496
    9. '   ' → logprob: -15.750441551208496
    10. '१' → logprob: -15.812941551208496

Token 832: ')]
' (ID: 11587)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.4948204755783081
    2. ')]' → logprob: -0.9948204755783081
    3. ')' → logprob: -4.369820594787598
    4. '])' → logprob: -4.994820594787598
    5. '])]' → logprob: -7.119820594787598
    6. ')])' → logprob: -8.494820594787598
    7. ' ]' → logprob: -10.494820594787598
    8. '   ' → logprob: -10.619820594787598
    9. ']
' → logprob: -11.119820594787598
    10. ')],' → logprob: -12.494820594787598

Token 833: '   ' (ID: 271)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0002574057725723833
    2. '   ' → logprob: -8.62525749206543
    3. '	dp' → logprob: -10.50025749206543
    4. ' dp' → logprob: -10.87525749206543
    5. '```' → logprob: -11.12525749206543
    6. 'for' → logprob: -12.25025749206543
    7. '[' → logprob: -12.37525749206543
    8. '#' → logprob: -13.62525749206543
    9. 'dt' → logprob: -14.00025749206543
    10. '\' → logprob: -14.12525749206543

Token 834: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -6.754368223482743e-05
    2. 'for' → logprob: -9.875067710876465
    3. '```' → logprob: -12.750067710876465
    4. '
' → logprob: -12.875067710876465
    5. '   ' → logprob: -13.000067710876465
    6. ' dp' → logprob: -13.125067710876465
    7. 'def' → logprob: -13.125067710876465
    8. '#' (adapté à ' #') → logprob: -13.250067710876465
    9. '	dp' → logprob: -14.000067710876465
    10. 'import' → logprob: -15.250067710876465

Token 835: ' Cas' (ID: 8066)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -6.392202976712724e-06
    2. ' dp' → logprob: -12.000006675720215
    3. 'for' → logprob: -16.3750057220459
    4. '	dp' → logprob: -16.8750057220459
    5. '
' → logprob: -17.8750057220459
    6. '(dp' → logprob: -18.3750057220459
    7. '#' → logprob: -18.5000057220459
    8. 'import' → logprob: -18.7500057220459
    9. 'def' → logprob: -18.7500057220459
    10. 'd' → logprob: -18.7500057220459

Token 836: ' initial' (ID: 4871)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5844855904579163
    2. 'dp' → logprob: -1.2094855308532715
    3. 'de' → logprob: -2.0844855308532715
    4. ' de' → logprob: -4.2094855308532715
    5. '[' → logprob: -5.5844855308532715
    6. ' dp' → logprob: -8.08448600769043
    7. 'd' → logprob: -8.08448600769043
    8. '   ' → logprob: -8.58448600769043
    9. ' ' → logprob: -9.20948600769043
    10. '
' → logprob: -9.70948600769043

Token 837: ' :' (ID: 712)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0007711516227573156
    2. '   ' → logprob: -7.5007710456848145
    3. '[' → logprob: -8.875771522521973
    4. ' dp' → logprob: -9.750771522521973
    5. '```' → logprob: -12.250771522521973
    6. ' =' → logprob: -12.625771522521973
    7. '
' → logprob: -12.875771522521973
    8. '=' → logprob: -13.000771522521973
    9. '	dp' → logprob: -13.125771522521973
    10. '_dp' → logprob: -13.500771522521973

Token 838: ' aucune' (ID: 51173)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0007569773588329554
    2. ' dp' → logprob: -7.500756740570068
    3. '   ' → logprob: -8.500757217407227
    4. '	dp' → logprob: -14.625757217407227
    5. '0' → logprob: -16.875757217407227
    6. '_dp' → logprob: -17.000757217407227
    7. '
' → logprob: -17.375757217407227
    8. '(dp' → logprob: -17.375757217407227
    9. '```' → logprob: -17.375757217407227
    10. 'for' → logprob: -18.250757217407227

Token 839: ' case' (ID: 1890)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.4556833505630493
    2. 'con' → logprob: -2.2056832313537598
    3. 'n' → logprob: -2.8306832313537598
    4. '   ' → logprob: -3.0806832313537598
    5. 'sequence' → logprob: -3.2056832313537598
    6. 'man' → logprob: -4.45568323135376
    7. 'sé' → logprob: -4.58068323135376
    8. 'element' → logprob: -4.70568323135376
    9. 'par' → logprob: -4.83068323135376
    10. 'dp' → logprob: -4.83068323135376

Token 840: ' plac' (ID: 7097)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3204766809940338
    2. 'dp' → logprob: -1.3204766511917114
    3. ' [' → logprob: -6.195476531982422
    4. '0' → logprob: -6.445476531982422
    5. '][' → logprob: -6.445476531982422
    6. ' dp' → logprob: -6.570476531982422
    7. '   ' → logprob: -8.695476531982422
    8. ' =' → logprob: -9.445476531982422
    9. '```' → logprob: -9.445476531982422
    10. '_dp' → logprob: -10.070476531982422

Token 841: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.0011370006250217557
    2. 'é' → logprob: -6.876136779785156
    3. 'ées' → logprob: -9.751136779785156
    4. 'e' → logprob: -10.751136779785156
    5. 'ee' → logprob: -11.251136779785156
    6. '[' → logprob: -12.876136779785156
    7. 'és' → logprob: -13.126136779785156
    8. 'née' → logprob: -13.126136779785156
    9. '0' → logprob: -13.501136779785156
    10. 'rée' → logprob: -14.251136779785156

Token 842: ',' (ID: 11)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.016343440860509872
    2. '   ' → logprob: -4.141343593597412
    3. ' dp' → logprob: -8.766343116760254
    4. '
' → logprob: -9.641343116760254
    5. '    
' → logprob: -11.016343116760254
    6. ',' → logprob: -11.141343116760254
    7. '[' → logprob: -11.141343116760254
    8. '	dp' → logprob: -11.266343116760254
    9. '```' → logprob: -11.766343116760254
    10. '(dp' → logprob: -12.141343116760254

Token 843: ' limite' (ID: 48939)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0034079935867339373
    2. ' dp' → logprob: -6.003407955169678
    3. '0' → logprob: -7.003407955169678
    4. '   ' → logprob: -11.378408432006836
    5. ' ' → logprob: -11.878408432006836
    6. '
' → logprob: -12.878408432006836
    7. '[' → logprob: -13.628408432006836
    8. '	dp' → logprob: -14.628408432006836
    9. '1' → logprob: -16.503408432006836
    10. '...' → logprob: -16.628408432006836

Token 844: ' de' (ID: 334)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.1811084747314453
    2. ' =' → logprob: -2.6811084747314453
    3. '   ' → logprob: -3.4311084747314453
    4. '0' → logprob: -3.8061084747314453
    5. '[' → logprob: -3.9311084747314453
    6. '=' → logprob: -4.681108474731445
    7. ' dp' → logprob: -4.931108474731445
    8. ',' → logprob: -6.181108474731445
    9. '_dp' → logprob: -7.056108474731445
    10. 'de' → logprob: -7.681108474731445

Token 845: ' bloc' (ID: 51218)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.019397659227252007
    2. 'z' → logprob: -4.644397735595703
    3. 'bloc' → logprob: -5.269397735595703
    4. 'par' → logprob: -7.269397735595703
    5. 'long' → logprob: -7.269397735595703
    6. '1' → logprob: -7.769397735595703
    7. 'block' → logprob: -7.894397735595703
    8. 'L' → logprob: -8.019397735595703
    9. 'blo' → logprob: -8.519397735595703
    10. 'K' → logprob: -8.644397735595703

Token 846: ' au' (ID: 2791)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.10467670857906342
    2. '[' → logprob: -2.9796767234802246
    3. ' =' → logprob: -3.6046767234802246
    4. '0' → logprob: -5.104676723480225
    5. '=' → logprob: -5.104676723480225
    6. ' dp' → logprob: -5.479676723480225
    7. ',' → logprob: -6.354676723480225
    8. '][' → logprob: -7.229676723480225
    9. '```' → logprob: -7.479676723480225
    10. '_dp' → logprob: -7.979676723480225

Token 847: ' max' (ID: 2999)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005644586402922869
    2. 'L' → logprob: -5.630644798278809
    3. 'z' → logprob: -7.005644798278809
    4. '1' → logprob: -7.880644798278809
    5. 'K' → logprob: -8.130644798278809
    6. 'x' → logprob: -9.505644798278809
    7. 'k' → logprob: -9.630644798278809
    8. 'maximum' → logprob: -9.755644798278809
    9. 'max' → logprob: -10.005644798278809
    10. 'zero' → logprob: -10.130644798278809

Token 848: '
' (ID: 198)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.02151530236005783
    2. '
' → logprob: -4.146515369415283
    3. '   ' → logprob: -5.396515369415283
    4. ' =' → logprob: -8.021514892578125
    5. '(dp' → logprob: -8.396514892578125
    6. '=' → logprob: -9.021514892578125
    7. ' dp' → logprob: -9.396514892578125
    8. ',' → logprob: -10.146514892578125
    9. '	dp' → logprob: -10.146514892578125
    10. '```' → logprob: -10.771514892578125

Token 849: '   ' (ID: 271)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0052849845960736275
    2. '   ' → logprob: -5.255284786224365
    3. '```' → logprob: -10.630285263061523
    4. ' dp' → logprob: -11.130285263061523
    5. '	dp' → logprob: -12.005285263061523
    6. '(dp' → logprob: -12.880285263061523
    7. '
' → logprob: -13.255285263061523
    8. '    
' → logprob: -14.255285263061523
    9. '_dp' → logprob: -14.380285263061523
    10. '``' → logprob: -15.255285263061523

Token 850: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.0004752367385663092
    2. ' dp' → logprob: -8.00047492980957
    3. '   ' → logprob: -9.00047492980957
    4. '[' → logprob: -12.25047492980957
    5. '
' → logprob: -12.50047492980957
    6. '```' → logprob: -13.00047492980957
    7. 'for' → logprob: -13.25047492980957
    8. '0' → logprob: -13.37547492980957
    9. '	dp' → logprob: -13.87547492980957
    10. '    
' → logprob: -14.75047492980957

Token 851: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.822646693966817e-06
    2. '[' → logprob: -11.875007629394531
    3. '=' → logprob: -15.125007629394531
    4. ' =' → logprob: -15.250007629394531
    5. '_' → logprob: -16.50000762939453
    6. '۰' → logprob: -17.12500762939453
    7. '０' → logprob: -17.75000762939453
    8. ' ' → logprob: -17.75000762939453
    9. '```' → logprob: -17.75000762939453
    10. '
' → logprob: -17.87500762939453

Token 852: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.082895273109898e-05
    2. '[L' → logprob: -11.250030517578125
    3. '0' → logprob: -11.750030517578125
    4. '=' → logprob: -12.875030517578125
    5. '   ' → logprob: -13.375030517578125
    6. ' [' → logprob: -13.500030517578125
    7. '```' → logprob: -13.875030517578125
    8. ' =' → logprob: -14.250030517578125
    9. '
' → logprob: -14.375030517578125
    10. ' ' → logprob: -14.500030517578125

Token 853: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.080963092041202e-06
    2. '1' → logprob: -12.500004768371582
    3. 'L' → logprob: -14.625004768371582
    4. '[' → logprob: -14.625004768371582
    5. ' ' → logprob: -15.750004768371582
    6. '(' → logprob: -16.8125057220459
    7. '000' → logprob: -17.1250057220459
    8. '(L' → logprob: -17.2500057220459
    9. '۰' → logprob: -17.5625057220459
    10. '[L' → logprob: -17.6250057220459

Token 854: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00012558852904476225
    2. '[' → logprob: -9.125125885009766
    3. ']' → logprob: -11.125125885009766
    4. '0' → logprob: -13.375125885009766
    5. ' ][' → logprob: -15.875125885009766
    6. '"][' → logprob: -17.125125885009766
    7. ''][' → logprob: -17.500125885009766
    8. ']
' → logprob: -17.500125885009766
    9. ']][' → logprob: -18.000125885009766
    10. '()][' → logprob: -18.625125885009766

Token 855: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.512236498361744e-07
    2. '1' → logprob: -14.750000953674316
    3. ' ' → logprob: -16.375
    4. '۰' → logprob: -17.0625
    5. '০' → logprob: -18.0
    6. '00' → logprob: -18.875
    7. '#' → logprob: -18.9375
    8. '000' → logprob: -19.0
    9. '<|end|>' → logprob: -19.1875
    10. '०' → logprob: -19.375

Token 856: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -1.4021237802808173e-05
    2. '[' → logprob: -11.875014305114746
    3. ']' → logprob: -12.000014305114746
    4. ' ][' → logprob: -14.250014305114746
    5. '0' → logprob: -15.750014305114746
    6. ''][' → logprob: -17.87501335144043
    7. '"][' → logprob: -18.25001335144043
    8. ']][' → logprob: -18.25001335144043
    9. '][-' → logprob: -18.25001335144043
    10. ']=' → logprob: -19.50001335144043

Token 857: 'L' (ID: 43)
  Prédit: 'L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.07890267670154572
    2. '0' → logprob: -2.5789027214050293
    3. '1' → logprob: -12.328902244567871
    4. 'K' → logprob: -12.828902244567871
    5. ' L' → logprob: -12.828902244567871
    6. '(L' → logprob: -13.453902244567871
    7. 'k' → logprob: -14.828902244567871
    8. 'l' → logprob: -15.953902244567871
    9. '>L' → logprob: -16.016403198242188
    10. '(' → logprob: -16.203903198242188

Token 858: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0538172572851181
    2. '-' → logprob: -3.3038172721862793
    3. ']=' → logprob: -4.178817272186279
    4. '][' → logprob: -8.928816795349121
    5. ' ]' → logprob: -9.803816795349121
    6. ' -' → logprob: -10.428816795349121
    7. ']+=' → logprob: -10.678816795349121
    8. '[' → logprob: -11.178816795349121
    9. ']==' → logprob: -11.178816795349121
    10. '```' → logprob: -11.178816795349121

Token 859: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0009271837188862264
    2. ' =' → logprob: -7.000926971435547
    3. ']' → logprob: -11.375926971435547
    4. ']=' → logprob: -12.500926971435547
    5. '[' → logprob: -14.625926971435547
    6. '+=' → logprob: -17.625926971435547
    7. '=True' → logprob: -18.500926971435547
    8. ')' → logprob: -18.750926971435547
    9. ']+=' → logprob: -18.750926971435547
    10. ')=' → logprob: -19.375926971435547

Token 860: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -19.125
    3. '```' → logprob: -21.25
    4. '0' → logprob: -21.625
    5. '１' → logprob: -22.25
    6. '۱' → logprob: -22.375
    7. '   ' → logprob: -22.5
    8. '`' → logprob: -23.125
    9. '' → logprob: -24.375
    10. '১' → logprob: -24.5

Token 861: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '0' → logprob: -19.75
    3. ' ' → logprob: -21.0
    4. '```' → logprob: -21.5
    5. '１' → logprob: -22.5
    6. '
' → logprob: -22.625
    7. '۱' → logprob: -22.875
    8. '`' → logprob: -23.875
    9. '   ' → logprob: -23.875
    10. '' → logprob: -24.25

Token 862: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.246928408741951
    2. '
' → logprob: -1.8719284534454346
    3. '<|end|>' → logprob: -3.4969284534454346
    4. ' for' → logprob: -3.6219284534454346
    5. '```' → logprob: -5.4969282150268555
    6. ')' → logprob: -6.7469282150268555
    7. '   ' → logprob: -7.8719282150268555
    8. 'dp' → logprob: -7.9969282150268555
    9. '
' → logprob: -7.9969282150268555
    10. '<|end|>' → logprob: -8.246928215026855

Token 863: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00012523093027994037
    2. ' for' → logprob: -9.12512493133545
    3. '   ' → logprob: -11.87512493133545
    4. 'i' → logprob: -12.25012493133545
    5. '
' → logprob: -13.37512493133545
    6. '#' → logprob: -13.75012493133545
    7. '```' → logprob: -14.00012493133545
    8. 'dp' → logprob: -14.75012493133545
    9. 'from' → logprob: -15.62512493133545
    10. '	for' → logprob: -16.125125885009766

Token 864: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -1.2471589798224159e-05
    2. ' for' → logprob: -12.000012397766113
    3. 'from' → logprob: -12.750012397766113
    4. 'def' → logprob: -13.625012397766113
    5. '#' → logprob: -14.375012397766113
    6. 'N' → logprob: -14.625012397766113
    7. '   ' → logprob: -15.250012397766113
    8. 'i' → logprob: -15.375012397766113
    9. '```' → logprob: -15.375012397766113
    10. ')' → logprob: -16.00001335144043

Token 865: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.004619172308593988
    2. ' i' → logprob: -6.004619121551514
    3. 'pos' → logprob: -6.379619121551514
    4. '_' → logprob: -8.754619598388672
    5. '_i' → logprob: -9.129619598388672
    6. '_pos' → logprob: -9.629619598388672
    7. ' pos' → logprob: -10.379619598388672
    8. 'length' → logprob: -10.879619598388672
    9. 'idx' → logprob: -11.379619598388672
    10. 'p' → logprob: -11.379619598388672

Token 866: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03365987911820412
    2. 'in' → logprob: -3.4086599349975586
    3. '	in' → logprob: -12.408659934997559
    4. ' ' → logprob: -13.158659934997559
    5. '```' → logprob: -13.283659934997559
    6. '1' → logprob: -13.408659934997559
    7. '   ' → logprob: -14.158659934997559
    8. '0' → logprob: -14.158659934997559
    9. '_in' → logprob: -14.283659934997559
    10. '_' → logprob: -14.408659934997559

Token 867: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0009120595059357584
    2. ' range' → logprob: -7.000912189483643
    3. '0' → logprob: -14.875911712646484
    4. ' ' → logprob: -16.500911712646484
    5. '(range' → logprob: -16.750911712646484
    6. '   ' → logprob: -16.875911712646484
    7. 'in' → logprob: -17.500911712646484
    8. '```' → logprob: -17.500911712646484
    9. '_' → logprob: -18.500911712646484
    10. '
' → logprob: -18.500911712646484

Token 868: '(N' (ID: 10564)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.03884035721421242
    2. '(N' → logprob: -3.4138402938842773
    3. '1' → logprob: -5.788840293884277
    4. '(' → logprob: -6.288840293884277
    5. ' N' → logprob: -9.038840293884277
    6. '0' → logprob: -9.288840293884277
    7. '   ' → logprob: -10.163840293884277
    8. '	N' → logprob: -11.913840293884277
    9. 'n' → logprob: -13.788840293884277
    10. '(
' → logprob: -13.913840293884277

Token 869: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.025161826983094215
    2. '):' → logprob: -4.4001617431640625
    3. '+' → logprob: -4.7751617431640625
    4. '   ' → logprob: -5.6501617431640625
    5. '):
' → logprob: -8.150161743164062
    6. ' +' → logprob: -8.275161743164062
    7. ')' → logprob: -10.775161743164062
    8. ':' → logprob: -11.025161743164062
    9. '       ' → logprob: -11.525161743164062
    10. ' ):
' → logprob: -12.025161743164062

Token 870: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4268452227115631
    2. ' for' → logprob: -1.4268451929092407
    3. '   ' → logprob: -2.5518453121185303
    4. 'for' → logprob: -3.5518453121185303
    5. '	for' → logprob: -8.30184555053711
    6. '    ' → logprob: -8.55184555053711
    7. '	   ' → logprob: -9.05184555053711
    8. '```' → logprob: -9.30184555053711
    9. '	' → logprob: -9.92684555053711
    10. '     ' → logprob: -11.05184555053711

Token 871: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -4.60414821645827e-06
    2. '       ' → logprob: -13.125004768371582
    3. ' dp' → logprob: -13.500004768371582
    4. '	dp' → logprob: -14.875004768371582
    5. '   ' → logprob: -15.125004768371582
    6. '#' (adapté à ' #') → logprob: -15.125004768371582
    7. 'from' → logprob: -15.875004768371582
    8. '```' → logprob: -17.000003814697266
    9. '           ' → logprob: -17.625003814697266
    10. 'import' → logprob: -18.125003814697266

Token 872: ' Pré' (ID: 86400)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -4.11996734328568e-05
    2. 'from' → logprob: -10.750041007995605
    3. '#' → logprob: -11.250041007995605
    4. 'import' → logprob: -12.125041007995605
    5. '       ' → logprob: -15.375041007995605
    6. '   ' → logprob: -15.500041007995605
    7. 'new' → logprob: -15.625041007995605
    8. 'next' → logprob: -15.750041007995605
    9. 'for' → logprob: -16.375041961669922
    10. '```' → logprob: -16.625041961669922

Token 873: 'pare' (ID: 6900)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.4662875235080719
    2. 'v' → logprob: -1.0912874937057495
    3. 'fix' → logprob: -4.716287612915039
    4. 'for' → logprob: -4.841287612915039
    5. 'vious' → logprob: -5.216287612915039
    6. 'f' → logprob: -5.841287612915039
    7. 'sum' → logprob: -5.841287612915039
    8. 's' → logprob: -6.341287612915039
    9. '   ' → logprob: -6.591287612915039
    10. 'c' → logprob: -6.716287612915039

Token 874: ' DP' (ID: 51992)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.000603668624535203
    2. ' dp' → logprob: -7.625603675842285
    3. '   ' → logprob: -9.375603675842285
    4. '	dp' → logprob: -11.875603675842285
    5. '#' → logprob: -12.250603675842285
    6. 'from' → logprob: -12.375603675842285
    7. '_dp' → logprob: -12.625603675842285
    8. '(dp' → logprob: -13.250603675842285
    9. 'd' → logprob: -13.500603675842285
    10. ' ' → logprob: -13.500603675842285

Token 875: ' de' (ID: 334)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.4100870192050934
    2. ' dp' → logprob: -1.410086989402771
    3. '   ' → logprob: -3.4100871086120605
    4. ' =' → logprob: -3.9100871086120605
    5. '       ' → logprob: -4.0350871086120605
    6. '=' → logprob: -4.7850871086120605
    7. '0' → logprob: -4.9100871086120605
    8. '(dp' → logprob: -7.0350871086120605
    9. '	dp' → logprob: -7.2850871086120605
    10. '[' → logprob: -7.4100871086120605

Token 876: ' la' (ID: 557)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.28043341636657715
    2. '1' → logprob: -2.280433416366577
    3. 'i' → logprob: -2.780433416366577
    4. '0' → logprob: -3.655433416366577
    5. '[' → logprob: -3.905433416366577
    6. ' [[[' → logprob: -4.405433654785156
    7. '[i' → logprob: -4.905433654785156
    8. 'dp' → logprob: -6.530433654785156
    9. 'nou' → logprob: -6.780433654785156
    10. 'new' → logprob: -6.905433654785156

Token 877: ' prochaine' (ID: 78876)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4514433443546295
    2. 'i' → logprob: -2.0764434337615967
    3. '[[' → logprob: -2.8264434337615967
    4. 'next' → logprob: -3.7014434337615967
    5. 'nou' → logprob: -3.9514434337615967
    6. 'dp' → logprob: -4.201443195343018
    7. 'pro' → logprob: -4.451443195343018
    8. '[' → logprob: -4.576443195343018
    9. 'new' → logprob: -4.826443195343018
    10. '0' → logprob: -4.826443195343018

Token 878: ' étape' (ID: 83661)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.9739992022514343
    2. '0' → logprob: -1.098999261856079
    3. 'range' → logprob: -2.098999261856079
    4. '[' → logprob: -3.473999261856079
    5. 'iteration' → logprob: -3.598999261856079
    6. '[[' → logprob: -4.2239990234375
    7. '_' → logprob: -4.2239990234375
    8. 'i' → logprob: -4.8489990234375
    9. 'layer' → logprob: -5.2239990234375
    10. 'step' → logprob: -5.2239990234375

Token 879: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10370715707540512
    2. '   ' → logprob: -2.9787070751190186
    3. 'dp' → logprob: -3.2287070751190186
    4. '	dp' → logprob: -5.353707313537598
    5. ' dp' → logprob: -6.353707313537598
    6. '```' → logprob: -7.728707313537598
    7. '        
' → logprob: -8.353707313537598
    8. '(dp' → logprob: -8.353707313537598
    9. '
' → logprob: -8.853707313537598
    10. ',' → logprob: -8.978707313537598

Token 880: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06672638654708862
    2. '   ' → logprob: -3.1917264461517334
    3. 'dp' → logprob: -4.191726207733154
    4. '	dp' → logprob: -5.191726207733154
    5. ' dp' → logprob: -6.441726207733154
    6. '	   ' → logprob: -7.691726207733154
    7. '	' → logprob: -7.941726207733154
    8. '    ' → logprob: -9.816726684570312
    9. '```' → logprob: -9.816726684570312
    10. '        
' → logprob: -9.941726684570312

Token 881: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -6.704273118884885e-07
    2. 'from' → logprob: -14.500000953674316
    3. '   ' → logprob: -16.5
    4. '       ' → logprob: -17.5
    5. 'import' → logprob: -17.625
    6. ' dp' → logprob: -18.875
    7. '           ' → logprob: -19.625
    8. '	dp' → logprob: -20.25
    9. '```' → logprob: -20.625
    10. '#' → logprob: -21.375

Token 882: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002508716657757759
    2. ' =' → logprob: -6.002508640289307
    3. '=' → logprob: -10.377509117126465
    4. ' ' → logprob: -14.127509117126465
    5. '=[' → logprob: -15.127509117126465
    6. '   ' → logprob: -15.877509117126465
    7. 'n' → logprob: -16.25250816345215
    8. 'new' → logprob: -16.25250816345215
    9. '_' → logprob: -16.75250816345215
    10. ',' → logprob: -16.75250816345215

Token 883: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3132742643356323
    2. '=' → logprob: -1.3132742643356323
    3. '=[' → logprob: -11.563274383544922
    4. '=[[' → logprob: -12.938274383544922
    5. '[' → logprob: -15.438274383544922
    6. '[[' → logprob: -16.063274383544922
    7. ' =[' → logprob: -16.313274383544922
    8. '=[]' → logprob: -17.063274383544922
    9. '	' → logprob: -17.313274383544922
    10. '＝' → logprob: -17.438274383544922

Token 884: ' [[[' (ID: 121934)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.0003365350130479783
    2. ' [[[' → logprob: -8.000336647033691
    3. '[' → logprob: -14.375336647033691
    4. '   ' → logprob: -14.625336647033691
    5. '[
' → logprob: -17.250335693359375
    6. 'import' → logprob: -17.500335693359375
    7. '	' → logprob: -17.625335693359375
    8. '       ' → logprob: -17.625335693359375
    9. ' ' → logprob: -18.250335693359375
    10. '  ' → logprob: -18.375335693359375

Token 885: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.5
    3. '[' → logprob: -18.375
    4. '(' → logprob: -19.0
    5. '۰' → logprob: -19.25
    6. '000' → logprob: -20.5
    7. '
' → logprob: -20.75
    8. 'False' → logprob: -21.125
    9. '   ' → logprob: -21.3125
    10. '	' → logprob: -21.3125

Token 886: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.025125086307525635
    2. ']*' → logprob: -4.775125026702881
    3. ']*(' → logprob: -4.900125026702881
    4. 'for' → logprob: -5.275125026702881
    5. ' for' → logprob: -5.650125026702881
    6. '*' → logprob: -8.525125503540039
    7. '*(' → logprob: -10.775125503540039
    8. '   ' → logprob: -10.900125503540039
    9. '(L' → logprob: -11.275125503540039
    10. ' *' → logprob: -11.775125503540039

Token 887: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.6587657332420349
    2. ']' → logprob: -1.0337657928466797
    3. ' *' → logprob: -3.2837657928466797
    4. ' for' → logprob: -3.4087657928466797
    5. ']*' → logprob: -3.7837657928466797
    6. 'for' → logprob: -4.28376579284668
    7. ']*(' → logprob: -4.28376579284668
    8. '*(' → logprob: -5.15876579284668
    9. '(L' → logprob: -9.78376579284668
    10. ')' → logprob: -10.28376579284668

Token 888: ' (' (ID: 350)
  Prédit: '(L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(L' → logprob: -0.00020413640595506877
    2. ' (' → logprob: -8.500204086303711
    3. '(' → logprob: -14.625204086303711
    4. '   ' → logprob: -16.12520408630371
    5. ' ' → logprob: -17.87520408630371
    6. '(
' → logprob: -18.00020408630371
    7. '
' → logprob: -18.37520408630371
    8. '((' → logprob: -18.75020408630371
    9. '           ' → logprob: -18.87520408630371
    10. '  ' → logprob: -18.87520408630371

Token 889: 'L' (ID: 43)
  Prédit: '(L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(L' → logprob: -1.6405310816480778e-05
    2. ' (' → logprob: -11.375016212463379
    3. '(' → logprob: -12.875016212463379
    4. 'L' → logprob: -13.625016212463379
    5. '
' → logprob: -15.250016212463379
    6. '   ' → logprob: -15.500016212463379
    7. '(
' → logprob: -16.125017166137695
    8. '((' → logprob: -16.625017166137695
    9. '           ' → logprob: -16.875017166137695
    10. '(len' → logprob: -17.000017166137695

Token 890: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0031796174589544535
    2. ' +' → logprob: -5.753179550170898
    3. '+
' → logprob: -14.003179550170898
    4. '           ' → logprob: -15.003179550170898
    5. '
' → logprob: -15.378179550170898
    6. '```' → logprob: -16.0031795501709
    7. ')' → logprob: -16.2531795501709
    8. '   ' → logprob: -16.3781795501709
    9. '＋' → logprob: -16.3781795501709
    10. '(' → logprob: -16.8781795501709

Token 891: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005171707598492503
    2. '2' → logprob: -7.62551736831665
    3. ' ' → logprob: -11.250516891479492
    4. '(L' → logprob: -11.375516891479492
    5. '(' → logprob: -13.000516891479492
    6. '(N' → logprob: -15.125516891479492
    7. '(M' → logprob: -15.250516891479492
    8. 'L' → logprob: -15.250516891479492
    9. '(P' → logprob: -15.750516891479492
    10. '(B' → logprob: -15.750516891479492

Token 892: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.534558552724775e-05
    2. '2' → logprob: -10.750025749206543
    3. ' ' → logprob: -13.125025749206543
    4. '(L' → logprob: -13.625025749206543
    5. '(' → logprob: -14.625025749206543
    6. '(M' → logprob: -17.000024795532227
    7. ' (' → logprob: -17.000024795532227
    8. '(N' → logprob: -17.125024795532227
    9. '(i' → logprob: -17.500024795532227
    10. '
' → logprob: -17.875024795532227

Token 893: ')' (ID: 8)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.12920942902565002
    2. ' for' → logprob: -2.129209518432617
    3. ')' → logprob: -6.129209518432617
    4. '   ' → logprob: -10.379209518432617
    5. '       ' → logprob: -10.879209518432617
    6. '           ' → logprob: -10.879209518432617
    7. ' ' → logprob: -11.504209518432617
    8. '	for' → logprob: -12.379209518432617
    9. '               ' → logprob: -12.754209518432617
    10. '    ' → logprob: -13.129209518432617

Token 894: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3868999183177948
    2. ' for' → logprob: -1.1368999481201172
    3. '   ' → logprob: -11.636899948120117
    4. '    ' → logprob: -12.386899948120117
    5. '	for' → logprob: -12.886899948120117
    6. '           ' → logprob: -13.011899948120117
    7. ' ' → logprob: -13.011899948120117
    8. '       ' → logprob: -13.011899948120117
    9. '        ' → logprob: -13.261899948120117
    10. '            ' → logprob: -14.136899948120117

Token 895: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0007990269223228097
    2. '_in' → logprob: -7.625799179077148
    3. '_j' → logprob: -8.875799179077148
    4. '_y' → logprob: -9.875799179077148
    5. '_x' → logprob: -10.625799179077148
    6. ' in' → logprob: -10.750799179077148
    7. '_z' → logprob: -11.000799179077148
    8. '_range' → logprob: -11.375799179077148
    9. '_b' → logprob: -11.625799179077148
    10. ' _' → logprob: -11.875799179077148

Token 896: ' in' (ID: 306)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7600996494293213
    2. ' in' → logprob: -1.6350996494293213
    3. 'range' → logprob: -1.8850996494293213
    4. 'in' → logprob: -2.3850996494293213
    5. '_range' → logprob: -2.3850996494293213
    6. ' range' → logprob: -7.510099411010742
    7. '_in' → logprob: -7.885099411010742
    8. ' _' → logprob: -8.385099411010742
    9. '_L' → logprob: -9.510099411010742
    10. 'x' → logprob: -9.635099411010742

Token 897: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.11695091426372528
    2. '_range' → logprob: -2.6169509887695312
    3. '_' → logprob: -3.3669509887695312
    4. ' range' → logprob: -5.866950988769531
    5. '_in' → logprob: -11.616950988769531
    6. 'in' → logprob: -12.741950988769531
    7. '_L' → logprob: -12.866950988769531
    8. '_
' → logprob: -13.491950988769531
    9. '(range' → logprob: -13.491950988769531
    10. '_l' → logprob: -14.116950988769531

Token 898: '(L' (ID: 11075)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.27192631363868713
    2. ' range' → logprob: -2.3969264030456543
    3. '_L' → logprob: -2.7719264030456543
    4. '_range' → logprob: -3.2719264030456543
    5. 'range' → logprob: -3.2719264030456543
    6. ' in' → logprob: -4.896926403045654
    7. ' _' → logprob: -7.896926403045654
    8. '_l' → logprob: -8.021925926208496
    9. 'L' → logprob: -9.021925926208496
    10. 'in' → logprob: -9.146925926208496

Token 899: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.01256839744746685
    2. ' +' → logprob: -4.387568473815918
    3. ' in' → logprob: -10.512568473815918
    4. '(' → logprob: -10.637568473815918
    5. '           ' → logprob: -13.762568473815918
    6. ' (' → logprob: -14.012568473815918
    7. '[' → logprob: -14.012568473815918
    8. '   ' → logprob: -14.262568473815918
    9. '       ' → logprob: -14.262568473815918
    10. 'for' → logprob: -14.512568473815918

Token 900: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6388859748840332
    2. '(L' → logprob: -0.8888859748840332
    3. 'range' → logprob: -3.263885974884033
    4. '(' → logprob: -4.513885974884033
    5. 'L' → logprob: -4.763885974884033
    6. '(range' → logprob: -6.388885974884033
    7. '[L' → logprob: -6.888885974884033
    8. ' range' → logprob: -8.638885498046875
    9. ' L' → logprob: -9.388885498046875
    10. '   ' → logprob: -9.638885498046875

Token 901: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.861651490908116e-05
    2. '(' → logprob: -10.375068664550781
    3. 'L' → logprob: -10.875068664550781
    4. '(L' → logprob: -11.625068664550781
    5. 'range' → logprob: -12.125068664550781
    6. '2' → logprob: -13.500068664550781
    7. ' ' → logprob: -14.500068664550781
    8. '
' → logprob: -15.000068664550781
    9. '0' → logprob: -15.125068664550781
    10. '+' → logprob: -15.250068664550781

Token 902: ')]' (ID: 15710)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -4.310693111619912e-05
    2. ')]' → logprob: -10.500042915344238
    3. ' ]' → logprob: -11.125042915344238
    4. ']]' → logprob: -14.500042915344238
    5. '()]' → logprob: -16.625043869018555
    6. '   ' → logprob: -16.625043869018555
    7. ')' → logprob: -16.750043869018555
    8. '       ' → logprob: -16.875043869018555
    9. ']
' → logprob: -17.125043869018555
    10. '_]' → logprob: -18.500043869018555

Token 903: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3188669681549072
    2. ' for' → logprob: -1.3188669681549072
    3. '       ' → logprob: -5.443866729736328
    4. '   ' → logprob: -8.068866729736328
    5. '           ' → logprob: -8.193866729736328
    6. '        ' → logprob: -8.318866729736328
    7. '               ' → logprob: -9.068866729736328
    8. '    ' → logprob: -10.068866729736328
    9. '            ' → logprob: -10.193866729736328
    10. '                   ' → logprob: -10.193866729736328

Token 904: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.017433132976293564
    2. 'range' → logprob: -4.767433166503906
    3. ' range' → logprob: -4.767433166503906
    4. '_range' → logprob: -8.392433166503906
    5. ' _' → logprob: -10.142433166503906
    6. '_L' → logprob: -11.517433166503906
    7. '_l' → logprob: -14.892433166503906
    8. ' in' → logprob: -15.142433166503906
    9. '(range' → logprob: -15.267433166503906
    10. '_
' → logprob: -15.392433166503906

Token 905: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -9.849109119386412e-06
    2. '(range' → logprob: -12.250009536743164
    3. ' range' → logprob: -12.875009536743164
    4. '_range' → logprob: -13.250009536743164
    5. '_' → logprob: -14.500009536743164
    6. 'rang' → logprob: -16.250009536743164
    7. '	range' → logprob: -17.125009536743164
    8. 'in' → logprob: -17.250009536743164
    9. '_L' → logprob: -17.875009536743164
    10. 'rank' → logprob: -18.750009536743164

Token 906: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0007141007808968425
    2. ' range' → logprob: -7.250714302062988
    3. '(range' → logprob: -12.375714302062988
    4. '	range' → logprob: -17.250713348388672
    5. '   ' → logprob: -18.875713348388672
    6. '
' → logprob: -19.375713348388672
    7. '_range' → logprob: -19.625713348388672
    8. '(L' → logprob: -19.750713348388672
    9. '    ' → logprob: -20.000713348388672
    10. 'rang' → logprob: -20.125713348388672

Token 907: '(L' (ID: 11075)
  Prédit: '(L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(L' → logprob: -3.6550729419104755e-05
    2. 'range' → logprob: -10.500036239624023
    3. ' (' → logprob: -12.250036239624023
    4. '(' → logprob: -12.875036239624023
    5. '(range' → logprob: -13.750036239624023
    6. ' range' → logprob: -15.125036239624023
    7. '   ' → logprob: -16.250036239624023
    8. 'L' → logprob: -17.125036239624023
    9. '[L' → logprob: -17.250036239624023
    10. '((' → logprob: -18.125036239624023

Token 908: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.01818927936255932
    2. ' +' → logprob: -4.018189430236816
    3. '1' → logprob: -10.518189430236816
    4. ')]' → logprob: -12.518189430236816
    5. 'L' → logprob: -13.018189430236816
    6. '   ' → logprob: -13.018189430236816
    7. '       ' → logprob: -14.018189430236816
    8. '           ' → logprob: -14.268189430236816
    9. ')' → logprob: -14.643189430236816
    10. '0' → logprob: -14.768189430236816

Token 909: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0445127372804563e-05
    2. '0' → logprob: -12.62501049041748
    3. '2' → logprob: -13.37501049041748
    4. 'L' → logprob: -13.37501049041748
    5. ' ' → logprob: -13.37501049041748
    6. '```' → logprob: -13.62501049041748
    7. '
' → logprob: -14.62501049041748
    8. '(' → logprob: -15.68751049041748
    9. '   ' → logprob: -15.75001049041748
    10. '``' → logprob: -16.312509536743164

Token 910: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.073596548754722e-05
    2. 'L' → logprob: -10.00005054473877
    3. ' ' → logprob: -13.37505054473877
    4. '(' → logprob: -13.75005054473877
    5. '```' → logprob: -14.12505054473877
    6. '0' → logprob: -14.25005054473877
    7. '(L' → logprob: -14.50005054473877
    8. '   ' → logprob: -15.62505054473877
    9. ' L' → logprob: -16.312551498413086
    10. '۱' → logprob: -16.375051498413086

Token 911: ')]
' (ID: 11587)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5770903825759888
    2. ')]' → logprob: -0.8270903825759888
    3. ']
' → logprob: -7.452090263366699
    4. ')' → logprob: -8.4520902633667
    5. ')]
' → logprob: -8.7020902633667
    6. '       ' → logprob: -8.9520902633667
    7. ']]' → logprob: -10.5770902633667
    8. '])' → logprob: -11.4520902633667
    9. '}]' → logprob: -11.9520902633667
    10. '   ' → logprob: -11.9520902633667

Token 912: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02026963047683239
    2. 'for' → logprob: -4.020269393920898
    3. ' for' → logprob: -7.145269393920898
    4. '	' → logprob: -7.645269393920898
    5. '           ' → logprob: -8.145269393920898
    6. '   ' → logprob: -8.395269393920898
    7. '	for' → logprob: -8.895269393920898
    8. '```' → logprob: -9.145269393920898
    9. '               ' → logprob: -10.395269393920898
    10. '<|end|>' → logprob: -10.895269393920898

Token 913: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0044768815860152245
    2. '       ' → logprob: -5.504477024078369
    3. ' for' → logprob: -7.879477024078369
    4. '   ' → logprob: -11.004476547241211
    5. '```' → logprob: -12.879476547241211
    6. '	for' → logprob: -14.254476547241211
    7. '           ' → logprob: -15.754476547241211
    8. '
' → logprob: -17.50447654724121
    9. '``' → logprob: -18.37947654724121
    10. 'from' → logprob: -18.87947654724121

Token 914: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -2.935296834039036e-06
    2. ' x' → logprob: -12.87500286102295
    3. 'a' → logprob: -16.125003814697266
    4. '(x' → logprob: -16.875003814697266
    5. '_x' → logprob: -17.250003814697266
    6. '	x' → logprob: -17.625003814697266
    7. '[x' → logprob: -18.125003814697266
    8. 'X' → logprob: -18.750003814697266
    9. '```' → logprob: -18.750003814697266
    10. '0' → logprob: -18.875003814697266

Token 915: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.31327834725379944
    2. 'in' → logprob: -1.313278317451477
    3. '[' → logprob: -12.563278198242188
    4. '0' → logprob: -12.688278198242188
    5. ',' → logprob: -13.313278198242188
    6. '_in' → logprob: -13.563278198242188
    7. '	in' → logprob: -13.688278198242188
    8. '```' → logprob: -13.813278198242188
    9. 'In' → logprob: -13.938278198242188
    10. 'x' → logprob: -14.188278198242188

Token 916: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00012415809032972902
    2. ' range' → logprob: -9.000123977661133
    3. '(range' → logprob: -14.750123977661133
    4. '0' → logprob: -15.125123977661133
    5. '
' → logprob: -16.750123977661133
    6. '	range' → logprob: -17.375123977661133
    7. '[' → logprob: -18.000123977661133
    8. ')' → logprob: -18.625123977661133
    9. ' ' → logprob: -19.125123977661133
    10. '.range' → logprob: -19.500123977661133

Token 917: '(L' (ID: 11075)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.10021486133337021
    2. '(L' → logprob: -2.350214958190918
    3. '0' → logprob: -12.475214958190918
    4. '[L' → logprob: -13.850214958190918
    5. '	L' → logprob: -13.975214958190918
    6. '(' → logprob: -14.100214958190918
    7. 'dp' → logprob: -14.100214958190918
    8. ' L' → logprob: -14.600214958190918
    9. 'Lp' → logprob: -15.600214958190918
    10. '   ' → logprob: -15.850214958190918

Token 918: ' +' (ID: 659)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.006878172513097525
    2. '):' → logprob: -5.25687837600708
    3. '+' → logprob: -6.75687837600708
    4. '       ' → logprob: -8.006877899169922
    5. ')' → logprob: -10.006877899169922
    6. '):
' → logprob: -10.131877899169922
    7. '   ' → logprob: -11.006877899169922
    8. '<|end|>' → logprob: -12.131877899169922
    9. '           ' → logprob: -12.256877899169922
    10. ':' → logprob: -12.381877899169922

Token 919: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.061054359131958e-06
    2. ' ' → logprob: -12.500007629394531
    3. '0' → logprob: -12.750007629394531
    4. 'i' → logprob: -13.750007629394531
    5. '(i' → logprob: -15.875007629394531
    6. '   ' → logprob: -16.25000762939453
    7. '+' → logprob: -16.75000762939453
    8. '(' → logprob: -16.75000762939453
    9. ')' → logprob: -17.62500762939453
    10. 'L' → logprob: -17.75000762939453

Token 920: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.723352049040841e-06
    2. '0' → logprob: -13.250004768371582
    3. ' ' → logprob: -13.625004768371582
    4. '+' → logprob: -14.125004768371582
    5. 'L' → logprob: -14.625004768371582
    6. '(' → logprob: -15.000004768371582
    7. 'i' → logprob: -16.625003814697266
    8. ')' → logprob: -16.875003814697266
    9. '   ' → logprob: -17.500003814697266
    10. '
' → logprob: -17.875003814697266

Token 921: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.023583196103572845
    2. '):' → logprob: -3.773583173751831
    3. '):
' → logprob: -8.14858341217041
    4. ')' → logprob: -11.14858341217041
    5. ':' → logprob: -11.14858341217041
    6. '):

' → logprob: -12.14858341217041
    7. '       ' → logprob: -12.39858341217041
    8. '<|end|>' → logprob: -12.64858341217041
    9. ':
' → logprob: -13.52358341217041
    10. '   ' → logprob: -13.64858341217041

Token 922: '           ' (ID: 352)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.49584195017814636
    2. '       ' → logprob: -0.9958419799804688
    3. 'for' → logprob: -4.870841979980469
    4. '	' → logprob: -5.120841979980469
    5. '	for' → logprob: -5.745841979980469
    6. '```' → logprob: -6.495841979980469
    7. '	       ' → logprob: -7.120841979980469
    8. '   ' → logprob: -7.370841979980469
    9. '           ' → logprob: -7.495841979980469
    10. '	   ' → logprob: -8.120841979980469

Token 923: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.4755343794822693
    2. ' for' → logprob: -0.9755343794822693
    3. '           ' → logprob: -6.600534439086914
    4. '               ' → logprob: -10.225534439086914
    5. '       ' → logprob: -10.350534439086914
    6. '	for' → logprob: -11.225534439086914
    7. '	       ' → logprob: -12.350534439086914
    8. ' ' → logprob: -12.850534439086914
    9. '0' → logprob: -13.225534439086914
    10. '   ' → logprob: -13.475534439086914

Token 924: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0015072436071932316
    2. ' y' → logprob: -6.50150728225708
    3. '0' → logprob: -12.376506805419922
    4. 'x' → logprob: -15.001506805419922
    5. '	y' → logprob: -15.501506805419922
    6. '   ' → logprob: -16.126506805419922
    7. '           ' → logprob: -17.251506805419922
    8. '       ' → logprob: -17.751506805419922
    9. ' ' → logprob: -17.876506805419922
    10. ',y' → logprob: -18.626506805419922

Token 925: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.05488758534193039
    2. 'in' → logprob: -2.929887533187866
    3. '+' → logprob: -13.929887771606445
    4. '	in' → logprob: -14.054887771606445
    5. ' ' → logprob: -14.429887771606445
    6. '```' → logprob: -14.554887771606445
    7. 'n' → logprob: -15.054887771606445
    8. 'In' → logprob: -15.179887771606445
    9. 'i' → logprob: -15.179887771606445
    10. '[' → logprob: -15.304887771606445

Token 926: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0004317420825827867
    2. ' range' → logprob: -7.750431537628174
    3. '(range' → logprob: -13.750432014465332
    4. '	range' → logprob: -21.625431060791016
    5. 'rang' → logprob: -21.875431060791016
    6. 'for' → logprob: -22.375431060791016
    7. '_range' → logprob: -22.625431060791016
    8. '(L' → logprob: -22.750431060791016
    9. 'Range' → logprob: -23.500431060791016
    10. '   ' → logprob: -23.750431060791016

Token 927: '(L' (ID: 11075)
  Prédit: '(L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(L' → logprob: -9.968312951968983e-06
    2. 'L' → logprob: -11.875009536743164
    3. 'range' → logprob: -12.875009536743164
    4. ' (' → logprob: -15.500009536743164
    5. '   ' → logprob: -16.625009536743164
    6. '[L' → logprob: -17.000009536743164
    7. ' range' → logprob: -17.375009536743164
    8. '(' → logprob: -17.500009536743164
    9. '           ' → logprob: -18.500009536743164
    10. '(range' → logprob: -18.875009536743164

Token 928: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.04303162172436714
    2. ' +' → logprob: -3.168031692504883
    3. '           ' → logprob: -10.918031692504883
    4. '1' → logprob: -11.918031692504883
    5. ')' → logprob: -13.418031692504883
    6. '                               ' → logprob: -13.543031692504883
    7. '```' → logprob: -13.793031692504883
    8. '       ' → logprob: -14.293031692504883
    9. '               ' → logprob: -14.293031692504883
    10. '                                   ' → logprob: -14.668031692504883

Token 929: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. '2' → logprob: -14.500000953674316
    3. ' ' → logprob: -14.750000953674316
    4. '0' → logprob: -17.375
    5. '+' → logprob: -17.875
    6. '11' → logprob: -19.5
    7. '3' → logprob: -20.0
    8. 'range' → logprob: -20.375
    9. '۱' → logprob: -20.75
    10. '10' → logprob: -20.75

Token 930: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. '0' → logprob: -14.750000953674316
    3. ' ' → logprob: -14.750000953674316
    4. '2' → logprob: -15.375000953674316
    5. '+' → logprob: -16.125001907348633
    6. '10' → logprob: -18.125001907348633
    7. '(' → logprob: -18.500001907348633
    8. '```' → logprob: -18.500001907348633
    9. 'x' → logprob: -18.625001907348633
    10. '11' → logprob: -18.750001907348633

Token 931: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.004985285922884941
    2. '):' → logprob: -5.754985332489014
    3. '           ' → logprob: -7.254985332489014
    4. ':' → logprob: -7.879985332489014
    5. ')' → logprob: -8.254984855651855
    6. ':
' → logprob: -8.754984855651855
    7. ',' → logprob: -9.879984855651855
    8. '       ' → logprob: -10.004984855651855
    9. '):
' → logprob: -10.004984855651855
    10. '               ' → logprob: -10.004984855651855

Token 932: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -7.910643762443215e-05
    2. '```' → logprob: -9.750079154968262
    3. ' for' → logprob: -12.250079154968262
    4. '                   ' → logprob: -12.375079154968262
    5. 'for' → logprob: -12.500079154968262
    6. '           ' → logprob: -12.750079154968262
    7. '                       ' → logprob: -13.500079154968262
    8. '	           ' → logprob: -14.000079154968262
    9. '              ' → logprob: -14.500079154968262
    10. '		       ' → logprob: -14.750079154968262

Token 933: ' if' (ID: 538)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7069442868232727
    2. ' for' → logprob: -1.206944227218628
    3. '               ' → logprob: -1.831944227218628
    4. '                   ' → logprob: -3.081944227218628
    5. '                       ' → logprob: -6.831944465637207
    6. '	for' → logprob: -8.581944465637207
    7. '       ' → logprob: -8.581944465637207
    8. '           ' → logprob: -9.206944465637207
    9. '   ' → logprob: -9.706944465637207
    10. '```' → logprob: -9.831944465637207

Token 934: ' loop' (ID: 11453)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.3040217161178589
    2. 'y' → logprob: -1.6790217161178589
    3. 'not' → logprob: -4.054021835327148
    4. 'max' → logprob: -4.304021835327148
    5. 'dp' → logprob: -4.429021835327148
    6. 'sum' → logprob: -5.054021835327148
    7. 'z' → logprob: -5.179021835327148
    8. 'loop' → logprob: -5.304021835327148
    9. 'any' → logprob: -6.054021835327148
    10. '(x' → logprob: -6.179021835327148

Token 935: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -4.966313281329349e-05
    2. '(' → logprob: -10.000049591064453
    3. '(
' → logprob: -12.875049591064453
    4. 'x' → logprob: -14.125049591064453
    5. ' (' → logprob: -14.125049591064453
    6. '(y' → logprob: -16.625049591064453
    7. '```' → logprob: -17.500049591064453
    8. '[x' → logprob: -17.625049591064453
    9. '((' → logprob: -18.125049591064453
    10. '   ' → logprob: -18.500049591064453

Token 936: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.019160760566592216
    2. ',y' → logprob: -4.019160747528076
    3. ' ,' → logprob: -7.144160747528076
    4. ',x' → logprob: -9.519161224365234
    5. ')' → logprob: -10.519161224365234
    6. '                       ' → logprob: -10.894161224365234
    7. ',
' → logprob: -11.394161224365234
    8. '               ' → logprob: -11.394161224365234
    9. '<|end|>' → logprob: -11.894161224365234
    10. ',p' → logprob: -12.144161224365234

Token 937: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -5.512236498361744e-07
    2. ' y' → logprob: -14.625000953674316
    3. 'x' → logprob: -20.5
    4. '   ' → logprob: -21.25
    5. ')y' → logprob: -21.5
    6. '	y' → logprob: -21.75
    7. '0' → logprob: -21.875
    8. ')' → logprob: -22.0
    9. '           ' → logprob: -22.0
    10. 'y's' → logprob: -22.625

Token 938: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.40754666924476624
    2. '):
' → logprob: -1.1575466394424438
    3. ')' → logprob: -4.032546520233154
    4. '                   ' → logprob: -7.407546520233154
    5. '                       ' → logprob: -7.657546520233154
    6. 'continue' → logprob: -7.657546520233154
    7. '               ' → logprob: -8.157546997070312
    8. ' or' → logprob: -8.282546997070312
    9. ' continue' → logprob: -8.907546997070312
    10. ':' → logprob: -8.907546997070312

Token 939: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0003907543432433158
    2. '               ' → logprob: -8.875391006469727
    3. '                       ' → logprob: -8.875391006469727
    4. 'continue' → logprob: -10.750391006469727
    5. '```' → logprob: -10.875391006469727
    6. '                           ' → logprob: -11.125391006469727
    7. '				' → logprob: -11.125391006469727
    8. '	               ' → logprob: -11.500391006469727
    9. ' continue' → logprob: -11.750391006469727
    10. '		           ' → logprob: -12.000391006469727

Token 940: ' #' (ID: 1069)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.9629074335098267
    2. '                       ' → logprob: -0.9629074335098267
    3. 'continue' → logprob: -1.4629074335098267
    4. ' continue' → logprob: -6.087907314300537
    5. '               ' → logprob: -6.712907314300537
    6. '	continue' → logprob: -8.087907791137695
    7. '```' → logprob: -8.212907791137695
    8. '                           ' → logprob: -8.462907791137695
    9. '				' → logprob: -8.712907791137695
    10. '                               ' → logprob: -9.337907791137695

Token 941: ' Ignore' (ID: 84342)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.00013977376511320472
    2. '                   ' → logprob: -9.500140190124512
    3. ' continue' → logprob: -9.750140190124512
    4. '               ' → logprob: -12.750140190124512
    5. '   ' → logprob: -13.750140190124512
    6. '                       ' → logprob: -13.750140190124512
    7. '           ' → logprob: -14.000140190124512
    8. 'break' → logprob: -15.000140190124512
    9. '	continue' → logprob: -15.500140190124512
    10. '       ' → logprob: -16.750139236450195

Token 942: ' les' (ID: 1341)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.5725969076156616
    2. 'continue' → logprob: -1.3225969076156616
    3. ' continue' → logprob: -2.572597026824951
    4. '                       ' → logprob: -2.572597026824951
    5. '               ' → logprob: -4.697597026824951
    6. '                               ' → logprob: -5.822597026824951
    7. '                           ' → logprob: -5.822597026824951
    8. '	continue' → logprob: -7.447597026824951
    9. '   ' → logprob: -7.572597026824951
    10. '           ' → logprob: -8.197596549987793

Token 943: ' patterns' (ID: 18587)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.16055241227149963
    2. 'dp' → logprob: -2.910552501678467
    3. 'contin' → logprob: -3.785552501678467
    4. 'cases' → logprob: -4.285552501678467
    5. ' états' → logprob: -4.660552501678467
    6. 'states' → logprob: -4.910552501678467
    7. 'continu' → logprob: -5.035552501678467
    8. 'x' → logprob: -5.160552501678467
    9. ' continue' → logprob: -5.160552501678467
    10. 'config' → logprob: -5.410552501678467

Token 944: ' invalid' (ID: 15796)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.01120060682296753
    2. 'continue' → logprob: -5.136200428009033
    3. '                       ' → logprob: -5.386200428009033
    4. ' continue' → logprob: -7.511200428009033
    5. '               ' → logprob: -9.761200904846191
    6. '```' → logprob: -10.511200904846191
    7. '                           ' → logprob: -10.636200904846191
    8. '           ' → logprob: -11.761200904846191
    9. ',' → logprob: -12.886200904846191
    10. '   ' → logprob: -13.011200904846191

Token 945: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.042722929269075394
    2. '   ' → logprob: -3.9177229404449463
    3. 'és' → logprob: -4.292722702026367
    4. 'e' → logprob: -5.792722702026367
    5. 'continue' → logprob: -6.167722702026367
    6. '           ' → logprob: -7.417722702026367
    7. 's' → logprob: -7.542722702026367
    8. '               ' → logprob: -7.542722702026367
    9. '       ' → logprob: -7.792722702026367
    10. '                   ' → logprob: -8.292722702026367

Token 946: ' selon' (ID: 27571)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.008750136941671371
    2. '                       ' → logprob: -4.758749961853027
    3. 'continue' → logprob: -9.633749961853027
    4. '               ' → logprob: -9.758749961853027
    5. ' continue' → logprob: -12.133749961853027
    6. '                           ' → logprob: -13.008749961853027
    7. '           ' → logprob: -13.508749961853027
    8. '```' → logprob: -13.758749961853027
    9. '				' → logprob: -14.758749961853027
    10. ',' → logprob: -14.758749961853027

Token 947: ' la' (ID: 557)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.11150871217250824
    2. 'la' → logprob: -2.98650860786438
    3. 'x' → logprob: -3.86150860786438
    4. '               ' → logprob: -4.736508846282959
    5. 'loop' → logprob: -5.111508846282959
    6. ' continue' → logprob: -5.236508846282959
    7. '           ' → logprob: -5.486508846282959
    8. ' la' → logprob: -6.236508846282959
    9. 'if' → logprob: -6.236508846282959
    10. '                   ' → logprob: -6.486508846282959

Token 948: ' règle' (ID: 115826)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.18502002954483032
    2. 'r' → logprob: -3.0600199699401855
    3. 'if' → logprob: -3.5600199699401855
    4. 'loop' → logprob: -3.8100199699401855
    5. 'condition' → logprob: -3.9350199699401855
    6. 'indent' → logprob: -4.9350199699401855
    7. 'continue' → logprob: -5.1850199699401855
    8. 'rule' → logprob: -5.3100199699401855
    9. '```' → logprob: -5.3100199699401855
    10. 'rules' → logprob: -5.6850199699401855

Token 949: ' de' (ID: 334)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.006605952978134155
    2. '                       ' → logprob: -5.131606101989746
    3. 'continue' → logprob: -7.881606101989746
    4. '               ' → logprob: -9.256606101989746
    5. ' continue' → logprob: -9.381606101989746
    6. '                           ' → logprob: -10.006606101989746
    7. '```' → logprob: -10.256606101989746
    8. ',' → logprob: -11.631606101989746
    9. '           ' → logprob: -11.881606101989746
    10. '.' → logprob: -11.881606101989746

Token 950: ' loop' (ID: 11453)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.07408834993839264
    2. 'loop' → logprob: -2.8240883350372314
    3. 'K' → logprob: -5.3240885734558105
    4. 'la' → logprob: -5.5740885734558105
    5. '```' → logprob: -6.6990885734558105
    6. 'l' → logprob: -6.9490885734558105
    7. 'continue' → logprob: -8.699088096618652
    8. 'continu' → logprob: -9.199088096618652
    9. 'le' → logprob: -9.324088096618652
    10. 'lo' → logprob: -9.449088096618652

Token 951: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.009198612533509731
    2. '                       ' → logprob: -4.7591986656188965
    3. 'continue' → logprob: -8.134198188781738
    4. '               ' → logprob: -8.759198188781738
    5. ' continue' → logprob: -9.384198188781738
    6. '           ' → logprob: -11.509198188781738
    7. '                           ' → logprob: -11.634198188781738
    8. '				' → logprob: -11.884198188781738
    9. ',' → logprob: -12.509198188781738
    10. '       ' → logprob: -13.009198188781738

Token 952: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.001448214054107666
    2. '                       ' → logprob: -7.001448154449463
    3. '               ' → logprob: -7.751448154449463
    4. 'continue' → logprob: -9.501448631286621
    5. '           ' → logprob: -11.251448631286621
    6. '				' → logprob: -12.001448631286621
    7. ' continue' → logprob: -12.501448631286621
    8. '       ' → logprob: -12.501448631286621
    9. '```' → logprob: -13.001448631286621
    10. '   ' → logprob: -14.001448631286621

Token 953: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.02986769936978817
    2. '                   ' → logprob: -4.029867649078369
    3. '                       ' → logprob: -4.529867649078369
    4. ' continue' → logprob: -7.654867649078369
    5. '```' → logprob: -8.904868125915527
    6. '	continue' → logprob: -9.404868125915527
    7. '               ' → logprob: -9.779868125915527
    8. '                           ' → logprob: -9.904868125915527
    9. '                               ' → logprob: -10.154868125915527
    10. '   ' → logprob: -11.279868125915527

Token 954: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -8.816591434879228e-05
    2. '                   ' → logprob: -10.25008773803711
    3. '<|end|>' → logprob: -10.50008773803711
    4. ' for' → logprob: -11.25008773803711
    5. 'for' → logprob: -12.00008773803711
    6. '                       ' → logprob: -13.00008773803711
    7. '```' → logprob: -14.12508773803711
    8. '           ' → logprob: -14.12508773803711
    9. '                               ' → logprob: -15.25008773803711
    10. '<|end|>' → logprob: -15.37508773803711

Token 955: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00014776040916331112
    2. '                   ' → logprob: -9.125147819519043
    3. 'for' → logprob: -10.625147819519043
    4. '           ' → logprob: -12.500147819519043
    5. ' for' → logprob: -12.625147819519043
    6. '```' → logprob: -12.875147819519043
    7. '<|end|>' → logprob: -13.500147819519043
    8. '                       ' → logprob: -13.750147819519043
    9. '			' → logprob: -14.375147819519043
    10. '	           ' → logprob: -14.750147819519043

Token 956: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.022988975048065186
    2. '                   ' → logprob: -4.522988796234131
    3. ' for' → logprob: -4.647988796234131
    4. '               ' → logprob: -6.147988796234131
    5. '	for' → logprob: -9.772989273071289
    6. '```' → logprob: -9.897989273071289
    7. '                       ' → logprob: -10.772989273071289
    8. '           ' → logprob: -11.897989273071289
    9. '	               ' → logprob: -12.397989273071289
    10. '	           ' → logprob: -12.897989273071289

Token 957: ' Pour' (ID: 13931)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -3.4121114822482923e-06
    2. ' for' → logprob: -12.625003814697266
    3. '               ' → logprob: -16.750003814697266
    4. '                   ' → logprob: -17.250003814697266
    5. '   ' → logprob: -17.625003814697266
    6. '           ' → logprob: -18.000003814697266
    7. 'z' → logprob: -18.375003814697266
    8. '	for' → logprob: -20.750003814697266
    9. '```' → logprob: -20.875003814697266
    10. '       ' → logprob: -21.250003814697266

Token 958: ' chaque' (ID: 21194)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.6327196955680847
    2. ' z' → logprob: -0.7577196955680847
    3. '   ' → logprob: -10.007719993591309
    4. 'x' → logprob: -10.632719993591309
    5. ' x' → logprob: -11.507719993591309
    6. '
' → logprob: -11.757719993591309
    7. '	z' → logprob: -12.007719993591309
    8. ' ' → logprob: -12.757719993591309
    9. 'j' → logprob: -12.757719993591309
    10. '```' → logprob: -13.007719993591309

Token 959: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.048633016645908356
    2. ' z' → logprob: -3.048633098602295
    3. 'x' → logprob: -11.173632621765137
    4. 'j' → logprob: -11.548632621765137
    5. '   ' → logprob: -11.798632621765137
    6. '	z' → logprob: -13.173632621765137
    7. '
' → logprob: -13.298632621765137
    8. '```' → logprob: -13.548632621765137
    9. ' ' → logprob: -13.798632621765137
    10. 'y' → logprob: -14.173632621765137

Token 960: ' possible' (ID: 4149)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.012970564886927605
    2. 'in' → logprob: -4.387970447540283
    3. ',' → logprob: -8.387970924377441
    4. '               ' → logprob: -9.137970924377441
    5. '                   ' → logprob: -10.262970924377441
    6. ':' → logprob: -10.887970924377441
    7. '           ' → logprob: -11.012970924377441
    8. '```' → logprob: -11.637970924377441
    9. ')' → logprob: -11.887970924377441
    10. 'for' → logprob: -12.137970924377441

Token 961: ',' (ID: 11)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.5134287476539612
    2. ' for' → logprob: -2.0134286880493164
    3. '               ' → logprob: -2.3884286880493164
    4. ',' → logprob: -2.5134286880493164
    5. 'for' → logprob: -3.3884286880493164
    6. ':
' → logprob: -3.6384286880493164
    7. ':' → logprob: -3.8884286880493164
    8. '           ' → logprob: -4.638428688049316
    9. '                       ' → logprob: -6.138428688049316
    10. '<|end|>' → logprob: -7.013428688049316

Token 962: ' où' (ID: 15113)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.42952120304107666
    2. ' for' → logprob: -1.0545212030410767
    3. '               ' → logprob: -7.554521083831787
    4. '                   ' → logprob: -8.554521560668945
    5. '<|end|>' → logprob: -9.554521560668945
    6. '           ' → logprob: -11.304521560668945
    7. '                       ' → logprob: -11.429521560668945
    8. '       ' → logprob: -12.804521560668945
    9. '	for' → logprob: -13.054521560668945
    10. ' ' → logprob: -13.429521560668945

Token 963: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.019809957593679428
    2. 'for' → logprob: -4.269809722900391
    3. ' z' → logprob: -5.644809722900391
    4. ' for' → logprob: -7.019809722900391
    5. 'dp' → logprob: -7.394809722900391
    6. '0' → logprob: -8.89480972290039
    7. 'range' → logprob: -9.14480972290039
    8. '   ' → logprob: -9.76980972290039
    9. 'max' → logprob: -9.89480972290039
    10. ' ' → logprob: -10.26980972290039

Token 964: ' >' (ID: 1424)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.3882535994052887
    2. ' in' → logprob: -1.1382535696029663
    3. ')' → logprob: -8.138253211975098
    4. 'range' → logprob: -8.263253211975098
    5. 'ranges' → logprob: -8.763253211975098
    6. ' dans' → logprob: -9.013253211975098
    7. 'dans' → logprob: -9.138253211975098
    8. ' en' → logprob: -9.388253211975098
    9. 'en' → logprob: -9.888253211975098
    10. '=' → logprob: -10.138253211975098

Token 965: ' max' (ID: 2999)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.011779941618442535
    2. 'y' → logprob: -5.13677978515625
    3. 'x' → logprob: -5.51177978515625
    4. '=' → logprob: -7.13677978515625
    5. ' ' → logprob: -7.38677978515625
    6. '1' → logprob: -9.51177978515625
    7. 'max' → logprob: -9.63677978515625
    8. ' y' → logprob: -9.76177978515625
    9. 'i' → logprob: -10.76177978515625
    10. '-' → logprob: -10.76177978515625

Token 966: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.3383943736553192
    2. '(' → logprob: -1.9633944034576416
    3. 'x' → logprob: -3.2133944034576416
    4. 'z' → logprob: -3.4633944034576416
    5. '(z' → logprob: -3.8383944034576416
    6. '(y' → logprob: -4.2133941650390625
    7. '=' → logprob: -4.4633941650390625
    8. '(
' → logprob: -4.4633941650390625
    9. 'y' → logprob: -5.2133941650390625
    10. '0' → logprob: -5.4633941650390625

Token 967: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.20518623292446136
    2. ',y' → logprob: -1.7051862478256226
    3. ' ,' → logprob: -5.955186367034912
    4. 'y' → logprob: -7.580186367034912
    5. ',x' → logprob: -8.330185890197754
    6. ')' → logprob: -9.080185890197754
    7. ' and' → logprob: -9.080185890197754
    8. 'if' → logprob: -10.330185890197754
    9. 'and' → logprob: -10.330185890197754
    10. '[' → logprob: -11.330185890197754

Token 968: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0002619318547658622
    2. ' y' → logprob: -8.250262260437012
    3. '(y' → logprob: -14.375262260437012
    4. '	y' → logprob: -16.625261306762695
    5. '   ' → logprob: -16.875261306762695
    6. 'x' → logprob: -17.250261306762695
    7. ',y' → logprob: -18.000261306762695
    8. ' ' → logprob: -19.125261306762695
    9. ')y' → logprob: -19.250261306762695
    10. '[y' → logprob: -19.375261306762695

Token 969: ')
' (ID: 446)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.46666204929351807
    2. '):
' → logprob: -1.216662049293518
    3. ')' → logprob: -2.8416619300842285
    4. ' and' → logprob: -5.2166619300842285
    5. 'and' → logprob: -5.7166619300842285
    6. ')]' → logprob: -6.0916619300842285
    7. '),' → logprob: -6.5916619300842285
    8. '                   ' → logprob: -7.0916619300842285
    9. '               ' → logprob: -7.3416619300842285
    10. ':' → logprob: -7.3416619300842285

Token 970: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.14139360189437866
    2. '                   ' → logprob: -2.5163936614990234
    3. ',' → logprob: -3.8913936614990234
    4. '<|end|>' → logprob: -4.516393661499023
    5. '           ' → logprob: -5.516393661499023
    6. '                       ' → logprob: -5.516393661499023
    7. ':' → logprob: -5.516393661499023
    8. '       ' → logprob: -5.891393661499023
    9. ' for' → logprob: -6.766393661499023
    10. '```' → logprob: -7.141393661499023

Token 971: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.001293331733904779
    2. ' for' → logprob: -7.001293182373047
    3. '                   ' → logprob: -8.501293182373047
    4. '               ' → logprob: -9.001293182373047
    5. 'z' → logprob: -9.876293182373047
    6. '           ' → logprob: -12.751293182373047
    7. '                       ' → logprob: -15.001293182373047
    8. '                ' → logprob: -15.376293182373047
    9. '       ' → logprob: -16.001293182373047
    10. '                 ' → logprob: -16.501293182373047

Token 972: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -3.750436007976532e-05
    2. ' z' → logprob: -10.25003719329834
    3. 'max' → logprob: -14.62503719329834
    4. '	z' → logprob: -14.75003719329834
    5. 'x' → logprob: -15.00003719329834
    6. '0' → logprob: -15.62503719329834
    7. '```' → logprob: -15.75003719329834
    8. '   ' → logprob: -15.75003719329834
    9. '_z' → logprob: -16.000038146972656
    10. '(z' → logprob: -16.250038146972656

Token 973: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.023298466578125954
    2. 'in' → logprob: -3.773298501968384
    3. 'In' → logprob: -11.273298263549805
    4. '	in' → logprob: -11.648298263549805
    5. ' ' → logprob: -11.773298263549805
    6. ')' → logprob: -11.773298263549805
    7. '```' → logprob: -13.023298263549805
    8. 'n' → logprob: -13.398298263549805
    9. 'int' → logprob: -13.648298263549805
    10. '1' → logprob: -13.773298263549805

Token 974: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.002485765377059579
    2. ' range' → logprob: -6.002485752105713
    3. '(range' → logprob: -11.877486228942871
    4. ' ' → logprob: -14.377486228942871
    5. '   ' → logprob: -14.502486228942871
    6. 're' → logprob: -14.502486228942871
    7. 'in' → logprob: -14.877486228942871
    8. '	range' → logprob: -15.502486228942871
    9. 'x' → logprob: -15.752486228942871
    10. '[' → logprob: -16.002485275268555

Token 975: '(max' (ID: 17178)
  Prédit: '(max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.2245636135339737
    2. 'max' → logprob: -2.2245635986328125
    3. '(L' → logprob: -2.4745635986328125
    4. 'L' → logprob: -4.8495635986328125
    5. '(' → logprob: -7.8495635986328125
    6. '(z' → logprob: -8.724563598632812
    7. 'z' → logprob: -8.974563598632812
    8. '(min' → logprob: -9.224563598632812
    9. '[max' → logprob: -9.474563598632812
    10. ' max' → logprob: -9.974563598632812

Token 976: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -8.268254896393046e-05
    2. '(' → logprob: -9.500082969665527
    3. 'x' → logprob: -12.125082969665527
    4. '(
' → logprob: -14.000082969665527
    5. '(y' → logprob: -14.375082969665527
    6. '((' → logprob: -15.000082969665527
    7. '(max' → logprob: -15.125082969665527
    8. '(z' → logprob: -15.125082969665527
    9. '(L' → logprob: -17.25008201599121
    10. ' (' → logprob: -18.25008201599121

Token 977: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5689371228218079
    2. ',y' → logprob: -0.9439371228218079
    3. '(y' → logprob: -3.318937063217163
    4. '+' → logprob: -5.693937301635742
    5. 'y' → logprob: -5.818937301635742
    6. ' ,' → logprob: -6.318937301635742
    7. '(' → logprob: -8.818937301635742
    8. ' +' → logprob: -9.068937301635742
    9. '[y' → logprob: -9.818937301635742
    10. ',
' → logprob: -10.818937301635742

Token 978: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0010330495424568653
    2. ' y' → logprob: -6.876032829284668
    3. '   ' → logprob: -16.126033782958984
    4. '0' → logprob: -16.876033782958984
    5. 'x' → logprob: -16.876033782958984
    6. '(y' → logprob: -17.001033782958984
    7. ' ' → logprob: -17.626033782958984
    8. '1' → logprob: -17.626033782958984
    9. ',y' → logprob: -17.626033782958984
    10. '	y' → logprob: -18.001033782958984

Token 979: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5611572265625
    2. '+' → logprob: -1.9361572265625
    3. ' +' → logprob: -2.0611572265625
    4. ',' → logprob: -2.4361572265625
    5. ')+' → logprob: -2.6861572265625
    6. '),' → logprob: -6.8111572265625
    7. ' ,' → logprob: -7.6861572265625
    8. ',L' → logprob: -8.6861572265625
    9. ']+' → logprob: -8.9361572265625
    10. '   ' → logprob: -8.9361572265625

Token 980: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2390826940536499
    2. ' +' → logprob: -1.86408269405365
    3. ',' → logprob: -2.8640828132629395
    4. ',L' → logprob: -8.239082336425781
    5. ' ,' → logprob: -8.364082336425781
    6. '+,' → logprob: -11.239082336425781
    7. ',
' → logprob: -11.489082336425781
    8. '+
' → logprob: -11.614082336425781
    9. ')+' → logprob: -11.864082336425781
    10. 'L' → logprob: -12.364082336425781

Token 981: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.961759259458631e-06
    2. ' ' → logprob: -12.500004768371582
    3. '2' → logprob: -13.750004768371582
    4. '```' → logprob: -17.3750057220459
    5. '   ' → logprob: -17.5000057220459
    6. '
' → logprob: -17.8750057220459
    7. '3' → logprob: -19.2500057220459
    8. '0' → logprob: -19.4375057220459
    9. '+' → logprob: -19.8750057220459
    10. '(' → logprob: -20.2500057220459

Token 982: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00013119110371917486
    2. '2' → logprob: -9.000131607055664
    3. ' ' → logprob: -11.875131607055664
    4. '   ' → logprob: -15.125131607055664
    5. '```' → logprob: -15.625131607055664
    6. '
' → logprob: -16.562631607055664
    7. '0' → logprob: -16.750131607055664
    8. '3' → logprob: -17.375131607055664
    9. '(' → logprob: -18.062631607055664
    10. '  ' → logprob: -18.187631607055664

Token 983: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0038506705313920975
    2. ',L' → logprob: -5.75385046005249
    3. ' ,' → logprob: -7.37885046005249
    4. '+' → logprob: -10.628850936889648
    5. 'L' → logprob: -11.003850936889648
    6. ' L' → logprob: -13.378850936889648
    7. ' +' → logprob: -13.503850936889648
    8. '   ' → logprob: -14.128850936889648
    9. ',
' → logprob: -14.128850936889648
    10. ',len' → logprob: -14.628850936889648

Token 984: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.00011319868644932285
    2. ' L' → logprob: -9.125113487243652
    3. '(L' → logprob: -12.750113487243652
    4. '   ' → logprob: -14.125113487243652
    5. '	L' → logprob: -15.000113487243652
    6. ' ' → logprob: -16.250112533569336
    7. '       ' → logprob: -17.625112533569336
    8. ' (' → logprob: -17.875112533569336
    9. '[L' → logprob: -18.125112533569336
    10. ' ' → logprob: -18.250112533569336

Token 985: ' +' (ID: 659)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4304731786251068
    2. '):
' → logprob: -1.0554732084274292
    3. '+' → logprob: -6.555473327636719
    4. '):
' → logprob: -8.680473327636719
    5. ')' → logprob: -9.680473327636719
    6. ':' → logprob: -10.555473327636719
    7. ',' → logprob: -10.930473327636719
    8. '[' → logprob: -11.555473327636719
    9. ' +' → logprob: -11.680473327636719
    10. ' ):' → logprob: -11.805473327636719

Token 986: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.35837464465294e-05
    2. '0' → logprob: -10.625043869018555
    3. ' ' → logprob: -11.125043869018555
    4. '   ' → logprob: -12.875043869018555
    5. ')' → logprob: -14.250043869018555
    6. '           ' → logprob: -14.875043869018555
    7. '       ' → logprob: -15.375043869018555
    8. '```' → logprob: -15.750043869018555
    9. '                   ' → logprob: -16.562543869018555
    10. '  ' → logprob: -17.125043869018555

Token 987: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.816093228830141e-06
    2. ' ' → logprob: -13.12500286102295
    3. '0' → logprob: -14.37500286102295
    4. '   ' → logprob: -16.500001907348633
    5. '```' → logprob: -16.875001907348633
    6. '
' → logprob: -18.187501907348633
    7. '2' → logprob: -18.375001907348633
    8. ')' → logprob: -18.562501907348633
    9. '           ' → logprob: -18.812501907348633
    10. '=' → logprob: -19.062501907348633

Token 988: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.14547349512577057
    2. '):
' → logprob: -2.0204734802246094
    3. ':' → logprob: -6.145473480224609
    4. '):
' → logprob: -8.52047348022461
    5. ')' → logprob: -9.02047348022461
    6. '           ' → logprob: -9.27047348022461
    7. '               ' → logprob: -9.77047348022461
    8. '       ' → logprob: -10.64547348022461
    9. ':
' → logprob: -11.02047348022461
    10. ']:' → logprob: -11.02047348022461

Token 989: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.718877375125885
    2. '<|end|>' → logprob: -0.968877375125885
    3. '                       ' → logprob: -4.09387731552124
    4. '                           ' → logprob: -4.09387731552124
    5. '<|end|>' → logprob: -4.09387731552124
    6. '           ' → logprob: -4.21887731552124
    7. '		' → logprob: -4.34387731552124
    8. '				' → logprob: -4.71887731552124
    9. '               ' → logprob: -4.96887731552124
    10. '```' → logprob: -5.21887731552124

Token 990: ' if' (ID: 538)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.5460004806518555
    2. '                       ' → logprob: -1.5460004806518555
    3. 'if' (adapté à ' if') → logprob: -2.7960004806518555
    4. ' if' → logprob: -3.0460004806518555
    5. ' val' → logprob: -3.6710004806518555
    6. 'v' → logprob: -3.9210004806518555
    7. '                           ' → logprob: -4.0460004806518555
    8. 'cur' → logprob: -4.5460004806518555
    9. '                   ' → logprob: -5.0460004806518555
    10. 'for' → logprob: -5.7960004806518555

Token 991: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0005846070707775652
    2. ' dp' → logprob: -7.875584602355957
    3. 'x' → logprob: -9.125584602355957
    4. 'z' → logprob: -10.625584602355957
    5. 'not' → logprob: -10.625584602355957
    6. '(dp' → logprob: -11.500584602355957
    7. 'i' → logprob: -11.875584602355957
    8. '   ' → logprob: -12.000584602355957
    9. '	dp' → logprob: -12.375584602355957
    10. 'K' → logprob: -13.000584602355957

Token 992: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.704273118884885e-07
    2. '[' → logprob: -15.875000953674316
    3. '[i' → logprob: -15.875000953674316
    4. '   ' → logprob: -16.25
    5. '```' → logprob: -16.625
    6. ' ' → logprob: -17.0
    7. '                   ' → logprob: -17.125
    8. 'i' → logprob: -17.25
    9. '０' → logprob: -18.25
    10. '`' → logprob: -18.375

Token 993: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -2.4987974029500037e-05
    2. 'x' → logprob: -10.875024795532227
    3. '[' → logprob: -12.375024795532227
    4. ' [' → logprob: -14.750024795532227
    5. '[
' → logprob: -15.125024795532227
    6. '][' → logprob: -15.500024795532227
    7. '[i' → logprob: -15.500024795532227
    8. ' x' → logprob: -16.000024795532227
    9. '(x' → logprob: -16.250024795532227
    10. '[z' → logprob: -16.375024795532227

Token 994: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -3.3213025744771585e-05
    2. ']' → logprob: -11.250033378601074
    3. '[x' → logprob: -11.500033378601074
    4. ' ][' → logprob: -12.000033378601074
    5. ']][' → logprob: -13.750033378601074
    6. '"][' → logprob: -14.000033378601074
    7. '[' → logprob: -14.250033378601074
    8. '[j' → logprob: -16.000032424926758
    9. ')][' → logprob: -16.125032424926758
    10. '[i' → logprob: -16.125032424926758

Token 995: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -2.339278580620885e-06
    2. ' y' → logprob: -13.000001907348633
    3. '	y' → logprob: -17.875001907348633
    4. '   ' → logprob: -18.625001907348633
    5. ',y' → logprob: -20.750001907348633
    6. '    ' → logprob: -20.875001907348633
    7. ''y' → logprob: -21.000001907348633
    8. '  ' → logprob: -21.125001907348633
    9. '(y' → logprob: -21.500001907348633
    10. ')y' → logprob: -21.500001907348633

Token 996: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0022004556376487017
    2. '[z' → logprob: -6.127200603485107
    3. ' ][' → logprob: -11.62720012664795
    4. ']' → logprob: -13.25220012664795
    5. '[' → logprob: -13.62720012664795
    6. '"][' → logprob: -13.62720012664795
    7. 'z' → logprob: -14.00220012664795
    8. ']][' → logprob: -14.87720012664795
    9. ''][' → logprob: -15.12720012664795
    10. ')[' → logprob: -16.252201080322266

Token 997: 'z' (ID: 89)
  Prédit: 'z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -1.9361264946837764e-07
    2. ' z' → logprob: -17.125
    3. '[z' → logprob: -17.25
    4. '	z' → logprob: -18.75
    5. '   ' → logprob: -18.875
    6. '
' → logprob: -19.125
    7. '```' → logprob: -20.125
    8. '           ' → logprob: -20.625
    9. '       ' → logprob: -21.0
    10. ' ' → logprob: -21.25

Token 998: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.7133030891418457
    2. ']==' → logprob: -1.2133030891418457
    3. ']>' → logprob: -1.8383030891418457
    4. ']!=' → logprob: -3.0883030891418457
    5. '>' → logprob: -5.713303089141846
    6. '==' → logprob: -6.213303089141846
    7. ']:' → logprob: -6.713303089141846
    8. ']:
' → logprob: -7.588303089141846
    9. ']+=' → logprob: -7.963303089141846
    10. '!=' → logprob: -8.213302612304688

Token 999: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.11412172019481659
    2. '=' → logprob: -3.239121675491333
    3. '>' → logprob: -3.739121675491333
    4. '!=' → logprob: -3.989121675491333
    5. ' ==' → logprob: -4.364121913909912
    6. ':' → logprob: -4.739121913909912
    7. ']==' → logprob: -6.739121913909912
    8. '+=' → logprob: -7.614121913909912
    9. ')==' → logprob: -7.864121913909912
    10. ' >' → logprob: -8.239121437072754

Token 1000: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. '۰' → logprob: -23.250001907348633
    4. ' ' → logprob: -23.750001907348633
    5. '  ' → logprob: -24.625001907348633
    6. '```' → logprob: -24.875001907348633
    7. ' ' → logprob: -25.125001907348633
    8. '  ' → logprob: -25.125001907348633
    9. '   ' → logprob: -25.375001907348633
    10. '[' → logprob: -25.500001907348633

Token 1001: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.125001907348633
    3. '۰' → logprob: -19.125001907348633
    4. '00' → logprob: -21.375001907348633
    5. ' ' → logprob: -21.750001907348633
    6. '  ' → logprob: -21.750001907348633
    7. '000' → logprob: -21.875001907348633
    8. '   ' → logprob: -22.250001907348633
    9. '٠' → logprob: -22.500001907348633
    10. '０' → logprob: -22.625001907348633

Token 1002: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3137511909008026
    2. '                       ' → logprob: -1.438751220703125
    3. ':
' → logprob: -3.563751220703125
    4. '                   ' → logprob: -5.813751220703125
    5. '                           ' → logprob: -8.313751220703125
    6. '                               ' → logprob: -8.438751220703125
    7. ' continue' → logprob: -9.313751220703125
    8. '	                   ' → logprob: -10.063751220703125
    9. 'continue' → logprob: -10.188751220703125
    10. ':
' → logprob: -10.688751220703125

Token 1003: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.00646607531234622
    2. '                           ' → logprob: -6.006465911865234
    3. '                               ' → logprob: -6.256465911865234
    4. '                   ' → logprob: -7.131465911865234
    5. '	                   ' → logprob: -7.881465911865234
    6. '               ' → logprob: -8.381465911865234
    7. '```' → logprob: -8.881465911865234
    8. '                        ' → logprob: -9.256465911865234
    9. '<|end|>' → logprob: -9.881465911865234
    10. '                        
' → logprob: -9.881465911865234

Token 1004: ' #' (ID: 1069)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.007598468568176031
    2. '                           ' → logprob: -5.757598400115967
    3. ' continue' → logprob: -5.757598400115967
    4. '                       ' → logprob: -7.007598400115967
    5. '                               ' → logprob: -8.257598876953125
    6. '	continue' → logprob: -10.257598876953125
    7. '                   ' → logprob: -10.632598876953125
    8. '   ' → logprob: -11.757598876953125
    9. '           ' → logprob: -12.257598876953125
    10. '               ' → logprob: -12.382598876953125

Token 1005: ' Pas' (ID: 18323)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -3.023293538717553e-05
    2. ' continue' → logprob: -10.500030517578125
    3. '	continue' → logprob: -14.125030517578125
    4. '                   ' → logprob: -14.750030517578125
    5. '                       ' → logprob: -14.750030517578125
    6. '   ' → logprob: -15.000030517578125
    7. 'break' → logprob: -15.375030517578125
    8. '```' → logprob: -15.625030517578125
    9. '                           ' → logprob: -15.750030517578125
    10. '           ' → logprob: -16.125030517578125

Token 1006: ' de' (ID: 334)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.339833527803421
    2. '                   ' → logprob: -1.4648334980010986
    3. '                       ' → logprob: -3.4648334980010986
    4. 'contin' → logprob: -4.589833736419678
    5. '                           ' → logprob: -5.589833736419678
    6. '               ' → logprob: -5.964833736419678
    7. ' continue' → logprob: -6.214833736419678
    8. '#' → logprob: -6.964833736419678
    9. 'continu' → logprob: -7.339833736419678
    10. 'd' → logprob: -7.339833736419678

Token 1007: ' façon' (ID: 33381)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.01270329300314188
    2. ' continue' → logprob: -4.7627034187316895
    3. 'contin' → logprob: -5.7627034187316895
    4. '```' → logprob: -7.6377034187316895
    5. 'continu' → logprob: -8.387702941894531
    6. 'next' → logprob: -9.137702941894531
    7. 'pass' → logprob: -9.762702941894531
    8. ' next' → logprob: -11.887702941894531
    9. 'su' → logprob: -11.887702941894531
    10. 'token' → logprob: -11.887702941894531

Token 1008: ' possible' (ID: 4149)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.1616104543209076
    2. '                       ' → logprob: -2.4116103649139404
    3. 'à' → logprob: -3.5366103649139404
    4. 'continue' → logprob: -4.6616106033325195
    5. ' à' → logprob: -4.9116106033325195
    6. '                           ' → logprob: -5.4116106033325195
    7. '```' → logprob: -5.4116106033325195
    8. '               ' → logprob: -6.2866106033325195
    9. ' to' → logprob: -7.4116106033325195
    10. '                               ' → logprob: -7.6616106033325195

Token 1009: ' d' (ID: 272)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.5371466875076294
    2. '                       ' → logprob: -1.0371466875076294
    3. '                           ' → logprob: -3.16214656829834
    4. '```' → logprob: -4.78714656829834
    5. ',' → logprob: -5.91214656829834
    6. ':' → logprob: -6.16214656829834
    7. '               ' → logprob: -6.41214656829834
    8. '                               ' → logprob: -6.66214656829834
    9. 'continue' → logprob: -6.78714656829834
    10. '           ' → logprob: -7.41214656829834

Token 1010: ''' (ID: 6)
  Prédit: ''aller'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''aller' → logprob: -1.076947569847107
    2. 'contin' → logprob: -1.201947569847107
    3. 'aller' → logprob: -2.5769476890563965
    4. ''arr' → logprob: -2.7019476890563965
    5. 'arr' → logprob: -2.9519476890563965
    6. ''obtenir' → logprob: -3.5769476890563965
    7. 'e' → logprob: -3.8269476890563965
    8. 'atte' → logprob: -4.0769476890563965
    9. ''aj' → logprob: -4.4519476890563965
    10. ' continuer' → logprob: -4.5769476890563965

Token 1011: 'atte' (ID: 23975)
  Prédit: 'contin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'contin' → logprob: -1.177276611328125
    2. 'arr' → logprob: -1.302276611328125
    3. 'con' → logprob: -1.427276611328125
    4. 'atte' → logprob: -1.927276611328125
    5. 'faire' → logprob: -4.802276611328125
    6. 'former' → logprob: -5.177276611328125
    7. 'part' → logprob: -5.927276611328125
    8. 'placer' → logprob: -5.927276611328125
    9. 'aller' → logprob: -5.927276611328125
    10. 'continu' → logprob: -6.427276611328125

Token 1012: 'indre' (ID: 28945)
  Prédit: 'indre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'indre' → logprob: -0.000563042180147022
    2. 'nd' → logprob: -8.00056266784668
    3. 'endre' → logprob: -9.37556266784668
    4. 'n' → logprob: -10.50056266784668
    5. 'nir' → logprob: -10.75056266784668
    6. 'inder' → logprob: -11.00056266784668
    7. 'ind' → logprob: -11.00056266784668
    8. 'te' → logprob: -11.00056266784668
    9. 'inte' → logprob: -11.75056266784668
    10. 'in' → logprob: -12.50056266784668

Token 1013: ' cet' (ID: 19505)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.058901190757751465
    2. '```' → logprob: -3.433901309967041
    3. 'contin' → logprob: -4.558901309967041
    4. 'next' → logprob: -5.308901309967041
    5. ' continue' → logprob: -6.058901309967041
    6. '
' → logprob: -6.808901309967041
    7. '<|end|>' → logprob: -6.808901309967041
    8. 'x' → logprob: -6.933901309967041
    9. 'continu' → logprob: -7.808901309967041
    10. 'Continue' → logprob: -7.808901309967041

Token 1014: ' état' (ID: 59181)
  Prédit: 'ét'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ét' → logprob: -0.09213870018720627
    2. ' état' → logprob: -2.9671387672424316
    3. ''état' → logprob: -4.217138767242432
    4. 'É' → logprob: -4.592138767242432
    5. 'etat' → logprob: -4.842138767242432
    6. 'state' → logprob: -6.842138767242432
    7. '```' → logprob: -6.967138767242432
    8. '’état' → logprob: -7.717138767242432
    9. 'indice' → logprob: -8.342138290405273
    10. 'et' → logprob: -8.842138290405273

Token 1015: ',' (ID: 11)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.08130624890327454
    2. ':' → logprob: -3.081306219100952
    3. '                   ' → logprob: -3.831306219100952
    4. '                           ' → logprob: -5.206306457519531
    5. ':
' → logprob: -6.081306457519531
    6. 'continue' → logprob: -6.706306457519531
    7. ' continue' → logprob: -7.456306457519531
    8. ',' → logprob: -7.956306457519531
    9. '                               ' → logprob: -8.581306457519531
    10. '               ' → logprob: -8.706306457519531

Token 1016: ' on' (ID: 402)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.2773232161998749
    2. 'continue' → logprob: -1.5273232460021973
    3. '                               ' → logprob: -4.027323246002197
    4. ' continue' → logprob: -5.402323246002197
    5. '                       ' → logprob: -6.777323246002197
    6. '	continue' → logprob: -7.277323246002197
    7. '						' → logprob: -7.527323246002197
    8. '                                   ' → logprob: -8.902322769165039
    9. '	                       ' → logprob: -9.902322769165039
    10. '                   ' → logprob: -10.152322769165039

Token 1017: ' saute' (ID: 146395)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.0030480583664029837
    2. ' continue' → logprob: -5.878047943115234
    3. '	continue' → logprob: -8.753047943115234
    4. '                           ' → logprob: -10.003047943115234
    5. 'contin' → logprob: -10.628047943115234
    6. '                               ' → logprob: -12.253047943115234
    7. '```' → logprob: -12.753047943115234
    8. '_continue' → logprob: -12.878047943115234
    9. '                       ' → logprob: -13.128047943115234
    10. '   ' → logprob: -13.753047943115234

Token 1018: '
' (ID: 198)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.013005867600440979
    2. '                       ' → logprob: -5.01300573348999
    3. '```' → logprob: -5.26300573348999
    4. ' continue' → logprob: -8.013006210327148
    5. '                           ' → logprob: -8.013006210327148
    6. '                   ' → logprob: -8.138006210327148
    7. '                               ' → logprob: -9.763006210327148
    8. 'contin' → logprob: -10.763006210327148
    9. '	continue' → logprob: -11.388006210327148
    10. '                        
' → logprob: -11.888006210327148

Token 1019: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.18722257018089294
    2. '                           ' → logprob: -1.8122225999832153
    3. ' continue' → logprob: -6.062222480773926
    4. 'continue' → logprob: -6.062222480773926
    5. '                   ' → logprob: -6.687222480773926
    6. '                               ' → logprob: -6.812222480773926
    7. '```' → logprob: -8.562222480773926
    8. '	continue' → logprob: -9.437222480773926
    9. '					' → logprob: -10.312222480773926
    10. '               ' → logprob: -10.312222480773926

Token 1020: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.0005471954355016351
    2. ' continue' → logprob: -8.500547409057617
    3. '                       ' → logprob: -8.750547409057617
    4. '                           ' → logprob: -8.750547409057617
    5. '                               ' → logprob: -11.500547409057617
    6. '                   ' → logprob: -11.750547409057617
    7. '	continue' → logprob: -12.125547409057617
    8. '```' → logprob: -13.500547409057617
    9. '           ' → logprob: -14.000547409057617
    10. '               ' → logprob: -14.875547409057617

Token 1021: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0035889027640223503
    2. '                       ' → logprob: -6.878588676452637
    3. '<|end|>' → logprob: -7.253588676452637
    4. '```' → logprob: -7.628588676452637
    5. '               ' → logprob: -8.503588676452637
    6. 'dp' → logprob: -8.628588676452637
    7. '#' → logprob: -9.003588676452637
    8. ' for' → logprob: -9.128588676452637
    9. '                           ' → logprob: -9.253588676452637
    10. '<|end|>' → logprob: -9.253588676452637

Token 1022: '                   ' (ID: 699)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.5150513052940369
    2. '                   ' → logprob: -2.0150513648986816
    3. '```' → logprob: -3.0150513648986816
    4. '                               ' → logprob: -3.1400513648986816
    5. '                           ' → logprob: -3.5150513648986816
    6. '					' → logprob: -3.8900513648986816
    7. '	                   ' → logprob: -4.265051364898682
    8. '               ' → logprob: -4.265051364898682
    9. '	' → logprob: -4.515051364898682
    10. '                    ' → logprob: -4.515051364898682

Token 1023: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.23002301156520844
    2. '                   ' → logprob: -1.8550230264663696
    3. 'dp' → logprob: -4.35502290725708
    4. '```' → logprob: -4.60502290725708
    5. 'val' → logprob: -4.85502290725708
    6. 'for' → logprob: -4.98002290725708
    7. '                       ' → logprob: -5.10502290725708
    8. ' #' → logprob: -5.48002290725708
    9. '                    ' → logprob: -8.355023384094238
    10. 'value' → logprob: -8.980023384094238

Token 1024: ' Cas' (ID: 8066)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.08115247637033463
    2. 'val' → logprob: -2.7061524391174316
    3. 'for' → logprob: -5.581152439117432
    4. '                   ' → logprob: -5.956152439117432
    5. 'dp' → logprob: -6.206152439117432
    6. 'curr' → logprob: -6.956152439117432
    7. 'ways' → logprob: -7.206152439117432
    8. 'cnt' → logprob: -8.45615291595459
    9. 'cur' → logprob: -8.70615291595459
    10. '                       ' → logprob: -8.70615291595459

Token 1025: ' où' (ID: 15113)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.38646200299263
    2. ' ' → logprob: -1.8864619731903076
    3. ' x' → logprob: -2.6364619731903076
    4. '1' → logprob: -3.1364619731903076
    5. 'x' → logprob: -4.011462211608887
    6. ' #' → logprob: -4.386462211608887
    7. '#' → logprob: -4.886462211608887
    8. 'dp' → logprob: -4.886462211608887
    9. ' for' → logprob: -6.386462211608887
    10. ' dp' → logprob: -6.511462211608887

Token 1026: ' l' (ID: 305)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5171558260917664
    2. ' x' → logprob: -2.142155885696411
    3. ' on' → logprob: -2.642155885696411
    4. 'dp' → logprob: -3.017155885696411
    5. '#' → logprob: -3.642155885696411
    6. 'y' → logprob: -4.017155647277832
    7. '0' → logprob: -4.017155647277832
    8. 'z' → logprob: -4.142155647277832
    9. ' la' → logprob: -4.642155647277832
    10. '(x' → logprob: -4.767155647277832

Token 1027: ''on' (ID: 25812)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7708634734153748
    2. 'e' → logprob: -0.8958634734153748
    3. 'a' → logprob: -3.8958635330200195
    4. ''est' → logprob: -4.1458635330200195
    5. '                   ' → logprob: -4.6458635330200195
    6. 'dp' → logprob: -4.8958635330200195
    7. 'es' → logprob: -4.8958635330200195
    8. ' #' → logprob: -5.2708635330200195
    9. ''aj' → logprob: -5.3958635330200195
    10. ''on' → logprob: -5.3958635330200195

Token 1028: ' ajoute' (ID: 91611)
  Prédit: 'aj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aj' → logprob: -0.4414866864681244
    2. '#' → logprob: -1.5664867162704468
    3. '                   ' → logprob: -3.1914865970611572
    4. 'pe' → logprob: -3.3164865970611572
    5. ' ajoute' → logprob: -3.3164865970611572
    6. '                       ' → logprob: -4.066486835479736
    7. 'continue' → logprob: -5.816486835479736
    8. ' #' → logprob: -6.066486835479736
    9. 'a' → logprob: -6.691486835479736
    10. ' peut' → logprob: -6.691486835479736

Token 1029: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.285224974155426
    2. 'un' → logprob: -2.2852249145507812
    3. ' x' → logprob: -3.5352249145507812
    4. '0' → logprob: -3.6602249145507812
    5. ' (' → logprob: -3.9102249145507812
    6. '1' → logprob: -3.9102249145507812
    7. ' ' → logprob: -4.410224914550781
    8. '(' → logprob: -4.535224914550781
    9. 'une' → logprob: -4.785224914550781
    10. ' une' → logprob: -5.160224914550781

Token 1030: ' élément' (ID: 99627)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.06826701015233994
    2. 'x' → logprob: -3.3182671070098877
    3. ' élément' → logprob: -4.568266868591309
    4. 'element' → logprob: -5.693266868591309
    5. 'nou' → logprob: -5.693266868591309
    6. 'diff' → logprob: -6.068266868591309
    7. 'm' → logprob: -6.193266868591309
    8. '0' → logprob: -6.193266868591309
    9. 'even' → logprob: -6.568266868591309
    10. ' nouvel' → logprob: -7.443266868591309

Token 1031: ' de' (ID: 334)
  Prédit: ' différent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' différent' → logprob: -0.7131434679031372
    2. ' de' → logprob: -0.8381434679031372
    3. ' ident' → logprob: -3.7131433486938477
    4. 'diff' → logprob: -3.9631433486938477
    5. ' avec' → logprob: -5.213143348693848
    6. ' diff' → logprob: -5.463143348693848
    7. 'de' → logprob: -5.588143348693848
    8. '                   ' → logprob: -5.588143348693848
    9. 'd' → logprob: -6.213143348693848
    10. '```' → logprob: -6.338143348693848

Token 1032: ' par' (ID: 686)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.04671366512775421
    2. 'm' → logprob: -3.2967135906219482
    3. 'la' → logprob: -5.671713829040527
    4. 'pair' → logprob: -6.171713829040527
    5. 'diff' → logprob: -6.921713829040527
    6. '```' → logprob: -7.921713829040527
    7. 'val' → logprob: -8.171713829040527
    8. 'pa' → logprob: -8.171713829040527
    9. 'pari' → logprob: -8.421713829040527
    10. 'type' → logprob: -8.796713829040527

Token 1033: 'ité' (ID: 3761)
  Prédit: 'ité'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ité' → logprob: -0.008899956941604614
    2. 'par' → logprob: -5.758900165557861
    3. 'i' → logprob: -6.758900165557861
    4. 'ity' → logprob: -7.008900165557861
    5. 'ite' → logprob: -7.133900165557861
    6. 'pair' → logprob: -7.508900165557861
    7. 'itié' → logprob: -7.633900165557861
    8. 'it' → logprob: -7.758900165557861
    9. 'x' → logprob: -8.008899688720703
    10. 'té' → logprob: -9.383899688720703

Token 1034: ' différente' (ID: 140707)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.27203404903411865
    2. ' différente' → logprob: -1.5220340490341187
    3. '```' → logprob: -4.772034168243408
    4. ' oppos' → logprob: -5.522034168243408
    5. ' ident' → logprob: -5.897034168243408
    6. 'different' → logprob: -6.772034168243408
    7. ' diff' → logprob: -6.897034168243408
    8. 'op' → logprob: -7.647034168243408
    9. '   ' → logprob: -7.897034168243408
    10. ' different' → logprob: -8.02203369140625

Token 1035: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4475284218788147
    2. '                   ' → logprob: -1.32252836227417
    3. ' :' → logprob: -3.07252836227417
    4. ':
' → logprob: -3.94752836227417
    5. ',' → logprob: -4.57252836227417
    6. ' :
' → logprob: -5.69752836227417
    7. '```' → logprob: -5.82252836227417
    8. '                       ' → logprob: -6.44752836227417
    9. '                    
' → logprob: -6.44752836227417
    10. ' (' → logprob: -6.82252836227417

Token 1036: '                   ' (ID: 699)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5936486124992371
    2. '                   ' → logprob: -1.2186486721038818
    3. '```' → logprob: -3.093648672103882
    4. ':
' → logprob: -3.593648672103882
    5. '                       ' → logprob: -3.843648672103882
    6. ' :' → logprob: -4.093648433685303
    7. '[token' → logprob: -4.468648433685303
    8. '[' → logprob: -5.093648433685303
    9. '                    ' → logprob: -5.593648433685303
    10. '                    
' → logprob: -5.718648433685303

Token 1037: ' dp' (ID: 21546)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3931408226490021
    2. 'dp' (adapté à ' dp') → logprob: -1.7681407928466797
    3. ' for' → logprob: -2.3931407928466797
    4. 'nx' → logprob: -3.2681407928466797
    5. '                   ' → logprob: -5.01814079284668
    6. ' dp' → logprob: -5.14314079284668
    7. 'if' → logprob: -5.14314079284668
    8. ' nx' → logprob: -6.26814079284668
    9. 'dx' → logprob: -6.39314079284668
    10. 'new' → logprob: -7.01814079284668

Token 1038: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006326167494989932
    2. '[x' → logprob: -7.5006327629089355
    3. '```' → logprob: -10.375632286071777
    4. 'x' → logprob: -11.625632286071777
    5. '   ' → logprob: -11.750632286071777
    6. '       ' → logprob: -11.875632286071777
    7. '
' → logprob: -12.250632286071777
    8. '[i' → logprob: -12.375632286071777
    9. '           ' → logprob: -12.875632286071777
    10. '0' → logprob: -13.250632286071777

Token 1039: '[y' (ID: 34551)
  Prédit: '[x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.0008467909647151828
    2. '[min' → logprob: -7.750846862792969
    3. 'x' → logprob: -7.875846862792969
    4. 'min' → logprob: -11.500846862792969
    5. '[
' → logprob: -12.000846862792969
    6. '[' → logprob: -12.250846862792969
    7. '[max' → logprob: -12.500846862792969
    8. '   ' → logprob: -12.750846862792969
    9. '```' → logprob: -13.000846862792969
    10. '
' → logprob: -13.125846862792969

Token 1040: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.028900442644953728
    2. '[' → logprob: -3.778900384902954
    3. '+' → logprob: -5.653900623321533
    4. '[x' → logprob: -6.903900623321533
    5. '[y' → logprob: -7.528900623321533
    6. '[z' → logprob: -8.403900146484375
    7. ' +' → logprob: -9.778900146484375
    8. '           ' → logprob: -9.903900146484375
    9. '   ' → logprob: -9.903900146484375
    10. '                           ' → logprob: -10.653900146484375

Token 1041: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.055923063308000565
    2. '0' → logprob: -3.1809229850769043
    3. 'z' → logprob: -4.930922985076904
    4. 'min' → logprob: -5.555922985076904
    5. '1' → logprob: -6.680922985076904
    6. 'max' → logprob: -8.305923461914062
    7. '(x' → logprob: -9.305923461914062
    8. '(' → logprob: -10.305923461914062
    9. '
' → logprob: -10.430923461914062
    10. '```' → logprob: -10.555923461914062

Token 1042: ' +' (ID: 659)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '][' → logprob: -0.19813470542430878
    2. '[z' → logprob: -2.198134660720825
    3. '[' → logprob: -2.948134660720825
    4. '[min' → logprob: -4.823134899139404
    5. '[L' → logprob: -5.573134899139404
    6. '[max' → logprob: -6.198134899139404
    7. '[y' → logprob: -7.073134899139404
    8. '[x' → logprob: -8.198134422302246
    9. '+' → logprob: -8.573134422302246
    10. '[l' → logprob: -8.948134422302246

Token 1043: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.750001907348633
    3. '0' → logprob: -15.625001907348633
    4. '```' → logprob: -17.375001907348633
    5. '   ' → logprob: -17.625001907348633
    6. '[' → logprob: -17.625001907348633
    7. '+' → logprob: -18.625001907348633
    8. '(' → logprob: -18.625001907348633
    9. '
' → logprob: -18.750001907348633
    10. '{' → logprob: -19.000001907348633

Token 1044: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -18.0
    3. '```' → logprob: -18.25
    4. '[' → logprob: -18.75
    5. '0' → logprob: -20.125
    6. '<|end|>' → logprob: -20.5625
    7. '{' → logprob: -20.8125
    8. '
' → logprob: -21.0625
    9. '   ' → logprob: -21.125
    10. '2' → logprob: -21.3125

Token 1045: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0002678920282050967
    2. ']' → logprob: -9.00026798248291
    3. '[' → logprob: -9.25026798248291
    4. '[z' → logprob: -10.37526798248291
    5. '<|end|>' → logprob: -12.25026798248291
    6. ')[' → logprob: -12.75026798248291
    7. ' ][' → logprob: -13.25026798248291
    8. '"][' → logprob: -13.75026798248291
    9. '```' → logprob: -14.00026798248291
    10. '[
' → logprob: -14.12526798248291

Token 1046: 'z' (ID: 89)
  Prédit: 'z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.06738689541816711
    2. 'min' → logprob: -3.4423868656158447
    3. 'max' → logprob: -3.6923868656158447
    4. 'L' → logprob: -4.817387104034424
    5. 'dp' → logprob: -10.192386627197266
    6. '0' → logprob: -10.317386627197266
    7. '
' → logprob: -10.942386627197266
    8. '   ' → logprob: -11.067386627197266
    9. '```' → logprob: -11.192386627197266
    10. ' min' → logprob: -11.817386627197266

Token 1047: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0722622275352478
    2. '-' → logprob: -3.3222622871398926
    3. ']=' → logprob: -4.197262287139893
    4. 'if' → logprob: -4.322262287139893
    5. ' if' → logprob: -5.822262287139893
    6. ' -' → logprob: -6.322262287139893
    7. '=' → logprob: -8.322261810302734
    8. '[' → logprob: -9.322261810302734
    9. '%' → logprob: -9.447261810302734
    10. ']+=' → logprob: -9.822261810302734

Token 1048: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.006979044526815414
    2. '+=' → logprob: -5.256978988647461
    3. ']=' → logprob: -7.256978988647461
    4. ']+=' → logprob: -7.381978988647461
    5. ']' → logprob: -8.756978988647461
    6. '=(' → logprob: -9.381978988647461
    7. '```' → logprob: -9.756978988647461
    8. ' =' → logprob: -10.131978988647461
    9. '%=' → logprob: -10.131978988647461
    10. ']=(' → logprob: -11.506978988647461

Token 1049: ' (' (ID: 350)
  Prédit: '(dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.00020425561524461955
    2. ' (' → logprob: -8.625204086303711
    3. '(' → logprob: -11.000204086303711
    4. '(df' → logprob: -12.750204086303711
    5. '(dx' → logprob: -14.000204086303711
    6. '   ' → logprob: -14.250204086303711
    7. '(dd' → logprob: -14.250204086303711
    8. '(dc' → logprob: -14.250204086303711
    9. '(de' → logprob: -15.250204086303711
    10. '(d' → logprob: -15.250204086303711

Token 1050: 'dp' (ID: 19037)
  Prédit: 'dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.1002776175737381
    2. '(dp' → logprob: -2.3502776622772217
    3. ' dp' → logprob: -9.6002779006958
    4. '	dp' → logprob: -13.3502779006958
    5. ' (' → logprob: -15.2252779006958
    6. '_dp' → logprob: -15.4752779006958
    7. '
' → logprob: -15.6002779006958
    8. '(' → logprob: -15.6002779006958
    9. '   ' → logprob: -15.8502779006958
    10. '                   ' → logprob: -16.350276947021484

Token 1051: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0087516784551553e-05
    2. '[y' → logprob: -12.12501049041748
    3. '0' → logprob: -13.00001049041748
    4. '[x' → logprob: -13.50001049041748
    5. 'y' → logprob: -15.37501049041748
    6. '```' → logprob: -15.56251049041748
    7. '１' → logprob: -16.187509536743164
    8. '[' → logprob: -16.437509536743164
    9. '[
' → logprob: -17.375009536743164
    10. '[u' → logprob: -17.500009536743164

Token 1052: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -2.463036435074173e-05
    2. 'y' → logprob: -10.625024795532227
    3. '[' → logprob: -16.000024795532227
    4. ' y' → logprob: -17.000024795532227
    5. '	y' → logprob: -17.125024795532227
    6. '(y' → logprob: -18.125024795532227
    7. '[
' → logprob: -18.750024795532227
    8. ')y' → logprob: -18.875024795532227
    9. '```' → logprob: -18.875024795532227
    10. '=y' → logprob: -19.000024795532227

Token 1053: '][' (ID: 2696)
  Prédit: '[y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -0.018385445699095726
    2. '][' → logprob: -4.643385410308838
    3. '[x' → logprob: -4.768385410308838
    4. '[' → logprob: -9.893385887145996
    5. ')[' → logprob: -10.393385887145996
    6. '}[' → logprob: -13.143385887145996
    7. '   ' → logprob: -13.393385887145996
    8. '       ' → logprob: -13.518385887145996
    9. '         ' → logprob: -13.893385887145996
    10. ' [' → logprob: -14.018385887145996

Token 1054: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.6240566083070007e-06
    2. ' x' → logprob: -13.375001907348633
    3. '   ' → logprob: -18.500001907348633
    4. '(x' → logprob: -19.250001907348633
    5. '{x' → logprob: -19.625001907348633
    6. 'z' → logprob: -19.625001907348633
    7. ' ' → logprob: -19.875001907348633
    8. 'y' → logprob: -19.875001907348633
    9. '	x' → logprob: -20.125001907348633
    10. '[x' → logprob: -20.250001907348633

Token 1055: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0005544631858356297
    2. ' +' → logprob: -7.62555456161499
    3. '[' → logprob: -10.125554084777832
    4. '+x' → logprob: -10.625554084777832
    5. '1' → logprob: -14.625554084777832
    6. '+[' → logprob: -14.750554084777832
    7. 'x' → logprob: -15.000554084777832
    8. '[x' → logprob: -15.125554084777832
    9. '```' → logprob: -15.625554084777832
    10. '+
' → logprob: -15.875554084777832

Token 1056: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -14.500001907348633
    3. '```' → logprob: -14.625001907348633
    4. '
' → logprob: -15.125001907348633
    5. '   ' → logprob: -16.562501907348633
    6. '0' → logprob: -16.562501907348633
    7. '2' → logprob: -16.812501907348633
    8. '[' → logprob: -17.500001907348633
    9. '+' → logprob: -17.500001907348633
    10. '...' → logprob: -17.562501907348633

Token 1057: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -15.125000953674316
    3. '```' → logprob: -15.687500953674316
    4. '2' → logprob: -15.875000953674316
    5. '0' → logprob: -16.0
    6. '
' → logprob: -16.625
    7. '+' → logprob: -16.8125
    8. '   ' → logprob: -16.9375
    9. '[' → logprob: -18.0
    10. '(' → logprob: -18.4375

Token 1058: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.038273975253105164
    2. '[z' → logprob: -3.288274049758911
    3. '[' → logprob: -9.163273811340332
    4. ')[' → logprob: -9.413273811340332
    5. '[y' → logprob: -10.788273811340332
    6. '[x' → logprob: -11.913273811340332
    7. '"][' → logprob: -12.913273811340332
    8. 'z' → logprob: -12.913273811340332
    9. ']' → logprob: -12.913273811340332
    10. '}[' → logprob: -13.663273811340332

Token 1059: 'z' (ID: 89)
  Prédit: 'z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.0011714138090610504
    2. '[z' → logprob: -6.751171588897705
    3. ' z' → logprob: -14.001171112060547
    4. '(z' → logprob: -15.876171112060547
    5. ''z' → logprob: -16.751171112060547
    6. '```' → logprob: -16.751171112060547
    7. '	z' → logprob: -16.751171112060547
    8. '   ' → logprob: -16.876171112060547
    9. '[' → logprob: -17.876171112060547
    10. '_z' → logprob: -18.751171112060547

Token 1060: ']' (ID: 60)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.39936816692352295
    2. ' +' → logprob: -1.274368166923523
    3. ']' → logprob: -3.0243682861328125
    4. ']+' → logprob: -6.8993682861328125
    5. ']+=' → logprob: -11.274368286132812
    6. '+
' → logprob: -11.399368286132812
    7. '```' → logprob: -11.649368286132812
    8. '+]' → logprob: -12.024368286132812
    9. ' +
' → logprob: -13.524368286132812
    10. '[' → logprob: -13.649368286132812

Token 1061: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.02324652671813965
    2. ' +' → logprob: -3.7732465267181396
    3. '+
' → logprob: -13.898246765136719
    4. '+=' → logprob: -16.14824676513672
    5. '+d' → logprob: -17.39824676513672
    6. '
' → logprob: -17.52324676513672
    7. '```' → logprob: -17.64824676513672
    8. '+[' → logprob: -18.02324676513672
    9. '＋' → logprob: -18.89824676513672
    10. '%' → logprob: -19.27324676513672

Token 1062: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.000158842682139948
    2. ' dp' → logprob: -8.75015926361084
    3. '(dp' → logprob: -15.75015926361084
    4. '                   ' → logprob: -16.125158309936523
    5. '2' → logprob: -16.375158309936523
    6. '                       ' → logprob: -18.000158309936523
    7. '3' → logprob: -18.125158309936523
    8. '	dp' → logprob: -18.250158309936523
    9. '                           ' → logprob: -18.500158309936523
    10. '           ' → logprob: -18.500158309936523

Token 1063: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.372294698550832e-06
    2. '[user' → logprob: -12.500009536743164
    3. 'user' → logprob: -12.625009536743164
    4. '[x' → logprob: -13.750009536743164
    5. '[' → logprob: -14.500009536743164
    6. '```' → logprob: -14.875009536743164
    7. '<|end|>' → logprob: -16.000009536743164
    8. '[
' → logprob: -16.125009536743164
    9. 'User' → logprob: -16.500009536743164
    10. 'x' → logprob: -17.250009536743164

Token 1064: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -9.507972572464496e-05
    2. 'x' → logprob: -9.37509536743164
    3. '[
' → logprob: -12.12509536743164
    4. '[' → logprob: -12.37509536743164
    5. '```' → logprob: -15.00009536743164
    6. '][' → logprob: -16.12509536743164
    7. ')[' → logprob: -17.25009536743164
    8. ' x' → logprob: -17.37509536743164
    9. '	x' → logprob: -17.87509536743164
    10. '{x' → logprob: -17.87509536743164

Token 1065: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00037609596620313823
    2. '[y' → logprob: -8.875375747680664
    3. ']' → logprob: -9.250375747680664
    4. '[x' → logprob: -9.375375747680664
    5. '[' → logprob: -10.625375747680664
    6. '"][' → logprob: -12.125375747680664
    7. '}[' → logprob: -12.250375747680664
    8. ']][' → logprob: -12.375375747680664
    9. '<|end|>' → logprob: -12.375375747680664
    10. '>[' → logprob: -12.500375747680664

Token 1066: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -1.0325924449716695e-05
    2. ' y' → logprob: -11.50001049041748
    3. '<|end|>' → logprob: -17.000009536743164
    4. '	y' → logprob: -17.625009536743164
    5. '[y' → logprob: -18.250009536743164
    6. ''y' → logprob: -18.500009536743164
    7. '   ' → logprob: -19.000009536743164
    8. ' ' → logprob: -19.125009536743164
    9. ',y' → logprob: -19.375009536743164
    10. 'x' → logprob: -19.625009536743164

Token 1067: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00028016636497341096
    2. '[z' → logprob: -8.250280380249023
    3. ' ][' → logprob: -11.875280380249023
    4. '"][' → logprob: -12.750280380249023
    5. ''][' → logprob: -12.875280380249023
    6. '[' → logprob: -13.125280380249023
    7. ']' → logprob: -13.625280380249023
    8. '<|end|>' → logprob: -13.750280380249023
    9. 'z' → logprob: -13.875280380249023
    10. ']][' → logprob: -14.625280380249023

Token 1068: 'z' (ID: 89)
  Prédit: 'z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -3.1782583391759545e-05
    2. '[z' → logprob: -10.375031471252441
    3. ' z' → logprob: -14.875031471252441
    4. '	z' → logprob: -16.250032424926758
    5. '[' → logprob: -18.625032424926758
    6. ''z' → logprob: -19.000032424926758
    7. '][' → logprob: -19.125032424926758
    8. '   ' → logprob: -20.125032424926758
    9. ',z' → logprob: -20.375032424926758
    10. '```' → logprob: -20.500032424926758

Token 1069: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0807151272892952
    2. ')' → logprob: -2.7057151794433594
    3. '                   ' → logprob: -4.705715179443359
    4. ']' → logprob: -7.205715179443359
    5. '[x' → logprob: -7.705715179443359
    6. '                       ' → logprob: -8.70571517944336
    7. '               ' → logprob: -9.45571517944336
    8. '           ' → logprob: -9.83071517944336
    9. ' ])' → logprob: -10.33071517944336
    10. '                    ' → logprob: -10.83071517944336

Token 1070: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.024246055632829666
    2. ' %' → logprob: -4.0242462158203125
    3. ')' → logprob: -5.1492462158203125
    4. ')%' → logprob: -8.649246215820312
    5. '%A' → logprob: -10.899246215820312
    6. '%x' → logprob: -11.149246215820312
    7. '%d' → logprob: -11.274246215820312
    8. '%c' → logprob: -11.274246215820312
    9. '%B' → logprob: -11.649246215820312
    10. '%s' → logprob: -11.774246215820312

Token 1071: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -7.896309739408025e-07
    2. ' M' → logprob: -14.250000953674316
    3. '```' → logprob: -16.0
    4. '   ' → logprob: -20.375
    5. '
' → logprob: -20.375
    6. '``' → logprob: -20.5
    7. 'М' → logprob: -20.875
    8. '`' → logprob: -21.25
    9. '	M' → logprob: -21.25
    10. '(M' → logprob: -21.75

Token 1072: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8437802791595459
    2. '                   ' → logprob: -1.343780279159546
    3. '<|end|>' → logprob: -1.343780279159546
    4. '\n' → logprob: -4.468780517578125
    5. '                    
' → logprob: -4.968780517578125
    6. '```' → logprob: -5.093780517578125
    7. '               ' → logprob: -5.843780517578125
    8. ')' → logprob: -6.093780517578125
    9. '[' → logprob: -6.343780517578125
    10. '                        
' → logprob: -6.343780517578125

Token 1073: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.010186896659433842
    2. '               ' → logprob: -5.760186672210693
    3. '```' → logprob: -6.010186672210693
    4. '                    
' → logprob: -6.635186672210693
    5. '
' → logprob: -7.010186672210693
    6. '                    ' → logprob: -7.635186672210693
    7. '           ' → logprob: -7.635186672210693
    8. '                       ' → logprob: -8.010187149047852
    9. 'dp' → logprob: -8.385187149047852
    10. '       ' → logprob: -8.885187149047852

Token 1074: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.03510630875825882
    2. '                   ' → logprob: -3.4101064205169678
    3. '```' → logprob: -7.910106182098389
    4. '#' (adapté à ' #') → logprob: -8.035106658935547
    5. ' dp' → logprob: -8.660106658935547
    6. '                       ' → logprob: -8.785106658935547
    7. '
' → logprob: -8.910106658935547
    8. '               ' → logprob: -9.035106658935547
    9. '           ' → logprob: -9.660106658935547
    10. '                    ' → logprob: -9.910106658935547

Token 1075: ' Cas' (ID: 8066)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.00018125296628568321
    2. '                   ' → logprob: -8.750181198120117
    3. 'if' → logprob: -11.250181198120117
    4. '#' → logprob: -12.750181198120117
    5. ' dp' → logprob: -13.125181198120117
    6. '
' → logprob: -13.750181198120117
    7. '```' → logprob: -13.750181198120117
    8. '                       ' → logprob: -14.250181198120117
    9. '               ' → logprob: -14.500181198120117
    10. '                    
' → logprob: -15.000181198120117

Token 1076: ' où' (ID: 15113)
  Prédit: '[y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[y' → logprob: -0.1553078293800354
    2. '                   ' → logprob: -2.0303077697753906
    3. '[x' → logprob: -5.405307769775391
    4. '               ' → logprob: -6.030307769775391
    5. 'y' → logprob: -6.280307769775391
    6. ' y' → logprob: -6.530307769775391
    7. '                       ' → logprob: -7.280307769775391
    8. '1' → logprob: -7.530307769775391
    9. '```' → logprob: -8.15530776977539
    10. '                    ' → logprob: -8.28030776977539

Token 1077: ' l' (ID: 305)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.019780969247221947
    2. '                   ' → logprob: -4.644781112670898
    3. ' dp' → logprob: -5.394781112670898
    4. '[y' → logprob: -6.269781112670898
    5. 'y' → logprob: -6.769781112670898
    6. '1' → logprob: -7.269781112670898
    7. '[x' → logprob: -7.394781112670898
    8. '(dp' → logprob: -8.394781112670898
    9. '```' → logprob: -8.644781112670898
    10. '               ' → logprob: -9.519781112670898

Token 1078: ''on' (ID: 25812)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07319054752588272
    2. 'y' → logprob: -2.698190450668335
    3. '[y' → logprob: -6.948190689086914
    4. 'x' → logprob: -7.698190689086914
    5. '[' → logprob: -7.823190689086914
    6. ''y' → logprob: -7.948190689086914
    7. '[x' → logprob: -8.948190689086914
    8. ' y' → logprob: -8.948190689086914
    9. 'dp' → logprob: -9.198190689086914
    10. '```' → logprob: -9.573190689086914

Token 1079: ' ajoute' (ID: 91611)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.010912465862929821
    2. '[y' → logprob: -5.0109124183654785
    3. 'y' → logprob: -5.8859124183654785
    4. '```' → logprob: -8.010912895202637
    5. '[x' → logprob: -8.385912895202637
    6. '
' → logprob: -8.885912895202637
    7. ' y' → logprob: -9.010912895202637
    8. 'add' → logprob: -9.010912895202637
    9. 'adds' → logprob: -9.135912895202637
    10. 'dp' → logprob: -9.260912895202637

Token 1080: ' un' (ID: 537)
  Prédit: '[x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.40285325050354004
    2. '[y' → logprob: -1.15285325050354
    3. 'y' → logprob: -4.652853012084961
    4. 'x' → logprob: -5.402853012084961
    5. ' y' → logprob: -7.527853012084961
    6. '[' → logprob: -7.652853012084961
    7. '[z' → logprob: -7.652853012084961
    8. '               ' → logprob: -9.652853012084961
    9. '   ' → logprob: -10.152853012084961
    10. ' x' → logprob: -10.152853012084961

Token 1081: ' élément' (ID: 99627)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.38691452145576477
    2. 'x' → logprob: -1.1369144916534424
    3. ' y' → logprob: -10.636914253234863
    4. '[x' → logprob: -11.636914253234863
    5. '[y' → logprob: -12.261914253234863
    6. ' x' → logprob: -13.136914253234863
    7. 'z' → logprob: -13.386914253234863
    8. '```' → logprob: -13.886914253234863
    9. '1' → logprob: -14.511914253234863
    10. '0' → logprob: -15.136914253234863

Token 1082: ' de' (ID: 334)
  Prédit: '[y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -0.020865222439169884
    2. '                   ' → logprob: -4.270865440368652
    3. '[' → logprob: -6.270865440368652
    4. 'de' → logprob: -6.520865440368652
    5. '[x' → logprob: -6.520865440368652
    6. '```' → logprob: -7.395865440368652
    7. ' de' → logprob: -7.770865440368652
    8. 'of' → logprob: -8.270865440368652
    9. 'y' → logprob: -8.645865440368652
    10. '                       ' → logprob: -9.145865440368652

Token 1083: ' même' (ID: 9679)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.07517009973526001
    2. 'm' → logprob: -3.3251700401306152
    3. 'y' → logprob: -3.9501700401306152
    4. 'same' → logprob: -4.325170040130615
    5. 'x' → logprob: -6.575170040130615
    6. 'pare' → logprob: -6.575170040130615
    7. 'z' → logprob: -7.700170040130615
    8. '```' → logprob: -8.825170516967773
    9. 'pari' → logprob: -8.950170516967773
    10. ' même' → logprob: -9.075170516967773

Token 1084: ' par' (ID: 686)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -5.061676347395405e-05
    2. 'pari' → logprob: -11.25005054473877
    3. '_par' → logprob: -11.37505054473877
    4. 'y' → logprob: -11.75005054473877
    5. ' parity' → logprob: -12.00005054473877
    6. ' par' → logprob: -12.75005054473877
    7. '	par' → logprob: -13.25005054473877
    8. '```' → logprob: -13.50005054473877
    9. '(par' → logprob: -14.25005054473877
    10. 'paren' → logprob: -14.50005054473877

Token 1085: 'ité' (ID: 3761)
  Prédit: 'ité'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ité' → logprob: -0.004774837754666805
    2. 'itié' → logprob: -6.254775047302246
    3. 'rité' → logprob: -6.504775047302246
    4. 'z' → logprob: -7.129775047302246
    5. 'ity' → logprob: -8.129775047302246
    6. 'alité' → logprob: -10.004775047302246
    7. 'it' → logprob: -10.629775047302246
    8. 'ità' → logprob: -10.754775047302246
    9. '```' → logprob: -11.004775047302246
    10. 'ités' → logprob: -11.129775047302246

Token 1086: ',' (ID: 11)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.003666348522529006
    2. 'dp' → logprob: -6.003666400909424
    3. '   ' → logprob: -8.128665924072266
    4. '                    ' → logprob: -8.753665924072266
    5. '[y' → logprob: -8.878665924072266
    6. '```' → logprob: -8.878665924072266
    7. '               ' → logprob: -9.003665924072266
    8. '                       ' → logprob: -9.378665924072266
    9. '[' → logprob: -10.003665924072266
    10. ' dp' → logprob: -10.253665924072266

Token 1087: ' mise' (ID: 25868)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.049564823508262634
    2. '                   ' → logprob: -3.049564838409424
    3. ' dp' → logprob: -7.174564838409424
    4. '                       ' → logprob: -9.424564361572266
    5. '               ' → logprob: -10.049564361572266
    6. '           ' → logprob: -10.424564361572266
    7. '   ' → logprob: -11.174564361572266
    8. '                    ' → logprob: -11.299564361572266
    9. '       ' → logprob: -11.924564361572266
    10. '                  ' → logprob: -12.424564361572266

Token 1088: ' à' (ID: 1221)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.014029989019036293
    2. '```' → logprob: -4.7640299797058105
    3. ' à' → logprob: -5.8890299797058105
    4. '           ' → logprob: -7.3890299797058105
    5. '   ' → logprob: -7.6390299797058105
    6. '-à' → logprob: -7.7640299797058105
    7. ' ' → logprob: -7.8890299797058105
    8. '               ' → logprob: -9.264030456542969
    9. '[j' → logprob: -9.389030456542969
    10. '`' → logprob: -9.514030456542969

Token 1089: ' jour' (ID: 8379)
  Prédit: 'jour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jour' → logprob: -0.19765353202819824
    2. ' jour' → logprob: -1.9476535320281982
    3. '```' → logprob: -4.822653770446777
    4. 'day' → logprob: -4.947653770446777
    5. 'dp' → logprob: -4.947653770446777
    6. 'jours' → logprob: -5.447653770446777
    7. '(dp' → logprob: -5.447653770446777
    8. 'z' → logprob: -6.697653770446777
    9. '(j' → logprob: -6.947653770446777
    10. '(z' → logprob: -7.447653770446777

Token 1090: ' de' (ID: 334)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.8007025718688965
    2. '[y' → logprob: -1.1757025718688965
    3. '[z' → logprob: -1.8007025718688965
    4. '```' → logprob: -3.6757025718688965
    5. '                       ' → logprob: -4.0507025718688965
    6. 'de' → logprob: -4.8007025718688965
    7. '[j' → logprob: -5.4257025718688965
    8. '               ' → logprob: -5.4257025718688965
    9. '[x' → logprob: -5.5507025718688965
    10. '[' → logprob: -5.6757025718688965

Token 1091: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.17429384589195251
    2. 'dp' → logprob: -2.0492937564849854
    3. 'max' → logprob: -4.4242939949035645
    4. '(z' → logprob: -5.2992939949035645
    5. ' z' → logprob: -5.4242939949035645
    6. 'y' → logprob: -5.9242939949035645
    7. ' dp' → logprob: -6.4242939949035645
    8. '(y' → logprob: -6.4242939949035645
    9. '(dp' → logprob: -6.9242939949035645
    10. '(x' → logprob: -7.2992939949035645

Token 1092: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.2004777491092682
    2. '[y' → logprob: -1.8254777193069458
    3. '=' → logprob: -4.700477600097656
    4. '                       ' → logprob: -5.825477600097656
    5. '```' → logprob: -5.825477600097656
    6. ' =' → logprob: -6.200477600097656
    7. '               ' → logprob: -6.825477600097656
    8. ']' → logprob: -7.575477600097656
    9. '=y' → logprob: -7.825477600097656
    10. '[' → logprob: -8.325477600097656

Token 1093: '                   ' (ID: 699)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.8267993927001953
    2. '                   ' → logprob: -1.5767993927001953
    3. '[' → logprob: -1.9517993927001953
    4. '(dp' → logprob: -2.3267993927001953
    5. ' dp' → logprob: -3.3267993927001953
    6. '```' → logprob: -3.3267993927001953
    7. '	dp' → logprob: -4.326799392700195
    8. '
' → logprob: -4.951799392700195
    9. '[
' → logprob: -5.451799392700195
    10. '_dp' → logprob: -5.576799392700195

Token 1094: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0006141475751064718
    2. '                   ' → logprob: -7.500614166259766
    3. ' dp' → logprob: -9.750614166259766
    4. '	dp' → logprob: -13.750614166259766
    5. '```' → logprob: -14.625614166259766
    6. '(dp' → logprob: -15.000614166259766
    7. 'if' → logprob: -15.250614166259766
    8. '_dp' → logprob: -15.500614166259766
    9. '               ' → logprob: -15.750614166259766
    10. '   ' → logprob: -16.375614166259766

Token 1095: ' (' (ID: 350)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0019677700474858284
    2. 'if' → logprob: -6.751967906951904
    3. '                   ' → logprob: -7.626967906951904
    4. 'z' → logprob: -8.876967430114746
    5. ' dp' → logprob: -9.251967430114746
    6. 'max' → logprob: -10.001967430114746
    7. 'for' → logprob: -12.251967430114746
    8. 'dz' → logprob: -12.501967430114746
    9. 'x' → logprob: -12.626967430114746
    10. 'dj' → logprob: -12.876967430114746

Token 1096: '1' (ID: 16)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0023028661962598562
    2. 'z' → logprob: -6.627302646636963
    3. 'new' → logprob: -8.252303123474121
    4. '                   ' → logprob: -8.377303123474121
    5. 'if' → logprob: -8.877303123474121
    6. 'max' → logprob: -9.002303123474121
    7. ' dp' → logprob: -9.877303123474121
    8. '
' → logprob: -11.127303123474121
    9. '                       ' → logprob: -11.252303123474121
    10. ')' → logprob: -11.377303123474121

Token 1097: ')' (ID: 8)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.365509033203125
    2. '+' → logprob: -1.865509033203125
    3. '                   ' → logprob: -2.490509033203125
    4. ')' → logprob: -3.865509033203125
    5. ' if' → logprob: -4.240509033203125
    6. ',' → logprob: -4.740509033203125
    7. '                    ' → logprob: -5.365509033203125
    8. 'if' → logprob: -5.490509033203125
    9. 'dp' → logprob: -6.240509033203125
    10. ']' → logprob: -6.740509033203125

Token 1098: ' Si' (ID: 7832)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.37912416458129883
    2. 'max' → logprob: -1.7541241645812988
    3. 'new' → logprob: -2.754124164581299
    4. 'min' → logprob: -3.629124164581299
    5. 'if' → logprob: -4.379124164581299
    6. '                   ' → logprob: -4.629124164581299
    7. 'z' → logprob: -4.754124164581299
    8. ' dp' → logprob: -5.254124164581299
    9. ' max' → logprob: -5.379124164581299
    10. 'dz' → logprob: -5.754124164581299

Token 1099: ' le' (ID: 505)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.2911683917045593
    2. 'x' → logprob: -1.916168451309204
    3. 'y' → logprob: -2.416168451309204
    4. 'max' → logprob: -4.416168212890625
    5. '(x' → logprob: -6.666168212890625
    6. ' z' → logprob: -7.666168212890625
    7. '(z' → logprob: -7.666168212890625
    8. 'K' → logprob: -7.916168212890625
    9. '(y' → logprob: -7.916168212890625
    10. ' y' → logprob: -8.041168212890625

Token 1100: ' bloc' (ID: 51218)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.2492826133966446
    2. 'y' → logprob: -2.1242825984954834
    3. 'x' → logprob: -2.4992825984954834
    4. 'max' → logprob: -4.4992828369140625
    5. 'K' → logprob: -5.1242828369140625
    6. '(x' → logprob: -7.9992828369140625
    7. 'j' → logprob: -8.374282836914062
    8. 'L' → logprob: -8.749282836914062
    9. 'dp' → logprob: -9.124282836914062
    10. 'maximum' → logprob: -9.124282836914062

Token 1101: ' actuel' (ID: 113646)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.8895245790481567
    2. 'y' → logprob: -1.7645245790481567
    3. 'de' → logprob: -2.389524459838867
    4. 'est' → logprob: -2.639524459838867
    5. 'max' → logprob: -3.014524459838867
    6. ' de' → logprob: -3.389524459838867
    7. 'same' → logprob: -3.639524459838867
    8. ' actuel' → logprob: -3.764524459838867
    9. '```' → logprob: -4.389524459838867
    10. ' y' → logprob: -4.514524459838867

Token 1102: ' de' (ID: 334)
  Prédit: 'est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -1.4726158380508423
    2. 'de' → logprob: -1.7226158380508423
    3. '+' → logprob: -2.3476157188415527
    4. 'n' → logprob: -2.8476157188415527
    5. ' de' → logprob: -2.8476157188415527
    6. 'z' → logprob: -2.9726157188415527
    7. 'max' → logprob: -2.9726157188415527
    8. 'a' → logprob: -3.0976157188415527
    9. '```' → logprob: -3.5976157188415527
    10. 'same' → logprob: -3.7226157188415527

Token 1103: ' même' (ID: 9679)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0716557726264
    2. 'par' → logprob: -3.321655750274658
    3. 'm' → logprob: -4.071655750274658
    4. 'x' → logprob: -5.571655750274658
    5. ' même' → logprob: -5.571655750274658
    6. 'élé' → logprob: -5.946655750274658
    7. 'z' → logprob: -6.071655750274658
    8. 'same' → logprob: -6.696655750274658
    9. ' y' → logprob: -7.071655750274658
    10. 'long' → logprob: -8.696656227111816

Token 1104: ' par' (ID: 686)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.0010900930501520634
    2. ' par' → logprob: -7.001090049743652
    3. 'p' → logprob: -9.626090049743652
    4. '```' → logprob: -10.501090049743652
    5. '   ' → logprob: -10.751090049743652
    6. 'y' → logprob: -10.751090049743652
    7. 'pari' → logprob: -11.376090049743652
    8. ' ' → logprob: -11.501090049743652
    9. '	par' → logprob: -12.126090049743652
    10. ' parity' → logprob: -13.126090049743652

Token 1105: 'ité' (ID: 3761)
  Prédit: 'ité'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ité' → logprob: -0.003154427045956254
    2. 'z' → logprob: -6.128154277801514
    3. 'itié' → logprob: -8.003154754638672
    4. 'it' → logprob: -8.753154754638672
    5. 'alité' → logprob: -9.003154754638672
    6. 'ity' → logprob: -9.503154754638672
    7. 'rité' → logprob: -9.753154754638672
    8. 'par' → logprob: -10.003154754638672
    9. 'ités' → logprob: -10.128154754638672
    10. 'té' → logprob: -10.503154754638672

Token 1106: ' est' (ID: 893)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -1.1437067985534668
    2. '==' → logprob: -1.5187067985534668
    3. 'n' → logprob: -2.393706798553467
    4. ' ==' → logprob: -2.643706798553467
    5. 'est' → logprob: -2.893706798553467
    6. 'dp' → logprob: -2.893706798553467
    7. '```' → logprob: -3.268706798553467
    8. ' +' → logprob: -4.268706798553467
    9. ' n' → logprob: -4.518706798553467
    10. '<' → logprob: -4.643706798553467

Token 1107: ' plus' (ID: 2932)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -1.1324232816696167
    2. 'z' → logprob: -1.3824232816696167
    3. 'inf' → logprob: -2.0074234008789062
    4. '0' → logprob: -2.6324234008789062
    5. 'all' → logprob: -3.2574234008789062
    6. 'plus' → logprob: -3.5074234008789062
    7. 'x' → logprob: -3.8824234008789062
    8. 'strict' → logprob: -4.257423400878906
    9. 'max' → logprob: -4.507423400878906
    10. 'augment' → logprob: -4.632423400878906

Token 1108: ' long' (ID: 1701)
  Prédit: 'grand'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'grand' → logprob: -0.13154466450214386
    2. 'pet' → logprob: -2.506544589996338
    3. ' petit' → logprob: -3.631544589996338
    4. 'long' → logprob: -4.756544589996338
    5. '```' → logprob: -6.131544589996338
    6. ' grand' → logprob: -6.131544589996338
    7. '+' → logprob: -7.256544589996338
    8. 'large' → logprob: -8.131545066833496
    9. 'plus' → logprob: -8.506545066833496
    10. 'small' → logprob: -9.006545066833496

Token 1109: ' que' (ID: 661)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.8075353503227234
    2. ' than' → logprob: -1.6825354099273682
    3. 'than' → logprob: -1.6825354099273682
    4. '```' → logprob: -2.932535409927368
    5. '+' → logprob: -3.057535409927368
    6. '                       ' → logprob: -3.807535409927368
    7. ' +' → logprob: -4.932535171508789
    8. '==' → logprob: -5.182535171508789
    9. ' que' → logprob: -5.432535171508789
    10. ',' → logprob: -5.432535171508789

Token 1110: ' l' (ID: 305)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.16037125885486603
    2. 'y' → logprob: -2.6603713035583496
    3. 'x' → logprob: -3.2853713035583496
    4. '0' → logprob: -4.16037130355835
    5. ' z' → logprob: -4.16037130355835
    6. ' y' → logprob: -5.28537130355835
    7. 'dp' → logprob: -6.41037130355835
    8. 'max' → logprob: -7.28537130355835
    9. ' x' → logprob: -7.41037130355835
    10. '1' → logprob: -8.160370826721191

Token 1111: ''autre' (ID: 52145)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.006945652887225151
    2. 'y' → logprob: -5.506945610046387
    3. ' z' → logprob: -6.256945610046387
    4. 'max' → logprob: -7.381945610046387
    5. 'x' → logprob: -9.131945610046387
    6. ' current' → logprob: -9.631945610046387
    7. ' max' → logprob: -10.381945610046387
    8. ' y' → logprob: -10.631945610046387
    9. 'current' → logprob: -10.756945610046387
    10. ''z' → logprob: -11.756945610046387

Token 1112: ',' (ID: 11)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.1406354308128357
    2. '                       ' → logprob: -3.1406354904174805
    3. ':' → logprob: -3.7656354904174805
    4. 'dp' → logprob: -4.1406354904174805
    5. ',' → logprob: -4.2656354904174805
    6. '#' → logprob: -4.7656354904174805
    7. '(dp' → logprob: -4.8906354904174805
    8. '```' → logprob: -5.6406354904174805
    9. ':
' → logprob: -5.7656354904174805
    10. ' or' → logprob: -5.8906354904174805

Token 1113: ' on' (ID: 402)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.3961392343044281
    2. '                   ' → logprob: -1.5211392641067505
    3. ' dp' → logprob: -2.896139144897461
    4. '#' → logprob: -3.896139144897461
    5. '                       ' → logprob: -4.271139144897461
    6. 'if' → logprob: -5.021139144897461
    7. 'z' → logprob: -5.521139144897461
    8. '```' → logprob: -5.646139144897461
    9. ' if' → logprob: -7.146139144897461
    10. ' z' → logprob: -7.521139144897461

Token 1114: ' garde' (ID: 65309)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.32423636317253113
    2. 'continue' → logprob: -1.5742363929748535
    3. 'update' → logprob: -3.9492363929748535
    4. 'max' → logprob: -4.1992363929748535
    5. 'rem' → logprob: -4.6992363929748535
    6. ' continue' → logprob: -5.5742363929748535
    7. '#' → logprob: -5.6992363929748535
    8. 'z' → logprob: -5.8242363929748535
    9. 'met' → logprob: -6.0742363929748535
    10. 'replace' → logprob: -6.0742363929748535

Token 1115: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.543959379196167
    2. 'max' → logprob: -1.043959379196167
    3. ' max' → logprob: -2.918959379196167
    4. ' z' → logprob: -4.793959617614746
    5. 'dp' → logprob: -5.668959617614746
    6. '(max' → logprob: -7.543959617614746
    7. 'min' → logprob: -8.168959617614746
    8. '(z' → logprob: -8.293959617614746
    9. ' dp' → logprob: -8.418959617614746
    10. '```' → logprob: -9.293959617614746

Token 1116: ',' (ID: 11)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.030694015324115753
    2. '```' → logprob: -3.780694007873535
    3. '                       ' → logprob: -5.905694007873535
    4. '
' → logprob: -6.655694007873535
    5. 'dp' → logprob: -7.030694007873535
    6. '                    ' → logprob: -7.655694007873535
    7. '#' → logprob: -8.155694007873535
    8. ',' → logprob: -8.655694007873535
    9. '(dp' → logprob: -8.655694007873535
    10. '                    
' → logprob: -8.780694007873535

Token 1117: ' sinon' (ID: 52915)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0488707609474659
    2. 'dp' → logprob: -3.923870801925659
    3. '```' → logprob: -4.29887056350708
    4. '                       ' → logprob: -5.04887056350708
    5. '                    ' → logprob: -5.54887056350708
    6. ' dp' → logprob: -7.29887056350708
    7. '               ' → logprob: -7.79887056350708
    8. '                     ' → logprob: -7.79887056350708
    9. '                  ' → logprob: -7.92387056350708
    10. '#' → logprob: -8.173871040344238

Token 1118: ' on' (ID: 402)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.38724157214164734
    2. 'dp' → logprob: -2.0122416019439697
    3. '```' → logprob: -2.3872416019439697
    4. ' dp' → logprob: -3.0122416019439697
    5. '                       ' → logprob: -4.512241363525391
    6. '                    ' → logprob: -5.012241363525391
    7. '(dp' → logprob: -5.387241363525391
    8. '#' → logprob: -5.387241363525391
    9. '
' → logprob: -5.637241363525391
    10. '``' → logprob: -5.887241363525391

Token 1119: ' remet' (ID: 78375)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.11928453296422958
    2. 'z' → logprob: -3.3692846298217773
    3. 'min' → logprob: -3.9942846298217773
    4. '#' → logprob: -4.119284629821777
    5. 'rem' → logprob: -4.244284629821777
    6. 'met' → logprob: -5.369284629821777
    7. ' dp' → logprob: -5.619284629821777
    8. 'dé' → logprob: -5.744284629821777
    9. 'continue' → logprob: -5.994284629821777
    10. 'update' → logprob: -6.119284629821777

Token 1120: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.012598774395883083
    2. '0' → logprob: -4.887598991394043
    3. 'x' → logprob: -6.262598991394043
    4. 'y' → logprob: -6.512598991394043
    5. '```' → logprob: -6.762598991394043
    6. '#' → logprob: -8.887598991394043
    7. '1' → logprob: -9.887598991394043
    8. '``' → logprob: -10.137598991394043
    9. 'à' → logprob: -10.637598991394043
    10. 'le' → logprob: -10.762598991394043

Token 1121: ' à' (ID: 1221)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.49974527955055237
    2. ' =' → logprob: -1.49974524974823
    3. '+' → logprob: -2.1247453689575195
    4. '-' → logprob: -3.7497453689575195
    5. '[' → logprob: -4.8747453689575195
    6. ' +' → logprob: -5.1247453689575195
    7. '```' → logprob: -5.3747453689575195
    8. ' -' → logprob: -6.2497453689575195
    9. 'z' → logprob: -6.4997453689575195
    10. '[z' → logprob: -6.6247453689575195

Token 1122: ' L' (ID: 451)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.8113663196563721
    2. 'max' → logprob: -1.061366319656372
    3. 'z' → logprob: -1.936366319656372
    4. '(y' → logprob: -3.936366319656372
    5. 'K' → logprob: -4.686366081237793
    6. 'x' → logprob: -4.811366081237793
    7. '0' → logprob: -4.811366081237793
    8. 'L' → logprob: -4.936366081237793
    9. '(max' → logprob: -5.311366081237793
    10. ' y' → logprob: -5.811366081237793

Token 1123: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.002010241150856018
    2. '
' → logprob: -7.252010345458984
    3. '```' → logprob: -7.377010345458984
    4. '                    
' → logprob: -9.002010345458984
    5. '                    ' → logprob: -9.127010345458984
    6. '                       ' → logprob: -9.127010345458984
    7. '               ' → logprob: -9.752010345458984
    8. '\n' → logprob: -10.127010345458984
    9. '				' → logprob: -10.252010345458984
    10. '   ' → logprob: -10.252010345458984

Token 1124: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00036894375807605684
    2. '                       ' → logprob: -9.12536907196045
    3. '				' → logprob: -9.62536907196045
    4. '               ' → logprob: -9.87536907196045
    5. '```' → logprob: -9.87536907196045
    6. 'dp' → logprob: -10.75036907196045
    7. '                    ' → logprob: -10.87536907196045
    8. '           ' → logprob: -11.12536907196045
    9. '
' → logprob: -11.87536907196045
    10. '                    
' → logprob: -12.37536907196045

Token 1125: ' if' (ID: 538)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.04754962772130966
    2. 'dp' → logprob: -3.2975497245788574
    3. 'if' (adapté à ' if') → logprob: -5.797549724578857
    4. '                       ' → logprob: -6.172549724578857
    5. '```' → logprob: -6.422549724578857
    6. '                    ' → logprob: -7.172549724578857
    7. ' dp' → logprob: -7.422549724578857
    8. ' if' → logprob: -8.0475492477417
    9. '               ' → logprob: -8.5475492477417
    10. '
' → logprob: -8.9225492477417

Token 1126: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.04341646656394005
    2. 'x' → logprob: -3.4184165000915527
    3. 'z' → logprob: -5.043416500091553
    4. ' y' → logprob: -5.793416500091553
    5. '(y' → logprob: -9.293416023254395
    6. 'max' → logprob: -10.168416023254395
    7. ' x' → logprob: -10.418416023254395
    8. '   ' → logprob: -10.793416023254395
    9. '(x' → logprob: -10.918416023254395
    10. ' z' → logprob: -11.918416023254395

Token 1127: ' >' (ID: 1424)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.5691357851028442
    2. '>' → logprob: -1.5691357851028442
    3. ' >' → logprob: -1.5691357851028442
    4. ' +' → logprob: -1.6941357851028442
    5. ' !=' → logprob: -2.4441356658935547
    6. ' <' → logprob: -3.0691356658935547
    7. '!=' → logprob: -3.5691356658935547
    8. '<' → logprob: -3.6941356658935547
    9. '==' → logprob: -6.694135665893555
    10. ' ==' → logprob: -6.694135665893555

Token 1128: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.09637316316366196
    2. '0' → logprob: -2.4713730812072754
    3. '=' → logprob: -5.596373081207275
    4. 'z' → logprob: -6.221373081207275
    5. 'max' → logprob: -7.471373081207275
    6. ' x' → logprob: -7.471373081207275
    7. '=x' → logprob: -7.971373081207275
    8. ' ' → logprob: -9.221373558044434
    9. '1' → logprob: -10.471373558044434
    10. 'L' → logprob: -10.846373558044434

Token 1129: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8267040848731995
    2. ':
' → logprob: -1.2017040252685547
    3. '                       ' → logprob: -2.0767040252685547
    4. ' and' → logprob: -2.0767040252685547
    5. '                   ' → logprob: -5.076704025268555
    6. 'and' → logprob: -6.576704025268555
    7. '):
' → logprob: -7.326704025268555
    8. ')' → logprob: -8.201704025268555
    9. ' or' → logprob: -8.326704025268555
    10. '       ' → logprob: -8.326704025268555

Token 1130: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.004441512748599052
    2. '                   ' → logprob: -6.504441738128662
    3. ' dp' → logprob: -7.129441738128662
    4. 'dp' → logprob: -7.379441738128662
    5. '                           ' → logprob: -7.879441738128662
    6. '                               ' → logprob: -8.879441261291504
    7. '	                   ' → logprob: -9.004441261291504
    8. '                        
' → logprob: -9.129441261291504
    9. '```' → logprob: -9.254441261291504
    10. '	dp' → logprob: -9.254441261291504

Token 1131: ' zz' (ID: 41240)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0011572468793019652
    2. ' dp' → logprob: -7.501157283782959
    3. '                       ' → logprob: -8.0011568069458
    4. '                   ' → logprob: -8.6261568069458
    5. '```' → logprob: -9.6261568069458
    6. 'z' → logprob: -11.5011568069458
    7. '	dp' → logprob: -12.0011568069458
    8. '(dp' → logprob: -13.5011568069458
    9. '_dp' → logprob: -13.6261568069458
    10. '                           ' → logprob: -14.0011568069458

Token 1132: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.11298267543315887
    2. ' =' → logprob: -2.237982749938965
    3. '=z' → logprob: -8.862982749938965
    4. ',' → logprob: -12.237982749938965
    5. '=
' → logprob: -12.737982749938965
    6. 'z' → logprob: -13.237982749938965
    7. '=y' → logprob: -13.612982749938965
    8. '=x' → logprob: -13.737982749938965
    9. '                       ' → logprob: -13.737982749938965
    10. '[z' → logprob: -13.987982749938965

Token 1133: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.00015002528380136937
    2. ' z' → logprob: -9.000149726867676
    3. 'y' → logprob: -11.000149726867676
    4. '                       ' → logprob: -12.250149726867676
    5. '                   ' → logprob: -13.000149726867676
    6. '	z' → logprob: -14.375149726867676
    7. '```' → logprob: -14.500149726867676
    8. '                           ' → logprob: -14.625149726867676
    9. '           ' → logprob: -14.750149726867676
    10. '   ' → logprob: -15.250149726867676

Token 1134: '
' (ID: 198)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.4520336985588074
    2. '<|end|>' → logprob: -1.5770337581634521
    3. ' else' → logprob: -2.452033758163452
    4. '<|end|>' → logprob: -3.952033758163452
    5. '                   ' → logprob: -4.202033519744873
    6. '                       ' → logprob: -4.327033519744873
    7. '
' → logprob: -5.827033519744873
    8. '```' → logprob: -6.077033519744873
    9. '               ' → logprob: -6.452033519744873
    10. '                               ' → logprob: -6.577033519744873

Token 1135: '                   ' (ID: 699)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.4465467631816864
    2. '                   ' → logprob: -1.0715467929840088
    3. ' else' → logprob: -4.32154655456543
    4. '                       ' → logprob: -5.69654655456543
    5. '
' → logprob: -8.07154655456543
    6. '   ' → logprob: -8.82154655456543
    7. '                        
' → logprob: -9.07154655456543
    8. '               ' → logprob: -9.32154655456543
    9. '                                           ' → logprob: -10.07154655456543
    10. '}else' → logprob: -10.07154655456543

Token 1136: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.014381150715053082
    2. ' else' → logprob: -4.889380931854248
    3. '                   ' → logprob: -5.014380931854248
    4. '   ' → logprob: -9.889381408691406
    5. '	else' → logprob: -10.389381408691406
    6. '```' → logprob: -11.514381408691406
    7. '				' → logprob: -11.639381408691406
    8. '               ' → logprob: -13.139381408691406
    9. '                       ' → logprob: -13.639381408691406
    10. '}else' → logprob: -13.764381408691406

Token 1137: ':
' (ID: 734)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.20896194875240326
    2. ':
' → logprob: -1.7089619636535645
    3. ':' → logprob: -5.0839619636535645
    4. '                   ' → logprob: -7.2089619636535645
    5. '):
' → logprob: -8.958961486816406
    6. '                           ' → logprob: -9.458961486816406
    7. '                        ' → logprob: -10.083961486816406
    8. 'z' → logprob: -10.208961486816406
    9. '   ' → logprob: -10.208961486816406
    10. '                      ' → logprob: -10.458961486816406

Token 1138: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.33546194434165955
    2. ' z' → logprob: -1.710461974143982
    3. 'z' → logprob: -2.5854618549346924
    4. ' zz' → logprob: -3.9604618549346924
    5. '                   ' → logprob: -5.9604620933532715
    6. '                        
' → logprob: -6.2104620933532715
    7. '                           ' → logprob: -6.8354620933532715
    8. ' L' → logprob: -7.0854620933532715
    9. 'zz' → logprob: -7.4604620933532715
    10. '```' → logprob: -7.4604620933532715

Token 1139: ' zz' (ID: 41240)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.20970840752124786
    2. 'z' → logprob: -2.0847084522247314
    3. ' L' → logprob: -3.3347084522247314
    4. 'zz' (adapté à ' zz') → logprob: -3.7097084522247314
    5. '                       ' → logprob: -6.209708213806152
    6. ' zz' → logprob: -6.459708213806152
    7. ' z' → logprob: -6.959708213806152
    8. '                           ' → logprob: -10.209708213806152
    9. '```' → logprob: -10.334708213806152
    10. 'zzz' → logprob: -10.334708213806152

Token 1140: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.011047935113310814
    2. ' =' → logprob: -4.511047840118408
    3. '=
' → logprob: -16.63604736328125
    4. ',' → logprob: -19.51104736328125
    5. '＝' → logprob: -19.88604736328125
    6. ')' → logprob: -20.38604736328125
    7. ' =
' → logprob: -20.51104736328125
    8. ' ' → logprob: -20.63604736328125
    9. '=

' → logprob: -21.26104736328125
    10. '	' → logprob: -21.38604736328125

Token 1141: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.0019287518225610256
    2. ' L' → logprob: -6.251928806304932
    3. '	L' → logprob: -16.376928329467773
    4. '0' → logprob: -17.876928329467773
    5. '>L' → logprob: -17.876928329467773
    6. 'l' → logprob: -18.001928329467773
    7. '```' → logprob: -18.501928329467773
    8. '(L' → logprob: -18.626928329467773
    9. '[L' → logprob: -18.876928329467773
    10. ' ' → logprob: -18.876928329467773

Token 1142: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1143: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0056606982834637165
    2. '```' → logprob: -6.130660533905029
    3. '
' → logprob: -6.255660533905029
    4. '                       ' → logprob: -7.255660533905029
    5. 'dp' → logprob: -8.380661010742188
    6. '               ' → logprob: -8.630661010742188
    7. '<|end|>' → logprob: -9.380661010742188
    8. ')' → logprob: -9.880661010742188
    9. '           ' → logprob: -10.255661010742188
    10. '                    ' → logprob: -10.380661010742188

Token 1144: ' #' (ID: 1069)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.3882766664028168
    2. 'dp' → logprob: -1.1382766962051392
    3. ' dp' → logprob: -7.01327657699585
    4. '                       ' → logprob: -8.013277053833008
    5. '```' → logprob: -9.388277053833008
    6. '                    ' → logprob: -10.763277053833008
    7. '				' → logprob: -11.263277053833008
    8. '               ' → logprob: -11.388277053833008
    9. '	dp' → logprob: -11.638277053833008
    10. '   ' → logprob: -12.013277053833008

Token 1145: ' (' (ID: 350)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0009237268241122365
    2. '                   ' → logprob: -7.0009236335754395
    3. ' dp' → logprob: -11.375924110412598
    4. '	dp' → logprob: -15.250924110412598
    5. '```' → logprob: -15.750924110412598
    6. '               ' → logprob: -16.25092315673828
    7. '(dp' → logprob: -16.62592315673828
    8. '   ' → logprob: -17.25092315673828
    9. '           ' → logprob: -17.50092315673828
    10. '                    ' → logprob: -17.50092315673828

Token 1146: '2' (ID: 17)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.007281945552676916
    2. '                   ' → logprob: -5.00728178024292
    3. ' dp' → logprob: -8.132282257080078
    4. ')' → logprob: -8.882282257080078
    5. ')
' → logprob: -9.882282257080078
    6. '
' → logprob: -11.007282257080078
    7. 'for' → logprob: -11.632282257080078
    8. '   ' → logprob: -11.632282257080078
    9. '#' → logprob: -12.007282257080078
    10. '```' → logprob: -12.007282257080078

Token 1147: ')' (ID: 8)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.09052450209856033
    2. ')' → logprob: -2.465524435043335
    3. '
' → logprob: -7.465524673461914
    4. ')
' → logprob: -7.715524673461914
    5. '   ' → logprob: -8.715524673461914
    6. '               ' → logprob: -9.340524673461914
    7. '                       ' → logprob: -9.590524673461914
    8. '                    ' → logprob: -10.090524673461914
    9. '```' → logprob: -10.215524673461914
    10. '           ' → logprob: -10.840524673461914

Token 1148: ' Si' (ID: 7832)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -8.065608562901616e-05
    2. ' dp' → logprob: -10.125081062316895
    3. '                   ' → logprob: -10.125081062316895
    4. '   ' → logprob: -16.500080108642578
    5. '
' → logprob: -16.625080108642578
    6. 'for' → logprob: -16.875080108642578
    7. '	dp' → logprob: -16.875080108642578
    8. 'if' → logprob: -17.000080108642578
    9. '               ' → logprob: -17.000080108642578
    10. '                       ' → logprob: -17.500080108642578

Token 1149: ' un' (ID: 537)
  Prédit: 'zz'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'zz' → logprob: -0.22363746166229248
    2. 'y' → logprob: -2.848637580871582
    3. 'loop' → logprob: -3.223637580871582
    4. 'z' → logprob: -3.473637580871582
    5. 'not' → logprob: -3.598637580871582
    6. ' zz' → logprob: -4.348637580871582
    7. 'yy' → logprob: -4.973637580871582
    8. 'K' → logprob: -5.348637580871582
    9. 'dp' → logprob: -5.348637580871582
    10. 'x' → logprob: -5.348637580871582

Token 1150: ' motif' (ID: 72753)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'z' → logprob: -1.003828763961792
    2. 'y' → logprob: -1.253828763961792
    3. 'zz' → logprob: -1.628828763961792
    4. ' y' → logprob: -2.628828763961792
    5. ' zz' → logprob: -3.003828763961792
    6. ' z' → logprob: -4.128829002380371
    7. 'x' → logprob: -6.253829002380371
    8. 'yy' → logprob: -6.378829002380371
    9. 'K' → logprob: -6.503829002380371
    10. 'dp' → logprob: -7.128829002380371

Token 1151: ' spécial' (ID: 40397)
  Prédit: 'inter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inter' → logprob: -1.5958768129348755
    2. 'de' → logprob: -1.7208768129348755
    3. 'loop' → logprob: -2.095876693725586
    4. 'x' → logprob: -2.470876693725586
    5. 'est' → logprob: -2.845876693725586
    6. 'invalid' → logprob: -3.595876693725586
    7. 'n' → logprob: -3.595876693725586
    8. 'part' → logprob: -3.720876693725586
    9. 'y' → logprob: -3.845876693725586
    10. 'd' → logprob: -4.095876693725586

Token 1152: ' (' (ID: 350)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7393627166748047
    2. 'est' → logprob: -1.1143627166748047
    3. 'de' → logprob: -2.9893627166748047
    4. 'continue' → logprob: -3.4893627166748047
    5. 'dp' → logprob: -4.114362716674805
    6. '   ' → logprob: -4.239362716674805
    7. 'detect' → logprob: -4.239362716674805
    8. 'n' → logprob: -4.489362716674805
    9. '```' → logprob: -4.489362716674805
    10. 'y' → logprob: -4.989362716674805

Token 1153: 'le' (ID: 282)
  Prédit: 'loop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'loop' → logprob: -0.027135051786899567
    2. 'zz' → logprob: -4.527134895324707
    3. ' loop' → logprob: -5.277134895324707
    4. 'x' → logprob: -5.652134895324707
    5. 'not' → logprob: -6.027134895324707
    6. '(loop' → logprob: -6.277134895324707
    7. 'z' → logprob: -7.027134895324707
    8. 'y' → logprob: -7.777134895324707
    9. '(' → logprob: -7.902134895324707
    10. 'K' → logprob: -8.402134895324707

Token 1154: ' pattern' (ID: 8302)
  Prédit: 'loop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'loop' → logprob: -0.06436985731124878
    2. 'z' → logprob: -3.9393699169158936
    3. 'x' → logprob: -4.4393696784973145
    4. 'zz' → logprob: -4.5643696784973145
    5. 'y' → logprob: -4.8143696784973145
    6. 'K' → logprob: -4.9393696784973145
    7. 'not' → logprob: -6.5643696784973145
    8. ' loop' → logprob: -7.5643696784973145
    9. 'dp' → logprob: -7.8143696784973145
    10. '(loop' → logprob: -8.314370155334473

Token 1155: ' "' (ID: 392)
  Prédit: 'loop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'loop' → logprob: -0.2737952172756195
    2. 'x' → logprob: -3.3987951278686523
    3. 'sp' → logprob: -3.3987951278686523
    4. ' loop' → logprob: -3.5237951278686523
    5. 'inter' → logprob: -4.023795127868652
    6. 'est' → logprob: -4.148795127868652
    7. 'de' → logprob: -4.398795127868652
    8. ' interdit' → logprob: -4.523795127868652
    9. '(loop' → logprob: -4.648795127868652
    10. '==' → logprob: -4.648795127868652

Token 1156: '�' (ID: 18707)
  Prédit: 'loop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'loop' → logprob: -0.01573929935693741
    2. 'x' → logprob: -5.890739440917969
    3. 'if' → logprob: -5.890739440917969
    4. 'y' → logprob: -6.390739440917969
    5. ' loop' → logprob: -6.890739440917969
    6. 'xy' → logprob: -7.015739440917969
    7. 'z' → logprob: -7.390739440917969
    8. 'zz' → logprob: -7.640739440917969
    9. '0' → logprob: -7.765739440917969
    10. '"' → logprob: -7.890739440917969

Token 1157: '�' (ID: 244)
  Prédit: 'loop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'loop' → logprob: -0.9152753353118896
    2. 'o' → logprob: -2.0402753353118896
    3. 'l' → logprob: -2.2902753353118896
    4. 'u' → logprob: -2.7902753353118896
    5. '"' → logprob: -2.7902753353118896
    6. '")' → logprob: -3.7902753353118896
    7. ''' → logprob: -4.165275573730469
    8. 'x' → logprob: -4.165275573730469
    9. 'e' → logprob: -4.415275573730469
    10. '�' → logprob: -4.415275573730469

Token 1158: '")' (ID: 1405)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -1.7428058385849
    2. 'u' → logprob: -2.3678059577941895
    3. 'x' → logprob: -2.7428059577941895
    4. '"' → logprob: -2.7428059577941895
    5. 'loop' → logprob: -2.9928059577941895
    6. '�' → logprob: -3.3678059577941895
    7. '")' → logprob: -3.4928059577941895
    8. ''' → logprob: -3.6178059577941895
    9. 'z' → logprob: -3.7428059577941895
    10. '́' → logprob: -3.7428059577941895

Token 1159: ' est' (ID: 893)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -1.9112343788146973
    2. 'est' → logprob: -2.1612343788146973
    3. '==' → logprob: -2.2862343788146973
    4. ')' → logprob: -2.5362343788146973
    5. ' ' → logprob: -2.7862343788146973
    6. 'if' → logprob: -3.1612343788146973
    7. 'n' → logprob: -3.2862343788146973
    8. 'u' → logprob: -3.5362343788146973
    9. '#' → logprob: -3.6612343788146973
    10. '   ' → logprob: -3.7862343788146973

Token 1160: ' autor' (ID: 13432)
  Prédit: 'loop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'loop' → logprob: -0.06846417486667633
    2. '(loop' → logprob: -3.6934642791748047
    3. 'not' → logprob: -4.318464279174805
    4. 'det' → logprob: -4.568464279174805
    5. ' loop' → logprob: -4.943464279174805
    6. ' detected' → logprob: -5.568464279174805
    7. 'True' → logprob: -6.443464279174805
    8. 'for' → logprob: -6.693464279174805
    9. 'detect' → logprob: -7.818464279174805
    10. '<|end|>' → logprob: -7.943464279174805

Token 1161: 'isé' (ID: 30065)
  Prédit: 'isé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isé' → logprob: -0.013485715724527836
    2. 'sé' → logprob: -4.763485908508301
    3. 's' → logprob: -5.638485908508301
    4. '#' → logprob: -8.0134859085083
    5. 'se' → logprob: -9.1384859085083
    6. 'isés' → logprob: -9.3884859085083
    7. '�' → logprob: -9.3884859085083
    8. 'vé' → logprob: -9.5134859085083
    9. 'isée' → logprob: -9.5134859085083
    10. '```' → logprob: -9.7634859085083

Token 1162: ',' (ID: 11)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.7108709216117859
    2. 'and' → logprob: -1.2108709812164307
    3. ':' → logprob: -1.9608709812164307
    4. ':
' → logprob: -3.8358709812164307
    5. '                   ' → logprob: -4.210870742797852
    6. ',' → logprob: -4.460870742797852
    7. '                       ' → logprob: -5.210870742797852
    8. '                           ' → logprob: -6.210870742797852
    9. '```' → logprob: -6.585870742797852
    10. ' or' → logprob: -6.585870742797852

Token 1163: ' on' (ID: 402)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.6331192255020142
    2. '                       ' → logprob: -1.2581192255020142
    3. '#' → logprob: -2.1331191062927246
    4. '                           ' → logprob: -4.133119106292725
    5. 'dp' → logprob: -4.258119106292725
    6. '```' → logprob: -4.883119106292725
    7. '...' → logprob: -5.258119106292725
    8. 'continue' → logprob: -5.883119106292725
    9. '                               ' → logprob: -6.008119106292725
    10. '   ' → logprob: -6.133119106292725

Token 1164: ' raff' (ID: 58500)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.6696159839630127
    2. '                       ' → logprob: -1.7946159839630127
    3. ' continue' → logprob: -2.0446159839630127
    4. '                   ' → logprob: -2.2946159839630127
    5. 'dp' → logprob: -2.9196159839630127
    6. '                           ' → logprob: -4.544615745544434
    7. '#' → logprob: -5.169615745544434
    8. '```' → logprob: -5.794615745544434
    9. '...' → logprob: -6.044615745544434
    10. ')' → logprob: -6.544615745544434

Token 1165: 'ine' (ID: 514)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.06187524273991585
    2. 'fin' → logprob: -4.186875343322754
    3. 'ef' → logprob: -4.686875343322754
    4. 'ine' → logprob: -5.061875343322754
    5. 'a' → logprob: -5.311875343322754
    6. 'in' → logprob: -5.436875343322754
    7. '#' → logprob: -5.811875343322754
    8. 'af' → logprob: -5.936875343322754
    9. 'raî' → logprob: -6.686875343322754
    10. 'inez' → logprob: -6.811875343322754

Token 1166: ' zz' (ID: 41240)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.14672023057937622
    2. '                       ' → logprob: -2.8967201709747314
    3. 'dp' → logprob: -3.1467201709747314
    4. '```' → logprob: -5.1467204093933105
    5. '#' → logprob: -5.6467204093933105
    6. '               ' → logprob: -5.8967204093933105
    7. '   ' → logprob: -6.0217204093933105
    8. '                    ' → logprob: -6.1467204093933105
    9. '                           ' → logprob: -6.1467204093933105
    10. 'if' → logprob: -6.2717204093933105

Token 1167: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.2608547508716583
    2. '<|end|>' → logprob: -2.010854721069336
    3. '                       ' → logprob: -3.635854721069336
    4. ',' → logprob: -4.385854721069336
    5. ')' → logprob: -4.510854721069336
    6. '...' → logprob: -4.885854721069336
    7. '<|end|>' → logprob: -5.260854721069336
    8. '=' → logprob: -5.260854721069336
    9. '```' → logprob: -6.010854721069336
    10. '                    ' → logprob: -6.135854721069336

Token 1168: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.41992419958114624
    2. '<|end|>' → logprob: -1.919924259185791
    3. '                       ' → logprob: -2.919924259185791
    4. ' and' → logprob: -3.044924259185791
    5. ':' → logprob: -4.294924259185791
    6. 'if' → logprob: -4.544924259185791
    7. ' if' → logprob: -4.794924259185791
    8. ')' → logprob: -4.919924259185791
    9. 'and' → logprob: -5.044924259185791
    10. '=' → logprob: -5.044924259185791

Token 1169: ' if' (ID: 538)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.517493486404419
    2. '                       ' → logprob: -2.017493486404419
    3. '<|end|>' → logprob: -2.142493486404419
    4. ' if' → logprob: -3.267493486404419
    5. '                           ' → logprob: -3.392493486404419
    6. 'if' (adapté à ' if') → logprob: -3.642493486404419
    7. '                               ' → logprob: -4.14249324798584
    8. '
' → logprob: -4.89249324798584
    9. '               ' → logprob: -5.76749324798584
    10. '                                           ' → logprob: -6.14249324798584

Token 1170: ' ' (ID: 220)
  Prédit: 'zz'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'zz' → logprob: -1.2810510396957397
    2. 'z' → logprob: -1.4060510396957397
    3. ' zz' → logprob: -1.6560510396957397
    4. 'x' → logprob: -2.7810511589050293
    5. ' y' → logprob: -3.1560511589050293
    6. ' z' → logprob: -3.1560511589050293
    7. 'K' → logprob: -3.2810511589050293
    8. 'y' → logprob: -3.2810511589050293
    9. ' x' → logprob: -4.281051158905029
    10. ' K' → logprob: -4.656051158905029

Token 1171: '2' (ID: 17)
  Prédit: 'zz'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'zz' → logprob: -0.5138874053955078
    2. 'z' → logprob: -1.7638874053955078
    3. 'K' → logprob: -2.388887405395508
    4. 'y' → logprob: -2.763887405395508
    5. 'x' → logprob: -3.513887405395508
    6. 'loop' → logprob: -4.013887405395508
    7. '(' → logprob: -4.763887405395508
    8. 'not' → logprob: -5.263887405395508
    9. 'yy' → logprob: -6.263887405395508
    10. 'dp' → logprob: -6.763887405395508

Token 1172: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.17112666368484497
    2. '*' → logprob: -2.2961266040802
    3. '*z' → logprob: -3.4211266040802
    4. '*y' → logprob: -4.171126842498779
    5. '*x' → logprob: -4.796126842498779
    6. '*(' → logprob: -8.546126365661621
    7. '*k' → logprob: -10.546126365661621
    8. '*K' → logprob: -11.171126365661621
    9. '*j' → logprob: -11.671126365661621
    10. '*out' → logprob: -13.046126365661621

Token 1173: ' y' (ID: 342)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.2863491475582123
    2. 'y' → logprob: -2.161349058151245
    3. 'zz' → logprob: -2.661349058151245
    4. 'z' → logprob: -2.786349058151245
    5. '(x' → logprob: -7.036349296569824
    6. 'yy' → logprob: -7.911349296569824
    7. '(y' → logprob: -8.161349296569824
    8. '(z' → logprob: -8.286349296569824
    9. '(' → logprob: -8.661349296569824
    10. 'xx' → logprob: -8.911349296569824

Token 1174: ' >=' (ID: 5064)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -1.1764482259750366
    2. '>' → logprob: -1.6764482259750366
    3. '+' → logprob: -2.051448345184326
    4. ' >=' → logprob: -2.301448345184326
    5. ' +' → logprob: -2.426448345184326
    6. '>=' → logprob: -2.801448345184326
    7. ' <=' → logprob: -2.926448345184326
    8. '<=' → logprob: -3.301448345184326
    9. ' <' → logprob: -3.676448345184326
    10. '<' → logprob: -5.426448345184326

Token 1175: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.000936355150770396
    2. ' K' → logprob: -7.000936508178711
    3. '(K' → logprob: -11.500936508178711
    4. ' (' → logprob: -12.750936508178711
    5. '(' → logprob: -12.875936508178711
    6. 'z' → logprob: -13.000936508178711
    7. '7' → logprob: -13.500936508178711
    8. ' ' → logprob: -13.500936508178711
    9. '```' → logprob: -13.750936508178711
    10. '`' → logprob: -14.375936508178711

Token 1176: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7428354620933533
    2. ' +' → logprob: -0.8678354620933533
    3. ' -' → logprob: -2.492835521697998
    4. '-' → logprob: -3.867835521697998
    5. ' and' → logprob: -7.617835521697998
    6. 'and' → logprob: -8.49283504486084
    7. '   ' → logprob: -10.36783504486084
    8. ':' → logprob: -10.49283504486084
    9. ' ' → logprob: -10.99283504486084
    10. '<|end|>' → logprob: -11.49283504486084

Token 1177: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.10207229107618332
    2. '1' → logprob: -2.352072238922119
    3. '2' → logprob: -6.602072238922119
    4. ' ' → logprob: -8.102072715759277
    5. '5' → logprob: -9.227072715759277
    6. '4' → logprob: -9.727072715759277
    7. '```' → logprob: -10.477072715759277
    8. '   ' → logprob: -11.852072715759277
    9. '7' → logprob: -13.039572715759277
    10. '`' → logprob: -14.039572715759277

Token 1178: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.03822647035121918
    2. '1' → logprob: -3.288226366043091
    3. '5' → logprob: -9.538226127624512
    4. '2' → logprob: -10.163226127624512
    5. '```' → logprob: -10.163226127624512
    6. ' ' → logprob: -11.600726127624512
    7. '   ' → logprob: -11.600726127624512
    8. '
' → logprob: -12.413226127624512
    9. '4' → logprob: -13.038226127624512
    10. '``' → logprob: -13.663226127624512

Token 1179: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.3870183825492859
    2. ':
' → logprob: -1.8870184421539307
    3. ':' → logprob: -2.3870184421539307
    4. 'and' → logprob: -2.6370184421539307
    5. '                       ' → logprob: -5.262018203735352
    6. '<|end|>' → logprob: -8.637018203735352
    7. '):
' → logprob: -8.887018203735352
    8. '                           ' → logprob: -9.137018203735352
    9. '                   ' → logprob: -9.387018203735352
    10. ':
' → logprob: -10.387018203735352

Token 1180: ' x' (ID: 1215)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.7393708229064941
    2. ' ' → logprob: -1.1143708229064941
    3. 'z' → logprob: -2.989370822906494
    4. ' z' → logprob: -3.239370822906494
    5. ' zz' → logprob: -3.489370822906494
    6. ' x' → logprob: -3.864370822906494
    7. 'zz' → logprob: -4.114370822906494
    8. 'x' → logprob: -4.614370822906494
    9. ' y' → logprob: -4.739370822906494
    10. ' (' → logprob: -4.989370822906494

Token 1181: ' >' (ID: 1424)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.7594289183616638
    2. '+' → logprob: -1.1344289779663086
    3. ' ==' → logprob: -2.6344289779663086
    4. ' >=' → logprob: -3.1344289779663086
    5. ' >' → logprob: -3.5094289779663086
    6. '>' → logprob: -3.5094289779663086
    7. '==' → logprob: -3.8844289779663086
    8. '>=' → logprob: -5.134428977966309
    9. ' <=' → logprob: -6.134428977966309
    10. ' <' → logprob: -6.509428977966309

Token 1182: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7043933868408203
    2. 'y' → logprob: -0.7043933868408203
    3. ' y' → logprob: -5.32939338684082
    4. 'z' → logprob: -6.32939338684082
    5. '2' → logprob: -6.57939338684082
    6. '=' → logprob: -6.70439338684082
    7. ' ' → logprob: -7.07939338684082
    8. 'K' → logprob: -7.95439338684082
    9. '1' → logprob: -8.07939338684082
    10. 'x' → logprob: -8.70439338684082

Token 1183: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.21745970845222473
    2. 'y' → logprob: -1.7174596786499023
    3. '2' → logprob: -4.342459678649902
    4. '1' → logprob: -7.217459678649902
    5. 'z' → logprob: -7.217459678649902
    6. 'K' → logprob: -7.467459678649902
    7. '=' → logprob: -8.842459678649902
    8. '(' → logprob: -8.967459678649902
    9. ' y' → logprob: -8.967459678649902
    10. 'L' → logprob: -9.092459678649902

Token 1184: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.27845776081085205
    2. '                       ' → logprob: -2.5284576416015625
    3. 'and' → logprob: -2.6534576416015625
    4. ':
' → logprob: -2.7784576416015625
    5. ':' → logprob: -3.5284576416015625
    6. '                   ' → logprob: -7.4034576416015625
    7. '                           ' → logprob: -8.028457641601562
    8. '<|end|>' → logprob: -9.653457641601562
    9. '):
' → logprob: -9.778457641601562
    10. '                      ' → logprob: -10.153457641601562

Token 1185: '                       ' (ID: 968)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -1.0402134656906128
    2. '                       ' → logprob: -1.0402134656906128
    3. ':' → logprob: -1.2902134656906128
    4. '):
' → logprob: -5.290213584899902
    5. '<|end|>' → logprob: -5.415213584899902
    6. ' and' → logprob: -5.540213584899902
    7. '```' → logprob: -6.540213584899902
    8. '                   ' → logprob: -6.665213584899902
    9. '                           ' → logprob: -7.915213584899902
    10. '                        
' → logprob: -8.540213584899902

Token 1186: ' zz' (ID: 41240)
  Prédit: 'zz'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zz' (adapté à ' zz') → logprob: -0.5914771556854248
    2. '                       ' → logprob: -1.0914771556854248
    3. '                           ' → logprob: -2.841477155685425
    4. 'z' → logprob: -3.591477155685425
    5. ' zz' → logprob: -4.091477394104004
    6. '                               ' → logprob: -5.341477394104004
    7. '                   ' → logprob: -6.841477394104004
    8. '```' → logprob: -7.841477394104004
    9. ' z' → logprob: -7.966477394104004
    10. '   ' → logprob: -8.591477394104004

Token 1187: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.022645700722932816
    2. ' =' → logprob: -3.8976457118988037
    3. '-=' → logprob: -6.397645473480225
    4. ' -=' → logprob: -7.897645473480225
    5. '+=' → logprob: -9.897645950317383
    6. '-' → logprob: -12.272645950317383
    7. '   ' → logprob: -12.397645950317383
    8. ' +=' → logprob: -13.272645950317383
    9. '=max' → logprob: -13.897645950317383
    10. '=min' → logprob: -14.022645950317383

Token 1188: ' min' (ID: 1349)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -1.3039672374725342
    2. '0' → logprob: -1.6789672374725342
    3. 'max' → logprob: -1.6789672374725342
    4. 'x' → logprob: -1.9289672374725342
    5. 'z' → logprob: -2.553967237472534
    6. 'min' → logprob: -2.928967237472534
    7. 'y' → logprob: -2.928967237472534
    8. 'K' → logprob: -3.803967237472534
    9. '1' → logprob: -6.053967475891113
    10. '(' → logprob: -8.928967475891113

Token 1189: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0007182692061178386
    2. '(z' → logprob: -7.375718116760254
    3. '(dp' → logprob: -9.375718116760254
    4. '(L' → logprob: -13.625718116760254
    5. '(xx' → logprob: -14.000718116760254
    6. 'z' → logprob: -14.125718116760254
    7. '(x' → logprob: -14.250718116760254
    8. 'zz' → logprob: -14.250718116760254
    9. '((' → logprob: -14.375718116760254
    10. '(
' → logprob: -15.000718116760254

Token 1190: 'zz' (ID: 8013)
  Prédit: 'zz'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zz' → logprob: -0.0005518406978808343
    2. 'z' → logprob: -7.625551700592041
    3. ' zz' → logprob: -9.7505521774292
    4. '   ' → logprob: -12.6255521774292
    5. 'zzz' → logprob: -14.0005521774292
    6. '(' → logprob: -14.6255521774292
    7. '       ' → logprob: -15.5005521774292
    8. '           ' → logprob: -16.250551223754883
    9. '```' → logprob: -16.250551223754883
    10. 'zzo' → logprob: -16.750551223754883

Token 1191: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0019188835285604
    2. ' ,' → logprob: -6.626918792724609
    3. '(' → logprob: -8.00191879272461
    4. ',z' → logprob: -9.00191879272461
    5. ',x' → logprob: -10.75191879272461
    6. ',y' → logprob: -10.87691879272461
    7. ',
' → logprob: -11.00191879272461
    8. '(z' → logprob: -11.12691879272461
    9. ',K' → logprob: -11.50191879272461
    10. '(x' → logprob: -11.75191879272461

Token 1192: ' ' (ID: 220)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.951574981212616
    2. 'K' → logprob: -1.4515750408172607
    3. 'z' → logprob: -1.7015750408172607
    4. 'L' → logprob: -2.7015750408172607
    5. '2' → logprob: -2.8265750408172607
    6. 'x' → logprob: -2.8265750408172607
    7. '(' → logprob: -4.826574802398682
    8. 'max' → logprob: -6.701574802398682
    9. '0' → logprob: -7.076574802398682
    10. '(L' → logprob: -8.45157527923584

Token 1193: '1' (ID: 16)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.9049404263496399
    2. 'z' → logprob: -1.5299403667449951
    3. 'K' → logprob: -1.7799403667449951
    4. '2' → logprob: -2.404940366744995
    5. 'x' → logprob: -2.529940366744995
    6. 'L' → logprob: -3.404940366744995
    7. '(' → logprob: -5.404940605163574
    8. '0' → logprob: -7.029940605163574
    9. 'max' → logprob: -7.529940605163574
    10. '1' → logprob: -8.404940605163574

Token 1194: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.27812662720680237
    2. ' +' → logprob: -1.90312659740448
    3. '+' → logprob: -2.4031267166137695
    4. '0' → logprob: -6.9031267166137695
    5. ')
' → logprob: -7.2781267166137695
    6. ',' → logprob: -7.5281267166137695
    7. ' )' → logprob: -8.40312671661377
    8. '+y' → logprob: -8.77812671661377
    9. '1' → logprob: -9.52812671661377
    10. '2' → logprob: -9.77812671661377

Token 1195: ' y' (ID: 342)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.15222221612930298
    2. 'y' → logprob: -2.152222156524658
    3. 'z' → logprob: -5.027222156524658
    4. '(x' → logprob: -5.027222156524658
    5. '(' → logprob: -5.777222156524658
    6. 'max' → logprob: -6.152222156524658
    7. 'K' → logprob: -6.277222156524658
    8. '2' → logprob: -6.402222156524658
    9. '(y' → logprob: -6.652222156524658
    10. '(K' → logprob: -7.402222156524658

Token 1196: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005599645897746086
    2. '+' → logprob: -5.630599498748779
    3. ')
' → logprob: -7.130599498748779
    4. ' +' → logprob: -7.380599498748779
    5. '-' → logprob: -8.255599975585938
    6. ' -' → logprob: -9.005599975585938
    7. '<|end|>' → logprob: -9.255599975585938
    8. '[' → logprob: -10.880599975585938
    9. '                       ' → logprob: -11.380599975585938
    10. ' )' → logprob: -11.380599975585938

Token 1197: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.001609005150385201
    2. '(' → logprob: -7.376608848571777
    3. '(x' → logprob: -7.376608848571777
    4. 'K' → logprob: -9.126608848571777
    5. '((' → logprob: -9.376608848571777
    6. ' x' → logprob: -10.001608848571777
    7. '(K' → logprob: -10.251608848571777
    8. '1' → logprob: -10.626608848571777
    9. ' (' → logprob: -11.001608848571777
    10. '2' → logprob: -11.376608848571777

Token 1198: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00023762896307744086
    2. ')
' → logprob: -8.375237464904785
    3. ' )' → logprob: -12.250237464904785
    4. '                   ' → logprob: -14.375237464904785
    5. '))' → logprob: -14.875237464904785
    6. '+' → logprob: -15.125237464904785
    7. ')
' → logprob: -15.250237464904785
    8. '```' → logprob: -15.500237464904785
    9. '[' → logprob: -16.8752384185791
    10. '<|end|>' → logprob: -17.0002384185791

Token 1199: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.48300573229789734
    2. '(K' → logprob: -1.8580057621002197
    3. '(' → logprob: -2.4830057621002197
    4. '1' → logprob: -2.9830057621002197
    5. '0' → logprob: -2.9830057621002197
    6. 'x' → logprob: -4.608005523681641
    7. '(x' → logprob: -4.983005523681641
    8. '2' → logprob: -5.108005523681641
    9. '((' → logprob: -5.483005523681641
    10. ' (' → logprob: -5.733005523681641

Token 1200: ' //' (ID: 602)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09746045619249344
    2. '//' → logprob: -2.7224605083465576
    3. ' //' → logprob: -4.2224602699279785
    4. ' )' → logprob: -5.0974602699279785
    5. ' -' → logprob: -6.7224602699279785
    6. ')
' → logprob: -6.7224602699279785
    7. ' ' → logprob: -7.0974602699279785
    8. '-' → logprob: -7.0974602699279785
    9. ')//' → logprob: -8.097460746765137
    10. '#' → logprob: -8.222460746765137

Token 1201: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.707997428951785e-05
    2. '1' → logprob: -9.750077247619629
    3. ' ' → logprob: -11.625077247619629
    4. '```' → logprob: -12.750077247619629
    5. '3' → logprob: -13.625077247619629
    6. '   ' → logprob: -13.812577247619629
    7. '
' → logprob: -14.125077247619629
    8. '``' → logprob: -14.437577247619629
    9. '4' → logprob: -14.750077247619629
    10. '_' → logprob: -15.250077247619629

Token 1202: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0003573919821064919
    2. '1' → logprob: -8.000357627868652
    3. ' ' → logprob: -11.500357627868652
    4. '```' → logprob: -12.750357627868652
    5. '
' → logprob: -12.875357627868652
    6. '   ' → logprob: -13.125357627868652
    7. '3' → logprob: -13.687857627868652
    8. '4' → logprob: -14.250357627868652
    9. '``' → logprob: -14.562857627868652
    10. '  ' → logprob: -15.312857627868652

Token 1203: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009334942442364991
    2. ')
' → logprob: -7.000933647155762
    3. '+' → logprob: -12.000933647155762
    4. ' )' → logprob: -12.000933647155762
    5. '                   ' → logprob: -12.750933647155762
    6. '))' → logprob: -12.875933647155762
    7. ')
' → logprob: -13.500933647155762
    8. '                       ' → logprob: -15.000933647155762
    9. '```' → logprob: -15.000933647155762
    10. ')`' → logprob: -15.250933647155762

Token 1204: '                   ' (ID: 699)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1205: ' dp' (ID: 21546)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.10282514989376068
    2. '                       ' → logprob: -3.102825164794922
    3. '                           ' → logprob: -3.602825164794922
    4. '```' → logprob: -4.977825164794922
    5. '				' → logprob: -5.477825164794922
    6. '                               ' → logprob: -5.727825164794922
    7. 'dp' (adapté à ' dp') → logprob: -6.102825164794922
    8. '                                       ' → logprob: -6.477825164794922
    9. '                                   ' → logprob: -6.477825164794922
    10. '                                           ' → logprob: -6.727825164794922

Token 1206: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. '```' → logprob: -15.500000953674316
    3. '
' → logprob: -16.375
    4. '[' → logprob: -16.75
    5. '0' → logprob: -17.5625
    6. '   ' → logprob: -17.75
    7. '１' → logprob: -17.9375
    8. '`' → logprob: -18.0625
    9. '_' → logprob: -18.125
    10. '' → logprob: -18.25

Token 1207: '[y' (ID: 34551)
  Prédit: '[x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.5236894488334656
    2. '[y' → logprob: -0.8986894488334656
    3. '[' → logprob: -7.898689270019531
    4. '[z' → logprob: -9.523689270019531
    5. '][' → logprob: -9.773689270019531
    6. '```' → logprob: -11.648689270019531
    7. 'y' → logprob: -12.023689270019531
    8. '}[' → logprob: -12.023689270019531
    9. '   ' → logprob: -12.273689270019531
    10. 'x' → logprob: -12.273689270019531

Token 1208: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.004305138252675533
    2. '[x' → logprob: -5.879305362701416
    3. '[y' → logprob: -7.504305362701416
    4. '           ' → logprob: -8.004304885864258
    5. '[z' → logprob: -8.379304885864258
    6. '                   ' → logprob: -9.254304885864258
    7. '[' → logprob: -9.629304885864258
    8. ']' → logprob: -10.254304885864258
    9. '```' → logprob: -10.254304885864258
    10. '   ' → logprob: -10.379304885864258

Token 1209: '0' (ID: 15)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -5.931863051955588e-05
    2. 'y' → logprob: -10.250059127807617
    3. ' x' → logprob: -11.875059127807617
    4. '   ' → logprob: -12.500059127807617
    5. 'z' → logprob: -12.625059127807617
    6. 'zz' → logprob: -13.250059127807617
    7. '(x' → logprob: -13.250059127807617
    8. 'xx' → logprob: -13.500059127807617
    9. '
' → logprob: -14.250059127807617
    10. '           ' → logprob: -14.250059127807617

Token 1210: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0005233656847849488
    2. ']' → logprob: -7.875523567199707
    3. '[' → logprob: -9.625523567199707
    4. '           ' → logprob: -10.500523567199707
    5. '   ' → logprob: -12.000523567199707
    6. '          ' → logprob: -12.125523567199707
    7. ' ][' → logprob: -12.250523567199707
    8. '][]' → logprob: -12.250523567199707
    9. '       ' → logprob: -12.500523567199707
    10. ']][' → logprob: -12.625523567199707

Token 1211: 'zz' (ID: 8013)
  Prédit: 'zz'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zz' → logprob: -9.77022064034827e-05
    2. 'z' → logprob: -9.875097274780273
    3. 'L' → logprob: -10.375097274780273
    4. ' zz' → logprob: -12.000097274780273
    5. '   ' → logprob: -13.000097274780273
    6. '       ' → logprob: -14.250097274780273
    7. '```' → logprob: -14.375097274780273
    8. '         ' → logprob: -14.500097274780273
    9. '          ' → logprob: -14.500097274780273
    10. '           ' → logprob: -14.625097274780273

Token 1212: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0001705246395431459
    2. ']=' → logprob: -9.125170707702637
    3. '=' → logprob: -9.875170707702637
    4. ']+=' → logprob: -12.000170707702637
    5. ')' → logprob: -13.625170707702637
    6. ']
' → logprob: -14.000170707702637
    7. '           ' → logprob: -15.125170707702637
    8. '                   ' → logprob: -15.125170707702637
    9. '```' → logprob: -15.375170707702637
    10. ']=(' → logprob: -15.500170707702637

Token 1213: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0005625653429888189
    2. ' =' → logprob: -8.12556266784668
    3. '+=' → logprob: -8.25056266784668
    4. ']=' → logprob: -13.75056266784668
    5. '```' → logprob: -13.75056266784668
    6. '           ' → logprob: -14.50056266784668
    7. ']' → logprob: -14.62556266784668
    8. '   ' → logprob: -14.75056266784668
    9. '       ' → logprob: -14.75056266784668
    10. ']+=' → logprob: -14.87556266784668

Token 1214: ' (' (ID: 350)
  Prédit: '(dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -1.652451464906335e-05
    2. ' (' → logprob: -11.375016212463379
    3. '(' → logprob: -12.375016212463379
    4. '(df' → logprob: -15.500016212463379
    5. '(pd' → logprob: -15.750016212463379
    6. '(pid' → logprob: -16.500017166137695
    7. '(dx' → logprob: -16.875017166137695
    8. '(dd' → logprob: -17.000017166137695
    9. '(dc' → logprob: -17.125017166137695
    10. '(dat' → logprob: -17.375017166137695

Token 1215: 'dp' (ID: 19037)
  Prédit: '(dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.023259690031409264
    2. 'dp' → logprob: -3.7732596397399902
    3. ' dp' → logprob: -11.398260116577148
    4. ' (' → logprob: -13.523260116577148
    5. '	dp' → logprob: -14.148260116577148
    6. '(' → logprob: -14.398260116577148
    7. '.dp' → logprob: -16.52326011657715
    8. '_dp' → logprob: -16.64826011657715
    9. '   ' → logprob: -16.77326011657715
    10. '
' → logprob: -17.77326011657715

Token 1216: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.465036105713807e-06
    2. 'dp' → logprob: -13.000007629394531
    3. '0' → logprob: -13.250007629394531
    4. 'p' → logprob: -14.125007629394531
    5. '```' → logprob: -14.125007629394531
    6. 'i' → logprob: -15.187507629394531
    7. 'y' → logprob: -15.250007629394531
    8. '[' → logprob: -15.562507629394531
    9. '_' → logprob: -15.687507629394531
    10. '' → logprob: -15.812507629394531

Token 1217: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -0.11294689029455185
    2. 'y' → logprob: -2.2379469871520996
    3. '][' → logprob: -10.987946510314941
    4. '[' → logprob: -11.112946510314941
    5. ' y' → logprob: -11.237946510314941
    6. '```' → logprob: -11.362946510314941
    7. '       ' → logprob: -11.487946510314941
    8. '   ' → logprob: -11.737946510314941
    9. '[x' → logprob: -11.862946510314941
    10. '           ' → logprob: -11.987946510314941

Token 1218: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.012344584800302982
    2. '[y' → logprob: -4.5123443603515625
    3. '[x' → logprob: -6.7623443603515625
    4. '[' → logprob: -9.887344360351562
    5. '0' → logprob: -11.012344360351562
    6. '       ' → logprob: -11.262344360351562
    7. '           ' → logprob: -11.262344360351562
    8. '1' → logprob: -11.887344360351562
    9. ']' → logprob: -11.887344360351562
    10. '   ' → logprob: -12.512344360351562

Token 1219: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.584239938296378e-06
    2. 'x' → logprob: -13.125007629394531
    3. 'y' → logprob: -13.250007629394531
    4. ' ' → logprob: -13.500007629394531
    5. '   ' → logprob: -14.500007629394531
    6. '
' → logprob: -14.875007629394531
    7. '1' → logprob: -15.000007629394531
    8. '[' → logprob: -15.812507629394531
    9. '```' → logprob: -15.812507629394531
    10. '       ' → logprob: -15.875007629394531

Token 1220: '][' (ID: 2696)
  Prédit: '[z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[z' → logprob: -0.07465559244155884
    2. '[x' → logprob: -3.199655532836914
    3. '][' → logprob: -3.949655532836914
    4. '[y' → logprob: -4.824655532836914
    5. '[' → logprob: -6.074655532836914
    6. 'z' → logprob: -7.074655532836914
    7. ']' → logprob: -8.324655532836914
    8. '+' → logprob: -8.449655532836914
    9. 'zz' → logprob: -10.074655532836914
    10. 'dp' → logprob: -10.074655532836914

Token 1221: 'zz' (ID: 8013)
  Prédit: 'zz'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zz' → logprob: -0.20701918005943298
    2. 'dp' → logprob: -2.582019090652466
    3. '(' → logprob: -2.957019090652466
    4. '(dp' → logprob: -2.957019090652466
    5. 'z' → logprob: -5.082019329071045
    6. ' zz' → logprob: -7.832019329071045
    7. '(z' → logprob: -7.957019329071045
    8. '[' → logprob: -9.207018852233887
    9. ' (' → logprob: -9.582018852233887
    10. '[z' → logprob: -9.957018852233887

Token 1222: ']' (ID: 60)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.04865458607673645
    2. ' +' → logprob: -3.048654556274414
    3. ']' → logprob: -9.673654556274414
    4. '+
' → logprob: -13.548654556274414
    5. '=' → logprob: -14.423654556274414
    6. ']+' → logprob: -14.548654556274414
    7. '```' → logprob: -14.548654556274414
    8. ']+=' → logprob: -15.298654556274414
    9. '+=' → logprob: -15.673654556274414
    10. ')' → logprob: -15.798654556274414

Token 1223: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.006719520781189203
    2. ' +' → logprob: -5.006719589233398
    3. '+
' → logprob: -13.256719589233398
    4. '+=' → logprob: -13.756719589233398
    5. '=' → logprob: -13.881719589233398
    6. '+d' → logprob: -16.5067195892334
    7. ')' → logprob: -16.7567195892334
    8. '+)' → logprob: -17.1317195892334
    9. '```' → logprob: -17.1317195892334
    10. '+[' → logprob: -17.2567195892334

Token 1224: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.002490045502781868
    2. ' dp' → logprob: -6.002490043640137
    3. '(dp' → logprob: -11.377490043640137
    4. '	dp' → logprob: -14.252490043640137
    5. '   ' → logprob: -14.877490043640137
    6. '           ' → logprob: -15.127490043640137
    7. '_dp' → logprob: -15.127490043640137
    8. '                   ' → logprob: -15.502490043640137
    9. '(' → logprob: -15.627490043640137
    10. ' ' → logprob: -15.752490043640137

Token 1225: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.4418171455617994e-05
    2. '[x' → logprob: -10.250044822692871
    3. '1' → logprob: -11.875044822692871
    4. 'dp' → logprob: -14.625044822692871
    5. '```' → logprob: -15.500044822692871
    6. 'x' → logprob: -15.625044822692871
    7. '
' → logprob: -15.625044822692871
    8. 'o' → logprob: -15.625044822692871
    9. ' ' → logprob: -15.937544822692871
    10. '(x' → logprob: -16.062543869018555

Token 1226: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.004627938382327557
    2. 'x' → logprob: -5.379627704620361
    3. '```' → logprob: -12.50462818145752
    4. '[' → logprob: -13.12962818145752
    5. ' x' → logprob: -14.50462818145752
    6. '][' → logprob: -14.75462818145752
    7. '[
' → logprob: -14.87962818145752
    8. '{x' → logprob: -16.254627227783203
    9. '   ' → logprob: -16.379627227783203
    10. '	x' → logprob: -16.504627227783203

Token 1227: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0144873708486557
    2. '[y' → logprob: -4.264487266540527
    3. 'y' → logprob: -8.139487266540527
    4. ']' → logprob: -11.764487266540527
    5. '[' → logprob: -11.764487266540527
    6. '[x' → logprob: -12.639487266540527
    7. ']][' → logprob: -12.889487266540527
    8. '"][' → logprob: -13.014487266540527
    9. ' ][' → logprob: -13.389487266540527
    10. '}[' → logprob: -13.889487266540527

Token 1228: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -1.2233183042553719e-05
    2. ' y' → logprob: -11.375012397766113
    3. '[y' → logprob: -15.500012397766113
    4. '	y' → logprob: -15.875012397766113
    5. 'z' → logprob: -16.250011444091797
    6. '][' → logprob: -16.750011444091797
    7. 'x' → logprob: -17.000011444091797
    8. '   ' → logprob: -17.375011444091797
    9. '0' → logprob: -17.375011444091797
    10. ''y' → logprob: -17.750011444091797

Token 1229: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.03417174890637398
    2. '[z' → logprob: -3.4091718196868896
    3. '[x' → logprob: -8.909172058105469
    4. '[' → logprob: -9.284172058105469
    5. 'z' → logprob: -9.409172058105469
    6. ' ][' → logprob: -9.909172058105469
    7. '])' → logprob: -10.284172058105469
    8. ']' → logprob: -10.284172058105469
    9. ')[' → logprob: -10.534172058105469
    10. '])[' → logprob: -11.534172058105469

Token 1230: 'z' (ID: 89)
  Prédit: 'z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.000556012790184468
    2. '[z' → logprob: -7.500555992126465
    3. ' z' → logprob: -13.125555992126465
    4. 'zz' → logprob: -14.875555992126465
    5. ''z' → logprob: -15.125555992126465
    6. '	z' → logprob: -15.125555992126465
    7. '][' → logprob: -16.12555694580078
    8. '_z' → logprob: -17.37555694580078
    9. '[' → logprob: -17.75055694580078
    10. '```' → logprob: -18.00055694580078

Token 1231: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.07075344026088715
    2. '[x' → logprob: -2.695753335952759
    3. ']' → logprob: -7.820753574371338
    4. '[y' → logprob: -8.69575309753418
    5. '   ' → logprob: -9.94575309753418
    6. ')' → logprob: -10.32075309753418
    7. ']%' → logprob: -10.57075309753418
    8. '[j' → logprob: -10.57075309753418
    9. '[z' → logprob: -10.57075309753418
    10. '[' → logprob: -10.69575309753418

Token 1232: ' %' (ID: 1851)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.41199979186058044
    2. '%' → logprob: -1.4119998216629028
    3. ')%' → logprob: -2.4119997024536133
    4. ' %' → logprob: -5.661999702453613
    5. '%=' → logprob: -7.911999702453613
    6. ' %=' → logprob: -8.411999702453613
    7. '%)' → logprob: -9.786999702453613
    8. '                   ' → logprob: -10.161999702453613
    9. ']' → logprob: -10.411999702453613
    10. ']%' → logprob: -10.411999702453613

Token 1233: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -3.531315314830863e-06
    2. ' M' → logprob: -12.750003814697266
    3. '```' → logprob: -14.375003814697266
    4. '``' → logprob: -18.250003814697266
    5. '
' → logprob: -19.000003814697266
    6. '`' → logprob: -19.125003814697266
    7. 'М' → logprob: -19.125003814697266
    8. '   ' → logprob: -19.375003814697266
    9. '	M' → logprob: -19.750003814697266
    10. '(M' → logprob: -20.000003814697266

Token 1234: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1235: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2864610552787781
    2. 'print' → logprob: -1.7864611148834229
    3. 'dp' → logprob: -2.661461114883423
    4. 'for' → logprob: -4.786460876464844
    5. '
' → logprob: -7.036460876464844
    6. ')' → logprob: -7.661460876464844
    7. '       ' → logprob: -7.661460876464844
    8. '```' → logprob: -7.911460876464844
    9. '#' → logprob: -8.161460876464844
    10. 'result' → logprob: -8.911460876464844

Token 1236: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002677918178960681
    2. '   ' → logprob: -6.127677917480469
    3. 'dp' → logprob: -7.627677917480469
    4. '                   ' → logprob: -13.377677917480469
    5. '           ' → logprob: -13.752677917480469
    6. '
' → logprob: -13.877677917480469
    7. '```' → logprob: -14.002677917480469
    8. '     ' → logprob: -15.377677917480469
    9. '#' (adapté à ' #') → logprob: -15.752677917480469
    10. '      ' → logprob: -16.12767791748047

Token 1237: ' Passage' (ID: 152604)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.00013440960901789367
    2. ' dp' → logprob: -9.250134468078613
    3. '   ' → logprob: -10.250134468078613
    4. '       ' → logprob: -12.875134468078613
    5. '	dp' → logprob: -15.250134468078613
    6. '(dp' → logprob: -17.375133514404297
    7. '_dp' → logprob: -17.625133514404297
    8. '
' → logprob: -18.500133514404297
    9. 'DP' → logprob: -20.000133514404297
    10. '#' → logprob: -20.000133514404297

Token 1238: ' à' (ID: 1221)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5857070088386536
    2. 'dp' → logprob: -1.2107069492340088
    3. '       ' → logprob: -2.460706949234009
    4. '   ' → logprob: -3.460706949234009
    5. ' =' → logprob: -4.460707187652588
    6. 'to' → logprob: -5.585707187652588
    7. ' dp' → logprob: -5.585707187652588
    8. ' to' → logprob: -6.085707187652588
    9. 'à' → logprob: -6.335707187652588
    10. '0' → logprob: -6.460707187652588

Token 1239: ' l' (ID: 305)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.1041145626222715e-05
    2. ' dp' → logprob: -11.750011444091797
    3. '#' → logprob: -14.000011444091797
    4. 'la' → logprob: -14.250011444091797
    5. '(dp' → logprob: -14.500011444091797
    6. '	dp' → logprob: -14.500011444091797
    7. '   ' → logprob: -15.375011444091797
    8. '```' → logprob: -15.625011444091797
    9. '       ' → logprob: -17.000011444091797
    10. 'l' → logprob: -17.000011444091797

Token 1240: ''ét' (ID: 23771)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.030409133061766624
    2. 'p' → logprob: -3.530409097671509
    3. '`' → logprob: -8.65540885925293
    4. ' dp' → logprob: -8.90540885925293
    5. '1' → logprob: -9.28040885925293
    6. '```' → logprob: -9.65540885925293
    7. 'a' → logprob: -10.15540885925293
    8. '_dp' → logprob: -10.28040885925293
    9. '(dp' → logprob: -10.90540885925293
    10. 'e' → logprob: -11.28040885925293

Token 1241: 'ape' (ID: 2480)
  Prédit: 'ape'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ape' → logprob: -0.00010640407708706334
    2. 'ap' → logprob: -10.125106811523438
    3. 'at' → logprob: -10.375106811523438
    4. 'dp' → logprob: -11.250106811523438
    5. '#' → logprob: -12.625106811523438
    6. 'e' → logprob: -12.875106811523438
    7. 'pe' → logprob: -13.250106811523438
    8. 'aped' → logprob: -13.250106811523438
    9. 'apes' → logprob: -13.375106811523438
    10. '```' → logprob: -13.750106811523438

Token 1242: ' suivante' (ID: 107439)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0021431241184473038
    2. 'su' → logprob: -6.377142906188965
    3. ' suivante' → logprob: -8.502142906188965
    4. ' dp' → logprob: -9.252142906188965
    5. '       ' → logprob: -9.377142906188965
    6. '=' → logprob: -10.752142906188965
    7. '(dp' → logprob: -11.752142906188965
    8. 's' → logprob: -12.377142906188965
    9. ' suivant' → logprob: -12.377142906188965
    10. '1' → logprob: -12.752142906188965

Token 1243: '
' (ID: 198)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.037973999977111816
    2. '       ' → logprob: -3.7879738807678223
    3. ' dp' → logprob: -4.287973880767822
    4. '   ' → logprob: -7.037973880767822
    5. '	dp' → logprob: -11.91297435760498
    6. '(dp' → logprob: -13.41297435760498
    7. '_dp' → logprob: -13.66297435760498
    8. '
' → logprob: -15.41297435760498
    9. ' ' → logprob: -16.162973403930664
    10. 'dc' → logprob: -16.787973403930664

Token 1244: '       ' (ID: 309)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.09672342985868454
    2. '   ' → logprob: -3.0967233180999756
    3. ' dp' → logprob: -3.0967233180999756
    4. '       ' → logprob: -6.471723556518555
    5. '	dp' → logprob: -8.346723556518555
    6. '(dp' → logprob: -11.721723556518555
    7. '_dp' → logprob: -12.346723556518555
    8. '
' → logprob: -14.221723556518555
    9. ' ' → logprob: -14.721723556518555
    10. '```' → logprob: -14.721723556518555

Token 1245: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.0001596771035110578
    2. ' dp' → logprob: -8.75015926361084
    3. '   ' → logprob: -13.75015926361084
    4. '	dp' → logprob: -16.625160217285156
    5. '       ' → logprob: -17.125160217285156
    6. '(dp' → logprob: -19.500160217285156
    7. '_dp' → logprob: -19.750160217285156
    8. '
' → logprob: -19.875160217285156
    9. 'dc' → logprob: -21.750160217285156
    10. 'd' → logprob: -22.250160217285156

Token 1246: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.003191970521584153
    2. '1' → logprob: -5.753191947937012
    3. '=' → logprob: -11.878191947937012
    4. ' =' → logprob: -12.128191947937012
    5. '_' → logprob: -13.878191947937012
    6. '```' → logprob: -15.378191947937012
    7. 's' → logprob: -16.378192901611328
    8. ',' → logprob: -16.503192901611328
    9. 'dp' → logprob: -16.628192901611328
    10. '[' → logprob: -16.940692901611328

Token 1247: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.004084216430783272
    2. ' =' → logprob: -5.50408411026001
    3. ',' → logprob: -12.129084587097168
    4. '=
' → logprob: -15.629084587097168
    5. '[' → logprob: -16.62908363342285
    6. '```' → logprob: -17.12908363342285
    7. '＝' → logprob: -17.25408363342285
    8. '<|end|>' → logprob: -17.50408363342285
    9. '=}' → logprob: -18.00408363342285
    10. ')' → logprob: -18.25408363342285

Token 1248: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -6.2729995988775045e-06
    2. ' dp' → logprob: -12.000006675720215
    3. '(dp' → logprob: -20.7500057220459
    4. '	dp' → logprob: -21.2500057220459
    5. '_dp' → logprob: -23.3750057220459
    6. 'd' → logprob: -24.5000057220459
    7. 'dj' → logprob: -24.7500057220459
    8. 'dpi' → logprob: -25.0000057220459
    9. '   ' → logprob: -25.2500057220459
    10. 'dc' → logprob: -25.3750057220459

Token 1249: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. '```' → logprob: -16.0
    3. '[' → logprob: -16.375
    4. '
' → logprob: -17.375
    5. '_' → logprob: -18.125
    6. '   ' → logprob: -18.625
    7. '`' → logprob: -18.75
    8. '' → logprob: -18.9375
    9. '``' → logprob: -18.9375
    10. '[
' → logprob: -19.1875

Token 1250: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6148166060447693
    2. 'result' → logprob: -0.9898166060447693
    3. 'res' → logprob: -3.364816665649414
    4. 'total' → logprob: -3.489816665649414
    5. '#' → logprob: -4.364816665649414
    6. '
' → logprob: -5.864816665649414
    7. 'ans' → logprob: -5.864816665649414
    8. 'answer' → logprob: -6.114816665649414
    9. 'rés' → logprob: -7.489816665649414
    10. 's' → logprob: -7.989816665649414

Token 1251: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.4445820152759552
    2. 'result' → logprob: -1.1945819854736328
    3. 'res' → logprob: -3.569581985473633
    4. 'ans' → logprob: -3.944581985473633
    5. '#' → logprob: -5.444581985473633
    6. 'answer' → logprob: -5.819581985473633
    7. 'total' → logprob: -6.944581985473633
    8. 'rés' → logprob: -8.944581985473633
    9. 'r' → logprob: -9.694581985473633
    10. '```' → logprob: -10.819581985473633

Token 1252: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.11759474873542786
    2. 'result' → logprob: -2.6175947189331055
    3. 'ans' → logprob: -3.3675947189331055
    4. 'answer' → logprob: -6.2425947189331055
    5. 'res' → logprob: -6.6175947189331055
    6. 'total' → logprob: -8.992594718933105
    7. 'r' → logprob: -9.867594718933105
    8. '#' (adapté à ' #') → logprob: -11.367594718933105
    9. '```' → logprob: -11.742594718933105
    10. 'out' → logprob: -12.492594718933105

Token 1253: ' Acc' (ID: 6278)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.1223255917429924
    2. 'result' → logprob: -2.3723256587982178
    3. 'ans' → logprob: -4.122325420379639
    4. 'answer' → logprob: -5.497325420379639
    5. 'res' → logprob: -6.622325420379639
    6. 'total' → logprob: -8.747325897216797
    7. 'r' → logprob: -10.747325897216797
    8. 'out' → logprob: -10.872325897216797
    9. 'rés' → logprob: -11.247325897216797
    10. '#' → logprob: -11.622325897216797

Token 1254: 'um' (ID: 394)
  Prédit: 'um'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.5491475462913513
    2. 'umulate' → logprob: -1.049147605895996
    3. 'umul' → logprob: -3.424147605895996
    4. 'u' → logprob: -3.549147605895996
    5. 'uml' → logprob: -5.549147605895996
    6. 'umulator' → logprob: -6.549147605895996
    7. 'umu' → logprob: -6.799147605895996
    8. 'ueil' → logprob: -7.174147605895996
    9. 'print' → logprob: -7.299147605895996
    10. 'ès' → logprob: -7.924147605895996

Token 1255: 'ulation' (ID: 4672)
  Prédit: 'uler'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'uler' → logprob: -1.0193525552749634
    2. 'ule' → logprob: -1.2693525552749634
    3. 'er' → logprob: -1.3943525552749634
    4. 'um' → logprob: -3.144352436065674
    5. 'u' → logprob: -3.894352436065674
    6. 'ulé' → logprob: -4.144352436065674
    7. 'umulate' → logprob: -4.519352436065674
    8. 'ulate' → logprob: -4.519352436065674
    9. 'e' → logprob: -5.894352436065674
    10. 'érer' → logprob: -6.144352436065674

Token 1256: ' de' (ID: 334)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.31983524560928345
    2. 'ans' → logprob: -1.8198351860046387
    3. 'answer' → logprob: -2.3198351860046387
    4. 'print' → logprob: -4.569835186004639
    5. 'res' → logprob: -5.819835186004639
    6. '(ans' → logprob: -10.944835662841797
    7. 'total' → logprob: -11.444835662841797
    8. ' ans' → logprob: -11.444835662841797
    9. 'out' → logprob: -12.069835662841797
    10. '   ' → logprob: -12.819835662841797

Token 1257: ' toutes' (ID: 17502)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.5409488677978516
    2. 'ans' → logprob: -1.2909488677978516
    3. 'res' → logprob: -2.2909488677978516
    4. 'answer' → logprob: -3.4159488677978516
    5. 'sum' → logprob: -5.040948867797852
    6. 'rés' → logprob: -6.915948867797852
    7. 'print' → logprob: -7.290948867797852
    8. '(ans' → logprob: -8.665948867797852
    9. 'total' → logprob: -8.915948867797852
    10. ' ans' → logprob: -9.290948867797852

Token 1258: ' les' (ID: 1341)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.4254235327243805
    2. 'dp' → logprob: -2.1754236221313477
    3. 'rés' → logprob: -2.4254236221313477
    4. 'result' → logprob: -2.4254236221313477
    5. 'sum' → logprob: -3.4254236221313477
    6. 'val' → logprob: -5.175423622131348
    7. '(dp' → logprob: -5.675423622131348
    8. 'x' → logprob: -6.300423622131348
    9. 'print' → logprob: -6.300423622131348
    10. '[x' → logprob: -6.550423622131348

Token 1259: ' configurations' (ID: 56804)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.3662833571434021
    2. 'result' → logprob: -1.2412834167480469
    3. 'rés' → logprob: -4.741283416748047
    4. 'sum' → logprob: -6.116283416748047
    5. 'ans' → logprob: -6.116283416748047
    6. 'print' → logprob: -6.741283416748047
    7. 'answer' → logprob: -6.991283416748047
    8. 's' → logprob: -7.116283416748047
    9. 'x' → logprob: -8.116283416748047
    10. 'ways' → logprob: -8.616283416748047

Token 1260: ' val' (ID: 1459)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.41396114230155945
    2. 'print' → logprob: -1.1639611721038818
    3. 'answer' → logprob: -3.913961172103882
    4. 'ans' → logprob: -5.163960933685303
    5. 'res' → logprob: -6.913960933685303
    6. 'total' → logprob: -10.288961410522461
    7. 'output' → logprob: -12.038961410522461
    8. 'out' → logprob: -12.538961410522461
    9. 'r' → logprob: -12.913961410522461
    10. '```' → logprob: -13.538961410522461

Token 1261: 'ides' (ID: 4105)
  Prédit: 'ides'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ides' → logprob: -0.019048364832997322
    2. 'ide' → logprob: -4.14404821395874
    3. 'id' → logprob: -6.89404821395874
    4. 'ues' → logprob: -7.01904821395874
    5. '[' → logprob: -7.76904821395874
    6. 'ables' → logprob: -8.394048690795898
    7. '#' → logprob: -9.144048690795898
    8. 'dp' → logprob: -9.519048690795898
    9. 'ider' → logprob: -9.894048690795898
    10. '
' → logprob: -9.894048690795898

Token 1262: ' en' (ID: 469)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.16980957984924316
    2. 'res' → logprob: -2.419809579849243
    3. 'print' → logprob: -2.919809579849243
    4. 'answer' → logprob: -4.919809341430664
    5. 'ans' → logprob: -5.169809341430664
    6. 'total' → logprob: -9.044809341430664
    7. '```' → logprob: -9.044809341430664
    8. 'rés' → logprob: -10.919809341430664
    9. 'r' → logprob: -11.294809341430664
    10. 'ret' → logprob: -11.669809341430664

Token 1263: ' respect' (ID: 5618)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5210407376289368
    2. 'result' → logprob: -1.646040678024292
    3. 'res' → logprob: -2.771040678024292
    4. 'answer' → logprob: -2.896040678024292
    5. 'ans' → logprob: -3.021040678024292
    6. 'sum' → logprob: -3.771040678024292
    7. 'rés' → logprob: -4.146040916442871
    8. '0' → logprob: -6.271040916442871
    9. '```' → logprob: -6.271040916442871
    10. 's' → logprob: -7.146040916442871

Token 1264: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.0007381578907370567
    2. 'e' → logprob: -7.875738143920898
    3. 'ance' → logprob: -9.000738143920898
    4. 'ence' → logprob: -9.500738143920898
    5. 'ent' → logprob: -10.000738143920898
    6. 'ation' → logprob: -10.250738143920898
    7. '#' → logprob: -10.375738143920898
    8. 'uant' → logprob: -12.000738143920898
    9. '```' → logprob: -12.000738143920898
    10. 'de' → logprob: -12.375738143920898

Token 1265: ' loop' (ID: 11453)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'la' → logprob: -1.0876084566116333
    2. 'sum' → logprob: -1.4626084566116333
    3. 'range' → logprob: -1.4626084566116333
    4. 'le' → logprob: -2.3376083374023438
    5. 'K' → logprob: -3.0876083374023438
    6. 'les' → logprob: -4.837608337402344
    7. ' la' → logprob: -4.837608337402344
    8. '   ' → logprob: -5.087608337402344
    9. '0' → logprob: -5.087608337402344
    10. 'l' → logprob: -5.212608337402344

Token 1266: '()
' (ID: 1234)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.0205748081207275
    2. '```' → logprob: -1.3955748081207275
    3. 'sum' → logprob: -1.7705748081207275
    4. 'ans' → logprob: -2.1455748081207275
    5. 'res' → logprob: -3.2705748081207275
    6. 'answer' → logprob: -3.5205748081207275
    7. 'total' → logprob: -4.895574569702148
    8. 'print' → logprob: -5.020574569702148
    9. '``' → logprob: -5.395574569702148
    10. '[x' → logprob: -5.770574569702148

Token 1267: '   ' (ID: 271)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.4160524308681488
    2. 'res' → logprob: -1.4160524606704712
    3. 'ans' → logprob: -2.4160523414611816
    4. 'answer' → logprob: -4.916052341461182
    5. '```' → logprob: -7.791052341461182
    6. 'print' → logprob: -8.41605281829834
    7. 'r' → logprob: -8.79105281829834
    8. 'total' → logprob: -8.79105281829834
    9. 'rés' → logprob: -10.29105281829834
    10. 'ret' → logprob: -10.29105281829834

Token 1268: ' ret' (ID: 2881)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.30491021275520325
    2. 'res' → logprob: -2.054910182952881
    3. 'ans' → logprob: -2.054910182952881
    4. 'answer' → logprob: -5.054910182952881
    5. 'print' → logprob: -8.804910659790039
    6. 'total' → logprob: -10.804910659790039
    7. 'ret' (adapté à ' ret') → logprob: -10.929910659790039
    8. 'r' → logprob: -11.554910659790039
    9. '```' → logprob: -11.804910659790039
    10. 'out' → logprob: -12.179910659790039

Token 1269: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25234338641166687
    2. ' =' → logprob: -1.5023434162139893
    3. 'urn' → logprob: -7.87734317779541
    4. '   ' → logprob: -10.75234317779541
    5. '       ' → logprob: -12.62734317779541
    6. '0' → logprob: -13.37734317779541
    7. '  ' → logprob: -13.87734317779541
    8. 'our' → logprob: -13.87734317779541
    9. 'ourn' → logprob: -13.87734317779541
    10. ' ' → logprob: -14.25234317779541

Token 1270: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.4034345187828876e-05
    2. 'sum' → logprob: -11.12502384185791
    3. ' ' → logprob: -11.75002384185791
    4. '(' → logprob: -14.12502384185791
    5. '```' → logprob: -14.87502384185791
    6. '   ' → logprob: -15.25002384185791
    7. '(sum' → logprob: -17.375024795532227
    8. ' sum' → logprob: -17.500024795532227
    9. '[' → logprob: -18.250024795532227
    10. '
' → logprob: -18.375024795532227

Token 1271: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001415618316968903
    2. 'sum' → logprob: -8.875141143798828
    3. '(' → logprob: -13.750141143798828
    4. '```' → logprob: -15.000141143798828
    5. ' ' → logprob: -15.625141143798828
    6. '(sum' → logprob: -15.875141143798828
    7. '[' → logprob: -17.000141143798828
    8. '   ' → logprob: -17.250141143798828
    9. ' sum' → logprob: -17.750141143798828
    10. '``' → logprob: -19.000141143798828

Token 1272: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.019595235586166382
    2. '
' → logprob: -4.019595146179199
    3. ' for' → logprob: -6.894595146179199
    4. '   ' → logprob: -7.894595146179199
    5. '```' → logprob: -9.8945951461792
    6. ' 
' → logprob: -13.1445951461792
    7. '    
' → logprob: -13.1445951461792
    8. '  
' → logprob: -13.8945951461792
    9. '	for' → logprob: -14.1445951461792
    10. '``' → logprob: -14.2695951461792

Token 1273: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0002529952325858176
    2. '
' → logprob: -9.125252723693848
    3. ' for' → logprob: -9.625252723693848
    4. '```' → logprob: -9.750252723693848
    5. '   ' → logprob: -10.875252723693848
    6. '``' → logprob: -14.375252723693848
    7. '	for' → logprob: -16.000253677368164
    8. '[' → logprob: -18.625253677368164
    9. '[
' → logprob: -19.125253677368164
    10. '
' → logprob: -19.250253677368164

Token 1274: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -1.7120533811976202e-05
    2. '```' → logprob: -11.250017166137695
    3. ' for' → logprob: -12.500017166137695
    4. '``' → logprob: -15.500017166137695
    5. '   ' → logprob: -15.875017166137695
    6. '
' → logprob: -17.000017166137695
    7. '	for' → logprob: -18.750017166137695
    8. 'range' → logprob: -19.875017166137695
    9. 'L' → logprob: -20.000017166137695
    10. '       ' → logprob: -20.625017166137695

Token 1275: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.3544423381972592e-05
    2. ' x' → logprob: -11.25001335144043
    3. '_x' → logprob: -15.25001335144043
    4. '   ' → logprob: -16.25001335144043
    5. 'i' → logprob: -16.50001335144043
    6. '```' → logprob: -17.87501335144043
    7. '`' → logprob: -18.37501335144043
    8. '0' → logprob: -18.50001335144043
    9. '	x' → logprob: -19.12501335144043
    10. 'a' → logprob: -19.25001335144043

Token 1276: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.06197518855333328
    2. ' in' → logprob: -2.8119752407073975
    3. '0' → logprob: -12.436975479125977
    4. ',' → logprob: -14.061975479125977
    5. '```' → logprob: -14.436975479125977
    6. 'x' → logprob: -14.686975479125977
    7. 'range' → logprob: -14.686975479125977
    8. 'n' → logprob: -15.061975479125977
    9. ' ' → logprob: -15.186975479125977
    10. ')' → logprob: -15.936975479125977

Token 1277: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0005542247672565281
    2. ' range' → logprob: -7.500554084777832
    3. '0' → logprob: -13.625554084777832
    4. '(range' → logprob: -17.12555503845215
    5. 'in' → logprob: -18.75055503845215
    6. ' ' → logprob: -18.87555503845215
    7. 'L' → logprob: -18.87555503845215
    8. '   ' → logprob: -19.25055503845215
    9. '	range' → logprob: -20.25055503845215
    10. '```' → logprob: -20.75055503845215

Token 1278: '(L' (ID: 11075)
  Prédit: '(L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(L' → logprob: -0.00861729308962822
    2. 'L' → logprob: -4.758617401123047
    3. '(' → logprob: -13.258617401123047
    4. '0' → logprob: -14.383617401123047
    5. '[L' → logprob: -15.508617401123047
    6. ' L' → logprob: -16.258617401123047
    7. '	L' → logprob: -17.383617401123047
    8. '   ' → logprob: -18.008617401123047
    9. ',L' → logprob: -18.133617401123047
    10. ' (' → logprob: -19.133617401123047

Token 1279: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0036109976936131716
    2. ' +' → logprob: -5.878611087799072
    3. '```' → logprob: -8.003610610961914
    4. '[' → logprob: -9.003610610961914
    5. '):
' → logprob: -9.253610610961914
    6. '(L' → logprob: -9.878610610961914
    7. '[L' → logprob: -10.003610610961914
    8. '(' → logprob: -10.003610610961914
    9. ')+' → logprob: -10.878610610961914
    10. '
' → logprob: -10.878610610961914

Token 1280: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.9153885558771435e-06
    2. ' ' → logprob: -12.250005722045898
    3. '0' → logprob: -14.125005722045898
    4. '2' → logprob: -16.1250057220459
    5. '```' → logprob: -16.7500057220459
    6. 'L' → logprob: -17.6250057220459
    7. '[' → logprob: -17.8750057220459
    8. '{' → logprob: -18.6250057220459
    9. ')' → logprob: -18.6250057220459
    10. '+' → logprob: -19.6250057220459

Token 1281: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.093505099765025e-05
    2. '0' → logprob: -10.875020980834961
    3. '2' → logprob: -13.875020980834961
    4. 'L' → logprob: -15.625020980834961
    5. '10' → logprob: -15.750020980834961
    6. ' ' → logprob: -15.750020980834961
    7. '3' → logprob: -15.750020980834961
    8. '```' → logprob: -15.750020980834961
    9. '6' → logprob: -16.62502098083496
    10. '7' → logprob: -17.00002098083496

Token 1282: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.0014391618315130472
    2. '):' → logprob: -7.251439094543457
    3. '   ' → logprob: -7.626439094543457
    4. '+' → logprob: -9.251439094543457
    5. '):
' → logprob: -10.001439094543457
    6. '```' → logprob: -10.126439094543457
    7. ':
' → logprob: -10.751439094543457
    8. ')' → logprob: -11.251439094543457
    9. '       ' → logprob: -11.251439094543457
    10. ':' → logprob: -12.376439094543457

Token 1283: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04696495085954666
    2. 'for' → logprob: -3.4219648838043213
    3. ' for' → logprob: -4.5469651222229
    4. '```' → logprob: -6.1719651222229
    5. '       ' → logprob: -8.171964645385742
    6. '	for' → logprob: -8.296964645385742
    7. ' ' → logprob: -12.171964645385742
    8. '   ' → logprob: -12.796964645385742
    9. '``' → logprob: -13.171964645385742
    10. 'y' → logprob: -14.046964645385742

Token 1284: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.004119242075830698
    2. ' for' → logprob: -5.504119396209717
    3. '   ' → logprob: -10.254118919372559
    4. '```' → logprob: -12.504118919372559
    5. '	for' → logprob: -13.629118919372559
    6. '       ' → logprob: -14.254118919372559
    7. ' ' → logprob: -17.879119873046875
    8. '           ' → logprob: -18.879119873046875
    9. '``' → logprob: -18.879119873046875
    10. 'if' → logprob: -19.504119873046875

Token 1285: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0008065330912359059
    2. ' y' → logprob: -7.1258063316345215
    3. 'x' → logprob: -13.87580680847168
    4. '   ' → logprob: -14.12580680847168
    5. ' ' → logprob: -16.00080680847168
    6. '0' → logprob: -16.00080680847168
    7. '	y' → logprob: -16.50080680847168
    8. '(y' → logprob: -17.37580680847168
    9. '```' → logprob: -17.87580680847168
    10. ''y' → logprob: -18.12580680847168

Token 1286: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5760607123374939
    2. ' in' → logprob: -0.8260607123374939
    3. '```' → logprob: -9.70106029510498
    4. '+' → logprob: -11.57606029510498
    5. 'range' → logprob: -11.57606029510498
    6. '[' → logprob: -12.45106029510498
    7. '   ' → logprob: -12.57606029510498
    8. ' y' → logprob: -12.82606029510498
    9. '(' → logprob: -12.82606029510498
    10. ',' → logprob: -12.82606029510498

Token 1287: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.7213514447212219
    2. 'L' → logprob: -0.9713514447212219
    3. '0' → logprob: -2.221351385116577
    4. '(L' → logprob: -4.346351623535156
    5. ' range' → logprob: -4.346351623535156
    6. ' L' → logprob: -7.471351623535156
    7. 'y' → logprob: -8.596351623535156
    8. '(y' → logprob: -9.346351623535156
    9. ' y' → logprob: -10.221351623535156
    10. '(' → logprob: -10.471351623535156

Token 1288: '(L' (ID: 11075)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.4742657542228699
    2. '(L' → logprob: -0.9742657542228699
    3. 'range' → logprob: -8.974266052246094
    4. ' L' → logprob: -10.599266052246094
    5. '0' → logprob: -10.849266052246094
    6. '[L' → logprob: -11.724266052246094
    7. 'x' → logprob: -12.474266052246094
    8. ' range' → logprob: -13.849266052246094
    9. '	L' → logprob: -13.849266052246094
    10. '   ' → logprob: -14.474266052246094

Token 1289: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.023831630125641823
    2. ' +' → logprob: -3.773831605911255
    3. '1' → logprob: -7.648831844329834
    4. '```' → logprob: -9.398831367492676
    5. '   ' → logprob: -12.273831367492676
    6. 'L' → logprob: -12.273831367492676
    7. ' ' → logprob: -12.898831367492676
    8. '(' → logprob: -13.148831367492676
    9. '       ' → logprob: -13.148831367492676
    10. '[' → logprob: -13.148831367492676

Token 1290: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002444125711917877
    2. 'L' → logprob: -8.625244140625
    3. ' ' → logprob: -10.000244140625
    4. '0' → logprob: -11.875244140625
    5. 'x' → logprob: -12.125244140625
    6. '10' → logprob: -12.500244140625
    7. '```' → logprob: -14.500244140625
    8. '2' → logprob: -15.000244140625
    9. '5' → logprob: -15.000244140625
    10. '100' → logprob: -15.125244140625

Token 1291: '1' (ID: 16)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.1814369410276413
    2. '1' → logprob: -1.8064368963241577
    3. 'x' → logprob: -6.431437015533447
    4. '+' → logprob: -11.306436538696289
    5. ' L' → logprob: -11.556436538696289
    6. '0' → logprob: -11.556436538696289
    7. '10' → logprob: -11.806436538696289
    8. '(L' → logprob: -12.056436538696289
    9. '```' → logprob: -12.056436538696289
    10. '6' → logprob: -12.681436538696289

Token 1292: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.014922459609806538
    2. ':
' → logprob: -4.764922618865967
    3. '           ' → logprob: -5.764922618865967
    4. '       ' → logprob: -6.014922618865967
    5. ':' → logprob: -8.389922142028809
    6. '):' → logprob: -8.889922142028809
    7. '```' → logprob: -9.514922142028809
    8. ',' → logprob: -9.889922142028809
    9. '():
' → logprob: -10.014922142028809
    10. ''):
' → logprob: -10.139922142028809

Token 1293: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11481765657663345
    2. '```' → logprob: -2.4898176193237305
    3. 'for' → logprob: -3.9898176193237305
    4. '       ' → logprob: -5.1148176193237305
    5. ' for' → logprob: -7.1148176193237305
    6. '               ' → logprob: -8.73981761932373
    7. '``' → logprob: -10.36481761932373
    8. '		' → logprob: -11.48981761932373
    9. '                   ' → logprob: -12.36481761932373
    10. '   ' → logprob: -12.48981761932373

Token 1294: ' if' (ID: 538)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0017192080849781632
    2. '```' → logprob: -7.001718997955322
    3. ' for' → logprob: -7.751718997955322
    4. '           ' → logprob: -8.12671947479248
    5. '               ' → logprob: -9.62671947479248
    6. '       ' → logprob: -11.37671947479248
    7. '``' → logprob: -13.12671947479248
    8. '	for' → logprob: -13.25171947479248
    9. '[' → logprob: -14.87671947479248
    10. '   ' → logprob: -15.62671947479248

Token 1295: ' loop' (ID: 11453)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.27798834443092346
    2. 'loop' → logprob: -1.527988314628601
    3. ' not' → logprob: -4.152988433837891
    4. ' loop' → logprob: -4.652988433837891
    5. '(loop' → logprob: -8.15298843383789
    6. '   ' → logprob: -9.40298843383789
    7. '(not' → logprob: -10.02798843383789
    8. '```' → logprob: -11.27798843383789
    9. '!' → logprob: -12.21548843383789
    10. '       ' → logprob: -12.40298843383789

Token 1296: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.10030069202184677
    2. '(y' → logprob: -2.3503007888793945
    3. '(' → logprob: -10.100300788879395
    4. 'x' → logprob: -10.100300788879395
    5. 'y' → logprob: -11.725300788879395
    6. '           ' → logprob: -13.850300788879395
    7. '```' → logprob: -13.850300788879395
    8. '(
' → logprob: -14.725300788879395
    9. ')' → logprob: -14.850300788879395
    10. ' (' → logprob: -14.975300788879395

Token 1297: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07576990127563477
    2. ',y' → logprob: -3.2007699012756348
    3. '+' → logprob: -4.200769901275635
    4. ')' → logprob: -5.200769901275635
    5. ' +' → logprob: -5.450769901275635
    6. '):
' → logprob: -5.950769901275635
    7. ' ,' → logprob: -6.825769901275635
    8. '           ' → logprob: -6.950769901275635
    9. ')==' → logprob: -7.200769901275635
    10. '       ' → logprob: -7.575769901275635

Token 1298: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -4.1318875446449965e-05
    2. ' y' → logprob: -10.125041007995605
    3. '           ' → logprob: -13.875041007995605
    4. 'x' → logprob: -17.125041961669922
    5. '       ' → logprob: -17.125041961669922
    6. '   ' → logprob: -17.250041961669922
    7. 'K' → logprob: -17.750041961669922
    8. '          ' → logprob: -18.250041961669922
    9. ')' → logprob: -18.750041961669922
    10. '0' → logprob: -18.875041961669922

Token 1299: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.10116975754499435
    2. '):' → logprob: -2.4761698246002197
    3. ')' → logprob: -4.726169586181641
    4. '               ' → logprob: -6.726169586181641
    5. '           ' → logprob: -6.726169586181641
    6. ')==' → logprob: -8.60116958618164
    7. '                   ' → logprob: -8.85116958618164
    8. '):
' → logprob: -9.10116958618164
    9. 'continue' → logprob: -9.22616958618164
    10. '==' → logprob: -9.60116958618164

Token 1300: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0012121411273255944
    2. '```' → logprob: -6.876212120056152
    3. 'for' → logprob: -9.501212120056152
    4. '       ' → logprob: -9.876212120056152
    5. ' for' → logprob: -11.001212120056152
    6. '                   ' → logprob: -11.251212120056152
    7. '           ' → logprob: -11.376212120056152
    8. '``' → logprob: -12.251212120056152
    9. '                       ' → logprob: -12.501212120056152
    10. '			' → logprob: -13.876212120056152

Token 1301: ' continue' (ID: 4901)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.08052003383636475
    2. 'continue' (adapté à ' continue') → logprob: -2.5805201530456543
    3. ' continue' → logprob: -7.080520153045654
    4. '```' → logprob: -7.580520153045654
    5. '   ' → logprob: -9.580519676208496
    6. '           ' → logprob: -9.705519676208496
    7. '	continue' → logprob: -9.705519676208496
    8. '       ' → logprob: -10.080519676208496
    9. '			' → logprob: -11.080519676208496
    10. '                   ' → logprob: -11.330519676208496

Token 1302: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0286184549331665
    2. '               ' → logprob: -1.1536184549331665
    3. '           ' → logprob: -1.9036184549331665
    4. '```' → logprob: -2.028618335723877
    5. '       ' → logprob: -3.278618335723877
    6. ' for' → logprob: -4.903618335723877
    7. '   ' → logprob: -7.028618335723877
    8. '``' → logprob: -8.278618812561035
    9. '	for' → logprob: -9.278618812561035
    10. '                   ' → logprob: -9.778618812561035

Token 1303: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12950804829597473
    2. '       ' → logprob: -2.3795080184936523
    3. '```' → logprob: -3.6295080184936523
    4. '               ' → logprob: -6.879508018493652
    5. 'for' → logprob: -7.004508018493652
    6. '   ' → logprob: -8.754508018493652
    7. ' for' → logprob: -9.004508018493652
    8. '``' → logprob: -9.254508018493652
    9. '	       ' → logprob: -11.629508018493652
    10. '		' → logprob: -11.754508018493652

Token 1304: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2858373820781708
    2. 'for' (adapté à ' for') → logprob: -1.5358374118804932
    3. '           ' → logprob: -3.785837411880493
    4. ' for' → logprob: -4.910837173461914
    5. '               ' → logprob: -6.535837173461914
    6. '   ' → logprob: -6.535837173461914
    7. '	for' → logprob: -8.285837173461914
    8. ' ' → logprob: -9.785837173461914
    9. '```' → logprob: -10.160837173461914
    10. '	       ' → logprob: -11.160837173461914

Token 1305: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -5.860340752406046e-05
    2. ' z' → logprob: -9.7500581741333
    3. 'zz' → logprob: -16.125059127807617
    4. '   ' → logprob: -16.375059127807617
    5. '	z' → logprob: -17.125059127807617
    6. '```' → logprob: -17.750059127807617
    7. '[z' → logprob: -18.625059127807617
    8. '       ' → logprob: -18.875059127807617
    9. '           ' → logprob: -19.625059127807617
    10. '_z' → logprob: -20.500059127807617

Token 1306: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.2014167606830597
    2. ' in' → logprob: -1.7014167308807373
    3. '0' → logprob: -13.576416969299316
    4. 'range' → logprob: -13.826416969299316
    5. '```' → logprob: -14.451416969299316
    6. 'z' → logprob: -15.701416969299316
    7. ' ' → logprob: -15.826416969299316
    8. '	in' → logprob: -16.576416015625
    9. 'x' → logprob: -16.951416015625
    10. '   ' → logprob: -16.951416015625

Token 1307: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0016655426006764174
    2. 'in' → logprob: -6.5016655921936035
    3. ' range' → logprob: -8.751665115356445
    4. ' in' → logprob: -12.251665115356445
    5. '0' → logprob: -15.626665115356445
    6. '(range' → logprob: -17.251665115356445
    7. 'z' → logprob: -18.626665115356445
    8. '
' → logprob: -19.376665115356445
    9. '	range' → logprob: -20.126665115356445
    10. '   ' → logprob: -20.126665115356445

Token 1308: '(max' (ID: 17178)
  Prédit: '(max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.36431336402893066
    2. '(L' → logprob: -1.3643133640289307
    3. '(z' → logprob: -3.8643133640289307
    4. 'max' → logprob: -4.114313125610352
    5. '(y' → logprob: -4.489313125610352
    6. '(' → logprob: -7.739313125610352
    7. 'L' → logprob: -7.864313125610352
    8. '(x' → logprob: -8.739313125610352
    9. 'z' → logprob: -9.364313125610352
    10. '[max' → logprob: -9.864313125610352

Token 1309: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.048648566007614136
    2. '(y' → logprob: -3.0486485958099365
    3. 'x' → logprob: -10.048648834228516
    4. 'y' → logprob: -11.048648834228516
    5. '(' → logprob: -13.423648834228516
    6. '(
' → logprob: -15.548648834228516
    7. '(z' → logprob: -16.423648834228516
    8. '(L' → logprob: -16.423648834228516
    9. 'L' → logprob: -16.548648834228516
    10. '```' → logprob: -17.298648834228516

Token 1310: ',' (ID: 11)
  Prédit: '(y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -0.19438481330871582
    2. ',' → logprob: -1.8193848133087158
    3. 'y' → logprob: -4.819384574890137
    4. ',y' → logprob: -5.444384574890137
    5. '(x' → logprob: -6.819384574890137
    6. '[y' → logprob: -7.944384574890137
    7. '(' → logprob: -8.194384574890137
    8. '+' → logprob: -8.569384574890137
    9. '```' → logprob: -9.444384574890137
    10. 'L' → logprob: -10.694384574890137

Token 1311: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.00011558275582501665
    2. ' y' → logprob: -9.375115394592285
    3. 'L' → logprob: -10.500115394592285
    4. 'x' → logprob: -13.625115394592285
    5. '   ' → logprob: -14.125115394592285
    6. '```' → logprob: -14.500115394592285
    7. ''y' → logprob: -16.0001163482666
    8. '(y' → logprob: -16.1251163482666
    9. ' ' → logprob: -16.7501163482666
    10. ')' → logprob: -16.8751163482666

Token 1312: ')' (ID: 8)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1312858611345291
    2. ' +' → logprob: -2.1312859058380127
    3. ',' → logprob: -5.881285667419434
    4. ')+' → logprob: -7.381285667419434
    5. ')' → logprob: -8.131285667419434
    6. '```' → logprob: -8.631285667419434
    7. ']+' → logprob: -8.881285667419434
    8. '[z' → logprob: -9.006285667419434
    9. '           ' → logprob: -9.256285667419434
    10. '[' → logprob: -10.631285667419434

Token 1313: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.031957387924194336
    2. ' +' → logprob: -3.5319573879241943
    3. ',' → logprob: -6.281957626342773
    4. '```' → logprob: -9.031957626342773
    5. '(L' → logprob: -10.031957626342773
    6. '[L' → logprob: -10.531957626342773
    7. '(z' → logprob: -10.656957626342773
    8. '           ' → logprob: -10.781957626342773
    9. '[z' → logprob: -10.906957626342773
    10. '[' → logprob: -10.906957626342773

Token 1314: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.054500666621607e-06
    2. ' ' → logprob: -12.87500286102295
    3. '```' → logprob: -14.50000286102295
    4. '2' → logprob: -17.500003814697266
    5. '0' → logprob: -18.375003814697266
    6. ',' → logprob: -18.500003814697266
    7. '   ' → logprob: -18.750003814697266
    8. '
' → logprob: -18.750003814697266
    9. '           ' → logprob: -19.750003814697266
    10. '                               ' → logprob: -19.812503814697266

Token 1315: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.981667537620524e-06
    2. ' ' → logprob: -14.375001907348633
    3. '```' → logprob: -14.625001907348633
    4. '(' → logprob: -15.250001907348633
    5. ',' → logprob: -15.500001907348633
    6. '0' → logprob: -15.750001907348633
    7. '2' → logprob: -16.062501907348633
    8. '
' → logprob: -17.312501907348633
    9. '{' → logprob: -17.312501907348633
    10. 'z' → logprob: -17.562501907348633

Token 1316: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004108924185857177
    2. ' ,' → logprob: -8.500411033630371
    3. ',L' → logprob: -8.750411033630371
    4. ',
' → logprob: -11.000411033630371
    5. '```' → logprob: -11.375411033630371
    6. '           ' → logprob: -11.500411033630371
    7. '                   ' → logprob: -12.875411033630371
    8. '               ' → logprob: -13.500411033630371
    9. '       ' → logprob: -13.500411033630371
    10. ',Z' → logprob: -13.625411033630371

Token 1317: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -7.314625690924004e-05
    2. ' L' → logprob: -9.750073432922363
    3. '(L' → logprob: -11.125073432922363
    4. '[L' → logprob: -17.500072479248047
    5. '	L' → logprob: -18.375072479248047
    6. '```' → logprob: -19.875072479248047
    7. ' (' → logprob: -20.250072479248047
    8. '           ' → logprob: -20.500072479248047
    9. '"L' → logprob: -20.875072479248047
    10. '                   ' → logprob: -21.000072479248047

Token 1318: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3136916160583496
    2. ' +' → logprob: -1.3136916160583496
    3. '1' → logprob: -8.313692092895508
    4. '[' → logprob: -9.313692092895508
    5. '```' → logprob: -9.563692092895508
    6. '           ' → logprob: -11.563692092895508
    7. '(' → logprob: -12.063692092895508
    8. ',' → logprob: -13.063692092895508
    9. ')' → logprob: -13.313692092895508
    10. '{' → logprob: -13.688692092895508

Token 1319: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003646280150860548
    2. '+' → logprob: -6.628646373748779
    3. '```' → logprob: -6.878646373748779
    4. ' ' → logprob: -7.378646373748779
    5. '11' → logprob: -8.378645896911621
    6. '(' → logprob: -8.503645896911621
    7. 'L' → logprob: -9.003645896911621
    8. '[' → logprob: -9.878645896911621
    9. ' +' → logprob: -12.003645896911621
    10. '2' → logprob: -12.003645896911621

Token 1320: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00011474833445390686
    2. '(L' → logprob: -9.375114440917969
    3. '(' → logprob: -10.500114440917969
    4. 'L' → logprob: -13.625114440917969
    5. ' ' → logprob: -14.375114440917969
    6. ')' → logprob: -15.125114440917969
    7. '+' → logprob: -15.875114440917969
    8. '```' → logprob: -16.37511444091797
    9. ' (' → logprob: -17.50011444091797
    10. '   ' → logprob: -17.62511444091797

Token 1321: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.00710510928183794
    2. '):' → logprob: -5.132104873657227
    3. ':
' → logprob: -7.632104873657227
    4. ':' → logprob: -8.632104873657227
    5. '               ' → logprob: -8.632104873657227
    6. '           ' → logprob: -9.007104873657227
    7. ']:
' → logprob: -9.632104873657227
    8. '```' → logprob: -10.007104873657227
    9. '):
' → logprob: -10.132104873657227
    10. '       ' → logprob: -11.132104873657227

Token 1322: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.09924004971981049
    2. 'ret' → logprob: -2.5992400646209717
    3. '```' → logprob: -4.224239826202393
    4. ' ret' → logprob: -5.474239826202393
    5. '                   ' → logprob: -7.474239826202393
    6. '                       ' → logprob: -8.34924030303955
    7. '``' → logprob: -8.47424030303955
    8. '           ' → logprob: -9.59924030303955
    9. '                               ' → logprob: -9.97424030303955
    10. '(ret' → logprob: -10.09924030303955

Token 1323: ' ret' (ID: 2881)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ret' (adapté à ' ret') → logprob: -0.006424155551940203
    2. '               ' → logprob: -5.2564239501953125
    3. ' ret' → logprob: -6.8814239501953125
    4. '                   ' → logprob: -9.006423950195312
    5. '           ' → logprob: -10.756423950195312
    6. '                       ' → logprob: -12.631423950195312
    7. '```' → logprob: -12.631423950195312
    8. '       ' → logprob: -12.881423950195312
    9. '(ret' → logprob: -13.006423950195312
    10. '   ' → logprob: -13.131423950195312

Token 1324: ' =' (ID: 314)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.10281795263290405
    2. '=' → logprob: -2.352818012237549
    3. ' +=' → logprob: -5.977818012237549
    4. ']+=' → logprob: -10.35281753540039
    5. '```' → logprob: -10.85281753540039
    6. ' =' → logprob: -11.10281753540039
    7. '+' → logprob: -12.72781753540039
    8. '+=(' → logprob: -13.47781753540039
    9. '   ' → logprob: -14.22781753540039
    10. '%=' → logprob: -14.47781753540039

Token 1325: ' (' (ID: 350)
  Prédit: '(ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ret' → logprob: -0.0011955865193158388
    2. ' (' → logprob: -6.751195430755615
    3. '(rest' → logprob: -11.001195907592773
    4. '(' → logprob: -12.376195907592773
    5. '(res' → logprob: -14.251195907592773
    6. '   ' → logprob: -14.376195907592773
    7. '(dp' → logprob: -14.501195907592773
    8. '(re' → logprob: -14.501195907592773
    9. '(resp' → logprob: -15.376195907592773
    10. '(rep' → logprob: -15.376195907592773

Token 1326: 'ret' (ID: 3431)
  Prédit: 'ret'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ret' → logprob: -0.0007112398743629456
    2. '(ret' → logprob: -7.250711441040039
    3. ' ret' → logprob: -13.625711441040039
    4. '$ret' → logprob: -16.75071144104004
    5. 'rett' → logprob: -18.00071144104004
    6. 'rets' → logprob: -18.62571144104004
    7. '_ret' → logprob: -19.50071144104004
    8. 'res' → logprob: -20.00071144104004
    9. '	ret' → logprob: -20.00071144104004
    10. 'RET' → logprob: -20.12571144104004

Token 1327: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.010458610020577908
    2. '(ret' → logprob: -5.260458469390869
    3. ' +' → logprob: -5.385458469390869
    4. 'ret' → logprob: -7.385458469390869
    5. '$ret' → logprob: -12.635458946228027
    6. ' ret' → logprob: -13.260458946228027
    7. '(' → logprob: -13.635458946228027
    8. '_ret' → logprob: -14.135458946228027
    9. '
' → logprob: -14.885458946228027
    10. '```' → logprob: -15.635458946228027

Token 1328: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.00016086915275081992
    2. ' dp' → logprob: -8.750161170959473
    3. 'ret' → logprob: -13.000161170959473
    4. '(dp' → logprob: -16.375160217285156
    5. '	dp' → logprob: -18.625160217285156
    6. ' ret' → logprob: -19.500160217285156
    7. '_dp' → logprob: -20.250160217285156
    8. '   ' → logprob: -20.250160217285156
    9. '           ' → logprob: -20.875160217285156
    10. '               ' → logprob: -20.875160217285156

Token 1329: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.088346359931165e-07
    2. '[x' → logprob: -14.125000953674316
    3. '```' → logprob: -16.625
    4. 'x' → logprob: -17.25
    5. '<x' → logprob: -17.75
    6. '(x' → logprob: -18.0
    7. ' ' → logprob: -18.25
    8. '۰' → logprob: -18.625
    9. '​' → logprob: -19.0
    10. 'o' → logprob: -19.25

Token 1330: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.0008058178937062621
    2. 'x' → logprob: -7.125805854797363
    3. '```' → logprob: -14.250805854797363
    4. '[
' → logprob: -15.000805854797363
    5. '[' → logprob: -15.625805854797363
    6. '{x' → logprob: -16.500804901123047
    7. '(x' → logprob: -17.875804901123047
    8. '<x' → logprob: -18.375804901123047
    9. '\[' → logprob: -18.375804901123047
    10. '
' → logprob: -18.500804901123047

Token 1331: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -2.1008713702030946e-06
    2. '[y' → logprob: -14.000001907348633
    3. ']' → logprob: -14.125001907348633
    4. ' ][' → logprob: -15.375001907348633
    5. '"][' → logprob: -16.875001907348633
    6. 'y' → logprob: -17.000001907348633
    7. '   ' → logprob: -17.250001907348633
    8. '[' → logprob: -17.250001907348633
    9. ']
' → logprob: -17.750001907348633
    10. ']][' → logprob: -17.750001907348633

Token 1332: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -3.173704271830502e-06
    2. ' y' → logprob: -12.75000286102295
    3. '[y' → logprob: -16.875003814697266
    4. '   ' → logprob: -17.000003814697266
    5. 'x' → logprob: -17.875003814697266
    6. ''y' → logprob: -18.125003814697266
    7. '<|end|>' → logprob: -18.125003814697266
    8. '	y' → logprob: -18.125003814697266
    9. ' ' → logprob: -18.500003814697266
    10. ',y' → logprob: -18.500003814697266

Token 1333: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.004628888331353664
    2. '[z' → logprob: -5.379628658294678
    3. 'z' → logprob: -12.254629135131836
    4. ']' → logprob: -13.629629135131836
    5. ' ][' → logprob: -14.254629135131836
    6. '[' → logprob: -14.504629135131836
    7. '[x' → logprob: -14.629629135131836
    8. ''][' → logprob: -15.504629135131836
    9. '"][' → logprob: -15.629629135131836
    10. ']][' → logprob: -15.879629135131836

Token 1334: 'z' (ID: 89)
  Prédit: 'z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -6.511406809295295e-06
    2. '[z' → logprob: -12.000006675720215
    3. ' z' → logprob: -15.500006675720215
    4. '	z' → logprob: -16.2500057220459
    5. '][' → logprob: -18.0000057220459
    6. ''z' → logprob: -18.7500057220459
    7. '   ' → logprob: -19.1250057220459
    8. '```' → logprob: -19.1250057220459
    9. '[' → logprob: -20.2500057220459
    10. 'x' → logprob: -20.5000057220459

Token 1335: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07937737554311752
    2. '])' → logprob: -2.5793774127960205
    3. ']' → logprob: -7.704377174377441
    4. ')%' → logprob: -11.329377174377441
    5. '                   ' → logprob: -12.454377174377441
    6. ' )' → logprob: -12.579377174377441
    7. '           ' → logprob: -12.579377174377441
    8. '   ' → logprob: -12.704377174377441
    9. '）' → logprob: -13.079377174377441
    10. '               ' → logprob: -13.079377174377441

Token 1336: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.47415974736213684
    2. ' %' → logprob: -0.9741597175598145
    3. ')' → logprob: -9.849160194396973
    4. ')%' → logprob: -11.724160194396973
    5. '%c' → logprob: -12.099160194396973
    6. '```' → logprob: -12.349160194396973
    7. '%n' → logprob: -13.224160194396973
    8. '%d' → logprob: -13.224160194396973
    9. '%i' → logprob: -13.349160194396973
    10. '%x' → logprob: -13.724160194396973

Token 1337: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -6.704273118884885e-07
    2. ' M' → logprob: -14.250000953674316
    3. '```' → logprob: -19.25
    4. '(M' → logprob: -22.125
    5. '
' → logprob: -23.5
    6. '`' → logprob: -24.375
    7. 'М' → logprob: -24.5
    8. '	M' → logprob: -24.625
    9. '``' → logprob: -24.875
    10. '   ' → logprob: -24.875

Token 1338: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.011202372610569
    2. '
' → logprob: -4.511202335357666
    3. '   ' → logprob: -9.761202812194824
    4. '```' → logprob: -9.886202812194824
    5. ' print' → logprob: -10.886202812194824
    6. '    
' → logprob: -11.386202812194824
    7. ')
' → logprob: -12.261202812194824
    8. '  
' → logprob: -12.636202812194824
    9. ')' → logprob: -12.761202812194824
    10. '``' → logprob: -13.511202812194824

Token 1339: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0015071245143190026
    2. '```' → logprob: -7.12650728225708
    3. '
' → logprob: -7.37650728225708
    4. '``' → logprob: -9.876506805419922
    5. ' print' → logprob: -11.251506805419922
    6. ')
' → logprob: -12.126506805419922
    7. '(print' → logprob: -13.626506805419922
    8. '"""
' → logprob: -13.626506805419922
    9. ')' → logprob: -13.751506805419922
    10. '[' → logprob: -14.501506805419922

Token 1340: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -1.688212614681106e-05
    2. '```' → logprob: -11.000017166137695
    3. ' print' → logprob: -16.375017166137695
    4. '``' → logprob: -16.875017166137695
    5. '
' → logprob: -17.125017166137695
    6. '   ' → logprob: -18.125017166137695
    7. '    
' → logprob: -21.000017166137695
    8. '(print' → logprob: -22.375017166137695
    9. '	print' → logprob: -22.750017166137695
    10. '#print' → logprob: -22.875017166137695

Token 1341: '(ret' (ID: 35317)
  Prédit: '(ret'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ret' → logprob: -3.7697225252486533e-06
    2. '(' → logprob: -12.625003814697266
    3. 'ret' → logprob: -15.000003814697266
    4. ' (' → logprob: -17.125003814697266
    5. '(rest' → logprob: -17.625003814697266
    6. '$ret' → logprob: -17.750003814697266
    7. '(res' → logprob: -18.000003814697266
    8. '(re' → logprob: -18.125003814697266
    9. '(return' → logprob: -18.375003814697266
    10. '(rep' → logprob: -19.000003814697266

Token 1342: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.512236498361744e-07
    2. ' )' → logprob: -15.500000953674316
    3. ')
' → logprob: -16.375
    4. '))' → logprob: -16.5
    5. '())' → logprob: -17.5
    6. '```' → logprob: -18.0
    7. ')`' → logprob: -18.25
    8. ')}' → logprob: -18.5
    9. '})' → logprob: -18.625
    10. '),' → logprob: -18.625


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1340
Tokens correctement prédits (1ère position, stricte): 383
Tokens correctement prédits (1ère position, avec adaptation): 421
Tokens correctement prédits (top 10): 926
Précision stricte (1ère position): 28.58%
Précision adaptée (1ère position): 31.42%
Précision (top 10): 69.10%
================================================================================
