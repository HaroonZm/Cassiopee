================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:06:12
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
A,B,K = map(int, input().split())
def f(lst):
    res = []
    for i in range(lst[2]):
        if not i % 2:
            lst[1] += lst[0] // 2
            lst[0] //= 2
        else:
            lst[0] += lst[1] // 2
            lst[1] //= 2
        res.append((lst[0], lst[1]))
    return lst[0], lst[1]
class Printer:
    def __init__(self, vals):
        pass
    def p(self, vals):
        print(vals[0], vals[1])
vals = [A,B,K]
x,y = f(vals)
Printer((x, y)).p((x, y))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'A' (ID: 32)
  → Token d'amorce (pas de prédiction)

Token 1: ',B' (ID: 19853)
  → Token d'amorce (pas de prédiction)

Token 2: ',K' (ID: 107147)
  → Token d'amorce (pas de prédiction)

Token 3: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.09015921503305435
    2. ',' → logprob: -2.9651591777801514
    3. ' =' → logprob: -3.8401591777801514
    4. ';' → logprob: -5.5901594161987305
    5. '.' → logprob: -5.9651594161987305
    6. ')' → logprob: -6.3401594161987305
    7. '<|end|>' → logprob: -6.3401594161987305
    8. '[' → logprob: -6.8401594161987305
    9. '+' → logprob: -7.2151594161987305
    10. '```' → logprob: -8.21515941619873

Token 4: ' map' (ID: 4014)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9014537930488586
    2. ' []' → logprob: -1.9014537334442139
    3. ' map' → logprob: -2.151453733444214
    4. '0' → logprob: -2.776453733444214
    5. ' [],' → logprob: -2.776453733444214
    6. '[]' → logprob: -3.026453733444214
    7. 'map' → logprob: -3.151453733444214
    8. ' [' → logprob: -3.401453733444214
    9. ' input' → logprob: -3.776453733444214
    10. 'input' → logprob: -4.151453971862793

Token 5: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.45918217301368713
    2. '<|end|>' → logprob: -1.2091821432113647
    3. '(lambda' → logprob: -2.8341822624206543
    4. '```' → logprob: -5.709182262420654
    5. '<|end|>' → logprob: -5.959182262420654
    6. ')' → logprob: -6.084182262420654
    7. '(user' → logprob: -7.959182262420654
    8. '(int' → logprob: -8.834181785583496
    9. '(token' → logprob: -9.084181785583496
    10. '("("' → logprob: -9.271681785583496

Token 6: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06702810525894165
    2. '(input' → logprob: -3.317028045654297
    3. '(' → logprob: -4.442028045654297
    4. '`)' → logprob: -5.317028045654297
    5. '<|end|>' → logprob: -5.692028045654297
    6. '```' → logprob: -6.317028045654297
    7. ')(' → logprob: -6.817028045654297
    8. '(user' → logprob: -7.442028045654297
    9. '`' → logprob: -7.567028045654297
    10. '<|end|>' → logprob: -8.067028045654297

Token 7: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.00535968691110611
    2. ' input' → logprob: -5.255359649658203
    3. '(input' → logprob: -9.005359649658203
    4. ')' → logprob: -13.630359649658203
    5. ',input' → logprob: -13.630359649658203
    6. '=input' → logprob: -15.130359649658203
    7. ' ' → logprob: -15.880359649658203
    8. '```' → logprob: -16.380359649658203
    9. '<input' → logprob: -16.505359649658203
    10. '	input' → logprob: -16.755359649658203

Token 8: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.9844074845314026
    2. ')' → logprob: -0.9844074845314026
    3. '()' → logprob: -2.359407424926758
    4. '())' → logprob: -2.359407424926758
    5. '(""))' → logprob: -3.859407424926758
    6. '("")' → logprob: -4.734407424926758
    7. '`()' → logprob: -5.109407424926758
    8. '(()' → logprob: -5.484407424926758
    9. '```' → logprob: -5.484407424926758
    10. '('' → logprob: -5.484407424926758

Token 9: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0004362718027550727
    2. 'strip' → logprob: -7.750436305999756
    3. 'rstrip' → logprob: -12.875435829162598
    4. ' split' → logprob: -13.375435829162598
    5. ')' → logprob: -13.750435829162598
    6. 'spl' → logprob: -15.500435829162598
    7. '(split' → logprob: -16.000436782836914
    8. 'replace' → logprob: -16.125436782836914
    9. 's' → logprob: -17.000436782836914
    10. 'read' → logprob: -17.125436782836914

Token 10: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06497719138860703
    2. '())' → logprob: -2.8149771690368652
    3. '))' → logprob: -6.439977169036865
    4. '()' → logprob: -6.814977169036865
    5. '`)' → logprob: -8.689977645874023
    6. '(' → logprob: -9.564977645874023
    7. '()))' → logprob: -10.439977645874023
    8. ' )' → logprob: -11.689977645874023
    9. ')`' → logprob: -11.939977645874023
    10. '')' → logprob: -12.439977645874023

Token 11: 'def' (ID: 1314)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8307686448097229
    2. 'i' → logprob: -1.8307685852050781
    3. '#' → logprob: -2.580768585205078
    4. 'c' → logprob: -3.080768585205078
    5. 'x' → logprob: -3.080768585205078
    6. 'for' → logprob: -3.580768585205078
    7. 'a' → logprob: -3.705768585205078
    8. '
' → logprob: -3.705768585205078
    9. '*' → logprob: -3.830768585205078
    10. '\n' → logprob: -3.830768585205078

Token 12: ' f' (ID: 285)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.24484564363956451
    2. ' factorial' → logprob: -3.1198456287384033
    3. ' my' → logprob: -3.4948456287384033
    4. ' f' → logprob: -3.6198456287384033
    5. ' space' → logprob: -3.8698456287384033
    6. ' func' → logprob: -4.244845867156982
    7. ' solution' → logprob: -4.494845867156982
    8. ' calculate' → logprob: -4.619845867156982
    9. ' max' → logprob: -4.869845867156982
    10. ' function' → logprob: -4.869845867156982

Token 13: '(lst' (ID: 95688)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0032463972456753254
    2. 'u' → logprob: -6.128246307373047
    3. '(u' → logprob: -7.128246307373047
    4. '_' → logprob: -9.753246307373047
    5. '(a' → logprob: -9.753246307373047
    6. '(x' → logprob: -10.628246307373047
    7. 'o' → logprob: -11.003246307373047
    8. 'unction' → logprob: -11.003246307373047
    9. '```' → logprob: -11.253246307373047
    10. '(n' → logprob: -11.503246307373047

Token 14: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.35092905163764954
    2. ')' → logprob: -1.3509290218353271
    3. '[' → logprob: -3.350929021835327
    4. '(' → logprob: -6.850929260253906
    5. ',' → logprob: -7.600929260253906
    6. '[]):' → logprob: -9.100929260253906
    7. ':' → logprob: -9.725929260253906
    8. '):
' → logprob: -10.475929260253906
    9. ' ):' → logprob: -11.350929260253906
    10. ')):' → logprob: -11.475929260253906

Token 15: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016469839960336685
    2. ' ' → logprob: -5.516469955444336
    3. '    ' → logprob: -5.641469955444336
    4. ' return' → logprob: -6.141469955444336
    5. '    
' → logprob: -6.266469955444336
    6. ' for' → logprob: -6.766469955444336
    7. ' if' → logprob: -7.391469955444336
    8. '```' → logprob: -7.516469955444336
    9. '\t' → logprob: -7.641469955444336
    10. ' 
' → logprob: -8.266469955444336

Token 16: ' res' (ID: 694)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.3251817226409912
    2. ' return' → logprob: -1.4501817226409912
    3. 'r' → logprob: -1.9501817226409912
    4. ' ' → logprob: -2.075181722640991
    5. 'n' → logprob: -2.825181722640991
    6. ' n' → logprob: -3.450181722640991
    7. ' r' → logprob: -3.700181722640991
    8. 'return' → logprob: -4.07518196105957
    9. ' if' → logprob: -4.32518196105957
    10. '    ' → logprob: -4.70018196105957

Token 17: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.013037985190749168
    2. '=' → logprob: -4.388038158416748
    3. ' +=' → logprob: -8.88803768157959
    4. ' ' → logprob: -9.26303768157959
    5. '=[]' → logprob: -9.26303768157959
    6. '.' → logprob: -10.26303768157959
    7. '.append' → logprob: -10.38803768157959
    8. ')' → logprob: -10.76303768157959
    9. ',' → logprob: -10.88803768157959
    10. '_' → logprob: -10.88803768157959

Token 18: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.6260421872138977
    2. '0' → logprob: -1.501042127609253
    3. ' []' → logprob: -1.501042127609253
    4. ' ' → logprob: -4.001042366027832
    5. '[' → logprob: -7.376042366027832
    6. 'lst' → logprob: -8.626042366027832
    7. ' [' → logprob: -8.751042366027832
    8. 'sum' → logprob: -9.251042366027832
    9. ' lst' → logprob: -10.376042366027832
    10. '[len' → logprob: -10.501042366027832

Token 19: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3169843852519989
    2. ' for' → logprob: -1.6919844150543213
    3. '    ' → logprob: -3.3169844150543213
    4. 'for' → logprob: -3.6919844150543213
    5. '     
' → logprob: -4.566984176635742
    6. '    
' → logprob: -4.941984176635742
    7. ' ' → logprob: -5.566984176635742
    8. '```' → logprob: -6.941984176635742
    9. ' 
' → logprob: -7.191984176635742
    10. '
' → logprob: -7.191984176635742

Token 20: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.14296512305736542
    2. ' for' → logprob: -2.142965078353882
    3. '   ' → logprob: -4.142965316772461
    4. ' ' → logprob: -10.642965316772461
    5. '```' → logprob: -11.892965316772461
    6. 'i' → logprob: -14.267965316772461
    7. '``' → logprob: -14.642965316772461
    8. '  ' → logprob: -15.142965316772461
    9. '    ' → logprob: -15.392965316772461
    10. 'n' → logprob: -15.642965316772461

Token 21: ' i' (ID: 575)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.3810199201107025
    2. ' i' → logprob: -1.381019949913025
    3. 'x' → logprob: -3.2560198307037354
    4. ' ' → logprob: -4.3810200691223145
    5. 'i' → logprob: -5.0060200691223145
    6. ' item' → logprob: -6.1310200691223145
    7. ' num' → logprob: -7.0060200691223145
    8. ' val' → logprob: -7.1310200691223145
    9. '_' → logprob: -7.1310200691223145
    10. ' lst' → logprob: -7.3810200691223145

Token 22: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1159057766199112
    2. 'in' → logprob: -2.24090576171875
    3. 'n' → logprob: -6.24090576171875
    4. ' ' → logprob: -7.11590576171875
    5. ',' → logprob: -8.74090576171875
    6. '  ' → logprob: -9.99090576171875
    7. ' n' → logprob: -10.24090576171875
    8. '	in' → logprob: -10.99090576171875
    9. '   ' → logprob: -10.99090576171875
    10. '_' → logprob: -11.74090576171875

Token 23: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.6167873740196228
    2. ' range' → logprob: -0.9917873740196228
    3. 'lst' → logprob: -2.6167874336242676
    4. ' lst' → logprob: -4.116787433624268
    5. ' ' → logprob: -11.11678695678711
    6. '   ' → logprob: -11.11678695678711
    7. '	range' → logprob: -11.36678695678711
    8. ' xrange' → logprob: -11.86678695678711
    9. '```' → logprob: -12.24178695678711
    10. ')' → logprob: -12.67928695678711

Token 24: '(lst' (ID: 95688)
  Prédit: '(len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.05083540827035904
    2. '(' → logprob: -3.175835371017456
    3. '(A' → logprob: -4.925835609436035
    4. '(B' → logprob: -7.675835609436035
    5. '(K' → logprob: -10.425835609436035
    6. 'len' → logprob: -10.550835609436035
    7. '(l' → logprob: -12.050835609436035
    8. ' len' → logprob: -12.550835609436035
    9. '(i' → logprob: -12.800835609436035
    10. '(n' → logprob: -13.175835609436035

Token 25: '[' (ID: 58)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.24723149836063385
    2. '[' → logprob: -2.4972314834594727
    3. '.__' → logprob: -2.7472314834594727
    4. '   ' → logprob: -3.1222314834594727
    5. '[i' → logprob: -4.872231483459473
    6. '.' → logprob: -4.872231483459473
    7. '_len' → logprob: -6.622231483459473
    8. ').__' → logprob: -6.747231483459473
    9. '[len' → logprob: -6.872231483459473
    10. '))' → logprob: -6.997231483459473

Token 26: '2' (ID: 17)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.009088157676160336
    2. '1' → logprob: -4.884088039398193
    3. '])' → logprob: -7.509088039398193
    4. ' ' → logprob: -8.259088516235352
    5. '-' → logprob: -8.634088516235352
    6. 'i' → logprob: -9.384088516235352
    7. 'len' → logprob: -9.384088516235352
    8. ')' → logprob: -9.759088516235352
    9. '[' → logprob: -9.884088516235352
    10. ']' → logprob: -10.009088516235352

Token 27: ']):
' (ID: 51989)
  Prédit: ']):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']):' → logprob: -0.6955982446670532
    2. ']' → logprob: -0.8205982446670532
    3. ']+' → logprob: -3.0705981254577637
    4. '],' → logprob: -4.820598125457764
    5. '-' → logprob: -5.945598125457764
    6. '])' → logprob: -6.445598125457764
    7. ']-' → logprob: -6.820598125457764
    8. ']):
' → logprob: -7.820598125457764
    9. ' -' → logprob: -8.195598602294922
    10. ']:' → logprob: -8.945598602294922

Token 28: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12273150682449341
    2. '    ' → logprob: -2.8727314472198486
    3. '   ' → logprob: -3.9977314472198486
    4. 'res' → logprob: -4.247731685638428
    5. ' ' → logprob: -4.622731685638428
    6. '        
' → logprob: -5.622731685638428
    7. ' res' → logprob: -5.747731685638428
    8. '        ' → logprob: -5.997731685638428
    9. '     
' → logprob: -6.247731685638428
    10. ' 
' → logprob: -6.872731685638428

Token 29: ' if' (ID: 538)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.9256898760795593
    2. ' res' → logprob: -1.300689935684204
    3. ' if' → logprob: -1.925689935684204
    4. ' ' → logprob: -2.175689935684204
    5. 'if' (adapté à ' if') → logprob: -3.425689935684204
    6. '    ' → logprob: -4.550689697265625
    7. ' for' → logprob: -4.675689697265625
    8. 'for' → logprob: -5.550689697265625
    9. '        ' → logprob: -5.800689697265625
    10. '       ' → logprob: -6.425689697265625

Token 30: ' not' (ID: 625)
  Prédit: ' lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lst' → logprob: -0.02682303451001644
    2. 'lst' → logprob: -3.651823043823242
    3. ' i' → logprob: -8.151823043823242
    4. 'i' → logprob: -9.526823043823242
    5. '(lst' → logprob: -10.026823043823242
    6. ' A' → logprob: -10.651823043823242
    7. ' ' → logprob: -10.776823043823242
    8. ' (' → logprob: -11.276823043823242
    9. 'A' → logprob: -11.401823043823242
    10. ' abs' → logprob: -11.401823043823242

Token 31: ' i' (ID: 575)
  Prédit: ' lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lst' → logprob: -0.10204946994781494
    2. ' i' → logprob: -3.2270493507385254
    3. 'lst' → logprob: -3.4770493507385254
    4. ' (' → logprob: -4.727049350738525
    5. 'i' → logprob: -4.977049350738525
    6. '(i' → logprob: -5.602049350738525
    7. '(lst' → logprob: -5.727049350738525
    8. ' res' → logprob: -6.352049350738525
    9. '(' → logprob: -6.977049350738525
    10. ' len' → logprob: -8.477049827575684

Token 32: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.7002352476119995
    2. ' %' → logprob: -0.7002352476119995
    3. ' ' → logprob: -5.950235366821289
    4. 'n' → logprob: -6.325235366821289
    5. ' in' → logprob: -6.700235366821289
    6. '%n' → logprob: -7.825235366821289
    7. ' n' → logprob: -8.075235366821289
    8. '+' → logprob: -8.950235366821289
    9. 's' → logprob: -8.950235366821289
    10. '%A' → logprob: -9.325235366821289

Token 33: ' ' (ID: 220)
  Prédit: 'lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lst' → logprob: -0.18364030122756958
    2. '2' → logprob: -2.808640241622925
    3. 'K' → logprob: -3.058640241622925
    4. 'A' → logprob: -3.308640241622925
    5. ' lst' → logprob: -4.808640480041504
    6. '3' → logprob: -4.933640480041504
    7. 'B' → logprob: -5.558640480041504
    8. '4' → logprob: -7.183640480041504
    9. '(lst' → logprob: -7.183640480041504
    10. '(' → logprob: -7.558640480041504

Token 34: '2' (ID: 17)
  Prédit: 'lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lst' → logprob: -0.09966255724430084
    2. '2' → logprob: -3.4746625423431396
    3. 'A' → logprob: -3.5996625423431396
    4. 'K' → logprob: -3.9746625423431396
    5. '3' → logprob: -4.849662780761719
    6. 'B' → logprob: -5.099662780761719
    7. '(lst' → logprob: -6.599662780761719
    8. '(' → logprob: -7.099662780761719
    9. '1' → logprob: -8.224662780761719
    10. '4' → logprob: -8.349662780761719

Token 35: ':
' (ID: 734)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.2780997157096863
    2. ':' → logprob: -1.903099775314331
    3. ' ==' → logprob: -2.403099775314331
    4. '=' → logprob: -6.278099536895752
    5. ' :' → logprob: -7.153099536895752
    6. '):' → logprob: -8.65310001373291
    7. ' ' → logprob: -9.02810001373291
    8. '0' → logprob: -9.65310001373291
    9. ' =' → logprob: -9.77810001373291
    10. ')' → logprob: -10.27810001373291

Token 36: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4955119788646698
    2. ':' → logprob: -0.9955120086669922
    3. ' :' → logprob: -4.495512008666992
    4. ' ' → logprob: -6.120512008666992
    5. ' and' → logprob: -6.120512008666992
    6. '       ' → logprob: -6.370512008666992
    7. ':
' → logprob: -7.370512008666992
    8. ',' → logprob: -7.370512008666992
    9. '               ' → logprob: -7.745512008666992
    10. '<|end|>' → logprob: -8.120512008666992

Token 37: ' lst' (ID: 33384)
  Prédit: ' res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.20332762598991394
    2. 'res' → logprob: -1.7033276557922363
    3. '           ' → logprob: -7.328327655792236
    4. ' ' → logprob: -7.953327655792236
    5. ' if' → logprob: -8.453327178955078
    6. '            ' → logprob: -9.203327178955078
    7. 'if' → logprob: -9.328327178955078
    8. '       ' → logprob: -9.453327178955078
    9. ' for' → logprob: -9.703327178955078
    10. '        ' → logprob: -10.078327178955078

Token 38: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7059968113899231
    2. '[i' → logprob: -0.9559968113899231
    3. '[A' → logprob: -2.7059967517852783
    4. '.append' → logprob: -2.9559967517852783
    5. '[B' → logprob: -6.205996990203857
    6. '[K' → logprob: -8.0809965133667
    7. '[C' → logprob: -8.7059965133667
    8. '.' → logprob: -9.8309965133667
    9. '.insert' → logprob: -10.2059965133667
    10. '[I' → logprob: -10.2059965133667

Token 39: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10036927461624146
    2. '1' → logprob: -2.8503692150115967
    3. '2' → logprob: -3.9753692150115967
    4. 'i' → logprob: -3.9753692150115967
    5. 'A' → logprob: -10.600369453430176
    6. '-' → logprob: -10.600369453430176
    7. '(i' → logprob: -10.600369453430176
    8. ' ' → logprob: -11.662869453430176
    9. 'B' → logprob: -11.725369453430176
    10. ' i' → logprob: -11.912869453430176

Token 40: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03496553376317024
    2. ']+=' → logprob: -3.5349655151367188
    3. ')' → logprob: -6.284965515136719
    4. ']-' → logprob: -6.909965515136719
    5. '+=' → logprob: -7.659965515136719
    6. '-' → logprob: -7.659965515136719
    7. '[' → logprob: -8.409965515136719
    8. ' +=' → logprob: -8.659965515136719
    9. ']*' → logprob: -8.784965515136719
    10. ']+' → logprob: -8.784965515136719

Token 41: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.2654239535331726
    2. '+=' → logprob: -1.5154240131378174
    3. ' -=' → logprob: -4.765423774719238
    4. '=' → logprob: -6.390423774719238
    5. ' *=' → logprob: -6.640423774719238
    6. ' =' → logprob: -7.640423774719238
    7. '-=' → logprob: -7.890423774719238
    8. '+' → logprob: -8.390423774719238
    9. '-' → logprob: -8.765423774719238
    10. ' ' → logprob: -9.015423774719238

Token 42: ' lst' (ID: 33384)
  Prédit: ' lst'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lst' → logprob: -0.6671426296234131
    2. 'lst' → logprob: -1.167142629623413
    3. '1' → logprob: -2.417142629623413
    4. 'A' → logprob: -3.667142629623413
    5. 'B' → logprob: -4.042142868041992
    6. ' A' → logprob: -4.167142868041992
    7. ' ' → logprob: -4.167142868041992
    8. ' B' → logprob: -5.042142868041992
    9. 'K' → logprob: -6.417142868041992
    10. ' K' → logprob: -6.542142868041992

Token 43: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0008658452425152063
    2. '0' → logprob: -7.625865936279297
    3. '[i' → logprob: -8.125865936279297
    4. '[
' → logprob: -11.000865936279297
    5. '1' → logprob: -11.125865936279297
    6. ' ' → logprob: -11.750865936279297
    7. '```' → logprob: -11.875865936279297
    8. '][' → logprob: -12.250865936279297
    9. '(' → logprob: -12.375865936279297
    10. ' [' → logprob: -12.813365936279297

Token 44: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001758956117555499
    2. '1' → logprob: -6.626759052276611
    3. '2' → logprob: -7.876759052276611
    4. 'i' → logprob: -10.376758575439453
    5. ' ' → logprob: -11.001758575439453
    6. '(i' → logprob: -13.876758575439453
    7. '   ' → logprob: -13.939258575439453
    8. 'A' → logprob: -14.626758575439453
    9. '-' → logprob: -14.689258575439453
    10. '  ' → logprob: -15.126758575439453

Token 45: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.053716029971838
    2. ')' → logprob: -3.053715944290161
    3. ']
' → logprob: -6.42871618270874
    4. ')]' → logprob: -6.80371618270874
    5. '])' → logprob: -6.92871618270874
    6. '+' → logprob: -7.30371618270874
    7. ')
' → logprob: -8.803715705871582
    8. '<|end|>' → logprob: -8.803715705871582
    9. '*' → logprob: -9.428715705871582
    10. ' ]' → logprob: -10.053715705871582

Token 46: ' //' (ID: 602)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03816990554332733
    2. '           ' → logprob: -3.4131698608398438
    3. 'else' → logprob: -6.663169860839844
    4. '   ' → logprob: -6.913169860839844
    5. ' ' → logprob: -7.663169860839844
    6. '-' → logprob: -7.913169860839844
    7. '
' → logprob: -8.038169860839844
    8. ' else' → logprob: -8.163169860839844
    9. '*' → logprob: -9.538169860839844
    10. ')' → logprob: -9.663169860839844

Token 47: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.07854589819908142
    2. 'lst' → logprob: -2.7035458087921143
    3. '3' → logprob: -5.578546047210693
    4. '1' → logprob: -6.828546047210693
    5. '4' → logprob: -6.828546047210693
    6. 'K' → logprob: -7.078546047210693
    7. 'B' → logprob: -7.328546047210693
    8. 'A' → logprob: -7.828546047210693
    9. '10' → logprob: -8.578545570373535
    10. '5' → logprob: -9.078545570373535

Token 48: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.06297367066144943
    2. 'lst' → logprob: -3.312973737716675
    3. 'K' → logprob: -4.562973499298096
    4. '3' → logprob: -4.812973499298096
    5. '4' → logprob: -6.437973499298096
    6. 'B' → logprob: -6.687973499298096
    7. '10' → logprob: -6.937973499298096
    8. 'A' → logprob: -7.187973499298096
    9. '1' → logprob: -7.562973499298096
    10. '5' → logprob: -8.187973976135254

Token 49: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01257169060409069
    2. '           ' → logprob: -5.762571811676025
    3. '   ' → logprob: -5.762571811676025
    4. ' else' → logprob: -6.262571811676025
    5. ' ' → logprob: -6.637571811676025
    6. 'else' → logprob: -6.762571811676025
    7. '        
' → logprob: -7.887571811676025
    8. '\n' → logprob: -8.137571334838867
    9. ')' → logprob: -8.762571334838867
    10. '```' → logprob: -8.887571334838867

Token 50: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06009111553430557
    2. '\n' → logprob: -3.185091018676758
    3. '   ' → logprob: -5.185091018676758
    4. '           ' → logprob: -5.685091018676758
    5. ' ' → logprob: -6.560091018676758
    6. '<|end|>' → logprob: -6.560091018676758
    7. '        
' → logprob: -7.185091018676758
    8. '```' → logprob: -7.310091018676758
    9. '\' → logprob: -7.435091018676758
    10. ' else' → logprob: -7.935091018676758

Token 51: ' lst' (ID: 33384)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.4114842414855957
    2. ' res' → logprob: -1.4114842414855957
    3. '       ' → logprob: -2.6614842414855957
    4. '           ' → logprob: -4.036484241485596
    5. '   ' → logprob: -5.536484241485596
    6. ' ' → logprob: -7.536484241485596
    7. 'lst' (adapté à ' lst') → logprob: -7.661484241485596
    8. '    ' → logprob: -8.786483764648438
    9. '```' → logprob: -8.911483764648438
    10. 'A' → logprob: -8.911483764648438

Token 52: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.4617256056226324e-05
    2. '.append' → logprob: -11.875014305114746
    3. '.' → logprob: -13.625014305114746
    4. '[-' → logprob: -13.875014305114746
    5. '[
' → logprob: -14.125014305114746
    6. '```' → logprob: -14.125014305114746
    7. '1' → logprob: -14.375014305114746
    8. '.pop' → logprob: -15.125014305114746
    9. '][' → logprob: -15.125014305114746
    10. ' [' → logprob: -15.312514305114746

Token 53: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4512496292591095
    2. '0' → logprob: -1.326249599456787
    3. '2' → logprob: -2.326249599456787
    4. '```' → logprob: -12.076250076293945
    5. '[' → logprob: -12.326250076293945
    6. '-' → logprob: -12.576250076293945
    7. 'A' → logprob: -12.763750076293945
    8. 'i' → logprob: -12.826250076293945
    9. ' ' → logprob: -13.263750076293945
    10. ']' → logprob: -13.576250076293945

Token 54: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.020281076431274414
    2. ')' → logprob: -4.020280838012695
    3. ' -=' → logprob: -7.770280838012695
    4. '-' → logprob: -7.895280838012695
    5. ']+=' → logprob: -8.020280838012695
    6. ',' → logprob: -8.645280838012695
    7. '//' → logprob: -9.020280838012695
    8. '-=' → logprob: -9.145280838012695
    9. '[' → logprob: -9.270280838012695
    10. ' ]' → logprob: -9.270280838012695

Token 55: ' //' (ID: 602)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.5646422505378723
    2. '+=' → logprob: -1.3146421909332275
    3. ' -=' → logprob: -2.8146421909332275
    4. '=' → logprob: -3.1896421909332275
    5. '//=' → logprob: -3.4396421909332275
    6. '-' → logprob: -4.689642429351807
    7. '*=' → logprob: -4.689642429351807
    8. ' +=' → logprob: -5.064642429351807
    9. ' //' → logprob: -6.064642429351807
    10. '//' → logprob: -6.814642429351807

Token 56: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.5048530030981055e-06
    2. '=}' → logprob: -14.000001907348633
    3. '=_' → logprob: -15.125001907348633
    4. '2' → logprob: -15.875001907348633
    5. '=.' → logprob: -17.125001907348633
    6. '=
' → logprob: -17.125001907348633
    7. '_=' → logprob: -17.375001907348633
    8. '=#' → logprob: -17.750001907348633
    9. '=

' → logprob: -18.000001907348633
    10. '=int' → logprob: -18.125001907348633

Token 57: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.000913370808120817
    2. ' ' → logprob: -7.000913143157959
    3. '3' → logprob: -14.250913619995117
    4. '1' → logprob: -14.625913619995117
    5. '   ' → logprob: -15.375913619995117
    6. '```' → logprob: -16.000913619995117
    7. '4' → logprob: -16.125913619995117
    8. '  ' → logprob: -16.125913619995117
    9. '10' → logprob: -17.250913619995117
    10. '    ' → logprob: -17.563413619995117

Token 58: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.700132997939363e-05
    2. ' ' → logprob: -11.000017166137695
    3. '3' → logprob: -15.250017166137695
    4. '4' → logprob: -16.875017166137695
    5. '1' → logprob: -17.500017166137695
    6. '```' → logprob: -17.750017166137695
    7. '10' → logprob: -18.250017166137695
    8. '   ' → logprob: -19.250017166137695
    9. '  ' → logprob: -19.500017166137695
    10. '22' → logprob: -19.500017166137695

Token 59: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.5195254683494568
    2. '       ' → logprob: -1.0195255279541016
    3. '           ' → logprob: -5.019525527954102
    4. '```' → logprob: -5.019525527954102
    5. '        
' → logprob: -5.144525527954102
    6. ' 
' → logprob: -5.269525527954102
    7. '   ' → logprob: -5.519525527954102
    8. '    
' → logprob: -6.144525527954102
    9. '\' → logprob: -6.269525527954102
    10. '            
' → logprob: -6.519525527954102

Token 60: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2112138718366623
    2. '\n' → logprob: -1.8362138271331787
    3. '   ' → logprob: -4.711214065551758
    4. '           ' → logprob: -4.836214065551758
    5. '\' → logprob: -6.086214065551758
    6. '```' → logprob: -6.086214065551758
    7. '[' → logprob: -6.336214065551758
    8. '        
' → logprob: -6.586214065551758
    9. '<|end|>' → logprob: -6.836214065551758
    10. ' ' → logprob: -6.961214065551758

Token 61: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6760117411613464
    2. 'else' (adapté à ' else') → logprob: -1.3010118007659912
    3. ' else' → logprob: -1.8010118007659912
    4. 'res' → logprob: -4.176011562347412
    5. ' res' → logprob: -4.301011562347412
    6. '   ' → logprob: -4.426011562347412
    7. '           ' → logprob: -5.426011562347412
    8. 'elif' → logprob: -5.676011562347412
    9. ' elif' → logprob: -6.176011562347412
    10. ' ' → logprob: -6.301011562347412

Token 62: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01199505664408207
    2. ':
' → logprob: -4.7619948387146
    3. '           ' → logprob: -5.8869948387146
    4. ' :' → logprob: -7.8869948387146
    5. '       ' → logprob: -9.386995315551758
    6. ',' → logprob: -10.386995315551758
    7. ' :
' → logprob: -10.761995315551758
    8. '<|end|>' → logprob: -11.136995315551758
    9. '   ' → logprob: -11.386995315551758
    10. '```' → logprob: -11.386995315551758

Token 63: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5690260529518127
    2. ' lst' → logprob: -1.319025993347168
    3. 'lst' → logprob: -1.819025993347168
    4. '               ' → logprob: -6.444025993347168
    5. '```' → logprob: -6.569025993347168
    6. '       ' → logprob: -8.069025993347168
    7. '   ' → logprob: -8.694025993347168
    8. ' ' → logprob: -8.944025993347168
    9. 'A' → logprob: -8.944025993347168
    10. ' A' → logprob: -9.444025993347168

Token 64: ' lst' (ID: 33384)
  Prédit: 'lst'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lst' (adapté à ' lst') → logprob: -0.5802767276763916
    2. ' lst' → logprob: -0.8302767276763916
    3. '           ' → logprob: -5.9552764892578125
    4. 'A' → logprob: -7.4552764892578125
    5. 'res' → logprob: -8.080276489257812
    6. ' res' → logprob: -8.955276489257812
    7. ' A' → logprob: -9.080276489257812
    8. 'B' → logprob: -9.205276489257812
    9. 'l' → logprob: -9.830276489257812
    10. '   ' → logprob: -9.955276489257812

Token 65: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.141186450899113e-05
    2. '1' → logprob: -11.750020980834961
    3. '[
' → logprob: -12.875020980834961
    4. '0' → logprob: -13.125020980834961
    5. '.append' → logprob: -13.500020980834961
    6. '```' → logprob: -13.812520980834961
    7. '.' → logprob: -14.500020980834961
    8. ' [' → logprob: -14.562520980834961
    9. 'print' → logprob: -14.625020980834961
    10. '=' → logprob: -15.062520980834961

Token 66: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2064892053604126
    2. '1' → logprob: -1.7064892053604126
    3. '2' → logprob: -5.456489086151123
    4. '[' → logprob: -7.206489086151123
    5. ' ' → logprob: -10.706489562988281
    6. '   ' → logprob: -11.331489562988281
    7. '```' → logprob: -12.268989562988281
    8. '(' → logprob: -12.956489562988281
    9. '    ' → logprob: -13.206489562988281
    10. '  ' → logprob: -14.018989562988281

Token 67: ']' (ID: 60)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.6672050356864929
    2. ' +=' → logprob: -1.4172050952911377
    3. ' //' → logprob: -2.6672050952911377
    4. '//=' → logprob: -3.2922050952911377
    5. '=' → logprob: -3.4172050952911377
    6. '*=' → logprob: -3.6672050952911377
    7. ',' → logprob: -3.9172050952911377
    8. ' *=' → logprob: -4.042204856872559
    9. '*' → logprob: -5.167204856872559
    10. ' -=' → logprob: -5.167204856872559

Token 68: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.2282135784626007
    2. ' +=' → logprob: -2.4782135486602783
    3. '//=' → logprob: -3.2282135486602783
    4. '*=' → logprob: -3.4782135486602783
    5. ' //' → logprob: -3.9782135486602783
    6. '=' → logprob: -4.103213787078857
    7. ' *=' → logprob: -5.103213787078857
    8. '-=' → logprob: -5.478213787078857
    9. ' -=' → logprob: -6.978213787078857
    10. '//' → logprob: -7.103213787078857

Token 69: ' lst' (ID: 33384)
  Prédit: 'lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lst' → logprob: -0.5236601829528809
    2. ' lst' → logprob: -0.8986601829528809
    3. '1' → logprob: -8.148660659790039
    4. '(lst' → logprob: -8.898660659790039
    5. ' ' → logprob: -10.273660659790039
    6. '(' → logprob: -10.773660659790039
    7. ' (' → logprob: -11.273660659790039
    8. '2' → logprob: -11.648660659790039
    9. '3' → logprob: -12.398660659790039
    10. 'A' → logprob: -12.898660659790039

Token 70: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -8.613945101387799e-05
    2. '1' → logprob: -9.375085830688477
    3. '```' → logprob: -14.625085830688477
    4. '[
' → logprob: -14.750085830688477
    5. 'user' → logprob: -16.625085830688477
    6. '][' → logprob: -17.250085830688477
    7. '\[' → logprob: -17.250085830688477
    8. ' [' → logprob: -17.437585830688477
    9. '2' → logprob: -17.437585830688477
    10. '   ' → logprob: -17.937585830688477

Token 71: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.8889261304575484e-06
    2. '0' → logprob: -13.625003814697266
    3. '2' → logprob: -13.750003814697266
    4. '[' → logprob: -14.375003814697266
    5. '```' → logprob: -14.625003814697266
    6. ' ' → logprob: -15.875003814697266
    7. '11' → logprob: -16.687503814697266
    8. '-' → logprob: -16.750003814697266
    9. '`' → logprob: -17.062503814697266
    10. '   ' → logprob: -17.125003814697266

Token 72: ']' (ID: 60)
  Prédit: ' //'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.1404716819524765
    2. '//' → logprob: -2.6404716968536377
    3. ')' → logprob: -2.8904716968536377
    4. ']' → logprob: -7.015471458435059
    5. '#' → logprob: -7.390471458435059
    6. ' ' → logprob: -7.390471458435059
    7. '"' → logprob: -7.390471458435059
    8. ')//' → logprob: -7.390471458435059
    9. '```' → logprob: -8.515471458435059
    10. ''' → logprob: -9.515471458435059

Token 73: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.021091463044285774
    2. '//' → logprob: -3.8960914611816406
    3. '"' → logprob: -9.52109146118164
    4. '```' → logprob: -9.64609146118164
    5. ' ' → logprob: -9.77109146118164
    6. ' //
' → logprob: -10.14609146118164
    7. '   ' → logprob: -10.27109146118164
    8. ''' → logprob: -10.39609146118164
    9. '`' → logprob: -10.39609146118164
    10. '       ' → logprob: -10.39609146118164

Token 74: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0010950922733172774
    2. ' ' → logprob: -6.876095294952393
    3. '1' → logprob: -10.376094818115234
    4. '3' → logprob: -10.501094818115234
    5. '4' → logprob: -12.751094818115234
    6. '5' → logprob: -16.001094818115234
    7. '8' → logprob: -16.251094818115234
    8. '6' → logprob: -16.251094818115234
    9. '   ' → logprob: -16.376094818115234
    10. '10' → logprob: -16.376094818115234

Token 75: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.682846287731081e-05
    2. '1' → logprob: -9.875066757202148
    3. ' ' → logprob: -11.500066757202148
    4. '3' → logprob: -12.250066757202148
    5. '4' → logprob: -15.375066757202148
    6. '   ' → logprob: -17.56256675720215
    7. '0' → logprob: -17.81256675720215
    8. '5' → logprob: -17.87506675720215
    9. '10' → logprob: -17.93756675720215
    10. '6' → logprob: -18.12506675720215

Token 76: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.10721161216497421
    2. ' 
' → logprob: -3.1072115898132324
    3. '           ' → logprob: -3.6072115898132324
    4. '<|end|>' → logprob: -4.982211589813232
    5. '    ' → logprob: -5.607211589813232
    6. '       ' → logprob: -5.857211589813232
    7. '\n' → logprob: -5.982211589813232
    8. '        ' → logprob: -6.732211589813232
    9. '     
' → logprob: -6.732211589813232
    10. '```' → logprob: -6.732211589813232

Token 77: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7141593098640442
    2. ' ' → logprob: -0.8391593098640442
    3. ' 
' → logprob: -3.2141592502593994
    4. '            ' → logprob: -4.7141594886779785
    5. '\n' → logprob: -5.3391594886779785
    6. '```' → logprob: -5.8391594886779785
    7. '            
' → logprob: -5.9641594886779785
    8. '       ' → logprob: -6.0891594886779785
    9. ' \' → logprob: -6.0891594886779785
    10. '             
' → logprob: -6.3391594886779785

Token 78: ' lst' (ID: 33384)
  Prédit: 'lst'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lst' (adapté à ' lst') → logprob: -0.02975454181432724
    2. ' lst' → logprob: -3.529754638671875
    3. 'list' → logprob: -13.529754638671875
    4. '           ' → logprob: -13.654754638671875
    5. 'l' → logprob: -14.904754638671875
    6. '_lst' → logprob: -15.154754638671875
    7. '       ' → logprob: -15.279754638671875
    8. '(lst' → logprob: -15.529754638671875
    9. '1' → logprob: -15.904754638671875
    10. '[' → logprob: -16.404754638671875

Token 79: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.5928495486150496e-05
    2. '1' → logprob: -11.125016212463379
    3. '```' → logprob: -14.500016212463379
    4. '[
' → logprob: -15.500016212463379
    5. '\[' → logprob: -15.500016212463379
    6. ' [' → logprob: -16.875015258789062
    7. '0' → logprob: -17.375015258789062
    8. ',' → logprob: -17.500015258789062
    9. 'user' → logprob: -17.750015258789062
    10. '   ' → logprob: -18.062515258789062

Token 80: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5759426951408386
    2. '0' → logprob: -0.8259426951408386
    3. '[' → logprob: -13.575942993164062
    4. '2' → logprob: -13.950942993164062
    5. '-' → logprob: -14.575942993164062
    6. '   ' → logprob: -15.450942993164062
    7. '```' → logprob: -15.950942993164062
    8. ' ' → logprob: -15.950942993164062
    9. '
' → logprob: -17.200942993164062
    10. ']' → logprob: -17.325942993164062

Token 81: ']' (ID: 60)
  Prédit: ' //'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.024621468037366867
    2. '//=' → logprob: -4.149621486663818
    3. '//' → logprob: -4.774621486663818
    4. ')' → logprob: -9.64962100982666
    5. '=' → logprob: -11.27462100982666
    6. '#' → logprob: -11.39962100982666
    7. '+=' → logprob: -12.64962100982666
    8. ')//' → logprob: -12.64962100982666
    9. ' #' → logprob: -12.89962100982666
    10. ' +=' → logprob: -13.14962100982666

Token 82: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.6865949630737305
    2. '//=' → logprob: -0.8115949630737305
    3. '+=' → logprob: -3.5615949630737305
    4. '//' → logprob: -4.0615949630737305
    5. '=' → logprob: -5.5615949630737305
    6. ' +=' → logprob: -5.8115949630737305
    7. ' =' → logprob: -10.56159496307373
    8. ' ' → logprob: -10.81159496307373
    9. ' *=' → logprob: -11.93659496307373
    10. '%=' → logprob: -12.06159496307373

Token 83: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -2.618001053633634e-05
    2. '/=' → logprob: -10.875025749206543
    3. '*=' → logprob: -12.750025749206543
    4. '%=' → logprob: -13.000025749206543
    5. '//=' → logprob: -14.125025749206543
    6. '+=' → logprob: -14.375025749206543
    7. '           ' → logprob: -15.625025749206543
    8. '>=' → logprob: -16.12502670288086
    9. '=
' → logprob: -16.25002670288086
    10. '_=' → logprob: -16.75002670288086

Token 84: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.004620949272066355
    2. ' ' → logprob: -5.3796210289001465
    3. '```' → logprob: -15.254620552062988
    4. '1' → logprob: -15.879620552062988
    5. '   ' → logprob: -16.317121505737305
    6. '  ' → logprob: -16.692121505737305
    7. '3' → logprob: -17.442121505737305
    8. '0' → logprob: -17.692121505737305
    9. '۲' → logprob: -17.942121505737305
    10. ' ' → logprob: -18.317121505737305

Token 85: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.64708495605737e-05
    2. ' ' → logprob: -9.625066757202148
    3. '   ' → logprob: -15.375066757202148
    4. '1' → logprob: -16.75006675720215
    5. '  ' → logprob: -17.12506675720215
    6. '```' → logprob: -17.37506675720215
    7. '۲' → logprob: -18.06256675720215
    8. 'def' → logprob: -18.25006675720215
    9. '       ' → logprob: -18.62506675720215
    10. '3' → logprob: -18.75006675720215

Token 86: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14593914151191711
    2. '\n' → logprob: -2.3959391117095947
    3. '   ' → logprob: -3.5209391117095947
    4. '\' → logprob: -5.645939350128174
    5. ' ' → logprob: -6.270939350128174
    6. ')' → logprob: -6.395939350128174
    7. '<|end|>' → logprob: -6.395939350128174
    8. '           ' → logprob: -7.270939350128174
    9. '
' → logprob: -7.270939350128174
    10. '        
' → logprob: -7.395939350128174

Token 87: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05550814047455788
    2. '   ' → logprob: -3.1805081367492676
    3. '<|end|>' → logprob: -5.680508136749268
    4. '\n' → logprob: -5.930508136749268
    5. ' ' → logprob: -6.805508136749268
    6. ')' → logprob: -6.805508136749268
    7. '\' → logprob: -6.930508136749268
    8. '```' → logprob: -7.305508136749268
    9. '           ' → logprob: -7.430508136749268
    10. '[' → logprob: -8.055508613586426

Token 88: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.44749513268470764
    2. '       ' → logprob: -1.6974951028823853
    3. ' res' → logprob: -1.8224951028823853
    4. '   ' → logprob: -4.197494983673096
    5. '           ' → logprob: -7.697494983673096
    6. '```' → logprob: -8.822495460510254
    7. '	res' → logprob: -9.322495460510254
    8. 'return' → logprob: -9.572495460510254
    9. '    ' → logprob: -10.072495460510254
    10. ' ' → logprob: -10.072495460510254

Token 89: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.023277277126908302
    2. '.' → logprob: -3.7732772827148438
    3. '.extend' → logprob: -11.648277282714844
    4. ' .' → logprob: -11.898277282714844
    5. '.Append' → logprob: -12.023277282714844
    6. '.app' → logprob: -12.898277282714844
    7. '.push' → logprob: -13.273277282714844
    8. 'append' → logprob: -13.398277282714844
    9. '.add' → logprob: -13.523277282714844
    10. '<|end|>' → logprob: -14.648277282714844

Token 90: '((' (ID: 2054)
  Prédit: '(lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lst' → logprob: -0.024478737264871597
    2. '((' → logprob: -4.149478912353516
    3. '(max' → logprob: -5.399478912353516
    4. '(' → logprob: -5.899478912353516
    5. '(min' → logprob: -7.649478912353516
    6. '(sum' → logprob: -8.399478912353516
    7. '(len' → logprob: -9.399478912353516
    8. 'lst' → logprob: -9.649478912353516
    9. '(l' → logprob: -9.774478912353516
    10. '(tuple' → logprob: -9.899478912353516

Token 91: 'lst' (ID: 65430)
  Prédit: 'lst'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lst' → logprob: -0.0005206239875406027
    2. ' lst' → logprob: -8.125520706176758
    3. '(lst' → logprob: -9.750520706176758
    4. 'tuple' → logprob: -10.250520706176758
    5. 'A' → logprob: -10.375520706176758
    6. 'ls' → logprob: -10.625520706176758
    7. 'l' → logprob: -10.750520706176758
    8. '*' → logprob: -11.750520706176758
    9. ')' → logprob: -12.000520706176758
    10. 'abs' → logprob: -12.250520706176758

Token 92: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.014362111687660217
    2. '0' → logprob: -4.264362335205078
    3. ')' → logprob: -8.764362335205078
    4. '))' → logprob: -11.014362335205078
    5. '2' → logprob: -12.639362335205078
    6. '(' → logprob: -12.639362335205078
    7. '[A' → logprob: -12.639362335205078
    8. ',' → logprob: -13.014362335205078
    9. ')]' → logprob: -13.139362335205078
    10. ' ' → logprob: -13.389362335205078

Token 93: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.3464544432936236e-05
    2. '1' → logprob: -10.500043869018555
    3. '2' → logprob: -11.750043869018555
    4. 'A' → logprob: -12.375043869018555
    5. '(' → logprob: -13.875043869018555
    6. '[' → logprob: -14.437543869018555
    7. ' ' → logprob: -14.562543869018555
    8. ')' → logprob: -15.562543869018555
    9. '   ' → logprob: -15.937543869018555
    10. '])' → logprob: -16.312543869018555

Token 94: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00014609156642109156
    2. ' ,' → logprob: -10.00014591217041
    3. '<|end|>' → logprob: -10.25014591217041
    4. ')' → logprob: -10.75014591217041
    5. ',
' → logprob: -11.37514591217041
    6. '+' → logprob: -11.87514591217041
    7. ',)' → logprob: -12.50014591217041
    8. ',B' → logprob: -12.62514591217041
    9. ',

' → logprob: -13.25014591217041
    10. '‌,' → logprob: -13.37514591217041

Token 95: ' lst' (ID: 33384)
  Prédit: 'lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lst' → logprob: -0.5759562253952026
    2. ' lst' → logprob: -0.8259562253952026
    3. ' ' → logprob: -11.825956344604492
    4. '(lst' → logprob: -12.325956344604492
    5. '    ' → logprob: -13.700956344604492
    6. '   ' → logprob: -13.825956344604492
    7. '_lst' → logprob: -14.200956344604492
    8. 'lis' → logprob: -14.700956344604492
    9. '  ' → logprob: -15.075956344604492
    10. 'l' → logprob: -15.200956344604492

Token 96: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.014310763217508793
    2. '1' → logprob: -4.264310836791992
    3. ',' → logprob: -9.639310836791992
    4. '```' → logprob: -10.764310836791992
    5. ')' → logprob: -10.889310836791992
    6. '[
' → logprob: -11.139310836791992
    7. ']' → logprob: -12.139310836791992
    8. '][' → logprob: -12.389310836791992
    9. '<|end|>' → logprob: -12.514310836791992
    10. ' [' → logprob: -13.014310836791992

Token 97: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.36574100604048e-06
    2. ' ' → logprob: -13.125004768371582
    3. '2' → logprob: -14.937504768371582
    4. '   ' → logprob: -15.062504768371582
    5. '<|end|>' → logprob: -15.250004768371582
    6. ')' → logprob: -15.437504768371582
    7. ']' → logprob: -16.062503814697266
    8. '[' → logprob: -16.250003814697266
    9. '])' → logprob: -16.375003814697266
    10. '0' → logprob: -16.437503814697266

Token 98: ']))
' (ID: 24801)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.007922571152448654
    2. ')' → logprob: -4.882922649383545
    3. ',' → logprob: -8.757922172546387
    4. '))
' → logprob: -8.882922172546387
    5. ')))' → logprob: -11.257922172546387
    6. ' ))' → logprob: -13.257922172546387
    7. '))

' → logprob: -13.382922172546387
    8. '),' → logprob: -13.382922172546387
    9. ''))' → logprob: -14.132922172546387
    10. ')
' → logprob: -14.507922172546387

Token 99: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005899403709918261
    2. '<|end|>' → logprob: -5.880899429321289
    3. 'return' → logprob: -6.755899429321289
    4. '    
' → logprob: -7.130899429321289
    5. ' return' → logprob: -7.505899429321289
    6. ')' → logprob: -8.880899429321289
    7. '	return' → logprob: -9.380899429321289
    8. '       ' → logprob: -9.630899429321289
    9. ',' → logprob: -9.755899429321289
    10. '
' → logprob: -9.880899429321289

Token 100: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3227904736995697
    2. 'return' (adapté à ' return') → logprob: -1.572790503501892
    3. ' return' → logprob: -3.0727903842926025
    4. ' ' → logprob: -4.947790622711182
    5. '<|end|>' → logprob: -5.322790622711182
    6. '    
' → logprob: -5.447790622711182
    7. '	return' → logprob: -5.697790622711182
    8. '  
' → logprob: -6.947790622711182
    9. ' 
' → logprob: -7.947790622711182
    10. '
' → logprob: -8.572790145874023

Token 101: ' lst' (ID: 33384)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.014164221473038197
    2. ' res' → logprob: -4.264164447784424
    3. '(res' → logprob: -14.389163970947266
    4. ' ' → logprob: -16.889163970947266
    5. 're' → logprob: -16.889163970947266
    6. 'tuple' → logprob: -17.264163970947266
    7. 'r' → logprob: -18.139163970947266
    8. '	res' → logprob: -18.514163970947266
    9. 'lst' → logprob: -19.639163970947266
    10. ' tuple' → logprob: -19.764163970947266

Token 102: '[' (ID: 58)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 103: '0' (ID: 15)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.14562395215034485
    2. '0' → logprob: -2.2706239223480225
    3. ')' → logprob: -3.7706239223480225
    4. ']' → logprob: -5.020624160766602
    5. '])' → logprob: -6.395624160766602
    6. '[' → logprob: -7.770624160766602
    7. ')]' → logprob: -8.270624160766602
    8. ',' → logprob: -8.895624160766602
    9. '(' → logprob: -9.895624160766602
    10. ' ' → logprob: -10.520624160766602

Token 104: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16040192544460297
    2. ')' → logprob: -1.9104019403457642
    3. '<|end|>' → logprob: -10.160402297973633
    4. ' ,' → logprob: -10.285402297973633
    5. '),' → logprob: -10.410402297973633
    6. ',)' → logprob: -10.535402297973633
    7. ',
' → logprob: -11.285402297973633
    8. ' )' → logprob: -11.785402297973633
    9. '}' → logprob: -12.035402297973633
    10. ']' → logprob: -12.910402297973633

Token 105: ' lst' (ID: 33384)
  Prédit: ' lst'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lst' → logprob: -0.10031946003437042
    2. 'lst' → logprob: -2.3503193855285645
    3. ' res' → logprob: -9.975319862365723
    4. ' ' → logprob: -10.475319862365723
    5. '(lst' → logprob: -11.225319862365723
    6. 'res' → logprob: -11.350319862365723
    7. '_lst' → logprob: -11.850319862365723
    8. 'space' → logprob: -13.725319862365723
    9. ' ' → logprob: -13.725319862365723
    10. 'list' → logprob: -14.350319862365723

Token 106: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.44539353251457214
    2. '<|end|>' → logprob: -1.5703935623168945
    3. ',' → logprob: -1.9453935623168945
    4. '1' → logprob: -5.6953935623168945
    5. '<|end|>' → logprob: -5.8203935623168945
    6. ')' → logprob: -7.0703935623168945
    7. '```' → logprob: -7.9453935623168945
    8. ']' → logprob: -8.320393562316895
    9. 'return' → logprob: -10.070393562316895
    10. ' ,' → logprob: -10.320393562316895

Token 107: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.865583706414327e-05
    2. '2' → logprob: -9.25009822845459
    3. ' ' → logprob: -14.12509822845459
    4. ']' → logprob: -14.37509822845459
    5. '-' → logprob: -14.75009822845459
    6. '[' → logprob: -15.12509822845459
    7. '   ' → logprob: -15.62509822845459
    8. '0' → logprob: -15.75009822845459
    9. '```' → logprob: -16.750099182128906
    10. ')' → logprob: -17.312599182128906

Token 108: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.173704271830502e-06
    2. ',' → logprob: -13.37500286102295
    3. '),' → logprob: -14.62500286102295
    4. ')
' → logprob: -15.00000286102295
    5. ' )' → logprob: -15.25000286102295
    6. '}' → logprob: -15.25000286102295
    7. ')}' → logprob: -16.125003814697266
    8. '))' → logprob: -16.500003814697266
    9. ']' → logprob: -16.875003814697266
    10. '<|end|>' → logprob: -17.125003814697266

Token 109: 'class' (ID: 1444)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.4206644296646118
    2. ')' → logprob: -1.4206644296646118
    3. '<|end|>' → logprob: -2.2956643104553223
    4. '\n' → logprob: -2.4206643104553223
    5. 'f' → logprob: -2.7956643104553223
    6. ',' → logprob: -2.9206643104553223
    7. '#' → logprob: -3.5456643104553223
    8. '_' → logprob: -3.9206643104553223
    9. '[' → logprob: -4.045664310455322
    10. '\' → logprob: -4.170664310455322

Token 110: ' Printer' (ID: 71701)
  Prédit: ' Solution'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Solution' → logprob: -1.0477198362350464
    2. ' Solver' → logprob: -1.4227198362350464
    3. ' ' → logprob: -1.9227198362350464
    4. ' My' → logprob: -2.172719955444336
    5. ' Counter' → logprob: -2.297719955444336
    6. ' Calculator' → logprob: -4.297719955444336
    7. ' Balanced' → logprob: -5.422719955444336
    8. ' S' → logprob: -5.422719955444336
    9. ' Processor' → logprob: -5.922719955444336
    10. '<|end|>' → logprob: -6.172719955444336

Token 111: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -7.982165698194876e-05
    2. '(' → logprob: -10.750080108642578
    3. ':
' → logprob: -10.750080108642578
    4. '():' → logprob: -10.750080108642578
    5. ' :' → logprob: -12.125080108642578
    6. '<|end|>' → logprob: -12.500080108642578
    7. '):' → logprob: -12.750080108642578
    8. '>:' → logprob: -14.625080108642578
    9. ':**' → logprob: -14.750080108642578
    10. ':def' → logprob: -15.000080108642578

Token 112: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04690523073077202
    2. '   ' → logprob: -3.421905279159546
    3. ':
' → logprob: -5.671905040740967
    4. ' def' → logprob: -5.671905040740967
    5. '	def' → logprob: -6.171905040740967
    6. '<|end|>' → logprob: -6.171905040740967
    7. ' :' → logprob: -7.421905040740967
    8. 'def' → logprob: -8.046905517578125
    9. '(object' → logprob: -8.171905517578125
    10. '(' → logprob: -8.421905517578125

Token 113: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.00036965898470953107
    2. 'def' (adapté à ' def') → logprob: -8.000370025634766
    3. '   ' → logprob: -10.500370025634766
    4. ' class' → logprob: -13.375370025634766
    5. '	def' → logprob: -13.375370025634766
    6. '    ' → logprob: -14.000370025634766
    7. ' de' → logprob: -14.125370025634766
    8. ' print' → logprob: -14.625370025634766
    9. ' ind' → logprob: -15.000370025634766
    10. 'class' → logprob: -15.250370025634766

Token 114: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.19505789875984192
    2. ' print' → logprob: -2.1950578689575195
    3. ' init' → logprob: -2.8200578689575195
    4. ' ' → logprob: -5.6950578689575195
    5. ' _' → logprob: -6.6950578689575195
    6. '__' → logprob: -7.1950578689575195
    7. 'init' → logprob: -8.32005786895752
    8. ' f' → logprob: -8.57005786895752
    9. ' ' → logprob: -9.19505786895752
    10. '_init' → logprob: -9.57005786895752

Token 115: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -5.200166469876422e-06
    2. 'new' → logprob: -13.125004768371582
    3. 'ini' → logprob: -13.375004768371582
    4. ' init' → logprob: -14.375004768371582
    5. 'call' → logprob: -14.875004768371582
    6. 'iter' → logprob: -15.250004768371582
    7. 'i' → logprob: -16.6250057220459
    8. 'str' → logprob: -16.7500057220459
    9. 'repr' → logprob: -16.7500057220459
    10. '_init' → logprob: -17.2500057220459

Token 116: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.026485728099942207
    2. '__' → logprob: -3.6514856815338135
    3. '__(
' → logprob: -9.026485443115234
    4. '(self' → logprob: -10.651485443115234
    5. '__((' → logprob: -11.026485443115234
    6. '(' → logprob: -11.776485443115234
    7. '__('' → logprob: -12.151485443115234
    8. '__(*' → logprob: -12.276485443115234
    9. '___' → logprob: -12.401485443115234
    10. '__("' → logprob: -13.526485443115234

Token 117: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0006584656075574458
    2. ' self' → logprob: -7.3756585121154785
    3. ')' → logprob: -11.75065803527832
    4. ' ' → logprob: -11.75065803527832
    5. 'A' → logprob: -11.87565803527832
    6. '   ' → logprob: -12.25065803527832
    7. ',' → logprob: -13.12565803527832
    8. '  ' → logprob: -14.12565803527832
    9. 's' → logprob: -14.37565803527832
    10. '):
' → logprob: -14.75065803527832

Token 118: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007796077989041805
    2. ' ,' → logprob: -7.500779628753662
    3. ',A' → logprob: -8.750779151916504
    4. '):' → logprob: -10.500779151916504
    5. ',l' → logprob: -10.875779151916504
    6. ',a' → logprob: -12.000779151916504
    7. ',n' → logprob: -12.375779151916504
    8. ',left' → logprob: -13.500779151916504
    9. ',b' → logprob: -13.625779151916504
    10. ',B' → logprob: -14.125779151916504

Token 119: ' vals' (ID: 58985)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.11352021992206573
    2. 'A' → logprob: -2.8635201454162598
    3. 'lst' → logprob: -4.23852014541626
    4. 'x' → logprob: -4.36352014541626
    5. ' a' → logprob: -4.36352014541626
    6. 'n' → logprob: -5.61352014541626
    7. ' A' → logprob: -6.23852014541626
    8. ' lst' → logprob: -7.23852014541626
    9. 'k' → logprob: -7.48852014541626
    10. 'val' → logprob: -7.61352014541626

Token 120: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.007108421064913273
    2. ':' → logprob: -5.757108211517334
    3. ')' → logprob: -6.132108211517334
    4. ',' → logprob: -6.507108211517334
    5. '):
' → logprob: -9.007108688354492
    6. ' ):' → logprob: -9.257108688354492
    7. ':list' → logprob: -10.882108688354492
    8. '   ' → logprob: -11.632108688354492
    9. '=' → logprob: -12.382108688354492
    10. '=None' → logprob: -13.257108688354492

Token 121: '       ' (ID: 309)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6619462370872498
    2. ':' → logprob: -1.1619462966918945
    3. '       ' → logprob: -1.9119462966918945
    4. '):' → logprob: -4.2869462966918945
    5. '<|end|>' → logprob: -5.6619462966918945
    6. ')' → logprob: -5.9119462966918945
    7. '   ' → logprob: -6.2869462966918945
    8. '):
' → logprob: -7.4119462966918945
    9. ':
' → logprob: -8.661946296691895
    10. '<|end|>' → logprob: -9.036946296691895

Token 122: ' pass' (ID: 1853)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21826089918613434
    2. ' self' → logprob: -1.7182608842849731
    3. 'self' → logprob: -4.093260765075684
    4. '	self' → logprob: -10.968260765075684
    5. ' ' → logprob: -13.593260765075684
    6. '   ' → logprob: -13.843260765075684
    7. '      ' → logprob: -14.343260765075684
    8. '	' → logprob: -14.718260765075684
    9. '	   ' → logprob: -14.968260765075684
    10. '           ' → logprob: -15.468260765075684

Token 123: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2656787037849426
    2. '<|end|>' → logprob: -1.6406786441802979
    3. '   ' → logprob: -4.140678882598877
    4. ',' → logprob: -5.015678882598877
    5. 'self' → logprob: -5.015678882598877
    6. ' self' → logprob: -5.640678882598877
    7. ':' → logprob: -6.015678882598877
    8. '	self' → logprob: -7.140678882598877
    9. '<|end|>' → logprob: -7.265678882598877
    10. '```' → logprob: -8.140678405761719

Token 124: '   ' (ID: 271)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.024797791615128517
    2. '<|end|>' → logprob: -4.2747979164123535
    3. 'self' → logprob: -5.2747979164123535
    4. ' self' → logprob: -5.5247979164123535
    5. '   ' → logprob: -7.6497979164123535
    6. '\' → logprob: -8.274797439575195
    7. ',' → logprob: -8.399797439575195
    8. ' ' → logprob: -9.274797439575195
    9. '        
' → logprob: -9.774797439575195
    10. '	' → logprob: -9.774797439575195

Token 125: ' def' (ID: 1056)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04400036111474037
    2. ' self' → logprob: -3.7940003871917725
    3. 'self' → logprob: -3.9190003871917725
    4. '<|end|>' → logprob: -7.919000148773193
    5. '   ' → logprob: -8.544000625610352
    6. ',' → logprob: -10.294000625610352
    7. ' ' → logprob: -10.669000625610352
    8. '	self' → logprob: -10.919000625610352
    9. '	' → logprob: -11.794000625610352
    10. '      ' → logprob: -12.294000625610352

Token 126: ' p' (ID: 275)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.5432624220848083
    2. 'print' → logprob: -0.9182624220848083
    3. ' __' → logprob: -4.668262481689453
    4. '__' → logprob: -5.543262481689453
    5. ' get' → logprob: -6.293262481689453
    6. ' set' → logprob: -7.043262481689453
    7. ' next' → logprob: -7.168262481689453
    8. ' update' → logprob: -7.293262481689453
    9. 'get' → logprob: -7.793262481689453
    10. 'next' → logprob: -8.418262481689453

Token 127: '(self' (ID: 2402)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -5.836499985889532e-05
    2. 'rin' → logprob: -10.0000581741333
    3. 'print' → logprob: -12.6250581741333
    4. '(r' → logprob: -12.7500581741333
    5. 'int' → logprob: -13.5000581741333
    6. 'rocess' → logprob: -14.1250581741333
    7. 'ri' → logprob: -14.3750581741333
    8. 'riv' → logprob: -14.7500581741333
    9. 'rl' → logprob: -14.8750581741333
    10. 'rn' → logprob: -15.0000581741333

Token 128: ',' (ID: 11)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.1136327013373375
    2. ',' → logprob: -2.4886326789855957
    3. '):' → logprob: -3.9886326789855957
    4. 'ar' → logprob: -6.363632678985596
    5. ',r' → logprob: -6.738632678985596
    6. ')' → logprob: -7.363632678985596
    7. 'vals' → logprob: -7.988632678985596
    8. 'ass' → logprob: -8.238633155822754
    9. 'ut' → logprob: -8.613633155822754
    10. '):
' → logprob: -8.988633155822754

Token 129: ' vals' (ID: 58985)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5999598503112793
    2. 'self' → logprob: -1.5999598503112793
    3. 'x' → logprob: -2.2249598503112793
    4. 'val' → logprob: -2.8499598503112793
    5. 'vals' → logprob: -3.3499598503112793
    6. 'i' → logprob: -4.349959850311279
    7. 'lst' → logprob: -4.599959850311279
    8. ' self' → logprob: -5.224959850311279
    9. ')' → logprob: -5.974959850311279
    10. ' ):' → logprob: -5.974959850311279

Token 130: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0004421127669047564
    2. '):
' → logprob: -8.250442504882812
    3. ':' → logprob: -9.625442504882812
    4. ',' → logprob: -10.000442504882812
    5. ')' → logprob: -10.500442504882812
    6. ' ):' → logprob: -10.750442504882812
    7. '[' → logprob: -11.750442504882812
    8. '   ' → logprob: -12.625442504882812
    9. '[]):' → logprob: -12.750442504882812
    10. '():' → logprob: -13.500442504882812

Token 131: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2349812239408493
    2. '       ' → logprob: -1.8599811792373657
    3. '(' → logprob: -4.109981060028076
    4. '<|end|>' → logprob: -4.859981060028076
    5. ',' → logprob: -5.109981060028076
    6. '   ' → logprob: -5.359981060028076
    7. ')' → logprob: -5.484981060028076
    8. ' ' → logprob: -5.984981060028076
    9. '[' → logprob: -6.109981060028076
    10. ' pass' → logprob: -6.484981060028076

Token 132: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -1.0811129808425903
    2. 'print' (adapté à ' print') → logprob: -1.2061129808425903
    3. '       ' → logprob: -1.3311129808425903
    4. ' for' → logprob: -2.831112861633301
    5. ' pass' → logprob: -3.831112861633301
    6. 'for' → logprob: -4.831112861633301
    7. '        ' → logprob: -5.831112861633301
    8. ' if' → logprob: -6.331112861633301
    9. 'pass' → logprob: -7.081112861633301
    10. 'return' → logprob: -7.581112861633301

Token 133: '(vals' (ID: 167053)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.793104350566864
    2. '(*' → logprob: -0.918104350566864
    3. '(vals' → logprob: -1.9181044101715088
    4. '(val' → logprob: -7.54310417175293
    5. '(f' → logprob: -8.29310417175293
    6. '('' → logprob: -8.66810417175293
    7. '()' → logprob: -9.16810417175293
    8. '((' → logprob: -9.41810417175293
    9. '(values' → logprob: -9.66810417175293
    10. '(tuple' → logprob: -10.41810417175293

Token 134: '[' (ID: 58)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00044651966891251504
    2. '[' → logprob: -7.750446319580078
    3. '))' → logprob: -12.250446319580078
    4. ',' → logprob: -12.875446319580078
    5. ' )' → logprob: -13.375446319580078
    6. '   ' → logprob: -13.625446319580078
    7. ')
' → logprob: -13.750446319580078
    8. ')))' → logprob: -14.000446319580078
    9. ')`' → logprob: -14.375446319580078
    10. '),' → logprob: -14.625446319580078

Token 135: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00023488728038500994
    2. '])' → logprob: -8.875234603881836
    3. '1' → logprob: -10.000234603881836
    4. '-' → logprob: -11.250234603881836
    5. ' ' → logprob: -11.375234603881836
    6. ')' → logprob: -11.500234603881836
    7. ':' → logprob: -12.000234603881836
    8. ')])' → logprob: -13.250234603881836
    9. ')]' → logprob: -13.500234603881836
    10. ']' → logprob: -13.625234603881836

Token 136: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.023866670206189156
    2. ')' → logprob: -3.898866653442383
    3. ',end' → logprob: -6.148866653442383
    4. ' ,' → logprob: -7.398866653442383
    5. ',)' → logprob: -8.273866653442383
    6. '[' → logprob: -9.898866653442383
    7. '])' → logprob: -10.023866653442383
    8. '),' → logprob: -10.523866653442383
    9. ' )' → logprob: -10.523866653442383
    10. ',p' → logprob: -10.648866653442383

Token 137: ' vals' (ID: 58985)
  Prédit: 'vals'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vals' → logprob: -0.061986736953258514
    2. ' vals' → logprob: -2.8119866847991943
    3. '(vals' → logprob: -11.561986923217773
    4. 'val' → logprob: -11.686986923217773
    5. 'end' → logprob: -14.936986923217773
    6. 'values' → logprob: -15.436986923217773
    7. '_vals' → logprob: -15.436986923217773
    8. 'vars' → logprob: -16.061986923217773
    9. 'Vals' → logprob: -16.061986923217773
    10. ' ' → logprob: -16.936986923217773

Token 138: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4819071292877197
    2. ')' → logprob: -0.9819071292877197
    3. '])' → logprob: -5.481906890869141
    4. '1' → logprob: -5.981906890869141
    5. '0' → logprob: -7.231906890869141
    6. ',' → logprob: -8.35690689086914
    7. ']' → logprob: -9.23190689086914
    8. ' )' → logprob: -11.48190689086914
    9. '<|end|>' → logprob: -11.60690689086914
    10. '),' → logprob: -11.73190689086914

Token 139: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. '])' → logprob: -14.125001907348633
    3. ' ' → logprob: -14.375001907348633
    4. ']' → logprob: -15.625001907348633
    5. '0' → logprob: -15.750001907348633
    6. ')' → logprob: -17.000001907348633
    7. '[' → logprob: -19.125001907348633
    8. '   ' → logprob: -19.500001907348633
    9. '-' → logprob: -20.000001907348633
    10. '  ' → logprob: -20.250001907348633

Token 140: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -7.226628895296017e-06
    2. '))' → logprob: -12.500007629394531
    3. ' )' → logprob: -13.875007629394531
    4. '})' → logprob: -14.375007629394531
    5. ',' → logprob: -14.625007629394531
    6. ')}' → logprob: -15.375007629394531
    7. '])' → logprob: -15.500007629394531
    8. '),' → logprob: -15.750007629394531
    9. ')
' → logprob: -15.750007629394531
    10. ')")' → logprob: -15.750007629394531

Token 141: 'vals' (ID: 44567)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.9763440489768982
    2. '   ' → logprob: -1.101344108581543
    3. 'self' → logprob: -1.476344108581543
    4. '       ' → logprob: -3.226344108581543
    5. 'class' → logprob: -4.476344108581543
    6. 'def' → logprob: -5.351344108581543
    7. 'B' → logprob: -5.476344108581543
    8. ' ' → logprob: -7.476344108581543
    9. ' A' → logprob: -7.726344108581543
    10. ' self' → logprob: -7.726344108581543

Token 142: ' =' (ID: 314)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.44590917229652405
    2. '[' → logprob: -1.4459091424942017
    3. '<|end|>' → logprob: -2.195909261703491
    4. '(' → logprob: -5.070909023284912
    5. '<|end|>' → logprob: -6.195909023284912
    6. '.' → logprob: -6.570909023284912
    7. ',' → logprob: -6.695909023284912
    8. '[:]' → logprob: -7.820909023284912
    9. ':' → logprob: -8.19590950012207
    10. '=' → logprob: -8.44590950012207

Token 143: ' [' (ID: 723)
  Prédit: '[A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[A' → logprob: -0.561762809753418
    2. '(A' → logprob: -0.936762809753418
    3. 'f' → logprob: -3.561762809753418
    4. ' (' → logprob: -5.436762809753418
    5. '(B' → logprob: -6.186762809753418
    6. 'A' → logprob: -6.811762809753418
    7. '[B' → logprob: -7.436762809753418
    8. '[(' → logprob: -7.561762809753418
    9. ' [' → logprob: -7.811762809753418
    10. '(' → logprob: -8.811762809753418

Token 144: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.00010676169040380046
    2. 'B' → logprob: -9.500106811523438
    3. ' A' → logprob: -10.375106811523438
    4. '   ' → logprob: -14.750106811523438
    5. ' ' → logprob: -15.875106811523438
    6. '  ' → logprob: -16.125106811523438
    7. '0' → logprob: -17.500106811523438
    8. ']' → logprob: -18.250106811523438
    9. 'AB' → logprob: -18.375106811523438
    10. '	A' → logprob: -18.375106811523438

Token 145: ',B' (ID: 19853)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00022845028433948755
    2. ',B' → logprob: -8.500228881835938
    3. ' ,' → logprob: -10.625228881835938
    4. ',A' → logprob: -15.375228881835938
    5. ',K' → logprob: -15.625228881835938
    6. ',
' → logprob: -15.875228881835938
    7. '<|end|>' → logprob: -16.500228881835938
    8. ',val' → logprob: -17.375228881835938
    9. '‌,' → logprob: -17.500228881835938
    10. 'B' → logprob: -18.375228881835938

Token 146: ',K' (ID: 107147)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6584386825561523
    2. ']' → logprob: -1.1584386825561523
    3. ',K' → logprob: -1.7834386825561523
    4. ' ]' → logprob: -8.783438682556152
    5. ' ,' → logprob: -9.908438682556152
    6. ',N' → logprob: -10.908438682556152
    7. ')]' → logprob: -11.033438682556152
    8. ')' → logprob: -11.283438682556152
    9. 'K' → logprob: -11.908438682556152
    10. '<|end|>' → logprob: -12.158438682556152

Token 147: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.005435573868453503
    2. ')' → logprob: -5.505435466766357
    3. ')]' → logprob: -6.630435466766357
    4. '])' → logprob: -10.755435943603516
    5. ' ]' → logprob: -11.380435943603516
    6. ']
' → logprob: -13.505435943603516
    7. '']' → logprob: -14.630435943603516
    8. ']}' → logprob: -15.005435943603516
    9. '()]' → logprob: -15.130435943603516
    10. '<|end|>' → logprob: -15.505435943603516

Token 148: 'x' (ID: 87)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.12376651167869568
    2. 'pr' → logprob: -2.7487664222717285
    3. 'printer' → logprob: -3.1237664222717285
    4. 'print' → logprob: -5.6237664222717285
    5. '<|end|>' → logprob: -5.6237664222717285
    6. ' p' → logprob: -7.2487664222717285
    7. ')' → logprob: -8.623766899108887
    8. 'P' → logprob: -10.248766899108887
    9. ' pr' → logprob: -10.373766899108887
    10. 'Printer' → logprob: -10.748766899108887

Token 149: ',y' (ID: 16103)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1371426284313202
    2. '=' → logprob: -2.1371426582336426
    3. ',' → logprob: -4.762142658233643
    4. '.' → logprob: -6.512142658233643
    5. '_' → logprob: -10.137142181396484
    6. 'vals' → logprob: -10.512142181396484
    7. '.val' → logprob: -11.387142181396484
    8. ')' → logprob: -11.637142181396484
    9. '.=' → logprob: -12.137142181396484
    10. 's' → logprob: -12.137142181396484

Token 150: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1269419640302658
    2. ' =' → logprob: -2.1269419193267822
    3. ',' → logprob: -11.751941680908203
    4. '=f' → logprob: -12.126941680908203
    5. ')' → logprob: -16.126941680908203
    6. '=x' → logprob: -16.501941680908203
    7. 'f' → logprob: -16.626941680908203
    8. ' ' → logprob: -16.876941680908203
    9. '=
' → logprob: -17.001941680908203
    10. '=

' → logprob: -17.126941680908203

Token 151: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.00861456897109747
    2. ' f' → logprob: -4.758614540100098
    3. 'vals' → logprob: -17.883615493774414
    4. ' ' → logprob: -18.383615493774414
    5. '	f' → logprob: -18.508615493774414
    6. '   ' → logprob: -19.008615493774414
    7. '
' → logprob: -19.383615493774414
    8. 'map' → logprob: -19.508615493774414
    9. '(f' → logprob: -19.758615493774414
    10. '_f' → logprob: -19.883615493774414

Token 152: '(vals' (ID: 167053)
  Prédit: '(vals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(vals' → logprob: -7.398067828034982e-05
    2. '(val' → logprob: -9.75007438659668
    3. '(' → logprob: -11.87507438659668
    4. 'vals' → logprob: -12.50007438659668
    5. '(lst' → logprob: -12.62507438659668
    6. '(values' → logprob: -14.62507438659668
    7. ' vals' → logprob: -14.75007438659668
    8. '(vars' → logprob: -14.87507438659668
    9. ' (' → logprob: -16.25007438659668
    10. '(v' → logprob: -16.62507438659668

Token 153: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.173704271830502e-06
    2. ')
' → logprob: -12.75000286102295
    3. '))' → logprob: -16.250003814697266
    4. ' )' → logprob: -16.250003814697266
    5. ')`' → logprob: -17.750003814697266
    6. ')
' → logprob: -18.250003814697266
    7. ')

' → logprob: -18.750003814697266
    8. '),' → logprob: -19.625003814697266
    9. ')}' → logprob: -20.125003814697266
    10. '')' → logprob: -20.500003814697266

Token 154: 'Printer' (ID: 54325)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5364977121353149
    2. 'p' → logprob: -1.161497712135315
    3. 'pr' → logprob: -2.9114975929260254
    4. 'class' → logprob: -3.4114975929260254
    5. 'printer' → logprob: -4.661497592926025
    6. '<|end|>' → logprob: -5.536497592926025
    7. ' p' → logprob: -8.036498069763184
    8. 'Printer' → logprob: -8.536498069763184
    9. ' class' → logprob: -8.661498069763184
    10. '
' → logprob: -8.911498069763184

Token 155: '((' (ID: 2054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11115718632936478
    2. '(x' → logprob: -2.361157178878784
    3. '(vals' → logprob: -4.611157417297363
    4. '()' → logprob: -7.861157417297363
    5. '(values' → logprob: -8.736157417297363
    6. '(`' → logprob: -9.111157417297363
    7. '((' → logprob: -9.236157417297363
    8. '([' → logprob: -9.736157417297363
    9. '(xs' → logprob: -10.486157417297363
    10. '(A' → logprob: -11.236157417297363

Token 156: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00012082771718269214
    2. '(x' → logprob: -9.250121116638184
    3. ' x' → logprob: -11.500121116638184
    4. 'A' → logprob: -12.250121116638184
    5. ')x' → logprob: -12.625121116638184
    6. ')' → logprob: -13.125121116638184
    7. '[x' → logprob: -13.125121116638184
    8. 'vals' → logprob: -13.500121116638184
    9. '0' → logprob: -15.625121116638184
    10. '   ' → logprob: -16.000120162963867

Token 157: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009864578023552895
    2. ',y' → logprob: -4.634864807128906
    3. ' ,' → logprob: -9.134864807128906
    4. 'y' → logprob: -14.759864807128906
    5. ',
' → logprob: -15.884864807128906
    6. ',x' → logprob: -16.009864807128906
    7. ' ' → logprob: -17.509864807128906
    8. ' y' → logprob: -17.634864807128906
    9. ')' → logprob: -18.134864807128906
    10. ',Y' → logprob: -18.259864807128906

Token 158: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0011732018319889903
    2. ' y' → logprob: -6.75117301940918
    3. ' ' → logprob: -13.00117301940918
    4. '  ' → logprob: -15.75117301940918
    5. '   ' → logprob: -15.87617301940918
    6. ',y' → logprob: -16.00117301940918
    7. '    ' → logprob: -16.62617301940918
    8. '	y' → logprob: -16.75117301940918
    9. 'x' → logprob: -17.25117301940918
    10. ',' → logprob: -17.50117301940918

Token 159: ')).' (ID: 8784)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.01124198455363512
    2. ')' → logprob: -4.636241912841797
    3. ')).' → logprob: -6.636241912841797
    4. ').' → logprob: -8.886241912841797
    5. ' ))' → logprob: -10.636241912841797
    6. ')))' → logprob: -12.761241912841797
    7. '))
' → logprob: -12.886241912841797
    8. ' )' → logprob: -12.886241912841797
    9. '));' → logprob: -13.511241912841797
    10. '),' → logprob: -14.511241912841797

Token 160: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -4.320199877838604e-07
    2. ' p' → logprob: -15.0
    3. '_p' → logprob: -17.875
    4. 'P' → logprob: -18.5
    5. '<|end|>' → logprob: -19.125
    6. 'pr' → logprob: -20.25
    7. 'f' → logprob: -20.375
    8. 'print' → logprob: -20.625
    9. 'ps' → logprob: -21.0
    10. ' ' → logprob: -21.375

Token 161: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.30223560333251953
    2. '(' → logprob: -1.5522356033325195
    3. '(x' → logprob: -3.4272356033325195
    4. '()' → logprob: -4.1772356033325195
    5. '([' → logprob: -7.9272356033325195
    6. '<|end|>' → logprob: -8.80223560333252
    7. '([]' → logprob: -8.92723560333252
    8. '(True' → logprob: -9.42723560333252
    9. '(
' → logprob: -9.55223560333252
    10. '(None' → logprob: -9.67723560333252

Token 162: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.002748884493485093
    2. 'A' → logprob: -6.252748966217041
    3. ' x' → logprob: -7.502748966217041
    4. '0' → logprob: -8.752748489379883
    5. '1' → logprob: -10.752748489379883
    6. 'vals' → logprob: -10.752748489379883
    7. 'K' → logprob: -11.502748489379883
    8. ' A' → logprob: -11.502748489379883
    9. ')' → logprob: -11.627748489379883
    10. '255' → logprob: -12.002748489379883

Token 163: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0038395021110773087
    2. ',y' → logprob: -5.628839492797852
    3. ' ,' → logprob: -8.378839492797852
    4. ' ' → logprob: -12.503839492797852
    5. ')' → logprob: -13.128839492797852
    6. 'y' → logprob: -14.128839492797852
    7. ',
' → logprob: -14.253839492797852
    8. ',x' → logprob: -14.503839492797852
    9. ' y' → logprob: -14.628839492797852
    10. '))' → logprob: -15.128839492797852

Token 164: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.02325037121772766
    2. ' y' → logprob: -3.7732503414154053
    3. ' ' → logprob: -12.773250579833984
    4. 'x' → logprob: -13.898250579833984
    5. ')y' → logprob: -15.398250579833984
    6. ')' → logprob: -15.773250579833984
    7. '   ' → logprob: -16.023250579833984
    8. '    ' → logprob: -16.148250579833984
    9. '	y' → logprob: -16.273250579833984
    10. ' ' → logprob: -16.523250579833984

Token 165: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.06197071075439453
    2. ')' → logprob: -2.8119707107543945
    3. ')))' → logprob: -13.061970710754395
    4. '))
' → logprob: -14.186970710754395
    5. ')
' → logprob: -16.311969757080078
    6. ' ))' → logprob: -16.811969757080078
    7. '})' → logprob: -17.811969757080078
    8. '])' → logprob: -18.311969757080078
    9. ' )' → logprob: -18.311969757080078
    10. ')")' → logprob: -18.811969757080078


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 163
Tokens correctement prédits (1ère position, stricte): 63
Tokens correctement prédits (1ère position, avec adaptation): 67
Tokens correctement prédits (top 10): 122
Précision stricte (1ère position): 38.65%
Précision adaptée (1ère position): 41.10%
Précision (top 10): 74.85%
================================================================================
