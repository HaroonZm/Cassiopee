================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:06:28
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def remov(n,a):
    mod=10**9+7
    k=[1]*(n+1)
    gk=k[:]
    kb1=k[:]
    for i in range(1,n+1):
        k[i]=k[i-1]*i%mod
    gk[n]=pow(k[n],mod-2,mod)
    for i in range(n,0,-1):
        gk[i-1]=gk[i]*i%mod
    for i in range(1,n+1):
        kb1[i]=gk[i]*k[i-1]%mod
    kerui=[0]*(n+1)
    for i in range(1,n+1):
        kerui[i]=(kerui[i-1]+kb1[i])%mod
    ans=0
    for i in range(n):
        ans+=a[i]*(kerui[i+1]+kerui[n-i]-1)%mod
        ans%=mod
    ans*=k[n]
    return ans%mod

print(remov(int(input()),[int(i) for i in input().split()]))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' remov' (ID: 12074)
  → Token d'amorce (pas de prédiction)

Token 2: '(n' (ID: 2406)
  → Token d'amorce (pas de prédiction)

Token 3: ',a' (ID: 26776)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.08480256050825119
    2. 'o' → logprob: -2.7098026275634766
    3. 'ove' → logprob: -4.334802627563477
    4. '_e' → logprob: -7.834802627563477
    5. '_' → logprob: -8.334802627563477
    6. '):' → logprob: -8.584802627563477
    7. 'oving' → logprob: -8.709802627563477
    8. ')' → logprob: -8.959802627563477
    9. ',' → logprob: -9.209802627563477
    10. 'ov' → logprob: -9.209802627563477

Token 4: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1177625060081482
    2. ')' → logprob: -2.242762565612793
    3. ',' → logprob: -5.867762565612793
    4. 's' → logprob: -6.492762565612793
    5. 'e' → logprob: -7.992762565612793
    6. '_' → logprob: -9.492762565612793
    7. ' ):' → logprob: -10.617762565612793
    8. ':' → logprob: -10.742762565612793
    9. 'p' → logprob: -11.117762565612793
    10. 'a' → logprob: -11.242762565612793

Token 5: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.24629217386245728
    2. '   ' → logprob: -1.6212921142578125
    3. ' ' → logprob: -5.7462921142578125
    4. ''' → logprob: -5.7462921142578125
    5. '```' → logprob: -5.7462921142578125
    6. ' :' → logprob: -6.3712921142578125
    7. '(' → logprob: -6.3712921142578125
    8. '_' → logprob: -6.4962921142578125
    9. '[:]' → logprob: -6.6212921142578125
    10. '[' → logprob: -7.3712921142578125

Token 6: ' mod' (ID: 1812)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.32589244842529297
    2. 'i' → logprob: -2.200892448425293
    3. 'r' → logprob: -2.325892448425293
    4. '   ' → logprob: -3.325892448425293
    5. ' if' → logprob: -5.075892448425293
    6. '[' → logprob: -5.200892448425293
    7. ''' → logprob: -5.575892448425293
    8. 'if' → logprob: -5.825892448425293
    9. ' i' → logprob: -6.075892448425293
    10. '_' → logprob: -6.200892448425293

Token 7: '=' (ID: 28)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9112948775291443
    2. 'e' → logprob: -1.661294937133789
    3. 'u' → logprob: -1.911294937133789
    4. ' ' → logprob: -2.411294937133789
    5. '=' → logprob: -2.786294937133789
    6. 'ul' → logprob: -3.286294937133789
    7. '(' → logprob: -3.911294937133789
    8. ' =' → logprob: -4.036294937133789
    9. '%' → logprob: -4.536294937133789
    10. 'el' → logprob: -5.411294937133789

Token 8: '10' (ID: 702)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.668796181678772
    2. '10' → logprob: -1.543796181678772
    3. '100' → logprob: -1.668796181678772
    4. ' n' → logprob: -2.9187960624694824
    5. 'n' → logprob: -4.043796062469482
    6. 'a' → logprob: -5.043796062469482
    7. ' a' → logprob: -5.543796062469482
    8. '1' → logprob: -6.543796062469482
    9. '0' → logprob: -7.043796062469482
    10. '256' → logprob: -7.793796062469482

Token 9: '**' (ID: 410)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.36101067066192627
    2. '**' → logprob: -1.3610106706619263
    3. ' **' → logprob: -3.3610105514526367
    4. '-' → logprob: -5.611010551452637
    5. ' ' → logprob: -5.861010551452637
    6. '^' → logprob: -6.611010551452637
    7. ')' → logprob: -6.736010551452637
    8. '*' → logprob: -7.236010551452637
    9. '%' → logprob: -7.236010551452637
    10. '6' → logprob: -7.611010551452637

Token 10: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -2.696889623621246e-06
    2. '-' → logprob: -13.75000286102295
    3. ' ' → logprob: -14.00000286102295
    4. '6' → logprob: -15.12500286102295
    5. '```' → logprob: -15.37500286102295
    6. '8' → logprob: -16.125001907348633
    7. '7' → logprob: -16.625001907348633
    8. '09' → logprob: -17.625001907348633
    9. '18' → logprob: -18.000001907348633
    10. '4' → logprob: -18.375001907348633

Token 11: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0019464874640107155
    2. ' +' → logprob: -6.251946449279785
    3. '```' → logprob: -12.126946449279785
    4. ' ' → logprob: -12.501946449279785
    5. '7' → logprob: -12.501946449279785
    6. '-' → logprob: -13.626946449279785
    7. '+
' → logprob: -13.751946449279785
    8. '6' → logprob: -15.376946449279785
    9. '(' → logprob: -15.376946449279785
    10. '+)' → logprob: -15.751946449279785

Token 12: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. '+' → logprob: -17.375
    3. '```' → logprob: -19.125
    4. '9' → logprob: -19.375
    5. ' ' → logprob: -20.375
    6. '07' → logprob: -20.875
    7. '``' → logprob: -21.125
    8. '   ' → logprob: -21.375
    9. '' → logprob: -22.5625
    10. '

' → logprob: -22.625

Token 13: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2898721694946289
    2. '
' → logprob: -3.164872169494629
    3. ',' → logprob: -3.539872169494629
    4. '```' → logprob: -3.539872169494629
    5. '\n' → logprob: -3.539872169494629
    6. ':
' → logprob: -3.789872169494629
    7. ' ' → logprob: -3.914872169494629
    8. '**' → logprob: -4.039872169494629
    9. '   ' → logprob: -4.164872169494629
    10. '\' → logprob: -4.414872169494629

Token 14: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12322990596294403
    2. ',' → logprob: -3.37322998046875
    3. ' ' → logprob: -3.37322998046875
    4. '
' → logprob: -4.99822998046875
    5. ':
' → logprob: -4.99822998046875
    6. '' → logprob: -5.12322998046875
    7. '\n' → logprob: -5.62322998046875
    8. '   ' → logprob: -5.74822998046875
    9. '\' → logprob: -5.87322998046875
    10. '```' → logprob: -5.87322998046875

Token 15: ' k' (ID: 372)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.4077367782592773
    2. '\' → logprob: -1.6577367782592773
    3. '\n' → logprob: -1.6577367782592773
    4. '
' → logprob: -2.5327367782592773
    5. '   ' → logprob: -2.7827367782592773
    6. ' for' → logprob: -3.1577367782592773
    7. '```' → logprob: -3.2827367782592773
    8. '`' → logprob: -3.9077367782592773
    9. ':' → logprob: -4.032736778259277
    10. '' → logprob: -4.282736778259277

Token 16: '=[' (ID: 13370)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5227630138397217
    2. ' =' → logprob: -1.1477630138397217
    3. ' ' → logprob: -3.2727630138397217
    4. ',' → logprob: -3.5227630138397217
    5. '%' → logprob: -5.522763252258301
    6. ' %' → logprob: -5.772763252258301
    7. '_' → logprob: -6.022763252258301
    8. ' %=' → logprob: -6.272763252258301
    9. '**' → logprob: -6.522763252258301
    10. '+' → logprob: -6.647763252258301

Token 17: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0009161015041172504
    2. '1' → logprob: -7.500916004180908
    3. '[' → logprob: -8.625916481018066
    4. '-' → logprob: -9.375916481018066
    5. ' ' → logprob: -9.750916481018066
    6. ']' → logprob: -10.875916481018066
    7. '[]' → logprob: -12.750916481018066
    8. 'a' → logprob: -12.750916481018066
    9. '[n' → logprob: -13.000916481018066
    10. 'i' → logprob: -13.250916481018066

Token 18: ']*(' (ID: 92627)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.4330635368824005
    2. ',' → logprob: -1.0580635070800781
    3. ' ]' → logprob: -6.558063507080078
    4. ']+' → logprob: -6.683063507080078
    5. ']*' → logprob: -7.558063507080078
    6. ' for' → logprob: -8.058063507080078
    7. ']*(' → logprob: -8.433063507080078
    8. '])' → logprob: -8.558063507080078
    9. ')' → logprob: -9.058063507080078
    10. ')]' → logprob: -9.808063507080078

Token 19: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.008610791526734829
    2. ' n' → logprob: -5.633610725402832
    3. 'len' → logprob: -5.633610725402832
    4. 'a' → logprob: -6.883610725402832
    5. '(n' → logprob: -8.758610725402832
    6. '100' → logprob: -9.633610725402832
    7. '101' → logprob: -10.383610725402832
    8. '10' → logprob: -10.383610725402832
    9. ' len' → logprob: -10.883610725402832
    10. '11' → logprob: -11.633610725402832

Token 20: '+' (ID: 10)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0015012944350019097
    2. '+' → logprob: -7.126501083374023
    3. ' )' → logprob: -7.876501083374023
    4. '-' → logprob: -9.376501083374023
    5. ',)' → logprob: -9.376501083374023
    6. '+)' → logprob: -10.376501083374023
    7. '-)' → logprob: -10.376501083374023
    8. '),' → logprob: -11.251501083374023
    9. ',' → logprob: -11.376501083374023
    10. ')
' → logprob: -11.501501083374023

Token 21: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.007839540019631386
    2. '2' → logprob: -4.882839679718018
    3. ' ' → logprob: -8.38283920288086
    4. '3' → logprob: -13.00783920288086
    5. '5' → logprob: -14.50783920288086
    6. '   ' → logprob: -14.88283920288086
    7. '10' → logprob: -15.00783920288086
    8. '```' → logprob: -15.50783920288086
    9. '  ' → logprob: -15.63283920288086
    10. '7' → logprob: -15.75783920288086

Token 22: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.384836888173595e-05
    2. ')
' → logprob: -9.8750638961792
    3. ' )' → logprob: -11.8750638961792
    4. '   ' → logprob: -13.5000638961792
    5. '`)' → logprob: -14.0000638961792
    6. ')

' → logprob: -14.7500638961792
    7. ')`' → logprob: -14.8750638961792
    8. '<|end|>' → logprob: -15.0000638961792
    9. ')
' → logprob: -15.2500638961792
    10. ']' → logprob: -15.3750638961792

Token 23: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7715213298797607
    2. 'for' → logprob: -0.7715213298797607
    3. '[' → logprob: -3.2715213298797607
    4. '
' → logprob: -4.52152156829834
    5. '   ' → logprob: -4.77152156829834
    6. '<|end|>' → logprob: -5.52152156829834
    7. '	for' → logprob: -6.02152156829834
    8. ' 
' → logprob: -6.14652156829834
    9. ' ' → logprob: -6.14652156829834
    10. '    
' → logprob: -6.89652156829834

Token 24: ' g' (ID: 329)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.25835585594177246
    2. ' for' → logprob: -1.5083558559417725
    3. '[' → logprob: -5.508356094360352
    4. '
' → logprob: -6.258356094360352
    5. '```' → logprob: -9.383356094360352
    6. '\n' → logprob: -9.758356094360352
    7. '   ' → logprob: -10.258356094360352
    8. '	for' → logprob: -10.258356094360352
    9. '[k' → logprob: -10.383356094360352
    10. '[
' → logprob: -10.758356094360352

Token 25: 'k' (ID: 74)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6291856169700623
    2. '=[' → logprob: -1.504185676574707
    3. '[' → logprob: -1.629185676574707
    4. '=[]' → logprob: -4.379185676574707
    5. '[i' → logprob: -4.504185676574707
    6. 'a' → logprob: -5.129185676574707
    7. '[k' → logprob: -5.129185676574707
    8. ' =' → logprob: -5.754185676574707
    9. '[n' → logprob: -6.754185676574707
    10. '=[]
' → logprob: -7.379185676574707

Token 26: '=k' (ID: 105633)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8929541707038879
    2. '=' → logprob: -1.2679541110992432
    3. '=[' → logprob: -1.2679541110992432
    4. '=[]' → logprob: -4.392954349517822
    5. ' =' → logprob: -5.267954349517822
    6. '[i' → logprob: -6.017954349517822
    7. ' ' → logprob: -6.517954349517822
    8. '[k' → logprob: -6.767954349517822
    9. ' =[' → logprob: -7.017954349517822
    10. '[:]' → logprob: -7.517954349517822

Token 27: '[:' (ID: 7808)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.35476288199424744
    2. '[' → logprob: -1.4797629117965698
    3. '<|end|>' → logprob: -3.2297627925872803
    4. '[:]' → logprob: -4.104763031005859
    5. '
' → logprob: -6.229763031005859
    6. '[:' → logprob: -6.729763031005859
    7. '[
' → logprob: -6.729763031005859
    8. ')' → logprob: -6.729763031005859
    9. '.' → logprob: -6.729763031005859
    10. '<|end|>' → logprob: -6.979763031005859

Token 28: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03248212859034538
    2. ')' → logprob: -3.657482147216797
    3. ']
' → logprob: -5.657482147216797
    4. ']
' → logprob: -7.782482147216797
    5. '
' → logprob: -8.157482147216797
    6. '+' → logprob: -8.407482147216797
    7. '])' → logprob: -8.407482147216797
    8. '
' → logprob: -8.407482147216797
    9. ')
' → logprob: -8.532482147216797
    10. ' ]' → logprob: -8.532482147216797

Token 29: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.17014430463314056
    2. '   ' → logprob: -2.5451443195343018
    3. '[' → logprob: -3.1701443195343018
    4. ' for' → logprob: -5.170144081115723
    5. '\n' → logprob: -5.420144081115723
    6. '
' → logprob: -5.420144081115723
    7. ' 
' → logprob: -5.670144081115723
    8. '    
' → logprob: -5.795144081115723
    9. 'for' → logprob: -5.920144081115723
    10. 'def' → logprob: -6.295144081115723

Token 30: ' kb' (ID: 68515)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3419032692909241
    2. 'for' → logprob: -1.3419032096862793
    3. '
' → logprob: -4.466903209686279
    4. ' 
' → logprob: -5.341903209686279
    5. '```' → logprob: -5.841903209686279
    6. '\n' → logprob: -6.216903209686279
    7. '   ' → logprob: -6.466903209686279
    8. '	for' → logprob: -6.841903209686279
    9. '    
' → logprob: -7.216903209686279
    10. '\' → logprob: -7.341903209686279

Token 31: '1' (ID: 16)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6938607692718506
    2. '=[' → logprob: -0.8188607692718506
    3. '[' → logprob: -2.9438607692718506
    4. ' =' → logprob: -5.94386100769043
    5. '=[]' → logprob: -6.56886100769043
    6. ' =[' → logprob: -6.94386100769043
    7. '[i' → logprob: -7.69386100769043
    8. '=['' → logprob: -8.81886100769043
    9. '[k' → logprob: -8.94386100769043
    10. 'b' → logprob: -9.06886100769043

Token 32: '=k' (ID: 105633)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.17499367892742157
    2. ' =' → logprob: -2.2999937534332275
    3. '=[' → logprob: -3.0499937534332275
    4. '[' → logprob: -5.049993515014648
    5. '=[]' → logprob: -5.424993515014648
    6. ' =[' → logprob: -6.424993515014648
    7. ' ' → logprob: -9.924993515014648
    8. '*' → logprob: -10.049993515014648
    9. ',' → logprob: -10.049993515014648
    10. '[:]' → logprob: -10.299993515014648

Token 33: '[:' (ID: 7808)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1959007829427719
    2. '[:]' → logprob: -2.4459006786346436
    3. '+' → logprob: -2.8209006786346436
    4. ']' → logprob: -4.695900917053223
    5. ')' → logprob: -5.695900917053223
    6. '*' → logprob: -5.820900917053223
    7. '<|end|>' → logprob: -5.945900917053223
    8. '.' → logprob: -5.945900917053223
    9. '[]' → logprob: -6.195900917053223
    10. '=' → logprob: -6.195900917053223

Token 34: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03334550932049751
    2. ']' → logprob: -3.5333454608917236
    3. ')
' → logprob: -6.783345699310303
    4. '])' → logprob: -6.908345699310303
    5. ')]' → logprob: -7.408345699310303
    6. ')
' → logprob: -8.158345222473145
    7. '+' → logprob: -8.908345222473145
    8. ' )' → logprob: -8.908345222473145
    9. ')

' → logprob: -9.783345222473145
    10. ')])' → logprob: -10.533345222473145

Token 35: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09407588839530945
    2. '[' → logprob: -3.344075918197632
    3. '   ' → logprob: -3.719075918197632
    4. ' 
' → logprob: -4.469075679779053
    5. ' ' → logprob: -5.844075679779053
    6. '
' → logprob: -5.969075679779053
    7. '\n' → logprob: -6.219075679779053
    8. '  
' → logprob: -6.344075679779053
    9. ' for' → logprob: -6.469075679779053
    10. 'n' → logprob: -7.094075679779053

Token 36: ' for' (ID: 395)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03393474593758583
    2. '[' → logprob: -4.783934593200684
    3. ' 
' → logprob: -4.908934593200684
    4. '
' → logprob: -5.533934593200684
    5. '\n' → logprob: -6.033934593200684
    6. ' for' → logprob: -6.158934593200684
    7. 'for' (adapté à ' for') → logprob: -6.283934593200684
    8. 'n' → logprob: -6.783934593200684
    9. '' → logprob: -7.033934593200684
    10. '  
' → logprob: -7.033934593200684

Token 37: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.08940133452415466
    2. ' ' → logprob: -2.5894012451171875
    3. 'i' → logprob: -4.9644012451171875
    4. '_' → logprob: -6.0894012451171875
    5. ' _' → logprob: -6.8394012451171875
    6. ' ' → logprob: -9.839401245117188
    7. ' ‌' → logprob: -10.464401245117188
    8. ')' → logprob: -11.589401245117188
    9. '	i' → logprob: -11.839401245117188
    10. ' in' → logprob: -11.964401245117188

Token 38: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005701842252165079
    2. 'in' → logprob: -5.755702018737793
    3. ' ' → logprob: -6.005702018737793
    4. '  ' → logprob: -10.505702018737793
    5. 'n' → logprob: -11.380702018737793
    6. '<|end|>' → logprob: -12.505702018737793
    7. '1' → logprob: -13.005702018737793
    8. '=' → logprob: -13.630702018737793
    9. '	in' → logprob: -13.630702018737793
    10. ',' → logprob: -13.630702018737793

Token 39: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0018996017752215266
    2. ' ' → logprob: -6.751899719238281
    3. 'range' → logprob: -7.251899719238281
    4. ' xrange' → logprob: -11.376899719238281
    5. '	range' → logprob: -11.876899719238281
    6. '(range' → logprob: -14.126899719238281
    7. ')' → logprob: -15.001899719238281
    8. ' in' → logprob: -15.626899719238281
    9. ' ' → logprob: -16.00189971923828
    10. ' ran' → logprob: -16.12689971923828

Token 40: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.020965157076716423
    2. '(n' → logprob: -4.020965099334717
    3. ' (' → logprob: -5.895965099334717
    4. ' ' → logprob: -9.770965576171875
    5. '(i' → logprob: -13.645965576171875
    6. '(
' → logprob: -14.645965576171875
    7. '1' → logprob: -14.895965576171875
    8. ' n' → logprob: -14.895965576171875
    9. '(len' → logprob: -15.020965576171875
    10. ' in' → logprob: -15.395965576171875

Token 41: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07107925415039062
    2. '2' → logprob: -2.6960792541503906
    3. ' ' → logprob: -7.071079254150391
    4. 'n' → logprob: -8.19607925415039
    5. ' n' → logprob: -11.69607925415039
    6. '0' → logprob: -12.32107925415039
    7. '   ' → logprob: -13.69607925415039
    8. ')' → logprob: -13.82107925415039
    9. '(' → logprob: -14.44607925415039
    10. '4' → logprob: -14.94607925415039

Token 42: ',n' (ID: 18103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0562203973531723
    2. ',n' → logprob: -3.431220293045044
    3. ' ,' → logprob: -3.931220293045044
    4. ' ' → logprob: -6.681220531463623
    5. ')' → logprob: -7.431220531463623
    6. ' )' → logprob: -7.431220531463623
    7. '<|end|>' → logprob: -10.056220054626465
    8. ' to' → logprob: -10.431220054626465
    9. ',len' → logprob: -10.431220054626465
    10. '   ' → logprob: -10.931220054626465

Token 43: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0014025020645931363
    2. ' +' → logprob: -7.126402378082275
    3. '):' → logprob: -7.501402378082275
    4. '):
' → logprob: -11.501402854919434
    5. ')' → logprob: -11.501402854919434
    6. ')+' → logprob: -12.126402854919434
    7. '+i' → logprob: -12.626402854919434
    8. '<|end|>' → logprob: -13.126402854919434
    9. '+:' → logprob: -13.251402854919434
    10. '+
' → logprob: -13.376402854919434

Token 44: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004989399458281696
    2. ' ' → logprob: -7.6254987716674805
    3. '+' → logprob: -12.75049877166748
    4. '```' → logprob: -13.00049877166748
    5. '   ' → logprob: -13.12549877166748
    6. '2' → logprob: -13.75049877166748
    7. ')' → logprob: -13.75049877166748
    8. '-' → logprob: -14.81299877166748
    9. '  ' → logprob: -15.12549877166748
    10. '):
' → logprob: -15.68799877166748

Token 45: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0023442539386451244
    2. ':' → logprob: -6.877344131469727
    3. ')' → logprob: -7.377344131469727
    4. ' ):' → logprob: -7.502344131469727
    5. '):
' → logprob: -9.377344131469727
    6. ',' → logprob: -10.252344131469727
    7. ']:' → logprob: -12.127344131469727
    8. '+' → logprob: -14.002344131469727
    9. ' )' → logprob: -14.127344131469727
    10. ' ' → logprob: -14.377344131469727

Token 46: '       ' (ID: 309)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.647161602973938
    2. '<|end|>' → logprob: -1.897161602973938
    3. '       ' → logprob: -2.5221614837646484
    4. '    ' → logprob: -3.1471614837646484
    5. ' k' → logprob: -3.2721614837646484
    6. '	' → logprob: -3.2721614837646484
    7. '   ' → logprob: -3.5221614837646484
    8. '	   ' → logprob: -3.7721614837646484
    9. '	k' → logprob: -3.7721614837646484
    10. 'k' → logprob: -4.397161483764648

Token 47: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.18061751127243042
    2. 'k' (adapté à ' k') → logprob: -1.8056175708770752
    3. ' kb' → logprob: -7.930617332458496
    4. ' g' → logprob: -9.055617332458496
    5. 'kb' → logprob: -9.305617332458496
    6. ' ' → logprob: -9.305617332458496
    7. '	k' → logprob: -9.555617332458496
    8. ' i' → logprob: -10.055617332458496
    9. '    ' → logprob: -10.680617332458496
    10. '   ' → logprob: -10.805617332458496

Token 48: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0031977968756109476
    2. '[' → logprob: -5.87819766998291
    3. '*=' → logprob: -8.12819766998291
    4. '[k' → logprob: -9.87819766998291
    5. '*' → logprob: -11.37819766998291
    6. '[j' → logprob: -11.62819766998291
    7. '=' → logprob: -11.87819766998291
    8. ' *=' → logprob: -12.00319766998291
    9. '[
' → logprob: -12.75319766998291
    10. ' ' → logprob: -12.75319766998291

Token 49: ']=' (ID: 9539)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3391428291797638
    2. '*=' → logprob: -1.8391427993774414
    3. ']=' → logprob: -2.4641427993774414
    4. '=k' → logprob: -4.339142799377441
    5. ']' → logprob: -4.464142799377441
    6. ' =' → logprob: -4.964142799377441
    7. '=i' → logprob: -5.714142799377441
    8. '*' → logprob: -5.714142799377441
    9. ' *=' → logprob: -6.339142799377441
    10. ')=' → logprob: -7.089142799377441

Token 50: 'k' (ID: 74)
  Prédit: '(k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.31652966141700745
    2. 'k' → logprob: -1.441529631614685
    3. '(i' → logprob: -4.066529750823975
    4. '(' → logprob: -4.566529750823975
    5. ' (' → logprob: -5.441529750823975
    6. 'i' → logprob: -6.316529750823975
    7. ' k' → logprob: -7.066529750823975
    8. ' i' → logprob: -10.691529273986816
    9. ' ' → logprob: -10.816529273986816
    10. '(int' → logprob: -11.066529273986816

Token 51: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.723352049040841e-06
    2. '[' → logprob: -13.500004768371582
    3. '```' → logprob: -13.625004768371582
    4. 'i' → logprob: -14.250004768371582
    5. '-' → logprob: -15.000004768371582
    6. '[-' → logprob: -15.125004768371582
    7. '\[' → logprob: -15.125004768371582
    8. '[I' → logprob: -15.125004768371582
    9. '[
' → logprob: -16.125003814697266
    10. '`' → logprob: -16.500003814697266

Token 52: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0009242036612704396
    2. ' -' → logprob: -7.000924110412598
    3. ']-' → logprob: -12.875924110412598
    4. ']' → logprob: -13.125924110412598
    5. '-i' → logprob: -13.500924110412598
    6. '*' → logprob: -13.625924110412598
    7. '*-' → logprob: -13.750924110412598
    8. ' ' → logprob: -14.000924110412598
    9. '*i' → logprob: -14.250924110412598
    10. '1' → logprob: -14.250924110412598

Token 53: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00017863049288280308
    2. '-' → logprob: -8.750178337097168
    3. ' ' → logprob: -11.500178337097168
    4. ']' → logprob: -12.250178337097168
    5. '```' → logprob: -13.125178337097168
    6. '   ' → logprob: -14.250178337097168
    7. '<|end|>' → logprob: -14.500178337097168
    8. ' -' → logprob: -14.500178337097168
    9. 'i' → logprob: -15.187678337097168
    10. '`' → logprob: -15.937678337097168

Token 54: ']*' (ID: 18579)
  Prédit: ']*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*' → logprob: -0.020978115499019623
    2. ']' → logprob: -4.020977973937988
    3. '*' → logprob: -6.520977973937988
    4. ']+' → logprob: -7.270977973937988
    5. ']*(' → logprob: -7.645977973937988
    6. '*i' → logprob: -9.645977973937988
    7. ']%' → logprob: -10.520977973937988
    8. ']<<' → logprob: -10.520977973937988
    9. ']*)' → logprob: -11.520977973937988
    10. ' ]' → logprob: -11.895977973937988

Token 55: 'i' (ID: 72)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.02574906498193741
    2. 'i' → logprob: -4.275749206542969
    3. '2' → logprob: -4.900749206542969
    4. ' a' → logprob: -5.900749206542969
    5. ' ' → logprob: -8.525749206542969
    6. '(a' → logprob: -8.525749206542969
    7. '(i' → logprob: -8.525749206542969
    8. ' i' → logprob: -8.775749206542969
    9. '10' → logprob: -8.775749206542969
    10. '3' → logprob: -9.775749206542969

Token 56: '%' (ID: 4)
  Prédit: '%'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.5762304663658142
    2. ' %' → logprob: -0.8262304663658142
    3. ' ' → logprob: -8.4512300491333
    4. '%i' → logprob: -10.5762300491333
    5. '%n' → logprob: -11.0762300491333
    6. '%m' → logprob: -12.0762300491333
    7. '%c' → logprob: -12.2012300491333
    8. ' ' → logprob: -12.7012300491333
    9. ' %
' → logprob: -12.9512300491333
    10. '
' → logprob: -13.0762300491333

Token 57: 'mod' (ID: 4847)
  Prédit: 'mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -2.8206473871250637e-05
    2. ' mod' → logprob: -10.500028610229492
    3. '(mod' → logprob: -14.375028610229492
    4. '	mod' → logprob: -18.875028610229492
    5. '(' → logprob: -19.750028610229492
    6. '100' → logprob: -19.875028610229492
    7. ' ' → logprob: -19.875028610229492
    8. '   ' → logprob: -20.625028610229492
    9. '```' → logprob: -21.000028610229492
    10. 'm' → logprob: -21.375028610229492

Token 58: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0258939266204834
    2. '<|end|>' → logprob: -1.2758939266204834
    3. '   ' → logprob: -2.0258939266204834
    4. ' 
' → logprob: -2.9008939266204834
    5. ' ' → logprob: -3.5258939266204834
    6. 'g' → logprob: -3.6508939266204834
    7. '\n' → logprob: -3.9008939266204834
    8. ',' → logprob: -4.1508941650390625
    9. ')' → logprob: -4.2758941650390625
    10. '```' → logprob: -4.4008941650390625

Token 59: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 60: ' g' (ID: 329)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 61: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -4.723352049040841e-06
    2. 'g' → logprob: -12.625004768371582
    3. '[k' → logprob: -15.000004768371582
    4. 'def' → logprob: -15.125004768371582
    5. '[' → logprob: -15.250004768371582
    6. 'import' → logprob: -16.500003814697266
    7. 'b' → logprob: -16.875003814697266
    8. 'inv' → logprob: -17.000003814697266
    9. '=' → logprob: -17.250003814697266
    10. '```' → logprob: -17.375003814697266

Token 62: '[n' (ID: 15433)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.6350346803665161
    2. '[' → logprob: -0.7600346803665161
    3. '=[' → logprob: -6.885034561157227
    4. '[n' → logprob: -8.135034561157227
    5. 'inv' → logprob: -8.385034561157227
    6. '[k' → logprob: -9.260034561157227
    7. '[::-' → logprob: -9.385034561157227
    8. '[:]' → logprob: -9.385034561157227
    9. '=' → logprob: -9.635034561157227
    10. '[j' → logprob: -9.635034561157227

Token 63: ']=' (ID: 9539)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.09213685244321823
    2. ']=' → logprob: -2.467136859893799
    3. ']+=' → logprob: -7.092136859893799
    4. ']!' → logprob: -7.717136859893799
    5. ']==' → logprob: -7.967136859893799
    6. '-' → logprob: -8.09213638305664
    7. ']=-' → logprob: -8.21713638305664
    8. ']!=' → logprob: -8.34213638305664
    9. ']=(' → logprob: -9.46713638305664
    10. '!' → logprob: -9.59213638305664

Token 64: 'pow' (ID: 30304)
  Prédit: 'pow'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.582945704460144
    2. 'k' → logprob: -1.207945704460144
    3. '1' → logprob: -1.957945704460144
    4. ' pow' → logprob: -7.332945823669434
    5. '(pow' → logprob: -7.957945823669434
    6. '0' → logprob: -8.082945823669434
    7. ' ' → logprob: -9.332945823669434
    8. '2' → logprob: -10.582945823669434
    9. '(' → logprob: -10.582945823669434
    10. 'kb' → logprob: -10.707945823669434

Token 65: '(k' (ID: 12125)
  Prédit: '(k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -1.1160349458805285e-05
    2. '(' → logprob: -11.500011444091797
    3. 'k' → logprob: -14.125011444091797
    4. '[k' → logprob: -16.000011444091797
    5. '(g' → logprob: -16.250011444091797
    6. '(mod' → logprob: -16.750011444091797
    7. '(n' → logprob: -17.250011444091797
    8. '(pow' → logprob: -17.625011444091797
    9. 'mod' → logprob: -18.250011444091797
    10. ',k' → logprob: -18.875011444091797

Token 66: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -1.5094070477061905e-05
    2. 'n' → logprob: -11.250015258789062
    3. '[' → logprob: -13.125015258789062
    4. '[-' → logprob: -16.750015258789062
    5. '	n' → logprob: -17.375015258789062
    6. '[i' → logprob: -17.875015258789062
    7. '[N' → logprob: -17.875015258789062
    8. '```' → logprob: -18.000015258789062
    9. '

' → logprob: -19.500015258789062
    10. '[k' → logprob: -19.750015258789062

Token 67: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.22946584224700928
    2. ',-' → logprob: -1.6044658422470093
    3. ',n' → logprob: -5.854465961456299
    4. ' ,' → logprob: -8.35446548461914
    5. '-' → logprob: -8.72946548461914
    6. ',m' → logprob: -8.97946548461914
    7. ',module' → logprob: -8.97946548461914
    8. 'mod' → logprob: -9.35446548461914
    9. ' ,-' → logprob: -9.35446548461914
    10. ',num' → logprob: -9.60446548461914

Token 68: 'mod' (ID: 4847)
  Prédit: 'mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.052031610161066055
    2. '-' → logprob: -3.1770315170288086
    3. ' mod' → logprob: -4.802031517028809
    4. ' -' → logprob: -8.802031517028809
    5. ' ' → logprob: -8.802031517028809
    6. '100' → logprob: -9.302031517028809
    7. '10' → logprob: -9.427031517028809
    8. '.mod' → logprob: -9.677031517028809
    9. '(mod' → logprob: -9.802031517028809
    10. 'm' → logprob: -10.052031517028809

Token 69: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -2.165027217415627e-05
    2. ' -' → logprob: -10.750021934509277
    3. '```' → logprob: -16.25002098083496
    4. '{-' → logprob: -16.75002098083496
    5. '()-' → logprob: -17.37502098083496
    6. '-mod' → logprob: -17.62502098083496
    7. '−' → logprob: -17.87502098083496
    8. ')-' → logprob: -18.87502098083496
    9. ''-' → logprob: -19.25002098083496
    10. '–' → logprob: -19.25002098083496

Token 70: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00010199354437645525
    2. '-' → logprob: -9.250102043151855
    3. ' ' → logprob: -13.687602043151855
    4. '```' → logprob: -13.812602043151855
    5. '<|end|>' → logprob: -14.250102043151855
    6. '۲' → logprob: -14.562602043151855
    7. ' -' → logprob: -14.562602043151855
    8. '' → logprob: -15.312602043151855
    9. '٢' → logprob: -15.437602043151855
    10. '२' → logprob: -15.562602043151855

Token 71: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001865571946837008
    2. ' ,' → logprob: -7.001865386962891
    3. ')' → logprob: -7.251865386962891
    4. ',n' → logprob: -8.75186538696289
    5. ',module' → logprob: -10.62686538696289
    6. ',k' → logprob: -11.25186538696289
    7. ',num' → logprob: -11.50186538696289
    8. '%' → logprob: -12.50186538696289
    9. ',end' → logprob: -12.75186538696289
    10. '   ' → logprob: -12.75186538696289

Token 72: 'mod' (ID: 4847)
  Prédit: 'mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -5.512236498361744e-07
    2. ' mod' → logprob: -14.500000953674316
    3. '	mod' → logprob: -19.875
    4. '   ' → logprob: -22.125
    5. ')' → logprob: -22.25
    6. '(mod' → logprob: -22.375
    7. '```' → logprob: -23.5
    8. 'moder' → logprob: -23.75
    9. 'm' → logprob: -24.125
    10. '>' → logprob: -24.25

Token 73: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9385402993066236e-05
    2. ')
' → logprob: -11.000019073486328
    3. ' )' → logprob: -13.750019073486328
    4. ')
' → logprob: -15.125019073486328
    5. '   ' → logprob: -15.875019073486328
    6. ')

' → logprob: -16.125019073486328
    7. '')' → logprob: -16.125019073486328
    8. ')`' → logprob: -16.125019073486328
    9. '),' → logprob: -16.375019073486328
    10. ',' → logprob: -16.625019073486328

Token 74: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 75: ' for' (ID: 395)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 76: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0019514684099704027
    2. 'i' → logprob: -6.251951694488525
    3. ' ' → logprob: -10.876951217651367
    4. '<|end|>' → logprob: -13.876951217651367
    5. ' j' → logprob: -14.251951217651367
    6. '  ' → logprob: -14.376951217651367
    7. ' in' → logprob: -14.501951217651367
    8. '	i' → logprob: -14.501951217651367
    9. '`' → logprob: -15.001951217651367
    10. '   ' → logprob: -16.001951217651367

Token 77: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005335385911166668
    2. 'in' → logprob: -5.255335330963135
    3. ' ' → logprob: -9.630335807800293
    4. '  ' → logprob: -11.255335807800293
    5. 'n' → logprob: -11.755335807800293
    6. '   ' → logprob: -12.130335807800293
    7. 'range' → logprob: -13.005335807800293
    8. ' n' → logprob: -13.380335807800293
    9. '	in' → logprob: -13.630335807800293
    10. 'In' → logprob: -13.880335807800293

Token 78: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.20145437121391296
    2. ' range' → logprob: -1.7014544010162354
    3. ' ' → logprob: -10.576454162597656
    4. '(range' → logprob: -12.076454162597656
    5. 're' → logprob: -12.451454162597656
    6. ' reversed' → logprob: -13.451454162597656
    7. '  ' → logprob: -13.576454162597656
    8. '   ' → logprob: -13.576454162597656
    9. '	range' → logprob: -14.451454162597656
    10. ' xrange' → logprob: -14.576454162597656

Token 79: '(n' (ID: 2406)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.21681486070156097
    2. '(range' → logprob: -1.7168148756027222
    3. 'range' → logprob: -4.216814994812012
    4. '(' → logprob: -7.841814994812012
    5. ' (' → logprob: -9.216814994812012
    6. '	range' → logprob: -10.591814994812012
    7. ' ' → logprob: -11.591814994812012
    8. '(n' → logprob: -12.466814994812012
    9. ' in' → logprob: -13.216814994812012
    10. '  ' → logprob: -13.216814994812012

Token 80: ',' (ID: 11)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00015097891446202993
    2. ' -' → logprob: -9.500150680541992
    3. ',' → logprob: -10.000150680541992
    4. ',-' → logprob: -10.750150680541992
    5. ',i' → logprob: -12.500150680541992
    6. ' ' → logprob: -13.875150680541992
    7. ' ,' → logprob: -14.000150680541992
    8. 'in' → logprob: -14.250150680541992
    9. '-,' → logprob: -14.250150680541992
    10. '   ' → logprob: -14.500150680541992

Token 81: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0003806257154792547
    2. ' ' → logprob: -7.875380516052246
    3. '1' → logprob: -15.000380516052246
    4. '   ' → logprob: -16.000381469726562
    5. '-' → logprob: -16.125381469726562
    6. '>' → logprob: -17.875381469726562
    7. '```' → logprob: -18.125381469726562
    8. 'i' → logprob: -18.375381469726562
    9. '  ' → logprob: -18.375381469726562
    10. ' -' → logprob: -18.875381469726562

Token 82: ',-' (ID: 8202)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.004683476407080889
    2. ' -' → logprob: -5.629683494567871
    3. ',-' → logprob: -7.254683494567871
    4. ',' → logprob: -8.254683494567871
    5. '   ' → logprob: -10.129683494567871
    6. '-i' → logprob: -11.004683494567871
    7. '```' → logprob: -11.254683494567871
    8. '-,' → logprob: -11.504683494567871
    9. '0' → logprob: -11.754683494567871
    10. '  ' → logprob: -12.254683494567871

Token 83: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006629953859373927
    2. '-' → logprob: -7.375662803649902
    3. ' -' → logprob: -10.625662803649902
    4. ' ' → logprob: -11.625662803649902
    5. ')' → logprob: -13.875662803649902
    6. '```' → logprob: -14.000662803649902
    7. '   ' → logprob: -14.750662803649902
    8. '<|end|>' → logprob: -15.125662803649902
    9. '0' → logprob: -15.500662803649902
    10. ')>' → logprob: -16.12566375732422

Token 84: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.20547476410865784
    2. '):
' → logprob: -1.8304747343063354
    3. '-' → logprob: -3.705474853515625
    4. '):
' → logprob: -8.580474853515625
    5. '   ' → logprob: -8.705474853515625
    6. ':' → logprob: -8.705474853515625
    7. '):-' → logprob: -9.330474853515625
    8. ' ):' → logprob: -9.580474853515625
    9. ' -' → logprob: -10.205474853515625
    10. '1' → logprob: -10.705474853515625

Token 85: '       ' (ID: 309)
  Prédit: ' g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' g' → logprob: -0.24775296449661255
    2. ':' → logprob: -2.8727529048919678
    3. '   ' → logprob: -2.9977529048919678
    4. '<|end|>' → logprob: -2.9977529048919678
    5. '	g' → logprob: -3.7477529048919678
    6. '       ' → logprob: -4.372753143310547
    7. 'g' → logprob: -4.497753143310547
    8. ' ' → logprob: -4.872753143310547
    9. '>' → logprob: -6.997753143310547
    10. ',g' → logprob: -7.247753143310547

Token 86: ' g' (ID: 329)
  Prédit: ' g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' g' → logprob: -0.10171142220497131
    2. 'g' (adapté à ' g') → logprob: -2.3517115116119385
    3. '<|end|>' → logprob: -7.476711273193359
    4. '```' → logprob: -8.47671127319336
    5. ' ' → logprob: -8.97671127319336
    6. '	g' → logprob: -9.10171127319336
    7. '       ' → logprob: -9.10171127319336
    8. ' 
' → logprob: -9.35171127319336
    9. '   ' → logprob: -10.10171127319336
    10. '    ' → logprob: -10.22671127319336

Token 87: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.2664456789934775e-06
    2. '[k' → logprob: -13.875000953674316
    3. '[' → logprob: -15.750000953674316
    4. '_k' → logprob: -16.875001907348633
    5. '<|end|>' → logprob: -17.000001907348633
    6. '	k' → logprob: -17.125001907348633
    7. 'к' → logprob: -17.250001907348633
    8. ' k' → logprob: -18.750001907348633
    9. 'g' → logprob: -19.125001907348633
    10. '*k' → logprob: -19.250001907348633

Token 88: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.980854959692806e-05
    2. '[' → logprob: -10.250069618225098
    3. '[I' → logprob: -11.000069618225098
    4. '\[' → logprob: -11.375069618225098
    5. '```' → logprob: -12.375069618225098
    6. '[
' → logprob: -14.875069618225098
    7. '[int' → logprob: -15.125069618225098
    8. '[g' → logprob: -15.500069618225098
    9. '[j' → logprob: -15.750069618225098
    10. ''[' → logprob: -16.000070571899414

Token 89: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.018554553389549255
    2. ']=' → logprob: -4.8935546875
    3. '[i' → logprob: -5.0185546875
    4. '[' → logprob: -6.3935546875
    5. '-=' → logprob: -7.1435546875
    6. '=i' → logprob: -7.7685546875
    7. ')=' → logprob: -7.8935546875
    8. '=' → logprob: -8.2685546875
    9. ' -' → logprob: -8.6435546875
    10. '[-' → logprob: -8.7685546875

Token 90: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.610702363715973e-06
    2. ' ' → logprob: -12.375009536743164
    3. '0' → logprob: -13.000009536743164
    4. ')' → logprob: -13.125009536743164
    5. ']' → logprob: -14.625009536743164
    6. '<|end|>' → logprob: -15.125009536743164
    7. '   ' → logprob: -15.625009536743164
    8. '```' → logprob: -16.375009536743164
    9. '2' → logprob: -18.125009536743164
    10. ')=' → logprob: -18.250009536743164

Token 91: ']=' (ID: 9539)
  Prédit: ')='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')=' → logprob: -0.34715765714645386
    2. ']=' → logprob: -1.4721577167510986
    3. '=' → logprob: -2.8471577167510986
    4. '*=' → logprob: -5.9721574783325195
    5. '=g' → logprob: -6.0971574783325195
    6. ')' → logprob: -7.7221574783325195
    7. ']=(' → logprob: -8.59715747833252
    8. '=k' → logprob: -9.22215747833252
    9. '"]=' → logprob: -9.34715747833252
    10. '}=' → logprob: -9.84715747833252

Token 92: 'g' (ID: 70)
  Prédit: 'g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.07893671840429306
    2. '(g' → logprob: -2.578936815261841
    3. '(' → logprob: -10.703936576843262
    4. ' g' → logprob: -11.578936576843262
    5. '```' → logprob: -12.578936576843262
    6. '.g' → logprob: -13.328936576843262
    7. ' (' → logprob: -13.578936576843262
    8. '	g' → logprob: -13.828936576843262
    9. '_g' → logprob: -13.828936576843262
    10. '=g' → logprob: -13.953936576843262

Token 93: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.6240566083070007e-06
    2. '[k' → logprob: -14.000001907348633
    3. '[' → logprob: -15.375001907348633
    4. ' k' → logprob: -15.625001907348633
    5. 'g' → logprob: -16.375001907348633
    6. '[i' → logprob: -16.625001907348633
    7. 'к' → logprob: -17.875001907348633
    8. '_k' → logprob: -18.375001907348633
    9. '	k' → logprob: -18.500001907348633
    10. 'o' → logprob: -18.625001907348633

Token 94: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.47495681833243e-05
    2. '[' → logprob: -10.750024795532227
    3. '[I' → logprob: -12.750024795532227
    4. 'i' → logprob: -16.125024795532227
    5. '```' → logprob: -16.750024795532227
    6. '[g' → logprob: -16.875024795532227
    7. '[int' → logprob: -17.250024795532227
    8. '[
' → logprob: -17.250024795532227
    9. ' [' → logprob: -17.500024795532227
    10. '[u' → logprob: -18.375024795532227

Token 95: ']*' (ID: 18579)
  Prédit: '*i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*i' → logprob: -0.00019042797794099897
    2. '*' → logprob: -9.875190734863281
    3. '"*' → logprob: -10.000190734863281
    4. '**' → logprob: -10.375190734863281
    5. ']*' → logprob: -11.000190734863281
    6. '*k' → logprob: -11.375190734863281
    7. ''*' → logprob: -11.750190734863281
    8. '*(' → logprob: -12.375190734863281
    9. '*g' → logprob: -12.375190734863281
    10. '```' → logprob: -12.625190734863281

Token 96: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -5.080963092041202e-06
    2. ' i' → logprob: -12.250004768371582
    3. '[i' → logprob: -17.1250057220459
    4. '	i' → logprob: -17.5000057220459
    5. '<|end|>' → logprob: -17.8750057220459
    6. '%i' → logprob: -18.6250057220459
    7. '*i' → logprob: -18.7500057220459
    8. '(i' → logprob: -18.8750057220459
    9. '   ' → logprob: -19.0000057220459
    10. ''i' → logprob: -19.1250057220459

Token 97: '%' (ID: 4)
  Prédit: '%'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.001502717612311244
    2. ' %' → logprob: -6.501502513885498
    3. ')%' → logprob: -15.501502990722656
    4. '%
' → logprob: -16.751502990722656
    5. 'mod' → logprob: -17.251502990722656
    6. '```' → logprob: -17.376502990722656
    7. ' mod' → logprob: -17.501502990722656
    8. ']%' → logprob: -17.626502990722656
    9. '%n' → logprob: -17.751502990722656
    10. '	' → logprob: -18.376502990722656

Token 98: 'mod' (ID: 4847)
  Prédit: 'mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -2.339278580620885e-06
    2. ' mod' → logprob: -13.000001907348633
    3. '(mod' → logprob: -19.000001907348633
    4. '	mod' → logprob: -20.625001907348633
    5. '```' → logprob: -21.625001907348633
    6. '10' → logprob: -22.375001907348633
    7. '
' → logprob: -22.625001907348633
    8. '`' → logprob: -23.500001907348633
    9. 'm' → logprob: -23.500001907348633
    10. '   ' → logprob: -23.625001907348633

Token 99: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15576966106891632
    2. '
' → logprob: -2.1557695865631104
    3. '<|end|>' → logprob: -3.9057695865631104
    4. '```' → logprob: -5.6557698249816895
    5. '    
' → logprob: -6.5307698249816895
    6. ' 
' → logprob: -7.5307698249816895
    7. '	return' → logprob: -8.030769348144531
    8. ' ' → logprob: -8.155769348144531
    9. '       ' → logprob: -8.280769348144531
    10. '  
' → logprob: -8.655769348144531

Token 100: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001858676434494555
    2. '<|end|>' → logprob: -6.876858711242676
    3. '	return' → logprob: -8.876858711242676
    4. ' ' → logprob: -9.126858711242676
    5. '    
' → logprob: -9.251858711242676
    6. ' return' → logprob: -9.251858711242676
    7. 'b' → logprob: -10.001858711242676
    8. '    ' → logprob: -10.126858711242676
    9. '  ' → logprob: -10.376858711242676
    10. '
' → logprob: -10.376858711242676

Token 101: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20452944934368134
    2. 'b' → logprob: -1.9545294046401978
    3. 'for' (adapté à ' for') → logprob: -4.454529285430908
    4. 'def' → logprob: -4.454529285430908
    5. ' for' → logprob: -4.704529285430908
    6. 'return' → logprob: -5.829529285430908
    7. ' ' → logprob: -5.954529285430908
    8. 'r' → logprob: -6.579529285430908
    9. '<|end|>' → logprob: -7.079529285430908
    10. '  ' → logprob: -7.454529285430908

Token 102: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.05658308044075966
    2. 'i' → logprob: -2.9315831661224365
    3. ' range' → logprob: -6.806582927703857
    4. ' ' → logprob: -8.556583404541016
    5. 'range' → logprob: -8.931583404541016
    6. '_' → logprob: -9.681583404541016
    7. ' in' → logprob: -10.181583404541016
    8. ' j' → logprob: -10.556583404541016
    9. 's' → logprob: -10.806583404541016
    10. '(i' → logprob: -10.931583404541016

Token 103: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005421462003141642
    2. 'in' → logprob: -5.2554216384887695
    3. ' ' → logprob: -9.13042163848877
    4. ' range' → logprob: -9.88042163848877
    5. 'range' → logprob: -11.50542163848877
    6. ' i' → logprob: -12.00542163848877
    7. '    ' → logprob: -13.00542163848877
    8. '(' → logprob: -13.13042163848877
    9. '  ' → logprob: -13.50542163848877
    10. ' n' → logprob: -13.88042163848877

Token 104: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.04863244667649269
    2. ' range' → logprob: -3.0486323833465576
    3. '(range' → logprob: -10.048632621765137
    4. ' ' → logprob: -13.673632621765137
    5. '(' → logprob: -14.673632621765137
    6. '	range' → logprob: -16.29863166809082
    7. '  ' → logprob: -16.92363166809082
    8. '   ' → logprob: -16.92363166809082
    9. ' xrange' → logprob: -17.42363166809082
    10. ')' → logprob: -18.04863166809082

Token 105: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.12756335735321045
    2. '(n' → logprob: -2.1275634765625
    3. ' (' → logprob: -7.3775634765625
    4. '(range' → logprob: -12.3775634765625
    5. '(i' → logprob: -13.3775634765625
    6. ' range' → logprob: -13.5025634765625
    7. 'range' → logprob: -14.1275634765625
    8. '1' → logprob: -14.2525634765625
    9. 'n' → logprob: -14.8775634765625
    10. '   ' → logprob: -15.3775634765625

Token 106: '1' (ID: 16)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.04442599043250084
    2. ' n' → logprob: -3.5444259643554688
    3. '1' → logprob: -5.294425964355469
    4. 'range' → logprob: -5.544425964355469
    5. 'i' → logprob: -5.669425964355469
    6. ' range' → logprob: -6.419425964355469
    7. ' ' → logprob: -8.419425964355469
    8. ' i' → logprob: -8.544425964355469
    9. '(n' → logprob: -9.544425964355469
    10. '0' → logprob: -10.169425964355469

Token 107: ',n' (ID: 18103)
  Prédit: ',n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',n' → logprob: -0.029803840443491936
    2. ',' → logprob: -3.52980375289917
    3. ' ,' → logprob: -9.904804229736328
    4. ',len' → logprob: -13.529804229736328
    5. 'n' → logprob: -13.779804229736328
    6. '   ' → logprob: -14.529804229736328
    7. '(n' → logprob: -15.279804229736328
    8. '```' → logprob: -17.029804229736328
    9. ',num' → logprob: -17.654804229736328
    10. ' ' → logprob: -17.779804229736328

Token 108: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0003010233340319246
    2. '):
' → logprob: -8.500301361083984
    3. ' +' → logprob: -10.000301361083984
    4. '):' → logprob: -10.375301361083984
    5. '   ' → logprob: -11.625301361083984
    6. '+
' → logprob: -13.125301361083984
    7. '
' → logprob: -13.250301361083984
    8. ')+' → logprob: -13.375301361083984
    9. '```' → logprob: -13.375301361083984
    10. '-' → logprob: -13.625301361083984

Token 109: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.868328920158092e-05
    2. ' ' → logprob: -10.875028610229492
    3. '2' → logprob: -12.375028610229492
    4. 'i' → logprob: -12.875028610229492
    5. '```' → logprob: -13.375028610229492
    6. '   ' → logprob: -13.750028610229492
    7. '+' → logprob: -16.625028610229492
    8. '  ' → logprob: -16.750028610229492
    9. '<|end|>' → logprob: -16.875028610229492
    10. ')' → logprob: -17.250028610229492

Token 110: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.7133799195289612
    2. ':' → logprob: -0.9633799195289612
    3. ':
' → logprob: -2.2133798599243164
    4. '):' → logprob: -3.9633798599243164
    5. '   ' → logprob: -10.213379859924316
    6. '():
' → logprob: -11.088379859924316
    7. ']:
' → logprob: -11.713379859924316
    8. ')' → logprob: -11.963379859924316
    9. ',' → logprob: -12.713379859924316
    10. '):

' → logprob: -13.088379859924316

Token 111: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0028363727033138275
    2. '   ' → logprob: -6.002836227416992
    3. '<|end|>' → logprob: -9.002836227416992
    4. ':' → logprob: -9.627836227416992
    5. ' kb' → logprob: -10.002836227416992
    6. 'kb' → logprob: -10.502836227416992
    7. ':
' → logprob: -10.627836227416992
    8. ' ' → logprob: -11.252836227416992
    9. '        
' → logprob: -11.377836227416992
    10. '      ' → logprob: -11.502836227416992

Token 112: ' kb' (ID: 68515)
  Prédit: 'kb'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'kb' (adapté à ' kb') → logprob: -0.24142388999462128
    2. '   ' → logprob: -2.2414238452911377
    3. ' kb' → logprob: -2.2414238452911377
    4. ' ' → logprob: -7.366424083709717
    5. '       ' → logprob: -7.866424083709717
    6. '  ' → logprob: -7.866424083709717
    7. '
' → logprob: -9.491423606872559
    8. 'k' → logprob: -9.616423606872559
    9. '           ' → logprob: -9.741423606872559
    10. '    ' → logprob: -9.866423606872559

Token 113: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.18975333869457245
    2. '[i' → logprob: -1.9397532939910889
    3. 'b' → logprob: -3.564753293991089
    4. '[' → logprob: -7.564753532409668
    5. 'i' → logprob: -9.189753532409668
    6. '```' → logprob: -9.189753532409668
    7. '[b' → logprob: -10.314753532409668
    8. '\[' → logprob: -11.814753532409668
    9. ' [' → logprob: -12.314753532409668
    10. '   ' → logprob: -12.314753532409668

Token 114: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0002727793762460351
    2. '[' → logprob: -8.250272750854492
    3. '\[' → logprob: -12.375272750854492
    4. '```' → logprob: -13.250272750854492
    5. '<|end|>' → logprob: -13.750272750854492
    6. '=' → logprob: -14.125272750854492
    7. '[I' → logprob: -14.375272750854492
    8. '[
' → logprob: -14.625272750854492
    9. '[k' → logprob: -14.875272750854492
    10. '=[' → logprob: -15.125272750854492

Token 115: ']=' (ID: 9539)
  Prédit: ']='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']=' → logprob: -0.01604551263153553
    2. '=' → logprob: -4.266045570373535
    3. '=k' → logprob: -6.766045570373535
    4. ']=(' → logprob: -7.766045570373535
    5. '=i' → logprob: -8.391045570373535
    6. ']' → logprob: -10.141045570373535
    7. '=(' → logprob: -11.516045570373535
    8. ']+=' → logprob: -11.766045570373535
    9. '=b' → logprob: -12.016045570373535
    10. ')=' → logprob: -12.141045570373535

Token 116: 'g' (ID: 70)
  Prédit: 'kb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'kb' → logprob: -0.10271532833576202
    2. '(k' → logprob: -2.352715253829956
    3. ' kb' → logprob: -6.977715492248535
    4. 'k' → logprob: -6.977715492248535
    5. 'a' → logprob: -8.727715492248535
    6. '(a' → logprob: -9.227715492248535
    7. '(i' → logprob: -9.727715492248535
    8. '(' → logprob: -9.852715492248535
    9. 'Kb' → logprob: -10.352715492248535
    10. '((' → logprob: -10.477715492248535

Token 117: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.5252169966697693
    2. 'b' → logprob: -0.9002169966697693
    3. '[' → logprob: -7.275217056274414
    4. '[i' → logprob: -7.525217056274414
    5. '[k' → logprob: -8.275217056274414
    6. 'kb' → logprob: -8.650217056274414
    7. 'a' → logprob: -9.150217056274414
    8. 'od' → logprob: -9.650217056274414
    9. 'g' → logprob: -10.025217056274414
    10. '[b' → logprob: -10.400217056274414

Token 118: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00037740718107670546
    2. '[k' → logprob: -8.000377655029297
    3. '[' → logprob: -11.125377655029297
    4. '[g' → logprob: -11.375377655029297
    5. '[a' → logprob: -12.250377655029297
    6. '[n' → logprob: -13.125377655029297
    7. '[int' → logprob: -13.250377655029297
    8. '[b' → logprob: -13.250377655029297
    9. 'i' → logprob: -13.375377655029297
    10. '[I' → logprob: -14.000377655029297

Token 119: ']*' (ID: 18579)
  Prédit: ']*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*' → logprob: -0.18664103746414185
    2. '-' → logprob: -1.811640977859497
    3. ']' → logprob: -5.686641216278076
    4. ']*(' → logprob: -6.311641216278076
    5. '*i' → logprob: -6.811641216278076
    6. '```' → logprob: -8.686640739440918
    7. '*' → logprob: -8.811640739440918
    8. '1' → logprob: -9.436640739440918
    9. '   ' → logprob: -9.686640739440918
    10. '"*' → logprob: -11.061640739440918

Token 120: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.22788359224796295
    2. 'a' → logprob: -1.6028835773468018
    3. '(k' → logprob: -7.227883815765381
    4. 'pow' → logprob: -7.852883815765381
    5. '(a' → logprob: -7.977883815765381
    6. ' k' → logprob: -8.227883338928223
    7. 'i' → logprob: -8.602883338928223
    8. '(' → logprob: -8.852883338928223
    9. 'n' → logprob: -8.852883338928223
    10. ' a' → logprob: -9.352883338928223

Token 121: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.029773399233818054
    2. 'b' → logprob: -3.529773473739624
    3. '[' → logprob: -11.904773712158203
    4. '[b' → logprob: -11.904773712158203
    5. 'i' → logprob: -12.029773712158203
    6. '_b' → logprob: -14.154773712158203
    7. '[I' → logprob: -14.279773712158203
    8. '(i' → logprob: -14.529773712158203
    9. '[n' → logprob: -14.654773712158203
    10. 'B' → logprob: -15.029773712158203

Token 122: '-' (ID: 12)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.5333685278892517
    2. ']%' → logprob: -0.9083685278892517
    3. '-' → logprob: -5.1583685874938965
    4. ']' → logprob: -6.5333685874938965
    5. '[i' → logprob: -6.6583685874938965
    6. '%i' → logprob: -6.9083685874938965
    7. ')%' → logprob: -8.033368110656738
    8. '[' → logprob: -9.033368110656738
    9. '```' → logprob: -9.658368110656738
    10. ' %' → logprob: -9.658368110656738

Token 123: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -14.625000953674316
    3. '```' → logprob: -15.500000953674316
    4. 'i' → logprob: -16.000001907348633
    5. '<|end|>' → logprob: -16.500001907348633
    6. '
' → logprob: -17.125001907348633
    7. '

' → logprob: -17.875001907348633
    8. '{' → logprob: -18.312501907348633
    9. '2' → logprob: -18.312501907348633
    10. ']' → logprob: -18.500001907348633

Token 124: ']%' (ID: 158002)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.044005148112773895
    2. ']%' → logprob: -3.2940051555633545
    3. ')%' → logprob: -5.919004917144775
    4. '%i' → logprob: -6.294004917144775
    5. '[i' → logprob: -7.294004917144775
    6. '%n' → logprob: -7.919004917144775
    7. ']' → logprob: -8.794005393981934
    8. ' %' → logprob: -10.169005393981934
    9. '*i' → logprob: -10.169005393981934
    10. '   ' → logprob: -10.419005393981934

Token 125: 'mod' (ID: 4847)
  Prédit: 'mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -2.1008713702030946e-06
    2. ' mod' → logprob: -13.250001907348633
    3. '(mod' → logprob: -15.125001907348633
    4. '	mod' → logprob: -20.125001907348633
    5. '```' → logprob: -21.250001907348633
    6. '
' → logprob: -21.250001907348633
    7. '   ' → logprob: -21.750001907348633
    8. ' ' → logprob: -21.875001907348633
    9. '(' → logprob: -22.125001907348633
    10. 'moder' → logprob: -22.250001907348633

Token 126: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05334043130278587
    2. ')' → logprob: -3.178340435028076
    3. '<|end|>' → logprob: -5.678340435028076
    4. ' ' → logprob: -6.053340435028076
    5. '    
' → logprob: -6.803340435028076
    6. ',' → logprob: -7.178340435028076
    7. ']' → logprob: -8.303339958190918
    8. '[' → logprob: -8.303339958190918
    9. ' 
' → logprob: -8.428339958190918
    10. '    ' → logprob: -8.428339958190918

Token 127: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02995828539133072
    2. '<|end|>' → logprob: -3.9049582481384277
    3. ' ' → logprob: -5.529958248138428
    4. ')' → logprob: -6.029958248138428
    5. ' return' → logprob: -7.529958248138428
    6. '	return' → logprob: -7.529958248138428
    7. '[' → logprob: -7.654958248138428
    8. '  ' → logprob: -8.779958724975586
    9. '    
' → logprob: -8.779958724975586
    10. ' for' → logprob: -9.154958724975586

Token 128: ' ker' (ID: 11104)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17947308719158173
    2. ' for' → logprob: -2.9294731616973877
    3. ')' → logprob: -3.4294731616973877
    4. ' ' → logprob: -3.4294731616973877
    5. 'for' → logprob: -3.5544731616973877
    6. 'def' → logprob: -6.179472923278809
    7. 'n' → logprob: -6.429472923278809
    8. '[' → logprob: -6.554472923278809
    9. ' 
' → logprob: -6.554472923278809
    10. '    
' → logprob: -6.804472923278809

Token 129: 'ui' (ID: 1866)
  Prédit: 'nel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nel' → logprob: -0.6405094265937805
    2. 'nels' → logprob: -1.2655093669891357
    3. 'n' → logprob: -3.1405093669891357
    4. '[]' → logprob: -3.6405093669891357
    5. '[' → logprob: -3.6405093669891357
    6. '=' → logprob: -3.8905093669891357
    7. 's' → logprob: -4.765509605407715
    8. 'f' → logprob: -4.890509605407715
    9. '(n' → logprob: -5.015509605407715
    10. '(' → logprob: -5.015509605407715

Token 130: '=[' (ID: 13370)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8624592423439026
    2. '[' → logprob: -1.6124591827392578
    3. '(' → logprob: -2.612459182739258
    4. '=[]' → logprob: -2.987459182739258
    5. ' =' → logprob: -3.112459182739258
    6. 'def' → logprob: -3.112459182739258
    7. '(n' → logprob: -3.362459182739258
    8. 's' → logprob: -3.862459182739258
    9. '[n' → logprob: -4.237459182739258
    10. '[]' → logprob: -4.612459182739258

Token 131: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0037391490768641233
    2. '1' → logprob: -5.753739356994629
    3. 'a' → logprob: -8.378739356994629
    4. 'n' → logprob: -9.378739356994629
    5. ']' → logprob: -9.753739356994629
    6. '[' → logprob: -10.253739356994629
    7. ' ' → logprob: -10.253739356994629
    8. 'k' → logprob: -10.503739356994629
    9. '[]' → logprob: -10.628739356994629
    10. '(' → logprob: -10.878739356994629

Token 132: ']*(' (ID: 92627)
  Prédit: ']*('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*(' → logprob: -0.48109960556030273
    2. ']' → logprob: -0.9810996055603027
    3. ']*' → logprob: -4.981099605560303
    4. ']+' → logprob: -9.481100082397461
    5. ',' → logprob: -10.231100082397461
    6. '*(' → logprob: -11.606100082397461
    7. '])' → logprob: -12.981100082397461
    8. ' ]' → logprob: -13.481100082397461
    9. ')]' → logprob: -13.856100082397461
    10. 'for' → logprob: -13.856100082397461

Token 133: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0002724217774812132
    2. 'len' → logprob: -9.500272750854492
    3. '100' → logprob: -9.625272750854492
    4. '10' → logprob: -10.500272750854492
    5. '(n' → logprob: -10.625272750854492
    6. '101' → logprob: -11.750272750854492
    7. '11' → logprob: -12.000272750854492
    8. '(' → logprob: -12.125272750854492
    9. '2' → logprob: -12.250272750854492
    10. '20' → logprob: -12.375272750854492

Token 134: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.6240566083070007e-06
    2. '1' → logprob: -14.750001907348633
    3. ')' → logprob: -15.000001907348633
    4. '+)' → logprob: -15.125001907348633
    5. '+
' → logprob: -15.125001907348633
    6. '```' → logprob: -16.000001907348633
    7. ')+' → logprob: -16.750001907348633
    8. ' +' → logprob: -16.750001907348633
    9. '-' → logprob: -17.500001907348633
    10. '[' → logprob: -17.875001907348633

Token 135: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.023269588127732277
    2. '2' → logprob: -3.7732696533203125
    3. '3' → logprob: -10.773269653320312
    4. ' ' → logprob: -13.648269653320312
    5. '4' → logprob: -14.398269653320312
    6. '5' → logprob: -14.648269653320312
    7. '6' → logprob: -15.648269653320312
    8. '   ' → logprob: -15.835769653320312
    9. '7' → logprob: -16.273269653320312
    10. '```' → logprob: -16.335769653320312

Token 136: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5690089639974758e-05
    2. ')
' → logprob: -11.125015258789062
    3. ' )' → logprob: -15.000015258789062
    4. ')

' → logprob: -16.375015258789062
    5. '#' → logprob: -16.625015258789062
    6. ')`' → logprob: -16.750015258789062
    7. '),' → logprob: -17.125015258789062
    8. '`)' → logprob: -17.375015258789062
    9. '')' → logprob: -17.375015258789062
    10. ')
' → logprob: -17.500015258789062

Token 137: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8288768529891968
    2. '   ' → logprob: -1.4538768529891968
    3. 'for' → logprob: -1.8288768529891968
    4. '<|end|>' → logprob: -1.9538768529891968
    5. ' ker' → logprob: -4.078876972198486
    6. 'ker' → logprob: -5.453876972198486
    7. '	for' → logprob: -6.078876972198486
    8. '<|end|>' → logprob: -7.203876972198486
    9. 'def' → logprob: -7.328876972198486
    10. '[' → logprob: -7.328876972198486

Token 138: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.05525471270084381
    2. 'ker' → logprob: -4.055254936218262
    3. 'res' → logprob: -4.180254936218262
    4. 's' → logprob: -5.180254936218262
    5. 'sum' → logprob: -5.555254936218262
    6. 'ans' → logprob: -5.930254936218262
    7. ' for' → logprob: -6.430254936218262
    8. 'result' → logprob: -6.930254936218262
    9. 'cur' → logprob: -7.180254936218262
    10. 'answer' → logprob: -7.805254936218262

Token 139: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.07891270518302917
    2. 'i' → logprob: -2.5789127349853516
    3. ' ' → logprob: -12.578912734985352
    4. ' _' → logprob: -12.828912734985352
    5. '	i' → logprob: -12.828912734985352
    6. '_' → logprob: -12.953912734985352
    7. '(i' → logprob: -12.953912734985352
    8. ' in' → logprob: -13.453912734985352
    9. ' j' → logprob: -13.578912734985352
    10. '_i' → logprob: -14.078912734985352

Token 140: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03081255778670311
    2. 'in' → logprob: -3.5308125019073486
    3. ' ' → logprob: -6.905812740325928
    4. ' i' → logprob: -10.28081226348877
    5. '<|end|>' → logprob: -11.53081226348877
    6. '[' → logprob: -13.03081226348877
    7. '  ' → logprob: -13.03081226348877
    8. 'i' → logprob: -13.15581226348877
    9. ')' → logprob: -13.53081226348877
    10. '(' → logprob: -13.78081226348877

Token 141: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.006750662811100483
    2. ' range' → logprob: -5.006750583648682
    3. '(range' → logprob: -10.50675106048584
    4. '(' → logprob: -11.75675106048584
    5. ' ' → logprob: -17.381750106811523
    6. '	range' → logprob: -17.381750106811523
    7. 'in' → logprob: -18.756750106811523
    8. '[' → logprob: -19.131750106811523
    9. '```' → logprob: -19.631750106811523
    10. ' (' → logprob: -19.756750106811523

Token 142: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002808798337355256
    2. '(n' → logprob: -5.877808570861816
    3. ' (' → logprob: -13.877808570861816
    4. '(range' → logprob: -14.002808570861816
    5. '(i' → logprob: -14.252808570861816
    6. '(len' → logprob: -14.377808570861816
    7. '(
' → logprob: -14.877808570861816
    8. '((' → logprob: -15.752808570861816
    9. 'range' → logprob: -15.752808570861816
    10. ' range' → logprob: -15.877808570861816

Token 143: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.42892804741859436
    2. 'n' → logprob: -1.053928017616272
    3. ' n' → logprob: -9.92892837524414
    4. '0' → logprob: -10.42892837524414
    5. '2' → logprob: -10.42892837524414
    6. 'a' → logprob: -10.42892837524414
    7. 'i' → logprob: -10.80392837524414
    8. '(n' → logprob: -10.80392837524414
    9. 'range' → logprob: -11.05392837524414
    10. ' ' → logprob: -11.17892837524414

Token 144: ',n' (ID: 18103)
  Prédit: ',n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',n' → logprob: -0.3134642243385315
    2. ',' → logprob: -1.3134641647338867
    3. ' ,' → logprob: -8.563464164733887
    4. '(n' → logprob: -11.938464164733887
    5. ',i' → logprob: -13.313464164733887
    6. ',
' → logprob: -13.938464164733887
    7. 'n' → logprob: -13.938464164733887
    8. ',len' → logprob: -14.938464164733887
    9. ',num' → logprob: -15.563464164733887
    10. '<n' → logprob: -15.563464164733887

Token 145: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0003155625017825514
    2. '(' → logprob: -9.62531566619873
    3. ' +' → logprob: -9.87531566619873
    4. '(i' → logprob: -10.12531566619873
    5. '()+' → logprob: -10.25031566619873
    6. '[' → logprob: -10.37531566619873
    7. '[i' → logprob: -10.50031566619873
    8. '+i' → logprob: -10.75031566619873
    9. '1' → logprob: -11.25031566619873
    10. '(n' → logprob: -11.62531566619873

Token 146: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00037263904232531786
    2. 'i' → logprob: -8.000372886657715
    3. ' ' → logprob: -10.375372886657715
    4. '   ' → logprob: -12.875372886657715
    5. '```' → logprob: -13.125372886657715
    6. '2' → logprob: -14.625372886657715
    7. ' i' → logprob: -15.375372886657715
    8. 'n' → logprob: -15.875372886657715
    9. '+' → logprob: -16.5003719329834
    10. '
' → logprob: -16.5003719329834

Token 147: '):
' (ID: 1883)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.1005616188049316
    2. '):' → logprob: -1.1005616188049316
    3. '):
' → logprob: -1.1005616188049316
    4. ':
' → logprob: -6.350561618804932
    5. ')' → logprob: -9.600561141967773
    6. ',' → logprob: -9.850561141967773
    7. '   ' → logprob: -10.350561141967773
    8. '):

' → logprob: -11.600561141967773
    9. '=' → logprob: -12.225561141967773
    10. '):
' → logprob: -12.350561141967773

Token 148: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08386224508285522
    2. ' ker' → logprob: -2.5838623046875
    3. '<|end|>' → logprob: -6.7088623046875
    4. ' for' → logprob: -6.9588623046875
    5. '   ' → logprob: -6.9588623046875
    6. 'ker' → logprob: -7.2088623046875
    7. '```' → logprob: -7.5838623046875
    8. ' if' → logprob: -8.3338623046875
    9. ' kere' → logprob: -9.5838623046875
    10. 'kern' → logprob: -9.9588623046875

Token 149: ' ker' (ID: 11104)
  Prédit: 'ker'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ker' (adapté à ' ker') → logprob: -0.6466703414916992
    2. ' ker' → logprob: -0.8966703414916992
    3. 'if' → logprob: -3.521670341491699
    4. 'for' → logprob: -4.271670341491699
    5. ' if' → logprob: -4.396670341491699
    6. ' for' → logprob: -4.771670341491699
    7. '   ' → logprob: -5.896670341491699
    8. '```' → logprob: -7.646670341491699
    9. '
' → logprob: -8.6466703414917
    10. '    
' → logprob: -9.3341703414917

Token 150: 'ui' (ID: 1866)
  Prédit: 'ui'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ui' → logprob: -0.002112193498760462
    2. 'u' → logprob: -6.37711238861084
    3. 'i' → logprob: -8.37711238861084
    4. '[i' → logprob: -9.25211238861084
    5. 'uiu' → logprob: -10.00211238861084
    6. '```' → logprob: -11.62711238861084
    7. 'rui' → logprob: -12.25211238861084
    8. '	ui' → logprob: -12.37711238861084
    9. '   ' → logprob: -12.62711238861084
    10. 'uir' → logprob: -12.62711238861084

Token 151: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.012638193555176258
    2. '[' → logprob: -4.387638092041016
    3. '\[' → logprob: -9.637638092041016
    4. '```' → logprob: -10.262638092041016
    5. '[I' → logprob: -11.262638092041016
    6. '[
' → logprob: -12.637638092041016
    7. '[j' → logprob: -13.137638092041016
    8. '[k' → logprob: -13.762638092041016
    9. '[int' → logprob: -14.137638092041016
    10. '=[' → logprob: -14.262638092041016

Token 152: ']=(' (ID: 138510)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5011066794395447
    2. ']=' → logprob: -1.0011067390441895
    3. ']+=' → logprob: -3.7511067390441895
    4. '=' → logprob: -5.8761067390441895
    5. ' ]' → logprob: -8.876106262207031
    6. ']=(' → logprob: -9.001106262207031
    7. '-' → logprob: -10.126106262207031
    8. '+=' → logprob: -11.376106262207031
    9. ']+' → logprob: -11.501106262207031
    10. '=i' → logprob: -11.626106262207031

Token 153: 'ker' (ID: 4776)
  Prédit: 'ker'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ker' → logprob: -0.49552491307258606
    2. 'kb' → logprob: -1.4955248832702637
    3. 'a' → logprob: -2.4955248832702637
    4. 'k' → logprob: -2.8705248832702637
    5. ' ker' → logprob: -5.120524883270264
    6. 'n' → logprob: -5.245524883270264
    7. ' kb' → logprob: -5.495524883270264
    8. '(' → logprob: -5.495524883270264
    9. '(k' → logprob: -6.620524883270264
    10. 'rem' → logprob: -6.870524883270264

Token 154: 'ui' (ID: 1866)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.17450250685214996
    2. 'ui' → logprob: -2.1745026111602783
    3. 'u' → logprob: -3.5495026111602783
    4. 'i' → logprob: -4.424502372741699
    5. '[u' → logprob: -5.799502372741699
    6. '   ' → logprob: -7.174502372741699
    7. '```' → logprob: -7.674502372741699
    8. '[n' → logprob: -8.9245023727417
    9. '[k' → logprob: -9.0495023727417
    10. '[' → logprob: -9.0495023727417

Token 155: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -8.180258191714529e-06
    2. 'i' → logprob: -11.750008583068848
    3. '[I' → logprob: -15.875008583068848
    4. '```' → logprob: -16.75000762939453
    5. '[' → logprob: -17.75000762939453
    6. ' i' → logprob: -17.87500762939453
    7. '(i' → logprob: -18.37500762939453
    8. '[user' → logprob: -18.37500762939453
    9. ' [' → logprob: -18.87500762939453
    10. '   ' → logprob: -19.00000762939453

Token 156: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.006886346265673637
    2. '[i' → logprob: -5.0068864822387695
    3. 'i' → logprob: -8.88188648223877
    4. '[-' → logprob: -11.50688648223877
    5. '[' → logprob: -12.00688648223877
    6. '1' → logprob: -12.00688648223877
    7. ' -' → logprob: -12.25688648223877
    8. ']' → logprob: -13.13188648223877
    9. '(i' → logprob: -13.75688648223877
    10. '```' → logprob: -14.63188648223877

Token 157: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.816093228830141e-06
    2. ' ' → logprob: -13.37500286102295
    3. '   ' → logprob: -14.62500286102295
    4. '```' → logprob: -15.62500286102295
    5. '-' → logprob: -16.437501907348633
    6. ']' → logprob: -16.812501907348633
    7. '])' → logprob: -16.875001907348633
    8. ')' → logprob: -17.000001907348633
    9. '2' → logprob: -17.187501907348633
    10. 'i' → logprob: -17.750001907348633

Token 158: ']+' (ID: 15344)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.29411447048187256
    2. '+a' → logprob: -1.4191144704818726
    3. ' +' → logprob: -4.419114589691162
    4. '*a' → logprob: -7.794114589691162
    5. '+i' → logprob: -9.044114112854004
    6. '+k' → logprob: -9.294114112854004
    7. '+
' → logprob: -9.794114112854004
    8. '*' → logprob: -10.169114112854004
    9. ' a' → logprob: -10.544114112854004
    10. '+n' → logprob: -10.669114112854004

Token 159: 'kb' (ID: 43107)
  Prédit: 'kb'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'kb' → logprob: -0.07342894375324249
    2. 'a' → logprob: -2.6984288692474365
    3. ' kb' → logprob: -6.448429107666016
    4. 'k' → logprob: -6.573429107666016
    5. '(a' → logprob: -9.198429107666016
    6. ' a' → logprob: -9.323429107666016
    7. '(k' → logprob: -9.448429107666016
    8. '   ' → logprob: -10.073429107666016
    9. '(' → logprob: -10.198429107666016
    10. '((' → logprob: -10.448429107666016

Token 160: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1008713702030946e-06
    2. 'b' → logprob: -14.000001907348633
    3. '[i' → logprob: -14.250001907348633
    4. 'a' → logprob: -14.625001907348633
    5. '[' → logprob: -15.750001907348633
    6. '```' → logprob: -17.625001907348633
    7. '[a' → logprob: -17.750001907348633
    8. 'k' → logprob: -17.875001907348633
    9. ' ' → logprob: -18.875001907348633
    10. 'l' → logprob: -19.000001907348633

Token 161: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -9.901345038088039e-05
    2. '[a' → logprob: -9.375099182128906
    3. '[' → logprob: -11.500099182128906
    4. 'i' → logprob: -13.750099182128906
    5. '[I' → logprob: -13.875099182128906
    6. '[n' → logprob: -14.875099182128906
    7. 'a' → logprob: -15.125099182128906
    8. ' [' → logprob: -15.750099182128906
    9. '[
' → logprob: -15.875099182128906
    10. '[j' → logprob: -15.875099182128906

Token 162: '])' (ID: 4636)
  Prédit: ')%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')%' → logprob: -0.7395439147949219
    2. '*a' → logprob: -1.3645439147949219
    3. '*i' → logprob: -1.6145439147949219
    4. ')' → logprob: -2.989543914794922
    5. '*' → logprob: -4.989543914794922
    6. '])' → logprob: -5.614543914794922
    7. ')*' → logprob: -5.739543914794922
    8. '*)' → logprob: -6.114543914794922
    9. ' )' → logprob: -7.489543914794922
    10. ']%' → logprob: -7.614543914794922

Token 163: '%' (ID: 4)
  Prédit: '%'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.0014651041710749269
    2. '*a' → logprob: -8.12646484375
    3. '%i' → logprob: -8.25146484375
    4. ')%' → logprob: -8.25146484375
    5. ' %' → logprob: -8.50146484375
    6. ')' → logprob: -8.75146484375
    7. '*i' → logprob: -9.12646484375
    8. '<|end|>' → logprob: -10.12646484375
    9. '%n' → logprob: -10.25146484375
    10. '%A' → logprob: -10.37646484375

Token 164: 'mod' (ID: 4847)
  Prédit: 'mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: 0.0
    2. ' mod' → logprob: -17.375
    3. '(mod' → logprob: -18.375
    4. '```' → logprob: -22.375
    5. '
' → logprob: -22.75
    6. '	mod' → logprob: -22.875
    7. '`' → logprob: -24.875
    8. 'MOD' → logprob: -25.25
    9. '10' → logprob: -25.25
    10. 'moder' → logprob: -25.5

Token 165: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6643747091293335
    2. '<|end|>' → logprob: -0.9143747091293335
    3. '
' → logprob: -2.914374828338623
    4. '	return' → logprob: -4.414374828338623
    5. '\n' → logprob: -5.164374828338623
    6. '    
' → logprob: -5.414374828338623
    7. ' ' → logprob: -6.664374828338623
    8. '[' → logprob: -6.914374828338623
    9. '<|end|>' → logprob: -7.164374828338623
    10. ' return' → logprob: -7.414374828338623

Token 166: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11300385743379593
    2. '<|end|>' → logprob: -2.863003969192505
    3. '
' → logprob: -3.988003969192505
    4. ' for' → logprob: -4.613003730773926
    5. ' ' → logprob: -4.863003730773926
    6. '    
' → logprob: -5.863003730773926
    7. ' 
' → logprob: -6.238003730773926
    8. ')' → logprob: -6.613003730773926
    9. '    ' → logprob: -6.988003730773926
    10. '[' → logprob: -7.238003730773926

Token 167: ' ans' (ID: 3345)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5595683455467224
    2. 'res' → logprob: -1.0595684051513672
    3. ' for' → logprob: -4.059568405151367
    4. 'r' → logprob: -4.309568405151367
    5. 'ans' (adapté à ' ans') → logprob: -4.559568405151367
    6. 'return' → logprob: -4.809568405151367
    7. 'result' → logprob: -5.059568405151367
    8. 's' → logprob: -5.309568405151367
    9. '   ' → logprob: -5.934568405151367
    10. ' res' → logprob: -6.059568405151367

Token 168: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38789090514183044
    2. ' =' → logprob: -1.1378909349441528
    3. '<|end|>' → logprob: -7.387890815734863
    4. ',' → logprob: -9.012890815734863
    5. '=[]' → logprob: -9.137890815734863
    6. ' +=' → logprob: -10.012890815734863
    7. ')' → logprob: -11.637890815734863
    8. '={}' → logprob: -11.637890815734863
    9. '=[' → logprob: -11.762890815734863
    10. '   ' → logprob: -11.762890815734863

Token 169: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004062434600200504
    2. ' ' → logprob: -8.000406265258789
    3. '1' → logprob: -10.000406265258789
    4. '(' → logprob: -11.500406265258789
    5. 'a' → logprob: -12.000406265258789
    6. '[' → logprob: -13.125406265258789
    7. 'n' → logprob: -13.250406265258789
    8. 'k' → logprob: -13.625406265258789
    9. 'pow' → logprob: -13.750406265258789
    10. 'ker' → logprob: -14.750406265258789

Token 170: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 171: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 172: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.38773924112319946
    2. ' for' → logprob: -1.1377391815185547
    3. '   ' → logprob: -7.137739181518555
    4. 'i' → logprob: -10.137739181518555
    5. ' i' → logprob: -11.137739181518555
    6. '	for' → logprob: -12.137739181518555
    7. ' ' → logprob: -12.387739181518555
    8. ')' → logprob: -13.262739181518555
    9. 'b' → logprob: -13.887739181518555
    10. '    ' → logprob: -13.887739181518555

Token 173: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.016049150377511978
    2. 'i' → logprob: -4.141049385070801
    3. '	i' → logprob: -12.0160493850708
    4. ' ' → logprob: -12.6410493850708
    5. ' ' → logprob: -14.0160493850708
    6. '```' → logprob: -14.2660493850708
    7. ' _' → logprob: -14.6410493850708
    8. ' x' → logprob: -14.6410493850708
    9. '(i' → logprob: -14.7660493850708
    10. '_' → logprob: -14.8910493850708

Token 174: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0805283933877945
    2. 'in' → logprob: -2.580528497695923
    3. ' ' → logprob: -6.455528259277344
    4. '<|end|>' → logprob: -10.830528259277344
    5. '	in' → logprob: -11.830528259277344
    6. '  ' → logprob: -12.205528259277344
    7. 'range' → logprob: -12.330528259277344
    8. ' i' → logprob: -12.455528259277344
    9. '_' → logprob: -13.080528259277344
    10. '```' → logprob: -13.330528259277344

Token 175: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.023249439895153046
    2. ' range' → logprob: -3.773249387741089
    3. '(range' → logprob: -12.648249626159668
    4. '(' → logprob: -14.523249626159668
    5. ' ' → logprob: -16.14824867248535
    6. 'a' → logprob: -16.39824867248535
    7. '	range' → logprob: -17.14824867248535
    8. '   ' → logprob: -17.52324867248535
    9. '1' → logprob: -17.89824867248535
    10. 'n' → logprob: -18.39824867248535

Token 176: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0003618024929892272
    2. '(n' → logprob: -8.250361442565918
    3. '(range' → logprob: -9.875361442565918
    4. ' (' → logprob: -10.500361442565918
    5. ' range' → logprob: -11.500361442565918
    6. '(
' → logprob: -12.375361442565918
    7. 'range' → logprob: -12.375361442565918
    8. '((' → logprob: -13.500361442565918
    9. '(i' → logprob: -14.625361442565918
    10. '(a' → logprob: -14.750361442565918

Token 177: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.18393757939338684
    2. '+' → logprob: -2.0589375495910645
    3. '):
' → logprob: -4.1839375495910645
    4. '-' → logprob: -4.1839375495910645
    5. ')' → logprob: -4.9339375495910645
    6. ',' → logprob: -6.3089375495910645
    7. ':' → logprob: -8.808938026428223
    8. ')+' → logprob: -8.808938026428223
    9. '   ' → logprob: -9.058938026428223
    10. '1' → logprob: -9.558938026428223

Token 178: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4378899037837982
    2. ':' → logprob: -1.5628899335861206
    3. '<|end|>' → logprob: -2.312889814376831
    4. '   ' → logprob: -3.562889814376831
    5. ' for' → logprob: -5.18789005279541
    6. ':
' → logprob: -6.18789005279541
    7. ',' → logprob: -6.18789005279541
    8. '<|end|>' → logprob: -6.31289005279541
    9. ' ' → logprob: -6.68789005279541
    10. ' if' → logprob: -6.93789005279541

Token 179: ' ans' (ID: 3345)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.27792489528656
    2. ' if' → logprob: -1.65292489528656
    3. 'ans' (adapté à ' ans') → logprob: -1.77792489528656
    4. ' ans' → logprob: -1.90292489528656
    5. 'for' → logprob: -2.1529250144958496
    6. ' for' → logprob: -3.1529250144958496
    7. 'x' → logprob: -4.15292501449585
    8. ' x' → logprob: -4.27792501449585
    9. '   ' → logprob: -5.27792501449585
    10. ' t' → logprob: -6.15292501449585

Token 180: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.189150869846344
    2. ' +=' → logprob: -1.8141508102416992
    3. '=' → logprob: -5.439150810241699
    4. '+=(' → logprob: -5.439150810241699
    5. ']+=' → logprob: -8.5641508102417
    6. '+='' → logprob: -8.6891508102417
    7. ' =' → logprob: -9.0641508102417
    8. '+' → logprob: -9.5641508102417
    9. '+="' → logprob: -9.9391508102417
    10. '```' → logprob: -9.9391508102417

Token 181: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.06462859362363815
    2. ' a' → logprob: -3.4396286010742188
    3. '(a' → logprob: -3.9396286010742188
    4. 'k' → logprob: -5.689628601074219
    5. ' (' → logprob: -5.689628601074219
    6. '(k' → logprob: -6.189628601074219
    7. '(' → logprob: -7.314628601074219
    8. '((' → logprob: -7.689628601074219
    9. ' k' → logprob: -8.189628601074219
    10. 'ker' → logprob: -8.314628601074219

Token 182: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0005513638607226312
    2. '[' → logprob: -7.625551223754883
    3. '\[' → logprob: -11.250551223754883
    4. '[n' → logprob: -11.500551223754883
    5. 'i' → logprob: -11.625551223754883
    6. '[s' → logprob: -12.125551223754883
    7. '```' → logprob: -12.125551223754883
    8. ''[' → logprob: -12.500551223754883
    9. '[I' → logprob: -12.750551223754883
    10. '[
' → logprob: -13.250551223754883

Token 183: ']*(' (ID: 92627)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.21217204630374908
    2. '*i' → logprob: -2.587172031402588
    3. ']*' → logprob: -2.587172031402588
    4. '[i' → logprob: -3.837172031402588
    5. ' *' → logprob: -4.462172031402588
    6. ']' → logprob: -6.087172031402588
    7. '[' → logprob: -6.212172031402588
    8. ')*' → logprob: -6.462172031402588
    9. '*[' → logprob: -7.462172031402588
    10. '*k' → logprob: -7.712172031402588

Token 184: 'ker' (ID: 4776)
  Prédit: 'ker'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ker' → logprob: -0.01686188392341137
    2. 'kb' → logprob: -4.516861915588379
    3. '(' → logprob: -6.016861915588379
    4. 'k' → logprob: -6.391861915588379
    5. ' ker' → logprob: -7.891861915588379
    6. 'rem' → logprob: -8.016861915588379
    7. 'n' → logprob: -9.016861915588379
    8. '(k' → logprob: -9.016861915588379
    9. '(n' → logprob: -9.266861915588379
    10. '   ' → logprob: -9.516861915588379

Token 185: 'ui' (ID: 1866)
  Prédit: 'ui'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ui' → logprob: -3.9054008084349334e-05
    2. 'u' → logprob: -10.875039100646973
    3. 'uri' → logprob: -12.125039100646973
    4. 'uiu' → logprob: -12.250039100646973
    5. 'i' → logprob: -12.625039100646973
    6. 'uir' → logprob: -13.375039100646973
    7. 'rui' → logprob: -14.375039100646973
    8. 'uire' → logprob: -14.500039100646973
    9. 'uint' → logprob: -14.500039100646973
    10. 'aui' → logprob: -14.500039100646973

Token 186: '[i' (ID: 1768)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.00019948746194131672
    2. '[i' → logprob: -8.750199317932129
    3. 'n' → logprob: -10.750199317932129
    4. '[' → logprob: -11.125199317932129
    5. '(n' → logprob: -12.875199317932129
    6. '[
' → logprob: -13.750199317932129
    7. '[j' → logprob: -14.750199317932129
    8. '[len' → logprob: -14.875199317932129
    9. '[N' → logprob: -15.375199317932129
    10. '[a' → logprob: -16.750200271606445

Token 187: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0012011817889288068
    2. ']+' → logprob: -7.626201152801514
    3. ']' → logprob: -7.876201152801514
    4. '])' → logprob: -8.501201629638672
    5. '+
' → logprob: -9.501201629638672
    6. '1' → logprob: -11.501201629638672
    7. ' +' → logprob: -11.501201629638672
    8. '
' → logprob: -11.751201629638672
    9. '+]' → logprob: -11.751201629638672
    10. ']-' → logprob: -12.501201629638672

Token 188: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004638861399143934
    2. '2' → logprob: -5.379638671875
    3. '```' → logprob: -12.004638671875
    4. '
' → logprob: -12.254638671875
    5. '+' → logprob: -13.629638671875
    6. ' ' → logprob: -13.817138671875
    7. '   ' → logprob: -13.879638671875
    8. '

' → logprob: -13.879638671875
    9. '`' → logprob: -14.379638671875
    10. '``' → logprob: -14.754638671875

Token 189: ']+' (ID: 15344)
  Prédit: ']-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']-' → logprob: -0.9286562204360962
    2. '-' → logprob: -1.0536562204360962
    3. '])' → logprob: -2.0536561012268066
    4. ']' → logprob: -2.5536561012268066
    5. ')' → logprob: -4.178656101226807
    6. ')-' → logprob: -4.178656101226807
    7. ' -' → logprob: -4.928656101226807
    8. '+' → logprob: -5.178656101226807
    9. ' )' → logprob: -6.928656101226807
    10. ']%' → logprob: -7.053656101226807

Token 190: 'ker' (ID: 4776)
  Prédit: 'ker'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ker' → logprob: -0.013548288494348526
    2. 'mod' → logprob: -4.513548374176025
    3. 'kb' → logprob: -7.138548374176025
    4. 'a' → logprob: -7.388548374176025
    5. ' ker' → logprob: -7.638548374176025
    6. 'ans' → logprob: -8.388547897338867
    7. '(' → logprob: -8.888547897338867
    8. '1' → logprob: -9.638547897338867
    9. 'k' → logprob: -9.888547897338867
    10. ' mod' → logprob: -11.138547897338867

Token 191: 'ui' (ID: 1866)
  Prédit: 'ui'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ui' → logprob: -0.0018383220303803682
    2. 'u' → logprob: -6.501838207244873
    3. 'i' → logprob: -8.251838684082031
    4. '[i' → logprob: -10.251838684082031
    5. 'uiu' → logprob: -11.751838684082031
    6. '```' → logprob: -12.251838684082031
    7. 'user' → logprob: -12.751838684082031
    8. '(i' → logprob: -13.001838684082031
    9. '[' → logprob: -13.251838684082031
    10. '-ui' → logprob: -13.376838684082031

Token 192: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.01781519502401352
    2. '(n' → logprob: -4.267815113067627
    3. 'n' → logprob: -6.017815113067627
    4. '[' → logprob: -7.517815113067627
    5. '[i' → logprob: -7.517815113067627
    6. '{' → logprob: -10.017815589904785
    7. '[
' → logprob: -10.892815589904785
    8. ')n' → logprob: -11.642815589904785
    9. '<n' → logprob: -11.642815589904785
    10. '[-' → logprob: -11.767815589904785

Token 193: '-i' (ID: 18499)
  Prédit: ']-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']-' → logprob: -0.14374299347400665
    2. ']' → logprob: -2.3937430381774902
    3. '-' → logprob: -3.7687430381774902
    4. '])' → logprob: -4.76874303817749
    5. '-i' → logprob: -5.01874303817749
    6. '])-' → logprob: -5.89374303817749
    7. ' -' → logprob: -7.51874303817749
    8. ']+' → logprob: -7.76874303817749
    9. '+' → logprob: -8.518742561340332
    10. ' ]' → logprob: -9.143742561340332

Token 194: ']-' (ID: 27107)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.43405741453170776
    2. '-' → logprob: -1.1840574741363525
    3. ']' → logprob: -3.8090574741363525
    4. '+' → logprob: -4.934057235717773
    5. ']-' → logprob: -5.059057235717773
    6. ')' → logprob: -5.309057235717773
    7. '1' → logprob: -6.184057235717773
    8. ' -' → logprob: -6.434057235717773
    9. '])-' → logprob: -7.684057235717773
    10. ' ])' → logprob: -8.559057235717773

Token 195: '1' (ID: 16)
  Prédit: 'ker'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ker' → logprob: -0.029747597873210907
    2. ' ker' → logprob: -4.279747486114502
    3. '2' → logprob: -5.029747486114502
    4. '1' → logprob: -5.404747486114502
    5. '(' → logprob: -6.404747486114502
    6. 'mod' → logprob: -7.029747486114502
    7. ' ' → logprob: -7.154747486114502
    8. '  ' → logprob: -8.27974796295166
    9. '   ' → logprob: -8.52974796295166
    10. ' (' → logprob: -8.65474796295166

Token 196: ')%' (ID: 57656)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.38919323682785034
    2. ')%' → logprob: -1.1391932964324951
    3. ' )' → logprob: -6.139193058013916
    4. '   ' → logprob: -9.389193534851074
    5. '+' → logprob: -10.264193534851074
    6. ')
' → logprob: -11.889193534851074
    7. ')*' → logprob: -12.389193534851074
    8. '       ' → logprob: -12.389193534851074
    9. '))' → logprob: -12.639193534851074
    10. '    ' → logprob: -12.639193534851074

Token 197: 'mod' (ID: 4847)
  Prédit: 'mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.00033593899570405483
    2. ' mod' → logprob: -8.000335693359375
    3. '(mod' → logprob: -14.750335693359375
    4. '```' → logprob: -17.250335693359375
    5. '	mod' → logprob: -18.500335693359375
    6. '10' → logprob: -19.250335693359375
    7. ' ' → logprob: -19.500335693359375
    8. 'MOD' → logprob: -19.625335693359375
    9. '
' → logprob: -20.250335693359375
    10. '100' → logprob: -20.375335693359375

Token 198: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9396128058433533
    2. '<|end|>' → logprob: -1.064612865447998
    3. '
' → logprob: -2.439612865447998
    4. '%' → logprob: -2.439612865447998
    5. '       ' → logprob: -4.064612865447998
    6. '   ' → logprob: -4.189612865447998
    7. ' 
' → logprob: -4.814612865447998
    8. ' %' → logprob: -4.814612865447998
    9. ')%' → logprob: -4.814612865447998
    10. '\n' → logprob: -5.064612865447998

Token 199: '       ' (ID: 309)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6295779943466187
    2. '<|end|>' → logprob: -1.3795779943466187
    3. '   ' → logprob: -2.254578113555908
    4. '       ' → logprob: -2.754578113555908
    5. '    ' → logprob: -4.004578113555908
    6. '+' → logprob: -4.379578113555908
    7. ' ' → logprob: -5.004578113555908
    8. '<|end|>' → logprob: -6.379578113555908
    9. '     ' → logprob: -7.254578113555908
    10. '%' → logprob: -7.379578113555908

Token 200: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.00041125001735053957
    2. ' ans' → logprob: -8.375411033630371
    3. '	ans' → logprob: -9.125411033630371
    4. '(ans' → logprob: -10.500411033630371
    5. '```' → logprob: -11.125411033630371
    6. '<|end|>' → logprob: -11.500411033630371
    7. '_ans' → logprob: -12.125411033630371
    8. '   ' → logprob: -12.500411033630371
    9. 'answer' → logprob: -13.250411033630371
    10. '       ' → logprob: -13.500411033630371

Token 201: '%=' (ID: 83893)
  Prédit: '%='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%=' → logprob: -0.0007866371306590736
    2. ' %=' → logprob: -7.375786781311035
    3. '%' → logprob: -8.750786781311035
    4. '=' → logprob: -14.000786781311035
    5. ')%' → logprob: -14.250786781311035
    6. '```' → logprob: -16.87578582763672
    7. ' %' → logprob: -17.12578582763672
    8. '+=' → logprob: -17.12578582763672
    9. '=%' → logprob: -17.50078582763672
    10. ')' → logprob: -17.50078582763672

Token 202: 'mod' (ID: 4847)
  Prédit: 'mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: 0.0
    2. ' mod' → logprob: -17.0
    3. '(mod' → logprob: -19.125
    4. '	mod' → logprob: -21.875
    5. '```' → logprob: -22.5
    6. '10' → logprob: -23.0
    7. '
' → logprob: -25.0
    8. 'MOD' → logprob: -25.0
    9. ' мод' → logprob: -25.125
    10. '100' → logprob: -25.25

Token 203: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08677781373262405
    2. '
' → logprob: -3.211777925491333
    3. 'return' → logprob: -4.211777687072754
    4. ')' → logprob: -4.586777687072754
    5. ' return' → logprob: -4.711777687072754
    6. '<|end|>' → logprob: -5.711777687072754
    7. '	return' → logprob: -6.586777687072754
    8. '    
' → logprob: -6.586777687072754
    9. ' 
' → logprob: -7.711777687072754
    10. ' ' → logprob: -7.711777687072754

Token 204: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12439272552728653
    2. ' return' → logprob: -2.7493927478790283
    3. 'return' → logprob: -3.4993927478790283
    4. '<|end|>' → logprob: -4.124392509460449
    5. '```' → logprob: -5.999392509460449
    6. '	return' → logprob: -6.749392509460449
    7. ':return' → logprob: -7.499392509460449
    8. ' ' → logprob: -7.749392509460449
    9. ')' → logprob: -7.749392509460449
    10. '    
' → logprob: -7.999392509460449

Token 205: ' ans' (ID: 3345)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0037447367794811726
    2. '   ' → logprob: -5.753744602203369
    3. ' return' → logprob: -7.503744602203369
    4. '	return' → logprob: -11.628745079040527
    5. '    
' → logprob: -13.378745079040527
    6. '<|end|>' → logprob: -13.503745079040527
    7. ')return' → logprob: -13.878745079040527
    8. '```' → logprob: -14.253745079040527
    9. ':return' → logprob: -14.253745079040527
    10. 'eturn' → logprob: -14.878745079040527

Token 206: '*=' (ID: 93955)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 207: 'k' (ID: 74)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.3244112432003021
    2. 'pow' → logprob: -1.9494112730026245
    3. 'k' → logprob: -2.074411153793335
    4. 'inv' → logprob: -6.074411392211914
    5. 'g' → logprob: -6.199411392211914
    6. 'mod' → logprob: -6.449411392211914
    7. '4' → logprob: -7.074411392211914
    8. '(' → logprob: -7.699411392211914
    9. 'rem' → logprob: -7.949411392211914
    10. '(k' → logprob: -8.199411392211914

Token 208: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -4.842555426876061e-06
    2. 'n' → logprob: -12.750004768371582
    3. '[' → logprob: -13.625004768371582
    4. '(n' → logprob: -15.125004768371582
    5. ' [' → logprob: -15.750004768371582
    6. '[i' → logprob: -16.5000057220459
    7. '\[' → logprob: -17.6250057220459
    8. '	n' → logprob: -18.1250057220459
    9. '[len' → logprob: -18.2500057220459
    10. '```' → logprob: -18.3750057220459

Token 209: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0064774490892887115
    2. ']
' → logprob: -5.381477355957031
    3. '-' → logprob: -6.506477355957031
    4. ']%' → logprob: -8.256477355957031
    5. ' ]' → logprob: -10.506477355957031
    6. ']

' → logprob: -10.881477355957031
    7. ']-' → logprob: -11.131477355957031
    8. ']
' → logprob: -11.131477355957031
    9. '-n' → logprob: -11.256477355957031
    10. '])' → logprob: -12.881477355957031

Token 210: '   ' (ID: 271)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.04178518056869507
    2. '   ' → logprob: -3.79178524017334
    3. ' mod' → logprob: -5.41678524017334
    4. 'return' → logprob: -5.79178524017334
    5. '
' → logprob: -6.04178524017334
    6. ' return' → logprob: -6.16678524017334
    7. 'mod' → logprob: -6.29178524017334
    8. ')' → logprob: -6.66678524017334
    9. '```' → logprob: -6.79178524017334
    10. ')%' → logprob: -7.91678524017334

Token 211: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.017567379400134087
    2. ' return' → logprob: -4.267567157745361
    3. '   ' → logprob: -6.017567157745361
    4. 'ans' → logprob: -7.017567157745361
    5. 'mod' → logprob: -10.14256763458252
    6. 'print' → logprob: -11.64256763458252
    7. ' ans' → logprob: -12.01756763458252
    8. '	return' → logprob: -12.26756763458252
    9. ':return' → logprob: -12.51756763458252
    10. '	ans' → logprob: -13.89256763458252

Token 212: ' ans' (ID: 3345)
  Prédit: ' ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.3133777678012848
    2. 'ans' → logprob: -1.3133777379989624
    3. '(ans' → logprob: -9.063377380371094
    4. '	ans' → logprob: -15.438377380371094
    5. '_ans' → logprob: -17.438377380371094
    6. ' ' → logprob: -20.188377380371094
    7. 'answer' → logprob: -20.813377380371094
    8. 'Ans' → logprob: -20.938377380371094
    9. 'anst' → logprob: -21.188377380371094
    10. ' ' → logprob: -21.313377380371094

Token 213: '%' (ID: 4)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 214: 'mod' (ID: 4847)
  Prédit: 'mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -3.128163257315464e-07
    2. ' mod' → logprob: -15.625
    3. '(mod' → logprob: -17.25
    4. '10' → logprob: -19.125
    5. '	mod' → logprob: -19.5
    6. '```' → logprob: -21.5
    7. '   ' → logprob: -22.375
    8. 'MOD' → logprob: -23.375
    9. '
' → logprob: -23.625
    10. ' мод' → logprob: -23.75

Token 215: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 216: 'print' (ID: 1598)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.648065447807312
    2. '<|end|>' → logprob: -1.148065447807312
    3. '(' → logprob: -2.5230655670166016
    4. '#' → logprob: -3.5230655670166016
    5. '
' → logprob: -3.5230655670166016
    6. '```' → logprob: -4.773065567016602
    7. '[' → logprob: -5.648065567016602
    8. ',' → logprob: -6.148065567016602
    9. ':' → logprob: -7.273065567016602
    10. '<|end|>' → logprob: -7.398065567016602

Token 217: '(rem' (ID: 150425)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0006234417669475079
    2. '(rem' → logprob: -7.5006232261657715
    3. '(remove' → logprob: -11.25062370300293
    4. '('' → logprob: -11.25062370300293
    5. ' (' → logprob: -11.87562370300293
    6. '()' → logprob: -12.37562370300293
    7. '((' → logprob: -12.75062370300293
    8. '(`' → logprob: -12.75062370300293
    9. '(print' → logprob: -12.87562370300293
    10. '(
' → logprob: -13.00062370300293

Token 218: 'ov' (ID: 569)
  Prédit: 'ov'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ov' → logprob: -0.0016084164381027222
    2. '(' → logprob: -7.126608371734619
    3. '(n' → logprob: -7.251608371734619
    4. 'ovn' → logprob: -10.501608848571777
    5. 'oven' → logprob: -11.001608848571777
    6. 'ove' → logprob: -11.376608848571777
    7. 'o' → logprob: -11.376608848571777
    8. '(rem' → logprob: -12.251608848571777
    9. 'over' → logprob: -12.376608848571777
    10. 'oved' → logprob: -12.626608848571777

Token 219: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.011119741946458817
    2. '(n' → logprob: -4.511119842529297
    3. ')' → logprob: -10.386119842529297
    4. '()' → logprob: -11.386119842529297
    5. '((' → logprob: -11.886119842529297
    6. '(len' → logprob: -12.261119842529297
    7. '(`' → logprob: -12.511119842529297
    8. '(
' → logprob: -12.886119842529297
    9. '(

' → logprob: -13.011119842529297
    10. '(a' → logprob: -13.386119842529297

Token 220: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.009448634460568428
    2. '(' → logprob: -4.884448528289795
    3. 'input' → logprob: -6.384448528289795
    4. '(
' → logprob: -9.634449005126953
    5. '()' → logprob: -10.384449005126953
    6. ' input' → logprob: -11.259449005126953
    7. '())' → logprob: -11.384449005126953
    8. '(

' → logprob: -11.884449005126953
    9. ',input' → logprob: -12.134449005126953
    10. '(),' → logprob: -12.259449005126953

Token 221: '()),' (ID: 24379)
  Prédit: '()),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()),' → logprob: -0.05081433430314064
    2. '(),' → logprob: -3.050814390182495
    3. '()' → logprob: -6.175814151763916
    4. '())' → logprob: -10.050814628601074
    5. '()))' → logprob: -10.175814628601074
    6. '(),"' → logprob: -10.425814628601074
    7. '()),
' → logprob: -11.550814628601074
    8. '(' → logprob: -12.300814628601074
    9. '())))' → logprob: -12.425814628601074
    10. '()],' → logprob: -12.425814628601074

Token 222: '[' (ID: 58)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.023406540974974632
    2. '[list' → logprob: -3.773406505584717
    3. ' list' → logprob: -9.523406982421875
    4. '[' → logprob: -9.773406982421875
    5. '[input' → logprob: -10.898406982421875
    6. 'eval' → logprob: -11.648406982421875
    7. '[int' → logprob: -13.023406982421875
    8. '(list' → logprob: -14.648406982421875
    9. 'input' → logprob: -15.273406982421875
    10. '=list' → logprob: -15.523406982421875

Token 223: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.05136077105998993
    2. '1' → logprob: -3.426360845565796
    3. '0' → logprob: -4.551360607147217
    4. ']))' → logprob: -5.676360607147217
    5. ']int' → logprob: -7.051360607147217
    6. '*' → logprob: -7.551360607147217
    7. ' int' → logprob: -7.551360607147217
    8. ' ' → logprob: -7.676360607147217
    9. '2' → logprob: -8.426361083984375
    10. ']' → logprob: -8.801361083984375

Token 224: '(i' (ID: 3649)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.4960198998451233
    2. '(input' → logprob: -0.9960198998451233
    3. '(i' → logprob: -3.8710198402404785
    4. '(' → logprob: -7.3710198402404785
    5. '(token' → logprob: -9.871020317077637
    6. 'input' → logprob: -9.996020317077637
    7. '(
' → logprob: -10.121020317077637
    8. '(a' → logprob: -10.246020317077637
    9. '(s' → logprob: -11.121020317077637
    10. '(e' → logprob: -11.621020317077637

Token 225: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3991222381591797
    2. '(x' → logprob: -1.3991222381591797
    3. 'for' → logprob: -3.3991222381591797
    4. '(input' → logprob: -4.39912223815918
    5. '()' → logprob: -4.52412223815918
    6. '(' → logprob: -4.52412223815918
    7. ' for' → logprob: -5.02412223815918
    8. '(i' → logprob: -5.77412223815918
    9. 'input' → logprob: -6.39912223815918
    10. ')])' → logprob: -7.64912223815918

Token 226: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5203844904899597
    2. ' for' → logprob: -1.0203845500946045
    3. ')' → logprob: -3.6453845500946045
    4. '()' → logprob: -4.270384311676025
    5. '(input' → logprob: -5.645384311676025
    6. 'input' → logprob: -7.395384311676025
    7. ' ' → logprob: -8.020384788513184
    8. ']' → logprob: -8.520384788513184
    9. '=input' → logprob: -9.020384788513184
    10. '
' → logprob: -9.395384788513184

Token 227: ' i' (ID: 575)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.061993010342121124
    2. 'input' → logprob: -2.81199312210083
    3. '(input' → logprob: -10.936992645263672
    4. ' in' → logprob: -13.061992645263672
    5. '=input' → logprob: -13.061992645263672
    6. ' ' → logprob: -13.186992645263672
    7. ',input' → logprob: -14.311992645263672
    8. '_input' → logprob: -15.436992645263672
    9. '_' → logprob: -15.936992645263672
    10. 'in' → logprob: -16.311992645263672

Token 228: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10457847267389297
    2. 'in' → logprob: -2.4795784950256348
    3. 'input' → logprob: -4.354578495025635
    4. ' input' → logprob: -6.729578495025635
    5. '(input' → logprob: -7.229578495025635
    6. '(' → logprob: -7.979578495025635
    7. ' ' → logprob: -8.104578018188477
    8. '=input' → logprob: -9.854578018188477
    9. ',input' → logprob: -10.354578018188477
    10. '  ' → logprob: -12.729578018188477

Token 229: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0007104054093360901
    2. ' input' → logprob: -7.250710487365723
    3. '(input' → logprob: -14.875710487365723
    4. 'range' → logprob: -17.500709533691406
    5. '=input' → logprob: -20.000709533691406
    6. '<input' → logprob: -21.750709533691406
    7. ',input' → logprob: -21.875709533691406
    8. ' ' → logprob: -22.000709533691406
    9. '_input' → logprob: -22.000709533691406
    10. '	input' → logprob: -22.250709533691406

Token 230: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.1472419600977446e-06
    2. '()' → logprob: -14.000000953674316
    3. '.split' → logprob: -16.125001907348633
    4. 'split' → logprob: -16.250001907348633
    5. ' ().' → logprob: -16.875001907348633
    6. '()
' → logprob: -19.750001907348633
    7. '()].' → logprob: -19.750001907348633
    8. '()]' → logprob: -20.375001907348633
    9. '(' → logprob: -20.750001907348633
    10. '.strip' → logprob: -21.250001907348633

Token 231: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -2.176947600673884e-05
    2. 'strip' → logprob: -10.750021934509277
    3. 'rstrip' → logprob: -15.750021934509277
    4. ' split' → logprob: -16.50002098083496
    5. '(split' → logprob: -17.87502098083496
    6. 'spl' → logprob: -19.75002098083496
    7. '.split' → logprob: -21.50002098083496
    8. 's' → logprob: -22.37502098083496
    9. 'plit' → logprob: -22.75002098083496
    10. '_split' → logprob: -23.87502098083496

Token 232: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0052428836934268475
    2. '()]' → logprob: -5.255242824554443
    3. ']))' → logprob: -12.630243301391602
    4. '()))' → logprob: -12.755243301391602
    5. '(' → logprob: -13.380243301391602
    6. '()],' → logprob: -14.755243301391602
    7. '())' → logprob: -15.005243301391602
    8. '()`' → logprob: -15.880243301391602
    9. '())))' → logprob: -15.880243301391602
    10. '()][' → logprob: -16.0052433013916

Token 233: ']))' (ID: 20259)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.04564179480075836
    2. ']))' → logprob: -3.5456418991088867
    3. ')' → logprob: -5.045641899108887
    4. '])' → logprob: -5.170641899108887
    5. '()))' → logprob: -6.420641899108887
    6. ')])' → logprob: -6.920641899108887
    7. ')))' → logprob: -7.045641899108887
    8. '())' → logprob: -9.420641899108887
    9. ')]' → logprob: -9.795641899108887
    10. '()' → logprob: -11.170641899108887


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 231
Tokens correctement prédits (1ère position, stricte): 121
Tokens correctement prédits (1ère position, avec adaptation): 127
Tokens correctement prédits (top 10): 196
Précision stricte (1ère position): 52.38%
Précision adaptée (1ère position): 54.98%
Précision (top 10): 84.85%
================================================================================
