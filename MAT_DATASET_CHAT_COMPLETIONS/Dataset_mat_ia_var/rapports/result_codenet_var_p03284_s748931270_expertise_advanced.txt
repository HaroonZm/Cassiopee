================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:11:34
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
print(int(bool(int(input().split()[0]) % int(input().split()[1]))))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'print' (ID: 1598)
  → Token d'amorce (pas de prédiction)

Token 1: '(int' (ID: 2742)
  → Token d'amorce (pas de prédiction)

Token 2: '(bool' (ID: 22323)
  → Token d'amorce (pas de prédiction)

Token 3: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0038918766658753157
    2. '))' → logprob: -6.253891944885254
    3. '((' → logprob: -7.378891944885254
    4. '('' → logprob: -8.503891944885254
    5. '()))' → logprob: -8.503891944885254
    6. '(True' → logprob: -8.503891944885254
    7. ')' → logprob: -9.003891944885254
    8. 's' → logprob: -9.753891944885254
    9. '(int' → logprob: -10.003891944885254
    10. '(()' → logprob: -10.128891944885254

Token 4: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.006964832078665495
    2. ''' → logprob: -5.256964683532715
    3. '((' → logprob: -7.381964683532715
    4. '('' → logprob: -7.631964683532715
    5. '"' → logprob: -8.131964683532715
    6. '`' → logprob: -9.881964683532715
    7. '(
' → logprob: -10.256964683532715
    8. ' (' → logprob: -10.381964683532715
    9. ')))' → logprob: -10.381964683532715
    10. ' ' → logprob: -10.756964683532715

Token 5: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0029288530349731445
    2. '('' → logprob: -6.752928733825684
    3. ''' → logprob: -7.752928733825684
    4. '))))' → logprob: -7.752928733825684
    5. '"' → logprob: -8.752928733825684
    6. '(
' → logprob: -8.877928733825684
    7. '(()' → logprob: -9.002928733825684
    8. '((' → logprob: -9.002928733825684
    9. '("("' → logprob: -9.377928733825684
    10. '()))' → logprob: -9.502928733825684

Token 6: 'split' (ID: 13627)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07735201716423035
    2. '))))' → logprob: -3.3273520469665527
    3. '()))' → logprob: -4.077352046966553
    4. '())))' → logprob: -4.952352046966553
    5. ')))' → logprob: -5.452352046966553
    6. ')' → logprob: -5.452352046966553
    7. '('' → logprob: -6.452352046966553
    8. '())' → logprob: -6.577352046966553
    9. '()' → logprob: -6.702352046966553
    10. '))' → logprob: -7.202352046966553

Token 7: '()[' (ID: 20778)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.032159194350242615
    2. '('' → logprob: -3.5321590900421143
    3. '("("' → logprob: -7.157159328460693
    4. '((' → logprob: -7.532159328460693
    5. '([' → logprob: -8.282158851623535
    6. '(()' → logprob: -8.657158851623535
    7. ''' → logprob: -9.157158851623535
    8. '(
' → logprob: -9.407158851623535
    9. '("' → logprob: -9.407158851623535
    10. '())))' → logprob: -9.532158851623535

Token 8: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.602024900028482e-05
    2. '1' → logprob: -9.750085830688477
    3. '-' → logprob: -10.750085830688477
    4. ''' → logprob: -12.500085830688477
    5. ' ' → logprob: -13.500085830688477
    6. '"' → logprob: -14.875085830688477
    7. '`' → logprob: -15.125085830688477
    8. '2' → logprob: -15.500085830688477
    9. '[' → logprob: -15.750085830688477
    10. '```' → logprob: -16.000085830688477

Token 9: '])' (ID: 4636)
  Prédit: '))))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))))' → logprob: -0.4743523895740509
    2. '))' → logprob: -1.4743523597717285
    3. ')' → logprob: -2.0993523597717285
    4. ')))' → logprob: -3.7243523597717285
    5. ''))' → logprob: -6.4743523597717285
    6. '[' → logprob: -8.974352836608887
    7. ')))),' → logprob: -9.349352836608887
    8. '')' → logprob: -9.599352836608887
    9. '(' → logprob: -9.724352836608887
    10. ')))))
' → logprob: -9.849352836608887

Token 10: ' %' (ID: 1851)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.01728939637541771
    2. ')' → logprob: -4.142289161682129
    3. '))' → logprob: -6.767289161682129
    4. '))))' → logprob: -9.267289161682129
    5. ' ' → logprob: -12.767289161682129
    6. '')))' → logprob: -13.267289161682129
    7. ')))
' → logprob: -13.517289161682129
    8. ')));' → logprob: -14.017289161682129
    9. '())))' → logprob: -14.892289161682129
    10. '(' → logprob: -15.142289161682129

Token 11: ' int' (ID: 677)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.3927648365497589
    2. ' ' → logprob: -1.1427648067474365
    3. '1' → logprob: -6.517765045166016
    4. '3' → logprob: -6.517765045166016
    5. '32' → logprob: -7.017765045166016
    6. '10' → logprob: -7.142765045166016
    7. '4' → logprob: -7.267765045166016
    8. '5' → logprob: -9.267765045166016
    9. '7' → logprob: -9.517765045166016
    10. '6' → logprob: -9.642765045166016

Token 12: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3891056776046753
    2. '(input' → logprob: -1.1391056776046753
    3. '()' → logprob: -7.139105796813965
    4. '('' → logprob: -8.014105796813965
    5. '((' → logprob: -8.264105796813965
    6. '("("' → logprob: -8.389105796813965
    7. '(()' → logprob: -9.014105796813965
    8. 'input' → logprob: -9.264105796813965
    9. '()))' → logprob: -10.139105796813965
    10. ' (' → logprob: -10.264105796813965

Token 13: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.05534245818853378
    2. '()' → logprob: -3.430342435836792
    3. '())))' → logprob: -4.555342674255371
    4. '()))' → logprob: -4.805342674255371
    5. '())' → logprob: -6.555342674255371
    6. '(' → logprob: -7.555342674255371
    7. ')))' → logprob: -7.930342674255371
    8. '))))' → logprob: -8.930342674255371
    9. '()[' → logprob: -9.180342674255371
    10. ')' → logprob: -10.555342674255371

Token 14: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0009676800691522658
    2. '0' → logprob: -7.625967502593994
    3. '2' → logprob: -7.875967502593994
    4. '1' → logprob: -10.875967979431152
    5. '3' → logprob: -11.125967979431152
    6. ' split' → logprob: -11.375967979431152
    7. ')))' → logprob: -11.625967979431152
    8. '[' → logprob: -11.875967979431152
    9. '(split' → logprob: -12.000967979431152
    10. 'read' → logprob: -12.250967979431152

Token 15: '()[' (ID: 20778)
  Prédit: '()['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()[' → logprob: -0.0003086486831307411
    2. '()' → logprob: -8.500308990478516
    3. '[' → logprob: -9.375308990478516
    4. '(' → logprob: -11.625308990478516
    5. '([' → logprob: -12.250308990478516
    6. '```' → logprob: -13.625308990478516
    7. '('' → logprob: -13.750308990478516
    8. '())[' → logprob: -14.500308990478516
    9. '()][' → logprob: -14.625308990478516
    10. '().__' → logprob: -14.750308990478516

Token 16: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6330823302268982
    2. '1' → logprob: -0.7580823302268982
    3. ' ' → logprob: -8.383082389831543
    4. '-' → logprob: -9.133082389831543
    5. '2' → logprob: -9.508082389831543
    6. '```' → logprob: -11.008082389831543
    7. '   ' → logprob: -11.633082389831543
    8. ']))' → logprob: -11.758082389831543
    9. ']' → logprob: -12.008082389831543
    10. '  ' → logprob: -12.320582389831543

Token 17: ']))' (ID: 20259)
  Prédit: '))))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))))' → logprob: -0.47150906920433044
    2. ')' → logprob: -1.5965090990066528
    3. ')))' → logprob: -1.8465090990066528
    4. '))' → logprob: -4.221508979797363
    5. ''))' → logprob: -8.096508979797363
    6. '')))' → logprob: -8.471508979797363
    7. '')' → logprob: -9.846508979797363
    8. '))))
' → logprob: -10.096508979797363
    9. '()' → logprob: -10.346508979797363
    10. ' ' → logprob: -10.471508979797363

Token 18: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.08438072353601456
    2. ')' → logprob: -2.584380626678467
    3. ')))' → logprob: -5.209380626678467
    4. ''))' → logprob: -12.834381103515625
    5. '))))' → logprob: -13.209381103515625
    6. ' ' → logprob: -13.959381103515625
    7. ' ))' → logprob: -14.709381103515625
    8. '"))' → logprob: -14.709381103515625
    9. '))
' → logprob: -14.834381103515625
    10. '**' → logprob: -14.834381103515625


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 16
Tokens correctement prédits (1ère position, stricte): 5
Tokens correctement prédits (1ère position, avec adaptation): 5
Tokens correctement prédits (top 10): 8
Précision stricte (1ère position): 31.25%
Précision adaptée (1ère position): 31.25%
Précision (top 10): 50.00%
================================================================================
