================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:38:01
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
input = sys.stdin.readline

n = int(input())
ans = 0
summation = 0
for i in range(n):
    d, c = [int(item) for item in input().split()]
    ans += c
    summation += d * c
print(ans - 1 + summation // 9 - (summation % 9 == 0))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'input' (ID: 2586)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.5435490608215332
    2. '.' → logprob: -1.0435490608215332
    3. '<|end|>' → logprob: -3.918549060821533
    4. '\' → logprob: -4.043549060821533
    5. 'import' → logprob: -4.418549060821533
    6. 'newline' → logprob: -5.293549060821533
    7. '' → logprob: -6.043549060821533
    8. '\r' → logprob: -6.168549060821533
    9. '
' → logprob: -6.293549060821533
    10. '<|end|>' → logprob: -6.418549060821533

Token 4: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.009539559483528137
    2. '.' → logprob: -4.759539604187012
    3. ''' → logprob: -8.259539604187012
    4. '```' → logprob: -8.884539604187012
    5. ')' → logprob: -9.009539604187012
    6. ' (' → logprob: -9.634539604187012
    7. '(
' → logprob: -9.634539604187012
    8. '"' → logprob: -9.759539604187012
    9. ''s' → logprob: -10.259539604187012
    10. '()' → logprob: -10.259539604187012

Token 5: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.009042556397616863
    2. 'sys' → logprob: -4.759042739868164
    3. ' input' → logprob: -7.884042739868164
    4. 'input' → logprob: -10.009042739868164
    5. ' ' → logprob: -13.134042739868164
    6. '	sys' → logprob: -13.509042739868164
    7. '(sys' → logprob: -13.634042739868164
    8. '=sys' → logprob: -13.759042739868164
    9. ' system' → logprob: -14.384042739868164
    10. ' lambda' → logprob: -16.759042739868164

Token 6: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00016074994346126914
    2. ' .' → logprob: -9.875161170959473
    3. '[' → logprob: -10.750161170959473
    4. '.readline' → logprob: -10.750161170959473
    5. '.stdin' → logprob: -11.125161170959473
    6. '.
' → logprob: -11.500161170959473
    7. '.import' → logprob: -11.875161170959473
    8. '.​' → logprob: -12.625161170959473
    9. '.argv' → logprob: -12.875161170959473
    10. '```' → logprob: -12.875161170959473

Token 7: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.1949765831232071
    2. '.' → logprob: -1.819976568222046
    3. '.read' → logprob: -4.194976806640625
    4. '.readlines' → logprob: -10.819976806640625
    5. 'read' → logprob: -11.819976806640625
    6. '.Read' → logprob: -12.444976806640625
    7. '.buffer' → logprob: -12.944976806640625
    8. ' .' → logprob: -12.944976806640625
    9. '.

' → logprob: -13.444976806640625
    10. '.get' → logprob: -13.569976806640625

Token 8: '

' (ID: 279)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.119438037276268
    2. '(' → logprob: -2.3694379329681396
    3. '()
' → logprob: -4.744438171386719
    4. '(
' → logprob: -5.744438171386719
    5. '().' → logprob: -5.869438171386719
    6. '
' → logprob: -5.869438171386719
    7. '()\' → logprob: -7.869438171386719
    8. '\n' → logprob: -7.994438171386719
    9. '()

' → logprob: -8.619438171386719
    10. '\' → logprob: -8.994438171386719

Token 9: 'n' (ID: 77)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.01860499195754528
    2. '(' → logprob: -4.018604755401611
    3. '()
' → logprob: -8.89360523223877
    4. '().' → logprob: -9.26860523223877
    5. 'def' → logprob: -9.89360523223877
    6. '()

' → logprob: -9.89360523223877
    7. '(
' → logprob: -10.39360523223877
    8. '()\' → logprob: -10.39360523223877
    9. '())' → logprob: -11.76860523223877
    10. ')' → logprob: -12.26860523223877

Token 10: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.0607253313064575
    2. ' =' → logprob: -1.0607253313064575
    3. ' ' → logprob: -1.5607253313064575
    4. ')' → logprob: -3.060725212097168
    5. '[' → logprob: -3.935725212097168
    6. '.' → logprob: -4.435725212097168
    7. '_' → logprob: -5.185725212097168
    8. ',' → logprob: -5.810725212097168
    9. '  ' → logprob: -5.935725212097168
    10. '+' → logprob: -6.810725212097168

Token 11: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.012633842416107655
    2. 'int' → logprob: -4.387633800506592
    3. ' ' → logprob: -9.26263427734375
    4. ' input' → logprob: -10.63763427734375
    5. 'input' → logprob: -13.76263427734375
    6. ' i' → logprob: -13.88763427734375
    7. ' in' → logprob: -14.26263427734375
    8. '=int' → logprob: -14.51263427734375
    9. ' map' → logprob: -14.63763427734375
    10. '  ' → logprob: -14.88763427734375

Token 12: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2016296684741974
    2. '(input' → logprob: -1.701629638671875
    3. '(n' → logprob: -8.951629638671875
    4. '('' → logprob: -9.826629638671875
    5. ' (' → logprob: -11.701629638671875
    6. '()' → logprob: -11.951629638671875
    7. '(
' → logprob: -11.951629638671875
    8. '("' → logprob: -13.451629638671875
    9. '(`' → logprob: -13.451629638671875
    10. 'input' → logprob: -13.576629638671875

Token 13: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.607313334941864
    2. ')' → logprob: -0.857313334941864
    3. '()' → logprob: -3.482313394546509
    4. '(' → logprob: -9.10731315612793
    5. '`)' → logprob: -11.60731315612793
    6. ' ())' → logprob: -11.60731315612793
    7. '))' → logprob: -11.73231315612793
    8. ' )' → logprob: -12.98231315612793
    9. '])' → logprob: -13.60731315612793
    10. '()))' → logprob: -13.73231315612793

Token 14: 'ans' (ID: 616)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07615284621715546
    2. 'if' → logprob: -3.451152801513672
    3. '\n' → logprob: -4.576152801513672
    4. ' for' → logprob: -4.701152801513672
    5. 'data' → logprob: -5.326152801513672
    6. ')' → logprob: -5.451152801513672
    7. 'a' → logprob: -5.826152801513672
    8. 's' → logprob: -6.451152801513672
    9. '\' → logprob: -6.826152801513672
    10. '*' → logprob: -6.951152801513672

Token 15: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05526880919933319
    2. ' +=' → logprob: -3.3052687644958496
    3. '=' → logprob: -4.30526876449585
    4. ' ' → logprob: -6.30526876449585
    5. '[' → logprob: -7.68026876449585
    6. '+' → logprob: -7.93026876449585
    7. '_' → logprob: -7.93026876449585
    8. '+=' → logprob: -8.805269241333008
    9. '[:]' → logprob: -9.305269241333008
    10. ')' → logprob: -9.430269241333008

Token 16: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.07676729559898376
    2. '0' → logprob: -2.7017672061920166
    3. ' n' → logprob: -5.826767444610596
    4. ' []' → logprob: -6.326767444610596
    5. 'n' → logprob: -6.951767444610596
    6. '[]' → logprob: -8.201766967773438
    7. ' "' → logprob: -8.576766967773438
    8. '"' → logprob: -9.201766967773438
    9. ' float' → logprob: -9.451766967773438
    10. ' [' → logprob: -9.451766967773438

Token 17: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.012414761818945408
    2. 'n' → logprob: -5.262414932250977
    3. '[]' → logprob: -6.137414932250977
    4. '[' → logprob: -6.512414932250977
    5. '1' → logprob: -6.887414932250977
    6. 'float' → logprob: -7.137414932250977
    7. '[n' → logprob: -7.262414932250977
    8. '"' → logprob: -8.887414932250977
    9. '-' → logprob: -9.012414932250977
    10. 'max' → logprob: -9.262414932250977

Token 18: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07681310921907425
    2. ' for' → logprob: -2.826813220977783
    3. '
' → logprob: -5.201813220977783
    4. ' 
' → logprob: -5.576813220977783
    5. '\n' → logprob: -5.826813220977783
    6. ' ' → logprob: -6.576813220977783
    7. '*' → logprob: -8.201812744140625
    8. '' → logprob: -8.576812744140625
    9. '+' → logprob: -9.076812744140625
    10. '\' → logprob: -9.076812744140625

Token 19: 'summ' (ID: 141249)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.005859112832695246
    2. ' for' → logprob: -5.255858898162842
    3. '
' → logprob: -8.005859375
    4. '\n' → logprob: -8.755859375
    5. ' 
' → logprob: -10.005859375
    6. ' ' → logprob: -10.380859375
    7. '' → logprob: -11.380859375
    8. '```' → logprob: -11.630859375
    9. '\' → logprob: -11.755859375
    10. '*' → logprob: -12.380859375

Token 20: 'ation' (ID: 387)
  Prédit: 'ation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ation' → logprob: -0.9307950139045715
    2. '=' → logprob: -1.0557949542999268
    3. 'a' → logprob: -1.9307949542999268
    4. ' =' → logprob: -2.9307949542999268
    5. ' +=' → logprob: -3.5557949542999268
    6. '+=' → logprob: -3.9307949542999268
    7. 'er' → logprob: -5.555795192718506
    8. 'ary' → logprob: -5.930795192718506
    9. '+' → logprob: -6.180795192718506
    10. 'ery' → logprob: -7.680795192718506

Token 21: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.915657639503479
    2. ' +=' → logprob: -1.165657639503479
    3. '_' → logprob: -1.415657639503479
    4. '=' → logprob: -3.6656575202941895
    5. ' ' → logprob: -4.2906575202941895
    6. '+' → logprob: -6.2906575202941895
    7. ' +' → logprob: -6.7906575202941895
    8. '+=' → logprob: -6.7906575202941895
    9. 's' → logprob: -7.4156575202941895
    10. '(' → logprob: -7.4156575202941895

Token 22: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.20146293938159943
    2. ' ' → logprob: -1.701462984085083
    3. ' n' → logprob: -10.701462745666504
    4. 'n' → logprob: -11.451462745666504
    5. '+' → logprob: -12.201462745666504
    6. ' ans' → logprob: -12.201462745666504
    7. ' ' → logprob: -13.701462745666504
    8. ' +' → logprob: -13.826462745666504
    9. ')' → logprob: -14.576462745666504
    10. '1' → logprob: -14.701462745666504

Token 23: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0020019153598695993
    2. 'n' → logprob: -6.627001762390137
    3. ' ' → logprob: -8.002001762390137
    4. 'i' → logprob: -9.377001762390137
    5. 'int' → logprob: -9.377001762390137
    6. '1' → logprob: -9.752001762390137
    7. '+' → logprob: -10.377001762390137
    8. 'ans' → logprob: -10.877001762390137
    9. ' n' → logprob: -11.252001762390137
    10. 'input' → logprob: -11.377001762390137

Token 24: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07939500361680984
    2. ' for' → logprob: -2.579395055770874
    3. '
' → logprob: -8.454395294189453
    4. '\n' → logprob: -8.704395294189453
    5. 'while' → logprob: -9.454395294189453
    6. ' 
' → logprob: -10.954395294189453
    7. ' ' → logprob: -11.204395294189453
    8. ' while' → logprob: -11.829395294189453
    9. '' → logprob: -12.704395294189453
    10. '\' → logprob: -12.829395294189453

Token 25: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.007618221454322338
    2. ' for' → logprob: -4.882618427276611
    3. 'while' → logprob: -11.507617950439453
    4. 'arr' → logprob: -14.257617950439453
    5. 'numbers' → logprob: -15.632617950439453
    6. 'i' → logprob: -15.757617950439453
    7. 'data' → logprob: -16.132617950439453
    8. 'max' → logprob: -16.382617950439453
    9. '```' → logprob: -16.382617950439453
    10. ' while' → logprob: -16.382617950439453

Token 26: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.02498384192585945
    2. ' ' → logprob: -3.8999838829040527
    3. '_' → logprob: -6.524983882904053
    4. ' range' → logprob: -6.649983882904053
    5. ' _' → logprob: -6.774983882904053
    6. 'i' → logprob: -8.274983406066895
    7. ' in' → logprob: -8.274983406066895
    8. 'range' → logprob: -11.899983406066895
    9. ' ' → logprob: -13.149983406066895
    10. '  ' → logprob: -13.149983406066895

Token 27: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.012636194005608559
    2. 'in' → logprob: -4.387636184692383
    3. ' ' → logprob: -9.262636184692383
    4. '+' → logprob: -10.762636184692383
    5. '1' → logprob: -12.387636184692383
    6. 'range' → logprob: -13.262636184692383
    7. 'import' → logprob: -14.387636184692383
    8. '  ' → logprob: -14.637636184692383
    9. '```' → logprob: -14.887636184692383
    10. 'n' → logprob: -14.887636184692383

Token 28: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0144832544028759
    2. 'range' → logprob: -4.264483451843262
    3. ' ' → logprob: -8.389483451843262
    4. ' in' → logprob: -9.389483451843262
    5. '1' → logprob: -13.389483451843262
    6. 'in' → logprob: -13.514483451843262
    7. ' n' → logprob: -13.764483451843262
    8. '(range' → logprob: -14.139483451843262
    9. ' xrange' → logprob: -14.389483451843262
    10. 'n' → logprob: -14.514483451843262

Token 29: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.051624804735183716
    2. '(n' → logprob: -3.0516247749328613
    3. ' (' → logprob: -5.801624774932861
    4. '(range' → logprob: -12.67662525177002
    5. ' ' → logprob: -13.30162525177002
    6. '(i' → logprob: -14.05162525177002
    7. '1' → logprob: -14.05162525177002
    8. '(
' → logprob: -14.05162525177002
    9. ' n' → logprob: -14.30162525177002
    10. '(s' → logprob: -14.55162525177002

Token 30: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.02263672836124897
    2. '+' → logprob: -4.022636890411377
    3. ' ):' → logprob: -5.522636890411377
    4. ')' → logprob: -8.397636413574219
    5. '):
' → logprob: -9.022636413574219
    6. ' +' → logprob: -9.272636413574219
    7. ',' → logprob: -11.397636413574219
    8. ':' → logprob: -11.772636413574219
    9. '+:' → logprob: -12.022636413574219
    10. '-' → logprob: -12.397636413574219

Token 31: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6136677861213684
    2. ' ' → logprob: -0.8636677861213684
    3. '    ' → logprob: -4.363667964935303
    4. ' s' → logprob: -5.238667964935303
    5. ' 
' → logprob: -5.238667964935303
    6. ' x' → logprob: -5.738667964935303
    7. '    
' → logprob: -6.488667964935303
    8. ' ,' → logprob: -6.738667964935303
    9. ' line' → logprob: -6.738667964935303
    10. ' input' → logprob: -6.738667964935303

Token 32: ' d' (ID: 272)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7370603680610657
    2. ' x' → logprob: -1.612060308456421
    3. ' a' → logprob: -2.112060308456421
    4. ' num' → logprob: -2.487060308456421
    5. 'num' → logprob: -3.737060308456421
    6. ' number' → logprob: -3.862060308456421
    7. 'a' → logprob: -3.987060308456421
    8. ' A' → logprob: -4.112060546875
    9. ' ' → logprob: -4.987060546875
    10. 'x' → logprob: -5.112060546875

Token 33: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08237369358539581
    2. ' ' → logprob: -3.08237361907959
    3. '=' → logprob: -3.83237361907959
    4. 'ata' → logprob: -5.33237361907959
    5. ',' → logprob: -5.45737361907959
    6. ' ,' → logprob: -6.70737361907959
    7. '   ' → logprob: -8.08237361907959
    8. '  ' → logprob: -8.45737361907959
    9. '    ' → logprob: -9.08237361907959
    10. '=int' → logprob: -9.20737361907959

Token 34: ' c' (ID: 274)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -1.1794437170028687
    2. ' w' → logprob: -1.3044437170028687
    3. 'a' → logprob: -2.179443836212158
    4. 'x' → logprob: -2.554443836212158
    5. ' a' → logprob: -3.179443836212158
    6. ' x' → logprob: -3.429443836212158
    7. 'v' → logprob: -3.679443836212158
    8. 'c' → logprob: -3.804443836212158
    9. ' v' → logprob: -3.929443836212158
    10. ' c' → logprob: -4.054443836212158

Token 35: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12697367370128632
    2. '=' → logprob: -2.1269736289978027
    3. ' ' → logprob: -10.126974105834961
    4. ',' → logprob: -12.376974105834961
    5. '=input' → logprob: -14.251974105834961
    6. ')' → logprob: -16.25197410583496
    7. ' ' → logprob: -16.37697410583496
    8. '=int' → logprob: -16.75197410583496
    9. '＝' → logprob: -16.75197410583496
    10. '=line' → logprob: -16.87697410583496

Token 36: ' [' (ID: 723)
  Prédit: ' map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.006727445870637894
    2. 'map' → logprob: -5.00672721862793
    3. ' ' → logprob: -12.75672721862793
    4. ' [' → logprob: -12.75672721862793
    5. ' input' → logprob: -13.38172721862793
    6. '	map' → logprob: -13.38172721862793
    7. ' list' → logprob: -13.50672721862793
    8. '[' → logprob: -14.25672721862793
    9. ' ' → logprob: -14.38172721862793
    10. '   ' → logprob: -15.63172721862793

Token 37: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -4.3822154111694545e-05
    2. ' int' → logprob: -10.750043869018555
    3. 'map' → logprob: -10.750043869018555
    4. '*' → logprob: -15.000043869018555
    5. ']int' → logprob: -15.625043869018555
    6. '```' → logprob: -16.375043869018555
    7. '(int' → logprob: -16.500043869018555
    8. ' map' → logprob: -16.500043869018555
    9. '   ' → logprob: -16.750043869018555
    10. '0' → logprob: -17.750043869018555

Token 38: '(item' (ID: 10016)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.001382974674925208
    2. '(i' → logprob: -6.751382827758789
    3. '(input' → logprob: -9.626382827758789
    4. ']' → logprob: -10.001382827758789
    5. 'x' → logprob: -10.501382827758789
    6. '()]' → logprob: -10.626382827758789
    7. '(token' → logprob: -11.501382827758789
    8. '()' → logprob: -11.626382827758789
    9. '(' → logprob: -11.751382827758789
    10. '(s' → logprob: -11.876382827758789

Token 39: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0041402606293559074
    2. '()' → logprob: -6.129140377044678
    3. 'for' → logprob: -6.379140377044678
    4. ' for' → logprob: -8.37913990020752
    5. '())' → logprob: -11.00413990020752
    6. '(' → logprob: -13.12913990020752
    7. ' ' → logprob: -13.37913990020752
    8. '```' → logprob: -13.62913990020752
    9. '),' → logprob: -14.00413990020752
    10. ' )' → logprob: -14.00413990020752

Token 40: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.930272102355957
    2. ' for' → logprob: -1.305272102355957
    3. '()' → logprob: -1.555272102355957
    4. 'for' → logprob: -2.180272102355957
    5. ']' → logprob: -4.805272102355957
    6. '()]' → logprob: -7.055272102355957
    7. '(input' → logprob: -8.055272102355957
    8. 'input' → logprob: -8.305272102355957
    9. ' ' → logprob: -9.055272102355957
    10. ' in' → logprob: -9.055272102355957

Token 41: ' item' (ID: 2169)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.04859747737646103
    2. 'input' → logprob: -3.048597574234009
    3. '(input' → logprob: -12.29859733581543
    4. '=input' → logprob: -13.17359733581543
    5. ' in' → logprob: -14.17359733581543
    6. '_input' → logprob: -14.29859733581543
    7. ' ' → logprob: -14.54859733581543
    8. '	input' → logprob: -14.79859733581543
    9. ',input' → logprob: -14.79859733581543
    10. '<|end|>' → logprob: -15.42359733581543

Token 42: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.022038569673895836
    2. 'in' → logprob: -4.147038459777832
    3. 'input' → logprob: -6.022038459777832
    4. '(' → logprob: -6.647038459777832
    5. '(input' → logprob: -6.772038459777832
    6. ' ' → logprob: -7.522038459777832
    7. ' input' → logprob: -8.772038459777832
    8. '<|end|>' → logprob: -9.022038459777832
    9. 'import' → logprob: -9.647038459777832
    10. '<|end|>' → logprob: -9.772038459777832

Token 43: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.20141461491584778
    2. ' input' → logprob: -1.7014145851135254
    3. '(input' → logprob: -14.076415061950684
    4. ' ' → logprob: -15.701415061950684
    5. '	input' → logprob: -16.451414108276367
    6. '<input' → logprob: -16.576414108276367
    7. '=input' → logprob: -16.576414108276367
    8. '[input' → logprob: -17.826414108276367
    9. ',input' → logprob: -17.826414108276367
    10. '_input' → logprob: -18.201414108276367

Token 44: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00018935515254270285
    2. '()' → logprob: -8.625189781188965
    3. '()]' → logprob: -11.625189781188965
    4. '()].' → logprob: -14.625189781188965
    5. '())' → logprob: -15.625189781188965
    6. ' ().' → logprob: -16.00018882751465
    7. '(' → logprob: -16.75018882751465
    8. 'split' → logprob: -17.37518882751465
    9. '()
' → logprob: -17.62518882751465
    10. '()][' → logprob: -18.12518882751465

Token 45: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.016066748648881912
    2. 'strip' → logprob: -4.266066551208496
    3. 'rstrip' → logprob: -6.266066551208496
    4. ' split' → logprob: -13.516066551208496
    5. '(split' → logprob: -15.641066551208496
    6. 'spl' → logprob: -15.891066551208496
    7. 'rs' → logprob: -17.141067504882812
    8. 'sp' → logprob: -17.141067504882812
    9. ' strip' → logprob: -17.141067504882812
    10. '.split' → logprob: -18.266067504882812

Token 46: '()]
' (ID: 67155)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.00028576893964782357
    2. '()' → logprob: -8.750286102294922
    3. ']' → logprob: -9.250286102294922
    4. '())' → logprob: -11.000286102294922
    5. ')]' → logprob: -11.750286102294922
    6. '()]
' → logprob: -12.250286102294922
    7. '(' → logprob: -13.625286102294922
    8. ']()' → logprob: -15.875286102294922
    9. '()][' → logprob: -15.875286102294922
    10. '`]' → logprob: -16.125286102294922

Token 47: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05474528670310974
    2. '
' → logprob: -4.304745197296143
    3. ' 
' → logprob: -4.304745197296143
    4. '    
' → logprob: -4.679745197296143
    5. '<|end|>' → logprob: -5.054745197296143
    6. ' ' → logprob: -5.679745197296143
    7. '    ' → logprob: -6.304745197296143
    8. '   
' → logprob: -6.304745197296143
    9. ' if' → logprob: -7.179745197296143
    10. '  ' → logprob: -7.429745197296143

Token 48: ' ans' (ID: 3345)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3357292115688324
    2. ' ' → logprob: -2.2107291221618652
    3. ' 
' → logprob: -2.7107291221618652
    4. 'summ' → logprob: -3.0857291221618652
    5. ' summ' → logprob: -4.085729122161865
    6. 'if' → logprob: -4.210729122161865
    7. '   ' → logprob: -4.335729122161865
    8. '    ' → logprob: -4.960729122161865
    9. 's' → logprob: -5.835729122161865
    10. '    
' → logprob: -6.210729122161865

Token 49: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.014540361240506172
    2. '+=' → logprob: -4.264540195465088
    3. '+' → logprob: -8.014540672302246
    4. ' =' → logprob: -10.764540672302246
    5. ' -=' → logprob: -11.389540672302246
    6. ' +' → logprob: -12.014540672302246
    7. '+=(' → logprob: -12.639540672302246
    8. '=' → logprob: -13.014540672302246
    9. ' ' → logprob: -13.889540672302246
    10. ']+=' → logprob: -15.639540672302246

Token 50: ' c' (ID: 274)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.850487232208252
    2. ' d' → logprob: -0.850487232208252
    3. ' c' → logprob: -2.725487232208252
    4. 'c' → logprob: -2.725487232208252
    5. ' max' → logprob: -4.975487232208252
    6. 'max' → logprob: -5.475487232208252
    7. ' min' → logprob: -7.225487232208252
    8. ' ' → logprob: -7.725487232208252
    9. 'min' → logprob: -7.850487232208252
    10. 'summ' → logprob: -7.850487232208252

Token 51: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.641818106174469
    2. ' +' → logprob: -1.3918180465698242
    3. '
' → logprob: -3.016818046569824
    4. '   ' → logprob: -3.766818046569824
    5. '-' → logprob: -3.766818046569824
    6. ' ' → logprob: -4.016818046569824
    7. '<|end|>' → logprob: -4.016818046569824
    8. '    
' → logprob: -4.266818046569824
    9. '*d' → logprob: -4.266818046569824
    10. ' -' → logprob: -4.266818046569824

Token 52: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015913767740130424
    2. '+' → logprob: -4.890913963317871
    3. ' if' → logprob: -5.890913963317871
    4. 'summ' → logprob: -6.640913963317871
    5. '<|end|>' → logprob: -7.015913963317871
    6. ' summ' → logprob: -7.265913963317871
    7. ' +' → logprob: -7.265913963317871
    8. '
' → logprob: -7.765913963317871
    9. '    
' → logprob: -8.515913963317871
    10. 'if' → logprob: -8.515913963317871

Token 53: ' summ' (ID: 16552)
  Prédit: 'summ'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'summ' (adapté à ' summ') → logprob: -0.6830698251724243
    2. '   ' → logprob: -0.8080698251724243
    3. ' summ' → logprob: -3.1830697059631348
    4. ' if' → logprob: -5.308069705963135
    5. 'if' → logprob: -6.308069705963135
    6. 'd' → logprob: -8.183070182800293
    7. ' ' → logprob: -9.058070182800293
    8. '+' → logprob: -9.183070182800293
    9. 's' → logprob: -9.183070182800293
    10. 'sum' → logprob: -9.308070182800293

Token 54: 'ation' (ID: 387)
  Prédit: 'ation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ation' → logprob: -1.771655115589965e-05
    2. 'at' → logprob: -11.375018119812012
    3. 'a' → logprob: -12.625018119812012
    4. ' at' → logprob: -13.875018119812012
    5. 'ations' → logprob: -14.250018119812012
    6. 'atio' → logprob: -14.250018119812012
    7. 'ati' → logprob: -15.250018119812012
    8. '   ' → logprob: -16.000017166137695
    9. '+' → logprob: -16.250017166137695
    10. 'ATION' → logprob: -16.500017166137695

Token 55: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.03814190253615379
    2. '+=' → logprob: -3.288141965866089
    3. '+' → logprob: -10.038142204284668
    4. ' +' → logprob: -10.288142204284668
    5. ' -=' → logprob: -11.913142204284668
    6. '<|end|>' → logprob: -11.913142204284668
    7. ' =' → logprob: -12.663142204284668
    8. '+=(' → logprob: -13.413142204284668
    9. '=' → logprob: -13.663142204284668
    10. '+='' → logprob: -14.038142204284668

Token 56: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.02020537108182907
    2. ' d' → logprob: -4.020205497741699
    3. 'c' → logprob: -6.270205497741699
    4. ' c' → logprob: -9.5202054977417
    5. '(d' → logprob: -10.3952054977417
    6. 'i' → logprob: -11.0202054977417
    7. ' ' → logprob: -12.2702054977417
    8. '   ' → logprob: -12.2702054977417
    9. '(c' → logprob: -12.5202054977417
    10. '1' → logprob: -12.6452054977417

Token 57: ' *' (ID: 425)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7504920959472656
    2. ' 
' → logprob: -1.5004920959472656
    3. '+' → logprob: -2.1254920959472656
    4. ' if' → logprob: -2.5004920959472656
    5. 'if' → logprob: -2.8754920959472656
    6. '
' → logprob: -3.6254920959472656
    7. '-' → logprob: -4.750492095947266
    8. '<|end|>' → logprob: -5.875492095947266
    9. '    ' → logprob: -6.500492095947266
    10. '    
' → logprob: -6.750492095947266

Token 58: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.34864792227745056
    2. ' c' → logprob: -1.223647952079773
    3. ' ' → logprob: -9.598648071289062
    4. 'i' → logprob: -10.223648071289062
    5. ' i' → logprob: -10.473648071289062
    6. ' (' → logprob: -11.348648071289062
    7. '(c' → logprob: -11.348648071289062
    8. 'd' → logprob: -11.348648071289062
    9. ' d' → logprob: -11.723648071289062
    10. '(' → logprob: -12.348648071289062

Token 59: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2506135404109955
    2. ' 
' → logprob: -1.8756135702133179
    3. ' ' → logprob: -4.125613689422607
    4. '+' → logprob: -4.250613689422607
    5. '\n' → logprob: -4.500613689422607
    6. '  
' → logprob: -5.000613689422607
    7. '<|end|>' → logprob: -5.000613689422607
    8. 'if' → logprob: -5.625613689422607
    9. ' if' → logprob: -5.875613689422607
    10. '    
' → logprob: -6.000613689422607

Token 60: 'print' (ID: 1598)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.614524245262146
    2. 'if' → logprob: -1.739524245262146
    3. '
' → logprob: -1.864524245262146
    4. ' if' → logprob: -2.4895243644714355
    5. '+' → logprob: -4.3645243644714355
    6. ' ' → logprob: -4.6145243644714355
    7. '    
' → logprob: -5.1145243644714355
    8. '\n' → logprob: -5.3645243644714355
    9. '   ' → logprob: -5.8645243644714355
    10. '  
' → logprob: -5.9895243644714355

Token 61: '(ans' (ID: 70054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.09960224479436874
    2. '(s' → logprob: -2.474602222442627
    3. '('' → logprob: -5.474602222442627
    4. '(ans' → logprob: -5.849602222442627
    5. '((' → logprob: -6.224602222442627
    6. '("' → logprob: -7.349602222442627
    7. '()' → logprob: -8.099602699279785
    8. '(abs' → logprob: -8.349602699279785
    9. '(sum' → logprob: -8.724602699279785
    10. ' (' → logprob: -9.474602699279785

Token 62: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0039618052542209625
    2. ' )' → logprob: -5.87896203994751
    3. ',' → logprob: -7.50396203994751
    4. '-' → logprob: -8.128961563110352
    5. ')
' → logprob: -8.878961563110352
    6. '+' → logprob: -9.628961563110352
    7. ' -' → logprob: -10.003961563110352
    8. ' ,' → logprob: -11.128961563110352
    9. '*' → logprob: -11.628961563110352
    10. ' +' → logprob: -12.003961563110352

Token 63: ' ' (ID: 220)
  Prédit: ' summ'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' summ' → logprob: -0.6237937211990356
    2. 'summ' → logprob: -0.8737937211990356
    3. ' (' → logprob: -3.373793601989746
    4. '(' → logprob: -5.248793601989746
    5. ' ' → logprob: -5.748793601989746
    6. '(s' → logprob: -5.873793601989746
    7. '1' → logprob: -7.498793601989746
    8. '2' → logprob: -9.248793601989746
    9. 'sum' → logprob: -9.248793601989746
    10. ' max' → logprob: -9.623793601989746

Token 64: '1' (ID: 16)
  Prédit: 'summ'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'summ' → logprob: -0.024614371359348297
    2. '(s' → logprob: -4.399614334106445
    3. ' summ' → logprob: -4.774614334106445
    4. '(' → logprob: -6.524614334106445
    5. ' (' → logprob: -7.024614334106445
    6. '1' → logprob: -7.899614334106445
    7. ' ' → logprob: -8.524614334106445
    8. 'sum' → logprob: -8.524614334106445
    9. 'abs' → logprob: -9.274614334106445
    10. '2' → logprob: -9.837114334106445

Token 65: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007136239437386394
    2. ' )' → logprob: -7.75071382522583
    3. '+' → logprob: -8.875713348388672
    4. '-' → logprob: -9.875713348388672
    5. ' -' → logprob: -10.250713348388672
    6. ' +' → logprob: -11.000713348388672
    7. ',' → logprob: -11.000713348388672
    8. '*' → logprob: -11.875713348388672
    9. ')
' → logprob: -12.500713348388672
    10. '))' → logprob: -12.625713348388672

Token 66: ' summ' (ID: 16552)
  Prédit: ' summ'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' summ' → logprob: -0.2667827308177948
    2. 'summ' → logprob: -2.016782760620117
    3. ' (' → logprob: -2.516782760620117
    4. '(' → logprob: -4.266782760620117
    5. ' max' → logprob: -6.141782760620117
    6. '(s' → logprob: -6.391782760620117
    7. ' ' → logprob: -7.391782760620117
    8. '(max' → logprob: -7.641782760620117
    9. 'max' → logprob: -8.266782760620117
    10. ')' → logprob: -8.516782760620117

Token 67: 'ation' (ID: 387)
  Prédit: 'ation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ation' → logprob: -1.4259644558478612e-05
    2. 'at' → logprob: -11.875014305114746
    3. 'atio' → logprob: -12.625014305114746
    4. 'a' → logprob: -13.125014305114746
    5. 'ations' → logprob: -13.750014305114746
    6. ' at' → logprob: -14.625014305114746
    7. 'ati' → logprob: -15.375014305114746
    8. 'ationen' → logprob: -16.62501335144043
    9. '-' → logprob: -17.12501335144043
    10. 'ATION' → logprob: -17.25001335144043

Token 68: ' //' (ID: 602)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2352385965641588e-05
    2. ' )' → logprob: -11.875012397766113
    3. '*' → logprob: -13.125012397766113
    4. ')
' → logprob: -13.750012397766113
    5. '#' → logprob: -14.750012397766113
    6. '`)' → logprob: -14.875012397766113
    7. '))' → logprob: -15.000012397766113
    8. '//' → logprob: -15.250012397766113
    9. '**' → logprob: -15.375012397766113
    10. '')' → logprob: -15.625012397766113

Token 69: ' ' (ID: 220)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.894376814365387
    2. '100' → logprob: -1.7693767547607422
    3. '2' → logprob: -1.8943767547607422
    4. 'ans' → logprob: -2.019376754760742
    5. '10' → logprob: -2.769376754760742
    6. ' ans' → logprob: -4.394376754760742
    7. ' n' → logprob: -4.644376754760742
    8. '20' → logprob: -4.769376754760742
    9. ' ' → logprob: -4.769376754760742
    10. '400' → logprob: -5.144376754760742

Token 70: '9' (ID: 24)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7691640853881836
    2. '100' → logprob: -1.5191640853881836
    3. '2' → logprob: -1.8941640853881836
    4. 'ans' → logprob: -2.0191640853881836
    5. '10' → logprob: -3.6441640853881836
    6. '20' → logprob: -6.894164085388184
    7. '9' → logprob: -7.019164085388184
    8. '1' → logprob: -7.019164085388184
    9. '3' → logprob: -7.269164085388184
    10. '200' → logprob: -7.769164085388184

Token 71: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -8.77627644513268e-06
    2. ' )' → logprob: -12.375008583068848
    3. ')
' → logprob: -13.375008583068848
    4. '))' → logprob: -13.625008583068848
    5. '*' → logprob: -14.750008583068848
    6. '`)' → logprob: -14.875008583068848
    7. '#' → logprob: -15.500008583068848
    8. '```' → logprob: -15.625008583068848
    9. ')`' → logprob: -16.125009536743164
    10. '）' → logprob: -16.250009536743164

Token 72: ' (' (ID: 350)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.41904619336128235
    2. '(' → logprob: -1.79404616355896
    3. ' (' → logprob: -2.54404616355896
    4. ' ' → logprob: -3.29404616355896
    5. '(s' → logprob: -3.29404616355896
    6. '(n' → logprob: -4.669046401977539
    7. '((' → logprob: -5.419046401977539
    8. 'summ' → logprob: -6.169046401977539
    9. '(min' → logprob: -6.544046401977539
    10. '(ans' → logprob: -6.919046401977539

Token 73: 'summ' (ID: 141249)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.32542210817337036
    2. 'summ' → logprob: -2.5754220485687256
    3. ' ' → logprob: -2.7004220485687256
    4. '(' → logprob: -2.9504220485687256
    5. '(s' → logprob: -3.7004220485687256
    6. '(ans' → logprob: -3.9504220485687256
    7. ' summ' → logprob: -4.325422286987305
    8. ' (' → logprob: -4.450422286987305
    9. ' ans' → logprob: -5.200422286987305
    10. 'ans' → logprob: -6.325422286987305

Token 74: 'ation' (ID: 387)
  Prédit: 'ation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ation' → logprob: -4.60414821645827e-06
    2. 'at' → logprob: -13.500004768371582
    3. 'a' → logprob: -14.125004768371582
    4. ' at' → logprob: -14.625004768371582
    5. 'er' → logprob: -14.875004768371582
    6. '   ' → logprob: -15.000004768371582
    7. '(' → logprob: -15.625004768371582
    8. 'atio' → logprob: -15.625004768371582
    9. 'ati' → logprob: -15.875004768371582
    10. 'ations' → logprob: -16.125003814697266

Token 75: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.4359665811061859
    2. '%' → logprob: -1.0609666109085083
    3. ' ' → logprob: -5.810966491699219
    4. ' //' → logprob: -6.810966491699219
    5. ')' → logprob: -6.935966491699219
    6. '==' → logprob: -7.060966491699219
    7. ' ==' → logprob: -7.310966491699219
    8. '//' → logprob: -8.435966491699219
    9. ' ' → logprob: -8.435966491699219
    10. '0' → logprob: -10.310966491699219

Token 76: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.02631121687591076
    2. ' ' → logprob: -3.651311159133911
    3. '1' → logprob: -11.526310920715332
    4. '  ' → logprob: -15.026310920715332
    5. '```' → logprob: -15.401310920715332
    6. '10' → logprob: -15.901310920715332
    7. '   ' → logprob: -16.02631187438965
    8. ' ' → logprob: -16.77631187438965
    9. ')' → logprob: -17.33881187438965
    10. '0' → logprob: -17.33881187438965

Token 77: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -4.513339445111342e-05
    2. ' ' → logprob: -10.125044822692871
    3. '10' → logprob: -12.750044822692871
    4. '1' → logprob: -13.500044822692871
    5. '```' → logprob: -15.937544822692871
    6. '0' → logprob: -16.812545776367188
    7. '90' → logprob: -16.937545776367188
    8. '९' → logprob: -17.125045776367188
    9. '۹' → logprob: -17.437545776367188
    10. '  ' → logprob: -17.625045776367188

Token 78: ' ==' (ID: 951)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.9376979470252991
    2. '>' → logprob: -1.3126978874206543
    3. ' !=' → logprob: -1.9376978874206543
    4. ')' → logprob: -2.0626978874206543
    5. ' >' → logprob: -3.5626978874206543
    6. '==' → logprob: -4.062697887420654
    7. ' ' → logprob: -4.562697887420654
    8. '0' → logprob: -5.437697887420654
    9. ' ==' → logprob: -5.562697887420654
    10. '1' → logprob: -6.312697887420654

Token 79: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.011054890230298042
    2. ' ' → logprob: -4.511054992675781
    3. '9' → logprob: -12.386054992675781
    4. '1' → logprob: -13.136054992675781
    5. '8' → logprob: -15.136054992675781
    6. '  ' → logprob: -15.761054992675781
    7. ')' → logprob: -16.01105499267578
    8. '6' → logprob: -16.38605499267578
    9. '7' → logprob: -16.38605499267578
    10. '2' → logprob: -16.63605499267578

Token 80: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.5107177862082608e-05
    2. ' ' → logprob: -10.625024795532227
    3. '8' → logprob: -15.625024795532227
    4. '1' → logprob: -15.750024795532227
    5. '9' → logprob: -15.875024795532227
    6. '۰' → logprob: -17.000024795532227
    7. '=' → logprob: -17.312524795532227
    8. '7' → logprob: -17.875024795532227
    9. '０' → logprob: -18.000024795532227
    10. '6' → logprob: -18.062524795532227

Token 81: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003258103388361633
    2. '))' → logprob: -8.250326156616211
    3. ' )' → logprob: -10.000326156616211
    4. '1' → logprob: -12.375326156616211
    5. ')))' → logprob: -12.500326156616211
    6. ')
' → logprob: -12.875326156616211
    7. '0' → logprob: -13.375326156616211
    8. '`)' → logprob: -13.875326156616211
    9. ')**' → logprob: -14.375326156616211
    10. ')`' → logprob: -14.375326156616211


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 79
Tokens correctement prédits (1ère position, stricte): 32
Tokens correctement prédits (1ère position, avec adaptation): 33
Tokens correctement prédits (top 10): 64
Précision stricte (1ère position): 40.51%
Précision adaptée (1ère position): 41.77%
Précision (top 10): 81.01%
================================================================================
