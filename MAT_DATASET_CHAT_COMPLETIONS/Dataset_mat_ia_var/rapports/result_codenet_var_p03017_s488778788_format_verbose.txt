================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:58:00
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def check_for_consecutive_rocks(segment_start_index, segment_end_index):
    for current_position in range(segment_start_index, segment_end_index):
        if path_with_boundaries[current_position] == '#' and path_with_boundaries[current_position + 1] == '#':
            return False
    return True

number_of_cells, starting_position_a, starting_position_b, destination_position_c, destination_position_d = map(int, input().split())

original_path = list(input())

# We add boundaries to simplify index checks at the borders
path_with_boundaries = ['#'] + original_path + ['#']

# Check if there are consecutive rocks blocking either path (blocking progress)
if not check_for_consecutive_rocks(starting_position_a, destination_position_c) or not check_for_consecutive_rocks(starting_position_b, destination_position_d):
    print('No')
    exit()

# If overtaking is needed (person B needs to overtake person A)
if destination_position_c > destination_position_d:
    overtaking_possible = False
    for position in range(starting_position_b, destination_position_d + 1):
        if path_with_boundaries[position - 1] == '.' and path_with_boundaries[position] == '.' and path_with_boundaries[position + 1] == '.':
            overtaking_possible = True
            break
    if not overtaking_possible:
        print('No')
        exit()

# If all checks pass, print 'Yes'
print('Yes')
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' check' (ID: 2371)
  → Token d'amorce (pas de prédiction)

Token 2: '_for' (ID: 11903)
  → Token d'amorce (pas de prédiction)

Token 3: '_con' (ID: 7531)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.031658779829740524
    2. '_update' → logprob: -4.78165864944458
    3. '_updates' → logprob: -4.90665864944458
    4. '_space' → logprob: -5.53165864944458
    5. '_duplicate' → logprob: -5.53165864944458
    6. '_duplicates' → logprob: -6.28165864944458
    7. '_dup' → logprob: -7.40665864944458
    8. '_errors' → logprob: -8.031659126281738
    9. '_collision' → logprob: -8.031659126281738
    10. '_keyword' → logprob: -8.156659126281738

Token 4: 'secutive' (ID: 165873)
  Prédit: 'nection'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nection' → logprob: -0.7596306204795837
    2. 't' → logprob: -1.5096306800842285
    3. 'f' → logprob: -2.1346306800842285
    4. '_' → logprob: -2.1346306800842285
    5. 'd' → logprob: -3.2596306800842285
    6. 's' → logprob: -5.2596306800842285
    7. 'nect' → logprob: -5.3846306800842285
    8. 'v' → logprob: -5.3846306800842285
    9. 'vergence' → logprob: -5.5096306800842285
    10. 'ction' → logprob: -5.6346306800842285

Token 5: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.008923588320612907
    2. '_s' → logprob: -4.758923530578613
    3. 's' → logprob: -8.508923530578613
    4. '_chars' → logprob: -10.383923530578613
    5. '(' → logprob: -10.883923530578613
    6. '_t' → logprob: -11.758923530578613
    7. ' _' → logprob: -12.133923530578613
    8. '_tokens' → logprob: -12.383923530578613
    9. '(_' → logprob: -12.633923530578613
    10. '```' → logprob: -12.633923530578613

Token 6: 'rocks' (ID: 174500)
  Prédit: 'duplicates'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'duplicates' → logprob: -0.21506661176681519
    2. 'unders' → logprob: -2.59006667137146
    3. 'ident' → logprob: -3.59006667137146
    4. 'numbers' → logprob: -3.96506667137146
    5. 'spaces' → logprob: -4.090066432952881
    6. 'ones' → logprob: -4.840066432952881
    7. 'duplicate' → logprob: -4.965066432952881
    8. 'characters' → logprob: -5.090066432952881
    9. 're' → logprob: -5.215066432952881
    10. 'uppercase' → logprob: -5.465066432952881

Token 7: '(segment' (ID: 144369)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.12354043871164322
    2. '():' → logprob: -2.3735404014587402
    3. '(:' → logprob: -3.9985404014587402
    4. '(_:' → logprob: -6.37354040145874
    5. '_' → logprob: -6.87354040145874
    6. ':' → logprob: -7.62354040145874
    7. '_:' → logprob: -7.74854040145874
    8. '(_' → logprob: -8.123540878295898
    9. '(":' → logprob: -8.373540878295898
    10. ' (' → logprob: -8.873540878295898

Token 8: '_start' (ID: 10949)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.000990176573395729
    2. ')' → logprob: -7.500990390777588
    3. '[' → logprob: -8.25098991394043
    4. ':' → logprob: -9.50098991394043
    5. ',' → logprob: -9.62598991394043
    6. '):
' → logprob: -11.25098991394043
    7. 's' → logprob: -12.12598991394043
    8. ' ):' → logprob: -12.50098991394043
    9. '_' → logprob: -13.62598991394043
    10. '[]):' → logprob: -13.62598991394043

Token 9: '_index' (ID: 7748)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2770984172821045
    2. ',' → logprob: -1.5270984172821045
    3. ')' → logprob: -3.9020984172821045
    4. ':' → logprob: -5.777098655700684
    5. '_' → logprob: -7.652098655700684
    6. '):
' → logprob: -8.402098655700684
    7. '```' → logprob: -8.402098655700684
    8. '[' → logprob: -8.652098655700684
    9. '=' → logprob: -9.027098655700684
    10. ' ):' → logprob: -10.402098655700684

Token 10: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.43160301446914673
    2. ',' → logprob: -1.056602954864502
    3. ')' → logprob: -6.306602954864502
    4. ':' → logprob: -7.056602954864502
    5. '):
' → logprob: -9.43160343170166
    6. '```' → logprob: -10.68160343170166
    7. ' ):' → logprob: -11.55660343170166
    8. ' ,' → logprob: -11.55660343170166
    9. '=' → logprob: -11.68160343170166
    10. ' ' → logprob: -11.80660343170166

Token 11: ' segment' (ID: 14806)
  Prédit: ' segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' segment' → logprob: -0.2532752752304077
    2. 'segment' → logprob: -1.5032752752304077
    3. ' rocks' → logprob: -8.253274917602539
    4. ' rock' → logprob: -8.503274917602539
    5. '```' → logprob: -8.878274917602539
    6. 'rock' → logprob: -9.128274917602539
    7. 'segments' → logprob: -9.378274917602539
    8. ' sequence' → logprob: -9.378274917602539
    9. ' consecutive' → logprob: -9.503274917602539
    10. 'rocks' → logprob: -9.628274917602539

Token 12: '_end' (ID: 13707)
  Prédit: '_length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.07729166001081467
    2. '):' → logprob: -2.70229172706604
    3. '_end' → logprob: -6.077291488647461
    4. '_' → logprob: -6.577291488647461
    5. '_lengths' → logprob: -7.077291488647461
    6. '_len' → logprob: -7.327291488647461
    7. '_size' → logprob: -7.827291488647461
    8. 'length' → logprob: -7.827291488647461
    9. ')' → logprob: -8.202291488647461
    10. ')_' → logprob: -8.327291488647461

Token 13: '_index' (ID: 7748)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4042642414569855
    2. '_index' → logprob: -1.779264211654663
    3. '):' → logprob: -1.904264211654663
    4. ')_' → logprob: -5.029264450073242
    5. '```' → logprob: -5.529264450073242
    6. 'ing' → logprob: -6.529264450073242
    7. ')' → logprob: -6.904264450073242
    8. '_idx' → logprob: -7.654264450073242
    9. ' _' → logprob: -8.654264450073242
    10. '_token' → logprob: -9.029264450073242

Token 14: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0029075853526592255
    2. ':' → logprob: -6.252907752990723
    3. ')' → logprob: -7.002907752990723
    4. ',' → logprob: -10.877907752990723
    5. ''):' → logprob: -11.627907752990723
    6. '):
' → logprob: -11.752907752990723
    7. '```' → logprob: -12.002907752990723
    8. '**' → logprob: -12.377907752990723
    9. ':)' → logprob: -12.752907752990723
    10. ' ):' → logprob: -12.877907752990723

Token 15: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006584516726434231
    2. '   ' → logprob: -5.256584644317627
    3. ':
' → logprob: -7.131584644317627
    4. '```' → logprob: -7.756584644317627
    5. '\' → logprob: -10.506584167480469
    6. '\n' → logprob: -10.631584167480469
    7. ':\' → logprob: -10.756584167480469
    8. '    
' → logprob: -11.756584167480469
    9. '():' → logprob: -11.881584167480469
    10. '    ' → logprob: -12.006584167480469

Token 16: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6485874652862549
    2. ':' → logprob: -0.8985874652862549
    3. '```' → logprob: -3.273587465286255
    4. '\n' → logprob: -5.398587226867676
    5. ':
' → logprob: -5.398587226867676
    6. '    
' → logprob: -5.648587226867676
    7. '_' → logprob: -5.773587226867676
    8. '
' → logprob: -5.898587226867676
    9. '\' → logprob: -6.148587226867676
    10. '    ' → logprob: -6.273587226867676

Token 17: ' current' (ID: 2208)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3914302587509155
    2. ' i' → logprob: -1.1414302587509155
    3. '_' → logprob: -6.016430377960205
    4. 'i' → logprob: -6.766430377960205
    5. ' index' → logprob: -8.016429901123047
    6. ' rock' → logprob: -8.516429901123047
    7. ' _' → logprob: -9.141429901123047
    8. ' segment' → logprob: -9.266429901123047
    9. ' in' → logprob: -10.141429901123047
    10. '  ' → logprob: -10.391429901123047

Token 18: '_position' (ID: 23739)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.038099437952041626
    2. ' ' → logprob: -3.538099527359009
    3. ' in' → logprob: -5.41309928894043
    4. ' _' → logprob: -6.28809928894043
    5. '_space' → logprob: -6.53809928894043
    6. '_token' → logprob: -8.28809928894043
    7. ' i' → logprob: -9.53809928894043
    8. '  ' → logprob: -9.66309928894043
    9. 'space' → logprob: -10.53809928894043
    10. '_index' → logprob: -10.78809928894043

Token 19: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.011172904632985592
    2. 'in' → logprob: -4.511172771453857
    3. ' ' → logprob: -9.886173248291016
    4. '_in' → logprob: -11.386173248291016
    5. '```' → logprob: -11.386173248291016
    6. '_' → logprob: -11.511173248291016
    7. ',' → logprob: -11.761173248291016
    8. '   ' → logprob: -11.761173248291016
    9. 'In' → logprob: -12.261173248291016
    10. '  ' → logprob: -12.511173248291016

Token 20: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.07889430224895477
    2. 'range' → logprob: -2.5788943767547607
    3. '(range' → logprob: -12.82889461517334
    4. '	range' → logprob: -14.45389461517334
    5. '```' → logprob: -14.70389461517334
    6. ' ' → logprob: -15.07889461517334
    7. '   ' → logprob: -16.078893661499023
    8. ' segment' → logprob: -16.453893661499023
    9. '_range' → logprob: -16.453893661499023
    10. 'Range' → logprob: -16.578893661499023

Token 21: '(segment' (ID: 144369)
  Prédit: '(segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(segment' → logprob: -0.018251903355121613
    2. '(' → logprob: -4.018251895904541
    3. ' (' → logprob: -9.2682523727417
    4. '(seg' → logprob: -12.5182523727417
    5. '(
' → logprob: -13.0182523727417
    6. 'segment' → logprob: -14.7682523727417
    7. '   ' → logprob: -15.2682523727417
    8. '(s' → logprob: -16.018251419067383
    9. '(fragment' → logprob: -16.268251419067383
    10. '(range' → logprob: -16.268251419067383

Token 22: '_start' (ID: 10949)
  Prédit: '_start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -0.00010199354437645525
    2. '_end' → logprob: -9.250102043151855
    3. '_' → logprob: -12.750102043151855
    4. '_START' → logprob: -14.375102043151855
    5. 'Start' → logprob: -14.500102043151855
    6. 'start' → logprob: -14.625102043151855
    7. ' _' → logprob: -14.875102043151855
    8. ')_' → logprob: -15.250102043151855
    9. '_current' → logprob: -15.750102043151855
    10. '```' → logprob: -16.00010108947754

Token 23: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.00012082771718269214
    2. '_position' → logprob: -9.250121116638184
    3. '_' → logprob: -11.625121116638184
    4. '+' → logprob: -11.625121116638184
    5. '_start' → logprob: -12.500121116638184
    6. '_pos' → logprob: -14.500121116638184
    7. '```' → logprob: -14.750121116638184
    8. '_idx' → logprob: -14.875121116638184
    9. ',_' → logprob: -15.250121116638184
    10. '__' → logprob: -15.500121116638184

Token 24: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015686646802350879
    2. ' ,' → logprob: -6.501568794250488
    3. '+' → logprob: -10.126568794250488
    4. '   ' → logprob: -11.001568794250488
    5. ' +' → logprob: -12.001568794250488
    6. '+,' → logprob: -14.126568794250488
    7. '```' → logprob: -14.376568794250488
    8. ',
' → logprob: -14.501568794250488
    9. ' ' → logprob: -14.751568794250488
    10. '    ' → logprob: -15.501568794250488

Token 25: ' segment' (ID: 14806)
  Prédit: ' segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' segment' → logprob: -0.16025875508785248
    2. 'segment' → logprob: -1.9102587699890137
    3. '(segment' → logprob: -11.035258293151855
    4. '   ' → logprob: -12.160258293151855
    5. '.segment' → logprob: -12.535258293151855
    6. ' ' → logprob: -13.160258293151855
    7. '_segment' → logprob: -13.285258293151855
    8. ' segmento' → logprob: -13.660258293151855
    9. '    ' → logprob: -13.910258293151855
    10. 'egment' → logprob: -13.910258293151855

Token 26: '_end' (ID: 13707)
  Prédit: '_end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_end' → logprob: -0.0052392068319022655
    2. '_start' → logprob: -5.255239009857178
    3. '_' → logprob: -12.880239486694336
    4. '+' → logprob: -13.380239486694336
    5. 'end' → logprob: -14.505239486694336
    6. '_END' → logprob: -15.130239486694336
    7. 'End' → logprob: -15.880239486694336
    8. '   ' → logprob: -16.505239486694336
    9. ' _' → logprob: -17.005239486694336
    10. ')' → logprob: -17.505239486694336

Token 27: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -6.2729995988775045e-06
    2. '_' → logprob: -12.625006675720215
    3. '_position' → logprob: -14.125006675720215
    4. '_idx' → logprob: -14.250006675720215
    5. '_point' → logprob: -15.125006675720215
    6. 'Index' → logprob: -15.250006675720215
    7. 'index' → logprob: -15.500006675720215
    8. '+' → logprob: -15.625006675720215
    9. '_pos' → logprob: -15.625006675720215
    10. '```' → logprob: -15.750006675720215

Token 28: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.10853566229343414
    2. '+' → logprob: -2.7335357666015625
    3. ' +' → logprob: -3.4835357666015625
    4. ' ):' → logprob: -5.6085357666015625
    5. '):
' → logprob: -6.1085357666015625
    6. '   ' → logprob: -6.9835357666015625
    7. ',' → logprob: -8.983535766601562
    8. ')' → logprob: -9.233535766601562
    9. '    ' → logprob: -10.483535766601562
    10. ':' → logprob: -11.108535766601562

Token 29: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5167177319526672
    2. '       ' → logprob: -1.2667176723480225
    3. '    ' → logprob: -3.1417176723480225
    4. '   ' → logprob: -3.5167176723480225
    5. '_' → logprob: -4.016717910766602
    6. ' :' → logprob: -4.266717910766602
    7. ' ' → logprob: -6.141717910766602
    8. '```' → logprob: -6.141717910766602
    9. ':
' → logprob: -6.266717910766602
    10. ',' → logprob: -6.391717910766602

Token 30: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4762141704559326
    2. '       ' → logprob: -1.2262141704559326
    3. 'if' (adapté à ' if') → logprob: -3.1012141704559326
    4. '   ' → logprob: -3.4762141704559326
    5. '    ' → logprob: -5.101214408874512
    6. ' current' → logprob: -6.851214408874512
    7. 'current' → logprob: -7.601214408874512
    8. '```' → logprob: -7.601214408874512
    9. '           ' → logprob: -7.726214408874512
    10. '        ' → logprob: -9.101214408874512

Token 31: ' path' (ID: 3104)
  Prédit: ' segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' segment' → logprob: -0.37525850534439087
    2. ' current' → logprob: -2.375258445739746
    3. ' rocks' → logprob: -2.625258445739746
    4. 'segment' → logprob: -2.875258445739746
    5. ' rock' → logprob: -3.500258445739746
    6. ' terrain' → logprob: -4.500258445739746
    7. ' ' → logprob: -4.750258445739746
    8. 'current' → logprob: -5.125258445739746
    9. 'rock' → logprob: -5.500258445739746
    10. ' grid' → logprob: -5.500258445739746

Token 32: '_with' (ID: 14161)
  Prédit: '[current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[current' → logprob: -1.4974866644479334e-05
    2. '[' → logprob: -11.625015258789062
    3. '   ' → logprob: -13.250015258789062
    4. ' [' → logprob: -14.000015258789062
    5. '_' → logprob: -14.500015258789062
    6. '```' → logprob: -14.500015258789062
    7. '_current' → logprob: -14.625015258789062
    8. 'current' → logprob: -14.625015258789062
    9. '_[' → logprob: -15.000015258789062
    10. '[cur' → logprob: -15.375015258789062

Token 33: '_bound' (ID: 47558)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.028109941631555557
    2. '[current' → logprob: -4.528110027313232
    3. 'in' → logprob: -4.778110027313232
    4. 'out' → logprob: -5.403110027313232
    5. '_con' → logprob: -6.653110027313232
    6. 'rocks' → logprob: -8.153109550476074
    7. '_segments' → logprob: -8.153109550476074
    8. ' rocks' → logprob: -8.403109550476074
    9. '_ro' → logprob: -8.528109550476074
    10. ' Rocks' → logprob: -8.778109550476074

Token 34: 'aries' (ID: 8526)
  Prédit: 'aries'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aries' → logprob: -0.12145084142684937
    2. 'ary' → logprob: -2.371450901031494
    3. 's' → logprob: -4.621450901031494
    4. '[' → logprob: -4.746450901031494
    5. '[s' → logprob: -6.871450901031494
    6. '[current' → logprob: -6.996450901031494
    7. '[start' → logprob: -9.121450424194336
    8. 'arys' → logprob: -9.496450424194336
    9. '[_' → logprob: -9.746450424194336
    10. '```' → logprob: -9.871450424194336

Token 35: '[current' (ID: 49470)
  Prédit: '[current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[current' → logprob: -0.0020383221562951803
    2. '[' → logprob: -6.252038478851318
    3. ' [' → logprob: -9.75203800201416
    4. '   ' → logprob: -10.75203800201416
    5. '```' → logprob: -11.50203800201416
    6. 'current' → logprob: -12.75203800201416
    7. '[
' → logprob: -13.12703800201416
    8. ' ' → logprob: -13.25203800201416
    9. '[cur' → logprob: -13.37703800201416
    10. '\[' → logprob: -13.50203800201416

Token 36: '_position' (ID: 23739)
  Prédit: '_position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_position' → logprob: -5.598092684522271e-05
    2. 'position' → logprob: -10.375056266784668
    3. '[position' → logprob: -11.625056266784668
    4. '_positions' → logprob: -12.375056266784668
    5. '```' → logprob: -12.875056266784668
    6. '   ' → logprob: -13.000056266784668
    7. '[current' → logprob: -13.125056266784668
    8. 'Position' → logprob: -14.125056266784668
    9. ' _' → logprob: -14.625056266784668
    10. '_path' → logprob: -14.875056266784668

Token 37: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2686164677143097
    2. ' ]' → logprob: -2.0186164379119873
    3. ']==' → logprob: -3.6436164379119873
    4. ' ' → logprob: -3.6436164379119873
    5. ' ==' → logprob: -3.7686164379119873
    6. '    ' → logprob: -4.393616676330566
    7. ' +' → logprob: -5.393616676330566
    8. '+' → logprob: -5.893616676330566
    9. ':' → logprob: -6.143616676330566
    10. '==' → logprob: -6.143616676330566

Token 38: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.2896523177623749
    2. '==' → logprob: -1.4146523475646973
    3. '    ' → logprob: -5.539652347564697
    4. ' ' → logprob: -6.789652347564697
    5. ' and' → logprob: -6.789652347564697
    6. '[' → logprob: -7.539652347564697
    7. '+' → logprob: -7.664652347564697
    8. '   ' → logprob: -7.914652347564697
    9. ' in' → logprob: -8.914651870727539
    10. 'and' → logprob: -9.039651870727539

Token 39: ' '#'' (ID: 139870)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.34727686643600464
    2. ' '' → logprob: -1.8472769260406494
    3. '"' → logprob: -2.9722769260406494
    4. ' ' → logprob: -3.0972769260406494
    5. ' '#'' → logprob: -4.47227668762207
    6. ' "' → logprob: -5.22227668762207
    7. ''#' → logprob: -5.34727668762207
    8. ''r' → logprob: -5.47227668762207
    9. ' "#"' → logprob: -6.59727668762207
    10. ''*' → logprob: -7.09727668762207

Token 40: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.030004214495420456
    2. 'and' → logprob: -3.5300042629241943
    3. '           ' → logprob: -9.780004501342773
    4. ' ' → logprob: -9.905004501342773
    5. '    ' → logprob: -10.155004501342773
    6. '        ' → logprob: -10.155004501342773
    7. '            ' → logprob: -10.405004501342773
    8. '       ' → logprob: -11.405004501342773
    9. ':' → logprob: -11.405004501342773
    10. '   ' → logprob: -12.030004501342773

Token 41: ' path' (ID: 3104)
  Prédit: ' path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' path' → logprob: -0.0006544163916260004
    2. 'path' → logprob: -7.375654220581055
    3. '    ' → logprob: -11.375654220581055
    4. ' ' → logprob: -11.750654220581055
    5. '   ' → logprob: -12.625654220581055
    6. '	path' → logprob: -13.125654220581055
    7. ' ' → logprob: -13.250654220581055
    8. '       ' → logprob: -14.625654220581055
    9. '(path' → logprob: -16.250654220581055
    10. '```' → logprob: -16.375654220581055

Token 42: '_with' (ID: 14161)
  Prédit: '_with'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_with' → logprob: -3.976922744186595e-05
    2. 'with' → logprob: -10.250040054321289
    3. '[current' → logprob: -13.500040054321289
    4. '_' → logprob: -14.000040054321289
    5. '_current' → logprob: -14.625040054321289
    6. 'With' → logprob: -14.750040054321289
    7. '_WITH' → logprob: -14.875040054321289
    8. 'current' → logprob: -15.625040054321289
    9. ' with' → logprob: -16.00004005432129
    10. '```' → logprob: -16.25004005432129

Token 43: '_bound' (ID: 47558)
  Prédit: '_bound'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bound' → logprob: -0.0039139497093856335
    2. 'bound' → logprob: -5.753913879394531
    3. '_' → logprob: -7.628913879394531
    4. 'path' → logprob: -9.003913879394531
    5. '_path' → logprob: -9.878913879394531
    6. '_boundary' → logprob: -10.878913879394531
    7. ' path' → logprob: -11.378913879394531
    8. '_bounds' → logprob: -12.128913879394531
    9. ' ' → logprob: -12.253913879394531
    10. '-bound' → logprob: -12.378913879394531

Token 44: 'aries' (ID: 8526)
  Prédit: 'aries'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aries' → logprob: -1.5048530030981055e-06
    2. 'ary' → logprob: -14.250001907348633
    3. 'eries' → logprob: -14.875001907348633
    4. 'ar' → logprob: -15.125001907348633
    5. 'a' → logprob: -16.750001907348633
    6. 'ries' → logprob: -17.125001907348633
    7. '_bound' → logprob: -17.625001907348633
    8. 'ari' → logprob: -17.625001907348633
    9. 'anies' → logprob: -17.750001907348633
    10. 'arie' → logprob: -17.750001907348633

Token 45: '[current' (ID: 49470)
  Prédit: '[current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[current' → logprob: -2.8444881536415778e-05
    2. '[' → logprob: -11.000028610229492
    3. ' [' → logprob: -12.000028610229492
    4. 'current' → logprob: -13.125028610229492
    5. '```' → logprob: -13.750028610229492
    6. '   ' → logprob: -13.875028610229492
    7. '[position' → logprob: -14.500028610229492
    8. '[next' → logprob: -14.500028610229492
    9. '[
' → logprob: -15.625028610229492
    10. ' ' → logprob: -16.250028610229492

Token 46: '_position' (ID: 23739)
  Prédit: '_position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_position' → logprob: -0.0005066845333203673
    2. 'position' → logprob: -7.62550687789917
    3. '+' → logprob: -11.500506401062012
    4. 'Position' → logprob: -12.750506401062012
    5. '   ' → logprob: -13.875506401062012
    6. '-' → logprob: -14.000506401062012
    7. '_' → logprob: -14.125506401062012
    8. 'osition' → logprob: -14.250506401062012
    9. '_index' → logprob: -14.625506401062012
    10. '_token' → logprob: -15.000506401062012

Token 47: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4744277894496918
    2. ' +' → logprob: -0.9744278192520142
    3. '   ' → logprob: -8.099428176879883
    4. ' ' → logprob: -10.599428176879883
    5. ']' → logprob: -11.974428176879883
    6. '  ' → logprob: -12.224428176879883
    7. '    ' → logprob: -12.849428176879883
    8. '-' → logprob: -13.599428176879883
    9. '	' → logprob: -13.974428176879883
    10. '       ' → logprob: -14.099428176879883

Token 48: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07895632833242416
    2. ' ' → logprob: -2.578956365585327
    3. ''' → logprob: -11.078956604003906
    4. ' '' → logprob: -11.703956604003906
    5. '```' → logprob: -11.828956604003906
    6. '#' → logprob: -11.953956604003906
    7. ''#' → logprob: -12.328956604003906
    8. '  ' → logprob: -12.328956604003906
    9. ' '#'' → logprob: -12.453956604003906
    10. '   ' → logprob: -12.703956604003906

Token 49: '1' (ID: 16)
  Prédit: ''#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''#' → logprob: -0.006027626805007458
    2. '1' → logprob: -5.131027698516846
    3. ''' → logprob: -10.506027221679688
    4. '']' → logprob: -10.631027221679688
    5. '"#' → logprob: -11.131027221679688
    6. ' '#'' → logprob: -11.881027221679688
    7. '('#' → logprob: -12.006027221679688
    8. ' '#' → logprob: -12.381027221679688
    9. '#' → logprob: -12.506027221679688
    10. ''>' → logprob: -12.881027221679688

Token 50: ']' (ID: 60)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.15902897715568542
    2. ']' → logprob: -2.034029006958008
    3. '==' → logprob: -5.159029006958008
    4. ']==' → logprob: -5.284029006958008
    5. '']' → logprob: -5.409029006958008
    6. ' ]' → logprob: -7.409029006958008
    7. ']=='' → logprob: -9.534029006958008
    8. '']==' → logprob: -10.034029006958008
    9. ' ' → logprob: -10.284029006958008
    10. '']=='' → logprob: -10.284029006958008

Token 51: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.011199544183909893
    2. '==' → logprob: -4.511199474334717
    3. ' =='' → logprob: -9.761199951171875
    4. '=='' → logprob: -9.886199951171875
    5. ' ' → logprob: -10.761199951171875
    6. '<|end|>' → logprob: -12.011199951171875
    7. '=' → logprob: -12.761199951171875
    8. ' =' → logprob: -13.261199951171875
    9. '  ' → logprob: -13.511199951171875
    10. ']==' → logprob: -13.636199951171875

Token 52: ' '#' (ID: 11284)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.16831840574741364
    2. ''#' → logprob: -1.9183183908462524
    3. ' '#'' → logprob: -5.043318271636963
    4. ' '' → logprob: -6.543318271636963
    5. '#' → logprob: -9.918318748474121
    6. '"' → logprob: -10.418318748474121
    7. ' ' → logprob: -10.668318748474121
    8. ' '#' → logprob: -11.043318748474121
    9. '`' → logprob: -12.043318748474121
    10. '','#' → logprob: -12.293318748474121

Token 53: '':
' (ID: 7669)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006883976515382528
    2. '):' → logprob: -5.0068840980529785
    3. '':' → logprob: -9.50688362121582
    4. ' :' → logprob: -9.63188362121582
    5. ' ):' → logprob: -12.00688362121582
    6. ')' → logprob: -12.25688362121582
    7. ':return' → logprob: -12.38188362121582
    8. '#:' → logprob: -12.50688362121582
    9. ':
' → logprob: -13.00688362121582
    10. '       ' → logprob: -13.63188362121582

Token 54: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11918189376592636
    2. ':' → logprob: -2.2441818714141846
    3. ':return' → logprob: -5.994182109832764
    4. ' return' → logprob: -6.244182109832764
    5. ':
' → logprob: -7.619182109832764
    6. ' :' → logprob: -7.619182109832764
    7. '       ' → logprob: -7.994182109832764
    8. '               ' → logprob: -8.494181632995605
    9. 'return' → logprob: -8.994181632995605
    10. '<|end|>' → logprob: -9.244181632995605

Token 55: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.7680516242980957
    2. 'return' (adapté à ' return') → logprob: -0.8930516242980957
    3. '               ' → logprob: -2.6430516242980957
    4. '           ' → logprob: -2.8930516242980957
    5. '       ' → logprob: -10.018051147460938
    6. '   ' → logprob: -10.518051147460938
    7. '```' → logprob: -10.768051147460938
    8. ' ' → logprob: -11.643051147460938
    9. ':return' → logprob: -11.893051147460938
    10. ' ' → logprob: -12.643051147460938

Token 56: ' False' (ID: 7983)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.29413366317749023
    2. ' True' → logprob: -1.4191336631774902
    3. 'False' → logprob: -4.54413366317749
    4. ' False' → logprob: -6.79413366317749
    5. 'current' → logprob: -7.04413366317749
    6. ' current' → logprob: -8.294134140014648
    7. ' ' → logprob: -11.794134140014648
    8. '"' → logprob: -12.919134140014648
    9. 'segment' → logprob: -12.919134140014648
    10. 'path' → logprob: -13.044134140014648

Token 57: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7624111175537109
    2. '
' → logprob: -1.137411117553711
    3. '\n' → logprob: -2.137411117553711
    4. '<|end|>' → logprob: -3.262411117553711
    5. '    
' → logprob: -3.762411117553711
    6. '  
' → logprob: -4.512411117553711
    7. ' 
' → logprob: -5.137411117553711
    8. 'newline' → logprob: -5.387411117553711
    9. '\' → logprob: -5.762411117553711
    10. '   
' → logprob: -6.012411117553711

Token 58: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10311626642942429
    2. '
' → logprob: -2.978116273880005
    3. '    
' → logprob: -4.228116035461426
    4. '\n' → logprob: -4.603116035461426
    5. '<|end|>' → logprob: -4.728116035461426
    6. '  
' → logprob: -5.728116035461426
    7. ' 
' → logprob: -5.853116035461426
    8. '   
' → logprob: -6.853116035461426
    9. 'newline' → logprob: -6.853116035461426
    10. '\' → logprob: -6.978116035461426

Token 59: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10221867263317108
    2. 'return' (adapté à ' return') → logprob: -3.1022186279296875
    3. ' return' → logprob: -4.2272186279296875
    4. '
' → logprob: -4.7272186279296875
    5. '    
' → logprob: -4.7272186279296875
    6. '<|end|>' → logprob: -5.3522186279296875
    7. '  
' → logprob: -5.6022186279296875
    8. ' 
' → logprob: -5.7272186279296875
    9. '\n' → logprob: -5.7272186279296875
    10. ' ' → logprob: -6.2272186279296875

Token 60: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.01814994215965271
    2. 'True' → logprob: -4.0181498527526855
    3. ' ' → logprob: -19.018150329589844
    4. '(True' → logprob: -19.018150329589844
    5. '   ' → logprob: -20.143150329589844
    6. '=True' → logprob: -20.893150329589844
    7. ' ' → logprob: -21.518150329589844
    8. ' Tru' → logprob: -22.268150329589844
    9. ' true' → logprob: -23.393150329589844
    10. ' None' → logprob: -24.393150329589844

Token 61: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 62: 'number' (ID: 8096)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 63: '_of' (ID: 8023)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.10236717760562897
    2. 's' → logprob: -2.6023671627044678
    3. ' _' → logprob: -5.227367401123047
    4. '_s' → logprob: -5.477367401123047
    5. ' ' → logprob: -5.727367401123047
    6. '_space' → logprob: -6.352367401123047
    7. '_of' → logprob: -6.602367401123047
    8. '_spaces' → logprob: -7.102367401123047
    9. ' =' → logprob: -7.227367401123047
    10. ')' → logprob: -7.477367401123047

Token 64: '_cells' (ID: 93468)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7447003722190857
    2. '_segments' → logprob: -1.3697004318237305
    3. '_players' → logprob: -3.3697004318237305
    4. '_spaces' → logprob: -3.6197004318237305
    5. '_steps' → logprob: -3.9947004318237305
    6. '_paths' → logprob: -3.9947004318237305
    7. '_ob' → logprob: -4.2447004318237305
    8. '_ro' → logprob: -4.2447004318237305
    9. '_t' → logprob: -4.4947004318237305
    10. '_blocks' → logprob: -4.7447004318237305

Token 65: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0016112701268866658
    2. '=' → logprob: -6.751611232757568
    3. '_' → logprob: -8.501611709594727
    4. '<|end|>' → logprob: -9.626611709594727
    5. ' ' → logprob: -9.876611709594727
    6. '_space' → logprob: -10.001611709594727
    7. '_spaces' → logprob: -11.501611709594727
    8. ')' → logprob: -11.626611709594727
    9. ' +=' → logprob: -11.751611709594727
    10. '  ' → logprob: -12.001611709594727

Token 66: ' starting' (ID: 8601)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.7203567028045654
    2. ' number' → logprob: -1.7203567028045654
    3. ' path' → logprob: -1.8453567028045654
    4. 'number' → logprob: -1.9703567028045654
    5. 'segments' → logprob: -5.2203569412231445
    6. 'paths' → logprob: -5.3453569412231445
    7. ' initial' → logprob: -5.8453569412231445
    8. ' paths' → logprob: -5.8453569412231445
    9. 'initial' → logprob: -6.5953569412231445
    10. ' rocks' → logprob: -6.5953569412231445

Token 67: '_position' (ID: 23739)
  Prédit: '_position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_position' → logprob: -0.05875498428940773
    2. '_' → logprob: -3.5587549209594727
    3. '_point' → logprob: -3.8087549209594727
    4. '_direction' → logprob: -5.933754920959473
    5. '_index' → logprob: -6.558754920959473
    6. '_positions' → logprob: -7.308754920959473
    7. '_pos' → logprob: -7.683754920959473
    8. '_location' → logprob: -7.808754920959473
    9. '_energy' → logprob: -8.808754920959473
    10. '_cell' → logprob: -9.558754920959473

Token 68: '_a' (ID: 10852)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.001257376279681921
    2. '=' → logprob: -6.751257419586182
    3. ',' → logprob: -9.501256942749023
    4. ' ,' → logprob: -11.501256942749023
    5. ' ' → logprob: -13.751256942749023
    6. ' =)' → logprob: -14.876256942749023
    7. '_' → logprob: -15.751256942749023
    8. ')' → logprob: -15.876256942749023
    9. '<|end|>' → logprob: -16.001256942749023
    10. ' =
' → logprob: -16.126256942749023

Token 69: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.46630236506462097
    2. '=' → logprob: -1.0913023948669434
    3. ',' → logprob: -3.3413023948669434
    4. ' ' → logprob: -7.341302394866943
    5. 's' → logprob: -8.091301918029785
    6. '_' → logprob: -8.841301918029785
    7. ' ,' → logprob: -8.966301918029785
    8. 'nd' → logprob: -9.591301918029785
    9. 'r' → logprob: -10.466301918029785
    10. 'd' → logprob: -10.466301918029785

Token 70: ' starting' (ID: 8601)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' → logprob: -1.3727179765701294
    2. ' path' → logprob: -1.4977179765701294
    3. ' ending' → logprob: -1.8727179765701294
    4. 'ending' → logprob: -2.24771785736084
    5. ' starting' → logprob: -3.49771785736084
    6. 'starting' → logprob: -3.49771785736084
    7. 'number' → logprob: -3.62271785736084
    8. 'target' → logprob: -3.87271785736084
    9. ' number' → logprob: -3.87271785736084
    10. ' target' → logprob: -4.37271785736084

Token 71: '_position' (ID: 23739)
  Prédit: '_position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_position' → logprob: -0.013339275494217873
    2. '_' → logprob: -4.513339042663574
    3. '_positions' → logprob: -6.138339042663574
    4. '_point' → logprob: -10.638339042663574
    5. 'position' → logprob: -11.138339042663574
    6. '_cell' → logprob: -11.263339042663574
    7. '_location' → logprob: -11.513339042663574
    8. '<|end|>' → logprob: -11.513339042663574
    9. '_pos' → logprob: -11.763339042663574
    10. '_number' → logprob: -11.763339042663574

Token 72: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.004003841895610094
    2. '_' → logprob: -6.254004001617432
    3. '_s' → logprob: -7.129004001617432
    4. '_a' → logprob: -7.129004001617432
    5. '_c' → logprob: -8.379003524780273
    6. '_d' → logprob: -10.004003524780273
    7. '_f' → logprob: -10.129003524780273
    8. 'b' → logprob: -10.629003524780273
    9. '_g' → logprob: -10.629003524780273
    10. '_p' → logprob: -11.129003524780273

Token 73: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.008131181821227074
    2. '=' → logprob: -5.13313102722168
    3. ',' → logprob: -6.13313102722168
    4. ' ,' → logprob: -10.63313102722168
    5. '<|end|>' → logprob: -13.00813102722168
    6. ' ' → logprob: -13.38313102722168
    7. ' =
' → logprob: -14.88313102722168
    8. ')' → logprob: -15.00813102722168
    9. '_' → logprob: -15.13313102722168
    10. '<|end|>' → logprob: -15.75813102722168

Token 74: ' destination' (ID: 13330)
  Prédit: ' path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' path' → logprob: -0.6250634789466858
    2. 'path' → logprob: -1.250063419342041
    3. ' number' → logprob: -3.500063419342041
    4. ' starting' → logprob: -4.125063419342041
    5. 'number' → logprob: -4.125063419342041
    6. 'segments' → logprob: -4.500063419342041
    7. 'segment' → logprob: -4.625063419342041
    8. 'starting' → logprob: -4.750063419342041
    9. ' segments' → logprob: -4.875063419342041
    10. ' segment' → logprob: -5.000063419342041

Token 75: '_position' (ID: 23739)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.41367337107658386
    2. '_position' → logprob: -1.4136734008789062
    3. '_positions' → logprob: -2.4136734008789062
    4. '=' → logprob: -6.038673400878906
    5. '_,' → logprob: -7.413673400878906
    6. ',' → logprob: -7.663673400878906
    7. '_indices' → logprob: -7.788673400878906
    8. ' =' → logprob: -7.913673400878906
    9. 's' → logprob: -8.163673400878906
    10. '_pos' → logprob: -8.538673400878906

Token 76: '_c' (ID: 1303)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.11857476085424423
    2. ',' → logprob: -2.868574857711792
    3. ' =' → logprob: -2.993574857711792
    4. 's' → logprob: -5.743574619293213
    5. '_' → logprob: -7.243574619293213
    6. '_a' → logprob: -7.243574619293213
    7. 'a' → logprob: -9.243575096130371
    8. '<|end|>' → logprob: -9.868575096130371
    9. '_=' → logprob: -10.618575096130371
    10. '_s' → logprob: -10.618575096130371

Token 77: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.012755078263580799
    2. '=' → logprob: -4.512754917144775
    3. ',' → logprob: -6.387754917144775
    4. ' ,' → logprob: -11.762755393981934
    5. '<|end|>' → logprob: -11.762755393981934
    6. ' ' → logprob: -12.387755393981934
    7. ' =
' → logprob: -14.137755393981934
    8. ')' → logprob: -14.262755393981934
    9. '_' → logprob: -14.637755393981934
    10. '<|end|>' → logprob: -14.887755393981934

Token 78: ' destination' (ID: 13330)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.4602406919002533
    2. ' path' → logprob: -1.0852407217025757
    3. '=' → logprob: -4.460240840911865
    4. ' =' → logprob: -4.710240840911865
    5. 'number' → logprob: -6.585240840911865
    6. ' number' → logprob: -7.210240840911865
    7. 'segments' → logprob: -7.335240840911865
    8. 'paths' → logprob: -7.585240840911865
    9. '_' → logprob: -7.835240840911865
    10. 'starting' → logprob: -7.897740840911865

Token 79: '_position' (ID: 23739)
  Prédit: '_position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_position' → logprob: -0.46311357617378235
    2. '_' → logprob: -1.58811354637146
    3. '_positions' → logprob: -1.83811354637146
    4. '_number' → logprob: -5.213113784790039
    5. '_cells' → logprob: -7.338113784790039
    6. '_tokens' → logprob: -8.963113784790039
    7. '_possible' → logprob: -9.213113784790039
    8. '_code' → logprob: -9.463113784790039
    9. 'position' → logprob: -10.088113784790039
    10. '_points' → logprob: -10.088113784790039

Token 80: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -0.024817438796162605
    2. 'd' → logprob: -4.77481746673584
    3. '_c' → logprob: -4.77481746673584
    4. 's' → logprob: -5.52481746673584
    5. '_a' → logprob: -6.77481746673584
    6. '_' → logprob: -6.89981746673584
    7. '_s' → logprob: -7.27481746673584
    8. '_count' → logprob: -8.02481746673584
    9. 'c' → logprob: -9.39981746673584
    10. ',' → logprob: -9.89981746673584

Token 81: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.28469106554985046
    2. '=' → logprob: -1.4096910953521729
    3. ',' → logprob: -5.659690856933594
    4. '<|end|>' → logprob: -10.909690856933594
    5. ' ' → logprob: -11.534690856933594
    6. ' ,' → logprob: -12.284690856933594
    7. ')' → logprob: -12.284690856933594
    8. '=input' → logprob: -13.159690856933594
    9. '<|end|>' → logprob: -13.284690856933594
    10. '.' → logprob: -13.534690856933594

Token 82: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.008688795380294323
    2. ' map' → logprob: -4.758688926696777
    3. 'input' → logprob: -10.258688926696777
    4. 'list' → logprob: -10.758688926696777
    5. '[' → logprob: -11.133688926696777
    6. '(map' → logprob: -13.383688926696777
    7. 'tuple' → logprob: -14.258688926696777
    8. '	map' → logprob: -14.883688926696777
    9. ' [' → logprob: -15.383688926696777
    10. ' list' → logprob: -15.883688926696777

Token 83: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.05698120966553688
    2. '<|end|>' → logprob: -3.306981325149536
    3. '(int' → logprob: -4.806981086730957
    4. '(lambda' → logprob: -4.931981086730957
    5. '(str' → logprob: -6.306981086730957
    6. '(input' → logprob: -7.431981086730957
    7. '(
' → logprob: -7.931981086730957
    8. '()' → logprob: -9.806981086730957
    9. '<|end|>' → logprob: -9.931981086730957
    10. '```' → logprob: -10.056981086730957

Token 84: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.1042509377002716
    2. '(' → logprob: -2.479250907897949
    3. ')' → logprob: -4.354250907897949
    4. '<|end|>' → logprob: -6.979250907897949
    5. 'input' → logprob: -7.354250907897949
    6. ')(' → logprob: -8.85425090789795
    7. '(int' → logprob: -9.47925090789795
    8. '(range' → logprob: -9.60425090789795
    9. '(
' → logprob: -9.85425090789795
    10. '[input' → logprob: -10.22925090789795

Token 85: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.011055245995521545
    2. ' input' → logprob: -4.5110554695129395
    3. '(input' → logprob: -12.636054992675781
    4. ')' → logprob: -13.136054992675781
    5. '=input' → logprob: -14.261054992675781
    6. '<input' → logprob: -14.636054992675781
    7. ',input' → logprob: -14.761054992675781
    8. '	input' → logprob: -15.011054992675781
    9. '   ' → logprob: -15.136054992675781
    10. '[input' → logprob: -16.63605499267578

Token 86: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5661525130271912
    2. '().' → logprob: -0.9411525130271912
    3. '())' → logprob: -3.316152572631836
    4. '(' → logprob: -5.441152572631836
    5. '());' → logprob: -7.941152572631836
    6. '()>' → logprob: -8.191152572631836
    7. '(()' → logprob: -8.441152572631836
    8. '();)' → logprob: -9.191152572631836
    9. ')' → logprob: -9.691152572631836
    10. '()<' → logprob: -9.941152572631836

Token 87: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0001684981834841892
    2. 'strip' → logprob: -8.750168800354004
    3. '(split' → logprob: -12.125168800354004
    4. ')' → logprob: -13.125168800354004
    5. ' split' → logprob: -13.500168800354004
    6. 'rstrip' → logprob: -14.375168800354004
    7. 'spl' → logprob: -14.875168800354004
    8. '```' → logprob: -16.000167846679688
    9. '_split' → logprob: -16.375167846679688
    10. 'plit' → logprob: -16.375167846679688

Token 88: '())

' (ID: 27654)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('' → logprob: -0.8253217339515686
    2. '(' → logprob: -1.0753216743469238
    3. ')' → logprob: -1.5753216743469238
    4. '())' → logprob: -5.075321674346924
    5. '()' → logprob: -5.575321674346924
    6. '(','' → logprob: -5.950321674346924
    7. '(
' → logprob: -7.825321674346924
    8. '')' → logprob: -8.700322151184082
    9. ')(' → logprob: -9.075322151184082
    10. '(',' → logprob: -9.075322151184082

Token 89: 'original' (ID: 22155)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.0026474790647625923
    2. '
' → logprob: -7.002647399902344
    3. 'number' → logprob: -7.627647399902344
    4. ' path' → logprob: -7.877647399902344
    5. 'n' → logprob: -9.127647399902344
    6. '```' → logprob: -9.127647399902344
    7. 'segment' → logprob: -9.252647399902344
    8. 'paths' → logprob: -9.502647399902344
    9. 'segments' → logprob: -9.877647399902344
    10. '`' → logprob: -9.877647399902344

Token 90: '_path' (ID: 5558)
  Prédit: '_path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_path' → logprob: -0.0065551442094147205
    2. '_' → logprob: -5.256555080413818
    3. 'path' → logprob: -7.256555080413818
    4. '_cells' → logprob: -8.381555557250977
    5. '_positions' → logprob: -9.256555557250977
    6. '_position' → logprob: -9.756555557250977
    7. '()' → logprob: -9.881555557250977
    8. '_map' → logprob: -10.256555557250977
    9. '_segments' → logprob: -10.756555557250977
    10. '_array' → logprob: -11.006555557250977

Token 91: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.46981826424598694
    2. '=' → logprob: -1.0948182344436646
    3. '_' → logprob: -3.219818353652954
    4. '_with' → logprob: -8.469818115234375
    5. '_path' → logprob: -10.219818115234375
    6. '_=' → logprob: -10.719818115234375
    7. 's' → logprob: -10.969818115234375
    8. ',' → logprob: -12.094818115234375
    9. ' ' → logprob: -12.469818115234375
    10. '_length' → logprob: -12.844818115234375

Token 92: ' list' (ID: 1562)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.06206885352730751
    2. ' input' → logprob: -2.8120689392089844
    3. 'list' → logprob: -9.437068939208984
    4. ' list' → logprob: -10.812068939208984
    5. '<input' → logprob: -15.187068939208984
    6. '=input' → logprob: -15.312068939208984
    7. '(input' → logprob: -15.437068939208984
    8. 'str' → logprob: -15.812068939208984
    9. '	input' → logprob: -16.062068939208984
    10. ' ' → logprob: -16.187068939208984

Token 93: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.18027053773403168
    2. '(input' → logprob: -1.8052705526351929
    3. '()' → logprob: -8.430270195007324
    4. '('' → logprob: -8.805270195007324
    5. '("("' → logprob: -10.180270195007324
    6. '(
' → logprob: -11.180270195007324
    7. '(str' → logprob: -11.180270195007324
    8. '(int' → logprob: -11.180270195007324
    9. '(user' → logprob: -11.430270195007324
    10. '("")' → logprob: -11.555270195007324

Token 94: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.10024376213550568
    2. '()' → logprob: -2.3502438068389893
    3. '().' → logprob: -11.72524356842041
    4. '();)' → logprob: -11.72524356842041
    5. ' ())' → logprob: -11.97524356842041
    6. ')' → logprob: -12.10024356842041
    7. '()]' → logprob: -13.10024356842041
    8. '(' → logprob: -13.35024356842041
    9. '()))' → logprob: -13.85024356842041
    10. '()`' → logprob: -14.35024356842041

Token 95: '#' (ID: 2)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.0233744066208601
    2. '#' → logprob: -4.648374557495117
    3. 'p' → logprob: -5.023374557495117
    4. 'n' → logprob: -5.773374557495117
    5. '_' → logprob: -6.648374557495117
    6. '
' → logprob: -6.898374557495117
    7. 'number' → logprob: -8.023374557495117
    8. ' path' → logprob: -8.523374557495117
    9. ' 
' → logprob: -8.898374557495117
    10. '\' → logprob: -8.898374557495117

Token 96: ' We' (ID: 1416)
  Prédit: ' path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' path' → logprob: -0.9407600164413452
    2. 'path' → logprob: -0.9407600164413452
    3. ' Add' → logprob: -2.1907601356506348
    4. 'Add' → logprob: -3.3157601356506348
    5. '#' → logprob: -4.440760135650635
    6. 'Adding' → logprob: -4.440760135650635
    7. ' Insert' → logprob: -5.190760135650635
    8. ' Define' → logprob: -5.315760135650635
    9. ' Extend' → logprob: -5.440760135650635
    10. 'Define' → logprob: -5.440760135650635

Token 97: ' add' (ID: 1147)
  Prédit: ' need'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' need' → logprob: -0.18413928151130676
    2. 'need' → logprob: -3.5591392517089844
    3. ''ll' → logprob: -3.6841392517089844
    4. '#' → logprob: -3.9341392517089844
    5. ' have' → logprob: -4.059139251708984
    6. ''' → logprob: -4.309139251708984
    7. ' ' → logprob: -4.434139251708984
    8. ''re' → logprob: -4.559139251708984
    9. ' want' → logprob: -5.184139251708984
    10. 'w' → logprob: -5.434139251708984

Token 98: ' boundaries' (ID: 35665)
  Prédit: ''#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''#' → logprob: -0.24940867722034454
    2. ''' → logprob: -1.7494087219238281
    3. ''.' → logprob: -4.249408721923828
    4. '"#' → logprob: -4.749408721923828
    5. ' '#'' → logprob: -5.249408721923828
    6. ''*' → logprob: -5.374408721923828
    7. '"' → logprob: -5.874408721923828
    8. ''s' → logprob: -5.999408721923828
    9. '`' → logprob: -6.249408721923828
    10. '['' → logprob: -6.249408721923828

Token 99: ' to' (ID: 316)
  Prédit: ''#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''#' → logprob: -1.1283199787139893
    2. ''' → logprob: -1.8783199787139893
    3. '=' → logprob: -1.8783199787139893
    4. '['' → logprob: -1.8783199787139893
    5. ' =' → logprob: -2.7533199787139893
    6. ' '#'' → logprob: -3.7533199787139893
    7. '[' → logprob: -4.00331974029541
    8. '='#' → logprob: -4.00331974029541
    9. ''s' → logprob: -4.12831974029541
    10. '=['' → logprob: -4.37831974029541

Token 100: ' simplify' (ID: 66240)
  Prédit: 'original'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'original' → logprob: -0.1226375550031662
    2. 'the' → logprob: -2.8726375102996826
    3. ' original' → logprob: -2.9976375102996826
    4. ' the' → logprob: -4.872637748718262
    5. 'both' → logprob: -7.497637748718262
    6. '['' → logprob: -7.747637748718262
    7. ' both' → logprob: -8.872637748718262
    8. '[' → logprob: -9.622637748718262
    9. 'path' → logprob: -10.747637748718262
    10. ' ['' → logprob: -10.747637748718262

Token 101: ' index' (ID: 3472)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.6864166259765625
    2. 'original' → logprob: -1.1864166259765625
    3. 'the' → logprob: -1.9364166259765625
    4. ' original' → logprob: -3.8114166259765625
    5. ' the' → logprob: -3.9364166259765625
    6. ' path' → logprob: -5.6864166259765625
    7. 'checking' → logprob: -6.8114166259765625
    8. 'code' → logprob: -7.6864166259765625
    9. ' checking' → logprob: -8.936416625976562
    10. '#' → logprob: -9.561416625976562

Token 102: ' checks' (ID: 22097)
  Prédit: 'ing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ing' → logprob: -0.007818128913640976
    2. 'es' → logprob: -5.757818222045898
    3. 'handling' → logprob: -6.132818222045898
    4. ' handling' → logprob: -6.507818222045898
    5. 's' → logprob: -7.757818222045898
    6. 'access' → logprob: -8.882818222045898
    7. ' access' → logprob: -9.132818222045898
    8. 'ation' → logprob: -9.382818222045898
    9. ' ' → logprob: -9.757818222045898
    10. ' checking' → logprob: -10.507818222045898

Token 103: ' at' (ID: 540)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.010685560293495655
    2. ' path' → logprob: -4.635685443878174
    3. 'original' → logprob: -8.260685920715332
    4. 'boundary' → logprob: -8.510685920715332
    5. '#' → logprob: -9.385685920715332
    6. '
' → logprob: -9.635685920715332
    7. '```' → logprob: -9.635685920715332
    8. ' for' → logprob: -9.760685920715332
    9. ':' → logprob: -10.635685920715332
    10. ' and' → logprob: -10.635685920715332

Token 104: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.3552926182746887
    2. ' the' → logprob: -1.355292558670044
    3. '0' → logprob: -3.605292558670044
    4. 'both' → logprob: -4.730292797088623
    5. ' both' → logprob: -5.855292797088623
    6. ' ' → logprob: -7.480292797088623
    7. '[' → logprob: -7.605292797088623
    8. '1' → logprob: -8.605292320251465
    9. 'edges' → logprob: -8.730292320251465
    10. 'each' → logprob: -8.730292320251465

Token 105: ' borders' (ID: 45686)
  Prédit: 'ends'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ends' → logprob: -0.8016071915626526
    2. 'edges' → logprob: -1.6766071319580078
    3. 'begin' → logprob: -2.051607131958008
    4. 'start' → logprob: -2.176607131958008
    5. '0' → logprob: -2.676607131958008
    6. ' beginning' → logprob: -3.426607131958008
    7. ' ends' → logprob: -4.301607131958008
    8. ' edges' → logprob: -5.926607131958008
    9. 'end' → logprob: -6.801607131958008
    10. 'bound' → logprob: -6.926607131958008

Token 106: '
' (ID: 198)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.011179622262716293
    2. 'boundary' → logprob: -5.511179447174072
    3. ' path' → logprob: -6.011179447174072
    4. '#' → logprob: -6.511179447174072
    5. 'left' → logprob: -6.761179447174072
    6. 'bound' → logprob: -7.261179447174072
    7. 'original' → logprob: -7.886179447174072
    8. 'segment' → logprob: -8.63617992401123
    9. 'bounded' → logprob: -8.88617992401123
    10. 'extended' → logprob: -9.13617992401123

Token 107: 'path' (ID: 4189)
  Prédit: 'path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.0012979733292013407
    2. ' path' → logprob: -6.751297950744629
    3. 'boundary' → logprob: -9.876297950744629
    4. '```' → logprob: -10.626297950744629
    5. 'bound' → logprob: -10.876297950744629
    6. '#' → logprob: -11.501297950744629
    7. 'bounded' → logprob: -12.376297950744629
    8. '
' → logprob: -12.751297950744629
    9. 'padding' → logprob: -13.001297950744629
    10. 'left' → logprob: -13.376297950744629

Token 108: '_with' (ID: 14161)
  Prédit: '_with'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_with' → logprob: -1.0280383548888494e-06
    2. '_' → logprob: -14.000000953674316
    3. 'with' → logprob: -17.375001907348633
    4. '_WITH' → logprob: -17.625001907348633
    5. ' =' → logprob: -18.125001907348633
    6. '=' → logprob: -18.375001907348633
    7. '_w' → logprob: -18.375001907348633
    8. '_for' → logprob: -18.625001907348633
    9. '_without' → logprob: -19.000001907348633
    10. 'With' → logprob: -19.250001907348633

Token 109: '_bound' (ID: 47558)
  Prédit: '_bound'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bound' → logprob: -0.000133098365040496
    2. '_boundary' → logprob: -9.250133514404297
    3. '_' → logprob: -10.750133514404297
    4. '_bounds' → logprob: -11.875133514404297
    5. '_b' → logprob: -12.500133514404297
    6. ' _' → logprob: -13.250133514404297
    7. ''_' → logprob: -13.250133514404297
    8. '"_' → logprob: -14.875133514404297
    9. ' boundaries' → logprob: -15.250133514404297
    10. '_bind' → logprob: -16.250133514404297

Token 110: 'aries' (ID: 8526)
  Prédit: 'aries'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aries' → logprob: -4.320199877838604e-07
    2. 'ary' → logprob: -15.125
    3. 'ries' → logprob: -15.625
    4. 'ar' → logprob: -16.875
    5. 'eries' → logprob: -17.875
    6. 'ari' → logprob: -18.625
    7. 'aires' → logprob: -19.625
    8. '_' → logprob: -19.75
    9. 'arie' → logprob: -19.75
    10. 'a' → logprob: -20.0

Token 111: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0024769625160843134
    2. '=' → logprob: -6.002477169036865
    3. '=['' → logprob: -14.377476692199707
    4. ' ' → logprob: -15.377476692199707
    5. ' =[' → logprob: -16.252477645874023
    6. 's' → logprob: -16.377477645874023
    7. '```' → logprob: -16.627477645874023
    8. '=[' → logprob: -16.627477645874023
    9. ' =
' → logprob: -16.877477645874023
    10. ' ' → logprob: -17.377477645874023

Token 112: ' ['' (ID: 5140)
  Prédit: '[''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '['' → logprob: -0.0935288667678833
    2. ' ['' → logprob: -2.4685287475585938
    3. '["' → logprob: -5.968528747558594
    4. ''' → logprob: -7.218528747558594
    5. '[' → logprob: -7.843528747558594
    6. '['_' → logprob: -7.968528747558594
    7. ''#' → logprob: -9.093528747558594
    8. '"' → logprob: -9.218528747558594
    9. ' '#'' → logprob: -9.343528747558594
    10. ' ["' → logprob: -9.968528747558594

Token 113: '#' (ID: 2)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.06472446769475937
    2. '#' → logprob: -3.0647244453430176
    3. 'X' → logprob: -5.064724445343018
    4. '*' → logprob: -6.064724445343018
    5. '_' → logprob: -6.439724445343018
    6. '-' → logprob: -7.064724445343018
    7. ''.' → logprob: -7.064724445343018
    8. '/' → logprob: -7.189724445343018
    9. '@' → logprob: -7.189724445343018
    10. '']' → logprob: -7.439724445343018

Token 114: '']' (ID: 1089)
  Prédit: '']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '']' → logprob: -0.0017576448153704405
    2. ']' → logprob: -6.376757621765137
    3. '"]' → logprob: -10.001757621765137
    4. ''' → logprob: -12.626757621765137
    5. ']+' → logprob: -13.001757621765137
    6. '#' → logprob: -13.376757621765137
    7. ' ']' → logprob: -14.376757621765137
    8. '`]' → logprob: -14.501757621765137
    9. '',' → logprob: -14.751757621765137
    10. ''#' → logprob: -15.376757621765137

Token 115: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.023248042911291122
    2. ' +' → logprob: -3.7732479572296143
    3. '+
' → logprob: -13.898247718811035
    4. '*' → logprob: -14.648247718811035
    5. '+[' → logprob: -15.023247718811035
    6. '<|end|>' → logprob: -15.398247718811035
    7. ')+' → logprob: -15.898247718811035
    8. '+p' → logprob: -15.898247718811035
    9. '+s' → logprob: -16.64824867248535
    10. '+B' → logprob: -16.77324867248535

Token 116: ' original' (ID: 4756)
  Prédit: ' original'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' original' → logprob: -0.5759404301643372
    2. 'original' → logprob: -0.8259404301643372
    3. '(original' → logprob: -14.325940132141113
    4. '['' → logprob: -16.70094108581543
    5. 'or' → logprob: -16.82594108581543
    6. ' ' → logprob: -16.82594108581543
    7. ' ['' → logprob: -16.95094108581543
    8. 'origin' → logprob: -17.20094108581543
    9. ' оригин' → logprob: -17.20094108581543
    10. 'Original' → logprob: -17.32594108581543

Token 117: '_path' (ID: 5558)
  Prédit: '_path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_path' → logprob: -4.4849443838757e-06
    2. 'path' → logprob: -12.375004768371582
    3. '_' → logprob: -15.250004768371582
    4. '_pat' → logprob: -19.125003814697266
    5. '_p' → logprob: -19.875003814697266
    6. 'original' → logprob: -20.000003814697266
    7. ' _' → logprob: -20.500003814697266
    8. ' path' → logprob: -20.625003814697266
    9. '_Path' → logprob: -21.250003814697266
    10. '```' → logprob: -21.250003814697266

Token 118: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.061972279101610184
    2. ' +' → logprob: -2.8119723796844482
    3. '+[' → logprob: -13.686972618103027
    4. '+#' → logprob: -14.061972618103027
    5. '+
' → logprob: -14.686972618103027
    6. '<|end|>' → logprob: -14.686972618103027
    7. '[:]' → logprob: -15.311972618103027
    8. '[' → logprob: -15.561972618103027
    9. '+++' → logprob: -15.686972618103027
    10. '＋' → logprob: -16.18697166442871

Token 119: ' ['' (ID: 5140)
  Prédit: '[''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '['' → logprob: -0.01822088100016117
    2. ' ['' → logprob: -4.018220901489258
    3. ''#' → logprob: -10.018220901489258
    4. ' '#'' → logprob: -11.643220901489258
    5. ' ' → logprob: -12.018220901489258
    6. '[#' → logprob: -12.643220901489258
    7. '['_' → logprob: -13.018220901489258
    8. '#' → logprob: -13.393220901489258
    9. '[' → logprob: -13.393220901489258
    10. '["' → logprob: -13.768220901489258

Token 120: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.0003806257154792547
    2. ''#' → logprob: -7.875380516052246
    3. '#
' → logprob: -15.875380516052246
    4. '']' → logprob: -15.875380516052246
    5. ' '#'' → logprob: -16.625381469726562
    6. ''' → logprob: -16.750381469726562
    7. '"#' → logprob: -17.500381469726562
    8. ' '#' → logprob: -17.625381469726562
    9. ' #' → logprob: -17.625381469726562
    10. '','#' → logprob: -17.625381469726562

Token 121: '']

' (ID: 36979)
  Prédit: '']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '']' → logprob: -0.31341105699539185
    2. ']' → logprob: -1.313410997390747
    3. '']

' → logprob: -9.938410758972168
    4. '#' → logprob: -10.063410758972168
    5. ']

' → logprob: -10.313410758972168
    6. '"]' → logprob: -11.063410758972168
    7. ''' → logprob: -12.188410758972168
    8. ' ]' → logprob: -13.063410758972168
    9. ' ']' → logprob: -14.563410758972168
    10. ']'' → logprob: -14.688410758972168

Token 122: '#' (ID: 2)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.06776495277881622
    2. 'while' → logprob: -4.067764759063721
    3. 'can' → logprob: -4.317764759063721
    4. 'valid' → logprob: -4.442764759063721
    5. 'def' → logprob: -5.192764759063721
    6. 'for' → logprob: -5.192764759063721
    7. '#' → logprob: -5.817764759063721
    8. 'possible' → logprob: -6.567764759063721
    9. 'found' → logprob: -6.817764759063721
    10. 'a' → logprob: -7.317764759063721

Token 123: ' Check' (ID: 6208)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.19910217821598053
    2. '#' → logprob: -2.3241021633148193
    3. 'can' → logprob: -2.6991021633148193
    4. 'possible' → logprob: -5.074102401733398
    5. 'def' → logprob: -5.324102401733398
    6. 'condition' → logprob: -7.699102401733398
    7. 'valid' → logprob: -7.824102401733398
    8. 'is' → logprob: -8.074102401733398
    9. 'while' → logprob: -8.074102401733398
    10. 'segment' → logprob: -8.199102401733398

Token 124: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.06117745488882065
    2. 'for' → logprob: -3.3111774921417236
    3. ' if' → logprob: -4.1861772537231445
    4. '#' → logprob: -6.0611772537231445
    5. 'A' → logprob: -6.8111772537231445
    6. 'a' → logprob: -6.9361772537231445
    7. 'whether' → logprob: -7.0611772537231445
    8. 'con' → logprob: -7.1861772537231445
    9. ' for' → logprob: -7.9361772537231445
    10. 'the' → logprob: -8.186177253723145

Token 125: ' there' (ID: 1354)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.08677901327610016
    2. 'not' → logprob: -3.2117791175842285
    3. ' check' → logprob: -4.2117791175842285
    4. '(check' → logprob: -5.0867791175842285
    5. 'starting' → logprob: -5.2117791175842285
    6. 'a' → logprob: -5.4617791175842285
    7. 'both' → logprob: -5.7117791175842285
    8. 'the' → logprob: -5.8367791175842285
    9. ' not' → logprob: -6.3367791175842285
    10. 'b' → logprob: -7.7117791175842285

Token 126: ' are' (ID: 553)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.22732257843017578
    2. 'exists' → logprob: -2.227322578430176
    3. 'are' → logprob: -2.977322578430176
    4. ' is' → logprob: -3.477322578430176
    5. ' exists' → logprob: -5.727322578430176
    6. ''s' → logprob: -5.727322578430176
    7. ' are' → logprob: -5.852322578430176
    8. '#' → logprob: -6.102322578430176
    9. '```' → logprob: -7.477322578430176
    10. 'can' → logprob: -7.727322578430176

Token 127: ' consecutive' (ID: 40840)
  Prédit: ' any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' any' → logprob: -0.4750794768333435
    2. 'any' → logprob: -2.1000795364379883
    3. ' two' → logprob: -2.1000795364379883
    4. 'two' → logprob: -2.6000795364379883
    5. '<|end|>' → logprob: -3.4750795364379883
    6. 'con' → logprob: -4.100079536437988
    7. ' consecutive' → logprob: -5.475079536437988
    8. ' no' → logprob: -6.225079536437988
    9. ' ' → logprob: -6.975079536437988
    10. 'no' → logprob: -7.100079536437988

Token 128: ' rocks' (ID: 35257)
  Prédit: 'rocks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rocks' → logprob: -0.0771571472287178
    2. '_' → logprob: -3.8271572589874268
    3. ''#' → logprob: -4.327157020568848
    4. ''' → logprob: -4.452157020568848
    5. ' '#'' → logprob: -4.577157020568848
    6. ' rocks' → logprob: -5.077157020568848
    7. 'rock' → logprob: -5.827157020568848
    8. ''s' → logprob: -6.577157020568848
    9. 'spaces' → logprob: -7.452157020568848
    10. '#' → logprob: -7.452157020568848

Token 129: ' blocking' (ID: 44035)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.6089779138565063
    2. 'in' → logprob: -1.2339779138565063
    3. ' between' → logprob: -3.233977794647217
    4. 'between' → logprob: -3.233977794647217
    5. 'if' → logprob: -4.233977794647217
    6. ' to' → logprob: -4.483977794647217
    7. ' that' → logprob: -4.608977794647217
    8. 'on' → logprob: -4.858977794647217
    9. ' on' → logprob: -4.983977794647217
    10. ' or' → logprob: -5.108977794647217

Token 130: ' either' (ID: 4784)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.445980042219162
    2. ' the' → logprob: -1.0709800720214844
    3. 'either' → logprob: -4.945980072021484
    4. ' any' → logprob: -6.070980072021484
    5. 'both' → logprob: -6.195980072021484
    6. '#' → logprob: -6.570980072021484
    7. ' either' → logprob: -6.570980072021484
    8. 'any' → logprob: -6.695980072021484
    9. ' both' → logprob: -7.445980072021484
    10. ' passage' → logprob: -8.570980072021484

Token 131: ' path' (ID: 3104)
  Prédit: 'starting'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'starting' → logprob: -0.8155612349510193
    2. 'path' → logprob: -1.690561294555664
    3. 'a' → logprob: -1.940561294555664
    4. 'the' → logprob: -2.690561294555664
    5. 'paths' → logprob: -3.315561294555664
    6. 'segment' → logprob: -3.565561294555664
    7. ' starting' → logprob: -3.940561294555664
    8. 'start' → logprob: -4.065561294555664
    9. ' path' → logprob: -4.815561294555664
    10. '#' → logprob: -4.940561294555664

Token 132: ' (' (ID: 350)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5920899510383606
    2. 'between' → logprob: -1.9670898914337158
    3. 'segment' → logprob: -2.092089891433716
    4. 'a' → logprob: -2.342089891433716
    5. 'for' → logprob: -3.592089891433716
    6. 'on' → logprob: -4.467090129852295
    7. ' between' → logprob: -4.717090129852295
    8. 'in' → logprob: -4.842090129852295
    9. 'from' → logprob: -5.217090129852295
    10. 'first' → logprob: -5.592090129852295

Token 133: 'blocking' (ID: 143731)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4310164451599121
    2. 'a' → logprob: -2.681016445159912
    3. ' between' → logprob: -2.931016445159912
    4. ' a' → logprob: -3.306016445159912
    5. 's' → logprob: -3.556016445159912
    6. ' for' → logprob: -3.931016445159912
    7. 'from' → logprob: -3.931016445159912
    8. ' from' → logprob: -4.056016445159912
    9. ' or' → logprob: -4.056016445159912
    10. 'A' → logprob: -4.431016445159912

Token 134: ' progress' (ID: 7408)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.5686540007591248
    2. 'the' → logprob: -2.5686540603637695
    3. 'a' → logprob: -2.9436540603637695
    4. ' both' → logprob: -2.9436540603637695
    5. ')' → logprob: -3.0686540603637695
    6. ' a' → logprob: -3.0686540603637695
    7. ' either' → logprob: -3.5686540603637695
    8. 'both' → logprob: -3.5686540603637695
    9. 'either' → logprob: -3.8186540603637695
    10. 's' → logprob: -4.3186540603637695

Token 135: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8324774503707886
    2. ' on' → logprob: -1.5824774503707886
    3. ' for' → logprob: -1.7074774503707886
    4. ' to' → logprob: -3.082477569580078
    5. ' in' → logprob: -3.457477569580078
    6. ' or' → logprob: -3.707477569580078
    7. 'for' → logprob: -4.082477569580078
    8. ' )' → logprob: -4.457477569580078
    9. ' from' → logprob: -4.707477569580078
    10. 'on' → logprob: -4.707477569580078

Token 136: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.025838512927293777
    2. 'can' → logprob: -4.525838375091553
    3. 'a' → logprob: -5.400838375091553
    4. 'segment' → logprob: -5.775838375091553
    5. 'left' → logprob: -6.150838375091553
    6. 'for' → logprob: -6.400838375091553
    7. '#' → logprob: -7.525838375091553
    8. 'is' → logprob: -7.650838375091553
    9. 'first' → logprob: -7.900838375091553
    10. 'possible' → logprob: -8.275838851928711

Token 137: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.43201184272766113
    2. 'not' → logprob: -1.0570118427276611
    3. ' check' → logprob: -6.807011604309082
    4. '(not' → logprob: -6.932011604309082
    5. 'check' → logprob: -7.182011604309082
    6. ' (' → logprob: -9.182011604309082
    7. '(' → logprob: -9.182011604309082
    8. ' ' → logprob: -9.432011604309082
    9. ' starting' → logprob: -10.182011604309082
    10. '(check' → logprob: -10.307011604309082

Token 138: ' check' (ID: 2371)
  Prédit: ' check'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' check' → logprob: -0.18003003299236298
    2. 'check' → logprob: -1.8050299882888794
    3. '(check' → logprob: -8.18002986907959
    4. ' (' → logprob: -13.68002986907959
    5. ' ' → logprob: -14.18002986907959
    6. '	check' → logprob: -14.18002986907959
    7. '_check' → logprob: -14.43002986907959
    8. '(' → logprob: -14.55502986907959
    9. ' all' → logprob: -14.80502986907959
    10. '   ' → logprob: -15.55502986907959

Token 139: '_for' (ID: 11903)
  Prédit: '_for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_for' → logprob: 0.0
    2. '_' → logprob: -17.0
    3. 'for' → logprob: -20.875
    4. ' _' → logprob: -21.5
    5. '_FOR' → logprob: -21.5
    6. '_to' → logprob: -21.5
    7. '_or' → logprob: -22.0
    8. '_from' → logprob: -22.25
    9. '_f' → logprob: -22.375
    10. 'For' → logprob: -22.375

Token 140: '_con' (ID: 7531)
  Prédit: '_con'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_con' → logprob: -0.0002967320033349097
    2. 'con' → logprob: -8.125296592712402
    3. '_' → logprob: -15.625296592712402
    4. '_for' → logprob: -15.750296592712402
    5. 'Con' → logprob: -16.25029754638672
    6. 'c' → logprob: -16.62529754638672
    7. '_cons' → logprob: -16.87529754638672
    8. ' consecutive' → logprob: -17.12529754638672
    9. '_cont' → logprob: -17.37529754638672
    10. '```' → logprob: -17.87529754638672

Token 141: 'secutive' (ID: 165873)
  Prédit: 'secutive'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'secutive' → logprob: -1.5094070477061905e-05
    2. 'sect' → logprob: -11.625015258789062
    3. 's' → logprob: -12.750015258789062
    4. 'se' → logprob: -13.125015258789062
    5. 'sec' → logprob: -14.000015258789062
    6. 't' → logprob: -15.875015258789062
    7. 'es' → logprob: -16.125015258789062
    8. 'secut' → logprob: -16.875015258789062
    9. 'ecut' → logprob: -17.750015258789062
    10. 'servative' → logprob: -18.250015258789062

Token 142: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.1472419600977446e-06
    2. '_ro' → logprob: -14.125000953674316
    3. 'rocks' → logprob: -15.375000953674316
    4. '_r' → logprob: -17.375001907348633
    5. '_con' → logprob: -18.000001907348633
    6. '```' → logprob: -18.000001907348633
    7. ' _' → logprob: -18.875001907348633
    8. ' Rocks' → logprob: -19.250001907348633
    9. '__' → logprob: -19.625001907348633
    10. '_blocks' → logprob: -19.625001907348633

Token 143: 'rocks' (ID: 174500)
  Prédit: 'rocks'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rocks' → logprob: -2.9875325708417222e-05
    2. 'rock' → logprob: -11.375029563903809
    3. 'path' → logprob: -11.750029563903809
    4. '_' → logprob: -12.375029563903809
    5. 'blocks' → logprob: -13.250029563903809
    6. 'paths' → logprob: -14.000029563903809
    7. ' rocks' → logprob: -14.250029563903809
    8. 'ob' → logprob: -14.875029563903809
    9. '```' → logprob: -14.875029563903809
    10. 'roads' → logprob: -14.875029563903809

Token 144: '(start' (ID: 20008)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6934143304824829
    2. '(start' → logprob: -0.6934143304824829
    3. '(segment' → logprob: -8.443414688110352
    4. '(number' → logprob: -11.193414688110352
    5. '((' → logprob: -11.568414688110352
    6. '(s' → logprob: -12.068414688110352
    7. '(st' → logprob: -12.318414688110352
    8. '(range' → logprob: -12.443414688110352
    9. '(path' → logprob: -13.193414688110352
    10. '(
' → logprob: -13.318414688110352

Token 145: 'ing' (ID: 289)
  Prédit: 'ing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ing' → logprob: -2.2200749754119897e-06
    2. '_position' → logprob: -14.250001907348633
    3. '```' → logprob: -14.875001907348633
    4. '_ing' → logprob: -14.875001907348633
    5. '_for' → logprob: -15.375001907348633
    6. '
' → logprob: -15.500001907348633
    7. 'ning' → logprob: -17.000001907348633
    8. 'in' → logprob: -17.000001907348633
    9. '_' → logprob: -17.250001907348633
    10. '#' → logprob: -17.375001907348633

Token 146: '_position' (ID: 23739)
  Prédit: '_position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_position' → logprob: -0.0001093841710826382
    2. '_' → logprob: -9.375109672546387
    3. '_pos' → logprob: -11.375109672546387
    4. '_positions' → logprob: -11.500109672546387
    5. ' _' → logprob: -14.125109672546387
    6. 'position' → logprob: -14.125109672546387
    7. ')' → logprob: -15.250109672546387
    8. '_Position' → logprob: -15.625109672546387
    9. '```' → logprob: -15.625109672546387
    10. '_p' → logprob: -16.00010871887207

Token 147: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -7.600714161526412e-05
    2. '_b' → logprob: -10.375076293945312
    3. 'a' → logprob: -10.500076293945312
    4. '_' → logprob: -11.750076293945312
    5. '_c' → logprob: -12.750076293945312
    6. '```' → logprob: -13.250076293945312
    7. ' _' → logprob: -13.750076293945312
    8. '_d' → logprob: -14.000076293945312
    9. ')' → logprob: -14.250076293945312
    10. ' ' → logprob: -14.625076293945312

Token 148: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09513339400291443
    2. '-' → logprob: -3.0951333045959473
    3. ' -' → logprob: -3.3451333045959473
    4. ' ,' → logprob: -4.720133304595947
    5. '+' → logprob: -7.095133304595947
    6. ' +' → logprob: -7.845133304595947
    7. '   ' → logprob: -10.345133781433105
    8. ' ' → logprob: -11.095133781433105
    9. ')' → logprob: -11.470133781433105
    10. ',start' → logprob: -12.282633781433105

Token 149: ' destination' (ID: 13330)
  Prédit: 'destination'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'destination' → logprob: -0.10952648520469666
    2. ' destination' → logprob: -2.4845263957977295
    3. 'starting' → logprob: -3.9845263957977295
    4. ' starting' → logprob: -6.734526634216309
    5. ' ' → logprob: -8.859526634216309
    6. '   ' → logprob: -8.984526634216309
    7. 'ending' → logprob: -9.609526634216309
    8. '(destination' → logprob: -9.859526634216309
    9. '  ' → logprob: -10.109526634216309
    10. 'number' → logprob: -10.234526634216309

Token 150: '_position' (ID: 23739)
  Prédit: '_position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_position' → logprob: -5.200166469876422e-06
    2. '_' → logprob: -13.125004768371582
    3. 'position' → logprob: -13.125004768371582
    4. '_c' → logprob: -15.375004768371582
    5. 'Position' → logprob: -15.500004768371582
    6. '```' → logprob: -15.500004768371582
    7. '_positions' → logprob: -16.2500057220459
    8. '_a' → logprob: -16.3750057220459
    9. ')' → logprob: -16.3750057220459
    10. '_POSITION' → logprob: -16.7500057220459

Token 151: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.0014749871334061027
    2. '_a' → logprob: -7.626474857330322
    3. '_b' → logprob: -7.626474857330322
    4. '_d' → logprob: -7.751474857330322
    5. '_' → logprob: -10.37647533416748
    6. ')' → logprob: -10.75147533416748
    7. '_)' → logprob: -12.25147533416748
    8. 'c' → logprob: -12.37647533416748
    9. ')_' → logprob: -13.12647533416748
    10. '_f' → logprob: -14.00147533416748

Token 152: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3890256881713867
    2. ')' → logprob: -1.1390256881713867
    3. ' ):' → logprob: -6.764025688171387
    4. '+' → logprob: -7.514025688171387
    5. ' )' → logprob: -8.014025688171387
    6. ' +' → logprob: -10.014025688171387
    7. '):
' → logprob: -10.389025688171387
    8. ':' → logprob: -11.264025688171387
    9. '-' → logprob: -11.764025688171387
    10. ' or' → logprob: -11.889025688171387

Token 153: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.056430086493492126
    2. ':' → logprob: -3.1814301013946533
    3. ' and' → logprob: -4.556429862976074
    4. 'or' → logprob: -6.056429862976074
    5. 'and' → logprob: -7.806429862976074
    6. ')' → logprob: -10.306429862976074
    7. '   ' → logprob: -10.806429862976074
    8. ':
' → logprob: -11.306429862976074
    9. ' :' → logprob: -11.556429862976074
    10. '):' → logprob: -12.306429862976074

Token 154: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.038048144429922104
    2. 'not' → logprob: -3.288048028945923
    3. '   ' → logprob: -13.163047790527344
    4. ' ' → logprob: -13.538047790527344
    5. '	not' → logprob: -13.913047790527344
    6. ' ' → logprob: -14.038047790527344
    7. '(not' → logprob: -14.288047790527344
    8. '    ' → logprob: -14.663047790527344
    9. '  ' → logprob: -15.538047790527344
    10. ' 
' → logprob: -15.663047790527344

Token 155: ' check' (ID: 2371)
  Prédit: ' check'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' check' → logprob: -0.006811410654336214
    2. 'check' → logprob: -5.006811618804932
    3. ' ' → logprob: -10.006811141967773
    4. ' ' → logprob: -10.506811141967773
    5. '(check' → logprob: -11.756811141967773
    6. '_check' → logprob: -12.506811141967773
    7. '<|end|>' → logprob: -13.131811141967773
    8. '	check' → logprob: -13.381811141967773
    9. ')' → logprob: -13.631811141967773
    10. '.check' → logprob: -13.631811141967773

Token 156: '_for' (ID: 11903)
  Prédit: '_for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_for' → logprob: -0.0005087109748274088
    2. '(' → logprob: -7.750508785247803
    3. 'for' → logprob: -10.000508308410645
    4. 'For' → logprob: -11.625508308410645
    5. '('_' → logprob: -11.750508308410645
    6. '(_' → logprob: -12.000508308410645
    7. '_' → logprob: -12.750508308410645
    8. '(for' → logprob: -13.750508308410645
    9. '```' → logprob: -14.125508308410645
    10. '_FOR' → logprob: -14.375508308410645

Token 157: '_con' (ID: 7531)
  Prédit: '_con'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_con' → logprob: -0.1276421695947647
    2. 'con' → logprob: -2.1276421546936035
    3. 'check' → logprob: -7.2526421546936035
    4. 'Con' → logprob: -12.752642631530762
    5. ' consecutive' → logprob: -14.127642631530762
    6. '(con' → logprob: -14.877642631530762
    7. ' ' → logprob: -15.127642631530762
    8. '_cons' → logprob: -15.252642631530762
    9. '_check' → logprob: -15.377642631530762
    10. '_for' → logprob: -15.877642631530762

Token 158: 'secutive' (ID: 165873)
  Prédit: 'secutive'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'secutive' → logprob: -3.3213025744771585e-05
    2. 'sect' → logprob: -10.875033378601074
    3. 'se' → logprob: -12.000033378601074
    4. 's' → logprob: -12.375033378601074
    5. 'sec' → logprob: -13.500033378601074
    6. 't' → logprob: -13.625033378601074
    7. '```' → logprob: -15.250033378601074
    8. 'sequence' → logprob: -15.750033378601074
    9. 'check' → logprob: -16.125032424926758
    10. 'set' → logprob: -16.375032424926758

Token 159: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -7.696077227592468e-05
    2. 'rocks' → logprob: -10.375077247619629
    3. '_ro' → logprob: -10.625077247619629
    4. '(' → logprob: -11.125077247619629
    5. 'R' → logprob: -12.750077247619629
    6. '_for' → logprob: -14.375077247619629
    7. '```' → logprob: -14.500077247619629
    8. '(check' → logprob: -14.750077247619629
    9. 'for' → logprob: -15.125077247619629
    10. '(_' → logprob: -15.625077247619629

Token 160: 'rocks' (ID: 174500)
  Prédit: 'rocks'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rocks' → logprob: -0.0007498288759961724
    2. '_' → logprob: -8.750749588012695
    3. 'check' → logprob: -8.750749588012695
    4. 'con' → logprob: -8.750749588012695
    5. 'rock' → logprob: -8.750749588012695
    6. 'starting' → logprob: -10.750749588012695
    7. ' rocks' → logprob: -11.375749588012695
    8. '_con' → logprob: -11.375749588012695
    9. 'c' → logprob: -11.500749588012695
    10. 'start' → logprob: -11.500749588012695

Token 161: '(start' (ID: 20008)
  Prédit: '(start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(start' → logprob: -0.062019553035497665
    2. '(' → logprob: -2.8120195865631104
    3. ' (' → logprob: -10.812019348144531
    4. '((' → logprob: -10.937019348144531
    5. '(
' → logprob: -12.562019348144531
    6. '(s' → logprob: -13.312019348144531
    7. '(st' → logprob: -13.437019348144531
    8. 'starting' → logprob: -13.812019348144531
    9. '('' → logprob: -14.187019348144531
    10. '(original' → logprob: -14.187019348144531

Token 162: 'ing' (ID: 289)
  Prédit: 'ing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ing' → logprob: -0.002153115114197135
    2. 'starting' → logprob: -6.377152919769287
    3. '_position' → logprob: -8.627153396606445
    4. 'position' → logprob: -9.627153396606445
    5. '(' → logprob: -9.752153396606445
    6. '_for' → logprob: -10.252153396606445
    7. 'for' → logprob: -10.377153396606445
    8. 'ning' → logprob: -10.627153396606445
    9. '(start' → logprob: -10.752153396606445
    10. 'in' → logprob: -12.127153396606445

Token 163: '_position' (ID: 23739)
  Prédit: '_position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_position' → logprob: -4.3464544432936236e-05
    2. '_' → logprob: -10.500043869018555
    3. 'position' → logprob: -11.500043869018555
    4. 'Position' → logprob: -13.500043869018555
    5. '_positions' → logprob: -13.625043869018555
    6. '```' → logprob: -14.500043869018555
    7. '_POSITION' → logprob: -14.875043869018555
    8. '_for' → logprob: -15.250043869018555
    9. ')' → logprob: -15.250043869018555
    10. 'POSITION' → logprob: -15.375043869018555

Token 164: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.0002314303710591048
    2. '_d' → logprob: -8.500231742858887
    3. '_' → logprob: -10.875231742858887
    4. '_a' → logprob: -11.750231742858887
    5. '_c' → logprob: -15.000231742858887
    6. '```' → logprob: -15.250231742858887
    7. '_e' → logprob: -15.750231742858887
    8. '_f' → logprob: -16.62523078918457
    9. '_
' → logprob: -16.75023078918457
    10. '_,' → logprob: -16.75023078918457

Token 165: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.968312951968983e-06
    2. ' ,' → logprob: -11.625009536743164
    3. ',d' → logprob: -15.625009536743164
    4. ',

' → logprob: -15.750009536743164
    5. ',
' → logprob: -15.875009536743164
    6. ')' → logprob: -16.125009536743164
    7. '‌,' → logprob: -16.625009536743164
    8. ',)' → logprob: -17.250009536743164
    9. ',end' → logprob: -18.000009536743164
    10. ',start' → logprob: -18.000009536743164

Token 166: ' destination' (ID: 13330)
  Prédit: 'destination'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'destination' → logprob: -0.061981577426195145
    2. ' destination' → logprob: -2.811981678009033
    3. '(destination' → logprob: -12.061981201171875
    4. 'dest' → logprob: -12.436981201171875
    5. ' ' → logprob: -13.561981201171875
    6. '   ' → logprob: -13.936981201171875
    7. 'd' → logprob: -14.311981201171875
    8. ')' → logprob: -14.561981201171875
    9. 'number' → logprob: -16.061981201171875
    10. ' ' → logprob: -16.186981201171875

Token 167: '_position' (ID: 23739)
  Prédit: '_position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_position' → logprob: -6.420598219847307e-05
    2. '_' → logprob: -10.1250638961792
    3. '_c' → logprob: -11.3750638961792
    4. '_positions' → logprob: -12.3750638961792
    5. 'position' → logprob: -12.5000638961792
    6. 'Position' → logprob: -13.2500638961792
    7. '_p' → logprob: -14.5000638961792
    8. '_f' → logprob: -14.8750638961792
    9. ')' → logprob: -15.0000638961792
    10. ')_' → logprob: -15.0000638961792

Token 168: '_d' (ID: 1565)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.033891528844833374
    2. '_d' → logprob: -3.408891439437866
    3. '_' → logprob: -9.408891677856445
    4. ')' → logprob: -9.658891677856445
    5. 'c' → logprob: -10.033891677856445
    6. 'd' → logprob: -10.408891677856445
    7. '_a' → logprob: -11.658891677856445
    8. '_f' → logprob: -11.908891677856445
    9. '_)' → logprob: -12.158891677856445
    10. '```' → logprob: -14.033891677856445

Token 169: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0014973643701523542
    2. ')' → logprob: -7.001497268676758
    3. ' ):' → logprob: -8.001497268676758
    4. '):
' → logprob: -8.376497268676758
    5. ':' → logprob: -11.001497268676758
    6. ')):' → logprob: -14.126497268676758
    7. ''):' → logprob: -14.251497268676758
    8. '):
' → logprob: -14.626497268676758
    9. '():' → logprob: -15.126497268676758
    10. ' )' → logprob: -15.126497268676758

Token 170: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.003792350646108389
    2. ':
' → logprob: -5.7537922859191895
    3. 'print' → logprob: -8.128792762756348
    4. '   ' → logprob: -8.628792762756348
    5. ' :' → logprob: -9.753792762756348
    6. '):' → logprob: -10.628792762756348
    7. ' or' → logprob: -11.128792762756348
    8. ' print' → logprob: -11.128792762756348
    9. '.' → logprob: -11.878792762756348
    10. ':return' → logprob: -12.003792762756348

Token 171: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.014322631061077118
    2. '
' → logprob: -4.264322757720947
    3. '\n' → logprob: -9.514322280883789
    4. '
' → logprob: -10.014322280883789
    5. ' print' → logprob: -11.014322280883789
    6. '    
' → logprob: -11.639322280883789
    7. '```' → logprob: -12.764322280883789
    8. '   ' → logprob: -13.014322280883789
    9. '\' → logprob: -13.139322280883789
    10. ' 
' → logprob: -13.264322280883789

Token 172: '('' (ID: 706)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.010553701780736446
    2. '(' → logprob: -4.76055383682251
    3. '('' → logprob: -6.26055383682251
    4. '(
' → logprob: -10.885553359985352
    5. '(-' → logprob: -11.885553359985352
    6. '(False' → logprob: -15.010553359985352
    7. '(

' → logprob: -15.135553359985352
    8. '()' → logprob: -15.635553359985352
    9. ' ("' → logprob: -16.13555335998535
    10. '("\' → logprob: -16.51055335998535

Token 173: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -0.0025836240965873003
    2. '"No' → logprob: -6.3775835037231445
    3. 'Impossible' → logprob: -7.7525835037231445
    4. ''' → logprob: -8.377583503723145
    5. '"' → logprob: -9.002583503723145
    6. 'NO' → logprob: -9.502583503723145
    7. 'Fail' → logprob: -12.127583503723145
    8. 'Yes' → logprob: -12.627583503723145
    9. ' No' → logprob: -12.752583503723145
    10. '_No' → logprob: -12.877583503723145

Token 174: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '')' → logprob: -0.02426781877875328
    2. ')' → logprob: -4.024267673492432
    3. '<|end|>' → logprob: -5.524267673492432
    4. '")' → logprob: -7.649267673492432
    5. ''' → logprob: -7.899267673492432
    6. ' ')' → logprob: -8.02426815032959
    7. '
' → logprob: -8.14926815032959
    8. ' )' → logprob: -8.52426815032959
    9. '```' → logprob: -9.02426815032959
    10. '<|end|>' → logprob: -9.02426815032959

Token 175: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.0019185259006917477
    2. 'elif' → logprob: -6.501918315887451
    3. ' else' → logprob: -8.00191879272461
    4. '   ' → logprob: -10.37691879272461
    5. '
' → logprob: -10.75191879272461
    6. '<|end|>' → logprob: -11.25191879272461
    7. '```' → logprob: -12.25191879272461
    8. '    
' → logprob: -12.62691879272461
    9. ')' → logprob: -13.12691879272461
    10. '#else' → logprob: -13.37691879272461

Token 176: ' exit' (ID: 10654)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.05004741996526718
    2. ' else' → logprob: -3.5500473976135254
    3. '   ' → logprob: -4.925047397613525
    4. 'elif' → logprob: -5.300047397613525
    5. '
' → logprob: -5.550047397613525
    6. 'exit' (adapté à ' exit') → logprob: -6.675047397613525
    7. ' 
' → logprob: -6.800047397613525
    8. ')' → logprob: -8.050047874450684
    9. '    
' → logprob: -8.175047874450684
    10. ' exit' → logprob: -8.800047874450684

Token 177: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.10028237104415894
    2. '(' → logprob: -2.3502824306488037
    3. '()(' → logprob: -10.350282669067383
    4. '()
' → logprob: -10.725282669067383
    5. '()`' → logprob: -11.850282669067383
    6. '(
' → logprob: -12.350282669067383
    7. '`()' → logprob: -13.100282669067383
    8. '()

' → logprob: -13.475282669067383
    9. '(()' → logprob: -13.725282669067383
    10. '())' → logprob: -14.100282669067383

Token 178: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7484827041625977
    2. 'if' → logprob: -0.7484827041625977
    3. '
' → logprob: -4.248482704162598
    4. ' 
' → logprob: -4.623482704162598
    5. 'i' → logprob: -4.873482704162598
    6. '  
' → logprob: -5.623482704162598
    7. '    
' → logprob: -5.748482704162598
    8. 'n' → logprob: -5.998482704162598
    9. 'for' → logprob: -6.498482704162598
    10. 'def' → logprob: -6.623482704162598

Token 179: ' If' (ID: 1843)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6503992676734924
    2. '#' → logprob: -0.7753992676734924
    3. 'for' → logprob: -4.525399208068848
    4. 'def' → logprob: -5.650399208068848
    5. 'current' → logprob: -7.775399208068848
    6. 'possible' → logprob: -7.775399208068848
    7. 'segment' → logprob: -7.900399208068848
    8. 'next' → logprob: -8.275399208068848
    9. 'can' → logprob: -8.525399208068848
    10. 'path' → logprob: -8.525399208068848

Token 180: ' overt' (ID: 64535)
  Prédit: 'starting'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'starting' → logprob: -0.09784406423568726
    2. ' starting' → logprob: -2.597844123840332
    3. 'destination' → logprob: -4.847844123840332
    4. ' destination' → logprob: -5.597844123840332
    5. 'path' → logprob: -5.722844123840332
    6. ' path' → logprob: -6.347844123840332
    7. 'number' → logprob: -7.722844123840332
    8. '(' → logprob: -7.972844123840332
    9. ' (' → logprob: -7.972844123840332
    10. 'start' → logprob: -7.972844123840332

Token 181: 'aking' (ID: 5016)
  Prédit: 'aking'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aking' → logprob: -0.3140110671520233
    2. 'ake' → logprob: -1.3140110969543457
    3. 'ak' → logprob: -8.689010620117188
    4. 'aken' → logprob: -8.689010620117188
    5. 'akes' → logprob: -9.439010620117188
    6. ' ake' → logprob: -9.564010620117188
    7. '
' → logprob: -10.439010620117188
    8. '

' → logprob: -10.626510620117188
    9. '```' → logprob: -10.689010620117188
    10. 'a' → logprob: -10.876510620117188

Token 182: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.16679471731185913
    2. ' ' → logprob: -2.666794776916504
    3. '_' → logprob: -3.666794776916504
    4. ' requires' → logprob: -4.291794776916504
    5. '_possible' → logprob: -4.291794776916504
    6. ':' → logprob: -5.166794776916504
    7. '_required' → logprob: -5.291794776916504
    8. ' possible' → logprob: -5.916794776916504
    9. 'is' → logprob: -6.291794776916504
    10. ' required' → logprob: -6.291794776916504

Token 183: ' needed' (ID: 6118)
  Prédit: ' required'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' required' → logprob: -0.847074031829834
    2. 'required' → logprob: -1.847074031829834
    3. 'necessary' → logprob: -1.972074031829834
    4. ' necessary' → logprob: -2.097074031829834
    5. 'possible' → logprob: -2.847074031829834
    6. 'needed' → logprob: -3.222074031829834
    7. ' possible' → logprob: -3.847074031829834
    8. ' needed' → logprob: -3.847074031829834
    9. ' not' → logprob: -5.097074031829834
    10. 'not' → logprob: -5.972074031829834

Token 184: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.18859077990055084
    2. ':' → logprob: -2.1885907649993896
    3. ' and' → logprob: -4.063591003417969
    4. 'and' → logprob: -4.063591003417969
    5. 'if' → logprob: -4.063591003417969
    6. 'for' → logprob: -5.813591003417969
    7. 'to' → logprob: -6.813591003417969
    8. '   ' → logprob: -6.938591003417969
    9. ' for' → logprob: -6.938591003417969
    10. ' (' → logprob: -7.813591003417969

Token 185: 'person' (ID: 14118)
  Prédit: 'starting'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'starting' → logprob: -0.018568241968750954
    2. ' starting' → logprob: -4.26856803894043
    3. 'destination' → logprob: -5.51856803894043
    4. ' destination' → logprob: -8.39356803894043
    5. 'start' → logprob: -10.01856803894043
    6. 'd' → logprob: -10.64356803894043
    7. ')' → logprob: -10.76856803894043
    8. 'path' → logprob: -11.14356803894043
    9. '(destination' → logprob: -11.26856803894043
    10. 'b' → logprob: -11.51856803894043

Token 186: ' B' (ID: 418)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.1814011335372925
    2. 'b' → logprob: -1.4314011335372925
    3. 's' → logprob: -1.9314011335372925
    4. '_a' → logprob: -2.306401252746582
    5. '_b' → logprob: -2.431401252746582
    6. '_c' → logprob: -3.431401252746582
    7. 'c' → logprob: -3.806401252746582
    8. 'A' → logprob: -4.431401252746582
    9. ' a' → logprob: -4.431401252746582
    10. ' b' → logprob: -4.431401252746582

Token 187: ' needs' (ID: 4414)
  Prédit: ' needs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' needs' → logprob: -1.0745681524276733
    2. ' wants' → logprob: -1.3245681524276733
    3. 'needs' → logprob: -1.6995681524276733
    4. ' is' → logprob: -2.324568271636963
    5. ''s' → logprob: -3.074568271636963
    6. ' has' → logprob: -4.574568271636963
    7. 'is' → logprob: -4.699568271636963
    8. 'w' → logprob: -5.199568271636963
    9. ')' → logprob: -5.699568271636963
    10. ' to' → logprob: -5.824568271636963

Token 188: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.029757322743535042
    2. ' to' → logprob: -3.529757261276245
    3. ')' → logprob: -12.404757499694824
    4. 'the' → logprob: -14.404757499694824
    5. '_to' → logprob: -14.529757499694824
    6. 'a' → logprob: -15.279757499694824
    7. ' ' → logprob: -15.404757499694824
    8. '   ' → logprob: -15.654757499694824
    9. '>' → logprob: -15.904757499694824
    10. '

' → logprob: -16.029756546020508

Token 189: ' over' (ID: 1072)
  Prédit: ' pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pass' → logprob: -1.4196901321411133
    2. 'pass' → logprob: -1.4196901321411133
    3. 'o' → logprob: -1.7946901321411133
    4. ' over' → logprob: -1.9196901321411133
    5. 'over' → logprob: -2.4196901321411133
    6. 'move' → logprob: -2.9196901321411133
    7. ' move' → logprob: -3.1696901321411133
    8. 'go' → logprob: -5.044690132141113
    9. 'get' → logprob: -5.794690132141113
    10. ' get' → logprob: -6.544690132141113

Token 190: 'take' (ID: 45924)
  Prédit: 'take'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'take' → logprob: -0.0005355171160772443
    2. 'ake' → logprob: -8.25053596496582
    3. 'pass' → logprob: -9.12553596496582
    4. 'tak' → logprob: -9.37553596496582
    5. ' take' → logprob: -10.75053596496582
    6. 't' → logprob: -11.00053596496582
    7. 'come' → logprob: -11.12553596496582
    8. '```' → logprob: -11.62553596496582
    9. 'taking' → logprob: -12.00053596496582
    10. 'taken' → logprob: -12.87553596496582

Token 191: ' person' (ID: 1647)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0719631910324097
    2. 'person' → logprob: -1.0719631910324097
    3. ' person' → logprob: -1.8219631910324097
    4. '),' → logprob: -2.821963310241699
    5. ' at' → logprob: -3.821963310241699
    6. 'starting' → logprob: -3.821963310241699
    7. ',' → logprob: -4.946963310241699
    8. ' starting' → logprob: -4.946963310241699
    9. 'a' → logprob: -5.321963310241699
    10. 'A' → logprob: -5.446963310241699

Token 192: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0035550505854189396
    2. ' A' → logprob: -5.753554821014404
    3. ')' → logprob: -8.628555297851562
    4. 'a' → logprob: -9.628555297851562
    5. '),' → logprob: -10.253555297851562
    6. 'C' → logprob: -11.003555297851562
    7. ''' → logprob: -11.253555297851562
    8. ' ' → logprob: -11.503555297851562
    9. '_A' → logprob: -11.628555297851562
    10. '_a' → logprob: -12.003555297851562

Token 193: ')
' (ID: 446)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.39015617966651917
    2. ')' → logprob: -1.5151561498641968
    3. '),' → logprob: -2.7651562690734863
    4. ' ),' → logprob: -4.640156269073486
    5. ' )' → logprob: -4.765156269073486
    6. ' to' → logprob: -5.265156269073486
    7. ' and' → logprob: -5.640156269073486
    8. ' ,' → logprob: -5.640156269073486
    9. ' in' → logprob: -6.265156269073486
    10. ' for' → logprob: -6.390156269073486

Token 194: 'if' (ID: 366)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8187939524650574
    2. 'if' → logprob: -1.0687940120697021
    3. ' if' → logprob: -1.8187940120697021
    4. '   ' → logprob: -4.193793773651123
    5. ',' → logprob: -4.943793773651123
    6. ' ' → logprob: -5.068793773651123
    7. ' :' → logprob: -5.193793773651123
    8. ' and' → logprob: -5.318793773651123
    9. ':
' → logprob: -5.443793773651123
    10. ' ,' → logprob: -6.318793773651123

Token 195: ' destination' (ID: 13330)
  Prédit: 'destination'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'destination' → logprob: -0.8942984938621521
    2. ' destination' → logprob: -1.5192985534667969
    3. 'starting' → logprob: -1.5192985534667969
    4. ' starting' → logprob: -1.8942985534667969
    5. '(destination' → logprob: -6.269298553466797
    6. 'd' → logprob: -8.019298553466797
    7. 'path' → logprob: -8.019298553466797
    8. ' path' → logprob: -8.644298553466797
    9. ' (' → logprob: -10.019298553466797
    10. 'ending' → logprob: -10.269298553466797

Token 196: '_position' (ID: 23739)
  Prédit: '_position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_position' → logprob: -0.5481955409049988
    2. '_d' → logprob: -0.9231955409049988
    3. '_b' → logprob: -4.2981953620910645
    4. '_c' → logprob: -4.6731953620910645
    5. '_' → logprob: -6.4231953620910645
    6. '_a' → logprob: -9.923195838928223
    7. 'd' → logprob: -9.923195838928223
    8. 'Position' → logprob: -10.423195838928223
    9. 'position' → logprob: -10.548195838928223
    10. '```' → logprob: -11.298195838928223

Token 197: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.5770694613456726
    2. '_d' → logprob: -0.9520694613456726
    3. '_b' → logprob: -2.9520695209503174
    4. '_a' → logprob: -8.577069282531738
    5. '_' → logprob: -9.827069282531738
    6. '>' → logprob: -11.202069282531738
    7. '```' → logprob: -11.702069282531738
    8. 'd' → logprob: -11.827069282531738
    9. ' ' → logprob: -13.452069282531738
    10. '[' → logprob: -13.702069282531738

Token 198: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.18093371391296387
    2. ' >' → logprob: -1.8059337139129639
    3. '<' → logprob: -7.555933952331543
    4. ' <' → logprob: -7.930933952331543
    5. '>=' → logprob: -8.930933952331543
    6. ' >=' → logprob: -9.680933952331543
    7. '+' → logprob: -9.930933952331543
    8. ' ' → logprob: -10.805933952331543
    9. '   ' → logprob: -11.430933952331543
    10. '>

' → logprob: -12.930933952331543

Token 199: ' destination' (ID: 13330)
  Prédit: 'destination'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'destination' → logprob: -0.0017840604996308684
    2. ' destination' → logprob: -6.376783847808838
    3. 'starting' → logprob: -9.501784324645996
    4. 'd' → logprob: -13.001784324645996
    5. '(destination' → logprob: -13.126784324645996
    6. ' ' → logprob: -14.626784324645996
    7. ' starting' → logprob: -14.626784324645996
    8. '  ' → logprob: -15.001784324645996
    9. 'dest' → logprob: -15.001784324645996
    10. 'estination' → logprob: -15.126784324645996

Token 200: '_position' (ID: 23739)
  Prédit: '_position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_position' → logprob: -0.0047143264673650265
    2. 'position' → logprob: -5.379714488983154
    3. '_' → logprob: -10.004714012145996
    4. '_b' → logprob: -10.629714012145996
    5. 'Position' → logprob: -11.504714012145996
    6. '_positions' → logprob: -11.754714012145996
    7. 'b' → logprob: -13.629714012145996
    8. 'POSITION' → logprob: -14.129714012145996
    9. '_POSITION' → logprob: -14.254714012145996
    10. '_a' → logprob: -14.254714012145996

Token 201: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -0.034284528344869614
    2. 'd' → logprob: -3.7842845916748047
    3. '_b' → logprob: -4.784284591674805
    4. '_a' → logprob: -6.284284591674805
    5. 'a' → logprob: -8.159284591674805
    6. 'b' → logprob: -8.409284591674805
    7. '_' → logprob: -9.159284591674805
    8. '_c' → logprob: -9.159284591674805
    9. '```' → logprob: -11.409284591674805
    10. 'c' → logprob: -11.909284591674805

Token 202: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.09523928165435791
    2. ':' → logprob: -2.4702391624450684
    3. 'and' → logprob: -5.345239162445068
    4. ' :' → logprob: -6.595239162445068
    5. ' ' → logprob: -9.220239639282227
    6. '>' → logprob: -10.970239639282227
    7. ' or' → logprob: -11.970239639282227
    8. ':
' → logprob: -12.595239639282227
    9. '   ' → logprob: -13.220239639282227
    10. ')' → logprob: -13.595239639282227

Token 203: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4459041953086853
    2. '   ' → logprob: -1.32090425491333
    3. ' and' → logprob: -3.44590425491333
    4. ' if' → logprob: -4.07090425491333
    5. ':
' → logprob: -4.32090425491333
    6. '
' → logprob: -5.19590425491333
    7. 'if' → logprob: -5.44590425491333
    8. '  ' → logprob: -5.82090425491333
    9. '    
' → logprob: -5.94590425491333
    10. ' #' → logprob: -6.19590425491333

Token 204: ' overt' (ID: 64535)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.1578431129455566
    2. 'if' → logprob: -1.4078431129455566
    3. 'for' → logprob: -1.4078431129455566
    4. 'def' → logprob: -2.7828431129455566
    5. ' for' → logprob: -3.2828431129455566
    6. 'segment' → logprob: -3.6578431129455566
    7. '   ' → logprob: -3.9078431129455566
    8. 'path' → logprob: -4.282843112945557
    9. ' if' → logprob: -4.407843112945557
    10. ' #' → logprob: -5.532843112945557

Token 205: 'aking' (ID: 5016)
  Prédit: 'aking'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aking' → logprob: -0.25224733352661133
    2. 'ake' → logprob: -1.5022473335266113
    3. 'aken' → logprob: -8.877246856689453
    4. 'ak' → logprob: -9.752246856689453
    5. ' ake' → logprob: -10.377246856689453
    6. 'a' → logprob: -10.877246856689453
    7. ' aking' → logprob: -11.627246856689453
    8. 'akin' → logprob: -12.064746856689453
    9. 'akings' → logprob: -12.127246856689453
    10. '
' → logprob: -12.252246856689453

Token 206: '_possible' (ID: 185849)
  Prédit: '_needed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_needed' → logprob: -0.6913117170333862
    2. '_possible' → logprob: -1.1913117170333862
    3. '_required' → logprob: -1.6913117170333862
    4. '_space' → logprob: -5.941311836242676
    5. '_' → logprob: -6.191311836242676
    6. '_path' → logprob: -6.816311836242676
    7. '_positions' → logprob: -7.066311836242676
    8. '_area' → logprob: -7.316311836242676
    9. '=' → logprob: -7.316311836242676
    10. '_position' → logprob: -7.691311836242676

Token 207: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22543364763259888
    2. '=' → logprob: -1.600433588027954
    3. '=True' → logprob: -12.100433349609375
    4. '   ' → logprob: -12.475433349609375
    5. '=False' → logprob: -13.225433349609375
    6. 'if' → logprob: -13.475433349609375
    7. 'def' → logprob: -13.600433349609375
    8. ':' → logprob: -13.600433349609375
    9. ' ' → logprob: -13.600433349609375
    10. '  ' → logprob: -13.975433349609375

Token 208: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.5849689245223999
    2. 'any' → logprob: -1.0849689245224
    3. 'check' → logprob: -3.3349690437316895
    4. ' any' → logprob: -3.4599690437316895
    5. ' False' → logprob: -3.5849690437316895
    6. 'True' → logprob: -5.5849690437316895
    7. ' check' → logprob: -6.3349690437316895
    8. '(any' → logprob: -6.3349690437316895
    9. '(False' → logprob: -6.7099690437316895
    10. 'path' → logprob: -8.334968566894531

Token 209: '
' (ID: 198)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3760632574558258
    2. '
' → logprob: -2.001063346862793
    3. 'for' → logprob: -2.126063346862793
    4. '<|end|>' → logprob: -3.251063346862793
    5. '   ' → logprob: -4.876063346862793
    6. ' if' → logprob: -6.001063346862793
    7. ' and' → logprob: -6.501063346862793
    8. ' in' → logprob: -6.626063346862793
    9. ':' → logprob: -7.126063346862793
    10. ':
' → logprob: -7.251063346862793

Token 210: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6507512927055359
    2. 'for' → logprob: -0.7757512927055359
    3. '
' → logprob: -4.275751113891602
    4. '   ' → logprob: -7.150751113891602
    5. 'else' → logprob: -7.525751113891602
    6. '<|end|>' → logprob: -7.775751113891602
    7. '    
' → logprob: -8.025751113891602
    8. '#' → logprob: -8.150751113891602
    9. ' and' → logprob: -8.150751113891602
    10. 'if' → logprob: -8.400751113891602

Token 211: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0019885902293026447
    2. ' for' → logprob: -6.251988410949707
    3. 'segment' → logprob: -10.626988410949707
    4. 'range' → logprob: -11.001988410949707
    5. 'found' → logprob: -12.001988410949707
    6. '   ' → logprob: -12.126988410949707
    7. '#' → logprob: -13.376988410949707
    8. 'path' → logprob: -13.876988410949707
    9. 'if' → logprob: -14.001988410949707
    10. 'n' → logprob: -14.376988410949707

Token 212: ' position' (ID: 4010)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.23597389459609985
    2. ' i' → logprob: -2.735973834991455
    3. 'range' → logprob: -2.735973834991455
    4. ' range' → logprob: -3.235973834991455
    5. 'position' → logprob: -3.985973834991455
    6. 'pos' → logprob: -4.735973834991455
    7. ' position' → logprob: -4.735973834991455
    8. 'index' → logprob: -5.985973834991455
    9. 'current' → logprob: -7.235973834991455
    10. ' index' → logprob: -7.360973834991455

Token 213: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03369642049074173
    2. 'in' → logprob: -3.408696413040161
    3. 'range' → logprob: -11.158696174621582
    4. 'position' → logprob: -11.783696174621582
    5. 'd' → logprob: -12.533696174621582
    6. 'starting' → logprob: -12.658696174621582
    7. '_in' → logprob: -13.158696174621582
    8. 's' → logprob: -13.283696174621582
    9. 'In' → logprob: -13.283696174621582
    10. '_' → logprob: -13.408696174621582

Token 214: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.00408884696662426
    2. 'range' → logprob: -5.504088878631592
    3. '(range' → logprob: -11.754088401794434
    4. '   ' → logprob: -13.629088401794434
    5. ' ' → logprob: -14.379088401794434
    6. '	range' → logprob: -14.504088401794434
    7. '  ' → logprob: -15.754088401794434
    8. ' ' → logprob: -18.00408935546875
    9. '_range' → logprob: -18.25408935546875
    10. '    ' → logprob: -18.37908935546875

Token 215: '(start' (ID: 20008)
  Prédit: '(start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(start' → logprob: -0.0508744902908802
    2. '(destination' → logprob: -3.0508744716644287
    3. 'starting' → logprob: -6.675874710083008
    4. '(min' → logprob: -7.425874710083008
    5. '(max' → logprob: -8.300874710083008
    6. 'destination' → logprob: -9.425874710083008
    7. '(' → logprob: -10.425874710083008
    8. 'start' → logprob: -10.800874710083008
    9. ' starting' → logprob: -11.050874710083008
    10. ' (' → logprob: -11.550874710083008

Token 216: 'ing' (ID: 289)
  Prédit: '(start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(start' → logprob: -1.0743684768676758
    2. 'starting' → logprob: -1.0743684768676758
    3. '_position' → logprob: -1.9493684768676758
    4. 'ing' → logprob: -2.074368476867676
    5. 'position' → logprob: -3.324368476867676
    6. 'start' → logprob: -5.699368476867676
    7. '+' → logprob: -6.199368476867676
    8. '(' → logprob: -6.449368476867676
    9. '(destination' → logprob: -6.574368476867676
    10. '(position' → logprob: -6.824368476867676

Token 217: '_position' (ID: 23739)
  Prédit: '_position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_position' → logprob: -0.00010771531378850341
    2. '_b' → logprob: -9.625107765197754
    3. '_d' → logprob: -10.750107765197754
    4. '_positions' → logprob: -11.875107765197754
    5. '_c' → logprob: -12.375107765197754
    6. 'position' → logprob: -12.375107765197754
    7. 'd' → logprob: -14.000107765197754
    8. '_a' → logprob: -14.000107765197754
    9. 'b' → logprob: -14.375107765197754
    10. '_' → logprob: -14.375107765197754

Token 218: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.08146096765995026
    2. '_d' → logprob: -2.956460952758789
    3. '_a' → logprob: -3.956460952758789
    4. '_c' → logprob: -4.956460952758789
    5. 'b' → logprob: -10.456460952758789
    6. 'd' → logprob: -11.206460952758789
    7. 'a' → logprob: -11.956460952758789
    8. '_' → logprob: -13.456460952758789
    9. '
' → logprob: -14.331460952758789
    10. 'c' → logprob: -14.393960952758789

Token 219: ',' (ID: 11)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.23700185120105743
    2. '-' → logprob: -1.612001895904541
    3. ',' → logprob: -5.112001895904541
    4. ' +' → logprob: -5.987001895904541
    5. '+' → logprob: -6.112001895904541
    6. ' ,' → logprob: -7.237001895904541
    7. ' ' → logprob: -10.112001419067383
    8. '   ' → logprob: -12.237001419067383
    9. '  ' → logprob: -13.362001419067383
    10. ',start' → logprob: -13.987001419067383

Token 220: ' destination' (ID: 13330)
  Prédit: 'destination'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'destination' → logprob: -0.1607414186000824
    2. ' destination' → logprob: -1.9107414484024048
    3. 'starting' → logprob: -7.910741329193115
    4. '(destination' → logprob: -9.410741806030273
    5. 'ending' → logprob: -10.535741806030273
    6. ' starting' → logprob: -11.035741806030273
    7. '   ' → logprob: -11.410741806030273
    8. 'd' → logprob: -11.910741806030273
    9. ' ' → logprob: -13.285741806030273
    10. 'dest' → logprob: -13.535741806030273

Token 221: '_position' (ID: 23739)
  Prédit: '_d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -0.19717083871364594
    2. '_position' → logprob: -2.1971707344055176
    3. '_c' → logprob: -2.8221707344055176
    4. 'd' → logprob: -5.197170734405518
    5. '_b' → logprob: -6.822170734405518
    6. 'position' → logprob: -7.197170734405518
    7. 'c' → logprob: -7.947170734405518
    8. '_a' → logprob: -8.072171211242676
    9. '_e' → logprob: -9.822171211242676
    10. '_positions' → logprob: -10.322171211242676

Token 222: '_d' (ID: 1565)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.35667112469673157
    2. '_d' → logprob: -1.2316710948944092
    3. '_a' → logprob: -5.356671333312988
    4. '_b' → logprob: -5.731671333312988
    5. 'd' → logprob: -9.231671333312988
    6. 'c' → logprob: -9.231671333312988
    7. 'a' → logprob: -11.481671333312988
    8. '_e' → logprob: -12.731671333312988
    9. '-d' → logprob: -12.856671333312988
    10. 'b' → logprob: -12.919171333312988

Token 223: ' +' (ID: 659)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.9277153015136719
    2. '+' → logprob: -1.3027153015136719
    3. ' +' → logprob: -1.4277153015136719
    4. '-' → logprob: -2.427715301513672
    5. '):' → logprob: -5.677715301513672
    6. '):
' → logprob: -7.552715301513672
    7. ' ' → logprob: -8.052715301513672
    8. ')' → logprob: -8.302715301513672
    9. ' ):' → logprob: -9.552715301513672
    10. ' ):
' → logprob: -11.302715301513672

Token 224: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.31593620777130127
    2. '1' → logprob: -1.3159362077713013
    3. ' ' → logprob: -5.940936088562012
    4. '3' → logprob: -10.440936088562012
    5. ')' → logprob: -11.815936088562012
    6. '
' → logprob: -13.565936088562012
    7. '(' → logprob: -13.690936088562012
    8. '   ' → logprob: -14.690936088562012
    9. '```' → logprob: -15.315936088562012
    10. '  ' → logprob: -15.378436088562012

Token 225: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.10025638341903687
    2. '1' → logprob: -2.3502564430236816
    3. '3' → logprob: -10.225255966186523
    4. ' ' → logprob: -11.725255966186523
    5. '(' → logprob: -13.350255966186523
    6. '
' → logprob: -14.350255966186523
    7. '```' → logprob: -14.412755966186523
    8. ')' → logprob: -14.537755966186523
    9. '   ' → logprob: -14.912755966186523
    10. '0' → logprob: -15.100255966186523

Token 226: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.05446026846766472
    2. '):
' → logprob: -3.054460287094116
    3. '+' → logprob: -6.054460048675537
    4. ' -' → logprob: -6.679460048675537
    5. '-' → logprob: -6.929460048675537
    6. ' ):' → logprob: -7.554460048675537
    7. ':' → logprob: -8.179460525512695
    8. ' +' → logprob: -8.679460525512695
    9. ')' → logprob: -9.304460525512695
    10. ' ):
' → logprob: -9.804460525512695

Token 227: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010614207945764065
    2. '   ' → logprob: -5.260614395141602
    3. ' if' → logprob: -5.510614395141602
    4. '
' → logprob: -7.135614395141602
    5. 'if' → logprob: -8.510614395141602
    6. '           ' → logprob: -9.635614395141602
    7. '    ' → logprob: -9.885614395141602
    8. '      ' → logprob: -10.135614395141602
    9. '        
' → logprob: -10.510614395141602
    10. ' ' → logprob: -10.635614395141602

Token 228: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5856624841690063
    2. 'if' (adapté à ' if') → logprob: -1.4606624841690063
    3. '       ' → logprob: -1.7106624841690063
    4. '   ' → logprob: -4.210662364959717
    5. '           ' → logprob: -4.335662364959717
    6. '
' → logprob: -6.085662364959717
    7. '               ' → logprob: -10.210662841796875
    8. '	if' → logprob: -10.585662841796875
    9. '  ' → logprob: -10.960662841796875
    10. '        
' → logprob: -11.085662841796875

Token 229: ' path' (ID: 3104)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.4973997175693512
    2. ' path' → logprob: -0.9973996877670288
    3. ' (' → logprob: -4.497399806976318
    4. '(path' → logprob: -4.497399806976318
    5. '(' → logprob: -7.747399806976318
    6. ' ' → logprob: -8.62239933013916
    7. '   ' → logprob: -10.24739933013916
    8. '(
' → logprob: -10.49739933013916
    9. '(not' → logprob: -11.12239933013916
    10. '  ' → logprob: -11.74739933013916

Token 230: '_with' (ID: 14161)
  Prédit: '_with'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_with' → logprob: -0.02108188532292843
    2. '[position' → logprob: -3.8960819244384766
    3. 'with' → logprob: -7.771081924438477
    4. 'With' → logprob: -9.646081924438477
    5. '[' → logprob: -10.396081924438477
    6. '_WITH' → logprob: -12.271081924438477
    7. '   ' → logprob: -12.646081924438477
    8. '_[' → logprob: -13.146081924438477
    9. '(position' → logprob: -13.396081924438477
    10. '_for' → logprob: -13.771081924438477

Token 231: '_bound' (ID: 47558)
  Prédit: '[position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[position' → logprob: -0.15369129180908203
    2. '_bound' → logprob: -2.528691291809082
    3. 'position' → logprob: -3.278691291809082
    4. 'bound' → logprob: -3.778691291809082
    5. '[' → logprob: -6.778691291809082
    6. 'positions' → logprob: -8.403691291809082
    7. '(position' → logprob: -8.653691291809082
    8. 'Bound' → logprob: -8.903691291809082
    9. ' boundaries' → logprob: -8.903691291809082
    10. '_positions' → logprob: -10.028691291809082

Token 232: 'aries' (ID: 8526)
  Prédit: 'aries'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aries' → logprob: -0.0009069374646060169
    2. 'ar' → logprob: -8.250906944274902
    3. 'ries' → logprob: -8.500906944274902
    4. 'ary' → logprob: -8.500906944274902
    5. '_bound' → logprob: -9.875906944274902
    6. 'bound' → logprob: -10.000906944274902
    7. 'ari' → logprob: -10.125906944274902
    8. '[position' → logprob: -10.500906944274902
    9. 'positions' → logprob: -10.625906944274902
    10. '[' → logprob: -11.375906944274902

Token 233: '[position' (ID: 75596)
  Prédit: '[position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[position' → logprob: -3.762356209335849e-05
    2. '[' → logprob: -10.37503719329834
    3. '[pos' → logprob: -12.62503719329834
    4. 'position' → logprob: -13.62503719329834
    5. ' [' → logprob: -13.87503719329834
    6. '   ' → logprob: -14.62503719329834
    7. '[current' → logprob: -15.87503719329834
    8. '```' → logprob: -16.625038146972656
    9. '[path' → logprob: -16.750038146972656
    10. '(position' → logprob: -16.875038146972656

Token 234: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.43432947993278503
    2. ' -' → logprob: -1.0593295097351074
    3. ']' → logprob: -5.434329509735107
    4. '+' → logprob: -7.559329509735107
    5. ']==' → logprob: -8.05932903289795
    6. '   ' → logprob: -8.80932903289795
    7. ' +' → logprob: -9.43432903289795
    8. '[position' → logprob: -9.93432903289795
    9. '==' → logprob: -10.05932903289795
    10. ' ' → logprob: -10.55932903289795

Token 235: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003385414369404316
    2. '2' → logprob: -5.753385543823242
    3. ' ' → logprob: -8.503385543823242
    4. '   ' → logprob: -13.003385543823242
    5. '```' → logprob: -13.940885543823242
    6. '>' → logprob: -14.440885543823242
    7. '  ' → logprob: -14.878385543823242
    8. '-' → logprob: -16.190885543823242
    9. ')' → logprob: -16.565885543823242
    10. '
' → logprob: -16.690885543823242

Token 236: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00016229959146585315
    2. '2' → logprob: -8.750162124633789
    3. ' ' → logprob: -12.750162124633789
    4. '   ' → logprob: -14.875162124633789
    5. '
' → logprob: -15.875162124633789
    6. '

' → logprob: -16.12516212463379
    7. '0' → logprob: -16.75016212463379
    8. '  ' → logprob: -17.00016212463379
    9. '-' → logprob: -17.06266212463379
    10. '```' → logprob: -17.43766212463379

Token 237: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2183970808982849
    2. ']==' → logprob: -1.9683971405029297
    3. '==' → logprob: -3.0933971405029297
    4. ' ==' → logprob: -5.71839714050293
    5. ':' → logprob: -6.21839714050293
    6. '   ' → logprob: -6.46839714050293
    7. ']=='' → logprob: -6.59339714050293
    8. ']!=' → logprob: -7.34339714050293
    9. ':path' → logprob: -7.59339714050293
    10. ' ]' → logprob: -8.09339714050293

Token 238: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.14795741438865662
    2. ' ==' → logprob: -2.0229573249816895
    3. '   ' → logprob: -6.5229573249816895
    4. '!=' → logprob: -6.6479573249816895
    5. ' ' → logprob: -7.0229573249816895
    6. ',' → logprob: -7.5229573249816895
    7. ' !=' → logprob: -8.272957801818848
    8. '  ' → logprob: -8.897957801818848
    9. '=='' → logprob: -9.522957801818848
    10. '    ' → logprob: -9.647957801818848

Token 239: ' '.'' (ID: 64762)
  Prédit: ''.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''.' → logprob: -0.00010354319238103926
    2. ' '.'' → logprob: -9.750103950500488
    3. ''' → logprob: -10.375103950500488
    4. '.' → logprob: -11.875103950500488
    5. '"."' → logprob: -12.000103950500488
    6. '('.')' → logprob: -15.000103950500488
    7. '.'.' → logprob: -15.875103950500488
    8. '".' → logprob: -16.000102996826172
    9. '...' → logprob: -16.875102996826172
    10. '`.`' → logprob: -17.375102996826172

Token 240: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.5759434103965759
    2. 'and' → logprob: -0.8259434103965759
    3. '   ' → logprob: -14.075942993164062
    4. ''' → logprob: -14.200942993164062
    5. ' ' → logprob: -14.700942993164062
    6. '    ' → logprob: -14.825942993164062
    7. ',' → logprob: -15.200942993164062
    8. '.' → logprob: -15.200942993164062
    9. '           ' → logprob: -15.200942993164062
    10. ')' → logprob: -15.450942993164062

Token 241: ' path' (ID: 3104)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.009808625094592571
    2. ' path' → logprob: -4.634808540344238
    3. '   ' → logprob: -10.134808540344238
    4. ' ' → logprob: -12.759808540344238
    5. '
' → logprob: -13.009808540344238
    6. 'position' → logprob: -13.384808540344238
    7. '	path' → logprob: -13.384808540344238
    8. '  ' → logprob: -13.884808540344238
    9. '(path' → logprob: -14.259808540344238
    10. '    ' → logprob: -14.759808540344238

Token 242: '_with' (ID: 14161)
  Prédit: '_with'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_with' → logprob: -9.13388703338569e-06
    2. 'with' → logprob: -11.875009536743164
    3. '[position' → logprob: -13.625009536743164
    4. 'With' → logprob: -14.500009536743164
    5. '_WITH' → logprob: -14.875009536743164
    6. ' with' → logprob: -17.625009536743164
    7. '[' → logprob: -17.750009536743164
    8. '_With' → logprob: -18.375009536743164
    9. '	with' → logprob: -18.500009536743164
    10. '_for' → logprob: -18.875009536743164

Token 243: '_bound' (ID: 47558)
  Prédit: '_bound'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bound' → logprob: -0.37430858612060547
    2. 'bound' → logprob: -1.7493085861206055
    3. 'path' → logprob: -2.6243085861206055
    4. '_with' → logprob: -3.1243085861206055
    5. 'with' → logprob: -3.9993085861206055
    6. ' path' → logprob: -6.9993085861206055
    7. '[path' → logprob: -7.1243085861206055
    8. 'boundary' → logprob: -7.2493085861206055
    9. ' boundaries' → logprob: -7.4993085861206055
    10. 'bounded' → logprob: -8.874308586120605

Token 244: 'aries' (ID: 8526)
  Prédit: 'aries'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aries' → logprob: -0.0002214172709500417
    2. 'ar' → logprob: -9.250221252441406
    3. 'ari' → logprob: -9.625221252441406
    4. 'ries' → logprob: -10.625221252441406
    5. '_bound' → logprob: -11.000221252441406
    6. 'bound' → logprob: -12.250221252441406
    7. 'aires' → logprob: -12.875221252441406
    8. 'with' → logprob: -13.000221252441406
    9. 'ies' → logprob: -13.375221252441406
    10. 'uries' → logprob: -13.500221252441406

Token 245: '[position' (ID: 75596)
  Prédit: '[position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[position' → logprob: -1.1279553291387856e-05
    2. '[' → logprob: -11.500011444091797
    3. ' [' → logprob: -14.625011444091797
    4. '[path' → logprob: -15.375011444091797
    5. 'position' → logprob: -15.750011444091797
    6. '[property' → logprob: -15.875011444091797
    7. '   ' → logprob: -17.000011444091797
    8. '[
' → logprob: -17.250011444091797
    9. '(position' → logprob: -18.000011444091797
    10. '```' → logprob: -18.250011444091797

Token 246: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.43477654457092285
    2. '+' → logprob: -1.5597765445709229
    3. ' +' → logprob: -2.184776544570923
    4. '[position' → logprob: -3.934776544570923
    5. ']==' → logprob: -5.434776306152344
    6. ' ]' → logprob: -5.934776306152344
    7. '   ' → logprob: -6.434776306152344
    8. '[' → logprob: -7.309776306152344
    9. '-' → logprob: -8.434776306152344
    10. '```' → logprob: -8.559776306152344

Token 247: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.020670579746365547
    2. ' ==' → logprob: -3.8956706523895264
    3. ']==' → logprob: -9.520670890808105
    4. ']' → logprob: -11.270670890808105
    5. '===' → logprob: -11.770670890808105
    6. '   ' → logprob: -12.020670890808105
    7. ')' → logprob: -12.145670890808105
    8. '  ' → logprob: -12.395670890808105
    9. ')==' → logprob: -12.770670890808105
    10. '...' → logprob: -12.895670890808105

Token 248: ' '.'' (ID: 64762)
  Prédit: ''.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''.' → logprob: -0.00023488728038500994
    2. ' '.'' → logprob: -8.375234603881836
    3. '.' → logprob: -13.250234603881836
    4. '"."' → logprob: -13.375234603881836
    5. ''' → logprob: -14.375234603881836
    6. '('.')' → logprob: -15.125234603881836
    7. '','' → logprob: -16.250234603881836
    8. '...' → logprob: -17.125234603881836
    9. ''#' → logprob: -17.375234603881836
    10. '('.' → logprob: -18.625234603881836

Token 249: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.029755467548966408
    2. 'and' → logprob: -3.5297553539276123
    3. ' ' → logprob: -12.529755592346191
    4. '            ' → logprob: -15.154755592346191
    5. '    ' → logprob: -15.279755592346191
    6. '           ' → logprob: -15.404755592346191
    7. '   ' → logprob: -16.154754638671875
    8. '        ' → logprob: -16.404754638671875
    9. '[' → logprob: -16.779754638671875
    10. '```' → logprob: -16.779754638671875

Token 250: ' path' (ID: 3104)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.0339142344892025
    2. ' path' → logprob: -3.40891432762146
    3. '   ' → logprob: -9.283914566040039
    4. '       ' → logprob: -9.408914566040039
    5. '           ' → logprob: -9.783914566040039
    6. ' ' → logprob: -11.783914566040039
    7. '	path' → logprob: -12.408914566040039
    8. '    ' → logprob: -12.658914566040039
    9. '(path' → logprob: -12.658914566040039
    10. '[path' → logprob: -13.033914566040039

Token 251: '_with' (ID: 14161)
  Prédit: '_with'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_with' → logprob: -1.1279553291387856e-05
    2. '[position' → logprob: -12.125011444091797
    3. 'With' → logprob: -12.500011444091797
    4. '_WITH' → logprob: -14.125011444091797
    5. 'with' → logprob: -14.375011444091797
    6. '_to' → logprob: -16.250011444091797
    7. '_[' → logprob: -16.375011444091797
    8. ' with' → logprob: -16.375011444091797
    9. '[' → logprob: -16.500011444091797
    10. '```' → logprob: -16.500011444091797

Token 252: '_bound' (ID: 47558)
  Prédit: '_bound'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bound' → logprob: -0.02069358341395855
    2. 'bound' → logprob: -3.89569354057312
    3. 'path' → logprob: -9.7706937789917
    4. '_with' → logprob: -9.7706937789917
    5. 'with' → logprob: -10.6456937789917
    6. 'Bound' → logprob: -12.7706937789917
    7. 'boundary' → logprob: -12.7706937789917
    8. ' boundaries' → logprob: -13.6456937789917
    9. '_boundary' → logprob: -13.6456937789917
    10. 'position' → logprob: -13.8956937789917

Token 253: 'aries' (ID: 8526)
  Prédit: 'aries'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aries' → logprob: -0.00014585316239390522
    2. 'ries' → logprob: -9.37514591217041
    3. 'ar' → logprob: -11.12514591217041
    4. 'ari' → logprob: -11.37514591217041
    5. 'ories' → logprob: -11.62514591217041
    6. 'ies' → logprob: -11.75014591217041
    7. 'a' → logprob: -12.25014591217041
    8. 'anies' → logprob: -12.37514591217041
    9. 'ancies' → logprob: -12.87514591217041
    10. 'eries' → logprob: -13.87514591217041

Token 254: '[position' (ID: 75596)
  Prédit: '[position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[position' → logprob: -1.8312570318812504e-05
    2. '[' → logprob: -11.000018119812012
    3. '[path' → logprob: -15.375018119812012
    4. 'position' → logprob: -15.375018119812012
    5. '[property' → logprob: -15.625018119812012
    6. '[
' → logprob: -15.875018119812012
    7. '(position' → logprob: -16.000019073486328
    8. ' [' → logprob: -16.125019073486328
    9. '       ' → logprob: -16.125019073486328
    10. '[level' → logprob: -16.250019073486328

Token 255: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.11023236811161041
    2. '[position' → logprob: -3.235232353210449
    3. '[' → logprob: -3.985232353210449
    4. ']' → logprob: -3.985232353210449
    5. ' +' → logprob: -4.235232353210449
    6. 's' → logprob: -5.985232353210449
    7. ''' → logprob: -5.985232353210449
    8. '`' → logprob: -6.110232353210449
    9. '```' → logprob: -6.235232353210449
    10. 'position' → logprob: -6.860232353210449

Token 256: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00795568898320198
    2. ''.' → logprob: -4.882955551147461
    3. ' ' → logprob: -8.382955551147461
    4. '.' → logprob: -10.007955551147461
    5. ''' → logprob: -10.257955551147461
    6. ']' → logprob: -11.007955551147461
    7. ' '.'' → logprob: -12.257955551147461
    8. '('.')' → logprob: -12.507955551147461
    9. '']' → logprob: -12.757955551147461
    10. '   ' → logprob: -13.382955551147461

Token 257: '1' (ID: 16)
  Prédit: ''.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''.' → logprob: -0.002879999577999115
    2. '.' → logprob: -6.252880096435547
    3. '1' → logprob: -7.252880096435547
    4. ' '.'' → logprob: -8.627880096435547
    5. '('.')' → logprob: -10.002880096435547
    6. ' ' → logprob: -11.752880096435547
    7. ''' → logprob: -12.877880096435547
    8. '['' → logprob: -13.502880096435547
    9. '   ' → logprob: -14.127880096435547
    10. '0' → logprob: -14.252880096435547

Token 258: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0330357626080513
    2. ']==' → logprob: -4.033035755157471
    3. ' ==' → logprob: -4.658035755157471
    4. '==' → logprob: -5.658035755157471
    5. '']' → logprob: -7.158035755157471
    6. ']=='' → logprob: -7.658035755157471
    7. ' ]' → logprob: -7.783035755157471
    8. '<|end|>' → logprob: -10.533036231994629
    9. '=='' → logprob: -10.783036231994629
    10. '']=='' → logprob: -11.158036231994629

Token 259: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.6356800198554993
    2. '==' → logprob: -0.7606800198554993
    3. '=='' → logprob: -6.510680198669434
    4. ']==' → logprob: -6.635680198669434
    5. ']' → logprob: -9.010680198669434
    6. ' =='' → logprob: -9.760680198669434
    7. ']=='' → logprob: -10.760680198669434
    8. '[' → logprob: -11.010680198669434
    9. ')==' → logprob: -11.885680198669434
    10. '=' → logprob: -12.010680198669434

Token 260: ' '.' (ID: 12662)
  Prédit: ''.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''.' → logprob: -0.0005624461336992681
    2. ' '.'' → logprob: -7.50056266784668
    3. ''' → logprob: -13.00056266784668
    4. '"."' → logprob: -13.00056266784668
    5. '('.')' → logprob: -13.12556266784668
    6. ' '.' → logprob: -13.87556266784668
    7. '.' → logprob: -14.25056266784668
    8. ''#' → logprob: -15.12556266784668
    9. '('.' → logprob: -15.37556266784668
    10. '".' → logprob: -15.87556266784668

Token 261: '':
' (ID: 7669)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0193297378718853
    2. ':
' → logprob: -4.76932954788208
    3. '):' → logprob: -4.76932954788208
    4. '):
' → logprob: -6.76932954788208
    5. '':' → logprob: -7.14432954788208
    6. ''):
' → logprob: -9.894330024719238
    7. ''):' → logprob: -10.019330024719238
    8. ')' → logprob: -10.144330024719238
    9. ']:' → logprob: -10.519330024719238
    10. '<|end|>' → logprob: -10.894330024719238

Token 262: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1608574539422989
    2. '           ' → logprob: -1.9108574390411377
    3. '               ' → logprob: -8.160857200622559
    4. '   ' → logprob: -9.035857200622559
    5. ' overt' → logprob: -9.910857200622559
    6. '
' → logprob: -10.410857200622559
    7. ',' → logprob: -10.410857200622559
    8. '<|end|>' → logprob: -11.285857200622559
    9. '        
' → logprob: -11.410857200622559
    10. '#' → logprob: -11.660857200622559

Token 263: ' overt' (ID: 64535)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.18146568536758423
    2. ' overt' → logprob: -2.4314656257629395
    3. '       ' → logprob: -2.9314656257629395
    4. '           ' → logprob: -4.3064656257629395
    5. '   ' → logprob: -4.6814656257629395
    6. ' o' → logprob: -7.1814656257629395
    7. '               ' → logprob: -7.4314656257629395
    8. '
' → logprob: -7.9314656257629395
    9. '	o' → logprob: -9.931466102600098
    10. ' over' → logprob: -10.931466102600098

Token 264: 'aking' (ID: 5016)
  Prédit: 'aking'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aking' → logprob: -0.00118368084076792
    2. 'taking' → logprob: -6.75118350982666
    3. 'a' → logprob: -12.37618350982666
    4. ' aking' → logprob: -12.62618350982666
    5. 'ak' → logprob: -13.37618350982666
    6. 't' → logprob: -13.75118350982666
    7. ' taking' → logprob: -13.87618350982666
    8. '-taking' → logprob: -14.50118350982666
    9. ' ' → logprob: -14.75118350982666
    10. 'aken' → logprob: -15.00118350982666

Token 265: '_possible' (ID: 185849)
  Prédit: '_possible'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_possible' → logprob: -1.6240566083070007e-06
    2. 'possible' → logprob: -13.625001907348633
    3. '_' → logprob: -15.125001907348633
    4. 'Possible' → logprob: -18.875001907348633
    5. '_allowed' → logprob: -19.125001907348633
    6. ' possible' → logprob: -19.375001907348633
    7. '_available' → logprob: -19.750001907348633
    8. '_pos' → logprob: -20.375001907348633
    9. '=' → logprob: -20.625001907348633
    10. ' _' → logprob: -20.875001907348633

Token 266: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1602545976638794
    2. ' =' → logprob: -1.9102545976638794
    3. '=True' → logprob: -10.41025447845459
    4. '   ' → logprob: -15.78525447845459
    5. '=
' → logprob: -16.785255432128906
    6. 's' → logprob: -17.035255432128906
    7. '           ' → logprob: -17.160255432128906
    8. ' ' → logprob: -17.285255432128906
    9. '               ' → logprob: -17.910255432128906
    10. ' =
' → logprob: -18.660255432128906

Token 267: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -3.7697225252486533e-06
    2. ' True' → logprob: -12.500003814697266
    3. 'true' → logprob: -20.500003814697266
    4. '(True' → logprob: -21.875003814697266
    5. '=True' → logprob: -22.250003814697266
    6. '   ' → logprob: -22.625003814697266
    7. 'Yes' → logprob: -23.875003814697266
    8. 'Tr' → logprob: -24.875003814697266
    9. 'False' → logprob: -24.875003814697266
    10. 'TRUE' → logprob: -25.125003814697266

Token 268: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00012356207298580557
    2. '   ' → logprob: -9.500123977661133
    3. '		' → logprob: -10.875123977661133
    4. '               ' → logprob: -11.000123977661133
    5. '       ' → logprob: -12.250123977661133
    6. '	       ' → logprob: -13.750123977661133
    7. ' break' → logprob: -14.000123977661133
    8. '          ' → logprob: -14.000123977661133
    9. 'break' → logprob: -14.125123977661133
    10. '            ' → logprob: -14.250123977661133

Token 269: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0003924231859855354
    2. '   ' → logprob: -8.000391960144043
    3. '		' → logprob: -11.000391960144043
    4. '       ' → logprob: -11.500391960144043
    5. 'if' → logprob: -11.625391960144043
    6. '               ' → logprob: -11.875391960144043
    7. 'break' → logprob: -12.500391960144043
    8. ' if' → logprob: -13.250391960144043
    9. ' break' → logprob: -13.250391960144043
    10. '          ' → logprob: -13.625391960144043

Token 270: ' break' (ID: 2338)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0033953944221138954
    2. 'break' (adapté à ' break') → logprob: -5.8783955574035645
    3. ' break' → logprob: -7.5033955574035645
    4. '   ' → logprob: -11.003395080566406
    5. '		' → logprob: -11.878395080566406
    6. '       ' → logprob: -12.128395080566406
    7. '               ' → logprob: -12.378395080566406
    8. '	break' → logprob: -13.003395080566406
    9. 'print' → logprob: -13.503395080566406
    10. '          ' → logprob: -14.628395080566406

Token 271: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.34457287192344666
    2. 'if' → logprob: -1.344572901725769
    3. '   ' → logprob: -3.9695727825164795
    4. 'print' → logprob: -5.469573020935059
    5. ' if' → logprob: -6.094573020935059
    6. '  
' → logprob: -6.469573020935059
    7. '    
' → logprob: -6.469573020935059
    8. ' 
' → logprob: -7.094573020935059
    9. '<|end|>' → logprob: -7.344573020935059
    10. '\n' → logprob: -8.594573020935059

Token 272: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6151947379112244
    2. 'if' → logprob: -1.3651947975158691
    3. '
' → logprob: -1.6151947975158691
    4. '   ' → logprob: -5.990194797515869
    5. '    
' → logprob: -6.615194797515869
    6. 'else' → logprob: -7.865194797515869
    7. '  
' → logprob: -8.240194320678711
    8. '```' → logprob: -8.240194320678711
    9. ')
' → logprob: -8.490194320678711
    10. ')' → logprob: -9.615194320678711

Token 273: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.009625757113099098
    2. ' if' → logprob: -5.5096259117126465
    3. '   ' → logprob: -5.7596259117126465
    4. '
' → logprob: -6.2596259117126465
    5. 'print' → logprob: -8.509625434875488
    6. '    
' → logprob: -9.009625434875488
    7. '  
' → logprob: -9.884625434875488
    8. ' 
' → logprob: -10.384625434875488
    9. 'else' → logprob: -10.634625434875488
    10. ')' → logprob: -11.759625434875488

Token 274: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.27057480812072754
    2. 'not' → logprob: -1.6455748081207275
    3. ' overt' → logprob: -3.1455748081207275
    4. 'o' → logprob: -6.895574569702148
    5. ' o' → logprob: -10.270574569702148
    6. ' ' → logprob: -10.958074569702148
    7. '	not' → logprob: -12.208074569702148
    8. 'over' → logprob: -12.458074569702148
    9. '   ' → logprob: -12.520574569702148
    10. '  ' → logprob: -12.645574569702148

Token 275: ' overt' (ID: 64535)
  Prédit: ' overt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' overt' → logprob: -0.0017596713732928038
    2. 'o' → logprob: -6.3767595291137695
    3. ' o' → logprob: -10.00175952911377
    4. ' over' → logprob: -12.62675952911377
    5. ' check' → logprob: -13.37675952911377
    6. 'over' → logprob: -13.50175952911377
    7. ' ' → logprob: -13.62675952911377
    8. '(o' → logprob: -15.25175952911377
    9. ' ' → logprob: -15.25175952911377
    10. ' possible' → logprob: -15.43925952911377

Token 276: 'aking' (ID: 5016)
  Prédit: 'aking'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aking' → logprob: -0.011051236651837826
    2. 'taking' → logprob: -4.511051177978516
    3. 'tak' → logprob: -13.636051177978516
    4. 'ak' → logprob: -14.386051177978516
    5. 'Taking' → logprob: -15.011051177978516
    6. 'take' → logprob: -15.261051177978516
    7. 'taken' → logprob: -15.636051177978516
    8. 'o' → logprob: -15.636051177978516
    9. 't' → logprob: -16.011051177978516
    10. 'asking' → logprob: -16.011051177978516

Token 277: '_possible' (ID: 185849)
  Prédit: '_possible'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_possible' → logprob: -0.0005558936391025782
    2. 'possible' → logprob: -7.500555992126465
    3. 'print' → logprob: -14.125555992126465
    4. '_' → logprob: -14.125555992126465
    5. ' possible' → logprob: -14.375555992126465
    6. 'Possible' → logprob: -15.375555992126465
    7. '   ' → logprob: -15.500555992126465
    8. '
' → logprob: -16.00055503845215
    9. '```' → logprob: -16.37555503845215
    10. 'poss' → logprob: -17.37555503845215

Token 278: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.47446107864379883
    2. ':
' → logprob: -0.9744610786437988
    3. 'print' → logprob: -8.34946060180664
    4. '   ' → logprob: -9.22446060180664
    5. '       ' → logprob: -10.59946060180664
    6. '():
' → logprob: -12.09946060180664
    7. ' print' → logprob: -12.34946060180664
    8. '):
' → logprob: -12.34946060180664
    9. ':

' → logprob: -13.22446060180664
    10. '):' → logprob: -13.22446060180664

Token 279: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004578107502311468
    2. 'print' → logprob: -5.754578113555908
    3. '       ' → logprob: -7.004578113555908
    4. ' print' → logprob: -7.629578113555908
    5. '```' → logprob: -12.12957763671875
    6. '
' → logprob: -15.62957763671875
    7. '	print' → logprob: -16.00457763671875
    8. '           ' → logprob: -16.87957763671875
    9. '``' → logprob: -17.12957763671875
    10. ' ' → logprob: -17.87957763671875

Token 280: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.014341193251311779
    2. ' print' → logprob: -4.264341354370117
    3. '   ' → logprob: -8.639341354370117
    4. '	print' → logprob: -15.264341354370117
    5. '```' → logprob: -15.514341354370117
    6. '       ' → logprob: -15.889341354370117
    7. ' ' → logprob: -16.639341354370117
    8. '
' → logprob: -16.639341354370117
    9. '  ' → logprob: -17.514341354370117
    10. '.print' → logprob: -18.264341354370117

Token 281: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.011054771952331066
    2. '(' → logprob: -4.511054992675781
    3. '("' → logprob: -11.886054992675781
    4. '()' → logprob: -17.76105499267578
    5. '(`' → logprob: -17.88605499267578
    6. '(
' → logprob: -18.01105499267578
    7. '(\'' → logprob: -18.01105499267578
    8. '(False' → logprob: -18.26105499267578
    9. ' ('' → logprob: -18.51105499267578
    10. '(

' → logprob: -18.63605499267578

Token 282: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -0.02975963056087494
    2. ''' → logprob: -3.529759645462036
    3. '"No' → logprob: -11.654759407043457
    4. 'Yes' → logprob: -14.904759407043457
    5. ' No' → logprob: -17.029760360717773
    6. '('' → logprob: -17.279760360717773
    7. 'NO' → logprob: -17.404760360717773
    8. '"' → logprob: -17.654760360717773
    9. '(No' → logprob: -18.029760360717773
    10. '_No' → logprob: -18.529760360717773

Token 283: '')
' (ID: 2515)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3658716380596161
    2. '')' → logprob: -1.2408716678619385
    3. '')
' → logprob: -4.740871429443359
    4. ')
' → logprob: -4.990871429443359
    5. '   ' → logprob: -6.740871429443359
    6. '")' → logprob: -8.61587142944336
    7. '<|end|>' → logprob: -8.61587142944336
    8. ')return' → logprob: -9.61587142944336
    9. '```' → logprob: -9.74087142944336
    10. '       ' → logprob: -10.99087142944336

Token 284: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3621852993965149
    2. '       ' → logprob: -1.4871852397918701
    3. 'else' → logprob: -2.61218523979187
    4. ')' → logprob: -6.362185478210449
    5. '```' → logprob: -6.987185478210449
    6. '<|end|>' → logprob: -7.612185478210449
    7. ' else' → logprob: -7.862185478210449
    8. '
' → logprob: -7.987185478210449
    9. 'print' → logprob: -8.36218547821045
    10. 'exit' → logprob: -9.48718547821045

Token 285: ' exit' (ID: 10654)
  Prédit: 'exit'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exit' (adapté à ' exit') → logprob: -0.2467752993106842
    2. '   ' → logprob: -1.8717752695083618
    3. ' exit' → logprob: -3.2467753887176514
    4. '       ' → logprob: -3.8717753887176514
    5. 'else' → logprob: -5.746775150299072
    6. '	exit' → logprob: -6.871775150299072
    7. '
' → logprob: -8.12177562713623
    8. '```' → logprob: -8.49677562713623
    9. ')' → logprob: -9.12177562713623
    10. '.exit' → logprob: -9.37177562713623

Token 286: '()

' (ID: 5874)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.000205566844670102
    2. '
' → logprob: -8.625205993652344
    3. '```' → logprob: -11.250205993652344
    4. '    
' → logprob: -11.875205993652344
    5. '  
' → logprob: -12.375205993652344
    6. '

' → logprob: -14.625205993652344
    7. '#' → logprob: -15.375205993652344
    8. '        
' → logprob: -15.500205993652344
    9. '#print' → logprob: -15.500205993652344
    10. 'else' → logprob: -16.250205993652344

Token 287: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.0280383548888494e-06
    2. 'Yes' → logprob: -14.000000953674316
    3. ' print' → logprob: -15.625000953674316
    4. 'Print' → logprob: -17.750001907348633
    5. '```' → logprob: -18.375001907348633
    6. '    
' → logprob: -19.625001907348633
    7. 'No' → logprob: -19.750001907348633
    8. '
' → logprob: -19.875001907348633
    9. '``' → logprob: -21.125001907348633
    10. '	print' → logprob: -22.625001907348633

Token 288: ' If' (ID: 1843)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -4.320199877838604e-07
    2. ' print' → logprob: -15.25
    3. '#' → logprob: -16.5
    4. 'Print' → logprob: -17.875
    5. '
' → logprob: -18.25
    6. '   ' → logprob: -18.875
    7. 'if' → logprob: -19.0
    8. '```' → logprob: -19.5
    9. 'printf' → logprob: -19.75
    10. '#print' → logprob: -19.875

Token 289: ' all' (ID: 722)
  Prédit: 'starting'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'starting' → logprob: -0.6898913979530334
    2. 'destination' → logprob: -1.3148913383483887
    3. ' True' → logprob: -2.6898913383483887
    4. 'True' → logprob: -2.6898913383483887
    5. ' starting' → logprob: -3.3148913383483887
    6. ' destination' → logprob: -3.4398913383483887
    7. 'path' → logprob: -4.439891338348389
    8. ' path' → logprob: -5.064891338348389
    9. 'number' → logprob: -6.314891338348389
    10. 'check' → logprob: -6.689891338348389

Token 290: ' checks' (ID: 22097)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.003504684427753091
    2. '(' → logprob: -6.128504753112793
    3. ' print' → logprob: -7.378504753112793
    4. '('' → logprob: -8.003504753112793
    5. '(print' → logprob: -8.503504753112793
    6. ')' → logprob: -10.253504753112793
    7. '_print' → logprob: -10.253504753112793
    8. ' prints' → logprob: -11.378504753112793
    9. 'for' → logprob: -11.378504753112793
    10. 'prints' → logprob: -11.503504753112793

Token 291: ' pass' (ID: 1853)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.22159266471862793
    2. ':
' → logprob: -2.471592664718628
    3. '   ' → logprob: -3.721592664718628
    4. 'pass' → logprob: -4.096592903137207
    5. 'print' → logprob: -4.096592903137207
    6. '_pass' → logprob: -4.221592903137207
    7. '==' → logprob: -4.471592903137207
    8. 'else' → logprob: -4.721592903137207
    9. 'passed' → logprob: -4.846592903137207
    10. '=' → logprob: -5.971592903137207

Token 292: ',' (ID: 11)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0004342453321442008
    2. '   ' → logprob: -8.375433921813965
    3. '
' → logprob: -9.000433921813965
    4. ' print' → logprob: -10.125433921813965
    5. ',' → logprob: -10.875433921813965
    6. '```' → logprob: -11.750433921813965
    7. ':
' → logprob: -12.000433921813965
    8. '    
' → logprob: -12.875433921813965
    9. ',
' → logprob: -13.875433921813965
    10. ')' → logprob: -14.375433921813965

Token 293: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0011712945997714996
    2. ' print' → logprob: -6.751171112060547
    3. '   ' → logprob: -13.751171112060547
    4. '	print' → logprob: -17.626171112060547
    5. '.print' → logprob: -18.876171112060547
    6. '
' → logprob: -19.126171112060547
    7. '```' → logprob: -19.626171112060547
    8. 'printf' → logprob: -20.626171112060547
    9. ' ' → logprob: -20.751171112060547
    10. '#print' → logprob: -21.001171112060547

Token 294: ' '' (ID: 461)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('' → logprob: -0.006225729361176491
    2. ''' → logprob: -5.2562255859375
    3. '("' → logprob: -7.1312255859375
    4. 'Yes' → logprob: -8.8812255859375
    5. '(' → logprob: -10.8812255859375
    6. 'No' → logprob: -11.1312255859375
    7. '"' → logprob: -11.2562255859375
    8. '"No' → logprob: -13.0062255859375
    9. '   ' → logprob: -13.8812255859375
    10. '`' → logprob: -14.0062255859375

Token 295: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -2.463036435074173e-05
    2. ''' → logprob: -10.750024795532227
    3. 'YES' → logprob: -13.375024795532227
    4. ' Yes' → logprob: -14.000024795532227
    5. '('' → logprob: -14.500024795532227
    6. '"' → logprob: -16.000024795532227
    7. 'Sure' → logprob: -16.875024795532227
    8. 'Yeah' → logprob: -17.625024795532227
    9. '```' → logprob: -18.125024795532227
    10. ''S' → logprob: -18.500024795532227

Token 296: ''
' (ID: 2207)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.4694221615791321
    2. ')' → logprob: -1.7194221019744873
    3. '')' → logprob: -1.8444221019744873
    4. ')
' → logprob: -4.219422340393066
    5. '')
' → logprob: -4.844422340393066
    6. '('' → logprob: -5.094422340393066
    7. '()
' → logprob: -5.844422340393066
    8. '()' → logprob: -6.219422340393066
    9. ''' → logprob: -6.594422340393066
    10. '(True' → logprob: -7.719422340393066

Token 297: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.008615042082965374
    2. 'Yes' → logprob: -4.758615016937256
    3. ' print' → logprob: -15.133615493774414
    4. 'Print' → logprob: -15.758615493774414
    5. 'YES' → logprob: -16.883615493774414
    6. ' Yes' → logprob: -17.008615493774414
    7. '```' → logprob: -17.758615493774414
    8. 'yes' → logprob: -19.258615493774414
    9. '(print' → logprob: -20.133615493774414
    10. '	print' → logprob: -21.008615493774414

Token 298: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0015378349926322699
    2. '(' → logprob: -6.501537799835205
    3. '("' → logprob: -10.251538276672363
    4. '(
' → logprob: -15.751538276672363
    5. '()' → logprob: -17.251537322998047
    6. ' ('' → logprob: -18.751537322998047
    7. '(

' → logprob: -19.126537322998047
    8. '(('' → logprob: -19.501537322998047
    9. '('(' → logprob: -19.751537322998047
    10. ''' → logprob: -20.001537322998047

Token 299: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -1.2664456789934775e-06
    2. ''' → logprob: -13.875000953674316
    3. '('' → logprob: -16.000001907348633
    4. ' Yes' → logprob: -16.750001907348633
    5. 'YES' → logprob: -17.375001907348633
    6. '')' → logprob: -17.750001907348633
    7. 'No' → logprob: -17.750001907348633
    8. '.Yes' → logprob: -19.125001907348633
    9. 'Ye' → logprob: -20.125001907348633
    10. '(' → logprob: -20.375001907348633

Token 300: '')' (ID: 1542)
  Prédit: '')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.12693870067596436
    2. ')' → logprob: -2.126938819885254
    3. '")' → logprob: -11.876938819885254
    4. '()' → logprob: -13.001938819885254
    5. '`)' → logprob: -15.251938819885254
    6. '')
' → logprob: -15.251938819885254
    7. ')'' → logprob: -15.501938819885254
    8. ''' → logprob: -15.501938819885254
    9. '```' → logprob: -15.501938819885254
    10. '())' → logprob: -16.376937866210938


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 298
Tokens correctement prédits (1ère position, stricte): 127
Tokens correctement prédits (1ère position, avec adaptation): 132
Tokens correctement prédits (top 10): 238
Précision stricte (1ère position): 42.62%
Précision adaptée (1ère position): 44.30%
Précision (top 10): 79.87%
================================================================================
