================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:18:08
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def read_input():
    return int(input())

def read_list():
    return list(map(int, input().split()))

def can_extend(ex, next_elem):
    return ex + next_elem == (ex ^ next_elem)

def process_segment(A, N, i, j, ex):
    while should_continue(j, N) and can_extend(ex, A[j]):
        ex = add_to_ex(ex, A[j])
        j = increment(j)
    return j, ex

def should_continue(j, N):
    return j <= N-1

def add_to_ex(ex, value):
    return ex + value

def increment(value):
    return value + 1

def count_segments(ans, j, i):
    return ans + (j - i)

def subtract_from_ex(ex, value):
    return ex - value

def print_result(ans):
    print(ans)

def main():
    N = read_input()
    A = read_list()
    ex = 0
    ans = 0
    j = 0
    ex = 0
    for i in range(N):
        j, ex = process_segment(A, N, i, j, ex)
        ans = count_segments(ans, j, i)
        ex = subtract_from_ex(ex, A[i])
    print_result(ans)

main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' read' (ID: 1729)
  → Token d'amorce (pas de prédiction)

Token 2: '_input' (ID: 12507)
  → Token d'amorce (pas de prédiction)

Token 3: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002494683489203453
    2. '_' → logprob: -6.877494812011719
    3. '():' → logprob: -7.127494812011719
    4. '(:' → logprob: -8.252494812011719
    5. '```' → logprob: -8.877494812011719
    6. '(_:' → logprob: -9.377494812011719
    7. ':' → logprob: -9.752494812011719
    8. ' (' → logprob: -10.002494812011719
    9. '(_' → logprob: -10.877494812011719
    10. '()' → logprob: -12.502494812011719

Token 4: '   ' (ID: 271)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.9952694177627563
    2. '\' → logprob: -1.2452694177627563
    3. '\n' → logprob: -1.3702694177627563
    4. '   ' → logprob: -2.995269298553467
    5. '    
' → logprob: -4.870269298553467
    6. '
' → logprob: -5.120269298553467
    7. ' 
' → logprob: -5.620269298553467
    8. '``' → logprob: -5.745269298553467
    9. ':' → logprob: -6.120269298553467
    10. ''\' → logprob: -6.620269298553467

Token 5: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.44198349118232727
    2. '```' → logprob: -2.066983461380005
    3. 'return' (adapté à ' return') → logprob: -2.691983461380005
    4. 'input' → logprob: -3.441983461380005
    5. '    ' → logprob: -3.441983461380005
    6. 'r' → logprob: -3.566983461380005
    7. '\' → logprob: -4.191983699798584
    8. 'x' → logprob: -4.316983699798584
    9. '       ' → logprob: -4.691983699798584
    10. '`' → logprob: -5.191983699798584

Token 6: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.21321910619735718
    2. ' input' → logprob: -2.213219165802002
    3. 'input' → logprob: -3.088219165802002
    4. '"' → logprob: -3.463219165802002
    5. ''' → logprob: -5.588219165802002
    6. ' []' → logprob: -7.588219165802002
    7. '  ' → logprob: -7.963219165802002
    8. ' "' → logprob: -8.463218688964844
    9. ' None' → logprob: -9.088218688964844
    10. '(input' → logprob: -9.213218688964844

Token 7: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0021223074290901423
    2. ''' → logprob: -7.002122402191162
    3. '('' → logprob: -7.252122402191162
    4. '`' → logprob: -8.877121925354004
    5. '"' → logprob: -9.502121925354004
    6. '("("' → logprob: -9.502121925354004
    7. '```' → logprob: -9.627121925354004
    8. ' (' → logprob: -10.502121925354004
    9. '40' → logprob: -10.627121925354004
    10. '32' → logprob: -10.877121925354004

Token 8: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.23295630514621735
    2. '(' → logprob: -1.8579562902450562
    3. '()' → logprob: -3.7329564094543457
    4. ')' → logprob: -3.9829564094543457
    5. '()))' → logprob: -4.982956409454346
    6. '))' → logprob: -6.982956409454346
    7. '(()' → logprob: -7.607956409454346
    8. ' ())' → logprob: -8.232955932617188
    9. '('' → logprob: -8.482955932617188
    10. '(""))' → logprob: -8.732955932617188

Token 9: 'def' (ID: 1314)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.2777926921844482
    2. 'def' → logprob: -1.7777926921844482
    3. '\n' → logprob: -1.7777926921844482
    4. '
' → logprob: -2.4027926921844482
    5. '<|end|>' → logprob: -2.7777926921844482
    6. '```' → logprob: -2.9027926921844482
    7. '(' → logprob: -3.0277926921844482
    8. ' ' → logprob: -3.9027926921844482
    9. ')' → logprob: -4.277792930603027
    10. 'newline' → logprob: -4.402792930603027

Token 10: ' read' (ID: 1729)
  Prédit: ' calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' calculate' → logprob: -0.46774011850357056
    2. ' write' → logprob: -2.342740058898926
    3. ' read' → logprob: -2.592740058898926
    4. ' main' → logprob: -2.592740058898926
    5. ' compute' → logprob: -2.717740058898926
    6. ' process' → logprob: -3.592740058898926
    7. ' factorial' → logprob: -4.467740058898926
    8. ' sum' → logprob: -5.217740058898926
    9. ' add' → logprob: -5.342740058898926
    10. ' solve' → logprob: -5.717740058898926

Token 11: '_list' (ID: 4162)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.22628524899482727
    2. '_input' → logprob: -1.7262852191925049
    3. '_line' → logprob: -4.101285457611084
    4. '_output' → logprob: -5.851285457611084
    5. '_value' → logprob: -6.476285457611084
    6. '_string' → logprob: -6.976285457611084
    7. '_data' → logprob: -7.476285457611084
    8. '_int' → logprob: -7.601285457611084
    9. '_array' → logprob: -7.851285457611084
    10. '_integer' → logprob: -8.351284980773926

Token 12: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6381278038024902
    2. '()' → logprob: -1.2631278038024902
    3. '_' → logprob: -1.8881278038024902
    4. '():' → logprob: -4.76312780380249
    5. '```' → logprob: -5.38812780380249
    6. '_of' → logprob: -6.38812780380249
    7. '<()>' → logprob: -6.63812780380249
    8. '[' → logprob: -6.88812780380249
    9. '|()
' → logprob: -6.88812780380249
    10. '()(' → logprob: -6.88812780380249

Token 13: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008113917894661427
    2. '[]' → logprob: -5.883113861083984
    3. '    ' → logprob: -6.258113861083984
    4. '[' → logprob: -6.508113861083984
    5. ' return' → logprob: -6.883113861083984
    6. '(' → logprob: -7.758113861083984
    7. 'return' → logprob: -8.258113861083984
    8. '    
' → logprob: -10.008113861083984
    9. ' ' → logprob: -10.633113861083984
    10. '  ' → logprob: -10.633113861083984

Token 14: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -1.2077715396881104
    2. ' list' → logprob: -1.4577715396881104
    3. ' []' → logprob: -1.5827715396881104
    4. 'list' → logprob: -2.7077715396881104
    5. '[]' → logprob: -2.8327715396881104
    6. 'return' (adapté à ' return') → logprob: -2.8327715396881104
    7. '   ' → logprob: -3.5827715396881104
    8. ' lst' → logprob: -3.9577715396881104
    9. ' [' → logprob: -4.582771301269531
    10. 'lst' → logprob: -4.957771301269531

Token 15: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.07983281463384628
    2. 'list' → logprob: -2.7048327922821045
    3. ' [' → logprob: -5.329833030700684
    4. '[list' → logprob: -5.579833030700684
    5. '[' → logprob: -7.079833030700684
    6. ' []' → logprob: -8.704833030700684
    7. ' ' → logprob: -8.829833030700684
    8. '[int' → logprob: -10.204833030700684
    9. '(list' → logprob: -11.204833030700684
    10. '[]' → logprob: -11.829833030700684

Token 16: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.021651800721883774
    2. '(map' → logprob: -4.396651744842529
    3. '(int' → logprob: -4.896651744842529
    4. '(input' → logprob: -7.021651744842529
    5. '(range' → logprob: -7.396651744842529
    6. '()' → logprob: -10.521652221679688
    7. '(eval' → logprob: -10.646652221679688
    8. '(read' → logprob: -11.521652221679688
    9. ' (' → logprob: -11.521652221679688
    10. '(s' → logprob: -11.646652221679688

Token 17: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.01701424829661846
    2. '(' → logprob: -4.392014026641846
    3. 'int' → logprob: -5.517014026641846
    4. ' int' → logprob: -8.767014503479004
    5. '=int' → logprob: -9.142014503479004
    6. '<int' → logprob: -9.392014503479004
    7. ',int' → logprob: -10.392014503479004
    8. '(
' → logprob: -10.392014503479004
    9. '[int' → logprob: -10.517014503479004
    10. ')' → logprob: -11.517014503479004

Token 18: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.4995611608028412
    2. ',' → logprob: -1.2495611906051636
    3. '(input' → logprob: -2.249561071395874
    4. ' ,' → logprob: -7.749561309814453
    5. 'input' → logprob: -8.124561309814453
    6. '(' → logprob: -8.874561309814453
    7. ' input' → logprob: -9.124561309814453
    8. ' (' → logprob: -9.624561309814453
    9. '=input' → logprob: -9.749561309814453
    10. '<input' → logprob: -12.249561309814453

Token 19: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.5231982469558716
    2. ' input' → logprob: -0.8981982469558716
    3. '(input' → logprob: -10.398198127746582
    4. '   ' → logprob: -11.023198127746582
    5. ',input' → logprob: -11.273198127746582
    6. '=input' → logprob: -12.273198127746582
    7. ' ' → logprob: -12.648198127746582
    8. '	input' → logprob: -12.648198127746582
    9. '<input' → logprob: -14.023198127746582
    10. ')' → logprob: -14.273198127746582

Token 20: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.009851355105638504
    2. '()))' → logprob: -5.009851455688477
    3. '))' → logprob: -6.759851455688477
    4. '()' → logprob: -7.009851455688477
    5. '())' → logprob: -7.509851455688477
    6. '())))' → logprob: -8.509851455688477
    7. ')' → logprob: -8.759851455688477
    8. ')))' → logprob: -9.134851455688477
    9. '()));' → logprob: -10.384851455688477
    10. ' ' → logprob: -12.384851455688477

Token 21: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.008635015226900578
    2. 'strip' → logprob: -4.7586350440979
    3. 'rstrip' → logprob: -11.008634567260742
    4. ' split' → logprob: -12.758634567260742
    5. ')' → logprob: -14.383634567260742
    6. '(split' → logprob: -16.133634567260742
    7. ' ' → logprob: -16.633634567260742
    8. 'spl' → logprob: -17.008634567260742
    9. '().' → logprob: -17.133634567260742
    10. ' strip' → logprob: -17.258634567260742

Token 22: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.04810180515050888
    2. '())))' → logprob: -3.9231019020080566
    3. '()' → logprob: -4.173101902008057
    4. '))' → logprob: -5.048101902008057
    5. ')))' → logprob: -5.673101902008057
    6. '())' → logprob: -6.298101902008057
    7. '(' → logprob: -10.548101425170898
    8. ')' → logprob: -11.173101425170898
    9. '()))
' → logprob: -11.298101425170898
    10. '())))
' → logprob: -11.673101425170898

Token 23: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0035601616837084293
    2. '
' → logprob: -6.2535600662231445
    3. 'd' → logprob: -6.7535600662231445
    4. '

' → logprob: -8.003560066223145
    5. '\' → logprob: -9.878560066223145
    6. '```' → logprob: -10.628560066223145
    7. 'n' → logprob: -10.878560066223145
    8. 'de' → logprob: -11.378560066223145
    9. '\n' → logprob: -11.753560066223145
    10. '#' → logprob: -13.003560066223145

Token 24: ' can' (ID: 665)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.3634541630744934
    2. ' solve' → logprob: -1.3634541034698486
    3. 'solve' → logprob: -3.9884541034698486
    4. 'main' → logprob: -4.613454341888428
    5. ' write' → logprob: -4.988454341888428
    6. ' sum' → logprob: -5.738454341888428
    7. ' factorial' → logprob: -5.738454341888428
    8. ' calculate' → logprob: -6.613454341888428
    9. ' find' → logprob: -7.113454341888428
    10. ' count' → logprob: -7.113454341888428

Token 25: '_extend' (ID: 195756)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.09436599910259247
    2. '_jump' → logprob: -4.344366073608398
    3. '_take' → logprob: -4.594366073608398
    4. '_accept' → logprob: -4.719366073608398
    5. '_construct' → logprob: -4.719366073608398
    6. '_continue' → logprob: -5.219366073608398
    7. '_make' → logprob: -5.344366073608398
    8. '_build' → logprob: -5.844366073608398
    9. '_div' → logprob: -5.969366073608398
    10. '_complete' → logprob: -6.094366073608398

Token 26: '(ex' (ID: 9292)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6065719127655029
    2. '_' → logprob: -0.9815719127655029
    3. '_string' → logprob: -3.856571912765503
    4. '_list' → logprob: -4.481572151184082
    5. '_parent' → logprob: -4.981572151184082
    6. '_(' → logprob: -5.731572151184082
    7. '_array' → logprob: -5.856572151184082
    8. '_length' → logprob: -6.231572151184082
    9. '_sequence' → logprob: -6.231572151184082
    10. '_to' → logprob: -6.356572151184082

Token 27: ',' (ID: 11)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0025573535822331905
    2. '_t' → logprob: -7.252557277679443
    3. 'p' → logprob: -7.377557277679443
    4. 'pression' → logprob: -8.627557754516602
    5. 'ists' → logprob: -8.627557754516602
    6. 'isting' → logprob: -9.002557754516602
    7. 'pressions' → logprob: -9.377557754516602
    8. '(t' → logprob: -9.627557754516602
    9. 'pected' → logprob: -9.877557754516602
    10. '_' → logprob: -10.002557754516602

Token 28: ' next' (ID: 2613)
  Prédit: ' ey'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ey' → logprob: -1.1303685903549194
    2. ' new' → logprob: -2.380368709564209
    3. ' nx' → logprob: -2.630368709564209
    4. ' n' → logprob: -2.755368709564209
    5. 'ey' → logprob: -2.942868709564209
    6. 'n' → logprob: -3.567868709564209
    7. ' nxt' → logprob: -3.755368709564209
    8. ' k' → logprob: -4.130368709564209
    9. ' curr' → logprob: -4.130368709564209
    10. 'new' → logprob: -4.130368709564209

Token 29: '_elem' (ID: 68468)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.24349448084831238
    2. '_element' → logprob: -2.3684945106506348
    3. '):' → logprob: -3.1184945106506348
    4. '_elem' → logprob: -3.3684945106506348
    5. '_val' → logprob: -3.8684945106506348
    6. '_value' → logprob: -4.868494510650635
    7. '_item' → logprob: -6.118494510650635
    8. '_token' → logprob: -6.243494510650635
    9. '_index' → logprob: -6.368494510650635
    10. '_char' → logprob: -6.618494510650635

Token 30: '):
' (ID: 1883)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.3812960386276245
    2. '):' → logprob: -1.3812960386276245
    3. ')' → logprob: -2.756296157836914
    4. ')):' → logprob: -7.506296157836914
    5. '):
' → logprob: -7.631296157836914
    6. 'uent' → logprob: -7.756296157836914
    7. 'nt' → logprob: -8.881296157836914
    8. ',' → logprob: -9.131296157836914
    9. 'ents' → logprob: -9.256296157836914
    10. '):

' → logprob: -9.256296157836914

Token 31: '   ' (ID: 271)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.35427016019821167
    2. ',' → logprob: -1.9792702198028564
    3. '   ' → logprob: -2.1042702198028564
    4. ':' → logprob: -3.6042702198028564
    5. ')' → logprob: -5.729269981384277
    6. '):
' → logprob: -6.104269981384277
    7. ' :' → logprob: -6.479269981384277
    8. '    ' → logprob: -7.354269981384277
    9. '[' → logprob: -7.604269981384277
    10. ' if' → logprob: -7.729269981384277

Token 32: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.40974655747413635
    2. ' ex' → logprob: -2.1597466468811035
    3. '   ' → logprob: -2.7847466468811035
    4. 'ex' → logprob: -3.0347466468811035
    5. 'return' (adapté à ' return') → logprob: -3.4097466468811035
    6. ')' → logprob: -3.5347466468811035
    7. ' ' → logprob: -3.7847466468811035
    8. ' )' → logprob: -5.2847466468811035
    9. ' (' → logprob: -5.6597466468811035
    10. '    ' → logprob: -5.7847466468811035

Token 33: ' ex' (ID: 513)
  Prédit: ' ex'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ex' → logprob: -0.07220610976219177
    2. ' next' → logprob: -3.1972060203552246
    3. ' abs' → logprob: -3.8222060203552246
    4. 'ex' → logprob: -5.072206020355225
    5. 'next' → logprob: -8.322206497192383
    6. 'abs' → logprob: -8.697206497192383
    7. ' len' → logprob: -9.322206497192383
    8. ' (' → logprob: -9.697206497192383
    9. ' ' → logprob: -10.947206497192383
    10. '(next' → logprob: -11.572206497192383

Token 34: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4569392502307892
    2. '<=' → logprob: -1.8319392204284668
    3. '==' → logprob: -2.331939220428467
    4. '<' → logprob: -3.206939220428467
    5. ' <=' → logprob: -3.956939220428467
    6. ' +' → logprob: -4.456939220428467
    7. '*' → logprob: -4.831939220428467
    8. ' ==' → logprob: -5.206939220428467
    9. '|' → logprob: -5.206939220428467
    10. ' <' → logprob: -5.706939220428467

Token 35: ' next' (ID: 2613)
  Prédit: ' next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.1162770614027977
    2. '1' → logprob: -2.616276979446411
    3. ' ' → logprob: -3.741276979446411
    4. 'next' → logprob: -4.36627721786499
    5. '	next' → logprob: -9.366276741027832
    6. '[next' → logprob: -9.616276741027832
    7. '(next' → logprob: -10.366276741027832
    8. '=' → logprob: -10.616276741027832
    9. '  ' → logprob: -10.866276741027832
    10. ' nex' → logprob: -11.678776741027832

Token 36: '_elem' (ID: 68468)
  Prédit: '_elem'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_elem' → logprob: -1.4617256056226324e-05
    2. '_' → logprob: -11.875014305114746
    3. 'elem' → logprob: -13.125014305114746
    4. '_e' → logprob: -13.250014305114746
    5. '_ele' → logprob: -13.500014305114746
    6. ' _' → logprob: -14.500014305114746
    7. '-' → logprob: -14.875014305114746
    8. '-_' → logprob: -15.500014305114746
    9. '_el' → logprob: -15.625014305114746
    10. '__' → logprob: -15.625014305114746

Token 37: ' ==' (ID: 951)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.5257634520530701
    2. '>' → logprob: -2.400763511657715
    3. ' >' → logprob: -2.400763511657715
    4. ' >=' → logprob: -2.400763511657715
    5. '<=' → logprob: -2.775763511657715
    6. '>=' → logprob: -3.525763511657715
    7. ' ' → logprob: -4.275763511657715
    8. ' ==' → logprob: -4.650763511657715
    9. ' <' → logprob: -5.025763511657715
    10. '<' → logprob: -5.400763511657715

Token 38: ' (' (ID: 350)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.08140504360198975
    2. '10' → logprob: -3.4564051628112793
    3. ' ex' → logprob: -3.8314051628112793
    4. 'ex' → logprob: -5.206405162811279
    5. '1' → logprob: -5.331405162811279
    6. '0' → logprob: -5.831405162811279
    7. '20' → logprob: -6.081405162811279
    8. ' next' → logprob: -6.331405162811279
    9. '100' → logprob: -6.456405162811279
    10. '9' → logprob: -6.831405162811279

Token 39: 'ex' (ID: 490)
  Prédit: 'ex'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.586591362953186
    2. '1' → logprob: -2.0865912437438965
    3. ' ' → logprob: -2.7115912437438965
    4. 'next' → logprob: -2.8365912437438965
    5. ' ex' → logprob: -3.2115912437438965
    6. '10' → logprob: -3.7115912437438965
    7. '0' → logprob: -3.8365912437438965
    8. '   ' → logprob: -3.9615912437438965
    9. ' next' → logprob: -3.9615912437438965
    10. ')' → logprob: -4.2115912437438965

Token 40: ' ^' (ID: 7602)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.43370765447616577
    2. '+' → logprob: -1.1837077140808105
    3. ' *' → logprob: -4.0587077140808105
    4. ' ' → logprob: -4.5587077140808105
    5. '*' → logprob: -4.9337077140808105
    6. ' ^' → logprob: -6.3087077140808105
    7. ')' → logprob: -6.5587077140808105
    8. ' or' → logprob: -6.6837077140808105
    9. '1' → logprob: -7.0587077140808105
    10. ' |' → logprob: -7.1837077140808105

Token 41: ' next' (ID: 2613)
  Prédit: ' next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.0703061893582344
    2. 'next' → logprob: -2.6953063011169434
    3. ' ' → logprob: -8.320305824279785
    4. ' ex' → logprob: -9.820305824279785
    5. 'ex' → logprob: -10.320305824279785
    6. '(next' → logprob: -10.820305824279785
    7. ')' → logprob: -12.320305824279785
    8. '	next' → logprob: -12.695305824279785
    9. ' nex' → logprob: -12.820305824279785
    10. '   ' → logprob: -12.945305824279785

Token 42: '_elem' (ID: 68468)
  Prédit: '_elem'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_elem' → logprob: -0.00016635251813568175
    2. 'elem' → logprob: -9.375165939331055
    3. '_' → logprob: -10.375165939331055
    4. ')' → logprob: -11.625165939331055
    5. ')_' → logprob: -12.250165939331055
    6. '-' → logprob: -12.375165939331055
    7. '__' → logprob: -12.625165939331055
    8. '```' → logprob: -13.000165939331055
    9. '	elem' → logprob: -13.062665939331055
    10. 'Elem' → logprob: -13.250165939331055

Token 43: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002246357616968453
    2. ' )' → logprob: -8.625225067138672
    3. '))' → logprob: -10.500225067138672
    4. ')))' → logprob: -12.000225067138672
    5. '   ' → logprob: -13.000225067138672
    6. ')
' → logprob: -13.125225067138672
    7. ' ' → logprob: -13.625225067138672
    8. ')+' → logprob: -13.750225067138672
    9. ')#' → logprob: -14.625225067138672
    10. '1' → logprob: -14.750225067138672

Token 44: 'def' (ID: 1314)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -1.0954198837280273
    2. '_' → logprob: -1.2204198837280273
    3. 'def' → logprob: -1.7204198837280273
    4. ':' → logprob: -2.3454198837280273
    5. 'and' → logprob: -2.7204198837280273
    6. '<|end|>' → logprob: -4.845419883728027
    7. ' def' → logprob: -5.220419883728027
    8. '\' → logprob: -5.595419883728027
    9. '
' → logprob: -5.845419883728027
    10. ' ' → logprob: -6.345419883728027

Token 45: ' process' (ID: 2273)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.15964069962501526
    2. ' find' → logprob: -3.2846407890319824
    3. ' check' → logprob: -3.5346407890319824
    4. ' is' → logprob: -4.284640789031982
    5. ' main' → logprob: -4.409640789031982
    6. ' extend' → logprob: -4.409640789031982
    7. 'can' → logprob: -4.659640789031982
    8. ' max' → logprob: -5.034640789031982
    9. ' build' → logprob: -5.659640789031982
    10. ' solve' → logprob: -5.659640789031982

Token 46: '_segment' (ID: 71041)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7721551060676575
    2. '_list' → logprob: -1.2721550464630127
    3. '_' → logprob: -1.7721550464630127
    4. '_input' → logprob: -4.022155284881592
    5. '_elements' → logprob: -4.272155284881592
    6. '(_' → logprob: -4.772155284881592
    7. '_array' → logprob: -5.022155284881592
    8. '()' → logprob: -5.147155284881592
    9. '_line' → logprob: -5.147155284881592
    10. '_sequence' → logprob: -5.397155284881592

Token 47: '(A' (ID: 10706)
  Prédit: '(segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(segment' → logprob: -0.08177508413791656
    2. '(' → logprob: -2.581775188446045
    3. '(seg' → logprob: -6.206775188446045
    4. '(s' → logprob: -7.456775188446045
    5. '_segment' → logprob: -9.831774711608887
    6. '(sequence' → logprob: -10.081774711608887
    7. '(length' → logprob: -10.456774711608887
    8. '(line' → logprob: -10.581774711608887
    9. '(ex' → logprob: -11.206774711608887
    10. 's' → logprob: -11.331774711608887

Token 48: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003299270523712039
    2. '):' → logprob: -5.878299236297607
    3. '[' → logprob: -8.878299713134766
    4. ' ,' → logprob: -9.003299713134766
    5. '):
' → logprob: -10.003299713134766
    6. '   ' → logprob: -10.378299713134766
    7. '[start' → logprob: -10.753299713134766
    8. '_,' → logprob: -11.003299713134766
    9. ')' → logprob: -11.128299713134766
    10. ',index' → logprob: -11.128299713134766

Token 49: ' N' (ID: 478)
  Prédit: ' start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' start' → logprob: -0.42102181911468506
    2. 'start' → logprob: -1.671021819114685
    3. ' l' → logprob: -2.5460219383239746
    4. 'l' → logprob: -3.4210219383239746
    5. ' segment' → logprob: -4.796021938323975
    6. ' left' → logprob: -5.171021938323975
    7. ' L' → logprob: -5.171021938323975
    8. 'L' → logprob: -5.796021938323975
    9. 'segment' → logprob: -5.921021938323975
    10. '   ' → logprob: -6.046021938323975

Token 50: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04187458008527756
    2. '):' → logprob: -3.291874647140503
    3. '):
' → logprob: -5.666874408721924
    4. ' ,' → logprob: -8.791874885559082
    5. '):
' → logprob: -9.916874885559082
    6. '   ' → logprob: -10.041874885559082
    7. ')' → logprob: -10.541874885559082
    8. ',
' → logprob: -11.291874885559082
    9. ' ):' → logprob: -11.291874885559082
    10. '  ' → logprob: -11.416874885559082

Token 51: ' i' (ID: 575)
  Prédit: ' start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' start' → logprob: -0.5384664535522461
    2. 'start' → logprob: -1.288466453552246
    3. ' l' → logprob: -3.538466453552246
    4. 'l' → logprob: -4.288466453552246
    5. ' idx' → logprob: -4.288466453552246
    6. ' left' → logprob: -4.413466453552246
    7. ' L' → logprob: -4.538466453552246
    8. 'L' → logprob: -4.663466453552246
    9. ' K' → logprob: -4.913466453552246
    10. ' segment' → logprob: -5.038466453552246

Token 52: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5870197415351868
    2. '):' → logprob: -0.9620197415351868
    3. '+' → logprob: -3.087019681930542
    4. '):
' → logprob: -4.712019920349121
    5. ')' → logprob: -5.837019920349121
    6. 'n' → logprob: -7.212019920349121
    7. ' ,' → logprob: -7.337019920349121
    8. 'x' → logprob: -7.587019920349121
    9. 'dx' → logprob: -7.837019920349121
    10. ' ):' → logprob: -8.087019920349121

Token 53: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.8053087592124939
    2. 'j' → logprob: -1.1803088188171387
    3. ' length' → logprob: -3.9303088188171387
    4. ' current' → logprob: -4.180308818817139
    5. ' start' → logprob: -4.180308818817139
    6. ' segment' → logprob: -4.305308818817139
    7. ' ' → logprob: -4.367808818817139
    8. '   ' → logprob: -4.430308818817139
    9. 'start' → logprob: -4.617808818817139
    10. ' ex' → logprob: -4.680308818817139

Token 54: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0038813117425888777
    2. ',' → logprob: -6.003881454467773
    3. '):
' → logprob: -6.628881454467773
    4. ')' → logprob: -10.128881454467773
    5. ' ):' → logprob: -11.003881454467773
    6. '):
' → logprob: -11.253881454467773
    7. '   ' → logprob: -11.878881454467773
    8. ':' → logprob: -13.128881454467773
    9. ' ' → logprob: -13.878881454467773
    10. '):

' → logprob: -14.253881454467773

Token 55: ' ex' (ID: 513)
  Prédit: ' ex'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ex' → logprob: -1.9829893112182617
    2. ' current' → logprob: -2.1079893112182617
    3. ' res' → logprob: -2.3579893112182617
    4. ' dp' → logprob: -2.3579893112182617
    5. ' length' → logprob: -2.4829893112182617
    6. ' result' → logprob: -2.8579893112182617
    7. 'ex' → logprob: -2.9829893112182617
    8. ' max' → logprob: -3.1079893112182617
    9. ' count' → logprob: -3.1079893112182617
    10. 'dp' → logprob: -3.8579893112182617

Token 56: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.038597576320171356
    2. ',' → logprob: -4.038597583770752
    3. '):
' → logprob: -4.038597583770752
    4. ')' → logprob: -6.663597583770752
    5. '=' → logprob: -7.663597583770752
    6. ' ):' → logprob: -7.913597583770752
    7. 's' → logprob: -9.413597106933594
    8. '):

' → logprob: -9.538597106933594
    9. 'e' → logprob: -9.913597106933594
    10. '_' → logprob: -10.288597106933594

Token 57: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.022279689088463783
    2. ':' → logprob: -4.022279739379883
    3. '):' → logprob: -7.022279739379883
    4. '       ' → logprob: -7.147279739379883
    5. ' if' → logprob: -7.272279739379883
    6. ',' → logprob: -7.647279739379883
    7. '    
' → logprob: -8.272279739379883
    8. ' :' → logprob: -8.647279739379883
    9. '```' → logprob: -8.647279739379883
    10. '<|end|>' → logprob: -8.647279739379883

Token 58: ' while' (ID: 2049)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.022162169218063354
    2. ':' → logprob: -4.522161960601807
    3. ' if' → logprob: -5.147161960601807
    4. '       ' → logprob: -6.397161960601807
    5. '    
' → logprob: -7.022161960601807
    6. '    ' → logprob: -7.522161960601807
    7. 'if' → logprob: -7.772161960601807
    8. ' :' → logprob: -8.522162437438965
    9. ' while' → logprob: -8.647162437438965
    10. '	if' → logprob: -8.647162437438965

Token 59: ' should' (ID: 1757)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.6728029251098633
    2. ' j' → logprob: -1.2978029251098633
    3. ' i' → logprob: -2.1728029251098633
    4. 'i' → logprob: -2.2978029251098633
    5. '   ' → logprob: -6.672802925109863
    6. ' ' → logprob: -8.547802925109863
    7. ' True' → logprob: -8.797802925109863
    8. 'can' → logprob: -8.797802925109863
    9. ' can' → logprob: -9.172802925109863
    10. 'True' → logprob: -9.297802925109863

Token 60: '_continue' (ID: 188911)
  Prédit: '_extend'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_extend' → logprob: -0.28702083230018616
    2. '_continue' → logprob: -1.4120208024978638
    3. '_expand' → logprob: -5.287020683288574
    4. '_include' → logprob: -8.912020683288574
    5. '_process' → logprob: -9.162020683288574
    6. '_break' → logprob: -9.287020683288574
    7. '_increment' → logprob: -9.412020683288574
    8. '_' → logprob: -9.412020683288574
    9. '_keep' → logprob: -10.037020683288574
    10. '_append' → logprob: -10.162020683288574

Token 61: '(j' (ID: 4997)
  Prédit: '(A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.6203542947769165
    2. '(' → logprob: -1.3703542947769165
    3. '(i' → logprob: -1.6203542947769165
    4. ' (' → logprob: -5.870354175567627
    5. '(N' → logprob: -6.120354175567627
    6. '   ' → logprob: -6.370354175567627
    7. '(True' → logprob: -6.870354175567627
    8. '    ' → logprob: -7.495354175567627
    9. '(process' → logprob: -8.370354652404785
    10. '(j' → logprob: -8.370354652404785

Token 62: ',' (ID: 11)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.050649914890527725
    2. '<' → logprob: -3.050649881362915
    3. ' ' → logprob: -7.675650119781494
    4. ')' → logprob: -8.175649642944336
    5. '<N' → logprob: -8.175649642944336
    6. ' and' → logprob: -8.175649642944336
    7. '+' → logprob: -8.675649642944336
    8. '<n' → logprob: -8.800649642944336
    9. 'and' → logprob: -8.925649642944336
    10. ',' → logprob: -9.675649642944336

Token 63: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.1270524263381958
    2. ' N' → logprob: -2.5020523071289062
    3. 'j' → logprob: -3.5020523071289062
    4. ' j' → logprob: -5.752052307128906
    5. '<N' → logprob: -6.002052307128906
    6. '   ' → logprob: -7.627052307128906
    7. ')' → logprob: -7.877052307128906
    8. '<' → logprob: -8.502052307128906
    9. ' <' → logprob: -9.002052307128906
    10. 'n' → logprob: -9.377052307128906

Token 64: ')' (ID: 8)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.10703478753566742
    2. 'and' → logprob: -3.107034683227539
    3. ')' → logprob: -3.357034683227539
    4. ',' → logprob: -3.982034683227539
    5. ' ,' → logprob: -7.107034683227539
    6. '   ' → logprob: -7.232034683227539
    7. ' )' → logprob: -7.857034683227539
    8. '    ' → logprob: -7.982034683227539
    9. '):' → logprob: -7.982034683227539
    10. ' ' → logprob: -8.107034683227539

Token 65: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.0070757558569312096
    2. 'and' → logprob: -5.007075786590576
    3. '   ' → logprob: -8.632075309753418
    4. ':' → logprob: -9.507075309753418
    5. '    ' → logprob: -9.882075309753418
    6. ',' → logprob: -11.132075309753418
    7. ' ' → logprob: -11.632075309753418
    8. ':
' → logprob: -11.632075309753418
    9. ')' → logprob: -12.382075309753418
    10. '	and' → logprob: -12.632075309753418

Token 66: ' can' (ID: 665)
  Prédit: ' can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.2526315152645111
    2. 'can' → logprob: -1.5026315450668335
    3. '   ' → logprob: -7.502631664276123
    4. '	can' → logprob: -9.877631187438965
    5. '(can' → logprob: -10.627631187438965
    6. ' and' → logprob: -11.002631187438965
    7. ' ' → logprob: -11.252631187438965
    8. '           ' → logprob: -12.002631187438965
    9. '  ' → logprob: -12.252631187438965
    10. '       ' → logprob: -12.377631187438965

Token 67: '_extend' (ID: 195756)
  Prédit: '_extend'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_extend' → logprob: -1.981667537620524e-06
    2. '_ext' → logprob: -14.125001907348633
    3. 'extend' → logprob: -14.625001907348633
    4. '_continue' → logprob: -15.625001907348633
    5. '_extension' → logprob: -15.750001907348633
    6. '_extent' → logprob: -15.875001907348633
    7. '_expand' → logprob: -16.000001907348633
    8. '_extended' → logprob: -17.125001907348633
    9. '_append' → logprob: -17.500001907348633
    10. '.extend' → logprob: -18.000001907348633

Token 68: '(ex' (ID: 9292)
  Prédit: '(ex'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ex' → logprob: -0.0007298283162526786
    2. '(' → logprob: -7.250730037689209
    3. '(
' → logprob: -11.75072956085205
    4. ' (' → logprob: -12.00072956085205
    5. 'ex' → logprob: -13.50072956085205
    6. ')' → logprob: -14.12572956085205
    7. '(A' → logprob: -14.25072956085205
    8. '(e' → logprob: -14.37572956085205
    9. '```' → logprob: -15.37572956085205
    10. '   ' → logprob: -15.75072956085205

Token 69: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.350386295001954e-05
    2. ' ,' → logprob: -10.000073432922363
    3. ',A' → logprob: -10.875073432922363
    4. ',
' → logprob: -12.500073432922363
    5. '   ' → logprob: -13.875073432922363
    6. ',

' → logprob: -14.000073432922363
    7. 'A' → logprob: -14.125073432922363
    8. ' ' → logprob: -14.125073432922363
    9. ')' → logprob: -14.750073432922363
    10. '    ' → logprob: -15.687573432922363

Token 70: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.1130862608551979
    2. 'A' → logprob: -2.238086223602295
    3. '	A' → logprob: -9.238086700439453
    4. '<|end|>' → logprob: -9.988086700439453
    5. '   ' → logprob: -10.238086700439453
    6. ' ' → logprob: -10.363086700439453
    7. ')' → logprob: -11.363086700439453
    8. '    ' → logprob: -11.738086700439453
    9. '>A' → logprob: -12.238086700439453
    10. '<|end|>' → logprob: -12.238086700439453

Token 71: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.00030686063109897077
    2. '[' → logprob: -8.125307083129883
    3. '```' → logprob: -12.250307083129883
    4. 'j' → logprob: -13.125307083129883
    5. '[i' → logprob: -13.750307083129883
    6. ' [' → logprob: -14.375307083129883
    7. '[
' → logprob: -14.625307083129883
    8. ' ' → logprob: -15.000307083129883
    9. '   ' → logprob: -15.125307083129883
    10. '[js' → logprob: -15.375307083129883

Token 72: ']):
' (ID: 51989)
  Prédit: ']):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']):' → logprob: -0.3237091898918152
    2. '[j' → logprob: -2.44870924949646
    3. '):' → logprob: -2.94870924949646
    4. ')' → logprob: -3.07370924949646
    5. ']):
' → logprob: -3.32370924949646
    6. ')):' → logprob: -3.69870924949646
    7. ']' → logprob: -4.573709011077881
    8. '])' → logprob: -4.698709011077881
    9. '):
' → logprob: -6.323709011077881
    10. ']))' → logprob: -6.323709011077881

Token 73: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5308871269226074
    2. ':' → logprob: -1.6558871269226074
    3. '):' → logprob: -1.6558871269226074
    4. '):
' → logprob: -3.7808871269226074
    5. ')' → logprob: -6.280887126922607
    6. ':
' → logprob: -6.280887126922607
    7. ' :' → logprob: -6.780887126922607
    8. ',' → logprob: -7.530887126922607
    9. ' ):' → logprob: -8.155887603759766
    10. '   ' → logprob: -8.280887603759766

Token 74: ' ex' (ID: 513)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.6346609592437744
    2. '       ' → logprob: -1.6346609592437744
    3. '        ' → logprob: -2.0096609592437744
    4. 'j' → logprob: -3.5096609592437744
    5. '           ' → logprob: -3.5096609592437744
    6. ' ex' → logprob: -3.6346609592437744
    7. ' ' → logprob: -3.6346609592437744
    8. 'ex' (adapté à ' ex') → logprob: -4.884660720825195
    9. '   ' → logprob: -5.884660720825195
    10. '        
' → logprob: -6.134660720825195

Token 75: ' =' (ID: 314)
  Prédit: ' ^='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ^=' → logprob: -0.6547256708145142
    2. ' +=' → logprob: -0.9047256708145142
    3. '+=' → logprob: -2.9047255516052246
    4. ' =' → logprob: -4.779725551605225
    5. '=' → logprob: -5.154725551605225
    6. '^' → logprob: -5.404725551605225
    7. ' |=' → logprob: -7.029725551605225
    8. ' ' → logprob: -7.279725551605225
    9. ' ^' → logprob: -8.029726028442383
    10. ' <<=' → logprob: -8.529726028442383

Token 76: ' add' (ID: 1147)
  Prédit: ' ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ex' → logprob: -0.08964285999536514
    2. 'ex' → logprob: -2.4646427631378174
    3. ' A' → logprob: -7.9646430015563965
    4. 'A' → logprob: -8.339642524719238
    5. '	ex' → logprob: -10.339642524719238
    6. ' ' → logprob: -10.339642524719238
    7. '<|end|>' → logprob: -10.589642524719238
    8. ' ' → logprob: -11.589642524719238
    9. '(ex' → logprob: -12.089642524719238
    10. '_ex' → logprob: -12.589642524719238

Token 77: '_to' (ID: 5089)
  Prédit: '(A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.3315078616142273
    2. '(ex' → logprob: -1.581507921218872
    3. 'ed' → logprob: -3.456507921218872
    4. '(' → logprob: -4.081507682800293
    5. 'ex' → logprob: -4.456507682800293
    6. '_ex' → logprob: -5.581507682800293
    7. '   ' → logprob: -6.206507682800293
    8. ')' → logprob: -6.456507682800293
    9. 'A' → logprob: -6.831507682800293
    10. '_element' → logprob: -6.831507682800293

Token 78: '_ex' (ID: 5724)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.6507802605628967
    2. ' ex' → logprob: -1.900780200958252
    3. '_segment' → logprob: -2.025780200958252
    4. 'segment' → logprob: -2.400780200958252
    5. '(ex' → logprob: -3.900780200958252
    6. '_ex' → logprob: -4.025780200958252
    7. 'x' → logprob: -4.150780200958252
    8. '_extended' → logprob: -4.775780200958252
    9. 's' → logprob: -5.650780200958252
    10. 'd' → logprob: -5.775780200958252

Token 79: '(ex' (ID: 9292)
  Prédit: '(ex'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ex' → logprob: -0.03474990651011467
    2. '(x' → logprob: -4.409749984741211
    3. 'x' → logprob: -4.659749984741211
    4. '(A' → logprob: -5.409749984741211
    5. 't' → logprob: -5.909749984741211
    6. '(' → logprob: -6.659749984741211
    7. 'ex' → logprob: -6.909749984741211
    8. 'xt' → logprob: -7.284749984741211
    9. 's' → logprob: -8.284749984741211
    10. '(a' → logprob: -8.409749984741211

Token 80: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.15441757265944e-05
    2. ' ,' → logprob: -10.875031471252441
    3. ',A' → logprob: -11.750031471252441
    4. ',
' → logprob: -13.500031471252441
    5. ')' → logprob: -14.125031471252441
    6. 'A' → logprob: -14.500031471252441
    7. '<|end|>' → logprob: -14.500031471252441
    8. '   ' → logprob: -15.125031471252441
    9. ',j' → logprob: -15.250031471252441
    10. ' ' → logprob: -15.625031471252441

Token 81: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.3136896789073944
    2. 'A' → logprob: -1.3136897087097168
    3. '<|end|>' → logprob: -8.813689231872559
    4. '	A' → logprob: -9.313689231872559
    5. ' ' → logprob: -9.438689231872559
    6. ' ' → logprob: -10.438689231872559
    7. ')' → logprob: -10.438689231872559
    8. '   ' → logprob: -11.438689231872559
    9. '    ' → logprob: -11.563689231872559
    10. '<|end|>' → logprob: -12.563689231872559

Token 82: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -3.750436007976532e-05
    2. '[' → logprob: -10.25003719329834
    3. ')' → logprob: -14.00003719329834
    4. 'j' → logprob: -14.12503719329834
    5. '[
' → logprob: -16.125038146972656
    6. '[i' → logprob: -16.375038146972656
    7. '[js' → logprob: -16.625038146972656
    8. '```' → logprob: -16.875038146972656
    9. ')[' → logprob: -17.500038146972656
    10. ',j' → logprob: -17.625038146972656

Token 83: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07916219532489777
    2. ')
' → logprob: -2.579162120819092
    3. ')

' → logprob: -8.45416259765625
    4. ')
' → logprob: -10.20416259765625
    5. '))' → logprob: -12.20416259765625
    6. ' )' → logprob: -12.82916259765625
    7. '   ' → logprob: -12.82916259765625
    8. ' )
' → logprob: -13.07916259765625
    9. '),' → logprob: -13.20416259765625
    10. '))
' → logprob: -13.70416259765625

Token 84: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00015991552209015936
    2. ',' → logprob: -10.250160217285156
    3. 'j' → logprob: -10.375160217285156
    4. '   ' → logprob: -10.625160217285156
    5. '        
' → logprob: -11.375160217285156
    6. '[j' → logprob: -11.375160217285156
    7. ',j' → logprob: -11.500160217285156
    8. '           ' → logprob: -11.875160217285156
    9. '	j' → logprob: -12.125160217285156
    10. '
' → logprob: -12.250160217285156

Token 85: ' j' (ID: 441)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16132481396198273
    2. ' j' → logprob: -2.1613247394561768
    3. 'j' (adapté à ' j') → logprob: -3.4113247394561768
    4. '   ' → logprob: -7.911324977874756
    5. '	j' → logprob: -7.911324977874756
    6. ' ' → logprob: -10.411324501037598
    7. '           ' → logprob: -11.786324501037598
    8. '      ' → logprob: -11.786324501037598
    9. '	' → logprob: -12.036324501037598
    10. '    ' → logprob: -12.161324501037598

Token 86: ' =' (ID: 314)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.18205440044403076
    2. '+=' → logprob: -2.1820545196533203
    3. ' +=' → logprob: -2.9320545196533203
    4. ' +' → logprob: -8.18205451965332
    5. '=' → logprob: -9.80705451965332
    6. '++' → logprob: -12.55705451965332
    7. '+='' → logprob: -13.18205451965332
    8. ' ' → logprob: -13.30705451965332
    9. '+="' → logprob: -13.93205451965332
    10. '<|end|>' → logprob: -14.05705451965332

Token 87: ' increment' (ID: 24032)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.007611601613461971
    2. 'j' → logprob: -4.8826117515563965
    3. ' ' → logprob: -12.757611274719238
    4. '<|end|>' → logprob: -13.507611274719238
    5. '	j' → logprob: -14.632611274719238
    6. '<|end|>' → logprob: -14.757611274719238
    7. '+' → logprob: -16.007612228393555
    8. ' ' → logprob: -16.382612228393555
    9. ' +' → logprob: -16.757612228393555
    10. '```' → logprob: -17.632612228393555

Token 88: '(j' (ID: 4997)
  Prédit: '(j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.020599234849214554
    2. '(' → logprob: -3.895599126815796
    3. ' (' → logprob: -10.520599365234375
    4. 'j' → logprob: -10.895599365234375
    5. '(
' → logprob: -12.020599365234375
    6. ' j' → logprob: -13.020599365234375
    7. '	j' → logprob: -13.395599365234375
    8. ',j' → logprob: -15.270599365234375
    9. ':j' → logprob: -15.395599365234375
    10. '[j' → logprob: -15.520599365234375

Token 89: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003312819404527545
    2. ',' → logprob: -6.003312587738037
    3. '+' → logprob: -8.003313064575195
    4. ' )' → logprob: -8.253313064575195
    5. ' +' → logprob: -9.003313064575195
    6. ')
' → logprob: -10.253313064575195
    7. '1' → logprob: -10.878313064575195
    8. ' ' → logprob: -11.253313064575195
    9. ',j' → logprob: -11.378313064575195
    10. ' ,' → logprob: -11.878313064575195

Token 90: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 91: ' return' (ID: 622)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 92: ' j' (ID: 441)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.6784288883209229
    2. ' ex' → logprob: -1.1784288883209229
    3. ' i' → logprob: -2.053428888320923
    4. ' j' → logprob: -3.553428888320923
    5. 'ex' → logprob: -4.178428649902344
    6. 'j' → logprob: -5.803428649902344
    7. 'i' → logprob: -5.928428649902344
    8. '(i' → logprob: -5.928428649902344
    9. '(' → logprob: -6.303428649902344
    10. '(ex' → logprob: -6.428428649902344

Token 93: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 94: ' ex' (ID: 513)
  Prédit: ' ex'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ex' → logprob: -0.028796324506402016
    2. 'ex' → logprob: -3.653796434402466
    3. ' ' → logprob: -6.153796195983887
    4. '<|end|>' → logprob: -8.778796195983887
    5. 'space' → logprob: -9.403796195983887
    6. ' j' → logprob: -10.778796195983887
    7. ',' → logprob: -10.903796195983887
    8. 'j' → logprob: -11.278796195983887
    9. ' ' → logprob: -11.278796195983887
    10. ' 
' → logprob: -11.278796195983887

Token 95: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 96: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.09356600046157837
    2. '
' → logprob: -2.7185659408569336
    3. '<|end|>' → logprob: -4.593565940856934
    4. ')' → logprob: -6.218565940856934
    5. '

' → logprob: -6.343565940856934
    6. ' def' → logprob: -6.468565940856934
    7. '_' → logprob: -6.593565940856934
    8. 'd' → logprob: -6.718565940856934
    9. ' 
' → logprob: -6.843565940856934
    10. '```' → logprob: -7.093565940856934

Token 97: ' should' (ID: 1757)
  Prédit: ' should'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' should' → logprob: -0.04701043665409088
    2. ' process' → logprob: -4.17201042175293
    3. ' add' → logprob: -4.42201042175293
    4. 'should' → logprob: -4.67201042175293
    5. '_should' → logprob: -6.04701042175293
    6. ' increment' → logprob: -6.54701042175293
    7. ' _' → logprob: -6.79701042175293
    8. ' continue' → logprob: -6.92201042175293
    9. ' read' → logprob: -7.42201042175293
    10. '_' → logprob: -7.54701042175293

Token 98: '_continue' (ID: 188911)
  Prédit: '_continue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_continue' → logprob: -4.203409844194539e-05
    2. '_' → logprob: -11.000041961669922
    3. '_cont' → logprob: -11.375041961669922
    4. ' _' → logprob: -12.750041961669922
    5. 'Continue' → logprob: -13.250041961669922
    6. '_extend' → logprob: -13.375041961669922
    7. '_complete' → logprob: -13.625041961669922
    8. 'continue' → logprob: -14.000041961669922
    9. '_expand' → logprob: -14.125041961669922
    10. '_finish' → logprob: -14.125041961669922

Token 99: '(j' (ID: 4997)
  Prédit: '(j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.030520036816596985
    2. '(' → logprob: -3.655519962310791
    3. '(i' → logprob: -5.780519962310791
    4. '(N' → logprob: -7.030519962310791
    5. '(n' → logprob: -8.53052043914795
    6. '(index' → logprob: -11.15552043914795
    7. ' (' → logprob: -11.40552043914795
    8. '(I' → logprob: -12.90552043914795
    9. '(s' → logprob: -13.53052043914795
    10. '(len' → logprob: -13.53052043914795

Token 100: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010044389637187123
    2. ' ,' → logprob: -9.500100135803223
    3. ',N' → logprob: -10.750100135803223
    4. ',n' → logprob: -13.000100135803223
    5. ',j' → logprob: -13.875100135803223
    6. ',int' → logprob: -15.625100135803223
    7. '‌,' → logprob: -15.625100135803223
    8. ',
' → logprob: -15.875100135803223
    9. '_,' → logprob: -15.875100135803223
    10. '<N' → logprob: -17.00010108947754

Token 101: ' N' (ID: 478)
  Prédit: ' N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.07892415672540665
    2. 'N' → logprob: -2.5789241790771484
    3. ' n' → logprob: -10.828924179077148
    4. '<|end|>' → logprob: -12.328924179077148
    5. ' ' → logprob: -12.703924179077148
    6. 'n' → logprob: -12.703924179077148
    7. '   ' → logprob: -13.703924179077148
    8. '>N' → logprob: -14.078924179077148
    9. ',N' → logprob: -14.203924179077148
    10. '	N' → logprob: -14.453924179077148

Token 102: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0009213464800268412
    2. '):
' → logprob: -7.750921249389648
    3. ')' → logprob: -8.000921249389648
    4. ' ):' → logprob: -9.125921249389648
    5. ':' → logprob: -11.000921249389648
    6. ',' → logprob: -11.375921249389648
    7. '   ' → logprob: -11.500921249389648
    8. ' ' → logprob: -13.250921249389648
    9. '):
' → logprob: -13.375921249389648
    10. '>:' → logprob: -13.625921249389648

Token 103: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.039851114153862
    2. ' return' → logprob: -3.289851188659668
    3. '    ' → logprob: -6.914851188659668
    4. 'return' → logprob: -7.164851188659668
    5. ' j' → logprob: -10.539851188659668
    6. 'j' → logprob: -12.414851188659668
    7. '	return' → logprob: -12.539851188659668
    8. '```' → logprob: -13.289851188659668
    9. '    
' → logprob: -13.414851188659668
    10. '  ' → logprob: -14.289851188659668

Token 104: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.22596073150634766
    2. 'return' (adapté à ' return') → logprob: -1.7259607315063477
    3. '   ' → logprob: -3.7259607315063477
    4. 'j' → logprob: -9.600960731506348
    5. ' j' → logprob: -9.850960731506348
    6. '    ' → logprob: -10.350960731506348
    7. ' ' → logprob: -12.975960731506348
    8. '```' → logprob: -13.475960731506348
    9. '	return' → logprob: -13.850960731506348
    10. '    
' → logprob: -13.850960731506348

Token 105: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.0380457378923893
    2. 'j' → logprob: -3.288045644760132
    3. '   ' → logprob: -13.038045883178711
    4. ' ' → logprob: -14.163045883178711
    5. ' (' → logprob: -14.538045883178711
    6. ' ' → logprob: -14.913045883178711
    7. '	j' → logprob: -15.038045883178711
    8. '(j' → logprob: -15.413045883178711
    9. '(' → logprob: -16.78804588317871
    10. '    ' → logprob: -17.16304588317871

Token 106: ' <=' (ID: 5017)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.054958000779151917
    2. '<' → logprob: -2.9299581050872803
    3. ' ' → logprob: -9.92995834350586
    4. ' <=' → logprob: -11.80495834350586
    5. '<n' → logprob: -12.42995834350586
    6. '<size' → logprob: -13.05495834350586
    7. '<N' → logprob: -13.30495834350586
    8. ' <
' → logprob: -13.42995834350586
    9. ' j' → logprob: -13.55495834350586
    10. '[' → logprob: -13.92995834350586

Token 107: ' N' (ID: 478)
  Prédit: ' N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.5759791135787964
    2. 'N' → logprob: -0.8259791135787964
    3. ' ' → logprob: -10.325979232788086
    4. '   ' → logprob: -12.200979232788086
    5. '  ' → logprob: -13.950979232788086
    6. '	N' → logprob: -14.950979232788086
    7. 'n' → logprob: -15.700979232788086
    8. ' ' → logprob: -15.950979232788086
    9. ' (' → logprob: -16.325979232788086
    10. '    ' → logprob: -16.325979232788086

Token 108: '-' (ID: 12)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 109: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0921942703134846e-05
    2. ' ' → logprob: -11.50001049041748
    3. '   ' → logprob: -15.00001049041748
    4. '2' → logprob: -15.37501049041748
    5. '<|end|>' → logprob: -16.375011444091797
    6. '```' → logprob: -16.875011444091797
    7. '0' → logprob: -18.000011444091797
    8. '-' → logprob: -18.500011444091797
    9. '  ' → logprob: -18.625011444091797
    10. '...' → logprob: -20.000011444091797

Token 110: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 111: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.016233187168836594
    2. '<|end|>' → logprob: -4.391232967376709
    3. 'j' → logprob: -6.516232967376709
    4. '   ' → logprob: -7.141232967376709
    5. '<|end|>' → logprob: -7.891232967376709
    6. ' def' → logprob: -8.016233444213867
    7. ')' → logprob: -8.516233444213867
    8. '+' → logprob: -9.016233444213867
    9. '[' → logprob: -9.266233444213867
    10. '    ' → logprob: -10.391233444213867

Token 112: ' add' (ID: 1147)
  Prédit: ' add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.008280273526906967
    2. ' increment' → logprob: -5.258280277252197
    3. 'add' → logprob: -6.508280277252197
    4. ' can' → logprob: -7.883280277252197
    5. ' read' → logprob: -8.008279800415039
    6. ' def' → logprob: -8.258279800415039
    7. 'increment' → logprob: -8.758279800415039
    8. ' process' → logprob: -8.883279800415039
    9. ' is' → logprob: -9.633279800415039
    10. ' should' → logprob: -10.758279800415039

Token 113: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -7.896309739408025e-07
    2. 'to' → logprob: -15.750000953674316
    3. '_' → logprob: -16.375
    4. '##_' → logprob: -16.375
    5. ' _' → logprob: -17.0
    6. '_TO' → logprob: -17.125
    7. '_t' → logprob: -17.25
    8. 'def' → logprob: -17.375
    9. 'To' → logprob: -17.625
    10. '(_' → logprob: -17.75

Token 114: '_ex' (ID: 5724)
  Prédit: '_ex'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ex' → logprob: -0.31332018971443176
    2. 'ex' → logprob: -1.3133201599121094
    3. ' ex' → logprob: -10.18832015991211
    4. '(ex' → logprob: -11.93832015991211
    5. '	ex' → logprob: -12.06332015991211
    6. 'e' → logprob: -13.06332015991211
    7. '_' → logprob: -13.43832015991211
    8. 'exa' → logprob: -14.18832015991211
    9. 'def' → logprob: -14.56332015991211
    10. '_ext' → logprob: -14.81332015991211

Token 115: '(ex' (ID: 9292)
  Prédit: '(ex'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ex' → logprob: -0.02333119697868824
    2. '(' → logprob: -3.7733311653137207
    3. ' (' → logprob: -9.398331642150879
    4. '(
' → logprob: -13.898331642150879
    5. '(existing' → logprob: -15.148331642150879
    6. '(x' → logprob: -15.273331642150879
    7. '(e' → logprob: -15.523331642150879
    8. '(a' → logprob: -15.773331642150879
    9. 'ex' → logprob: -16.023330688476562
    10. '(exc' → logprob: -16.148330688476562

Token 116: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.9623810658231378e-05
    2. ' ,' → logprob: -10.875020027160645
    3. ',n' → logprob: -15.875020027160645
    4. ',
' → logprob: -16.500019073486328
    5. ',j' → logprob: -16.625019073486328
    6. ',x' → logprob: -16.750019073486328
    7. ',int' → logprob: -16.875019073486328
    8. ',value' → logprob: -17.125019073486328
    9. ',user' → logprob: -17.250019073486328
    10. ',e' → logprob: -17.500019073486328

Token 117: ' value' (ID: 1432)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.22806382179260254
    2. ' next' → logprob: -2.1030638217926025
    3. 'A' → logprob: -3.3530638217926025
    4. ' ex' → logprob: -3.8530638217926025
    5. ',' → logprob: -4.728063583374023
    6. 'next' → logprob: -5.228063583374023
    7. ' ' → logprob: -5.853063583374023
    8. ' x' → logprob: -6.228063583374023
    9. ' elem' → logprob: -6.478063583374023
    10. 'ex' → logprob: -6.853063583374023

Token 118: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.20146244764328003
    2. '):
' → logprob: -1.7014625072479248
    3. '):
' → logprob: -10.076462745666504
    4. '):

' → logprob: -12.951462745666504
    5. ' ):' → logprob: -13.201462745666504
    6. '   ' → logprob: -13.451462745666504
    7. ')' → logprob: -13.701462745666504
    8. ' ):
' → logprob: -15.326462745666504
    9. ':' → logprob: -16.451461791992188
    10. '():
' → logprob: -17.951461791992188

Token 119: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2284267544746399
    2. ' return' → logprob: -1.6034266948699951
    3. 'return' → logprob: -5.853426933288574
    4. ' ex' → logprob: -9.603426933288574
    5. '	return' → logprob: -10.853426933288574
    6. '    
' → logprob: -11.603426933288574
    7. ' 
' → logprob: -11.728426933288574
    8. '    ' → logprob: -11.728426933288574
    9. 'ex' → logprob: -11.853426933288574
    10. ')' → logprob: -12.353426933288574

Token 120: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.14938880503177643
    2. 'return' (adapté à ' return') → logprob: -2.1493887901306152
    3. ' ex' → logprob: -4.024388790130615
    4. 'ex' → logprob: -6.024388790130615
    5. '   ' → logprob: -6.274388790130615
    6. '    
' → logprob: -11.524389266967773
    7. ' ' → logprob: -12.149389266967773
    8. '	return' → logprob: -12.274389266967773
    9. '```' → logprob: -12.524389266967773
    10. 'eturn' → logprob: -13.024389266967773

Token 121: ' ex' (ID: 513)
  Prédit: ' ex'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ex' → logprob: -0.16023357212543488
    2. 'ex' → logprob: -1.9102336168289185
    3. '	ex' → logprob: -12.410233497619629
    4. '(ex' → logprob: -12.660233497619629
    5. ' ' → logprob: -14.160233497619629
    6. ' ' → logprob: -14.535233497619629
    7. ' (' → logprob: -15.160233497619629
    8. '   ' → logprob: -15.285233497619629
    9. '.ex' → logprob: -16.285234451293945
    10. '  ' → logprob: -16.597734451293945

Token 122: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.4759495258331299
    2. ' |' → logprob: -1.3509495258331299
    3. '+' → logprob: -2.47594952583313
    4. ' ^' → logprob: -3.72594952583313
    5. '|' → logprob: -4.725949287414551
    6. ' ' → logprob: -6.350949287414551
    7. '^' → logprob: -7.350949287414551
    8. ' or' → logprob: -8.60094928741455
    9. ' xor' → logprob: -10.60094928741455
    10. ' ' → logprob: -10.85094928741455

Token 123: ' value' (ID: 1432)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.12693630158901215
    2. ' value' → logprob: -2.126936197280884
    3. '(value' → logprob: -12.751935958862305
    4. ' ' → logprob: -13.126935958862305
    5. '	value' → logprob: -14.001935958862305
    6. '  ' → logprob: -14.376935958862305
    7. '   ' → logprob: -14.626935958862305
    8. '0' → logprob: -15.126935958862305
    9. ''value' → logprob: -15.501935958862305
    10. '"value' → logprob: -15.501935958862305

Token 124: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 125: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.021092046052217484
    2. 'j' → logprob: -4.646091938018799
    3. '<|end|>' → logprob: -4.771091938018799
    4. '<|end|>' → logprob: -6.396091938018799
    5. ' def' → logprob: -7.271091938018799
    6. '   ' → logprob: -8.396092414855957
    7. '```' → logprob: -10.396092414855957
    8. '    ' → logprob: -10.646092414855957
    9. ' j' → logprob: -10.896092414855957
    10. 'increment' → logprob: -11.021092414855957

Token 126: ' increment' (ID: 24032)
  Prédit: 'increment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'increment' → logprob: -0.21206127107143402
    2. 'main' → logprob: -2.5870611667633057
    3. 'process' → logprob: -3.2120611667633057
    4. 'read' → logprob: -3.8370611667633057
    5. 'can' → logprob: -4.212061405181885
    6. 'find' → logprob: -5.212061405181885
    7. 'max' → logprob: -5.212061405181885
    8. 'extend' → logprob: -5.337061405181885
    9. ' main' → logprob: -5.712061405181885
    10. 'solve' → logprob: -5.962061405181885

Token 127: '(value' (ID: 6333)
  Prédit: '(j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.5876231789588928
    2. '(' → logprob: -0.8376231789588928
    3. '(i' → logprob: -4.462623119354248
    4. '(n' → logprob: -10.462623596191406
    5. '(index' → logprob: -10.587623596191406
    6. '(

' → logprob: -11.837623596191406
    7. '(x' → logprob: -12.587623596191406
    8. '(
' → logprob: -12.712623596191406
    9. ' (' → logprob: -12.712623596191406
    10. '(idx' → logprob: -13.462623596191406

Token 128: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2520315647125244
    2. '):
' → logprob: -1.5020315647125244
    3. ')' → logprob: -9.627031326293945
    4. '):

' → logprob: -11.502031326293945
    5. '):
' → logprob: -12.002031326293945
    6. '   ' → logprob: -12.252031326293945
    7. 'value' → logprob: -12.252031326293945
    8. '(value' → logprob: -12.502031326293945
    9. ' ):' → logprob: -12.502031326293945
    10. '+' → logprob: -13.752031326293945

Token 129: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009730586782097816
    2. ' return' → logprob: -4.759730815887451
    3. 'return' → logprob: -6.884730815887451
    4. ' value' → logprob: -9.634730339050293
    5. 'value' → logprob: -10.759730339050293
    6. '    ' → logprob: -12.384730339050293
    7. '	return' → logprob: -14.009730339050293
    8. '```' → logprob: -15.509730339050293
    9. '  ' → logprob: -16.63473129272461
    10. '   ' → logprob: -16.75973129272461

Token 130: ' return' (ID: 622)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.5830936431884766
    2. 'return' (adapté à ' return') → logprob: -0.8330936431884766
    3. ' return' → logprob: -5.333093643188477
    4. ' value' → logprob: -6.083093643188477
    5. '   ' → logprob: -10.958093643188477
    6. '```' → logprob: -14.208093643188477
    7. '1' → logprob: -16.208093643188477
    8. ' ' → logprob: -16.833093643188477
    9. '    ' → logprob: -16.958093643188477
    10. '`' → logprob: -17.583093643188477

Token 131: ' value' (ID: 1432)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.313262403011322
    2. ' value' → logprob: -1.3132624626159668
    3. '1' → logprob: -14.313261985778809
    4. '(value' → logprob: -17.813262939453125
    5. ' ' → logprob: -19.438262939453125
    6. '"value' → logprob: -19.563262939453125
    7. '$value' → logprob: -19.938262939453125
    8. '	value' → logprob: -19.938262939453125
    9. ''value' → logprob: -20.063262939453125
    10. 'Value' → logprob: -20.188262939453125

Token 132: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3132663369178772
    2. ' +' → logprob: -1.3132662773132324
    3. ' +
' → logprob: -13.06326675415039
    4. '+
' → logprob: -13.93826675415039
    5. ' plus' → logprob: -14.43826675415039
    6. '+++' → logprob: -15.56326675415039
    7. 'value' → logprob: -15.93826675415039
    8. '<|end|>' → logprob: -16.31326675415039
    9. '+j' → logprob: -16.43826675415039
    10. '1' → logprob: -16.56326675415039

Token 133: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005532711511477828
    2. ' ' → logprob: -7.500553131103516
    3. '   ' → logprob: -15.375553131103516
    4. '  ' → logprob: -19.875553131103516
    5. ' ' → logprob: -20.000553131103516
    6. '```' → logprob: -20.125553131103516
    7. '    ' → logprob: -21.125553131103516
    8. '	' → logprob: -22.375553131103516
    9. '0' → logprob: -23.000553131103516
    10. '=' → logprob: -23.125553131103516

Token 134: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.25
    3. '   ' → logprob: -20.125
    4. '```' → logprob: -20.625
    5. '  ' → logprob: -22.375
    6. 'def' → logprob: -23.125
    7. '۱' → logprob: -23.5625
    8. '１' → logprob: -23.625
    9. '' → logprob: -24.3125
    10. '[' → logprob: -24.4375

Token 135: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 136: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0035302250180393457
    2. '<|end|>' → logprob: -5.753530025482178
    3. '```' → logprob: -8.628530502319336
    4. '<|end|>' → logprob: -9.753530502319336
    5. ' def' → logprob: -10.253530502319336
    6. '
' → logprob: -10.253530502319336
    7. '#' → logprob: -10.878530502319336
    8. '[' → logprob: -12.503530502319336
    9. 'for' → logprob: -12.753530502319336
    10. '  
' → logprob: -12.753530502319336

Token 137: ' count' (ID: 3605)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.16739849746227264
    2. 'main' → logprob: -1.917398452758789
    3. ' solve' → logprob: -5.917398452758789
    4. 'solve' → logprob: -6.542398452758789
    5. ' find' → logprob: -7.042398452758789
    6. 'max' → logprob: -7.417398452758789
    7. ' max' → logprob: -7.542398452758789
    8. ' process' → logprob: -8.667398452758789
    9. ' longest' → logprob: -8.917398452758789
    10. 'process' → logprob: -8.917398452758789

Token 138: '_segments' (ID: 142925)
  Prédit: '_segments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_segments' → logprob: -0.27110299468040466
    2. '_sub' → logprob: -1.521103024482727
    3. '_' → logprob: -5.1461029052734375
    4. '_unique' → logprob: -5.6461029052734375
    5. '_max' → logprob: -6.7711029052734375
    6. '_sequences' → logprob: -6.7711029052734375
    7. '_extended' → logprob: -7.0211029052734375
    8. '(' → logprob: -7.1461029052734375
    9. '_valid' → logprob: -7.2711029052734375
    10. '_dist' → logprob: -7.2711029052734375

Token 139: '(ans' (ID: 70054)
  Prédit: '(A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.5907217860221863
    2. '(' → logprob: -0.8407217860221863
    3. '():' → logprob: -4.340721607208252
    4. '(N' → logprob: -6.715721607208252
    5. 'def' → logprob: -9.34072208404541
    6. '(n' → logprob: -9.59072208404541
    7. '()' → logprob: -9.71572208404541
    8. '(def' → logprob: -10.34072208404541
    9. '(a' → logprob: -10.84072208404541
    10. '(:' → logprob: -10.96572208404541

Token 140: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04087034985423088
    2. '):' → logprob: -3.415870428085327
    3. '(A' → logprob: -5.540870189666748
    4. '(' → logprob: -7.040870189666748
    5. '   ' → logprob: -7.790870189666748
    6. ' ,' → logprob: -7.915870189666748
    7. ')' → logprob: -8.165870666503906
    8. '_,' → logprob: -8.415870666503906
    9. '):
' → logprob: -8.415870666503906
    10. 'def' → logprob: -8.790870666503906

Token 141: ' j' (ID: 441)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.5602578520774841
    2. 'A' → logprob: -0.9352578520774841
    3. ' N' → logprob: -4.560257911682129
    4. 'N' → logprob: -4.935257911682129
    5. ' arr' → logprob: -5.685257911682129
    6. ' ex' → logprob: -5.810257911682129
    7. 'ex' → logprob: -5.935257911682129
    8. 'arr' → logprob: -6.185257911682129
    9. '   ' → logprob: -6.935257911682129
    10. ' segments' → logprob: -7.060257911682129

Token 142: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06395954638719559
    2. '):' → logprob: -2.8139595985412598
    3. '):
' → logprob: -6.43895959854126
    4. ' ,' → logprob: -8.563959121704102
    5. ')' → logprob: -9.438959121704102
    6. ' ):' → logprob: -10.313959121704102
    7. ',
' → logprob: -10.563959121704102
    8. '):

' → logprob: -10.938959121704102
    9. ',j' → logprob: -11.813959121704102
    10. 'def' → logprob: -13.001459121704102

Token 143: ' i' (ID: 575)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.945539653301239
    2. ' N' → logprob: -0.945539653301239
    3. ' i' → logprob: -2.945539712905884
    4. 'i' → logprob: -2.945539712905884
    5. ' ex' → logprob: -3.320539712905884
    6. 'ex' → logprob: -3.320539712905884
    7. ' A' → logprob: -3.945539712905884
    8. 'A' → logprob: -4.445539474487305
    9. 'n' → logprob: -5.570539474487305
    10. 'j' → logprob: -5.945539474487305

Token 144: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00613651517778635
    2. '):
' → logprob: -5.131136417388916
    3. ',' → logprob: -9.256136894226074
    4. ' ):' → logprob: -10.006136894226074
    5. ')' → logprob: -10.256136894226074
    6. '):
' → logprob: -10.631136894226074
    7. '   ' → logprob: -12.756136894226074
    8. 'def' → logprob: -13.506136894226074
    9. '):

' → logprob: -13.631136894226074
    10. '**' → logprob: -15.006136894226074

Token 145: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0010708003537729383
    2. ' return' → logprob: -7.376070976257324
    3. 'return' → logprob: -7.751070976257324
    4. ' if' → logprob: -12.376070976257324
    5. '    ' → logprob: -12.751070976257324
    6. '	return' → logprob: -13.251070976257324
    7. 'def' → logprob: -13.501070976257324
    8. 'if' → logprob: -13.751070976257324
    9. ' ans' → logprob: -14.501070976257324
    10. '```' → logprob: -14.751070976257324

Token 146: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.4040544331073761
    2. '   ' → logprob: -1.1540544033050537
    3. ' return' → logprob: -4.279054641723633
    4. 'ans' → logprob: -5.779054641723633
    5. ' ans' → logprob: -9.654054641723633
    6. ' ' → logprob: -11.904054641723633
    7. '  ' → logprob: -12.279054641723633
    8. '	return' → logprob: -12.529054641723633
    9. 'if' → logprob: -13.029054641723633
    10. '(ans' → logprob: -13.154054641723633

Token 147: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.019149526953697205
    2. ' ans' → logprob: -4.019149303436279
    3. 'max' → logprob: -7.894149303436279
    4. '(ans' → logprob: -7.894149303436279
    5. ' max' → logprob: -8.769149780273438
    6. '   ' → logprob: -10.269149780273438
    7. '	ans' → logprob: -10.269149780273438
    8. ' ' → logprob: -11.269149780273438
    9. 'abs' → logprob: -13.019149780273438
    10. 'j' → logprob: -13.019149780273438

Token 148: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.11594951897859573
    2. '+' → logprob: -2.2409496307373047
    3. '<|end|>' → logprob: -5.990949630737305
    4. ',' → logprob: -8.865949630737305
    5. 'if' → logprob: -8.990949630737305
    6. ' if' → logprob: -9.365949630737305
    7. ' +
' → logprob: -9.490949630737305
    8. 'def' → logprob: -9.740949630737305
    9. ' +=' → logprob: -10.365949630737305
    10. '+
' → logprob: -11.115949630737305

Token 149: ' (' (ID: 350)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.588205099105835
    2. ' j' → logprob: -1.088205099105835
    3. '(j' → logprob: -2.463205099105835
    4. ' (' → logprob: -4.088205337524414
    5. ' max' → logprob: -5.588205337524414
    6. 'max' → logprob: -6.838205337524414
    7. '(max' → logprob: -7.463205337524414
    8. '(' → logprob: -7.963205337524414
    9. ' ' → logprob: -9.213205337524414
    10. '((' → logprob: -10.088205337524414

Token 150: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.07142370939254761
    2. ' j' → logprob: -2.6964237689971924
    3. '(j' → logprob: -6.821423530578613
    4. ' (' → logprob: -8.196423530578613
    5. ')' → logprob: -9.946423530578613
    6. '   ' → logprob: -10.696423530578613
    7. ' ' → logprob: -10.696423530578613
    8. '(' → logprob: -11.696423530578613
    9. '  ' → logprob: -12.321423530578613
    10. '	j' → logprob: -12.696423530578613

Token 151: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.18130965530872345
    2. '-' → logprob: -1.806309700012207
    3. ')' → logprob: -7.181309700012207
    4. ' ' → logprob: -7.806309700012207
    5. '   ' → logprob: -8.056309700012207
    6. '  ' → logprob: -10.181309700012207
    7. '    ' → logprob: -11.431309700012207
    8. ')-(' → logprob: -12.306309700012207
    9. '>' → logprob: -12.931309700012207
    10. 'def' → logprob: -12.931309700012207

Token 152: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.06523855030536652
    2. ' i' → logprob: -2.8152384757995605
    3. '1' → logprob: -5.8152384757995605
    4. ' (' → logprob: -9.565238952636719
    5. ' ' → logprob: -9.690238952636719
    6. '(i' → logprob: -9.815238952636719
    7. '(' → logprob: -10.065238952636719
    8. '   ' → logprob: -10.565238952636719
    9. '	i' → logprob: -11.690238952636719
    10. ')' → logprob: -11.815238952636719

Token 153: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002892258344218135
    2. ' )' → logprob: -8.250288963317871
    3. ')
' → logprob: -12.125288963317871
    4. '<|end|>' → logprob: -12.125288963317871
    5. '   ' → logprob: -12.500288963317871
    6. ')}' → logprob: -13.125288963317871
    7. '))' → logprob: -13.500288963317871
    8. ' +' → logprob: -13.625288963317871
    9. '+' → logprob: -13.875288963317871
    10. ')}}' → logprob: -14.000288963317871

Token 154: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -2.4034345187828876e-05
    2. ' def' → logprob: -11.00002384185791
    3. '<|end|>' → logprob: -12.87502384185791
    4. '```' → logprob: -13.25002384185791
    5. '
' → logprob: -13.75002384185791
    6. 'for' → logprob: -13.87502384185791
    7. '  
' → logprob: -15.00002384185791
    8. ' 
' → logprob: -16.375024795532227
    9. '\' → logprob: -16.750024795532227
    10. '[' → logprob: -16.750024795532227

Token 155: ' subtract' (ID: 71973)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.7416189908981323
    2. 'main' → logprob: -0.7416189908981323
    3. 'count' → logprob: -3.991619110107422
    4. 'def' → logprob: -4.866619110107422
    5. 'solve' → logprob: -4.991619110107422
    6. 'process' → logprob: -5.366619110107422
    7. ' count' → logprob: -5.616619110107422
    8. ' solve' → logprob: -5.866619110107422
    9. ' def' → logprob: -6.866619110107422
    10. ' process' → logprob: -6.991619110107422

Token 156: '_from' (ID: 12526)
  Prédit: '(value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(value' → logprob: -0.26305657625198364
    2. '(' → logprob: -2.013056516647339
    3. '(ans' → logprob: -3.263056516647339
    4. '(a' → logprob: -3.513056516647339
    5. ' (' → logprob: -3.888056516647339
    6. 'def' → logprob: -6.138056755065918
    7. '(_' → logprob: -6.763056755065918
    8. '(answer' → logprob: -7.138056755065918
    9. '(val' → logprob: -7.263056755065918
    10. '(def' → logprob: -7.513056755065918

Token 157: '_ex' (ID: 5724)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.059906549751758575
    2. 'ex' → logprob: -4.059906482696533
    3. '(ex' → logprob: -4.184906482696533
    4. 'ans' → logprob: -4.934906482696533
    5. ' (' → logprob: -5.059906482696533
    6. '_ex' → logprob: -5.559906482696533
    7. '_ans' → logprob: -6.184906482696533
    8. '(value' → logprob: -6.434906482696533
    9. ' ex' → logprob: -6.934906482696533
    10. '(answer' → logprob: -7.309906482696533

Token 158: '(ex' (ID: 9292)
  Prédit: '(ex'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ex' → logprob: -0.0007884251535870135
    2. '(' → logprob: -7.62578821182251
    3. ' (' → logprob: -8.125788688659668
    4. 'def' → logprob: -13.250788688659668
    5. '(def' → logprob: -14.375788688659668
    6. '(exc' → logprob: -14.750788688659668
    7. '```' → logprob: -15.375788688659668
    8. '(value' → logprob: -15.375788688659668
    9. '(existing' → logprob: -15.500788688659668
    10. '(exp' → logprob: -15.750788688659668

Token 159: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003380846756044775
    2. ' ,' → logprob: -8.000338554382324
    3. ',value' → logprob: -13.625338554382324
    4. 'ex' → logprob: -14.125338554382324
    5. ',
' → logprob: -15.125338554382324
    6. '(ex' → logprob: -16.250337600708008
    7. '_,' → logprob: -16.750337600708008
    8. ')' → logprob: -16.875337600708008
    9. 'value' → logprob: -17.000337600708008
    10. '):' → logprob: -17.125337600708008

Token 160: ' value' (ID: 1432)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.664377748966217
    2. ' A' → logprob: -1.4143776893615723
    3. 'ex' → logprob: -2.1643776893615723
    4. ' ex' → logprob: -2.5393776893615723
    5. 'value' → logprob: -4.039377689361572
    6. ')' → logprob: -4.414377689361572
    7. ' value' → logprob: -4.789377689361572
    8. '<|end|>' → logprob: -5.414377689361572
    9. 'def' → logprob: -6.164377689361572
    10. ' ' → logprob: -7.039377689361572

Token 161: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.25197625160217285
    2. '):
' → logprob: -1.5019762516021729
    3. ')' → logprob: -10.876976013183594
    4. '):
' → logprob: -11.251976013183594
    5. '   ' → logprob: -11.876976013183594
    6. ' ):' → logprob: -12.251976013183594
    7. '):

' → logprob: -13.251976013183594
    8. '(ex' → logprob: -14.626976013183594
    9. ' ):
' → logprob: -14.751976013183594
    10. ',' → logprob: -15.376976013183594

Token 162: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4637591540813446
    2. ' return' → logprob: -1.213759183883667
    3. ' ex' → logprob: -2.713759183883667
    4. 'return' → logprob: -5.213758945465088
    5. 'ex' → logprob: -6.088758945465088
    6. '	ex' → logprob: -12.713759422302246
    7. '    ' → logprob: -13.588759422302246
    8. ' ' → logprob: -13.588759422302246
    9. '	return' → logprob: -13.588759422302246
    10. '  ' → logprob: -14.338759422302246

Token 163: ' return' (ID: 622)
  Prédit: ' ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ex' → logprob: -0.0771133303642273
    2. 'ex' → logprob: -2.827113389968872
    3. ' return' → logprob: -4.327113151550293
    4. 'return' (adapté à ' return') → logprob: -6.327113151550293
    5. '   ' → logprob: -10.202113151550293
    6. '	ex' → logprob: -13.952113151550293
    7. ' ' → logprob: -15.077113151550293
    8. ' ' → logprob: -15.327113151550293
    9. '.ex' → logprob: -16.32711410522461
    10. '```' → logprob: -16.70211410522461

Token 164: ' ex' (ID: 513)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.011047814972698689
    2. ' ex' → logprob: -4.511047840118408
    3. '	ex' → logprob: -17.01104736328125
    4. '(ex' → logprob: -18.01104736328125
    5. '.ex' → logprob: -19.51104736328125
    6. '_ex' → logprob: -19.51104736328125
    7. 'exo' → logprob: -19.63604736328125
    8. 'Ex' → logprob: -20.26104736328125
    9. 'e' → logprob: -20.38604736328125
    10. ' ' → logprob: -20.51104736328125

Token 165: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.006743081379681826
    2. '-' → logprob: -5.00674295425415
    3. ' ' → logprob: -11.006743431091309
    4. ' ' → logprob: -12.131743431091309
    5. '-ex' → logprob: -12.506743431091309
    6. ' +' → logprob: -14.506743431091309
    7. '+' → logprob: -15.006743431091309
    8. '-value' → logprob: -15.256743431091309
    9. ' -
' → logprob: -15.381743431091309
    10. ' ex' → logprob: -16.131742477416992

Token 166: ' value' (ID: 1432)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.16022443771362305
    2. ' value' → logprob: -1.910224437713623
    3. '(value' → logprob: -16.16022491455078
    4. '	value' → logprob: -17.03522491455078
    5. 'ex' → logprob: -17.66022491455078
    6. '$value' → logprob: -17.66022491455078
    7. ''value' → logprob: -17.66022491455078
    8. '_value' → logprob: -18.16022491455078
    9. 'alue' → logprob: -18.28522491455078
    10. '"value' → logprob: -18.28522491455078

Token 167: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.14341193437576294
    2. '<|end|>' → logprob: -2.643411874771118
    3. '

' → logprob: -3.143411874771118
    4. '
' → logprob: -4.018412113189697
    5. ' def' → logprob: -7.018412113189697
    6. '<|end|>' → logprob: -7.893412113189697
    7. '```' → logprob: -9.893411636352539
    8. '\n' → logprob: -12.143411636352539
    9. '  
' → logprob: -12.268411636352539
    10. '\' → logprob: -12.393411636352539

Token 168: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -2.47495681833243e-05
    2. ' def' → logprob: -10.875024795532227
    3. '
' → logprob: -13.125024795532227
    4. '<|end|>' → logprob: -13.125024795532227
    5. '```' → logprob: -14.625024795532227
    6. '  
' → logprob: -15.125024795532227
    7. '

' → logprob: -15.375024795532227
    8. '(def' → logprob: -15.750024795532227
    9. '\' → logprob: -15.875024795532227
    10. ':def' → logprob: -15.875024795532227

Token 169: ' print' (ID: 2123)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.3022337555885315
    2. 'count' → logprob: -1.6772336959838867
    3. 'sl' → logprob: -3.9272336959838867
    4. 'process' → logprob: -4.302233695983887
    5. 'solve' → logprob: -4.427233695983887
    6. ' main' → logprob: -4.802233695983887
    7. 'max' → logprob: -5.177233695983887
    8. 'find' → logprob: -5.427233695983887
    9. 'two' → logprob: -6.427233695983887
    10. ' sliding' → logprob: -6.552233695983887

Token 170: '_result' (ID: 11623)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004290064796805382
    2. '("("' → logprob: -6.3792901039123535
    3. '(ans' → logprob: -7.1292901039123535
    4. '()' → logprob: -7.3792901039123535
    5. '_' → logprob: -8.129289627075195
    6. '_(' → logprob: -8.379289627075195
    7. '_result' → logprob: -9.379289627075195
    8. '("")' → logprob: -9.504289627075195
    9. '('' → logprob: -9.754289627075195
    10. '(_' → logprob: -9.879289627075195

Token 171: '(ans' (ID: 70054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.9071701169013977
    2. '(ans' → logprob: -1.032170057296753
    3. '():' → logprob: -1.907170057296753
    4. '()' → logprob: -2.407170057296753
    5. '(answer' → logprob: -7.657170295715332
    6. ' (' → logprob: -8.282170295715332
    7. '(result' → logprob: -8.657170295715332
    8. '("("' → logprob: -9.407170295715332
    9. '(()' → logprob: -9.532170295715332
    10. '(output' → logprob: -9.782170295715332

Token 172: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.09546706825494766
    2. ',' → logprob: -2.4704670906066895
    3. '):
' → logprob: -5.2204670906066895
    4. ')' → logprob: -6.8454670906066895
    5. '(ans' → logprob: -11.220466613769531
    6. ' ):' → logprob: -11.595466613769531
    7. '):

' → logprob: -12.220466613769531
    8. '):
' → logprob: -12.595466613769531
    9. '   ' → logprob: -13.595466613769531
    10. ':' → logprob: -13.595466613769531

Token 173: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00036156410351395607
    2. ' print' → logprob: -8.000361442565918
    3. 'print' → logprob: -10.625361442565918
    4. '```' → logprob: -13.625361442565918
    5. '   ' → logprob: -15.000361442565918
    6. '(print' → logprob: -16.625362396240234
    7. '	print' → logprob: -17.125362396240234
    8. 'def' → logprob: -17.125362396240234
    9. '    ' → logprob: -17.250362396240234
    10. '(' → logprob: -17.500362396240234

Token 174: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.12864850461483002
    2. ' print' → logprob: -2.128648519515991
    3. '   ' → logprob: -6.378648281097412
    4. '```' → logprob: -10.87864875793457
    5. 'def' → logprob: -12.87864875793457
    6. '`' → logprob: -17.87864875793457
    7. '``' → logprob: -18.00364875793457
    8. ' def' → logprob: -18.00364875793457
    9. '	print' → logprob: -18.12864875793457
    10. 'for' → logprob: -18.12864875793457

Token 175: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -4.8590300139039755e-05
    2. 'ans' → logprob: -10.000048637390137
    3. '(' → logprob: -12.750048637390137
    4. '(answer' → logprob: -15.875048637390137
    5. '(
' → logprob: -17.37504768371582
    6. '	ans' → logprob: -17.62504768371582
    7. '()' → logprob: -17.75004768371582
    8. '(len' → logprob: -17.87504768371582
    9. '(abs' → logprob: -18.87504768371582
    10. ' (' → logprob: -19.12504768371582

Token 176: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.6240566083070007e-06
    2. ')
' → logprob: -13.750001907348633
    3. ' )' → logprob: -15.625001907348633
    4. ')`' → logprob: -16.125001907348633
    5. '())' → logprob: -16.500001907348633
    6. '))' → logprob: -17.125001907348633
    7. '()' → logprob: -17.125001907348633
    8. '),' → logprob: -17.750001907348633
    9. '`)' → logprob: -18.000001907348633
    10. ')}' → logprob: -18.375001907348633

Token 177: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: 0.0
    2. 'if' → logprob: -17.125
    3. ' def' → logprob: -17.125
    4. '```' → logprob: -19.375
    5. '#' → logprob: -20.375
    6. 'n' → logprob: -20.5
    7. 'N' → logprob: -20.875
    8. 'ndef' → logprob: -22.0
    9. '
' → logprob: -22.75
    10. '0' → logprob: -23.25

Token 178: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.3592458665370941
    2. ' main' → logprob: -1.2342458963394165
    3. 'solve' → logprob: -4.984245777130127
    4. 'count' → logprob: -6.109245777130127
    5. ' solve' → logprob: -6.734245777130127
    6. ' count' → logprob: -7.984245777130127
    7. 'calculate' → logprob: -9.359246253967285
    8. 'solution' → logprob: -10.984246253967285
    9. 'process' → logprob: -11.609246253967285
    10. 'find' → logprob: -12.109246253967285

Token 179: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.000283265660982579
    2. '():
' → logprob: -8.375283241271973
    3. ' ():' → logprob: -10.625283241271973
    4. '()' → logprob: -10.875283241271973
    5. '(' → logprob: -11.875283241271973
    6. '_' → logprob: -13.750283241271973
    7. 'def' → logprob: -14.500283241271973
    8. '():
' → logprob: -14.625283241271973
    9. '(:' → logprob: -16.50028419494629
    10. '():

' → logprob: -16.50028419494629

Token 180: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07610070705413818
    2. 'n' → logprob: -3.3261008262634277
    3. ' n' → logprob: -3.9511008262634277
    4. ' N' → logprob: -4.326100826263428
    5. 'N' → logprob: -5.326100826263428
    6. ' ' → logprob: -11.32610034942627
    7. '	n' → logprob: -12.07610034942627
    8. '```' → logprob: -12.82610034942627
    9. 'i' → logprob: -13.20110034942627
    10. ' i' → logprob: -13.32610034942627

Token 181: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' (adapté à ' N') → logprob: -0.1263754516839981
    2. 'n' → logprob: -2.251375436782837
    3. '   ' → logprob: -4.626375675201416
    4. ' N' → logprob: -5.751375675201416
    5. ' n' → logprob: -7.751375675201416
    6. ' ' → logprob: -11.001375198364258
    7. 't' → logprob: -11.126375198364258
    8. 'i' → logprob: -11.626375198364258
    9. 'T' → logprob: -12.376375198364258
    10. '    
' → logprob: -13.001375198364258

Token 182: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.013684926554560661
    2. '=' → logprob: -4.3886847496032715
    3. ',' → logprob: -6.7636847496032715
    4. ' ' → logprob: -12.01368522644043
    5. '   ' → logprob: -12.13868522644043
    6. ' =
' → logprob: -12.63868522644043
    7. ' ,' → logprob: -13.13868522644043
    8. '=int' → logprob: -13.88868522644043
    9. '=input' → logprob: -14.26368522644043
    10. '    ' → logprob: -15.01368522644043

Token 183: ' read' (ID: 1729)
  Prédit: ' read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.1002107709646225
    2. 'read' → logprob: -2.350210666656494
    3. ' int' → logprob: -12.600211143493652
    4. 'int' → logprob: -14.350211143493652
    5. '	read' → logprob: -15.850211143493652
    6. '(read' → logprob: -18.225210189819336
    7. '_read' → logprob: -18.975210189819336
    8. '   ' → logprob: -19.475210189819336
    9. '.read' → logprob: -19.975210189819336
    10. ' reads' → logprob: -20.100210189819336

Token 184: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.014540953561663628
    2. '_' → logprob: -4.764541149139404
    3. '()' → logprob: -5.139541149139404
    4. '()
' → logprob: -10.889540672302246
    5. '_int' → logprob: -11.139540672302246
    6. '_line' → logprob: -12.014540672302246
    7. 'input' → logprob: -12.889540672302246
    8. '_Input' → logprob: -13.639540672302246
    9. 'int' → logprob: -13.889540672302246
    10. '_INPUT' → logprob: -14.014540672302246

Token 185: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0009158630855381489
    2. '()
' → logprob: -7.000916004180908
    3. '   ' → logprob: -13.12591552734375
    4. '()\' → logprob: -14.12591552734375
    5. '()<' → logprob: -15.12591552734375
    6. '())' → logprob: -15.25091552734375
    7. ' ()' → logprob: -15.37591552734375
    8. '()

' → logprob: -15.50091552734375
    9. '()
' → logprob: -15.75091552734375
    10. '();' → logprob: -16.25091552734375

Token 186: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02628961205482483
    2. ' A' → logprob: -4.026289463043213
    3. 'A' → logprob: -4.901289463043213
    4. '    
' → logprob: -8.276289939880371
    5. '    ' → logprob: -9.151289939880371
    6. '	A' → logprob: -9.401289939880371
    7. '
' → logprob: -9.901289939880371
    8. '<|end|>' → logprob: -10.151289939880371
    9. '```' → logprob: -10.276289939880371
    10. ' ' → logprob: -11.151289939880371

Token 187: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' (adapté à ' A') → logprob: -0.0006388116744346917
    2. ' A' → logprob: -7.375638961791992
    3. '   ' → logprob: -11.375638961791992
    4. 'arr' → logprob: -15.375638961791992
    5. '	A' → logprob: -15.625638961791992
    6. 'ans' → logprob: -16.375638961791992
    7. ' ' → logprob: -16.500638961791992
    8. '```' → logprob: -16.750638961791992
    9. 'i' → logprob: -16.875638961791992
    10. 'a' → logprob: -17.250638961791992

Token 188: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.020545274019241333
    2. '=' → logprob: -3.895545244216919
    3. '   ' → logprob: -13.52054500579834
    4. ' ' → logprob: -14.02054500579834
    5. '[' → logprob: -14.77054500579834
    6. ',' → logprob: -15.39554500579834
    7. ' =
' → logprob: -15.52054500579834
    8. '    ' → logprob: -15.64554500579834
    9. '  ' → logprob: -15.89554500579834
    10. '	' → logprob: -16.645545959472656

Token 189: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.12692883610725403
    2. ' read' → logprob: -2.1269288063049316
    3. '	read' → logprob: -14.75192928314209
    4. 'list' → logprob: -15.50192928314209
    5. '(read' → logprob: -16.126928329467773
    6. '   ' → logprob: -17.751928329467773
    7. ' list' → logprob: -17.876928329467773
    8. '[]' → logprob: -18.126928329467773
    9. '[' → logprob: -18.251928329467773
    10. ' ' → logprob: -18.751928329467773

Token 190: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -5.512236498361744e-07
    2. '_input' → logprob: -15.375000953674316
    3. '_line' → logprob: -15.500000953674316
    4. 'list' → logprob: -17.875
    5. '_' → logprob: -18.5
    6. ' _' → logprob: -18.875
    7. '_array' → logprob: -19.625
    8. '_lists' → logprob: -19.75
    9. '_string' → logprob: -20.0
    10. 'List' → logprob: -20.0

Token 191: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07312484830617905
    2. '
' → logprob: -2.698124885559082
    3. '    
' → logprob: -5.823124885559082
    4. 'def' → logprob: -9.448124885559082
    5. '```' → logprob: -9.948124885559082
    6. '<|end|>' → logprob: -10.823124885559082
    7. '()
' → logprob: -11.323124885559082
    8. '  
' → logprob: -11.323124885559082
    9. '
' → logprob: -11.573124885559082
    10. '()' → logprob: -11.573124885559082

Token 192: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09502943605184555
    2. ' ans' → logprob: -2.720029354095459
    3. 'ans' → logprob: -3.720029354095459
    4. ' i' → logprob: -8.095029830932617
    5. 'i' → logprob: -9.470029830932617
    6. '	ans' → logprob: -9.595029830932617
    7. ' ex' → logprob: -10.845029830932617
    8. '(ans' → logprob: -10.845029830932617
    9. '```' → logprob: -10.970029830932617
    10. 'ex' → logprob: -11.470029830932617

Token 193: ' ex' (ID: 513)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.014500649645924568
    2. 'i' → logprob: -5.139500617980957
    3. ' ans' → logprob: -5.264500617980957
    4. '   ' → logprob: -5.764500617980957
    5. ' i' → logprob: -9.014500617980957
    6. 'ex' (adapté à ' ex') → logprob: -10.014500617980957
    7. 'j' → logprob: -11.014500617980957
    8. '	ans' → logprob: -11.264500617980957
    9. 'answer' → logprob: -11.389500617980957
    10. '```' → logprob: -11.889500617980957

Token 194: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014170682057738304
    2. '=' → logprob: -4.2641706466674805
    3. ',' → logprob: -12.51417064666748
    4. '   ' → logprob: -13.38917064666748
    5. 'x' → logprob: -14.38917064666748
    6. ' ' → logprob: -14.38917064666748
    7. '  ' → logprob: -15.51417064666748
    8. ')' → logprob: -15.76417064666748
    9. ' ' → logprob: -15.76417064666748
    10. '	' → logprob: -16.014171600341797

Token 195: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00026300468016415834
    2. ' ' → logprob: -8.250263214111328
    3. 'A' → logprob: -13.500263214111328
    4. '   ' → logprob: -15.000263214111328
    5. ' A' → logprob: -17.250263214111328
    6. '```' → logprob: -18.250263214111328
    7. '۰' → logprob: -18.250263214111328
    8. '  ' → logprob: -18.750263214111328
    9. '00' → logprob: -18.875263214111328
    10. '<|end|>' → logprob: -18.875263214111328

Token 196: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001709805685095489
    2. 'A' → logprob: -6.376709938049316
    3. ' ' → logprob: -12.126709938049316
    4. '   ' → logprob: -15.251709938049316
    5. ' A' → logprob: -15.501709938049316
    6. '=' → logprob: -15.564209938049316
    7. '1' → logprob: -15.876709938049316
    8. '```' → logprob: -15.939209938049316
    9. 'O' → logprob: -16.001708984375
    10. 'N' → logprob: -16.064208984375

Token 197: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005620754323899746
    2. 'ans' → logprob: -6.505620956420898
    3. '
' → logprob: -6.755620956420898
    4. 'i' → logprob: -7.005620956420898
    5. ' ans' → logprob: -7.130620956420898
    6. ' i' → logprob: -7.630620956420898
    7. ',' → logprob: -8.505620956420898
    8. '	ans' → logprob: -8.630620956420898
    9. '```' → logprob: -8.880620956420898
    10. '    
' → logprob: -9.255620956420898

Token 198: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003818606724962592
    2. 'ans' → logprob: -6.128818511962891
    3. ' ans' → logprob: -6.503818511962891
    4. '	ans' → logprob: -9.87881851196289
    5. 'i' → logprob: -10.37881851196289
    6. '```' → logprob: -11.00381851196289
    7. '<|end|>' → logprob: -11.37881851196289
    8. '(ans' → logprob: -11.50381851196289
    9. ' i' → logprob: -12.50381851196289
    10. 'def' → logprob: -13.62881851196289

Token 199: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.22561269998550415
    2. 'i' → logprob: -1.6006126403808594
    3. '   ' → logprob: -9.10061264038086
    4. 'answer' → logprob: -10.22561264038086
    5. 'j' → logprob: -10.97561264038086
    6. ' ans' → logprob: -11.47561264038086
    7. '```' → logprob: -11.60061264038086
    8. '	ans' → logprob: -11.97561264038086
    9. ' i' → logprob: -12.97561264038086
    10. '(ans' → logprob: -13.47561264038086

Token 200: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006721536163240671
    2. '=' → logprob: -5.006721496582031
    3. ' +=' → logprob: -13.131721496582031
    4. ',' → logprob: -13.381721496582031
    5. ' ' → logprob: -13.881721496582031
    6. ')' → logprob: -14.381721496582031
    7. '   ' → logprob: -15.131721496582031
    8. ' =
' → logprob: -15.381721496582031
    9. ' =)' → logprob: -16.00672149658203
    10. ' ,' → logprob: -16.25672149658203

Token 201: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.016037186607718468
    2. ' ' → logprob: -4.1410369873046875
    3. '   ' → logprob: -12.891036987304688
    4. '  ' → logprob: -15.516036987304688
    5. ' ' → logprob: -16.641036987304688
    6. '    ' → logprob: -17.891036987304688
    7. '```' → logprob: -18.078536987304688
    8. 'def' → logprob: -18.203536987304688
    9. '۰' → logprob: -18.516036987304688
    10. '000' → logprob: -18.766036987304688

Token 202: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.1888679839321412e-05
    2. ' ' → logprob: -10.750021934509277
    3. 'int' → logprob: -16.50002098083496
    4. '   ' → logprob: -17.00002098083496
    5. '```' → logprob: -17.12502098083496
    6. '000' → logprob: -17.25002098083496
    7. 'main' → logprob: -17.81252098083496
    8. '[' → logprob: -17.87502098083496
    9. '۰' → logprob: -18.00002098083496
    10. 'count' → logprob: -18.00002098083496

Token 203: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008588452823460102
    2. '<|end|>' → logprob: -5.5085883140563965
    3. '
' → logprob: -6.7585883140563965
    4. 'i' → logprob: -6.7585883140563965
    5. '```' → logprob: -7.2585883140563965
    6. 'j' → logprob: -7.6335883140563965
    7. ' i' → logprob: -8.008588790893555
    8. ' for' → logprob: -8.383588790893555
    9. 'def' → logprob: -9.508588790893555
    10. '    
' → logprob: -9.508588790893555

Token 204: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003558612195774913
    2. 'i' → logprob: -6.00355863571167
    3. ' i' → logprob: -6.87855863571167
    4. '```' → logprob: -10.128558158874512
    5. 'j' → logprob: -12.378558158874512
    6. '	i' → logprob: -13.253558158874512
    7. ' for' → logprob: -13.378558158874512
    8. 'def' → logprob: -13.628558158874512
    9. 'for' → logprob: -14.128558158874512
    10. ',i' → logprob: -14.253558158874512

Token 205: ' j' (ID: 441)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.023766905069351196
    2. '   ' → logprob: -3.7737669944763184
    3. 'for' → logprob: -8.14876651763916
    4. 'j' (adapté à ' j') → logprob: -9.14876651763916
    5. ' i' → logprob: -9.52376651763916
    6. '```' → logprob: -10.02376651763916
    7. 'while' → logprob: -12.89876651763916
    8. ' for' → logprob: -13.02376651763916
    9. '	i' → logprob: -13.89876651763916
    10. '  ' → logprob: -13.89876651763916

Token 206: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02325887233018875
    2. '=' → logprob: -3.773258924484253
    3. ',' → logprob: -12.023259162902832
    4. ' ' → logprob: -12.523259162902832
    5. '   ' → logprob: -14.398259162902832
    6. ' =
' → logprob: -14.523259162902832
    7. ' +=' → logprob: -14.648259162902832
    8. ' ,' → logprob: -14.898259162902832
    9. ' =)' → logprob: -15.148259162902832
    10. '<|end|>' → logprob: -15.523259162902832

Token 207: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001034714630804956
    2. ' ' → logprob: -6.876034736633301
    3. '1' → logprob: -13.3760347366333
    4. '   ' → logprob: -15.3760347366333
    5. '<|end|>' → logprob: -16.251033782958984
    6. '  ' → logprob: -16.876033782958984
    7. '=' → logprob: -17.876033782958984
    8. '    ' → logprob: -18.126033782958984
    9. '[' → logprob: -18.438533782958984
    10. ' =' → logprob: -18.563533782958984

Token 208: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.4153549020411447e-05
    2. ' ' → logprob: -11.25002384185791
    3. '1' → logprob: -11.50002384185791
    4. '   ' → logprob: -15.00002384185791
    5. 'j' → logprob: -15.62502384185791
    6. 'main' → logprob: -16.062524795532227
    7. 'i' → logprob: -16.187524795532227
    8. '  ' → logprob: -16.937524795532227
    9. 'def' → logprob: -16.937524795532227
    10. '-' → logprob: -17.187524795532227

Token 209: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.48083001375198364
    2. '<|end|>' → logprob: -1.2308299541473389
    3. ' for' → logprob: -3.105829954147339
    4. '
' → logprob: -3.730829954147339
    5. 'for' → logprob: -3.980829954147339
    6. '<|end|>' → logprob: -6.855830192565918
    7. '```' → logprob: -8.480830192565918
    8. '  ' → logprob: -8.605830192565918
    9. '	for' → logprob: -8.605830192565918
    10. '    
' → logprob: -8.730830192565918

Token 210: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3546999990940094
    2. 'for' → logprob: -1.604699969291687
    3. ' for' → logprob: -2.3547000885009766
    4. '<|end|>' → logprob: -6.104700088500977
    5. '
' → logprob: -8.229700088500977
    6. '	for' → logprob: -9.229700088500977
    7. '<|end|>' → logprob: -10.479700088500977
    8. 'def' → logprob: -10.604700088500977
    9. ' ' → logprob: -10.729700088500977
    10. 'i' → logprob: -10.729700088500977

Token 211: ' ex' (ID: 513)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.005107576493173838
    2. ' for' → logprob: -5.755107402801514
    3. '   ' → logprob: -6.380107402801514
    4. 'i' → logprob: -8.380107879638672
    5. '	for' → logprob: -13.755107879638672
    6. 'def' → logprob: -14.005107879638672
    7. '```' → logprob: -14.505107879638672
    8. '  ' → logprob: -15.255107879638672
    9. '<|end|>' → logprob: -15.255107879638672
    10. ' ' → logprob: -15.380107879638672

Token 212: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5284138917922974
    2. '=' → logprob: -1.5284138917922974
    3. ' =' → logprob: -1.6534138917922974
    4. ' ,' → logprob: -6.403413772583008
    5. ' +=' → logprob: -9.153413772583008
    6. '<|end|>' → logprob: -9.653413772583008
    7. '0' → logprob: -10.278413772583008
    8. 'def' → logprob: -10.278413772583008
    9. ',j' → logprob: -10.403413772583008
    10. '   ' → logprob: -10.528413772583008

Token 213: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04360935464501381
    2. 'add' → logprob: -3.418609380722046
    3. ' ' → logprob: -4.918609142303467
    4. ' add' → logprob: -6.043609142303467
    5. 'A' → logprob: -9.668609619140625
    6. 'subtract' → logprob: -9.918609619140625
    7. 'ex' → logprob: -10.793609619140625
    8. '+' → logprob: -11.043609619140625
    9. 'read' → logprob: -11.168609619140625
    10. ' A' → logprob: -11.606109619140625

Token 214: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02682187594473362
    2. 'add' → logprob: -3.6518218517303467
    3. 'A' → logprob: -7.776822090148926
    4. ' ' → logprob: -10.776822090148926
    5. ' add' → logprob: -11.276822090148926
    6. '-' → logprob: -11.401822090148926
    7. 'subtract' → logprob: -11.401822090148926
    8. 'read' → logprob: -11.651822090148926
    9. 'ex' → logprob: -12.151822090148926
    10. '{}' → logprob: -12.526822090148926

Token 215: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9541342854499817
    2. '<|end|>' → logprob: -1.329134225845337
    3. '
' → logprob: -1.454134225845337
    4. ' for' → logprob: -2.579134225845337
    5. 'for' → logprob: -3.329134225845337
    6. '<|end|>' → logprob: -6.329134464263916
    7. ' while' → logprob: -7.454134464263916
    8. '	for' → logprob: -7.704134464263916
    9. 'while' → logprob: -7.829134464263916
    10. ' ' → logprob: -7.954134464263916

Token 216: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.38379523158073425
    2. '   ' → logprob: -1.3837952613830566
    3. ' for' → logprob: -2.7587952613830566
    4. 'i' → logprob: -5.383795261383057
    5. ' i' → logprob: -9.383794784545898
    6. '<|end|>' → logprob: -10.508794784545898
    7. '	for' → logprob: -11.008794784545898
    8. 'def' → logprob: -11.883794784545898
    9. '
' → logprob: -13.258794784545898
    10. 'while' → logprob: -13.383794784545898

Token 217: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.004883738700300455
    2. 'i' → logprob: -5.504883766174316
    3. ' for' → logprob: -7.379883766174316
    4. '   ' → logprob: -8.629883766174316
    5. 'j' → logprob: -14.254883766174316
    6. 'while' → logprob: -14.504883766174316
    7. '	for' → logprob: -15.004883766174316
    8. ' i' → logprob: -15.254883766174316
    9. '<|end|>' → logprob: -15.379883766174316
    10. 'ans' → logprob: -15.629883766174316

Token 218: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.02328147180378437
    2. 'i' → logprob: -3.7732815742492676
    3. ' ' → logprob: -11.27328109741211
    4. '	i' → logprob: -12.02328109741211
    5. '_i' → logprob: -12.27328109741211
    6. '_' → logprob: -12.77328109741211
    7. ' _' → logprob: -13.27328109741211
    8. '(' → logprob: -13.27328109741211
    9. '(i' → logprob: -13.39828109741211
    10. ' ' → logprob: -13.64828109741211

Token 219: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01106221228837967
    2. 'in' → logprob: -4.511062145233154
    3. ' ' → logprob: -11.261062622070312
    4. '	in' → logprob: -14.386062622070312
    5. '0' → logprob: -16.261062622070312
    6. '_' → logprob: -16.386062622070312
    7. '<|end|>' → logprob: -16.386062622070312
    8. ',' → logprob: -16.511062622070312
    9. '_in' → logprob: -16.511062622070312
    10. 'import' → logprob: -16.636062622070312

Token 220: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.16023072600364685
    2. ' range' → logprob: -1.9102307558059692
    3. '(range' → logprob: -13.03523063659668
    4. ' in' → logprob: -13.53523063659668
    5. 'in' → logprob: -13.66023063659668
    6. ' ' → logprob: -14.03523063659668
    7. '0' → logprob: -14.78523063659668
    8. '   ' → logprob: -15.28523063659668
    9. '	range' → logprob: -16.28523063659668
    10. 'A' → logprob: -16.53523063659668

Token 221: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.01110936515033245
    2. '(' → logprob: -4.511109352111816
    3. ' (' → logprob: -10.261109352111816
    4. '(n' → logprob: -11.386109352111816
    5. '(
' → logprob: -11.636109352111816
    6. 'N' → logprob: -13.136109352111816
    7. '   ' → logprob: -13.386109352111816
    8. '(len' → logprob: -13.636109352111816
    9. '0' → logprob: -14.886109352111816
    10. ' N' → logprob: -15.261109352111816

Token 222: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0026640042196959257
    2. '):
' → logprob: -6.002664089202881
    3. ':' → logprob: -8.877663612365723
    4. ' ):' → logprob: -10.252663612365723
    5. ')' → logprob: -12.002663612365723
    6. '   ' → logprob: -12.502663612365723
    7. ',' → logprob: -13.127663612365723
    8. '):
' → logprob: -14.752663612365723
    9. '):

' → logprob: -14.752663612365723
    10. ' :' → logprob: -16.00266456604004

Token 223: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009623159654438496
    2. ' if' → logprob: -5.634623050689697
    3. ' while' → logprob: -5.759623050689697
    4. '   ' → logprob: -6.009623050689697
    5. 'while' → logprob: -8.384623527526855
    6. 'if' → logprob: -9.134623527526855
    7. '    ' → logprob: -10.259623527526855
    8. '<|end|>' → logprob: -11.634623527526855
    9. '```' → logprob: -12.884623527526855
    10. '        
' → logprob: -12.884623527526855

Token 224: ' j' (ID: 441)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.17914626002311707
    2. ' while' → logprob: -2.4291462898254395
    3. '       ' → logprob: -2.6791462898254395
    4. '   ' → logprob: -4.9291462898254395
    5. '	while' → logprob: -10.554145812988281
    6. '    ' → logprob: -11.429145812988281
    7. ' ' → logprob: -12.054145812988281
    8. 'if' → logprob: -12.679145812988281
    9. 'While' → logprob: -13.929145812988281
    10. '  ' → logprob: -13.929145812988281

Token 225: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5795047879219055
    2. '=' → logprob: -0.8295047879219055
    3. '=max' → logprob: -6.45450496673584
    4. '>=' → logprob: -6.82950496673584
    5. '<|end|>' → logprob: -8.20450496673584
    6. ' >=' → logprob: -8.32950496673584
    7. ',' → logprob: -9.07950496673584
    8. ' ' → logprob: -9.95450496673584
    9. ' if' → logprob: -10.20450496673584
    10. ')' → logprob: -10.20450496673584

Token 226: ' ex' (ID: 513)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.387637734413147
    2. ' ex' → logprob: -1.137637734413147
    3. 'process' → logprob: -7.512637615203857
    4. ' process' → logprob: -8.762638092041016
    5. '<|end|>' → logprob: -10.387638092041016
    6. '_ex' → logprob: -11.762638092041016
    7. ' ' → logprob: -12.262638092041016
    8. '=' → logprob: -12.512638092041016
    9. '	ex' → logprob: -13.325138092041016
    10. '(ex' → logprob: -13.387638092041016

Token 227: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25192973017692566
    2. ' =' → logprob: -1.501929759979248
    3. ',' → logprob: -15.50192928314209
    4. ')' → logprob: -15.87692928314209
    5. 'process' → logprob: -16.001930236816406
    6. '=

' → logprob: -16.876930236816406
    7. '   ' → logprob: -17.251930236816406
    8. ' ' → logprob: -17.751930236816406
    9. '=}' → logprob: -17.751930236816406
    10. ' +=' → logprob: -18.251930236816406

Token 228: ' process' (ID: 2273)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'process' → logprob: -0.038054682314395905
    2. ' process' → logprob: -3.2880547046661377
    3. '(process' → logprob: -11.288054466247559
    4. '	process' → logprob: -14.663054466247559
    5. '.process' → logprob: -16.538055419921875
    6. 'rocess' → logprob: -16.663055419921875
    7. '_process' → logprob: -16.913055419921875
    8. '   ' → logprob: -17.288055419921875
    9. 'proces' → logprob: -17.788055419921875
    10. 'processable' → logprob: -17.913055419921875

Token 229: '_segment' (ID: 71041)
  Prédit: '_segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_segment' → logprob: -7.896309739408025e-07
    2. 'segment' → logprob: -14.125000953674316
    3. '_seg' → logprob: -17.625
    4. 'Segment' → logprob: -18.0
    5. '_segments' → logprob: -18.375
    6. '(segment' → logprob: -18.375
    7. '_section' → logprob: -19.625
    8. ' segment' → logprob: -19.875
    9. '```' → logprob: -20.625
    10. '_sub' → logprob: -20.875

Token 230: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -1.1994775377388578e-05
    2. '(' → logprob: -11.375012397766113
    3. ' (' → logprob: -15.125012397766113
    4. '(
' → logprob: -16.125011444091797
    5. '```' → logprob: -17.000011444091797
    6. '(I' → logprob: -18.875011444091797
    7. '   ' → logprob: -18.875011444091797
    8. '((' → logprob: -19.250011444091797
    9. '
' → logprob: -20.125011444091797
    10. '(B' → logprob: -20.375011444091797

Token 231: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.822646693966817e-06
    2. ' ,' → logprob: -12.500007629394531
    3. ',j' → logprob: -13.125007629394531
    4. '   ' → logprob: -14.000007629394531
    5. ',N' → logprob: -14.250007629394531
    6. ',i' → logprob: -15.000007629394531
    7. ',n' → logprob: -16.75000762939453
    8. ',
' → logprob: -17.50000762939453
    9. ',A' → logprob: -18.37500762939453
    10. '```' → logprob: -19.12500762939453

Token 232: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.00018518301658332348
    2. ' N' → logprob: -8.625185012817383
    3. '   ' → logprob: -12.125185012817383
    4. ' ' → logprob: -17.125185012817383
    5. '    ' → logprob: -17.125185012817383
    6. '	N' → logprob: -17.375185012817383
    7. ',N' → logprob: -17.500185012817383
    8. '  ' → logprob: -17.625185012817383
    9. 'i' → logprob: -17.750185012817383
    10. 'len' → logprob: -18.375185012817383

Token 233: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.41866585687967e-06
    2. ' ,' → logprob: -12.125008583068848
    3. ',j' → logprob: -13.250008583068848
    4. ',i' → logprob: -13.750008583068848
    5. '   ' → logprob: -16.37500762939453
    6. ',
' → logprob: -18.00000762939453
    7. 'j' → logprob: -18.25000762939453
    8. '‌,' → logprob: -19.37500762939453
    9. ')' → logprob: -19.87500762939453
    10. '```' → logprob: -20.25000762939453

Token 234: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0015252141747623682
    2. ' i' → logprob: -6.626525402069092
    3. 'j' → logprob: -8.751524925231934
    4. '   ' → logprob: -10.376524925231934
    5. 'ex' → logprob: -12.251524925231934
    6. ' ' → logprob: -13.501524925231934
    7. 'A' → logprob: -13.626524925231934
    8. '  ' → logprob: -14.376524925231934
    9. '    ' → logprob: -14.376524925231934
    10. '	i' → logprob: -14.876524925231934

Token 235: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004293580132070929
    2. ' ,' → logprob: -8.500429153442383
    3. ',j' → logprob: -8.625429153442383
    4. '+' → logprob: -10.375429153442383
    5. '   ' → logprob: -12.375429153442383
    6. 'j' → logprob: -12.750429153442383
    7. ' +' → logprob: -13.000429153442383
    8. '+,' → logprob: -13.375429153442383
    9. '       ' → logprob: -13.875429153442383
    10. ')' → logprob: -14.375429153442383

Token 236: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0001439459010725841
    2. ' j' → logprob: -8.875144004821777
    3. '   ' → logprob: -12.875144004821777
    4. ')' → logprob: -14.500144004821777
    5. '	j' → logprob: -15.250144004821777
    6. ' ' → logprob: -16.12514305114746
    7. '```' → logprob: -16.12514305114746
    8. '    ' → logprob: -16.37514305114746
    9. '$j' → logprob: -16.37514305114746
    10. '[j' → logprob: -16.37514305114746

Token 237: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00022821188031230122
    2. ' ,' → logprob: -8.500227928161621
    3. 'ex' → logprob: -11.375227928161621
    4. '   ' → logprob: -11.875227928161621
    5. '       ' → logprob: -13.375227928161621
    6. ')' → logprob: -13.625227928161621
    7. ',
' → logprob: -14.250227928161621
    8. '+' → logprob: -14.625227928161621
    9. ' ex' → logprob: -15.000227928161621
    10. '-' → logprob: -15.125227928161621

Token 238: ' ex' (ID: 513)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.006716674659401178
    2. ' ex' → logprob: -5.006716728210449
    3. '   ' → logprob: -15.13171672821045
    4. ' ' → logprob: -15.25671672821045
    5. ')' → logprob: -15.50671672821045
    6. '  ' → logprob: -15.75671672821045
    7. '	ex' → logprob: -15.88171672821045
    8. '0' → logprob: -16.131715774536133
    9. 'e' → logprob: -16.881715774536133
    10. '(ex' → logprob: -17.006715774536133

Token 239: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2413034588098526
    2. '       ' → logprob: -2.1163034439086914
    3. ')
' → logprob: -2.3663034439086914
    4. ' )' → logprob: -9.741303443908691
    5. ' )
' → logprob: -11.866303443908691
    6. ')

' → logprob: -12.116303443908691
    7. '   ' → logprob: -12.241303443908691
    8. ')
' → logprob: -12.616303443908691
    9. '<|end|>' → logprob: -12.616303443908691
    10. '
' → logprob: -12.741303443908691

Token 240: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008151990361511707
    2. '   ' → logprob: -5.008152008056641
    3. '
' → logprob: -7.008152008056641
    4. '<|end|>' → logprob: -8.50815200805664
    5. '        
' → logprob: -9.13315200805664
    6. ' while' → logprob: -10.00815200805664
    7. ' if' → logprob: -10.38315200805664
    8. ',' → logprob: -10.75815200805664
    9. '```' → logprob: -11.00815200805664
    10. '  
' → logprob: -11.13315200805664

Token 241: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.0011459336383268237
    2. ' ans' → logprob: -7.751145839691162
    3. '   ' → logprob: -7.876145839691162
    4. '       ' → logprob: -8.25114631652832
    5. 'if' → logprob: -10.25114631652832
    6. 'while' → logprob: -10.62614631652832
    7. 'ex' → logprob: -12.12614631652832
    8. '	ans' → logprob: -12.37614631652832
    9. 'temp' → logprob: -13.62614631652832
    10. 'answer' → logprob: -14.25114631652832

Token 242: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.013137049041688442
    2. '=' → logprob: -4.388136863708496
    3. ' +=' → logprob: -7.388136863708496
    4. '+=' → logprob: -11.888136863708496
    5. ' ' → logprob: -13.638136863708496
    6. ',' → logprob: -16.138137817382812
    7. ')' → logprob: -16.263137817382812
    8. '+' → logprob: -16.513137817382812
    9. '   ' → logprob: -16.763137817382812
    10. '  ' → logprob: -16.888137817382812

Token 243: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.029890025034546852
    2. ' count' → logprob: -3.5298900604248047
    3. 'ans' → logprob: -9.029890060424805
    4. ' ans' → logprob: -10.904890060424805
    5. '(count' → logprob: -14.904890060424805
    6. '   ' → logprob: -15.404890060424805
    7. ' ' → logprob: -15.654890060424805
    8. 'answer' → logprob: -16.029890060424805
    9. 'j' → logprob: -16.154890060424805
    10. '	count' → logprob: -16.529890060424805

Token 244: '_segments' (ID: 142925)
  Prédit: '_segments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_segments' → logprob: -4.036524842376821e-05
    2. 'segments' → logprob: -10.125040054321289
    3. 'Segments' → logprob: -17.00004005432129
    4. '(ans' → logprob: -17.12504005432129
    5. '_sections' → logprob: -17.12504005432129
    6. '```' → logprob: -17.50004005432129
    7. '(' → logprob: -17.87504005432129
    8. '_segment' → logprob: -18.37504005432129
    9. ' segments' → logprob: -18.50004005432129
    10. 's' → logprob: -18.75004005432129

Token 245: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.00026503115077503026
    2. '(' → logprob: -8.250265121459961
    3. ' (' → logprob: -12.875265121459961
    4. '(answer' → logprob: -13.875265121459961
    5. '(
' → logprob: -15.750265121459961
    6. 'ans' → logprob: -16.75026512145996
    7. '```' → logprob: -17.25026512145996
    8. '	ans' → logprob: -18.00026512145996
    9. '   ' → logprob: -18.37526512145996
    10. ' ans' → logprob: -18.62526512145996

Token 246: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002439467643853277
    2. ',j' → logprob: -8.750244140625
    3. ' ,' → logprob: -9.375244140625
    4. '   ' → logprob: -14.750244140625
    5. ')' → logprob: -16.000244140625
    6. ',
' → logprob: -16.625244140625
    7. '(' → logprob: -17.250244140625
    8. ',int' → logprob: -17.875244140625
    9. ',y' → logprob: -18.000244140625
    10. ',i' → logprob: -18.375244140625

Token 247: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.2519349455833435
    2. ' j' → logprob: -1.5019350051879883
    3. '	j' → logprob: -13.001935005187988
    4. 'i' → logprob: -14.001935005187988
    5. '   ' → logprob: -14.001935005187988
    6. '$j' → logprob: -14.876935005187988
    7. '    ' → logprob: -15.001935005187988
    8. ' i' → logprob: -15.001935005187988
    9. ' ' → logprob: -15.126935005187988
    10. ',j' → logprob: -15.626935005187988

Token 248: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00038134094211272895
    2. ',i' → logprob: -8.125381469726562
    3. ' ,' → logprob: -9.375381469726562
    4. 'i' → logprob: -15.375381469726562
    5. ',
' → logprob: -16.625381469726562
    6. '   ' → logprob: -16.875381469726562
    7. '```' → logprob: -16.875381469726562
    8. ',j' → logprob: -17.875381469726562
    9. '[i' → logprob: -18.000381469726562
    10. '‌,' → logprob: -18.375381469726562

Token 249: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.018152287229895592
    2. ' i' → logprob: -4.018152236938477
    3. '   ' → logprob: -13.518152236938477
    4. ')' → logprob: -14.643152236938477
    5. '	i' → logprob: -15.643152236938477
    6. ' ' → logprob: -16.143152236938477
    7. '```' → logprob: -16.518152236938477
    8. ' ' → logprob: -17.143152236938477
    9. '_i' → logprob: -17.143152236938477
    10. '       ' → logprob: -17.143152236938477

Token 250: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06206907704472542
    2. ')
' → logprob: -2.8120691776275635
    3. '       ' → logprob: -9.687068939208984
    4. ')

' → logprob: -11.062068939208984
    5. ' )' → logprob: -11.937068939208984
    6. '+' → logprob: -12.437068939208984
    7. ')
' → logprob: -12.562068939208984
    8. '<|end|>' → logprob: -12.812068939208984
    9. ')return' → logprob: -13.437068939208984
    10. ')\
' → logprob: -13.812068939208984

Token 251: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014969787560403347
    2. '   ' → logprob: -4.389969825744629
    3. 'if' → logprob: -6.389969825744629
    4. ' if' → logprob: -7.764969825744629
    5. 'while' → logprob: -9.014969825744629
    6. 'ex' → logprob: -9.764969825744629
    7. '<|end|>' → logprob: -9.764969825744629
    8. '```' → logprob: -10.139969825744629
    9. ' while' → logprob: -10.764969825744629
    10. '
' → logprob: -11.139969825744629

Token 252: ' ex' (ID: 513)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.008588333614170551
    2. '       ' → logprob: -5.1335883140563965
    3. 'ex' (adapté à ' ex') → logprob: -6.1335883140563965
    4. '   ' → logprob: -7.8835883140563965
    5. ' if' → logprob: -9.258588790893555
    6. '
' → logprob: -11.508588790893555
    7. 'while' → logprob: -13.758588790893555
    8. '  ' → logprob: -14.383588790893555
    9. '           ' → logprob: -14.508588790893555
    10. '        
' → logprob: -14.633588790893555

Token 253: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0003811025235336274
    2. ' =' → logprob: -7.875380992889404
    3. '=sub' → logprob: -14.250381469726562
    4. '-=' → logprob: -15.250381469726562
    5. '   ' → logprob: -17.250381469726562
    6. 'subtract' → logprob: -17.250381469726562
    7. 's' → logprob: -18.250381469726562
    8. ',' → logprob: -18.625381469726562
    9. ' -=' → logprob: -18.625381469726562
    10. 'if' → logprob: -18.875381469726562

Token 254: ' subtract' (ID: 71973)
  Prédit: 'subtract'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'subtract' → logprob: -0.005237668287009001
    2. ' subtract' → logprob: -5.255237579345703
    3. '   ' → logprob: -13.130237579345703
    4. 'sub' → logprob: -14.130237579345703
    5. 'Subtract' → logprob: -15.005237579345703
    6. '.subtract' → logprob: -15.505237579345703
    7. 'substr' → logprob: -15.880237579345703
    8. '	sub' → logprob: -16.255237579345703
    9. '  ' → logprob: -16.380237579345703
    10. '```' → logprob: -16.380237579345703

Token 255: '_from' (ID: 12526)
  Prédit: '_from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_from' → logprob: -2.339278580620885e-06
    2. 'from' → logprob: -13.000001907348633
    3. '_to' → logprob: -16.875001907348633
    4. '_for' → logprob: -18.375001907348633
    5. '   ' → logprob: -19.375001907348633
    6. 'From' → logprob: -19.750001907348633
    7. '_of' → logprob: -20.000001907348633
    8. '_FROM' → logprob: -20.000001907348633
    9. ' from' → logprob: -20.375001907348633
    10. ' _' → logprob: -20.500001907348633

Token 256: '_ex' (ID: 5724)
  Prédit: '_ex'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ex' → logprob: -0.005238140933215618
    2. 'ex' → logprob: -5.255238056182861
    3. '(ex' → logprob: -13.38023853302002
    4. ' ex' → logprob: -13.63023853302002
    5. '_' → logprob: -14.00523853302002
    6. '	ex' → logprob: -15.13023853302002
    7. 'e' → logprob: -17.005237579345703
    8. 'x' → logprob: -17.130237579345703
    9. '_e' → logprob: -17.255237579345703
    10. ''ex' → logprob: -17.380237579345703

Token 257: '(ex' (ID: 9292)
  Prédit: '(ex'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ex' → logprob: -0.0017070822650566697
    2. 'ex' → logprob: -6.376707077026367
    3. '(' → logprob: -12.751707077026367
    4. '```' → logprob: -13.876707077026367
    5. '/ex' → logprob: -15.126707077026367
    6. '	ex' → logprob: -15.751707077026367
    7. ' ex' → logprob: -16.001707077026367
    8. ' (' → logprob: -16.001707077026367
    9. '_ex' → logprob: -16.251707077026367
    10. '-ex' → logprob: -16.501707077026367

Token 258: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007449488039128482
    2. ',A' → logprob: -7.750744819641113
    3. ' ,' → logprob: -8.250744819641113
    4. 'A' → logprob: -10.375744819641113
    5. '(A' → logprob: -11.000744819641113
    6. '   ' → logprob: -12.875744819641113
    7. '(' → logprob: -14.125744819641113
    8. ' A' → logprob: -15.000744819641113
    9. '```' → logprob: -15.000744819641113
    10. '(),' → logprob: -15.000744819641113

Token 259: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -5.872261317563243e-05
    2. ' A' → logprob: -9.750059127807617
    3. '   ' → logprob: -15.875059127807617
    4. '       ' → logprob: -16.125059127807617
    5. '	A' → logprob: -16.625059127807617
    6. '           ' → logprob: -17.000059127807617
    7. '(A' → logprob: -17.125059127807617
    8. '=A' → logprob: -17.375059127807617
    9. '[A' → logprob: -18.500059127807617
    10. ')' → logprob: -18.500059127807617

Token 260: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.676981345459353e-06
    2. 'i' → logprob: -12.125005722045898
    3. '[' → logprob: -15.250005722045898
    4. '[j' → logprob: -18.8750057220459
    5. '```' → logprob: -19.2500057220459
    6. '   ' → logprob: -19.8750057220459
    7. '[I' → logprob: -20.8750057220459
    8. '[
' → logprob: -20.8750057220459
    9. '_i' → logprob: -21.0000057220459
    10. ' i' → logprob: -21.1250057220459

Token 261: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.038462914526462555
    2. '])' → logprob: -3.2884628772735596
    3. ')
' → logprob: -8.28846263885498
    4. '))' → logprob: -9.16346263885498
    5. ')]' → logprob: -10.41346263885498
    6. ')])' → logprob: -11.41346263885498
    7. '})' → logprob: -12.41346263885498
    8. '])
' → logprob: -12.41346263885498
    9. ' )' → logprob: -12.53846263885498
    10. '`)' → logprob: -12.91346263885498

Token 262: '   ' (ID: 271)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.234706848859787
    2. '<|end|>' → logprob: -1.8597068786621094
    3. '   ' → logprob: -3.3597068786621094
    4. '```' → logprob: -4.734706878662109
    5. 'print' → logprob: -4.859706878662109
    6. '    ' → logprob: -7.609706878662109
    7. '<|end|>' → logprob: -7.859706878662109
    8. ')' → logprob: -8.48470687866211
    9. '        
' → logprob: -8.73470687866211
    10. 'if' → logprob: -9.10970687866211

Token 263: ' print' (ID: 2123)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 264: '_result' (ID: 11623)
  Prédit: '_result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_result' → logprob: -0.02201244607567787
    2. '(' → logprob: -4.397012233734131
    3. '(ans' → logprob: -4.772012233734131
    4. '(result' → logprob: -7.147012233734131
    5. 'result' → logprob: -10.147012710571289
    6. '(_' → logprob: -10.147012710571289
    7. '_' → logprob: -10.522012710571289
    8. '_(' → logprob: -10.897012710571289
    9. 'Result' → logprob: -11.147012710571289
    10. ' (' → logprob: -11.272012710571289

Token 265: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.00012296605564188212
    2. '(' → logprob: -9.125123023986816
    3. ' (' → logprob: -11.500123023986816
    4. '(answer' → logprob: -12.625123023986816
    5. '(
' → logprob: -15.375123023986816
    6. '```' → logprob: -15.875123023986816
    7. ' ' → logprob: -16.5001220703125
    8. '(an' → logprob: -17.2501220703125
    9. '   ' → logprob: -17.5001220703125
    10. '(abs' → logprob: -17.8751220703125

Token 266: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.1008713702030946e-06
    2. ')
' → logprob: -13.750001907348633
    3. ' )' → logprob: -14.250001907348633
    4. '))' → logprob: -16.250001907348633
    5. '())' → logprob: -16.875001907348633
    6. ')`' → logprob: -17.000001907348633
    7. '()' → logprob: -18.250001907348633
    8. ')}' → logprob: -18.500001907348633
    9. '`)' → logprob: -18.625001907348633
    10. ')

' → logprob: -18.875001907348633

Token 267: 'main' (ID: 7731)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7888373732566833
    2. 'if' → logprob: -0.9138373732566833
    3. '#' → logprob: -2.413837432861328
    4. 'i' → logprob: -4.288837432861328
    5. '<|end|>' → logprob: -4.413837432861328
    6. '_' → logprob: -4.538837432861328
    7. '
' → logprob: -5.413837432861328
    8. '}' → logprob: -5.913837432861328
    9. '```' → logprob: -6.163837432861328
    10. ' if' → logprob: -6.538837432861328

Token 268: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 266
Tokens correctement prédits (1ère position, stricte): 118
Tokens correctement prédits (1ère position, avec adaptation): 125
Tokens correctement prédits (top 10): 217
Précision stricte (1ère position): 44.36%
Précision adaptée (1ère position): 46.99%
Précision (top 10): 81.58%
================================================================================
