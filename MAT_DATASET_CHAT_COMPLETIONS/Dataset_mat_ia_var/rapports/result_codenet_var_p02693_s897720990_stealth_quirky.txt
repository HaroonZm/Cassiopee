================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:16:08
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Extravagant variable names, ternary operators, unorthodox spacing & ordering:

KnightsOfNi = int(input())
theValueThatIsA, thisIsB = [int(x) for x in input().split()]

def strange_magic(k, end):
    return int(end//k*k)

status_flag = ['NG','OK'][theValueThatIsA <= strange_magic(KnightsOfNi,thisIsB)]

[print(status_flag) for _ in range(1)]  # just for show, list comprehension side effect
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Extr' (ID: 89074)
  → Token d'amorce (pas de prédiction)

Token 2: 'avag' (ID: 66525)
  → Token d'amorce (pas de prédiction)

Token 3: 'ant' (ID: 493)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.5994461178779602
    2. 'a' → logprob: -1.3494460582733154
    3. 'ag' → logprob: -2.3494460582733154
    4. 'ent' → logprob: -2.9744460582733154
    5. 'al' → logprob: -4.7244462966918945
    6. 'age' → logprob: -4.9744462966918945
    7. '```' → logprob: -4.9744462966918945
    8. 'ant' → logprob: -5.8494462966918945
    9. 'ale' → logprob: -5.9744462966918945
    10. '#' → logprob: -6.0994462966918945

Token 4: ' variable' (ID: 11076)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.49022310972213745
    2. ' ' → logprob: -2.1152231693267822
    3. ':' → logprob: -2.2402231693267822
    4. '!' → logprob: -3.1152231693267822
    5. '#' → logprob: -3.1152231693267822
    6. ' #' → logprob: -4.490222930908203
    7. '  ' → logprob: -4.615222930908203
    8. 'def' → logprob: -5.365222930908203
    9. ' =' → logprob: -5.490222930908203
    10. '=' → logprob: -5.615222930908203

Token 5: ' names' (ID: 8747)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.33421754837036133
    2. ' ' → logprob: -1.8342175483703613
    3. '=' → logprob: -3.3342175483703613
    4. 'x' → logprob: -3.8342175483703613
    5. ' =' → logprob: -3.8342175483703613
    6. 's' → logprob: -4.584217548370361
    7. 'v' → logprob: -4.709217548370361
    8. 'e' → logprob: -5.209217548370361
    9. ' _' → logprob: -6.084217548370361
    10. 'E' → logprob: -6.084217548370361

Token 6: ',' (ID: 11)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -1.1750661134719849
    2. '_' → logprob: -1.3000661134719849
    3. 'variable' → logprob: -2.9250659942626953
    4. 'v' → logprob: -3.1750659942626953
    5. 'very' → logprob: -3.5500659942626953
    6. 'def' → logprob: -3.6750659942626953
    7. 'x' → logprob: -3.9250659942626953
    8. 'extr' → logprob: -4.175065994262695
    9. 'my' → logprob: -4.425065994262695
    10. 'e' → logprob: -4.675065994262695

Token 7: ' tern' (ID: 81796)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.6409237384796143
    2. '```' → logprob: -2.0159237384796143
    3. 'x' → logprob: -2.6409237384796143
    4. 'a' → logprob: -2.6409237384796143
    5. '#' → logprob: -2.8909237384796143
    6. 'v' → logprob: -3.1409237384796143
    7. 'variable' → logprob: -3.7659237384796143
    8. ' =' → logprob: -3.7659237384796143
    9. 'e' → logprob: -4.140923500061035
    10. 's' → logprob: -4.265923500061035

Token 8: 'ary' (ID: 815)
  Prédit: 'ary'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ary' → logprob: -0.18291494250297546
    2. 'a' → logprob: -1.8079149723052979
    3. 'ar' → logprob: -6.557914733886719
    4. '?' → logprob: -7.307914733886719
    5. '```' → logprob: -7.807914733886719
    6. ' a' → logprob: -8.557914733886719
    7. '=' → logprob: -9.682914733886719
    8. '?a' → logprob: -9.807914733886719
    9. 'al' → logprob: -9.932914733886719
    10. ':' → logprob: -10.182914733886719

Token 9: ' operators' (ID: 29893)
  Prédit: '?'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '?' → logprob: -0.2023811638355255
    2. '=' → logprob: -3.077381134033203
    3. 'v' → logprob: -3.077381134033203
    4. 'x' → logprob: -3.952381134033203
    5. 'i' → logprob: -4.452381134033203
    6. '`' → logprob: -4.702381134033203
    7. 'a' → logprob: -4.827381134033203
    8. ' ' → logprob: -5.452381134033203
    9. ' ?' → logprob: -5.452381134033203
    10. 'e' → logprob: -5.577381134033203

Token 10: ',' (ID: 11)
  Prédit: '?'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '?' → logprob: -0.8483594059944153
    2. 'a' → logprob: -2.3483593463897705
    3. 'x' → logprob: -2.4733593463897705
    4. 'v' → logprob: -2.5983593463897705
    5. '`' → logprob: -2.8483593463897705
    6. '=' → logprob: -3.0983593463897705
    7. 'i' → logprob: -3.2233593463897705
    8. 'e' → logprob: -3.4733593463897705
    9. '_' → logprob: -3.7233593463897705
    10. '```' → logprob: -4.22335958480835

Token 11: ' un' (ID: 537)
  Prédit: '?'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '?' → logprob: -0.2027130424976349
    2. '=' → logprob: -2.8277130126953125
    3. 'a' → logprob: -3.4527130126953125
    4. ',' → logprob: -3.7027130126953125
    5. '`' → logprob: -3.8277130126953125
    6. '```' → logprob: -4.0777130126953125
    7. '#' → logprob: -4.5777130126953125
    8. ';' → logprob: -4.9527130126953125
    9. ':' → logprob: -6.3277130126953125
    10. 'and' → logprob: -6.5777130126953125

Token 12: 'orth' (ID: 2909)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.18874706327915192
    2. 's' → logprob: -2.6887471675872803
    3. 'r' → logprob: -3.4387471675872803
    4. 'i' → logprob: -3.6887471675872803
    5. 'a' → logprob: -4.438746929168701
    6. 'u' → logprob: -4.938746929168701
    7. 't' → logprob: -4.938746929168701
    8. 'g' → logprob: -5.438746929168701
    9. 'e' → logprob: -6.188746929168701
    10. '#' → logprob: -6.313746929168701

Token 13: 'odox' (ID: 52131)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.23891495168209076
    2. 'ogonal' → logprob: -2.113914966583252
    3. '```' → logprob: -3.613914966583252
    4. 'o' → logprob: -4.738914966583252
    5. 'd' → logprob: -4.988914966583252
    6. 'ogon' → logprob: -4.988914966583252
    7. 'og' → logprob: -5.363914966583252
    8. 'a' → logprob: -5.363914966583252
    9. 'er' → logprob: -5.801414966583252
    10. 't' → logprob: -6.051414966583252

Token 14: ' spacing' (ID: 47236)
  Prédit: '?'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '?' → logprob: -0.7523950934410095
    2. '=' → logprob: -1.0023951530456543
    3. ';' → logprob: -3.7523951530456543
    4. ':' → logprob: -4.002395153045654
    5. '_' → logprob: -4.002395153045654
    6. ')' → logprob: -4.502395153045654
    7. 'v' → logprob: -4.627395153045654
    8. 'i' → logprob: -4.627395153045654
    9. ' ' → logprob: -4.752395153045654
    10. ',' → logprob: -5.002395153045654

Token 15: ' &' (ID: 827)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7979152798652649
    2. 'a' → logprob: -2.54791522026062
    3. 'i' → logprob: -2.79791522026062
    4. ':' → logprob: -2.79791522026062
    5. '?' → logprob: -3.04791522026062
    6. ' ' → logprob: -3.17291522026062
    7. 'x' → logprob: -3.17291522026062
    8. ')' → logprob: -3.42291522026062
    9. ';' → logprob: -3.54791522026062
    10. '_' → logprob: -3.79791522026062

Token 16: ' ordering' (ID: 30931)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.8076543807983398
    2. ';' → logprob: -1.9326543807983398
    3. '```' → logprob: -2.05765438079834
    4. 'un' → logprob: -2.80765438079834
    5. 'spacing' → logprob: -3.43265438079834
    6. ' unconventional' → logprob: -3.55765438079834
    7. 'format' → logprob: -3.55765438079834
    8. 'line' → logprob: -3.68265438079834
    9. 'a' → logprob: -3.68265438079834
    10. 'newline' → logprob: -3.80765438079834

Token 17: ':

' (ID: 1402)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.2835110425949097
    2. 'r' → logprob: -1.7835110425949097
    3. 'v' → logprob: -2.033511161804199
    4. 'a' → logprob: -2.158511161804199
    5. 'd' → logprob: -3.033511161804199
    6. 'e' → logprob: -3.408511161804199
    7. 'p' → logprob: -3.533511161804199
    8. 'f' → logprob: -3.783511161804199
    9. 'c' → logprob: -3.908511161804199
    10. 's' → logprob: -3.908511161804199

Token 18: 'Kn' (ID: 41445)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.4643162488937378
    2. 'i' → logprob: -2.2143163681030273
    3. 'a' → logprob: -2.5893163681030273
    4. 'x' → logprob: -2.7143163681030273
    5. 'v' → logprob: -2.7143163681030273
    6. 'S' → logprob: -3.0893163681030273
    7. 's' → logprob: -3.0893163681030273
    8. 'l' → logprob: -3.2143163681030273
    9. 'p' → logprob: -3.2143163681030273
    10. 'D' → logprob: -3.4643163681030273

Token 19: 'ights' (ID: 3635)
  Prédit: 'ight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ight' → logprob: -0.21170151233673096
    2. 'o' → logprob: -2.3367013931274414
    3. 'ock' → logprob: -3.4617013931274414
    4. 'ow' → logprob: -4.211701393127441
    5. 'ights' → logprob: -4.586701393127441
    6. 'own' → logprob: -4.836701393127441
    7. 'igh' → logprob: -5.461701393127441
    8. 'i' → logprob: -5.961701393127441
    9. 'ox' → logprob: -6.336701393127441
    10. 'e' → logprob: -6.336701393127441

Token 20: 'Of' (ID: 2566)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.30562785267829895
    2. '.' → logprob: -2.1806278228759766
    3. '=' → logprob: -2.9306278228759766
    4. ' ' → logprob: -3.3056278228759766
    5. '[' → logprob: -4.430627822875977
    6. '(' → logprob: -4.430627822875977
    7. ':' → logprob: -5.180627822875977
    8. '```' → logprob: -5.180627822875977
    9. ' .' → logprob: -5.305627822875977
    10. 'Of' → logprob: -6.305627822875977

Token 21: 'Ni' (ID: 36044)
  Prédit: 'The'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'The' → logprob: -0.3539750874042511
    2. 'the' → logprob: -1.4789750576019287
    3. 'Ni' → logprob: -3.9789750576019287
    4. ' the' → logprob: -3.9789750576019287
    5. '```' → logprob: -4.478975296020508
    6. 'Code' → logprob: -5.478975296020508
    7. ' ' → logprob: -5.603975296020508
    8. 'Honor' → logprob: -6.103975296020508
    9. '   ' → logprob: -6.353975296020508
    10. 'Python' → logprob: -6.353975296020508

Token 22: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9605047702789307
    2. '=' → logprob: -1.3355047702789307
    3. '?' → logprob: -1.7105047702789307
    4. ' ==' → logprob: -2.9605047702789307
    5. ' ' → logprob: -3.0855047702789307
    6. ' ?' → logprob: -3.9605047702789307
    7. '.' → logprob: -4.085504531860352
    8. '==' → logprob: -4.085504531860352
    9. '(' → logprob: -5.460504531860352
    10. ':' → logprob: -5.585504531860352

Token 23: ' int' (ID: 677)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -1.1271162033081055
    2. ' lambda' → logprob: -1.3771162033081055
    3. '(lambda' → logprob: -1.6271162033081055
    4. 'lambda' → logprob: -2.0021162033081055
    5. '["' → logprob: -3.5021162033081055
    6. ' "' → logprob: -4.0021162033081055
    7. ''' → logprob: -4.5021162033081055
    8. ''s' → logprob: -5.0021162033081055
    9. ' ' → logprob: -5.1271162033081055
    10. '[' → logprob: -5.6271162033081055

Token 24: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01189175434410572
    2. '('' → logprob: -5.136891841888428
    3. '(input' → logprob: -6.011891841888428
    4. '(
' → logprob: -6.386891841888428
    5. ' (' → logprob: -6.886891841888428
    6. '("' → logprob: -7.761891841888428
    7. ')' → logprob: -9.13689136505127
    8. '()' → logprob: -10.01189136505127
    9. '<|end|>' → logprob: -10.38689136505127
    10. ' ' → logprob: -10.63689136505127

Token 25: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01917852833867073
    2. '()' → logprob: -4.01917839050293
    3. '())' → logprob: -7.39417839050293
    4. ')' → logprob: -8.64417839050293
    5. '("("' → logprob: -9.64417839050293
    6. '('' → logprob: -10.01917839050293
    7. '(()' → logprob: -10.76917839050293
    8. '(
' → logprob: -11.14417839050293
    9. '(""))' → logprob: -11.51917839050293
    10. ' (' → logprob: -11.76917839050293

Token 26: 'the' (ID: 3086)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.5085415244102478
    2. 'if' → logprob: -1.2585415840148926
    3. 'while' → logprob: -3.3835415840148926
    4. 'for' → logprob: -3.6335415840148926
    5. ' if' → logprob: -4.133541584014893
    6. '%
' → logprob: -4.883541584014893
    7. ' %' → logprob: -5.008541584014893
    8. '*' → logprob: -5.508541584014893
    9. '>' → logprob: -5.883541584014893
    10. ')' → logprob: -6.258541584014893

Token 27: 'Value' (ID: 1638)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.8940376043319702
    2. 'y' → logprob: -2.3940377235412598
    3. 'Kn' → logprob: -2.8315377235412598
    4. '_' → logprob: -2.8940377235412598
    5. 're' → logprob: -3.0190377235412598
    6. ' =' → logprob: -3.1440377235412598
    7. 'r' → logprob: -3.5815377235412598
    8. ' Knights' → logprob: -3.6440377235412598
    9. 'm' → logprob: -3.7065377235412598
    10. 'Great' → logprob: -3.8315377235412598

Token 28: 'That' (ID: 7924)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6550834774971008
    2. ' =' → logprob: -0.9050834774971008
    3. ' ' → logprob: -2.780083417892456
    4. '   ' → logprob: -5.530083656311035
    5. '  ' → logprob: -6.280083656311035
    6. 's' → logprob: -6.280083656311035
    7. '_' → logprob: -6.530083656311035
    8. 'if' → logprob: -7.155083656311035
    9. '>' → logprob: -7.905083656311035
    10. '?' → logprob: -8.092583656311035

Token 29: 'Is' (ID: 3031)
  Prédit: 'Is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Is' → logprob: -1.7189356088638306
    2. 'Mat' → logprob: -1.8439356088638306
    3. '_m' → logprob: -2.718935489654541
    4. 'M' → logprob: -2.718935489654541
    5. 'Will' → logprob: -3.093935489654541
    6. 'You' → logprob: -3.343935489654541
    7. '_w' → logprob: -3.468935489654541
    8. 'Was' → logprob: -3.593935489654541
    9. 's' → logprob: -3.718935489654541
    10. 'Should' → logprob: -3.843935489654541

Token 30: 'A' (ID: 32)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.8316200971603394
    2. ' ' → logprob: -1.9566200971603394
    3. ' True' → logprob: -2.206620216369629
    4. ' the' → logprob: -3.456620216369629
    5. 'True' → logprob: -3.456620216369629
    6. ' equal' → logprob: -3.519120216369629
    7. 'Being' → logprob: -3.519120216369629
    8. ' =' → logprob: -3.644120216369629
    9. 'Kn' → logprob: -3.706620216369629
    10. ' "' → logprob: -3.831620216369629

Token 31: ',' (ID: 11)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.3013386726379395
    2. 'n' → logprob: -1.6763386726379395
    3. 'll' → logprob: -2.3013386726379395
    4. 'w' → logprob: -2.6763386726379395
    5. 'ct' → logprob: -2.9263386726379395
    6. 'Kn' → logprob: -3.1763386726379395
    7. ' ' → logprob: -3.4263386726379395
    8. 'ns' → logprob: -3.8013386726379395
    9. 'b' → logprob: -4.1763386726379395
    10. 'dd' → logprob: -4.4263386726379395

Token 32: ' this' (ID: 495)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -1.206907033920288
    2. ' the' → logprob: -1.831907033920288
    3. 'Kn' → logprob: -2.081907033920288
    4. ' Knights' → logprob: -2.831907033920288
    5. ' int' → logprob: -3.081907033920288
    6. '"' → logprob: -3.081907033920288
    7. ' ' → logprob: -3.331907033920288
    8. 'int' → logprob: -3.706907033920288
    9. ' "' → logprob: -3.956907033920288
    10. '_' → logprob: -4.206907272338867

Token 33: 'Is' (ID: 3031)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.4064377546310425
    2. 'Is' → logprob: -1.5314377546310425
    3. '=' → logprob: -1.9064377546310425
    4. 'Value' → logprob: -2.531437873840332
    5. '_is' → logprob: -2.531437873840332
    6. '_' → logprob: -2.656437873840332
    7. '_value' → logprob: -2.781437873840332
    8. ' ' → logprob: -3.656437873840332
    9. 'is' → logprob: -3.781437873840332
    10. 'Variable' → logprob: -4.781437873840332

Token 34: 'B' (ID: 33)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.103013038635254
    2. 'The' → logprob: -1.853013038635254
    3. ' ' → logprob: -2.478013038635254
    4. '_a' → logprob: -2.603013038635254
    5. ' a' → logprob: -3.103013038635254
    6. '_' → logprob: -3.353013038635254
    7. 'an' → logprob: -3.478013038635254
    8. ' an' → logprob: -3.478013038635254
    9. 'Not' → logprob: -3.603013038635254
    10. 'a' → logprob: -3.603013038635254

Token 35: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16693232953548431
    2. '=' → logprob: -1.9169323444366455
    3. ',' → logprob: -5.666932106018066
    4. ' ' → logprob: -5.791932106018066
    5. ' ,' → logprob: -9.166932106018066
    6. '  ' → logprob: -10.041932106018066
    7. ')' → logprob: -12.416932106018066
    8. '[' → logprob: -13.041932106018066
    9. '=input' → logprob: -13.041932106018066
    10. ' ' → logprob: -13.166932106018066

Token 36: ' [' (ID: 723)
  Prédit: ' map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.5326445698738098
    2. ' ' → logprob: -1.782644510269165
    3. '0' → logprob: -1.907644510269165
    4. 'map' → logprob: -3.407644510269165
    5. ' input' → logprob: -4.157644748687744
    6. 'Kn' → logprob: -4.657644748687744
    7. 'input' → logprob: -5.157644748687744
    8. ' (' → logprob: -5.532644748687744
    9. '1' → logprob: -5.532644748687744
    10. '[' → logprob: -5.782644748687744

Token 37: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.4283955991268158
    2. ' int' → logprob: -2.3033955097198486
    3. 'input' → logprob: -2.9283955097198486
    4. '0' → logprob: -3.0533955097198486
    5. ' map' → logprob: -3.0533955097198486
    6. 'map' → logprob: -3.4283955097198486
    7. 'Kn' → logprob: -3.4283955097198486
    8. ' input' → logprob: -4.428395748138428
    9. ' Knights' → logprob: -4.928395748138428
    10. 'i' → logprob: -5.803395748138428

Token 38: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.4626290798187256
    2. '(i' → logprob: -1.3376290798187256
    3. '(' → logprob: -2.7126290798187256
    4. '(input' → logprob: -3.2126290798187256
    5. '(
' → logprob: -7.962629318237305
    6. '(s' → logprob: -7.962629318237305
    7. '(token' → logprob: -9.462629318237305
    8. '(a' → logprob: -9.587629318237305
    9. '(e' → logprob: -9.712629318237305
    10. '(

' → logprob: -9.837629318237305

Token 39: ')' (ID: 8)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.2799665331840515
    2. ')' → logprob: -2.0299665927886963
    3. '(i' → logprob: -2.2799665927886963
    4. '(x' → logprob: -4.904966354370117
    5. '(' → logprob: -6.654966354370117
    6. '(token' → logprob: -7.529966354370117
    7. '())' → logprob: -8.154966354370117
    8. 'input' → logprob: -8.279966354370117
    9. '(s' → logprob: -8.404966354370117
    10. '(e' → logprob: -8.779966354370117

Token 40: ' for' (ID: 395)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.013204234652221203
    2. '(' → logprob: -4.888204097747803
    3. '(i' → logprob: -5.388204097747803
    4. '(x' → logprob: -7.638204097747803
    5. 'input' → logprob: -7.763204097747803
    6. ' (' → logprob: -11.263204574584961
    7. 'for' → logprob: -11.263204574584961
    8. '```' → logprob: -11.638204574584961
    9. ')' → logprob: -11.763204574584961
    10. '(
' → logprob: -11.888204574584961

Token 41: ' x' (ID: 1215)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.004197948146611452
    2. 'input' → logprob: -6.00419807434082
    3. ' ' → logprob: -6.87919807434082
    4. ' range' → logprob: -7.87919807434082
    5. '(input' → logprob: -8.50419807434082
    6. ' x' → logprob: -10.25419807434082
    7. ' in' → logprob: -10.25419807434082
    8. '_' → logprob: -11.87919807434082
    9. ' (' → logprob: -11.87919807434082
    10. '=input' → logprob: -12.37919807434082

Token 42: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.23894506692886353
    2. '(input' → logprob: -1.8639450073242188
    3. ' input' → logprob: -3.4889450073242188
    4. '=input' → logprob: -4.613945007324219
    5. 'input' → logprob: -4.738945007324219
    6. 'in' → logprob: -5.613945007324219
    7. '(' → logprob: -6.113945007324219
    8. ' ' → logprob: -6.488945007324219
    9. ' (' → logprob: -7.613945007324219
    10. '<|end|>' → logprob: -9.238945007324219

Token 43: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.3872670531272888
    2. 'input' → logprob: -1.1372671127319336
    3. '(input' → logprob: -8.387267112731934
    4. ' ' → logprob: -9.637267112731934
    5. ' range' → logprob: -11.012267112731934
    6. ' (' → logprob: -11.574767112731934
    7. '<input' → logprob: -11.574767112731934
    8. '=input' → logprob: -11.574767112731934
    9. 'range' → logprob: -11.699767112731934
    10. '(' → logprob: -11.949767112731934

Token 44: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.01945694163441658
    2. '()' → logprob: -4.01945686340332
    3. '()]' → logprob: -6.76945686340332
    4. '(' → logprob: -9.01945686340332
    5. '())' → logprob: -11.39445686340332
    6. '()].' → logprob: -11.51945686340332
    7. '()>' → logprob: -12.14445686340332
    8. '()][' → logprob: -13.14445686340332
    9. '()[' → logprob: -13.64445686340332
    10. '()
' → logprob: -13.76945686340332

Token 45: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0018474860116839409
    2. 'strip' → logprob: -6.376847267150879
    3. 'rstrip' → logprob: -9.501847267150879
    4. ' split' → logprob: -9.626847267150879
    5. 'spl' → logprob: -12.501847267150879
    6. 's' → logprob: -15.251847267150879
    7. ' strip' → logprob: -15.751847267150879
    8. 'replace' → logprob: -15.876847267150879
    9. '(split' → logprob: -16.126848220825195
    10. ' ' → logprob: -16.376848220825195

Token 46: '()' (ID: 416)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.008190538734197617
    2. '()' → logprob: -5.758190631866455
    3. '('' → logprob: -6.008190631866455
    4. '(' → logprob: -6.008190631866455
    5. '())' → logprob: -10.008190155029297
    6. '("' → logprob: -10.883190155029297
    7. '()]
' → logprob: -12.633190155029297
    8. '()],' → logprob: -12.633190155029297
    9. ']' → logprob: -13.008190155029297
    10. '("("' → logprob: -13.258190155029297

Token 47: ']

' (ID: 3144)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.004884927533566952
    2. '()' → logprob: -5.504884719848633
    3. '())' → logprob: -8.004884719848633
    4. '(' → logprob: -8.254884719848633
    5. ']' → logprob: -8.879884719848633
    6. ')]' → logprob: -10.129884719848633
    7. '()]
' → logprob: -11.129884719848633
    8. '])' → logprob: -12.254884719848633
    9. '()],' → logprob: -12.504884719848633
    10. '()])
' → logprob: -12.879884719848633

Token 48: 'def' (ID: 1314)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7550697922706604
    2. '
' → logprob: -1.5050697326660156
    3. 'print' → logprob: -1.5050697326660156
    4. ' if' → logprob: -4.130069732666016
    5. '#' → logprob: -4.380069732666016
    6. 'result' → logprob: -4.630069732666016
    7. 'for' → logprob: -4.755069732666016
    8. '\n' → logprob: -5.380069732666016
    9. 's' → logprob: -5.505069732666016
    10. '<|end|>' → logprob: -5.505069732666016

Token 49: ' strange' (ID: 26197)
  Prédit: ' calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' calculate' → logprob: -0.6233093738555908
    2. ' check' → logprob: -2.623309373855591
    3. ' compute' → logprob: -3.248309373855591
    4. ' the' → logprob: -3.373309373855591
    5. ' ' → logprob: -3.748309373855591
    6. ' solve' → logprob: -3.748309373855591
    7. ' solution' → logprob: -3.998309373855591
    8. ' find' → logprob: -4.373309135437012
    9. ' f' → logprob: -4.435809135437012
    10. ' is' → logprob: -4.748309135437012

Token 50: '_magic' (ID: 164705)
  Prédit: '_function'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_function' → logprob: -0.4941433370113373
    2. '_' → logprob: -1.2441433668136597
    3. 'Function' → logprob: -3.61914324760437
    4. '_add' → logprob: -3.99414324760437
    5. '_Function' → logprob: -4.619143486022949
    6. '_variable' → logprob: -5.119143486022949
    7. 'Add' → logprob: -5.119143486022949
    8. ' _' → logprob: -5.369143486022949
    9. '_condition' → logprob: -5.869143486022949
    10. '_func' → logprob: -5.994143486022949

Token 51: '(k' (ID: 12125)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01251376885920763
    2. '(a' → logprob: -5.137513637542725
    3. '():' → logprob: -5.887513637542725
    4. ' (' → logprob: -6.887513637542725
    5. '(kn' → logprob: -7.012513637542725
    6. '(K' → logprob: -8.137514114379883
    7. '(x' → logprob: -8.512514114379883
    8. '(s' → logprob: -9.012514114379883
    9. '(The' → logprob: -9.012514114379883
    10. '((' → logprob: -9.137514114379883

Token 52: ',' (ID: 11)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.06120246276259422
    2. 'ni' → logprob: -2.9362025260925293
    3. 'night' → logprob: -5.811202526092529
    4. ')' → logprob: -7.311202526092529
    5. '```' → logprob: -7.811202526092529
    6. '):' → logprob: -7.936202526092529
    7. 'ights' → logprob: -8.186202049255371
    8. 'ngi' → logprob: -8.561202049255371
    9. '_n' → logprob: -9.186202049255371
    10. 'nih' → logprob: -9.311202049255371

Token 53: ' end' (ID: 1268)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.58256596326828
    2. 'a' → logprob: -0.95756596326828
    3. 'A' → logprob: -4.645065784454346
    4. ' A' → logprob: -4.770065784454346
    5. ' ' → logprob: -5.457565784454346
    6. ' the' → logprob: -5.520065784454346
    7. 'the' → logprob: -5.520065784454346
    8. ' t' → logprob: -5.832565784454346
    9. ' x' → logprob: -6.145065784454346
    10. ' b' → logprob: -6.332565784454346

Token 54: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.08719940483570099
    2. ',' → logprob: -3.3371994495391846
    3. 's' → logprob: -4.0871992111206055
    4. '=' → logprob: -4.2121992111206055
    5. 'ing' → logprob: -5.2121992111206055
    6. ')' → logprob: -6.2121992111206055
    7. '_value' → logprob: -6.4621992111206055
    8. ' ):' → logprob: -6.8371992111206055
    9. '_' → logprob: -7.0871992111206055
    10. 'value' → logprob: -7.3371992111206055

Token 55: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.018109673634171486
    2. ' :' → logprob: -4.3931097984313965
    3. ':return' → logprob: -5.5181097984313965
    4. ':
' → logprob: -7.0181097984313965
    5. '   ' → logprob: -7.7681097984313965
    6. ' ' → logprob: -9.893109321594238
    7. ' :
' → logprob: -10.018109321594238
    8. '):' → logprob: -10.143109321594238
    9. ',' → logprob: -10.268109321594238
    10. '  ' → logprob: -11.518109321594238

Token 56: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -1.0676239728927612
    2. ' r' → logprob: -1.1926239728927612
    3. 'r' → logprob: -1.9426239728927612
    4. '   ' → logprob: -2.442624092102051
    5. 'return' (adapté à ' return') → logprob: -3.442624092102051
    6. ' ' → logprob: -4.567624092102051
    7. ' i' → logprob: -4.692624092102051
    8. ' result' → logprob: -4.817624092102051
    9. ' if' → logprob: -4.942624092102051
    10. ' ret' → logprob: -5.067624092102051

Token 57: ' int' (ID: 677)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.5427306890487671
    2. 'k' → logprob: -1.667730689048767
    3. ' (' → logprob: -2.4177308082580566
    4. ' ' → logprob: -3.4177308082580566
    5. ' end' → logprob: -3.5427308082580566
    6. '(k' → logprob: -4.042730808258057
    7. '(' → logprob: -4.667730808258057
    8. '1' → logprob: -5.042730808258057
    9. 'end' → logprob: -5.292730808258057
    10. '0' → logprob: -5.417730808258057

Token 58: '(end' (ID: 29409)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6360172629356384
    2. '(k' → logprob: -1.0110173225402832
    3. '((' → logprob: -2.511017322540283
    4. '(not' → logprob: -4.511017322540283
    5. '('' → logprob: -5.886017322540283
    6. '(bool' → logprob: -6.011017322540283
    7. '(end' → logprob: -6.136017322540283
    8. '(((' → logprob: -6.511017322540283
    9. '(abs' → logprob: -6.761017322540283
    10. '(True' → logprob: -7.011017322540283

Token 59: '//' (ID: 393)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -1.6401605606079102
    2. '/k' → logprob: -1.6401605606079102
    3. '>' → logprob: -1.7651605606079102
    4. '>=' → logprob: -2.26516056060791
    5. '%' → logprob: -2.64016056060791
    6. ')' → logprob: -3.14016056060791
    7. '<=' → logprob: -3.26516056060791
    8. '<' → logprob: -3.51516056060791
    9. '/' → logprob: -3.51516056060791
    10. ' >' → logprob: -4.14016056060791

Token 60: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.011909880675375462
    2. '2' → logprob: -5.5119099617004395
    3. ' k' → logprob: -5.8869099617004395
    4. '(' → logprob: -5.8869099617004395
    5. '(k' → logprob: -6.6369099617004395
    6. '3' → logprob: -8.511909484863281
    7. ' (' → logprob: -9.011909484863281
    8. ' ' → logprob: -9.011909484863281
    9. '1' → logprob: -9.261909484863281
    10. '4' → logprob: -9.386909484863281

Token 61: '*k' (ID: 81061)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02234835922718048
    2. '*' → logprob: -4.772348403930664
    3. ' )' → logprob: -5.272348403930664
    4. ' if' → logprob: -5.647348403930664
    5. 'if' → logprob: -6.147348403930664
    6. '+' → logprob: -7.272348403930664
    7. ' *' → logprob: -7.522348403930664
    8. '),' → logprob: -7.647348403930664
    9. ' ' → logprob: -8.022348403930664
    10. '>' → logprob: -9.397348403930664

Token 62: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005191935342736542
    2. ' )' → logprob: -8.625518798828125
    3. '+' → logprob: -8.875518798828125
    4. ' if' → logprob: -10.125518798828125
    5. 'if' → logprob: -10.375518798828125
    6. ')
' → logprob: -10.625518798828125
    7. '*' → logprob: -10.875518798828125
    8. '),' → logprob: -11.125518798828125
    9. '))' → logprob: -11.125518798828125
    10. ' or' → logprob: -11.875518798828125

Token 63: 'status' (ID: 6063)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.0168739557266235
    2. '+' → logprob: -2.016873836517334
    3. ' if' → logprob: -2.016873836517334
    4. '*' → logprob: -2.141873836517334
    5. '
' → logprob: -2.516873836517334
    6. '?' → logprob: -3.641873836517334
    7. '<|end|>' → logprob: -3.766873836517334
    8. 'result' → logprob: -4.391873836517334
    9. '+
' → logprob: -4.391873836517334
    10. 'def' → logprob: -4.641873836517334

Token 64: '_flag' (ID: 25269)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5620579719543457
    2. '=' → logprob: -0.9370579719543457
    3. '_' → logprob: -3.9370579719543457
    4. ',' → logprob: -5.187057971954346
    5. ' ' → logprob: -5.437057971954346
    6. '_code' → logprob: -6.312057971954346
    7. 's' → logprob: -6.437057971954346
    8. ')' → logprob: -7.312057971954346
    9. ' ,' → logprob: -7.562057971954346
    10. '  ' → logprob: -7.562057971954346

Token 65: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2647392451763153
    2. '=' → logprob: -1.5147392749786377
    3. '_' → logprob: -5.139739036560059
    4. 's' → logprob: -6.139739036560059
    5. ',' → logprob: -6.264739036560059
    6. ' ' → logprob: -6.389739036560059
    7. '_=' → logprob: -8.139739036560059
    8. ' ,' → logprob: -8.389739036560059
    9. ' _' → logprob: -8.764739036560059
    10. '  ' → logprob: -9.264739036560059

Token 66: ' ['' (ID: 5140)
  Prédit: 'Kn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Kn' → logprob: -0.84873366355896
    2. 'str' → logprob: -1.72373366355896
    3. ' strange' → logprob: -2.47373366355896
    4. 'the' → logprob: -3.09873366355896
    5. 'this' → logprob: -3.22373366355896
    6. ' this' → logprob: -3.47373366355896
    7. '0' → logprob: -3.59873366355896
    8. ' Kn' → logprob: -3.72373366355896
    9. ' the' → logprob: -3.84873366355896
    10. 'True' → logprob: -3.97373366355896

Token 67: 'NG' (ID: 19236)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -1.4810711145401
    2. 'N' → logprob: -1.7310711145401
    3. '_' → logprob: -2.7310709953308105
    4. '?' → logprob: -2.9810709953308105
    5. ''' → logprob: -3.2310709953308105
    6. ' ']' → logprob: -3.2310709953308105
    7. 'O' → logprob: -3.3560709953308105
    8. '']' → logprob: -3.6060709953308105
    9. '-' → logprob: -3.7310709953308105
    10. '1' → logprob: -3.9810709953308105

Token 68: '','' (ID: 4074)
  Prédit: '']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '']' → logprob: -0.0399550125002861
    2. '']]' → logprob: -4.789955139160156
    3. 'O' → logprob: -4.914955139160156
    4. ''' → logprob: -5.789955139160156
    5. 'T' → logprob: -5.789955139160156
    6. '','' → logprob: -5.914955139160156
    7. '',' → logprob: -6.039955139160156
    8. ''],' → logprob: -6.164955139160156
    9. ''][' → logprob: -6.664955139160156
    10. '']}' → logprob: -7.289955139160156

Token 69: 'OK' (ID: 5175)
  Prédit: 'OK'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'OK' → logprob: -0.17542950809001923
    2. ' OK' → logprob: -2.550429582595825
    3. 'G' → logprob: -3.300429582595825
    4. 'Y' → logprob: -5.050429344177246
    5. 'K' → logprob: -5.737929344177246
    6. 'Ok' → logprob: -5.800429344177246
    7. 'ok' → logprob: -5.862929344177246
    8. 'AC' → logprob: -6.550429344177246
    9. 'GG' → logprob: -6.675429344177246
    10. 'W' → logprob: -6.737929344177246

Token 70: ''][' (ID: 22110)
  Prédit: '']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '']' → logprob: -9.221884101862088e-05
    2. '','' → logprob: -10.875092506408691
    3. '',' → logprob: -11.000092506408691
    4. ''' → logprob: -11.000092506408691
    5. '']

' → logprob: -11.125092506408691
    6. '']
' → logprob: -11.875092506408691
    7. '']
' → logprob: -12.125092506408691
    8. ']' → logprob: -12.375092506408691
    9. ''][' → logprob: -12.750092506408691
    10. '"]' → logprob: -13.125092506408691

Token 71: 'the' (ID: 3086)
  Prédit: 'Kn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Kn' → logprob: -0.4741876423358917
    2. 'this' → logprob: -2.5991876125335693
    3. 'the' → logprob: -2.5991876125335693
    4. '(' → logprob: -2.7241876125335693
    5. '0' → logprob: -3.3491876125335693
    6. 'str' → logprob: -3.8491876125335693
    7. '(this' → logprob: -4.349187850952148
    8. '(int' → logprob: -4.474187850952148
    9. '(the' → logprob: -4.599187850952148
    10. ' (' → logprob: -4.849187850952148

Token 72: 'Value' (ID: 1638)
  Prédit: 'Value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Value' → logprob: -0.001103064278140664
    2. 'Val' → logprob: -6.876102924346924
    3. 'V' → logprob: -10.751103401184082
    4. 'Va' → logprob: -10.751103401184082
    5. 'value' → logprob: -11.251103401184082
    6. 'Vale' → logprob: -12.876103401184082
    7. '_value' → logprob: -13.001103401184082
    8. '_Value' → logprob: -13.376103401184082
    9. 'Valor' → logprob: -13.501103401184082
    10. '	Value' → logprob: -13.501103401184082

Token 73: 'That' (ID: 7924)
  Prédit: 'That'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'That' → logprob: -0.005671018268913031
    2. '_that' → logprob: -5.63067102432251
    3. 'Tha' → logprob: -6.25567102432251
    4. 'That's' → logprob: -10.380670547485352
    5. ' That' → logprob: -10.505670547485352
    6. 'This' → logprob: -10.880670547485352
    7. '_' → logprob: -11.130670547485352
    8. 'Th' → logprob: -11.505670547485352
    9. 'T' → logprob: -11.630670547485352
    10. 'that' → logprob: -11.880670547485352

Token 74: 'Is' (ID: 3031)
  Prédit: 'That'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'That' → logprob: -0.4589037299156189
    2. '_that' → logprob: -2.2089037895202637
    3. 'Is' → logprob: -2.3339037895202637
    4. 'is' → logprob: -3.3339037895202637
    5. 'at' → logprob: -3.7089037895202637
    6. '_is' → logprob: -4.083903789520264
    7. 'At' → logprob: -4.208903789520264
    8. '>' → logprob: -4.708903789520264
    9. 's' → logprob: -4.833903789520264
    10. 'This' → logprob: -4.958903789520264

Token 75: 'A' (ID: 32)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -1.2370336055755615
    2. '>' → logprob: -1.3620336055755615
    3. 'A' → logprob: -1.6120336055755615
    4. ' >=' → logprob: -2.6120336055755615
    5. '>=' → logprob: -2.6120336055755615
    6. ' ' → logprob: -3.7370336055755615
    7. '%' → logprob: -4.612033843994141
    8. '==' → logprob: -4.612033843994141
    9. 'B' → logprob: -4.737033843994141
    10. 'a' → logprob: -4.737033843994141

Token 76: ' <=' (ID: 5017)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.8598667979240417
    2. '%' → logprob: -1.8598668575286865
    3. ' >=' → logprob: -2.1098668575286865
    4. '>' → logprob: -2.2348668575286865
    5. '<=' → logprob: -2.3598668575286865
    6. ' <=' → logprob: -3.3598668575286865
    7. '<' → logprob: -3.9848668575286865
    8. ' >' → logprob: -4.109866619110107
    9. '==' → logprob: -4.484866619110107
    10. ' %' → logprob: -5.234866619110107

Token 77: ' strange' (ID: 26197)
  Prédit: 'this'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'this' → logprob: -0.03548629581928253
    2. ' this' → logprob: -3.5354862213134766
    3. 'Kn' → logprob: -5.535486221313477
    4. 'the' → logprob: -6.535486221313477
    5. ' the' → logprob: -9.660486221313477
    6. ' ' → logprob: -9.785486221313477
    7. 'This' → logprob: -9.910486221313477
    8. ' Kn' → logprob: -10.597986221313477
    9. 'status' → logprob: -10.847986221313477
    10. 'kn' → logprob: -11.660486221313477

Token 78: '_magic' (ID: 164705)
  Prédit: '_magic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_magic' → logprob: -0.002955477451905608
    2. '_' → logprob: -5.877955436706543
    3. '_mag' → logprob: -10.002955436706543
    4. 'magic' → logprob: -10.627955436706543
    5. '_m' → logprob: -10.627955436706543
    6. ' _' → logprob: -11.627955436706543
    7. '_ma' → logprob: -11.627955436706543
    8. '_money' → logprob: -12.002955436706543
    9. 'Magic' → logprob: -12.127955436706543
    10. '_math' → logprob: -12.252955436706543

Token 79: '(K' (ID: 28797)
  Prédit: '(this'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(this' → logprob: -0.3315995931625366
    2. '(K' → logprob: -1.9565995931625366
    3. '(the' → logprob: -2.206599712371826
    4. '(' → logprob: -3.956599712371826
    5. 'Kn' → logprob: -5.081599712371826
    6. '(kn' → logprob: -6.831599712371826
    7. '(The' → logprob: -7.081599712371826
    8. '(t' → logprob: -7.206599712371826
    9. 'the' → logprob: -7.581599712371826
    10. '(This' → logprob: -7.581599712371826

Token 80: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.03123275563120842
    2. 'ni' → logprob: -3.5312328338623047
    3. 'night' → logprob: -7.906232833862305
    4. '```' → logprob: -7.906232833862305
    5. 'Ni' → logprob: -9.031232833862305
    6. 'ights' → logprob: -9.656232833862305
    7. 'N' → logprob: -10.156232833862305
    8. ' nights' → logprob: -10.343732833862305
    9. 'Kn' → logprob: -10.593732833862305
    10. '   ' → logprob: -10.593732833862305

Token 81: 'ights' (ID: 3635)
  Prédit: 'ights'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ights' → logprob: -0.0017132589127868414
    2. 'igh' → logprob: -7.126713275909424
    3. 'ight' → logprob: -7.126713275909424
    4. 'i' → logprob: -10.001712799072266
    5. 'ght' → logprob: -11.376712799072266
    6. 'IGHTS' → logprob: -11.501712799072266
    7. 'igts' → logprob: -11.501712799072266
    8. 'ig' → logprob: -12.126712799072266
    9. '```' → logprob: -12.626712799072266
    10. '   ' → logprob: -12.751712799072266

Token 82: 'Of' (ID: 2566)
  Prédit: 'Of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Of' → logprob: -0.0035312979016453028
    2. 'of' → logprob: -6.128531455993652
    3. 'Ni' → logprob: -7.003531455993652
    4. '_of' → logprob: -8.378531455993652
    5. 'O' → logprob: -9.378531455993652
    6. 'o' → logprob: -10.253531455993652
    7. ')' → logprob: -11.378531455993652
    8. 'f' → logprob: -11.378531455993652
    9. 'Oi' → logprob: -11.878531455993652
    10. '```' → logprob: -12.003531455993652

Token 83: 'Ni' (ID: 36044)
  Prédit: 'Ni'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Ni' → logprob: -0.0024748241994529963
    2. 'i' → logprob: -6.252474784851074
    3. ' Ni' → logprob: -7.752474784851074
    4. 'ni' → logprob: -9.252474784851074
    5. ')' → logprob: -12.252474784851074
    6. '-ni' → logprob: -12.502474784851074
    7. ' ni' → logprob: -13.752474784851074
    8. '_i' → logprob: -13.877474784851074
    9. '<|end|>' → logprob: -14.002474784851074
    10. '  ' → logprob: -14.002474784851074

Token 84: ',this' (ID: 46282)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014590282924473286
    2. ' ,' → logprob: -4.639590263366699
    3. ',end' → logprob: -5.639590263366699
    4. ',the' → logprob: -6.889590263366699
    5. ',this' → logprob: -9.5145902633667
    6. ')' → logprob: -10.8895902633667
    7. ',int' → logprob: -11.0145902633667
    8. ',n' → logprob: -11.2645902633667
    9. ',k' → logprob: -11.2645902633667
    10. ',input' → logprob: -11.2645902633667

Token 85: 'Is' (ID: 3031)
  Prédit: 'Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Value' → logprob: -0.07274074107408524
    2. 's' → logprob: -3.3227407932281494
    3. 'Is' → logprob: -4.07274055480957
    4. 'Val' → logprob: -4.69774055480957
    5. ')' → logprob: -6.57274055480957
    6. '_value' → logprob: -6.69774055480957
    7. 'V' → logprob: -6.82274055480957
    8. 'The' → logprob: -7.44774055480957
    9. 'e' → logprob: -7.82274055480957
    10. '_Value' → logprob: -8.19774055480957

Token 86: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.0002390594017924741
    2. ')' → logprob: -9.250239372253418
    3. ')]' → logprob: -9.375239372253418
    4. ')])' → logprob: -10.500239372253418
    5. 'b' → logprob: -11.750239372253418
    6. 'A' → logprob: -12.125239372253418
    7. ' B' → logprob: -13.000239372253418
    8. '])' → logprob: -13.125239372253418
    9. '))' → logprob: -13.250239372253418
    10. ']])' → logprob: -14.000239372253418

Token 87: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0004023097571916878
    2. ')' → logprob: -8.000402450561523
    3. ' )' → logprob: -10.500402450561523
    4. ')])' → logprob: -11.125402450561523
    5. ')],' → logprob: -11.500402450561523
    6. '))' → logprob: -12.250402450561523
    7. ')]

' → logprob: -13.500402450561523
    8. ']' → logprob: -13.625402450561523
    9. '')]' → logprob: -13.750402450561523
    10. ')>' → logprob: -13.875402450561523

Token 88: '[' (ID: 58)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2616078853607178
    2. ']' → logprob: -2.5116078853607178
    3. '
' → logprob: -2.6366078853607178
    4. 'print' → logprob: -2.7616078853607178
    5. '\n' → logprob: -5.386608123779297
    6. '#' → logprob: -5.886608123779297
    7. '```' → logprob: -6.386608123779297
    8. '<|end|>' → logprob: -6.636608123779297
    9. '
' → logprob: -7.386608123779297
    10. ')
' → logprob: -7.386608123779297

Token 89: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.16706618666648865
    2. 'status' → logprob: -1.917066216468811
    3. '0' → logprob: -6.4170660972595215
    4. 'Kn' → logprob: -6.4170660972595215
    5. ']' → logprob: -7.2920660972595215
    6. ')' → logprob: -8.04206657409668
    7. ' status' → logprob: -8.29206657409668
    8. 'str' → logprob: -8.41706657409668
    9. 'K' → logprob: -8.41706657409668
    10. 'p' → logprob: -8.54206657409668

Token 90: '(status' (ID: 26454)
  Prédit: '(status'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(status' → logprob: -0.03063240833580494
    2. '(' → logprob: -3.780632495880127
    3. '('' → logprob: -5.905632495880127
    4. '("' → logprob: -6.655632495880127
    5. '(f' → logprob: -6.780632495880127
    6. '((' → logprob: -7.280632495880127
    7. '(x' → logprob: -7.655632495880127
    8. '(s' → logprob: -8.280632019042969
    9. '(i' → logprob: -8.405632019042969
    10. ' (' → logprob: -8.530632019042969

Token 91: '_flag' (ID: 25269)
  Prédit: '_flag'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_flag' → logprob: -6.630610641877865e-06
    2. '_' → logprob: -12.375006675720215
    3. 'flag' → logprob: -14.000006675720215
    4. '_f' → logprob: -14.375006675720215
    5. '(flag' → logprob: -15.500006675720215
    6. '_FLAG' → logprob: -15.875006675720215
    7. 'Flag' → logprob: -16.0000057220459
    8. ')]' → logprob: -16.1250057220459
    9. ')' → logprob: -16.2500057220459
    10. ' flag' → logprob: -16.6250057220459

Token 92: ')' (ID: 8)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8429617285728455
    2. ')' → logprob: -0.9679617285728455
    3. ')]' → logprob: -1.9679617881774902
    4. '])' → logprob: -3.5929617881774902
    5. ')])' → logprob: -5.09296178817749
    6. ']' → logprob: -5.34296178817749
    7. '(' → logprob: -5.96796178817749
    8. '[this' → logprob: -6.34296178817749
    9. '[(' → logprob: -6.59296178817749
    10. ' ' → logprob: -7.34296178817749

Token 93: ' for' (ID: 395)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6242751479148865
    2. ')]' → logprob: -1.3742752075195312
    3. '[' → logprob: -2.2492752075195312
    4. '])' → logprob: -2.3742752075195312
    5. ')' → logprob: -4.749275207519531
    6. '[-' → logprob: -7.124275207519531
    7. ')])' → logprob: -7.249275207519531
    8. '[]' → logprob: -7.374275207519531
    9. '()]' → logprob: -7.624275207519531
    10. '])]' → logprob: -7.749275207519531

Token 94: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6677026152610779
    2. ' _' → logprob: -0.7927026152610779
    3. ' range' → logprob: -3.5427026748657227
    4. ' ' → logprob: -6.542702674865723
    5. ' i' → logprob: -6.667702674865723
    6. ' Kn' → logprob: -6.792702674865723
    7. ' x' → logprob: -7.417702674865723
    8. 'range' → logprob: -8.042702674865723
    9. ' Knights' → logprob: -8.292702674865723
    10. '_K' → logprob: -8.917702674865723

Token 95: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02082529105246067
    2. 'in' → logprob: -3.8958253860473633
    3. ' ' → logprob: -8.520825386047363
    4. ' range' → logprob: -10.020825386047363
    5. 'range' → logprob: -10.520825386047363
    6. '_' → logprob: -12.270825386047363
    7. ' _' → logprob: -12.395825386047363
    8. '  ' → logprob: -13.270825386047363
    9. '	in' → logprob: -15.020825386047363
    10. '_in' → logprob: -15.020825386047363

Token 96: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.38687315583229065
    2. 'range' → logprob: -1.1368731260299683
    3. '[' → logprob: -13.886873245239258
    4. '	range' → logprob: -14.886873245239258
    5. '(range' → logprob: -15.136873245239258
    6. 'rang' → logprob: -15.886873245239258
    7. ' ' → logprob: -16.011873245239258
    8. 'ran' → logprob: -16.386873245239258
    9. ' ran' → logprob: -16.511873245239258
    10. ' rang' → logprob: -17.386873245239258

Token 97: '(' (ID: 7)
  Prédit: '(K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(K' → logprob: -0.009428087621927261
    2. '(' → logprob: -4.884428024291992
    3. '(the' → logprob: -6.509428024291992
    4. '(kn' → logprob: -8.884428024291992
    5. '(The' → logprob: -9.259428024291992
    6. 'Kn' → logprob: -9.634428024291992
    7. ' (' → logprob: -11.259428024291992
    8. '(int' → logprob: -12.759428024291992
    9. '((' → logprob: -13.009428024291992
    10. 'the' → logprob: -13.009428024291992

Token 98: '1' (ID: 16)
  Prédit: 'Kn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Kn' → logprob: -0.0018766358261927962
    2. 'the' → logprob: -7.3768768310546875
    3. ' Knights' → logprob: -7.6268768310546875
    4. ' Kn' → logprob: -8.001876831054688
    5. 'Knight' → logprob: -8.751876831054688
    6. 'K' → logprob: -9.001876831054688
    7. ' ' → logprob: -10.126876831054688
    8. '(K' → logprob: -10.626876831054688
    9. '  ' → logprob: -11.376876831054688
    10. ' the' → logprob: -11.376876831054688

Token 99: ')]' (ID: 15710)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5452364683151245
    2. ' ,' → logprob: -1.0452364683151245
    3. ' )' → logprob: -3.170236587524414
    4. ',K' → logprob: -3.920236587524414
    5. ')' → logprob: -5.420236587524414
    6. 'Kn' → logprob: -6.545236587524414
    7. ')]' → logprob: -8.045236587524414
    8. ' ' → logprob: -9.170236587524414
    9. ',int' → logprob: -9.295236587524414
    10. '0' → logprob: -9.670236587524414

Token 100: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 101: ' #' (ID: 1069)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0785578116774559
    2. '<|end|>' → logprob: -3.0785577297210693
    3. '#' → logprob: -3.9535577297210693
    4. ']' → logprob: -4.828557968139648
    5. '```' → logprob: -7.453557968139648
    6. '\' → logprob: -7.578557968139648
    7. ' ' → logprob: -8.578557968139648
    8. '<|end|>' → logprob: -8.703557968139648
    9. '
' → logprob: -8.953557968139648
    10. '+' → logprob: -8.953557968139648

Token 102: ' just' (ID: 1327)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 103: ' for' (ID: 395)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 104: ' show' (ID: 2356)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'com' → logprob: -1.6103599071502686
    2. '_' → logprob: -1.8603599071502686
    3. 'the' → logprob: -1.8603599071502686
    4. 'code' → logprob: -1.9853599071502686
    5. 'fun' → logprob: -2.9853599071502686
    6. 'testing' → logprob: -2.9853599071502686
    7. 'dem' → logprob: -3.4853599071502686
    8. 'completion' → logprob: -3.4853599071502686
    9. ' demonstration' → logprob: -4.110360145568848
    10. 'con' → logprob: -4.235360145568848

Token 105: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.48010313510894775
    2. '<|end|>' → logprob: -0.9801031351089478
    3. '#' → logprob: -6.230103015899658
    4. '```' → logprob: -6.355103015899658
    5. '
' → logprob: -6.980103015899658
    6. '<|end|>' → logprob: -7.605103015899658
    7. ']' → logprob: -7.730103015899658
    8. ' ' → logprob: -8.855103492736816
    9. '}' → logprob: -9.855103492736816
    10. '[' → logprob: -10.105103492736816

Token 106: ' list' (ID: 1562)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16728909313678741
    2. '<|end|>' → logprob: -1.917289137840271
    3. ']' → logprob: -6.2922892570495605
    4. '#' → logprob: -6.6672892570495605
    5. '\n' → logprob: -7.2922892570495605
    6. '
' → logprob: -7.2922892570495605
    7. '<|end|>' → logprob: -7.2922892570495605
    8. ' ' → logprob: -7.4172892570495605
    9. '```' → logprob: -8.042288780212402
    10. '\' → logprob: -8.542288780212402

Token 107: ' comprehension' (ID: 91423)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 108: ' side' (ID: 4307)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 109: ' effect' (ID: 3159)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 107
Tokens correctement prédits (1ère position, stricte): 27
Tokens correctement prédits (1ère position, avec adaptation): 27
Tokens correctement prédits (top 10): 52
Précision stricte (1ère position): 25.23%
Précision adaptée (1ère position): 25.23%
Précision (top 10): 48.60%
================================================================================
