================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:59:05
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def build_adjacency_list(n, edges):
    """
    Construit la liste d'adjacence d'un graphe non orienté à partir d'une liste d'arêtes.

    Args:
        n (int): Nombre de sommets dans le graphe (numérotés de 1 à n).
        edges (List[Tuple[int, int]]): Liste d'arêtes, chaque arête est un tuple de deux sommets.

    Returns:
        List[List[int]]: Liste d'adjacence (E), où E[i] contient les voisins du sommet i.
    """
    E = [[] for _ in range(n + 1)]
    for A, B in edges:
        E[A].append(B)
        E[B].append(A)
    return E

def find_max_degree_node(E):
    """
    Trouve le nœud ayant le degré maximal dans la liste d'adjacence.

    Args:
        E (List[List[int]]): Liste d'adjacence du graphe.

    Returns:
        int: Sommet ayant le plus de voisins (degré maximal).
    """
    max_degree = 0
    node = 0
    for i in range(1, len(E)):
        if len(E[i]) > max_degree:
            max_degree = len(E[i])
            node = i
    return node

def assign_colors_bfs(E, colors, start):
    """
    Assigne les couleurs aux sommets du graphe en effectuant un parcours BFS à partir d'un sommet donné.

    Args:
        E (List[List[int]]): Liste d'adjacence du graphe.
        colors (List[int]): Liste de couleurs triées à assigner (longueur N).
        start (int): Sommet de départ pour le BFS.

    Returns:
        Dict[int, int]: Dictionnaire associant chaque sommet à sa couleur.
    """
    from collections import deque

    n = len(colors)
    ans = {}
    visited = [False] * len(E)
    q = deque()
    q.append(start)

    # Parcours BFS, en attribuant les couleurs les plus grandes en premier
    for i in range(1, n + 1):
        x = q.popleft()
        visited[x] = True
        ans[x] = colors[-i]
        for neighbor in E[x]:
            if not visited[neighbor]:
                q.append(neighbor)
    return ans

def compute_max_sum(colors):
    """
    Calcule la valeur maximale demandée (somme de toutes les couleurs sauf la plus grande).

    Args:
        colors (List[int]): Liste des couleurs permutées.

    Returns:
        int: La somme maximale.
    """
    return sum(colors) - colors[-1]

def format_answer(ans, n):
    """
    Formate la réponse en chaîne d'entiers séparés par des espaces, dans l'ordre des sommets de 1 à n.

    Args:
        ans (Dict[int, int]): Dictionnaire associant chaque sommet à sa couleur.
        n (int): Nombre total de sommets.

    Returns:
        str: La chaîne formatée avec les couleurs attribuées.
    """
    out = []
    for i in range(1, n + 1):
        out.append(str(ans[i]))
    return " ".join(out)

def main():
    """
    Fonction principale qui exécute tout le processus : lit les entrées, construit le graphe,
    trouve le sommet de plus haut degré, trie les couleurs, attribue les couleurs, affiche les résultats.
    """
    # Lecture du nombre de sommets
    N = int(input())

    # Lecture et stockage des arêtes, au format (A, B)
    edges = []
    for _ in range(N - 1):
        A, B = map(int, input().split())
        edges.append((A, B))

    # Construction de la liste d'adjacence
    E = build_adjacency_list(N, edges)

    # Trouver le nœud avec le degré le plus élevé (le point de départ pour BFS)
    First = find_max_degree_node(E)

    # Lecture et tri des couleurs
    C = list(map(int, input().split()))
    C.sort()

    # Calcul de la somme maximale requise (la somme de toutes les couleurs sauf la plus grande)
    max_sum = compute_max_sum(C)

    # Attribution des couleurs via BFS en partant du sommet choisi
    ans = assign_colors_bfs(E, C, First)

    # Affichage
    print(max_sum)
    print(format_answer(ans, N))

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' build' (ID: 3024)
  → Token d'amorce (pas de prédiction)

Token 2: '_ad' (ID: 23782)
  → Token d'amorce (pas de prédiction)

Token 3: 'jac' (ID: 77250)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.024057665839791298
    2. 'd' → logprob: -4.149057865142822
    3. '(_' → logprob: -5.899057865142822
    4. 'def' → logprob: -6.399057865142822
    5. '_d' → logprob: -7.149057865142822
    6. '_(' → logprob: -7.274057865142822
    7. 'f' → logprob: -7.649057865142822
    8. '_def' → logprob: -8.149057388305664
    9. '(' → logprob: -8.524057388305664
    10. 'ding' → logprob: -9.149057388305664

Token 4: 'ency' (ID: 2799)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.058268141001462936
    2. 'ency' → logprob: -2.9332680702209473
    3. '_e' → logprob: -6.433268070220947
    4. 'ent' → logprob: -6.683268070220947
    5. '_' → logprob: -8.433268547058105
    6. 'en' → logprob: -9.058268547058105
    7. 'y' → logprob: -9.808268547058105
    8. '```' → logprob: -9.808268547058105
    9. 'a' → logprob: -10.558268547058105
    10. '__' → logprob: -11.308268547058105

Token 5: '_list' (ID: 4162)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.010397154837846756
    2. '```' → logprob: -6.010396957397461
    3. '_:' → logprob: -6.010396957397461
    4. '(' → logprob: -6.385396957397461
    5. '(_:' → logprob: -6.635396957397461
    6. '(_' → logprob: -6.760396957397461
    7. '_s' → logprob: -8.010396957397461
    8. '_line' → logprob: -9.010396957397461
    9. '_(' → logprob: -9.135396957397461
    10. '_matrix' → logprob: -9.385396957397461

Token 6: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01834975741803646
    2. '_' → logprob: -4.143349647521973
    3. '(_:' → logprob: -7.018349647521973
    4. '(:' → logprob: -7.393349647521973
    5. '_:' → logprob: -8.393349647521973
    6. '```' → logprob: -8.518349647521973
    7. '(_' → logprob: -8.893349647521973
    8. '_list' → logprob: -9.768349647521973
    9. '():' → logprob: -10.018349647521973
    10. ':' → logprob: -10.268349647521973

Token 7: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5256762504577637
    2. ',' → logprob: -1.1506762504577637
    3. ')' → logprob: -2.4006762504577637
    4. '_' → logprob: -6.900676250457764
    5. '[' → logprob: -8.400676727294922
    6. ':' → logprob: -8.650676727294922
    7. '_,' → logprob: -10.025676727294922
    8. '```' → logprob: -10.025676727294922
    9. ' ,' → logprob: -10.900676727294922
    10. 's' → logprob: -10.900676727294922

Token 8: ' edges' (ID: 22569)
  Prédit: ' edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.014230971224606037
    2. 'edges' → logprob: -4.764231204986572
    3. ' graph' → logprob: -5.389231204986572
    4. ' adjacency' → logprob: -7.764231204986572
    5. ' edge' → logprob: -8.139230728149414
    6. 'graph' → logprob: -8.764230728149414
    7. ' nodes' → logprob: -9.889230728149414
    8. ' neighbors' → logprob: -10.014230728149414
    9. ' adj' → logprob: -11.139230728149414
    10. ')' → logprob: -11.264230728149414

Token 9: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0015527134528383613
    2. ')' → logprob: -6.501552581787109
    3. ':' → logprob: -10.12655258178711
    4. ''):' → logprob: -13.00155258178711
    5. ',' → logprob: -13.12655258178711
    6. '):
' → logprob: -13.12655258178711
    7. '```' → logprob: -13.75155258178711
    8. '   ' → logprob: -13.87655258178711
    9. ' ):' → logprob: -14.12655258178711
    10. '"):' → logprob: -15.50155258178711

Token 10: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.024677066132426262
    2. '   ' → logprob: -4.149677276611328
    3. ':
' → logprob: -5.399677276611328
    4. '```' → logprob: -6.149677276611328
    5. '):' → logprob: -7.524677276611328
    6. '():' → logprob: -7.899677276611328
    7. '':' → logprob: -8.149677276611328
    8. '":' → logprob: -9.274677276611328
    9. '    
' → logprob: -9.399677276611328
    10. '(' → logprob: -9.524677276611328

Token 11: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02420486882328987
    2. '```' → logprob: -4.274204730987549
    3. ' adjacency' → logprob: -4.899204730987549
    4. 'adj' → logprob: -6.899204730987549
    5. '``' → logprob: -7.524204730987549
    6. ' ' → logprob: -8.274205207824707
    7. '`' → logprob: -8.774205207824707
    8. '    
' → logprob: -8.899205207824707
    9. 'a' → logprob: -9.149205207824707
    10. ''' → logprob: -9.774205207824707

Token 12: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7646641731262207
    2. ' ' → logprob: -1.5146641731262207
    3. ' adjacency' → logprob: -1.5146641731262207
    4. 'a' → logprob: -4.014664173126221
    5. ' """' → logprob: -4.139664173126221
    6. '[' → logprob: -4.639664173126221
    7. '"""' → logprob: -4.639664173126221
    8. 'r' → logprob: -4.764664173126221
    9. 'adj' → logprob: -5.139664173126221
    10. '"' → logprob: -5.639664173126221

Token 13: ' Con' (ID: 1532)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.3951199948787689
    2. ' """' → logprob: -2.2701199054718018
    3. '   ' → logprob: -2.3951199054718018
    4. 'Construct' → logprob: -3.8951199054718018
    5. 'Creates' → logprob: -4.145120143890381
    6. 'Build' → logprob: -4.270120143890381
    7. ' Builds' → logprob: -4.395120143890381
    8. 'Returns' → logprob: -4.520120143890381
    9. ' Converts' → logprob: -4.895120143890381
    10. ' adjacency' → logprob: -5.020120143890381

Token 14: 'str' (ID: 689)
  Prédit: 'struct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'struct' → logprob: -0.13243532180786133
    2. 'verts' → logprob: -2.6324353218078613
    3. 'vert' → logprob: -3.2574353218078613
    4. 'nect' → logprob: -5.007435321807861
    5. 's' → logprob: -5.382435321807861
    6. 'truct' → logprob: -6.882435321807861
    7. 'str' → logprob: -7.882435321807861
    8. 't' → logprob: -7.882435321807861
    9. 'stru' → logprob: -8.757434844970703
    10. 'c' → logprob: -9.382434844970703

Token 15: 'uit' (ID: 2136)
  Prédit: 'uct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'uct' → logprob: -1.8670179997570813e-05
    2. '   ' → logprob: -11.125019073486328
    3. 'uction' → logprob: -14.125019073486328
    4. 'u' → logprob: -14.125019073486328
    5. 'truct' → logprob: -14.125019073486328
    6. '```' → logprob: -14.625019073486328
    7. 'uctor' → logprob: -14.875019073486328
    8. ' u' → logprob: -15.625019073486328
    9. 'uc' → logprob: -16.000019073486328
    10. '       ' → logprob: -16.000019073486328

Token 16: ' la' (ID: 557)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.8656070828437805
    2. ' une' → logprob: -1.3656070232391357
    3. ' ' → logprob: -2.1156070232391357
    4. ' la' → logprob: -2.9906070232391357
    5. 'e' → logprob: -3.2406070232391357
    6. '_' → logprob: -3.2406070232391357
    7. 's' → logprob: -3.9906070232391357
    8. '   ' → logprob: -4.990607261657715
    9. '<|end|>' → logprob: -4.990607261657715
    10. ' l' → logprob: -5.240607261657715

Token 17: ' liste' (ID: 31719)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.438230037689209
    2. ' liste' → logprob: -1.063230037689209
    3. 's' → logprob: -5.938230037689209
    4. '_' → logprob: -5.938230037689209
    5. ' dict' → logprob: -7.188230037689209
    6. '   ' → logprob: -7.313230037689209
    7. ' d' → logprob: -7.563230037689209
    8. 'liste' → logprob: -7.813230037689209
    9. ' ' → logprob: -8.188230514526367
    10. ' adjacency' → logprob: -8.313230514526367

Token 18: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.22931818664073944
    2. ' des' → logprob: -1.7293181419372559
    3. ' de' → logprob: -4.229318141937256
    4. 'd' → logprob: -4.854318141937256
    5. '<|end|>' → logprob: -6.229318141937256
    6. ' adjacency' → logprob: -6.979318141937256
    7. ' adj' → logprob: -7.604318141937256
    8. 'de' → logprob: -8.104318618774414
    9. 'des' → logprob: -8.354318618774414
    10. '_des' → logprob: -8.354318618774414

Token 19: ''ad' (ID: 36162)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.11763184517621994
    2. ''ad' → logprob: -2.2426319122314453
    3. 'e' → logprob: -5.867631912231445
    4. ''ac' → logprob: -8.742631912231445
    5. '_ad' → logprob: -9.117631912231445
    6. '_adj' → logprob: -9.242631912231445
    7. ''espace' → logprob: -9.367631912231445
    8. ''accès' → logprob: -9.492631912231445
    9. ''utilisateur' → logprob: -9.492631912231445
    10. '_' → logprob: -9.617631912231445

Token 20: 'jac' (ID: 77250)
  Prédit: 'jac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jac' → logprob: -0.01869051903486252
    2. 'j' → logprob: -4.018690586090088
    3. 'ja' → logprob: -7.643690586090088
    4. '```' → logprob: -10.76869010925293
    5. 'jec' → logprob: -11.26869010925293
    6. 'já' → logprob: -11.76869010925293
    7. 'é' → logprob: -12.76869010925293
    8. ''' → logprob: -12.89369010925293
    9. 'ją' → logprob: -13.51869010925293
    10. 'jc' → logprob: -13.64369010925293

Token 21: 'ence' (ID: 1082)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.020117513835430145
    2. 'a' → logprob: -4.395117282867432
    3. 'ence' → logprob: -5.145117282867432
    4. 'acency' → logprob: -7.645117282867432
    5. 'en' → logprob: -8.02011775970459
    6. 'es' → logprob: -8.64511775970459
    7. 'é' → logprob: -8.77011775970459
    8. 'ec' → logprob: -9.02011775970459
    9. 'o' → logprob: -9.14511775970459
    10. 'escence' → logprob: -9.77011775970459

Token 22: ' d' (ID: 272)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6464987993240356
    2. ' ' → logprob: -1.6464987993240356
    3. ''' → logprob: -2.896498680114746
    4. '```' → logprob: -2.896498680114746
    5. '\n' → logprob: -3.021498680114746
    6. ':' → logprob: -3.021498680114746
    7. ' :' → logprob: -4.271498680114746
    8. '
' → logprob: -4.896498680114746
    9. '\' → logprob: -5.021498680114746
    10. '[' → logprob: -5.146498680114746

Token 23: ''un' (ID: 9788)
  Prédit: ''un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''un' → logprob: -0.5653479099273682
    2. ''' → logprob: -1.4403479099273682
    3. 'e' → logprob: -2.190347909927368
    4. ''une' → logprob: -2.815347909927368
    5. ''u' → logprob: -4.440347671508789
    6. 'u' → logprob: -4.565347671508789
    7. 'es' → logprob: -7.940347671508789
    8. '’un' → logprob: -9.315347671508789
    9. ''e' → logprob: -9.315347671508789
    10. 'a' → logprob: -9.565347671508789

Token 24: ' grap' (ID: 60955)
  Prédit: ' grap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' grap' → logprob: -0.43853625655174255
    2. ' graph' → logprob: -1.188536286354065
    3. ' ' → logprob: -4.063536167144775
    4. 'graph' → logprob: -4.188536167144775
    5. 'e' → logprob: -4.188536167144775
    6. '   ' → logprob: -6.563536167144775
    7. ' graphique' → logprob: -8.313536643981934
    8. 'gr' → logprob: -8.313536643981934
    9. '	graph' → logprob: -8.563536643981934
    10. ' ' → logprob: -8.813536643981934

Token 25: 'he' (ID: 273)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.12723161280155182
    2. 'he' → logprob: -2.1272315979003906
    3. 'r' → logprob: -9.62723159790039
    4. 'raph' → logprob: -9.87723159790039
    5. '`' → logprob: -10.37723159790039
    6. '#' → logprob: -10.75223159790039
    7. 'heme' → logprob: -11.25223159790039
    8. 'hne' → logprob: -11.50223159790039
    9. ')' → logprob: -11.62723159790039
    10. '   ' → logprob: -12.25223159790039

Token 26: ' non' (ID: 2893)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1296157836914062
    2. ')' → logprob: -2.1296157836914062
    3. ' ' → logprob: -2.1296157836914062
    4. '
' → logprob: -2.3796157836914062
    5. '\n' → logprob: -2.8796157836914062
    6. '```' → logprob: -2.8796157836914062
    7. ':' → logprob: -3.0046157836914062
    8. '.' → logprob: -3.6296157836914062
    9. 'e' → logprob: -3.7546157836914062
    10. ',' → logprob: -4.254615783691406

Token 27: ' orient' (ID: 13198)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.6782588958740234
    2. 'orient' → logprob: -0.8032588958740234
    3. '   ' → logprob: -3.8032588958740234
    4. ' orient' → logprob: -4.053258895874023
    5. ' dirig' → logprob: -5.803258895874023
    6. ' oriented' → logprob: -7.678258895874023
    7. ' ' → logprob: -7.803258895874023
    8. 'orien' → logprob: -8.553258895874023
    9. '-or' → logprob: -8.803258895874023
    10. '  ' → logprob: -8.803258895874023

Token 28: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -7.707997428951785e-05
    2. 'e' → logprob: -9.500077247619629
    3. 'è' → logprob: -14.000077247619629
    4. '```' → logprob: -14.500077247619629
    5. 'd' → logprob: -15.875077247619629
    6. 'ée' → logprob: -16.125076293945312
    7. 'a' → logprob: -16.250076293945312
    8. 'à' → logprob: -16.250076293945312
    9. '�' → logprob: -16.625076293945312
    10. 'ê' → logprob: -16.625076293945312

Token 29: ' à' (ID: 1221)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07712061703205109
    2. '\n' → logprob: -3.327120542526245
    3. ':' → logprob: -3.952120542526245
    4. '```' → logprob: -4.952120780944824
    5. ' ' → logprob: -5.952120780944824
    6. '
' → logprob: -6.202120780944824
    7. '.' → logprob: -6.827120780944824
    8. ' :' → logprob: -6.827120780944824
    9. 'n' → logprob: -6.952120780944824
    10. '    
' → logprob: -7.077120780944824

Token 30: ' partir' (ID: 12100)
  Prédit: ' partir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' partir' → logprob: -0.00022606621496379375
    2. ' partire' → logprob: -8.875226020812988
    3. ' ' → logprob: -10.000226020812988
    4. 'part' → logprob: -11.250226020812988
    5. 'n' → logprob: -11.750226020812988
    6. 'p' → logprob: -12.125226020812988
    7. '   ' → logprob: -12.500226020812988
    8. 'l' → logprob: -13.125226020812988
    9. ' n' → logprob: -13.625226020812988
    10. '  ' → logprob: -13.750226020812988

Token 31: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.1050882413983345
    2. ' des' → logprob: -2.855088233947754
    3. ' de' → logprob: -4.105088233947754
    4. '<|end|>' → logprob: -4.730088233947754
    5. 'd' → logprob: -4.855088233947754
    6. ' ' → logprob: -5.980088233947754
    7. '   ' → logprob: -5.980088233947754
    8. 'des' → logprob: -7.480088233947754
    9. ')' → logprob: -7.480088233947754
    10. 's' → logprob: -7.605088233947754

Token 32: ''une' (ID: 13337)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.12860070168972015
    2. ''un' → logprob: -2.628600597381592
    3. ''une' → logprob: -3.628600597381592
    4. 'u' → logprob: -4.878600597381592
    5. 'e' → logprob: -5.378600597381592
    6. ''u' → logprob: -5.503600597381592
    7. 'es' → logprob: -5.753600597381592
    8. '```' → logprob: -7.878600597381592
    9. ''au' → logprob: -8.37860107421875
    10. '`' → logprob: -8.62860107421875

Token 33: ' liste' (ID: 31719)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.042294278740882874
    2. ' liste' → logprob: -3.7922942638397217
    3. '   ' → logprob: -4.667294502258301
    4. ' chaîne' → logprob: -5.667294502258301
    5. 'liste' → logprob: -6.792294502258301
    6. 'n' → logprob: -6.792294502258301
    7. ' 
' → logprob: -7.167294502258301
    8. 'chaine' → logprob: -7.542294502258301
    9. 's' → logprob: -8.5422945022583
    10. '  ' → logprob: -8.6672945022583

Token 34: ' d' (ID: 272)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.5769826173782349
    2. ' de' → logprob: -1.3269826173782349
    3. ' ' → logprob: -2.8269824981689453
    4. '   ' → logprob: -3.4519824981689453
    5. ')' → logprob: -3.7019824981689453
    6. ' d' → logprob: -3.7019824981689453
    7. ''' → logprob: -5.201982498168945
    8. ' of' → logprob: -5.326982498168945
    9. 'de' → logprob: -5.951982498168945
    10. '`' → logprob: -6.076982498168945

Token 35: ''ar' (ID: 54307)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.7086746692657471
    2. 'e' → logprob: -0.8336746692657471
    3. ''ar' → logprob: -3.208674669265747
    4. ''é' → logprob: -4.833674430847168
    5. ''e' → logprob: -5.833674430847168
    6. '_' → logprob: -5.958674430847168
    7. ''s' → logprob: -6.333674430847168
    8. ''espace' → logprob: -6.458674430847168
    9. '```' → logprob: -6.708674430847168
    10. ''esp' → logprob: -6.833674430847168

Token 36: 'êtes' (ID: 23720)
  Prédit: 'ê'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ê' → logprob: -0.21977758407592773
    2. 'êtes' → logprob: -2.3447775840759277
    3. 'r' → logprob: -2.8447775840759277
    4. 'e' → logprob: -4.219777584075928
    5. 'g' → logprob: -4.594777584075928
    6. 'c' → logprob: -4.719777584075928
    7. 'é' → logprob: -5.594777584075928
    8. '^' → logprob: -6.844777584075928
    9. 'ç' → logprob: -6.969777584075928
    10. 'ę' → logprob: -7.344777584075928

Token 37: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18174681067466736
    2. ':' → logprob: -2.3067467212677
    3. '\n' → logprob: -3.8067467212677
    4. '
' → logprob: -4.556746959686279
    5. '```' → logprob: -5.056746959686279
    6. ' :' → logprob: -5.181746959686279
    7. '    
' → logprob: -5.431746959686279
    8. '.' → logprob: -5.806746959686279
    9. ':
' → logprob: -5.806746959686279
    10. 'n' → logprob: -6.556746959686279

Token 38: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001407613162882626
    2. '    
' → logprob: -7.501407623291016
    3. 'n' → logprob: -8.126407623291016
    4. '```' → logprob: -8.126407623291016
    5. '
' → logprob: -9.126407623291016
    6. ')' → logprob: -10.001407623291016
    7. '    ' → logprob: -10.251407623291016
    8. ' 
' → logprob: -11.001407623291016
    9. '\n' → logprob: -11.751407623291016
    10. ':' → logprob: -12.251407623291016

Token 39: ' Args' (ID: 39185)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09102538228034973
    2. 'adj' → logprob: -3.0910253524780273
    3. ' adjacency' → logprob: -3.3410253524780273
    4. '```' → logprob: -6.216025352478027
    5. 'n' → logprob: -6.966025352478027
    6. '    
' → logprob: -7.341025352478027
    7. '"""
' → logprob: -7.966025352478027
    8. ' adj' → logprob: -7.966025352478027
    9. '"""' → logprob: -8.091025352478027
    10. '
' → logprob: -8.091025352478027

Token 40: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5028627514839172
    2. '):' → logprob: -1.7528626918792725
    3. ',' → logprob: -2.0028626918792725
    4. '   ' → logprob: -3.6278626918792725
    5. ')' → logprob: -3.7528626918792725
    6. '[' → logprob: -4.502862930297852
    7. ' :' → logprob: -5.002862930297852
    8. '[n' → logprob: -5.377862930297852
    9. '```' → logprob: -5.377862930297852
    10. 'n' → logprob: -5.502862930297852

Token 41: '       ' (ID: 309)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.03998834267258644
    2. '   ' → logprob: -4.0399885177612305
    3. ')' → logprob: -4.4149885177612305
    4. ' n' → logprob: -5.0399885177612305
    5. ' )' → logprob: -7.0399885177612305
    6. ' 
' → logprob: -7.1649885177612305
    7. '```' → logprob: -7.4149885177612305
    8. ' ' → logprob: -8.91498851776123
    9. '(n' → logprob: -8.91498851776123
    10. '    ' → logprob: -9.41498851776123

Token 42: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.022402336820960045
    2. ' n' → logprob: -3.897402286529541
    3. '   ' → logprob: -6.647402286529541
    4. 'nodes' → logprob: -9.6474027633667
    5. 'node' → logprob: -9.7724027633667
    6. '```' → logprob: -9.7724027633667
    7. '    ' → logprob: -10.0224027633667
    8. ' nodes' → logprob: -10.0224027633667
    9. ')' → logprob: -10.1474027633667
    10. '`' → logprob: -10.1474027633667

Token 43: ' (' (ID: 350)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5354533195495605
    2. ')' → logprob: -1.5354533195495605
    3. ',' → logprob: -1.7854533195495605
    4. ':' → logprob: -3.6604533195495605
    5. '=' → logprob: -6.9104533195495605
    6. ' ,' → logprob: -7.0354533195495605
    7. '<|end|>' → logprob: -7.0354533195495605
    8. ',n' → logprob: -7.4104533195495605
    9. ' ):' → logprob: -7.7854533195495605
    10. '<|end|>' → logprob: -8.160453796386719

Token 44: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.09840580075979233
    2. ' int' → logprob: -2.4734058380126953
    3. ')' → logprob: -5.473405838012695
    4. ' )' → logprob: -5.973405838012695
    5. 'i' → logprob: -6.848405838012695
    6. ' i' → logprob: -7.348405838012695
    7. ',' → logprob: -8.223405838012695
    8. 'n' → logprob: -8.348405838012695
    9. ' in' → logprob: -8.723405838012695
    10. 'in' → logprob: -9.473405838012695

Token 45: '):' (ID: 3127)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.23697805404663086
    2. '):' → logprob: -1.6119780540466309
    3. ',' → logprob: -4.486978054046631
    4. '),' → logprob: -9.361978530883789
    5. ' )' → logprob: -9.736978530883789
    6. ' ):' → logprob: -10.486978530883789
    7. ')n' → logprob: -10.736978530883789
    8. '):
' → logprob: -11.486978530883789
    9. '   ' → logprob: -11.861978530883789
    10. ',n' → logprob: -12.236978530883789

Token 46: ' Nombre' (ID: 70208)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8658004403114319
    2. ')' → logprob: -2.240800380706787
    3. 'n' → logprob: -2.615800380706787
    4. ' )' → logprob: -2.615800380706787
    5. ' Nombre' → logprob: -2.865800380706787
    6. ' Le' → logprob: -2.990800380706787
    7. ' ' → logprob: -2.990800380706787
    8. '    ' → logprob: -3.240800380706787
    9. ' n' → logprob: -3.615800380706787
    10. 'int' → logprob: -4.240800380706787

Token 47: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.8069782853126526
    2. '_de' → logprob: -1.0569782257080078
    3. '_des' → logprob: -2.806978225708008
    4. ' des' → logprob: -3.056978225708008
    5. 'de' → logprob: -3.306978225708008
    6. 'des' → logprob: -3.681978225708008
    7. ' d' → logprob: -4.431978225708008
    8. ')' → logprob: -5.056978225708008
    9. '_' → logprob: -5.306978225708008
    10. '_d' → logprob: -5.431978225708008

Token 48: ' somm' (ID: 44830)
  Prédit: ' somm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' somm' → logprob: -0.3028542697429657
    2. ' ' → logprob: -2.052854299545288
    3. 's' → logprob: -2.677854299545288
    4. 'som' → logprob: -3.552854299545288
    5. ' noe' → logprob: -4.427854061126709
    6. ' sommet' → logprob: -4.927854061126709
    7. '	s' → logprob: -5.302854061126709
    8. 'n' → logprob: -5.427854061126709
    9. ' n' → logprob: -6.302854061126709
    10. '_s' → logprob: -6.552854061126709

Token 49: 'ets' (ID: 1719)
  Prédit: 'ets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ets' → logprob: -0.1831955760717392
    2. 'è' → logprob: -1.9331955909729004
    3. 'ètes' → logprob: -4.8081955909729
    4. 'ètres' → logprob: -5.5581955909729
    5. 'et' → logprob: -5.6831955909729
    6. 'êts' → logprob: -6.8081955909729
    7. 'èt' → logprob: -7.4331955909729
    8. '`' → logprob: -7.5581955909729
    9. 'e' → logprob: -7.5581955909729
    10. 'ès' → logprob: -7.6831955909729

Token 50: ' dans' (ID: 2671)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38747429847717285
    2. ')' → logprob: -1.5124742984771729
    3. '):' → logprob: -3.012474298477173
    4. ',' → logprob: -3.762474298477173
    5. '```' → logprob: -3.762474298477173
    6. '):
' → logprob: -6.762474060058594
    7. ':' → logprob: -7.512474060058594
    8. '    
' → logprob: -7.762474060058594
    9. 'n' → logprob: -7.887474060058594
    10. 'def' → logprob: -8.012474060058594

Token 51: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.32005685567855835
    2. ' ' → logprob: -1.4450569152832031
    3. ' la' → logprob: -4.570056915283203
    4. ')' → logprob: -4.820056915283203
    5. 'le' → logprob: -4.820056915283203
    6. ' )' → logprob: -5.445056915283203
    7. ' l' → logprob: -5.945056915283203
    8. '   ' → logprob: -6.820056915283203
    9. ' graph' → logprob: -7.195056915283203
    10. ' ' → logprob: -7.320056915283203

Token 52: ' grap' (ID: 60955)
  Prédit: ' grap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' grap' → logprob: -0.15304049849510193
    2. 'gr' → logprob: -2.6530404090881348
    3. ' graph' → logprob: -3.0280404090881348
    4. 'graph' → logprob: -3.7780404090881348
    5. '   ' → logprob: -9.403040885925293
    6. ' graphique' → logprob: -10.528040885925293
    7. '	graph' → logprob: -10.778040885925293
    8. ' ' → logprob: -11.028040885925293
    9. ' grapple' → logprob: -11.903040885925293
    10. '_gr' → logprob: -12.278040885925293

Token 53: 'he' (ID: 273)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.8446483612060547
    2. 'è' → logprob: -1.2196483612060547
    3. 'rap' → logprob: -1.9696483612060547
    4. 'raph' → logprob: -2.9696483612060547
    5. 'ène' → logprob: -3.8446483612060547
    6. 'ève' → logprob: -4.344648361206055
    7. 'rès' → logprob: -4.844648361206055
    8. 'e' → logprob: -4.844648361206055
    9. '   ' → logprob: -5.344648361206055
    10. 're' → logprob: -5.344648361206055

Token 54: ' (' (ID: 350)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.8293496370315552
    2. ')' → logprob: -1.2043496370315552
    3. '   ' → logprob: -1.7043496370315552
    4. '```' → logprob: -3.0793495178222656
    5. ':' → logprob: -4.079349517822266
    6. '):
' → logprob: -4.454349517822266
    7. '
' → logprob: -6.829349517822266
    8. '\n' → logprob: -6.954349517822266
    9. '``' → logprob: -7.204349517822266
    10. '    
' → logprob: -7.579349517822266

Token 55: 'num' (ID: 4571)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0147091681137681
    2. ' )' → logprob: -4.264708995819092
    3. '):' → logprob: -8.01470947265625
    4. ',' → logprob: -9.13970947265625
    5. ').' → logprob: -10.01470947265625
    6. ' ):' → logprob: -10.76470947265625
    7. ' ' → logprob: -12.01470947265625
    8. ' ' → logprob: -12.01470947265625
    9. '   ' → logprob: -12.63970947265625
    10. '),' → logprob: -12.88970947265625

Token 56: 'é' (ID: 377)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.08414547145366669
    2. 'éro' → logprob: -3.4591455459594727
    3. 'é' → logprob: -3.9591455459594727
    4. ')' → logprob: -4.084145545959473
    5. '_vertices' → logprob: -5.834145545959473
    6. '_nodes' → logprob: -5.959145545959473
    7. 'éros' → logprob: -6.084145545959473
    8. '_tokens' → logprob: -7.084145545959473
    9. 'e' → logprob: -7.209145545959473
    10. '_)' → logprob: -7.459145545959473

Token 57: 'rot' (ID: 8150)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.6540169715881348
    2. 'ro' → logprob: -0.9040169715881348
    3. ')' → logprob: -3.2790169715881348
    4. 'ros' → logprob: -4.279016971588135
    5. 'ra' → logprob: -4.779016971588135
    6. 'rä' → logprob: -6.904016971588135
    7. 'ро' → logprob: -6.904016971588135
    8. 'rə' → logprob: -6.904016971588135
    9. '_ro' → logprob: -7.279016971588135
    10. '=' → logprob: -7.279016971588135

Token 58: 'és' (ID: 1756)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6601852178573608
    2. 'és' → logprob: -0.7851852178573608
    3. 'é' → logprob: -3.6601853370666504
    4. 'o' → logprob: -7.53518533706665
    5. 'os' → logprob: -7.91018533706665
    6. '```' → logprob: -8.910184860229492
    7. 'es' → logprob: -9.160184860229492
    8. 't' → logprob: -9.535184860229492
    9. ')' → logprob: -9.660184860229492
    10. 'd' → logprob: -10.160184860229492

Token 59: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.07901327311992645
    2. 'de' → logprob: -2.5790133476257324
    3. '_de' → logprob: -10.329012870788574
    4. ')' → logprob: -10.454012870788574
    5. '```' → logprob: -10.829012870788574
    6. ' ' → logprob: -10.954012870788574
    7. '0' → logprob: -11.204012870788574
    8. '[' → logprob: -12.079012870788574
    9. '_' → logprob: -13.079012870788574
    10. 'd' → logprob: -14.329012870788574

Token 60: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.22543896734714508
    2. '0' → logprob: -1.6004389524459839
    3. '1' → logprob: -11.100439071655273
    4. ' ' → logprob: -11.850439071655273
    5. ' )' → logprob: -13.600439071655273
    6. ')' → logprob: -13.600439071655273
    7. '  ' → logprob: -14.475439071655273
    8. ' zéro' → logprob: -15.537939071655273
    9. 's' → logprob: -16.100439071655273
    10. '```' → logprob: -16.412939071655273

Token 61: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004928641719743609
    2. ' ' → logprob: -7.625493049621582
    3. '1' → logprob: -12.250493049621582
    4. '`' → logprob: -17.500492095947266
    5. '۰' → logprob: -17.625492095947266
    6. ')' → logprob: -18.000492095947266
    7. '```' → logprob: -18.000492095947266
    8. 'é' → logprob: -18.250492095947266
    9. ' zéro' → logprob: -18.500492095947266
    10. ' ' → logprob: -19.000492095947266

Token 62: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.240899458527565
    2. ')' → logprob: -1.8658994436264038
    3. ' )' → logprob: -3.3658995628356934
    4. ' ' → logprob: -3.9908995628356934
    5. 'à' → logprob: -5.365899562835693
    6. '0' → logprob: -8.115899085998535
    7. '   ' → logprob: -8.615899085998535
    8. '-' → logprob: -8.740899085998535
    9. ''à' → logprob: -8.990899085998535
    10. ',' → logprob: -9.115899085998535

Token 63: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.048652201890945435
    2. 'n' → logprob: -3.048652172088623
    3. ' ' → logprob: -9.798652648925781
    4. '	n' → logprob: -12.798652648925781
    5. ')n' → logprob: -12.798652648925781
    6. ' )' → logprob: -13.298652648925781
    7. ')' → logprob: -13.673652648925781
    8. '_n' → logprob: -14.923652648925781
    9. '1' → logprob: -15.798652648925781
    10. ' ' → logprob: -16.17365264892578

Token 64: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002211754210293293
    2. '):' → logprob: -6.127211570739746
    3. ')
' → logprob: -11.877211570739746
    4. ' )' → logprob: -12.252211570739746
    5. '):
' → logprob: -12.252211570739746
    6. '   ' → logprob: -12.627211570739746
    7. ').' → logprob: -13.002211570739746
    8. '```' → logprob: -13.127211570739746
    9. '),' → logprob: -14.252211570739746
    10. ',' → logprob: -15.502211570739746

Token 65: '       ' (ID: 309)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.49929243326187134
    2. '   ' → logprob: -1.2492923736572266
    3. '```' → logprob: -3.2492923736572266
    4. '\n' → logprob: -3.7492923736572266
    5. '
' → logprob: -4.249292373657227
    6. ')
' → logprob: -4.749292373657227
    7. ' 
' → logprob: -5.124292373657227
    8. '    
' → logprob: -5.749292373657227
    9. '):' → logprob: -5.999292373657227
    10. '  
' → logprob: -6.374292373657227

Token 66: ' edges' (ID: 22569)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9240038990974426
    2. ' adjacency' → logprob: -1.0490038394927979
    3. ' edges' → logprob: -1.7990038394927979
    4. '```' → logprob: -3.799003839492798
    5. 'edges' (adapté à ' edges') → logprob: -3.924003839492798
    6. ' adj' → logprob: -4.424004077911377
    7. '    ' → logprob: -4.924004077911377
    8. 'adj' → logprob: -5.049004077911377
    9. ')' → logprob: -5.424004077911377
    10. ' """
' → logprob: -5.924004077911377

Token 67: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6261005997657776
    2. '):' → logprob: -1.3761005401611328
    3. ' =' → logprob: -2.126100540161133
    4. ' :' → logprob: -3.001100540161133
    5. '=' → logprob: -4.001100540161133
    6. ')' → logprob: -4.001100540161133
    7. ' ):' → logprob: -6.126100540161133
    8. '   ' → logprob: -6.251100540161133
    9. ',' → logprob: -6.751100540161133
    10. ' ' → logprob: -7.126100540161133

Token 68: 'List' (ID: 950)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.10225161164999008
    2. 'List' → logprob: -2.3522515296936035
    3. ' list' → logprob: -6.4772515296936035
    4. ')' → logprob: -8.477252006530762
    5. ' List' → logprob: -8.602252006530762
    6. '[List' → logprob: -9.977252006530762
    7. '[' → logprob: -10.352252006530762
    8. '   ' → logprob: -10.727252006530762
    9. '_list' → logprob: -12.352252006530762
    10. '[list' → logprob: -12.477252006530762

Token 69: '[' (ID: 58)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.1748279333114624
    2. '[' → logprob: -2.424828052520752
    3. '[List' → logprob: -2.674828052520752
    4. ')' → logprob: -6.424828052520752
    5. '[list' → logprob: -7.174828052520752
    6. '[str' → logprob: -7.924828052520752
    7. '):' → logprob: -9.674827575683594
    8. ' of' → logprob: -9.674827575683594
    9. '<int' → logprob: -10.424827575683594
    10. '```' → logprob: -10.674827575683594

Token 70: 'Tuple' (ID: 40048)
  Prédit: 'Tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tuple' → logprob: -0.06480848789215088
    2. 'List' → logprob: -2.8148083686828613
    3. ' Tuple' → logprob: -6.689808368682861
    4. 'tuple' → logprob: -6.814808368682861
    5. 'Tu' → logprob: -8.18980884552002
    6. '   ' → logprob: -9.43980884552002
    7. '.Tuple' → logprob: -10.43980884552002
    8. ' List' → logprob: -10.56480884552002
    9. 'tu' → logprob: -10.68980884552002
    10. ' tuple' → logprob: -11.18980884552002

Token 71: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -6.749814019713085e-06
    2. 'int' → logprob: -12.625006675720215
    3. '[' → logprob: -13.125006675720215
    4. '<int' → logprob: -14.500006675720215
    5. '])' → logprob: -14.750006675720215
    6. '(int' → logprob: -15.375006675720215
    7. ',int' → logprob: -16.12500762939453
    8. ']int' → logprob: -16.37500762939453
    9. '```' → logprob: -17.87500762939453
    10. ' int' → logprob: -17.87500762939453

Token 72: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.42504286766052246
    2. '[int' → logprob: -1.1750428676605225
    3. ',int' → logprob: -3.3000428676605225
    4. ']])' → logprob: -8.050043106079102
    5. ' ,' → logprob: -8.550043106079102
    6. ']]' → logprob: -10.925043106079102
    7. '<int' → logprob: -11.425043106079102
    8. '[' → logprob: -12.175043106079102
    9. 'int' → logprob: -12.300043106079102
    10. ']int' → logprob: -12.300043106079102

Token 73: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.023426689207553864
    2. ' int' → logprob: -3.7734267711639404
    3. '   ' → logprob: -9.89842700958252
    4. ',int' → logprob: -9.89842700958252
    5. ']int' → logprob: -10.64842700958252
    6. '<int' → logprob: -11.27342700958252
    7. '  ' → logprob: -11.39842700958252
    8. '	int' → logprob: -11.39842700958252
    9. '[int' → logprob: -12.02342700958252
    10. ',' → logprob: -12.64842700958252

Token 74: ']]' (ID: 8928)
  Prédit: ']]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']]' → logprob: -0.4298907220363617
    2. ']])' → logprob: -1.054890751838684
    3. ']):' → logprob: -7.4298906326293945
    4. '])' → logprob: -8.054890632629395
    5. ']' → logprob: -8.929890632629395
    6. '```' → logprob: -9.929890632629395
    7. ']))' → logprob: -10.554890632629395
    8. ')]' → logprob: -11.429890632629395
    9. ']]]' → logprob: -11.429890632629395
    10. ']])
' → logprob: -11.804890632629395

Token 75: '):' (ID: 3127)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6565398573875427
    2. '):' → logprob: -0.7815398573875427
    3. ']):' → logprob: -4.1565399169921875
    4. '   ' → logprob: -5.2815399169921875
    5. '])' → logprob: -6.5315399169921875
    6. '):
' → logprob: -7.9065399169921875
    7. ']' → logprob: -8.531539916992188
    8. ')]' → logprob: -8.656539916992188
    9. ' ' → logprob: -9.031539916992188
    10. '>):' → logprob: -9.406539916992188

Token 76: ' Liste' (ID: 61030)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6710333228111267
    2. '[' → logprob: -1.4210333824157715
    3. ')' → logprob: -1.7960333824157715
    4. ' )' → logprob: -3.2960333824157715
    5. '    ' → logprob: -4.2960333824157715
    6. 'List' → logprob: -4.5460333824157715
    7. ' List' → logprob: -5.5460333824157715
    8. '[
' → logprob: -5.6710333824157715
    9. ' ' → logprob: -6.1710333824157715
    10. '```' → logprob: -6.4210333824157715

Token 77: ' d' (ID: 272)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.18588803708553314
    2. ' de' → logprob: -2.8108880519866943
    3. ' des' → logprob: -3.4358880519866943
    4. ')' → logprob: -3.9358880519866943
    5. ' of' → logprob: -4.185887813568115
    6. '[int' → logprob: -4.310887813568115
    7. '[
' → logprob: -4.810887813568115
    8. '[List' → logprob: -5.560887813568115
    9. ' d' → logprob: -6.060887813568115
    10. ':' → logprob: -6.185887813568115

Token 78: ''ar' (ID: 54307)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.3660486042499542
    2. '[' → logprob: -1.8660485744476318
    3. 's' → logprob: -2.866048574447632
    4. 'des' → logprob: -3.366048574447632
    5. ''' → logprob: -4.241048812866211
    6. ' de' → logprob: -4.366048812866211
    7. ')' → logprob: -4.366048812866211
    8. ']' → logprob: -5.991048812866211
    9. ' d' → logprob: -6.241048812866211
    10. '[]' → logprob: -6.491048812866211

Token 79: 'êtes' (ID: 23720)
  Prédit: 'êtes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êtes' → logprob: -0.40112292766571045
    2. 'ê' → logprob: -1.2761229276657104
    3. 'ç' → logprob: -3.901123046875
    4. 'î' → logprob: -4.526123046875
    5. '\xc8' → logprob: -5.026123046875
    6. 'c' → logprob: -5.526123046875
    7. 'ế' → logprob: -6.776123046875
    8. 'é' → logprob: -7.026123046875
    9. '�' → logprob: -7.151123046875
    10. 'ę' → logprob: -7.151123046875

Token 80: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.052902840077877045
    2. '   ' → logprob: -3.802902936935425
    3. ')' → logprob: -3.927902936935425
    4. '):
' → logprob: -5.302902698516846
    5. ' ):' → logprob: -5.927902698516846
    6. '```' → logprob: -7.927902698516846
    7. ',' → logprob: -8.052903175354004
    8. ' ' → logprob: -8.052903175354004
    9. ':' → logprob: -8.302903175354004
    10. ' :' → logprob: -9.177903175354004

Token 81: ' chaque' (ID: 21194)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6127104163169861
    2. '   ' → logprob: -1.3627104759216309
    3. '):' → logprob: -2.237710475921631
    4. '):
' → logprob: -3.862710475921631
    5. ' each' → logprob: -4.362710475921631
    6. ' :' → logprob: -4.612710475921631
    7. ' chaque' → logprob: -4.987710475921631
    8. ' où' → logprob: -5.362710475921631
    9. ':' → logprob: -5.487710475921631
    10. ' )' → logprob: -5.612710475921631

Token 82: ' ar' (ID: 646)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6454280018806458
    2. ' ' → logprob: -1.645427942276001
    3. ')' → logprob: -1.895427942276001
    4. ' )' → logprob: -3.145427942276001
    5. ' _' → logprob: -3.395427942276001
    6. 's' → logprob: -4.02042818069458
    7. 'e' → logprob: -4.64542818069458
    8. ' tuple' → logprob: -5.64542818069458
    9. 'a' → logprob: -5.77042818069458
    10. ' (' → logprob: -6.39542818069458

Token 83: 'ête' (ID: 16808)
  Prédit: 'ê'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ê' → logprob: -0.03539470210671425
    2. 'è' → logprob: -4.535394668579102
    3. 'ête' → logprob: -4.660394668579102
    4. 'e' → logprob: -5.285394668579102
    5. 'r' → logprob: -5.660394668579102
    6. 'é' → logprob: -6.035394668579102
    7. 'î' → logprob: -7.410394668579102
    8. 'êt' → logprob: -7.535394668579102
    9. 'ế' → logprob: -7.910394668579102
    10. ')' → logprob: -8.160394668579102

Token 84: ' est' (ID: 893)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.026821494102478
    2. ' ' → logprob: -1.651821494102478
    3. ' :' → logprob: -2.5268216133117676
    4. ' ,' → logprob: -2.6518216133117676
    5. 's' → logprob: -2.7768216133117676
    6. '   ' → logprob: -3.0268216133117676
    7. ',' → logprob: -3.4018216133117676
    8. '):' → logprob: -3.5268216133117676
    9. ' )' → logprob: -4.276821613311768
    10. '  ' → logprob: -4.276821613311768

Token 85: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.07172156125307083
    2. ' une' → logprob: -2.8217215538024902
    3. 'un' → logprob: -5.32172155380249
    4. ' représent' → logprob: -6.07172155380249
    5. 'une' → logprob: -6.82172155380249
    6. ' a' → logprob: -8.071722030639648
    7. ' (' → logprob: -8.196722030639648
    8. ' ' → logprob: -8.196722030639648
    9. 's' → logprob: -9.071722030639648
    10. ' represented' → logprob: -9.821722030639648

Token 86: ' tuple' (ID: 31311)
  Prédit: ' tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tuple' → logprob: -0.022485440596938133
    2. ' couple' → logprob: -4.772485256195068
    3. ' (' → logprob: -5.022485256195068
    4. ')' → logprob: -6.772485256195068
    5. 'tuple' → logprob: -6.772485256195068
    6. ' tuples' → logprob: -6.772485256195068
    7. ' )' → logprob: -7.522485256195068
    8. ' ' → logprob: -7.522485256195068
    9. ' sommet' → logprob: -7.522485256195068
    10. '   ' → logprob: -8.147485733032227

Token 87: ' de' (ID: 334)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.5224292874336243
    2. '(' → logprob: -2.2724292278289795
    3. ' de' → logprob: -2.6474292278289795
    4. ')' → logprob: -2.7724292278289795
    5. 's' → logprob: -3.0224292278289795
    6. ' d' → logprob: -4.022429466247559
    7. '[int' → logprob: -4.022429466247559
    8. '   ' → logprob: -4.147429466247559
    9. '[' → logprob: -5.022429466247559
    10. '(
' → logprob: -5.147429466247559

Token 88: ' deux' (ID: 10301)
  Prédit: ' deux'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deux' → logprob: -0.3671686053276062
    2. 's' → logprob: -2.742168664932251
    3. 'de' → logprob: -2.867168664932251
    4. ' (' → logprob: -2.992168664932251
    5. ')' → logprob: -3.242168664932251
    6. ' somm' → logprob: -3.992168664932251
    7. '2' → logprob: -4.117168426513672
    8. ' two' → logprob: -4.242168426513672
    9. ' ' → logprob: -4.367168426513672
    10. '(de' → logprob: -4.617168426513672

Token 89: ' somm' (ID: 44830)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.38411134481430054
    2. ')' → logprob: -2.2591114044189453
    3. ' somm' → logprob: -2.3841114044189453
    4. ' sommet' → logprob: -3.1341114044189453
    5. ' n' → logprob: -3.5091114044189453
    6. ' )' → logprob: -4.009111404418945
    7. 'som' → logprob: -5.384111404418945
    8. 'n' → logprob: -5.384111404418945
    9. ' noe' → logprob: -5.509111404418945
    10. ' ' → logprob: -5.884111404418945

Token 90: 'ets' (ID: 1719)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.048938512802124
    2. 'è' → logprob: -1.298938512802124
    3. 'et' → logprob: -1.423938512802124
    4. 'ets' → logprob: -2.173938512802124
    5. 'es' → logprob: -5.548938751220703
    6. 'é' → logprob: -6.048938751220703
    7. 'е' → logprob: -6.173938751220703
    8. ')' → logprob: -6.173938751220703
    9. 'ê' → logprob: -6.173938751220703
    10. 'èves' → logprob: -6.923938751220703

Token 91: '.

' (ID: 364)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4544437825679779
    2. ')' → logprob: -1.0794438123703003
    3. '   ' → logprob: -4.70444393157959
    4. '):
' → logprob: -4.82944393157959
    5. ',' → logprob: -5.57944393157959
    6. ' ):' → logprob: -6.82944393157959
    7. ' ' → logprob: -6.95444393157959
    8. ' )' → logprob: -7.32944393157959
    9. ')\' → logprob: -8.20444393157959
    10. '```' → logprob: -8.45444393157959

Token 92: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3325430154800415
    2. '   ' → logprob: -2.082542896270752
    3. ' ' → logprob: -2.082542896270752
    4. ':' → logprob: -4.707542896270752
    5. '"' → logprob: -5.207542896270752
    6. '"""' → logprob: -5.707542896270752
    7. ' 
' → logprob: -5.957542896270752
    8. ' )' → logprob: -6.082542896270752
    9. '```' → logprob: -6.332542896270752
    10. '):' → logprob: -6.332542896270752

Token 93: ' Returns' (ID: 9609)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18668168783187866
    2. ' adjacency' → logprob: -2.3116817474365234
    3. ')' → logprob: -3.6866817474365234
    4. '```' → logprob: -4.686681747436523
    5. ' ' → logprob: -4.936681747436523
    6. '    
' → logprob: -5.186681747436523
    7. '"""' → logprob: -5.311681747436523
    8. ' """
' → logprob: -5.811681747436523
    9. 'adj' → logprob: -5.811681747436523
    10. '"""
' → logprob: -6.061681747436523

Token 94: ':
' (ID: 734)
  Prédit: ' :'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' :' → logprob: -0.22759748995304108
    2. ':' → logprob: -1.6025974750518799
    3. ' ' → logprob: -7.227597713470459
    4. '[' → logprob: -7.977597713470459
    5. '[:]' → logprob: -8.6025972366333
    6. ' ):' → logprob: -8.7275972366333
    7. ' :
' → logprob: -9.2275972366333
    8. ' ,' → logprob: -9.3525972366333
    9. ')' → logprob: -9.6025972366333
    10. ' =' → logprob: -9.7275972366333

Token 95: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3818383812904358
    2. '    ' → logprob: -2.256838321685791
    3. ' {' → logprob: -2.881838321685791
    4. ')' → logprob: -3.006838321685791
    5. ' )' → logprob: -3.506838321685791
    6. ' ' → logprob: -3.881838321685791
    7. ' []' → logprob: -4.506838321685791
    8. ' defaultdict' → logprob: -5.006838321685791
    9. 'List' → logprob: -5.381838321685791
    10. '[' → logprob: -5.631838321685791

Token 96: ' List' (ID: 2655)
  Prédit: 'dict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dict' → logprob: -0.7005283832550049
    2. ' dict' → logprob: -1.2005283832550049
    3. '   ' → logprob: -1.9505283832550049
    4. 'Dict' → logprob: -3.950528383255005
    5. 'List' (adapté à ' List') → logprob: -4.450528144836426
    6. 'adj' → logprob: -4.825528144836426
    7. '
' → logprob: -5.700528144836426
    8. ' adjacency' → logprob: -5.825528144836426
    9. '```' → logprob: -6.200528144836426
    10. ' adj' → logprob: -6.200528144836426

Token 97: '[List' (ID: 113982)
  Prédit: '[List'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[List' → logprob: -0.004646926652640104
    2. '[' → logprob: -5.3796467781066895
    3. '[
' → logprob: -10.879647254943848
    4. '[list' → logprob: -12.254647254943848
    5. '<List' → logprob: -13.379647254943848
    6. '[int' → logprob: -13.879647254943848
    7. '   ' → logprob: -16.12964630126953
    8. ']' → logprob: -16.87964630126953
    9. ' ' → logprob: -17.00464630126953
    10. '[]' → logprob: -17.12964630126953

Token 98: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -3.643152740551159e-05
    2. '<int' → logprob: -10.625036239624023
    3. ']int' → logprob: -12.375036239624023
    4. '[' → logprob: -12.500036239624023
    5. 'int' → logprob: -12.500036239624023
    6. '[Int' → logprob: -16.125036239624023
    7. '[
' → logprob: -16.250036239624023
    8. '[i' → logprob: -16.750036239624023
    9. '[List' → logprob: -17.000036239624023
    10. '(int' → logprob: -17.375036239624023

Token 99: ']]' (ID: 8928)
  Prédit: ']]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']]' → logprob: -0.0001855406299000606
    2. ']]]' → logprob: -9.2501859664917
    3. ']' → logprob: -9.8751859664917
    4. ']>' → logprob: -11.0001859664917
    5. ']]:
' → logprob: -11.6251859664917
    6. '"]]' → logprob: -12.8751859664917
    7. '']]' → logprob: -13.3751859664917
    8. ' ]]' → logprob: -13.5001859664917
    9. '>]' → logprob: -13.8751859664917
    10. ']]

' → logprob: -14.0001859664917

Token 100: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05518714338541031
    2. ':
' → logprob: -2.930187225341797
    3. ' :' → logprob: -9.680187225341797
    4. ' :
' → logprob: -9.805187225341797
    5. '[n' → logprob: -10.430187225341797
    6. '   ' → logprob: -10.555187225341797
    7. '[' → logprob: -10.680187225341797
    8. ']:' → logprob: -10.930187225341797
    9. '):' → logprob: -10.930187225341797
    10. ':
' → logprob: -11.055187225341797

Token 101: ' Liste' (ID: 61030)
  Prédit: ' adjacency'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' adjacency' → logprob: -0.07570745795965195
    2. 'Adj' → logprob: -2.95070743560791
    3. '   ' → logprob: -5.20070743560791
    4. '[
' → logprob: -5.45070743560791
    5. 'adj' → logprob: -5.57570743560791
    6. ' adj' → logprob: -6.32570743560791
    7. ' [
' → logprob: -6.45070743560791
    8. 'A' → logprob: -7.57570743560791
    9. ' [[]' → logprob: -7.82570743560791
    10. ' A' → logprob: -7.82570743560791

Token 102: ' d' (ID: 272)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 103: ''ad' (ID: 36162)
  Prédit: ' adjacency'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' adjacency' → logprob: -0.5770872831344604
    2. ' d' → logprob: -2.70208740234375
    3. '_adj' → logprob: -2.82708740234375
    4. ''ad' → logprob: -2.95208740234375
    5. ' des' → logprob: -2.95208740234375
    6. ''' → logprob: -3.32708740234375
    7. ' de' → logprob: -3.32708740234375
    8. 'adj' → logprob: -3.45208740234375
    9. '[]' → logprob: -3.57708740234375
    10. 'es' → logprob: -4.20208740234375

Token 104: 'jac' (ID: 77250)
  Prédit: 'jac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jac' → logprob: -0.07003969699144363
    2. 'j' → logprob: -2.695039749145508
    3. ' jac' → logprob: -9.945039749145508
    4. 'jc' → logprob: -10.945039749145508
    5. ' j' → logprob: -11.820039749145508
    6. 'jec' → logprob: -11.945039749145508
    7. '	j' → logprob: -12.195039749145508
    8. 'Jac' → logprob: -12.695039749145508
    9. 'acency' → logprob: -12.695039749145508
    10. 'ja' → logprob: -13.195039749145508

Token 105: 'ence' (ID: 1082)
  Prédit: 'ence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ence' → logprob: -0.012036513537168503
    2. 'e' → logprob: -5.137036323547363
    3. 'escence' → logprob: -5.637036323547363
    4. 'es' → logprob: -7.137036323547363
    5. 'ance' → logprob: -7.387036323547363
    6. 'cence' → logprob: -7.887036323547363
    7. 'acency' → logprob: -8.262036323547363
    8. 'ences' → logprob: -8.387036323547363
    9. '```' → logprob: -10.262036323547363
    10. 'ec' → logprob: -10.637036323547363

Token 106: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5268588662147522
    2. '[n' → logprob: -1.2768588066101074
    3. '(n' → logprob: -2.5268588066101074
    4. '[' → logprob: -4.026858806610107
    5. ' =' → logprob: -4.026858806610107
    6. ':
' → logprob: -5.276858806610107
    7. '=' → logprob: -5.526858806610107
    8. 'n' → logprob: -6.026858806610107
    9. '   ' → logprob: -6.401858806610107
    10. ']' → logprob: -7.901858806610107

Token 107: 'E' (ID: 36)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6596587300300598
    2. ' n' → logprob: -1.909658670425415
    3. ')' → logprob: -2.034658670425415
    4. ' adjacency' → logprob: -2.159658670425415
    5. 'adj' → logprob: -3.784658670425415
    6. 'Adj' → logprob: -3.909658670425415
    7. 'n' → logprob: -4.659658908843994
    8. ' adj' → logprob: -4.784658908843994
    9. ' ' → logprob: -5.659658908843994
    10. '       ' → logprob: -5.784658908843994

Token 108: '),' (ID: 936)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -1.0498203039169312
    2. '[' → logprob: -1.1748203039169312
    3. ')' → logprob: -2.2998204231262207
    4. 'm' → logprob: -2.4248204231262207
    5. '])' → logprob: -2.6748204231262207
    6. 'of' → logprob: -5.049820423126221
    7. ' ]' → logprob: -5.049820423126221
    8. '[
' → logprob: -5.049820423126221
    9. '   ' → logprob: -5.174820423126221
    10. ' d' → logprob: -5.674820423126221

Token 109: ' où' (ID: 15113)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.704421877861023
    2. '[' → logprob: -1.954421877861023
    3. ' ' → logprob: -2.8294219970703125
    4. 'n' → logprob: -3.0794219970703125
    5. ' where' → logprob: -3.0794219970703125
    6. '    ' → logprob: -3.4544219970703125
    7. ' [' → logprob: -3.8294219970703125
    8. '[
' → logprob: -4.0794219970703125
    9. '[n' → logprob: -4.2044219970703125
    10. '```' → logprob: -4.2044219970703125

Token 110: ' E' (ID: 457)
  Prédit: ' chaque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.010530461557209492
    2. ' l' → logprob: -5.385530471801758
    3. ' la' → logprob: -5.635530471801758
    4. ' E' → logprob: -7.510530471801758
    5. ' ' → logprob: -8.010530471801758
    6. '   ' → logprob: -8.135530471801758
    7. 'Chaque' → logprob: -8.885530471801758
    8. 'E' → logprob: -9.010530471801758
    9. ' les' → logprob: -9.010530471801758
    10. '    ' → logprob: -9.135530471801758

Token 111: '[i' (ID: 1768)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0981656089425087
    2. '[i' → logprob: -2.973165512084961
    3. '[' → logprob: -3.348165512084961
    4. ']' → logprob: -5.723165512084961
    5. '=' → logprob: -6.723165512084961
    6. '[u' → logprob: -7.598165512084961
    7. '[n' → logprob: -8.223165512084961
    8. ')' → logprob: -8.473165512084961
    9. 's' → logprob: -8.723165512084961
    10. '[s' → logprob: -8.848165512084961

Token 112: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0004659425176214427
    2. ']=' → logprob: -8.375466346740723
    3. ' ]' → logprob: -9.250466346740723
    4. '],' → logprob: -10.000466346740723
    5. '][]' → logprob: -11.000466346740723
    6. '])' → logprob: -11.125466346740723
    7. ']:' → logprob: -11.500466346740723
    8. 's' → logprob: -11.625466346740723
    9. ']==' → logprob: -12.125466346740723
    10. '+' → logprob: -12.250466346740723

Token 113: ' contient' (ID: 89067)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.35216039419174194
    2. '<|end|>' → logprob: -1.4771604537963867
    3. ' est' → logprob: -3.7271604537963867
    4. ' contient' → logprob: -4.602160453796387
    5. ' is' → logprob: -4.977160453796387
    6. ' contains' → logprob: -5.477160453796387
    7. ' ' → logprob: -5.477160453796387
    8. '=' → logprob: -5.477160453796387
    9. ' représente' → logprob: -5.602160453796387
    10. ')' → logprob: -6.352160453796387

Token 114: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.010001259855926037
    2. 'les' → logprob: -4.885001182556152
    3. ' la' → logprob: -6.510001182556152
    4. ' ' → logprob: -7.760001182556152
    5. ' tous' → logprob: -8.885001182556152
    6. 's' → logprob: -9.260001182556152
    7. ' ' → logprob: -9.885001182556152
    8. 'the' → logprob: -10.510001182556152
    9. '[]' → logprob: -11.260001182556152
    10. '   ' → logprob: -11.260001182556152

Token 115: ' voisins' (ID: 166720)
  Prédit: ' voisins'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' voisins' → logprob: -0.02657104842364788
    2. 'vo' → logprob: -4.776571273803711
    3. ' somm' → logprob: -4.776571273803711
    4. 's' → logprob: -5.151571273803711
    5. ' voisin' → logprob: -6.276571273803711
    6. 'adj' → logprob: -8.026571273803711
    7. 'som' → logprob: -8.276571273803711
    8. ' sommet' → logprob: -8.526571273803711
    9. '-' → logprob: -8.776571273803711
    10. ' vois' → logprob: -8.901571273803711

Token 116: ' du' (ID: 1462)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.19301241636276245
    2. 'de' → logprob: -2.8180124759674072
    3. ' du' → logprob: -2.9430124759674072
    4. 's' → logprob: -3.3180124759674072
    5. ' des' → logprob: -5.193012237548828
    6. 'direct' → logprob: -5.193012237548828
    7. ' ' → logprob: -5.443012237548828
    8. ' of' → logprob: -5.943012237548828
    9. '<|end|>' → logprob: -6.568012237548828
    10. '```' → logprob: -6.693012237548828

Token 117: ' sommet' (ID: 130502)
  Prédit: ' sommet'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sommet' → logprob: -0.0016415000427514315
    2. 'som' → logprob: -6.876641273498535
    3. ' i' → logprob: -7.751641273498535
    4. 's' → logprob: -9.501641273498535
    5. ' som' → logprob: -9.876641273498535
    6. 'i' → logprob: -10.626641273498535
    7. ' somm' → logprob: -11.376641273498535
    8. ' ' → logprob: -11.751641273498535
    9. '```' → logprob: -13.126641273498535
    10. ' noe' → logprob: -13.126641273498535

Token 118: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.023270871490240097
    2. 'i' → logprob: -3.773270845413208
    3. '[i' → logprob: -11.773270606994629
    4. '	i' → logprob: -12.273270606994629
    5. ' ' → logprob: -12.398270606994629
    6. ' ' → logprob: -12.523270606994629
    7. '(i' → logprob: -13.523270606994629
    8. '   ' → logprob: -13.773270606994629
    9. '_i' → logprob: -14.273270606994629
    10. ' (' → logprob: -14.398270606994629

Token 119: '.
' (ID: 558)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0546426847577095
    2. '+' → logprob: -3.179642677307129
    3. ' ]' → logprob: -4.679642677307129
    4. ')' → logprob: -6.929642677307129
    5. ' +' → logprob: -8.054642677307129
    6. '.' → logprob: -8.054642677307129
    7. 's' → logprob: -9.054642677307129
    8. '],' → logprob: -9.179642677307129
    9. '])' → logprob: -9.554642677307129
    10. 'e' → logprob: -9.929642677307129

Token 120: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.39990293979644775
    2. ')' → logprob: -1.3999029397964478
    3. ':' → logprob: -3.024902820587158
    4. '
' → logprob: -4.524902820587158
    5. '):' → logprob: -5.399902820587158
    6. '\n' → logprob: -5.399902820587158
    7. ' ' → logprob: -5.899902820587158
    8. '"""' → logprob: -6.399902820587158
    9. '    
' → logprob: -6.524902820587158
    10. ']' → logprob: -6.524902820587158

Token 121: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.42263999581336975
    2. ')' → logprob: -1.7976399660110474
    3. '"""' → logprob: -2.547640085220337
    4. ':' → logprob: -3.547640085220337
    5. '
' → logprob: -3.672640085220337
    6. '):' → logprob: -4.422639846801758
    7. '```' → logprob: -4.922639846801758
    8. '"' → logprob: -5.797639846801758
    9. ' """' → logprob: -5.797639846801758
    10. '"""
' (adapté à ' """
') → logprob: -5.797639846801758

Token 122: '   ' (ID: 271)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.22399741411209106
    2. '   ' → logprob: -2.0989973545074463
    3. '    
' → logprob: -3.4739973545074463
    4. '
' → logprob: -3.5989973545074463
    5. 'n' → logprob: -5.223997592926025
    6. ' ' → logprob: -5.473997592926025
    7. '     
' → logprob: -5.723997592926025
    8. '\n' → logprob: -5.848997592926025
    9. '\' → logprob: -6.848997592926025
    10. '   
' → logprob: -7.098997592926025

Token 123: ' E' (ID: 457)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' (adapté à ' E') → logprob: -0.08177036046981812
    2. ' E' → logprob: -2.706770420074463
    3. '   ' → logprob: -5.081770420074463
    4. 'e' → logprob: -6.331770420074463
    5. ' adjacency' → logprob: -6.331770420074463
    6. 'adj' → logprob: -6.456770420074463
    7. ' adj' → logprob: -8.831769943237305
    8. ' ' → logprob: -9.706769943237305
    9. 'ad' → logprob: -10.456769943237305
    10. ' e' → logprob: -10.581769943237305

Token 124: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0036107590422034264
    2. '=' → logprob: -5.628610610961914
    3. ' =
' → logprob: -12.003610610961914
    4. ' ' → logprob: -14.253610610961914
    5. '=[]' → logprob: -14.253610610961914
    6. ' =[' → logprob: -14.378610610961914
    7. ')' → logprob: -14.753610610961914
    8. '   ' → logprob: -15.003610610961914
    9. '.' → logprob: -15.253610610961914
    10. '[' → logprob: -15.378610610961914

Token 125: ' [[]' (ID: 182908)
  Prédit: ' [[]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [[]' → logprob: -7.302704761968926e-05
    2. ' [' → logprob: -10.000073432922363
    3. '[' → logprob: -10.500073432922363
    4. ' [[' → logprob: -19.375072479248047
    5. ' defaultdict' → logprob: -20.000072479248047
    6. ' ' → logprob: -20.375072479248047
    7. ' []' → logprob: -20.875072479248047
    8. ' ' → logprob: -21.000072479248047
    9. '[n' → logprob: -21.375072479248047
    10. '[]' → logprob: -21.500072479248047

Token 126: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.0791059136390686
    2. 'for' → logprob: -2.579105854034424
    3. ')' → logprob: -9.579106330871582
    4. ']' → logprob: -9.579106330871582
    5. '	for' → logprob: -10.204106330871582
    6. ' ' → logprob: -11.079106330871582
    7. '   ' → logprob: -11.204106330871582
    8. '    ' → logprob: -12.954106330871582
    9. ' f' → logprob: -13.204106330871582
    10. ',' → logprob: -13.454106330871582

Token 127: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.0895124226808548
    2. ' ' → logprob: -2.839512348175049
    3. ' range' → logprob: -4.089512348175049
    4. ' i' → logprob: -4.714512348175049
    5. '_' → logprob: -6.589512348175049
    6. ' in' → logprob: -9.839512825012207
    7. 'range' → logprob: -10.714512825012207
    8. ' e' → logprob: -13.839512825012207
    9. '_range' → logprob: -13.839512825012207
    10. ' xrange' → logprob: -13.964512825012207

Token 128: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.15140879154205322
    2. 'range' → logprob: -2.1514086723327637
    3. ' range' → logprob: -3.9014086723327637
    4. 'in' → logprob: -5.651408672332764
    5. 'ange' → logprob: -8.401409149169922
    6. ' ' → logprob: -8.651409149169922
    7. 'n' → logprob: -10.526409149169922
    8. '  ' → logprob: -12.151409149169922
    9. '(range' → logprob: -12.151409149169922
    10. '	range' → logprob: -12.276409149169922

Token 129: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.005932828411459923
    2. ' range' → logprob: -5.130932807922363
    3. 'rang' → logprob: -13.880932807922363
    4. '(range' → logprob: -14.505932807922363
    5. ')' → logprob: -14.630932807922363
    6. ' ' → logprob: -14.630932807922363
    7. '	range' → logprob: -14.755932807922363
    8. '```' → logprob: -15.005932807922363
    9. '   ' → logprob: -15.505932807922363
    10. 'r' → logprob: -16.00593376159668

Token 130: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0024788661394268274
    2. '(' → logprob: -6.002479076385498
    3. ' (' → logprob: -13.12747859954834
    4. ' n' → logprob: -14.12747859954834
    5. 'n' → logprob: -15.00247859954834
    6. '(
' → logprob: -17.127479553222656
    7. ')n' → logprob: -17.502479553222656
    8. ')' → logprob: -18.002479553222656
    9. '(s' → logprob: -18.502479553222656
    10. '(N' → logprob: -18.752479553222656

Token 131: ' +' (ID: 659)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.006038765422999859
    2. ' )' → logprob: -5.381038665771484
    3. '+' → logprob: -7.006038665771484
    4. ')' → logprob: -7.631038665771484
    5. ' +' → logprob: -11.006038665771484
    6. ')]
' → logprob: -13.006038665771484
    7. ' ]' → logprob: -13.506038665771484
    8. '(n' → logprob: -13.506038665771484
    9. ']' → logprob: -13.881038665771484
    10. ')])' → logprob: -14.506038665771484

Token 132: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00317783304490149
    2. ' ' → logprob: -5.753177642822266
    3. ')' → logprob: -16.503177642822266
    4. '0' → logprob: -18.128177642822266
    5. '2' → logprob: -18.503177642822266
    6. '```' → logprob: -19.378177642822266
    7. ' )' → logprob: -20.003177642822266
    8. '１' → logprob: -20.378177642822266
    9. '۱' → logprob: -21.128177642822266
    10. '`' → logprob: -21.190677642822266

Token 133: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.688212614681106e-05
    2. ' ' → logprob: -11.000017166137695
    3. '0' → logprob: -16.125017166137695
    4. ')' → logprob: -17.375017166137695
    5. '```' → logprob: -18.125017166137695
    6. '   ' → logprob: -19.875017166137695
    7. '2' → logprob: -20.375017166137695
    8. '１' → logprob: -20.750017166137695
    9. '

' → logprob: -21.250017166137695
    10. '`' → logprob: -21.250017166137695

Token 134: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00021736434428021312
    2. ')' → logprob: -8.62521743774414
    3. ']' → logprob: -10.37521743774414
    4. ' )' → logprob: -12.37521743774414
    5. ')])' → logprob: -14.25021743774414
    6. ')]
' → logprob: -14.37521743774414
    7. '')]' → logprob: -15.62521743774414
    8. '])' → logprob: -15.75021743774414
    9. ' ]' → logprob: -16.00021743774414
    10. ')],' → logprob: -16.00021743774414

Token 135: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2279166281223297
    2. '    
' → logprob: -3.227916717529297
    3. ' 
' → logprob: -3.352916717529297
    4. ' for' → logprob: -3.352916717529297
    5. '
' → logprob: -3.477916717529297
    6. '\n' → logprob: -3.727916717529297
    7. '  
' → logprob: -4.227916717529297
    8. ' ' → logprob: -4.352916717529297
    9. 'for' → logprob: -5.352916717529297
    10. '	for' → logprob: -6.477916717529297

Token 136: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4779961407184601
    2. 'for' (adapté à ' for') → logprob: -0.9779961109161377
    3. '   ' → logprob: -5.602996349334717
    4. '	for' → logprob: -9.102995872497559
    5. ' 
' → logprob: -9.852995872497559
    6. '    
' → logprob: -10.102995872497559
    7. ' ' → logprob: -12.102995872497559
    8. '
' → logprob: -12.227995872497559
    9. '  
' → logprob: -12.352995872497559
    10. '<|end|>' → logprob: -13.227995872497559

Token 137: ' A' (ID: 355)
  Prédit: ' u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.0489867739379406
    2. 'u' → logprob: -3.0489866733551025
    3. '(u' → logprob: -8.048986434936523
    4. ' (' → logprob: -10.048986434936523
    5. '	u' → logprob: -10.798986434936523
    6. '```' → logprob: -11.673986434936523
    7. 'a' → logprob: -13.423986434936523
    8. ' a' → logprob: -13.423986434936523
    9. '   ' → logprob: -13.798986434936523
    10. ' ' → logprob: -14.173986434936523

Token 138: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.7888184528565034e-05
    2. ' ,' → logprob: -10.1250581741333
    3. ',B' → logprob: -11.1250581741333
    4. 'a' → logprob: -14.6250581741333
    5. 'B' → logprob: -14.8750581741333
    6. ',v' → logprob: -14.8750581741333
    7. '_,' → logprob: -15.0000581741333
    8. ',b' → logprob: -15.5000581741333
    9. ',A' → logprob: -15.5000581741333
    10. '1' → logprob: -16.000057220458984

Token 139: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.2519315779209137
    2. ' B' → logprob: -1.5019315481185913
    3. ' ' → logprob: -13.501931190490723
    4. 'b' → logprob: -14.626931190490723
    5. '<|end|>' → logprob: -14.626931190490723
    6. '_B' → logprob: -16.75193214416504
    7. ' b' → logprob: -17.37693214416504
    8. '	B' → logprob: -17.50193214416504
    9. '  ' → logprob: -17.75193214416504
    10. '>B' → logprob: -17.87693214416504

Token 140: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02351950667798519
    2. 'in' → logprob: -3.898519515991211
    3. ',' → logprob: -5.898519515991211
    4. '<|end|>' → logprob: -8.898519515991211
    5. ' ' → logprob: -10.398519515991211
    6. ' ,' → logprob: -10.773519515991211
    7. ')' → logprob: -11.023519515991211
    8. ' i' → logprob: -12.398519515991211
    9. ':' → logprob: -12.773519515991211
    10. ',in' → logprob: -13.023519515991211

Token 141: ' edges' (ID: 22569)
  Prédit: ' edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.04859782010316849
    2. 'edges' → logprob: -3.048597812652588
    3. '(edges' → logprob: -12.298598289489746
    4. '_edges' → logprob: -12.423598289489746
    5. '.edges' → logprob: -13.923598289489746
    6. ' edge' → logprob: -15.048598289489746
    7. 'Edges' → logprob: -15.173598289489746
    8. 'edge' → logprob: -15.548598289489746
    9. ' ' → logprob: -16.79859733581543
    10. '   ' → logprob: -17.54859733581543

Token 142: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0009461151785217226
    2. ':
' → logprob: -7.000946044921875
    3. '):' → logprob: -10.500946044921875
    4. ' :' → logprob: -12.375946044921875
    5. '):
' → logprob: -14.000946044921875
    6. ',' → logprob: -14.375946044921875
    7. ':**' → logprob: -14.875946044921875
    8. ')' → logprob: -15.125946044921875
    9. ':
' → logprob: -15.750946044921875
    10. '   ' → logprob: -15.875946044921875

Token 143: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005206244066357613
    2. '        
' → logprob: -6.505206108093262
    3. 'E' → logprob: -7.005206108093262
    4. '   ' → logprob: -7.005206108093262
    5. '    
' → logprob: -7.005206108093262
    6. ' E' → logprob: -8.380206108093262
    7. '    ' → logprob: -8.505206108093262
    8. '<|end|>' → logprob: -9.130206108093262
    9. ' 
' → logprob: -9.380206108093262
    10. '
' → logprob: -10.005206108093262

Token 144: ' E' (ID: 457)
  Prédit: ' E'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' E' → logprob: -0.2970036268234253
    2. 'E' (adapté à ' E') → logprob: -1.6720036268234253
    3. '       ' → logprob: -3.172003746032715
    4. '
' → logprob: -4.047003746032715
    5. ' 
' → logprob: -5.297003746032715
    6. '   ' → logprob: -5.797003746032715
    7. '        
' → logprob: -7.297003746032715
    8. '    
' → logprob: -7.672003746032715
    9. '    ' → logprob: -9.172003746032715
    10. ' ' → logprob: -9.672003746032715

Token 145: '[A' (ID: 58391)
  Prédit: '[A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[A' → logprob: -1.2471589798224159e-05
    2. '[' → logprob: -11.375012397766113
    3. '[B' → logprob: -14.500012397766113
    4. '[E' → logprob: -15.000012397766113
    5. ' [' → logprob: -16.62501335144043
    6. '   ' → logprob: -18.25001335144043
    7. 'A' → logprob: -18.62501335144043
    8. '[
' → logprob: -18.75001335144043
    9. '```' → logprob: -18.87501335144043
    10. '[a' → logprob: -19.12501335144043

Token 146: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.0016926733078435063
    2. ']' → logprob: -6.626692771911621
    3. '.' → logprob: -8.876692771911621
    4. '.append' → logprob: -9.001692771911621
    5. ' ].' → logprob: -9.251692771911621
    6. '   ' → logprob: -12.501692771911621
    7. ').' → logprob: -12.626692771911621
    8. '[' → logprob: -15.501692771911621
    9. ' ]' → logprob: -16.001691818237305
    10. ')' → logprob: -16.251691818237305

Token 147: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -7.896309739408025e-07
    2. ' append' → logprob: -14.250000953674316
    3. '.append' → logprob: -16.0
    4. 'appen' → logprob: -18.375
    5. '	append' → logprob: -21.125
    6. '_append' → logprob: -21.375
    7. 'Append' → logprob: -21.625
    8. 'app' → logprob: -21.75
    9. 'add' → logprob: -22.125
    10. ' ' → logprob: -23.125

Token 148: '(B' (ID: 8409)
  Prédit: '(B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(B' → logprob: -0.0012202250072732568
    2. '(' → logprob: -6.751220226287842
    3. 'B' → logprob: -10.001219749450684
    4. ' B' → logprob: -12.501219749450684
    5. '(
' → logprob: -14.376219749450684
    6. ' (' → logprob: -14.876219749450684
    7. '	B' → logprob: -18.251220703125
    8. '('' → logprob: -18.376220703125
    9. '(

' → logprob: -19.126220703125
    10. ')' → logprob: -19.251220703125

Token 149: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00013250234769657254
    2. ')
' → logprob: -9.00013256072998
    3. ' )' → logprob: -11.62513256072998
    4. '       ' → logprob: -16.875131607055664
    5. ')

' → logprob: -17.625131607055664
    6. ' )
' → logprob: -17.750131607055664
    7. '   ' → logprob: -17.750131607055664
    8. ')
' → logprob: -18.250131607055664
    9. '),' → logprob: -18.500131607055664
    10. '<|end|>' → logprob: -19.000131607055664

Token 150: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010749688372015953
    2. '<|end|>' → logprob: -8.00107479095459
    3. '   ' → logprob: -8.25107479095459
    4. '
' → logprob: -8.37607479095459
    5. '        
' → logprob: -8.87607479095459
    6. '  
' → logprob: -11.00107479095459
    7. '    
' → logprob: -11.12607479095459
    8. ' E' → logprob: -11.50107479095459
    9. 'E' → logprob: -11.62607479095459
    10. ')' → logprob: -11.75107479095459

Token 151: ' E' (ID: 457)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' (adapté à ' E') → logprob: -0.17239326238632202
    2. ' E' → logprob: -1.9223933219909668
    3. '       ' → logprob: -4.422393321990967
    4. '   ' → logprob: -9.922392845153809
    5. '        ' → logprob: -11.672392845153809
    6. '        
' → logprob: -11.672392845153809
    7. ' ' → logprob: -12.172392845153809
    8. '    ' → logprob: -12.297392845153809
    9. ' 
' → logprob: -12.547392845153809
    10. '	E' → logprob: -13.547392845153809

Token 152: '[B' (ID: 95385)
  Prédit: '[B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[B' → logprob: -0.00020330198458395898
    2. '[' → logprob: -8.625203132629395
    3. '[A' → logprob: -10.875203132629395
    4. ' [' → logprob: -13.500203132629395
    5. ' ' → logprob: -13.750203132629395
    6. '```' → logprob: -14.250203132629395
    7. '[E' → logprob: -14.500203132629395
    8. '   ' → logprob: -14.625203132629395
    9. '[b' → logprob: -16.12520408630371
    10. '[C' → logprob: -16.37520408630371

Token 153: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.0004946522531099617
    2. ').' → logprob: -8.000494956970215
    3. ']' → logprob: -9.250494956970215
    4. '.' → logprob: -10.500494956970215
    5. ' ].' → logprob: -10.500494956970215
    6. '.append' → logprob: -12.375494956970215
    7. '   ' → logprob: -13.000494956970215
    8. ')' → logprob: -14.500494956970215
    9. '}.' → logprob: -15.000494956970215
    10. ' .' → logprob: -15.500494956970215

Token 154: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -1.5048530030981055e-06
    2. 'appen' → logprob: -14.000001907348633
    3. '.append' → logprob: -14.625001907348633
    4. ' append' → logprob: -15.375001907348633
    5. '	append' → logprob: -17.625001907348633
    6. 'Append' → logprob: -18.500001907348633
    7. 'app' → logprob: -19.000001907348633
    8. 'add' → logprob: -20.125001907348633
    9. 'appe' → logprob: -20.500001907348633
    10. 'prepend' → logprob: -20.625001907348633

Token 155: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.002479700604453683
    2. '(' → logprob: -6.002479553222656
    3. '(
' → logprob: -12.627479553222656
    4. ' (' → logprob: -14.627479553222656
    5. 'A' → logprob: -15.627479553222656
    6. '(B' → logprob: -16.752479553222656
    7. ')' → logprob: -17.627479553222656
    8. '(a' → logprob: -17.752479553222656
    9. '((' → logprob: -18.002479553222656
    10. '(

' → logprob: -18.127479553222656

Token 156: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006717267446219921
    2. ')
' → logprob: -5.006717205047607
    3. ' )' → logprob: -14.006717681884766
    4. ')return' → logprob: -14.881717681884766
    5. ')
' → logprob: -15.006717681884766
    6. ')

' → logprob: -15.381717681884766
    7. '   ' → logprob: -16.756717681884766
    8. ' )
' → logprob: -17.506717681884766
    9. '
' → logprob: -17.881717681884766
    10. '<|end|>' → logprob: -17.881717681884766

Token 157: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14443781971931458
    2. '
' → logprob: -2.019437789916992
    3. 'return' → logprob: -7.269437789916992
    4. '    
' → logprob: -7.644437789916992
    5. ' return' → logprob: -8.144437789916992
    6. '<|end|>' → logprob: -8.519437789916992
    7. '	return' → logprob: -9.894437789916992
    8. '\n' → logprob: -11.019437789916992
    9. ':return' → logprob: -12.269437789916992
    10. ' 
' → logprob: -12.394437789916992

Token 158: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6033596992492676
    2. 'return' (adapté à ' return') → logprob: -0.8533596992492676
    3. ' return' → logprob: -3.7283596992492676
    4. '
' → logprob: -6.478359699249268
    5. '    
' → logprob: -6.853359699249268
    6. '	return' → logprob: -9.10335922241211
    7. ':return' → logprob: -9.22835922241211
    8. '  
' → logprob: -9.47835922241211
    9. ' ' → logprob: -10.10335922241211
    10. ' 
' → logprob: -10.22835922241211

Token 159: ' E' (ID: 457)
  Prédit: ' E'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' E' → logprob: -0.02331244759261608
    2. 'E' → logprob: -3.7733123302459717
    3. ' ' → logprob: -9.64831256866455
    4. ' ' → logprob: -13.14831256866455
    5. '	E' → logprob: -15.52331256866455
    6. '(E' → logprob: -16.523311614990234
    7. ' ' → logprob: -16.898311614990234
    8. 'space' → logprob: -17.773311614990234
    9. ' ‌' → logprob: -17.773311614990234
    10. '_E' → logprob: -18.148311614990234

Token 160: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4469342827796936
    2. '<|end|>' → logprob: -1.0719342231750488
    3. '\n' → logprob: -4.821934223175049
    4. '\' → logprob: -5.946934223175049
    5. '```' → logprob: -6.196934223175049
    6. '#' → logprob: -6.821934223175049
    7. 'n' → logprob: -6.821934223175049
    8. '<|end|>' → logprob: -7.321934223175049
    9. ')' → logprob: -7.696934223175049
    10. '[' → logprob: -7.946934223175049

Token 161: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.21402129530906677
    2. 'def' → logprob: -1.7140213251113892
    3. '#' → logprob: -5.0890212059021
    4. '\n' → logprob: -6.0890212059021
    5. 'n' → logprob: -7.3390212059021
    6. '\' → logprob: -7.4640212059021
    7. '<|end|>' → logprob: -7.5890212059021
    8. '' → logprob: -7.7140212059021
    9. '```' → logprob: -7.7140212059021
    10. '

' → logprob: -8.089021682739258

Token 162: ' find' (ID: 1646)
  Prédit: ' find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' find' → logprob: -1.0976811647415161
    2. ' bfs' → logprob: -1.2226811647415161
    3. ' dfs' → logprob: -1.5976811647415161
    4. ' shortest' → logprob: -2.7226810455322266
    5. ' count' → logprob: -3.3476810455322266
    6. ' build' → logprob: -3.7226810455322266
    7. ' compute' → logprob: -4.847681045532227
    8. ' calculate' → logprob: -4.972681045532227
    9. ' ' → logprob: -5.222681045532227
    10. ' top' → logprob: -5.597681045532227

Token 163: '_max' (ID: 13731)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6152213215827942
    2. '_path' → logprob: -1.8652212619781494
    3. '_short' → logprob: -2.2402212619781494
    4. '_connected' → logprob: -2.7402212619781494
    5. '_max' → logprob: -3.2402212619781494
    6. '_cycle' → logprob: -3.7402212619781494
    7. '_components' → logprob: -3.8652212619781494
    8. '_br' → logprob: -4.6152215003967285
    9. '_paths' → logprob: -5.4902215003967285
    10. '_min' → logprob: -5.7402215003967285

Token 164: '_degree' (ID: 128654)
  Prédit: 'imum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imum' → logprob: -1.222214937210083
    2. '_degree' → logprob: -1.472214937210083
    3. '_ind' → logprob: -1.722214937210083
    4. '_cl' → logprob: -1.847214937210083
    5. '_component' → logprob: -3.472214937210083
    6. '_path' → logprob: -3.847214937210083
    7. '_connected' → logprob: -3.972214937210083
    8. 'imal' → logprob: -4.222214698791504
    9. '_in' → logprob: -4.722214698791504
    10. '_matching' → logprob: -4.722214698791504

Token 165: '_node' (ID: 11390)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07790740579366684
    2. '_node' → logprob: -3.9529073238372803
    3. '(n' → logprob: -3.9529073238372803
    4. '(nodes' → logprob: -4.827907562255859
    5. '_nodes' → logprob: -4.827907562255859
    6. '(node' → logprob: -4.952907562255859
    7. '_vertex' → logprob: -5.077907562255859
    8. '(graph' → logprob: -6.702907562255859
    9. '(_' → logprob: -7.077907562255859
    10. '_' → logprob: -7.327907562255859

Token 166: '(E' (ID: 20882)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10068085044622421
    2. '(n' → logprob: -2.3506808280944824
    3. ' (' → logprob: -7.850680828094482
    4. '():' → logprob: -9.60068130493164
    5. '(node' → logprob: -12.72568130493164
    6. '(num' → logprob: -12.97568130493164
    7. '(
' → logprob: -12.97568130493164
    8. ' ():' → logprob: -13.35068130493164
    9. '(N' → logprob: -13.47568130493164
    10. '(s' → logprob: -13.60068130493164

Token 167: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.012960448861122131
    2. ',' → logprob: -4.762960433959961
    3. ' ):' → logprob: -6.012960433959961
    4. ')' → logprob: -6.512960433959961
    5. '(n' → logprob: -8.387960433959961
    6. '):
' → logprob: -9.387960433959961
    7. ',n' → logprob: -9.637960433959961
    8. '(' → logprob: -11.887960433959961
    9. ' )' → logprob: -12.012960433959961
    10. ' ,' → logprob: -12.262960433959961

Token 168: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013962985947728157
    2. ':' → logprob: -4.638963222503662
    3. '    
' → logprob: -6.638963222503662
    4. ':
' → logprob: -7.638963222503662
    5. '):
' → logprob: -7.638963222503662
    6. 'n' → logprob: -8.013962745666504
    7. '(n' → logprob: -8.263962745666504
    8. '):' → logprob: -8.388962745666504
    9. '<|end|>' → logprob: -8.888962745666504
    10. ' 
' → logprob: -9.138962745666504

Token 169: ' """
' (ID: 7037)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.9103944301605225
    2. 'max' → logprob: -1.5353944301605225
    3. ' 
' → logprob: -1.9103944301605225
    4. '   ' → logprob: -2.0353944301605225
    5. '
' → logprob: -2.5353944301605225
    6. '    ' → logprob: -4.660394668579102
    7. '    
' → logprob: -4.910394668579102
    8. 'n' → logprob: -5.785394668579102
    9. '     
' → logprob: -6.410394668579102
    10. '   
' → logprob: -7.285394668579102

Token 170: '   ' (ID: 271)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.6831978559494019
    2. '   ' → logprob: -0.8081978559494019
    3. '    ' → logprob: -3.4331979751586914
    4. 'max' → logprob: -4.308197975158691
    5. ' n' → logprob: -6.933197975158691
    6. '    
' → logprob: -7.683197975158691
    7. 'n' → logprob: -7.683197975158691
    8. ' maximum' → logprob: -8.058197975158691
    9. ' """' → logprob: -8.183197975158691
    10. ' """
' → logprob: -8.558197975158691

Token 171: ' Trou' (ID: 58947)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.012516246177256107
    2. 'max' → logprob: -4.887516021728516
    3. ' n' → logprob: -5.512516021728516
    4. '   ' → logprob: -7.387516021728516
    5. 'n' → logprob: -8.887516021728516
    6. ' best' → logprob: -9.387516021728516
    7. '    ' → logprob: -12.137516021728516
    8. ' """
' → logprob: -13.012516021728516
    9. ' 
' → logprob: -13.387516021728516
    10. ' maximum' → logprob: -13.387516021728516

Token 172: 've' (ID: 737)
  Prédit: 've'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 've' → logprob: -3.91732100979425e-05
    2. 'v' → logprob: -10.625039100646973
    3. '   ' → logprob: -11.375039100646973
    4. 'ver' → logprob: -14.000039100646973
    5. 'vé' → logprob: -14.125039100646973
    6. '
' → logprob: -15.000039100646973
    7. 'vez' → logprob: -15.000039100646973
    8. '    ' → logprob: -15.375039100646973
    9. 'e' → logprob: -15.625039100646973
    10. '  ' → logprob: -15.750039100646973

Token 173: ' le' (ID: 505)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.2464135885238647
    2. ' le' → logprob: -1.2464135885238647
    3. ' ' → logprob: -1.4964135885238647
    4. '<|end|>' → logprob: -2.8714137077331543
    5. '   ' → logprob: -3.1214137077331543
    6. ' la' → logprob: -3.4964137077331543
    7. ' l' → logprob: -3.7464137077331543
    8. '  ' → logprob: -4.121413707733154
    9. ' the' → logprob: -4.746413707733154
    10. ' ' → logprob: -5.246413707733154

Token 174: ' n' (ID: 297)
  Prédit: ' sommet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sommet' → logprob: -0.02360636368393898
    2. ' node' → logprob: -4.648606300354004
    3. 'som' → logprob: -4.898606300354004
    4. ' noe' → logprob: -5.898606300354004
    5. ' som' → logprob: -7.523606300354004
    6. 'indice' → logprob: -7.648606300354004
    7. 'node' → logprob: -7.773606300354004
    8. ' n' → logprob: -8.023606300354004
    9. 's' → logprob: -8.148606300354004
    10. ' ' → logprob: -8.398606300354004

Token 175: 'œ' (ID: 15335)
  Prédit: 'œ'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'œ' → logprob: -0.0064780451357364655
    2. 'o' → logprob: -5.5064778327941895
    3. 'oe' → logprob: -6.1314778327941895
    4. '\xc2' → logprob: -9.256478309631348
    5. '\' → logprob: -9.506478309631348
    6. 'e' → logprob: -11.381478309631348
    7. '#' → logprob: -11.881478309631348
    8. '```' → logprob: -12.256478309631348
    9. '-' → logprob: -12.506478309631348
    10. '%' → logprob: -12.506478309631348

Token 176: 'ud' (ID: 527)
  Prédit: 'œ'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'œ' → logprob: -0.00253023742698133
    2. 'ud' → logprob: -7.127530097961426
    3. 'e' → logprob: -7.502530097961426
    4. '\xc2' → logprob: -7.752530097961426
    5. 'oe' → logprob: -8.627530097961426
    6. 'ø' → logprob: -8.877530097961426
    7. 'o' → logprob: -9.127530097961426
    8. '\' → logprob: -9.502530097961426
    9. '_' → logprob: -11.002530097961426
    10. '+' → logprob: -11.002530097961426

Token 177: ' ayant' (ID: 45436)
  Prédit: ' ayant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ayant' → logprob: -0.2988612949848175
    2. ' avec' → logprob: -1.7988612651824951
    3. ' ' → logprob: -3.298861265182495
    4. ' with' → logprob: -3.423861265182495
    5. '<|end|>' → logprob: -4.048861503601074
    6. ' de' → logprob: -6.423861503601074
    7. ' à' → logprob: -6.923861503601074
    8. ' qui' → logprob: -6.923861503601074
    9. 'ayant' → logprob: -7.298861503601074
    10. ' having' → logprob: -7.923861503601074

Token 178: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.3611116111278534
    2. '<|end|>' → logprob: -1.6111116409301758
    3. ' la' → logprob: -2.361111640930176
    4. ' l' → logprob: -5.736111640930176
    5. 'le' → logprob: -6.236111640930176
    6. ' un' → logprob: -6.861111640930176
    7. ' the' → logprob: -7.236111640930176
    8. ' ' → logprob: -7.986111640930176
    9. 's' → logprob: -8.111111640930176
    10. '_le' → logprob: -8.611111640930176

Token 179: ' degré' (ID: 169072)
  Prédit: ' degré'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' degré' → logprob: -1.0153989791870117
    2. 'plus' → logprob: -1.3903989791870117
    3. ' plus' → logprob: -1.7653989791870117
    4. 'de' → logprob: -1.7653989791870117
    5. ' maximum' → logprob: -4.015398979187012
    6. 'maximum' → logprob: -4.515398979187012
    7. 'degree' → logprob: -5.140398979187012
    8. 'max' → logprob: -5.390398979187012
    9. 'd' → logprob: -5.390398979187012
    10. 'deg' → logprob: -7.140398979187012

Token 180: ' maximal' (ID: 65414)
  Prédit: ' maximal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' maximal' → logprob: -0.29355350136756897
    2. ' maximum' → logprob: -1.4185534715652466
    3. ' maximale' → logprob: -5.668553352355957
    4. 'maximum' → logprob: -5.918553352355957
    5. ' le' → logprob: -6.043553352355957
    6. '<|end|>' → logprob: -6.543553352355957
    7. ' max' → logprob: -6.668553352355957
    8. 'max' → logprob: -7.418553352355957
    9. ' highest' → logprob: -9.043553352355957
    10. ' maksimal' → logprob: -9.168553352355957

Token 181: ' dans' (ID: 2671)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.5120511054992676
    2. ' ' → logprob: -1.8870511054992676
    3. ' ,' → logprob: -1.8870511054992676
    4. ' du' → logprob: -2.1370511054992676
    5. ' dans' → logprob: -2.2620511054992676
    6. '.' → logprob: -2.3870511054992676
    7. ' et' → logprob: -2.7620511054992676
    8. ' (' → logprob: -3.3870511054992676
    9. ' de' → logprob: -3.7620511054992676
    10. '<|end|>' → logprob: -4.262051105499268

Token 182: ' la' (ID: 557)
  Prédit: ' E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' E' → logprob: -0.07980826497077942
    2. ' la' → logprob: -3.079808235168457
    3. 'E' → logprob: -3.579808235168457
    4. ' le' → logprob: -6.079808235168457
    5. ' l' → logprob: -8.579808235168457
    6. ' ' → logprob: -8.704808235168457
    7. ' the' → logprob: -9.579808235168457
    8. ' ' → logprob: -10.079808235168457
    9. 'the' → logprob: -11.329808235168457
    10. ' les' → logprob: -11.454808235168457

Token 183: ' liste' (ID: 31719)
  Prédit: ' graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' graph' → logprob: -1.0343009233474731
    2. ' grap' → logprob: -1.2843009233474731
    3. 'E' → logprob: -1.7843009233474731
    4. ' E' → logprob: -2.0343008041381836
    5. 'graph' → logprob: -3.0343008041381836
    6. 'gr' → logprob: -4.409300804138184
    7. ' range' → logprob: -5.034300804138184
    8. 'range' → logprob: -7.034300804138184
    9. '   ' → logprob: -7.534300804138184
    10. '
' → logprob: -9.159300804138184

Token 184: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.0359230563044548
    2. 'd' → logprob: -3.5359230041503906
    3. '   ' → logprob: -5.660923004150391
    4. ' ' → logprob: -7.160923004150391
    5. '_d' → logprob: -7.160923004150391
    6. '<|end|>' → logprob: -7.785923004150391
    7. '_' → logprob: -8.28592300415039
    8. '    ' → logprob: -8.78592300415039
    9. '  ' → logprob: -9.28592300415039
    10. ' de' → logprob: -9.66092300415039

Token 185: ''ad' (ID: 36162)
  Prédit: ''ad'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''ad' → logprob: -0.2914362847805023
    2. 'adj' → logprob: -1.4164363145828247
    3. '_ad' → logprob: -4.791436195373535
    4. 'ad' → logprob: -6.541436195373535
    5. '_adj' → logprob: -8.041436195373535
    6. '’ad' → logprob: -9.416436195373535
    7. ' adjacency' → logprob: -10.541436195373535
    8. '-ad' → logprob: -11.291436195373535
    9. 'adic' → logprob: -11.416436195373535
    10. ''' → logprob: -11.666436195373535

Token 186: 'jac' (ID: 77250)
  Prédit: 'jac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jac' → logprob: -0.0066460915841162205
    2. 'j' → logprob: -5.881646156311035
    3. 'acency' → logprob: -6.131646156311035
    4. 'ac' → logprob: -6.506646156311035
    5. 'Jac' → logprob: -10.631646156311035
    6. 'jec' → logprob: -11.381646156311035
    7. '
' → logprob: -11.381646156311035
    8. ' jac' → logprob: -11.381646156311035
    9. '```' → logprob: -11.506646156311035
    10. 'jc' → logprob: -11.631646156311035

Token 187: 'ence' (ID: 1082)
  Prédit: 'ence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ence' → logprob: -0.002703589154407382
    2. 'e' → logprob: -6.877703666687012
    3. 'acency' → logprob: -8.002703666687012
    4. 'ency' → logprob: -8.377703666687012
    5. 'E' → logprob: -8.752703666687012
    6. 'ent' → logprob: -9.127703666687012
    7. 'ente' → logprob: -9.127703666687012
    8. 'cence' → logprob: -9.252703666687012
    9. 'es' → logprob: -9.502703666687012
    10. '```' → logprob: -9.502703666687012

Token 188: '.

' (ID: 364)
  Prédit: '(E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(E' → logprob: -0.6699676513671875
    2. '   ' → logprob: -0.7949676513671875
    3. '.' → logprob: -3.5449676513671875
    4. ',' → logprob: -5.7949676513671875
    5. 'def' → logprob: -6.7949676513671875
    6. ' E' → logprob: -6.9199676513671875
    7. ' (' → logprob: -6.9199676513671875
    8. '(' → logprob: -7.5449676513671875
    9. '.
' → logprob: -8.544967651367188
    10. ' def' → logprob: -8.919967651367188

Token 189: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0020155981183052063
    2. 'n' → logprob: -7.002015590667725
    3. 'def' → logprob: -8.252016067504883
    4. '    
' → logprob: -8.377016067504883
    5. 'max' → logprob: -8.627016067504883
    6. ' max' → logprob: -8.752016067504883
    7. '```' → logprob: -9.252016067504883
    8. ' n' → logprob: -9.627016067504883
    9. '   
' → logprob: -10.377016067504883
    10. '
' → logprob: -10.877016067504883

Token 190: ' Args' (ID: 39185)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5915482044219971
    2. ' max' → logprob: -0.9665482044219971
    3. ' n' → logprob: -3.591548204421997
    4. 'max' → logprob: -3.841548204421997
    5. 'n' → logprob: -4.091547966003418
    6. '    
' → logprob: -9.091547966003418
    7. '```' → logprob: -9.466547966003418
    8. 'def' → logprob: -9.966547966003418
    9. ' maximum' → logprob: -10.216547966003418
    10. '
' → logprob: -10.216547966003418

Token 191: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.33623090386390686
    2. '(E' → logprob: -1.7112308740615845
    3. ' (' → logprob: -2.961230993270874
    4. ':' → logprob: -3.086230993270874
    5. '```' → logprob: -6.211230754852295
    6. ' :' → logprob: -6.211230754852295
    7. 'def' → logprob: -7.586230754852295
    8. ')' → logprob: -7.836230754852295
    9. '(' → logprob: -7.961230754852295
    10. '    ' → logprob: -7.961230754852295

Token 192: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10883539170026779
    2. ' E' → logprob: -2.358835458755493
    3. 'E' → logprob: -4.983835220336914
    4. '       ' → logprob: -6.483835220336914
    5. '    
' → logprob: -9.483835220336914
    6. '    ' → logprob: -9.983835220336914
    7. ' ' → logprob: -10.733835220336914
    8. '  ' → logprob: -11.108835220336914
    9. '
' → logprob: -11.358835220336914
    10. '```' → logprob: -11.358835220336914

Token 193: ' E' (ID: 457)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' (adapté à ' E') → logprob: -0.08029112219810486
    2. ' E' → logprob: -2.5802910327911377
    3. 'List' → logprob: -6.955291271209717
    4. '   ' → logprob: -7.955291271209717
    5. ' List' → logprob: -9.455290794372559
    6. 'list' → logprob: -11.830290794372559
    7. ' list' → logprob: -12.830290794372559
    8. '    ' → logprob: -13.830290794372559
    9. '```' → logprob: -13.955290794372559
    10. '	E' → logprob: -14.455290794372559

Token 194: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4019134044647217
    2. '):' → logprob: -1.4019134044647217
    3. ')' → logprob: -2.9019134044647217
    4. ' (' → logprob: -4.026913642883301
    5. ' :' → logprob: -4.901913642883301
    6. '<|end|>' → logprob: -6.901913642883301
    7. '[int' → logprob: -7.276913642883301
    8. '):
' → logprob: -7.526913642883301
    9. '(List' → logprob: -8.0269136428833
    10. '[' → logprob: -8.0269136428833

Token 195: 'List' (ID: 950)
  Prédit: 'List'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.0009570781840011477
    2. ')' → logprob: -7.500957012176514
    3. 'list' → logprob: -7.875957012176514
    4. ' List' → logprob: -11.250957489013672
    5. '   ' → logprob: -12.250957489013672
    6. '):' → logprob: -12.625957489013672
    7. '):
' → logprob: -13.500957489013672
    8. '[List' → logprob: -14.250957489013672
    9. 'int' → logprob: -14.875957489013672
    10. ' )' → logprob: -15.500957489013672

Token 196: '[List' (ID: 113982)
  Prédit: '[List'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[List' → logprob: -0.5773045420646667
    2. '[int' → logprob: -0.8273045420646667
    3. ')' → logprob: -7.202304363250732
    4. '[' → logprob: -8.32730484008789
    5. '[list' → logprob: -8.82730484008789
    6. '):' → logprob: -9.20230484008789
    7. '```' → logprob: -10.45230484008789
    8. '<List' → logprob: -11.07730484008789
    9. '   ' → logprob: -11.32730484008789
    10. '[np' → logprob: -11.45230484008789

Token 197: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -6.630610641877865e-06
    2. 'int' → logprob: -12.000006675720215
    3. '<int' → logprob: -14.750006675720215
    4. ']int' → logprob: -16.8750057220459
    5. '[in' → logprob: -19.6250057220459
    6. '```' → logprob: -19.7500057220459
    7. '[i' → logprob: -19.8750057220459
    8. '[
' → logprob: -19.8750057220459
    9. ' int' → logprob: -19.8750057220459
    10. '[Int' → logprob: -19.8750057220459

Token 198: ']]' (ID: 8928)
  Prédit: ']]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']]' → logprob: -0.12791787087917328
    2. ']])' → logprob: -2.252917766571045
    3. '[int' → logprob: -4.627917766571045
    4. ']):' → logprob: -5.877917766571045
    5. '])' → logprob: -6.127917766571045
    6. ')]' → logprob: -9.627918243408203
    7. ']' → logprob: -9.877918243408203
    8. '```' → logprob: -10.502918243408203
    9. ']])
' → logprob: -10.877918243408203
    10. '[' → logprob: -11.377918243408203

Token 199: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.22405286133289337
    2. ')' → logprob: -1.724052906036377
    3. ']):' → logprob: -3.974052906036377
    4. '   ' → logprob: -5.849052906036377
    5. '])' → logprob: -7.849052906036377
    6. '):
' → logprob: -9.224052429199219
    7. ' ' → logprob: -9.599052429199219
    8. '[int' → logprob: -10.099052429199219
    9. '>):' → logprob: -10.974052429199219
    10. ' ):' → logprob: -10.974052429199219

Token 200: ' Liste' (ID: 61030)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16169363260269165
    2. 'La' → logprob: -2.411693572998047
    3. 'List' → logprob: -3.036693572998047
    4. ' La' → logprob: -5.161693572998047
    5. ' la' → logprob: -6.161693572998047
    6. 'Liste' → logprob: -6.536693572998047
    7. ' List' → logprob: -7.536693572998047
    8. 'def' → logprob: -8.036693572998047
    9. '       ' → logprob: -8.161693572998047
    10. ')' → logprob: -8.161693572998047

Token 201: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.8392385244369507
    2. '[int' → logprob: -0.9642385244369507
    3. 'd' → logprob: -1.7142385244369507
    4. '[List' → logprob: -5.46423864364624
    5. '[' → logprob: -7.33923864364624
    6. ' des' → logprob: -7.46423864364624
    7. '<|end|>' → logprob: -8.089238166809082
    8. '   ' → logprob: -8.464238166809082
    9. 'des' → logprob: -8.964238166809082
    10. '<int' → logprob: -9.464238166809082

Token 202: ''ad' (ID: 36162)
  Prédit: '_ad'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ad' → logprob: -0.6153925657272339
    2. ''ad' → logprob: -0.8653925657272339
    3. '_adj' → logprob: -3.8653926849365234
    4. 'adj' → logprob: -4.740392684936523
    5. 'd' → logprob: -4.990392684936523
    6. '’ad' → logprob: -7.490392684936523
    7. 'ad' → logprob: -7.740392684936523
    8. '_d' → logprob: -7.865392684936523
    9. ' d' → logprob: -8.615392684936523
    10. 'E' → logprob: -9.365392684936523

Token 203: 'jac' (ID: 77250)
  Prédit: 'jac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jac' → logprob: -0.0011876109056174755
    2. 'j' → logprob: -6.751187801361084
    3. 'jc' → logprob: -12.251187324523926
    4. '_j' → logprob: -13.001187324523926
    5. '
' → logprob: -13.251187324523926
    6. 'ja' → logprob: -13.626187324523926
    7. 'Jac' → logprob: -14.001187324523926
    8. 'acency' → logprob: -14.001187324523926
    9. 'adj' → logprob: -14.376187324523926
    10. ' jac' → logprob: -14.376187324523926

Token 204: 'ence' (ID: 1082)
  Prédit: 'ence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ence' → logprob: -0.0008841915987432003
    2. 'e' → logprob: -7.750884056091309
    3. 'es' → logprob: -9.250884056091309
    4. 'en' → logprob: -9.375884056091309
    5. 'ent' → logprob: -9.875884056091309
    6. 'ente' → logprob: -10.625884056091309
    7. 'ce' → logprob: -10.750884056091309
    8. 'ance' → logprob: -10.875884056091309
    9. 'escence' → logprob: -10.875884056091309
    10. ']' → logprob: -11.250884056091309

Token 205: ' du' (ID: 1462)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.08532405644655228
    2. '   ' → logprob: -3.0853240489959717
    3. '):
' → logprob: -3.4603240489959717
    4. ')' → logprob: -5.460324287414551
    5. '):
' → logprob: -8.71032428741455
    6. '[int' → logprob: -9.58532428741455
    7. '[n' → logprob: -10.21032428741455
    8. '[' → logprob: -10.33532428741455
    9. ':' → logprob: -10.58532428741455
    10. '
' → logprob: -11.08532428741455

Token 206: ' grap' (ID: 60955)
  Prédit: ' grap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' grap' → logprob: -0.28898823261260986
    2. 'gr' → logprob: -1.4139882326126099
    3. ' graph' → logprob: -5.16398811340332
    4. 'graph' → logprob: -6.78898811340332
    5. ' gr' → logprob: -7.78898811340332
    6. '```' → logprob: -8.53898811340332
    7. '
' → logprob: -9.53898811340332
    8. ' ' → logprob: -10.28898811340332
    9. '   ' → logprob: -10.28898811340332
    10. ' graphique' → logprob: -10.66398811340332

Token 207: 'he' (ID: 273)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.31580618023872375
    2. 'rap' → logprob: -1.9408061504364014
    3. 'he' → logprob: -2.3158061504364014
    4. 'raph' → logprob: -3.8158061504364014
    5. 'h' → logprob: -5.6908063888549805
    6. 'e' → logprob: -7.0658063888549805
    7. ')' → logprob: -7.8158063888549805
    8. 're' → logprob: -8.06580638885498
    9. 'rape' → logprob: -8.06580638885498
    10. 'che' → logprob: -8.19080638885498

Token 208: '.

' (ID: 364)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.9868674278259277
    2. ')' → logprob: -1.2368674278259277
    3. '):
' → logprob: -1.2368674278259277
    4. '   ' → logprob: -3.1118674278259277
    5. ')
' → logprob: -6.986867427825928
    6. '):

' → logprob: -7.111867427825928
    7. '
' → logprob: -8.736867904663086
    8. '):
' → logprob: -8.861867904663086
    9. '```' → logprob: -10.611867904663086
    10. ')

' → logprob: -11.486867904663086

Token 209: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4088573455810547
    2. ')' → logprob: -1.1588573455810547
    3. '    
' → logprob: -5.033857345581055
    4. ' ' → logprob: -5.158857345581055
    5. '
' → logprob: -5.783857345581055
    6. ' 
' → logprob: -6.283857345581055
    7. '  
' → logprob: -6.783857345581055
    8. ')
' → logprob: -7.283857345581055
    9. 'n' → logprob: -7.408857345581055
    10. '   
' → logprob: -7.658857345581055

Token 210: ' Returns' (ID: 9609)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3221077620983124
    2. 'max' → logprob: -2.0721077919006348
    3. '
' → logprob: -2.3221077919006348
    4. '"""
' → logprob: -3.4471077919006348
    5. '```' → logprob: -5.072107791900635
    6. '    
' → logprob: -5.947107791900635
    7. 'n' → logprob: -6.322107791900635
    8. ' """
' → logprob: -6.322107791900635
    9. ')' → logprob: -6.447107791900635
    10. ' max' → logprob: -6.697107791900635

Token 211: ':
' (ID: 734)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.7448221445083618
    2. '<|end|>' → logprob: -1.7448221445083618
    3. ' ' → logprob: -1.9948221445083618
    4. 'space' → logprob: -2.4948220252990723
    5. ' ' → logprob: -3.1198220252990723
    6. '=' → logprob: -3.4948220252990723
    7. ' :' → logprob: -3.4948220252990723
    8. ',' → logprob: -3.7448220252990723
    9. '0' → logprob: -3.7448220252990723
    10. '```' → logprob: -3.8698220252990723

Token 212: '       ' (ID: 309)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.17282067239284515
    2. ' int' → logprob: -2.047820568084717
    3. '   ' → logprob: -4.172820568084717
    4. ' None' → logprob: -4.922820568084717
    5. 'max' → logprob: -6.547820568084717
    6. 'int' → logprob: -6.547820568084717
    7. ' i' → logprob: -6.672820568084717
    8. ' tuple' → logprob: -7.547820568084717
    9. ' next' → logprob: -7.797820568084717
    10. ' n' → logprob: -7.922820568084717

Token 213: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' (adapté à ' int') → logprob: -0.07891479134559631
    2. ' int' → logprob: -2.5789148807525635
    3. 'max' → logprob: -11.453914642333984
    4. 'Tuple' → logprob: -12.703914642333984
    5. ' max' → logprob: -12.828914642333984
    6. '(int' → logprob: -12.828914642333984
    7. ' tuple' → logprob: -12.953914642333984
    8. ' Tuple' → logprob: -13.078914642333984
    9. 'tuple' → logprob: -13.953914642333984
    10. '[int' → logprob: -15.328914642333984

Token 214: ':' (ID: 25)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11555781960487366
    2. ' )' → logprob: -2.615557909011841
    3. '<|end|>' → logprob: -3.990557909011841
    4. ' ' → logprob: -4.490557670593262
    5. ']' → logprob: -6.490557670593262
    6. ' ]' → logprob: -6.990557670593262
    7. '):' → logprob: -7.115557670593262
    8. '  ' → logprob: -7.490557670593262
    9. ':' → logprob: -7.740557670593262
    10. ' ):' → logprob: -7.990557670593262

Token 215: ' Som' (ID: 12116)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.04511149600148201
    2. 'max' → logprob: -3.9201114177703857
    3. 'Le' → logprob: -4.420111656188965
    4. ' Le' → logprob: -5.295111656188965
    5. ' le' → logprob: -5.420111656188965
    6. ' node' → logprob: -7.545111656188965
    7. '   ' → logprob: -7.795111656188965
    8. ' E' → logprob: -8.295111656188965
    9. 'La' → logprob: -8.420111656188965
    10. ' index' → logprob: -8.920111656188965

Token 216: 'met' (ID: 3001)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.508357048034668
    2. 'ma' → logprob: -1.758357048034668
    3. '   ' → logprob: -2.508357048034668
    4. 'met' → logprob: -3.383357048034668
    5. 'me' → logprob: -3.383357048034668
    6. 'a' → logprob: -3.883357048034668
    7. '       ' → logprob: -4.633357048034668
    8. 'aire' → logprob: -4.758357048034668
    9. 'max' → logprob: -5.633357048034668
    10. 'ent' → logprob: -5.758357048034668

Token 217: ' ayant' (ID: 45436)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5703454613685608
    2. '_max' → logprob: -1.570345401763916
    3. '_with' → logprob: -2.320345401763916
    4. ' ' → logprob: -3.195345401763916
    5. ' with' → logprob: -3.945345401763916
    6. '<|end|>' → logprob: -4.070345401763916
    7. '   ' → logprob: -4.820345401763916
    8. ' max' → logprob: -5.195345401763916
    9. ' ayant' → logprob: -5.195345401763916
    10. '_space' → logprob: -5.320345401763916

Token 218: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.32118529081344604
    2. '_le' → logprob: -2.196185350418091
    3. ' la' → logprob: -2.946185350418091
    4. ' l' → logprob: -3.196185350418091
    5. 'le' → logprob: -3.321185350418091
    6. ' maximal' → logprob: -4.571185111999512
    7. '_max' → logprob: -5.571185111999512
    8. '_' → logprob: -5.821185111999512
    9. '<|end|>' → logprob: -5.946185111999512
    10. ' max' → logprob: -6.071185111999512

Token 219: ' plus' (ID: 2932)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.215135931968689
    2. 'plus' → logprob: -1.465135931968689
    3. ' degré' → logprob: -1.465135931968689
    4. ' plus' → logprob: -2.0901360511779785
    5. 'de' → logprob: -3.0901360511779785
    6. ' maximum' → logprob: -3.3401360511779785
    7. 'maximum' → logprob: -3.9651360511779785
    8. ' maximal' → logprob: -5.0901360511779785
    9. 'degree' → logprob: -5.4651360511779785
    10. ' max' → logprob: -5.4651360511779785

Token 220: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.1025137901306152
    2. '_' → logprob: -1.4775137901306152
    3. '_de' → logprob: -2.2275137901306152
    4. ' haut' → logprob: -2.2275137901306152
    5. ' grand' → logprob: -2.8525137901306152
    6. 'de' → logprob: -2.9775137901306152
    7. ' élevé' → logprob: -3.1025137901306152
    8. ' _' → logprob: -3.4775137901306152
    9. 'grand' → logprob: -3.8525137901306152
    10. '_high' → logprob: -4.727513790130615

Token 221: ' voisins' (ID: 166720)
  Prédit: ' voisins'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' voisins' → logprob: -0.030884340405464172
    2. '_' → logprob: -4.280884265899658
    3. ' voisin' → logprob: -5.155884265899658
    4. ' ' → logprob: -5.530884265899658
    5. 'vo' → logprob: -6.280884265899658
    6. ' _' → logprob: -6.905884265899658
    7. ' neighbors' → logprob: -7.030884265899658
    8. '_vo' → logprob: -7.155884265899658
    9. '_neighbors' → logprob: -7.405884265899658
    10. '_v' → logprob: -8.030884742736816

Token 222: ' (' (ID: 350)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.13133090734481812
    2. '   ' → logprob: -3.381330966949463
    3. ',' → logprob: -3.631330966949463
    4. '<|end|>' → logprob: -3.756330966949463
    5. '.' → logprob: -4.381330966949463
    6. '```' → logprob: -4.631330966949463
    7. '):' → logprob: -5.631330966949463
    8. ':' → logprob: -5.756330966949463
    9. '
' → logprob: -6.256330966949463
    10. ' )' → logprob: -6.381330966949463

Token 223: 'de' (ID: 613)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011562556028366089
    2. ' )' → logprob: -4.886562347412109
    3. ').' → logprob: -5.761562347412109
    4. '   ' → logprob: -8.51156234741211
    5. ')
' → logprob: -9.13656234741211
    6. '),' → logprob: -9.38656234741211
    7. ' ' → logprob: -9.51156234741211
    8. ' E' → logprob: -9.76156234741211
    9. 'E' → logprob: -10.01156234741211
    10. '):' → logprob: -10.26156234741211

Token 224: 'gré' (ID: 37406)
  Prédit: 'gré'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gré' → logprob: -0.02051829919219017
    2. 'g' → logprob: -4.7705183029174805
    3. 'gr' → logprob: -5.0205183029174805
    4. 'gree' → logprob: -5.6455183029174805
    5. 'gre' → logprob: -6.8955183029174805
    6. '   ' → logprob: -8.77051830291748
    7. 'gres' → logprob: -9.39551830291748
    8. '  ' → logprob: -9.64551830291748
    9. ' degré' → logprob: -9.64551830291748
    10. '```' → logprob: -9.77051830291748

Token 225: ' maximal' (ID: 65414)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.037457533180713654
    2. ' )' → logprob: -4.287457466125488
    3. '_max' → logprob: -5.162457466125488
    4. ').' → logprob: -5.287457466125488
    5. '   ' → logprob: -5.662457466125488
    6. ')
' → logprob: -5.912457466125488
    7. ' maximal' → logprob: -6.412457466125488
    8. ')_' → logprob: -6.537457466125488
    9. '_' → logprob: -6.787457466125488
    10. ' )
' → logprob: -7.787457466125488

Token 226: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -9.388769103679806e-05
    2. ' )' → logprob: -9.375093460083008
    3. ')
' → logprob: -11.875093460083008
    4. ').' → logprob: -13.500093460083008
    5. '}' → logprob: -15.625093460083008
    6. '   ' → logprob: -16.500093460083008
    7. ' ' → logprob: -16.750093460083008
    8. '),' → logprob: -16.750093460083008
    9. ',' → logprob: -17.000093460083008
    10. ' ' → logprob: -17.125093460083008

Token 227: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06945578753948212
    2. 'max' → logprob: -3.944455862045288
    3. ' max' → logprob: -4.069455623626709
    4. ' 
' → logprob: -4.069455623626709
    5. '    
' → logprob: -5.319455623626709
    6. '
' → logprob: -5.444455623626709
    7. ')' → logprob: -6.944455623626709
    8. '   
' → logprob: -7.194455623626709
    9. 'd' → logprob: -7.694455623626709
    10. 'n' → logprob: -7.819455623626709

Token 228: ' """
' (ID: 7037)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.8836525678634644
    2. 'max' → logprob: -1.0086525678634644
    3. '   ' → logprob: -1.5086525678634644
    4. ')' → logprob: -8.508652687072754
    5. ' maximum' → logprob: -8.508652687072754
    6. '    
' → logprob: -9.508652687072754
    7. 'degree' → logprob: -9.633652687072754
    8. '    ' → logprob: -10.383652687072754
    9. ' maximal' → logprob: -10.383652687072754
    10. '
' → logprob: -10.508652687072754

Token 229: '   ' (ID: 271)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.039007652550935745
    2. '   ' → logprob: -3.7890076637268066
    3. 'max' → logprob: -4.164007663726807
    4. ' best' → logprob: -10.164007186889648
    5. ' maximum' → logprob: -11.289007186889648
    6. ' return' → logprob: -12.039007186889648
    7. ' maximal' → logprob: -12.039007186889648
    8. '```' → logprob: -12.039007186889648
    9. ' maxi' → logprob: -12.414007186889648
    10. ' degree' → logprob: -12.789007186889648

Token 230: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -0.3883800804615021
    2. ' max' → logprob: -1.1383800506591797
    3. 'return' → logprob: -7.01338005065918
    4. ' return' → logprob: -7.88838005065918
    5. '   ' → logprob: -8.38838005065918
    6. 'degree' → logprob: -12.63838005065918
    7. 'best' → logprob: -14.38838005065918
    8. 'n' → logprob: -15.26338005065918
    9. 'deg' → logprob: -15.38838005065918
    10. '```' → logprob: -15.51338005065918

Token 231: '_degree' (ID: 128654)
  Prédit: '_degree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_degree' → logprob: -0.2752232551574707
    2. '_' → logprob: -2.0252232551574707
    3. '_node' → logprob: -2.2752232551574707
    4. '_deg' → logprob: -5.275223255157471
    5. '_index' → logprob: -8.275222778320312
    6. '_de' → logprob: -8.650222778320312
    7. '_i' → logprob: -9.775222778320312
    8. ' _' → logprob: -10.025222778320312
    9. '_d' → logprob: -10.150222778320312
    10. '_idx' → logprob: -10.400222778320312

Token 232: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5814568996429443
    2. '_node' → logprob: -0.8314568996429443
    3. '=' → logprob: -5.706457138061523
    4. '_' → logprob: -6.206457138061523
    5. ',' → logprob: -9.456457138061523
    6. '_index' → logprob: -10.456457138061523
    7. '_idx' → logprob: -11.331457138061523
    8. '_n' → logprob: -11.581457138061523
    9. ' ' → logprob: -11.831457138061523
    10. 'Node' → logprob: -12.581457138061523

Token 233: ' ' (ID: 220)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.16109339892864227
    2. '0' → logprob: -1.9110933542251587
    3. ' -' → logprob: -7.161093235015869
    4. ' ' → logprob: -9.286093711853027
    5. '   ' → logprob: -17.28609275817871
    6. '−' → logprob: -18.78609275817871
    7. 'len' → logprob: -19.91109275817871
    8. '-max' → logprob: -20.28609275817871
    9. '```' → logprob: -20.66109275817871
    10. '-ex' → logprob: -21.03609275817871

Token 234: '0' (ID: 15)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.004078758880496025
    2. '0' → logprob: -5.5040788650512695
    3. ' -' → logprob: -15.00407886505127
    4. '-max' → logprob: -18.129077911376953
    5. '-f' → logprob: -18.254077911376953
    6. '−' → logprob: -19.129077911376953
    7. '-s' → logprob: -19.379077911376953
    8. ' ' → logprob: -19.754077911376953
    9. '-ex' → logprob: -19.754077911376953
    10. '-m' → logprob: -20.004077911376953

Token 235: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -8.590104698669165e-05
    2. ' 
' → logprob: -10.000085830688477
    3. 'n' → logprob: -11.250085830688477
    4. 'max' → logprob: -11.625085830688477
    5. '
' → logprob: -11.625085830688477
    6. ',' → logprob: -12.625085830688477
    7. ' max' → logprob: -13.250085830688477
    8. '   ' → logprob: -14.250085830688477
    9. '' → logprob: -14.250085830688477
    10. '    
' → logprob: -14.750085830688477

Token 236: '   ' (ID: 271)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.6075851321220398
    2. '
' → logprob: -1.3575851917266846
    3. 'max' → logprob: -1.7325851917266846
    4. '   ' → logprob: -3.9825851917266846
    5. ' 
' → logprob: -6.1075849533081055
    6. '    
' → logprob: -8.732584953308105
    7. ' node' → logprob: -9.482584953308105
    8. 'n' → logprob: -11.107584953308105
    9. 'node' → logprob: -11.232584953308105
    10. ',max' → logprob: -11.232584953308105

Token 237: ' node' (ID: 4596)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.002949412912130356
    2. ' max' → logprob: -5.877949237823486
    3. 'node' (adapté à ' node') → logprob: -8.877949714660645
    4. '   ' → logprob: -12.752949714660645
    5. ' node' → logprob: -13.502949714660645
    6. 'best' → logprob: -15.252949714660645
    7. 'result' → logprob: -15.752949714660645
    8. 'index' → logprob: -16.127948760986328
    9. 'candidate' → logprob: -16.127948760986328
    10. ' ' → logprob: -16.377948760986328

Token 238: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2042197585105896
    2. '_' → logprob: -1.7042198181152344
    3. ' ' → logprob: -6.954219818115234
    4. ',' → logprob: -7.454219818115234
    5. '_with' → logprob: -7.704219818115234
    6. '=' → logprob: -7.829219818115234
    7. '_index' → logprob: -9.079219818115234
    8. '_max' → logprob: -9.454219818115234
    9. ' _' → logprob: -9.579219818115234
    10. '_for' → logprob: -10.829219818115234

Token 239: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6097490191459656
    2. ' ' → logprob: -0.8597490191459656
    3. '1' → logprob: -3.4847490787506104
    4. ' None' → logprob: -6.234748840332031
    5. 'None' → logprob: -7.484748840332031
    6. ' -' → logprob: -9.859748840332031
    7. '-' → logprob: -12.359748840332031
    8. '   ' → logprob: -12.484748840332031
    9. '  ' → logprob: -15.359748840332031
    10. ' none' → logprob: -16.35974884033203

Token 240: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2530530095100403
    2. '1' → logprob: -1.5030529499053955
    3. '-' → logprob: -7.003053188323975
    4. 'None' → logprob: -8.503052711486816
    5. ' ' → logprob: -11.503052711486816
    6. ' -' → logprob: -14.128052711486816
    7. ' None' → logprob: -15.128052711486816
    8. '   ' → logprob: -17.003053665161133
    9. '```' → logprob: -17.128053665161133
    10. '[' → logprob: -17.878053665161133

Token 241: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0014776058960705996
    2. 'for' → logprob: -7.1264777183532715
    3. ' for' → logprob: -7.6264777183532715
    4. '
' → logprob: -10.126477241516113
    5. ' 
' → logprob: -10.376477241516113
    6. '\n' → logprob: -10.501477241516113
    7. '   ' → logprob: -10.626477241516113
    8. '<|end|>' → logprob: -10.876477241516113
    9. '  
' → logprob: -11.126477241516113
    10. '    
' → logprob: -11.251477241516113

Token 242: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.05740361660718918
    2. '   ' → logprob: -3.182403564453125
    3. ' for' → logprob: -4.807403564453125
    4. 'for' → logprob: -5.307403564453125
    5. '    
' → logprob: -7.182403564453125
    6. ' 
' → logprob: -8.057403564453125
    7. '  
' → logprob: -10.057403564453125
    8. '\n' → logprob: -10.557403564453125
    9. '   
' → logprob: -11.307403564453125
    10. '
' → logprob: -11.432403564453125

Token 243: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.2528950870037079
    2. ' for' → logprob: -1.5028951168060303
    3. '   ' → logprob: -7.002894878387451
    4. '
' → logprob: -10.00289535522461
    5. ' 
' → logprob: -12.00289535522461
    6. '    
' → logprob: -13.75289535522461
    7. ' ' → logprob: -13.87789535522461
    8. 'i' → logprob: -14.12789535522461
    9. 'n' → logprob: -14.37789535522461
    10. '	for' → logprob: -14.62789535522461

Token 244: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.5759639143943787
    2. 'i' → logprob: -0.8259639143943787
    3. 'u' → logprob: -11.075963973999023
    4. ' u' → logprob: -12.575963973999023
    5. '	i' → logprob: -13.075963973999023
    6. 'v' → logprob: -13.950963973999023
    7. '   ' → logprob: -14.075963973999023
    8. ' idx' → logprob: -14.575963973999023
    9. ' v' → logprob: -14.700963973999023
    10. ' ' → logprob: -15.075963973999023

Token 245: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0010569837177172303
    2. 'in' → logprob: -6.876057147979736
    3. ',' → logprob: -11.501056671142578
    4. ' ' → logprob: -11.751056671142578
    5. 'range' → logprob: -12.626056671142578
    6. ' range' → logprob: -13.126056671142578
    7. ' i' → logprob: -14.876056671142578
    8. ' ,' → logprob: -15.751056671142578
    9. '1' → logprob: -16.001056671142578
    10. 'n' → logprob: -16.126056671142578

Token 246: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.1002068892121315
    2. ' range' → logprob: -2.3502068519592285
    3. '(range' → logprob: -16.22520637512207
    4. '	range' → logprob: -16.35020637512207
    5. ' ' → logprob: -17.35020637512207
    6. ' xrange' → logprob: -18.72520637512207
    7. '   ' → logprob: -19.10020637512207
    8. '```' → logprob: -19.72520637512207
    9. 'rang' → logprob: -19.97520637512207
    10. '  ' → logprob: -20.10020637512207

Token 247: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.006080718245357275
    2. '(len' → logprob: -5.756080627441406
    3. '1' → logprob: -6.006080627441406
    4. 'len' → logprob: -7.756080627441406
    5. ' len' → logprob: -12.256080627441406
    6. '   ' → logprob: -13.131080627441406
    7. ' (' → logprob: -16.631080627441406
    8. ' ' → logprob: -17.381080627441406
    9. '(
' → logprob: -17.631080627441406
    10. '	len' → logprob: -17.756080627441406

Token 248: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011050531640648842
    2. 'len' → logprob: -4.511050701141357
    3. '(len' → logprob: -13.0110502243042
    4. ' len' → logprob: -14.6360502243042
    5. '(' → logprob: -17.511051177978516
    6. '   ' → logprob: -18.886051177978516
    7. ' ' → logprob: -19.886051177978516
    8. ',len' → logprob: -20.261051177978516
    9. '	len' → logprob: -21.261051177978516
    10. '<len' → logprob: -21.511051177978516

Token 249: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.20099367201328278
    2. ',len' → logprob: -2.200993776321411
    3. '(len' → logprob: -3.575993776321411
    4. ' len' → logprob: -3.575993776321411
    5. 'len' → logprob: -4.825993537902832
    6. ' ,' → logprob: -4.950993537902832
    7. '   ' → logprob: -8.325993537902832
    8. '=len' → logprob: -10.325993537902832
    9. '	len' → logprob: -10.700993537902832
    10. ',n' → logprob: -11.825993537902832

Token 250: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0019288709154352546
    2. ' len' → logprob: -6.251928806304932
    3. '(len' → logprob: -15.25192928314209
    4. ',len' → logprob: -18.251928329467773
    5. '	len' → logprob: -18.376928329467773
    6. '   ' → logprob: -18.626928329467773
    7. '=len' → logprob: -19.376928329467773
    8. '<len' → logprob: -20.251928329467773
    9. '[len' → logprob: -20.626928329467773
    10. 'length' → logprob: -21.001928329467773

Token 251: '(E' (ID: 20882)
  Prédit: '(E'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(E' → logprob: -7.553032628493384e-05
    2. '(' → logprob: -9.500075340270996
    3. '(
' → logprob: -15.250075340270996
    4. ')' → logprob: -15.750075340270996
    5. 'E' → logprob: -16.125076293945312
    6. ' (' → logprob: -16.250076293945312
    7. '(A' → logprob: -18.000076293945312
    8. '```' → logprob: -19.750076293945312
    9. '(

' → logprob: -20.000076293945312
    10. '(I' → logprob: -20.125076293945312

Token 252: ')):
' (ID: 22530)
  Prédit: ')):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')):' → logprob: -0.048888128250837326
    2. ')):
' → logprob: -3.5488882064819336
    3. '):' → logprob: -4.298888206481934
    4. ')' → logprob: -5.798888206481934
    5. '))' → logprob: -6.173888206481934
    6. '):
' → logprob: -9.673888206481934
    7. ' ' → logprob: -9.673888206481934
    8. ' ))' → logprob: -10.173888206481934
    9. ' ):' → logprob: -10.298888206481934
    10. ')):
' → logprob: -10.548888206481934

Token 253: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17883896827697754
    2. '   ' → logprob: -1.9288389682769775
    3. ' if' → logprob: -4.678838729858398
    4. '    ' → logprob: -5.553838729858398
    5. ':' → logprob: -6.678838729858398
    6. '<|end|>' → logprob: -7.303838729858398
    7. '        
' → logprob: -7.303838729858398
    8. ' ' → logprob: -7.428838729858398
    9. '    
' → logprob: -7.928838729858398
    10. 'if' → logprob: -8.178838729858398

Token 254: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.342866450548172
    2. '   ' → logprob: -2.2178664207458496
    3. 'degree' → logprob: -2.3428664207458496
    4. 'if' (adapté à ' if') → logprob: -2.7178664207458496
    5. ' degree' → logprob: -4.34286642074585
    6. 'deg' → logprob: -5.96786642074585
    7. ' current' → logprob: -6.71786642074585
    8. '       ' → logprob: -7.34286642074585
    9. ' deg' → logprob: -7.34286642074585
    10. 'current' → logprob: -7.59286642074585

Token 255: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.003178544342517853
    2. 'len' → logprob: -5.753178596496582
    3. '(len' → logprob: -14.128178596496582
    4. '	len' → logprob: -16.253177642822266
    5. ' max' → logprob: -17.253177642822266
    6. ' ' → logprob: -19.003177642822266
    7. '=len' → logprob: -19.128177642822266
    8. ' ' → logprob: -19.378177642822266
    9. '[len' → logprob: -19.878177642822266
    10. '<len' → logprob: -20.503177642822266

Token 256: '(E' (ID: 20882)
  Prédit: '(E'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(E' → logprob: -0.002187972189858556
    2. '(' → logprob: -6.127188205718994
    3. ' (' → logprob: -13.252187728881836
    4. '(
' → logprob: -13.877187728881836
    5. ')' → logprob: -16.627187728881836
    6. 'E' → logprob: -16.877187728881836
    7. '(

' → logprob: -16.877187728881836
    8. ' E' → logprob: -18.627187728881836
    9. ' ' → logprob: -18.877187728881836
    10. '<E' → logprob: -19.002187728881836

Token 257: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.500108141452074e-05
    2. ')' → logprob: -11.125035285949707
    3. '[' → logprob: -11.375035285949707
    4. ' [' → logprob: -12.250035285949707
    5. ')[' → logprob: -13.125035285949707
    6. '[E' → logprob: -14.125035285949707
    7. '[
' → logprob: -15.000035285949707
    8. '   ' → logprob: -15.375035285949707
    9. '[I' → logprob: -15.625035285949707
    10. 'i' → logprob: -15.750035285949707

Token 258: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0034372040536254644
    2. '])' → logprob: -6.253437042236328
    3. ')>' → logprob: -6.878437042236328
    4. ' )' → logprob: -7.753437042236328
    5. '))' → logprob: -10.628437042236328
    6. '>)' → logprob: -11.628437042236328
    7. '   ' → logprob: -12.503437042236328
    8. ' ])' → logprob: -13.253437042236328
    9. '）' → logprob: -13.503437042236328
    10. ' ' → logprob: -13.628437042236328

Token 259: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.02634163200855255
    2. '>' → logprob: -3.651341676712036
    3. ' ' → logprob: -10.526341438293457
    4. ')' → logprob: -12.026341438293457
    5. ')>' → logprob: -12.526341438293457
    6. ' >
' → logprob: -13.401341438293457
    7. '()>' → logprob: -13.776341438293457
    8. '">' → logprob: -14.526341438293457
    9. ' >

' → logprob: -15.401341438293457
    10. ' >
' → logprob: -15.401341438293457

Token 260: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.061967797577381134
    2. ' max' → logprob: -2.8119678497314453
    3. '	max' → logprob: -15.936967849731445
    4. '_max' → logprob: -17.186967849731445
    5. '(max' → logprob: -17.311967849731445
    6. '=max' → logprob: -17.936967849731445
    7. ' ' → logprob: -18.186967849731445
    8. '[max' → logprob: -18.686967849731445
    9. ')' → logprob: -19.811967849731445
    10. 'maxlength' → logprob: -20.311967849731445

Token 261: '_degree' (ID: 128654)
  Prédit: '_degree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_degree' → logprob: -7.32654589228332e-05
    2. '_' → logprob: -10.125073432922363
    3. 'degree' → logprob: -10.875073432922363
    4. '_de' → logprob: -12.125073432922363
    5. '_depth' → logprob: -13.125073432922363
    6. '_d' → logprob: -13.625073432922363
    7. ')' → logprob: -13.875073432922363
    8. '_deg' → logprob: -14.500073432922363
    9. ' ' → logprob: -14.875073432922363
    10. '   ' → logprob: -15.000073432922363

Token 262: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0032932094763964415
    2. ':
' → logprob: -6.378293037414551
    3. '):' → logprob: -6.503293037414551
    4. '):
' → logprob: -10.00329303741455
    5. ')' → logprob: -11.00329303741455
    6. '<|end|>' → logprob: -11.25329303741455
    7. ' :' → logprob: -11.50329303741455
    8. '       ' → logprob: -13.12829303741455
    9. '<|end|>' → logprob: -13.75329303741455
    10. ',' → logprob: -14.37829303741455

Token 263: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6078256368637085
    2. ':' → logprob: -1.7328256368637085
    3. ' i' → logprob: -2.482825756072998
    4. 'i' → logprob: -3.232825756072998
    5. ')' → logprob: -3.357825756072998
    6. ' :' → logprob: -3.607825756072998
    7. '       ' → logprob: -4.357825756072998
    8. ' ' → logprob: -4.357825756072998
    9. '            
' → logprob: -4.482825756072998
    10. ' 
' → logprob: -4.607825756072998

Token 264: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.48379120230674744
    2. 'max' (adapté à ' max') → logprob: -1.3587912321090698
    3. ' node' → logprob: -2.4837911128997803
    4. 'node' → logprob: -4.108791351318359
    5. ' 
' → logprob: -4.858791351318359
    6. '               ' → logprob: -4.983791351318359
    7. '           ' → logprob: -5.233791351318359
    8. '            ' → logprob: -5.733791351318359
    9. ' i' → logprob: -6.858791351318359
    10. '                
' → logprob: -7.358791351318359

Token 265: '_degree' (ID: 128654)
  Prédit: '_degree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_degree' → logprob: -0.010102282278239727
    2. '_' → logprob: -5.510102272033691
    3. '[i' → logprob: -6.010102272033691
    4. 'degree' → logprob: -7.010102272033691
    5. 'i' → logprob: -7.510102272033691
    6. '_i' → logprob: -7.760102272033691
    7. ' i' → logprob: -8.260102272033691
    8. '_de' → logprob: -8.260102272033691
    9. '=i' → logprob: -8.510102272033691
    10. '           ' → logprob: -9.010102272033691

Token 266: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029929134994745255
    2. '=' → logprob: -3.5299291610717773
    3. '=i' → logprob: -8.904929161071777
    4. ' =
' → logprob: -10.279929161071777
    5. ' ' → logprob: -12.529929161071777
    6. ' i' → logprob: -13.654929161071777
    7. '=len' → logprob: -13.904929161071777
    8. ',' → logprob: -13.904929161071777
    9. ',i' → logprob: -14.654929161071777
    10. '=
' → logprob: -15.029929161071777

Token 267: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.47407856583595276
    2. 'len' → logprob: -0.9740785360336304
    3. '(len' → logprob: -14.099078178405762
    4. '[len' → logprob: -14.974078178405762
    5. '	len' → logprob: -14.974078178405762
    6. '=len' → logprob: -15.724078178405762
    7. '<len' → logprob: -17.599079132080078
    8. ',len' → logprob: -17.849079132080078
    9. ' ' → logprob: -18.724079132080078
    10. '_len' → logprob: -18.849079132080078

Token 268: '(E' (ID: 20882)
  Prédit: '(E'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(E' → logprob: -0.0019291093340143561
    2. '(' → logprob: -6.25192928314209
    3. '(
' → logprob: -15.37692928314209
    4. 'E' → logprob: -16.251928329467773
    5. '(

' → logprob: -16.501928329467773
    6. ' (' → logprob: -16.501928329467773
    7. ')' → logprob: -18.126928329467773
    8. '<E' → logprob: -18.376928329467773
    9. '(A' → logprob: -19.251928329467773
    10. '```' → logprob: -19.501928329467773

Token 269: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.587483221665025e-05
    2. '[' → logprob: -9.875065803527832
    3. ')' → logprob: -12.000065803527832
    4. '[E' → logprob: -12.500065803527832
    5. 'i' → logprob: -13.125065803527832
    6. '[
' → logprob: -14.000065803527832
    7. ')[' → logprob: -14.625065803527832
    8. ' [' → logprob: -14.625065803527832
    9. '```' → logprob: -15.375065803527832
    10. '[I' → logprob: -15.750065803527832

Token 270: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.038187913596630096
    2. '[i' → logprob: -3.9131879806518555
    3. '])' → logprob: -4.2881879806518555
    4. ')
' → logprob: -5.7881879806518555
    5. ']' → logprob: -8.038187980651855
    6. ')i' → logprob: -8.663187980651855
    7. ')]' → logprob: -10.163187980651855
    8. '])
' → logprob: -10.288187980651855
    9. '))' → logprob: -10.288187980651855
    10. '   ' → logprob: -10.413187980651855

Token 271: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.000411011598771438
    2. '
' → logprob: -8.625411033630371
    3. '            
' → logprob: -9.250411033630371
    4. ' 
' → logprob: -9.875411033630371
    5. '    
' → logprob: -10.875411033630371
    6. '       ' → logprob: -11.000411033630371
    7. 'n' → logprob: -11.375411033630371
    8. 'i' → logprob: -11.500411033630371
    9. '        
' → logprob: -11.750411033630371
    10. '  
' → logprob: -12.375411033630371

Token 272: ' node' (ID: 4596)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.17340578138828278
    2. ' i' → logprob: -2.173405885696411
    3. 'node' (adapté à ' node') → logprob: -3.298405885696411
    4. ' node' → logprob: -5.173405647277832
    5. '           ' → logprob: -5.923405647277832
    6. '   ' → logprob: -9.048405647277832
    7. '       ' → logprob: -12.048405647277832
    8. ' ' → logprob: -13.548405647277832
    9. '               ' → logprob: -13.673405647277832
    10. '    ' → logprob: -14.048405647277832

Token 273: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03820236399769783
    2. '=' → logprob: -3.2882022857666016
    3. '=i' → logprob: -9.038202285766602
    4. ' =
' → logprob: -10.288202285766602
    5. ' ' → logprob: -11.913202285766602
    6. ' i' → logprob: -13.913202285766602
    7. '=
' → logprob: -14.913202285766602
    8. 'i' → logprob: -16.2882022857666
    9. ' =
' → logprob: -17.1632022857666
    10. ' =)' → logprob: -17.6632022857666

Token 274: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.1602243334054947
    2. ' i' → logprob: -1.9102243185043335
    3. '	i' → logprob: -16.41022491455078
    4. ' ' → logprob: -17.91022491455078
    5. ' 
' → logprob: -18.16022491455078
    6. ' ' → logprob: -18.28522491455078
    7. '_i' → logprob: -18.66022491455078
    8. '```' → logprob: -18.66022491455078
    9. '   ' → logprob: -18.91022491455078
    10. '(i' → logprob: -19.03522491455078

Token 275: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7070502042770386
    2. '   ' → logprob: -0.7070502042770386
    3. 'return' → logprob: -5.082050323486328
    4. '    
' → logprob: -5.832050323486328
    5. ' 
' → logprob: -6.207050323486328
    6. ' return' → logprob: -6.332050323486328
    7. '  
' → logprob: -7.957050323486328
    8. '\n' → logprob: -8.082050323486328
    9. '	return' → logprob: -9.957050323486328
    10. ':return' → logprob: -10.457050323486328

Token 276: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014713047072291374
    2. '
' → logprob: -4.639712810516357
    3. 'return' → logprob: -5.389712810516357
    4. ' return' → logprob: -8.514713287353516
    5. '    
' → logprob: -9.014713287353516
    6. '\n' → logprob: -11.139713287353516
    7. 'r' → logprob: -11.264713287353516
    8. ' 
' → logprob: -11.264713287353516
    9. '	return' → logprob: -12.514713287353516
    10. '  
' → logprob: -12.514713287353516

Token 277: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.01117737963795662
    2. '   ' → logprob: -4.7611775398254395
    3. ' return' → logprob: -6.0111775398254395
    4. 'r' → logprob: -9.261177062988281
    5. '
' → logprob: -12.261177062988281
    6. ' ' → logprob: -12.636177062988281
    7. '```' → logprob: -13.386177062988281
    8. 'ret' → logprob: -13.636177062988281
    9. '    
' → logprob: -14.011177062988281
    10. '	return' → logprob: -14.636177062988281

Token 278: ' node' (ID: 4596)
  Prédit: ' node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' node' → logprob: -0.2014138251543045
    2. 'node' → logprob: -1.701413869857788
    3. '(node' → logprob: -15.201414108276367
    4. '	node' → logprob: -16.076414108276367
    5. ' ' → logprob: -17.076414108276367
    6. '[node' → logprob: -17.576414108276367
    7. '_node' → logprob: -17.826414108276367
    8. 'Node' → logprob: -17.826414108276367
    9. ' nod' → logprob: -17.951414108276367
    10. ' ' → logprob: -18.201414108276367

Token 279: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.42947474122047424
    2. 'def' → logprob: -1.1794747114181519
    3. '<|end|>' → logprob: -3.4294748306274414
    4. '

' → logprob: -4.929474830627441
    5. '#' → logprob: -6.929474830627441
    6. '```' → logprob: -7.679474830627441
    7. '\n' → logprob: -9.054474830627441
    8. '<|end|>' → logprob: -9.554474830627441
    9. 'd' → logprob: -9.679474830627441
    10. '[' → logprob: -9.679474830627441

Token 280: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.01829696260392666
    2. 'd' → logprob: -4.01829719543457
    3. '\' → logprob: -9.51829719543457
    4. '#' → logprob: -9.76829719543457
    5. '```' → logprob: -11.51829719543457
    6. '
' → logprob: -12.89329719543457
    7. 'n' → logprob: -13.39329719543457
    8. '\n' → logprob: -14.39329719543457
    9. 'de' → logprob: -14.64329719543457
    10. ' 
' → logprob: -15.39329719543457

Token 281: ' assign' (ID: 14975)
  Prédit: ' find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' find' → logprob: -0.9577360153198242
    2. ' color' → logprob: -1.4577360153198242
    3. ' bfs' → logprob: -2.457736015319824
    4. ' dfs' → logprob: -2.832736015319824
    5. 'color' → logprob: -2.957736015319824
    6. ' main' → logprob: -3.082736015319824
    7. ' max' → logprob: -3.832736015319824
    8. ' count' → logprob: -4.207736015319824
    9. 'b' → logprob: -4.457736015319824
    10. ' solve' → logprob: -4.832736015319824

Token 282: '_colors' (ID: 79137)
  Prédit: '_colors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_colors' → logprob: -0.00173158326651901
    2. '_color' → logprob: -6.5017313957214355
    3. '_labels' → logprob: -9.751731872558594
    4. '_col' → logprob: -10.251731872558594
    5. '_groups' → logprob: -10.876731872558594
    6. '_nodes' → logprob: -11.251731872558594
    7. '_weights' → logprob: -11.376731872558594
    8. '_' → logprob: -11.501731872558594
    9. '_unique' → logprob: -11.501731872558594
    10. 'colors' → logprob: -11.626731872558594

Token 283: '_b' (ID: 1535)
  Prédit: '(E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(E' → logprob: -0.23353390395641327
    2. '(n' → logprob: -1.8585338592529297
    3. '(' → logprob: -3.1085338592529297
    4. ' (' → logprob: -5.60853385925293
    5. '(nodes' → logprob: -6.35853385925293
    6. '(node' → logprob: -6.60853385925293
    7. '(graph' → logprob: -8.10853385925293
    8. '(N' → logprob: -9.23353385925293
    9. '(num' → logprob: -9.35853385925293
    10. '(
' → logprob: -9.35853385925293

Token 284: 'fs' (ID: 6469)
  Prédit: 'ack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ack' → logprob: -0.9635553956031799
    2. 'fs' → logprob: -0.9635553956031799
    3. 'FS' → logprob: -1.9635553359985352
    4. 'ip' → logprob: -3.213555335998535
    5. 'ase' → logprob: -3.838555335998535
    6. 'read' → logprob: -5.088555335998535
    7. 'y' → logprob: -5.338555335998535
    8. 'asic' → logprob: -6.088555335998535
    9. 'a' → logprob: -6.213555335998535
    10. '_' → logprob: -6.213555335998535

Token 285: '(E' (ID: 20882)
  Prédit: '(graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(graph' → logprob: -0.9508063197135925
    2. '(' → logprob: -1.2008063793182373
    3. '(G' → logprob: -1.8258063793182373
    4. '(n' → logprob: -2.2008063793182373
    5. '(node' → logprob: -3.4508063793182373
    6. '(E' → logprob: -5.325806140899658
    7. '(root' → logprob: -6.700806140899658
    8. '(Graph' → logprob: -6.825806140899658
    9. '(g' → logprob: -7.325806140899658
    10. '(nodes' → logprob: -8.075806617736816

Token 286: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.5048530030981055e-06
    2. '):' → logprob: -14.500001907348633
    3. ' ,' → logprob: -14.625001907348633
    4. ',node' → logprob: -14.875001907348633
    5. ',n' → logprob: -15.875001907348633
    6. ')' → logprob: -18.125001907348633
    7. ',start' → logprob: -18.375001907348633
    8. ',
' → logprob: -18.875001907348633
    9. '(node' → logprob: -19.625001907348633
    10. '   ' → logprob: -20.000001907348633

Token 287: ' colors' (ID: 10803)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.5760776996612549
    2. ' start' → logprob: -0.8260776996612549
    3. 'max' → logprob: -9.451077461242676
    4. ' max' → logprob: -10.701077461242676
    5. 'node' → logprob: -11.701077461242676
    6. ')' → logprob: -12.201077461242676
    7. 's' → logprob: -12.326077461242676
    8. ' node' → logprob: -12.326077461242676
    9. 'source' → logprob: -12.576077461242676
    10. '```' → logprob: -13.326077461242676

Token 288: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.18018624186515808
    2. '):' → logprob: -1.8051862716674805
    3. ')' → logprob: -7.9301862716674805
    4. '):
' → logprob: -10.43018627166748
    5. ',n' → logprob: -10.68018627166748
    6. ' ):' → logprob: -11.55518627166748
    7. ' ,' → logprob: -11.80518627166748
    8. ',node' → logprob: -12.43018627166748
    9. ',start' → logprob: -13.30518627166748
    10. '   ' → logprob: -13.68018627166748

Token 289: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.1603544056415558
    2. ' start' → logprob: -1.9103543758392334
    3. 'max' → logprob: -9.410354614257812
    4. 'node' → logprob: -10.910354614257812
    5. 'source' → logprob: -11.660354614257812
    6. ' max' → logprob: -12.410354614257812
    7. ' node' → logprob: -12.535354614257812
    8. '```' → logprob: -12.660354614257812
    9. ')' → logprob: -12.910354614257812
    10. '	start' → logprob: -13.535354614257812

Token 290: '):
' (ID: 1883)
  Prédit: '_node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.061334431171417236
    2. '):' → logprob: -3.0613343715667725
    3. '_' → logprob: -4.561334609985352
    4. ')' → logprob: -6.561334609985352
    5. ',' → logprob: -7.936334609985352
    6. '):
' → logprob: -8.936334609985352
    7. '_vertex' → logprob: -9.186334609985352
    8. 'node' → logprob: -10.186334609985352
    9. '_n' → logprob: -10.311334609985352
    10. ')_' → logprob: -10.436334609985352

Token 291: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3919323980808258
    2. '   ' → logprob: -1.1419323682785034
    3. ':
' → logprob: -6.016932487487793
    4. '):' → logprob: -6.891932487487793
    5. ',' → logprob: -7.141932487487793
    6. ' :' → logprob: -7.891932487487793
    7. '(queue' → logprob: -9.641932487487793
    8. '):
' → logprob: -9.766932487487793
    9. ' queue' → logprob: -10.016932487487793
    10. '():' → logprob: -10.141932487487793

Token 292: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26286834478378296
    2. ' from' → logprob: -1.5128684043884277
    3. 'from' → logprob: -4.887868404388428
    4. ' queue' → logprob: -5.762868404388428
    5. 'queue' → logprob: -9.26286792755127
    6. ' ' → logprob: -10.76286792755127
    7. '  ' → logprob: -11.13786792755127
    8. '
' → logprob: -11.38786792755127
    9. '	from' → logprob: -11.51286792755127
    10. ' import' → logprob: -11.63786792755127

Token 293: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12576425075531006
    2. ' """' → logprob: -2.7507643699645996
    3. ' queue' → logprob: -3.8757643699645996
    4. ' from' → logprob: -4.0007643699646
    5. ' """
' → logprob: -4.2507643699646
    6. 'from' → logprob: -7.3757643699646
    7. '    ' → logprob: -9.250763893127441
    8. ' import' → logprob: -10.375763893127441
    9. '  ' → logprob: -10.500763893127441
    10. ' ' → logprob: -10.750763893127441

Token 294: ' Ass' (ID: 4744)
  Prédit: ' from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' from' → logprob: -0.38159382343292236
    2. ' queue' → logprob: -1.3815938234329224
    3. '   ' → logprob: -3.381593704223633
    4. 'from' → logprob: -3.506593704223633
    5. 'queue' → logprob: -6.506593704223633
    6. ' visited' → logprob: -8.006593704223633
    7. ' ' → logprob: -10.131593704223633
    8. ' """
' → logprob: -10.131593704223633
    9. ' """' → logprob: -10.381593704223633
    10. ' import' → logprob: -10.506593704223633

Token 295: 'igne' (ID: 24120)
  Prédit: 'ign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ign' → logprob: -0.6015398502349854
    2. 'igne' → logprob: -0.8515398502349854
    3. '
' → logprob: -5.351539611816406
    4. 'igned' → logprob: -5.351539611816406
    5. 'ig' → logprob: -5.851539611816406
    6. 'i' → logprob: -5.976539611816406
    7. 'ing' → logprob: -6.476539611816406
    8. 'ignes' → logprob: -6.601539611816406
    9. 'sign' → logprob: -7.101539611816406
    10. '

' → logprob: -7.226539611816406

Token 296: ' les' (ID: 1341)
  Prédit: ' colors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' colors' → logprob: -0.27132630348205566
    2. ' ' → logprob: -2.1463263034820557
    3. ' couleurs' → logprob: -3.5213263034820557
    4. '_colors' → logprob: -3.5213263034820557
    5. 'colors' → logprob: -4.146326065063477
    6. '   ' → logprob: -4.646326065063477
    7. ' color' → logprob: -4.646326065063477
    8. ' a' → logprob: -4.896326065063477
    9. ')' → logprob: -5.021326065063477
    10. ' colores' → logprob: -6.396326065063477

Token 297: ' couleurs' (ID: 54001)
  Prédit: ' couleurs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' couleurs' → logprob: -0.21897222101688385
    2. ' colors' → logprob: -1.7189722061157227
    3. 'colors' → logprob: -4.593972206115723
    4. 'cou' → logprob: -5.343972206115723
    5. ' color' → logprob: -6.968972206115723
    6. ' ' → logprob: -7.343972206115723
    7. ' couleur' → logprob: -7.718972206115723
    8. ' colores' → logprob: -9.218972206115723
    9. 'color' → logprob: -9.343972206115723
    10. '_colors' → logprob: -9.718972206115723

Token 298: ' aux' (ID: 5850)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0360894203186035
    2. '(' → logprob: -1.5360894203186035
    3. '(E' → logprob: -1.6610894203186035
    4. ' aux' → logprob: -2.0360894203186035
    5. ' ' → logprob: -3.5360894203186035
    6. ',' → logprob: -3.6610894203186035
    7. '   ' → logprob: -4.6610894203186035
    8. '_b' → logprob: -5.1610894203186035
    9. '_colors' → logprob: -5.1610894203186035
    10. ' to' → logprob: -5.5360894203186035

Token 299: ' somm' (ID: 44830)
  Prédit: ' nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nodes' → logprob: -0.7251487970352173
    2. ' voisins' → logprob: -0.9751487970352173
    3. ' neighbors' → logprob: -2.6001486778259277
    4. ' noe' → logprob: -3.3501486778259277
    5. ' somm' → logprob: -3.9751486778259277
    6. ' voisin' → logprob: -5.975148677825928
    7. 'neighbors' → logprob: -5.975148677825928
    8. ' n' → logprob: -6.725148677825928
    9. ' sommet' → logprob: -6.850148677825928
    10. 'nodes' → logprob: -6.850148677825928

Token 300: 'ets' (ID: 1719)
  Prédit: 'ets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ets' → logprob: -0.7661871314048767
    2. 'e' → logprob: -1.7661871910095215
    3. 'è' → logprob: -1.8911871910095215
    4. 'et' → logprob: -2.5161871910095215
    5. '   ' → logprob: -3.2661871910095215
    6. 'a' → logprob: -3.6411871910095215
    7. 'aux' → logprob: -4.0161871910095215
    8. 'es' → logprob: -4.7661871910095215
    9. ')' → logprob: -5.6411871910095215
    10. 'à' → logprob: -5.8911871910095215

Token 301: ' du' (ID: 1462)
  Prédit: ' en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.5035942196846008
    2. '   ' → logprob: -2.128594160079956
    3. ' à' → logprob: -2.628594160079956
    4. ',' → logprob: -2.753594160079956
    5. ' using' → logprob: -3.628594160079956
    6. '(E' → logprob: -3.878594160079956
    7. '(' → logprob: -4.003594398498535
    8. ' via' → logprob: -4.128594398498535
    9. ' ' → logprob: -4.253594398498535
    10. '.' → logprob: -4.503594398498535

Token 302: ' grap' (ID: 60955)
  Prédit: 'gr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gr' → logprob: -0.30531045794487
    2. ' grap' → logprob: -1.5553104877471924
    3. 'graph' → logprob: -3.6803104877471924
    4. ' graph' → logprob: -3.6803104877471924
    5. 'E' → logprob: -7.055310249328613
    6. ' gr' → logprob: -8.180310249328613
    7. ' E' → logprob: -8.430310249328613
    8. '   ' → logprob: -9.930310249328613
    9. 'g' → logprob: -10.680310249328613
    10. '```' → logprob: -10.805310249328613

Token 303: 'he' (ID: 273)
  Prédit: 'he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.012397916987538338
    2. 'rap' → logprob: -5.012397766113281
    3. 'aphe' → logprob: -5.262397766113281
    4. 'h' → logprob: -8.137397766113281
    5. 'raph' → logprob: -9.262397766113281
    6. 'hé' → logprob: -10.387397766113281
    7. 'phe' → logprob: -10.887397766113281
    8. 'rape' → logprob: -11.637397766113281
    9. 'r' → logprob: -12.137397766113281
    10. 'Rap' → logprob: -12.512397766113281

Token 304: ' en' (ID: 469)
  Prédit: ' en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.6384751796722412
    2. ',' → logprob: -1.5134751796722412
    3. '   ' → logprob: -1.8884751796722412
    4. ' à' → logprob: -2.763475179672241
    5. ' using' → logprob: -4.38847541809082
    6. '(E' → logprob: -4.63847541809082
    7. ' via' → logprob: -5.88847541809082
    8. '.' → logprob: -6.38847541809082
    9. ':' → logprob: -6.88847541809082
    10. ')' → logprob: -7.01347541809082

Token 305: ' effect' (ID: 3159)
  Prédit: ' utilisant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' utilisant' → logprob: -0.030651947483420372
    2. ' breadth' → logprob: -5.030652046203613
    3. ' part' → logprob: -5.155652046203613
    4. ' bfs' → logprob: -5.530652046203613
    5. ' niveau' → logprob: -5.655652046203613
    6. ' largeur' → logprob: -5.780652046203613
    7. ' using' → logprob: -6.155652046203613
    8. ' BFS' → logprob: -6.905652046203613
    9. 'b' → logprob: -7.155652046203613
    10. ' queue' → logprob: -7.530652046203613

Token 306: 'uant' (ID: 44411)
  Prédit: 'uant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uant' → logprob: -0.005333728156983852
    2. 'u' → logprob: -5.25533390045166
    3. 'uent' → logprob: -9.63033390045166
    4. 'uer' → logprob: -11.50533390045166
    5. 'uan' → logprob: -11.63033390045166
    6. 'ue' → logprob: -12.13033390045166
    7. ' u' → logprob: -12.38033390045166
    8. 'ué' → logprob: -14.13033390045166
    9. '   ' → logprob: -14.38033390045166
    10. 'uée' → logprob: -14.50533390045166

Token 307: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.4098440408706665
    2. ' une' → logprob: -1.2848440408706665
    3. ' BFS' → logprob: -3.534843921661377
    4. ' la' → logprob: -4.659843921661377
    5. ' a' → logprob: -5.034843921661377
    6. 'b' → logprob: -5.534843921661377
    7. ' bfs' → logprob: -5.784843921661377
    8. 'B' → logprob: -6.159843921661377
    9. 'une' → logprob: -6.909843921661377
    10. '   ' → logprob: -6.909843921661377

Token 308: ' parcours' (ID: 62625)
  Prédit: ' BFS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' BFS' → logprob: -0.6528903245925903
    2. ' bfs' → logprob: -1.1528903245925903
    3. ' breadth' → logprob: -2.277890205383301
    4. 'b' → logprob: -3.277890205383301
    5. ' parcours' → logprob: -4.152890205383301
    6. 'B' → logprob: -5.402890205383301
    7. 'bread' → logprob: -7.277890205383301
    8. ' traversal' → logprob: -7.402890205383301
    9. '   ' → logprob: -7.777890205383301
    10. 'par' → logprob: -8.1528902053833

Token 309: ' BFS' (ID: 190016)
  Prédit: ' en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.3344361186027527
    2. ' breadth' → logprob: -1.8344361782073975
    3. 'b' → logprob: -2.9594361782073975
    4. '_' → logprob: -3.3344361782073975
    5. 'en' → logprob: -4.959435939788818
    6. ' large' → logprob: -5.084435939788818
    7. ' largeur' → logprob: -5.209435939788818
    8. '_b' → logprob: -5.584435939788818
    9. 'B' → logprob: -5.709435939788818
    10. ' BFS' → logprob: -6.084435939788818

Token 310: ' à' (ID: 1221)
  Prédit: '(E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(E' → logprob: -1.0220645666122437
    2. '(' → logprob: -1.5220645666122437
    3. ',' → logprob: -2.022064685821533
    4. '.' → logprob: -2.022064685821533
    5. '   ' → logprob: -2.272064685821533
    6. '(
' → logprob: -4.022064685821533
    7. ':' → logprob: -4.272064685821533
    8. ' (' → logprob: -4.522064685821533
    9. 'def' → logprob: -5.647064685821533
    10. '.
' → logprob: -7.147064685821533

Token 311: ' partir' (ID: 12100)
  Prédit: ' partir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' partir' → logprob: -0.3135058581829071
    2. 'part' → logprob: -1.3135058879852295
    3. ' partire' → logprob: -9.313506126403809
    4. 'p' → logprob: -9.438506126403809
    5. 'par' → logprob: -10.938506126403809
    6. 'l' → logprob: -11.813506126403809
    7. 'from' → logprob: -11.938506126403809
    8. 'tr' → logprob: -12.313506126403809
    9. '_part' → logprob: -12.563506126403809
    10. 'large' → logprob: -12.813506126403809

Token 312: ' d' (ID: 272)
  Prédit: ' du'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' du' → logprob: -0.1452759951353073
    2. ' d' → logprob: -2.6452760696411133
    3. ' de' → logprob: -3.1452760696411133
    4. ' ' → logprob: -5.145276069641113
    5. 'd' → logprob: -5.395276069641113
    6. 'def' → logprob: -5.770276069641113
    7. 'du' → logprob: -6.520276069641113
    8. ' des' → logprob: -6.645276069641113
    9. ' start' → logprob: -6.770276069641113
    10. '(start' → logprob: -7.270276069641113

Token 313: ''un' (ID: 9788)
  Prédit: ' start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' start' → logprob: -0.1875903457403183
    2. 'start' → logprob: -2.4375903606414795
    3. ' ' → logprob: -2.8125903606414795
    4. '=start' → logprob: -4.8125901222229
    5. '(start' → logprob: -5.4375901222229
    6. ' a' → logprob: -5.9375901222229
    7. 'a' → logprob: -6.5625901222229
    8. ' un' → logprob: -6.6875901222229
    9. '[start' → logprob: -6.6875901222229
    10. ' the' → logprob: -6.9375901222229

Token 314: ' sommet' (ID: 130502)
  Prédit: ' sommet'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sommet' → logprob: -0.661349892616272
    2. ' node' → logprob: -0.911349892616272
    3. ' noe' → logprob: -3.2863497734069824
    4. ' start' → logprob: -4.536349773406982
    5. ' som' → logprob: -4.786349773406982
    6. ' ' → logprob: -4.911349773406982
    7. 'n' → logprob: -5.036349773406982
    8. ' n' → logprob: -5.536349773406982
    9. 'node' → logprob: -6.286349773406982
    10. ' somm' → logprob: -6.536349773406982

Token 315: ' donné' (ID: 52079)
  Prédit: ' donné'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' donné' → logprob: -0.43240898847579956
    2. ' de' → logprob: -1.8074090480804443
    3. ' given' → logprob: -2.6824090480804443
    4. '.' → logprob: -2.9324090480804443
    5. ' donnée' → logprob: -3.6824090480804443
    6. ' start' → logprob: -4.307408809661865
    7. ' ' → logprob: -5.307408809661865
    8. ',' → logprob: -5.807408809661865
    9. ' (' → logprob: -5.807408809661865
    10. 'de' → logprob: -6.057408809661865

Token 316: '.

' (ID: 364)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9558122754096985
    2. '):' → logprob: -1.0808122158050537
    3. ':' → logprob: -1.8308122158050537
    4. '   ' → logprob: -2.9558122158050537
    5. '):
' → logprob: -3.0808122158050537
    6. '.' → logprob: -5.205812454223633
    7. ' :' → logprob: -5.580812454223633
    8. ':
' → logprob: -5.830812454223633
    9. 'def' → logprob: -6.205812454223633
    10. ')' → logprob: -6.330812454223633

Token 317: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0012197628384456038
    2. ')' → logprob: -6.876219749450684
    3. ' ' → logprob: -10.126219749450684
    4. '
' → logprob: -10.376219749450684
    5. '    
' → logprob: -10.376219749450684
    6. ':' → logprob: -11.251219749450684
    7. ' """' → logprob: -11.626219749450684
    8. ' )' → logprob: -11.626219749450684
    9. ' 
' → logprob: -11.626219749450684
    10. '    ' → logprob: -12.126219749450684

Token 318: ' Args' (ID: 39185)
  Prédit: ' queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' queue' → logprob: -0.3994074761867523
    2. '   ' → logprob: -1.1494075059890747
    3. 'queue' → logprob: -5.399407386779785
    4. ' from' → logprob: -5.524407386779785
    5. ' visited' → logprob: -5.899407386779785
    6. 'from' → logprob: -7.024407386779785
    7. 'visited' → logprob: -8.649407386779785
    8. 'import' → logprob: -10.149407386779785
    9. ' import' → logprob: -10.149407386779785
    10. ' ' → logprob: -11.024407386779785

Token 319: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16692565381526947
    2. '):' → logprob: -2.1669256687164307
    3. ',' → logprob: -3.5419256687164307
    4. '   ' → logprob: -5.166925430297852
    5. '=' → logprob: -5.916925430297852
    6. '):
' → logprob: -7.666925430297852
    7. ' :' → logprob: -7.666925430297852
    8. '(' → logprob: -8.541925430297852
    9. ')' → logprob: -8.541925430297852
    10. ':
' → logprob: -8.666925430297852

Token 320: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.027981508523225784
    2. '    ' → logprob: -4.027981281280518
    3. ' colors' → logprob: -5.652981281280518
    4. '       ' → logprob: -6.277981281280518
    5. ' ' → logprob: -6.402981281280518
    6. ' E' → logprob: -7.152981281280518
    7. ' graph' → logprob: -7.902981281280518
    8. '```' → logprob: -8.027981758117676
    9. 'colors' → logprob: -8.277981758117676
    10. ')' → logprob: -8.527981758117676

Token 321: ' E' (ID: 457)
  Prédit: ' E'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' E' → logprob: -0.636160135269165
    2. 'E' (adapté à ' E') → logprob: -0.761160135269165
    3. ' colors' → logprob: -6.511159896850586
    4. '   ' → logprob: -7.011159896850586
    5. 'colors' → logprob: -7.011159896850586
    6. ' list' → logprob: -10.136159896850586
    7. 'from' → logprob: -10.261159896850586
    8. ' graph' → logprob: -10.636159896850586
    9. 'List' → logprob: -10.636159896850586
    10. 'graph' → logprob: -10.948659896850586

Token 322: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01434578001499176
    2. ' ,' → logprob: -4.389345645904541
    3. ' (' → logprob: -7.014345645904541
    4. ',List' → logprob: -7.264345645904541
    5. '[List' → logprob: -9.8893461227417
    6. '   ' → logprob: -10.0143461227417
    7. '(List' → logprob: -10.1393461227417
    8. ':' → logprob: -10.5143461227417
    9. ')' → logprob: -11.0143461227417
    10. ',list' → logprob: -11.2643461227417

Token 323: 'List' (ID: 950)
  Prédit: 'List'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.0011285445652902126
    2. 'list' → logprob: -7.626128673553467
    3. ' List' → logprob: -7.876128673553467
    4. ')' → logprob: -8.376128196716309
    5. '   ' → logprob: -11.126128196716309
    6. ' list' → logprob: -11.876128196716309
    7. '[List' → logprob: -12.626128196716309
    8. 'E' → logprob: -13.376128196716309
    9. '_list' → logprob: -14.501128196716309
    10. '):
' → logprob: -14.626128196716309

Token 324: '[List' (ID: 113982)
  Prédit: '[List'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[List' → logprob: -0.0015260485233739018
    2. '[list' → logprob: -6.75152587890625
    3. '[int' → logprob: -8.12652587890625
    4. '<List' → logprob: -10.87652587890625
    5. ',List' → logprob: -11.37652587890625
    6. '[' → logprob: -11.62652587890625
    7. ')' → logprob: -12.00152587890625
    8. '):' → logprob: -12.87652587890625
    9. ',' → logprob: -13.00152587890625
    10. '```' → logprob: -13.25152587890625

Token 325: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -1.2664456789934775e-06
    2. 'int' → logprob: -14.250000953674316
    3. '<int' → logprob: -14.625000953674316
    4. '[' → logprob: -16.500001907348633
    5. ']int' → logprob: -17.500001907348633
    6. '```' → logprob: -17.875001907348633
    7. '=int' → logprob: -18.000001907348633
    8. ' int' → logprob: -18.625001907348633
    9. ',int' → logprob: -18.750001907348633
    10. '
' → logprob: -18.875001907348633

Token 326: ']]' (ID: 8928)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -2.522638169466518e-05
    2. ']]' → logprob: -10.875024795532227
    3. ']])' → logprob: -12.125024795532227
    4. 'int' → logprob: -14.875024795532227
    5. '<int' → logprob: -16.000024795532227
    6. ']int' → logprob: -16.125024795532227
    7. '])' → logprob: -16.250024795532227
    8. ']' → logprob: -16.375024795532227
    9. '[Int' → logprob: -16.750024795532227
    10. ']):' → logprob: -17.625024795532227

Token 327: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.003261011792346835
    2. ']):' → logprob: -6.753261089324951
    3. '):
' → logprob: -7.253261089324951
    4. ')' → logprob: -7.878261089324951
    5. ']:' → logprob: -8.003260612487793
    6. '[int' → logprob: -8.128260612487793
    7. ',' → logprob: -8.503260612487793
    8. ':' → logprob: -9.753260612487793
    9. '),' → logprob: -10.003260612487793
    10. '   ' → logprob: -10.628260612487793

Token 328: ' Liste' (ID: 61030)
  Prédit: ' deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' deque' → logprob: -1.1920231580734253
    2. ' list' → logprob: -1.4420231580734253
    3. ' collections' → logprob: -1.6920231580734253
    4. ' from' → logprob: -2.192023277282715
    5. 'from' → logprob: -3.317023277282715
    6. ' List' → logprob: -3.442023277282715
    7. 'deque' → logprob: -3.942023277282715
    8. '[]' → logprob: -4.192023277282715
    9. ' queue' → logprob: -4.817023277282715
    10. '```' → logprob: -4.942023277282715

Token 329: ' d' (ID: 272)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5304765701293945
    2. ' de' → logprob: -2.5304765701293945
    3. '[int' → logprob: -2.5304765701293945
    4. ')' → logprob: -2.7804765701293945
    5. '<|end|>' → logprob: -2.9054765701293945
    6. ' des' → logprob: -3.1554765701293945
    7. ' of' → logprob: -3.2804765701293945
    8. '[
' → logprob: -4.2804765701293945
    9. 'de' → logprob: -5.1554765701293945
    10. 'd' → logprob: -5.1554765701293945

Token 330: ''ad' (ID: 36162)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -1.1479084491729736
    2. ''ad' → logprob: -1.2729084491729736
    3. '_ad' → logprob: -1.3979084491729736
    4. '_adj' → logprob: -2.0229084491729736
    5. 'd' → logprob: -4.0229082107543945
    6. ' adjacency' → logprob: -6.1479082107543945
    7. ' d' → logprob: -7.0229082107543945
    8. 'ad' → logprob: -7.0229082107543945
    9. '’ad' → logprob: -7.8979082107543945
    10. '_d' → logprob: -8.397908210754395

Token 331: 'jac' (ID: 77250)
  Prédit: 'jac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jac' → logprob: -1.1875571544806007e-05
    2. 'j' → logprob: -11.375011444091797
    3. ' jac' → logprob: -16.000011444091797
    4. '
' → logprob: -16.125011444091797
    5. 'adj' → logprob: -16.125011444091797
    6. 'jc' → logprob: -17.500011444091797
    7. '_j' → logprob: -18.250011444091797
    8. 'Jac' → logprob: -18.250011444091797
    9. '[j' → logprob: -18.625011444091797
    10. '

' → logprob: -19.000011444091797

Token 332: 'ence' (ID: 1082)
  Prédit: 'ac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ac' → logprob: -0.048722829669713974
    2. 'ence' → logprob: -3.423722743988037
    3. 'acency' → logprob: -5.048722743988037
    4. 'ance' → logprob: -6.298722743988037
    5. 'j' → logprob: -6.798722743988037
    6. ']' → logprob: -7.048722743988037
    7. '[' → logprob: -7.048722743988037
    8. '
' → logprob: -7.673722743988037
    9. 'ace' → logprob: -8.048723220825195
    10. 'h' → logprob: -8.048723220825195

Token 333: ' du' (ID: 1462)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.23928716778755188
    2. '   ' → logprob: -2.2392871379852295
    3. '):' → logprob: -3.2392871379852295
    4. '):
' → logprob: -3.4892871379852295
    5. '
' → logprob: -3.9892871379852295
    6. ')
' → logprob: -5.114287376403809
    7. ',' → logprob: -5.239287376403809
    8. '```' → logprob: -6.239287376403809
    9. ',
' → logprob: -7.364287376403809
    10. ' ' → logprob: -7.489287376403809

Token 334: ' grap' (ID: 60955)
  Prédit: 'gr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gr' → logprob: -0.03777221962809563
    2. ' grap' → logprob: -3.5377721786499023
    3. 'graph' → logprob: -5.037772178649902
    4. ' graph' → logprob: -6.537772178649902
    5. ')' → logprob: -10.787772178649902
    6. '```' → logprob: -11.662772178649902
    7. ' E' → logprob: -12.537772178649902
    8. ' ' → logprob: -12.537772178649902
    9. 'E' → logprob: -12.662772178649902
    10. ']' → logprob: -12.787772178649902

Token 335: 'he' (ID: 273)
  Prédit: 'he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.759160041809082
    2. 'r' → logprob: -0.884160041809082
    3. 'rap' → logprob: -2.259160041809082
    4. 'raph' → logprob: -5.259160041809082
    5. 'che' → logprob: -5.634160041809082
    6. 'phe' → logprob: -6.009160041809082
    7. 're' → logprob: -6.509160041809082
    8. 'aphe' → logprob: -8.384160041809082
    9. 'ro' → logprob: -9.009160041809082
    10. ']' → logprob: -9.134160041809082

Token 336: '.
' (ID: 558)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07714588940143585
    2. ')
' → logprob: -2.95214581489563
    3. '   ' → logprob: -4.077146053314209
    4. '):
' → logprob: -5.577146053314209
    5. ',' → logprob: -7.077146053314209
    6. '):' → logprob: -8.57714557647705
    7. ',
' → logprob: -9.20214557647705
    8. '),' → logprob: -10.20214557647705
    9. ').' → logprob: -10.45214557647705
    10. ')
' → logprob: -10.82714557647705

Token 337: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.028594769537448883
    2. ' 
' → logprob: -4.153594970703125
    3. ')' → logprob: -5.653594970703125
    4. ' ' → logprob: -6.028594970703125
    5. '
' → logprob: -6.403594970703125
    6. '    
' → logprob: -6.403594970703125
    7. '```' → logprob: -6.903594970703125
    8. ' )' → logprob: -7.778594970703125
    9. ',' → logprob: -7.778594970703125
    10. '  
' → logprob: -8.528594970703125

Token 338: ' colors' (ID: 10803)
  Prédit: ' colors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' colors' → logprob: -0.23356343805789948
    2. 'colors' (adapté à ' colors') → logprob: -1.6085634231567383
    3. '   ' → logprob: -5.608563423156738
    4. 'from' → logprob: -6.108563423156738
    5. ' from' → logprob: -6.858563423156738
    6. 'import' → logprob: -7.483563423156738
    7. ' import' → logprob: -8.233563423156738
    8. ' queue' → logprob: -9.358563423156738
    9. 'color' → logprob: -10.233563423156738
    10. '```' → logprob: -10.358563423156738

Token 339: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05700306221842766
    2. ')' → logprob: -3.0570030212402344
    3. ':' → logprob: -5.557003021240234
    4. '):' → logprob: -5.932003021240234
    5. ' =' → logprob: -7.807003021240234
    6. ' )' → logprob: -7.932003021240234
    7. ' ' → logprob: -8.182003021240234
    8. '   ' → logprob: -8.182003021240234
    9. ' ,' → logprob: -9.057003021240234
    10. '[' → logprob: -9.182003021240234

Token 340: 'List' (ID: 950)
  Prédit: 'List'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.2839769423007965
    2. ' List' → logprob: -1.5339769124984741
    3. ')' → logprob: -4.033977031707764
    4. '[List' → logprob: -4.408977031707764
    5. ' )' → logprob: -7.158977031707764
    6. 'Dict' → logprob: -8.033976554870605
    7. '[int' → logprob: -8.533976554870605
    8. 'dict' → logprob: -9.158976554870605
    9. '[' → logprob: -9.408976554870605
    10. ' dict' → logprob: -9.783976554870605

Token 341: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -5.080963092041202e-06
    2. '[' → logprob: -13.375004768371582
    3. '<int' → logprob: -13.500004768371582
    4. '):' → logprob: -14.000004768371582
    5. '[List' → logprob: -15.000004768371582
    6. '(int' → logprob: -15.125004768371582
    7. '[Int' → logprob: -15.250004768371582
    8. ')' → logprob: -15.625004768371582
    9. '```' → logprob: -15.875004768371582
    10. '=int' → logprob: -17.5000057220459

Token 342: ']):' (ID: 60705)
  Prédit: ']):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']):' → logprob: -0.04615446925163269
    2. '])' → logprob: -3.171154499053955
    3. ']):
' → logprob: -5.921154499053955
    4. ']' → logprob: -8.046154022216797
    5. ' ]' → logprob: -9.546154022216797
    6. ')' → logprob: -11.046154022216797
    7. ' ])' → logprob: -11.046154022216797
    8. '],' → logprob: -11.421154022216797
    9. '[' → logprob: -11.796154022216797
    10. '):' → logprob: -12.046154022216797

Token 343: ' Liste' (ID: 61030)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0399765968322754
    2. ' List' → logprob: -1.0399765968322754
    3. 'List' → logprob: -1.9149765968322754
    4. '[int' → logprob: -2.9149765968322754
    5. ' list' → logprob: -3.7899765968322754
    6. ' [' → logprob: -3.9149765968322754
    7. '   ' → logprob: -4.414976596832275
    8. '[List' → logprob: -4.664976596832275
    9. '[]' → logprob: -5.289976596832275
    10. ' None' → logprob: -5.414976596832275

Token 344: ' de' (ID: 334)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7649791240692139
    2. '[int' → logprob: -1.1399791240692139
    3. ' of' → logprob: -2.264979124069214
    4. ')' → logprob: -4.014979362487793
    5. ' des' → logprob: -4.014979362487793
    6. ' =' → logprob: -4.014979362487793
    7. '=' → logprob: -4.014979362487793
    8. ' de' → logprob: -4.264979362487793
    9. ',' → logprob: -5.264979362487793
    10. '_' → logprob: -5.639979362487793

Token 345: ' couleurs' (ID: 54001)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.2122475504875183
    2. 'int' → logprob: -1.837247610092163
    3. 'colors' → logprob: -4.462247371673584
    4. ' colors' → logprob: -4.587247371673584
    5. ' couleurs' → logprob: -4.837247371673584
    6. 'color' → logprob: -7.337247371673584
    7. ' couleur' → logprob: -7.587247371673584
    8. ' color' → logprob: -7.837247371673584
    9. ' current' → logprob: -8.712247848510742
    10. '[int' → logprob: -9.087247848510742

Token 346: ' tri' (ID: 12665)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08690831065177917
    2. ']' → logprob: -3.4619083404541016
    3. ',' → logprob: -4.461908340454102
    4. ' )' → logprob: -4.586908340454102
    5. ' =' → logprob: -4.836908340454102
    6. '   ' → logprob: -5.086908340454102
    7. ' ]' → logprob: -5.336908340454102
    8. ' ' → logprob: -5.961908340454102
    9. '_' → logprob: -6.211908340454102
    10. '=' → logprob: -6.836908340454102

Token 347: 'ées' (ID: 5161)
  Prédit: 'ée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.6192043423652649
    2. 'v' → logprob: -1.6192042827606201
    3. 'st' → logprob: -1.9942042827606201
    4. 'ées' → logprob: -3.11920428276062
    5. 'ed' → logprob: -3.24420428276062
    6. 'é' → logprob: -4.619204521179199
    7. 'm' → logprob: -4.994204521179199
    8. '[' → logprob: -5.119204521179199
    9. 'nées' → logprob: -5.119204521179199
    10. 'née' → logprob: -5.744204521179199

Token 348: ' à' (ID: 1221)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.765560507774353
    2. ']' → logprob: -2.1405606269836426
    3. ' ' → logprob: -2.2655606269836426
    4. ',' → logprob: -2.3905606269836426
    5. ' ]' → logprob: -2.6405606269836426
    6. ' )' → logprob: -3.5155606269836426
    7. '   ' → logprob: -3.7655606269836426
    8. ' ,' → logprob: -3.8905606269836426
    9. ' (' → logprob: -3.8905606269836426
    10. '(' → logprob: -4.765560626983643

Token 349: ' assign' (ID: 14975)
  Prédit: 'assign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'assign' → logprob: -0.38560250401496887
    2. 'attrib' → logprob: -2.1356024742126465
    3. 'aff' → logprob: -3.0106024742126465
    4. ' assign' → logprob: -3.2606024742126465
    5. ' attrib' → logprob: -3.7606024742126465
    6. 'len' → logprob: -4.5106024742126465
    7. 'part' → logprob: -4.5106024742126465
    8. '[]' → logprob: -4.6356024742126465
    9. 'assigned' → logprob: -4.7606024742126465
    10. '[' → logprob: -4.8856024742126465

Token 350: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.014316628687083721
    2. 'uer' → logprob: -4.264316558837891
    3. 'u' → logprob: -8.88931655883789
    4. '   ' → logprob: -12.13931655883789
    5. '```' → logprob: -13.13931655883789
    6. 'ées' → logprob: -13.63931655883789
    7. 'ue' → logprob: -14.26431655883789
    8. 'uée' → logprob: -14.26431655883789
    9. ' er' → logprob: -14.63931655883789
    10. 'é' → logprob: -14.76431655883789

Token 351: ' (' (ID: 350)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06594915688037872
    2. ',' → logprob: -3.3159492015838623
    3. ' )' → logprob: -4.440948963165283
    4. ' aux' → logprob: -5.940948963165283
    5. '):
' → logprob: -6.190948963165283
    6. '   ' → logprob: -6.190948963165283
    7. '):' → logprob: -6.315948963165283
    8. ')
' → logprob: -6.565948963165283
    9. '[' → logprob: -6.690948963165283
    10. '.' → logprob: -6.815948963165283

Token 352: 'long' (ID: 8431)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.44510093331336975
    2. '])' → logprob: -1.3201009035110474
    3. ' )' → logprob: -3.570101022720337
    4. ' ])' → logprob: -3.945101022720337
    5. '),' → logprob: -5.070100784301758
    6. ',' → logprob: -5.320100784301758
    7. ' None' → logprob: -5.695100784301758
    8. 'None' → logprob: -5.820100784301758
    9. ' pour' → logprob: -6.070100784301758
    10. ' des' → logprob: -6.070100784301758

Token 353: 'ueur' (ID: 43728)
  Prédit: 'ueur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ueur' → logprob: -0.011385434307157993
    2. ']' → logprob: -5.386385440826416
    3. 'u' → logprob: -6.136385440826416
    4. ')' → logprob: -6.886385440826416
    5. 'er' → logprob: -7.511385440826416
    6. '=' → logprob: -7.636385440826416
    7. 'eur' → logprob: -7.761385440826416
    8. 'ue' → logprob: -7.886385440826416
    9. '[' → logprob: -8.511384963989258
    10. 'th' → logprob: -8.636384963989258

Token 354: ' N' (ID: 478)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.29562991857528687
    2. ' )' → logprob: -1.5456299781799316
    3. '=' → logprob: -3.9206299781799316
    4. ' =' → logprob: -5.295629978179932
    5. '=len' → logprob: -5.795629978179932
    6. '>=' → logprob: -6.045629978179932
    7. ' >=' → logprob: -6.170629978179932
    8. ' des' → logprob: -6.295629978179932
    9. '>' → logprob: -6.295629978179932
    10. ' ==' → logprob: -6.920629978179932

Token 355: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004305022768676281
    2. '):' → logprob: -6.504304885864258
    3. ')
' → logprob: -7.129304885864258
    4. '+' → logprob: -7.254304885864258
    5. ' )' → logprob: -7.879304885864258
    6. ').' → logprob: -8.254304885864258
    7. '):
' → logprob: -9.129304885864258
    8. 'def' → logprob: -9.129304885864258
    9. '   ' → logprob: -10.004304885864258
    10. ',' → logprob: -10.129304885864258

Token 356: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00471361493691802
    2. ')' → logprob: -6.254713535308838
    3. '
' → logprob: -6.254713535308838
    4. ' queue' → logprob: -8.129714012145996
    5. '    
' → logprob: -8.504714012145996
    6. '```' → logprob: -9.629714012145996
    7. 'import' → logprob: -9.754714012145996
    8. ',' → logprob: -9.754714012145996
    9. 'from' → logprob: -10.379714012145996
    10. 'queue' → logprob: -10.629714012145996

Token 357: ' start' (ID: 1604)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.4506995379924774
    2. 'visited' → logprob: -1.2006995677947998
    3. 'queue' → logprob: -4.200699329376221
    4. '   ' → logprob: -4.325699329376221
    5. ' from' → logprob: -4.575699329376221
    6. ' visited' → logprob: -4.700699329376221
    7. 'start' (adapté à ' start') → logprob: -5.200699329376221
    8. 'import' → logprob: -5.575699329376221
    9. 'n' → logprob: -5.700699329376221
    10. ' queue' → logprob: -7.950699329376221

Token 358: ' (' (ID: 350)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0007948547718115151
    2. '):
' → logprob: -7.875794887542725
    3. ':' → logprob: -8.250794410705566
    4. ')' → logprob: -9.500794410705566
    5. ' ):' → logprob: -10.125794410705566
    6. ',' → logprob: -10.250794410705566
    7. '):
' → logprob: -13.500794410705566
    8. '   ' → logprob: -14.625794410705566
    9. '):

' → logprob: -14.875794410705566
    10. ':int' → logprob: -15.000794410705566

Token 359: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.14806567132472992
    2. ')' → logprob: -2.5230655670166016
    3. '):' → logprob: -3.0230655670166016
    4. ' int' → logprob: -4.898065567016602
    5. ':int' → logprob: -7.523065567016602
    6. '[int' → logprob: -8.273065567016602
    7. ' ):' → logprob: -8.648065567016602
    8. '):
' → logprob: -8.773065567016602
    9. ' )' → logprob: -10.398065567016602
    10. ':' → logprob: -10.648065567016602

Token 360: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0037830930668860674
    2. ')' → logprob: -5.878783226013184
    3. '):
' → logprob: -7.003783226013184
    4. ' ):' → logprob: -9.628783226013184
    5. '   ' → logprob: -13.503783226013184
    6. '):
' → logprob: -14.253783226013184
    7. ':' → logprob: -14.628783226013184
    8. ',' → logprob: -15.128783226013184
    9. ' )' → logprob: -15.253783226013184
    10. '):

' → logprob: -15.753783226013184

Token 361: ' Som' (ID: 12116)
  Prédit: ' start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' start' → logprob: -0.083640456199646
    2. 'start' → logprob: -2.5836405754089355
    3. ' int' → logprob: -6.3336405754089355
    4. ')' → logprob: -7.0836405754089355
    5. ' starting' → logprob: -7.2086405754089355
    6. 'Starting' → logprob: -7.8336405754089355
    7. 'int' → logprob: -8.708640098571777
    8. ' ' → logprob: -8.833640098571777
    9. 'Start' → logprob: -8.958640098571777
    10. ' Le' → logprob: -9.583640098571777

Token 362: 'met' (ID: 3001)
  Prédit: 'met'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'met' → logprob: -0.10462839901447296
    2. 'm' → logprob: -2.979628324508667
    3. 'mit' → logprob: -4.979628562927246
    4. 'ma' → logprob: -4.979628562927246
    5. 'me' → logprob: -5.604628562927246
    6. ')' → logprob: -5.604628562927246
    7. ' ' → logprob: -5.854628562927246
    8. 'it' → logprob: -5.854628562927246
    9. 't' → logprob: -5.979628562927246
    10. 'et' → logprob: -6.229628562927246

Token 363: ' de' (ID: 334)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.20743022859096527
    2. '):
' → logprob: -1.7074302434921265
    3. '   ' → logprob: -5.707430362701416
    4. ')' → logprob: -6.332430362701416
    5. ':' → logprob: -7.582430362701416
    6. 'à' → logprob: -9.582429885864258
    7. 'def' → logprob: -9.707429885864258
    8. '):
' → logprob: -9.832429885864258
    9. ' à' → logprob: -10.457429885864258
    10. '=' → logprob: -10.457429885864258

Token 364: ' départ' (ID: 32693)
  Prédit: ' départ'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' départ' → logprob: -0.3277628421783447
    2. 'dé' → logprob: -1.8277628421783447
    3. ' ' → logprob: -3.2027628421783447
    4. ' start' → logprob: -3.3277628421783447
    5. 'd' → logprob: -3.7027628421783447
    6. ' dém' → logprob: -5.702762603759766
    7. ')' → logprob: -5.827762603759766
    8. '   ' → logprob: -6.077762603759766
    9. 'depart' → logprob: -6.452762603759766
    10. ' d' → logprob: -6.577762603759766

Token 365: ' pour' (ID: 1930)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07062225788831711
    2. '):
' → logprob: -2.695622205734253
    3. '):
' → logprob: -8.070622444152832
    4. ')' → logprob: -8.445622444152832
    5. '   ' → logprob: -8.820622444152832
    6. '):

' → logprob: -12.445622444152832
    7. ',' → logprob: -13.320622444152832
    8. 'def' → logprob: -13.695622444152832
    9. ':' → logprob: -13.820622444152832
    10. ' ):' → logprob: -13.945622444152832

Token 366: ' le' (ID: 505)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.5799004435539246
    2. ' le' → logprob: -0.8299004435539246
    3. 'le' → logprob: -6.82990026473999
    4. ' l' → logprob: -6.95490026473999
    5. 'l' → logprob: -7.70490026473999
    6. ' ' → logprob: -7.95490026473999
    7. ' bfs' → logprob: -8.079900741577148
    8. '   ' → logprob: -8.329900741577148
    9. ' ' → logprob: -8.704900741577148
    10. 'b' → logprob: -9.079900741577148

Token 367: ' BFS' (ID: 190016)
  Prédit: ' BFS'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' BFS' → logprob: -0.7950811982154846
    2. 'B' → logprob: -1.7950811386108398
    3. 'par' → logprob: -1.7950811386108398
    4. 'b' → logprob: -1.7950811386108398
    5. ' bfs' → logprob: -3.42008113861084
    6. ' parcours' → logprob: -4.67008113861084
    7. ' traversal' → logprob: -5.54508113861084
    8. ' B' → logprob: -6.54508113861084
    9. '   ' → logprob: -7.29508113861084
    10. ' par' → logprob: -7.54508113861084

Token 368: '.

' (ID: 364)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07108312845230103
    2. '):
' → logprob: -2.6960830688476562
    3. ')' → logprob: -6.946083068847656
    4. '):
' → logprob: -9.196083068847656
    5. '   ' → logprob: -9.446083068847656
    6. '):

' → logprob: -13.696083068847656
    7. ' ):' → logprob: -14.196083068847656
    8. ',' → logprob: -14.571083068847656
    9. '
' → logprob: -15.571083068847656
    10. ':' → logprob: -15.571083068847656

Token 369: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005749013740569353
    2. '):
' → logprob: -5.755749225616455
    3. ')' → logprob: -6.505749225616455
    4. '):' → logprob: -8.130748748779297
    5. 'import' → logprob: -8.255748748779297
    6. '
' → logprob: -8.505748748779297
    7. '```' → logprob: -9.755748748779297
    8. 'from' → logprob: -9.880748748779297
    9. '    
' → logprob: -9.880748748779297
    10. ':' → logprob: -10.130748748779297

Token 370: ' Returns' (ID: 9609)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38490885496139526
    2. ' from' → logprob: -1.88490891456604
    3. 'from' → logprob: -1.88490891456604
    4. 'import' → logprob: -4.759908676147461
    5. ' queue' → logprob: -5.759908676147461
    6. 'queue' → logprob: -6.884908676147461
    7. ' import' → logprob: -7.009908676147461
    8. 'visited' → logprob: -7.259908676147461
    9. '```' → logprob: -7.759908676147461
    10. ' visited' → logprob: -7.759908676147461

Token 371: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.38887766003608704
    2. ' :' → logprob: -1.1388776302337646
    3. ' None' → logprob: -7.013877868652344
    4. ' :
' → logprob: -7.888877868652344
    5. '[' → logprob: -9.013877868652344
    6. ' ' → logprob: -9.138877868652344
    7. 'None' → logprob: -9.513877868652344
    8. '):' → logprob: -9.638877868652344
    9. ')' → logprob: -10.013877868652344
    10. '   ' → logprob: -10.138877868652344

Token 372: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0268017053604126
    2. 'None' → logprob: -1.1518017053604126
    3. ' None' → logprob: -1.5268017053604126
    4. '    ' → logprob: -2.901801586151123
    5. '"' → logprob: -3.151801586151123
    6. '    
' → logprob: -6.151801586151123
    7. ' 
' → logprob: -6.276801586151123
    8. '[' → logprob: -6.651801586151123
    9. ''' → logprob: -6.776801586151123
    10. '
' → logprob: -7.026801586151123

Token 373: ' Dict' (ID: 55179)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.429695188999176
    2. ' None' → logprob: -1.4296951293945312
    3. 'List' → logprob: -2.9296951293945312
    4. ' List' → logprob: -3.5546951293945312
    5. 'dict' → logprob: -4.429695129394531
    6. ' dict' → logprob: -5.179695129394531
    7. 'Dict' (adapté à ' Dict') → logprob: -5.429695129394531
    8. '   ' → logprob: -6.304695129394531
    9. 'int' → logprob: -6.929695129394531
    10. 'colors' → logprob: -7.054695129394531

Token 374: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.0019550370052456856
    2. '[' → logprob: -6.376955032348633
    3. '<|end|>' → logprob: -9.251955032348633
    4. '[
' → logprob: -9.751955032348633
    5. '{' → logprob: -10.376955032348633
    6. '<int' → logprob: -10.501955032348633
    7. '[str' → logprob: -10.876955032348633
    8. '[List' → logprob: -12.001955032348633
    9. '[Int' → logprob: -12.251955032348633
    10. '[Any' → logprob: -13.126955032348633

Token 375: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0014391618315130472
    2. ',int' → logprob: -6.751439094543457
    3. '[int' → logprob: -8.251439094543457
    4. ' ,' → logprob: -12.501439094543457
    5. 'int' → logprob: -13.376439094543457
    6. ']int' → logprob: -13.626439094543457
    7. ',List' → logprob: -14.001439094543457
    8. '<int' → logprob: -15.501439094543457
    9. ',
' → logprob: -15.501439094543457
    10. '   ' → logprob: -16.751440048217773

Token 376: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -8.816591434879228e-05
    2. ' int' → logprob: -9.62508773803711
    3. '[int' → logprob: -12.25008773803711
    4. 'List' → logprob: -12.50008773803711
    5. '   ' → logprob: -12.62508773803711
    6. 'str' → logprob: -12.87508773803711
    7. 'None' → logprob: -13.50008773803711
    8. 'bool' → logprob: -13.50008773803711
    9. '```' → logprob: -13.87508773803711
    10. ']int' → logprob: -14.62508773803711

Token 377: ']:' (ID: 12433)
  Prédit: ']:'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.01386211346834898
    2. ']' → logprob: -4.388862133026123
    3. ']>' → logprob: -7.263862133026123
    4. ']:
' → logprob: -7.513862133026123
    5. ']:
' → logprob: -10.513861656188965
    6. '"]:' → logprob: -10.763861656188965
    7. ' ]' → logprob: -11.138861656188965
    8. '[int' → logprob: -11.513861656188965
    9. '']:' → logprob: -12.263861656188965
    10. '>:' → logprob: -12.263861656188965

Token 378: ' D' (ID: 415)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.25262659788131714
    2. ' {}' → logprob: -2.377626657485962
    3. '{' → logprob: -2.502626657485962
    4. ' {' → logprob: -3.252626657485962
    5. 'color' → logprob: -5.377626419067383
    6. ' color' → logprob: -5.627626419067383
    7. ' colors' → logprob: -7.627626419067383
    8. 'colors' → logprob: -7.752626419067383
    9. ' defaultdict' → logprob: -8.252626419067383
    10. '   ' → logprob: -9.252626419067383

Token 379: 'iction' (ID: 4090)
  Prédit: 'iction'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iction' → logprob: -0.7278797626495361
    2. 'ict' → logprob: -1.6028797626495361
    3. '{' → logprob: -1.9778797626495361
    4. 'ictionary' → logprob: -2.477879762649536
    5. '<|end|>' → logprob: -3.477879762649536
    6. ' {' → logprob: -4.352879524230957
    7. '   ' → logprob: -4.602879524230957
    8. ')' → logprob: -5.102879524230957
    9. '  ' → logprob: -5.352879524230957
    10. ' ' → logprob: -5.352879524230957

Token 380: 'naire' (ID: 30464)
  Prédit: 'naire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'naire' → logprob: -0.5596787333488464
    2. 'aire' → logprob: -0.9346787333488464
    3. 'ary' → logprob: -3.434678792953491
    4. '{' → logprob: -6.434678554534912
    5. '   ' → logprob: -7.309678554534912
    6. 'ion' → logprob: -8.68467903137207
    7. 'naires' → logprob: -8.80967903137207
    8. 'iaire' → logprob: -8.93467903137207
    9. 'aires' → logprob: -9.18467903137207
    10. '[int' → logprob: -9.18467903137207

Token 381: ' associ' (ID: 5516)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 382: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.7329491376876831
    2. 'é' → logprob: -0.8579491376876831
    3. 'a' → logprob: -2.4829492568969727
    4. 'ation' → logprob: -5.232949256896973
    5. '```' → logprob: -6.232949256896973
    6. '{' → logprob: -6.357949256896973
    7. 'e' → logprob: -7.107949256896973
    8. '   ' → logprob: -8.357949256896973
    9. 'at' → logprob: -8.357949256896973
    10. 'ating' → logprob: -8.982949256896973

Token 383: ' chaque' (ID: 21194)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.8867295980453491
    2. ' start' → logprob: -1.1367295980453491
    3. '{' → logprob: -2.2617297172546387
    4. ' node' → logprob: -2.8867297172546387
    5. 'node' → logprob: -4.011729717254639
    6. ' {' → logprob: -4.136729717254639
    7. ' ' → logprob: -4.261729717254639
    8. '{}' → logprob: -4.261729717254639
    9. 'colors' → logprob: -4.386729717254639
    10. ')' → logprob: -4.886729717254639

Token 384: ' sommet' (ID: 130502)
  Prédit: ' node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' node' → logprob: -0.1778421849012375
    2. ' sommet' → logprob: -2.052842140197754
    3. 'node' → logprob: -4.427842140197754
    4. ' ' → logprob: -4.802842140197754
    5. ' vertex' → logprob: -4.927842140197754
    6. ' noe' → logprob: -6.052842140197754
    7. 'vertex' → logprob: -6.177842140197754
    8. ' somm' → logprob: -7.302842140197754
    9. ')' → logprob: -8.177842140197754
    10. ' nodo' → logprob: -8.427842140197754

Token 385: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.08747916668653488
    2. ' au' → logprob: -3.4624791145324707
    3. ' to' → logprob: -3.9624791145324707
    4. ')' → logprob: -4.837479114532471
    5. 'à' → logprob: -5.087479114532471
    6. '<|end|>' → logprob: -5.587479114532471
    7. '```' → logprob: -5.837479114532471
    8. ',' → logprob: -5.837479114532471
    9. ' des' → logprob: -6.212479114532471
    10. ' aux' → logprob: -6.462479114532471

Token 386: ' sa' (ID: 880)
  Prédit: 'colors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'colors' → logprob: -0.47283709049224854
    2. ' colors' → logprob: -1.0978370904922485
    3. ' sa' → logprob: -3.847836971282959
    4. ' la' → logprob: -4.222836971282959
    5. ' its' → logprob: -5.847836971282959
    6. ' couleurs' → logprob: -6.222836971282959
    7. 'sa' → logprob: -7.597836971282959
    8. ' son' → logprob: -7.847836971282959
    9. 'la' → logprob: -7.972836971282959
    10. 'son' → logprob: -7.972836971282959

Token 387: ' couleur' (ID: 48005)
  Prédit: ' couleur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' couleur' → logprob: -0.033443279564380646
    2. ' color' → logprob: -3.6584432125091553
    3. ' assigned' → logprob: -5.783443450927734
    4. 'color' → logprob: -5.908443450927734
    5. 'cou' → logprob: -6.783443450927734
    6. ' ' → logprob: -9.283443450927734
    7. 'assigned' → logprob: -10.783443450927734
    8. ' ' → logprob: -11.033443450927734
    9. ' couleurs' → logprob: -11.408443450927734
    10. '_color' → logprob: -12.408443450927734

Token 388: '.
' (ID: 558)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '}' → logprob: -0.7060073018074036
    2. ',' → logprob: -0.9560073018074036
    3. '   ' → logprob: -2.831007242202759
    4. '.' → logprob: -3.331007242202759
    5. ',
' → logprob: -4.081007480621338
    6. ')' → logprob: -5.581007480621338
    7. '}
' → logprob: -6.081007480621338
    8. ']' → logprob: -6.706007480621338
    9. '{' → logprob: -6.831007480621338
    10. '[' → logprob: -8.08100700378418

Token 389: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04746367782354355
    2. '
' → logprob: -3.9224636554718018
    3. ')' → logprob: -4.422463893890381
    4. '```' → logprob: -4.672463893890381
    5. '"""' → logprob: -5.922463893890381
    6. '    
' → logprob: -6.672463893890381
    7. '):
' → logprob: -7.672463893890381
    8. 'def' → logprob: -9.047463417053223
    9. '"""
' → logprob: -9.047463417053223
    10. ')
' → logprob: -9.172463417053223

Token 390: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01734902709722519
    2. ')' → logprob: -4.5173492431640625
    3. '
' → logprob: -6.3923492431640625
    4. '):
' → logprob: -6.7673492431640625
    5. '```' → logprob: -6.8923492431640625
    6. '):' → logprob: -7.1423492431640625
    7. 'def' → logprob: -7.6423492431640625
    8. '    
' → logprob: -8.267349243164062
    9. ':' → logprob: -8.517349243164062
    10. '"""' → logprob: -8.642349243164062

Token 391: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5465594530105591
    2. ' from' → logprob: -1.046559453010559
    3. ' queue' → logprob: -3.0465593338012695
    4. ' import' → logprob: -4.0465593338012695
    5. 'from' → logprob: -5.7965593338012695
    6. 'import' → logprob: -6.5465593338012695
    7. '```' → logprob: -9.17155933380127
    8. ' visited' → logprob: -9.79655933380127
    9. ' color' → logprob: -10.04655933380127
    10. ' q' → logprob: -10.42155933380127

Token 392: ' from' (ID: 591)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' (adapté à ' from') → logprob: -0.1311717927455902
    2. ' from' → logprob: -2.381171703338623
    3. '   ' → logprob: -3.756171703338623
    4. 'import' → logprob: -5.006171703338623
    5. '```' → logprob: -8.881172180175781
    6. 'queue' → logprob: -9.006172180175781
    7. ' import' → logprob: -9.631172180175781
    8. 'visited' → logprob: -9.881172180175781
    9. ' queue' → logprob: -11.006172180175781
    10. 'color' → logprob: -11.756172180175781

Token 393: ' collections' (ID: 22690)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'collections' → logprob: -0.018151935189962387
    2. ' collections' → logprob: -4.018151760101318
    3. 'queue' → logprob: -13.143152236938477
    4. 'collection' → logprob: -16.268152236938477
    5. ' queue' → logprob: -17.518152236938477
    6. 'collect' → logprob: -18.393152236938477
    7. 'col' → logprob: -19.268152236938477
    8. '.collections' → logprob: -19.393152236938477
    9. ' ' → logprob: -20.268152236938477
    10. '_' → logprob: -21.268152236938477

Token 394: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.08389557898044586
    2. 'port' → logprob: -3.833895683288574
    3. 'n' → logprob: -4.208895683288574
    4. 't' → logprob: -4.583895683288574
    5. '   ' → logprob: -4.958895683288574
    6. 'python' → logprob: -5.458895683288574
    7. ' import' → logprob: -5.458895683288574
    8. 'ptions' → logprob: -5.958895683288574
    9. 'b' → logprob: -6.333895683288574
    10. 'on' → logprob: -6.333895683288574

Token 395: ' deque' (ID: 90347)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.4740796685218811
    2. ' deque' → logprob: -0.9740796685218811
    3. 'de' → logprob: -12.974080085754395
    4. 'queue' → logprob: -15.849080085754395
    5. 'collections' → logprob: -16.599079132080078
    6. ' defaultdict' → logprob: -17.474079132080078
    7. ' queue' → logprob: -17.599079132080078
    8. ' dequeue' → logprob: -18.224079132080078
    9. ' ' → logprob: -18.349079132080078
    10. '```' → logprob: -18.474079132080078

Token 396: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0016999337822198868
    2. '    
' → logprob: -7.126699924468994
    3. 'queue' → logprob: -8.626700401306152
    4. '   ' → logprob: -8.751700401306152
    5. ' 
' → logprob: -9.001700401306152
    6. ' queue' → logprob: -9.251700401306152
    7. '  
' → logprob: -9.251700401306152
    8. '	
' → logprob: -9.501700401306152
    9. '' → logprob: -9.626700401306152
    10. '
' → logprob: -10.501700401306152

Token 397: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9096118211746216
    2. ' queue' → logprob: -1.4096118211746216
    3. 'queue' → logprob: -1.6596118211746216
    4. '
' → logprob: -1.9096118211746216
    5. '    
' → logprob: -4.534611701965332
    6. ' 
' → logprob: -6.659611701965332
    7. 'q' → logprob: -6.909611701965332
    8. '	queue' → logprob: -7.659611701965332
    9. '  
' → logprob: -8.534611701965332
    10. 'Q' → logprob: -8.784611701965332

Token 398: ' n' (ID: 297)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.013036815449595451
    2. ' queue' → logprob: -4.888036727905273
    3. 'color' → logprob: -5.513036727905273
    4. 'visited' → logprob: -7.513036727905273
    5. 'q' → logprob: -8.013036727905273
    6. 'colors' → logprob: -8.388036727905273
    7. 'Q' → logprob: -8.638036727905273
    8. '   ' → logprob: -10.388036727905273
    9. 'colored' → logprob: -10.763036727905273
    10. '
' → logprob: -11.263036727905273

Token 399: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00047106825513765216
    2. '=' → logprob: -7.750471115112305
    3. '   ' → logprob: -10.375471115112305
    4. '=len' → logprob: -12.875471115112305
    5. '    ' → logprob: -13.250471115112305
    6. 'n' → logprob: -13.500471115112305
    7. '=int' → logprob: -14.000471115112305
    8. ',' → logprob: -14.500471115112305
    9. '=n' → logprob: -14.500471115112305
    10. ' =
' → logprob: -14.875471115112305

Token 400: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.12698091566562653
    2. ' len' → logprob: -2.126981019973755
    3. '(len' → logprob: -9.876980781555176
    4. '=len' → logprob: -14.501980781555176
    5. '[len' → logprob: -14.626980781555176
    6. '   ' → logprob: -15.251980781555176
    7. '	len' → logprob: -15.251980781555176
    8. '<len' → logprob: -17.626981735229492
    9. ' ' → logprob: -17.751981735229492
    10. '<|end|>' → logprob: -18.001981735229492

Token 401: '(colors' (ID: 131922)
  Prédit: '(E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(E' → logprob: -0.00014287306112237275
    2. '(' → logprob: -8.875143051147461
    3. ' (' → logprob: -13.625143051147461
    4. '(colors' → logprob: -13.750143051147461
    5. 'E' → logprob: -14.875143051147461
    6. '(
' → logprob: -15.000143051147461
    7. 'colors' → logprob: -16.75014305114746
    8. '(

' → logprob: -17.62514305114746
    9. '(C' → logprob: -18.00014305114746
    10. 'Colors' → logprob: -18.00014305114746

Token 402: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.333223139634356e-05
    2. ' )' → logprob: -10.500033378601074
    3. ')
' → logprob: -12.750033378601074
    4. ')-' → logprob: -13.250033378601074
    5. '[' → logprob: -14.500033378601074
    6. ' ' → logprob: -15.000033378601074
    7. '   ' → logprob: -16.500032424926758
    8. '-' → logprob: -17.250032424926758
    9. ')

' → logprob: -17.375032424926758
    10. '),' → logprob: -17.625032424926758

Token 403: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.016409454867243767
    2. ' 
' → logprob: -4.641409397125244
    3. '  
' → logprob: -5.891409397125244
    4. '    
' → logprob: -6.516409397125244
    5. '   ' → logprob: -7.516409397125244
    6. '	
' → logprob: -7.641409397125244
    7. '' → logprob: -7.641409397125244
    8. '   
' → logprob: -8.766409873962402
    9. '
' → logprob: -9.016409873962402
    10. 'queue' → logprob: -9.391409873962402

Token 404: ' ans' (ID: 3345)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.437350332736969
    2. 'color' → logprob: -2.187350273132324
    3. 'visited' → logprob: -2.312350273132324
    4. 'colors' → logprob: -2.437350273132324
    5. ' queue' → logprob: -3.437350273132324
    6. '   ' → logprob: -4.562350273132324
    7. 'colored' → logprob: -5.687350273132324
    8. ' color' → logprob: -6.312350273132324
    9. ' visited' → logprob: -6.312350273132324
    10. ' colors' → logprob: -6.812350273132324

Token 405: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.055787343531847
    2. '=' → logprob: -2.9307873249053955
    3. '_colors' → logprob: -7.680787563323975
    4. '   ' → logprob: -8.180787086486816
    5. 'colors' → logprob: -9.180787086486816
    6. ' ' → logprob: -11.055787086486816
    7. ',' → logprob: -12.055787086486816
    8. '_' → logprob: -12.180787086486816
    9. '_color' → logprob: -12.305787086486816
    10. '={}' → logprob: -12.430787086486816

Token 406: ' {}
' (ID: 11421)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.00021855637896806002
    2. ' {}' → logprob: -8.500218391418457
    3. 'dict' → logprob: -11.500218391418457
    4. '{' → logprob: -12.625218391418457
    5. '{}
' → logprob: -13.750218391418457
    6. ' dict' → logprob: -14.500218391418457
    7. '{}\' → logprob: -17.125219345092773
    8. '{}

' → logprob: -18.250219345092773
    9. '{},' → logprob: -18.500219345092773
    10. '{})' → logprob: -19.125219345092773

Token 407: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02332327701151371
    2. ' queue' → logprob: -4.773323059082031
    3. '    
' → logprob: -5.023323059082031
    4. '
' → logprob: -5.023323059082031
    5. '	queue' → logprob: -7.148323059082031
    6. 'queue' → logprob: -8.273323059082031
    7. ' 
' → logprob: -8.773323059082031
    8. '  
' → logprob: -9.398323059082031
    9. '   
' → logprob: -10.398323059082031
    10. '	
' → logprob: -10.398323059082031

Token 408: ' visited' (ID: 18416)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.007507836911827326
    2. ' queue' → logprob: -5.382507801055908
    3. '   ' → logprob: -6.132507801055908
    4. 'q' → logprob: -8.007508277893066
    5. 'visited' (adapté à ' visited') → logprob: -8.507508277893066
    6. 'deque' → logprob: -9.382508277893066
    7. 'que' → logprob: -9.882508277893066
    8. '    
' → logprob: -11.257508277893066
    9. '	queue' → logprob: -12.257508277893066
    10. '
' → logprob: -12.257508277893066

Token 409: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3132667541503906
    2. '=' → logprob: -1.3132667541503906
    3. '=set' → logprob: -12.93826675415039
    4. ')' → logprob: -14.06326675415039
    5. ' ' → logprob: -14.56326675415039
    6. '   ' → logprob: -14.81326675415039
    7. ',' → logprob: -14.93826675415039
    8. '[' → logprob: -15.31326675415039
    9. '=[]' → logprob: -16.18826675415039
    10. '  ' → logprob: -16.81326675415039

Token 410: ' [' (ID: 723)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.38160544633865356
    2. '[' → logprob: -1.8816053867340088
    3. ' set' → logprob: -1.8816053867340088
    4. ' [' → logprob: -4.381605625152588
    5. '{' → logprob: -10.38160514831543
    6. '=set' → logprob: -13.25660514831543
    7. '(set' → logprob: -13.50660514831543
    8. '[n' → logprob: -13.88160514831543
    9. '[start' → logprob: -14.00660514831543
    10. '   ' → logprob: -14.13160514831543

Token 411: 'False' (ID: 8168)
  Prédit: 'False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: 0.0
    2. ' False' → logprob: -17.25
    3. '0' → logprob: -20.125
    4. '(False' → logprob: -23.0
    5. 'True' → logprob: -23.75
    6. '   ' → logprob: -25.125
    7. 'F' → logprob: -25.875
    8. '=False' → logprob: -26.0
    9. 'false' → logprob: -26.75
    10. '
' → logprob: -27.125

Token 412: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01717960648238659
    2. ' for' → logprob: -4.142179489135742
    3. ']*' → logprob: -7.142179489135742
    4. ' ]' → logprob: -8.517179489135742
    5. 'for' → logprob: -9.142179489135742
    6. ']*(' → logprob: -10.267179489135742
    7. ']+' → logprob: -12.017179489135742
    8. ',' → logprob: -12.517179489135742
    9. ')' → logprob: -14.017179489135742
    10. '[' → logprob: -14.642179489135742

Token 413: ' *' (ID: 425)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6857336163520813
    2. ' for' → logprob: -0.9357336163520813
    3. ' *' → logprob: -2.8107335567474365
    4. '*' → logprob: -3.6857335567474365
    5. ']*' → logprob: -4.935733795166016
    6. 'for' → logprob: -5.185733795166016
    7. '+' → logprob: -5.810733795166016
    8. ']*(' → logprob: -7.060733795166016
    9. ')' → logprob: -7.435733795166016
    10. '   ' → logprob: -7.560733795166016

Token 414: ' len' (ID: 4631)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.09175844490528107
    2. '(len' → logprob: -2.4667584896087646
    3. ' (' → logprob: -6.4667582511901855
    4. 'n' → logprob: -7.2167582511901855
    5. 'len' → logprob: -7.7167582511901855
    6. '(' → logprob: -9.716758728027344
    7. '
' → logprob: -12.091758728027344
    8. '((' → logprob: -12.591758728027344
    9. '(
' → logprob: -13.091758728027344
    10. '(N' → logprob: -13.091758728027344

Token 415: '(E' (ID: 20882)
  Prédit: '(E'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(E' → logprob: -0.0008976469398476183
    2. '(colors' → logprob: -7.1258978843688965
    3. 'E' → logprob: -10.125897407531738
    4. '(' → logprob: -10.250897407531738
    5. 'colors' → logprob: -11.000897407531738
    6. 'visited' → logprob: -15.000897407531738
    7. ' colors' → logprob: -15.625897407531738
    8. '(vis' → logprob: -15.875897407531738
    9. '(ans' → logprob: -16.000898361206055
    10. '(
' → logprob: -16.125898361206055

Token 416: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007634435780346394
    2. ')
' → logprob: -4.88263463973999
    3. '   ' → logprob: -11.257634162902832
    4. ' )' → logprob: -11.632634162902832
    5. ')
' → logprob: -12.507634162902832
    6. ')

' → logprob: -13.632634162902832
    7. ']' → logprob: -14.757634162902832
    8. ' )
' → logprob: -14.882634162902832
    9. '
' → logprob: -16.00763511657715
    10. ' ' → logprob: -16.00763511657715

Token 417: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.638862669467926
    2. '   ' → logprob: -0.763862669467926
    3. '    
' → logprob: -5.513862609863281
    4. 'visited' → logprob: -7.013862609863281
    5. ' 
' → logprob: -8.263862609863281
    6. ' visited' → logprob: -8.263862609863281
    7. '  
' → logprob: -8.513862609863281
    8. '	queue' → logprob: -9.013862609863281
    9. ' queue' → logprob: -9.513862609863281
    10. '	
' → logprob: -9.638862609863281

Token 418: ' q' (ID: 2335)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.2503730058670044
    2. '   ' → logprob: -2.000372886657715
    3. ' queue' → logprob: -2.875372886657715
    4. 'visited' → logprob: -3.625372886657715
    5. '
' → logprob: -6.625372886657715
    6. 'q' (adapté à ' q') → logprob: -6.875372886657715
    7. ' visited' → logprob: -7.875372886657715
    8. '    
' → logprob: -8.500372886657715
    9. '	queue' → logprob: -9.625372886657715
    10. 'deque' → logprob: -10.000372886657715

Token 419: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16801108419895172
    2. '=' → logprob: -2.04301118850708
    3. '.' → logprob: -4.04301118850708
    4. '.append' → logprob: -4.91801118850708
    5. '.=' → logprob: -9.918010711669922
    6. '.enqueue' → logprob: -9.918010711669922
    7. '.put' → logprob: -11.168010711669922
    8. '.add' → logprob: -11.418010711669922
    9. ' .' → logprob: -12.043010711669922
    10. '.dequeue' → logprob: -12.293010711669922

Token 420: ' deque' (ID: 90347)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.38687223196029663
    2. ' deque' → logprob: -1.1368722915649414
    3. 'Deque' → logprob: -13.886872291564941
    4. 'de' → logprob: -15.261872291564941
    5. '(de' → logprob: -18.511871337890625
    6. 'collections' → logprob: -19.511871337890625
    7. ' dequeue' → logprob: -19.511871337890625
    8. '   ' → logprob: -20.136871337890625
    9. '	de' → logprob: -20.261871337890625
    10. ' de' → logprob: -20.886871337890625

Token 421: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.14012303948402405
    2. '([' → logprob: -2.140123128890991
    3. '()
' → logprob: -4.890122890472412
    4. '(start' → logprob: -5.390122890472412
    5. '([(' → logprob: -7.265122890472412
    6. '(' → logprob: -8.39012336730957
    7. '[start' → logprob: -9.64012336730957
    8. '()

' → logprob: -11.39012336730957
    9. '([]' → logprob: -11.76512336730957
    10. '([
' → logprob: -12.76512336730957

Token 422: '   ' (ID: 271)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.4339495301246643
    2. '
' → logprob: -1.4339494705200195
    3. ' 
' → logprob: -2.8089494705200195
    4. '   ' → logprob: -3.9339494705200195
    5. '	q' → logprob: -4.3089494705200195
    6. ' q' → logprob: -4.4339494705200195
    7. '    
' → logprob: -5.3089494705200195
    8. '  
' → logprob: -6.6839494705200195
    9. '(q' → logprob: -7.3089494705200195
    10. '	
' → logprob: -7.5589494705200195

Token 423: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' (adapté à ' q') → logprob: -0.006672505289316177
    2. ' q' → logprob: -5.381672382354736
    3. '   ' → logprob: -6.506672382354736
    4. '
' → logprob: -8.381672859191895
    5. ' 
' → logprob: -8.506672859191895
    6. '	q' → logprob: -9.756672859191895
    7. '    
' → logprob: -10.006672859191895
    8. 'start' → logprob: -11.506672859191895
    9. '_q' → logprob: -12.381672859191895
    10. '  
' → logprob: -13.756672859191895

Token 424: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0027352094184607267
    2. '.' → logprob: -6.002735137939453
    3. '.enqueue' → logprob: -8.752735137939453
    4. '.put' → logprob: -9.627735137939453
    5. '.extend' → logprob: -10.752735137939453
    6. '.push' → logprob: -11.752735137939453
    7. '.p' → logprob: -13.252735137939453
    8. 'append' → logprob: -13.877735137939453
    9. '.app' → logprob: -14.377735137939453
    10. '.q' → logprob: -14.502735137939453

Token 425: '(start' (ID: 20008)
  Prédit: '(start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(start' → logprob: -2.6060808522743173e-05
    2. 'start' → logprob: -10.750025749206543
    3. '(' → logprob: -12.500025749206543
    4. '((' → logprob: -14.000025749206543
    5. '[start' → logprob: -17.62502670288086
    6. '(
' → logprob: -17.87502670288086
    7. ' (' → logprob: -18.50002670288086
    8. '(st' → logprob: -19.12502670288086
    9. '([' → logprob: -19.12502670288086
    10. ',start' → logprob: -19.87502670288086

Token 426: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004913145676255226
    2. ')
' → logprob: -7.625491142272949
    3. ' )' → logprob: -12.75049114227295
    4. ')
' → logprob: -16.625492095947266
    5. ')

' → logprob: -16.625492095947266
    6. '   ' → logprob: -16.750492095947266
    7. '))' → logprob: -17.375492095947266
    8. ')return' → logprob: -17.625492095947266
    9. ')#' → logprob: -17.875492095947266
    10. ' )
' → logprob: -18.125492095947266

Token 427: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23904617130756378
    2. ' 
' → logprob: -2.489046096801758
    3. ' visited' → logprob: -2.864046096801758
    4. 'visited' → logprob: -2.989046096801758
    5. ' while' → logprob: -4.864046096801758
    6. '    
' → logprob: -4.989046096801758
    7. '<|end|>' → logprob: -5.989046096801758
    8. '
' → logprob: -6.114046096801758
    9. 'while' → logprob: -7.364046096801758
    10. '  
' → logprob: -7.614046096801758

Token 428: ' #' (ID: 1069)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.12258724868297577
    2. '   ' → logprob: -2.247587203979492
    3. ' visited' → logprob: -5.372587203979492
    4. 'while' → logprob: -5.872587203979492
    5. 'colors' → logprob: -6.247587203979492
    6. ' while' → logprob: -8.747587203979492
    7. ' colors' → logprob: -9.247587203979492
    8. '```' → logprob: -10.747587203979492
    9. '    ' → logprob: -11.247587203979492
    10. '    
' → logprob: -11.622587203979492

Token 429: ' Parc' (ID: 68618)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.11440064758062363
    2. 'while' → logprob: -2.239400625228882
    3. 'colors' → logprob: -7.239400863647461
    4. 'ans' → logprob: -7.989400863647461
    5. '   ' → logprob: -8.364400863647461
    6. ' visited' → logprob: -8.614400863647461
    7. ' while' → logprob: -9.739400863647461
    8. 'color' → logprob: -12.114400863647461
    9. 'for' → logprob: -12.114400863647461
    10. 'assigned' → logprob: -12.239400863647461

Token 430: 'ours' (ID: 2327)
  Prédit: 'our'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'our' → logprob: -0.09794869273900986
    2. 'ours' → logprob: -2.7229487895965576
    3. 'ourt' → logprob: -4.2229485511779785
    4. '   ' → logprob: -4.5979485511779785
    5. 'oure' → logprob: -7.0979485511779785
    6. 'ourse' → logprob: -7.8479485511779785
    7. 'or' → logprob: -7.9729485511779785
    8. '       ' → logprob: -8.097949028015137
    9. 'ur' → logprob: -8.347949028015137
    10. 'o' → logprob: -8.722949028015137

Token 431: ' BFS' (ID: 190016)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06591511517763138
    2. '<|end|>' → logprob: -3.315915107727051
    3. ' while' → logprob: -5.190915107727051
    4. 'while' → logprob: -5.565915107727051
    5. '    ' → logprob: -5.565915107727051
    6. ' BFS' → logprob: -5.690915107727051
    7. '<|end|>' → logprob: -6.065915107727051
    8. 'B' → logprob: -6.190915107727051
    9. ' bfs' → logprob: -6.815915107727051
    10. '    
' → logprob: -7.065915107727051

Token 432: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5716509819030762
    2. '
' → logprob: -1.0716509819030762
    3. '<|end|>' → logprob: -3.196650981903076
    4. '    
' → logprob: -3.696650981903076
    5. '  
' → logprob: -4.696650981903076
    6. ' while' → logprob: -4.821650981903076
    7. '<|end|>' → logprob: -5.321650981903076
    8. 'while' → logprob: -5.821650981903076
    9. '	while' → logprob: -6.946650981903076
    10. '   
' → logprob: -7.821650981903076

Token 433: ' en' (ID: 469)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.7624066472053528
    2. ' while' → logprob: -1.137406587600708
    3. 'visited' → logprob: -2.012406587600708
    4. '   ' → logprob: -2.762406587600708
    5. ' visited' → logprob: -4.262406826019287
    6. '    ' → logprob: -7.887406826019287
    7. 'colors' → logprob: -8.137406349182129
    8. '	while' → logprob: -8.512406349182129
    9. '
' → logprob: -8.637406349182129
    10. '    
' → logprob: -8.637406349182129

Token 434: ' attrib' (ID: 72186)
  Prédit: 'mar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mar' → logprob: -0.7755436897277832
    2. 'assign' → logprob: -1.9005436897277832
    3. 'while' → logprob: -2.025543689727783
    4. ' mar' → logprob: -2.275543689727783
    5. 'mark' → logprob: -3.775543689727783
    6. ' assign' → logprob: -3.775543689727783
    7. ' while' → logprob: -4.150543689727783
    8. 'continu' → logprob: -4.275543689727783
    9. 'visited' → logprob: -4.775543689727783
    10. 'visit' → logprob: -4.900543689727783

Token 435: 'uant' (ID: 44411)
  Prédit: 'uant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uant' → logprob: -0.0008082019630819559
    2. 'u' → logprob: -7.250808238983154
    3. 'uent' → logprob: -10.000807762145996
    4. 'uer' → logprob: -10.750807762145996
    5. 'ue' → logprob: -11.250807762145996
    6. '   ' → logprob: -12.500807762145996
    7. 'ué' → logprob: -13.375807762145996
    8. '[' → logprob: -13.375807762145996
    9. 'ant' → logprob: -13.375807762145996
    10. '```' → logprob: -13.375807762145996

Token 436: ' les' (ID: 1341)
  Prédit: 'colors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'colors' → logprob: -1.0424602031707764
    2. ' des' → logprob: -1.2924602031707764
    3. ' colors' → logprob: -2.1674602031707764
    4. 'des' → logprob: -2.4174602031707764
    5. ' aux' → logprob: -3.6674602031707764
    6. ' les' → logprob: -3.6674602031707764
    7. 'cou' → logprob: -3.7924602031707764
    8. ' ans' → logprob: -3.7924602031707764
    9. ' la' → logprob: -4.0424604415893555
    10. ' couleurs' → logprob: -4.0424604415893555

Token 437: ' couleurs' (ID: 54001)
  Prédit: 'cou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cou' → logprob: -0.9625046849250793
    2. ' couleurs' → logprob: -1.2125046253204346
    3. 'colors' → logprob: -1.8375046253204346
    4. ' colors' → logprob: -1.8375046253204346
    5. 'color' → logprob: -7.337504863739014
    6. ' cou' → logprob: -7.962504863739014
    7. ' color' → logprob: -7.962504863739014
    8. ' colores' → logprob: -8.837504386901855
    9. ' couleur' → logprob: -8.962504386901855
    10. ' ' → logprob: -9.087504386901855

Token 438: ' les' (ID: 1341)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20218795537948608
    2. '
' → logprob: -2.952188014984131
    3. ' aux' → logprob: -3.452188014984131
    4. '.' → logprob: -3.952188014984131
    5. ' au' → logprob: -3.952188014984131
    6. ':' → logprob: -4.077188014984131
    7. ',' → logprob: -4.702188014984131
    8. '    
' → logprob: -5.202188014984131
    9. ' while' → logprob: -5.327188014984131
    10. ' à' → logprob: -5.577188014984131

Token 439: ' plus' (ID: 2932)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.03890090808272362
    2. ' plus' → logprob: -3.538900852203369
    3. '+' → logprob: -5.788900852203369
    4. '```' → logprob: -6.288900852203369
    5. 'moins' → logprob: -6.538900852203369
    6. '-plus' → logprob: -7.288900852203369
    7. '-' → logprob: -7.788900852203369
    8. '_plus' → logprob: -8.288901329040527
    9. 'prem' → logprob: -8.538901329040527
    10. 'Plus' → logprob: -8.913901329040527

Token 440: ' grandes' (ID: 16325)
  Prédit: 'pro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pro' → logprob: -0.2168516367673874
    2. ' proches' → logprob: -2.4668517112731934
    3. 'prox' → logprob: -3.0918517112731934
    4. 'appropr' → logprob: -3.0918517112731934
    5. 'b' → logprob: -5.341851711273193
    6. 'sim' → logprob: -5.966851711273193
    7. ' prox' → logprob: -6.091851711273193
    8. ' appropri' → logprob: -6.216851711273193
    9. 'dis' → logprob: -7.091851711273193
    10. 'prob' → logprob: -7.091851711273193

Token 441: ' en' (ID: 469)
  Prédit: ' disponibles'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' disponibles' → logprob: -1.379841685295105
    2. ' aux' → logprob: -1.629841685295105
    3. '   ' → logprob: -2.1298418045043945
    4. ' ' → logprob: -2.5048418045043945
    5. ' possible' → logprob: -3.1298418045043945
    6. '.' → logprob: -3.1298418045043945
    7. 'possible' → logprob: -3.1298418045043945
    8. ' possibles' → logprob: -3.2548418045043945
    9. '<|end|>' → logprob: -3.6298418045043945
    10. 'available' → logprob: -3.7548418045043945

Token 442: ' premier' (ID: 15506)
  Prédit: 'prem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prem' → logprob: -0.7269083261489868
    2. ' premier' → logprob: -1.7269083261489868
    3. 'ordre' → logprob: -2.2269082069396973
    4. 'prior' → logprob: -2.3519082069396973
    5. ' priorité' → logprob: -2.6019082069396973
    6. ' ordre' → logprob: -3.9769082069396973
    7. ' prior' → logprob: -4.976908206939697
    8. 'part' → logprob: -5.226908206939697
    9. ' part' → logprob: -5.351908206939697
    10. 'comm' → logprob: -5.476908206939697

Token 443: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05701905116438866
    2. '
' → logprob: -3.057018995285034
    3. '    
' → logprob: -4.932019233703613
    4. ' while' → logprob: -7.932019233703613
    5. '<|end|>' → logprob: -8.307019233703613
    6. '  
' → logprob: -9.182019233703613
    7. 'while' → logprob: -9.307019233703613
    8. ',' → logprob: -9.932019233703613
    9. '```' → logprob: -9.932019233703613
    10. '<|end|>' → logprob: -10.057019233703613

Token 444: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08375700563192368
    2. '
' → logprob: -2.708756923675537
    3. '    
' → logprob: -4.333756923675537
    4. ' while' → logprob: -8.333757400512695
    5. 'while' → logprob: -9.708757400512695
    6. '```' → logprob: -9.833757400512695
    7. ',' → logprob: -10.083757400512695
    8. ' 
' → logprob: -10.458757400512695
    9. '	while' → logprob: -10.583757400512695
    10. '	
' → logprob: -10.833757400512695

Token 445: ' for' (ID: 395)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'color' → logprob: -0.8796980977058411
    2. 'idx' → logprob: -1.2546980381011963
    3. 'while' → logprob: -2.7546980381011963
    4. '   ' → logprob: -2.8796980381011963
    5. ' idx' → logprob: -2.8796980381011963
    6. 'index' → logprob: -3.1296980381011963
    7. ' color' → logprob: -3.1296980381011963
    8. ' while' → logprob: -4.629698276519775
    9. 'current' → logprob: -4.754698276519775
    10. 'pos' → logprob: -5.254698276519775

Token 446: ' i' (ID: 575)
  Prédit: ' color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' color' → logprob: -0.41346442699432373
    2. ' i' → logprob: -1.9134644269943237
    3. 'color' → logprob: -2.2884645462036133
    4. 'i' → logprob: -3.9134645462036133
    5. ' _' → logprob: -3.9134645462036133
    6. ' c' → logprob: -4.038464546203613
    7. 'c' → logprob: -4.663464546203613
    8. '_' → logprob: -5.413464546203613
    9. ' node' → logprob: -5.538464546203613
    10. ' idx' → logprob: -5.538464546203613

Token 447: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.030620496720075607
    2. 'in' → logprob: -3.655620574951172
    3. ',' → logprob: -5.530620574951172
    4. ' ' → logprob: -8.280620574951172
    5. ' ,' → logprob: -10.030620574951172
    6. ')' → logprob: -11.280620574951172
    7. '=' → logprob: -12.280620574951172
    8. ' =' → logprob: -12.655620574951172
    9. 'n' → logprob: -12.655620574951172
    10. '   ' → logprob: -12.780620574951172

Token 448: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.01134076714515686
    2. ' range' → logprob: -4.636340618133545
    3. 're' → logprob: -7.136340618133545
    4. 'colors' → logprob: -7.261340618133545
    5. ')' → logprob: -11.386341094970703
    6. 'reverse' → logprob: -11.636341094970703
    7. ' reversed' → logprob: -11.761341094970703
    8. 'sorted' → logprob: -11.761341094970703
    9. 'q' → logprob: -11.886341094970703
    10. '   ' → logprob: -12.011341094970703

Token 449: '(' (ID: 7)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.005899761337786913
    2. '(' → logprob: -5.380899906158447
    3. '(len' → logprob: -6.880899906158447
    4. 'n' → logprob: -9.005899429321289
    5. ' (' → logprob: -9.130899429321289
    6. ' n' → logprob: -11.755899429321289
    7. ')' → logprob: -12.505899429321289
    8. '   ' → logprob: -13.255899429321289
    9. '(q' → logprob: -13.505899429321289
    10. '(
' → logprob: -13.630899429321289

Token 450: '1' (ID: 16)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0006795499939471483
    2. 'len' → logprob: -8.000679969787598
    3. ' n' → logprob: -8.625679969787598
    4. '(n' → logprob: -9.125679969787598
    5. '1' → logprob: -11.125679969787598
    6. '0' → logprob: -11.500679969787598
    7. 'min' → logprob: -11.625679969787598
    8. ')' → logprob: -12.125679969787598
    9. ')n' → logprob: -12.500679969787598
    10. '   ' → logprob: -13.125679969787598

Token 451: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004605399910360575
    2. ' ,' → logprob: -5.879605293273926
    3. ',n' → logprob: -6.379605293273926
    4. ',len' → logprob: -9.504605293273926
    5. 'n' → logprob: -12.254605293273926
    6. '):' → logprob: -12.629605293273926
    7. ' ' → logprob: -12.754605293273926
    8. '
' → logprob: -12.879605293273926
    9. ')' → logprob: -13.004605293273926
    10. '0' → logprob: -13.129605293273926

Token 452: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.019618380814790726
    2. 'len' → logprob: -4.019618511199951
    3. 'start' → logprob: -6.894618511199951
    4. ' n' → logprob: -8.019618034362793
    5. '1' → logprob: -10.394618034362793
    6. ' len' → logprob: -10.519618034362793
    7. 'min' → logprob: -10.769618034362793
    8. '   ' → logprob: -11.894618034362793
    9. '
' → logprob: -12.269618034362793
    10. 'max' → logprob: -12.269618034362793

Token 453: ' +' (ID: 659)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.024996275082230568
    2. '):
' → logprob: -4.274996280670166
    3. '+' → logprob: -4.899996280670166
    4. ' ):' → logprob: -5.899996280670166
    5. ' +' → logprob: -8.399995803833008
    6. ')' → logprob: -8.774995803833008
    7. '   ' → logprob: -9.524995803833008
    8. '-' → logprob: -10.024995803833008
    9. ',' → logprob: -10.649995803833008
    10. ' ' → logprob: -11.274995803833008

Token 454: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00043138445471413434
    2. ' ' → logprob: -7.750431537628174
    3. ')' → logprob: -14.250431060791016
    4. '   ' → logprob: -16.625431060791016
    5. '
' → logprob: -17.625431060791016
    6. '0' → logprob: -17.750431060791016
    7. '  ' → logprob: -18.000431060791016
    8. '2' → logprob: -18.125431060791016
    9. '```' → logprob: -18.125431060791016
    10. ' ' → logprob: -19.250431060791016

Token 455: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.2617008400848135e-05
    2. ' ' → logprob: -10.375032424926758
    3. '0' → logprob: -13.750032424926758
    4. ')' → logprob: -16.125032424926758
    5. '   ' → logprob: -16.250032424926758
    6. '
' → logprob: -17.125032424926758
    7. '2' → logprob: -17.250032424926758
    8. '-' → logprob: -17.750032424926758
    9. '

' → logprob: -17.750032424926758
    10. '```' → logprob: -17.750032424926758

Token 456: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.011680031195282936
    2. '):
' → logprob: -4.6366801261901855
    3. ')' → logprob: -6.5116801261901855
    4. ' ):' → logprob: -8.511679649353027
    5. ':' → logprob: -8.636679649353027
    6. '   ' → logprob: -10.511679649353027
    7. ',' → logprob: -11.011679649353027
    8. ' ):
' → logprob: -12.636679649353027
    9. '):
' → logprob: -12.886679649353027
    10. ' )' → logprob: -13.011679649353027

Token 457: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.33052554726600647
    2. '<|end|>' → logprob: -2.4555256366729736
    3. '   ' → logprob: -2.5805256366729736
    4. ' if' → logprob: -2.7055256366729736
    5. ':' → logprob: -3.9555256366729736
    6. '    ' → logprob: -4.3305253982543945
    7. ' ' → logprob: -4.4555253982543945
    8. ')' → logprob: -6.3305253982543945
    9. '<|end|>' → logprob: -6.5805253982543945
    10. ' :' → logprob: -6.8305253982543945

Token 458: ' x' (ID: 1215)
  Prédit: 'colors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'colors' → logprob: -0.7924140691757202
    2. 'ans' → logprob: -0.9174140691757202
    3. ' colors' → logprob: -3.4174141883850098
    4. '   ' → logprob: -3.5424141883850098
    5. ' ans' → logprob: -3.5424141883850098
    6. 'if' → logprob: -3.5424141883850098
    7. 'visited' → logprob: -4.41741418838501
    8. ' if' → logprob: -4.79241418838501
    9. 'pass' → logprob: -6.04241418838501
    10. 'color' → logprob: -6.41741418838501

Token 459: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10129041224718094
    2. '=' → logprob: -2.601290464401245
    3. ',' → logprob: -4.351290225982666
    4. ')' → logprob: -6.226290225982666
    5. '   ' → logprob: -6.476290225982666
    6. '_colors' → logprob: -6.976290225982666
    7. '.' → logprob: -7.351290225982666
    8. 'color' → logprob: -7.601290225982666
    9. '<|end|>' → logprob: -7.726290225982666
    10. 'colors' → logprob: -7.726290225982666

Token 460: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.0010041086934506893
    2. ' q' → logprob: -7.126004219055176
    3. 'colors' → logprob: -9.876004219055176
    4. 'None' → logprob: -10.001004219055176
    5. 'x' → logprob: -10.126004219055176
    6. 'E' → logprob: -10.751004219055176
    7. 'start' → logprob: -11.376004219055176
    8. '   ' → logprob: -11.501004219055176
    9. '
' → logprob: -12.376004219055176
    10. '0' → logprob: -13.126004219055176

Token 461: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.0018176245503127575
    2. '.' → logprob: -6.37681770324707
    3. '.pop' → logprob: -9.12681770324707
    4. 'p' → logprob: -12.25181770324707
    5. '.append' → logprob: -14.25181770324707
    6. ' .' → logprob: -14.62681770324707
    7. '   ' → logprob: -15.37681770324707
    8. 'opleft' → logprob: -15.62681770324707
    9. '[' → logprob: -16.00181770324707
    10. '.dequeue' → logprob: -16.87681770324707

Token 462: 'opleft' (ID: 182170)
  Prédit: 'opleft'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'opleft' → logprob: -0.06282725930213928
    2. 'op' → logprob: -2.8128273487091064
    3. 'ople' → logprob: -7.312827110290527
    4. 'opl' → logprob: -8.812827110290527
    5. 'o' → logprob: -10.562827110290527
    6. 'opc' → logprob: -12.187827110290527
    7. 'opf' → logprob: -12.312827110290527
    8. 'opt' → logprob: -13.187827110290527
    9. '```' → logprob: -13.687827110290527
    10. 'ope' → logprob: -14.062827110290527

Token 463: '()
' (ID: 1234)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11194249987602234
    2. '       ' → logprob: -2.9869425296783447
    3. '<|end|>' → logprob: -3.6119425296783447
    4. '
' → logprob: -4.361942291259766
    5. ')
' → logprob: -5.611942291259766
    6. ' if' → logprob: -5.736942291259766
    7. 'if' → logprob: -6.111942291259766
    8. '<|end|>' → logprob: -6.611942291259766
    9. '        
' → logprob: -7.236942291259766
    10. ']' → logprob: -7.361942291259766

Token 464: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5950590372085571
    2. '
' → logprob: -1.0950590372085571
    3. '    
' → logprob: -2.7200589179992676
    4. '       ' → logprob: -3.7200589179992676
    5. '  
' → logprob: -4.970058917999268
    6. '   
' → logprob: -5.470058917999268
    7. '        
' → logprob: -5.845058917999268
    8. ' 
' → logprob: -5.970058917999268
    9. 'ans' → logprob: -6.220058917999268
    10. ' ans' → logprob: -7.095058917999268

Token 465: ' visited' (ID: 18416)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0007071906002238393
    2. '   ' → logprob: -7.875707149505615
    3. ' ans' → logprob: -8.375707626342773
    4. 'color' → logprob: -9.625707626342773
    5. 'if' → logprob: -12.000707626342773
    6. '       ' → logprob: -12.125707626342773
    7. '
' → logprob: -12.125707626342773
    8. '	ans' → logprob: -12.125707626342773
    9. 'answer' → logprob: -12.750707626342773
    10. '    
' → logprob: -13.625707626342773

Token 466: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.00043281487887725234
    2. '[' → logprob: -7.750432968139648
    3. ' [' → logprob: -13.500432968139648
    4. 'x' → logprob: -14.750432968139648
    5. '[
' → logprob: -15.500432968139648
    6. '[i' → logprob: -17.37543296813965
    7. '=' → logprob: -17.75043296813965
    8. ']' → logprob: -18.12543296813965
    9. '[node' → logprob: -18.25043296813965
    10. ' =' → logprob: -18.37543296813965

Token 467: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -4.620622712536715e-05
    2. ']=' → logprob: -10.625045776367188
    3. ' ]' → logprob: -11.250045776367188
    4. ')' → logprob: -11.875045776367188
    5. ']
' → logprob: -14.125045776367188
    6. ' =' → logprob: -15.125045776367188
    7. '])' → logprob: -15.375045776367188
    8. '=' → logprob: -15.750045776367188
    9. '[' → logprob: -15.875045776367188
    10. '   ' → logprob: -16.000045776367188

Token 468: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.008615754544734955
    2. ' =' → logprob: -4.758615970611572
    3. '=True' → logprob: -14.008615493774414
    4. ']' → logprob: -14.758615493774414
    5. ']=' → logprob: -17.508615493774414
    6. ' ' → logprob: -17.758615493774414
    7. ')' → logprob: -17.883615493774414
    8. ',' → logprob: -18.633615493774414
    9. '[' → logprob: -18.758615493774414
    10. '=False' → logprob: -18.883615493774414

Token 469: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0001234428636962548
    2. ' True' → logprob: -9.000123023986816
    3. 'False' → logprob: -20.125123977661133
    4. '   ' → logprob: -20.750123977661133
    5. '(True' → logprob: -21.375123977661133
    6. ' ' → logprob: -22.375123977661133
    7. '=True' → logprob: -23.000123977661133
    8. 'true' → logprob: -23.250123977661133
    9. '1' → logprob: -24.375123977661133
    10. 'Tr' → logprob: -24.500123977661133

Token 470: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23619313538074493
    2. '
' → logprob: -2.2361931800842285
    3. '   ' → logprob: -2.6111931800842285
    4. '<|end|>' → logprob: -4.2361931800842285
    5. '        
' → logprob: -5.4861931800842285
    6. '    
' → logprob: -5.6111931800842285
    7. 'colors' → logprob: -6.7361931800842285
    8. ')' → logprob: -6.7361931800842285
    9. '  
' → logprob: -6.8611931800842285
    10. ',' → logprob: -7.2361931800842285

Token 471: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0826125517487526
    2. 'ans' → logprob: -3.4576125144958496
    3. ' ans' → logprob: -3.8326125144958496
    4. 'colors' → logprob: -4.70761251449585
    5. '       ' → logprob: -5.58261251449585
    6. '	ans' → logprob: -5.83261251449585
    7. '
' → logprob: -6.08261251449585
    8. '    
' → logprob: -6.08261251449585
    9. ' for' → logprob: -6.95761251449585
    10. 'color' → logprob: -7.08261251449585

Token 472: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.0013148818397894502
    2. 'for' → logprob: -7.626315116882324
    3. 'neighbors' → logprob: -8.251315116882324
    4. 'color' → logprob: -8.501315116882324
    5. 'assigned' → logprob: -8.751315116882324
    6. 'neighbor' → logprob: -10.001315116882324
    7. 'if' → logprob: -10.126315116882324
    8. ' ans' → logprob: -10.501315116882324
    9. 'adj' → logprob: -10.626315116882324
    10. '   ' → logprob: -10.876315116882324

Token 473: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.018156031146645546
    2. '[' → logprob: -4.018156051635742
    3. '\[' → logprob: -13.768156051635742
    4. '[
' → logprob: -14.143156051635742
    5. '[q' → logprob: -14.393156051635742
    6. '```' → logprob: -14.643156051635742
    7. 'x' → logprob: -14.893156051635742
    8. '[node' → logprob: -15.018156051635742
    9. ' [' → logprob: -15.018156051635742
    10. '[`' → logprob: -15.268156051635742

Token 474: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -2.176947600673884e-05
    2. ']=' → logprob: -10.750021934509277
    3. ' ]' → logprob: -15.875021934509277
    4. '=' → logprob: -16.12502098083496
    5. ')' → logprob: -17.12502098083496
    6. '']' → logprob: -17.62502098083496
    7. '[' → logprob: -18.62502098083496
    8. ']
' → logprob: -19.12502098083496
    9. '"]' → logprob: -19.25002098083496
    10. ']

' → logprob: -19.62502098083496

Token 475: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0067156096920371056
    2. ' =' → logprob: -5.006715774536133
    3. ']' → logprob: -15.881715774536133
    4. ']=' → logprob: -17.131715774536133
    5. '=

' → logprob: -17.381715774536133
    6. ',' → logprob: -17.631715774536133
    7. '=int' → logprob: -17.756715774536133
    8. '=}' → logprob: -18.131715774536133
    9. ' ' → logprob: -18.256715774536133
    10. '=color' → logprob: -18.256715774536133

Token 476: ' colors' (ID: 10803)
  Prédit: 'colors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'colors' → logprob: -0.0019301822176203132
    2. ' colors' → logprob: -6.251930236816406
    3. '   ' → logprob: -13.751930236816406
    4. 'color' → logprob: -15.626930236816406
    5. '(colors' → logprob: -16.001930236816406
    6. 'codes' → logprob: -17.251930236816406
    7. ' ' → logprob: -17.251930236816406
    8. '.colors' → logprob: -17.251930236816406
    9. 'colored' → logprob: -17.501930236816406
    10. 'choices' → logprob: -17.876930236816406

Token 477: '[-' (ID: 17503)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.05597187578678131
    2. '[-' → logprob: -3.18097186088562
    3. '[n' → logprob: -4.430972099304199
    4. '[' → logprob: -7.055972099304199
    5. '[len' → logprob: -9.4309720993042
    6. '[x' → logprob: -10.8059720993042
    7. '[::-' → logprob: -11.6809720993042
    8. 'i' → logprob: -12.3059720993042
    9. '[
' → logprob: -13.5559720993042
    10. '   ' → logprob: -13.5559720993042

Token 478: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.3544423381972592e-05
    2. ' i' → logprob: -11.37501335144043
    3. '1' → logprob: -13.37501335144043
    4. '   ' → logprob: -16.12501335144043
    5. ' ' → logprob: -16.50001335144043
    6. 'x' → logprob: -17.12501335144043
    7. '<|end|>' → logprob: -17.12501335144043
    8. '(' → logprob: -17.87501335144043
    9. '```' → logprob: -18.50001335144043
    10. ')' → logprob: -18.50001335144043

Token 479: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0001848254178185016
    2. '])' → logprob: -9.375185012817383
    3. ')]' → logprob: -10.000185012817383
    4. ']
' → logprob: -10.000185012817383
    5. ' ]' → logprob: -12.500185012817383
    6. ']

' → logprob: -12.750185012817383
    7. ')' → logprob: -13.625185012817383
    8. ']]' → logprob: -14.000185012817383
    9. ']
' → logprob: -16.375185012817383
    10. '])]' → logprob: -16.375185012817383

Token 480: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7155365943908691
    2. 'for' → logprob: -0.8405365943908691
    3. ' for' → logprob: -2.590536594390869
    4. '   ' → logprob: -5.465536594390869
    5. '        
' → logprob: -8.340536117553711
    6. '<|end|>' → logprob: -10.215536117553711
    7. '    
' → logprob: -10.715536117553711
    8. ',' → logprob: -10.965536117553711
    9. 'neighbors' → logprob: -11.340536117553711
    10. '	for' → logprob: -11.340536117553711

Token 481: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -1.3425219549390022e-05
    2. ' for' → logprob: -11.75001335144043
    3. '   ' → logprob: -12.25001335144043
    4. '    
' → logprob: -14.87501335144043
    5. 'neighbors' → logprob: -16.12501335144043
    6. '
' → logprob: -16.37501335144043
    7. '	for' → logprob: -17.00001335144043
    8. '        
' → logprob: -17.87501335144043
    9. ' ' → logprob: -18.37501335144043
    10. '#' → logprob: -18.37501335144043

Token 482: ' neighbor' (ID: 13034)
  Prédit: 'neighbor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbor' → logprob: -0.7093397974967957
    2. 'v' → logprob: -1.2093398571014404
    3. 'y' → logprob: -1.9593398571014404
    4. 'nei' → logprob: -4.209339618682861
    5. 'u' → logprob: -4.584339618682861
    6. 'nx' → logprob: -4.584339618682861
    7. 'ne' → logprob: -4.584339618682861
    8. ' neighbor' → logprob: -5.334339618682861
    9. 'nbr' → logprob: -5.459339618682861
    10. 'w' → logprob: -5.584339618682861

Token 483: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005934131797403097
    2. 'in' → logprob: -5.130934238433838
    3. '	in' → logprob: -12.75593376159668
    4. '<|end|>' → logprob: -14.00593376159668
    5. ' ' → logprob: -14.13093376159668
    6. 's' → logprob: -14.75593376159668
    7. '_in' → logprob: -15.88093376159668
    8. '  ' → logprob: -16.63093376159668
    9. '   ' → logprob: -16.75593376159668
    10. ' ' → logprob: -16.88093376159668

Token 484: ' E' (ID: 457)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.008616345934569836
    2. ' E' → logprob: -4.7586164474487305
    3. '(E' → logprob: -13.88361644744873
    4. '   ' → logprob: -14.38361644744873
    5. '[E' → logprob: -15.38361644744873
    6. '	E' → logprob: -16.133615493774414
    7. ',E' → logprob: -17.758615493774414
    8. '<E' → logprob: -18.133615493774414
    9. '>E' → logprob: -18.633615493774414
    10. ' ' → logprob: -18.758615493774414

Token 485: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -9.088346359931165e-07
    2. '[' → logprob: -14.250000953674316
    3. 'x' → logprob: -16.0
    4. ' [' → logprob: -17.25
    5. '[
' → logprob: -17.625
    6. '   ' → logprob: -19.5
    7. '\[' → logprob: -19.875
    8. '(x' → logprob: -20.375
    9. '[node' → logprob: -20.375
    10. '```' → logprob: -20.75

Token 486: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.03616867959499359
    2. ']:
' → logprob: -3.4111685752868652
    3. ']' → logprob: -6.286168575286865
    4. ']:
' → logprob: -8.286169052124023
    5. '):' → logprob: -8.411169052124023
    6. ']):' → logprob: -9.661169052124023
    7. '):
' → logprob: -10.286169052124023
    8. ']>' → logprob: -10.786169052124023
    9. '       ' → logprob: -11.036169052124023
    10. ':' → logprob: -11.036169052124023

Token 487: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0009537404985167086
    2. 'if' → logprob: -8.125953674316406
    3. '<|end|>' → logprob: -8.250953674316406
    4. ' if' → logprob: -8.625953674316406
    5. '	       ' → logprob: -8.875953674316406
    6. '<|end|>' → logprob: -10.375953674316406
    7. ',' → logprob: -11.375953674316406
    8. '    	   ' → logprob: -12.125953674316406
    9. '```' → logprob: -12.625953674316406
    10. '               ' → logprob: -12.625953674316406

Token 488: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.09013307094573975
    2. ' if' → logprob: -2.5901331901550293
    3. '               ' → logprob: -4.590133190155029
    4. '       ' → logprob: -7.590133190155029
    5. '           ' → logprob: -7.590133190155029
    6. '	if' → logprob: -11.590132713317871
    7. '   ' → logprob: -11.965132713317871
    8. 'If' → logprob: -14.215132713317871
    9. '	       ' → logprob: -14.840132713317871
    10. '	           ' → logprob: -15.340132713317871

Token 489: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.313315212726593
    2. ' not' → logprob: -1.3133151531219482
    3. 'visited' → logprob: -10.813315391540527
    4. 'neighbor' → logprob: -11.313315391540527
    5. '(not' → logprob: -11.813315391540527
    6. '   ' → logprob: -12.938315391540527
    7. ' visited' → logprob: -13.063315391540527
    8. ' neighbor' → logprob: -13.188315391540527
    9. '	not' → logprob: -13.313315391540527
    10. '!' → logprob: -13.438315391540527

Token 490: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.061967913061380386
    2. ' visited' → logprob: -2.8119678497314453
    3. '   ' → logprob: -16.811967849731445
    4. 'visit' → logprob: -16.936967849731445
    5. ' ' → logprob: -16.936967849731445
    6. 'Visited' → logprob: -17.311967849731445
    7. '
' → logprob: -17.686967849731445
    8. 'visible' → logprob: -18.436967849731445
    9. ')' → logprob: -18.436967849731445
    10. 'vis' → logprob: -18.686967849731445

Token 491: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.128163257315464e-07
    2. '[
' → logprob: -16.5
    3. ' [' → logprob: -16.625
    4. '   ' → logprob: -17.125
    5. 'neighbor' → logprob: -17.25
    6. '```' → logprob: -17.75
    7. '[int' → logprob: -18.625
    8. '
' → logprob: -18.75
    9. '           ' → logprob: -19.625
    10. '[next' → logprob: -19.75

Token 492: 'neighbor' (ID: 108409)
  Prédit: 'neighbor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbor' → logprob: -0.005259372293949127
    2. '[' → logprob: -5.2552595138549805
    3. ' neighbor' → logprob: -10.75525951385498
    4. ']' → logprob: -12.63025951385498
    5. '][' → logprob: -14.88025951385498
    6. '_neighbor' → logprob: -16.005258560180664
    7. 'neighbors' → logprob: -16.630258560180664
    8. ')' → logprob: -16.755258560180664
    9. '(ne' → logprob: -16.755258560180664
    10. 'Neighbor' → logprob: -17.005258560180664

Token 493: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.5133512616157532
    2. ']' → logprob: -1.0133512020111084
    3. ']:' → logprob: -3.2633512020111084
    4. ' ]' → logprob: -9.263351440429688
    5. ']:
' → logprob: -9.763351440429688
    6. ']:

' → logprob: -10.013351440429688
    7. ' and' → logprob: -10.138351440429688
    8. ']:


' → logprob: -12.638351440429688
    9. '):
' → logprob: -12.638351440429688
    10. 'and' → logprob: -12.888351440429688

Token 494: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4484587609767914
    2. ' and' → logprob: -1.1984587907791138
    3. ':
' → logprob: -3.448458671569824
    4. 'and' → logprob: -4.073458671569824
    5. 'q' → logprob: -5.448458671569824
    6. '):
' → logprob: -6.323458671569824
    7. '           ' → logprob: -6.823458671569824
    8. ':' → logprob: -6.823458671569824
    9. ' q' → logprob: -6.948458671569824
    10. 'visited' → logprob: -6.948458671569824

Token 495: ' q' (ID: 2335)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.06315241754055023
    2. 'q' (adapté à ' q') → logprob: -3.188152313232422
    3. ' visited' → logprob: -4.938152313232422
    4. '                   ' → logprob: -5.188152313232422
    5. ' q' → logprob: -5.313152313232422
    6. '               ' → logprob: -6.188152313232422
    7. '   ' → logprob: -9.438152313232422
    8. '	q' → logprob: -9.938152313232422
    9. '                    
' → logprob: -10.938152313232422
    10. '                ' → logprob: -11.313152313232422

Token 496: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0005545823951251805
    2. '.' → logprob: -7.50055456161499
    3. '.app' → logprob: -14.000555038452148
    4. '.enqueue' → logprob: -14.750555038452148
    5. '.Append' → logprob: -16.12555503845215
    6. 'append' → logprob: -16.25055503845215
    7. ' .' → logprob: -16.75055503845215
    8. '.extend' → logprob: -16.75055503845215
    9. '.put' → logprob: -17.25055503845215
    10. '].' → logprob: -17.62555503845215

Token 497: '(ne' (ID: 79401)
  Prédit: '(ne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ne' → logprob: -3.7697225252486533e-06
    2. 'neighbor' → logprob: -13.125003814697266
    3. '(' → logprob: -13.375003814697266
    4. '(
' → logprob: -16.500003814697266
    5. 'ne' → logprob: -18.875003814697266
    6. '((' → logprob: -19.500003814697266
    7. '(friend' → logprob: -19.500003814697266
    8. ' (' → logprob: -20.500003814697266
    9. '(

' → logprob: -20.875003814697266
    10. ' neighbor' → logprob: -20.875003814697266

Token 498: 'ighbor' (ID: 28225)
  Prédit: 'ighbor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ighbor' → logprob: -1.7432603272027336e-06
    2. 'gh' → logprob: -13.875001907348633
    3. 'neighbor' → logprob: -15.000001907348633
    4. 'igh' → logprob: -15.625001907348633
    5. 'ight' → logprob: -16.625001907348633
    6. 'g' → logprob: -17.500001907348633
    7. 'e' → logprob: -17.750001907348633
    8. 'i' → logprob: -17.875001907348633
    9. 'ig' → logprob: -17.875001907348633
    10. 'ighbour' → logprob: -18.250001907348633

Token 499: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0016958918422460556
    2. ')
' → logprob: -6.7516961097717285
    3. '               ' → logprob: -7.8766961097717285
    4. '<|end|>' → logprob: -9.00169563293457
    5. ' )' → logprob: -12.25169563293457
    6. '                   ' → logprob: -13.00169563293457
    7. '           ' → logprob: -13.00169563293457
    8. '       ' → logprob: -13.00169563293457
    9. '                ' → logprob: -13.00169563293457
    10. '),' → logprob: -13.50169563293457

Token 500: '   ' (ID: 271)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3616539537906647
    2. 'return' → logprob: -1.4866539239883423
    3. ' return' → logprob: -2.736654043197632
    4. '<|end|>' → logprob: -5.111653804779053
    5. '   ' → logprob: -6.236653804779053
    6. '
' → logprob: -6.486653804779053
    7. '```' → logprob: -7.486653804779053
    8. '                
' → logprob: -7.611653804779053
    9. '       ' → logprob: -7.986653804779053
    10. ' ' → logprob: -8.361654281616211

Token 501: ' return' (ID: 622)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 502: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.12696821987628937
    2. ' ans' → logprob: -2.1269681453704834
    3. '(ans' → logprob: -10.126968383789062
    4. '	ans' → logprob: -15.501968383789062
    5. '_ans' → logprob: -19.001968383789062
    6. 'Ans' → logprob: -20.626968383789062
    7. 'anst' → logprob: -21.751968383789062
    8. 'ann' → logprob: -22.501968383789062
    9. 'ANS' → logprob: -22.876968383789062
    10. ' ' → logprob: -23.501968383789062

Token 503: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 504: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.40522924065589905
    2. '<|end|>' → logprob: -1.6552292108535767
    3. '
' → logprob: -2.655229330062866
    4. '#' → logprob: -2.905229330062866
    5. ')' → logprob: -5.155229091644287
    6. '```' → logprob: -5.780229091644287
    7. '<|end|>' → logprob: -6.780229091644287
    8. 'n' → logprob: -6.780229091644287
    9. ' def' → logprob: -7.030229091644287
    10. ' ' → logprob: -7.405229091644287

Token 505: ' compute' (ID: 23864)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'color' → logprob: -1.082180380821228
    2. ' color' → logprob: -1.832180380821228
    3. ' main' → logprob: -2.3321805000305176
    4. ' find' → logprob: -2.5821805000305176
    5. ' solve' → logprob: -2.8321805000305176
    6. 'gre' → logprob: -3.0821805000305176
    7. ' greedy' → logprob: -3.4571805000305176
    8. 'main' → logprob: -3.5821805000305176
    9. ' assign' → logprob: -3.7071805000305176
    10. 'b' → logprob: -3.8321805000305176

Token 506: '_max' (ID: 13731)
  Prédit: '_col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_col' → logprob: -0.9597896337509155
    2. '_max' → logprob: -1.4597896337509155
    3. '_color' → logprob: -1.8347896337509155
    4. '_ch' → logprob: -2.584789752960205
    5. '_min' → logprob: -2.834789752960205
    6. '_colors' → logprob: -2.834789752960205
    7. '_vertex' → logprob: -5.209789752960205
    8. '_k' → logprob: -5.209789752960205
    9. '_graph' → logprob: -5.459789752960205
    10. '_opt' → logprob: -6.334789752960205

Token 507: '_sum' (ID: 29859)
  Prédit: '_degree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_degree' → logprob: -0.8321974873542786
    2. '_color' → logprob: -1.7071974277496338
    3. '_col' → logprob: -2.082197427749634
    4. '_ind' → logprob: -2.957197427749634
    5. '_colors' → logprob: -3.332197427749634
    6. '_weight' → logprob: -3.582197427749634
    7. '_de' → logprob: -3.832197427749634
    8. '_sp' → logprob: -4.707197666168213
    9. '_sum' → logprob: -4.832197666168213
    10. '_dist' → logprob: -4.832197666168213

Token 508: '(colors' (ID: 131922)
  Prédit: '_colors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_colors' → logprob: -0.2610762417316437
    2. '_color' → logprob: -1.8860762119293213
    3. '_degree' → logprob: -3.6360762119293213
    4. '(' → logprob: -3.8860762119293213
    5. '_col' → logprob: -3.8860762119293213
    6. '(N' → logprob: -6.1360764503479
    7. '_de' → logprob: -6.3860764503479
    8. '(n' → logprob: -6.7610764503479
    9. '(colors' → logprob: -7.1360764503479
    10. '(E' → logprob: -7.3860764503479

Token 509: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005089493934065104
    2. '):' → logprob: -7.875508785247803
    3. ',E' → logprob: -9.250509262084961
    4. ',n' → logprob: -11.250509262084961
    5. ' ,' → logprob: -11.625509262084961
    6. '   ' → logprob: -12.875509262084961
    7. ')' → logprob: -13.750509262084961
    8. 'E' → logprob: -14.000509262084961
    9. ',node' → logprob: -14.000509262084961
    10. ',
' → logprob: -14.125509262084961

Token 510: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3758402168750763
    2. '   ' → logprob: -1.250840187072754
    3. '(colors' → logprob: -4.500840187072754
    4. '(sorted' → logprob: -5.625840187072754
    5. '():' → logprob: -6.000840187072754
    6. '[' → logprob: -6.750840187072754
    7. 'def' → logprob: -6.875840187072754
    8. ' :' → logprob: -7.125840187072754
    9. ',' → logprob: -7.250840187072754
    10. '):' → logprob: -7.375840187072754

Token 511: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09971015155315399
    2. 'return' → logprob: -2.97471022605896
    3. '
' → logprob: -3.47471022605896
    4. ' return' → logprob: -4.974709987640381
    5. 'max' → logprob: -5.599709987640381
    6. 'def' → logprob: -6.974709987640381
    7. 'sum' → logprob: -7.474709987640381
    8. '```' → logprob: -7.724709987640381
    9. '    
' → logprob: -9.474710464477539
    10. 'total' → logprob: -9.599710464477539

Token 512: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0023799268528819084
    2. 'def' → logprob: -6.377379894256592
    3. '    ' → logprob: -8.50238037109375
    4. 'max' → logprob: -9.00238037109375
    5. ' max' → logprob: -9.12738037109375
    6. ')' → logprob: -10.00238037109375
    7. '#' → logprob: -10.25238037109375
    8. '  ' → logprob: -10.37738037109375
    9. ' def' → logprob: -10.75238037109375
    10. 's' → logprob: -11.12738037109375

Token 513: ' Cal' (ID: 4453)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.7306305766105652
    2. ' return' → logprob: -1.35563063621521
    3. '   ' → logprob: -1.98063063621521
    4. 'def' → logprob: -2.73063063621521
    5. 'total' → logprob: -3.98063063621521
    6. ' total' → logprob: -4.230630397796631
    7. 'max' → logprob: -4.480630397796631
    8. 'sum' → logprob: -4.855630397796631
    9. ' max' → logprob: -6.355630397796631
    10. '
' → logprob: -6.855630397796631

Token 514: 'cule' (ID: 45017)
  Prédit: 'cule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cule' → logprob: -0.03036450780928135
    2. 'cul' → logprob: -3.655364513397217
    3. 'c' → logprob: -5.655364513397217
    4. 'culate' → logprob: -7.655364513397217
    5. 'cula' → logprob: -10.780364036560059
    6. 'cules' → logprob: -10.905364036560059
    7. '
' → logprob: -11.030364036560059
    8. '```' → logprob: -11.905364036560059
    9. '``' → logprob: -12.280364036560059
    10. '\' → logprob: -12.905364036560059

Token 515: ' la' (ID: 557)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.5108838677406311
    2. 'sum' → logprob: -1.2608838081359863
    3. 'la' → logprob: -3.1358838081359863
    4. '   ' → logprob: -3.8858838081359863
    5. ' la' → logprob: -4.385883808135986
    6. 'def' → logprob: -4.510883808135986
    7. 'le' → logprob: -4.635883808135986
    8. 's' → logprob: -5.010883808135986
    9. 'the' → logprob: -5.135883808135986
    10. 'total' → logprob: -6.385883808135986

Token 516: ' valeur' (ID: 41664)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.36848965287208557
    2. 'max' → logprob: -1.3684896230697632
    3. 'sum' → logprob: -3.6184897422790527
    4. 'return' → logprob: -4.243489742279053
    5. 'maximum' → logprob: -4.868489742279053
    6. 'som' → logprob: -5.493489742279053
    7. 'ret' → logprob: -7.493489742279053
    8. 'total' → logprob: -9.493489265441895
    9. '```' → logprob: -10.368489265441895
    10. ' somme' → logprob: -10.868489265441895

Token 517: ' maximale' (ID: 76380)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.10333085805177689
    2. ' maximale' → logprob: -2.7283308506011963
    3. '   ' → logprob: -3.8533308506011963
    4. '_max' → logprob: -4.853331089019775
    5. ' max' → logprob: -5.978331089019775
    6. 'maximum' → logprob: -7.228331089019775
    7. ' maximum' → logprob: -8.478330612182617
    8. ' maximal' → logprob: -9.353330612182617
    9. ' maxim' → logprob: -9.478330612182617
    10. 'sum' → logprob: -9.853330612182617

Token 518: ' demand' (ID: 8492)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.9057931900024414
    2. 'sum' → logprob: -1.4057931900024414
    3. 'def' → logprob: -2.6557931900024414
    4. 'max' → logprob: -2.6557931900024414
    5. '_possible' → logprob: -2.9057931900024414
    6. 'd' → logprob: -3.4057931900024414
    7. 'de' → logprob: -3.4057931900024414
    8. ' possible' → logprob: -3.5307931900024414
    9. '_sum' → logprob: -4.280793190002441
    10. 'des' → logprob: -4.780793190002441

Token 519: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.003328972263261676
    2. 'ee' → logprob: -6.003328800201416
    3. 'é' → logprob: -7.253328800201416
    4. 'e' → logprob: -9.003329277038574
    5. 'def' → logprob: -10.878329277038574
    6. 'è' → logprob: -14.128329277038574
    7. 'er' → logprob: -14.128329277038574
    8. '   ' → logprob: -14.253329277038574
    9. 'rée' → logprob: -15.128329277038574
    10. 'ant' → logprob: -15.878329277038574

Token 520: ' (' (ID: 350)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5273462533950806
    2. ' =' → logprob: -2.402346134185791
    3. '=' → logprob: -2.652346134185791
    4. ',' → logprob: -2.902346134185791
    5. '   ' → logprob: -3.027346134185791
    6. '(' → logprob: -3.527346134185791
    7. ':' → logprob: -3.652346134185791
    8. ' (' → logprob: -3.777346134185791
    9. '(colors' → logprob: -4.027346134185791
    10. '.' → logprob: -4.777346134185791

Token 521: 's' (ID: 82)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.4592599868774414
    2. 'max' → logprob: -1.0842599868774414
    3. ' sum' → logprob: -3.8342599868774414
    4. ' max' → logprob: -5.084259986877441
    5. '   ' → logprob: -6.709259986877441
    6. '(sum' → logprob: -8.459259986877441
    7. '
' → logprob: -8.584259986877441
    8. '```' → logprob: -8.834259986877441
    9. 'colors' → logprob: -9.084259986877441
    10. '`' → logprob: -10.084259986877441

Token 522: 'omme' (ID: 30420)
  Prédit: 'um'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.0017213537357747555
    2. 'omme' → logprob: -6.751721382141113
    3. 'umme' → logprob: -9.126721382141113
    4. '
' → logprob: -9.251721382141113
    5. '=' → logprob: -9.376721382141113
    6. '=sum' → logprob: -10.126721382141113
    7. 'om' → logprob: -10.626721382141113
    8. '=max' → logprob: -10.876721382141113
    9. '[' → logprob: -11.001721382141113
    10. 'umm' → logprob: -11.376721382141113

Token 523: ' de' (ID: 334)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.8081797361373901
    2. ' des' → logprob: -2.0581798553466797
    3. 'des' → logprob: -2.0581798553466797
    4. 'de' → logprob: -2.3081798553466797
    5. '([' → logprob: -2.4331798553466797
    6. '(colors' → logprob: -2.8081798553466797
    7. ' maximale' → logprob: -3.0581798553466797
    8. '_des' → logprob: -3.3081798553466797
    9. '(
' → logprob: -3.3081798553466797
    10. '_max' → logprob: -3.5581798553466797

Token 524: ' toutes' (ID: 17502)
  Prédit: 'colors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'colors' → logprob: -0.5022925734519958
    2. 'les' → logprob: -2.5022926330566406
    3. 'products' → logprob: -2.7522926330566406
    4. 'i' → logprob: -3.2522926330566406
    5. 'abs' → logprob: -3.5022926330566406
    6. '[i' → logprob: -3.7522926330566406
    7. '(i' → logprob: -4.127292633056641
    8. 'cou' → logprob: -4.127292633056641
    9. 'c' → logprob: -4.252292633056641
    10. 'la' → logprob: -4.377292633056641

Token 525: ' les' (ID: 1341)
  Prédit: '(colors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(colors' → logprob: -0.4720813035964966
    2. 'colors' → logprob: -1.4720813035964966
    3. 'les' → logprob: -2.972081184387207
    4. ' les' → logprob: -3.722081184387207
    5. '(color' → logprob: -4.222081184387207
    6. 'color' → logprob: -4.972081184387207
    7. '(i' → logprob: -5.347081184387207
    8. '(' → logprob: -5.347081184387207
    9. ' colors' → logprob: -5.597081184387207
    10. '([' → logprob: -5.597081184387207

Token 526: ' couleurs' (ID: 54001)
  Prédit: 'cou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cou' → logprob: -0.7350851893424988
    2. 'colors' → logprob: -1.1100852489471436
    3. ' couleurs' → logprob: -2.7350852489471436
    4. ' colors' → logprob: -3.3600852489471436
    5. ' abs' → logprob: -4.1100850105285645
    6. 'diff' → logprob: -4.3600850105285645
    7. 'val' → logprob: -4.7350850105285645
    8. 'abs' → logprob: -4.8600850105285645
    9. 'c' → logprob: -4.8600850105285645
    10. 'pairs' → logprob: -4.9850850105285645

Token 527: ' sauf' (ID: 87919)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2603665590286255
    2. 'assign' → logprob: -1.2603665590286255
    3. ',' → logprob: -2.135366439819336
    4. ' attrib' → logprob: -2.635366439819336
    5. ' assign' → logprob: -2.760366439819336
    6. ' multip' → logprob: -3.385366439819336
    7. 'multip' → logprob: -4.010366439819336
    8. '-' → logprob: -4.510366439819336
    9. ' -' → logprob: -4.510366439819336
    10. '   ' → logprob: -4.635366439819336

Token 528: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.32690224051475525
    2. ' la' → logprob: -1.3269022703170776
    3. ' celle' → logprob: -5.201902389526367
    4. 'celle' → logprob: -5.701902389526367
    5. 'le' → logprob: -6.076902389526367
    6. 'max' → logprob: -6.826902389526367
    7. 'l' → logprob: -8.076902389526367
    8. 'une' → logprob: -8.201902389526367
    9. ' le' → logprob: -8.576902389526367
    10. 'the' → logprob: -9.326902389526367

Token 529: ' plus' (ID: 2932)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.028638575226068497
    2. 'max' → logprob: -4.0286383628845215
    3. 'prem' → logprob: -5.1536383628845215
    4. ' plus' → logprob: -5.7786383628845215
    5. 'maximum' → logprob: -7.9036383628845215
    6. 'min' → logprob: -8.15363883972168
    7. 'minimum' → logprob: -8.27863883972168
    8. 'moins' → logprob: -8.27863883972168
    9. 'der' → logprob: -9.52863883972168
    10. '1' → logprob: -10.15363883972168

Token 530: ' grande' (ID: 10094)
  Prédit: 'gr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gr' → logprob: -0.011349950917065144
    2. 'pet' → logprob: -5.386350154876709
    3. 'grand' → logprob: -5.386350154876709
    4. ' grande' → logprob: -6.886350154876709
    5. 'é' → logprob: -7.886350154876709
    6. 'import' → logprob: -8.51134967803955
    7. 'g' → logprob: -8.88634967803955
    8. '```' → logprob: -9.76134967803955
    9. '_gr' → logprob: -9.88634967803955
    10. 'ha' → logprob: -10.01134967803955

Token 531: ').

' (ID: 3991)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09270212799310684
    2. ').' → logprob: -2.7177021503448486
    3. ',' → logprob: -4.2177019119262695
    4. ' )' → logprob: -5.5927019119262695
    5. ',)' → logprob: -6.4677019119262695
    6. '),' → logprob: -7.4677019119262695
    7. '):' → logprob: -8.59270191192627
    8. ' assign' → logprob: -8.59270191192627
    9. ' ).' → logprob: -8.96770191192627
    10. ')+' → logprob: -8.96770191192627

Token 532: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1597260683774948
    2. 'def' → logprob: -2.034726142883301
    3. '
' → logprob: -4.659726142883301
    4. ' def' → logprob: -5.409726142883301
    5. ' total' → logprob: -7.409726142883301
    6. ' max' → logprob: -7.659726142883301
    7. ' return' → logprob: -7.784726142883301
    8. 'max' → logprob: -8.1597261428833
    9. 'sum' → logprob: -8.2847261428833
    10. '    
' → logprob: -8.5347261428833

Token 533: ' Args' (ID: 39185)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20923583209514618
    2. 'def' → logprob: -2.084235906600952
    3. ' total' → logprob: -3.834235906600952
    4. 'total' → logprob: -3.834235906600952
    5. 'sum' → logprob: -4.709235668182373
    6. 'max' → logprob: -5.084235668182373
    7. ' sum' → logprob: -6.209235668182373
    8. ' max' → logprob: -6.459235668182373
    9. ' return' → logprob: -7.584235668182373
    10. 'return' → logprob: -7.709235668182373

Token 534: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6761424541473389
    2. '   ' → logprob: -0.9261424541473389
    3. ',' → logprob: -2.801142454147339
    4. '):' → logprob: -4.051142692565918
    5. '(colors' → logprob: -5.426142692565918
    6. ':
' → logprob: -5.926142692565918
    7. '):
' → logprob: -6.051142692565918
    8. '=' → logprob: -6.426142692565918
    9. '[' → logprob: -6.926142692565918
    10. 'def' → logprob: -6.926142692565918

Token 535: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0054929605685174465
    2. '       ' → logprob: -6.0054931640625
    3. '```' → logprob: -6.0054931640625
    4. 'colors' → logprob: -8.3804931640625
    5. '    ' → logprob: -8.8804931640625
    6. '
' → logprob: -9.3804931640625
    7. '    
' → logprob: -10.6304931640625
    8. 'def' → logprob: -10.8804931640625
    9. '   ' → logprob: -11.5054931640625
    10. '  ' → logprob: -11.6304931640625

Token 536: ' colors' (ID: 10803)
  Prédit: 'colors'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'colors' (adapté à ' colors') → logprob: -0.0006370236515067518
    2. ' colors' → logprob: -7.500637054443359
    3. 'List' → logprob: -9.75063705444336
    4. '   ' → logprob: -10.87563705444336
    5. 'color' → logprob: -12.37563705444336
    6. 'c' → logprob: -15.00063705444336
    7. '```' → logprob: -15.00063705444336
    8. ' List' → logprob: -15.25063705444336
    9. 'def' → logprob: -15.62563705444336
    10. '(colors' → logprob: -15.87563705444336

Token 537: ' (' (ID: 350)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.23297244310379028
    2. ':' → logprob: -2.1079723834991455
    3. ')' → logprob: -2.7329723834991455
    4. '):
' → logprob: -4.357972621917725
    5. ',' → logprob: -5.357972621917725
    6. '[' → logprob: -5.982972621917725
    7. '):

' → logprob: -8.607972145080566
    8. '```' → logprob: -8.607972145080566
    9. '<|end|>' → logprob: -8.732972145080566
    10. '   ' → logprob: -9.232972145080566

Token 538: 'List' (ID: 950)
  Prédit: 'List'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.00029232146334834397
    2. 'list' → logprob: -8.250292778015137
    3. ')' → logprob: -11.000292778015137
    4. ' List' → logprob: -11.750292778015137
    5. 'Dict' → logprob: -12.250292778015137
    6. '   ' → logprob: -14.500292778015137
    7. '[List' → logprob: -14.500292778015137
    8. 'dict' → logprob: -16.00029182434082
    9. '
' → logprob: -16.00029182434082
    10. 'int' → logprob: -16.25029182434082

Token 539: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -1.9361264946837764e-07
    2. 'int' → logprob: -16.375
    3. '):' → logprob: -17.25
    4. ')' → logprob: -18.75
    5. '[List' → logprob: -18.75
    6. '[' → logprob: -18.875
    7. '<int' → logprob: -18.875
    8. '):
' → logprob: -19.5
    9. '[Int' → logprob: -20.25
    10. '(int' → logprob: -20.375

Token 540: ']):' (ID: 60705)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.3541221022605896
    2. ']):' → logprob: -1.2291221618652344
    3. ']):
' → logprob: -5.479122161865234
    4. ')' → logprob: -7.104122161865234
    5. '[int' → logprob: -7.979122161865234
    6. ']' → logprob: -8.354122161865234
    7. '],' → logprob: -10.729122161865234
    8. '):' → logprob: -10.729122161865234
    9. '   ' → logprob: -11.729122161865234
    10. ')]' → logprob: -11.979122161865234

Token 541: ' Liste' (ID: 61030)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.05002927780151367
    2. ' List' → logprob: -3.0500292778015137
    3. 'int' → logprob: -6.800029277801514
    4. '   ' → logprob: -8.675029754638672
    5. 'list' → logprob: -9.675029754638672
    6. ' list' → logprob: -10.425029754638672
    7. ' int' → logprob: -10.550029754638672
    8. 'colors' → logprob: -11.675029754638672
    9. '[List' → logprob: -12.425029754638672
    10. '[int' → logprob: -12.550029754638672

Token 542: ' des' (ID: 731)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.009202747605741024
    2. ' des' → logprob: -5.50920295715332
    3. ' de' → logprob: -6.00920295715332
    4. ' of' → logprob: -6.88420295715332
    5. '[' → logprob: -7.00920295715332
    6. ')' → logprob: -8.13420295715332
    7. 'des' → logprob: -9.50920295715332
    8. '```' → logprob: -10.00920295715332
    9. '<int' → logprob: -10.25920295715332
    10. 'de' → logprob: -10.25920295715332

Token 543: ' couleurs' (ID: 54001)
  Prédit: ' couleurs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' couleurs' → logprob: -0.6239908337593079
    2. 'cou' → logprob: -0.8739908337593079
    3. 'colors' → logprob: -3.623990774154663
    4. 'int' → logprob: -4.498991012573242
    5. 'color' → logprob: -5.998991012573242
    6. ' colors' → logprob: -6.373991012573242
    7. ' int' → logprob: -6.498991012573242
    8. 'val' → logprob: -6.873991012573242
    9. 'c' → logprob: -7.373991012573242
    10. 'ent' → logprob: -8.123991012573242

Token 544: ' perm' (ID: 5961)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08289843052625656
    2. '])' → logprob: -3.3328983783721924
    3. '):' → logprob: -3.8328983783721924
    4. '   ' → logprob: -4.8328986167907715
    5. '):
' → logprob: -5.8328986167907715
    6. ']' → logprob: -6.0828986167907715
    7. ']):' → logprob: -6.5828986167907715
    8. 'assign' → logprob: -6.7078986167907715
    9. '[int' → logprob: -6.9578986167907715
    10. '
' → logprob: -7.3328986167907715

Token 545: 'ut' (ID: 339)
  Prédit: 'ises'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ises' → logprob: -0.022708509117364883
    2. 'is' → logprob: -5.522708415985107
    3. 'ise' → logprob: -5.522708415985107
    4. 'ut' → logprob: -5.647708415985107
    5. 'an' → logprob: -6.272708415985107
    6. 'assign' → logprob: -6.272708415985107
    7. 'assigned' → logprob: -6.522708415985107
    8. '```' → logprob: -6.522708415985107
    9. 'Assign' → logprob: -7.397708415985107
    10. ']' → logprob: -7.522708415985107

Token 546: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.047336116433143616
    2. 'ée' → logprob: -3.4223361015319824
    3. '[' → logprob: -4.922336101531982
    4. 'ed' → logprob: -5.797336101531982
    5. 'é' → logprob: -6.422336101531982
    6. 'és' → logprob: -7.172336101531982
    7. ']' → logprob: -8.17233657836914
    8. '```' → logprob: -9.17233657836914
    9. ')' → logprob: -9.54733657836914
    10. 'ee' → logprob: -9.92233657836914

Token 547: '.

' (ID: 364)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9543958902359009
    2. '):' → logprob: -1.2043958902359009
    3. '):
' → logprob: -1.2043958902359009
    4. '   ' → logprob: -4.454395771026611
    5. ',' → logprob: -6.829395771026611
    6. '):
' → logprob: -7.454395771026611
    7. '):

' → logprob: -8.20439624786377
    8. ' )' → logprob: -8.20439624786377
    9. ']' → logprob: -8.82939624786377
    10. '])' → logprob: -8.82939624786377

Token 548: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005989470519125462
    2. '
' → logprob: -5.3809895515441895
    3. '```' → logprob: -7.2559895515441895
    4. ' return' → logprob: -8.505989074707031
    5. 'return' → logprob: -8.505989074707031
    6. ')' → logprob: -9.505989074707031
    7. ' total' → logprob: -10.130989074707031
    8. '"""
' → logprob: -10.130989074707031
    9. 'total' → logprob: -10.505989074707031
    10. 'max' → logprob: -11.005989074707031

Token 549: ' Returns' (ID: 9609)
  Prédit: 'Returns'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Returns' (adapté à ' Returns') → logprob: -0.06321509182453156
    2. '   ' → logprob: -2.8132150173187256
    3. '
' → logprob: -6.813215255737305
    4. 'returns' → logprob: -9.563215255737305
    5. '"""
' → logprob: -10.188215255737305
    6. ' Returns' → logprob: -10.688215255737305
    7. 'Return' → logprob: -11.813215255737305
    8. '```' → logprob: -12.813215255737305
    9. 'return' → logprob: -13.188215255737305
    10. '       ' → logprob: -13.563215255737305

Token 550: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5366133451461792
    2. '   ' → logprob: -0.9116133451461792
    3. ':
' → logprob: -5.161613464355469
    4. ' :' → logprob: -5.661613464355469
    5. '):' → logprob: -6.536613464355469
    6. 'def' → logprob: -6.911613464355469
    7. ')' → logprob: -7.786613464355469
    8. ':def' → logprob: -7.911613464355469
    9. '):
' → logprob: -7.911613464355469
    10. ',' → logprob: -8.661613464355469

Token 551: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -4.751746746478602e-05
    2. ' int' → logprob: -10.62504768371582
    3. 'int' → logprob: -11.25004768371582
    4. '   ' → logprob: -12.37504768371582
    5. '```' → logprob: -13.25004768371582
    6. '
' → logprob: -13.37504768371582
    7. '    ' → logprob: -14.25004768371582
    8. '       ' → logprob: -14.50004768371582
    9. '  ' → logprob: -14.62504768371582
    10. '    
' → logprob: -14.75004768371582

Token 552: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' (adapté à ' int') → logprob: -0.0002354832977289334
    2. ' int' → logprob: -8.375235557556152
    3. '   ' → logprob: -12.625235557556152
    4. '
' → logprob: -13.500235557556152
    5. 'float' → logprob: -16.750234603881836
    6. '```' → logprob: -16.875234603881836
    7. 'return' → logprob: -17.000234603881836
    8. '[int' → logprob: -17.125234603881836
    9. '(int' → logprob: -17.250234603881836
    10. 'Int' → logprob: -18.500234603881836

Token 553: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03227577731013298
    2. ')' → logprob: -4.282275676727295
    3. '   ' → logprob: -5.532275676727295
    4. ' :' → logprob: -5.532275676727295
    5. ' =' → logprob: -5.907275676727295
    6. ':return' → logprob: -6.157275676727295
    7. ' return' → logprob: -6.282275676727295
    8. ' sum' → logprob: -7.407275676727295
    9. 'sum' → logprob: -7.407275676727295
    10. ':
' → logprob: -7.657275676727295

Token 554: ' La' (ID: 3038)
  Prédit: ' sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.3872041702270508
    2. 'sum' → logprob: -1.1372041702270508
    3. ' return' → logprob: -8.13720417022705
    4. 'return' → logprob: -10.26220417022705
    5. ' max' → logprob: -14.13720417022705
    6. 'max' → logprob: -14.38720417022705
    7. '(sum' → logprob: -14.51220417022705
    8. 's' → logprob: -14.51220417022705
    9. 'colors' → logprob: -14.63720417022705
    10. ' somme' → logprob: -14.76220417022705

Token 555: ' somme' (ID: 64484)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.3135204017162323
    2. ' sum' → logprob: -1.3135204315185547
    3. 'max' → logprob: -9.063520431518555
    4. ' somme' → logprob: -9.813520431518555
    5. 's' → logprob: -9.938520431518555
    6. ' max' → logprob: -10.313520431518555
    7. ' som' → logprob: -13.688520431518555
    8. 'som' → logprob: -13.688520431518555
    9. 'return' → logprob: -13.938520431518555
    10. ' s' → logprob: -14.188520431518555

Token 556: ' maximale' (ID: 76380)
  Prédit: '(colors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(colors' → logprob: -0.6219496726989746
    2. ' des' → logprob: -1.3719496726989746
    3. '(sum' → logprob: -2.4969496726989746
    4. ' de' → logprob: -2.8719496726989746
    5. '(' → logprob: -3.1219496726989746
    6. 'sum' → logprob: -4.621949672698975
    7. ' of' → logprob: -4.996949672698975
    8. '(s' → logprob: -6.121949672698975
    9. 'des' → logprob: -6.496949672698975
    10. ' sum' → logprob: -6.746949672698975

Token 557: '.
' (ID: 558)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.03348478302359581
    2. ' de' → logprob: -3.533484697341919
    3. 'des' → logprob: -6.408484935760498
    4. ' -' → logprob: -7.158484935760498
    5. '(colors' → logprob: -8.03348445892334
    6. '(des' → logprob: -8.53348445892334
    7. ' of' → logprob: -8.78348445892334
    8. 'de' → logprob: -9.15848445892334
    9. '   ' → logprob: -9.53348445892334
    10. ' (' → logprob: -9.90848445892334

Token 558: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0003741887048818171
    2. ' return' → logprob: -8.250373840332031
    3. '```' → logprob: -10.000373840332031
    4. 'return' → logprob: -10.750373840332031
    5. '
' → logprob: -11.500373840332031
    6. '    
' → logprob: -11.750373840332031
    7. ' 
' → logprob: -11.875373840332031
    8. '  ' → logprob: -12.625373840332031
    9. ')' → logprob: -12.625373840332031
    10. ' sum' → logprob: -13.125373840332031

Token 559: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01603425107896328
    2. ' return' → logprob: -4.641034126281738
    3. 'return' → logprob: -5.641034126281738
    4. 'sum' → logprob: -6.766034126281738
    5. '```' → logprob: -7.516034126281738
    6. ' sum' → logprob: -7.766034126281738
    7. '
' → logprob: -8.016034126281738
    8. 'max' → logprob: -9.266034126281738
    9. 'total' → logprob: -9.766034126281738
    10. ' total' → logprob: -10.266034126281738

Token 560: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.43317943811416626
    2. 'return' → logprob: -1.4331793785095215
    3. ' return' → logprob: -2.1831793785095215
    4. '```' → logprob: -8.43317985534668
    5. 'sum' → logprob: -10.18317985534668
    6. 'total' → logprob: -10.55817985534668
    7. 'result' → logprob: -11.18317985534668
    8. ' total' → logprob: -11.43317985534668
    9. 's' → logprob: -12.05817985534668
    10. ' sum' → logprob: -12.55817985534668

Token 561: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0019693158101290464
    2. ' return' → logprob: -6.251969337463379
    3. '   ' → logprob: -10.501969337463379
    4. 'total' → logprob: -11.501969337463379
    5. 'if' → logprob: -13.876969337463379
    6. 'result' → logprob: -14.501969337463379
    7. 'sum' → logprob: -14.501969337463379
    8. 's' → logprob: -14.626969337463379
    9. '```' → logprob: -14.626969337463379
    10. 'ret' → logprob: -16.126968383789062

Token 562: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.04859395697712898
    2. ' sum' → logprob: -3.0485939979553223
    3. '   ' → logprob: -12.298593521118164
    4. '(sum' → logprob: -13.548593521118164
    5. ' ' → logprob: -15.548593521118164
    6. '	sum' → logprob: -15.798593521118164
    7. '  ' → logprob: -16.548593521118164
    8. 'max' → logprob: -16.548593521118164
    9. '=sum' → logprob: -16.798593521118164
    10. '```' → logprob: -16.923593521118164

Token 563: '(colors' (ID: 131922)
  Prédit: '(colors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(colors' → logprob: -0.0019311357755213976
    2. 'colors' → logprob: -6.251931190490723
    3. ' colors' → logprob: -13.001931190490723
    4. '(sorted' → logprob: -16.751930236816406
    5. '_colors' → logprob: -16.876930236816406
    6. '/colors' → logprob: -17.126930236816406
    7. '.colors' → logprob: -18.001930236816406
    8. '(color' → logprob: -18.126930236816406
    9. '(' → logprob: -18.876930236816406
    10. 'Colors' → logprob: -19.251930236816406

Token 564: ')' (ID: 8)
  Prédit: '[:-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:-' → logprob: -0.6692095994949341
    2. ')' → logprob: -0.9192095994949341
    3. '[' → logprob: -2.4192094802856445
    4. '[:' → logprob: -10.044209480285645
    5. ')-' → logprob: -11.044209480285645
    6. '   ' → logprob: -15.044209480285645
    7. ' )' → logprob: -15.294209480285645
    8. '[])' → logprob: -15.794209480285645
    9. '`)' → logprob: -15.919209480285645
    10. '[:]' → logprob: -16.04421043395996

Token 565: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.1002165898680687
    2. '-' → logprob: -2.3502166271209717
    3. ' ' → logprob: -12.60021686553955
    4. ' ' → logprob: -13.47521686553955
    5. ' -
' → logprob: -13.47521686553955
    6. ')' → logprob: -13.72521686553955
    7. '```' → logprob: -14.60021686553955
    8. ',' → logprob: -15.10021686553955
    9. '<|end|>' → logprob: -15.22521686553955
    10. '#' → logprob: -15.35021686553955

Token 566: ' colors' (ID: 10803)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -2.7729658540920354e-05
    2. ' max' → logprob: -10.500027656555176
    3. 'min' → logprob: -16.500028610229492
    4. '(max' → logprob: -18.000028610229492
    5. '[max' → logprob: -18.875028610229492
    6. '	max' → logprob: -19.875028610229492
    7. '=max' → logprob: -21.500028610229492
    8. 'maximum' → logprob: -22.375028610229492
    9. '   ' → logprob: -22.625028610229492
    10. '```' → logprob: -22.750028610229492

Token 567: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.001929228543303907
    2. '[' → logprob: -6.25192928314209
    3. '[
' → logprob: -15.12692928314209
    4. '[len' → logprob: -15.62692928314209
    5. '0' → logprob: -16.501928329467773
    6. '-' → logprob: -17.001928329467773
    7. '[max' → logprob: -17.126928329467773
    8. '[:-' → logprob: -17.501928329467773
    9. ' [-' → logprob: -18.126928329467773
    10. '[:' → logprob: -19.376928329467773

Token 568: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.500000953674316
    3. '```' → logprob: -17.0
    4. '   ' → logprob: -17.375
    5. '0' → logprob: -17.5625
    6. '
' → logprob: -18.5625
    7. '۱' → logprob: -18.75
    8. '2' → logprob: -18.9375
    9. '１' → logprob: -19.0
    10. '১' → logprob: -19.4375

Token 569: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.018545076251029968
    2. ']' → logprob: -4.018545150756836
    3. '])' → logprob: -8.393545150756836
    4. ' )' → logprob: -9.518545150756836
    5. '<|end|>' → logprob: -9.643545150756836
    6. '[' → logprob: -11.643545150756836
    7. ' ]' → logprob: -12.018545150756836
    8. ')]' → logprob: -12.143545150756836
    9. '}' → logprob: -12.518545150756836
    10. ')
' → logprob: -13.393545150756836

Token 570: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.03878027945756912
    2. '<|end|>' → logprob: -3.2887802124023438
    3. '<|end|>' → logprob: -8.163780212402344
    4. '#' → logprob: -8.413780212402344
    5. '```' → logprob: -8.663780212402344
    6. ' def' → logprob: -10.663780212402344
    7. ')' → logprob: -12.038780212402344
    8. '
' → logprob: -12.163780212402344
    9. 'import' → logprob: -12.288780212402344
    10. '[' → logprob: -12.538780212402344

Token 571: ' format' (ID: 6011)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.3120054304599762
    2. 'main' → logprob: -1.4370054006576538
    3. ' solve' → logprob: -4.437005519866943
    4. 'color' → logprob: -5.562005519866943
    5. 'max' → logprob: -5.812005519866943
    6. 'def' → logprob: -5.937005519866943
    7. 'solve' → logprob: -6.312005519866943
    8. ' color' → logprob: -6.562005519866943
    9. ' max' → logprob: -6.687005519866943
    10. ' def' → logprob: -6.937005519866943

Token 572: '_answer' (ID: 65702)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10214408487081528
    2. '_' → logprob: -3.2271440029144287
    3. '_code' → logprob: -3.8521440029144287
    4. '_output' → logprob: -4.352144241333008
    5. '_result' → logprob: -5.227144241333008
    6. '_colors' → logprob: -5.227144241333008
    7. '_answer' → logprob: -6.852144241333008
    8. '_results' → logprob: -6.852144241333008
    9. '_response' → logprob: -6.852144241333008
    10. 'def' → logprob: -6.977144241333008

Token 573: '(ans' (ID: 70054)
  Prédit: '(colors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(colors' → logprob: -0.07564535737037659
    2. '(' → logprob: -3.0756454467773438
    3. '(ans' → logprob: -4.325645446777344
    4. '(answer' → logprob: -4.950645446777344
    5. '(s' → logprob: -5.825645446777344
    6. '(color' → logprob: -7.575645446777344
    7. '(results' → logprob: -7.825645446777344
    8. '(result' → logprob: -7.950645446777344
    9. '(def' → logprob: -7.950645446777344
    10. '(chars' → logprob: -8.325645446777344

Token 574: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.015126321464776993
    2. '):
' → logprob: -4.2651262283325195
    3. ')' → logprob: -7.0151262283325195
    4. '):
' → logprob: -10.89012622833252
    5. ',' → logprob: -11.01512622833252
    6. ':' → logprob: -11.14012622833252
    7. ' ):' → logprob: -11.64012622833252
    8. '   ' → logprob: -12.89012622833252
    9. '):

' → logprob: -13.26512622833252
    10. ' ' → logprob: -14.76512622833252

Token 575: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.10045240074396133
    2. ' n' → logprob: -2.350452423095703
    3. 'N' → logprob: -8.600452423095703
    4. 'E' → logprob: -10.600452423095703
    5. ' N' → logprob: -11.475452423095703
    6. 'colors' → logprob: -11.600452423095703
    7. ' E' → logprob: -12.725452423095703
    8. 'num' → logprob: -12.725452423095703
    9. '   ' → logprob: -13.100452423095703
    10. ' ' → logprob: -13.475452423095703

Token 576: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.10082947462797165
    2. '):
' → logprob: -2.3508293628692627
    3. ')' → logprob: -7.475829601287842
    4. '):
' → logprob: -9.975829124450684
    5. '):

' → logprob: -12.350829124450684
    6. ',' → logprob: -13.475829124450684
    7. ' ):' → logprob: -13.600829124450684
    8. ':' → logprob: -13.725829124450684
    9. '   ' → logprob: -13.725829124450684
    10. '  ' → logprob: -17.100830078125

Token 577: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.043156981468200684
    2. '\n' → logprob: -4.16815710067749
    3. ':' → logprob: -4.79315710067749
    4. '    
' → logprob: -5.04315710067749
    5. '
' → logprob: -5.41815710067749
    6. '\' → logprob: -6.04315710067749
    7. ':
' → logprob: -6.79315710067749
    8. '```' → logprob: -6.91815710067749
    9. '  
' → logprob: -7.29315710067749
    10. ' 
' → logprob: -8.043156623840332

Token 578: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0034866274800151587
    2. 'result' → logprob: -6.128486633300781
    3. '
' → logprob: -7.253486633300781
    4. 'res' → logprob: -8.128486633300781
    5. 'return' → logprob: -9.253486633300781
    6. 'answer' → logprob: -9.628486633300781
    7. '```' → logprob: -10.128486633300781
    8. ' res' → logprob: -10.378486633300781
    9. '    
' → logprob: -10.753486633300781
    10. ' result' → logprob: -11.003486633300781

Token 579: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09008753299713135
    2. 'def' → logprob: -3.340087413787842
    3. '"""
' → logprob: -3.965087413787842
    4. '"""' → logprob: -4.090087413787842
    5. ' def' → logprob: -4.590087413787842
    6. ' """
' → logprob: -5.840087413787842
    7. '"' → logprob: -6.840087413787842
    8. ' """' → logprob: -7.465087413787842
    9. '    ' → logprob: -9.215087890625
    10. ''' → logprob: -9.590087890625

Token 580: ' Form' (ID: 5287)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0728929191827774
    2. 'result' → logprob: -3.447892904281616
    3. '   ' → logprob: -4.197893142700195
    4. 'return' → logprob: -4.322893142700195
    5. ' def' → logprob: -5.197893142700195
    6. ' result' → logprob: -6.197893142700195
    7. ' return' → logprob: -6.322893142700195
    8. 'colors' → logprob: -8.197893142700195
    9. 'res' → logprob: -8.572893142700195
    10. '
' → logprob: -8.822893142700195

Token 581: 'ate' (ID: 379)
  Prédit: 'at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.0004331725067459047
    2. 'ats' → logprob: -8.250432968139648
    3. 'ate' → logprob: -8.750432968139648
    4. 'atte' → logprob: -11.750432968139648
    5. ' at' → logprob: -13.375432968139648
    6. 'ат' → logprob: -13.375432968139648
    7. '_at' → logprob: -14.125432968139648
    8. '```' → logprob: -15.125432968139648
    9. '	at' → logprob: -15.250432968139648
    10. '
' → logprob: -15.250432968139648

Token 582: ' la' (ID: 557)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -1.1316585540771484
    2. '(ans' → logprob: -1.6316585540771484
    3. 'def' → logprob: -1.7566585540771484
    4. ' the' → logprob: -2.0066585540771484
    5. '_ans' → logprob: -3.1316585540771484
    6. 'ans' → logprob: -3.6316585540771484
    7. '(' → logprob: -3.7566585540771484
    8. '(
' → logprob: -3.8816585540771484
    9. '   ' → logprob: -4.256658554077148
    10. '_' → logprob: -4.881658554077148

Token 583: ' réponse' (ID: 50332)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.15885713696479797
    2. 'answer' → logprob: -3.1588571071624756
    3. 'return' → logprob: -3.2838571071624756
    4. 'res' → logprob: -3.9088571071624756
    5. 'str' → logprob: -3.9088571071624756
    6. 'colors' → logprob: -4.908857345581055
    7. 'chaine' → logprob: -5.658857345581055
    8. 'string' → logprob: -5.783857345581055
    9. 'ans' → logprob: -6.033857345581055
    10. '"' → logprob: -6.158857345581055

Token 584: ' en' (ID: 469)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.05131116881966591
    2. '(n' → logprob: -4.176311016082764
    3. '(' → logprob: -4.676311016082764
    4. 'def' → logprob: -4.676311016082764
    5. '(colors' → logprob: -5.176311016082764
    6. ':' → logprob: -5.926311016082764
    7. '   ' → logprob: -6.051311016082764
    8. '(
' → logprob: -6.801311016082764
    9. '(answer' → logprob: -7.301311016082764
    10. 'ans' → logprob: -7.301311016082764

Token 585: ' chaîne' (ID: 89288)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.5904631614685059
    2. ''' → logprob: -0.8404631614685059
    3. 'str' → logprob: -5.215463161468506
    4. ''\' → logprob: -5.965463161468506
    5. '"\' → logprob: -6.715463161468506
    6. ''une' → logprob: -7.215463161468506
    7. '   ' → logprob: -7.340463161468506
    8. ''un' → logprob: -7.715463161468506
    9. '"""' → logprob: -7.715463161468506
    10. ' '' → logprob: -7.840463161468506

Token 586: ' d' (ID: 272)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.09420587122440338
    2. 'de' → logprob: -2.469205856323242
    3. 'f' → logprob: -5.969205856323242
    4. 's' → logprob: -6.344205856323242
    5. 'def' → logprob: -8.219205856323242
    6. '_de' → logprob: -8.344205856323242
    7. '_' → logprob: -8.969205856323242
    8. ' f' → logprob: -9.969205856323242
    9. 'return' → logprob: -10.094205856323242
    10. ' =' → logprob: -10.719205856323242

Token 587: ''ent' (ID: 53422)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.31818145513534546
    2. 'e' → logprob: -1.3181815147399902
    3. ' caractères' → logprob: -5.81818151473999
    4. 'a' → logprob: -8.068181037902832
    5. ' caracteres' → logprob: -8.318181037902832
    6. 'c' → logprob: -8.693181037902832
    7. '_car' → logprob: -8.818181037902832
    8. 'ans' → logprob: -9.193181037902832
    9. 'es' → logprob: -9.318181037902832
    10. '(car' → logprob: -9.693181037902832

Token 588: 'iers' (ID: 11012)
  Prédit: 'rée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rée' → logprob: -0.018813950940966606
    2. 'ête' → logprob: -4.6438140869140625
    3. 'ée' → logprob: -5.2688140869140625
    4. 'ité' → logprob: -6.2688140869140625
    5. 'r' → logprob: -6.5188140869140625
    6. 'er' → logprob: -8.518814086914062
    7. 'ree' → logprob: -9.768814086914062
    8. 'ier' → logprob: -9.893814086914062
    9. 'ré' → logprob: -10.393814086914062
    10. 'êtes' → logprob: -10.643814086914062

Token 589: ' sépar' (ID: 97160)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.14551255106925964
    2. ',' → logprob: -3.645512580871582
    3. ' join' → logprob: -3.770512580871582
    4. '   ' → logprob: -4.395512580871582
    5. 'de' → logprob: -4.520512580871582
    6. '(' → logprob: -4.645512580871582
    7. 'def' → logprob: -4.770512580871582
    8. ' représentant' → logprob: -5.020512580871582
    9. ' representing' → logprob: -5.270512580871582
    10. ' avec' → logprob: -5.895512580871582

Token 590: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.3708759546279907
    2. 'ée' → logprob: -1.4958759546279907
    3. 'é' → logprob: -2.870875835418701
    4. 'ées' → logprob: -4.870875835418701
    5. ' par' → logprob: -4.995875835418701
    6. 'es' → logprob: -5.245875835418701
    7. 'space' → logprob: -5.495875835418701
    8. 'par' → logprob: -6.370875835418701
    9. 'e' → logprob: -6.745875835418701
    10. ' espaces' → logprob: -7.120875835418701

Token 591: ' par' (ID: 686)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.28433823585510254
    2. ' par' → logprob: -1.4093382358551025
    3. 'by' → logprob: -6.284337997436523
    4. ''' → logprob: -7.534337997436523
    5. '('' → logprob: -8.284337997436523
    6. '(par' → logprob: -8.909337997436523
    7. '```' → logprob: -9.284337997436523
    8. ' by' → logprob: -9.284337997436523
    9. '"' → logprob: -10.159337997436523
    10. '_par' → logprob: -10.784337997436523

Token 592: ' des' (ID: 731)
  Prédit: 'esp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'esp' → logprob: -0.48390159010887146
    2. 'des' → logprob: -1.8589016199111938
    3. 'es' → logprob: -2.4839015007019043
    4. ''esp' → logprob: -2.6089015007019043
    5. 'un' → logprob: -3.8589015007019043
    6. ''espace' → logprob: -4.233901500701904
    7. ' espaces' → logprob: -4.233901500701904
    8. 'spaces' → logprob: -4.733901500701904
    9. ' des' → logprob: -4.983901500701904
    10. 'space' → logprob: -6.108901500701904

Token 593: ' espaces' (ID: 98361)
  Prédit: 'esp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'esp' → logprob: -0.07178681343793869
    2. ''esp' → logprob: -2.821786880493164
    3. 'spaces' → logprob: -5.571786880493164
    4. ' espaces' → logprob: -5.696786880493164
    5. 'es' → logprob: -6.321786880493164
    6. ''espace' → logprob: -7.446786880493164
    7. '’esp' → logprob: -8.821786880493164
    8. 'space' → logprob: -10.196786880493164
    9. 'Esp' → logprob: -11.321786880493164
    10. '_' → logprob: -11.446786880493164

Token 594: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23809190094470978
    2. 'def' → logprob: -2.3630919456481934
    3. '\n' → logprob: -3.3630919456481934
    4. ',' → logprob: -3.7380919456481934
    5. '+' → logprob: -4.113091945648193
    6. ':' → logprob: -4.238091945648193
    7. ' +' → logprob: -4.488091945648193
    8. '.' → logprob: -5.238091945648193
    9. ':
' → logprob: -5.613091945648193
    10. '    
' → logprob: -6.613091945648193

Token 595: ' dans' (ID: 2671)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.09983475506305695
    2. ' '' → logprob: -3.224834680557251
    3. '   ' → logprob: -3.974834680557251
    4. ''\' → logprob: -4.59983491897583
    5. '"' → logprob: -4.84983491897583
    6. ' return' → logprob: -4.97483491897583
    7. 'return' → logprob: -5.34983491897583
    8. '\n' → logprob: -6.97483491897583
    9. 'result' → logprob: -7.09983491897583
    10. ' '\' → logprob: -7.22483491897583

Token 596: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.7249237298965454
    2. ' l' → logprob: -0.7249237298965454
    3. ' la' → logprob: -4.849923610687256
    4. 'le' → logprob: -5.599923610687256
    5. 'la' → logprob: -5.599923610687256
    6. 'range' → logprob: -5.724923610687256
    7. ''' → logprob: -5.849923610687256
    8. 'ordre' → logprob: -5.974923610687256
    9. ' le' → logprob: -6.099923610687256
    10. ''ordre' → logprob: -6.974923610687256

Token 597: ''ordre' (ID: 124753)
  Prédit: ''ordre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''ordre' → logprob: -0.033410072326660156
    2. ''' → logprob: -3.53341007232666
    3. 'e' → logprob: -6.40841007232666
    4. 'a' → logprob: -7.28341007232666
    5. 'range' → logprob: -8.28341007232666
    6. ' range' → logprob: -8.40841007232666
    7. '’ordre' → logprob: -8.53341007232666
    8. ''espace' → logprob: -9.03341007232666
    9. 'ordre' → logprob: -9.15841007232666
    10. '_range' → logprob: -9.78341007232666

Token 598: ' des' (ID: 731)
  Prédit: 'des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'des' → logprob: -0.8210172057151794
    2. 'range' → logprob: -0.9460172057151794
    3. 'de' → logprob: -2.321017265319824
    4. ' des' → logprob: -3.571017265319824
    5. 'def' → logprob: -3.696017265319824
    6. '(range' → logprob: -4.821017265319824
    7. ' range' → logprob: -5.071017265319824
    8. ' de' → logprob: -5.821017265319824
    9. '   ' → logprob: -7.571017265319824
    10. 'd' → logprob: -7.946017265319824

Token 599: ' somm' (ID: 44830)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.07049395889043808
    2. ' range' → logprob: -2.6954939365386963
    3. '1' → logprob: -7.820494174957275
    4. 'i' → logprob: -9.570493698120117
    5. ' i' → logprob: -9.695493698120117
    6. '(range' → logprob: -11.070493698120117
    7. ' ' → logprob: -13.070493698120117
    8. '   ' → logprob: -13.320493698120117
    9. '	range' → logprob: -13.695493698120117
    10. 'rang' → logprob: -13.945493698120117

Token 600: 'ets' (ID: 1719)
  Prédit: 'ets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ets' → logprob: -0.004194148350507021
    2. 'et' → logprob: -6.004194259643555
    3. 'ètres' → logprob: -7.504194259643555
    4. 'ètes' → logprob: -7.754194259643555
    5. 'es' → logprob: -8.129194259643555
    6. 'etes' → logprob: -8.504194259643555
    7. 'tes' → logprob: -9.754194259643555
    8. 't' → logprob: -10.004194259643555
    9. 'res' → logprob: -10.129194259643555
    10. 'e' → logprob: -10.879194259643555

Token 601: ' de' (ID: 334)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.10274901241064072
    2. '   ' → logprob: -2.7277491092681885
    3. '(n' → logprob: -4.852748870849609
    4. ' def' → logprob: -5.102748870849609
    5. '(' → logprob: -5.102748870849609
    6. ',' → logprob: -5.727748870849609
    7. ' (' → logprob: -5.852748870849609
    8. ':' → logprob: -6.477748870849609
    9. '.' → logprob: -6.477748870849609
    10. ')' → logprob: -7.227748870849609

Token 602: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0033650966361165047
    2. ' ' → logprob: -6.0033650398254395
    3. 'range' → logprob: -7.3783650398254395
    4. ' range' → logprob: -8.253365516662598
    5. ' la' → logprob: -13.628365516662598
    6. '0' → logprob: -14.503365516662598
    7. '`' → logprob: -14.503365516662598
    8. 'l' → logprob: -15.253365516662598
    9. '```' → logprob: -15.253365516662598
    10. '
' → logprob: -15.753365516662598

Token 603: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.06365567445755005
    2. 'range' → logprob: -2.8136556148529053
    3. ' range' → logprob: -6.438655853271484
    4. ' ' → logprob: -9.438655853271484
    5. 'la' → logprob: -12.688655853271484
    6. 's' → logprob: -13.938655853271484
    7. '(range' → logprob: -14.313655853271484
    8. 'def' → logprob: -14.813655853271484
    9. ' la' → logprob: -14.813655853271484
    10. '`' → logprob: -14.813655853271484

Token 604: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.039833247661590576
    2. ' to' → logprob: -4.539833068847656
    3. '<|end|>' → logprob: -4.664833068847656
    4. 'à' → logprob: -4.789833068847656
    5. ' ' → logprob: -5.664833068847656
    6. ',' → logprob: -6.289833068847656
    7. ' )' → logprob: -6.414833068847656
    8. ')' → logprob: -6.539833068847656
    9. ' jusqu' → logprob: -7.414833068847656
    10. ' ,' → logprob: -8.289833068847656

Token 605: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.693148672580719
    2. ' n' → logprob: -0.693148672580719
    3. ' ' → logprob: -15.068148612976074
    4. '	n' → logprob: -15.318148612976074
    5. ' ' → logprob: -15.568148612976074
    6. '`' → logprob: -15.693148612976074
    7. '(n' → logprob: -15.818148612976074
    8. '_n' → logprob: -16.19314956665039
    9. ''' → logprob: -16.31814956665039
    10. '```' → logprob: -16.31814956665039

Token 606: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7975107431411743
    2. ':' → logprob: -1.0475107431411743
    3. ':
' → logprob: -2.5475106239318848
    4. 'def' → logprob: -3.0475106239318848
    5. '\n' → logprob: -3.5475106239318848
    6. '+' → logprob: -4.047510623931885
    7. ',' → logprob: -4.547510623931885
    8. ' +' → logprob: -5.797510623931885
    9. '):' → logprob: -6.047510623931885
    10. ':return' → logprob: -6.047510623931885

Token 607: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00742891151458025
    2. '
' → logprob: -5.757429122924805
    3. 'def' → logprob: -6.382429122924805
    4. '```' → logprob: -6.757429122924805
    5. '\n' → logprob: -7.007429122924805
    6. '    
' → logprob: -8.257429122924805
    7. 'return' → logprob: -9.132429122924805
    8. '`' → logprob: -10.632429122924805
    9. '\' → logprob: -10.757429122924805
    10. 'result' → logprob: -11.007429122924805

Token 608: ' Args' (ID: 39185)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.31027770042419434
    2. '   ' → logprob: -1.6852777004241943
    3. 'result' → logprob: -3.0602777004241943
    4. '
' → logprob: -3.9352777004241943
    5. 'return' → logprob: -5.060277938842773
    6. '\n' → logprob: -5.060277938842773
    7. '\' → logprob: -7.560277938842773
    8. '    
' → logprob: -7.935277938842773
    9. ' 
' → logprob: -8.310277938842773
    10. '```' → logprob: -8.310277938842773

Token 609: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7350982427597046
    2. '   ' → logprob: -1.7350982427597046
    3. ',' → logprob: -1.9850982427597046
    4. '):
' → logprob: -2.485098361968994
    5. '):' → logprob: -2.860098361968994
    6. 'def' → logprob: -3.485098361968994
    7. ':
' → logprob: -3.860098361968994
    8. ')' → logprob: -5.235098361968994
    9. '(n' → logprob: -5.860098361968994
    10. '(' → logprob: -6.485098361968994

Token 610: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007625799626111984
    2. 'n' → logprob: -7.500762462615967
    3. '
' → logprob: -9.250762939453125
    4. '       ' → logprob: -9.750762939453125
    5. 'def' → logprob: -10.625762939453125
    6. ' n' → logprob: -11.000762939453125
    7. '    ' → logprob: -12.250762939453125
    8. '```' → logprob: -12.625762939453125
    9. '    
' → logprob: -12.750762939453125
    10. '  ' → logprob: -13.875762939453125

Token 611: ' ans' (ID: 3345)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.001203923486173153
    2. 'ans' (adapté à ' ans') → logprob: -7.126204013824463
    3. ' n' → logprob: -8.251203536987305
    4. '   ' → logprob: -9.376203536987305
    5. 'answer' → logprob: -11.001203536987305
    6. 'def' → logprob: -11.501203536987305
    7. ' ans' → logprob: -11.626203536987305
    8. '
' → logprob: -11.876203536987305
    9. 'self' → logprob: -12.501203536987305
    10. 'colors' → logprob: -13.501203536987305

Token 612: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0019649125169962645
    2. ')' → logprob: -7.001965045928955
    3. '):' → logprob: -7.376965045928955
    4. ':' → logprob: -9.126964569091797
    5. ' (' → logprob: -9.751964569091797
    6. '(int' → logprob: -9.876964569091797
    7. '[int' → logprob: -10.001964569091797
    8. ',int' → logprob: -10.251964569091797
    9. '):
' → logprob: -10.376964569091797
    10. ',
' → logprob: -10.626964569091797

Token 613: 'Dict' (ID: 19608)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.015060683712363243
    2. 'List' → logprob: -4.390060901641846
    3. ')' → logprob: -6.140060901641846
    4. 'ans' → logprob: -8.640060424804688
    5. 'n' → logprob: -9.265060424804688
    6. 'list' → logprob: -9.765060424804688
    7. '[int' → logprob: -10.640060424804688
    8. '):' → logprob: -11.515060424804688
    9. '   ' → logprob: -12.140060424804688
    10. '):
' → logprob: -12.265060424804688

Token 614: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -4.990154047845863e-05
    2. '<int' → logprob: -10.625049591064453
    3. 'int' → logprob: -10.750049591064453
    4. '[' → logprob: -13.375049591064453
    5. '(int' → logprob: -14.125049591064453
    6. ',int' → logprob: -14.375049591064453
    7. ']int' → logprob: -15.000049591064453
    8. '[Int' → logprob: -15.375049591064453
    9. '[
' → logprob: -15.625049591064453
    10. '```' → logprob: -16.000049591064453

Token 615: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004216351546347141
    2. ',int' → logprob: -5.629216194152832
    3. '[int' → logprob: -7.629216194152832
    4. 'int' → logprob: -9.004216194152832
    5. ' ,' → logprob: -12.504216194152832
    6. ']int' → logprob: -13.254216194152832
    7. '<int' → logprob: -14.504216194152832
    8. ',
' → logprob: -14.754216194152832
    9. '(int' → logprob: -15.254216194152832
    10. ' int' → logprob: -15.379216194152832

Token 616: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -4.008129963040119e-06
    2. ' int' → logprob: -12.500003814697266
    3. '[int' → logprob: -16.000003814697266
    4. ')' → logprob: -17.250003814697266
    5. ']int' → logprob: -17.875003814697266
    6. '   ' → logprob: -18.000003814697266
    7. '<int' → logprob: -18.625003814697266
    8. '
' → logprob: -19.125003814697266
    9. '```' → logprob: -19.250003814697266
    10. '(int' → logprob: -19.500003814697266

Token 617: ']):' (ID: 60705)
  Prédit: ']):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']):' → logprob: -0.4053003787994385
    2. '])' → logprob: -1.1553003787994385
    3. ']):
' → logprob: -4.030300140380859
    4. ']' → logprob: -7.905300140380859
    5. '],' → logprob: -9.65530014038086
    6. ')' → logprob: -10.53030014038086
    7. ')]' → logprob: -11.40530014038086
    8. '>):' → logprob: -12.15530014038086
    9. '])]' → logprob: -13.03030014038086
    10. ']>' → logprob: -13.15530014038086

Token 618: ' D' (ID: 415)
  Prédit: ' result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' result' → logprob: -0.7659090757369995
    2. 'result' → logprob: -1.2659090757369995
    3. 'colors' → logprob: -2.015909194946289
    4. ' colors' → logprob: -3.390909194946289
    5. '   ' → logprob: -3.515909194946289
    6. ' answer' → logprob: -4.890909194946289
    7. ' formatted' → logprob: -5.015909194946289
    8. ' res' → logprob: -5.140909194946289
    9. 'n' → logprob: -5.140909194946289
    10. 'answer' → logprob: -5.640909194946289

Token 619: 'iction' (ID: 4090)
  Prédit: 'ict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ict' → logprob: -0.0068000368773937225
    2. 'ef' → logprob: -5.256800174713135
    3. 'iction' → logprob: -7.506800174713135
    4. '
' → logprob: -7.881800174713135
    5. 'ic' → logprob: -8.881799697875977
    6. 'ans' → logprob: -9.006799697875977
    7. 'ictionary' → logprob: -9.131799697875977
    8. ')' → logprob: -10.006799697875977
    9. '{
' → logprob: -10.256799697875977
    10. '{' → logprob: -10.756799697875977

Token 620: 'naire' (ID: 30464)
  Prédit: 'naire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'naire' → logprob: -0.47651559114456177
    2. 'ary' → logprob: -0.9765155911445618
    3. 'aire' → logprob: -6.101515769958496
    4. 'naires' → logprob: -9.226515769958496
    5. '   ' → logprob: -9.851515769958496
    6. '[' → logprob: -11.601515769958496
    7. '
' → logprob: -11.976515769958496
    8. 'ar' → logprob: -12.101515769958496
    9. '{' → logprob: -12.226515769958496
    10. 'a' → logprob: -12.601515769958496

Token 621: ' associ' (ID: 5516)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7899968028068542
    2. ')' → logprob: -1.414996862411499
    3. ' des' → logprob: -1.914996862411499
    4. '[int' → logprob: -3.039996862411499
    5. '<|end|>' → logprob: -3.789996862411499
    6. 'represent' → logprob: -5.03999662399292
    7. '{' → logprob: -5.03999662399292
    8. '       ' → logprob: -5.03999662399292
    9. ' representing' → logprob: -5.28999662399292
    10. ' mapping' → logprob: -5.41499662399292

Token 622: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.008629352785646915
    2. 'é' → logprob: -5.008629322052002
    3. 'és' → logprob: -6.508629322052002
    4. '   ' → logprob: -8.00862979888916
    5. '```' → logprob: -11.13362979888916
    6. '[' → logprob: -11.25862979888916
    7. '{' → logprob: -11.50862979888916
    8. 'ent' → logprob: -12.25862979888916
    9. 's' → logprob: -12.50862979888916
    10. '       ' → logprob: -12.63362979888916

Token 623: ' chaque' (ID: 21194)
  Prédit: 'som'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'som' → logprob: -1.1832687854766846
    2. ' sommet' → logprob: -1.6832687854766846
    3. '   ' → logprob: -2.4332687854766846
    4. 'i' → logprob: -2.8082687854766846
    5. 'les' → logprob: -2.9332687854766846
    6. 'int' → logprob: -2.9332687854766846
    7. ' chaque' → logprob: -3.0582687854766846
    8. ' les' → logprob: -3.0582687854766846
    9. 'vertex' → logprob: -3.5582687854766846
    10. ' i' → logprob: -3.8082687854766846

Token 624: ' sommet' (ID: 130502)
  Prédit: ' sommet'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sommet' → logprob: -0.14657486975193024
    2. 'som' → logprob: -2.5215749740600586
    3. ' node' → logprob: -3.5215749740600586
    4. 'node' → logprob: -4.146574974060059
    5. ' som' → logprob: -5.021574974060059
    6. 's' → logprob: -6.521574974060059
    7. ' noe' → logprob: -7.021574974060059
    8. ' somm' → logprob: -7.521574974060059
    9. 'vertex' → logprob: -8.271574974060059
    10. 'n' → logprob: -8.896574974060059

Token 625: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.03266376256942749
    2. ' to' → logprob: -4.282663822174072
    3. 'à' → logprob: -4.407663822174072
    4. 'to' → logprob: -5.532663822174072
    5. ',' → logprob: -7.032663822174072
    6. '   ' → logprob: -8.157663345336914
    7. ')' → logprob: -8.282663345336914
    8. ':' → logprob: -8.407663345336914
    9. ''à' → logprob: -9.157663345336914
    10. ' aux' → logprob: -9.282663345336914

Token 626: ' sa' (ID: 880)
  Prédit: ' sa'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sa' → logprob: -0.053647685796022415
    2. 'sa' → logprob: -3.053647756576538
    3. ''' → logprob: -5.553647518157959
    4. 'leur' → logprob: -7.178647518157959
    5. ''s' → logprob: -8.678647994995117
    6. ' '' → logprob: -9.803647994995117
    7. 'color' → logprob: -10.303647994995117
    8. 'ans' → logprob: -10.553647994995117
    9. ' couleur' → logprob: -10.553647994995117
    10. ' ' → logprob: -11.428647994995117

Token 627: ' couleur' (ID: 48005)
  Prédit: ' couleur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' couleur' → logprob: -0.06338997930288315
    2. 'cou' → logprob: -3.063390016555786
    3. 'color' → logprob: -4.313389778137207
    4. ' color' → logprob: -6.688389778137207
    5. 'c' → logprob: -10.938389778137207
    6. ''' → logprob: -11.688389778137207
    7. 'space' → logprob: -12.188389778137207
    8. ' ' → logprob: -12.313389778137207
    9. ' ' → logprob: -12.438389778137207
    10. '   ' → logprob: -12.813389778137207

Token 628: '.
' (ID: 558)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.314495325088501
    2. ')' → logprob: -1.439495325088501
    3. '   ' → logprob: -3.814495325088501
    4. '):
' → logprob: -4.564495086669922
    5. ')

' → logprob: -9.189495086669922
    6. '):' → logprob: -9.314495086669922
    7. 'def' → logprob: -10.439495086669922
    8. ').
' → logprob: -10.939495086669922
    9. ')
' → logprob: -11.314495086669922
    10. ').' → logprob: -11.689495086669922

Token 629: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.049257922917604446
    2. '
' → logprob: -3.04925799369812
    3. '    
' → logprob: -7.424257755279541
    4. ')' → logprob: -10.7992582321167
    5. '  
' → logprob: -11.5492582321167
    6. ' 
' → logprob: -11.7992582321167
    7. '```' → logprob: -11.7992582321167
    8. '        
' → logprob: -11.9242582321167
    9. 'def' → logprob: -12.2992582321167
    10. '       ' → logprob: -12.9242582321167

Token 630: ' n' (ID: 297)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.3274090588092804
    2. '   ' → logprob: -1.702409029006958
    3. 'res' → logprob: -3.077409029006958
    4. 'return' → logprob: -3.577409029006958
    5. ' result' → logprob: -4.702409267425537
    6. 'output' → logprob: -5.327409267425537
    7. '
' → logprob: -5.827409267425537
    8. 'lines' → logprob: -6.202409267425537
    9. ' res' → logprob: -7.327409267425537
    10. ' lines' → logprob: -7.577409267425537

Token 631: ' (' (ID: 350)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04719297215342522
    2. ')' → logprob: -3.2971930503845215
    3. '):
' → logprob: -4.7971930503845215
    4. ':' → logprob: -7.5471930503845215
    5. ',' → logprob: -9.297192573547363
    6. '):

' → logprob: -9.797192573547363
    7. '<|end|>' → logprob: -10.047192573547363
    8. '):
' → logprob: -10.797192573547363
    9. '   ' → logprob: -10.922192573547363
    10. ' ):' → logprob: -11.172192573547363

Token 632: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0001278534036828205
    2. ')' → logprob: -9.000127792358398
    3. ' int' → logprob: -13.000127792358398
    4. ')>' → logprob: -13.375127792358398
    5. '[int' → logprob: -14.875127792358398
    6. '):' → logprob: -15.875127792358398
    7. ']int' → logprob: -16.7501277923584
    8. '):
' → logprob: -17.3751277923584
    9. '   ' → logprob: -17.7501277923584
    10. ')>
' → logprob: -17.8751277923584

Token 633: '):' (ID: 3127)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5928956270217896
    2. '):' → logprob: -0.8428956270217896
    3. ')' → logprob: -4.0928955078125
    4. '):
' → logprob: -9.7178955078125
    5. '):

' → logprob: -10.0928955078125
    6. ')**' → logprob: -11.7178955078125
    7. ')
' → logprob: -12.7178955078125
    8. '**' → logprob: -13.0928955078125
    9. '   ' → logprob: -13.2178955078125
    10. ':' → logprob: -13.7178955078125

Token 634: ' Nombre' (ID: 70208)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.2520502805709839
    2. ' int' → logprob: -1.5020502805709839
    3. 'n' → logprob: -9.502050399780273
    4. ' n' → logprob: -10.127050399780273
    5. '   ' → logprob: -12.627050399780273
    6. 'Int' → logprob: -14.627050399780273
    7. '
' → logprob: -14.752050399780273
    8. ' 
' → logprob: -14.752050399780273
    9. 'Number' → logprob: -14.752050399780273
    10. '[int' → logprob: -14.877050399780273

Token 635: ' total' (ID: 3609)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.0765917301177979
    2. '   ' → logprob: -1.8265917301177979
    3. '_' → logprob: -1.9515917301177979
    4. ' d' → logprob: -2.701591730117798
    5. ' des' → logprob: -2.826591730117798
    6. ' of' → logprob: -2.951591730117798
    7. ' +' → logprob: -3.826591730117798
    8. ' n' → logprob: -3.826591730117798
    9. '_de' → logprob: -3.826591730117798
    10. '+' → logprob: -3.951591730117798

Token 636: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.06826968491077423
    2. ' des' → logprob: -3.318269729614258
    3. 'de' → logprob: -4.193269729614258
    4. ' d' → logprob: -4.693269729614258
    5. '_de' → logprob: -6.443269729614258
    6. 'des' → logprob: -6.693269729614258
    7. ' of' → logprob: -7.443269729614258
    8. '   ' → logprob: -7.693269729614258
    9. 'def' → logprob: -7.693269729614258
    10. ')' → logprob: -8.068269729614258

Token 637: ' somm' (ID: 44830)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5207971334457397
    2. ' somm' → logprob: -1.0207971334457397
    3. 'som' → logprob: -4.270797252655029
    4. ' n' → logprob: -4.895797252655029
    5. 'n' → logprob: -5.145797252655029
    6. ' s' → logprob: -5.770797252655029
    7. ' sommet' → logprob: -6.020797252655029
    8. 'nodes' → logprob: -6.145797252655029
    9. 'vertices' → logprob: -6.270797252655029
    10. ' noe' → logprob: -6.395797252655029

Token 638: 'ets' (ID: 1719)
  Prédit: 'ets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ets' → logprob: -0.0035764304921031
    2. 'es' → logprob: -6.128576278686523
    3. 'ents' → logprob: -7.253576278686523
    4. 'ètres' → logprob: -8.253576278686523
    5. 'et' → logprob: -8.878576278686523
    6. 'e' → logprob: -9.128576278686523
    7. 'ètes' → logprob: -9.753576278686523
    8. 'è' → logprob: -9.878576278686523
    9. 'ats' → logprob: -11.128576278686523
    10. 'ts' → logprob: -12.003576278686523

Token 639: '.

' (ID: 364)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.07358478009700775
    2. '):' → logprob: -3.323584794998169
    3. ')' → logprob: -3.448584794998169
    4. '   ' → logprob: -6.32358455657959
    5. ')
' → logprob: -6.94858455657959
    6. '
' → logprob: -8.44858455657959
    7. '):

' → logprob: -9.07358455657959
    8. '):
' → logprob: -10.57358455657959
    9. '```' → logprob: -12.19858455657959
    10. 'def' → logprob: -12.57358455657959

Token 640: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00011105302110081539
    2. 'def' → logprob: -9.500110626220703
    3. '
' → logprob: -10.500110626220703
    4. '    
' → logprob: -12.125110626220703
    5. 'return' → logprob: -13.875110626220703
    6. ')' → logprob: -14.125110626220703
    7. '```' → logprob: -14.125110626220703
    8. ' return' → logprob: -16.000110626220703
    9. '       ' → logprob: -16.000110626220703
    10. '\' → logprob: -16.250110626220703

Token 641: ' Returns' (ID: 9609)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.045621395111083984
    2. 'def' → logprob: -3.670621395111084
    3. '
' → logprob: -4.545621395111084
    4. 'return' → logprob: -5.420621395111084
    5. '```' → logprob: -6.045621395111084
    6. 'Returns' (adapté à ' Returns') → logprob: -7.420621395111084
    7. '"""
' → logprob: -7.795621395111084
    8. ')' → logprob: -8.420621871948242
    9. 'returns' → logprob: -9.295621871948242
    10. '    
' → logprob: -9.295621871948242

Token 642: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11884006857872009
    2. ':
' → logprob: -3.368839979171753
    3. '   ' → logprob: -3.493839979171753
    4. ')' → logprob: -3.868839979171753
    5. ',' → logprob: -4.743840217590332
    6. '):' → logprob: -4.868840217590332
    7. ':return' → logprob: -5.743840217590332
    8. 'def' → logprob: -6.618840217590332
    9. ' :' → logprob: -6.743840217590332
    10. '):
' → logprob: -6.993840217590332

Token 643: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006465724669396877
    2. '"' → logprob: -5.131465911865234
    3. ''' → logprob: -7.756465911865234
    4. '    ' → logprob: -9.756465911865234
    5. ' "' → logprob: -10.631465911865234
    6. '    
' → logprob: -11.006465911865234
    7. '  ' → logprob: -13.506465911865234
    8. ' f' → logprob: -13.506465911865234
    9. ' 
' → logprob: -13.506465911865234
    10. '
' → logprob: -13.756465911865234

Token 644: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' (adapté à ' str') → logprob: -0.0001612267515156418
    2. ' str' → logprob: -8.750161170959473
    3. 'return' → logprob: -13.250161170959473
    4. 'string' → logprob: -14.000161170959473
    5. '   ' → logprob: -17.25016212463379
    6. '
' → logprob: -18.00016212463379
    7. 's' → logprob: -18.00016212463379
    8. 'stri' → logprob: -18.50016212463379
    9. 'def' → logprob: -18.87516212463379
    10. 'String' → logprob: -19.00016212463379

Token 645: ':' (ID: 25)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.43391162157058716
    2. ':' → logprob: -1.3089115619659424
    3. ':
' → logprob: -2.6839115619659424
    4. ':return' → logprob: -5.6839118003845215
    5. '):
' → logprob: -5.9339118003845215
    6. '):' → logprob: -6.1839118003845215
    7. ')' → logprob: -6.6839118003845215
    8. 'return' → logprob: -6.8089118003845215
    9. '    ' → logprob: -7.5589118003845215
    10. '"' → logprob: -7.8089118003845215

Token 646: ' La' (ID: 3038)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.48270872235298157
    2. '"' → logprob: -0.9827086925506592
    3. 'return' → logprob: -5.607708930969238
    4. ' return' → logprob: -6.107708930969238
    5. ' '' → logprob: -6.232708930969238
    6. ' "' → logprob: -7.232708930969238
    7. '   ' → logprob: -11.732708930969238
    8. ''a' → logprob: -13.732708930969238
    9. ''s' → logprob: -13.982708930969238
    10. ' ' → logprob: -14.732708930969238

Token 647: ' chaîne' (ID: 89288)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.06216844916343689
    2. '"' → logprob: -2.8121683597564697
    3. ' '' → logprob: -8.81216812133789
    4. ' "' → logprob: -11.06216812133789
    5. ''s' → logprob: -11.31216812133789
    6. 'result' → logprob: -12.18716812133789
    7. ''ex' → logprob: -12.31216812133789
    8. ''a' → logprob: -12.81216812133789
    9. ''re' → logprob: -13.43716812133789
    10. ' ' → logprob: -13.68716812133789

Token 648: ' format' (ID: 6011)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.3425610661506653
    2. '"' → logprob: -1.4675610065460205
    3. ' '' → logprob: -2.9675610065460205
    4. ' "' → logprob: -5.5925612449646
    5. '.join' → logprob: -6.0925612449646
    6. ' join' → logprob: -7.4675612449646
    7. 'join' → logprob: -7.7175612449646
    8. ' de' → logprob: -8.342560768127441
    9. '   ' → logprob: -8.467560768127441
    10. ''f' → logprob: -9.092560768127441

Token 649: 'ée' (ID: 2894)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.9261022806167603
    2. 'ée' → logprob: -1.0511022806167603
    3. '"' → logprob: -1.8011022806167603
    4. ''e' → logprob: -3.4261021614074707
    5. ''' → logprob: -3.6761021614074707
    6. ''é' → logprob: -4.051102161407471
    7. 'é' → logprob: -4.301102161407471
    8. 'ed' → logprob: -9.176102638244629
    9. '   ' → logprob: -10.301102638244629
    10. ''ed' → logprob: -10.301102638244629

Token 650: ' avec' (ID: 3937)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.6951653361320496
    2. ''' → logprob: -0.8201653361320496
    3. '   ' → logprob: -3.3201653957366943
    4. '"\' → logprob: -4.820165157318115
    5. ''\' → logprob: -4.945165157318115
    6. 'return' → logprob: -5.820165157318115
    7. ' return' → logprob: -6.445165157318115
    8. 'join' → logprob: -6.570165157318115
    9. ' join' → logprob: -6.945165157318115
    10. '
' → logprob: -7.320165157318115

Token 651: ' les' (ID: 1341)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.16218838095664978
    2. '"' → logprob: -1.9121884107589722
    3. ' '' → logprob: -6.412188529968262
    4. ' "' → logprob: -8.287188529968262
    5. ''s' → logprob: -10.787188529968262
    6. ''inter' → logprob: -11.662188529968262
    7. 'color' → logprob: -12.412188529968262
    8. ''a' → logprob: -12.412188529968262
    9. 'colors' → logprob: -12.537188529968262
    10. 'str' → logprob: -12.537188529968262

Token 652: ' couleurs' (ID: 54001)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.775579035282135
    2. 'colors' → logprob: -1.1505789756774902
    3. '"' → logprob: -2.5255789756774902
    4. 'cou' → logprob: -2.7755789756774902
    5. ' couleurs' → logprob: -3.0255789756774902
    6. ' '' → logprob: -4.77557897567749
    7. 'str' → logprob: -4.90057897567749
    8. 'color' → logprob: -5.27557897567749
    9. ' colors' → logprob: -5.40057897567749
    10. ' "' → logprob: -5.77557897567749

Token 653: ' attrib' (ID: 72186)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.6506109833717346
    2. 'def' → logprob: -2.15061092376709
    3. 'join' → logprob: -2.52561092376709
    4. '.join' → logprob: -2.65061092376709
    5. '   ' → logprob: -2.90061092376709
    6. 'return' → logprob: -3.40061092376709
    7. '"' → logprob: -3.77561092376709
    8. ' join' → logprob: -4.02561092376709
    9. ' return' → logprob: -4.40061092376709
    10. 'joined' → logprob: -4.40061092376709

Token 654: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -3.03521392197581e-05
    2. 'ué' → logprob: -10.625030517578125
    3. 'uée' → logprob: -12.125030517578125
    4. ' u' → logprob: -15.500030517578125
    5. '[u' → logprob: -16.000030517578125
    6. 'uant' → logprob: -16.750030517578125
    7. '   ' → logprob: -17.000030517578125
    8. '```' → logprob: -18.000030517578125
    9. '=' → logprob: -18.250030517578125
    10. 'ues' → logprob: -18.375030517578125

Token 655: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.04462620988488197
    2. 'es' → logprob: -3.294626235961914
    3. 'és' → logprob: -5.044626235961914
    4. 's' → logprob: -9.669626235961914
    5. 'é' → logprob: -10.544626235961914
    6. '   ' → logprob: -11.419626235961914
    7. 'ees' → logprob: -11.794626235961914
    8. 'ée' → logprob: -12.544626235961914
    9. 'e' → logprob: -12.794626235961914
    10. 't' → logprob: -13.669626235961914

Token 656: '.
' (ID: 558)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.40098243951797485
    2. '   ' → logprob: -1.40098237991333
    3. '
' → logprob: -3.52598237991333
    4. ''' → logprob: -3.65098237991333
    5. '"' → logprob: -4.90098237991333
    6. ' +' → logprob: -5.40098237991333
    7. 'join' → logprob: -5.77598237991333
    8. 'for' → logprob: -6.27598237991333
    9. '.join' → logprob: -6.65098237991333
    10. ' for' → logprob: -6.77598237991333

Token 657: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006740703247487545
    2. 'return' → logprob: -8.0006742477417
    3. ' return' → logprob: -8.6256742477417
    4. '
' → logprob: -9.3756742477417
    5. '    
' → logprob: -10.6256742477417
    6. ''\' → logprob: -11.7506742477417
    7. ''' → logprob: -11.8756742477417
    8. '"' → logprob: -12.0006742477417
    9. '"\' → logprob: -12.0006742477417
    10. '```' → logprob: -12.1256742477417

Token 658: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002314880257472396
    2. 'return' → logprob: -6.502315044403076
    3. ' return' → logprob: -7.127315044403076
    4. '```' → logprob: -12.377314567565918
    5. '    
' → logprob: -13.002314567565918
    6. '
' → logprob: -13.877314567565918
    7. ')' → logprob: -14.502314567565918
    8. '   ' → logprob: -15.127314567565918
    9. '`' → logprob: -15.377314567565918
    10. '"' → logprob: -15.877314567565918

Token 659: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.040654271841049194
    2. 'return' → logprob: -3.790654182434082
    3. ' return' → logprob: -4.290654182434082
    4. 'result' → logprob: -5.790654182434082
    5. ' result' → logprob: -8.040654182434082
    6. ''' → logprob: -9.540654182434082
    7. 'res' → logprob: -10.290654182434082
    8. '"' → logprob: -10.290654182434082
    9. '```' → logprob: -11.415654182434082
    10. 'output' → logprob: -11.540654182434082

Token 660: ' out' (ID: 842)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.07586836069822311
    2. ''' → logprob: -2.8258683681488037
    3. '"' → logprob: -4.825868129730225
    4. ' return' → logprob: -5.325868129730225
    5. '   ' → logprob: -7.200868129730225
    6. 'result' → logprob: -8.700868606567383
    7. ' '' → logprob: -12.325868606567383
    8. '	return' → logprob: -13.325868606567383
    9. ' "' → logprob: -14.700868606567383
    10. 'res' → logprob: -14.700868606567383

Token 661: ' =' (ID: 314)
  Prédit: 'put'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'put' → logprob: -0.5091251730918884
    2. '=' → logprob: -1.5091252326965332
    3. ' =' → logprob: -1.7591252326965332
    4. 'puts' → logprob: -5.509125232696533
    5. '   ' → logprob: -6.634125232696533
    6. 'ut' → logprob: -9.384124755859375
    7. '_str' → logprob: -9.884124755859375
    8. 'pu' → logprob: -10.009124755859375
    9. '_put' → logprob: -10.259124755859375
    10. '  ' → logprob: -10.884124755859375

Token 662: ' []
' (ID: 8911)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.8168610334396362
    2. '"' → logprob: -1.0668610334396362
    3. '[]' → logprob: -1.5668610334396362
    4. ' '' → logprob: -5.816861152648926
    5. ' []' → logprob: -6.941861152648926
    6. ' "' → logprob: -7.316861152648926
    7. '[' → logprob: -7.691861152648926
    8. '[]
' → logprob: -8.191861152648926
    9. '[]

' → logprob: -11.191861152648926
    10. ''s' → logprob: -11.691861152648926

Token 663: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09055868536233902
    2. ' for' → logprob: -2.5905587673187256
    3. 'for' → logprob: -4.5905585289001465
    4. '	for' → logprob: -6.5905585289001465
    5. '    
' → logprob: -10.715559005737305
    6. '
' → logprob: -10.965559005737305
    7. ' ' → logprob: -11.465559005737305
    8. '   ' → logprob: -11.840559005737305
    9. '    ' → logprob: -11.965559005737305
    10. ' 
' → logprob: -12.215559005737305

Token 664: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.02635580487549305
    2. '   ' → logprob: -3.776355743408203
    3. ' for' → logprob: -5.776355743408203
    4. '	for' → logprob: -12.151355743408203
    5. ' ' → logprob: -15.901355743408203
    6. '  ' → logprob: -17.651355743408203
    7. '
' → logprob: -17.776355743408203
    8. '    
' → logprob: -18.776355743408203
    9. '```' → logprob: -18.901355743408203
    10. '\t' → logprob: -19.526355743408203

Token 665: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -3.6550729419104755e-05
    2. ' i' → logprob: -10.250036239624023
    3. 'node' → logprob: -13.875036239624023
    4. 'v' → logprob: -15.875036239624023
    5. 'vertex' → logprob: -16.250036239624023
    6. '   ' → logprob: -19.625036239624023
    7. '	i' → logprob: -19.750036239624023
    8. ' node' → logprob: -19.750036239624023
    9. 'u' → logprob: -20.250036239624023
    10. '_i' → logprob: -20.625036239624023

Token 666: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.08897360414266586
    2. 'in' → logprob: -2.4639735221862793
    3. ' ' → logprob: -10.963973999023438
    4. 'i' → logprob: -12.713973999023438
    5. '1' → logprob: -13.213973999023438
    6. 'range' → logprob: -13.213973999023438
    7. ',' → logprob: -13.588973999023438
    8. 'n' → logprob: -13.588973999023438
    9. '   ' → logprob: -13.713973999023438
    10. '  ' → logprob: -13.963973999023438

Token 667: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00020354038861114532
    2. ' range' → logprob: -8.500203132629395
    3. '   ' → logprob: -18.75020408630371
    4. ' ' → logprob: -19.12520408630371
    5. '(range' → logprob: -20.00020408630371
    6. '1' → logprob: -20.75020408630371
    7. '  ' → logprob: -21.00020408630371
    8. '	range' → logprob: -21.25020408630371
    9. '    ' → logprob: -23.00020408630371
    10. '```' → logprob: -23.25020408630371

Token 668: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.023245826363563538
    2. '1' → logprob: -3.7732458114624023
    3. '   ' → logprob: -16.02324676513672
    4. ' (' → logprob: -16.52324676513672
    5. ' ' → logprob: -16.89824676513672
    6. '(
' → logprob: -17.77324676513672
    7. ',' → logprob: -18.02324676513672
    8. '[' → logprob: -19.64824676513672
    9. 'def' → logprob: -19.77324676513672
    10. '```' → logprob: -20.02324676513672

Token 669: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.500000953674316
    3. 'n' → logprob: -17.125
    4. '   ' → logprob: -17.375
    5. '(' → logprob: -17.75
    6. '```' → logprob: -19.75
    7. '[' → logprob: -20.25
    8. 'start' → logprob: -20.375
    9. '2' → logprob: -20.625
    10. '۱' → logprob: -20.875

Token 670: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003136552404612303
    2. ' ,' → logprob: -8.500313758850098
    3. ',n' → logprob: -9.125313758850098
    4. ',len' → logprob: -14.625313758850098
    5. 'n' → logprob: -15.000313758850098
    6. ',
' → logprob: -15.500313758850098
    7. 'to' → logprob: -17.37531280517578
    8. '(n' → logprob: -17.50031280517578
    9. '‌,' → logprob: -17.50031280517578
    10. ',num' → logprob: -17.62531280517578

Token 671: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -4.5491004129871726e-05
    2. ' n' → logprob: -10.000045776367188
    3. '	n' → logprob: -20.875045776367188
    4. ')n' → logprob: -21.375045776367188
    5. '   ' → logprob: -22.500045776367188
    6. '_n' → logprob: -24.500045776367188
    7. 'len' → logprob: -25.125045776367188
    8. '(n' → logprob: -25.750045776367188
    9. ' ' → logprob: -25.875045776367188
    10. ' ' → logprob: -26.000045776367188

Token 672: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.06196824833750725
    2. ' +' → logprob: -2.8119683265686035
    3. '+
' → logprob: -15.186967849731445
    4. '   ' → logprob: -16.186967849731445
    5. '):
' → logprob: -16.436967849731445
    6. ' +
' → logprob: -16.936967849731445
    7. '+n' → logprob: -17.061967849731445
    8. ')' → logprob: -17.436967849731445
    9. ',' → logprob: -17.561967849731445
    10. '+i' → logprob: -17.686967849731445

Token 673: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.505351095460355e-05
    2. '+' → logprob: -10.000075340270996
    3. ' ' → logprob: -10.500075340270996
    4. 'n' → logprob: -13.750075340270996
    5. '   ' → logprob: -14.125075340270996
    6. ' +' → logprob: -16.62507438659668
    7. ' n' → logprob: -17.87507438659668
    8. '```' → logprob: -18.00007438659668
    9. ')' → logprob: -18.12507438659668
    10. '2' → logprob: -18.25007438659668

Token 674: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.125
    3. '+' → logprob: -18.375
    4. '2' → logprob: -19.875
    5. '   ' → logprob: -19.875
    6. '
' → logprob: -20.25
    7. 'n' → logprob: -20.75
    8. ')' → logprob: -21.75
    9. '```' → logprob: -22.0
    10. 'len' → logprob: -22.125

Token 675: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.31648918986320496
    2. '):
' → logprob: -1.3164892196655273
    3. ')' → logprob: -5.941489219665527
    4. ':' → logprob: -7.691489219665527
    5. '   ' → logprob: -9.316489219665527
    6. '):
' → logprob: -10.316489219665527
    7. ':
' → logprob: -11.691489219665527
    8. '       ' → logprob: -13.566489219665527
    9. ']:' → logprob: -13.941489219665527
    10. ',' → logprob: -14.441489219665527

Token 676: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2321700006723404
    2. '   ' → logprob: -1.9821699857711792
    3. 'out' → logprob: -2.9821701049804688
    4. ' out' → logprob: -3.9821701049804688
    5. '(out' → logprob: -10.107170104980469
    6. '	out' → logprob: -11.107170104980469
    7. '[out' → logprob: -11.357170104980469
    8. '           ' → logprob: -12.107170104980469
    9. '    ' → logprob: -12.482170104980469
    10. '     ' → logprob: -12.857170104980469

Token 677: ' out' (ID: 842)
  Prédit: 'out'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'out' (adapté à ' out') → logprob: -0.00041577612864784896
    2. ' out' → logprob: -8.250415802001953
    3. '   ' → logprob: -9.125415802001953
    4. '       ' → logprob: -10.000415802001953
    5. '	out' → logprob: -16.250415802001953
    6. '[out' → logprob: -17.250415802001953
    7. 'if' → logprob: -17.875415802001953
    8. '(out' → logprob: -18.000415802001953
    9. '*out' → logprob: -19.000415802001953
    10. '$out' → logprob: -19.625415802001953

Token 678: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -5.860340752406046e-05
    2. '.' → logprob: -9.7500581741333
    3. '.app' → logprob: -16.000059127807617
    4. 'append' → logprob: -16.125059127807617
    5. '.ap' → logprob: -17.125059127807617
    6. ' .' → logprob: -18.125059127807617
    7. '.extend' → logprob: -18.375059127807617
    8. '.Append' → logprob: -18.625059127807617
    9. '.push' → logprob: -19.000059127807617
    10. ').' → logprob: -19.375059127807617

Token 679: '(str' (ID: 7946)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.0004890497075393796
    2. '(str' → logprob: -7.750489234924316
    3. ' str' → logprob: -9.750489234924316
    4. '   ' → logprob: -16.62548828125
    5. 'ans' → logprob: -17.62548828125
    6. '	str' → logprob: -17.75048828125
    7. '=str' → logprob: -18.12548828125
    8. '(' → logprob: -18.12548828125
    9. '[str' → logprob: -19.00048828125
    10. '(
' → logprob: -19.12548828125

Token 680: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -9.615255839889869e-05
    2. 'ans' → logprob: -9.250096321105957
    3. '	ans' → logprob: -18.50009536743164
    4. '(' → logprob: -19.37509536743164
    5. ' ans' → logprob: -19.50009536743164
    6. 'Ans' → logprob: -20.62509536743164
    7. '_ans' → logprob: -21.62509536743164
    8. '(
' → logprob: -21.75009536743164
    9. 'ANS' → logprob: -22.50009536743164
    10. '(answer' → logprob: -22.62509536743164

Token 681: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.1472419600977446e-06
    2. '.get' → logprob: -14.125000953674316
    3. '[' → logprob: -15.875000953674316
    4. '(i' → logprob: -16.125001907348633
    5. '[
' → logprob: -16.250001907348633
    6. '[I' → logprob: -17.000001907348633
    7. '[int' → logprob: -18.000001907348633
    8. 'i' → logprob: -18.750001907348633
    9. '[x' → logprob: -19.125001907348633
    10. ')[' → logprob: -19.125001907348633

Token 682: ']))
' (ID: 24801)
  Prédit: ']))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']))' → logprob: -0.0004493805463425815
    2. '])' → logprob: -8.125449180603027
    3. ']' → logprob: -9.000449180603027
    4. '))' → logprob: -10.750449180603027
    5. ']))
' → logprob: -13.250449180603027
    6. ')))' → logprob: -13.250449180603027
    7. ')])' → logprob: -13.250449180603027
    8. '']))' → logprob: -13.625449180603027
    9. ')' → logprob: -14.125449180603027
    10. ')]' → logprob: -14.750449180603027

Token 683: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.047066621482372284
    2. 'return' → logprob: -3.5470666885375977
    3. ''' → logprob: -5.047066688537598
    4. '
' → logprob: -5.297066688537598
    5. ' return' → logprob: -5.797066688537598
    6. '"' → logprob: -6.672066688537598
    7. '    
' → logprob: -7.422066688537598
    8. 'join' → logprob: -7.547066688537598
    9. '  
' → logprob: -10.172066688537598
    10. ' ' → logprob: -10.172066688537598

Token 684: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.05024821683764458
    2. ' return' → logprob: -3.300248146057129
    3. '   ' → logprob: -5.175248146057129
    4. ''' → logprob: -5.425248146057129
    5. '"' → logprob: -6.300248146057129
    6. '
' → logprob: -8.550248146057129
    7. '	return' → logprob: -11.425248146057129
    8. ''\' → logprob: -11.550248146057129
    9. '"\' → logprob: -11.550248146057129
    10. 'join' → logprob: -12.050248146057129

Token 685: ' "' (ID: 392)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.31326815485954285
    2. '"' → logprob: -1.3132681846618652
    3. ' '' → logprob: -12.063267707824707
    4. ' "' → logprob: -14.313267707824707
    5. ''s' → logprob: -17.063268661499023
    6. ''m' → logprob: -17.813268661499023
    7. ''a' → logprob: -18.313268661499023
    8. ' ' → logprob: -18.938268661499023
    9. ''en' → logprob: -18.938268661499023
    10. ''o' → logprob: -19.063268661499023

Token 686: ' ".' (ID: 11730)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.2519417703151703
    2. ''' → logprob: -1.5019418001174927
    3. ' "' → logprob: -12.126941680908203
    4. ''s' → logprob: -13.126941680908203
    5. '.join' → logprob: -13.626941680908203
    6. ' '' → logprob: -13.876941680908203
    7. 'join' → logprob: -14.626941680908203
    8. '"user' → logprob: -15.001941680908203
    9. ''m' → logprob: -15.126941680908203
    10. ''end' → logprob: -15.251941680908203

Token 687: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -3.128163257315464e-07
    2. ' join' → logprob: -15.375
    3. 'j' → logprob: -16.875
    4. 'jo' → logprob: -17.625
    5. '.join' → logprob: -18.5
    6. 'joint' → logprob: -19.75
    7. '(join' → logprob: -20.625
    8. 'joins' → logprob: -21.625
    9. 'joined' → logprob: -22.125
    10. 'Join' → logprob: -22.375

Token 688: '(out' (ID: 20090)
  Prédit: '(out'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(out' → logprob: -2.8087270038668066e-05
    2. 'out' → logprob: -10.500027656555176
    3. '(' → logprob: -14.500027656555176
    4. '[out' → logprob: -17.125028610229492
    5. '*out' → logprob: -19.625028610229492
    6. '	out' → logprob: -20.250028610229492
    7. '$out' → logprob: -20.375028610229492
    8. '(
' → logprob: -20.625028610229492
    9. ',out' → logprob: -20.750028610229492
    10. '(outfile' → logprob: -20.750028610229492

Token 689: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9361264946837764e-07
    2. ' )' → logprob: -17.0
    3. '))' → logprob: -17.5
    4. ')
' → logprob: -17.5
    5. '")' → logprob: -17.875
    6. ')`' → logprob: -17.875
    7. '   ' → logprob: -18.0
    8. ')return' → logprob: -18.75
    9. '())' → logprob: -19.25
    10. '}' → logprob: -19.375

Token 690: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -3.881560041918419e-05
    2. '```' → logprob: -10.750039100646973
    3. '<|end|>' → logprob: -11.875039100646973
    4. '
' → logprob: -12.750039100646973
    5. 'n' → logprob: -12.875039100646973
    6. 'import' → logprob: -13.125039100646973
    7. '#' → logprob: -13.500039100646973
    8. ' def' → logprob: -14.000039100646973
    9. 'ndef' → logprob: -15.625039100646973
    10. '<|end|>' → logprob: -15.875039100646973

Token 691: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.1290779411792755
    2. 'main' → logprob: -2.754077911376953
    3. ' solve' → logprob: -3.004077911376953
    4. 'solve' → logprob: -5.254077911376953
    5. ' color' → logprob: -7.504077911376953
    6. 'color' → logprob: -7.629077911376953
    7. 'max' → logprob: -7.754077911376953
    8. ' max' → logprob: -8.129077911376953
    9. ' maximize' → logprob: -8.754077911376953
    10. ' assign' → logprob: -9.254077911376953

Token 692: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00010103991371579468
    2. '(' → logprob: -10.000101089477539
    3. '():
' → logprob: -10.500101089477539
    4. ' ():' → logprob: -10.750101089477539
    5. '()' → logprob: -12.750101089477539
    6. '_' → logprob: -12.875101089477539
    7. '():
' → logprob: -14.875101089477539
    8. '(":' → logprob: -15.125101089477539
    9. 'def' → logprob: -16.00010108947754
    10. ':' → logprob: -16.25010108947754

Token 693: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009106588549911976
    2. 'import' → logprob: -5.259106636047363
    3. ' import' → logprob: -6.634106636047363
    4. ' n' → logprob: -6.634106636047363
    5. 'n' → logprob: -7.009106636047363
    6. '(n' → logprob: -8.759106636047363
    7. '	n' → logprob: -9.634106636047363
    8. '```' → logprob: -9.884106636047363
    9. '    
' → logprob: -11.009106636047363
    10. '	import' → logprob: -11.134106636047363

Token 694: ' """
' (ID: 7037)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.3198418617248535
    2. ' import' → logprob: -1.6948418617248535
    3. 'n' → logprob: -3.0698418617248535
    4. '   ' → logprob: -3.4448418617248535
    5. 'import' → logprob: -4.4448418617248535
    6. '	n' → logprob: -11.319841384887695
    7. '```' → logprob: -11.944841384887695
    8. '	import' → logprob: -12.569841384887695
    9. '    
' → logprob: -13.319841384887695
    10. '   ' → logprob: -13.569841384887695

Token 695: '   ' (ID: 271)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5930325388908386
    2. '   ' → logprob: -0.9680325388908386
    3. ' n' → logprob: -2.7180325984954834
    4. 'import' → logprob: -7.343032360076904
    5. ' import' → logprob: -8.218032836914062
    6. '    ' → logprob: -8.843032836914062
    7. ')' → logprob: -8.968032836914062
    8. '    
' → logprob: -9.093032836914062
    9. '
' → logprob: -10.343032836914062
    10. ' ' → logprob: -10.593032836914062

Token 696: ' Fonction' (ID: 189149)
  Prédit: ' import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.3860647976398468
    2. '   ' → logprob: -2.0110647678375244
    3. ' n' → logprob: -2.0110647678375244
    4. 'import' → logprob: -3.2610647678375244
    5. 'n' → logprob: -4.2610650062561035
    6. ' input' → logprob: -9.511064529418945
    7. ' #' → logprob: -11.886064529418945
    8. 'input' → logprob: -12.011064529418945
    9. ' lines' → logprob: -12.011064529418945
    10. '    
' → logprob: -12.136064529418945

Token 697: ' principale' (ID: 68926)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.2259198427200317
    2. ' main' → logprob: -1.2259198427200317
    3. ' principale' → logprob: -1.3509198427200317
    4. '():' → logprob: -3.225919723510742
    5. '():
' → logprob: -3.975919723510742
    6. '()' → logprob: -4.225919723510742
    7. '   ' → logprob: -4.225919723510742
    8. ' def' → logprob: -4.475919723510742
    9. ':' → logprob: -4.600919723510742
    10. ' _' → logprob: -5.350919723510742

Token 698: ' qui' (ID: 2780)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.07141528278589249
    2. '():
' → logprob: -2.6964151859283447
    3. '()' → logprob: -6.821415424346924
    4. ':' → logprob: -7.946415424346924
    5. '   ' → logprob: -11.196414947509766
    6. ' ():' → logprob: -12.196414947509766
    7. 'def' → logprob: -12.321414947509766
    8. ':
' → logprob: -12.446414947509766
    9. '():
' → logprob: -13.321414947509766
    10. '()
' → logprob: -13.571414947509766

Token 699: ' ex' (ID: 513)
  Prédit: ' lit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lit' → logprob: -0.024699745699763298
    2. 'lit' → logprob: -4.774699687957764
    3. ' récup' → logprob: -5.274699687957764
    4. 'import' → logprob: -5.899699687957764
    5. ':' → logprob: -6.274699687957764
    6. ' g' → logprob: -6.899699687957764
    7. '   ' → logprob: -7.024699687957764
    8. ' réalise' → logprob: -7.649699687957764
    9. ' reads' → logprob: -7.899699687957764
    10. 'g' → logprob: -8.274700164794922

Token 700: 'éc' (ID: 5675)
  Prédit: 'ecute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ecute' → logprob: -0.2295345515012741
    2. 'éc' → logprob: -1.6045345067977905
    3. 'é' → logprob: -6.35453462600708
    4. 'ec' → logprob: -6.60453462600708
    5. 'écut' → logprob: -7.35453462600708
    6. 'ecut' → logprob: -9.354534149169922
    7. 'e' → logprob: -9.854534149169922
    8. 'écution' → logprob: -9.979534149169922
    9. 'cute' → logprob: -10.104534149169922
    10. 'è' → logprob: -10.979534149169922

Token 701: 'ute' (ID: 1331)
  Prédit: 'ute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ute' → logprob: -0.5323916077613831
    2. 'ecute' → logprob: -1.4073915481567383
    3. 'cute' → logprob: -2.0323915481567383
    4. 'éc' → logprob: -3.5323915481567383
    5. 'é' → logprob: -5.407391548156738
    6. 'ec' → logprob: -6.532391548156738
    7. 'e' → logprob: -7.657391548156738
    8. 'c' → logprob: -7.782391548156738
    9. '\' → logprob: -8.032391548156738
    10. '```' → logprob: -9.282391548156738

Token 702: ' tout' (ID: 5501)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.8682688474655151
    2. '():
' → logprob: -1.1182688474655151
    3. '()' → logprob: -1.6182688474655151
    4. '   ' → logprob: -3.3682689666748047
    5. 'def' → logprob: -4.368268966674805
    6. ' le' → logprob: -5.368268966674805
    7. ' la' → logprob: -6.243268966674805
    8. 'le' → logprob: -7.868268966674805
    9. 'import' → logprob: -8.368268966674805
    10. ':' → logprob: -8.493268966674805

Token 703: ' le' (ID: 505)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.29352959990501404
    2. '():' → logprob: -2.668529510498047
    3. '()' → logprob: -3.043529510498047
    4. ' le' → logprob: -3.293529510498047
    5. ':' → logprob: -3.418529510498047
    6. '():
' → logprob: -3.543529510498047
    7. '(
' → logprob: -4.668529510498047
    8. '.' → logprob: -5.043529510498047
    9. 'e' → logprob: -5.418529510498047
    10. '()
' → logprob: -6.168529510498047

Token 704: ' processus' (ID: 49849)
  Prédit: 'code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'code' → logprob: -0.29806846380233765
    2. 'programme' → logprob: -1.6730685234069824
    3. 'flux' → logprob: -3.7980685234069824
    4. 'process' → logprob: -4.173068523406982
    5. '```' → logprob: -4.298068523406982
    6. 'script' → logprob: -5.048068523406982
    7. 'program' → logprob: -5.673068523406982
    8. ' code' → logprob: -6.298068523406982
    9. 'log' → logprob: -6.423068523406982
    10. 'import' → logprob: -7.048068523406982

Token 705: ' :' (ID: 712)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26337578892707825
    2. '():' → logprob: -1.7633757591247559
    3. ':' → logprob: -3.388375759124756
    4. '():
' → logprob: -3.888375759124756
    5. '.' → logprob: -6.263375759124756
    6. '()' → logprob: -6.513375759124756
    7. ':
' → logprob: -7.013375759124756
    8. '
' → logprob: -7.263375759124756
    9. 'def' → logprob: -8.013376235961914
    10. '):' → logprob: -9.388376235961914

Token 706: ' lit' (ID: 11980)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0021004180889576674
    2. 'n' → logprob: -6.877100467681885
    3. ' n' → logprob: -7.252100467681885
    4. 'import' → logprob: -8.377099990844727
    5. ' import' → logprob: -9.502099990844727
    6. '    
' → logprob: -10.502099990844727
    7. '```' → logprob: -10.877099990844727
    8. '    ' → logprob: -12.627099990844727
    9. '
' → logprob: -13.877099990844727
    10. '   ' → logprob: -14.252099990844727

Token 707: ' les' (ID: 1341)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47810062766075134
    2. ' les' → logprob: -1.4781006574630737
    3. '()' → logprob: -2.978100538253784
    4. ',' → logprob: -3.228100538253784
    5. ' l' → logprob: -3.728100538253784
    6. 'import' → logprob: -4.728100776672363
    7. ' la' → logprob: -4.853100776672363
    8. 'n' → logprob: -5.603100776672363
    9. ' input' → logprob: -5.603100776672363
    10. ' des' → logprob: -6.228100776672363

Token 708: ' entr' (ID: 7072)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.8520449995994568
    2. 'n' → logprob: -1.2270450592041016
    3. 'inputs' → logprob: -2.3520450592041016
    4. 'input' → logprob: -2.9770450592041016
    5. 'entr' → logprob: -3.2270450592041016
    6. ' inputs' → logprob: -3.9770450592041016
    7. 'entrée' → logprob: -3.9770450592041016
    8. ' entr' → logprob: -3.9770450592041016
    9. 'd' → logprob: -4.727045059204102
    10. ' input' → logprob: -4.852045059204102

Token 709: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.0012149984249845147
    2. 'ée' → logprob: -7.001214981079102
    3. 'ees' → logprob: -8.126214981079102
    4. 'es' → logprob: -13.126214981079102
    5. 'r' → logprob: -14.001214981079102
    6. '```' → logprob: -14.251214981079102
    7. 'nées' → logprob: -14.251214981079102
    8. 'er' → logprob: -14.376214981079102
    9. 'rees' → logprob: -14.376214981079102
    10. 'e' → logprob: -14.501214981079102

Token 710: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.062446121126413345
    2. '   ' → logprob: -2.812446117401123
    3. ',
' → logprob: -8.937446594238281
    4. '(),' → logprob: -8.937446594238281
    5. 'import' → logprob: -10.187446594238281
    6. '()' → logprob: -10.187446594238281
    7. 'n' → logprob: -10.187446594238281
    8. ' ,' → logprob: -10.687446594238281
    9. '
' → logprob: -10.687446594238281
    10. '(n' → logprob: -11.062446594238281

Token 711: ' construit' (ID: 119882)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13031023740768433
    2. ' n' → logprob: -2.630310297012329
    3. 'n' → logprob: -3.005310297012329
    4. '    
' → logprob: -8.63031005859375
    5. '    ' → logprob: -9.38031005859375
    6. '  ' → logprob: -10.00531005859375
    7. '   ' → logprob: -10.00531005859375
    8. '```' → logprob: -10.00531005859375
    9. '	n' → logprob: -10.38031005859375
    10. 'import' → logprob: -11.25531005859375

Token 712: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.16039341688156128
    2. '   ' → logprob: -2.660393476486206
    3. ' la' → logprob: -3.535393476486206
    4. 'le' → logprob: -3.535393476486206
    5. 'E' → logprob: -4.785393238067627
    6. ' l' → logprob: -5.535393238067627
    7. 'l' → logprob: -6.035393238067627
    8. 'la' → logprob: -6.660393238067627
    9. ' et' → logprob: -7.035393238067627
    10. ' les' → logprob: -7.035393238067627

Token 713: ' grap' (ID: 60955)
  Prédit: 'gr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gr' → logprob: -0.005056922324001789
    2. 'graph' → logprob: -6.005056858062744
    3. ' grap' → logprob: -6.005056858062744
    4. 'E' → logprob: -10.130057334899902
    5. '_gr' → logprob: -10.630057334899902
    6. 'G' → logprob: -10.630057334899902
    7. '_' → logprob: -11.630057334899902
    8. 'g' → logprob: -12.630057334899902
    9. '```' → logprob: -12.880057334899902
    10. ' graph' → logprob: -12.880057334899902

Token 714: 'he' (ID: 273)
  Prédit: 'aphe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aphe' → logprob: -0.11230877786874771
    2. 'he' → logprob: -2.3623087406158447
    3. 'h' → logprob: -4.612308979034424
    4. 'phe' → logprob: -7.237308979034424
    5. 'a' → logprob: -7.612308979034424
    6. '   ' → logprob: -7.862308979034424
    7. '#' → logprob: -8.862308502197266
    8. '`' → logprob: -9.737308502197266
    9. 'aph' → logprob: -10.112308502197266
    10. '```' → logprob: -10.362308502197266

Token 715: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02061990089714527
    2. '   ' → logprob: -3.8956198692321777
    3. ' ,' → logprob: -10.020620346069336
    4. ' et' → logprob: -11.395620346069336
    5. ',
' → logprob: -11.645620346069336
    6. 'import' → logprob: -12.770620346069336
    7. ' ' → logprob: -13.270620346069336
    8. 's' → logprob: -13.395620346069336
    9. 'n' → logprob: -13.895620346069336
    10. '    
' → logprob: -14.020620346069336

Token 716: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005803893320262432
    2. ',' → logprob: -5.380804061889648
    3. ' et' → logprob: -7.505804061889648
    4. '    
' → logprob: -8.130804061889648
    5. 'et' → logprob: -8.755804061889648
    6. '    ' → logprob: -9.880804061889648
    7. ' puis' → logprob: -9.880804061889648
    8. '  ' → logprob: -11.255804061889648
    9. '   ' → logprob: -11.505804061889648
    10. ' ' → logprob: -12.443304061889648

Token 717: ' trouve' (ID: 30913)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0309287179261446
    2. 'tr' → logprob: -4.780928611755371
    3. ' trie' → logprob: -4.905928611755371
    4. ' attrib' → logprob: -5.905928611755371
    5. ' n' → logprob: -6.030928611755371
    6. 'attrib' → logprob: -6.155928611755371
    7. 'colors' → logprob: -6.530928611755371
    8. 'n' → logprob: -7.155928611755371
    9. 'assign' → logprob: -7.280928611755371
    10. 'color' → logprob: -7.405928611755371

Token 718: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.11497832834720612
    2. 'le' → logprob: -2.239978313446045
    3. ' la' → logprob: -6.489978313446045
    4. '   ' → logprob: -8.739978790283203
    5. 'la' → logprob: -8.739978790283203
    6. '_le' → logprob: -9.239978790283203
    7. 'max' → logprob: -9.239978790283203
    8. 'l' → logprob: -10.489978790283203
    9. ' ' → logprob: -11.114978790283203
    10. ' ' → logprob: -11.364978790283203

Token 719: ' sommet' (ID: 130502)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.026949994266033173
    2. 'node' → logprob: -4.151949882507324
    3. ' max' → logprob: -5.151949882507324
    4. 'n' → logprob: -6.401949882507324
    5. 'no' → logprob: -6.776949882507324
    6. ' node' → logprob: -7.276949882507324
    7. 'start' → logprob: -7.526949882507324
    8. 'maximum' → logprob: -7.651949882507324
    9. '```' → logprob: -9.026949882507324
    10. 'som' → logprob: -9.151949882507324

Token 720: ' de' (ID: 334)
  Prédit: ' ayant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ayant' → logprob: -0.23331613838672638
    2. 'ayant' → logprob: -2.35831618309021
    3. ' de' → logprob: -2.60831618309021
    4. 'de' → logprob: -4.358315944671631
    5. ' avec' → logprob: -4.608315944671631
    6. 'avec' → logprob: -5.733315944671631
    7. 'à' → logprob: -5.858315944671631
    8. 'max' → logprob: -5.983315944671631
    9. ' maximal' → logprob: -6.108315944671631
    10. ' having' → logprob: -6.358315944671631

Token 721: ' plus' (ID: 2932)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.004734257236123085
    2. 'degree' → logprob: -5.754734039306641
    3. ' degré' → logprob: -7.379734039306641
    4. 'plus' → logprob: -8.00473403930664
    5. 'deg' → logprob: -8.25473403930664
    6. 'd' → logprob: -8.75473403930664
    7. 'max' → logprob: -9.62973403930664
    8. '```' → logprob: -10.62973403930664
    9. 'dé' → logprob: -10.75473403930664
    10. 'maximum' → logprob: -10.75473403930664

Token 722: ' haut' (ID: 28223)
  Prédit: 'haut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'haut' → logprob: -1.0560191869735718
    2. 'grand' → logprob: -1.1810191869735718
    3. 'de' → logprob: -1.5560191869735718
    4. '```' → logprob: -3.1810193061828613
    5. ' haut' → logprob: -3.9310193061828613
    6. '   ' → logprob: -4.181019306182861
    7. 'gr' → logprob: -4.181019306182861
    8. 'ha' → logprob: -4.306019306182861
    9. ' ' → logprob: -4.681019306182861
    10. 'fort' → logprob: -5.056019306182861

Token 723: ' degré' (ID: 169072)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.20688466727733612
    2. ' degré' → logprob: -1.7068846225738525
    3. '_de' → logprob: -5.706884860992432
    4. 'degree' → logprob: -6.831884860992432
    5. 'deg' → logprob: -7.831884860992432
    6. 'd' → logprob: -8.081884384155273
    7. '_degree' → logprob: -8.456884384155273
    8. ' degr' → logprob: -10.331884384155273
    9. ' degree' → logprob: -10.331884384155273
    10. '_deg' → logprob: -10.956884384155273

Token 724: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006843181326985359
    2. ' ,' → logprob: -8.00068473815918
    3. ' et' → logprob: -9.00068473815918
    4. '   ' → logprob: -9.00068473815918
    5. ',
' → logprob: -9.37568473815918
    6. 'et' → logprob: -11.50068473815918
    7. ' puis' → logprob: -13.37568473815918
    8. '.' → logprob: -13.87568473815918
    9. ' (' → logprob: -14.12568473815918
    10. 's' → logprob: -14.75068473815918

Token 725: ' trie' (ID: 139428)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18310286104679108
    2. 'et' → logprob: -3.18310284614563
    3. ' trie' → logprob: -3.18310284614563
    4. 'attrib' → logprob: -3.93310284614563
    5. 'tr' → logprob: -4.558103084564209
    6. ' attrib' → logprob: -4.933103084564209
    7. 'lit' → logprob: -4.933103084564209
    8. 'assign' → logprob: -5.058103084564209
    9. ' lit' → logprob: -5.183103084564209
    10. 'l' → logprob: -5.183103084564209

Token 726: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.06890836358070374
    2. 'les' → logprob: -3.318908452987671
    3. '   ' → logprob: -4.068908214569092
    4. ' la' → logprob: -4.568908214569092
    5. 's' → logprob: -6.693908214569092
    6. 'the' → logprob: -8.31890869140625
    7. 'colors' → logprob: -8.44390869140625
    8. '    ' → logprob: -8.56890869140625
    9. 'es' → logprob: -9.06890869140625
    10. ' ' → logprob: -9.31890869140625

Token 727: ' couleurs' (ID: 54001)
  Prédit: 'colors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'colors' → logprob: -0.03460297733545303
    2. 'cou' → logprob: -3.6596028804779053
    3. ' colors' → logprob: -5.159603118896484
    4. ' couleurs' → logprob: -6.159603118896484
    5. 'color' → logprob: -8.159603118896484
    6. '_colors' → logprob: -9.284603118896484
    7. 'codes' → logprob: -11.534603118896484
    8. '(colors' → logprob: -12.034603118896484
    9. ' colores' → logprob: -12.909603118896484
    10. 'import' → logprob: -13.409603118896484

Token 728: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003467617556452751
    2. ' ,' → logprob: -6.003467559814453
    3. '   ' → logprob: -7.128467559814453
    4. ',
' → logprob: -9.628467559814453
    5. ' et' → logprob: -9.753467559814453
    6. 'et' → logprob: -10.378467559814453
    7. ' en' → logprob: -11.628467559814453
    8. ' par' → logprob: -12.253467559814453
    9. ' puis' → logprob: -12.753467559814453
    10. '_,' → logprob: -13.128467559814453

Token 729: ' attrib' (ID: 72186)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.36118820309638977
    2. ' trie' → logprob: -1.8611881732940674
    3. 'et' → logprob: -2.6111881732940674
    4. 'tr' → logprob: -3.6111881732940674
    5. ' et' → logprob: -3.8611881732940674
    6. ' puis' → logprob: -4.6111884117126465
    7. 'p' → logprob: -5.9861884117126465
    8. ' les' → logprob: -6.3611884117126465
    9. 'assign' → logprob: -6.7361884117126465
    10. 'tri' → logprob: -6.7361884117126465

Token 730: 'ue' (ID: 466)
  Prédit: 'ue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ue' → logprob: -0.0030859708786010742
    2. 'uer' → logprob: -6.378086090087891
    3. 'u' → logprob: -6.753086090087891
    4. 'ues' → logprob: -8.75308609008789
    5. 'ué' → logprob: -10.62808609008789
    6. 'uez' → logprob: -11.50308609008789
    7. 'uent' → logprob: -11.75308609008789
    8. 'uera' → logprob: -12.50308609008789
    9. 'uere' → logprob: -13.12808609008789
    10. 'uie' → logprob: -13.37808609008789

Token 731: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.2421993911266327
    2. 'les' → logprob: -1.617199420928955
    3. '-les' → logprob: -4.742199420928955
    4. '   ' → logprob: -6.242199420928955
    5. 'leurs' → logprob: -6.492199420928955
    6. ',' → logprob: -6.742199420928955
    7. ' des' → logprob: -7.242199420928955
    8. 'leur' → logprob: -7.492199420928955
    9. 'des' → logprob: -7.617199420928955
    10. '_' → logprob: -8.242198944091797

Token 732: ' couleurs' (ID: 54001)
  Prédit: 'cou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cou' → logprob: -0.35019004344940186
    2. ' couleurs' → logprob: -1.2251900434494019
    3. 'colors' → logprob: -6.600190162658691
    4. '```' → logprob: -8.975190162658691
    5. ' colors' → logprob: -9.100190162658691
    6. ' cou' → logprob: -9.350190162658691
    7. '_' → logprob: -11.850190162658691
    8. 'codes' → logprob: -11.850190162658691
    9. 'color' → logprob: -11.850190162658691
    10. ' couleur' → logprob: -12.100190162658691

Token 733: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00804260652512312
    2. ' aux' → logprob: -5.758042812347412
    3. '   ' → logprob: -5.883042812347412
    4. ' et' → logprob: -6.508042812347412
    5. ' ,' → logprob: -8.258042335510254
    6. 'et' → logprob: -9.258042335510254
    7. ',
' → logprob: -9.508042335510254
    8. 'aux' → logprob: -10.133042335510254
    9. ' en' → logprob: -10.133042335510254
    10. ' au' → logprob: -11.008042335510254

Token 734: ' affiche' (ID: 127479)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05685802549123764
    2. ' et' → logprob: -3.5568580627441406
    3. ' puis' → logprob: -4.431858062744141
    4. 'et' → logprob: -4.556858062744141
    5. 'p' → logprob: -6.306858062744141
    6. ' and' → logprob: -7.056858062744141
    7. '#' → logprob: -7.431858062744141
    8. '    
' → logprob: -7.931858062744141
    9. ',' → logprob: -9.05685806274414
    10. 'and' → logprob: -9.43185806274414

Token 735: ' les' (ID: 1341)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.3632611632347107
    2. 'la' → logprob: -2.3632612228393555
    3. 'le' → logprob: -2.7382612228393555
    4. 'l' → logprob: -2.9882612228393555
    5. '()' → logprob: -3.4882612228393555
    6. ' le' → logprob: -3.7382612228393555
    7. '(' → logprob: -3.7382612228393555
    8. 'les' → logprob: -5.6132612228393555
    9. ' les' → logprob: -5.7382612228393555
    10. '   ' → logprob: -6.1132612228393555

Token 736: ' résultats' (ID: 48985)
  Prédit: 'rés'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rés' → logprob: -0.033327292650938034
    2. 'result' → logprob: -3.783327341079712
    3. ' résultats' → logprob: -4.658327102661133
    4. 'results' → logprob: -9.033327102661133
    5. 'scores' → logprob: -9.033327102661133
    6. 'max' → logprob: -9.408327102661133
    7. 'ré' → logprob: -9.908327102661133
    8. 'res' → logprob: -10.158327102661133
    9. 'r' → logprob: -10.283327102661133
    10. '_' → logprob: -10.783327102661133

Token 737: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07204607874155045
    2. ',' → logprob: -3.0720460414886475
    3. '
' → logprob: -4.697046279907227
    4. '.' → logprob: -4.822046279907227
    5. ':' → logprob: -6.197046279907227
    6. '```' → logprob: -6.697046279907227
    7. '    
' → logprob: -7.447046279907227
    8. '):
' → logprob: -7.822046279907227
    9. ')' → logprob: -7.822046279907227
    10. '):' → logprob: -8.072046279907227

Token 738: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.039817553013563156
    2. ':' → logprob: -3.2898175716400146
    3. '():' → logprob: -7.5398173332214355
    4. '
' → logprob: -7.9148173332214355
    5. '    
' → logprob: -8.414817810058594
    6. '```' → logprob: -8.539817810058594
    7. '):' → logprob: -8.914817810058594
    8. ':
' → logprob: -9.789817810058594
    9. ')' → logprob: -9.914817810058594
    10. 'import' → logprob: -10.164817810058594

Token 739: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13825908303260803
    2. '
' → logprob: -2.138259172439575
    3. '    
' → logprob: -5.013258934020996
    4. '```' → logprob: -5.763258934020996
    5. ':' → logprob: -7.763258934020996
    6. '  
' → logprob: -8.138258934020996
    7. '<|end|>' → logprob: -8.513258934020996
    8. ' 
' → logprob: -9.138258934020996
    9. '\n' → logprob: -9.138258934020996
    10. ')' → logprob: -10.138258934020996

Token 740: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0011628384236246347
    2. 'import' → logprob: -7.751163005828857
    3. 'n' → logprob: -8.0011625289917
    4. '
' → logprob: -8.5011625289917
    5. ' import' → logprob: -9.5011625289917
    6. '```' → logprob: -9.7511625289917
    7. '    
' → logprob: -10.3761625289917
    8. ' n' → logprob: -10.6261625289917
    9. ' lines' → logprob: -13.7511625289917
    10. ' input' → logprob: -14.1261625289917

Token 741: ' #' (ID: 1069)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3498671352863312
    2. ' n' → logprob: -1.5998671054840088
    3. 'import' → logprob: -2.849867105484009
    4. ' import' → logprob: -3.349867105484009
    5. '   ' → logprob: -7.974867343902588
    6. '```' → logprob: -11.97486686706543
    7. 't' → logprob: -13.34986686706543
    8. '    
' → logprob: -14.97486686706543
    9. '	n' → logprob: -15.09986686706543
    10. ' input' → logprob: -15.09986686706543

Token 742: ' Lecture' (ID: 106534)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.48845213651657104
    2. 'n' → logprob: -1.1134521961212158
    3. ' import' → logprob: -3.238452196121216
    4. ' n' → logprob: -3.988452196121216
    5. '   ' → logprob: -8.863451957702637
    6. 'input' → logprob: -10.113451957702637
    7. 'from' → logprob: -10.363451957702637
    8. ' input' → logprob: -11.613451957702637
    9. '```' → logprob: -11.613451957702637
    10. 'N' → logprob: -12.238451957702637

Token 743: ' du' (ID: 1462)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.26072582602500916
    2. '   ' → logprob: -2.010725736618042
    3. 'import' → logprob: -2.760725736618042
    4. 'n' → logprob: -4.260725975036621
    5. ' =' → logprob: -4.510725975036621
    6. '()
' → logprob: -5.510725975036621
    7. '=' → logprob: -6.635725975036621
    8. '```' → logprob: -7.385725975036621
    9. 'de' → logprob: -8.760725975036621
    10. ' n' → logprob: -8.885725975036621

Token 744: ' nombre' (ID: 9733)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.007399214431643486
    2. 'nombre' → logprob: -5.507399082183838
    3. 'import' → logprob: -6.757399082183838
    4. ' n' → logprob: -6.882399082183838
    5. 'int' → logprob: -7.632399082183838
    6. 'input' → logprob: -8.132399559020996
    7. 't' → logprob: -9.382399559020996
    8. ' nombre' → logprob: -9.382399559020996
    9. ' input' → logprob: -9.632399559020996
    10. 'entrée' → logprob: -10.382399559020996

Token 745: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8946149349212646
    2. ' de' → logprob: -1.5196149349212646
    3. ' =' → logprob: -1.7696149349212646
    4. 'de' → logprob: -2.6446149349212646
    5. '_' → logprob: -3.2696149349212646
    6. ' d' → logprob: -4.144615173339844
    7. '    ' → logprob: -4.394615173339844
    8. '  ' → logprob: -4.394615173339844
    9. ' n' → logprob: -4.644615173339844
    10. ' ' → logprob: -4.769615173339844

Token 746: ' somm' (ID: 44830)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.06072400510311127
    2. 'nodes' → logprob: -3.4357240200042725
    3. 'vertices' → logprob: -4.185723781585693
    4. ' n' → logprob: -4.935723781585693
    5. ' nodes' → logprob: -6.310723781585693
    6. ' vertices' → logprob: -6.435723781585693
    7. 's' → logprob: -7.935723781585693
    8. 't' → logprob: -9.060724258422852
    9. 'tokens' → logprob: -9.185724258422852
    10. '_nodes' → logprob: -9.310724258422852

Token 747: 'ets' (ID: 1719)
  Prédit: 'ets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ets' → logprob: -0.0019793107639998198
    2. 'et' → logprob: -6.376979351043701
    3. 'ètes' → logprob: -8.626978874206543
    4. 'ètres' → logprob: -10.376978874206543
    5. 'etes' → logprob: -10.876978874206543
    6. 'res' → logprob: -11.001978874206543
    7. 'ettes' → logprob: -12.001978874206543
    8. 'e' → logprob: -12.126978874206543
    9. 'è' → logprob: -12.501978874206543
    10. '   ' → logprob: -12.751978874206543

Token 748: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.603313148021698
    2. ',' → logprob: -0.853313148021698
    3. 'n' → logprob: -3.8533132076263428
    4. ' =' → logprob: -5.478312969207764
    5. ' n' → logprob: -6.978312969207764
    6. ',n' → logprob: -8.103313446044922
    7. '=' → logprob: -8.853313446044922
    8. ' ,' → logprob: -9.603313446044922
    9. ',
' → logprob: -9.978313446044922
    10. ' and' → logprob: -9.978313446044922

Token 749: '   ' (ID: 271)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3542437255382538
    2. '   ' → logprob: -1.3542437553405762
    3. ' n' → logprob: -3.354243755340576
    4. ',' → logprob: -5.354243755340576
    5. ' and' → logprob: -8.104243278503418
    6. '```' → logprob: -10.104243278503418
    7. ',n' → logprob: -10.229243278503418
    8. '	n' → logprob: -10.729243278503418
    9. '(n' → logprob: -11.104243278503418
    10. ' ,' → logprob: -11.229243278503418

Token 750: ' N' (ID: 478)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.31329602003097534
    2. ' n' → logprob: -1.3132960796356201
    3. '   ' → logprob: -10.3132963180542
    4. '	n' → logprob: -14.0632963180542
    5. 'import' → logprob: -15.4382963180542
    6. ' ' → logprob: -16.938295364379883
    7. ' import' → logprob: -17.063295364379883
    8. 'N' (adapté à ' N') → logprob: -17.813295364379883
    9. ' ' → logprob: -18.938295364379883
    10. '```' → logprob: -19.063295364379883

Token 751: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0869704857468605
    2. '=' → logprob: -2.711970567703247
    3. ',' → logprob: -4.086970329284668
    4. '=int' → logprob: -10.086970329284668
    5. '   ' → logprob: -10.336970329284668
    6. '=input' → logprob: -11.086970329284668
    7. ' ,' → logprob: -12.711970329284668
    8. ' =
' → logprob: -13.086970329284668
    9. ' ' → logprob: -13.836970329284668
    10. ')' → logprob: -14.461970329284668

Token 752: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.47407710552215576
    2. 'int' → logprob: -0.9740771055221558
    3. '=int' → logprob: -16.349077224731445
    4. '(int' → logprob: -18.974077224731445
    5. '[int' → logprob: -20.349077224731445
    6. '<int' → logprob: -20.599077224731445
    7. '	int' → logprob: -20.849077224731445
    8. ' ' → logprob: -21.224077224731445
    9. ' ' → logprob: -21.224077224731445
    10. ':int' → logprob: -21.349077224731445

Token 753: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0005625653429888189
    2. 'input' → logprob: -7.50056266784668
    3. '(' → logprob: -11.62556266784668
    4. '()' → logprob: -14.87556266784668
    5. ' input' → logprob: -15.62556266784668
    6. '=input' → logprob: -16.25056266784668
    7. '(
' → logprob: -18.50056266784668
    8. '	input' → logprob: -19.00056266784668
    9. ',input' → logprob: -19.00056266784668
    10. '<input' → logprob: -19.12556266784668

Token 754: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.023302661255002022
    2. '()' → logprob: -3.7733025550842285
    3. '(' → logprob: -10.648303031921387
    4. '().' → logprob: -11.273303031921387
    5. ')' → logprob: -11.773303031921387
    6. '())
' → logprob: -12.023303031921387
    7. ' ())' → logprob: -12.398303031921387
    8. '()))' → logprob: -14.398303031921387
    9. '());' → logprob: -14.398303031921387
    10. '();)' → logprob: -14.523303031921387

Token 755: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8704162836074829
    2. 'M' → logprob: -1.370416283607483
    3. 'colors' → logprob: -1.745416283607483
    4. ' M' → logprob: -3.1204161643981934
    5. 'edges' → logprob: -3.4954161643981934
    6. '
' → logprob: -3.8704161643981934
    7. ' edges' → logprob: -4.245416164398193
    8. 'n' → logprob: -4.495416164398193
    9. ' colors' → logprob: -4.745416164398193
    10. 'E' → logprob: -4.870416164398193

Token 756: ' #' (ID: 1069)
  Prédit: 'colors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'colors' → logprob: -0.8106101751327515
    2. '#' (adapté à ' #') → logprob: -1.4356101751327515
    3. '   ' → logprob: -1.5606101751327515
    4. ' colors' → logprob: -2.935610294342041
    5. 'M' → logprob: -3.935610294342041
    6. 'edges' → logprob: -4.310610294342041
    7. ' edges' → logprob: -4.435610294342041
    8. ' #' → logprob: -5.810610294342041
    9. ' M' → logprob: -5.935610294342041
    10. 'E' → logprob: -6.685610294342041

Token 757: ' Lecture' (ID: 106534)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.189819797873497
    2. 'M' → logprob: -2.314819812774658
    3. 'colors' → logprob: -3.064819812774658
    4. ' edges' → logprob: -3.689819812774658
    5. '#' → logprob: -6.564819812774658
    6. ' colors' → logprob: -7.939819812774658
    7. ' M' → logprob: -8.1898193359375
    8. 'import' → logprob: -9.4398193359375
    9. 'E' → logprob: -9.5648193359375
    10. 'm' → logprob: -10.0648193359375

Token 758: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.44455602765083313
    2. ' des' → logprob: -1.0695559978485107
    3. 'des' → logprob: -4.81955623626709
    4. ' of' → logprob: -5.69455623626709
    5. '()' → logprob: -6.06955623626709
    6. '    ' → logprob: -7.31955623626709
    7. '(edges' → logprob: -8.44455623626709
    8. '  ' → logprob: -8.81955623626709
    9. 'edges' → logprob: -8.81955623626709
    10. '(N' → logprob: -8.94455623626709

Token 759: ' stockage' (ID: 101149)
  Prédit: ' edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.16563473641872406
    2. 'edges' → logprob: -1.9156347513198853
    3. '(edges' → logprob: -5.915634632110596
    4. '_edges' → logprob: -6.665634632110596
    5. 'n' → logprob: -8.040635108947754
    6. 'E' → logprob: -8.290635108947754
    7. 'import' → logprob: -8.415635108947754
    8. '.edges' → logprob: -9.665635108947754
    9. 'Edges' → logprob: -10.290635108947754
    10. ' n' → logprob: -10.415635108947754

Token 760: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.005177662707865238
    2. '   ' → logprob: -5.7551774978637695
    3. 'des' → logprob: -6.3801774978637695
    4. ' of' → logprob: -8.88017749786377
    5. '    ' → logprob: -10.25517749786377
    6. '_edges' → logprob: -10.25517749786377
    7. ' edges' → logprob: -10.50517749786377
    8. '(edges' → logprob: -11.38017749786377
    9. ' de' → logprob: -11.50517749786377
    10. 'edges' → logprob: -11.50517749786377

Token 761: ' ar' (ID: 646)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.10495312511920929
    2. ' edges' → logprob: -2.4799530506134033
    3. 'ar' → logprob: -4.229953289031982
    4. ' ar' → logprob: -7.979953289031982
    5. 'arest' → logprob: -8.104952812194824
    6. '_edges' → logprob: -8.104952812194824
    7. 'are' → logprob: -8.479952812194824
    8. ' are' → logprob: -10.354952812194824
    9. 'colors' → logprob: -10.479952812194824
    10. 'edge' → logprob: -10.854952812194824

Token 762: 'êtes' (ID: 23720)
  Prédit: 'êtes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êtes' → logprob: -0.01643279753625393
    2. 'cs' → logprob: -4.516432762145996
    3. 'etes' → logprob: -6.766432762145996
    4. 'e' → logprob: -6.891432762145996
    5. 'r' → logprob: -6.891432762145996
    6. 'ê' → logprob: -7.766432762145996
    7. '_edges' → logprob: -7.766432762145996
    8. 'es' → logprob: -7.891432762145996
    9. '�' → logprob: -8.391432762145996
    10. 'edges' → logprob: -8.891432762145996

Token 763: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.43600428104400635
    2. 'edges' → logprob: -1.6860042810440063
    3. 'E' → logprob: -2.561004161834717
    4. 'M' → logprob: -3.061004161834717
    5. 'for' → logprob: -3.561004161834717
    6. ' edges' → logprob: -5.061004161834717
    7. '
' → logprob: -5.811004161834717
    8. 'm' → logprob: -6.311004161834717
    9. ' for' → logprob: -6.311004161834717
    10. '(edges' → logprob: -6.936004161834717

Token 764: ' au' (ID: 2791)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.39836716651916504
    2. 'edges' → logprob: -2.148367166519165
    3. ' edges' → logprob: -2.273367166519165
    4. ' M' → logprob: -2.523367166519165
    5. 'm' → logprob: -4.148366928100586
    6. '   ' → logprob: -4.523366928100586
    7. 'E' → logprob: -7.023366928100586
    8. ' m' → logprob: -8.398366928100586
    9. '_edges' → logprob: -8.898366928100586
    10. '(edges' → logprob: -8.898366928100586

Token 765: ' format' (ID: 6011)
  Prédit: 'moins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'moins' → logprob: -0.8704452514648438
    2. 'n' → logprob: -2.4954452514648438
    3. 'jourd' → logprob: -2.4954452514648438
    4. 'format' → logprob: -2.4954452514648438
    5. 'pass' → logprob: -3.2454452514648438
    6. 't' → logprob: -3.2454452514648438
    7. 'mo' → logprob: -3.7454452514648438
    8. 's' → logprob: -4.245445251464844
    9. '   ' → logprob: -4.370445251464844
    10. 'm' → logprob: -4.370445251464844

Token 766: ' (' (ID: 350)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6765487194061279
    2. '[N' → logprob: -2.176548719406128
    3. ' [' → logprob: -2.301548719406128
    4. '[n' → logprob: -2.801548719406128
    5. '[(' → logprob: -2.801548719406128
    6. ' edges' → logprob: -3.426548719406128
    7. '[]' → logprob: -3.801548719406128
    8. 'edges' → logprob: -3.926548719406128
    9. 'for' → logprob: -4.551548957824707
    10. '[int' → logprob: -4.676548957824707

Token 767: 'A' (ID: 32)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.8100538849830627
    2. 'A' → logprob: -1.185053825378418
    3. ')' → logprob: -2.810053825378418
    4. 'i' → logprob: -3.560053825378418
    5. 'map' → logprob: -3.560053825378418
    6. 'u' → logprob: -3.560053825378418
    7. 'a' → logprob: -3.685053825378418
    8. 'tuple' → logprob: -4.060053825378418
    9. 'node' → logprob: -4.685053825378418
    10. 'x' → logprob: -4.685053825378418

Token 768: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005033504567109048
    2. ',B' → logprob: -7.7505035400390625
    3. ' ,' → logprob: -9.875503540039062
    4. 'B' → logprob: -11.000503540039062
    5. '<|end|>' → logprob: -13.000503540039062
    6. ',
' → logprob: -13.500503540039062
    7. ',#' → logprob: -15.875503540039062
    8. ' B' → logprob: -16.000503540039062
    9. '‌,' → logprob: -16.250503540039062
    10. ')' → logprob: -16.375503540039062

Token 769: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.011058199219405651
    2. ' B' → logprob: -4.511058330535889
    3. ',' → logprob: -11.63605785369873
    4. ')' → logprob: -14.63605785369873
    5. ',B' → logprob: -15.38605785369873
    6. ' ' → logprob: -15.38605785369873
    7. '  ' → logprob: -15.63605785369873
    8. '   ' → logprob: -15.76105785369873
    9. '
' → logprob: -16.261058807373047
    10. '    
' → logprob: -16.636058807373047

Token 770: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00027694785967469215
    2. ')
' → logprob: -8.625276565551758
    3. '):' → logprob: -10.125276565551758
    4. ')=' → logprob: -10.500276565551758
    5. ' =' → logprob: -11.875276565551758
    6. '),' → logprob: -12.000276565551758
    7. '):
' → logprob: -12.250276565551758
    8. ' )' → logprob: -12.625276565551758
    9. ').' → logprob: -12.875276565551758
    10. '=' → logprob: -13.625276565551758

Token 771: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03469083458185196
    2. 'edges' → logprob: -3.7846908569335938
    3. ' edges' → logprob: -4.784690856933594
    4. 'for' → logprob: -6.409690856933594
    5. ' for' → logprob: -7.034690856933594
    6. 'E' → logprob: -8.534690856933594
    7. '
' → logprob: -9.659690856933594
    8. '_edges' → logprob: -9.909690856933594
    9. '(edges' → logprob: -10.034690856933594
    10. '    
' → logprob: -10.034690856933594

Token 772: ' edges' (ID: 22569)
  Prédit: ' edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.8538895845413208
    2. 'edges' (adapté à ' edges') → logprob: -0.8538895845413208
    3. 'M' → logprob: -2.3538894653320312
    4. ' M' → logprob: -3.6038894653320312
    5. '   ' → logprob: -3.8538894653320312
    6. 'm' → logprob: -6.103889465332031
    7. 'E' → logprob: -7.478889465332031
    8. ' m' → logprob: -8.103889465332031
    9. 'for' → logprob: -8.291389465332031
    10. '```' → logprob: -8.603889465332031

Token 773: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38705819845199585
    2. ' =' → logprob: -1.1370582580566406
    3. '=[]' → logprob: -8.63705825805664
    4. '[]' → logprob: -12.26205825805664
    5. '=[]
' → logprob: -12.88705825805664
    6. '.append' → logprob: -14.13705825805664
    7. ',' → logprob: -14.26205825805664
    8. '   ' → logprob: -14.51205825805664
    9. '=[]
' → logprob: -15.63705825805664
    10. '.' → logprob: -15.76205825805664

Token 774: ' []
' (ID: 8911)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3944363594055176
    2. '[int' → logprob: -1.1444363594055176
    3. '[]' → logprob: -5.644436359405518
    4. '[N' → logprob: -6.644436359405518
    5. ' [' → logprob: -7.144436359405518
    6. '[]
' → logprob: -7.144436359405518
    7. '[n' → logprob: -7.644436359405518
    8. '[array' → logprob: -9.39443588256836
    9. '[num' → logprob: -9.51943588256836
    10. '[e' → logprob: -9.64443588256836

Token 775: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5189226865768433
    2. '   ' → logprob: -1.6439226865768433
    3. ' for' → logprob: -1.6439226865768433
    4. '
' → logprob: -4.018922805786133
    5. '    
' → logprob: -8.643922805786133
    6. ' 
' → logprob: -8.893922805786133
    7. '	for' → logprob: -10.143922805786133
    8. 'n' → logprob: -10.643922805786133
    9. '```' → logprob: -11.643922805786133
    10. 'while' → logprob: -11.893922805786133

Token 776: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.2022712230682373
    2. ' for' → logprob: -1.7022712230682373
    3. '   ' → logprob: -7.077271461486816
    4. '
' → logprob: -11.452271461486816
    5. 'n' → logprob: -13.452271461486816
    6. '	for' → logprob: -14.452271461486816
    7. ' 
' → logprob: -14.702271461486816
    8. '    
' → logprob: -15.077271461486816
    9. '```' → logprob: -16.0772705078125
    10. '_' → logprob: -17.7022705078125

Token 777: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -2.7610454708337784e-05
    2. ' _' → logprob: -10.500027656555176
    3. '_i' → logprob: -17.25002670288086
    4. '_range' → logprob: -18.37502670288086
    5. ' ' → logprob: -19.50002670288086
    6. '_=' → logprob: -20.12502670288086
    7. '_
' → logprob: -20.62502670288086
    8. '_]' → logprob: -21.25002670288086
    9. '_

' → logprob: -21.50002670288086
    10. '_in' → logprob: -21.50002670288086

Token 778: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.4803317189216614
    2. ' in' → logprob: -0.9803317189216614
    3. 'range' → logprob: -5.105331897735596
    4. ' ' → logprob: -9.480331420898438
    5. ' range' → logprob: -9.980331420898438
    6. '_' → logprob: -10.730331420898438
    7. 'i' → logprob: -10.855331420898438
    8. ' _' → logprob: -12.730331420898438
    9. ' i' → logprob: -14.105331420898438
    10. 'n' → logprob: -14.230331420898438

Token 779: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00015860427811276168
    2. ' range' → logprob: -8.750158309936523
    3. '_' → logprob: -16.750158309936523
    4. '	range' → logprob: -18.500158309936523
    5. '_range' → logprob: -18.875158309936523
    6. '```' → logprob: -19.250158309936523
    7. '
' → logprob: -19.375158309936523
    8. 'rang' → logprob: -19.750158309936523
    9. '(range' → logprob: -20.125158309936523
    10. 'in' → logprob: -20.875158309936523

Token 780: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.00025037277373485267
    2. 'N' → logprob: -9.000250816345215
    3. '(' → logprob: -9.125250816345215
    4. ' (' → logprob: -11.625250816345215
    5. '(
' → logprob: -12.000250816345215
    6. ' N' → logprob: -13.125250816345215
    7. '(n' → logprob: -15.125250816345215
    8. '(int' → logprob: -15.250250816345215
    9. '()' → logprob: -15.625250816345215
    10. '	N' → logprob: -15.875250816345215

Token 781: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5760346055030823
    2. ' -' → logprob: -0.8260346055030823
    3. '):
' → logprob: -9.576034545898438
    4. '):' → logprob: -11.826034545898438
    5. '   ' → logprob: -12.076034545898438
    6. ' ' → logprob: -12.826034545898438
    7. '*' → logprob: -12.951034545898438
    8. '1' → logprob: -13.201034545898438
    9. ')' → logprob: -13.326034545898438
    10. '()-' → logprob: -14.576034545898438

Token 782: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00020389800192788243
    2. ' ' → logprob: -8.500204086303711
    3. '<|end|>' → logprob: -14.875204086303711
    4. 'def' → logprob: -17.50020408630371
    5. ')' → logprob: -17.62520408630371
    6. '১' → logprob: -18.81270408630371
    7. '   ' → logprob: -18.87520408630371
    8. '
' → logprob: -18.93770408630371
    9. '۱' → logprob: -19.06270408630371
    10. '```' → logprob: -19.18770408630371

Token 783: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.750000953674316
    3. '2' → logprob: -18.625001907348633
    4. '১' → logprob: -18.750001907348633
    5. '１' → logprob: -19.000001907348633
    6. '<|end|>' → logprob: -19.187501907348633
    7. '१' → logprob: -19.437501907348633
    8. '۱' → logprob: -19.625001907348633
    9. '```' → logprob: -20.125001907348633
    10. '0' → logprob: -20.375001907348633

Token 784: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5244072675704956
    2. '):' → logprob: -0.8994072675704956
    3. ')' → logprob: -6.899407386779785
    4. ':' → logprob: -8.899407386779785
    5. '):
' → logprob: -9.524407386779785
    6. '   ' → logprob: -10.274407386779785
    7. ':
' → logprob: -10.899407386779785
    8. ' ):
' → logprob: -13.024407386779785
    9. '():
' → logprob: -13.149407386779785
    10. '):

' → logprob: -13.524407386779785

Token 785: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3879548907279968
    2. '   ' → logprob: -1.1379549503326416
    3. ' A' → logprob: -7.6379547119140625
    4. ' lines' → logprob: -9.262954711914062
    5. 'A' → logprob: -9.512954711914062
    6. ' line' → logprob: -9.637954711914062
    7. '    
' → logprob: -9.762954711914062
    8. '    ' → logprob: -9.762954711914062
    9. '<|end|>' → logprob: -10.512954711914062
    10. '        
' → logprob: -10.762954711914062

Token 786: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' (adapté à ' A') → logprob: -0.09351877123117447
    2. ' A' → logprob: -2.4685187339782715
    3. 'a' → logprob: -5.4685187339782715
    4. ' a' → logprob: -8.21851921081543
    5. '   ' → logprob: -10.09351921081543
    6. ' line' → logprob: -10.84351921081543
    7. 'u' → logprob: -11.71851921081543
    8. 'line' → logprob: -12.46851921081543
    9. '	A' → logprob: -12.46851921081543
    10. ' u' → logprob: -13.34351921081543

Token 787: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00022940391500014812
    2. ',B' → logprob: -8.500229835510254
    3. ' ,' → logprob: -10.625229835510254
    4. '<|end|>' → logprob: -14.250229835510254
    5. ',b' → logprob: -14.875229835510254
    6. 'B' → logprob: -15.500229835510254
    7. ',Q' → logprob: -16.625228881835938
    8. ',int' → logprob: -16.750228881835938
    9. ',s' → logprob: -17.500228881835938
    10. ',N' → logprob: -17.500228881835938

Token 788: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.006715370807796717
    2. ' B' → logprob: -5.006715297698975
    3. ' ' → logprob: -17.381715774536133
    4. '<|end|>' → logprob: -18.506715774536133
    5. 'space' → logprob: -19.631715774536133
    6. 'b' → logprob: -19.881715774536133
    7. ' 
' → logprob: -20.131715774536133
    8. '    ' → logprob: -20.256715774536133
    9. '>B' → logprob: -20.506715774536133
    10. '  ' → logprob: -21.006715774536133

Token 789: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10021001845598221
    2. ' =' → logprob: -2.350209951400757
    3. ',' → logprob: -13.350210189819336
    4. ')' → logprob: -14.100210189819336
    5. '=input' → logprob: -14.225210189819336
    6. ')=' → logprob: -16.350210189819336
    7. '=int' → logprob: -16.475210189819336
    8. '<|end|>' → logprob: -17.100210189819336
    9. '   ' → logprob: -17.225210189819336
    10. '    ' → logprob: -17.600210189819336

Token 790: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.00861456897109747
    2. ' map' → logprob: -4.758614540100098
    3. '	map' → logprob: -16.758615493774414
    4. '(map' → logprob: -19.258615493774414
    5. 'list' → logprob: -19.383615493774414
    6. '[' → logprob: -19.758615493774414
    7. '.map' → logprob: -19.883615493774414
    8. '_map' → logprob: -20.008615493774414
    9. 'm' → logprob: -21.133615493774414
    10. 'tuple' → logprob: -21.508615493774414

Token 791: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.007618575822561979
    2. 'int' → logprob: -4.882618427276611
    3. '(' → logprob: -11.88261890411377
    4. '<int' → logprob: -13.38261890411377
    5. '=int' → logprob: -13.63261890411377
    6. '[int' → logprob: -14.25761890411377
    7. 'input' → logprob: -14.38261890411377
    8. ' int' → logprob: -14.63261890411377
    9. '(input' → logprob: -14.75761890411377
    10. '(
' → logprob: -15.88261890411377

Token 792: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.29038822650909424
    2. 'input' → logprob: -1.6653882265090942
    3. ',input' → logprob: -2.7903881072998047
    4. ',' → logprob: -7.165388107299805
    5. ')' → logprob: -7.540388107299805
    6. '=input' → logprob: -9.540388107299805
    7. ' input' → logprob: -9.540388107299805
    8. '(' → logprob: -10.165388107299805
    9. '<input' → logprob: -11.665388107299805
    10. '[input' → logprob: -12.040388107299805

Token 793: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0001584850688232109
    2. ' input' → logprob: -8.750158309936523
    3. '(input' → logprob: -21.750158309936523
    4. ',input' → logprob: -21.750158309936523
    5. '=input' → logprob: -22.000158309936523
    6. '	input' → logprob: -22.125158309936523
    7. ')' → logprob: -22.125158309936523
    8. '_input' → logprob: -22.875158309936523
    9. '   ' → logprob: -23.000158309936523
    10. '<input' → logprob: -23.125158309936523

Token 794: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -6.704273118884885e-07
    2. '()' → logprob: -14.500000953674316
    3. ' ().' → logprob: -16.75
    4. '(' → logprob: -17.75
    5. '.split' → logprob: -18.625
    6. '()
' → logprob: -18.75
    7. '())' → logprob: -19.5
    8. ')' → logprob: -19.625
    9. '   ' → logprob: -20.0
    10. 'split' → logprob: -20.375

Token 795: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -8.180258191714529e-06
    2. 'strip' → logprob: -11.750008583068848
    3. ' split' → logprob: -16.12500762939453
    4. 'rstrip' → logprob: -16.50000762939453
    5. 'spl' → logprob: -17.25000762939453
    6. '(split' → logprob: -18.87500762939453
    7. '.split' → logprob: -20.75000762939453
    8. '_split' → logprob: -21.12500762939453
    9. 's' → logprob: -21.37500762939453
    10. '().' → logprob: -22.62500762939453

Token 796: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.019268808886408806
    2. ')' → logprob: -4.019268989562988
    3. '()' → logprob: -6.894268989562988
    4. '())
' → logprob: -9.269268989562988
    5. '(' → logprob: -12.144268989562988
    6. '()))' → logprob: -13.394268989562988
    7. '))' → logprob: -13.644268989562988
    8. ' ())' → logprob: -14.394268989562988
    9. '())
' → logprob: -14.644268989562988
    10. ')
' → logprob: -15.144268989562988

Token 797: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003171533579006791
    2. 'edges' → logprob: -6.878171443939209
    3. ' edges' → logprob: -7.128171443939209
    4. '<|end|>' → logprob: -7.128171443939209
    5. '   ' → logprob: -8.003171920776367
    6. '(edges' → logprob: -9.253171920776367
    7. ')' → logprob: -10.003171920776367
    8. '<|end|>' → logprob: -11.253171920776367
    9. '        
' → logprob: -11.628171920776367
    10. '           ' → logprob: -11.878171920776367

Token 798: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' (adapté à ' edges') → logprob: -0.05808369070291519
    2. ' edges' → logprob: -2.9330837726593018
    3. '       ' → logprob: -5.808083534240723
    4. '   ' → logprob: -8.683083534240723
    5. '.edges' → logprob: -11.558083534240723
    6. '(edges' → logprob: -11.683083534240723
    7. '           ' → logprob: -13.183083534240723
    8. '	' → logprob: -13.683083534240723
    9. '_edges' → logprob: -14.433083534240723
    10. '```' → logprob: -14.558083534240723

Token 799: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0010381679749116302
    2. '.' → logprob: -6.876038074493408
    3. '.app' → logprob: -13.626038551330566
    4. 'append' → logprob: -13.751038551330566
    5. '.extend' → logprob: -13.876038551330566
    6. ').' → logprob: -13.876038551330566
    7. '.push' → logprob: -14.751038551330566
    8. '.Append' → logprob: -15.251038551330566
    9. '.ap' → logprob: -15.501038551330566
    10. '.setdefault' → logprob: -15.751038551330566

Token 800: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.023300450295209885
    2. '(A' → logprob: -4.023300647735596
    3. '(' → logprob: -5.273300647735596
    4. '(
' → logprob: -11.648300170898438
    5. ' (' → logprob: -13.898300170898438
    6. '(B' → logprob: -14.523300170898438
    7. '(T' → logprob: -16.773300170898438
    8. '(a' → logprob: -16.773300170898438
    9. '(('' → logprob: -16.898300170898438
    10. '(("' → logprob: -17.023300170898438

Token 801: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -3.4121114822482923e-06
    2. ' A' → logprob: -12.625003814697266
    3. '   ' → logprob: -16.625003814697266
    4. ' ' → logprob: -19.375003814697266
    5. '	A' → logprob: -19.500003814697266
    6. ')' → logprob: -19.875003814697266
    7. '  ' → logprob: -20.750003814697266
    8. '(A' → logprob: -20.875003814697266
    9. '    ' → logprob: -21.875003814697266
    10. '_A' → logprob: -22.125003814697266

Token 802: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001713590754661709
    2. ',B' → logprob: -8.750171661376953
    3. ' ,' → logprob: -11.500171661376953
    4. ',
' → logprob: -12.875171661376953
    5. ',A' → logprob: -16.000171661376953
    6. '<|end|>' → logprob: -18.000171661376953
    7. '‌,' → logprob: -18.000171661376953
    8. ',b' → logprob: -18.125171661376953
    9. 'B' → logprob: -18.500171661376953
    10. ',

' → logprob: -18.625171661376953

Token 803: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.006715370807796717
    2. ' B' → logprob: -5.006715297698975
    3. ' ' → logprob: -19.506715774536133
    4. '   ' → logprob: -19.756715774536133
    5. '	B' → logprob: -20.381715774536133
    6. '>B' → logprob: -21.256715774536133
    7. '       ' → logprob: -22.381715774536133
    8. '_B' → logprob: -22.631715774536133
    9. ')' → logprob: -22.756715774536133
    10. '    ' → logprob: -23.131715774536133

Token 804: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0006739511154592037
    2. ')' → logprob: -7.375673770904541
    3. '))
' → logprob: -10.0006742477417
    4. '   ' → logprob: -14.1256742477417
    5. ')))' → logprob: -14.5006742477417
    6. '       ' → logprob: -14.8756742477417
    7. ' ))' → logprob: -15.3756742477417
    8. ')
' → logprob: -16.125673294067383
    9. '),' → logprob: -17.125673294067383
    10. '));' → logprob: -17.250673294067383

Token 805: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3221588134765625
    2. 'E' → logprob: -1.3221588134765625
    3. '    
' → logprob: -5.4471588134765625
    4. '```' → logprob: -5.9471588134765625
    5. '
' → logprob: -6.3221588134765625
    6. '#' → logprob: -10.197158813476562
    7. '  
' → logprob: -10.197158813476562
    8. ' E' → logprob: -10.947158813476562
    9. '``' → logprob: -11.447158813476562
    10. '        
' → logprob: -11.572158813476562

Token 806: ' #' (ID: 1069)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.001961701549589634
    2. '   ' → logprob: -6.251961708068848
    3. '#' (adapté à ' #') → logprob: -11.126961708068848
    4. ' E' → logprob: -11.501961708068848
    5. '```' → logprob: -11.876961708068848
    6. '
' → logprob: -14.001961708068848
    7. '    
' → logprob: -15.251961708068848
    8. '``' → logprob: -16.00196075439453
    9. '`' → logprob: -17.37696075439453
    10. '  ' → logprob: -17.37696075439453

Token 807: ' Construction' (ID: 31452)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.00015693542081862688
    2. '#' → logprob: -8.875157356262207
    3. ' E' → logprob: -11.625157356262207
    4. '   ' → logprob: -11.875157356262207
    5. 'adj' → logprob: -14.250157356262207
    6. '```' → logprob: -16.00015640258789
    7. 'Adj' → logprob: -16.37515640258789
    8. 'graph' → logprob: -17.00015640258789
    9. '       ' → logprob: -17.75015640258789
    10. '	E' → logprob: -18.37515640258789

Token 808: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11508756875991821
    2. ' de' → logprob: -2.7400875091552734
    3. 'E' → logprob: -3.4900875091552734
    4. 'de' → logprob: -4.990087509155273
    5. ' E' → logprob: -5.615087509155273
    6. ' of' → logprob: -5.990087509155273
    7. '(E' → logprob: -8.865087509155273
    8. 'd' → logprob: -9.240087509155273
    9. 'of' → logprob: -9.740087509155273
    10. ' ' → logprob: -9.740087509155273

Token 809: ' la' (ID: 557)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.0020641377195715904
    2. ' E' → logprob: -6.252064228057861
    3. 'l' → logprob: -9.002063751220703
    4. 'adj' → logprob: -12.627063751220703
    5. ' adjacency' → logprob: -12.627063751220703
    6. ' la' → logprob: -13.252063751220703
    7. ' l' → logprob: -13.502063751220703
    8. 'the' → logprob: -13.502063751220703
    9. '(E' → logprob: -14.877063751220703
    10. ' the' → logprob: -14.877063751220703

Token 810: ' liste' (ID: 31719)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.0016492337454110384
    2. 'adj' → logprob: -6.751649379730225
    3. ' adjacency' → logprob: -8.001648902893066
    4. ' E' → logprob: -9.126648902893066
    5. 'graph' → logprob: -10.376648902893066
    6. ' graph' → logprob: -13.251648902893066
    7. 'edges' → logprob: -14.626648902893066
    8. '#' → logprob: -15.126648902893066
    9. '```' → logprob: -15.251648902893066
    10. 'def' → logprob: -15.376648902893066

Token 811: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0392032228410244
    2. 'E' → logprob: -4.03920316696167
    3. '   ' → logprob: -4.16420316696167
    4. ' d' → logprob: -5.41420316696167
    5. 'adj' → logprob: -7.53920316696167
    6. ' E' → logprob: -8.539203643798828
    7. 'ad' → logprob: -9.914203643798828
    8. '_ad' → logprob: -10.664203643798828
    9. '_d' → logprob: -11.414203643798828
    10. ' ' → logprob: -12.539203643798828

Token 812: ''ad' (ID: 36162)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.001175820711068809
    2. ''ad' → logprob: -6.751175880432129
    3. 'ad' → logprob: -12.626175880432129
    4. ' adjacency' → logprob: -13.626175880432129
    5. '_adj' → logprob: -14.626175880432129
    6. 'aj' → logprob: -15.626175880432129
    7. '_ad' → logprob: -16.001174926757812
    8. 'adic' → logprob: -16.126174926757812
    9. '(adj' → logprob: -16.501174926757812
    10. ' adj' → logprob: -16.751174926757812

Token 813: 'jac' (ID: 77250)
  Prédit: 'jac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jac' → logprob: -0.0009148012613877654
    2. 'j' → logprob: -7.000914573669434
    3. 'Jac' → logprob: -13.625914573669434
    4. 'acency' → logprob: -13.625914573669434
    5. 'jc' → logprob: -15.750914573669434
    6. 'ac' → logprob: -16.00091552734375
    7. ' jac' → logprob: -16.25091552734375
    8. 'yac' → logprob: -16.50091552734375
    9. 'J' → logprob: -16.62591552734375
    10. '_j' → logprob: -16.62591552734375

Token 814: 'ence' (ID: 1082)
  Prédit: 'ence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ence' → logprob: -0.039122529327869415
    2. 'acency' → logprob: -3.7891225814819336
    3. 'ac' → logprob: -4.914122581481934
    4. 'ance' → logprob: -6.039122581481934
    5. 'E' → logprob: -6.164122581481934
    6. 'escence' → logprob: -6.789122581481934
    7. 'list' → logprob: -6.914122581481934
    8. 'liste' → logprob: -7.914122581481934
    9. 'ency' → logprob: -8.039122581481934
    10. '_list' → logprob: -8.289122581481934

Token 815: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4009547233581543
    2. 'E' → logprob: -1.1509547233581543
    3. ' E' → logprob: -4.275954723358154
    4. '
' → logprob: -10.150955200195312
    5. '    
' → logprob: -11.275955200195312
    6. ' ' → logprob: -11.525955200195312
    7. '	E' → logprob: -12.150955200195312
    8. ',' → logprob: -12.525955200195312
    9. '```' → logprob: -12.775955200195312
    10. '  ' → logprob: -12.900955200195312

Token 816: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25414809584617615
    2. 'E' → logprob: -1.5041481256484985
    3. ' E' → logprob: -6.129148006439209
    4. '
' → logprob: -11.504148483276367
    5. '    
' → logprob: -11.754148483276367
    6. ' ' → logprob: -12.004148483276367
    7. '```' → logprob: -12.504148483276367
    8. '  ' → logprob: -12.629148483276367
    9. '	E' → logprob: -13.379148483276367
    10. '`' → logprob: -13.754148483276367

Token 817: ' E' (ID: 457)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' (adapté à ' E') → logprob: -0.011249294504523277
    2. ' E' → logprob: -4.51124906539917
    3. '   ' → logprob: -8.511249542236328
    4. '```' → logprob: -16.011249542236328
    5. '	E' → logprob: -16.136249542236328
    6. ' ' → logprob: -16.761249542236328
    7. '  ' → logprob: -17.261249542236328
    8. '`' → logprob: -17.636249542236328
    9. '    
' → logprob: -17.761249542236328
    10. '
' → logprob: -18.386249542236328

Token 818: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31326213479042053
    2. '=' → logprob: -1.3132621049880981
    3. ')' → logprob: -15.813261985778809
    4. '   ' → logprob: -16.188262939453125
    5. ',' → logprob: -17.063262939453125
    6. 'E' → logprob: -17.063262939453125
    7. '[' → logprob: -17.813262939453125
    8. '＝' → logprob: -17.813262939453125
    9. ' =
' → logprob: -17.813262939453125
    10. '=create' → logprob: -18.188262939453125

Token 819: ' build' (ID: 3024)
  Prédit: 'build'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'build' → logprob: -0.029750604182481766
    2. ' build' → logprob: -3.5297505855560303
    3. '(build' → logprob: -16.27975082397461
    4. '	build' → logprob: -17.15475082397461
    5. '.build' → logprob: -18.90475082397461
    6. '_build' → logprob: -19.65475082397461
    7. 'building' → logprob: -20.52975082397461
    8. ' buil' → logprob: -20.77975082397461
    9. 'Build' → logprob: -21.40475082397461
    10. ' building' → logprob: -21.90475082397461

Token 820: '_ad' (ID: 23782)
  Prédit: '_ad'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ad' → logprob: -1.7120533811976202e-05
    2. '_adj' → logprob: -11.000017166137695
    3. 'adj' → logprob: -16.125017166137695
    4. '_' → logprob: -16.375017166137695
    5. ' adjacency' → logprob: -16.625017166137695
    6. '_edges' → logprob: -18.000017166137695
    7. '_ed' → logprob: -18.125017166137695
    8. '(ad' → logprob: -19.000017166137695
    9. '_an' → logprob: -19.375017166137695
    10. '_a' → logprob: -19.750017166137695

Token 821: 'jac' (ID: 77250)
  Prédit: 'jac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jac' → logprob: -9.198043699143454e-05
    2. 'acency' → logprob: -9.500091552734375
    3. 'j' → logprob: -11.000091552734375
    4. 'Jac' → logprob: -15.250091552734375
    5. ' adjacency' → logprob: -16.500091552734375
    6. ' jac' → logprob: -17.500091552734375
    7. 'jc' → logprob: -19.375091552734375
    8. 'J' → logprob: -19.375091552734375
    9. 'adj' → logprob: -20.625091552734375
    10. '
' → logprob: -21.000091552734375

Token 822: 'ency' (ID: 2799)
  Prédit: 'ency'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ency' → logprob: -0.04204947501420975
    2. '_list' → logprob: -4.167049407958984
    3. 'cy' → logprob: -4.542049407958984
    4. 'ancy' → logprob: -5.167049407958984
    5. 'acy' → logprob: -5.542049407958984
    6. 'acency' → logprob: -6.667049407958984
    7. 'list' → logprob: -6.792049407958984
    8. 'n' → logprob: -7.292049407958984
    9. 'ance' → logprob: -7.417049407958984
    10. '   ' → logprob: -7.917049407958984

Token 823: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -1.1472419600977446e-06
    2. 'list' → logprob: -13.750000953674316
    3. '_l' → logprob: -17.250001907348633
    4. '_' → logprob: -18.000001907348633
    5. '_lists' → logprob: -18.500001907348633
    6. 'List' → logprob: -18.750001907348633
    7. '```' → logprob: -19.500001907348633
    8. ' list' → logprob: -19.500001907348633
    9. ' _' → logprob: -19.750001907348633
    10. '_lista' → logprob: -20.125001907348633

Token 824: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -4.60414821645827e-06
    2. 'N' → logprob: -13.125004768371582
    3. '(' → logprob: -13.250004768371582
    4. '(n' → logprob: -14.625004768371582
    5. ' (' → logprob: -15.375004768371582
    6. '(
' → logprob: -16.250003814697266
    7. '```' → logprob: -16.875003814697266
    8. '<|end|>' → logprob: -18.625003814697266
    9. ' N' → logprob: -19.250003814697266
    10. '\(' → logprob: -19.500003814697266

Token 825: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.7729658540920354e-05
    2. '(edges' → logprob: -11.250027656555176
    3. ',n' → logprob: -11.875027656555176
    4. ' ,' → logprob: -12.000027656555176
    5. ',N' → logprob: -14.750027656555176
    6. '(n' → logprob: -14.875027656555176
    7. ',
' → logprob: -15.250027656555176
    8. ',E' → logprob: -15.625027656555176
    9. '(' → logprob: -16.375028610229492
    10. '‌,' → logprob: -16.625028610229492

Token 826: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.009779110550880432
    2. ' edges' → logprob: -4.63477897644043
    3. '(edges' → logprob: -11.63477897644043
    4. '.edges' → logprob: -12.25977897644043
    5. '   ' → logprob: -12.38477897644043
    6. ')' → logprob: -13.50977897644043
    7. '_edges' → logprob: -13.88477897644043
    8. '```' → logprob: -14.38477897644043
    9. ' ' → logprob: -14.75977897644043
    10. 'Edges' → logprob: -14.88477897644043

Token 827: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00010986098641296849
    2. '   ' → logprob: -9.250109672546387
    3. ')
' → logprob: -11.500109672546387
    4. ' )' → logprob: -12.750109672546387
    5. ')

' → logprob: -15.625109672546387
    6. ')`' → logprob: -16.625110626220703
    7. ' ' → logprob: -16.750110626220703
    8. '<|end|>' → logprob: -17.250110626220703
    9. '),' → logprob: -17.500110626220703
    10. '`)' → logprob: -17.500110626220703

Token 828: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009729171171784401
    2. '#' → logprob: -5.884729385375977
    3. 'colors' → logprob: -5.884729385375977
    4. '
' → logprob: -6.509729385375977
    5. '```' → logprob: -6.509729385375977
    6. '    
' → logprob: -6.884729385375977
    7. 'max' → logprob: -9.384729385375977
    8. ' colors' → logprob: -12.009729385375977
    9. '   ' → logprob: -12.134729385375977
    10. '``' → logprob: -12.259729385375977

Token 829: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5970453023910522
    2. 'max' → logprob: -1.0970453023910522
    3. '#' (adapté à ' #') → logprob: -2.472045421600342
    4. 'start' → logprob: -3.972045421600342
    5. ' max' → logprob: -5.722045421600342
    6. 'node' → logprob: -5.722045421600342
    7. 'highest' → logprob: -6.097045421600342
    8. '
' → logprob: -6.847045421600342
    9. ' #' → logprob: -7.347045421600342
    10. 'high' → logprob: -7.847045421600342

Token 830: ' Trou' (ID: 58947)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.08517856895923615
    2. 'start' → logprob: -2.5851786136627197
    3. 'node' → logprob: -5.460178375244141
    4. ' max' → logprob: -6.835178375244141
    5. 'best' → logprob: -8.21017837524414
    6. '#' → logprob: -8.58517837524414
    7. ' start' → logprob: -9.21017837524414
    8. 'highest' → logprob: -9.21017837524414
    9. 'high' → logprob: -9.46017837524414
    10. 'root' → logprob: -9.96017837524414

Token 831: 'ver' (ID: 445)
  Prédit: 've'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 've' → logprob: -0.11489800363779068
    2. 'ver' → logprob: -2.2398979663848877
    3. 'v' → logprob: -7.239898204803467
    4. 'vant' → logprob: -7.239898204803467
    5. 'vez' → logprob: -7.989898204803467
    6. '   ' → logprob: -8.364897727966309
    7. '#' → logprob: -10.864897727966309
    8. 'ves' → logprob: -11.364897727966309
    9. 'vé' → logprob: -11.739897727966309
    10. 'va' → logprob: -11.864897727966309

Token 832: ' le' (ID: 505)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.7575752139091492
    2. ' max' → logprob: -1.007575273513794
    3. ' node' → logprob: -2.507575273513794
    4. ' le' → logprob: -3.007575273513794
    5. 'le' → logprob: -3.882575273513794
    6. 'node' → logprob: -4.507575035095215
    7. ' the' → logprob: -6.007575035095215
    8. 'the' → logprob: -7.382575035095215
    9. ' highest' → logprob: -9.257575035095215
    10. 'highest' → logprob: -9.507575035095215

Token 833: ' n' (ID: 297)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.02569177933037281
    2. 'node' → logprob: -3.7756917476654053
    3. 'start' → logprob: -6.025691986083984
    4. ' max' → logprob: -11.275691986083984
    5. ' node' → logprob: -12.025691986083984
    6. '```' → logprob: -12.775691986083984
    7. 'highest' → logprob: -13.275691986083984
    8. 'best' → logprob: -13.775691986083984
    9. 'center' → logprob: -14.150691986083984
    10. 'root' → logprob: -15.025691986083984

Token 834: 'œ' (ID: 15335)
  Prédit: 'œ'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'œ' → logprob: -0.009029560722410679
    2. 'oe' → logprob: -4.884029388427734
    3. '_' → logprob: -7.134029388427734
    4. '\xc2' → logprob: -8.509029388427734
    5. '_max' → logprob: -9.134029388427734
    6. '\' → logprob: -9.509029388427734
    7. 'o' → logprob: -9.509029388427734
    8. 'ode' → logprob: -9.759029388427734
    9. 'e' → logprob: -10.384029388427734
    10. 'Œ' → logprob: -11.634029388427734

Token 835: 'ud' (ID: 527)
  Prédit: 'ud'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ud' → logprob: -0.014933611266314983
    2. 'œ' → logprob: -4.2649335861206055
    3. 'd' → logprob: -7.5149335861206055
    4. 'e' → logprob: -8.764933586120605
    5. '\xc2' → logprob: -10.639933586120605
    6. 'oe' → logprob: -10.764933586120605
    7. 'u' → logprob: -12.889933586120605
    8. '```' → logprob: -12.889933586120605
    9. '\' → logprob: -13.264933586120605
    10. 'n' → logprob: -13.389933586120605

Token 836: ' avec' (ID: 3937)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.22492313385009766
    2. ' de' → logprob: -2.4749231338500977
    3. 'de' → logprob: -2.4749231338500977
    4. ' max' → logprob: -4.099923133850098
    5. '_max' → logprob: -5.349923133850098
    6. ' ayant' → logprob: -5.724923133850098
    7. ' of' → logprob: -6.099923133850098
    8. '_de' → logprob: -6.724923133850098
    9. 'ayant' → logprob: -6.974923133850098
    10. ' having' → logprob: -7.224923133850098

Token 837: ' le' (ID: 505)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0028267467860132456
    2. ' max' → logprob: -6.877826690673828
    3. 'find' → logprob: -7.252826690673828
    4. 'highest' → logprob: -7.752826690673828
    5. 'maximum' → logprob: -8.377826690673828
    6. ' find' → logprob: -9.002826690673828
    7. 'the' → logprob: -9.252826690673828
    8. ' maximal' → logprob: -9.752826690673828
    9. 'le' → logprob: -9.877826690673828
    10. ' highest' → logprob: -10.877826690673828

Token 838: ' degré' (ID: 169072)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.05810978263616562
    2. 'plus' → logprob: -2.933109760284424
    3. 'maximum' → logprob: -5.808109760284424
    4. 'highest' → logprob: -9.058110237121582
    5. 'de' → logprob: -9.933110237121582
    6. 'degree' → logprob: -11.058110237121582
    7. ' plus' → logprob: -11.183110237121582
    8. ' max' → logprob: -12.308110237121582
    9. '```' → logprob: -12.308110237121582
    10. '+' → logprob: -12.433110237121582

Token 839: ' le' (ID: 505)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.1291552633047104
    2. ' maximal' → logprob: -2.129155158996582
    3. 'maximum' → logprob: -6.754155158996582
    4. '_max' → logprob: -7.629155158996582
    5. ' max' → logprob: -8.004155158996582
    6. ' maximum' → logprob: -9.379155158996582
    7. ' максим' → logprob: -9.629155158996582
    8. ' maximale' → logprob: -10.129155158996582
    9. '(max' → logprob: -11.879155158996582
    10. ' maksimal' → logprob: -12.004155158996582

Token 840: ' plus' (ID: 2932)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.13867083191871643
    2. ' plus' → logprob: -2.5136709213256836
    3. 'max' → logprob: -3.1386709213256836
    4. ' maximal' → logprob: -6.013670921325684
    5. 'maximum' → logprob: -6.763670921325684
    6. '_plus' → logprob: -7.638670921325684
    7. 'Plus' → logprob: -8.888670921325684
    8. '+' → logprob: -8.888670921325684
    9. 't' → logprob: -9.138670921325684
    10. 'ment' → logprob: -9.263670921325684

Token 841: ' élevé' (ID: 95488)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.03882293030619621
    2. 'é' → logprob: -4.163823127746582
    3. 'grand' → logprob: -4.538823127746582
    4. ' élevé' → logprob: -5.163823127746582
    5. '_max' → logprob: -5.913823127746582
    6. 'haut' → logprob: -6.413823127746582
    7. 'important' → logprob: -7.163823127746582
    8. ' maximal' → logprob: -8.038823127746582
    9. 'élé' → logprob: -8.538823127746582
    10. '```' → logprob: -8.788823127746582

Token 842: ' (' (ID: 350)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.4914596378803253
    2. '   ' → logprob: -1.241459608078003
    3. ' max' → logprob: -2.741459608078003
    4. 'node' → logprob: -4.616459846496582
    5. ' node' → logprob: -4.616459846496582
    6. '
' → logprob: -4.991459846496582
    7. 'u' → logprob: -5.741459846496582
    8. 'highest' → logprob: -6.116459846496582
    9. ' u' → logprob: -6.866459846496582
    10. ' highest' → logprob: -7.491459846496582

Token 843: 'le' (ID: 282)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.061495307832956314
    2. ' max' → logprob: -3.561495304107666
    3. ')' → logprob: -3.686495304107666
    4. 'node' → logprob: -6.061495304107666
    5. ' node' → logprob: -6.186495304107666
    6. 'highest' → logprob: -7.061495304107666
    7. ' highest' → logprob: -7.436495304107666
    8. ' )' → logprob: -9.686495780944824
    9. 'start' → logprob: -9.811495780944824
    10. 'high' → logprob: -10.186495780944824

Token 844: ' point' (ID: 2438)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.2732793390750885
    2. ')' → logprob: -2.2732794284820557
    3. 'node' → logprob: -3.3982794284820557
    4. ' node' → logprob: -3.3982794284820557
    5. 'plus' → logprob: -3.5232794284820557
    6. ' max' → logprob: -3.8982794284820557
    7. ' plus' → logprob: -4.898279190063477
    8. 'n' → logprob: -5.898279190063477
    9. 'token' → logprob: -6.273279190063477
    10. '_max' → logprob: -6.648279190063477

Token 845: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.11375313997268677
    2. '_de' → logprob: -3.363753080368042
    3. 'de' → logprob: -3.488753080368042
    4. ' d' → logprob: -4.738753318786621
    5. 'd' → logprob: -5.238753318786621
    6. ')' → logprob: -5.363753318786621
    7. '   ' → logprob: -5.613753318786621
    8. ' of' → logprob: -5.863753318786621
    9. 'max' → logprob: -6.363753318786621
    10. ' culmin' → logprob: -6.363753318786621

Token 846: ' départ' (ID: 32693)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'part' → logprob: -0.5996865630149841
    2. 'dé' → logprob: -1.724686622619629
    3. 'depart' → logprob: -2.349686622619629
    4. 'max' → logprob: -2.724686622619629
    5. 'grand' → logprob: -3.099686622619629
    6. 'haut' → logprob: -3.474686622619629
    7. 'plus' → logprob: -4.849686622619629
    8. 'd' → logprob: -5.849686622619629
    9. 'vue' → logprob: -5.849686622619629
    10. 'gr' → logprob: -6.099686622619629

Token 847: ' pour' (ID: 1930)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2921193242073059
    2. 'pour' → logprob: -2.667119264602661
    3. ' pour' → logprob: -2.792119264602661
    4. ' de' → logprob: -3.167119264602661
    5. '   ' → logprob: -3.542119264602661
    6. 'de' → logprob: -3.792119264602661
    7. ' for' → logprob: -4.04211950302124
    8. 'for' → logprob: -5.29211950302124
    9. ' )' → logprob: -6.04211950302124
    10. ' du' → logprob: -6.66711950302124

Token 848: ' BFS' (ID: 190016)
  Prédit: 'assign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'assign' → logprob: -0.002200571121647954
    2. 'b' → logprob: -7.127200603485107
    3. 'color' → logprob: -7.627200603485107
    4. 'l' → logprob: -8.12720012664795
    5. 'find' → logprob: -8.12720012664795
    6. ' assign' → logprob: -9.12720012664795
    7. 'B' → logprob: -9.50220012664795
    8. 'start' → logprob: -9.87720012664795
    9. 'colors' → logprob: -10.87720012664795
    10. 'le' → logprob: -11.25220012664795

Token 849: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00028171599842607975
    2. '   ' → logprob: -8.50028133392334
    3. ')
' → logprob: -10.00028133392334
    4. ' )' → logprob: -10.50028133392334
    5. ' ' → logprob: -13.25028133392334
    6. ').' → logprob: -14.37528133392334
    7. ')

' → logprob: -14.50028133392334
    8. 'def' → logprob: -15.12528133392334
    9. ')
' → logprob: -15.25028133392334
    10. '`)' → logprob: -15.62528133392334

Token 850: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.046891577541828156
    2. 'start' → logprob: -3.796891689300537
    3. 'max' → logprob: -4.421891689300537
    4. ' start' → logprob: -5.546891689300537
    5. 'node' → logprob: -5.671891689300537
    6. ' node' → logprob: -6.171891689300537
    7. ' max' → logprob: -6.546891689300537
    8. '
' → logprob: -8.296891212463379
    9. '    
' → logprob: -9.046891212463379
    10. 'root' → logprob: -10.421891212463379

Token 851: ' First' (ID: 8338)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.09711305052042007
    2. 'max' → logprob: -2.9721131324768066
    3. ' start' → logprob: -3.3471131324768066
    4. 'node' → logprob: -5.597113132476807
    5. ' max' → logprob: -6.347113132476807
    6. ' node' → logprob: -7.972113132476807
    7. '   ' → logprob: -8.472112655639648
    8. 'root' → logprob: -9.597112655639648
    9. 'high' → logprob: -11.097112655639648
    10. 'center' → logprob: -11.222112655639648

Token 852: ' =' (ID: 314)
  Prédit: '_node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.0013553560711443424
    2. '_' → logprob: -7.626355171203613
    3. '_degree' → logprob: -7.626355171203613
    4. '_max' → logprob: -8.876355171203613
    5. 'Node' → logprob: -9.126355171203613
    6. '_Node' → logprob: -10.126355171203613
    7. ' =' → logprob: -10.626355171203613
    8. 'node' → logprob: -10.626355171203613
    9. '_NODE' → logprob: -11.876355171203613
    10. '_de' → logprob: -12.001355171203613

Token 853: ' find' (ID: 1646)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -2.7610454708337784e-05
    2. ' find' → logprob: -10.500027656555176
    3. '(find' → logprob: -17.25002670288086
    4. '	find' → logprob: -18.00002670288086
    5. '=find' → logprob: -18.62502670288086
    6. '   ' → logprob: -20.00002670288086
    7. '.find' → logprob: -21.37502670288086
    8. ' ' → logprob: -21.75002670288086
    9. 'Find' → logprob: -22.00002670288086
    10. '
' → logprob: -22.12502670288086

Token 854: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -5.080963092041202e-06
    2. 'max' → logprob: -12.250004768371582
    3. '(max' → logprob: -16.8750057220459
    4. '_' → logprob: -17.3750057220459
    5. ')_' → logprob: -17.5000057220459
    6. '_min' → logprob: -17.6250057220459
    7. 'Max' → logprob: -17.6250057220459
    8. '_first' → logprob: -17.8750057220459
    9. '_MAX' → logprob: -18.0000057220459
    10. '_mass' → logprob: -18.2500057220459

Token 855: '_degree' (ID: 128654)
  Prédit: '_degree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_degree' → logprob: -3.173704271830502e-06
    2. '_de' → logprob: -14.12500286102295
    3. '_max' → logprob: -14.12500286102295
    4. '_' → logprob: -14.50000286102295
    5. 'degree' → logprob: -14.75000286102295
    6. 'Degree' → logprob: -15.50000286102295
    7. ''_' → logprob: -16.500003814697266
    8. '\' → logprob: -16.875003814697266
    9. '```' → logprob: -16.875003814697266
    10. '_direction' → logprob: -17.125003814697266

Token 856: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -7.696077227592468e-05
    2. '_' → logprob: -10.500077247619629
    3. '_n' → logprob: -11.000077247619629
    4. '_token' → logprob: -11.250077247619629
    5. 'node' → logprob: -12.500077247619629
    6. '_Node' → logprob: -12.875077247619629
    7. '_nodes' → logprob: -13.000077247619629
    8. '```' → logprob: -13.375077247619629
    9. '`' → logprob: -13.500077247619629
    10. '_max' → logprob: -13.625077247619629

Token 857: '(E' (ID: 20882)
  Prédit: '(E'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(E' → logprob: -5.512236498361744e-07
    2. '(' → logprob: -14.750000953674316
    3. '(
' → logprob: -17.75
    4. 'E' → logprob: -18.375
    5. '(I' → logprob: -19.875
    6. '<E' → logprob: -20.375
    7. '```' → logprob: -20.75
    8. '\(' → logprob: -20.875
    9. '(A' → logprob: -21.125
    10. '(S' → logprob: -21.625

Token 858: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.1093578804284334e-05
    2. '(E' → logprob: -10.125051498413086
    3. ')
' → logprob: -11.500051498413086
    4. ')

' → logprob: -15.125051498413086
    5. '   ' → logprob: -15.375051498413086
    6. ' )' → logprob: -16.375051498413086
    7. ')#' → logprob: -16.500051498413086
    8. ')`' → logprob: -16.625051498413086
    9. '(' → logprob: -16.875051498413086
    10. '),' → logprob: -17.250051498413086

Token 859: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.36067989468574524
    2. '   ' → logprob: -1.3606798648834229
    3. '    
' → logprob: -3.360679864883423
    4. '```' → logprob: -4.985680103302002
    5. 'colors' → logprob: -5.860680103302002
    6. '  
' → logprob: -7.610680103302002
    7. '#' → logprob: -7.985680103302002
    8. '<|end|>' → logprob: -8.110679626464844
    9. ' 
' → logprob: -8.860679626464844
    10. '   
' → logprob: -9.110679626464844

Token 860: ' #' (ID: 1069)
  Prédit: 'colors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'colors' → logprob: -0.21701361238956451
    2. '#' (adapté à ' #') → logprob: -2.2170135974884033
    3. '   ' → logprob: -2.4670135974884033
    4. '
' → logprob: -7.592013835906982
    5. ' colors' → logprob: -8.217013359069824
    6. 'color' → logprob: -8.717013359069824
    7. '    
' → logprob: -9.092013359069824
    8. 'sorted' → logprob: -9.467013359069824
    9. '```' → logprob: -9.842013359069824
    10. 'Colors' → logprob: -10.217013359069824

Token 861: ' Lecture' (ID: 106534)
  Prédit: 'colors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'colors' → logprob: -0.0026420066133141518
    2. ' colors' → logprob: -6.3776421546936035
    3. '#' → logprob: -7.1276421546936035
    4. '   ' → logprob: -9.377641677856445
    5. 'color' → logprob: -11.127641677856445
    6. 'cou' → logprob: -11.752641677856445
    7. 'sorted' → logprob: -12.002641677856445
    8. '
' → logprob: -12.252641677856445
    9. '(colors' → logprob: -12.752641677856445
    10. ' couleurs' → logprob: -13.002641677856445

Token 862: ' et' (ID: 859)
  Prédit: 'colors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'colors' → logprob: -0.2856217324733734
    2. '   ' → logprob: -1.6606217622756958
    3. 'des' → logprob: -4.160621643066406
    4. '(colors' → logprob: -4.410621643066406
    5. '_colors' → logprob: -4.660621643066406
    6. '()' → logprob: -4.910621643066406
    7. ' colors' → logprob: -5.035621643066406
    8. ' des' → logprob: -5.785621643066406
    9. 'color' → logprob: -7.285621643066406
    10. ' couleurs' → logprob: -7.410621643066406

Token 863: ' tri' (ID: 12665)
  Prédit: 'colors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'colors' → logprob: -0.20204323530197144
    2. ' colors' → logprob: -1.7020432949066162
    3. ' couleurs' → logprob: -8.327043533325195
    4. 'C' → logprob: -9.577043533325195
    5. '_colors' → logprob: -9.577043533325195
    6. 'cou' → logprob: -9.827043533325195
    7. 'color' → logprob: -10.202043533325195
    8. 'c' → logprob: -10.702043533325195
    9. ' C' → logprob: -11.202043533325195
    10. 'cols' → logprob: -11.202043533325195

Token 864: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.5751203894615173
    2. '   ' → logprob: -1.325120449066162
    3. 'des' → logprob: -1.825120449066162
    4. '()' → logprob: -5.825120449066162
    5. 'colors' → logprob: -5.950120449066162
    6. '(colors' → logprob: -7.075120449066162
    7. '_des' → logprob: -7.575120449066162
    8. ' ' → logprob: -7.575120449066162
    9. '_colors' → logprob: -7.700120449066162
    10. ' colors' → logprob: -7.825120449066162

Token 865: ' couleurs' (ID: 54001)
  Prédit: 'colors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'colors' → logprob: -0.12699908018112183
    2. ' colors' → logprob: -2.1269991397857666
    3. ' couleurs' → logprob: -10.376998901367188
    4. '_colors' → logprob: -11.126998901367188
    5. 'color' → logprob: -11.501998901367188
    6. '(colors' → logprob: -12.001998901367188
    7. ' colores' → logprob: -12.501998901367188
    8. '.colors' → logprob: -13.626998901367188
    9. 'list' → logprob: -14.251998901367188
    10. 'Colors' → logprob: -14.251998901367188

Token 866: '
' (ID: 198)
  Prédit: ' colors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' colors' → logprob: -0.983251690864563
    2. '   ' → logprob: -1.108251690864563
    3. 'colors' → logprob: -1.233251690864563
    4. '(colors' → logprob: -6.608251571655273
    5. '_colors' → logprob: -6.983251571655273
    6. ' couleurs' → logprob: -6.983251571655273
    7. 'Colors' → logprob: -8.233251571655273
    8. '    
' → logprob: -8.608251571655273
    9. ' colores' → logprob: -8.983251571655273
    10. '```' → logprob: -9.108251571655273

Token 867: '   ' (ID: 271)
  Prédit: ' colors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' colors' → logprob: -0.7644899487495422
    2. 'colors' → logprob: -1.2644898891448975
    3. '   ' → logprob: -1.3894898891448975
    4. ' couleurs' → logprob: -7.139490127563477
    5. '(colors' → logprob: -7.139490127563477
    6. '_colors' → logprob: -7.764490127563477
    7. 'Colors' → logprob: -8.389490127563477
    8. '    
' → logprob: -9.139490127563477
    9. ' colores' → logprob: -9.514490127563477
    10. 'c' → logprob: -9.764490127563477

Token 868: ' C' (ID: 363)
  Prédit: 'colors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'colors' → logprob: -0.5235230922698975
    2. ' colors' → logprob: -0.8985230922698975
    3. 'C' (adapté à ' C') → logprob: -9.148523330688477
    4. '   ' → logprob: -9.273523330688477
    5. 'color' → logprob: -9.648523330688477
    6. ' couleurs' → logprob: -10.398523330688477
    7. ' C' → logprob: -10.398523330688477
    8. 'c' → logprob: -11.023523330688477
    9. 'cou' → logprob: -11.523523330688477
    10. ' color' → logprob: -11.898523330688477

Token 869: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12693576514720917
    2. '=' → logprob: -2.1269357204437256
    3. 's' → logprob: -13.001935958862305
    4. ' ' → logprob: -13.626935958862305
    5. '=[]' → logprob: -14.001935958862305
    6. '_' → logprob: -14.251935958862305
    7. ' ' → logprob: -14.501935958862305
    8. ',' → logprob: -14.501935958862305
    9. ' =
' → logprob: -15.751935958862305
    10. '.' → logprob: -15.876935958862305

Token 870: ' list' (ID: 1562)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.6348173022270203
    2. 'list' → logprob: -0.8848173022270203
    3. ' sorted' → logprob: -3.384817361831665
    4. ' list' → logprob: -3.759817361831665
    5. '(sorted' → logprob: -13.384817123413086
    6. '[list' → logprob: -13.634817123413086
    7. '[' → logprob: -14.134817123413086
    8. ' [' → logprob: -14.509817123413086
    9. ' ' → logprob: -14.634817123413086
    10. '   ' → logprob: -15.009817123413086

Token 871: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.000443420372903347
    2. '(' → logprob: -7.875443458557129
    3. 'map' → logprob: -10.375443458557129
    4. '(sorted' → logprob: -10.500443458557129
    5. '(range' → logprob: -12.625443458557129
    6. '(
' → logprob: -14.625443458557129
    7. '(sort' → logprob: -15.625443458557129
    8. '()' → logprob: -15.875443458557129
    9. '(int' → logprob: -15.875443458557129
    10. '(m' → logprob: -16.750442504882812

Token 872: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.003942448645830154
    2. 'int' → logprob: -5.628942489624023
    3. '(' → logprob: -8.003942489624023
    4. '(
' → logprob: -12.503942489624023
    5. '<int' → logprob: -13.503942489624023
    6. '[int' → logprob: -13.628942489624023
    7. ' int' → logprob: -14.378942489624023
    8. '=int' → logprob: -14.878942489624023
    9. ']int' → logprob: -15.003942489624023
    10. ',int' → logprob: -15.503942489624023

Token 873: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.24262121319770813
    2. ',input' → logprob: -2.1176211833953857
    3. ',' → logprob: -2.3676211833953857
    4. 'input' → logprob: -7.117621421813965
    5. '(' → logprob: -7.617621421813965
    6. '=input' → logprob: -10.242621421813965
    7. '<input' → logprob: -10.742621421813965
    8. '   ' → logprob: -11.617621421813965
    9. ' ,' → logprob: -11.867621421813965
    10. '```' → logprob: -11.992621421813965

Token 874: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.004078401252627373
    2. ' input' → logprob: -5.504078388214111
    3. '(input' → logprob: -18.504077911376953
    4. ',input' → logprob: -18.504077911376953
    5. '_input' → logprob: -19.504077911376953
    6. '<input' → logprob: -19.504077911376953
    7. ')' → logprob: -19.504077911376953
    8. '=input' → logprob: -19.754077911376953
    9. '	input' → logprob: -20.879077911376953
    10. ' ' → logprob: -20.879077911376953

Token 875: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0003715662460308522
    2. '()' → logprob: -8.000371932983398
    3. '())' → logprob: -10.625371932983398
    4. '(' → logprob: -12.125371932983398
    5. '()))' → logprob: -12.875371932983398
    6. ' ().' → logprob: -13.125371932983398
    7. '()
' → logprob: -14.500371932983398
    8. '(),' → logprob: -14.750371932983398
    9. ')' → logprob: -15.500371932983398
    10. '()[' → logprob: -16.0003719329834

Token 876: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -3.5597102396423e-05
    2. 'strip' → logprob: -10.250035285949707
    3. ' split' → logprob: -16.125036239624023
    4. 'rstrip' → logprob: -17.875036239624023
    5. '(split' → logprob: -18.000036239624023
    6. '.split' → logprob: -18.375036239624023
    7. 'sort' → logprob: -19.500036239624023
    8. 'spl' → logprob: -19.625036239624023
    9. ')' → logprob: -20.125036239624023
    10. '_split' → logprob: -20.500036239624023

Token 877: '()))
' (ID: 24521)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.05394851416349411
    2. '()))' → logprob: -3.053948402404785
    3. ')' → logprob: -5.928948402404785
    4. '))' → logprob: -6.303948402404785
    5. '()' → logprob: -8.178948402404785
    6. '())
' → logprob: -8.178948402404785
    7. '()))
' → logprob: -8.678948402404785
    8. '(' → logprob: -9.178948402404785
    9. '()));' → logprob: -12.178948402404785
    10. '(
' → logprob: -12.803948402404785

Token 878: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13462616503238678
    2. 'C' → logprob: -2.1346261501312256
    3. ' C' → logprob: -5.134626388549805
    4. ' ' → logprob: -7.509626388549805
    5. ')' → logprob: -8.134626388549805
    6. '<|end|>' → logprob: -8.134626388549805
    7. '  ' → logprob: -8.759626388549805
    8. '[' → logprob: -9.009626388549805
    9. '    
' → logprob: -9.259626388549805
    10. '
' → logprob: -9.634626388549805

Token 879: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' (adapté à ' C') → logprob: -0.010016366839408875
    2. '   ' → logprob: -4.635016441345215
    3. ' C' → logprob: -8.385016441345215
    4. '
' → logprob: -11.135016441345215
    5. '```' → logprob: -11.510016441345215
    6. ' ' → logprob: -13.135016441345215
    7. '	C' → logprob: -13.385016441345215
    8. '    
' → logprob: -14.135016441345215
    9. '`' → logprob: -14.135016441345215
    10. '[' → logprob: -14.885016441345215

Token 880: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.02325631119310856
    2. '.' → logprob: -3.773256301879883
    3. '=' → logprob: -11.648256301879883
    4. 'sort' → logprob: -14.023256301879883
    5. '.sorted' → logprob: -14.773256301879883
    6. ' .' → logprob: -15.648256301879883
    7. ' =' → logprob: -15.773256301879883
    8. '.Sort' → logprob: -15.773256301879883
    9. '.=' → logprob: -15.773256301879883
    10. '=C' → logprob: -16.898256301879883

Token 881: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.34830373525619507
    2. '   ' → logprob: -2.09830379486084
    3. '[::-' → logprob: -2.09830379486084
    4. '(reverse' → logprob: -4.09830379486084
    5. '<|end|>' → logprob: -4.34830379486084
    6. '()
' → logprob: -5.09830379486084
    7. '.reverse' → logprob: -5.09830379486084
    8. 'reverse' → logprob: -6.34830379486084
    9. '<|end|>' → logprob: -6.34830379486084
    10. ',' → logprob: -6.72330379486084

Token 882: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04660012573003769
    2. 'ans' → logprob: -3.171600103378296
    3. ' ans' → logprob: -6.296600341796875
    4. 'colors' → logprob: -7.046600341796875
    5. '	ans' → logprob: -7.921600341796875
    6. '```' → logprob: -8.671600341796875
    7. '(ans' → logprob: -9.421600341796875
    8. 'color' → logprob: -9.921600341796875
    9. 'Ans' → logprob: -10.046600341796875
    10. '   ' → logprob: -10.421600341796875

Token 883: ' #' (ID: 1069)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.04390522465109825
    2. '   ' → logprob: -3.293905258178711
    3. 'colors' → logprob: -5.543905258178711
    4. ' ans' → logprob: -7.293905258178711
    5. 'answer' → logprob: -7.418905258178711
    6. '	ans' → logprob: -8.668905258178711
    7. 'color' → logprob: -8.918905258178711
    8. 'Ans' → logprob: -9.043905258178711
    9. 'answers' → logprob: -10.043905258178711
    10. '```' → logprob: -10.168905258178711

Token 884: ' Calcul' (ID: 57243)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0045338463969528675
    2. 'colors' → logprob: -5.629533767700195
    3. 'color' → logprob: -7.754533767700195
    4. 'answer' → logprob: -8.629533767700195
    5. 'assigned' → logprob: -9.004533767700195
    6. 'assign' → logprob: -9.754533767700195
    7. '   ' → logprob: -9.879533767700195
    8. ' ans' → logprob: -10.004533767700195
    9. 'answers' → logprob: -11.504533767700195
    10. 'result' → logprob: -11.629533767700195

Token 885: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22256594896316528
    2. 'max' → logprob: -2.3475658893585205
    3. 'ans' → logprob: -3.3475658893585205
    4. ' ans' → logprob: -3.5975658893585205
    5. '(ans' → logprob: -4.4725661277771
    6. ' max' → logprob: -4.9725661277771
    7. '
' → logprob: -4.9725661277771
    8. 'result' → logprob: -5.5975661277771
    9. ' de' → logprob: -6.4725661277771
    10. ' of' → logprob: -6.7225661277771

Token 886: ' la' (ID: 557)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.9490852952003479
    2. 'ans' → logprob: -1.1990852355957031
    3. ' ans' → logprob: -1.5740852355957031
    4. ' max' → logprob: -2.324085235595703
    5. 'answer' → logprob: -6.074085235595703
    6. ' answer' → logprob: -7.199085235595703
    7. 'result' → logprob: -7.574085235595703
    8. ' the' → logprob: -7.699085235595703
    9. ' result' → logprob: -7.699085235595703
    10. 'sum' → logprob: -7.824085235595703

Token 887: ' somme' (ID: 64484)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.160698801279068
    2. 'max' → logprob: -1.9106987714767456
    3. 'answer' → logprob: -7.910698890686035
    4. 'result' → logprob: -10.035698890686035
    5. 'res' → logprob: -10.535698890686035
    6. ' ans' → logprob: -11.910698890686035
    7. 'colors' → logprob: -12.035698890686035
    8. 'maximum' → logprob: -12.035698890686035
    9. '```' → logprob: -12.160698890686035
    10. 'color' → logprob: -12.160698890686035

Token 888: ' maximale' (ID: 76380)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.6469918489456177
    2. '_max' → logprob: -0.7719918489456177
    3. '   ' → logprob: -4.771991729736328
    4. ' maximale' → logprob: -6.521991729736328
    5. '_' → logprob: -6.771991729736328
    6. '_sum' → logprob: -6.896991729736328
    7. 'total' → logprob: -8.271991729736328
    8. '_total' → logprob: -8.396991729736328
    9. '(max' → logprob: -8.396991729736328
    10. 'result' → logprob: -8.646991729736328

Token 889: ' requ' (ID: 7028)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.016338512301445007
    2. 'result' → logprob: -5.016338348388672
    3. 'ans' → logprob: -5.766338348388672
    4. '   ' → logprob: -6.016338348388672
    5. 'sum' → logprob: -6.641338348388672
    6. 'answer' → logprob: -7.266338348388672
    7. ' max' → logprob: -7.766338348388672
    8. 'res' → logprob: -7.891338348388672
    9. '=' → logprob: -8.016338348388672
    10. ' =' → logprob: -8.766338348388672

Token 890: 'ise' (ID: 1096)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.4416229724884033
    2. 'ue' → logprob: -2.1916229724884033
    3. 'C' → logprob: -2.4416229724884033
    4. 'u' → logprob: -2.6916229724884033
    5. 'érée' → logprob: -2.6916229724884033
    6. ' C' → logprob: -2.6916229724884033
    7. 'uire' → logprob: -2.8166229724884033
    8. 'quise' → logprob: -3.3166229724884033
    9. '=C' → logprob: -3.4416229724884033
    10. ' =' → logprob: -3.4416229724884033

Token 891: ' (' (ID: 350)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.5948503613471985
    2. 'max' → logprob: -1.4698503017425537
    3. '   ' → logprob: -2.2198503017425537
    4. 'result' → logprob: -3.2198503017425537
    5. '
' → logprob: -3.2198503017425537
    6. ' ans' → logprob: -4.594850540161133
    7. 'sum' → logprob: -5.219850540161133
    8. 'answer' → logprob: -5.344850540161133
    9. '(ans' → logprob: -5.969850540161133
    10. '```' → logprob: -6.844850540161133

Token 892: 'la' (ID: 1675)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0030521005392074585
    2. 'result' → logprob: -6.503052234649658
    3. 'res' → logprob: -7.378052234649658
    4. ' max' → logprob: -8.0030517578125
    5. 'sum' → logprob: -8.5030517578125
    6. 'ans' → logprob: -9.0030517578125
    7. 'print' → logprob: -9.2530517578125
    8. 'total' → logprob: -9.8780517578125
    9. 'answer' → logprob: -10.0030517578125
    10. 'maximum' → logprob: -10.6280517578125

Token 893: ' somme' (ID: 64484)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.28412312269210815
    2. 'print' → logprob: -1.409123182296753
    3. ')' → logprob: -6.784122943878174
    4. ' max' → logprob: -7.659122943878174
    5. 'sum' → logprob: -7.784122943878174
    6. 'result' → logprob: -8.034123420715332
    7. '
' → logprob: -8.159123420715332
    8. ' print' → logprob: -9.284123420715332
    9. 'maximum' → logprob: -9.409123420715332
    10. ')
' → logprob: -9.659123420715332

Token 894: ' de' (ID: 334)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 895: ' toutes' (ID: 17502)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.030307363718748093
    2. ' C' → logprob: -4.030307292938232
    3. '(C' → logprob: -4.530307292938232
    4. 'all' → logprob: -7.405307292938232
    5. ' all' → logprob: -8.15530776977539
    6. 'colors' → logprob: -9.03030776977539
    7. 't' → logprob: -9.90530776977539
    8. ' la' → logprob: -10.15530776977539
    9. ')' → logprob: -10.28030776977539
    10. ' colors' → logprob: -10.40530776977539

Token 896: ' les' (ID: 1341)
  Prédit: '(C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(C' → logprob: -0.21177338063716888
    2. 'C' → logprob: -2.08677339553833
    3. 'des' → logprob: -4.21177339553833
    4. 's' → logprob: -4.58677339553833
    5. 'except' → logprob: -4.58677339553833
    6. ' C' → logprob: -4.83677339553833
    7. ' des' → logprob: -5.08677339553833
    8. ')' → logprob: -5.33677339553833
    9. ' sauf' → logprob: -5.58677339553833
    10. '-' → logprob: -5.83677339553833

Token 897: ' couleurs' (ID: 54001)
  Prédit: 'cou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cou' → logprob: -0.0038674199022352695
    2. 'val' → logprob: -6.1288676261901855
    3. 'colors' → logprob: -7.1288676261901855
    4. ' couleurs' → logprob: -7.2538676261901855
    5. 'c' → logprob: -9.878867149353027
    6. 'C' → logprob: -10.253867149353027
    7. '```' → logprob: -11.253867149353027
    8. '   ' → logprob: -11.378867149353027
    9. 'diff' → logprob: -11.628867149353027
    10. 'color' → logprob: -12.128867149353027

Token 898: ' sauf' (ID: 87919)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2419135570526123
    2. 'except' → logprob: -1.4919135570526123
    3. 'moins' → logprob: -1.7419135570526123
    4. '-' → logprob: -2.2419135570526123
    5. ' -' → logprob: -2.9919135570526123
    6. ' except' → logprob: -3.2419135570526123
    7. 's' → logprob: -3.2419135570526123
    8. ' sauf' → logprob: -3.6169135570526123
    9. ' moins' → logprob: -4.741913795471191
    10. '[:-' → logprob: -4.741913795471191

Token 899: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.0015221221838146448
    2. ' la' → logprob: -6.501522064208984
    3. 'le' → logprob: -11.251522064208984
    4. 'the' → logprob: -13.001522064208984
    5. 'l' → logprob: -13.251522064208984
    6. '#' → logprob: -13.501522064208984
    7. '```' → logprob: -14.251522064208984
    8. ' ' → logprob: -14.751522064208984
    9. '_la' → logprob: -16.001522064208984
    10. '
' → logprob: -16.876522064208984

Token 900: ' plus' (ID: 2932)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.0038588629104197025
    2. 'der' → logprob: -5.753859043121338
    3. ' plus' → logprob: -7.878859043121338
    4. 'dern' → logprob: -8.87885856628418
    5. ' dernière' → logprob: -9.50385856628418
    6. 'largest' → logprob: -9.62885856628418
    7. 'last' → logprob: -11.37885856628418
    8. 'gr' → logprob: -12.75385856628418
    9. 'Plus' → logprob: -13.25385856628418
    10. '```' → logprob: -13.37885856628418

Token 901: ' grande' (ID: 10094)
  Prédit: 'gr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gr' → logprob: -0.0031443238258361816
    2. 'grand' → logprob: -6.128144264221191
    3. ' grande' → logprob: -7.503144264221191
    4. 'import' → logprob: -8.878144264221191
    5. '_gr' → logprob: -8.878144264221191
    6. 'g' → logprob: -10.253144264221191
    7. '_' → logprob: -10.628144264221191
    8. '```' → logprob: -10.878144264221191
    9. 'large' → logprob: -11.003144264221191
    10. ')' → logprob: -11.878144264221191

Token 902: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2343074381351471
    2. ')
' → logprob: -1.8593074083328247
    3. '   ' → logprob: -2.9843075275421143
    4. ',' → logprob: -6.609307289123535
    5. ' )' → logprob: -7.984307289123535
    6. '#' → logprob: -8.734307289123535
    7. ' )
' → logprob: -8.859307289123535
    8. 'C' → logprob: -9.109307289123535
    9. ')
' → logprob: -9.609307289123535
    10. ').' → logprob: -9.859307289123535

Token 903: '   ' (ID: 271)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.2492048591375351
    2. 'max' → logprob: -2.1242048740386963
    3. '   ' → logprob: -2.7492048740386963
    4. 'result' → logprob: -4.124204635620117
    5. ' ans' → logprob: -4.374204635620117
    6. 'answer' → logprob: -5.499204635620117
    7. 'sum' → logprob: -6.874204635620117
    8. 'res' → logprob: -6.999204635620117
    9. '
' → logprob: -7.624204635620117
    10. '(ans' → logprob: -8.124204635620117

Token 904: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -0.0004652273200917989
    2. 'result' → logprob: -8.750465393066406
    3. 'res' → logprob: -8.875465393066406
    4. 'sum' → logprob: -9.750465393066406
    5. 'total' → logprob: -10.000465393066406
    6. 'maximum' → logprob: -10.750465393066406
    7. 'ans' → logprob: -10.875465393066406
    8. ' max' → logprob: -12.000465393066406
    9. 'answer' → logprob: -12.125465393066406
    10. 'Max' → logprob: -13.000465393066406

Token 905: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.012600190006196499
    2. '_' → logprob: -4.512600421905518
    3. '_s' → logprob: -7.137600421905518
    4. '_color' → logprob: -7.762600421905518
    5. 'sum' → logprob: -9.26259994506836
    6. '_colors' → logprob: -9.88759994506836
    7. '<|end|>' → logprob: -10.26259994506836
    8. '_value' → logprob: -10.51259994506836
    9. '_score' → logprob: -10.88759994506836
    10. '_val' → logprob: -11.13759994506836

Token 906: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03804768621921539
    2. '=' → logprob: -3.2880477905273438
    3. '_' → logprob: -12.913047790527344
    4. '_colors' → logprob: -14.038047790527344
    5. 'colors' → logprob: -14.163047790527344
    6. '(colors' → logprob: -15.038047790527344
    7. '   ' → logprob: -15.288047790527344
    8. ')' → logprob: -15.413047790527344
    9. '(C' → logprob: -15.538047790527344
    10. ',' → logprob: -15.663047790527344

Token 907: ' compute' (ID: 23864)
  Prédit: 'compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.3931472599506378
    2. ' compute' → logprob: -1.1431472301483154
    3. ' sum' → logprob: -5.7681474685668945
    4. 'sum' → logprob: -5.7681474685668945
    5. 'calculate' → logprob: -13.018147468566895
    6. ' calculate' → logprob: -14.143147468566895
    7. 'comput' → logprob: -14.643147468566895
    8. 'com' → logprob: -14.893147468566895
    9. 'computed' → logprob: -15.143147468566895
    10. '_compute' → logprob: -15.268147468566895

Token 908: '_max' (ID: 13731)
  Prédit: '_sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.16164514422416687
    2. '(C' → logprob: -2.0366451740264893
    3. '_max' → logprob: -4.03664493560791
    4. '_' → logprob: -7.03664493560791
    5. 'sum' → logprob: -9.03664493560791
    6. '_C' → logprob: -9.91164493560791
    7. 'max' → logprob: -10.41164493560791
    8. '(' → logprob: -11.16164493560791
    9. 'Sum' → logprob: -11.78664493560791
    10. '_colors' → logprob: -12.03664493560791

Token 909: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -2.1054253011243418e-05
    2. 'sum' → logprob: -11.000020980834961
    3. '_' → logprob: -12.625020980834961
    4. ')' → logprob: -15.250020980834961
    5. 'Sum' → logprob: -16.12502098083496
    6. '_max' → logprob: -16.37502098083496
    7. '(sum' → logprob: -16.50002098083496
    8. '_colors' → logprob: -16.50002098083496
    9. '(colors' → logprob: -16.62502098083496
    10. '(C' → logprob: -16.75002098083496

Token 910: '(C' (ID: 5559)
  Prédit: '(C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(C' → logprob: -0.00027182576013728976
    2. '(' → logprob: -8.250271797180176
    3. '(
' → logprob: -12.125271797180176
    4. 'C' → logprob: -12.375271797180176
    5. '(c' → logprob: -14.375271797180176
    6. ')' → logprob: -16.625272750854492
    7. '((' → logprob: -16.750272750854492
    8. '(sorted' → logprob: -17.250272750854492
    9. ' (' → logprob: -17.875272750854492
    10. '[C' → logprob: -17.875272750854492

Token 911: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00012296605564188212
    2. '   ' → logprob: -9.250123023986816
    3. ')
' → logprob: -10.625123023986816
    4. ' )' → logprob: -13.625123023986816
    5. ')

' → logprob: -14.000123023986816
    6. ' ' → logprob: -14.750123023986816
    7. ',' → logprob: -17.3751220703125
    8. '  ' → logprob: -17.6251220703125
    9. '),' → logprob: -17.7501220703125
    10. ' ' → logprob: -17.8751220703125

Token 912: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18307971954345703
    2. 'ans' → logprob: -1.808079719543457
    3. ' ans' → logprob: -6.308079719543457
    4. '	ans' → logprob: -7.183079719543457
    5. '(ans' → logprob: -8.183079719543457
    6. 'colors' → logprob: -8.558079719543457
    7. 'answer' → logprob: -9.558079719543457
    8. 'answers' → logprob: -10.058079719543457
    9. '```' → logprob: -10.183079719543457
    10. '_ans' → logprob: -10.433079719543457

Token 913: ' #' (ID: 1069)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.04999005049467087
    2. '   ' → logprob: -3.049989938735962
    3. ' ans' → logprob: -6.799990177154541
    4. '	ans' → logprob: -9.049989700317383
    5. 'answer' → logprob: -9.299989700317383
    6. 'colors' → logprob: -10.674989700317383
    7. '(ans' → logprob: -11.174989700317383
    8. 'color' → logprob: -11.299989700317383
    9. '#' (adapté à ' #') → logprob: -11.674989700317383
    10. 'answers' → logprob: -11.924989700317383

Token 914: ' Attribution' (ID: 105021)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0009698220528662205
    2. 'answer' → logprob: -7.375969886779785
    3. 'assigned' → logprob: -8.250969886779785
    4. 'colors' → logprob: -10.375969886779785
    5. 'color' → logprob: -10.750969886779785
    6. 'assign' → logprob: -11.000969886779785
    7. 'answers' → logprob: -12.625969886779785
    8. 'assignment' → logprob: -13.125969886779785
    9. 'colored' → logprob: -13.375969886779785
    10. 'result' → logprob: -13.375969886779785

Token 915: ' des' (ID: 731)
  Prédit: '_colors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_colors' → logprob: -0.8434192538261414
    2. '_' → logprob: -1.3434193134307861
    3. '_des' → logprob: -1.7184193134307861
    4. '_ans' → logprob: -2.718419313430786
    5. 'des' → logprob: -3.343419313430786
    6. '   ' → logprob: -5.343419075012207
    7. '_of' → logprob: -5.343419075012207
    8. 'ans' → logprob: -5.343419075012207
    9. '(ans' → logprob: -5.593419075012207
    10. '_result' → logprob: -6.593419075012207

Token 916: ' couleurs' (ID: 54001)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.043497271835803986
    2. 'colors' → logprob: -3.168497323989868
    3. ' ans' → logprob: -8.043497085571289
    4. 'answers' → logprob: -9.668497085571289
    5. ' colors' → logprob: -9.793497085571289
    6. 'answer' → logprob: -10.418497085571289
    7. 'cou' → logprob: -11.543497085571289
    8. ' couleurs' → logprob: -11.793497085571289
    9. 'color' → logprob: -12.668497085571289
    10. 'result' → logprob: -13.168497085571289

Token 917: ' via' (ID: 4493)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3948347568511963
    2. 'ans' → logprob: -1.5198347568511963
    3. ' ans' → logprob: -2.2698347568511963
    4. '(ans' → logprob: -5.769834518432617
    5. '	ans' → logprob: -7.269834518432617
    6. 'colors' → logprob: -9.144834518432617
    7. '
' → logprob: -9.519834518432617
    8. '_ans' → logprob: -10.394834518432617
    9. 'answers' → logprob: -10.769834518432617
    10. '```' → logprob: -11.019834518432617

Token 918: ' BFS' (ID: 190016)
  Prédit: 'assign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'assign' → logprob: -0.024282941594719887
    2. 'ans' → logprob: -3.774282932281494
    3. ' assign' → logprob: -7.274282932281494
    4. ' ans' → logprob: -8.024283409118652
    5. 'assigned' → logprob: -11.774283409118652
    6. 'answer' → logprob: -11.899283409118652
    7. '(assign' → logprob: -14.649283409118652
    8. '=' → logprob: -15.399283409118652
    9. '.assign' → logprob: -15.524283409118652
    10. 'colors' → logprob: -15.899283409118652

Token 919: ' en' (ID: 469)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4960455000400543
    2. 'ans' → logprob: -1.121045470237732
    3. ' ans' → logprob: -2.7460455894470215
    4. '	ans' → logprob: -7.9960455894470215
    5. '(ans' → logprob: -7.9960455894470215
    6. 'colors' → logprob: -9.121045112609863
    7. '
' → logprob: -10.121045112609863
    8. 'color' → logprob: -10.371045112609863
    9. '```' → logprob: -10.746045112609863
    10. 'answer' → logprob: -11.246045112609863

Token 920: ' part' (ID: 997)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.4010787904262543
    2. 'assign' → logprob: -1.6510788202285767
    3. ' ans' → logprob: -2.026078701019287
    4. '(ans' → logprob: -5.651078701019287
    5. 'answer' → logprob: -7.276078701019287
    6. 'return' → logprob: -7.526078701019287
    7. '_ans' → logprob: -7.901078701019287
    8. 's' → logprob: -8.151079177856445
    9. 'assigned' → logprob: -8.401079177856445
    10. '=' → logprob: -8.401079177856445

Token 921: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.010688161477446556
    2. 'issant' → logprob: -5.760688304901123
    3. 'çant' → logprob: -6.010688304901123
    4. 'icipant' → logprob: -6.135688304901123
    5. 'ent' → logprob: -7.885688304901123
    6. 'out' → logprob: -8.260687828063965
    7. 'ait' → logprob: -8.385687828063965
    8. 'of' → logprob: -8.635687828063965
    9. 'form' → logprob: -8.760687828063965
    10. 'it' → logprob: -8.760687828063965

Token 922: ' du' (ID: 1462)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.2678580582141876
    2. 'de' → logprob: -1.7678580284118652
    3. 'def' → logprob: -3.5178580284118652
    4. 'du' → logprob: -4.392858028411865
    5. '   ' → logprob: -4.642858028411865
    6. ' de' → logprob: -5.142858028411865
    7. ' from' → logprob: -6.142858028411865
    8. '(' → logprob: -6.267858028411865
    9. '(F' → logprob: -7.267858028411865
    10. ' du' → logprob: -7.767858028411865

Token 923: ' sommet' (ID: 130502)
  Prédit: 'First'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'First' → logprob: -1.759734732331708e-05
    2. 'first' → logprob: -11.750017166137695
    3. ' First' → logprob: -12.625017166137695
    4. 'Premier' → logprob: -12.625017166137695
    5. 'prem' → logprob: -13.000017166137695
    6. '_first' → logprob: -15.750017166137695
    7. 'node' → logprob: -15.750017166137695
    8. 'F' → logprob: -16.000017166137695
    9. ' first' → logprob: -16.000017166137695
    10. 'Prem' → logprob: -16.750017166137695

Token 924: ' choisi' (ID: 77245)
  Prédit: 'First'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'First' → logprob: -0.018071742728352547
    2. ' First' → logprob: -5.01807165145874
    3. 'assign' → logprob: -5.01807165145874
    4. '(E' → logprob: -6.51807165145874
    5. 'E' → logprob: -7.51807165145874
    6. 'ans' → logprob: -7.51807165145874
    7. '   ' → logprob: -7.76807165145874
    8. '=' → logprob: -8.143072128295898
    9. '(' → logprob: -8.393072128295898
    10. '(F' → logprob: -8.518072128295898

Token 925: '
' (ID: 198)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.5472537279129028
    2. '   ' → logprob: -0.9222537279129028
    3. ' ans' → logprob: -3.9222536087036133
    4. '
' → logprob: -5.797253608703613
    5. '	ans' → logprob: -7.797253608703613
    6. '(ans' → logprob: -8.047253608703613
    7. 'colors' → logprob: -9.547253608703613
    8. 'answer' → logprob: -9.797253608703613
    9. '```' → logprob: -10.172253608703613
    10. '    
' → logprob: -10.297253608703613

Token 926: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.055942680686712265
    2. ' ans' → logprob: -3.5559427738189697
    3. 'ans' → logprob: -3.6809427738189697
    4. '	ans' → logprob: -7.805942535400391
    5. '(ans' → logprob: -9.05594253540039
    6. '
' → logprob: -10.18094253540039
    7. 'colors' → logprob: -10.80594253540039
    8. '_ans' → logprob: -11.18094253540039
    9. '    
' → logprob: -11.43094253540039
    10. 'answer' → logprob: -11.43094253540039

Token 927: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -3.690834273584187e-05
    2. ' ans' → logprob: -10.50003719329834
    3. 'answer' → logprob: -12.62503719329834
    4. '   ' → logprob: -12.75003719329834
    5. 'color' → logprob: -13.12503719329834
    6. 'colors' → logprob: -14.75003719329834
    7. 'assigned' → logprob: -15.12503719329834
    8. 'assign' → logprob: -15.87503719329834
    9. '	ans' → logprob: -16.000036239624023
    10. 'result' → logprob: -16.625036239624023

Token 928: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3132895827293396
    2. ' =' → logprob: -1.3132896423339844
    3. ',' → logprob: -11.438289642333984
    4. '(E' → logprob: -11.688289642333984
    5. '   ' → logprob: -12.938289642333984
    6. '=b' → logprob: -13.688289642333984
    7. '_' → logprob: -13.813289642333984
    8. '=_' → logprob: -13.813289642333984
    9. '=B' → logprob: -14.063289642333984
    10. '=C' → logprob: -14.688289642333984

Token 929: ' assign' (ID: 14975)
  Prédit: 'assign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'assign' → logprob: -0.00317783304490149
    2. ' assign' → logprob: -5.753177642822266
    3. '(assign' → logprob: -15.753177642822266
    4. '   ' → logprob: -18.128177642822266
    5. '	assign' → logprob: -18.128177642822266
    6. '.assign' → logprob: -19.753177642822266
    7. 'assigned' → logprob: -20.378177642822266
    8. '_assign' → logprob: -20.753177642822266
    9. 'ass' → logprob: -21.253177642822266
    10. 'Assign' → logprob: -21.503177642822266

Token 930: '_colors' (ID: 79137)
  Prédit: '_colors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_colors' → logprob: -3.128163257315464e-07
    2. '_color' → logprob: -16.25
    3. '_' → logprob: -17.0
    4. '_col' → logprob: -17.125
    5. '_codes' → logprob: -17.25
    6. 'colors' → logprob: -18.375
    7. '```' → logprob: -18.625
    8. '_assign' → logprob: -19.0
    9. '_chars' → logprob: -19.25
    10. '_scores' → logprob: -19.375

Token 931: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -6.2729995988775045e-06
    2. '_colors' → logprob: -12.125006675720215
    3. 'b' → logprob: -15.000006675720215
    4. '_' → logprob: -16.2500057220459
    5. '```' → logprob: -16.7500057220459
    6. ' _' → logprob: -17.0000057220459
    7. ')_' → logprob: -17.5000057220459
    8. '_a' → logprob: -18.0000057220459
    9. '_codes' → logprob: -18.0000057220459
    10. '\' → logprob: -18.2500057220459

Token 932: 'fs' (ID: 6469)
  Prédit: 'fs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fs' → logprob: -3.7697225252486533e-06
    2. 'FS' → logprob: -12.500003814697266
    3. ' fs' → logprob: -17.875003814697266
    4. 'f' → logprob: -18.375003814697266
    5. '_fs' → logprob: -18.875003814697266
    6. 'sf' → logprob: -20.375003814697266
    7. '(fs' → logprob: -20.500003814697266
    8. 's' → logprob: -20.875003814697266
    9. 'fsi' → logprob: -21.125003814697266
    10. '   ' → logprob: -21.625003814697266

Token 933: '(E' (ID: 20882)
  Prédit: '(E'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(E' → logprob: -7.822646693966817e-06
    2. '(' → logprob: -12.625007629394531
    3. 'b' → logprob: -12.625007629394531
    4. '```' → logprob: -14.125007629394531
    5. 'E' → logprob: -15.500007629394531
    6. '_b' → logprob: -15.875007629394531
    7. ' (' → logprob: -16.75000762939453
    8. 'B' → logprob: -17.25000762939453
    9. '\(' → logprob: -17.50000762939453
    10. '(
' → logprob: -17.62500762939453

Token 934: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002270198310725391
    2. ' ,' → logprob: -8.625226974487305
    3. ',C' → logprob: -10.000226974487305
    4. ',
' → logprob: -13.750226974487305
    5. ',c' → logprob: -15.375226974487305
    6. '(colors' → logprob: -15.375226974487305
    7. ',E' → logprob: -15.625226974487305
    8. '(' → logprob: -16.500226974487305
    9. '(C' → logprob: -16.750226974487305
    10. 'colors' → logprob: -17.250226974487305

Token 935: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.0040882546454668045
    2. ' C' → logprob: -5.504088401794434
    3. 'colors' → logprob: -11.629088401794434
    4. ' colors' → logprob: -15.004088401794434
    5. ')' → logprob: -15.754088401794434
    6. '   ' → logprob: -16.254087448120117
    7. '[C' → logprob: -16.379087448120117
    8. '	C' → logprob: -16.629087448120117
    9. '
' → logprob: -16.754087448120117
    10. 'ans' → logprob: -16.879087448120117

Token 936: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1160349458805285e-05
    2. 'First' → logprob: -12.000011444091797
    3. ' ,' → logprob: -12.625011444091797
    4. '(' → logprob: -13.500011444091797
    5. ')' → logprob: -15.875011444091797
    6. ',
' → logprob: -16.625011444091797
    7. '=' → logprob: -17.125011444091797
    8. ' First' → logprob: -17.875011444091797
    9. '(),' → logprob: -17.875011444091797
    10. '```' → logprob: -17.875011444091797

Token 937: ' First' (ID: 8338)
  Prédit: 'First'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'First' → logprob: -9.088346359931165e-07
    2. ' First' → logprob: -14.000000953674316
    3. 'first' → logprob: -20.75
    4. ' first' → logprob: -21.25
    5. '_First' → logprob: -22.875
    6. 'FIRST' → logprob: -23.75
    7. '   ' → logprob: -24.0
    8. '_first' → logprob: -24.125
    9. '.First' → logprob: -24.375
    10. 'Firstly' → logprob: -24.5

Token 938: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.4855663721391466e-05
    2. '   ' → logprob: -11.250015258789062
    3. ' )' → logprob: -13.625015258789062
    4. ')
' → logprob: -14.750015258789062
    5. ')

' → logprob: -16.375015258789062
    6. ' ' → logprob: -17.875015258789062
    7. ')`' → logprob: -18.125015258789062
    8. '}' → logprob: -19.250015258789062
    9. '	' → logprob: -19.625015258789062
    10. ')return' → logprob: -19.875015258789062

Token 939: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3260948061943054
    2. '   ' → logprob: -1.3260948657989502
    3. '```' → logprob: -4.451094627380371
    4. '
' → logprob: -7.076094627380371
    5. ' print' → logprob: -8.826094627380371
    6. '    
' → logprob: -9.826094627380371
    7. '``' → logprob: -10.451094627380371
    8. '#print' → logprob: -12.201094627380371
    9. '	print' → logprob: -13.076094627380371
    10. '#' → logprob: -13.701094627380371

Token 940: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0020604499150067568
    2. '   ' → logprob: -6.502060413360596
    3. '```' → logprob: -7.502060413360596
    4. ' print' → logprob: -12.752060890197754
    5. '
' → logprob: -13.502060890197754
    6. '``' → logprob: -14.002060890197754
    7. '#print' → logprob: -15.252060890197754
    8. '	print' → logprob: -15.252060890197754
    9. 'if' → logprob: -15.377060890197754
    10. '    
' → logprob: -16.002059936523438

Token 941: ' Aff' (ID: 13741)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.981667537620524e-06
    2. '   ' → logprob: -13.375001907348633
    3. ' print' → logprob: -15.625001907348633
    4. '#' → logprob: -15.750001907348633
    5. '#print' → logprob: -18.375001907348633
    6. '```' → logprob: -18.750001907348633
    7. '    
' → logprob: -19.500001907348633
    8. '
' → logprob: -20.125001907348633
    9. 'Print' → logprob: -21.375001907348633
    10. '	print' → logprob: -22.625001907348633

Token 942: 'ichage' (ID: 118475)
  Prédit: 'icher'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'icher' → logprob: -0.45810234546661377
    2. 'ich' → logprob: -1.5831023454666138
    3. 'iche' → logprob: -2.333102226257324
    4. 'print' → logprob: -3.458102226257324
    5. 'ichage' → logprob: -3.958102226257324
    6. 'ic' → logprob: -4.958102226257324
    7. ' print' → logprob: -5.458102226257324
    8. '   ' → logprob: -5.958102226257324
    9. '#' → logprob: -8.208102226257324
    10. '```' → logprob: -8.708102226257324

Token 943: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.9537655711174011
    2. '   ' → logprob: -1.203765630722046
    3. '(print' → logprob: -1.453765630722046
    4. 'print' → logprob: -2.578765630722046
    5. '(max' → logprob: -5.453765392303467
    6. ' print' → logprob: -7.828765392303467
    7. '()' → logprob: -8.328765869140625
    8. '()
' → logprob: -9.453765869140625
    9. '(f' → logprob: -9.828765869140625
    10. '(
' → logprob: -11.328765869140625

Token 944: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47698453068733215
    2. 'print' → logprob: -0.9769845008850098
    3. ' print' → logprob: -6.47698450088501
    4. '(' → logprob: -6.97698450088501
    5. '```' → logprob: -8.351984977722168
    6. '(print' → logprob: -8.601984977722168
    7. '()' → logprob: -12.351984977722168
    8. '	print' → logprob: -12.851984977722168
    9. '
' → logprob: -13.601984977722168
    10. '``' → logprob: -13.851984977722168

Token 945: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.10140891373157501
    2. '   ' → logprob: -2.3514089584350586
    3. ' print' → logprob: -6.851408958435059
    4. '```' → logprob: -8.851408958435059
    5. '``' → logprob: -15.351408958435059
    6. '	print' → logprob: -16.601408004760742
    7. '`' → logprob: -16.976408004760742
    8. '
' → logprob: -17.851408004760742
    9. '       ' → logprob: -20.101408004760742
    10. '    
' → logprob: -20.101408004760742

Token 946: '(max' (ID: 17178)
  Prédit: '(max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.0001254693343071267
    2. '(' → logprob: -9.000125885009766
    3. '(f' → logprob: -13.375125885009766
    4. 'max' → logprob: -15.000125885009766
    5. ' (' → logprob: -15.875125885009766
    6. '(
' → logprob: -17.250125885009766
    7. ' max' → logprob: -18.000125885009766
    8. '(m' → logprob: -18.250125885009766
    9. '((' → logprob: -18.375125885009766
    10. '(Max' → logprob: -19.250125885009766

Token 947: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -1.1472419600977446e-06
    2. 'sum' → logprob: -13.875000953674316
    3. '_max' → logprob: -16.625001907348633
    4. '(sum' → logprob: -17.125001907348633
    5. '(max' → logprob: -18.875001907348633
    6. '_' → logprob: -20.125001907348633
    7. '_s' → logprob: -20.125001907348633
    8. ' sum' → logprob: -20.500001907348633
    9. '_len' → logprob: -20.500001907348633
    10. ')' → logprob: -20.625001907348633

Token 948: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.31327024102211
    2. ')' → logprob: -1.3132702112197876
    3. ')
' → logprob: -11.938270568847656
    4. ',' → logprob: -14.188270568847656
    5. ' )
' → logprob: -14.688270568847656
    6. ')`
' → logprob: -15.063270568847656
    7. '())
' → logprob: -15.688270568847656
    8. ')

' → logprob: -15.813270568847656
    9. ' )' → logprob: -16.438270568847656
    10. '()' → logprob: -16.563270568847656

Token 949: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00030686063109897077
    2. '   ' → logprob: -8.250307083129883
    3. ' print' → logprob: -10.000307083129883
    4. '	print' → logprob: -15.875307083129883
    5. '```' → logprob: -16.250307083129883
    6. ' ' → logprob: -19.750307083129883
    7. '#print' → logprob: -19.875307083129883
    8. '  ' → logprob: -20.125307083129883
    9. '.print' → logprob: -20.250307083129883
    10. '_print' → logprob: -21.125307083129883

Token 950: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -9.088346359931165e-07
    2. ' print' → logprob: -14.000000953674316
    3. '   ' → logprob: -17.875
    4. '	print' → logprob: -20.375
    5. '```' → logprob: -22.375
    6. '    
' → logprob: -23.75
    7. 'pr' → logprob: -23.75
    8. '#print' → logprob: -24.0
    9. '.print' → logprob: -24.75
    10. '(print' → logprob: -24.875

Token 951: '(format' (ID: 39668)
  Prédit: '(format'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(format' → logprob: -0.0004612935590557754
    2. 'format' → logprob: -7.750461101531982
    3. '('' → logprob: -10.50046157836914
    4. '(' → logprob: -13.87546157836914
    5. '("' → logprob: -13.87546157836914
    6. '(*' → logprob: -14.62546157836914
    7. ' format' → logprob: -14.62546157836914
    8. '=format' → logprob: -15.25046157836914
    9. '.format' → logprob: -17.25046157836914
    10. '(form' → logprob: -17.87546157836914

Token 952: '_answer' (ID: 65702)
  Prédit: '_answer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_answer' → logprob: -4.692145012086257e-05
    2. 'answer' → logprob: -10.625046730041504
    3. '_ans' → logprob: -11.500046730041504
    4. 'Answer' → logprob: -11.625046730041504
    5. '(ans' → logprob: -13.375046730041504
    6. '(answer' → logprob: -13.625046730041504
    7. '_' → logprob: -15.500046730041504
    8. '(' → logprob: -16.00004768371582
    9. 'ans' → logprob: -16.00004768371582
    10. 'ANSWER' → logprob: -16.50004768371582

Token 953: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -9.372294698550832e-06
    2. '(' → logprob: -12.250009536743164
    3. ' (' → logprob: -12.500009536743164
    4. '(answer' → logprob: -14.125009536743164
    5. ')' → logprob: -16.500009536743164
    6. ')(' → logprob: -17.875009536743164
    7. '(ord' → logprob: -18.625009536743164
    8. 'ans' → logprob: -19.375009536743164
    9. '(args' → logprob: -19.875009536743164
    10. '(op' → logprob: -19.875009536743164

Token 954: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.017551444470882416
    2. '(N' → logprob: -4.642551422119141
    3. ',N' → logprob: -5.267551422119141
    4. '(' → logprob: -6.892551422119141
    5. '(len' → logprob: -7.392551422119141
    6. ' ,' → logprob: -7.642551422119141
    7. ',len' → logprob: -8.14255142211914
    8. ')' → logprob: -9.01755142211914
    9. ',n' → logprob: -10.39255142211914
    10. '(n' → logprob: -10.89255142211914

Token 955: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -5.512236498361744e-07
    2. ' N' → logprob: -14.500000953674316
    3. '   ' → logprob: -18.625
    4. '	N' → logprob: -22.125
    5. '  ' → logprob: -23.875
    6. '(N' → logprob: -24.25
    7. '    ' → logprob: -24.625
    8. ' ' → logprob: -24.75
    9. '[N' → logprob: -25.125
    10. '>N' → logprob: -25.375

Token 956: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007121934904716909
    2. '))' → logprob: -7.2507123947143555
    3. '())' → logprob: -13.750712394714355
    4. ' )' → logprob: -14.250712394714355
    5. ')
' → logprob: -14.875712394714355
    6. ')))' → logprob: -16.75071144104004
    7. ')`' → logprob: -17.00071144104004
    8. ')")' → logprob: -17.00071144104004
    9. '})' → logprob: -17.62571144104004
    10. '   ' → logprob: -17.75071144104004

Token 957: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.005945625249296427
    2. '#' → logprob: -6.255945682525635
    3. ' if' → logprob: -6.630945682525635
    4. '<|end|>' → logprob: -6.630945682525635
    5. '```' → logprob: -6.755945682525635
    6. '
' → logprob: -9.505945205688477
    7. 'main' → logprob: -10.505945205688477
    8. '[' → logprob: -10.630945205688477
    9. '<|end|>' → logprob: -11.005945205688477
    10. ')' → logprob: -11.005945205688477

Token 958: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.11405110359191895
    2. '__' → logprob: -2.239051103591919
    3. '_' → logprob: -6.98905086517334
    4. ' ' → logprob: -8.36405086517334
    5. '_name' → logprob: -10.48905086517334
    6. '___' → logprob: -10.98905086517334
    7. ' _' → logprob: -11.61405086517334
    8. ' ' → logprob: -12.11405086517334
    9. '​' → logprob: -12.61405086517334
    10. ' ___' → logprob: -13.48905086517334

Token 959: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.013718083500862122
    2. ' ==' → logprob: -4.763718128204346
    3. ' __' → logprob: -5.763718128204346
    4. '==' → logprob: -6.513718128204346
    5. 'name' → logprob: -9.013717651367188
    6. '=="' → logprob: -9.138717651367188
    7. '_' → logprob: -10.013717651367188
    8. 'if' → logprob: -10.263717651367188
    9. '__[' → logprob: -10.513717651367188
    10. '[' → logprob: -10.763717651367188

Token 960: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -5.44312788406387e-05
    2. '__.__' → logprob: -9.875054359436035
    3. '__('' → logprob: -14.125054359436035
    4. '==' → logprob: -14.125054359436035
    5. '__.' → logprob: -14.250054359436035
    6. '___' → logprob: -15.625054359436035
    7. '=="' → logprob: -16.00005531311035
    8. '____' → logprob: -16.12505531311035
    9. '__("' → logprob: -16.12505531311035
    10. '__
' → logprob: -16.25005531311035

Token 961: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.007510553114116192
    2. '==' → logprob: -5.007510662078857
    3. ' ==' → logprob: -7.882510662078857
    4. '__.__' → logprob: -8.0075101852417
    5. '=="' → logprob: -10.1325101852417
    6. '.__' → logprob: -10.3825101852417
    7. '__.' → logprob: -12.2575101852417
    8. '=='' → logprob: -13.1325101852417
    9. '__["' → logprob: -13.8825101852417
    10. '_' → logprob: -14.0075101852417

Token 962: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.008623674511909485
    2. ''' → logprob: -4.7586236000061035
    3. ' "__' → logprob: -12.133624076843262
    4. '__' → logprob: -12.633624076843262
    5. '"name' → logprob: -16.008623123168945
    6. '"user' → logprob: -16.008623123168945
    7. '"_' → logprob: -16.383623123168945
    8. ' '__' → logprob: -16.883623123168945
    9. '"class' → logprob: -18.133623123168945
    10. '"default' → logprob: -18.258623123168945

Token 963: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.01392935961484909
    2. '__' → logprob: -4.63892936706543
    3. '"' → logprob: -5.88892936706543
    4. ''' → logprob: -6.63892936706543
    5. 'name' → logprob: -10.26392936706543
    6. 'built' → logprob: -10.76392936706543
    7. 'python' → logprob: -11.26392936706543
    8. '_main' → logprob: -12.01392936706543
    9. 'py' → logprob: -13.01392936706543
    10. ''name' → logprob: -14.01392936706543

Token 964: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.25241971015930176
    2. '__' → logprob: -1.5024197101593018
    3. '__':
' → logprob: -8.127419471740723
    4. '__["' → logprob: -9.002419471740723
    5. '__("' → logprob: -10.627419471740723
    6. '__.' → logprob: -11.002419471740723
    7. '__.__' → logprob: -11.627419471740723
    8. '=="' → logprob: -12.377419471740723
    9. '__
' → logprob: -12.502419471740723
    10. '__",' → logprob: -12.752419471740723

Token 965: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -5.228561349213123e-05
    2. ' main' → logprob: -10.250052452087402
    3. '__' → logprob: -11.000052452087402
    4. '	main' → logprob: -16.000051498413086
    5. '_main' → logprob: -16.750051498413086
    6. 'm' → logprob: -18.125051498413086
    7. '   ' → logprob: -18.500051498413086
    8. 'run' → logprob: -19.000051498413086
    9. '(main' → logprob: -19.000051498413086
    10. 'amain' → logprob: -19.125051498413086

Token 966: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -1.9361264946837764e-07
    2. ' main' → logprob: -16.25
    3. '	main' → logprob: -20.25
    4. '   ' → logprob: -22.0
    5. '_main' → logprob: -23.625
    6. '(main' → logprob: -25.0
    7. '.main' → logprob: -25.875
    8. 'Main' → logprob: -26.875
    9. 'import' → logprob: -27.0
    10. '```' → logprob: -27.25

Token 967: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 965
Tokens correctement prédits (1ère position, stricte): 356
Tokens correctement prédits (1ère position, avec adaptation): 387
Tokens correctement prédits (top 10): 715
Précision stricte (1ère position): 36.89%
Précision adaptée (1ère position): 40.10%
Précision (top 10): 74.09%
================================================================================
