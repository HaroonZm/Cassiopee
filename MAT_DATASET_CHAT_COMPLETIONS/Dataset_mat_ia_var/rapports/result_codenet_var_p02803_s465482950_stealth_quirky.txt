================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:30:48
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from sys import stdin as ⏎
R = lambda: list(map(int, ⏎.readline().split()))
S = lambda: ⏎.readline().rstrip('\n')
Z = lambda: S()
N = lambda: int(Z())

modulo = 10**9 + 7

h, w = R()
lab = [Z() for _ in range(h)]

from collections import deque as DQ

def dist(ix, jx):
    vis = set()
    Q = DQ()
    Q.append((ix,jx,0))
    answer = -1
    while Q:
        x, y, lv = Q.popleft()
        if (x, y) in vis: continue
        vis.add((x, y))
        answer = lv if lv > answer else answer
        for xd, yd in ((-1,0),(0,1),(1,0),(0,-1)):
            X,Y = x+xd, y+yd
            if 0<=X<h and 0<=Y<w and lab[X][Y]!='#':
                Q.append((X,Y,lv+1))
    return answer

smiley = 0
rng = range
for ii in rng(h):
    for jj in rng(w):
        if lab[ii][jj]!='#':
            smiley = smiley if smiley>=(tt:=dist(ii,jj)) else tt

print(smiley)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' stdin' (ID: 75143)
  Prédit: 'argv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'argv' → logprob: -0.03339692950248718
    2. ' argv' → logprob: -3.9083969593048096
    3. 'exit' → logprob: -4.6583967208862305
    4. ' exit' → logprob: -6.7833967208862305
    5. 'stdout' → logprob: -6.9083967208862305
    6. 'path' → logprob: -7.7833967208862305
    7. 'stdin' → logprob: -8.03339672088623
    8. 'import' → logprob: -8.40839672088623
    9. 'version' → logprob: -9.65839672088623
    10. 'stderr' → logprob: -10.15839672088623

Token 4: ' as' (ID: 472)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.009256602264940739
    2. '.readline' → logprob: -4.759256839752197
    3. '.read' → logprob: -8.509256362915039
    4. '\n' → logprob: -9.134256362915039
    5. '
' → logprob: -9.509256362915039
    6. '.
' → logprob: -9.759256362915039
    7. ',' → logprob: -9.884256362915039
    8. 'import' → logprob: -10.134256362915039
    9. '```' → logprob: -10.384256362915039
    10. '.write' → logprob: -11.134256362915039

Token 5: ' �' (ID: 2969)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.11422265321016312
    2. 'sys' → logprob: -2.864222764968872
    3. 'stdin' → logprob: -3.739222764968872
    4. ' input' → logprob: -3.989222764968872
    5. 'in' → logprob: -5.864222526550293
    6. '`' → logprob: -6.614222526550293
    7. 's' → logprob: -7.114222526550293
    8. ' sys' → logprob: -7.239222526550293
    9. 'inp' → logprob: -7.364222526550293
    10. 'f' → logprob: -7.364222526550293

Token 6: '�' (ID: 237)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.17972730100154877
    2. 'sys' → logprob: -1.92972731590271
    3. 'stdin' → logprob: -4.679727077484131
    4. 'in' → logprob: -5.554727077484131
    5. 'input' → logprob: -5.679727077484131
    6. 'i' → logprob: -6.804727077484131
    7. 'inp' → logprob: -8.054727554321289
    8. 'r' → logprob: -8.429727554321289
    9. '`' → logprob: -8.804727554321289
    10. 'b' → logprob: -8.929727554321289

Token 7: '�' (ID: 236)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.012071614153683186
    2. 's' → logprob: -5.76207160949707
    3. '__' → logprob: -5.76207160949707
    4. 'in' → logprob: -6.01207160949707
    5. 'stdin' → logprob: -6.26207160949707
    6. 'input' → logprob: -7.63707160949707
    7. 'inp' → logprob: -8.63707160949707
    8. '�' → logprob: -8.76207160949707
    9. '��' → logprob: -9.63707160949707
    10. 'r' → logprob: -10.01207160949707

Token 8: '
' (ID: 198)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.07197485119104385
    2. 'stdin' → logprob: -3.821974754333496
    3. 'input' → logprob: -3.946974754333496
    4. 's' → logprob: -4.446974754333496
    5. 'in' → logprob: -4.946974754333496
    6. '__' → logprob: -5.571974754333496
    7. 'inp' → logprob: -5.821974754333496
    8. '�' → logprob: -7.571974754333496
    9. '���' → logprob: -7.696974754333496
    10. 'std' → logprob: -7.821974754333496

Token 9: 'R' (ID: 49)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.25753915309906006
    2. 'stdin' → logprob: -2.5075392723083496
    3. 'input' → logprob: -3.2575392723083496
    4. 'in' → logprob: -3.5075392723083496
    5. '__' → logprob: -3.7575392723083496
    6. '���' → logprob: -4.63253927230835
    7. '___' → logprob: -4.88253927230835
    8. '�' → logprob: -5.00753927230835
    9. 's' → logprob: -5.00753927230835
    10. '_in' → logprob: -5.38253927230835

Token 10: ' =' (ID: 314)
  Prédit: 'stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stdin' → logprob: -1.0947318077087402
    2. 'S' → logprob: -1.5947318077087402
    3. 'e' → logprob: -2.2197318077087402
    4. 's' → logprob: -2.2197318077087402
    5. 'STD' → logprob: -2.4697318077087402
    6. 'R' → logprob: -2.4697318077087402
    7. 'std' → logprob: -4.46973180770874
    8. '```' → logprob: -4.59473180770874
    9. 'stdout' → logprob: -4.96973180770874
    10. 'ead' → logprob: -5.09473180770874

Token 11: ' lambda' (ID: 27871)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.5448412299156189
    2. 'stdin' → logprob: -1.4198412895202637
    3. 'input' → logprob: -1.7948412895202637
    4. 'R' → logprob: -5.544841289520264
    5. 'r' → logprob: -6.169841289520264
    6. 's' → logprob: -6.419841289520264
    7. ' sys' → logprob: -6.669841289520264
    8. '0' → logprob: -6.794841289520264
    9. ' input' → logprob: -7.794841289520264
    10. 'std' → logprob: -8.794840812683105

Token 12: ':' (ID: 25)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5347331762313843
    2. 'r' → logprob: -1.5347331762313843
    3. 'input' → logprob: -2.034733295440674
    4. '_' → logprob: -3.784733295440674
    5. ' s' → logprob: -4.659733295440674
    6. 'sys' → logprob: -5.534733295440674
    7. 'stdin' → logprob: -5.659733295440674
    8. 'i' → logprob: -5.909733295440674
    9. ' input' → logprob: -6.034733295440674
    10. '___' → logprob: -6.034733295440674

Token 13: ' list' (ID: 1562)
  Prédit: 'stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stdin' → logprob: -0.038198359310626984
    2. 'input' → logprob: -4.413198471069336
    3. ' stdin' → logprob: -4.413198471069336
    4. '���' → logprob: -5.163198471069336
    5. '(stdin' → logprob: -5.163198471069336
    6. ' ' → logprob: -7.663198471069336
    7. '.stdin' → logprob: -7.913198471069336
    8. 'int' → logprob: -8.538198471069336
    9. 'sys' → logprob: -8.913198471069336
    10. ' input' → logprob: -9.038198471069336

Token 14: '(map' (ID: 16946)
  Prédit: '(stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(stdin' → logprob: -0.041661012917757034
    2. '(' → logprob: -3.291661024093628
    3. '(map' → logprob: -6.291660785675049
    4. '(input' → logprob: -7.166660785675049
    5. '(st' → logprob: -7.916660785675049
    6. '(int' → logprob: -8.416661262512207
    7. '(s' → logprob: -9.541661262512207
    8. 'stdin' → logprob: -10.041661262512207
    9. '(read' → logprob: -10.291661262512207
    10. '()' → logprob: -10.291661262512207

Token 15: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.012460798025131226
    2. '(' → logprob: -4.762460708618164
    3. '(str' → logprob: -6.387460708618164
    4. '(stdin' → logprob: -7.387460708618164
    5. '(ord' → logprob: -7.387460708618164
    6. '(input' → logprob: -7.637460708618164
    7. 'int' → logprob: -8.762460708618164
    8. '(list' → logprob: -9.137460708618164
    9. '(eval' → logprob: -10.262460708618164
    10. '<int' → logprob: -10.387460708618164

Token 16: ',' (ID: 11)
  Prédit: '(stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(stdin' → logprob: -0.018926719203591347
    2. ',' → logprob: -4.143926620483398
    3. '(' → logprob: -6.143926620483398
    4. 'stdin' → logprob: -8.393926620483398
    5. ')' → logprob: -8.643926620483398
    6. '.stdin' → logprob: -9.143926620483398
    7. '(input' → logprob: -9.393926620483398
    8. ' stdin' → logprob: -10.393926620483398
    9. '(st' → logprob: -10.893926620483398
    10. '(std' → logprob: -11.018926620483398

Token 17: ' �' (ID: 2969)
  Prédit: 'stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stdin' → logprob: -0.1211390420794487
    2. '(stdin' → logprob: -2.8711390495300293
    3. ' stdin' → logprob: -2.9961390495300293
    4. 'input' → logprob: -5.121139049530029
    5. '.stdin' → logprob: -7.246139049530029
    6. ' input' → logprob: -8.371138572692871
    7. ')' → logprob: -8.746138572692871
    8. ' readline' → logprob: -9.496138572692871
    9. 'istream' → logprob: -9.996138572692871
    10. 'read' → logprob: -9.996138572692871

Token 18: '�' (ID: 237)
  Prédit: 'stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stdin' → logprob: -0.021362219005823135
    2. '(stdin' → logprob: -4.3963623046875
    3. 'input' → logprob: -4.8963623046875
    4. '���' → logprob: -8.0213623046875
    5. '.stdin' → logprob: -8.2713623046875
    6. ' stdin' → logprob: -8.5213623046875
    7. '___' → logprob: -9.1463623046875
    8. ')' → logprob: -9.1463623046875
    9. 's' → logprob: -9.7713623046875
    10. '__' → logprob: -10.2713623046875

Token 19: '�' (ID: 236)
  Prédit: 'stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stdin' → logprob: -0.026441145688295364
    2. '(stdin' → logprob: -4.2764410972595215
    3. 'input' → logprob: -5.0264410972595215
    4. '���' → logprob: -6.1514410972595215
    5. 's' → logprob: -7.1514410972595215
    6. '.stdin' → logprob: -7.2764410972595215
    7. ' stdin' → logprob: -7.4014410972595215
    8. '��' → logprob: -8.15144157409668
    9. ')' → logprob: -8.65144157409668
    10. 'istream' → logprob: -8.90144157409668

Token 20: '.' (ID: 13)
  Prédit: 'stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stdin' → logprob: -0.43033045530319214
    2. '(stdin' → logprob: -1.680330514907837
    3. '.stdin' → logprob: -1.930330514907837
    4. '.readline' → logprob: -4.555330276489258
    5. ' stdin' → logprob: -5.430330276489258
    6. 'input' → logprob: -6.180330276489258
    7. ')' → logprob: -7.180330276489258
    8. 'std' → logprob: -8.305330276489258
    9. '.' → logprob: -8.680330276489258
    10. ' ' → logprob: -11.055330276489258

Token 21: 'read' (ID: 1293)
  Prédit: 'read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.012751431204378605
    2. '.readline' → logprob: -4.512751579284668
    3. 'stdin' → logprob: -6.637751579284668
    4. ' readline' → logprob: -8.387751579284668
    5. 'reader' → logprob: -10.012751579284668
    6. 'rea' → logprob: -10.387751579284668
    7. 'input' → logprob: -10.637751579284668
    8. '.' → logprob: -10.637751579284668
    9. '```' → logprob: -11.512751579284668
    10. ')' → logprob: -11.637751579284668

Token 22: 'line' (ID: 1137)
  Prédit: 'line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.007238972000777721
    2. '_line' → logprob: -5.882238864898682
    3. '.readline' → logprob: -6.382238864898682
    4. ')' → logprob: -6.882238864898682
    5. '<|end|>' → logprob: -6.882238864898682
    6. 'lines' → logprob: -8.00723934173584
    7. 'lin' → logprob: -8.88223934173584
    8. '_LINE' → logprob: -10.25723934173584
    9. '())' → logprob: -10.75723934173584
    10. '.readlines' → logprob: -10.75723934173584

Token 23: '().' (ID: 1454)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.028272662311792374
    2. '()' → logprob: -4.15327262878418
    3. '())' → logprob: -5.02827262878418
    4. '()));' → logprob: -6.02827262878418
    5. '().' → logprob: -6.65327262878418
    6. '))' → logprob: -7.15327262878418
    7. '())))' → logprob: -7.65327262878418
    8. '(' → logprob: -8.52827262878418
    9. '()>' → logprob: -8.90327262878418
    10. '();)' → logprob: -10.27827262878418

Token 24: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.07590240240097046
    2. 'split' → logprob: -3.2009024620056152
    3. 'rstrip' → logprob: -3.4509024620056152
    4. ')' → logprob: -8.325901985168457
    5. ' strip' → logprob: -8.450901985168457
    6. 'read' → logprob: -8.825901985168457
    7. 'decode' → logprob: -10.700901985168457
    8. '())' → logprob: -11.325901985168457
    9. ' split' → logprob: -11.950901985168457
    10. '-strip' → logprob: -13.075901985168457

Token 25: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.06330729275941849
    2. '()' → logprob: -3.063307285308838
    3. '())))' → logprob: -4.688307285308838
    4. '()));' → logprob: -6.188307285308838
    5. '())' → logprob: -6.813307285308838
    6. '(' → logprob: -7.063307285308838
    7. '))' → logprob: -7.063307285308838
    8. ')))' → logprob: -8.313307762145996
    9. '()))
' → logprob: -9.438307762145996
    10. '()))

' → logprob: -10.063307762145996

Token 26: 'S' (ID: 50)
  Prédit: 'stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stdin' → logprob: -0.7075096368789673
    2. 'sys' → logprob: -1.7075096368789673
    3. 's' → logprob: -2.0825095176696777
    4. '_' → logprob: -3.0825095176696777
    5. 'r' → logprob: -3.3325095176696777
    6. '___' → logprob: -3.4575095176696777
    7. '_s' → logprob: -3.8325095176696777
    8. '���' → logprob: -4.082509517669678
    9. '__' → logprob: -4.457509517669678
    10. 'in' → logprob: -5.332509517669678

Token 27: ' =' (ID: 314)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.4470844268798828
    2. 'td' → logprob: -1.3220844268798828
    3. 'stdin' → logprob: -2.447084426879883
    4. '.stdin' → logprob: -6.197084426879883
    5. ')' → logprob: -6.822084426879883
    6. 'T' → logprob: -6.947084426879883
    7. 'TD' → logprob: -7.072084426879883
    8. '(stdin' → logprob: -7.572084426879883
    9. 'tin' → logprob: -7.822084426879883
    10. 'ti' → logprob: -8.572084426879883

Token 28: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.4987538158893585
    2. 'stdin' → logprob: -1.9987537860870361
    3. ' lambda' → logprob: -2.248753786087036
    4. '���' → logprob: -3.498753786087036
    5. ' stdin' → logprob: -3.748753786087036
    6. ' []' → logprob: -3.748753786087036
    7. '[]' → logprob: -3.748753786087036
    8. 'input' → logprob: -4.498754024505615
    9. 'range' → logprob: -4.998754024505615
    10. 'R' → logprob: -5.123754024505615

Token 29: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.031221779063344002
    2. '():' → logprob: -4.406221866607666
    3. '()' → logprob: -5.031221866607666
    4. ' :' → logprob: -5.781221866607666
    5. 'list' → logprob: -6.281221866607666
    6. ' ' → logprob: -6.656221866607666
    7. '[]' → logprob: -6.781221866607666
    8. ' list' → logprob: -7.156221866607666
    9. ':list' → logprob: -7.156221866607666
    10. 'int' → logprob: -7.406221866607666

Token 30: ' �' (ID: 2969)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.9266797304153442
    2. '���' → logprob: -1.0516797304153442
    3. 'input' → logprob: -2.0516796112060547
    4. ' ' → logprob: -3.0516796112060547
    5. 'map' → logprob: -3.4266796112060547
    6. 'str' → logprob: -4.426679611206055
    7. 'stdin' → logprob: -4.551679611206055
    8. 'int' → logprob: -5.051679611206055
    9. ' list' → logprob: -5.301679611206055
    10. '[' → logprob: -5.551679611206055

Token 31: '�' (ID: 237)
  Prédit: 'stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stdin' → logprob: -0.024176592007279396
    2. '���' → logprob: -4.524176597595215
    3. '(stdin' → logprob: -4.649176597595215
    4. ' stdin' → logprob: -6.649176597595215
    5. 's' → logprob: -7.149176597595215
    6. '.stdin' → logprob: -7.774176597595215
    7. 'std' → logprob: -8.649176597595215
    8. 'stdout' → logprob: -8.774176597595215
    9. 'st' → logprob: -9.274176597595215
    10. 'int' → logprob: -9.399176597595215

Token 32: '�' (ID: 236)
  Prédit: 'stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stdin' → logprob: -0.17328670620918274
    2. '���' → logprob: -2.1732866764068604
    3. 'input' → logprob: -4.5482869148254395
    4. '(stdin' → logprob: -4.5482869148254395
    5. '.stdin' → logprob: -4.7982869148254395
    6. 's' → logprob: -5.7982869148254395
    7. 'int' → logprob: -5.7982869148254395
    8. '.readline' → logprob: -6.7982869148254395
    9. ' stdin' → logprob: -6.7982869148254395
    10. '___' → logprob: -7.0482869148254395

Token 33: '.' (ID: 13)
  Prédit: 'stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stdin' → logprob: -0.04690033942461014
    2. '.stdin' → logprob: -3.4219002723693848
    3. '.' → logprob: -5.421900272369385
    4. 'input' → logprob: -6.046900272369385
    5. '.readline' → logprob: -6.421900272369385
    6. 'std' → logprob: -6.796900272369385
    7. 'read' → logprob: -6.796900272369385
    8. 'stdout' → logprob: -6.796900272369385
    9. '(stdin' → logprob: -7.546900272369385
    10. '.read' → logprob: -7.796900272369385

Token 34: 'read' (ID: 1293)
  Prédit: 'read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -8.77627644513268e-06
    2. '.readline' → logprob: -12.375008583068848
    3. 'stdin' → logprob: -13.125008583068848
    4. 'write' → logprob: -14.000008583068848
    5. ' readline' → logprob: -14.250008583068848
    6. 'reader' → logprob: -14.250008583068848
    7. 'reading' → logprob: -15.750008583068848
    8. 're' → logprob: -16.000009536743164
    9. 'buffer' → logprob: -16.500009536743164
    10. 'stdout' → logprob: -16.625009536743164

Token 35: 'line' (ID: 1137)
  Prédit: 'line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.00025204161647707224
    2. 'ine' → logprob: -9.250251770019531
    3. '<|end|>' → logprob: -9.250251770019531
    4. 'lines' → logprob: -11.125251770019531
    5. 'ln' → logprob: -11.500251770019531
    6. 'lin' → logprob: -12.000251770019531
    7. '.readline' → logprob: -12.250251770019531
    8. '_line' → logprob: -12.625251770019531
    9. 'newline' → logprob: -12.875251770019531
    10. '()' → logprob: -13.000251770019531

Token 36: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5036841034889221
    2. '<|end|>' → logprob: -1.1286840438842773
    3. '().' → logprob: -3.3786840438842773
    4. '(' → logprob: -4.503684043884277
    5. '.' → logprob: -4.753684043884277
    6. '.readline' → logprob: -5.003684043884277
    7. ')' → logprob: -5.753684043884277
    8. '```' → logprob: -5.878684043884277
    9. '\' → logprob: -7.003684043884277
    10. '()\' → logprob: -7.253684043884277

Token 37: 'rstrip' (ID: 180429)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.3306824564933777
    2. 'rstrip' → logprob: -1.5806825160980225
    3. 'read' → logprob: -2.5806825160980225
    4. 'decode' → logprob: -12.080682754516602
    5. 'r' → logprob: -12.955682754516602
    6. ' readline' → logprob: -14.455682754516602
    7. 'rst' → logprob: -14.705682754516602
    8. '.readline' → logprob: -15.205682754516602
    9. ' strip' → logprob: -15.455682754516602
    10. 'str' → logprob: -15.830682754516602

Token 38: '('\' (ID: 24345)
  Prédit: 'stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stdin' → logprob: -0.010704431682825089
    2. 's' → logprob: -5.260704517364502
    3. '���' → logprob: -6.260704517364502
    4. '(stdin' → logprob: -6.635704517364502
    5. '.stdin' → logprob: -7.010704517364502
    6. 'std' → logprob: -7.385704517364502
    7. ' stdin' → logprob: -8.760704040527344
    8. 'stdout' → logprob: -9.010704040527344
    9. '```' → logprob: -9.385704040527344
    10. 'sys' → logprob: -9.510704040527344

Token 39: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.2352385965641588e-05
    2. '\n' → logprob: -11.625012397766113
    3. 'r' → logprob: -12.875012397766113
    4. '<|end|>' → logprob: -14.875012397766113
    5. 'u' → logprob: -15.500012397766113
    6. ' n' → logprob: -16.625011444091797
    7. '\' → logprob: -17.500011444091797
    8. ')n' → logprob: -17.625011444091797
    9. 'newline' → logprob: -17.750011444091797
    10. '	n' → logprob: -18.000011444091797

Token 40: '')
' (ID: 2515)
  Prédit: ''))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''))' → logprob: -0.26709645986557007
    2. '')' → logprob: -1.5170965194702148
    3. ''' → logprob: -4.392096519470215
    4. ')' → logprob: -6.892096519470215
    5. '')))' → logprob: -7.017096519470215
    6. '"))' → logprob: -8.642096519470215
    7. '"' → logprob: -8.642096519470215
    8. '').' → logprob: -8.892096519470215
    9. '))' → logprob: -10.142096519470215
    10. ' ')' → logprob: -10.642096519470215

Token 41: 'Z' (ID: 57)
  Prédit: 'stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stdin' → logprob: -0.02376340888440609
    2. 's' → logprob: -4.273763179779053
    3. '���' → logprob: -5.523763179779053
    4. 'std' → logprob: -6.148763179779053
    5. 'sys' → logprob: -6.523763179779053
    6. 'in' → logprob: -8.023763656616211
    7. '```' → logprob: -8.398763656616211
    8. '.stdin' → logprob: -8.523763656616211
    9. 'stdout' → logprob: -8.523763656616211
    10. '(stdin' → logprob: -8.523763656616211

Token 42: ' =' (ID: 314)
  Prédit: 'stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stdin' → logprob: -0.29878076910972595
    2. '���' → logprob: -1.7987807989120483
    3. '(stdin' → logprob: -3.048780679702759
    4. '_' → logprob: -4.423780918121338
    5. '>>>' → logprob: -5.048780918121338
    6. '.stdin' → logprob: -5.298780918121338
    7. '=' → logprob: -5.923780918121338
    8. 'in' → logprob: -6.048780918121338
    9. 'ip' → logprob: -6.048780918121338
    10. 's' → logprob: -6.423780918121338

Token 43: ' lambda' (ID: 27871)
  Prédit: 'stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stdin' → logprob: -0.15239593386650085
    2. ' stdin' → logprob: -2.0273959636688232
    3. '(stdin' → logprob: -6.027395725250244
    4. '���' → logprob: -6.152395725250244
    5. ' ' → logprob: -6.277395725250244
    6. 'stdout' → logprob: -7.402395725250244
    7. 'lambda' → logprob: -7.652395725250244
    8. 'range' → logprob: -7.777395725250244
    9. 'int' → logprob: -8.277396202087402
    10. '[]' → logprob: -8.402396202087402

Token 44: ':' (ID: 25)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6341696381568909
    2. ' stdin' → logprob: -1.384169578552246
    3. 'range' → logprob: -2.384169578552246
    4. 'stdin' → logprob: -2.884169578552246
    5. ' range' → logprob: -4.259169578552246
    6. '(stdin' → logprob: -4.259169578552246
    7. ':' → logprob: -4.509169578552246
    8. 'list' → logprob: -5.509169578552246
    9. 'lambda' → logprob: -5.759169578552246
    10. ' lambda' → logprob: -6.509169578552246

Token 45: ' S' (ID: 336)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.4257203936576843
    2. 'int' → logprob: -2.175720453262329
    3. ' []' → logprob: -3.050720453262329
    4. ' ' → logprob: -3.300720453262329
    5. 'list' → logprob: -3.300720453262329
    6. '���' → logprob: -3.300720453262329
    7. 'map' → logprob: -3.800720453262329
    8. '[' → logprob: -4.67572021484375
    9. 'stdin' → logprob: -4.67572021484375
    10. '[int' → logprob: -5.42572021484375

Token 46: '()
' (ID: 1234)
  Prédit: 'stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stdin' → logprob: -0.017795996740460396
    2. 's' → logprob: -4.642796039581299
    3. '���' → logprob: -6.017796039581299
    4. 'sys' → logprob: -7.142796039581299
    5. '.stdin' → logprob: -7.142796039581299
    6. 'in' → logprob: -7.142796039581299
    7. 'std' → logprob: -7.267796039581299
    8. '(stdin' → logprob: -7.892796039581299
    9. '_' → logprob: -8.14279556274414
    10. 'stdout' → logprob: -8.26779556274414

Token 47: 'N' (ID: 45)
  Prédit: 'stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stdin' → logprob: -0.20853866636753082
    2. '���' → logprob: -1.8335386514663696
    3. 's' → logprob: -4.83353853225708
    4. 'sys' → logprob: -5.08353853225708
    5. 'in' → logprob: -5.45853853225708
    6. '(stdin' → logprob: -6.45853853225708
    7. '_' → logprob: -6.83353853225708
    8. 'std' → logprob: -7.08353853225708
    9. 'r' → logprob: -7.33353853225708
    10. '.stdin' → logprob: -7.45853853225708

Token 48: ' =' (ID: 314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 49: ' lambda' (ID: 27871)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.21346218883991241
    2. 'int' → logprob: -1.838462233543396
    3. ' R' → logprob: -3.8384621143341064
    4. ' ' → logprob: -5.2134623527526855
    5. 'R' → logprob: -5.5884623527526855
    6. '  ' → logprob: -6.9634623527526855
    7. '10' → logprob: -8.213461875915527
    8. '0' → logprob: -8.838461875915527
    9. ' Z' → logprob: -8.838461875915527
    10. '1' → logprob: -8.963461875915527

Token 50: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2493482083082199
    2. 'int' → logprob: -2.4993481636047363
    3. '()' → logprob: -2.7493481636047363
    4. '():' → logprob: -3.4993481636047363
    5. ' :' → logprob: -3.9993481636047363
    6. ':int' → logprob: -4.999348163604736
    7. '(int' → logprob: -5.124348163604736
    8. ' ()' → logprob: -5.624348163604736
    9. ' ' → logprob: -5.749348163604736
    10. ' int' → logprob: -5.874348163604736

Token 51: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.026312021538615227
    2. ' int' → logprob: -3.6513121128082275
    3. '  ' → logprob: -12.776311874389648
    4. ' ' → logprob: -12.901311874389648
    5. '[int' → logprob: -13.901311874389648
    6. '	int' → logprob: -14.151311874389648
    7. '(int' → logprob: -14.276311874389648
    8. 'i' → logprob: -14.401311874389648
    9. '```' → logprob: -14.651311874389648
    10. 'in' → logprob: -14.901311874389648

Token 52: '(Z' (ID: 55117)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -8.613945101387799e-05
    2. '(S' → logprob: -10.500085830688477
    3. '(
' → logprob: -11.500085830688477
    4. '()' → logprob: -11.500085830688477
    5. '(R' → logprob: -11.750085830688477
    6. '(`' → logprob: -11.875085830688477
    7. '('' → logprob: -12.000085830688477
    8. '(stdin' → logprob: -12.500085830688477
    9. '((' → logprob: -12.750085830688477
    10. '(read' → logprob: -12.875085830688477

Token 53: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.01591729000210762
    2. '()))' → logprob: -4.3909173011779785
    3. '()' → logprob: -6.3909173011779785
    4. ')' → logprob: -6.5159173011779785
    5. '))' → logprob: -8.51591682434082
    6. '())
' → logprob: -10.76591682434082
    7. ' ())' → logprob: -10.89091682434082
    8. '(' → logprob: -13.39091682434082
    9. '()))
' → logprob: -14.01591682434082
    10. '();)' → logprob: -14.14091682434082

Token 54: 'mod' (ID: 4847)
  Prédit: 'stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stdin' → logprob: -0.06343238055706024
    2. 's' → logprob: -3.313432455062866
    3. 'in' → logprob: -4.563432216644287
    4. '(stdin' → logprob: -5.938432216644287
    5. '_' → logprob: -6.313432216644287
    6. 'sys' → logprob: -6.438432216644287
    7. '���' → logprob: -6.563432216644287
    8. 'std' → logprob: -7.063432216644287
    9. '```' → logprob: -7.063432216644287
    10. '.stdin' → logprob: -7.063432216644287

Token 55: 'ulo' (ID: 5953)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8515626192092896
    2. '=' → logprob: -1.4765626192092896
    3. '<|end|>' → logprob: -2.3515625
    4. ')' → logprob: -2.6015625
    5. ' ' → logprob: -2.7265625
    6. '_' → logprob: -3.2265625
    7. ',' → logprob: -3.4765625
    8. 'mod' → logprob: -5.1015625
    9. '  ' → logprob: -5.4765625
    10. '.' → logprob: -5.4765625

Token 56: ' =' (ID: 314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 57: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.014257526956498623
    2. ' ' → logprob: -4.514257431030273
    3. '100' → logprob: -5.764257431030273
    4. '1' → logprob: -10.014257431030273
    5. '998' → logprob: -10.889257431030273
    6. 'int' → logprob: -13.764257431030273
    7. '(' → logprob: -13.889257431030273
    8. '0' → logprob: -14.764257431030273
    9. ' ' → logprob: -15.139257431030273
    10. ' (' → logprob: -15.264257431030273

Token 58: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.009844746440649033
    2. '100' → logprob: -4.634844779968262
    3. '1' → logprob: -9.509844779968262
    4. '998' → logprob: -11.384844779968262
    5. ' ' → logprob: -13.384844779968262
    6. 'int' → logprob: -13.634844779968262
    7. '(' → logprob: -14.759844779968262
    8. '0' → logprob: -16.634843826293945
    9. '```' → logprob: -17.134843826293945
    10. '2' → logprob: -17.259843826293945

Token 59: '**' (ID: 410)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.8555309772491455
    2. '9' → logprob: -0.8555309772491455
    3. '**' → logprob: -2.1055309772491455
    4. '7' → logprob: -4.480530738830566
    5. '5' → logprob: -4.855530738830566
    6. '6' → logprob: -5.480530738830566
    7. '^' → logprob: -6.730530738830566
    8. '00' → logprob: -6.855530738830566
    9. '8' → logprob: -7.230530738830566
    10. '000' → logprob: -7.730530738830566

Token 60: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -7.896309739408025e-07
    2. '09' → logprob: -14.500000953674316
    3. ' ' → logprob: -15.250000953674316
    4. '```' → logprob: -17.0
    5. '10' → logprob: -17.5
    6. '+' → logprob: -17.5
    7. '8' → logprob: -17.875
    8. '_' → logprob: -19.375
    9. '   ' → logprob: -19.5
    10. '19' → logprob: -19.5625

Token 61: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.001378210261464119
    2. ' +' → logprob: -6.876378059387207
    3. '7' → logprob: -8.001378059387207
    4. ' ' → logprob: -12.751378059387207
    5. '+
' → logprob: -13.001378059387207
    6. '9' → logprob: -13.626378059387207
    7. '+

' → logprob: -14.251378059387207
    8. ' plus' → logprob: -14.751378059387207
    9. '+</' → logprob: -14.751378059387207
    10. '```' → logprob: -14.876378059387207

Token 62: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -2.6060808522743173e-05
    2. ' ' → logprob: -10.625025749206543
    3. '+' → logprob: -13.750025749206543
    4. '   ' → logprob: -16.00002670288086
    5. '9' → logprob: -16.06252670288086
    6. '  ' → logprob: -16.18752670288086
    7. '```' → logprob: -16.43752670288086
    8. '07' → logprob: -16.50002670288086
    9. ' ' → logprob: -17.62502670288086
    10. '' → logprob: -17.75002670288086

Token 63: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. '```' → logprob: -17.125
    3. '+' → logprob: -17.25
    4. ' ' → logprob: -17.5
    5. '07' → logprob: -18.625
    6. '' → logprob: -19.4375
    7. '٧' → logprob: -19.625
    8. '   ' → logprob: -19.8125
    9. '７' → logprob: -19.9375
    10. '۷' → logprob: -19.9375

Token 64: '

' (ID: 279)
  Prédit: 'stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stdin' → logprob: -0.03870721906423569
    2. '(stdin' → logprob: -4.538707256317139
    3. '_' → logprob: -4.788707256317139
    4. '.stdin' → logprob: -4.913707256317139
    5. 's' → logprob: -5.538707256317139
    6. ' stdin' → logprob: -5.788707256317139
    7. '���' → logprob: -7.538707256317139
    8. 'in' → logprob: -7.913707256317139
    9. '```' → logprob: -7.913707256317139
    10. '<|end|>' → logprob: -7.913707256317139

Token 65: 'h' (ID: 71)
  Prédit: 'stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stdin' → logprob: -0.6158644556999207
    2. '���' → logprob: -0.8658644556999207
    3. 'sys' → logprob: -4.615864276885986
    4. 's' → logprob: -4.865864276885986
    5. '_' → logprob: -4.990864276885986
    6. 'b' → logprob: -6.490864276885986
    7. '��' → logprob: -6.490864276885986
    8. 'in' → logprob: -6.615864276885986
    9. 'std' → logprob: -6.740864276885986
    10. '```' → logprob: -7.115864276885986

Token 66: ',' (ID: 11)
  Prédit: 'ash'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ash' → logprob: -0.24048921465873718
    2. 'e' → logprob: -2.2404892444610596
    3. '=' → logprob: -3.8654892444610596
    4. ' =' → logprob: -4.1154890060424805
    5. 'from' → logprob: -4.2404890060424805
    6. 'a' → logprob: -4.3654890060424805
    7. '_' → logprob: -4.8654890060424805
    8. 'ashes' → logprob: -5.7404890060424805
    9. ' ' → logprob: -5.8654890060424805
    10. 'elper' → logprob: -5.8654890060424805

Token 67: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.6933940649032593
    2. ' w' → logprob: -0.6933940649032593
    3. 't' → logprob: -9.44339370727539
    4. ' t' → logprob: -9.56839370727539
    5. ' ' → logprob: -10.31839370727539
    6. 'm' → logprob: -10.31839370727539
    7. 'k' → logprob: -12.19339370727539
    8. ' m' → logprob: -12.31839370727539
    9. '  ' → logprob: -13.19339370727539
    10. 's' → logprob: -13.19339370727539

Token 68: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1002306118607521
    2. '=' → logprob: -2.3502306938171387
    3. ',' → logprob: -10.85023021697998
    4. ' ' → logprob: -13.22523021697998
    5. ' =
' → logprob: -13.85023021697998
    6. ' ,' → logprob: -14.60023021697998
    7. '＝' → logprob: -14.97523021697998
    8. ' =)' → logprob: -15.47523021697998
    9. '=h' → logprob: -16.225231170654297
    10. '=

' → logprob: -16.225231170654297

Token 69: ' R' (ID: 460)
  Prédit: ' R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' R' → logprob: -0.07908321917057037
    2. 'R' → logprob: -2.579083204269409
    3. ' ' → logprob: -9.079083442687988
    4. ' map' → logprob: -9.704083442687988
    5. 'map' → logprob: -11.954083442687988
    6. '  ' → logprob: -12.329083442687988
    7. ' ' → logprob: -13.204083442687988
    8. ' list' → logprob: -13.454083442687988
    9. 'r' → logprob: -14.329083442687988
    10. 'list' → logprob: -14.579083442687988

Token 70: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.012686342932283878
    2. '(' → logprob: -4.512686252593994
    3. ')' → logprob: -6.637686252593994
    4. '()
' → logprob: -8.512686729431152
    5. '())' → logprob: -9.887686729431152
    6. '(
' → logprob: -11.137686729431152
    7. '();' → logprob: -11.262686729431152
    8. '<|end|>' → logprob: -11.512686729431152
    9. '()\' → logprob: -11.887686729431152
    10. '()

' → logprob: -12.262686729431152

Token 71: 'lab' (ID: 21048)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 72: ' =' (ID: 314)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.3702191114425659
    2. 'yrinth' → logprob: -1.245219111442566
    3. ' =' → logprob: -4.6202192306518555
    4. '=' → logprob: -5.1202192306518555
    5. '[' → logprob: -6.7452192306518555
    6. '[:]' → logprob: -7.1202192306518555
    7. '[y' → logprob: -7.4952192306518555
    8. 'ir' → logprob: -7.6202192306518555
    9. 's' → logprob: -7.9952192306518555
    10. '=[]' → logprob: -7.9952192306518555

Token 73: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8344090580940247
    2. '[h' → logprob: -0.8344090580940247
    3. '[list' → logprob: -2.08440899848938
    4. '[l' → logprob: -5.709409236907959
    5. '[List' → logprob: -6.834409236907959
    6. '[str' → logprob: -7.584409236907959
    7. '[R' → logprob: -7.709409236907959
    8. '[line' → logprob: -7.959409236907959
    9. '[f' → logprob: -8.2094087600708
    10. '[i' → logprob: -8.7094087600708

Token 74: 'Z' (ID: 57)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.23942841589450836
    2. 'list' → logprob: -1.7394284009933472
    3. 'Z' → logprob: -3.4894285202026367
    4. 'R' → logprob: -5.739428520202637
    5. '���' → logprob: -6.114428520202637
    6. '0' → logprob: -8.239428520202637
    7. ' list' → logprob: -8.364428520202637
    8. ' S' → logprob: -8.614428520202637
    9. 'str' → logprob: -8.989428520202637
    10. 'input' → logprob: -9.239428520202637

Token 75: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0014246409991756082
    2. '())' → logprob: -7.126424789428711
    3. '()]' → logprob: -7.751424789428711
    4. ')' → logprob: -8.876424789428711
    5. '().' → logprob: -10.126424789428711
    6. ' ()' → logprob: -12.626424789428711
    7. '()
' → logprob: -13.001424789428711
    8. ']()' → logprob: -13.376424789428711
    9. '()`' → logprob: -14.376424789428711
    10. '（）' → logprob: -14.751424789428711

Token 76: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04997451230883598
    2. '()' → logprob: -3.0499744415283203
    3. 'for' → logprob: -7.17497444152832
    4. ' for' → logprob: -7.54997444152832
    5. '())' → logprob: -9.79997444152832
    6. ' )' → logprob: -10.92497444152832
    7. ' ' → logprob: -11.42497444152832
    8. '().' → logprob: -13.17497444152832
    9. ' ()' → logprob: -13.54997444152832
    10. '	for' → logprob: -13.79997444152832

Token 77: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.517412006855011
    2. ' range' → logprob: -1.2674119472503662
    3. '_' → logprob: -2.267411947250366
    4. 'range' → logprob: -4.017412185668945
    5. '_range' → logprob: -8.017412185668945
    6. ' ' → logprob: -8.767412185668945
    7. ' i' → logprob: -8.892412185668945
    8. '(range' → logprob: -9.267412185668945
    9. ' in' → logprob: -10.267412185668945
    10. '	range' → logprob: -10.642412185668945

Token 78: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.7006778120994568
    2. 'range' → logprob: -0.9506778120994568
    3. ' in' → logprob: -2.2006778717041016
    4. ' range' → logprob: -5.075677871704102
    5. ' ' → logprob: -8.700677871704102
    6. '  ' → logprob: -9.450677871704102
    7. '	range' → logprob: -11.325677871704102
    8. 'i' → logprob: -11.950677871704102
    9. ']' → logprob: -12.325677871704102
    10. '   ' → logprob: -12.325677871704102

Token 79: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.023252932354807854
    2. ' range' → logprob: -3.7732529640197754
    3. '[' → logprob: -13.023252487182617
    4. '(range' → logprob: -13.148252487182617
    5. '	range' → logprob: -13.523252487182617
    6. ' ' → logprob: -13.773252487182617
    7. '   ' → logprob: -15.273252487182617
    8. '  ' → logprob: -15.523252487182617
    9. 'rang' → logprob: -15.773252487182617
    10. '```' → logprob: -16.648252487182617

Token 80: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -1.1637164789135568e-05
    2. '(' → logprob: -11.375011444091797
    3. 'h' → logprob: -16.750011444091797
    4. '(w' → logprob: -17.375011444091797
    5. '(
' → logprob: -18.250011444091797
    6. ' (' → logprob: -18.625011444091797
    7. '	h' → logprob: -19.625011444091797
    8. '(H' → logprob: -20.250011444091797
    9. '((' → logprob: -20.500011444091797
    10. '(hw' → logprob: -21.125011444091797

Token 81: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00021057340200059116
    2. ')' → logprob: -8.500210762023926
    3. ']' → logprob: -12.000210762023926
    4. ' )' → logprob: -15.375210762023926
    5. ')]
' → logprob: -15.375210762023926
    6. '))' → logprob: -15.875210762023926
    7. ')
' → logprob: -16.50020980834961
    8. '')]' → logprob: -16.50020980834961
    9. ')],' → logprob: -16.87520980834961
    10. ')}' → logprob: -17.12520980834961

Token 82: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.053641676902771
    2. 'd' → logprob: -1.678641676902771
    3. '#' → logprob: -2.1786417961120605
    4. 's' → logprob: -3.3036417961120605
    5. '' → logprob: -3.4286417961120605
    6. '.' → logprob: -3.4286417961120605
    7. 'dp' → logprob: -3.8036417961120605
    8. 'for' → logprob: -3.9286417961120605
    9. '<|end|>' → logprob: -4.0536417961120605
    10. 'c' → logprob: -4.3036417961120605

Token 83: ' collections' (ID: 22690)
  Prédit: ' collections'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.0062690856866538525
    2. ' itertools' → logprob: -5.6312689781188965
    3. 'collections' → logprob: -6.0062689781188965
    4. ' ' → logprob: -9.131269454956055
    5. ' math' → logprob: -9.631269454956055
    6. ' collection' → logprob: -11.506269454956055
    7. ' functools' → logprob: -12.006269454956055
    8. ' sys' → logprob: -12.881269454956055
    9. ' random' → logprob: -13.631269454956055
    10. ' heap' → logprob: -13.756269454956055

Token 84: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.6326541900634766
    2. 'import' → logprob: -0.7576541900634766
    3. '	import' → logprob: -10.882654190063477
    4. 'port' → logprob: -11.507654190063477
    5. '```' → logprob: -11.882654190063477
    6. ' defaultdict' → logprob: -12.257654190063477
    7. 'deque' → logprob: -12.882654190063477
    8. ' ' → logprob: -13.007654190063477
    9. ' deque' → logprob: -13.132654190063477
    10. '_import' → logprob: -13.882654190063477

Token 85: ' deque' (ID: 90347)
  Prédit: ' deque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deque' → logprob: -0.005176831968128681
    2. 'deque' → logprob: -5.380177021026611
    3. ' defaultdict' → logprob: -7.505177021026611
    4. ' Counter' → logprob: -12.505176544189453
    5. ' de' → logprob: -14.005176544189453
    6. ' counter' → logprob: -14.255176544189453
    7. ' ' → logprob: -15.130176544189453
    8. 'de' → logprob: -15.255176544189453
    9. ' dequeue' → logprob: -15.505176544189453
    10. '	de' → logprob: -15.880176544189453

Token 86: ' as' (ID: 472)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.49443820118904114
    2. '
' → logprob: -1.4944381713867188
    3. 'deque' → logprob: -3.2444381713867188
    4. 'q' → logprob: -3.3694381713867188
    5. 'b' → logprob: -4.244438171386719
    6. '\' → logprob: -4.369438171386719
    7. 'dq' → logprob: -4.369438171386719
    8. '

' → logprob: -4.994438171386719
    9. '\n' → logprob: -5.119438171386719
    10. '' → logprob: -5.119438171386719

Token 87: ' D' (ID: 415)
  Prédit: ' dq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dq' → logprob: -0.9319693446159363
    2. ' De' → logprob: -1.306969404220581
    3. ' deque' → logprob: -1.306969404220581
    4. 'deque' → logprob: -3.556969404220581
    5. ' ' → logprob: -4.806969165802002
    6. ' D' → logprob: -5.056969165802002
    7. ' d' → logprob: -5.056969165802002
    8. 'Deque' → logprob: -5.306969165802002
    9. 'dq' → logprob: -5.931969165802002
    10. ' de' → logprob: -6.056969165802002

Token 88: 'Q' (ID: 48)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.00754900835454464
    2. 'Q' → logprob: -5.382548809051514
    3. 'q' → logprob: -6.007548809051514
    4. 'queue' → logprob: -9.132549285888672
    5. '```' → logprob: -9.132549285888672
    6. 'que' → logprob: -9.257549285888672
    7. '_queue' → logprob: -10.757549285888672
    8. ' ' → logprob: -10.882549285888672
    9. 'eq' → logprob: -10.882549285888672
    10. '  ' → logprob: -11.132549285888672

Token 89: '

' (ID: 279)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.09762903302907944
    2. 'q' → logprob: -2.8476290702819824
    3. '()' → logprob: -4.597629070281982
    4. '<|end|>' → logprob: -5.097629070281982
    5. '(' → logprob: -5.347629070281982
    6. 'Q' → logprob: -5.597629070281982
    7. 'ue' → logprob: -6.097629070281982
    8. '(queue' → logprob: -6.472629070281982
    9. '

' → logprob: -6.847629070281982
    10. 'queue' → logprob: -6.847629070281982

Token 90: 'def' (ID: 1314)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.8312201499938965
    2. 'q' → logprob: -1.2062201499938965
    3. 'Q' → logprob: -1.5812201499938965
    4. 'queue' → logprob: -4.0812201499938965
    5. '=' → logprob: -5.4562201499938965
    6. '(' → logprob: -5.7062201499938965
    7. '#' → logprob: -5.8312201499938965
    8. '_' → logprob: -5.8312201499938965
    9. 'que' → logprob: -6.0812201499938965
    10. ' ' → logprob: -6.0812201499938965

Token 91: ' dist' (ID: 3601)
  Prédit: ' bfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' bfs' → logprob: -0.015089801512658596
    2. ' shortest' → logprob: -4.890089988708496
    3. ' solve' → logprob: -5.265089988708496
    4. ' BFS' → logprob: -6.765089988708496
    5. ' ' → logprob: -7.140089988708496
    6. ' dfs' → logprob: -9.515089988708496
    7. ' find' → logprob: -10.265089988708496
    8. ' bf' → logprob: -10.515089988708496
    9. ' s' → logprob: -10.515089988708496
    10. ' top' → logprob: -10.640089988708496

Token 92: '(ix' (ID: 183917)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.05131252110004425
    2. 'ance' → logprob: -3.8013124465942383
    3. '(a' → logprob: -4.801312446594238
    4. '(start' → logprob: -5.176312446594238
    5. '(s' → logprob: -5.676312446594238
    6. '():' → logprob: -6.301312446594238
    7. '_' → logprob: -6.426312446594238
    8. '(x' → logprob: -6.426312446594238
    9. '(u' → logprob: -7.051312446594238
    10. 'ances' → logprob: -7.301312446594238

Token 93: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.39616233110427856
    2. 'x' → logprob: -1.3961622714996338
    3. '):' → logprob: -2.646162271499634
    4. 's' → logprob: -5.396162509918213
    5. 'dx' → logprob: -6.896162509918213
    6. ')' → logprob: -7.271162509918213
    7. '):
' → logprob: -7.896162509918213
    8. ' ,' → logprob: -8.146162033081055
    9. 'e' → logprob: -8.396162033081055
    10. 'ex' → logprob: -8.521162033081055

Token 94: ' j' (ID: 441)
  Prédit: 'iy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iy' → logprob: -0.03943279758095741
    2. ' iy' → logprob: -3.2894327640533447
    3. 'jy' → logprob: -7.789433002471924
    4. 'jx' → logprob: -8.289432525634766
    5. 'j' → logprob: -9.039432525634766
    6. ' ' → logprob: -9.039432525634766
    7. ' j' → logprob: -9.164432525634766
    8. ' jy' → logprob: -9.164432525634766
    9. '   ' → logprob: -9.976932525634766
    10. '```' → logprob: -10.351932525634766

Token 95: 'x' (ID: 87)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00589703768491745
    2. ')' → logprob: -5.380897045135498
    3. '):
' → logprob: -6.880897045135498
    4. ''):' → logprob: -9.13089656829834
    5. ',' → logprob: -9.88089656829834
    6. '"):' → logprob: -11.75589656829834
    7. '>):' → logprob: -11.88089656829834
    8. ')：' → logprob: -12.13089656829834
    9. '):
' → logprob: -12.13089656829834
    10. 's' → logprob: -12.25589656829834

Token 96: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.036145564168691635
    2. ',' → logprob: -3.4111454486846924
    3. ')' → logprob: -6.0361456871032715
    4. '):
' → logprob: -9.786145210266113
    5. ' ):' → logprob: -10.411145210266113
    6. ':' → logprob: -12.161145210266113
    7. ')):' → logprob: -12.786145210266113
    8. ' ,' → logprob: -13.036145210266113
    9. '),' → logprob: -13.661145210266113
    10. ')：' → logprob: -13.911145210266113

Token 97: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16196799278259277
    2. '():' → logprob: -1.9119679927825928
    3. '):' → logprob: -6.786968231201172
    4. ' :' → logprob: -8.286968231201172
    5. '   ' → logprob: -9.411968231201172
    6. '(' → logprob: -9.536968231201172
    7. ',' → logprob: -9.536968231201172
    8. ':**' → logprob: -10.411968231201172
    9. ' ():' → logprob: -10.661968231201172
    10. ' ):' → logprob: -11.161968231201172

Token 98: ' vis' (ID: 1909)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.600050151348114
    2. ' dq' → logprob: -1.4750502109527588
    3. ' q' → logprob: -2.975050210952759
    4. ' ' → logprob: -3.475050210952759
    5. 'dq' → logprob: -3.600050210952759
    6. ' d' → logprob: -3.725050210952759
    7. ' dist' → logprob: -4.10004997253418
    8. 'q' → logprob: -4.60004997253418
    9. 'dist' → logprob: -4.60004997253418
    10. ' dp' → logprob: -4.72504997253418

Token 99: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2990918755531311
    2. '=' → logprob: -1.4240918159484863
    3. 'ited' → logprob: -4.049091815948486
    4. '=[' → logprob: -8.799092292785645
    5. '=[]' → logprob: -10.299092292785645
    6. '=[[' → logprob: -10.299092292785645
    7. '   ' → logprob: -10.424092292785645
    8. '```' → logprob: -11.174092292785645
    9. 'it' → logprob: -11.299092292785645
    10. 'isted' → logprob: -11.424092292785645

Token 100: ' set' (ID: 920)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.2879953384399414
    2. ' [[' → logprob: -2.0379953384399414
    3. 'set' → logprob: -2.7879953384399414
    4. ' set' → logprob: -3.4129953384399414
    5. '{' → logprob: -4.537995338439941
    6. 'DQ' → logprob: -4.662995338439941
    7. '[' → logprob: -5.787995338439941
    8. ' [' → logprob: -7.162995338439941
    9. ' {' → logprob: -7.412995338439941
    10. ' D' → logprob: -7.787995338439941

Token 101: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0020499820820987225
    2. '(' → logprob: -7.252049922943115
    3. '((' → logprob: -7.252049922943115
    4. '()
' → logprob: -8.252050399780273
    5. '([(' → logprob: -8.252050399780273
    6. '()\' → logprob: -10.002050399780273
    7. '([' → logprob: -10.502050399780273
    8. '())' → logprob: -11.752050399780273
    9. '()]' → logprob: -12.252050399780273
    10. '();' → logprob: -12.252050399780273

Token 102: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 103: ' Q' (ID: 1486)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.7331575155258179
    2. '   ' → logprob: -1.8581575155258179
    3. 'dq' → logprob: -1.9831575155258179
    4. 'Q' (adapté à ' Q') → logprob: -2.1081576347351074
    5. ' q' → logprob: -3.1081576347351074
    6. ' dq' → logprob: -3.6081576347351074
    7. ' Q' → logprob: -4.483157634735107
    8. 'd' → logprob: -5.608157634735107
    9. ' que' → logprob: -5.733157634735107
    10. 'vis' → logprob: -5.733157634735107

Token 104: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10023309290409088
    2. '=' → logprob: -2.3502330780029297
    3. ' ' → logprob: -11.22523307800293
    4. '=D' → logprob: -11.85023307800293
    5. 'DQ' → logprob: -13.10023307800293
    6. 'Q' → logprob: -13.72523307800293
    7. ',' → logprob: -15.22523307800293
    8. '.' → logprob: -15.35023307800293
    9. ' ' → logprob: -15.35023307800293
    10. '  ' → logprob: -15.35023307800293

Token 105: ' D' (ID: 415)
  Prédit: 'DQ'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DQ' → logprob: -0.05492301657795906
    2. ' D' → logprob: -2.9299230575561523
    3. '<D' → logprob: -10.929923057556152
    4. '(D' → logprob: -11.179923057556152
    5. 'D' → logprob: -13.179923057556152
    6. '	D' → logprob: -13.304923057556152
    7. '=D' → logprob: -13.554923057556152
    8. '[D' → logprob: -13.679923057556152
    9. 'dq' → logprob: -14.304923057556152
    10. ' ' → logprob: -14.429923057556152

Token 106: 'Q' (ID: 48)
  Prédit: 'Q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -1.5094070477061905e-05
    2. '(Q' → logprob: -11.125015258789062
    3. 'q' → logprob: -15.875015258789062
    4. '()' → logprob: -16.750015258789062
    5. '(' → logprob: -16.875015258789062
    6. ' Q' → logprob: -17.125015258789062
    7. '<Q' → logprob: -17.250015258789062
    8. 'QObject' → logprob: -18.000015258789062
    9. '[](' → logprob: -18.500015258789062
    10. '.Q' → logprob: -18.625015258789062

Token 107: '()
' (ID: 1234)
  Prédit: '([('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([(' → logprob: -0.019626563414931297
    2. '()' → logprob: -4.019626617431641
    3. '()
' → logprob: -6.769626617431641
    4. '[(' → logprob: -8.26962661743164
    5. '([' → logprob: -10.39462661743164
    6. '((' → logprob: -10.76962661743164
    7. '(' → logprob: -12.01962661743164
    8. '([[' → logprob: -12.39462661743164
    9. '(((' → logprob: -12.64462661743164
    10. '[((' → logprob: -13.14462661743164

Token 108: '   ' (ID: 271)
  Prédit: '(Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(Q' → logprob: -0.44270777702331543
    2. '(ix' → logprob: -2.0677077770233154
    3. '((' → logprob: -2.4427077770233154
    4. '(' → logprob: -2.4427077770233154
    5. '([(' → logprob: -3.1927077770233154
    6. '([' → logprob: -4.6927080154418945
    7. '[(' → logprob: -5.9427080154418945
    8. '()' → logprob: -6.9427080154418945
    9. '(I' → logprob: -7.5677080154418945
    10. '(
' → logprob: -7.6927080154418945

Token 109: ' Q' (ID: 1486)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' (adapté à ' Q') → logprob: -0.3878890573978424
    2. '(Q' → logprob: -1.13788902759552
    3. ' Q' → logprob: -8.01288890838623
    4. '(' → logprob: -8.13788890838623
    5. '   ' → logprob: -9.26288890838623
    6. '((' → logprob: -9.26288890838623
    7. '()' → logprob: -9.88788890838623
    8. '	Q' → logprob: -10.01288890838623
    9. '(ix' → logprob: -10.01288890838623
    10. '<|end|>' → logprob: -11.01288890838623

Token 110: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0011181884910911322
    2. '.' → logprob: -6.876118183135986
    3. '().' → logprob: -10.001118659973145
    4. 'append' → logprob: -10.626118659973145
    5. '.put' → logprob: -12.251118659973145
    6. '.extend' → logprob: -12.251118659973145
    7. '.enqueue' → logprob: -13.001118659973145
    8. '.push' → logprob: -14.001118659973145
    9. '((' → logprob: -14.501118659973145
    10. '.p' → logprob: -14.501118659973145

Token 111: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -1.0087516784551553e-05
    2. '(' → logprob: -11.75001049041748
    3. '(((' → logprob: -13.25001049041748
    4. '([' → logprob: -15.75001049041748
    5. ' ((' → logprob: -16.250009536743164
    6. '(ix' → logprob: -16.500009536743164
    7. '([(' → logprob: -17.500009536743164
    8. '(([' → logprob: -18.125009536743164
    9. '[(' → logprob: -18.125009536743164
    10. ' ' → logprob: -19.125009536743164

Token 112: 'ix' (ID: 1128)
  Prédit: 'ix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ix' → logprob: -0.009291441179811954
    2. '(ix' → logprob: -5.009291648864746
    3. ' ix' → logprob: -6.009291648864746
    4. '0' → logprob: -10.009291648864746
    5. '[ix' → logprob: -10.009291648864746
    6. '_ix' → logprob: -12.134291648864746
    7. ' (' → logprob: -12.384291648864746
    8. 'ixi' → logprob: -12.509291648864746
    9. '(' → logprob: -13.009291648864746
    10. ' ' → logprob: -13.509291648864746

Token 113: ',j' (ID: 22712)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005502910353243351
    2. ',j' → logprob: -7.750550270080566
    3. ' ,' → logprob: -9.125550270080566
    4. '<|end|>' → logprob: -11.750550270080566
    5. ',w' → logprob: -13.750550270080566
    6. ' ' → logprob: -14.625550270080566
    7. ',
' → logprob: -15.500550270080566
    8. '<|end|>' → logprob: -15.625550270080566
    9. ',x' → logprob: -16.375551223754883
    10. '-' → logprob: -16.500551223754883

Token 114: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.028266755864024162
    2. '))' → logprob: -3.653266668319702
    3. ',' → logprob: -7.028266906738281
    4. ',x' → logprob: -8.028266906738281
    5. '),' → logprob: -8.278266906738281
    6. ')' → logprob: -8.278266906738281
    7. ')))' → logprob: -9.403266906738281
    8. '<|end|>' → logprob: -10.403266906738281
    9. ' ))' → logprob: -10.528266906738281
    10. ')x' → logprob: -10.778266906738281

Token 115: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005322227720171213
    2. '))' → logprob: -5.505322456359863
    3. ' ,' → logprob: -6.755322456359863
    4. '0' → logprob: -10.130322456359863
    5. '))
' → logprob: -11.005322456359863
    6. ' ))' → logprob: -12.255322456359863
    7. ')' → logprob: -12.380322456359863
    8. '),' → logprob: -12.380322456359863
    9. '1' → logprob: -13.255322456359863
    10. ' ' → logprob: -13.880322456359863

Token 116: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004723795282188803
    2. ' ' → logprob: -8.000472068786621
    3. '1' → logprob: -9.000472068786621
    4. '-' → logprob: -11.875472068786621
    5. '))' → logprob: -12.875472068786621
    6. ')' → logprob: -13.625472068786621
    7. ' -' → logprob: -15.187972068786621
    8. '00' → logprob: -15.562972068786621
    9. ')))' → logprob: -15.625472068786621
    10. ' ' → logprob: -15.750472068786621

Token 117: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.018358765169978142
    2. ')' → logprob: -4.0183587074279785
    3. '))
' → logprob: -8.643359184265137
    4. ')
' → logprob: -11.268359184265137
    5. ' ))' → logprob: -11.393359184265137
    6. '));' → logprob: -12.768359184265137
    7. ')))' → logprob: -13.643359184265137
    8. '),' → logprob: -13.643359184265137
    9. '))

' → logprob: -14.393359184265137
    10. ',' → logprob: -14.643359184265137

Token 118: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.25583696365356445
    2. '<|end|>' → logprob: -1.8808369636535645
    3. ')' → logprob: -2.8808369636535645
    4. ' 
' → logprob: -5.2558369636535645
    5. '   ' → logprob: -5.7558369636535645
    6. '  
' → logprob: -6.0058369636535645
    7. ' ' → logprob: -6.8808369636535645
    8. '    
' → logprob: -6.8808369636535645
    9. '\n' → logprob: -7.0058369636535645
    10. '' → logprob: -7.1308369636535645

Token 119: ' answer' (ID: 6052)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.13105615973472595
    2. '   ' → logprob: -2.256056070327759
    3. 'while' → logprob: -4.381056308746338
    4. '	while' → logprob: -5.381056308746338
    5. '    ' → logprob: -7.756056308746338
    6. ' ' → logprob: -8.13105583190918
    7. '
' → logprob: -9.25605583190918
    8. ' 
' → logprob: -9.88105583190918
    9. ')' → logprob: -10.88105583190918
    10. ' vis' → logprob: -11.38105583190918

Token 120: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14269055426120758
    2. '=' → logprob: -2.017690658569336
    3. ' ' → logprob: -11.392690658569336
    4. ',' → logprob: -13.142690658569336
    5. '=None' → logprob: -14.642690658569336
    6. ':' → logprob: -14.892690658569336
    7. ')' → logprob: -15.517690658569336
    8. '  ' → logprob: -15.767690658569336
    9. ' ' → logprob: -15.767690658569336
    10. '=int' → logprob: -16.017690658569336

Token 121: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.4857589602470398
    2. '0' → logprob: -1.1107590198516846
    3. ' -' → logprob: -3.2357590198516846
    4. ' ' → logprob: -4.3607587814331055
    5. 'float' → logprob: -7.1107587814331055
    6. '-h' → logprob: -7.3607587814331055
    7. ' float' → logprob: -7.9857587814331055
    8. '10' → logprob: -8.110758781433105
    9. '-w' → logprob: -8.485758781433105
    10. '-inf' → logprob: -8.735758781433105

Token 122: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.9153885558771435e-06
    2. '2' → logprob: -12.750005722045898
    3. '-' → logprob: -13.250005722045898
    4. '10' → logprob: -15.000005722045898
    5. ' ' → logprob: -15.125005722045898
    6. '100' → logprob: -15.500005722045898
    7. '999' → logprob: -15.625005722045898
    8. '9' → logprob: -16.8750057220459
    9. '3' → logprob: -17.0000057220459
    10. '99' → logprob: -17.3125057220459

Token 123: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.30992579460144043
    2. '<|end|>' → logprob: -1.6849257946014404
    3. '   ' → logprob: -2.6849257946014404
    4. ' while' → logprob: -5.6849260330200195
    5. '<|end|>' → logprob: -5.6849260330200195
    6. '	while' → logprob: -5.8099260330200195
    7. 'while' → logprob: -7.5599260330200195
    8. '    
' → logprob: -7.8099260330200195
    9. ')' → logprob: -7.9349260330200195
    10. '  
' → logprob: -8.05992603302002

Token 124: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.17083679139614105
    2. '<|end|>' → logprob: -2.1708366870880127
    3. ' 
' → logprob: -4.420836925506592
    4. ' while' → logprob: -4.795836925506592
    5. '   ' → logprob: -5.045836925506592
    6. '  
' → logprob: -5.670836925506592
    7. '' → logprob: -5.920836925506592
    8. '	while' → logprob: -6.045836925506592
    9. '    
' → logprob: -6.170836925506592
    10. '<|end|>' → logprob: -6.545836925506592

Token 125: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.5053725838661194
    2. ' while' → logprob: -1.0053725242614746
    3. '   ' → logprob: -3.5053725242614746
    4. '	while' → logprob: -7.630372524261475
    5. ' ' → logprob: -8.630373001098633
    6. '  ' → logprob: -9.505373001098633
    7. 'max' → logprob: -11.380373001098633
    8. 'wh' → logprob: -12.005373001098633
    9. '    ' → logprob: -12.130373001098633
    10. ' ' → logprob: -12.880373001098633

Token 126: ' Q' (ID: 1486)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.2816027104854584
    2. ' Q' → logprob: -1.4066027402877808
    3. ' len' → logprob: -8.78160285949707
    4. 'len' → logprob: -9.03160285949707
    5. '(Q' → logprob: -9.40660285949707
    6. '	Q' → logprob: -9.65660285949707
    7. ' ' → logprob: -11.03160285949707
    8. 'True' → logprob: -12.53160285949707
    9. '(len' → logprob: -12.65660285949707
    10. ' not' → logprob: -13.15660285949707

Token 127: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002532379236072302
    2. '):' → logprob: -6.127532482147217
    3. '>:' → logprob: -8.252532005310059
    4. 'and' → logprob: -10.252532005310059
    5. '():' → logprob: -11.127532005310059
    6. '_:' → logprob: -12.127532005310059
    7. ']:' → logprob: -12.127532005310059
    8. ':not' → logprob: -12.377532005310059
    9. '}:' → logprob: -12.627532005310059
    10. ' and' → logprob: -12.752532005310059

Token 128: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08127569407224655
    2. '   ' → logprob: -3.081275701522827
    3. ',' → logprob: -4.581275463104248
    4. ' (' → logprob: -4.956275463104248
    5. '    ' → logprob: -5.206275463104248
    6. '(' → logprob: -6.081275463104248
    7. ' ' → logprob: -6.456275463104248
    8. '(x' → logprob: -7.331275463104248
    9. '(ix' → logprob: -7.456275463104248
    10. '	' → logprob: -7.581275463104248

Token 129: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.02107686921954155
    2. 'ix' → logprob: -4.646076679229736
    3. 'i' → logprob: -4.771076679229736
    4. '(x' → logprob: -6.521076679229736
    5. ' x' → logprob: -7.646076679229736
    6. 'cx' → logprob: -7.896076679229736
    7. '(i' → logprob: -9.396077156066895
    8. '(ix' → logprob: -9.896077156066895
    9. 'px' → logprob: -10.021077156066895
    10. '   ' → logprob: -10.271077156066895

Token 130: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.029843280091881752
    2. ',y' → logprob: -3.529843330383301
    3. ',j' → logprob: -10.2798433303833
    4. ',x' → logprob: -10.5298433303833
    5. ',q' → logprob: -11.6548433303833
    6. ' ,' → logprob: -11.9048433303833
    7. 'y' → logprob: -12.2798433303833
    8. '_,' → logprob: -12.4048433303833
    9. ',u' → logprob: -13.5298433303833
    10. ',w' → logprob: -13.6548433303833

Token 131: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0017023178515955806
    2. ' y' → logprob: -6.376702308654785
    3. '	y' → logprob: -17.1267032623291
    4. '   ' → logprob: -17.8767032623291
    5. ' ' → logprob: -18.0017032623291
    6. '    ' → logprob: -18.2517032623291
    7. '  ' → logprob: -19.1267032623291
    8. ',y' → logprob: -19.3767032623291
    9. '<|end|>' → logprob: -19.7517032623291
    10. 'x' → logprob: -20.5017032623291

Token 132: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.2127087504486553e-05
    2. ' ,' → logprob: -10.750021934509277
    3. ',z' → logprob: -16.625022888183594
    4. ',length' → logprob: -16.750022888183594
    5. '_,' → logprob: -17.125022888183594
    6. 's' → logprob: -17.250022888183594
    7. 't' → logprob: -17.250022888183594
    8. 'z' → logprob: -17.375022888183594
    9. ',d' → logprob: -17.625022888183594
    10. ',t' → logprob: -17.875022888183594

Token 133: ' lv' (ID: 52146)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.05658882483839989
    2. 'dist' → logprob: -3.431588888168335
    3. 'c' → logprob: -5.181588649749756
    4. 'cost' → logprob: -5.306588649749756
    5. 'steps' → logprob: -5.681588649749756
    6. 'z' → logprob: -6.056588649749756
    7. 'l' → logprob: -6.431588649749756
    8. 'step' → logprob: -7.056588649749756
    9. ' d' → logprob: -7.181588649749756
    10. 'dis' → logprob: -7.306588649749756

Token 134: ' =' (ID: 314)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.10657400637865067
    2. '=' → logprob: -2.356574058532715
    3. 'el' → logprob: -5.606574058532715
    4. ' =' → logprob: -5.981574058532715
    5. 'L' → logprob: -9.606574058532715
    6. '=l' → logprob: -9.606574058532715
    7. '1' → logprob: -12.356574058532715
    8. 'al' → logprob: -12.981574058532715
    9. 'e' → logprob: -13.856574058532715
    10. ')' → logprob: -14.731574058532715

Token 135: ' Q' (ID: 1486)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.3868741989135742
    2. ' Q' → logprob: -1.1368741989135742
    3. ' ' → logprob: -13.511874198913574
    4. '	Q' → logprob: -14.136874198913574
    5. 'DQ' → logprob: -14.386874198913574
    6. '   ' → logprob: -16.26187515258789
    7. ' ' → logprob: -16.26187515258789
    8. 'QD' → logprob: -16.51187515258789
    9. '(Q' → logprob: -16.88687515258789
    10. '<Q' → logprob: -17.26187515258789

Token 136: '.p' (ID: 1201)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02975071594119072
    2. ' =' → logprob: -3.5297508239746094
    3. '=
' → logprob: -16.65475082397461
    4. ' ' → logprob: -16.65475082397461
    5. '   ' → logprob: -17.15475082397461
    6. '＝' → logprob: -18.90475082397461
    7. '.=' → logprob: -19.15475082397461
    8. '.pop' → logprob: -19.52975082397461
    9. '=

' → logprob: -19.65475082397461
    10. '=q' → logprob: -19.77975082397461

Token 137: 'opleft' (ID: 182170)
  Prédit: 'opleft'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'opleft' → logprob: -0.004085878375917673
    2. 'op' → logprob: -5.504086017608643
    3. 'opl' → logprob: -12.629085540771484
    4. 'ople' → logprob: -12.629085540771484
    5. 'opf' → logprob: -14.754085540771484
    6. 'p' → logprob: -15.129085540771484
    7. 'opt' → logprob: -16.754085540771484
    8. 'oplevel' → logprob: -16.879085540771484
    9. 'opup' → logprob: -17.129085540771484
    10. 'оп' → logprob: -17.254085540771484

Token 138: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0006074831471778452
    2. '()
' → logprob: -7.875607490539551
    3. ')' → logprob: -8.62560749053955
    4. '())' → logprob: -10.00060749053955
    5. '(' → logprob: -13.87560749053955
    6. '()

' → logprob: -14.25060749053955
    7. '())
' → logprob: -14.62560749053955
    8. '()
' → logprob: -15.87560749053955
    9. ')
' → logprob: -16.125606536865234
    10. '()`' → logprob: -16.500606536865234

Token 139: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 140: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.38802751898765564
    2. 'if' (adapté à ' if') → logprob: -1.138027548789978
    3. ' vis' → logprob: -7.638027667999268
    4. ' ' → logprob: -7.888027667999268
    5. 'vis' → logprob: -9.26302719116211
    6. '
' → logprob: -9.88802719116211
    7. ' 
' → logprob: -10.01302719116211
    8. '   ' → logprob: -10.26302719116211
    9. '    ' → logprob: -10.38802719116211
    10. '<|end|>' → logprob: -12.13802719116211

Token 141: ' (' (ID: 350)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.03632192313671112
    2. 'x' → logprob: -3.6613218784332275
    3. '(l' → logprob: -6.036322116851807
    4. '(' → logprob: -6.411322116851807
    5. '(answer' → logprob: -6.411322116851807
    6. 'lab' → logprob: -6.536322116851807
    7. '(not' → logprob: -7.286322116851807
    8. 'lv' → logprob: -7.661322116851807
    9. '(y' → logprob: -8.161321640014648
    10. ' (' → logprob: -8.536321640014648

Token 142: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00024048985505942255
    2. '(x' → logprob: -8.500240325927734
    3. ' x' → logprob: -10.500240325927734
    4. '(' → logprob: -12.500240325927734
    5. ' (' → logprob: -13.000240325927734
    6. ')' → logprob: -13.750240325927734
    7. 'ix' → logprob: -14.125240325927734
    8. '0' → logprob: -15.000240325927734
    9. 'y' → logprob: -15.250240325927734
    10. '
' → logprob: -15.500240325927734

Token 143: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12697188556194305
    2. ',y' → logprob: -2.126971960067749
    3. ' ,' → logprob: -10.501972198486328
    4. 'y' → logprob: -11.251972198486328
    5. '==' → logprob: -13.876972198486328
    6. ' ==' → logprob: -14.626972198486328
    7. ',
' → logprob: -15.126972198486328
    8. ',j' → logprob: -15.251972198486328
    9. '-' → logprob: -15.376972198486328
    10. ' y' → logprob: -15.501972198486328

Token 144: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.03804241120815277
    2. ' y' → logprob: -3.2880423069000244
    3. ' ' → logprob: -14.663042068481445
    4. 'x' → logprob: -15.913042068481445
    5. ',y' → logprob: -16.163042068481445
    6. ',' → logprob: -16.663042068481445
    7. '
' → logprob: -16.663042068481445
    8. ' ' → logprob: -16.913042068481445
    9. ')y' → logprob: -17.163042068481445
    10. ')' → logprob: -17.288042068481445

Token 145: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0010463856160640717
    2. 'in' → logprob: -7.376046180725098
    3. ' in' → logprob: -8.001046180725098
    4. 'not' → logprob: -10.501046180725098
    5. ' )' → logprob: -11.001046180725098
    6. ' not' → logprob: -11.001046180725098
    7. ')==' → logprob: -11.376046180725098
    8. '==' → logprob: -11.626046180725098
    9. ' ==' → logprob: -13.251046180725098
    10. ',)' → logprob: -14.501046180725098

Token 146: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.15296734869480133
    2. 'in' → logprob: -2.0279674530029297
    3. ')' → logprob: -4.65296745300293
    4. ' not' → logprob: -7.52796745300293
    5. 'not' → logprob: -9.02796745300293
    6. '==' → logprob: -10.77796745300293
    7. ' ==' → logprob: -11.40296745300293
    8. ' )' → logprob: -11.77796745300293
    9. ' ' → logprob: -12.02796745300293
    10. ')==' → logprob: -13.90296745300293

Token 147: ' vis' (ID: 1909)
  Prédit: 'vis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vis' → logprob: -0.22543677687644958
    2. ' vis' → logprob: -1.600436806678772
    3. '(vis' → logprob: -11.85043716430664
    4. '
' → logprob: -12.72543716430664
    5. ' ' → logprob: -12.85043716430664
    6. 'visited' → logprob: -13.28793716430664
    7. 'vist' → logprob: -13.41293716430664
    8. ' ' → logprob: -13.72543716430664
    9. '.vis' → logprob: -13.91293716430664
    10. ' visi' → logprob: -14.10043716430664

Token 148: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02369845286011696
    2. ':
' → logprob: -3.773698568344116
    3. ' or' → logprob: -8.523698806762695
    4. '       ' → logprob: -8.523698806762695
    5. ':return' → logprob: -10.773698806762695
    6. 'continue' → logprob: -11.648698806762695
    7. '           ' → logprob: -12.023698806762695
    8. ' continue' → logprob: -12.023698806762695
    9. '   ' → logprob: -12.523698806762695
    10. ':
' → logprob: -12.898698806762695

Token 149: ' continue' (ID: 4901)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.29577475786209106
    2. ' continue' → logprob: -1.6707746982574463
    3. '       ' → logprob: -3.2957746982574463
    4. 'continue' → logprob: -3.5457746982574463
    5. '	continue' → logprob: -7.295774936676025
    6. ' continues' → logprob: -7.920774936676025
    7. '
' → logprob: -8.045774459838867
    8. '   ' → logprob: -8.545774459838867
    9. 'Continue' → logprob: -9.545774459838867
    10. '	       ' → logprob: -9.545774459838867

Token 150: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.026651715859770775
    2. '
' → logprob: -4.651651859283447
    3. '   ' → logprob: -4.776651859283447
    4. ' vis' → logprob: -5.151651859283447
    5. 'vis' → logprob: -6.276651859283447
    6. '<|end|>' → logprob: -8.276651382446289
    7. '        
' → logprob: -9.776651382446289
    8. '           ' → logprob: -9.776651382446289
    9. '
' → logprob: -9.901651382446289
    10. '(vis' → logprob: -9.901651382446289

Token 151: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4159453511238098
    2. '   ' → logprob: -1.665945291519165
    3. ' vis' → logprob: -2.165945291519165
    4. 'vis' → logprob: -3.415945291519165
    5. '
' → logprob: -6.290945529937744
    6. '<|end|>' → logprob: -6.915945529937744
    7. '(vis' → logprob: -8.290945053100586
    8. '    ' → logprob: -9.290945053100586
    9. '           ' → logprob: -9.290945053100586
    10. ' ' → logprob: -9.415945053100586

Token 152: ' vis' (ID: 1909)
  Prédit: 'vis'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vis' (adapté à ' vis') → logprob: -0.1604432612657547
    2. ' vis' → logprob: -1.9104433059692383
    3. '       ' → logprob: -8.535443305969238
    4. '   ' → logprob: -11.535443305969238
    5. '
' → logprob: -12.160443305969238
    6. '(vis' → logprob: -13.035443305969238
    7. 'vist' → logprob: -13.160443305969238
    8. 'visi' → logprob: -13.410443305969238
    9. '_vis' → logprob: -14.660443305969238
    10. '           ' → logprob: -14.785443305969238

Token 153: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -9.686778503237292e-05
    2. '.' → logprob: -9.250097274780273
    3. ' .' → logprob: -14.375097274780273
    4. '.Add' → logprob: -17.125097274780273
    5. ').' → logprob: -17.375097274780273
    6. '.setdefault' → logprob: -17.625097274780273
    7. '.update' → logprob: -18.000097274780273
    8. ')add' → logprob: -18.250097274780273
    9. '.append' → logprob: -18.375097274780273
    10. 'add' → logprob: -18.750097274780273

Token 154: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0008180848672054708
    2. '(' → logprob: -7.125818252563477
    3. '(x' → logprob: -11.250818252563477
    4. '(
' → logprob: -14.875818252563477
    5. ' (' → logprob: -15.750818252563477
    6. ' ((' → logprob: -16.375818252563477
    7. ' ' → logprob: -18.000818252563477
    8. '<|end|>' → logprob: -18.625818252563477
    9. '([' → logprob: -18.875818252563477
    10. '(y' → logprob: -19.000818252563477

Token 155: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -8.602024900028482e-05
    2. ' x' → logprob: -9.375085830688477
    3. ')x' → logprob: -14.375085830688477
    4. '(x' → logprob: -15.125085830688477
    5. '<|end|>' → logprob: -15.875085830688477
    6. ')' → logprob: -16.000085830688477
    7. ' ' → logprob: -16.875085830688477
    8. '
' → logprob: -16.875085830688477
    9. '	x' → logprob: -17.625085830688477
    10. ',' → logprob: -18.250085830688477

Token 156: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010380487656220794
    2. ',y' → logprob: -7.001038074493408
    3. ' ,' → logprob: -9.00103759765625
    4. 'y' → logprob: -13.37603759765625
    5. ',
' → logprob: -14.12603759765625
    6. 'x' → logprob: -15.37603759765625
    7. ' y' → logprob: -15.50103759765625
    8. ',x' → logprob: -16.12603759765625
    9. ')' → logprob: -16.50103759765625
    10. ' ' → logprob: -16.50103759765625

Token 157: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.00593117019161582
    2. ' y' → logprob: -5.130931377410889
    3. ')' → logprob: -14.13093090057373
    4. ')y' → logprob: -14.25593090057373
    5. '<|end|>' → logprob: -14.50593090057373
    6. 'x' → logprob: -15.25593090057373
    7. '	y' → logprob: -15.63093090057373
    8. ' ' → logprob: -15.75593090057373
    9. '<|end|>' → logprob: -17.130931854248047
    10. '```' → logprob: -17.380931854248047

Token 158: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.398701548576355
    2. ')' → logprob: -1.148701548576355
    3. '))
' → logprob: -4.6487016677856445
    4. ')
' → logprob: -6.1487016677856445
    5. '       ' → logprob: -10.898701667785645
    6. '));' → logprob: -11.523701667785645
    7. ' )' → logprob: -12.398701667785645
    8. '))
' → logprob: -12.648701667785645
    9. '))

' → logprob: -12.773701667785645
    10. ')))' → logprob: -13.273701667785645

Token 159: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4961722493171692
    2. ' if' → logprob: -1.6211721897125244
    3. '<|end|>' → logprob: -2.3711721897125244
    4. '       ' → logprob: -3.2461721897125244
    5. 'if' → logprob: -3.4961721897125244
    6. '
' → logprob: -3.7461721897125244
    7. ' for' → logprob: -6.6211724281311035
    8. '    
' → logprob: -6.8711724281311035
    9. ',' → logprob: -6.9961724281311035
    10. '    ' → logprob: -7.1211724281311035

Token 160: ' answer' (ID: 6052)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0006943239714019
    2. ' if' → logprob: -8.000694274902344
    3. 'for' → logprob: -8.750694274902344
    4. '       ' → logprob: -8.750694274902344
    5. '   ' → logprob: -10.500694274902344
    6. 'answer' (adapté à ' answer') → logprob: -11.750694274902344
    7. '```' → logprob: -13.250694274902344
    8. '
' → logprob: -13.375694274902344
    9. '        
' → logprob: -13.625694274902344
    10. '#' → logprob: -14.750694274902344

Token 161: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3132719099521637
    2. '=' → logprob: -1.3132718801498413
    3. ' +=' → logprob: -12.313271522521973
    4. ' ' → logprob: -12.438271522521973
    5. '+=' → logprob: -14.438271522521973
    6. '=max' → logprob: -14.563271522521973
    7. ')' → logprob: -15.938271522521973
    8. ',' → logprob: -16.31327247619629
    9. ' =
' → logprob: -16.43827247619629
    10. 'max' → logprob: -16.93827247619629

Token 162: ' lv' (ID: 52146)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.04032479226589203
    2. ' max' → logprob: -3.4153246879577637
    3. 'lv' → logprob: -5.040324687957764
    4. ' lv' → logprob: -8.665325164794922
    5. '	max' → logprob: -12.040325164794922
    6. '(max' → logprob: -12.540325164794922
    7. ' ' → logprob: -14.665325164794922
    8. '   ' → logprob: -14.665325164794922
    9. '[max' → logprob: -15.040325164794922
    10. 'lvl' → logprob: -15.165325164794922

Token 163: ' if' (ID: 538)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5366054177284241
    2. '+' → logprob: -1.2866053581237793
    3. '<|end|>' → logprob: -2.4116053581237793
    4. ' +' → logprob: -3.9116053581237793
    5. '       ' → logprob: -4.411605358123779
    6. ' if' → logprob: -5.036605358123779
    7. '    
' → logprob: -6.286605358123779
    8. '        
' → logprob: -6.411605358123779
    9. '<|end|>' → logprob: -6.411605358123779
    10. 'if' → logprob: -7.036605358123779

Token 164: ' lv' (ID: 52146)
  Prédit: 'lab'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lab' → logprob: -0.05590355396270752
    2. ' lab' → logprob: -3.180903434753418
    3. 'x' → logprob: -5.055903434753418
    4. '(x' → logprob: -6.180903434753418
    5. 'answer' → logprob: -6.805903434753418
    6. ' x' → logprob: -6.930903434753418
    7. ' (' → logprob: -7.305903434753418
    8. '(' → logprob: -8.555903434753418
    9. 'False' → logprob: -8.680903434753418
    10. ' answer' → logprob: -8.805903434753418

Token 165: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.47572973370552063
    2. ' >' → logprob: -0.9757297039031982
    3. '<|end|>' → logprob: -6.725729942321777
    4. 'else' → logprob: -8.350729942321777
    5. ' else' → logprob: -9.225729942321777
    6. ' ' → logprob: -10.725729942321777
    7. '<|end|>' → logprob: -10.850729942321777
    8. ')' → logprob: -11.600729942321777
    9. '>x' → logprob: -11.600729942321777
    10. ' >
' → logprob: -12.225729942321777

Token 166: ' answer' (ID: 6052)
  Prédit: 'answer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'answer' → logprob: -0.006716555915772915
    2. ' answer' → logprob: -5.006716728210449
    3. '	answer' → logprob: -13.75671672821045
    4. '0' → logprob: -16.631715774536133
    5. 'Answer' → logprob: -16.881715774536133
    6. 'ans' → logprob: -17.381715774536133
    7. '.answer' → logprob: -17.881715774536133
    8. '(answer' → logprob: -18.006715774536133
    9. '_answer' → logprob: -18.006715774536133
    10. ' ' → logprob: -18.131715774536133

Token 167: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.00941887404769659
    2. 'else' → logprob: -4.759418964385986
    3. '<|end|>' → logprob: -7.384418964385986
    4. '
' → logprob: -9.884418487548828
    5. '       ' → logprob: -10.634418487548828
    6. ' ' → logprob: -10.759418487548828
    7. '	else' → logprob: -10.884418487548828
    8. '        ' → logprob: -10.884418487548828
    9. '<|end|>' → logprob: -10.884418487548828
    10. ' and' → logprob: -11.509418487548828

Token 168: ' answer' (ID: 6052)
  Prédit: 'answer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'answer' → logprob: -0.0005537479883059859
    2. ' answer' → logprob: -7.500553607940674
    3. '	answer' → logprob: -14.875554084777832
    4. 'ans' → logprob: -15.625554084777832
    5. '(answer' → logprob: -16.000553131103516
    6. 'Answer' → logprob: -16.875553131103516
    7. ' ' → logprob: -17.250553131103516
    8. ' ' → logprob: -17.750553131103516
    9. '.answer' → logprob: -17.875553131103516
    10. '   ' → logprob: -17.875553131103516

Token 169: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0034218779765069485
    2. ' for' → logprob: -6.753421783447266
    3. 'for' → logprob: -6.878421783447266
    4. '
' → logprob: -7.253421783447266
    5. ',' → logprob: -7.878421783447266
    6. 'if' → logprob: -9.503421783447266
    7. ' if' → logprob: -10.753421783447266
    8. '        
' → logprob: -11.003421783447266
    9. '
' → logprob: -12.003421783447266
    10. '<|end|>' → logprob: -12.878421783447266

Token 170: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.087342381477356
    2. ' for' → logprob: -1.087342381477356
    3. 'for' → logprob: -1.837342381477356
    4. '   ' → logprob: -2.0873422622680664
    5. ' if' → logprob: -4.087342262268066
    6. '
' → logprob: -4.587342262268066
    7. 'if' → logprob: -4.837342262268066
    8. ',' → logprob: -5.712342262268066
    9. '        
' → logprob: -6.962342262268066
    10. '<|end|>' → logprob: -7.087342262268066

Token 171: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.015441651456058025
    2. 'if' → logprob: -5.015441417694092
    3. ' for' → logprob: -5.015441417694092
    4. '       ' → logprob: -6.265441417694092
    5. 'dire' → logprob: -9.39044189453125
    6. ' if' → logprob: -11.14044189453125
    7. '   ' → logprob: -11.26544189453125
    8. 'dx' → logprob: -11.39044189453125
    9. 'dirs' → logprob: -11.64044189453125
    10. '	for' → logprob: -12.01544189453125

Token 172: ' xd' (ID: 168675)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.18649254739284515
    2. 'nx' → logprob: -1.8114925622940063
    3. 'xx' → logprob: -5.311492443084717
    4. ' dx' → logprob: -7.436492443084717
    5. '(dx' → logprob: -8.186492919921875
    6. '(nx' → logprob: -8.311492919921875
    7. ' nx' → logprob: -8.936492919921875
    8. 'a' → logprob: -9.061492919921875
    9. 'tx' → logprob: -9.186492919921875
    10. 'i' → logprob: -9.561492919921875

Token 173: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06335395574569702
    2. ' in' → logprob: -2.813354015350342
    3. 'x' → logprob: -7.563354015350342
    4. 'in' → logprob: -8.313353538513184
    5. ' ,' → logprob: -8.813353538513184
    6. 'elta' → logprob: -9.313353538513184
    7. ',y' → logprob: -9.438353538513184
    8. 'iff' → logprob: -9.563353538513184
    9. '_,' → logprob: -9.688353538513184
    10. 'y' → logprob: -9.938353538513184

Token 174: ' yd' (ID: 162068)
  Prédit: 'yd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yd' → logprob: -0.0003959992900490761
    2. ' yd' → logprob: -7.875395774841309
    3. 'ydd' → logprob: -11.375395774841309
    4. '

' → logprob: -13.625395774841309
    5. ' ' → logprob: -13.875395774841309
    6. 'yk' → logprob: -14.500395774841309
    7. ',' → logprob: -14.625395774841309
    8. '   ' → logprob: -15.125395774841309
    9. 'ynd' → logprob: -15.500395774841309
    10. ' ' → logprob: -15.750395774841309

Token 175: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04862279072403908
    2. 'in' → logprob: -3.0486228466033936
    3. ')' → logprob: -11.173623085021973
    4. ',' → logprob: -11.923623085021973
    5. ' ' → logprob: -12.548623085021973
    6. '	in' → logprob: -12.673623085021973
    7. '```' → logprob: -13.173623085021973
    8. '
' → logprob: -13.548623085021973
    9. '   ' → logprob: -13.798623085021973
    10. '  ' → logprob: -13.923623085021973

Token 176: ' ((' (ID: 3536)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.0019031742122024298
    2. '[' → logprob: -6.751903057098389
    3. '((' → logprob: -7.626903057098389
    4. ' [(' → logprob: -8.376903533935547
    5. '(' → logprob: -11.876903533935547
    6. '[[' → logprob: -12.751903533935547
    7. ' ((' → logprob: -13.126903533935547
    8. '[((' → logprob: -13.501903533935547
    9. '[-' → logprob: -14.001903533935547
    10. ' [' → logprob: -14.626903533935547

Token 177: '-' (ID: 12)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7917783856391907
    2. '1' → logprob: -0.9167783856391907
    3. '-' → logprob: -1.916778326034546
    4. ' ' → logprob: -10.041778564453125
    5. '(' → logprob: -10.791778564453125
    6. ' -' → logprob: -12.041778564453125
    7. '(-' → logprob: -12.541778564453125
    8. '−' → logprob: -13.791778564453125
    9. '+' → logprob: -14.041778564453125
    10. ')' → logprob: -15.979278564453125

Token 178: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8193366486229934e-05
    2. '0' → logprob: -11.125018119812012
    3. ' ' → logprob: -13.125018119812012
    4. ',' → logprob: -14.125018119812012
    5. '2' → logprob: -15.937518119812012
    6. '-' → logprob: -16.187519073486328
    7. '<|end|>' → logprob: -16.437519073486328
    8. 'x' → logprob: -16.500019073486328
    9. ')' → logprob: -16.937519073486328
    10. 'h' → logprob: -17.187519073486328

Token 179: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004997743526473641
    2. ' ,' → logprob: -7.625499725341797
    3. '0' → logprob: -11.375499725341797
    4. ',
' → logprob: -15.625499725341797
    5. '<|end|>' → logprob: -16.750499725341797
    6. '),' → logprob: -17.000499725341797
    7. ',),' → logprob: -18.125499725341797
    8. ' ' → logprob: -18.250499725341797
    9. '```' → logprob: -18.375499725341797
    10. '‌,' → logprob: -18.500499725341797

Token 180: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0031777136027812958
    2. ' ' → logprob: -5.753177642822266
    3. ' ' → logprob: -17.253177642822266
    4. ')' → logprob: -18.378177642822266
    5. '  ' → logprob: -18.690677642822266
    6. '۰' → logprob: -19.003177642822266
    7. '1' → logprob: -19.190677642822266
    8. ',' → logprob: -19.253177642822266
    9. '-' → logprob: -19.815677642822266
    10. '
' → logprob: -20.003177642822266

Token 181: '),(' (ID: 54876)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.028884924948215485
    2. '),(' → logprob: -3.6538848876953125
    3. ' ),' → logprob: -6.1538848876953125
    4. '),
' → logprob: -7.7788848876953125
    5. ',' → logprob: -10.778884887695312
    6. '),

' → logprob: -11.778884887695312
    7. ')' → logprob: -12.778884887695312
    8. ' ),
' → logprob: -13.028884887695312
    9. ',),' → logprob: -13.278884887695312
    10. ' ,' → logprob: -14.528884887695312

Token 182: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00594610208645463
    2. '0' → logprob: -5.130946159362793
    3. ' ' → logprob: -11.005946159362793
    4. '+' → logprob: -14.505946159362793
    5. '01' → logprob: -15.380946159362793
    6. '
' → logprob: -16.380945205688477
    7. '2' → logprob: -17.630945205688477
    8. '```' → logprob: -17.818445205688477
    9. '   ' → logprob: -18.068445205688477
    10. ',' → logprob: -18.193445205688477

Token 183: ',' (ID: 11)
  Prédit: ',-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',-' → logprob: -0.4740987718105316
    2. ',' → logprob: -0.974098801612854
    3. '1' → logprob: -11.724099159240723
    4. ',+' → logprob: -11.974099159240723
    5. '-' → logprob: -12.724099159240723
    6. ' ,-' → logprob: -13.224099159240723
    7. ' ,' → logprob: -13.474099159240723
    8. ',
' → logprob: -14.724099159240723
    9. ',-
' → logprob: -15.224099159240723
    10. ',-

' → logprob: -15.724099159240723

Token 184: '1' (ID: 16)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.16022758185863495
    2. '1' → logprob: -1.9102275371551514
    3. ' ' → logprob: -13.53522777557373
    4. ' -' → logprob: -13.66022777557373
    5. '+' → logprob: -14.53522777557373
    6. '−' → logprob: -15.53522777557373
    7. '
' → logprob: -15.78522777557373
    8. '```' → logprob: -16.285226821899414
    9. '' → logprob: -18.597726821899414
    10. '   ' → logprob: -18.722726821899414

Token 185: '),(' (ID: 54876)
  Prédit: '),('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),(' → logprob: -0.033699993044137955
    2. '),' → logprob: -3.4086999893188477
    3. ' ),' → logprob: -10.158699989318848
    4. ',' → logprob: -11.658699989318848
    5. ')' → logprob: -13.033699989318848
    6. ',(' → logprob: -13.283699989318848
    7. '),
' → logprob: -13.908699989318848
    8. '(' → logprob: -14.158699989318848
    9. ',),' → logprob: -14.408699989318848
    10. ' ' → logprob: -15.908699989318848

Token 186: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004528374411165714
    2. '0' → logprob: -7.750452995300293
    3. ' ' → logprob: -10.750452995300293
    4. '+' → logprob: -15.250452995300293
    5. '(' → logprob: -15.750452995300293
    6. '```' → logprob: -16.250452041625977
    7. '   ' → logprob: -16.375452041625977
    8. ',' → logprob: -16.562952041625977
    9. '-' → logprob: -16.937952041625977
    10. '  ' → logprob: -17.687952041625977

Token 187: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004656306933611631
    2. '0' → logprob: -5.3796563148498535
    3. ' ,' → logprob: -10.254655838012695
    4. ' ' → logprob: -14.629655838012695
    5. '```' → logprob: -15.629655838012695
    6. ',
' → logprob: -16.254655838012695
    7. '<|end|>' → logprob: -16.379655838012695
    8. ' ' → logprob: -17.629655838012695
    9. '，' → logprob: -17.692155838012695
    10. ',-' → logprob: -17.754655838012695

Token 188: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.130576806142926e-05
    2. ' ' → logprob: -10.375031471252441
    3. '```' → logprob: -17.000030517578125
    4. ',' → logprob: -17.125030517578125
    5. '1' → logprob: -17.250030517578125
    6. '-' → logprob: -17.250030517578125
    7. ')' → logprob: -18.062530517578125
    8. '۰' → logprob: -18.937530517578125
    9. '   ' → logprob: -19.000030517578125
    10. '<|end|>' → logprob: -19.625030517578125

Token 189: '),(' (ID: 54876)
  Prédit: '),('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),(' → logprob: -0.0013033337891101837
    2. '),' → logprob: -7.251303195953369
    3. ',(' → logprob: -7.751303195953369
    4. ',' → logprob: -8.751303672790527
    5. ' ),' → logprob: -12.626303672790527
    6. '(' → logprob: -13.751303672790527
    7. ' ' → logprob: -16.00130271911621
    8. ' ,' → logprob: -16.00130271911621
    9. ',),' → logprob: -16.62630271911621
    10. ')' → logprob: -17.37630271911621

Token 190: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00030066570616327226
    2. ' ' → logprob: -8.125300407409668
    3. '(' → logprob: -13.125300407409668
    4. ',' → logprob: -13.250300407409668
    5. '   ' → logprob: -15.375300407409668
    6. '-' → logprob: -16.687801361083984
    7. '
' → logprob: -16.750301361083984
    8. '۰' → logprob: -16.812801361083984
    9. '  ' → logprob: -16.875301361083984
    10. ' (' → logprob: -17.250301361083984

Token 191: ',-' (ID: 8202)
  Prédit: ',-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',-' → logprob: -0.0011454568011686206
    2. ',' → logprob: -7.001145362854004
    3. '-' → logprob: -8.376145362854004
    4. ',
' → logprob: -13.751145362854004
    5. ',-

' → logprob: -14.376145362854004
    6. ',-
' → logprob: -14.376145362854004
    7. ' ,-' → logprob: -14.376145362854004
    8. '```' → logprob: -15.876145362854004
    9. ',\
' → logprob: -16.00114631652832
    10. ',--' → logprob: -16.00114631652832

Token 192: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. '))' → logprob: -14.625000953674316
    3. '-' → logprob: -15.250000953674316
    4. ' ' → logprob: -16.250001907348633
    5. ')' → logprob: -16.375001907348633
    6. '```' → logprob: -16.750001907348633
    7. ')))' → logprob: -18.875001907348633
    8. '１' → logprob: -19.312501907348633
    9. '   ' → logprob: -19.625001907348633
    10. '১' → logprob: -19.750001907348633

Token 193: ')):
' (ID: 22530)
  Prédit: ')):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')):' → logprob: -0.14505286514759064
    2. '):' → logprob: -2.395052909851074
    3. ')):
' → logprob: -3.270052909851074
    4. '))' → logprob: -5.520052909851074
    5. '):
' → logprob: -6.520052909851074
    6. ')' → logprob: -8.395052909851074
    7. ')):
' → logprob: -9.270052909851074
    8. ':' → logprob: -11.145052909851074
    9. '));' → logprob: -12.020052909851074
    10. ' ' → logprob: -12.270052909851074

Token 194: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7361096739768982
    2. '       ' → logprob: -1.736109733581543
    3. ' nx' → logprob: -2.361109733581543
    4. '<|end|>' → logprob: -2.736109733581543
    5. '        ' → logprob: -2.861109733581543
    6. ' x' → logprob: -3.611109733581543
    7. 'n' → logprob: -3.736109733581543
    8. ' ' → logprob: -4.361109733581543
    9. ' if' → logprob: -4.486109733581543
    10. 'x' → logprob: -4.486109733581543

Token 195: ' X' (ID: 2127)
  Prédit: 'nx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -0.11659802496433258
    2. ' nx' → logprob: -2.241598129272461
    3. 'xx' → logprob: -6.491598129272461
    4. 'tx' → logprob: -7.241598129272461
    5. 'X' (adapté à ' X') → logprob: -7.366598129272461
    6. 'xn' → logprob: -7.491598129272461
    7. 'dx' → logprob: -9.991598129272461
    8. 'x' → logprob: -10.366598129272461
    9. 'ax' → logprob: -10.366598129272461
    10. 'mx' → logprob: -10.366598129272461

Token 196: ',Y' (ID: 71464)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2541601061820984
    2. ' =' → logprob: -1.7541601657867432
    3. ',' → logprob: -3.004160165786743
    4. '=x' → logprob: -6.504159927368164
    5. ',y' → logprob: -8.879159927368164
    6. ',x' → logprob: -9.129159927368164
    7. ' ,' → logprob: -10.379159927368164
    8. 'x' → logprob: -12.004159927368164
    9. '=y' → logprob: -12.129159927368164
    10. ' ' → logprob: -13.379159927368164

Token 197: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03017333149909973
    2. ' =' → logprob: -3.5301733016967773
    3. '=x' → logprob: -7.780173301696777
    4. ',' → logprob: -12.530173301696777
    5. ',x' → logprob: -14.155173301696777
    6. '=X' → logprob: -15.530173301696777
    7. 'x' → logprob: -15.905173301696777
    8. '＝' → logprob: -16.780174255371094
    9. '=(' → logprob: -16.905174255371094
    10. '=
' → logprob: -17.030174255371094

Token 198: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.018167153000831604
    2. ' x' → logprob: -4.018167018890381
    3. '(x' → logprob: -11.018167495727539
    4. ' ' → logprob: -14.518167495727539
    5. '	x' → logprob: -15.518167495727539
    6. ' (' → logprob: -17.01816749572754
    7. '   ' → logprob: -17.01816749572754
    8. '
' → logprob: -17.01816749572754
    9. '  ' → logprob: -17.51816749572754
    10. ' ' → logprob: -18.14316749572754

Token 199: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.04859202727675438
    2. ' +' → logprob: -3.0485920906066895
    3. '+x' → logprob: -12.798591613769531
    4. '+d' → logprob: -13.923591613769531
    5. ' ' → logprob: -14.673591613769531
    6. '+
' → logprob: -16.04859161376953
    7. ' plus' → logprob: -16.04859161376953
    8. '+D' → logprob: -16.29859161376953
    9. '＋' → logprob: -16.92359161376953
    10. '+=' → logprob: -17.42359161376953

Token 200: 'xd' (ID: 20197)
  Prédit: 'xd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xd' → logprob: -6.2729995988775045e-06
    2. ' xd' → logprob: -12.125006675720215
    3. ' ' → logprob: -15.500006675720215
    4. '
' → logprob: -15.875006675720215
    5. '           ' → logprob: -16.6250057220459
    6. '   ' → logprob: -16.6250057220459
    7. 'xdd' → logprob: -16.7500057220459
    8. '         ' → logprob: -16.8750057220459
    9. 'Xd' → logprob: -16.8750057220459
    10. '  ' → logprob: -17.1250057220459

Token 201: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.029777804389595985
    2. ',y' → logprob: -3.529777765274048
    3. ' ,' → logprob: -10.529777526855469
    4. ',j' → logprob: -15.279777526855469
    5. ',w' → logprob: -15.529777526855469
    6. ',Y' → logprob: -15.904777526855469
    7. ',
' → logprob: -16.65477752685547
    8. 'y' → logprob: -17.15477752685547
    9. ',x' → logprob: -17.52977752685547
    10. ' y' → logprob: -18.65477752685547

Token 202: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.008616108447313309
    2. ' y' → logprob: -4.758615970611572
    3. ' ' → logprob: -14.13361644744873
    4. '   ' → logprob: -15.13361644744873
    5. '	y' → logprob: -15.38361644744873
    6. '  ' → logprob: -16.008615493774414
    7. '<|end|>' → logprob: -16.133615493774414
    8. 'w' → logprob: -16.758615493774414
    9. '    ' → logprob: -16.883615493774414
    10. '           ' → logprob: -17.883615493774414

Token 203: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.04306838661432266
    2. '+y' → logprob: -3.1680684089660645
    3. ' +' → logprob: -10.293067932128906
    4. '+w' → logprob: -11.293067932128906
    5. '+j' → logprob: -11.793067932128906
    6. '+d' → logprob: -11.918067932128906
    7. 'y' → logprob: -13.168067932128906
    8. '+x' → logprob: -13.293067932128906
    9. 'yd' → logprob: -13.543067932128906
    10. '+
' → logprob: -13.918067932128906

Token 204: 'yd' (ID: 3859)
  Prédit: 'yd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yd' → logprob: -0.1273825466632843
    2. '1' → logprob: -2.252382516860962
    3. 'y' → logprob: -4.752382755279541
    4. 'yl' → logprob: -6.627382755279541
    5. 'ym' → logprob: -6.627382755279541
    6. 'ydd' → logprob: -6.752382755279541
    7. 'yw' → logprob: -7.502382755279541
    8. 'yk' → logprob: -7.627382755279541
    9. 'yv' → logprob: -9.002382278442383
    10. 'yx' → logprob: -9.002382278442383

Token 205: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 206: '           ' (ID: 352)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.17959073185920715
    2. '<|end|>' → logprob: -1.9295907020568848
    3. 'if' → logprob: -4.929590702056885
    4. ' ' → logprob: -5.054590702056885
    5. '<|end|>' → logprob: -6.554590702056885
    6. '           ' → logprob: -6.679590702056885
    7. '[' → logprob: -7.304590702056885
    8. ' 
' → logprob: -7.429590702056885
    9. ' valid' → logprob: -8.054591178894043
    10. '            ' → logprob: -8.554591178894043

Token 207: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.10045154392719269
    2. 'if' (adapté à ' if') → logprob: -2.3504514694213867
    3. '           ' → logprob: -9.100451469421387
    4. '<|end|>' → logprob: -9.600451469421387
    5. ' ' → logprob: -10.725451469421387
    6. '	if' → logprob: -10.850451469421387
    7. '            ' → logprob: -12.350451469421387
    8. '0' → logprob: -12.600451469421387
    9. '   ' → logprob: -12.725451469421387
    10. ' 
' → logprob: -13.100451469421387

Token 208: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04924248531460762
    2. ' ' → logprob: -3.0492424964904785
    3. ' not' → logprob: -8.04924201965332
    4. 'X' → logprob: -9.04924201965332
    5. '(' → logprob: -9.42424201965332
    6. 'not' → logprob: -9.79924201965332
    7. ' (' → logprob: -9.92424201965332
    8. ' X' → logprob: -10.79924201965332
    9. '(X' → logprob: -12.67424201965332
    10. 'x' → logprob: -13.67424201965332

Token 209: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006419036653824151
    2. ' ' → logprob: -8.375641822814941
    3. 'not' → logprob: -8.625641822814941
    4. '(' → logprob: -9.000641822814941
    5. 'X' → logprob: -9.500641822814941
    6. ' not' → logprob: -10.625641822814941
    7. '(X' → logprob: -12.625641822814941
    8. '-' → logprob: -13.500641822814941
    9. '(not' → logprob: -13.625641822814941
    10. ' (' → logprob: -13.750641822814941

Token 210: '<=' (ID: 16672)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.45746955275535583
    2. '<=' → logprob: -1.0824695825576782
    3. '<' → logprob: -3.8324694633483887
    4. ' <' → logprob: -5.082469463348389
    5. ' ' → logprob: -8.707469940185547
    6. '<len' → logprob: -9.457469940185547
    7. '<X' → logprob: -9.832469940185547
    8. ',' → logprob: -9.957469940185547
    9. ' ≤' → logprob: -10.707469940185547
    10. '<x' → logprob: -11.207469940185547

Token 211: 'X' (ID: 55)
  Prédit: 'X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -9.662937372922897e-05
    2. ' X' → logprob: -9.250096321105957
    3. '	X' → logprob: -15.500096321105957
    4. ' ' → logprob: -16.250097274780273
    5. 'Y' → logprob: -16.500097274780273
    6. '>X' → logprob: -16.625097274780273
    7. 'x' → logprob: -16.750097274780273
    8. '   ' → logprob: -17.875097274780273
    9. '<|end|>' → logprob: -18.000097274780273
    10. '
' → logprob: -18.000097274780273

Token 212: '<h' (ID: 23843)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.18561328947544098
    2. '<h' → logprob: -2.0606133937835693
    3. '<w' → logprob: -4.06061315536499
    4. ' <' → logprob: -4.06061315536499
    5. 'h' → logprob: -5.06061315536499
    6. 'w' → logprob: -8.060613632202148
    7. '<len' → logprob: -8.310613632202148
    8. 'and' → logprob: -9.060613632202148
    9. ',' → logprob: -9.310613632202148
    10. ' and' → logprob: -9.310613632202148

Token 213: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.20142202079296112
    2. 'and' → logprob: -1.7014219760894775
    3. ' ' → logprob: -12.826421737670898
    4. ',' → logprob: -12.951421737670898
    5. '           ' → logprob: -13.951421737670898
    6. '	and' → logprob: -14.451421737670898
    7. ')' → logprob: -14.576421737670898
    8. ' <' → logprob: -14.826421737670898
    9. '               ' → logprob: -15.326421737670898
    10. '<' → logprob: -15.701421737670898

Token 214: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.011048170737922192
    2. ' ' → logprob: -4.511048316955566
    3. '   ' → logprob: -15.886048316955566
    4. 'X' → logprob: -16.26104736328125
    5. '  ' → logprob: -16.51104736328125
    6. ' ' → logprob: -16.76104736328125
    7. '           ' → logprob: -17.44854736328125
    8. '               ' → logprob: -18.32354736328125
    9. '    ' → logprob: -18.63604736328125
    10. '۰' → logprob: -18.69854736328125

Token 215: '0' (ID: 15)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.47496694326400757
    2. '0' → logprob: -0.9749669432640076
    3. ' ' → logprob: -8.099967002868652
    4. 'X' → logprob: -8.349967002868652
    5. ' Y' → logprob: -8.474967002868652
    6. 'w' → logprob: -9.349967002868652
    7. 'W' → logprob: -9.849967002868652
    8. ' w' → logprob: -15.724967002868652
    9. '	Y' → logprob: -15.724967002868652
    10. '   ' → logprob: -15.849967002868652

Token 216: '<=' (ID: 16672)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.4838157892227173
    2. '<w' → logprob: -1.4838157892227173
    3. '<' → logprob: -2.3588156700134277
    4. ' <' → logprob: -3.9838156700134277
    5. ' w' → logprob: -4.108815670013428
    6. 'W' → logprob: -4.983815670013428
    7. '<W' → logprob: -4.983815670013428
    8. '0' → logprob: -5.608815670013428
    9. 'Y' → logprob: -5.608815670013428
    10. ' ' → logprob: -6.233815670013428

Token 217: 'Y' (ID: 56)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.03785888850688934
    2. 'Y' → logprob: -3.5378589630126953
    3. 'W' → logprob: -4.912858963012695
    4. ' w' → logprob: -7.537858963012695
    5. 'X' → logprob: -9.412858963012695
    6. ' Y' → logprob: -10.537858963012695
    7. '0' → logprob: -11.412858963012695
    8. '   ' → logprob: -11.787858963012695
    9. ' ' → logprob: -11.850358963012695
    10. 'y' → logprob: -11.912858963012695

Token 218: '<w' (ID: 45719)
  Prédit: '<w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<w' → logprob: -0.06744852662086487
    2. 'w' → logprob: -2.817448616027832
    3. '<' → logprob: -5.442448616027832
    4. ' <' → logprob: -7.817448616027832
    5. '<W' → logprob: -8.067448616027832
    6. '&w' → logprob: -9.067448616027832
    7. 'and' → logprob: -9.067448616027832
    8. '<h' → logprob: -9.692448616027832
    9. ' w' → logprob: -10.317448616027832
    10. '<len' → logprob: -10.817448616027832

Token 219: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.04863778129220009
    2. 'and' → logprob: -3.048637866973877
    3. '           ' → logprob: -11.173637390136719
    4. ':' → logprob: -11.673637390136719
    5. ':
' → logprob: -11.673637390136719
    6. '<|end|>' → logprob: -11.673637390136719
    7. '               ' → logprob: -13.048637390136719
    8. '            ' → logprob: -13.298637390136719
    9. ',' → logprob: -13.298637390136719
    10. '          ' → logprob: -13.548637390136719

Token 220: ' lab' (ID: 9887)
  Prédit: 'lab'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lab' → logprob: -0.007675010710954666
    2. ' lab' → logprob: -4.8826751708984375
    3. '           ' → logprob: -10.882675170898438
    4. '   ' → logprob: -11.632675170898438
    5. ' ' → logprob: -11.757675170898438
    6. 'not' → logprob: -12.632675170898438
    7. '(' → logprob: -12.757675170898438
    8. '               ' → logprob: -13.007675170898438
    9. '                   ' → logprob: -13.070175170898438
    10. ' (' → logprob: -13.195175170898438

Token 221: '[X' (ID: 118621)
  Prédit: '[X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[X' → logprob: -8.41866585687967e-06
    2. 'X' → logprob: -12.250008583068848
    3. '][' → logprob: -13.000008583068848
    4. '[' → logprob: -15.000008583068848
    5. '[x' → logprob: -15.000008583068848
    6. ' [' → logprob: -15.500008583068848
    7. '```' → logprob: -16.00000762939453
    8. '\[' → logprob: -16.75000762939453
    9. '[
' → logprob: -16.87500762939453
    10. '[I' → logprob: -17.12500762939453

Token 222: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.004118173383176327
    2. '[X' → logprob: -5.504117965698242
    3. 'X' → logprob: -11.504117965698242
    4. '[' → logprob: -11.629117965698242
    5. ']' → logprob: -12.129117965698242
    6. ''][' → logprob: -12.379117965698242
    7. ' ][' → logprob: -12.504117965698242
    8. '"][' → logprob: -12.629117965698242
    9. ']][' → logprob: -13.754117965698242
    10. ')[' → logprob: -14.629117965698242

Token 223: 'Y' (ID: 56)
  Prédit: 'Y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -1.3544423381972592e-05
    2. ' Y' → logprob: -11.25001335144043
    3. 'YX' → logprob: -16.25001335144043
    4. ')' → logprob: -16.37501335144043
    5. '	Y' → logprob: -16.37501335144043
    6. ' ' → logprob: -16.50001335144043
    7. '
' → logprob: -17.25001335144043
    8. ']' → logprob: -17.37501335144043
    9. 'X' → logprob: -18.50001335144043
    10. '   ' → logprob: -18.62501335144043

Token 224: ']!='' (ID: 187656)
  Prédit: ']=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']==' → logprob: -0.8057419657707214
    2. ']' → logprob: -1.0557420253753662
    3. ']=='' → logprob: -2.055742025375366
    4. '==' → logprob: -3.055742025375366
    5. '=='' → logprob: -4.305741786956787
    6. ']!='' → logprob: -4.805741786956787
    7. ']!=' → logprob: -6.180741786956787
    8. ' ==' → logprob: -6.430741786956787
    9. '!='' → logprob: -6.430741786956787
    10. '']=='' → logprob: -7.055741786956787

Token 225: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.00010819212911883369
    2. ''#' → logprob: -10.000107765197754
    3. ''' → logprob: -10.625107765197754
    4. '#:' → logprob: -10.750107765197754
    5. '#"' → logprob: -11.750107765197754
    6. '.' → logprob: -13.125107765197754
    7. ' ' → logprob: -13.750107765197754
    8. '#w' → logprob: -14.125107765197754
    9. ' #' → logprob: -14.250107765197754
    10. ' '#'' → logprob: -14.625107765197754

Token 226: '':
' (ID: 7669)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.08641771972179413
    2. ':' → logprob: -2.8364176750183105
    3. 'and' → logprob: -4.0864176750183105
    4. '):' → logprob: -5.5864176750183105
    5. ':
' → logprob: -5.8364176750183105
    6. ')' → logprob: -8.211418151855469
    7. '):
' → logprob: -8.461418151855469
    8. ' :' → logprob: -9.836418151855469
    9. '<|end|>' → logprob: -9.961418151855469
    10. '           ' → logprob: -10.336418151855469

Token 227: '               ' (ID: 506)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.67655348777771
    2. '               ' → logprob: -0.80155348777771
    3. ' Q' → logprob: -3.30155348777771
    4. '           ' → logprob: -6.551553726196289
    5. 'and' → logprob: -6.551553726196289
    6. '                   ' → logprob: -6.926553726196289
    7. ':' → logprob: -7.426553726196289
    8. ':
' → logprob: -7.926553726196289
    9. 'Q' → logprob: -8.176553726196289
    10. ',Q' → logprob: -8.301553726196289

Token 228: ' Q' (ID: 1486)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' (adapté à ' Q') → logprob: -0.004087659064680338
    2. ' Q' → logprob: -5.504087448120117
    3. '               ' → logprob: -12.504087448120117
    4. '                   ' → logprob: -13.004087448120117
    5. 'if' → logprob: -13.504087448120117
    6. ' if' → logprob: -13.754087448120117
    7. '	Q' → logprob: -15.379087448120117
    8. ' ' → logprob: -16.004087448120117
    9. ',Q' → logprob: -16.004087448120117
    10. '   ' → logprob: -16.254087448120117

Token 229: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00014442270912695676
    2. '.' → logprob: -8.875144004821777
    3. 'append' → logprob: -13.750144004821777
    4. ' .' → logprob: -14.375144004821777
    5. '.p' → logprob: -14.375144004821777
    6. '.put' → logprob: -14.375144004821777
    7. '.extend' → logprob: -14.750144004821777
    8. '.enqueue' → logprob: -14.875144004821777
    9. ').' → logprob: -15.125144004821777
    10. '.app' → logprob: -15.375144004821777

Token 230: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0016829170053824782
    2. '(X' → logprob: -6.501682758331299
    3. '(' → logprob: -8.626683235168457
    4. '(x' → logprob: -14.001683235168457
    5. ' (' → logprob: -14.876683235168457
    6. ' ((' → logprob: -16.62668228149414
    7. '<|end|>' → logprob: -17.00168228149414
    8. '(
' → logprob: -17.12668228149414
    9. '```' → logprob: -18.62668228149414
    10. '([' → logprob: -18.62668228149414

Token 231: 'X' (ID: 55)
  Prédit: 'X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -4.60414821645827e-06
    2. ' X' → logprob: -12.875004768371582
    3. '(X' → logprob: -13.125004768371582
    4. '(' → logprob: -18.375003814697266
    5. '	X' → logprob: -19.000003814697266
    6. ')' → logprob: -19.375003814697266
    7. 'x' → logprob: -19.625003814697266
    8. 'Q' → logprob: -20.125003814697266
    9. '[X' → logprob: -20.125003814697266
    10. ' (' → logprob: -20.500003814697266

Token 232: ',Y' (ID: 71464)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12883421778678894
    2. ',Y' → logprob: -2.1288342475891113
    3. ' ,' → logprob: -6.753834247589111
    4. 'Y' → logprob: -7.503834247589111
    5. ',X' → logprob: -9.128833770751953
    6. ',y' → logprob: -10.253833770751953
    7. 'X' → logprob: -11.253833770751953
    8. ',
' → logprob: -12.003833770751953
    9. ',Q' → logprob: -12.128833770751953
    10. ' Y' → logprob: -12.753833770751953

Token 233: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0022799111902713776
    2. ' ,' → logprob: -6.752279758453369
    3. ',l' → logprob: -7.377279758453369
    4. '+' → logprob: -8.752280235290527
    5. '))' → logprob: -8.877280235290527
    6. ',X' → logprob: -10.252280235290527
    7. ',(' → logprob: -10.877280235290527
    8. ',Y' → logprob: -11.002280235290527
    9. ',ll' → logprob: -11.002280235290527
    10. ',L' → logprob: -11.502280235290527

Token 234: 'lv' (ID: 33940)
  Prédit: 'lv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lv' → logprob: -0.0002043748099822551
    2. ' lv' → logprob: -8.500204086303711
    3. 'lvl' → logprob: -14.500204086303711
    4. ' ' → logprob: -16.75020408630371
    5. '_lv' → logprob: -16.87520408630371
    6. 'Lv' → logprob: -16.87520408630371
    7. 'lev' → logprob: -17.12520408630371
    8. '
' → logprob: -17.37520408630371
    9. '```' → logprob: -17.50020408630371
    10. '   ' → logprob: -17.50020408630371

Token 235: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.038042180240154266
    2. ' +' → logprob: -3.2880420684814453
    3. '1' → logprob: -15.163042068481445
    4. ' ' → logprob: -15.413042068481445
    5. ' plus' → logprob: -16.288042068481445
    6. '＋' → logprob: -16.538042068481445
    7. '+
' → logprob: -17.038042068481445
    8. ')+' → logprob: -17.538042068481445
    9. '   ' → logprob: -18.038042068481445
    10. '2' → logprob: -18.163042068481445

Token 236: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.607391408877447e-05
    2. ' ' → logprob: -10.250036239624023
    3. ')' → logprob: -15.250036239624023
    4. '))' → logprob: -15.625036239624023
    5. '```' → logprob: -16.125036239624023
    6. '   ' → logprob: -16.375036239624023
    7. '
' → logprob: -17.500036239624023
    8. '  ' → logprob: -18.000036239624023
    9. ')))' → logprob: -18.000036239624023
    10. '<|end|>' → logprob: -19.000036239624023

Token 237: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00046844579628668725
    2. '))
' → logprob: -8.250468254089355
    3. ')' → logprob: -8.500468254089355
    4. ')))' → logprob: -12.875468254089355
    5. ' ))' → logprob: -14.750468254089355
    6. ')
' → logprob: -14.875468254089355
    7. '       ' → logprob: -16.250469207763672
    8. '))

' → logprob: -16.500469207763672
    9. '           ' → logprob: -16.500469207763672
    10. '   ' → logprob: -16.875469207763672

Token 238: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003140639513731003
    2. ')' → logprob: -6.378140449523926
    3. '<|end|>' → logprob: -7.503140449523926
    4. '       ' → logprob: -8.503140449523926
    5. ' return' → logprob: -8.503140449523926
    6. 'return' → logprob: -8.503140449523926
    7. '               ' → logprob: -9.628140449523926
    8. '           ' → logprob: -9.878140449523926
    9. '    ' → logprob: -10.128140449523926
    10. '.' → logprob: -10.878140449523926

Token 239: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6414332389831543
    2. ')' → logprob: -1.2664332389831543
    3. 'return' (adapté à ' return') → logprob: -2.3914332389831543
    4. '<|end|>' → logprob: -2.8914332389831543
    5. ' return' → logprob: -3.5164332389831543
    6. '	return' → logprob: -5.516433238983154
    7. ':return' → logprob: -5.766433238983154
    8. ' ' → logprob: -6.516433238983154
    9. ')return' → logprob: -7.016433238983154
    10. '    ' → logprob: -7.266433238983154

Token 240: ' answer' (ID: 6052)
  Prédit: 'answer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'answer' → logprob: -0.0019287518225610256
    2. ' answer' → logprob: -6.251928806304932
    3. '(answer' → logprob: -16.376928329467773
    4. '	answer' → logprob: -17.001928329467773
    5. ' ' → logprob: -18.126928329467773
    6. 'ans' → logprob: -19.001928329467773
    7. ' ' → logprob: -19.251928329467773
    8. 'int' → logprob: -20.376928329467773
    9. 'Answer' → logprob: -20.376928329467773
    10. '0' → logprob: -20.376928329467773

Token 241: '

' (ID: 279)
  Prédit: 'stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stdin' → logprob: -0.5147660970687866
    2. '���' → logprob: -1.1397660970687866
    3. '_' → logprob: -3.639766216278076
    4. 'sys' → logprob: -4.139766216278076
    5. ' ' → logprob: -4.389766216278076
    6. 'std' → logprob: -5.764766216278076
    7. 's' → logprob: -5.764766216278076
    8. '��' → logprob: -5.764766216278076
    9. '___' → logprob: -5.889766216278076
    10. '�' → logprob: -6.639766216278076

Token 242: 'sm' (ID: 5635)
  Prédit: 'stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stdin' → logprob: -0.3897005021572113
    2. '���' → logprob: -1.7647005319595337
    3. '_' → logprob: -3.514700412750244
    4. 's' → logprob: -4.014700412750244
    5. 'sys' → logprob: -4.014700412750244
    6. 'S' → logprob: -4.014700412750244
    7. 'for' → logprob: -4.639700412750244
    8. 'std' → logprob: -4.639700412750244
    9. '___' → logprob: -4.764700412750244
    10. '��' → logprob: -5.889700412750244

Token 243: 'iley' (ID: 27669)
  Prédit: 'ax'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ax' → logprob: -0.7353628873825073
    2. 'a' → logprob: -0.9853628873825073
    3. '=' → logprob: -2.360363006591797
    4. ' =' → logprob: -3.485363006591797
    5. 'all' → logprob: -4.360363006591797
    6. 'aller' → logprob: -5.610363006591797
    7. 'al' → logprob: -5.860363006591797
    8. '(a' → logprob: -7.860363006591797
    9. 'x' → logprob: -7.985363006591797
    10. '=max' → logprob: -7.985363006591797

Token 244: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4324423372745514
    2. '<|end|>' → logprob: -2.0574424266815186
    3. '=' → logprob: -2.3074424266815186
    4. 'stdin' → logprob: -2.6824424266815186
    5. '(stdin' → logprob: -4.5574421882629395
    6. '.stdin' → logprob: -4.5574421882629395
    7. ',' → logprob: -4.9324421882629395
    8. ')' → logprob: -5.3074421882629395
    9. ' stdin' → logprob: -5.5574421882629395
    10. 'in' → logprob: -6.5574421882629395

Token 245: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3203330338001251
    2. '-' → logprob: -1.6953330039978027
    3. '[]' → logprob: -2.6953330039978027
    4. 'max' → logprob: -4.945333003997803
    5. '[' → logprob: -5.445333003997803
    6. 'sum' → logprob: -5.445333003997803
    7. 'float' → logprob: -7.320333003997803
    8. 'False' → logprob: -7.320333003997803
    9. '(' → logprob: -7.320333003997803
    10. '"' → logprob: -7.570333003997803

Token 246: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.46274131536483765
    2. '-' → logprob: -2.2127413749694824
    3. '""' → logprob: -2.5877413749694824
    4. '''' → logprob: -2.9627413749694824
    5. '[]' → logprob: -2.9627413749694824
    6. 'max' → logprob: -3.7127413749694824
    7. '"' → logprob: -4.212741374969482
    8. 'float' → logprob: -4.212741374969482
    9. 'False' → logprob: -5.087741374969482
    10. ''' → logprob: -5.962741374969482

Token 247: '
' (ID: 198)
  Prédit: 'stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stdin' → logprob: -0.013750532642006874
    2. '���' → logprob: -5.5137505531311035
    3. '(stdin' → logprob: -6.0137505531311035
    4. '_' → logprob: -6.2637505531311035
    5. '.stdin' → logprob: -6.8887505531311035
    6. ' stdin' → logprob: -7.0137505531311035
    7. 'for' → logprob: -7.5137505531311035
    8. 'sys' → logprob: -7.8887505531311035
    9. 'in' → logprob: -8.388750076293945
    10. 's' → logprob: -8.638750076293945

Token 248: 'rng' (ID: 176450)
  Prédit: 'stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stdin' → logprob: -0.685661256313324
    2. 'for' → logprob: -1.0606613159179688
    3. '���' → logprob: -2.3106613159179688
    4. '_' → logprob: -4.935661315917969
    5. ' ' → logprob: -5.060661315917969
    6. 'sys' → logprob: -5.185661315917969
    7. ' for' → logprob: -5.560661315917969
    8. 'in' → logprob: -6.060661315917969
    9. 'from' → logprob: -6.060661315917969
    10. 's' → logprob: -6.060661315917969

Token 249: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5328226089477539
    2. ' =' → logprob: -0.9078226089477539
    3. '(' → logprob: -5.782822608947754
    4. 'ge' → logprob: -6.157822608947754
    5. 'e' → logprob: -7.032822608947754
    6. ' ' → logprob: -7.157822608947754
    7. 'range' → logprob: -7.157822608947754
    8. '(range' → logprob: -7.407822608947754
    9. '_' → logprob: -7.782822608947754
    10. 'nge' → logprob: -8.657822608947754

Token 250: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.057014431804418564
    2. 'h' → logprob: -3.3070144653320312
    3. ' range' → logprob: -4.432014465332031
    4. '(h' → logprob: -5.307014465332031
    5. '(range' → logprob: -7.182014465332031
    6. ' h' → logprob: -7.807014465332031
    7. '(' → logprob: -8.807014465332031
    8. '((' → logprob: -9.307014465332031
    9. 'lambda' → logprob: -9.307014465332031
    10. '10' → logprob: -9.432014465332031

Token 251: '
' (ID: 198)
  Prédit: '(h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.0005236041033640504
    2. '(' → logprob: -7.625523567199707
    3. '(sm' → logprob: -11.000523567199707
    4. '(len' → logprob: -11.250523567199707
    5. '(w' → logprob: -13.000523567199707
    6. '(r' → logprob: -13.375523567199707
    7. '(l' → logprob: -14.625523567199707
    8. '(max' → logprob: -15.000523567199707
    9. '(H' → logprob: -15.125523567199707
    10. '((' → logprob: -15.375523567199707

Token 252: 'for' (ID: 1938)
  Prédit: 'stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stdin' → logprob: -0.46972334384918213
    2. '(stdin' → logprob: -1.0947233438491821
    3. '___' → logprob: -4.469723224639893
    4. '(' → logprob: -5.094723224639893
    5. '_' → logprob: -5.969723224639893
    6. 'for' → logprob: -6.094723224639893
    7. 'sys' → logprob: -6.219723224639893
    8. 'range' → logprob: -6.344723224639893
    9. '('' → logprob: -6.469723224639893
    10. '__' → logprob: -6.469723224639893

Token 253: ' ii' (ID: 28354)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.023706484586000443
    2. ' ix' → logprob: -4.523706436157227
    3. ' x' → logprob: -4.773706436157227
    4. 'i' → logprob: -5.898706436157227
    5. ' _' → logprob: -7.898706436157227
    6. 'x' → logprob: -8.148706436157227
    7. ' ' → logprob: -8.273706436157227
    8. 'ix' → logprob: -8.648706436157227
    9. '_' → logprob: -9.273706436157227
    10. ' h' → logprob: -9.773706436157227

Token 254: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.09091784805059433
    2. 'in' → logprob: -2.4659178256988525
    3. ' ' → logprob: -6.340918064117432
    4. '(' → logprob: -9.465917587280273
    5. '_' → logprob: -9.590917587280273
    6. '  ' → logprob: -11.340917587280273
    7. '   ' → logprob: -11.590917587280273
    8. '	in' → logprob: -11.965917587280273
    9. ' i' → logprob: -12.090917587280273
    10. ' _' → logprob: -12.215917587280273

Token 255: ' rng' (ID: 76666)
  Prédit: 'rng'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rng' → logprob: -0.15103751420974731
    2. ' rng' → logprob: -2.6510374546051025
    3. 'range' → logprob: -3.0260374546051025
    4. 'r' → logprob: -4.026037693023682
    5. ' range' → logprob: -6.776037693023682
    6. '(' → logprob: -7.526037693023682
    7. 'rg' → logprob: -7.776037693023682
    8. '(r' → logprob: -7.901037693023682
    9. 'h' → logprob: -8.401037216186523
    10. ' ' → logprob: -8.901037216186523

Token 256: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -5.512236498361744e-07
    2. '(' → logprob: -14.875000953674316
    3. 'h' → logprob: -16.125
    4. '(len' → logprob: -17.75
    5. '((' → logprob: -20.125
    6. '(H' → logprob: -20.125
    7. ' (' → logprob: -20.625
    8. '(
' → logprob: -20.75
    9. '   ' → logprob: -21.125
    10. '(x' → logprob: -21.75

Token 257: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5759934782981873
    2. '):' → logprob: -0.8259934782981873
    3. ':' → logprob: -11.200993537902832
    4. ' ):' → logprob: -11.450993537902832
    5. '):
' → logprob: -11.825993537902832
    6. ')' → logprob: -11.950993537902832
    7. ' ):
' → logprob: -12.075993537902832
    8. '   ' → logprob: -12.700993537902832
    9. '):

' → logprob: -12.825993537902832
    10. 'for' → logprob: -13.200993537902832

Token 258: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.22331617772579193
    2. 'for' → logprob: -2.098316192626953
    3. '   ' → logprob: -2.598316192626953
    4. '	for' → logprob: -5.848316192626953
    5. ' ' → logprob: -8.723316192626953
    6. '   ' → logprob: -11.723316192626953
    7. '  ' → logprob: -11.723316192626953
    8. '    ' → logprob: -12.223316192626953
    9. '```' → logprob: -12.848316192626953
    10. '    
' → logprob: -13.348316192626953

Token 259: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.3148808479309082
    2. ' for' → logprob: -1.3148808479309082
    3. '   ' → logprob: -6.439880847930908
    4. ' ' → logprob: -11.06488037109375
    5. '	for' → logprob: -12.56488037109375
    6. '    ' → logprob: -14.18988037109375
    7. '  ' → logprob: -14.81488037109375
    8. 'j' → logprob: -15.18988037109375
    9. 'jx' → logprob: -15.56488037109375
    10. 'jj' → logprob: -15.81488037109375

Token 260: ' jj' (ID: 79791)
  Prédit: ' jj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' jj' → logprob: -0.048955898731946945
    2. 'jj' → logprob: -3.0489559173583984
    3. ' j' → logprob: -8.298955917358398
    4. 'j' → logprob: -9.548955917358398
    5. 'jx' → logprob: -10.548955917358398
    6. ' ' → logprob: -11.673955917358398
    7. ' jy' → logprob: -11.923955917358398
    8. 'jy' → logprob: -13.298955917358398
    9. '   ' → logprob: -13.923955917358398
    10. '```' → logprob: -14.173955917358398

Token 261: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.08328722417354584
    2. ' in' → logprob: -2.958287239074707
    3. '(r' → logprob: -3.583287239074707
    4. '(' → logprob: -9.083287239074707
    5. 'r' → logprob: -10.083287239074707
    6. ')' → logprob: -11.208287239074707
    7. '   ' → logprob: -11.333287239074707
    8. ' ' → logprob: -11.583287239074707
    9. ' (' → logprob: -11.708287239074707
    10. ' rng' → logprob: -12.458287239074707

Token 262: ' rng' (ID: 76666)
  Prédit: 'rng'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rng' → logprob: -0.010138633660972118
    2. 'range' → logprob: -5.260138511657715
    3. ' rng' → logprob: -5.385138511657715
    4. 'r' → logprob: -8.510138511657715
    5. ' range' → logprob: -10.385138511657715
    6. 'w' → logprob: -10.635138511657715
    7. 'rang' → logprob: -10.635138511657715
    8. 'rg' → logprob: -12.510138511657715
    9. '_rng' → logprob: -12.510138511657715
    10. ' ' → logprob: -12.635138511657715

Token 263: '(w' (ID: 7420)
  Prédit: '(w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(w' → logprob: -2.816093228830141e-06
    2. 'w' → logprob: -13.00000286102295
    3. '(' → logprob: -14.50000286102295
    4. ' (' → logprob: -17.125001907348633
    5. '	w' → logprob: -19.125001907348633
    6. '<w' → logprob: -20.125001907348633
    7. '(W' → logprob: -20.125001907348633
    8. '(
' → logprob: -20.375001907348633
    9. '(h' → logprob: -20.375001907348633
    10. '   ' → logprob: -20.625001907348633

Token 264: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.18214978277683258
    2. '):
' → logprob: -1.8071497678756714
    3. '       ' → logprob: -6.182149887084961
    4. '   ' → logprob: -8.807149887084961
    5. ':' → logprob: -9.557149887084961
    6. ')' → logprob: -9.682149887084961
    7. ' ):' → logprob: -11.182149887084961
    8. '+' → logprob: -11.432149887084961
    9. '):
' → logprob: -11.432149887084961
    10. '):

' → logprob: -11.932149887084961

Token 265: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013941699638962746
    2. ' if' → logprob: -4.388941764831543
    3. 'if' → logprob: -6.763941764831543
    4. '   ' → logprob: -9.263941764831543
    5. ':' → logprob: -10.138941764831543
    6. ',' → logprob: -10.638941764831543
    7. '	' → logprob: -11.138941764831543
    8. '    ' → logprob: -11.263941764831543
    9. '#' → logprob: -11.263941764831543
    10. ' ' → logprob: -11.763941764831543

Token 266: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.03609037399291992
    2. ' if' → logprob: -3.41109037399292
    3. '           ' → logprob: -6.28609037399292
    4. 'sm' → logprob: -7.78609037399292
    5. 'print' → logprob: -9.411090850830078
    6. '       ' → logprob: -9.661090850830078
    7. ' sm' → logprob: -12.661090850830078
    8. '#' → logprob: -12.786090850830078
    9. '   ' → logprob: -12.911090850830078
    10. '        ' → logprob: -13.161090850830078

Token 267: ' lab' (ID: 9887)
  Prédit: ' lab'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lab' → logprob: -0.03805606812238693
    2. 'lab' → logprob: -3.2880561351776123
    3. ' ' → logprob: -11.913056373596191
    4. ' ' → logprob: -12.663056373596191
    5. ' лаб' → logprob: -14.038056373596191
    6. 'Lab' → logprob: -14.413056373596191
    7. ' labyrinth' → logprob: -14.413056373596191
    8. '   ' → logprob: -14.538056373596191
    9. '(' → logprob: -14.663056373596191
    10. ' labo' → logprob: -14.913056373596191

Token 268: '[ii' (ID: 75075)
  Prédit: '[ii'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[ii' → logprob: -6.153795766294934e-06
    2. '[j' → logprob: -12.875005722045898
    3. '[ix' → logprob: -13.125005722045898
    4. '[i' → logprob: -13.625005722045898
    5. ' [' → logprob: -16.0000057220459
    6. '(ii' → logprob: -16.5000057220459
    7. '[' → logprob: -16.6250057220459
    8. '
' → logprob: -17.8750057220459
    9. '[[' → logprob: -18.2500057220459
    10. 'ii' → logprob: -18.3750057220459

Token 269: '][' (ID: 2696)
  Prédit: '[ii'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[ii' → logprob: -0.001295596593990922
    2. '[j' → logprob: -7.001295566558838
    3. '][' → logprob: -8.001296043395996
    4. '[' → logprob: -10.876296043395996
    5. '[i' → logprob: -11.376296043395996
    6. ''[' → logprob: -12.376296043395996
    7. ']' → logprob: -13.001296043395996
    8. ''][' → logprob: -13.001296043395996
    9. '!='' → logprob: -13.126296043395996
    10. '(ii' → logprob: -13.376296043395996

Token 270: 'jj' (ID: 41699)
  Prédit: 'jj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jj' → logprob: -5.013994814362377e-05
    2. ' jj' → logprob: -10.25005054473877
    3. '[j' → logprob: -11.62505054473877
    4. ''' → logprob: -13.12505054473877
    5. ']' → logprob: -14.00005054473877
    6. 'j' → logprob: -14.50005054473877
    7. 'ii' → logprob: -14.62505054473877
    8. '```' → logprob: -14.87505054473877
    9. '   ' → logprob: -15.37505054473877
    10. '][' → logprob: -15.50005054473877

Token 271: ']!='' (ID: 187656)
  Prédit: '!=''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!='' → logprob: -0.3641414940357208
    2. '==' → logprob: -2.2391414642333984
    3. '=='' → logprob: -2.6141414642333984
    4. ']!='' → logprob: -2.9891414642333984
    5. ']' → logprob: -3.3641414642333984
    6. ']==' → logprob: -4.114141464233398
    7. ']=='' → logprob: -4.364141464233398
    8. ' !=' → logprob: -5.364141464233398
    9. '!=' → logprob: -5.739141464233398
    10. ' ==' → logprob: -6.239141464233398

Token 272: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -4.787507714354433e-05
    2. ''#' → logprob: -10.12504768371582
    3. '.' → logprob: -12.12504768371582
    4. '#:' → logprob: -14.25004768371582
    5. ''' → logprob: -14.87504768371582
    6. ' '#'' → logprob: -15.62504768371582
    7. '#.' → logprob: -15.75004768371582
    8. '#
' → logprob: -15.75004768371582
    9. '#
' → logprob: -16.00004768371582
    10. '('#' → logprob: -16.25004768371582

Token 273: '':
' (ID: 7669)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03229205310344696
    2. ':
' → logprob: -3.907292127609253
    3. ' and' → logprob: -5.032291889190674
    4. '):' → logprob: -5.657291889190674
    5. ' :' → logprob: -6.782291889190674
    6. '           ' → logprob: -8.657292366027832
    7. '):
' → logprob: -9.157292366027832
    8. ')' → logprob: -9.657292366027832
    9. ' :
' → logprob: -9.657292366027832
    10. 'and' → logprob: -10.282292366027832

Token 274: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.562635064125061
    2. ':
' → logprob: -0.937635064125061
    3. ':' → logprob: -3.3126349449157715
    4. ' and' → logprob: -6.6876349449157715
    5. '   ' → logprob: -8.31263542175293
    6. '       ' → logprob: -8.56263542175293
    7. '):
' → logprob: -8.93763542175293
    8. ' :
' → logprob: -9.31263542175293
    9. '               ' → logprob: -9.43763542175293
    10. '          ' → logprob: -9.81263542175293

Token 275: ' smile' (ID: 19617)
  Prédit: 'sm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sm' → logprob: -0.23327958583831787
    2. 'val' → logprob: -2.8582797050476074
    3. ' smile' → logprob: -3.1082797050476074
    4. 'answer' → logprob: -3.7332797050476074
    5. 'd' → logprob: -4.233279705047607
    6. 'v' → logprob: -4.483279705047607
    7. 'res' → logprob: -4.733279705047607
    8. ' val' → logprob: -4.983279705047607
    9. 'tmp' → logprob: -5.233279705047607
    10. ' d' → logprob: -5.733279705047607

Token 276: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -1.259079363080673e-05
    2. '=' → logprob: -11.875012397766113
    3. ' =' → logprob: -13.250012397766113
    4. '+=' → logprob: -14.125012397766113
    5. ' +=' → logprob: -14.125012397766113
    6. '=y' → logprob: -14.375012397766113
    7. '           ' → logprob: -15.125012397766113
    8. 'yield' → logprob: -15.250012397766113
    9. ')' → logprob: -16.00001335144043
    10. '   ' → logprob: -16.12501335144043

Token 277: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.5266841053962708
    2. ' =' → logprob: -1.401684045791626
    3. '+=' → logprob: -1.901684045791626
    4. '=' → logprob: -4.276684284210205
    5. '=max' → logprob: -10.651683807373047
    6. ' ' → logprob: -11.026683807373047
    7. ' |=' → logprob: -12.776683807373047
    8. ']+=' → logprob: -13.401683807373047
    9. ' =)' → logprob: -13.651683807373047
    10. '+' → logprob: -13.651683807373047

Token 278: ' smile' (ID: 19617)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.3868733048439026
    2. ' max' → logprob: -1.1368732452392578
    3. 'dist' → logprob: -13.636873245239258
    4. ' dist' → logprob: -14.261873245239258
    5. '	max' → logprob: -15.886873245239258
    6. '(max' → logprob: -16.386873245239258
    7. '=max' → logprob: -17.261873245239258
    8. '   ' → logprob: -17.511873245239258
    9. 'sm' → logprob: -17.636873245239258
    10. '[max' → logprob: -17.761873245239258

Token 279: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -5.3596853831550106e-05
    2. '(' → logprob: -11.625053405761719
    3. '(y' → logprob: -11.625053405761719
    4. 'max' → logprob: -11.750053405761719
    5. '[y' → logprob: -11.750053405761719
    6. 'yx' → logprob: -12.500053405761719
    7. 'r' → logprob: -12.625053405761719
    8. 'py' → logprob: -12.875053405761719
    9. '(max' → logprob: -13.375053405761719
    10. '[' → logprob: -14.250053405761719

Token 280: ' if' (ID: 538)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.49620604515075684
    2. '+' → logprob: -1.2462060451507568
    3. ' max' → logprob: -2.996206045150757
    4. ' +' → logprob: -3.746206045150757
    5. '(max' → logprob: -4.871206283569336
    6. ' or' → logprob: -4.871206283569336
    7. 'sm' → logprob: -5.371206283569336
    8. ',max' → logprob: -5.496206283569336
    9. ',' → logprob: -6.621206283569336
    10. ' if' → logprob: -6.621206283569336

Token 281: ' smile' (ID: 19617)
  Prédit: 'sm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sm' → logprob: -0.032090622931718826
    2. 'dist' → logprob: -3.532090663909912
    3. ' smile' → logprob: -6.532090663909912
    4. ' dist' → logprob: -7.282090663909912
    5. '   ' → logprob: -9.657090187072754
    6. ' sm' → logprob: -10.782090187072754
    7. '>' → logprob: -10.782090187072754
    8. 'distance' → logprob: -10.907090187072754
    9. '(sm' → logprob: -12.157090187072754
    10. '           ' → logprob: -12.219590187072754

Token 282: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.008168546482920647
    2. '_sm' → logprob: -5.258168697357178
    3. 'sm' → logprob: -6.508168697357178
    4. '<' → logprob: -7.383168697357178
    5. '>' → logprob: -7.883168697357178
    6. 's' → logprob: -9.13316822052002
    7. 'ii' → logprob: -10.25816822052002
    8. '=' → logprob: -10.50816822052002
    9. 'ey' → logprob: -10.63316822052002
    10. 'er' → logprob: -10.63316822052002

Token 283: '>' (ID: 29)
  Prédit: '>'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.2966333031654358
    2. '>=' → logprob: -1.421633243560791
    3. ' >=' → logprob: -4.546633243560791
    4. ' >' → logprob: -5.671633243560791
    5. 'else' → logprob: -6.921633243560791
    6. '>s' → logprob: -9.17163372039795
    7. ' else' → logprob: -9.29663372039795
    8. '>
' → logprob: -10.67163372039795
    9. 'sm' → logprob: -10.79663372039795
    10. '≥' → logprob: -10.92163372039795

Token 284: '=(' (ID: 9893)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0004944138927385211
    2. ' dist' → logprob: -7.750494480133057
    3. 'sm' → logprob: -9.750494003295898
    4. '=' → logprob: -12.875494003295898
    5. 'distance' → logprob: -14.000494003295898
    6. 'Dist' → logprob: -14.625494003295898
    7. '	dist' → logprob: -14.750494003295898
    8. '(dist' → logprob: -14.875494003295898
    9. 'd' → logprob: -15.750494003295898
    10. '```' → logprob: -16.1254940032959

Token 285: 'tt' (ID: 1037)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.003603871213272214
    2. ' dist' → logprob: -5.628603935241699
    3. '(dist' → logprob: -13.5036039352417
    4. ')' → logprob: -13.8786039352417
    5. '           ' → logprob: -13.8786039352417
    6. '               ' → logprob: -15.0036039352417
    7. '	dist' → logprob: -15.8786039352417
    8. '0' → logprob: -16.753602981567383
    9. 'distance' → logprob: -16.753602981567383
    10. '.dist' → logprob: -17.253602981567383

Token 286: ':=' (ID: 33860)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0891091600060463
    2. ' dist' → logprob: -2.464109182357788
    3. '(dist' → logprob: -9.714109420776367
    4. '           ' → logprob: -10.214109420776367
    5. ')' → logprob: -10.339109420776367
    6. '=' → logprob: -11.839109420776367
    7. '.dist' → logprob: -12.464109420776367
    8. '	dist' → logprob: -12.589109420776367
    9. '          ' → logprob: -12.714109420776367
    10. 'distance' → logprob: -12.964109420776367

Token 287: 'dist' (ID: 24126)
  Prédit: 'dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.007608040235936642
    2. ' dist' → logprob: -4.882607936859131
    3. '	dist' → logprob: -14.132608413696289
    4. '(dist' → logprob: -14.507608413696289
    5. '           ' → logprob: -15.757608413696289
    6. '   ' → logprob: -15.882608413696289
    7. ' ' → logprob: -16.38260841369629
    8. '               ' → logprob: -16.50760841369629
    9. '.dist' → logprob: -16.63260841369629
    10. '  ' → logprob: -17.75760841369629

Token 288: '(ii' (ID: 77930)
  Prédit: '(ii'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ii' → logprob: -3.1424973713001236e-05
    2. 'ii' → logprob: -10.500031471252441
    3. ' ii' → logprob: -13.000031471252441
    4. '(' → logprob: -14.375031471252441
    5. '(i' → logprob: -14.500031471252441
    6. ')' → logprob: -15.250031471252441
    7. '(ix' → logprob: -16.500030517578125
    8. ' ' → logprob: -17.000030517578125
    9. ' (' → logprob: -17.000030517578125
    10. '   ' → logprob: -17.375030517578125

Token 289: ',j' (ID: 22712)
  Prédit: ',j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',j' → logprob: -0.00286787748336792
    2. ',' → logprob: -5.877867698669434
    3. ' ,' → logprob: -9.752867698669434
    4. ' ' → logprob: -13.752867698669434
    5. '   ' → logprob: -14.002867698669434
    6. 'jj' → logprob: -14.002867698669434
    7. ',
' → logprob: -14.252867698669434
    8. '
' → logprob: -15.002867698669434
    9. '(j' → logprob: -15.002867698669434
    10. ' jj' → logprob: -15.377867698669434

Token 290: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.007633720524609089
    2. ')' → logprob: -5.382633686065674
    3. 'jj' → logprob: -6.257633686065674
    4. '))' → logprob: -6.882633686065674
    5. ',j' → logprob: -11.007634162902832
    6. ')))' → logprob: -12.257634162902832
    7. '])' → logprob: -12.257634162902832
    8. ' jj' → logprob: -12.382634162902832
    9. ')])' → logprob: -12.507634162902832
    10. '```' → logprob: -12.507634162902832

Token 291: '))' (ID: 915)
  Prédit: ',j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',j' → logprob: -0.6146385669708252
    2. '))' → logprob: -0.8646385669708252
    3. ',' → logprob: -4.239638328552246
    4. '(j' → logprob: -4.489638328552246
    5. 'jj' → logprob: -4.739638328552246
    6. ')):' → logprob: -6.739638328552246
    7. ' ))' → logprob: -7.614638328552246
    8. ')):
' → logprob: -7.739638328552246
    9. ')))' → logprob: -8.364638328552246
    10. '   ' → logprob: -8.489638328552246

Token 292: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.4740930497646332
    2. ' else' → logprob: -0.9740930795669556
    3. 'sm' → logprob: -11.099093437194824
    4. '           ' → logprob: -14.724093437194824
    5. ' ' → logprob: -16.224092483520508
    6. '```' → logprob: -16.599092483520508
    7. '   ' → logprob: -16.724092483520508
    8. 'tt' → logprob: -16.974092483520508
    9. '               ' → logprob: -17.224092483520508
    10. '          ' → logprob: -17.349092483520508

Token 293: ' tt' (ID: 34181)
  Prédit: 'tt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tt' → logprob: -0.0002614550176076591
    2. ' tt' → logprob: -8.250261306762695
    3. 'ttp' → logprob: -16.125261306762695
    4. '(tt' → logprob: -16.750261306762695
    5. '_tt' → logprob: -18.125261306762695
    6. ' ' → logprob: -18.625261306762695
    7. '           ' → logprob: -19.125261306762695
    8. 'tti' → logprob: -19.250261306762695
    9. 'tc' → logprob: -19.625261306762695
    10. 'tta' → logprob: -19.875261306762695

Token 294: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00011355629976605996
    2. '<|end|>' → logprob: -9.500113487243652
    3. ')' → logprob: -10.875113487243652
    4. ' print' → logprob: -11.625113487243652
    5. '#print' → logprob: -12.750113487243652
    6. '#' → logprob: -13.125113487243652
    7. '```' → logprob: -13.500113487243652
    8. 'return' → logprob: -14.000113487243652
    9. '
' → logprob: -14.250113487243652
    10. 'for' → logprob: -14.625113487243652

Token 295: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00044092073221690953
    2. ' print' → logprob: -8.62544059753418
    3. '<|end|>' → logprob: -9.12544059753418
    4. ')' → logprob: -9.62544059753418
    5. 'sm' → logprob: -10.12544059753418
    6. 'return' → logprob: -11.25044059753418
    7. '#' → logprob: -11.37544059753418
    8. '#print' → logprob: -12.12544059753418
    9. '(print' → logprob: -12.37544059753418
    10. '
' → logprob: -12.50044059753418

Token 296: '(sm' (ID: 137716)
  Prédit: '(sm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sm' → logprob: -0.0015217645559459925
    2. 'sm' → logprob: -6.501521587371826
    3. '(' → logprob: -10.876522064208984
    4. ' sm' → logprob: -15.876522064208984
    5. '_sm' → logprob: -16.251522064208984
    6. '(s' → logprob: -16.626522064208984
    7. '	sm' → logprob: -17.126522064208984
    8. ' smile' → logprob: -17.501522064208984
    9. '.sm' → logprob: -17.626522064208984
    10. '-sm' → logprob: -18.001522064208984

Token 297: 'iley' (ID: 27669)
  Prédit: 'ily'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ily' → logprob: -0.30797240138053894
    2. 'iley' → logprob: -2.4329724311828613
    3. 'iy' → logprob: -2.5579724311828613
    4. 'y' → logprob: -2.8079724311828613
    5. 'ly' → logprob: -4.557972431182861
    6. ')' → logprob: -4.557972431182861
    7. 'i' → logprob: -5.432972431182861
    8. 'ile' → logprob: -5.932972431182861
    9. '```' → logprob: -6.182972431182861
    10. '>' → logprob: -6.807972431182861

Token 298: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001589618914294988
    2. ' )' → logprob: -8.87515926361084
    3. '+' → logprob: -11.00015926361084
    4. ')
' → logprob: -13.75015926361084
    5. '+)' → logprob: -14.37515926361084
    6. ')#' → logprob: -15.00015926361084
    7. '))' → logprob: -16.625158309936523
    8. '```' → logprob: -16.875158309936523
    9. ')`' → logprob: -16.875158309936523
    10. '#' → logprob: -17.000158309936523


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 296
Tokens correctement prédits (1ère position, stricte): 111
Tokens correctement prédits (1ère position, avec adaptation): 119
Tokens correctement prédits (top 10): 223
Précision stricte (1ère position): 37.50%
Précision adaptée (1ère position): 40.20%
Précision (top 10): 75.34%
================================================================================
