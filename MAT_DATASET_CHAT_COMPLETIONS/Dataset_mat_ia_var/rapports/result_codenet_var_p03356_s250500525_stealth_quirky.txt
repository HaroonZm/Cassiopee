================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:19:22
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

(sys.setrecursionlimit or (lambda x: None))(6501 - 1)

greg = lambda: list(map(int, input().split()))

def fNd(ix):
    while d[ix] >= 0:
        d[ix] = d[d[ix]] if d[d[ix]] >= 0 else d[ix]
        ix = d[ix] if d[ix] >= 0 else ix
    return ix

def xunion(x, y):
    ax, by = fNd(x), fNd(y)
    if ax == by: return 42 - 41
    idx = (0, 1)[d[ax] > d[by]]
    res = [lambda: _do(ax, by), lambda: _do(by, ax)][idx]()
    return not not res

def _do(a, b):
    d[a] += d[b]
    d[b] = a
    return True

whoami = lambda val: [i for i in range(N) if fNd(i) == fNd(val)]

sameish = lambda a, b: fNd(a) == fNd(b)

N, M = greg()
pL = greg()
d = [-1 for _ in [0]*N]

for _j in range(M):
    z, t = greg()
    z, t = z - 1, t - 1
    xunion(z, t)

q = [None]*N
for ii, v in enumerate(pL):
    q[v-1] = ii

ret = 0
for guy in range(N):
    if sameish(guy, q[guy]):
        ret += [1][-~0]
print(ret)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: '(sys' (ID: 41042)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.035847846418619156
    2. '\n' → logprob: -4.0358476638793945
    3. 'import' → logprob: -4.7858476638793945
    4. '<|end|>' → logprob: -5.2858476638793945
    5. '\' → logprob: -7.0358476638793945
    6. '<|end|>' → logprob: -7.5358476638793945
    7. 'newline' → logprob: -7.9108476638793945
    8. ',' → logprob: -8.160847663879395
    9. '[' → logprob: -8.285847663879395
    10. '' → logprob: -8.285847663879395

Token 4: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.03626341000199318
    2. '.)' → logprob: -3.6612634658813477
    3. ')' → logprob: -5.411263465881348
    4. '.argv' → logprob: -5.411263465881348
    5. '.exit' → logprob: -7.536263465881348
    6. '.stdout' → logprob: -8.786263465881348
    7. '.stdin' → logprob: -9.161263465881348
    8. ').' → logprob: -10.161263465881348
    9. '.stderr' → logprob: -10.411263465881348
    10. '.import' → logprob: -11.161263465881348

Token 5: 'rec' (ID: 9285)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0255109071731567
    2. '_version' → logprob: -2.525510787963867
    3. 'attr' → logprob: -2.900510787963867
    4. 'set' → logprob: -3.150510787963867
    5. 'sys' → logprob: -3.150510787963867
    6. ')' → logprob: -3.150510787963867
    7. '_encoding' → logprob: -3.150510787963867
    8. ' _' → logprob: -3.275510787963867
    9. 'trace' → logprob: -3.275510787963867
    10. '_trace' → logprob: -3.275510787963867

Token 6: 'ursion' (ID: 41658)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.2661028802394867
    2. 'ursion' → logprob: -2.1411027908325195
    3. 't' → logprob: -3.0161027908325195
    4. 'ursive' → logprob: -3.5161027908325195
    5. '_' → logprob: -4.7661027908325195
    6. 'alc' → logprob: -5.0161027908325195
    7. 'ut' → logprob: -5.3911027908325195
    8. '_eval' → logprob: -6.5161027908325195
    9. 'a' → logprob: -6.8911027908325195
    10. 'l' → logprob: -6.8911027908325195

Token 7: 'limit' (ID: 19698)
  Prédit: '_limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limit' → logprob: -0.1458725780248642
    2. 'limit' → logprob: -2.1458725929260254
    3. '_depth' → logprob: -4.145872592926025
    4. ')' → logprob: -6.395872592926025
    5. 'depth' → logprob: -8.145872116088867
    6. '(' → logprob: -8.520872116088867
    7. ' limit' → logprob: -8.520872116088867
    8. ')_' → logprob: -8.895872116088867
    9. '_limits' → logprob: -8.895872116088867
    10. '(limit' → logprob: -9.520872116088867

Token 8: ' or' (ID: 503)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.000657750410027802
    2. ')' → logprob: -7.375657558441162
    3. ')(' → logprob: -11.12565803527832
    4. '()' → logprob: -12.25065803527832
    5. '(

' → logprob: -12.50065803527832
    6. '40' → logprob: -12.62565803527832
    7. '(
' → logprob: -13.50065803527832
    8. '((' → logprob: -14.12565803527832
    9. '```' → logprob: -14.62565803527832
    10. '('' → logprob: -15.37565803527832

Token 9: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01461765356361866
    2. '(sys' → logprob: -4.889617443084717
    3. ')' → logprob: -5.889617443084717
    4. ')(' → logprob: -6.139617443084717
    5. '()' → logprob: -7.264617443084717
    6. '(len' → logprob: -8.014617919921875
    7. ' ' → logprob: -9.014617919921875
    8. '((' → logprob: -9.139617919921875
    9. '(None' → logprob: -9.139617919921875
    10. ' (' → logprob: -9.139617919921875

Token 10: 'lambda' (ID: 35280)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '100' → logprob: -0.7027167081832886
    2. ')' → logprob: -1.5777167081832886
    3. ' ' → logprob: -3.327716827392578
    4. 'sys' → logprob: -3.327716827392578
    5. '500' → logprob: -3.452716827392578
    6. '1' → logprob: -3.452716827392578
    7. '40' → logprob: -3.702716827392578
    8. '102' → logprob: -4.202716827392578
    9. '200' → logprob: -4.577716827392578
    10. '250' → logprob: -4.952716827392578

Token 11: ' x' (ID: 1215)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.783613920211792
    2. ' :' → logprob: -2.283613920211792
    3. ' sys' → logprob: -2.283613920211792
    4. ' ' → logprob: -2.408613920211792
    5. '(' → logprob: -2.658613920211792
    6. ')' → logprob: -2.783613920211792
    7. ' (' → logprob: -2.908613920211792
    8. ' x' → logprob: -3.158613920211792
    9. '(lambda' → logprob: -3.283613920211792
    10. ' )' → logprob: -3.658613920211792

Token 12: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.020772993564605713
    2. ' x' → logprob: -4.395772933959961
    3. ' :' → logprob: -5.145772933959961
    4. ')' → logprob: -7.270772933959961
    5. ')x' → logprob: -7.645772933959961
    6. '):' → logprob: -8.020772933959961
    7. ':x' → logprob: -8.270772933959961
    8. '(x' → logprob: -8.395772933959961
    9. 'x' → logprob: -9.020772933959961
    10. ')(' → logprob: -9.395772933959961

Token 13: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.5756809711456299
    2. ' None' → logprob: -1.4506809711456299
    3. ' x' → logprob: -2.45068097114563
    4. ' sys' → logprob: -3.07568097114563
    5. 'x' → logprob: -3.45068097114563
    6. 'sys' → logprob: -3.95068097114563
    7. 'lambda' → logprob: -5.200680732727051
    8. ' lambda' → logprob: -5.575680732727051
    9. '0' → logprob: -5.950680732727051
    10. ')' → logprob: -6.575680732727051

Token 14: '))(' (ID: 72297)
  Prédit: ')('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')(' → logprob: -0.11478406935930252
    2. ')' → logprob: -2.239784002304077
    3. '))(' → logprob: -7.364784240722656
    4. '(' → logprob: -7.489784240722656
    5. ')((' → logprob: -8.614784240722656
    6. ')(
' → logprob: -8.739784240722656
    7. '))' → logprob: -9.114784240722656
    8. ')(__' → logprob: -9.239784240722656
    9. ' )(' → logprob: -9.614784240722656
    10. ')("' → logprob: -9.864784240722656

Token 15: '650' (ID: 20864)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '100' → logprob: -0.16519330441951752
    2. '10' → logprob: -1.9151933193206787
    3. '500' → logprob: -6.6651930809021
    4. ' ' → logprob: -6.7901930809021
    5. '300' → logprob: -7.2901930809021
    6. 'sys' → logprob: -7.6651930809021
    7. '1' → logprob: -7.9151930809021
    8. '999' → logprob: -8.040193557739258
    9. '250' → logprob: -8.665193557739258
    10. ')' → logprob: -9.165193557739258

Token 16: '1' (ID: 16)
  Prédit: '00'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '00' → logprob: -4.36574100604048e-06
    2. '0' → logprob: -12.375004768371582
    3. '000' → logprob: -16.000003814697266
    4. ')' → logprob: -20.000003814697266
    5. '```' → logprob: -22.000003814697266
    6. '01' → logprob: -22.375003814697266
    7. '۰۰' → logprob: -22.625003814697266
    8. '))' → logprob: -22.875003814697266
    9. '10' → logprob: -22.875003814697266
    10. '007' → logprob: -23.000003814697266

Token 17: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.868328920158092e-05
    2. ' )' → logprob: -11.125028610229492
    3. '))' → logprob: -11.250028610229492
    4. ')
' → logprob: -14.500028610229492
    5. ')))' → logprob: -15.625028610229492
    6. '0' → logprob: -17.125028610229492
    7. ')`' → logprob: -17.125028610229492
    8. '`)' → logprob: -17.625028610229492
    9. ')

' → logprob: -17.750028610229492
    10. '```' → logprob: -17.750028610229492

Token 18: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4592359662055969
    2. '1' → logprob: -1.0842359066009521
    3. '0' → logprob: -4.084236145019531
    4. ')' → logprob: -4.959236145019531
    5. '50' → logprob: -7.084236145019531
    6. '100' → logprob: -7.084236145019531
    7. '2' → logprob: -7.334236145019531
    8. '10' → logprob: -7.584236145019531
    9. '500' → logprob: -7.584236145019531
    10. ' sys' → logprob: -7.709236145019531

Token 19: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4835124611854553
    2. ' ' → logprob: -1.4835124015808105
    3. '0' → logprob: -1.9835124015808105
    4. '50' → logprob: -5.7335124015808105
    5. '100' → logprob: -6.2335124015808105
    6. '10' → logprob: -6.2335124015808105
    7. ')' → logprob: -6.3585124015808105
    8. '3' → logprob: -6.3585124015808105
    9. '5' → logprob: -6.7335124015808105
    10. '500' → logprob: -6.8585124015808105

Token 20: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003091254911851138
    2. '))' → logprob: -8.125308990478516
    3. ' )' → logprob: -12.000308990478516
    4. ')))' → logprob: -12.250308990478516
    5. ')
' → logprob: -13.375308990478516
    6. ')

' → logprob: -16.000308990478516
    7. ')`' → logprob: -16.750308990478516
    8. '```' → logprob: -16.875308990478516
    9. ')#' → logprob: -17.125308990478516
    10. ')])' → logprob: -17.250308990478516

Token 21: 'greg' (ID: 18269)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0973372757434845
    2. ')' → logprob: -2.597337245941162
    3. '<|end|>' → logprob: -5.097337245941162
    4. '

' → logprob: -5.597337245941162
    5. '' → logprob: -6.097337245941162
    6. '
' → logprob: -6.472337245941162
    7. '\n' → logprob: -6.597337245941162
    8. '#' → logprob: -6.972337245941162
    9. ')
' → logprob: -7.972337245941162
    10. 'newline' → logprob: -8.09733772277832

Token 22: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.06608328968286514
    2. 'or' → logprob: -3.8160831928253174
    3. 'ory' → logprob: -5.6910834312438965
    4. ''.' → logprob: -5.6910834312438965
    5. '.py' → logprob: -5.8160834312438965
    6. '[' → logprob: -5.8160834312438965
    7. ' =' → logprob: -5.9410834312438965
    8. 'orian' → logprob: -6.3160834312438965
    9. '=' → logprob: -6.4410834312438965
    10. '('.')' → logprob: -6.9410834312438965

Token 23: ' lambda' (ID: 27871)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.2319197803735733
    2. ' {}' → logprob: -1.981919765472412
    3. '[]' → logprob: -3.981919765472412
    4. ' ' → logprob: -4.606919765472412
    5. ' []' → logprob: -4.606919765472412
    6. '{' → logprob: -5.231919765472412
    7. '100' → logprob: -5.481919765472412
    8. 'lambda' → logprob: -5.731919765472412
    9. '0' → logprob: -5.856919765472412
    10. 'set' → logprob: -5.856919765472412

Token 24: ':' (ID: 25)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.3128885328769684
    2. ' n' → logprob: -2.1878886222839355
    3. ' lambda' → logprob: -3.0628886222839355
    4. 'x' → logprob: -3.1878886222839355
    5. ' f' → logprob: -3.8128886222839355
    6. 'lambda' → logprob: -4.4378886222839355
    7. ' factorial' → logprob: -4.8128886222839355
    8. ' a' → logprob: -5.1878886222839355
    9. ' ' → logprob: -5.1878886222839355
    10. ' s' → logprob: -5.8128886222839355

Token 25: ' list' (ID: 1562)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.9105070233345032
    2. 'int' → logprob: -1.7855069637298584
    3. ' int' → logprob: -2.2855069637298584
    4. 'sys' → logprob: -2.4105069637298584
    5. ' map' → logprob: -2.9105069637298584
    6. ' list' → logprob: -3.0355069637298584
    7. ' input' → logprob: -3.2855069637298584
    8. 'input' → logprob: -3.4105069637298584
    9. 'list' → logprob: -3.6605069637298584
    10. 'map' → logprob: -4.0355072021484375

Token 26: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.005845242645591497
    2. '(' → logprob: -5.505845069885254
    3. '(range' → logprob: -7.505845069885254
    4. '(sys' → logprob: -7.630845069885254
    5. '(input' → logprob: -7.880845069885254
    6. '(filter' → logprob: -8.755845069885254
    7. '(int' → logprob: -9.380845069885254
    8. '()' → logprob: -9.880845069885254
    9. '(__' → logprob: -11.005845069885254
    10. '(eval' → logprob: -11.380845069885254

Token 27: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.026533082127571106
    2. '(' → logprob: -3.7765331268310547
    3. '(str' → logprob: -5.776533126831055
    4. '(input' → logprob: -9.526533126831055
    5. '(ord' → logprob: -10.151533126831055
    6. '(lambda' → logprob: -10.526533126831055
    7. 'int' → logprob: -11.026533126831055
    8. '(eval' → logprob: -11.901533126831055
    9. '(
' → logprob: -12.151533126831055
    10. '(chr' → logprob: -12.276533126831055

Token 28: ',' (ID: 11)
  Prédit: '(sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.07268331944942474
    2. '(input' → logprob: -3.197683334350586
    3. '(' → logprob: -3.572683334350586
    4. 'input' → logprob: -7.697683334350586
    5. 'sys' → logprob: -7.822683334350586
    6. ')' → logprob: -9.072683334350586
    7. '(
' → logprob: -9.822683334350586
    8. ' (' → logprob: -10.072683334350586
    9. '(open' → logprob: -10.947683334350586
    10. '(system' → logprob: -11.322683334350586

Token 29: ' input' (ID: 3422)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.7815809845924377
    2. ' sys' → logprob: -1.156580924987793
    3. 'input' → logprob: -1.781580924987793
    4. ' input' → logprob: -2.906580924987793
    5. '(sys' → logprob: -5.656580924987793
    6. '=sys' → logprob: -6.906580924987793
    7. '	sys' → logprob: -8.781580924987793
    8. 'stdin' → logprob: -10.656580924987793
    9. ')' → logprob: -11.281580924987793
    10. ' ' → logprob: -12.031580924987793

Token 30: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -6.170270353322849e-05
    2. '()' → logprob: -9.875061988830566
    3. '()))' → logprob: -12.250061988830566
    4. ' ().' → logprob: -13.000061988830566
    5. '.' → logprob: -14.375061988830566
    6. '()));' → logprob: -14.375061988830566
    7. '())' → logprob: -14.750061988830566
    8. '('').' → logprob: -15.125061988830566
    9. '(' → logprob: -15.250061988830566
    10. ')' → logprob: -15.750061988830566

Token 31: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.014431209303438663
    2. 'strip' → logprob: -4.264430999755859
    3. 'rstrip' → logprob: -8.26443099975586
    4. ' split' → logprob: -11.76443099975586
    5. 'read' → logprob: -13.51443099975586
    6. '(split' → logprob: -14.63943099975586
    7. ')' → logprob: -15.76443099975586
    8. 'spl' → logprob: -15.76443099975586
    9. ' strip' → logprob: -15.76443099975586
    10. 's' → logprob: -16.76443099975586

Token 32: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.02829502709209919
    2. '())' → logprob: -4.403295040130615
    3. '()' → logprob: -4.528295040130615
    4. '))' → logprob: -5.403295040130615
    5. '(' → logprob: -8.528294563293457
    6. '())))' → logprob: -9.403294563293457
    7. '()));' → logprob: -10.528294563293457
    8. ')' → logprob: -10.528294563293457
    9. '()))
' → logprob: -11.278294563293457
    10. ')))' → logprob: -12.653294563293457

Token 33: 'def' (ID: 1314)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.06298721581697464
    2. 'def' → logprob: -4.062987327575684
    3. 'd' → logprob: -4.937987327575684
    4. 'for' → logprob: -5.062987327575684
    5. 'a' → logprob: -5.187987327575684
    6. 't' → logprob: -5.312987327575684
    7. '#' → logprob: -5.312987327575684
    8. '(n' → logprob: -5.812987327575684
    9. '
' → logprob: -5.937987327575684
    10. '\' → logprob: -6.562987327575684

Token 34: ' f' (ID: 285)
  Prédit: ' solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' solve' → logprob: -0.5848281979560852
    2. ' main' → logprob: -0.8348281979560852
    3. ' dfs' → logprob: -5.4598283767700195
    4. ' factorial' → logprob: -6.3348283767700195
    5. ' solution' → logprob: -7.4598283767700195
    6. 'solve' → logprob: -7.7098283767700195
    7. ' ' → logprob: -8.20982837677002
    8. ' process' → logprob: -8.33482837677002
    9. ' resolve' → logprob: -8.95982837677002
    10. ' find' → logprob: -9.20982837677002

Token 35: 'Nd' (ID: 41568)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.19690144062042236
    2. '_' → logprob: -2.446901321411133
    3. '(n' → logprob: -2.571901321411133
    4. '(x' → logprob: -4.821901321411133
    5. '_(' → logprob: -5.946901321411133
    6. '(i' → logprob: -6.446901321411133
    7. ' (' → logprob: -7.321901321411133
    8. '(a' → logprob: -7.696901321411133
    9. 'a' → logprob: -8.196901321411133
    10. 'n' → logprob: -8.446901321411133

Token 36: '(ix' (ID: 183917)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7014158368110657
    2. 'ex' → logprob: -1.951415777206421
    3. '(x' → logprob: -2.201415777206421
    4. 'x' → logprob: -2.701415777206421
    5. '(n' → logprob: -3.076415777206421
    6. '_' → logprob: -3.326415777206421
    7. '(i' → logprob: -3.701415777206421
    8. '():' → logprob: -3.826415777206421
    9. 'e' → logprob: -4.326416015625
    10. '()' → logprob: -4.451416015625

Token 37: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1805870532989502
    2. ',' → logprob: -2.55558705329895
    3. 'ex' → logprob: -2.80558705329895
    4. 'x' → logprob: -4.430586814880371
    5. 'u' → logprob: -4.930586814880371
    6. '):
' → logprob: -5.555586814880371
    7. 'dx' → logprob: -7.180586814880371
    8. ')' → logprob: -7.305586814880371
    9. 'e' → logprob: -7.555586814880371
    10. ')):' → logprob: -7.680586814880371

Token 38: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1482258290052414
    2. ':' → logprob: -2.648225784301758
    3. ' ' → logprob: -3.148225784301758
    4. ' :' → logprob: -4.273225784301758
    5. ' if' → logprob: -5.398225784301758
    6. '    ' → logprob: -5.773225784301758
    7. '  ' → logprob: -7.523225784301758
    8. '	if' → logprob: -7.648225784301758
    9. 'if' → logprob: -8.148225784301758
    10. ',' → logprob: -8.398225784301758

Token 39: ' while' (ID: 2049)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.08981689810752869
    2. '   ' → logprob: -3.5898168087005615
    3. 'if' → logprob: -3.9648168087005615
    4. ' ' → logprob: -4.714817047119141
    5. ' i' → logprob: -5.089817047119141
    6. ' return' → logprob: -5.214817047119141
    7. ' n' → logprob: -5.339817047119141
    8. 'r' → logprob: -6.339817047119141
    9. '    ' → logprob: -6.339817047119141
    10. 'n' → logprob: -6.714817047119141

Token 40: ' d' (ID: 272)
  Prédit: 'ix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ix' → logprob: -0.6459071040153503
    2. ' ix' → logprob: -0.7709071040153503
    3. ' not' → logprob: -5.645906925201416
    4. 'True' → logprob: -6.270906925201416
    5. ' True' → logprob: -6.395906925201416
    6. ' ' → logprob: -6.520906925201416
    7. 'not' → logprob: -7.020906925201416
    8. '(ix' → logprob: -7.270906925201416
    9. '0' → logprob: -7.395906925201416
    10. 'len' → logprob: -7.895906925201416

Token 41: '[ix' (ID: 165910)
  Prédit: '[ix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[ix' → logprob: -0.1750638335943222
    2. '[' → logprob: -2.8000638484954834
    3. 'ef' → logprob: -2.9250638484954834
    4. 'e' → logprob: -3.6750638484954834
    5. 'p' → logprob: -5.175063610076904
    6. 'f' → logprob: -6.300063610076904
    7. 'eft' → logprob: -6.550063610076904
    8. 'eq' → logprob: -6.550063610076904
    9. '.get' → logprob: -6.800063610076904
    10. 'eep' → logprob: -6.925063610076904

Token 42: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.29356649518013
    2. ']==' → logprob: -2.4185664653778076
    3. ']<' → logprob: -2.5435664653778076
    4. ']>' → logprob: -4.043566703796387
    5. ']>=' → logprob: -4.043566703796387
    6. '[' → logprob: -4.168566703796387
    7. ']<=' → logprob: -4.543566703796387
    8. ']!=' → logprob: -5.168566703796387
    9. '<' → logprob: -5.793566703796387
    10. ' ]' → logprob: -6.043566703796387

Token 43: ' >=' (ID: 5064)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -1.4252064228057861
    2. ' and' → logprob: -1.5502064228057861
    3. '==' → logprob: -2.050206422805786
    4. '<' → logprob: -2.175206422805786
    5. ' <' → logprob: -2.800206422805786
    6. '[' → logprob: -2.800206422805786
    7. '<=' → logprob: -3.425206422805786
    8. ':' → logprob: -3.675206422805786
    9. ' ==' → logprob: -3.675206422805786
    10. '>=' → logprob: -3.800206422805786

Token 44: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.23250600695610046
    2. 'd' → logprob: -1.9825060367584229
    3. '2' → logprob: -4.357505798339844
    4. '10' → logprob: -4.982505798339844
    5. '1' → logprob: -5.357505798339844
    6. ' ' → logprob: -5.482505798339844
    7. '100' → logprob: -5.482505798339844
    8. 'ix' → logprob: -5.607505798339844
    9. 'k' → logprob: -5.607505798339844
    10. '3' → logprob: -5.732505798339844

Token 45: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.037177883088588715
    2. 'd' → logprob: -3.662177801132202
    3. 'ix' → logprob: -5.662178039550781
    4. '1' → logprob: -6.162178039550781
    5. '2' → logprob: -6.287178039550781
    6. 'len' → logprob: -7.037178039550781
    7. '3' → logprob: -7.912178039550781
    8. ' ' → logprob: -8.287178039550781
    9. '100' → logprob: -8.537178039550781
    10. 'm' → logprob: -8.662178039550781

Token 46: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11367823928594589
    2. ' :' → logprob: -2.863678216934204
    3. ' and' → logprob: -3.113678216934204
    4. ':
' → logprob: -5.738678455352783
    5. ' :
' → logprob: -7.363678455352783
    6. '       ' → logprob: -7.363678455352783
    7. '   ' → logprob: -7.613678455352783
    8. 'and' → logprob: -7.863678455352783
    9. '	and' → logprob: -9.238677978515625
    10. '	' → logprob: -9.363677978515625

Token 47: '       ' (ID: 309)
  Prédit: 'ix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ix' → logprob: -0.999275803565979
    2. ' ix' → logprob: -0.999275803565979
    3. '       ' → logprob: -1.999275803565979
    4. '   ' → logprob: -2.7492756843566895
    5. '    ' → logprob: -3.7492756843566895
    6. 'd' → logprob: -3.7492756843566895
    7. ' d' → logprob: -5.3742756843566895
    8. ' ' → logprob: -6.3742756843566895
    9. '[ix' → logprob: -6.4992756843566895
    10. '_ix' → logprob: -6.6242756843566895

Token 48: ' d' (ID: 272)
  Prédit: 'ix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ix' → logprob: -0.031370002776384354
    2. ' ix' → logprob: -3.781369924545288
    3. '   ' → logprob: -5.031370162963867
    4. '       ' → logprob: -7.281370162963867
    5. 'd' (adapté à ' d') → logprob: -8.031370162963867
    6. 'ixi' → logprob: -8.906370162963867
    7. ' ' → logprob: -9.031370162963867
    8. '    ' → logprob: -9.406370162963867
    9. '```' → logprob: -9.656370162963867
    10. '  ' → logprob: -10.531370162963867

Token 49: '[ix' (ID: 165910)
  Prédit: '[ix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[ix' → logprob: -0.001083302078768611
    2. 'ix' → logprob: -7.1260833740234375
    3. '[' → logprob: -8.751083374023438
    4. '[x' → logprob: -11.001083374023438
    5. ' ix' → logprob: -11.126083374023438
    6. '[idx' → logprob: -11.126083374023438
    7. ' [' → logprob: -11.251083374023438
    8. '_ix' → logprob: -11.751083374023438
    9. '[i' → logprob: -12.001083374023438
    10. ' =' → logprob: -12.001083374023438

Token 50: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.26088201999664307
    2. ' =' → logprob: -2.1358819007873535
    3. ']' → logprob: -2.2608819007873535
    4. ')' → logprob: -5.5108819007873535
    5. ']=' → logprob: -6.2608819007873535
    6. ',' → logprob: -7.2608819007873535
    7. '],' → logprob: -8.635882377624512
    8. ' ]' → logprob: -9.135882377624512
    9. ')=' → logprob: -9.510882377624512
    10. ' ' → logprob: -9.635882377624512

Token 51: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0233105830848217
    2. ' =' → logprob: -3.773310661315918
    3. ',' → logprob: -9.773310661315918
    4. '=d' → logprob: -12.273310661315918
    5. '+=' → logprob: -13.398310661315918
    6. ' ' → logprob: -14.648310661315918
    7. '.=' → logprob: -15.023310661315918
    8. ' ,' → logprob: -15.648310661315918
    9. '=i' → logprob: -16.2733097076416
    10. '=-' → logprob: -16.2733097076416

Token 52: ' d' (ID: 272)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.36209043860435486
    2. ' -' → logprob: -1.4870904684066772
    3. ' d' → logprob: -3.1120903491973877
    4. 'd' → logprob: -3.6120903491973877
    5. '-d' → logprob: -5.612090587615967
    6. ' ' → logprob: -6.987090587615967
    7. 'f' → logprob: -7.862090587615967
    8. '-f' → logprob: -8.237090110778809
    9. ' f' → logprob: -8.362090110778809
    10. '0' → logprob: -8.862090110778809

Token 53: '[d' (ID: 48377)
  Prédit: '[ix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[ix' → logprob: -0.15146823227405548
    2. '[d' → logprob: -2.026468276977539
    3. 'd' → logprob: -5.526468276977539
    4. 'ix' → logprob: -6.776468276977539
    5. '[' → logprob: -7.276468276977539
    6. '[-' → logprob: -7.401468276977539
    7. '[f' → logprob: -7.401468276977539
    8. '[i' → logprob: -8.151468276977539
    9. '[x' → logprob: -8.276468276977539
    10. '[idx' → logprob: -8.776468276977539

Token 54: '[ix' (ID: 165910)
  Prédit: '[ix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[ix' → logprob: -0.0060397121123969555
    2. 'ix' → logprob: -5.131039619445801
    3. ' ix' → logprob: -10.0060396194458
    4. '[' → logprob: -10.0060396194458
    5. '(ix' → logprob: -11.8810396194458
    6. 'd' → logprob: -12.5060396194458
    7. ' [' → logprob: -13.0060396194458
    8. '_ix' → logprob: -13.2560396194458
    9. '[idx' → logprob: -13.5060396194458
    10. '[d' → logprob: -13.6310396194458

Token 55: ']]' (ID: 8928)
  Prédit: '[ix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[ix' → logprob: -0.008837920613586903
    2. 'ix' → logprob: -4.758837699890137
    3. ']' → logprob: -9.008837699890137
    4. '(ix' → logprob: -9.883837699890137
    5. ' ix' → logprob: -10.258837699890137
    6. '_ix' → logprob: -11.883837699890137
    7. ']]' → logprob: -12.383837699890137
    8. '[' → logprob: -13.633837699890137
    9. '])' → logprob: -14.133837699890137
    10. '

' → logprob: -15.008837699890137

Token 56: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 57: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.6370708346366882
    2. 'd' → logprob: -0.7620708346366882
    3. 'ix' → logprob: -6.137070655822754
    4. '(d' → logprob: -7.637070655822754
    5. '0' → logprob: -7.762070655822754
    6. ' ' → logprob: -8.262070655822754
    7. '   ' → logprob: -8.637070655822754
    8. ' ix' → logprob: -8.762070655822754
    9. '  ' → logprob: -8.887070655822754
    10. ' isinstance' → logprob: -9.012070655822754

Token 58: '[d' (ID: 48377)
  Prédit: '[ix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[ix' → logprob: -0.00023083435371518135
    2. '[d' → logprob: -9.00023078918457
    3. 'ix' → logprob: -9.75023078918457
    4. 'd' → logprob: -10.87523078918457
    5. '[' → logprob: -11.00023078918457
    6. '[idx' → logprob: -12.25023078918457
    7. '[i' → logprob: -12.50023078918457
    8. ' [' → logprob: -14.12523078918457
    9. '[ind' → logprob: -14.12523078918457
    10. '[
' → logprob: -14.37523078918457

Token 59: '[ix' (ID: 165910)
  Prédit: '[ix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[ix' → logprob: -0.002023685723543167
    2. 'ix' → logprob: -6.252023696899414
    3. ' ix' → logprob: -9.877023696899414
    4. '[' → logprob: -10.377023696899414
    5. ' [' → logprob: -12.627023696899414
    6. '(ix' → logprob: -12.627023696899414
    7. '_ix' → logprob: -12.877023696899414
    8. ']' → logprob: -13.877023696899414
    9. '[idx' → logprob: -14.752023696899414
    10. '[
' → logprob: -15.002023696899414

Token 60: ']]' (ID: 8928)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.030465679243206978
    2. ']>=' → logprob: -3.655465602874756
    3. '[ix' → logprob: -6.155465602874756
    4. ' ]' → logprob: -6.905465602874756
    5. ']<' → logprob: -7.655465602874756
    6. '[' → logprob: -8.530466079711914
    7. '   ' → logprob: -9.030466079711914
    8. 'ix' → logprob: -9.655466079711914
    9. ']]' → logprob: -10.155466079711914
    10. '(ix' → logprob: -10.530466079711914

Token 61: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.2555755078792572
    2. ' >=' → logprob: -1.5055755376815796
    3. ' <' → logprob: -6.255575656890869
    4. '<' → logprob: -6.505575656890869
    5. ']>=' → logprob: -8.755575180053711
    6. '   ' → logprob: -10.630575180053711
    7. ' ' → logprob: -11.755575180053711
    8. ' !=' → logprob: -12.130575180053711
    9. '≥' → logprob: -12.255575180053711
    10. ')>=' → logprob: -12.255575180053711

Token 62: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.008631822653114796
    2. ' ' → logprob: -4.758631706237793
    3. '   ' → logprob: -11.383631706237793
    4. '  ' → logprob: -12.258631706237793
    5. '<|end|>' → logprob: -15.008631706237793
    6. ' ' → logprob: -15.883631706237793
    7. '<|end|>' → logprob: -16.13363265991211
    8. '۰' → logprob: -16.32113265991211
    9. '    ' → logprob: -16.32113265991211
    10. '
' → logprob: -16.88363265991211

Token 63: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002486715093255043
    2. ' ' → logprob: -6.002486705780029
    3. '<|end|>' → logprob: -11.627487182617188
    4. '  ' → logprob: -14.502487182617188
    5. '<|end|>' → logprob: -14.752487182617188
    6. '۰' → logprob: -15.002487182617188
    7. '   ' → logprob: -15.939987182617188
    8. ')' → logprob: -16.064987182617188
    9. ' ' → logprob: -16.127487182617188
    10. 'zero' → logprob: -16.689987182617188

Token 64: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.010777676478028297
    2. 'else' → logprob: -4.635777473449707
    3. '[ix' → logprob: -8.010777473449707
    4. ' ' → logprob: -8.135777473449707
    5. ' ix' → logprob: -9.010777473449707
    6. '	else' → logprob: -9.760777473449707
    7. 'ix' → logprob: -9.885777473449707
    8. '<|end|>' → logprob: -10.510777473449707
    9. '(ix' → logprob: -10.510777473449707
    10. '        ' → logprob: -10.635777473449707

Token 65: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.6204096674919128
    2. ' -' → logprob: -1.6204097270965576
    3. '-' → logprob: -1.8704097270965576
    4. 'd' → logprob: -2.2454097270965576
    5. ' ix' → logprob: -6.4954094886779785
    6. '0' → logprob: -6.8704094886779785
    7. ' ' → logprob: -7.1204094886779785
    8. 'ix' → logprob: -7.1204094886779785
    9. '-d' → logprob: -9.745409965515137
    10. 'None' → logprob: -10.120409965515137

Token 66: '[ix' (ID: 165910)
  Prédit: '[ix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[ix' → logprob: -0.023133784532546997
    2. '[d' → logprob: -4.023133754730225
    3. 'd' → logprob: -5.773133754730225
    4. 'ix' → logprob: -6.398133754730225
    5. '[' → logprob: -9.648134231567383
    6. ' ix' → logprob: -10.398134231567383
    7. ' d' → logprob: -11.023134231567383
    8. '[idx' → logprob: -11.398134231567383
    9. '(ix' → logprob: -11.648134231567383
    10. '[i' → logprob: -11.773134231567383

Token 67: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.013440554030239582
    2. '<|end|>' → logprob: -4.8884406089782715
    3. ' ]' → logprob: -5.7634406089782715
    4. ')' → logprob: -6.8884406089782715
    5. '<|end|>' → logprob: -7.5134406089782715
    6. '])' → logprob: -8.013440132141113
    7. ']+' → logprob: -9.138440132141113
    8. 'd' → logprob: -9.263440132141113
    9. ' ' → logprob: -9.513440132141113
    10. ']-' → logprob: -9.638440132141113

Token 68: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013219990767538548
    2. ' ix' → logprob: -5.388219833374023
    3. '   ' → logprob: -5.763219833374023
    4. '           ' → logprob: -6.888219833374023
    5. 'ix' → logprob: -6.888219833374023
    6. '	' → logprob: -7.138219833374023
    7. '[ix' → logprob: -7.763219833374023
    8. '    ' → logprob: -8.388219833374023
    9. '               ' → logprob: -8.888219833374023
    10. '        
' → logprob: -8.888219833374023

Token 69: ' ix' (ID: 44402)
  Prédit: 'ix'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ix' (adapté à ' ix') → logprob: -0.9984250664710999
    2. '       ' → logprob: -1.123425006866455
    3. '   ' → logprob: -1.748425006866455
    4. ' ix' → logprob: -2.123425006866455
    5. '[ix' → logprob: -5.873425006866455
    6. ' ' → logprob: -5.998425006866455
    7. '    ' → logprob: -6.373425006866455
    8. 'd' → logprob: -6.623425006866455
    9. '  ' → logprob: -7.248425006866455
    10. '_ix' → logprob: -7.498425006866455

Token 70: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2973007559776306
    2. '=' → logprob: -1.5473008155822754
    3. ' +=' → logprob: -3.2973008155822754
    4. '+=' → logprob: -4.922300815582275
    5. ' ' → logprob: -9.547300338745117
    6. ' -=' → logprob: -11.672300338745117
    7. ' ^=' → logprob: -13.047300338745117
    8. ',' → logprob: -13.297300338745117
    9. ' <<=' → logprob: -13.422300338745117
    10. ' |=' → logprob: -13.797300338745117

Token 71: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.17975148558616638
    2. 'd' → logprob: -1.8047515153884888
    3. ' ' → logprob: -13.1797513961792
    4. '	d' → logprob: -13.5547513961792
    5. ')d' → logprob: -14.0547513961792
    6. '<|end|>' → logprob: -14.5547513961792
    7. '>d' → logprob: -14.6797513961792
    8. ' ' → logprob: -14.8047513961792
    9. '  ' → logprob: -15.4297513961792
    10. '   ' → logprob: -15.4297513961792

Token 72: '[ix' (ID: 165910)
  Prédit: '[ix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[ix' → logprob: -1.6405310816480778e-05
    2. '[idx' → logprob: -11.625016212463379
    3. '[index' → logprob: -13.125016212463379
    4. '[i' → logprob: -13.375016212463379
    5. '[' → logprob: -13.875016212463379
    6. '```' → logprob: -14.125016212463379
    7. 'ix' → logprob: -14.250016212463379
    8. ' [' → logprob: -14.875016212463379
    9. '(ix' → logprob: -15.375016212463379
    10. '[x' → logprob: -15.375016212463379

Token 73: ']' (ID: 60)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014956403523683548
    2. ']' → logprob: -4.264956474304199
    3. ' )' → logprob: -8.1399564743042
    4. ')
' → logprob: -9.0149564743042
    5. ')]' → logprob: -9.2649564743042
    6. '])' → logprob: -9.2649564743042
    7. '<|end|>' → logprob: -9.6399564743042
    8. ')return' → logprob: -10.2649564743042
    9. '+' → logprob: -10.6399564743042
    10. '   ' → logprob: -11.1399564743042

Token 74: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0008598887361586094
    2. ' return' → logprob: -7.87585973739624
    3. 'return' → logprob: -8.750860214233398
    4. '<|end|>' → logprob: -9.375860214233398
    5. '    
' → logprob: -10.125860214233398
    6. '       ' → logprob: -10.250860214233398
    7. ' ' → logprob: -10.500860214233398
    8. '
' → logprob: -11.000860214233398
    9. ':return' → logprob: -11.000860214233398
    10. ')' → logprob: -11.375860214233398

Token 75: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.08608100563287735
    2. 'd' → logprob: -2.586081027984619
    3. 'ix' → logprob: -5.836081027984619
    4. ' ' → logprob: -6.336081027984619
    5. '0' → logprob: -6.586081027984619
    6. ' ix' → logprob: -7.336081027984619
    7. '>' → logprob: -9.586080551147461
    8. '  ' → logprob: -9.711080551147461
    9. '(d' → logprob: -10.523580551147461
    10. ' isinstance' → logprob: -10.586080551147461

Token 76: '[ix' (ID: 165910)
  Prédit: '[ix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[ix' → logprob: -0.0003781224077101797
    2. '[d' → logprob: -8.625377655029297
    3. '[idx' → logprob: -9.000377655029297
    4. '[' → logprob: -10.875377655029297
    5. '[i' → logprob: -11.250377655029297
    6. '[ind' → logprob: -11.375377655029297
    7. 'd' → logprob: -11.500377655029297
    8. '[index' → logprob: -12.125377655029297
    9. '>=' → logprob: -12.750377655029297
    10. '[ip' → logprob: -12.875377655029297

Token 77: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2020648568868637
    2. ']>=' → logprob: -1.702064871788025
    3. ' ]' → logprob: -7.8270649909973145
    4. '>=' → logprob: -8.952064514160156
    5. ' >=' → logprob: -9.202064514160156
    6. ']>' → logprob: -11.827064514160156
    7. '[' → logprob: -12.702064514160156
    8. ']<' → logprob: -12.952064514160156
    9. ')>=' → logprob: -13.327064514160156
    10. '   ' → logprob: -13.702064514160156

Token 78: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.17992368340492249
    2. ' >=' → logprob: -1.8049236536026
    3. ']>=' → logprob: -8.929924011230469
    4. '>' → logprob: -11.179924011230469
    5. ')>=' → logprob: -11.179924011230469
    6. ' ' → logprob: -12.179924011230469
    7. ' else' → logprob: -12.304924011230469
    8. 'else' → logprob: -13.179924011230469
    9. '<' → logprob: -13.554924011230469
    10. '≥' → logprob: -13.679924011230469

Token 79: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.026302501559257507
    2. ' ' → logprob: -3.6513025760650635
    3. '  ' → logprob: -14.151302337646484
    4. '<|end|>' → logprob: -14.651302337646484
    5. '   ' → logprob: -15.026302337646484
    6. ' ' → logprob: -15.151302337646484
    7. '۰' → logprob: -16.276302337646484
    8. '```' → logprob: -16.588802337646484
    9. '>' → logprob: -16.776302337646484
    10. '-' → logprob: -16.838802337646484

Token 80: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0040823169983923435
    2. ' ' → logprob: -5.504082202911377
    3. '  ' → logprob: -13.629082679748535
    4. '<|end|>' → logprob: -13.879082679748535
    5. '   ' → logprob: -14.504082679748535
    6. '۰' → logprob: -15.754082679748535
    7. '```' → logprob: -16.12908172607422
    8. 'd' → logprob: -16.25408172607422
    9. ' ' → logprob: -16.31658172607422
    10. '<|end|>' → logprob: -16.37908172607422

Token 81: ' else' (ID: 1203)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7404391765594482
    2. ' +' → logprob: -1.2404391765594482
    3. ' else' → logprob: -1.6154391765594482
    4. 'else' → logprob: -4.115439414978027
    5. '<|end|>' → logprob: -4.865439414978027
    6. ' ' → logprob: -5.240439414978027
    7. '```' → logprob: -6.865439414978027
    8. '+
' → logprob: -7.115439414978027
    9. '
' → logprob: -7.240439414978027
    10. '    ' → logprob: -7.615439414978027

Token 82: ' ix' (ID: 44402)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.8441901803016663
    2. ' -' → logprob: -1.3441901206970215
    3. ' ix' → logprob: -1.9691901206970215
    4. 'ix' → logprob: -1.9691901206970215
    5. '0' → logprob: -3.9691901206970215
    6. ' ' → logprob: -4.9691901206970215
    7. 'd' → logprob: -6.2191901206970215
    8. ' d' → logprob: -6.3441901206970215
    9. '-d' → logprob: -8.84419059753418
    10. '[ix' → logprob: -8.96919059753418

Token 83: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011227368377149105
    2. '<|end|>' → logprob: -5.761227130889893
    3. '
' → logprob: -6.011227130889893
    4. ' 
' → logprob: -6.886227130889893
    5. '    
' → logprob: -7.011227130889893
    6. ' ' → logprob: -7.011227130889893
    7. '\n' → logprob: -7.386227130889893
    8. '       ' → logprob: -8.01122760772705
    9. ' return' → logprob: -8.13622760772705
    10. ')' → logprob: -8.13622760772705

Token 84: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013421496376395226
    2. '<|end|>' → logprob: -4.763421535491943
    3. ' ' → logprob: -6.263421535491943
    4. ')' → logprob: -6.888421535491943
    5. '
' → logprob: -7.763421535491943
    6. '    
' → logprob: -8.013421058654785
    7. ' return' → logprob: -8.138421058654785
    8. ' 
' → logprob: -8.638421058654785
    9. '  ' → logprob: -9.513421058654785
    10. 'return' → logprob: -9.638421058654785

Token 85: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03761953487992287
    2. ' return' → logprob: -3.7876195907592773
    3. ':' → logprob: -5.537619590759277
    4. ':return' → logprob: -5.787619590759277
    5. ' ' → logprob: -6.162619590759277
    6. 'return' (adapté à ' return') → logprob: -6.287619590759277
    7. ' :' → logprob: -7.162619590759277
    8. '	return' → logprob: -7.787619590759277
    9. '    ' → logprob: -8.287619590759277
    10. ':
' → logprob: -8.287619590759277

Token 86: ' ix' (ID: 44402)
  Prédit: ' ix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ix' → logprob: -0.47547289729118347
    2. 'ix' → logprob: -0.9754729270935059
    3. ' -' → logprob: -6.725472927093506
    4. '-' → logprob: -9.100472450256348
    5. '(ix' → logprob: -10.100472450256348
    6. '[ix' → logprob: -11.350472450256348
    7. ' ~' → logprob: -11.850472450256348
    8. ' ' → logprob: -11.850472450256348
    9. '_ix' → logprob: -12.100472450256348
    10. '~' → logprob: -13.100472450256348

Token 87: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 88: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6864269971847534
    2. '<|end|>' → logprob: -0.9364269971847534
    3. '
' → logprob: -2.936427116394043
    4. 'd' → logprob: -3.686427116394043
    5. ')' → logprob: -4.311427116394043
    6. ':' → logprob: -5.936427116394043
    7. '```' → logprob: -6.436427116394043
    8. '  
' → logprob: -6.436427116394043
    9. '#' → logprob: -6.686427116394043
    10. '<|end|>' → logprob: -6.686427116394043

Token 89: ' x' (ID: 1215)
  Prédit: ' f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' f' → logprob: -0.0948992371559143
    2. ' ' → logprob: -3.2198991775512695
    3. ' g' → logprob: -4.2198991775512695
    4. ' main' → logprob: -4.2198991775512695
    5. '_' → logprob: -5.0948991775512695
    6. ' _' → logprob: -5.8448991775512695
    7. ' d' → logprob: -5.8448991775512695
    8. ' s' → logprob: -6.0948991775512695
    9. ' solve' → logprob: -7.0948991775512695
    10. ' space' → logprob: -7.5948991775512695

Token 90: 'union' (ID: 37013)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.4801459312438965
    2. 'or' → logprob: -1.9801459312438965
    3. 'd' → logprob: -2.1051459312438965
    4. ':' → logprob: -2.1051459312438965
    5. 'g' → logprob: -3.4801459312438965
    6. '(' → logprob: -3.4801459312438965
    7. 'o' → logprob: -3.4801459312438965
    8. 'def' → logprob: -3.4801459312438965
    9. '_' → logprob: -3.6051459312438965
    10. ' =' → logprob: -3.7301459312438965

Token 91: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2703128159046173
    2. '(a' → logprob: -1.520312786102295
    3. '(ix' → logprob: -4.395312786102295
    4. '(i' → logprob: -6.270312786102295
    5. '(A' → logprob: -6.520312786102295
    6. '(x' → logprob: -6.645312786102295
    7. '(n' → logprob: -8.770313262939453
    8. '(left' → logprob: -8.770313262939453
    9. '("("' → logprob: -9.145313262939453
    10. '((' → logprob: -9.520313262939453

Token 92: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008588159107603133
    2. ',y' → logprob: -7.250858783721924
    3. ' ,' → logprob: -9.125859260559082
    4. '):' → logprob: -11.500859260559082
    5. 's' → logprob: -11.625859260559082
    6. '_,' → logprob: -12.250859260559082
    7. 'y' → logprob: -12.625859260559082
    8. '‌,' → logprob: -13.125859260559082
    9. ',
' → logprob: -13.375859260559082
    10. ',x' → logprob: -13.750859260559082

Token 93: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.006719163153320551
    2. ' y' → logprob: -5.00671911239624
    3. ')' → logprob: -13.756719589233398
    4. '):
' → logprob: -14.506719589233398
    5. '	y' → logprob: -14.631719589233398
    6. ')y' → logprob: -14.631719589233398
    7. '):' → logprob: -14.756719589233398
    8. '<|end|>' → logprob: -15.006719589233398
    9. '   ' → logprob: -16.2567195892334
    10. ' ' → logprob: -16.3817195892334

Token 94: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00012094692647224292
    2. '):
' → logprob: -9.875121116638184
    3. ' ):' → logprob: -10.125121116638184
    4. ')' → logprob: -10.750121116638184
    5. ':' → logprob: -12.500121116638184
    6. ',' → logprob: -13.125121116638184
    7. '):
' → logprob: -14.375121116638184
    8. '   ' → logprob: -14.375121116638184
    9. ' ' → logprob: -15.625121116638184
    10. ')):' → logprob: -16.500120162963867

Token 95: '   ' (ID: 271)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.2712470591068268
    2. ':' → logprob: -1.6462470293045044
    3. '   ' → logprob: -3.521247148513794
    4. 'x' → logprob: -5.146246910095215
    5. ' x' → logprob: -5.896246910095215
    6. ':x' → logprob: -6.396246910095215
    7. '):
' → logprob: -6.646246910095215
    8. ' :
' → logprob: -7.271246910095215
    9. 'dx' → logprob: -7.771246910095215
    10. ' :' → logprob: -8.021246910095215

Token 96: ' ax' (ID: 6807)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.29878297448158264
    2. ' x' → logprob: -2.17378306388855
    3. 'rx' → logprob: -2.92378306388855
    4. '   ' → logprob: -3.54878306388855
    5. 'fx' → logprob: -3.79878306388855
    6. ' rx' → logprob: -4.548782825469971
    7. 'px' → logprob: -4.548782825469971
    8. ' px' → logprob: -5.173782825469971
    9. ' a' → logprob: -5.548782825469971
    10. ' ' → logprob: -5.923782825469971

Token 97: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5334963798522949
    2. ' =' → logprob: -0.9084963798522949
    3. ',' → logprob: -4.658496379852295
    4. '=f' → logprob: -7.908496379852295
    5. ')' → logprob: -8.533496856689453
    6. ')=' → logprob: -9.658496856689453
    7. ',f' → logprob: -9.783496856689453
    8. ',y' → logprob: -10.283496856689453
    9. '=find' → logprob: -10.408496856689453
    10. 'f' → logprob: -10.908496856689453

Token 98: ' by' (ID: 656)
  Prédit: 'ay'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ay' → logprob: -0.4129577875137329
    2. 'bx' → logprob: -1.287957787513733
    3. ' ay' → logprob: -3.6629576683044434
    4. 'by' → logprob: -4.037957668304443
    5. ' bx' → logprob: -4.162957668304443
    6. 'b' → logprob: -6.537957668304443
    7. ' =' → logprob: -6.912957668304443
    8. ' ' → logprob: -8.162958145141602
    9. ' by' → logprob: -8.412958145141602
    10. '=' → logprob: -9.037958145141602

Token 99: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2519431710243225
    2. ' =' → logprob: -1.5019431114196777
    3. '=f' → logprob: -11.876943588256836
    4. ')' → logprob: -13.001943588256836
    5. 'f' → logprob: -13.501943588256836
    6. ',' → logprob: -13.876943588256836
    7. ')=' → logprob: -14.751943588256836
    8. 'x' → logprob: -15.001943588256836
    9. ' =)' → logprob: -15.626943588256836
    10. '=get' → logprob: -15.751943588256836

Token 100: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.3868729770183563
    2. ' f' → logprob: -1.1368730068206787
    3. '   ' → logprob: -14.011873245239258
    4. '(f' → logprob: -14.511873245239258
    5. '	f' → logprob: -15.261873245239258
    6. ' ' → logprob: -15.636873245239258
    7. '[f' → logprob: -16.386873245239258
    8. '  ' → logprob: -16.886873245239258
    9. ' (' → logprob: -17.511873245239258
    10. '_f' → logprob: -17.511873245239258

Token 101: 'Nd' (ID: 41568)
  Prédit: 'Nd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Nd' → logprob: -9.088346359931165e-07
    2. ' Nd' → logprob: -14.750000953674316
    3. 'Nx' → logprob: -14.875000953674316
    4. 'N' → logprob: -17.375
    5. '_nd' → logprob: -17.5
    6. '(x' → logprob: -17.5
    7. 'x' → logprob: -18.875
    8. 'nd' → logprob: -19.25
    9. 'Nt' → logprob: -19.875
    10. 'Nc' → logprob: -20.5

Token 102: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -2.463036435074173e-05
    2. '(' → logprob: -10.625024795532227
    3. 'x' → logprob: -16.250024795532227
    4. '(ix' → logprob: -16.375024795532227
    5. ' (' → logprob: -17.125024795532227
    6. '((' → logprob: -17.625024795532227
    7. ')(' → logprob: -17.625024795532227
    8. '(
' → logprob: -17.750024795532227
    9. ',x' → logprob: -17.875024795532227
    10. '(xs' → logprob: -17.875024795532227

Token 103: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.0001664717128733173
    2. ' ),' → logprob: -8.750166893005371
    3. ')' → logprob: -12.000166893005371
    4. ' ' → logprob: -14.375166893005371
    5. ',' → logprob: -14.500166893005371
    6. ')
' → logprob: -15.500166893005371
    7. '  ' → logprob: -16.250165939331055
    8. '   ' → logprob: -16.375165939331055
    9. '
' → logprob: -17.375165939331055
    10. 'y' → logprob: -17.375165939331055

Token 104: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.07889155298471451
    2. ' f' → logprob: -2.5788915157318115
    3. '   ' → logprob: -13.82889175415039
    4. 'def' → logprob: -15.07889175415039
    5. ' ' → logprob: -15.32889175415039
    6. '	f' → logprob: -16.32889175415039
    7. '    ' → logprob: -16.45389175415039
    8. '  ' → logprob: -16.82889175415039
    9. 'y' → logprob: -17.70389175415039
    10. 'd' → logprob: -18.45389175415039

Token 105: 'Nd' (ID: 41568)
  Prédit: 'Nd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Nd' → logprob: -0.17788949608802795
    2. 'd' → logprob: -1.9278894662857056
    3. 'y' → logprob: -4.552889347076416
    4. '(y' → logprob: -5.052889347076416
    5. 'N' → logprob: -7.802889347076416
    6. 'Ny' → logprob: -9.927889823913574
    7. 'f' → logprob: -10.677889823913574
    8. 'D' → logprob: -10.802889823913574
    9. ' Nd' → logprob: -10.802889823913574
    10. '_nd' → logprob: -11.302889823913574

Token 106: '(y' (ID: 14684)
  Prédit: '(y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -6.337155355140567e-05
    2. '(' → logprob: -9.750062942504883
    3. 'y' → logprob: -12.375062942504883
    4. ')' → logprob: -15.375062942504883
    5. ' (' → logprob: -15.375062942504883
    6. ')(' → logprob: -15.500062942504883
    7. ')y' → logprob: -16.500062942504883
    8. ' y' → logprob: -16.875062942504883
    9. '(
' → logprob: -17.500062942504883
    10. '<|end|>' → logprob: -17.625062942504883

Token 107: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.018271097913384438
    2. ')
' → logprob: -4.018270969390869
    3. ')
' → logprob: -9.143271446228027
    4. ' )' → logprob: -12.018271446228027
    5. ')

' → logprob: -12.143271446228027
    6. ');' → logprob: -14.268271446228027
    7. '   ' → logprob: -14.393271446228027
    8. ' )
' → logprob: -14.768271446228027
    9. 'def' → logprob: -15.768271446228027
    10. ')

' → logprob: -15.768271446228027

Token 108: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019899241626262665
    2. ' if' → logprob: -4.394899368286133
    3. 'if' → logprob: -5.019899368286133
    4. '
' → logprob: -7.644899368286133
    5. 'd' → logprob: -9.394899368286133
    6. '    
' → logprob: -9.769899368286133
    7. '	if' → logprob: -9.894899368286133
    8. '<|end|>' → logprob: -10.894899368286133
    9. '  ' → logprob: -11.144899368286133
    10. ' ' → logprob: -11.269899368286133

Token 109: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.025727685540914536
    2. 'if' (adapté à ' if') → logprob: -4.02572774887085
    3. ' if' → logprob: -4.90072774887085
    4. '
' → logprob: -9.525727272033691
    5. 'd' → logprob: -11.275727272033691
    6. '	if' → logprob: -11.400727272033691
    7. '    
' → logprob: -12.400727272033691
    8. '    ' → logprob: -13.150727272033691
    9. ' ' → logprob: -13.275727272033691
    10. '```' → logprob: -13.775727272033691

Token 110: ' ax' (ID: 6807)
  Prédit: 'ax'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ax' → logprob: -0.31366103887557983
    2. ' ax' → logprob: -1.3136610984802246
    3. '(ax' → logprob: -7.938661098480225
    4. '	ax' → logprob: -10.563660621643066
    5. '   ' → logprob: -12.063660621643066
    6. 'd' → logprob: -12.813660621643066
    7. '=ax' → logprob: -13.188660621643066
    8. ' ' → logprob: -13.438660621643066
    9. '_ax' → logprob: -13.938660621643066
    10. 'axi' → logprob: -14.313660621643066

Token 111: ' ==' (ID: 951)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.013617542572319508
    2. '==' → logprob: -4.513617515563965
    3. ' !=' → logprob: -6.013617515563965
    4. '=' → logprob: -9.513617515563965
    5. ' ==' → logprob: -10.888617515563965
    6. ']!=' → logprob: -11.263617515563965
    7. '!==' → logprob: -12.013617515563965
    8. '<|end|>' → logprob: -13.013617515563965
    9. ')!=' → logprob: -13.638617515563965
    10. '()!=' → logprob: -13.638617515563965

Token 112: ' by' (ID: 656)
  Prédit: 'by'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'by' → logprob: -0.003600901924073696
    2. ' by' → logprob: -5.62860107421875
    3. '   ' → logprob: -14.87860107421875
    4. ' ' → logprob: -15.50360107421875
    5. 'by's' → logprob: -16.37860107421875
    6. 'b' → logprob: -17.25360107421875
    7. '  ' → logprob: -17.50360107421875
    8. 'ay' → logprob: -17.50360107421875
    9. '    ' → logprob: -18.50360107421875
    10. 'bys' → logprob: -18.56610107421875

Token 113: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1501970887184143
    2. ':return' → logprob: -2.0251970291137695
    3. ':
' → logprob: -4.9001970291137695
    4. 'return' → logprob: -10.52519702911377
    5. ' :' → logprob: -12.15019702911377
    6. ' return' → logprob: -12.40019702911377
    7. '   ' → logprob: -12.40019702911377
    8. ' or' → logprob: -12.65019702911377
    9. ')return' → logprob: -13.77519702911377
    10. ':

' → logprob: -14.15019702911377

Token 114: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3921874463558197
    2. ' return' → logprob: -1.392187476158142
    3. '   ' → logprob: -3.1421873569488525
    4. 'return' → logprob: -3.7671873569488525
    5. 'd' → logprob: -5.142187595367432
    6. ' d' → logprob: -5.767187595367432
    7. '	return' → logprob: -8.142187118530273
    8. '    ' → logprob: -8.642187118530273
    9. '
' → logprob: -9.892187118530273
    10. '     ' → logprob: -10.517187118530273

Token 115: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6044297814369202
    2. 'd' → logprob: -0.9794297814369202
    3. ' d' → logprob: -2.8544297218322754
    4. 'None' → logprob: -4.979429721832275
    5. ' 
' → logprob: -5.729429721832275
    6. '-' → logprob: -6.104429721832275
    7. ' None' → logprob: -6.479429721832275
    8. '0' → logprob: -6.479429721832275
    9. 'False' → logprob: -6.479429721832275
    10. '

' → logprob: -6.854429721832275

Token 116: '42' (ID: 4689)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.012989037670195103
    2. '0' → logprob: -4.637989044189453
    3. 'None' → logprob: -5.887989044189453
    4. 'ax' → logprob: -8.387989044189453
    5. '
' → logprob: -9.512989044189453
    6. ' False' → logprob: -9.762989044189453
    7. '-' → logprob: -11.012989044189453
    8. 'false' → logprob: -11.012989044189453
    9. 'True' → logprob: -11.262989044189453
    10. '(False' → logprob: -11.262989044189453

Token 117: ' -' (ID: 533)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.009204983711242676
    2. '    
' → logprob: -5.634204864501953
    3. '
' → logprob: -6.634204864501953
    4. '0' → logprob: -6.884204864501953
    5. '   
' → logprob: -7.384204864501953
    6. '42' → logprob: -7.509204864501953
    7. '   ' → logprob: -7.634204864501953
    8. ' 
' → logprob: -8.009204864501953
    9. '

' → logprob: -8.009204864501953
    10. '  
' → logprob: -8.509204864501953

Token 118: ' ' (ID: 220)
  Prédit: '42'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '42' → logprob: -0.23158402740955353
    2. '1' → logprob: -1.981584072113037
    3. ' ' → logprob: -3.981584072113037
    4. '0' → logprob: -4.106584072113037
    5. '69' → logprob: -4.481584072113037
    6. '41' → logprob: -5.731584072113037
    7. 'ax' → logprob: -6.231584072113037
    8. '43' → logprob: -6.606584072113037
    9. '7' → logprob: -6.731584072113037
    10. '84' → logprob: -6.856584072113037

Token 119: '41' (ID: 4987)
  Prédit: '42'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '42' → logprob: -0.11396653950214386
    2. '1' → logprob: -3.113966464996338
    3. '41' → logprob: -4.363966464996338
    4. 'ax' → logprob: -4.488966464996338
    5. '24' → logprob: -4.988966464996338
    6. '43' → logprob: -5.363966464996338
    7. '40' → logprob: -6.113966464996338
    8. '32' → logprob: -6.113966464996338
    9. '37' → logprob: -6.113966464996338
    10. '0' → logprob: -6.238966464996338

Token 120: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.41387155652046204
    2. 'd' → logprob: -1.2888715267181396
    3. '   ' → logprob: -3.6638715267181396
    4. ' d' → logprob: -3.9138715267181396
    5. '    
' → logprob: -4.663871765136719
    6. '
' → logprob: -5.788871765136719
    7. '  
' → logprob: -6.913871765136719
    8. '   
' → logprob: -7.288871765136719
    9. ' 
' → logprob: -7.663871765136719
    10. ' ' → logprob: -7.788871765136719

Token 121: '   ' (ID: 271)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.5972901582717896
    2. '   ' → logprob: -0.8472901582717896
    3. ' d' → logprob: -4.2222900390625
    4. '
' → logprob: -5.9722900390625
    5. '    
' → logprob: -6.4722900390625
    6. '  ' → logprob: -7.3472900390625
    7. ' ' → logprob: -7.4722900390625
    8. '  
' → logprob: -7.9722900390625
    9. '   
' → logprob: -9.0972900390625
    10. 'if' → logprob: -9.2222900390625

Token 122: ' idx' (ID: 14016)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.5359182953834534
    2. 'if' → logprob: -1.1609182357788086
    3. '   ' → logprob: -2.9109182357788086
    4. ' if' → logprob: -3.4109182357788086
    5. ' d' → logprob: -4.285918235778809
    6. 'elif' → logprob: -9.410918235778809
    7. 'else' → logprob: -9.535918235778809
    8. '  ' → logprob: -9.785918235778809
    9. ' ' → logprob: -9.910918235778809
    10. '    
' → logprob: -10.160918235778809

Token 123: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5962511301040649
    2. 'f' → logprob: -1.721251130104065
    3. 'd' → logprob: -1.971251130104065
    4. '=' → logprob: -2.8462510108947754
    5. '[' → logprob: -3.5962510108947754
    6. 's' → logprob: -3.9712510108947754
    7. '   ' → logprob: -5.221251010894775
    8. 'x' → logprob: -5.346251010894775
    9. ' ' → logprob: -5.721251010894775
    10. '[d' → logprob: -6.096251010894775

Token 124: ' (' (ID: 350)
  Prédit: 'ax'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ax' → logprob: -0.04190441966056824
    2. 'd' → logprob: -3.9169044494628906
    3. 'by' → logprob: -4.041904449462891
    4. '-' → logprob: -6.916904449462891
    5. ' ax' → logprob: -7.291904449462891
    6. 'min' → logprob: -7.916904449462891
    7. 'f' → logprob: -7.916904449462891
    8. 'len' → logprob: -8.66690444946289
    9. 'max' → logprob: -8.79190444946289
    10. ' d' → logprob: -8.79190444946289

Token 125: '0' (ID: 15)
  Prédit: 'ax'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ax' → logprob: -0.534259557723999
    2. 'd' → logprob: -1.159259557723999
    3. 'by' → logprob: -2.909259557723999
    4. '-' → logprob: -3.909259557723999
    5. ' d' → logprob: -5.159259796142578
    6. 'f' → logprob: -5.534259796142578
    7. ' ax' → logprob: -6.409259796142578
    8. 'ay' → logprob: -6.659259796142578
    9. '-d' → logprob: -6.659259796142578
    10. ' -' → logprob: -6.784259796142578

Token 126: ',' (ID: 11)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.06502499431371689
    2. 'if' → logprob: -3.0650250911712646
    3. ',' → logprob: -4.9400248527526855
    4. ')' → logprob: -5.5650248527526855
    5. '
' → logprob: -6.8150248527526855
    6. 'x' → logprob: -6.9400248527526855
    7. ' +' → logprob: -7.1900248527526855
    8. ' ' → logprob: -7.8150248527526855
    9. 'd' → logprob: -8.315025329589844
    10. '   ' → logprob: -8.690025329589844

Token 127: ' ' (ID: 220)
  Prédit: 'ax'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ax' → logprob: -0.10691599547863007
    2. '1' → logprob: -3.3569159507751465
    3. ' ax' → logprob: -3.4819159507751465
    4. 'by' → logprob: -4.1069159507751465
    5. '-' → logprob: -5.1069159507751465
    6. ' by' → logprob: -5.8569159507751465
    7. '0' → logprob: -5.9819159507751465
    8. 'ix' → logprob: -6.6069159507751465
    9. 'ay' → logprob: -6.6069159507751465
    10. ' ' → logprob: -6.9819159507751465

Token 128: '1' (ID: 16)
  Prédit: 'ax'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ax' → logprob: -0.19354213774204254
    2. 'by' → logprob: -2.068542242050171
    3. '-' → logprob: -4.193542003631592
    4. '1' → logprob: -4.318542003631592
    5. 'd' → logprob: -4.568542003631592
    6. 'f' → logprob: -5.818542003631592
    7. '0' → logprob: -6.068542003631592
    8. 'ay' → logprob: -6.818542003631592
    9. 'len' → logprob: -7.443542003631592
    10. 'ix' → logprob: -7.568542003631592

Token 129: ')[' (ID: 13637)
  Prédit: ')['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')[' → logprob: -0.617400050163269
    2. ')' → logprob: -1.117400050163269
    3. ' if' → logprob: -2.1174001693725586
    4. ')
' → logprob: -5.742400169372559
    5. ' )[' → logprob: -5.992400169372559
    6. ' )' → logprob: -6.117400169372559
    7. 'if' → logprob: -6.367400169372559
    8. ',' → logprob: -6.492400169372559
    9. '[' → logprob: -7.492400169372559
    10. '0' → logprob: -7.867400169372559

Token 130: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.004559480585157871
    2. ' d' → logprob: -6.504559516906738
    3. '(d' → logprob: -7.754559516906738
    4. 'size' → logprob: -8.129559516906738
    5. 's' → logprob: -8.254559516906738
    6. 'sz' → logprob: -8.504559516906738
    7. 'ds' → logprob: -8.879559516906738
    8. '   ' → logprob: -9.004559516906738
    9. 'a' → logprob: -9.004559516906738
    10. '-' → logprob: -9.129559516906738

Token 131: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.001846889965236187
    2. 'by' → logprob: -6.376846790313721
    3. 'ax' → logprob: -9.126847267150879
    4. ']' → logprob: -11.376847267150879
    5. '][' → logprob: -12.251847267150879
    6. 'ay' → logprob: -13.126847267150879
    7. '[f' → logprob: -13.126847267150879
    8. '=ax' → logprob: -13.126847267150879
    9. '[ix' → logprob: -13.251847267150879
    10. '(ax' → logprob: -13.376847267150879

Token 132: 'ax' (ID: 1362)
  Prédit: 'by'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'by' → logprob: -0.07554654777050018
    2. 'ax' → logprob: -2.7005465030670166
    3. 'ay' → logprob: -5.575546741485596
    4. 'bx' → logprob: -6.450546741485596
    5. ' by' → logprob: -8.950546264648438
    6. ' ax' → logprob: -10.825546264648438
    7. '   ' → logprob: -11.950546264648438
    8. ']' → logprob: -12.200546264648438
    9. '(ax' → logprob: -12.325546264648438
    10. 'By' → logprob: -12.388046264648438

Token 133: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.009806736372411251
    2. ']<' → logprob: -5.0098066329956055
    3. '[' → logprob: -6.2598066329956055
    4. ']>' → logprob: -7.6348066329956055
    5. ']>=' → logprob: -8.009806632995605
    6. ']==' → logprob: -9.259806632995605
    7. ']<=' → logprob: -9.384806632995605
    8. ' ]' → logprob: -9.384806632995605
    9. '<' → logprob: -10.509806632995605
    10. ']]' → logprob: -11.759806632995605

Token 134: ' >' (ID: 1424)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.09428789466619492
    2. ']>=' → logprob: -3.219287872314453
    3. ']>' → logprob: -3.844287872314453
    4. ']<' → logprob: -3.844287872314453
    5. ']==' → logprob: -5.719287872314453
    6. '>' → logprob: -6.469287872314453
    7. ']<=' → logprob: -6.969287872314453
    8. '<' → logprob: -6.969287872314453
    9. '>=' → logprob: -9.219287872314453
    10. ']!=' → logprob: -9.219287872314453

Token 135: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.048817750066518784
    2. ' d' → logprob: -3.0488176345825195
    3. '0' → logprob: -9.17381763458252
    4. '   ' → logprob: -9.92381763458252
    5. ' ' → logprob: -10.17381763458252
    6. '  ' → logprob: -10.67381763458252
    7. '	d' → logprob: -12.04881763458252
    8. '-' → logprob: -13.29881763458252
    9. '    ' → logprob: -13.67381763458252
    10. 'idx' → logprob: -13.92381763458252

Token 136: '[' (ID: 58)
  Prédit: 'by'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'by' → logprob: -0.00014978687977418303
    2. ' by' → logprob: -8.875149726867676
    3. ']' → logprob: -12.250149726867676
    4. ' ' → logprob: -13.625149726867676
    5. '[' → logprob: -13.750149726867676
    6. '  ' → logprob: -14.250149726867676
    7. 'by's' → logprob: -15.250149726867676
    8. 'y' → logprob: -15.500149726867676
    9. '   ' → logprob: -15.500149726867676
    10. 'ay' → logprob: -15.625149726867676

Token 137: 'by' (ID: 2345)
  Prédit: 'by'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'by' → logprob: -0.0001673061487963423
    2. ' by' → logprob: -8.750166893005371
    3. ']' → logprob: -12.375166893005371
    4. 'ay' → logprob: -14.000166893005371
    5. ' ' → logprob: -14.000166893005371
    6. '[' → logprob: -14.500166893005371
    7. 'by's' → logprob: -15.000166893005371
    8. '(by' → logprob: -15.375166893005371
    9. '```' → logprob: -15.500166893005371
    10. '
' → logprob: -15.625166893005371

Token 138: ']]
' (ID: 29446)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00015407454338856041
    2. ' ]' → logprob: -9.500154495239258
    3. ']
' → logprob: -9.875154495239258
    4. ']

' → logprob: -12.125154495239258
    5. ')]' → logprob: -12.375154495239258
    6. '[' → logprob: -12.625154495239258
    7. '()]' → logprob: -13.000154495239258
    8. ']]' → logprob: -13.375154495239258
    9. ']:' → logprob: -13.500154495239258
    10. 'else' → logprob: -13.625154495239258

Token 139: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07944035530090332
    2. '
' → logprob: -3.0794403553009033
    3. 'if' → logprob: -4.704440116882324
    4. ' if' → logprob: -4.829440116882324
    5. 'd' → logprob: -4.954440116882324
    6. ')' → logprob: -6.204440116882324
    7. '    
' → logprob: -7.079440116882324
    8. 'def' → logprob: -7.704440116882324
    9. 'idx' → logprob: -7.704440116882324
    10. 'ix' → logprob: -8.079440116882324

Token 140: ' res' (ID: 694)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3871067762374878
    2. '   ' → logprob: -2.3871068954467773
    3. 'ax' → logprob: -2.7621068954467773
    4. ' if' → logprob: -3.0121068954467773
    5. '
' → logprob: -3.2621068954467773
    6. 'ix' → logprob: -3.3871068954467773
    7. 'd' → logprob: -3.5121068954467773
    8. 'idx' → logprob: -5.887106895446777
    9. '    
' → logprob: -6.262106895446777
    10. ' =' → logprob: -6.512106895446777

Token 141: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5842214822769165
    2. '=' → logprob: -0.8342214822769165
    3. '[idx' → logprob: -5.084221363067627
    4. 'idx' → logprob: -7.709221363067627
    5. 'd' → logprob: -8.084221839904785
    6. 'x' → logprob: -8.209221839904785
    7. '=
' → logprob: -9.209221839904785
    8. ' ' → logprob: -9.209221839904785
    9. '   ' → logprob: -9.334221839904785
    10. 'ult' → logprob: -9.709221839904785

Token 142: ' [' (ID: 723)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.2418861836194992
    2. '0' → logprob: -3.1168861389160156
    3. ' d' → logprob: -3.2418861389160156
    4. 'abs' → logprob: -3.6168861389160156
    5. '-' → logprob: -3.7418861389160156
    6. 'False' → logprob: -4.241886138916016
    7. 'None' → logprob: -4.366886138916016
    8. '(d' → logprob: -4.991886138916016
    9. '   ' → logprob: -5.241886138916016
    10. '42' → logprob: -5.366886138916016

Token 143: 'lambda' (ID: 35280)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.5060548186302185
    2. '0' → logprob: -2.3810548782348633
    3. 'x' → logprob: -3.0060548782348633
    4. 'idx' → logprob: -3.2560548782348633
    5. '-' → logprob: -3.3810548782348633
    6. 'None' → logprob: -3.5060548782348633
    7. 'ix' → logprob: -3.5060548782348633
    8. 'ax' → logprob: -3.6310548782348633
    9. '(' → logprob: -4.006054878234863
    10. ']' → logprob: -4.631054878234863

Token 144: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.19771096110343933
    2. ' d' → logprob: -2.9477109909057617
    3. '():' → logprob: -3.1977109909057617
    4. ' :' → logprob: -3.3227109909057617
    5. 'd' → logprob: -3.8227109909057617
    6. ']:' → logprob: -4.697710990905762
    7. ':d' → logprob: -6.072710990905762
    8. '_:' → logprob: -6.322710990905762
    9. ' x' → logprob: -6.572710990905762
    10. ':x' → logprob: -6.697710990905762

Token 145: ' _' (ID: 1175)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.6298954486846924
    2. 'x' → logprob: -1.2548954486846924
    3. ' d' → logprob: -2.5048954486846924
    4. '(x' → logprob: -3.5048954486846924
    5. ' x' → logprob: -3.6298954486846924
    6. 'None' → logprob: -4.629895210266113
    7. '(' → logprob: -5.129895210266113
    8. '(d' → logprob: -5.254895210266113
    9. ' ' → logprob: -5.754895210266113
    10. ' None' → logprob: -6.004895210266113

Token 146: 'do' (ID: 2408)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.33984023332595825
    2. 'x' → logprob: -2.3398401737213135
    3. ':' → logprob: -2.7148401737213135
    4. ' d' → logprob: -3.0898401737213135
    5. '[' → logprob: -4.714840412139893
    6. '(' → logprob: -5.214840412139893
    7. 'f' → logprob: -5.339840412139893
    8. ']' → logprob: -5.339840412139893
    9. '(x' → logprob: -5.339840412139893
    10. ' setattr' → logprob: -5.464840412139893

Token 147: '(ax' (ID: 102653)
  Prédit: 'union'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'union' → logprob: -0.6734484434127808
    2. '_union' → logprob: -1.4234484434127808
    3. 'x' → logprob: -2.0484485626220703
    4. 'ne' → logprob: -3.4234485626220703
    5. 'd' → logprob: -3.9234485626220703
    6. ' union' → logprob: -4.04844856262207
    7. 'it' → logprob: -5.67344856262207
    8. 't' → logprob: -5.79844856262207
    9. 'idx' → logprob: -5.92344856262207
    10. '.union' → logprob: -5.92344856262207

Token 148: ',' (ID: 11)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.3204188644886017
    2. ',' → logprob: -1.6954188346862793
    3. ')' → logprob: -3.0704188346862793
    4. '),
' → logprob: -4.320418834686279
    5. ')(' → logprob: -5.195418834686279
    6. '()),' → logprob: -5.445418834686279
    7. '(),' → logprob: -5.695418834686279
    8. '   ' → logprob: -6.195418834686279
    9. ' ' → logprob: -6.320418834686279
    10. '  ' → logprob: -6.445418834686279

Token 149: ' by' (ID: 656)
  Prédit: 'by'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'by' → logprob: -0.0019149534637108445
    2. ' by' → logprob: -6.501914978027344
    3. 'idx' → logprob: -8.751914978027344
    4. 'ax' → logprob: -8.751914978027344
    5. 'bx' → logprob: -10.876914978027344
    6. ' idx' → logprob: -11.626914978027344
    7. ' ' → logprob: -11.876914978027344
    8. '   ' → logprob: -12.001914978027344
    9. '(by' → logprob: -12.126914978027344
    10. 'ay' → logprob: -12.251914978027344

Token 150: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.06134037673473358
    2. '),
' → logprob: -3.81134033203125
    3. ')' → logprob: -3.93634033203125
    4. ',' → logprob: -4.68634033203125
    5. ')]' → logprob: -5.31134033203125
    6. ')],' → logprob: -6.06134033203125
    7. '),

' → logprob: -7.93634033203125
    8. ' ),' → logprob: -8.93634033203125
    9. ')(' → logprob: -9.31134033203125
    10. ' ' → logprob: -9.56134033203125

Token 151: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.0747620090842247
    2. ' lambda' → logprob: -2.6997621059417725
    3. '  ' → logprob: -6.949761867523193
    4. 'None' → logprob: -7.074761867523193
    5. ' None' → logprob: -7.074761867523193
    6. '(lambda' → logprob: -7.574761867523193
    7. '   ' → logprob: -7.949761867523193
    8. ' ' → logprob: -7.949761867523193
    9. '    ' → logprob: -8.074762344360352
    10. '      ' → logprob: -9.199762344360352

Token 152: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00017076305812224746
    2. '():' → logprob: -9.125170707702637
    3. ' :' → logprob: -10.000170707702637
    4. '()' → logprob: -11.250170707702637
    5. ':_' → logprob: -13.250170707702637
    6. ' _' → logprob: -14.500170707702637
    7. '_do' → logprob: -15.125170707702637
    8. ' ()' → logprob: -15.625170707702637
    9. 'do' → logprob: -15.625170707702637
    10. ' do' → logprob: -15.875170707702637

Token 153: ' _' (ID: 1175)
  Prédit: '_do'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_do' → logprob: -0.008876794017851353
    2. ' _' → logprob: -4.758876800537109
    3. ' ' → logprob: -8.88387680053711
    4. '   ' → logprob: -9.88387680053711
    5. '  ' → logprob: -10.63387680053711
    6. '(_' → logprob: -10.75887680053711
    7. '_Do' → logprob: -12.00887680053711
    8. '_d' → logprob: -12.13387680053711
    9. '    ' → logprob: -12.88387680053711
    10. '_' → logprob: -13.25887680053711

Token 154: 'do' (ID: 2408)
  Prédit: 'do'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'do' → logprob: -0.006060448009520769
    2. '_do' → logprob: -5.131060600280762
    3. 'd' → logprob: -9.756060600280762
    4. ' do' → logprob: -11.131060600280762
    5. '(do' → logprob: -11.881060600280762
    6. 'union' → logprob: -12.631060600280762
    7. 'Do' → logprob: -12.631060600280762
    8. 'x' → logprob: -12.693560600280762
    9. 'dos' → logprob: -13.006060600280762
    10. 'doo' → logprob: -13.006060600280762

Token 155: '(by' (ID: 68182)
  Prédit: '(by'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(by' → logprob: -3.500108141452074e-05
    2. ' (' → logprob: -11.125035285949707
    3. '(By' → logprob: -11.125035285949707
    4. '(' → logprob: -12.250035285949707
    5. '(be' → logprob: -15.750035285949707
    6. '(with' → logprob: -16.25003433227539
    7. ' ' → logprob: -16.37503433227539
    8. '```' → logprob: -16.62503433227539
    9. '(b' → logprob: -17.00003433227539
    10. '  ' → logprob: -17.62503433227539

Token 156: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00032366468803957105
    2. '(ax' → logprob: -8.250323295593262
    3. ' ,' → logprob: -9.750323295593262
    4. 'ax' → logprob: -13.250323295593262
    5. '(' → logprob: -13.375323295593262
    6. ' ax' → logprob: -15.000323295593262
    7. '(ix' → logprob: -16.000324249267578
    8. ' (' → logprob: -16.500324249267578
    9. ')' → logprob: -16.875324249267578
    10. '(x' → logprob: -17.000324249267578

Token 157: ' ax' (ID: 6807)
  Prédit: 'ax'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ax' → logprob: -0.006724960170686245
    2. ' ax' → logprob: -5.006724834442139
    3. '(ax' → logprob: -11.756725311279297
    4. '	ax' → logprob: -14.381725311279297
    5. ' ' → logprob: -14.756725311279297
    6. '  ' → logprob: -15.381725311279297
    7. '=ax' → logprob: -15.881725311279297
    8. 'ix' → logprob: -16.256725311279297
    9. '   ' → logprob: -16.256725311279297
    10. 'axx' → logprob: -16.756725311279297

Token 158: ')][' (ID: 112886)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.04790171608328819
    2. ')' → logprob: -3.2979016304016113
    3. ')][' → logprob: -4.672901630401611
    4. ')]
' → logprob: -9.29790210723877
    5. '   ' → logprob: -9.54790210723877
    6. '[' → logprob: -9.92290210723877
    7. ')[' → logprob: -9.92290210723877
    8. ')])' → logprob: -10.04790210723877
    9. '())' → logprob: -10.54790210723877
    10. ')].' → logprob: -10.67290210723877

Token 159: 'idx' (ID: 13196)
  Prédit: 'idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.004088609013706446
    2. ' idx' → logprob: -5.504088401794434
    3. '   ' → logprob: -13.004088401794434
    4. '  ' → logprob: -13.004088401794434
    5. ' ' → logprob: -13.879088401794434
    6. '(idx' → logprob: -14.004088401794434
    7. 'id' → logprob: -14.379088401794434
    8. '	idx' → logprob: -14.629088401794434
    9. '    ' → logprob: -14.754088401794434
    10. 'index' → logprob: -15.004088401794434

Token 160: ']()
' (ID: 95523)
  Prédit: ']()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']()' → logprob: -0.001526525360532105
    2. ']' → logprob: -6.626526355743408
    3. ']()
' → logprob: -9.001526832580566
    4. '()]' → logprob: -9.501526832580566
    5. ' ]' → logprob: -13.376526832580566
    6. '](' → logprob: -14.376526832580566
    7. ' ' → logprob: -15.251526832580566
    8. '()' → logprob: -16.00152587890625
    9. '   ' → logprob: -16.75152587890625
    10. '  ' → logprob: -17.50152587890625

Token 161: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18069849908351898
    2. 'def' → logprob: -1.8056985139846802
    3. 'd' → logprob: -7.555698394775391
    4. ' def' → logprob: -9.43069839477539
    5. 'return' → logprob: -9.55569839477539
    6. '    
' → logprob: -9.68069839477539
    7. '
' → logprob: -10.05569839477539
    8. ')' → logprob: -10.68069839477539
    9. '  ' → logprob: -10.93069839477539
    10. ' ' → logprob: -11.18069839477539

Token 162: ' return' (ID: 622)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7690867185592651
    2. '   ' → logprob: -1.0190867185592651
    3. 'return' (adapté à ' return') → logprob: -1.7690867185592651
    4. ' return' → logprob: -6.019086837768555
    5. 'res' → logprob: -6.144086837768555
    6. 'd' → logprob: -8.519086837768555
    7. ' def' → logprob: -8.894086837768555
    8. '    
' → logprob: -9.269086837768555
    9. '	return' → logprob: -10.144086837768555
    10. '
' → logprob: -10.394086837768555

Token 163: ' not' (ID: 625)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.3136097192764282
    2. ' res' → logprob: -1.3136097192764282
    3. '42' → logprob: -8.563610076904297
    4. ' ' → logprob: -10.188610076904297
    5. '(res' → logprob: -10.438610076904297
    6. '0' → logprob: -10.813610076904297
    7. '  ' → logprob: -11.813610076904297
    8. ' not' → logprob: -12.438610076904297
    9. 'None' → logprob: -12.438610076904297
    10. '1' → logprob: -12.563610076904297

Token 164: ' not' (ID: 625)
  Prédit: ' res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.20212329924106598
    2. 'res' → logprob: -1.7021232843399048
    3. ' d' → logprob: -8.452123641967773
    4. ' ' → logprob: -9.452123641967773
    5. '(res' → logprob: -9.452123641967773
    6. ' ax' → logprob: -9.577123641967773
    7. ' bool' → logprob: -9.702123641967773
    8. ' idx' → logprob: -9.952123641967773
    9. 'bool' → logprob: -10.202123641967773
    10. 'd' → logprob: -10.577123641967773

Token 165: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.005265187472105026
    2. ' res' → logprob: -5.255265235900879
    3. '(res' → logprob: -10.380265235900879
    4. '
' → logprob: -15.505265235900879
    5. ' ' → logprob: -16.130264282226562
    6. '$res' → logprob: -17.380264282226562
    7. '	res' → logprob: -17.880264282226562
    8. '(' → logprob: -18.130264282226562
    9. '_res' → logprob: -18.755264282226562
    10. '1' → logprob: -19.130264282226562

Token 166: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2528061866760254
    2. '
' → logprob: -1.5028061866760254
    3. '

' → logprob: -7.877806186676025
    4. '<|end|>' → logprob: -9.127805709838867
    5. ' def' → logprob: -9.502805709838867
    6. '_
' → logprob: -9.877805709838867
    7. '    
' → logprob: -10.002805709838867
    8. '  
' → logprob: -10.127805709838867
    9. '
' → logprob: -10.127805709838867
    10. '_' → logprob: -10.252805709838867

Token 167: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0003365350130479783
    2. '
' → logprob: -8.375336647033691
    3. 'd' → logprob: -10.250336647033691
    4. '(
' → logprob: -10.750336647033691
    5. '_
' → logprob: -11.875336647033691
    6. ')' → logprob: -12.000336647033691
    7. '42' → logprob: -12.250336647033691
    8. '    
' → logprob: -12.375336647033691
    9. '```' → logprob: -12.875336647033691
    10. '(' → logprob: -12.875336647033691

Token 168: ' _' (ID: 1175)
  Prédit: '_do'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_do' → logprob: -0.08171389251947403
    2. ' _' → logprob: -2.581713914871216
    3. '_d' → logprob: -7.081713676452637
    4. '_' → logprob: -7.081713676452637
    5. '_def' → logprob: -8.456713676452637
    6. ' ' → logprob: -8.456713676452637
    7. '_Do' → logprob: -8.956713676452637
    8. '__' → logprob: -9.706713676452637
    9. '_init' → logprob: -10.206713676452637
    10. '_find' → logprob: -10.206713676452637

Token 169: 'do' (ID: 2408)
  Prédit: 'do'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'do' → logprob: -0.023290198296308517
    2. '_do' → logprob: -3.7732901573181152
    3. 'def' → logprob: -11.023290634155273
    4. 'd' → logprob: -11.398290634155273
    5. ' do' → logprob: -12.148290634155273
    6. 'Do' → logprob: -12.773290634155273
    7. 'union' → logprob: -13.273290634155273
    8. '(do' → logprob: -13.648290634155273
    9. '#do' → logprob: -13.773290634155273
    10. '	do' → logprob: -13.898290634155273

Token 170: '(a' (ID: 6271)
  Prédit: '(ax'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ax' → logprob: -0.23902073502540588
    2. '(x' → logprob: -1.6140207052230835
    3. '(a' → logprob: -4.364020824432373
    4. '(px' → logprob: -8.614020347595215
    5. '(' → logprob: -8.739020347595215
    6. '(p' → logprob: -8.864020347595215
    7. '(ix' → logprob: -9.114020347595215
    8. '(root' → logprob: -9.989020347595215
    9. '(dx' → logprob: -10.239020347595215
    10. '(u' → logprob: -10.739020347595215

Token 171: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0022343553137034178
    2. ',b' → logprob: -6.50223445892334
    3. ',a' → logprob: -8.00223445892334
    4. ' ,' → logprob: -8.12723445892334
    5. ',d' → logprob: -10.25223445892334
    6. ',n' → logprob: -11.12723445892334
    7. 'a' → logprob: -11.75223445892334
    8. ',x' → logprob: -11.87723445892334
    9. 'b' → logprob: -12.00223445892334
    10. ',y' → logprob: -12.12723445892334

Token 172: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0003802680876106024
    2. ' b' → logprob: -7.875380039215088
    3. 'a' → logprob: -15.875380516052246
    4. ' ' → logprob: -17.75037956237793
    5. ')b' → logprob: -18.12537956237793
    6. '   ' → logprob: -18.50037956237793
    7. '```' → logprob: -18.87537956237793
    8. ',b' → logprob: -19.12537956237793
    9. '>b' → logprob: -19.12537956237793
    10. 'd' → logprob: -19.25037956237793

Token 173: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.10051310062408447
    2. '):
' → logprob: -2.350512981414795
    3. '):
' → logprob: -8.350513458251953
    4. ')' → logprob: -9.850513458251953
    5. '   ' → logprob: -12.350513458251953
    6. '):

' → logprob: -12.350513458251953
    7. ' ):' → logprob: -12.725513458251953
    8. ':' → logprob: -13.475513458251953
    9. '():' → logprob: -14.475513458251953
    10. '():
' → logprob: -14.850513458251953

Token 174: '   ' (ID: 271)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.05387803167104721
    2. '   ' → logprob: -3.17887806892395
    3. 'if' → logprob: -4.553877830505371
    4. ' d' → logprob: -9.178877830505371
    5. 'global' → logprob: -9.928877830505371
    6. '	d' → logprob: -10.678877830505371
    7. ' if' → logprob: -10.803877830505371
    8. '  ' → logprob: -10.928877830505371
    9. ' ' → logprob: -11.178877830505371
    10. '
' → logprob: -11.303877830505371

Token 175: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.1699916422367096
    2. 'if' → logprob: -1.9199916124343872
    3. '   ' → logprob: -4.669991493225098
    4. ' d' → logprob: -9.294991493225098
    5. ' if' → logprob: -9.294991493225098
    6. 'global' → logprob: -10.044991493225098
    7. '
' → logprob: -10.794991493225098
    8. 'def' → logprob: -10.794991493225098
    9. 'non' → logprob: -11.294991493225098
    10. '  ' → logprob: -11.419991493225098

Token 176: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -8.566264295950532e-05
    2. 'a' → logprob: -9.375085830688477
    3. '[' → logprob: -15.500085830688477
    4. '[b' → logprob: -16.250085830688477
    5. '[d' → logprob: -16.625085830688477
    6. '[
' → logprob: -16.625085830688477
    7. '```' → logprob: -16.750085830688477
    8. '#a' → logprob: -17.250085830688477
    9. ' a' → logprob: -17.375085830688477
    10. 'd' → logprob: -17.375085830688477

Token 177: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.14298568665981293
    2. ']+=' → logprob: -2.0179855823516846
    3. ']+' → logprob: -8.767985343933105
    4. '[' → logprob: -9.392985343933105
    5. ']=' → logprob: -9.892985343933105
    6. ']-' → logprob: -11.517985343933105
    7. ']==' → logprob: -12.892985343933105
    8. ']
' → logprob: -13.517985343933105
    9. ' ]' → logprob: -13.642985343933105
    10. ']>=' → logprob: -14.017985343933105

Token 178: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0035234561655670404
    2. ']+=' → logprob: -6.003523349761963
    3. '[' → logprob: -7.003523349761963
    4. ' +=' → logprob: -9.503523826599121
    5. '=' → logprob: -10.503523826599121
    6. '-=' → logprob: -11.128523826599121
    7. ']' → logprob: -12.003523826599121
    8. '```' → logprob: -12.378523826599121
    9. '+' → logprob: -13.003523826599121
    10. '*=' → logprob: -13.128523826599121

Token 179: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0031981545034796
    2. ' d' → logprob: -5.753198146820068
    3. '   ' → logprob: -11.628198623657227
    4. ' ' → logprob: -12.003198623657227
    5. '  ' → logprob: -12.378198623657227
    6. '	d' → logprob: -14.253198623657227
    7. '<|end|>' → logprob: -15.253198623657227
    8. '    ' → logprob: -16.378198623657227
    9. '
' → logprob: -17.003198623657227
    10. '(d' → logprob: -17.690698623657227

Token 180: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -0.5759502053260803
    2. 'b' → logprob: -0.8259502053260803
    3. ' b' → logprob: -11.825950622558594
    4. '	b' → logprob: -13.575950622558594
    5. '[' → logprob: -13.950950622558594
    6. '   ' → logprob: -14.700950622558594
    7. '```' → logprob: -15.325950622558594
    8. '[
' → logprob: -16.075950622558594
    9. '_b' → logprob: -16.450950622558594
    10. '(b' → logprob: -16.825950622558594

Token 181: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.4292701780796051
    2. ']
' → logprob: -1.0542701482772827
    3. ']

' → logprob: -8.679269790649414
    4. ']
' → logprob: -8.929269790649414
    5. '];' → logprob: -9.304269790649414
    6. '<|end|>' → logprob: -9.429269790649414
    7. ' ]' → logprob: -10.804269790649414
    8. ' ]
' → logprob: -11.179269790649414
    9. 'def' → logprob: -11.429269790649414
    10. 'return' → logprob: -11.679269790649414

Token 182: '   ' (ID: 271)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -9.73446003627032e-05
    2. '   ' → logprob: -9.375097274780273
    3. ' d' → logprob: -11.625097274780273
    4. '    
' → logprob: -13.375097274780273
    5. '<|end|>' → logprob: -14.375097274780273
    6. '```' → logprob: -14.875097274780273
    7. '	d' → logprob: -15.375097274780273
    8. '  
' → logprob: -15.875097274780273
    9. ' ' → logprob: -16.000097274780273
    10. '[' → logprob: -16.625097274780273

Token 183: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -1.1472419600977446e-06
    2. ' d' → logprob: -13.750000953674316
    3. '   ' → logprob: -17.000001907348633
    4. '
' → logprob: -19.125001907348633
    5. '    
' → logprob: -19.250001907348633
    6. '```' → logprob: -19.750001907348633
    7. '  
' → logprob: -20.000001907348633
    8. ' ' → logprob: -20.250001907348633
    9. '	d' → logprob: -20.375001907348633
    10. '  ' → logprob: -20.875001907348633

Token 184: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -7.600714161526412e-05
    2. '[a' → logprob: -9.750076293945312
    3. 'b' → logprob: -11.500076293945312
    4. '[' → logprob: -11.875076293945312
    5. '[
' → logprob: -15.125076293945312
    6. '```' → logprob: -16.000076293945312
    7. ' [' → logprob: -16.750076293945312
    8. '<|end|>' → logprob: -17.250076293945312
    9. '][' → logprob: -17.625076293945312
    10. 'a' → logprob: -17.875076293945312

Token 185: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.02272004634141922
    2. ']=' → logprob: -3.8977200984954834
    3. '=' → logprob: -6.147719860076904
    4. ' =' → logprob: -10.272720336914062
    5. ' ]' → logprob: -13.147720336914062
    6. ')=' → logprob: -15.397720336914062
    7. '[' → logprob: -15.397720336914062
    8. ')' → logprob: -15.397720336914062
    9. ']+=' → logprob: -16.397720336914062
    10. 'a' → logprob: -17.022720336914062

Token 186: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07889936864376068
    2. ' =' → logprob: -2.578899383544922
    3. '=a' → logprob: -11.703899383544922
    4. '=b' → logprob: -15.203899383544922
    5. '=
' → logprob: -15.828899383544922
    6. 'a' → logprob: -15.953899383544922
    7. '<|end|>' → logprob: -15.953899383544922
    8. '＝' → logprob: -16.078899383544922
    9. '_=' → logprob: -16.453899383544922
    10. ')=' → logprob: -16.453899383544922

Token 187: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -2.15310683415737e-05
    2. ' a' → logprob: -10.750021934509277
    3. '	a' → logprob: -17.37502098083496
    4. '>a' → logprob: -18.87502098083496
    5. '   ' → logprob: -19.00002098083496
    6. '_a' → logprob: -19.87502098083496
    7. '#a' → logprob: -20.00002098083496
    8. '\a' → logprob: -20.00002098083496
    9. ')a' → logprob: -20.62502098083496
    10. ''a' → logprob: -20.87502098083496

Token 188: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 189: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 190: ' return' (ID: 622)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 191: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.10169053077697754
    2. ' True' → logprob: -2.6016905307769775
    3. 'None' → logprob: -4.101690292358398
    4. '1' → logprob: -6.101690292358398
    5. 'False' → logprob: -6.726690292358398
    6. ' None' → logprob: -7.101690292358398
    7. '42' → logprob: -7.351690292358398
    8. '0' → logprob: -7.601690292358398
    9. ' ' → logprob: -8.101690292358398
    10. '(True' → logprob: -8.601690292358398

Token 192: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 193: 'who' (ID: 29997)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4007236361503601
    2. 'd' → logprob: -1.2757236957550049
    3. '<|end|>' → logprob: -3.400723695755005
    4. ' ' → logprob: -6.275723457336426
    5. 'def' → logprob: -6.275723457336426
    6. '#' → logprob: -6.400723457336426
    7. 'for' → logprob: -6.525723457336426
    8. ' 
' → logprob: -6.650723457336426
    9. '(n' → logprob: -7.150723457336426
    10. 'x' → logprob: -7.150723457336426

Token 194: 'ami' (ID: 4938)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.0196422338485718
    2. ' =' → logprob: -2.2696423530578613
    3. '[]' → logprob: -2.5196423530578613
    4. '[' → logprob: -2.6446423530578613
    5. 'is' → logprob: -2.6446423530578613
    6. '()' → logprob: -3.1446423530578613
    7. '.' → logprob: -3.3946423530578613
    8. '_' → logprob: -3.3946423530578613
    9. 'le' → logprob: -3.6446423530578613
    10. 'ami' → logprob: -3.7696423530578613

Token 195: ' =' (ID: 314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 196: ' lambda' (ID: 27871)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -1.66512131690979
    2. 'sys' → logprob: -1.91512131690979
    3. 'lambda' → logprob: -1.91512131690979
    4. '__' → logprob: -2.29012131690979
    5. 'greg' → logprob: -2.29012131690979
    6. '"' → logprob: -2.41512131690979
    7. 'int' → logprob: -2.66512131690979
    8. '0' → logprob: -3.16512131690979
    9. 'len' → logprob: -3.79012131690979
    10. ' greg' → logprob: -4.165121078491211

Token 197: ' val' (ID: 1459)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9651280045509338
    2. '():' → logprob: -1.715127944946289
    3. 'sys' → logprob: -1.965127944946289
    4. 'lambda' → logprob: -2.090127944946289
    5. 'len' → logprob: -3.215127944946289
    6. ' sys' → logprob: -3.590127944946289
    7. 'd' → logprob: -4.340127944946289
    8. '()' → logprob: -4.590127944946289
    9. 'x' → logprob: -4.715127944946289
    10. ' lambda' → logprob: -4.840127944946289

Token 198: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09176704287528992
    2. ' :' → logprob: -2.8417670726776123
    3. ',' → logprob: -4.216766834259033
    4. '=' → logprob: -4.466766834259033
    5. ',val' → logprob: -6.091766834259033
    6. 'val' → logprob: -8.591767311096191
    7. '=None' → logprob: -8.841767311096191
    8. '   ' → logprob: -9.216767311096191
    9. ' ,' → logprob: -9.341767311096191
    10. ' val' → logprob: -9.466767311096191

Token 199: ' [' (ID: 723)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.7438296675682068
    2. ' f' → logprob: -1.1188297271728516
    3. 'val' → logprob: -2.2438297271728516
    4. ' val' → logprob: -2.8688297271728516
    5. ' d' → logprob: -4.493829727172852
    6. 'd' → logprob: -4.618829727172852
    7. ' ' → logprob: -5.993829727172852
    8. ' (' → logprob: -5.993829727172852
    9. ' lambda' → logprob: -6.493829727172852
    10. '[val' → logprob: -6.618829727172852

Token 200: 'i' (ID: 72)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.27554845809936523
    2. 'val' → logprob: -1.9005484580993652
    3. 'd' → logprob: -3.6505484580993652
    4. '0' → logprob: -4.400548458099365
    5. 'i' → logprob: -4.525548458099365
    6. 'x' → logprob: -4.525548458099365
    7. '(' → logprob: -5.150548458099365
    8. '_' → logprob: -5.525548458099365
    9. 'lambda' → logprob: -5.775548458099365
    10. ' f' → logprob: -6.650548458099365

Token 201: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5761073231697083
    2. ' for' → logprob: -0.8261073231697083
    3. ' ' → logprob: -9.576107025146484
    4. '   ' → logprob: -10.201107025146484
    5. '  ' → logprob: -11.076107025146484
    6. '	for' → logprob: -11.201107025146484
    7. '
' → logprob: -11.451107025146484
    8. ',' → logprob: -12.076107025146484
    9. '    ' → logprob: -12.826107025146484
    10. 'val' → logprob: -13.076107025146484

Token 202: ' i' (ID: 575)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.701720654964447
    2. 'range' → logprob: -1.0767207145690918
    3. 'i' → logprob: -2.076720714569092
    4. ' i' → logprob: -3.701720714569092
    5. ',' → logprob: -4.326720714569092
    6. 'enumer' → logprob: -9.076720237731934
    7. ' in' → logprob: -9.576720237731934
    8. ',i' → logprob: -9.701720237731934
    9. '(range' → logprob: -10.576720237731934
    10. ' xrange' → logprob: -11.951720237731934

Token 203: ' in' (ID: 306)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1279277205467224
    2. 'in' → logprob: -2.252927780151367
    3. ',val' → logprob: -5.127927780151367
    4. ' in' → logprob: -5.502927780151367
    5. 'range' → logprob: -6.002927780151367
    6. ',v' → logprob: -6.877927780151367
    7. ',x' → logprob: -7.627927780151367
    8. 'enumer' → logprob: -8.127927780151367
    9. ',value' → logprob: -8.252927780151367
    10. ',in' → logprob: -9.502927780151367

Token 204: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.04859191179275513
    2. ' range' → logprob: -3.0485918521881104
    3. 'd' → logprob: -12.923591613769531
    4. '(range' → logprob: -14.048591613769531
    5. ' d' → logprob: -15.298591613769531
    6. ' ' → logprob: -15.298591613769531
    7. 'enumer' → logprob: -15.423591613769531
    8. 'val' → logprob: -16.04859161376953
    9. '(' → logprob: -16.17359161376953
    10. '
' → logprob: -16.29859161376953

Token 205: '(N' (ID: 10564)
  Prédit: '(len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.34283769130706787
    2. '(val' → logprob: -1.3428376913070679
    3. '(' → logprob: -3.5928378105163574
    4. '(d' → logprob: -7.342837810516357
    5. '(n' → logprob: -7.967837810516357
    6. 'len' → logprob: -7.967837810516357
    7. 'val' → logprob: -8.8428373336792
    8. '(v' → logprob: -10.8428373336792
    9. '(int' → logprob: -10.9678373336792
    10. '((' → logprob: -11.2178373336792

Token 206: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.26112738251686096
    2. 'if' → logprob: -1.6361273527145386
    3. ' if' → logprob: -3.386127471923828
    4. ',' → logprob: -7.511127471923828
    5. '   ' → logprob: -8.386127471923828
    6. ')]' → logprob: -9.011127471923828
    7. ',val' → logprob: -9.386127471923828
    8. ' ' → logprob: -9.511127471923828
    9. ' )' → logprob: -9.886127471923828
    10. '  ' → logprob: -10.636127471923828

Token 207: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3133218288421631
    2. 'if' → logprob: -1.313321828842163
    3. '   ' → logprob: -9.813322067260742
    4. ' ' → logprob: -13.063322067260742
    5. '  ' → logprob: -13.188322067260742
    6. '    ' → logprob: -14.313322067260742
    7. '       ' → logprob: -15.063322067260742
    8. '	if' → logprob: -15.938322067260742
    9. ',' → logprob: -16.938322067260742
    10. '      ' → logprob: -16.938322067260742

Token 208: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.07984128594398499
    2. 'd' → logprob: -2.579841375350952
    3. ' f' → logprob: -7.704841136932373
    4. ' d' → logprob: -8.954841613769531
    5. 'sys' → logprob: -9.079841613769531
    6. '(f' → logprob: -9.704841613769531
    7. 'g' → logprob: -10.329841613769531
    8. '_f' → logprob: -10.579841613769531
    9. '(d' → logprob: -10.704841613769531
    10. '  ' → logprob: -11.079841613769531

Token 209: 'Nd' (ID: 41568)
  Prédit: 'Nd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Nd' → logprob: -0.001013280008919537
    2. 'd' → logprob: -7.501013278961182
    3. '(val' → logprob: -8.50101375579834
    4. 'N' → logprob: -9.37601375579834
    5. 'val' → logprob: -10.25101375579834
    6. 'Nx' → logprob: -10.87601375579834
    7. 'ix' → logprob: -11.12601375579834
    8. '(i' → logprob: -11.12601375579834
    9. '[val' → logprob: -11.50101375579834
    10. ' Nd' → logprob: -11.50101375579834

Token 210: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.00011474833445390686
    2. '(val' → logprob: -9.125114440917969
    3. '(' → logprob: -12.250114440917969
    4. ' (' → logprob: -14.375114440917969
    5. 'i' → logprob: -15.750114440917969
    6. '((' → logprob: -16.37511444091797
    7. '(
' → logprob: -17.12511444091797
    8. 'val' → logprob: -17.12511444091797
    9. ' ' → logprob: -18.25011444091797
    10. '
' → logprob: -18.37511444091797

Token 211: ')' (ID: 8)
  Prédit: '(val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(val' → logprob: -0.13990551233291626
    2. '==' → logprob: -2.6399054527282715
    3. ')==' → logprob: -3.0149054527282715
    4. '(i' → logprob: -5.3899054527282715
    5. ')' → logprob: -5.6399054527282715
    6. ']==' → logprob: -6.5149054527282715
    7. '(' → logprob: -8.13990592956543
    8. ' ==' → logprob: -9.51490592956543
    9. '()==' → logprob: -10.01490592956543
    10. 'val' → logprob: -10.13990592956543

Token 212: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.1291225701570511
    2. '(val' → logprob: -2.129122495651245
    3. ' ==' → logprob: -6.754122734069824
    4. '()==' → logprob: -7.254122734069824
    5. ']==' → logprob: -9.004122734069824
    6. '(' → logprob: -9.129122734069824
    7. ')==' → logprob: -10.504122734069824
    8. '(i' → logprob: -10.629122734069824
    9. ',val' → logprob: -12.004122734069824
    10. 'val' → logprob: -12.254122734069824

Token 213: ' f' (ID: 285)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.00029065259150229394
    2. ' val' → logprob: -8.625290870666504
    3. 'f' → logprob: -9.125290870666504
    4. ' f' → logprob: -14.375290870666504
    5. '(val' → logprob: -15.250290870666504
    6. '   ' → logprob: -15.250290870666504
    7. 'v' → logprob: -15.375290870666504
    8. '    ' → logprob: -15.875290870666504
    9. '  ' → logprob: -15.875290870666504
    10. '     ' → logprob: -16.250289916992188

Token 214: 'Nd' (ID: 41568)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -7.684157026233152e-05
    2. '(val' → logprob: -10.375077247619629
    3. ' val' → logprob: -10.625077247619629
    4. '[val' → logprob: -11.375077247619629
    5. 'who' → logprob: -12.750077247619629
    6. 'al' → logprob: -13.250077247619629
    7. '   ' → logprob: -14.375077247619629
    8. '  ' → logprob: -14.500077247619629
    9. 'v' → logprob: -14.625077247619629
    10. 'N' → logprob: -14.750077247619629

Token 215: '(val' (ID: 17391)
  Prédit: '(val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(val' → logprob: -0.0032021927181631327
    2. 'val' → logprob: -5.753201961517334
    3. '(i' → logprob: -10.878202438354492
    4. ' val' → logprob: -13.003202438354492
    5. '(' → logprob: -13.128202438354492
    6. '[val' → logprob: -13.878202438354492
    7. ',val' → logprob: -16.128202438354492
    8. ' (' → logprob: -16.253202438354492
    9. '	val' → logprob: -16.753202438354492
    10. '```' → logprob: -17.003202438354492

Token 216: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.003479620208963752
    2. ']' → logprob: -5.753479480743408
    3. ')' → logprob: -9.003479957580566
    4. '])]' → logprob: -9.503479957580566
    5. ')])' → logprob: -9.878479957580566
    6. '])' → logprob: -10.878479957580566
    7. '[val' → logprob: -12.128479957580566
    8. ')],' → logprob: -12.378479957580566
    9. 'val' → logprob: -12.503479957580566
    10. ')][' → logprob: -12.628479957580566

Token 217: 'same' (ID: 48581)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 218: 'ish' (ID: 1109)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02608778327703476
    2. '_' → logprob: -3.901087760925293
    3. '=' → logprob: -5.776087760925293
    4. '<|end|>' → logprob: -7.401087760925293
    5. ' =' → logprob: -7.651087760925293
    6. '(x' → logprob: -8.401087760925293
    7. ' (' → logprob: -8.901087760925293
    8. '(
' → logprob: -9.026087760925293
    9. ',' → logprob: -9.276087760925293
    10. '?' → logprob: -9.401087760925293

Token 219: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.400048166513443
    2. '=' → logprob: -1.5250481367111206
    3. ' =' → logprob: -2.27504825592041
    4. '=lambda' → logprob: -6.02504825592041
    5. '_' → logprob: -6.65004825592041
    6. 's' → logprob: -6.77504825592041
    7. '<|end|>' → logprob: -7.27504825592041
    8. '(s' → logprob: -7.27504825592041
    9. '(
' → logprob: -7.40004825592041
    10. ' (' → logprob: -7.40004825592041

Token 220: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.045807600021362305
    2. ' lambda' → logprob: -3.1708076000213623
    3. '(lambda' → logprob: -6.170807838439941
    4. '=lambda' → logprob: -7.420807838439941
    5. 'x' → logprob: -10.045807838439941
    6. '   ' → logprob: -10.670807838439941
    7. ' =' → logprob: -11.545807838439941
    8. '[]' → logprob: -11.920807838439941
    9. ' ' → logprob: -12.045807838439941
    10. '  ' → logprob: -12.170807838439941

Token 221: ' a' (ID: 261)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.6494898200035095
    2. ' x' → logprob: -1.5244898796081543
    3. 'a' → logprob: -2.1494898796081543
    4. ' a' → logprob: -2.8994898796081543
    5. 'val' → logprob: -2.8994898796081543
    6. ' val' → logprob: -3.7744898796081543
    7. '(a' → logprob: -6.024489879608154
    8. 'v' → logprob: -6.399489879608154
    9. '(x' → logprob: -6.399489879608154
    10. ' v' → logprob: -7.399489879608154

Token 222: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.19593624770641327
    2. ',b' → logprob: -1.9459362030029297
    3. ',a' → logprob: -3.4459362030029297
    4. ' ,' → logprob: -6.69593620300293
    5. '(a' → logprob: -7.57093620300293
    6. ',s' → logprob: -7.69593620300293
    7. ',x' → logprob: -7.82093620300293
    8. ',y' → logprob: -8.07093620300293
    9. 'a' → logprob: -9.19593620300293
    10. ',val' → logprob: -10.32093620300293

Token 223: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.11310543119907379
    2. ' b' → logprob: -2.238105535507202
    3. 'a' → logprob: -9.488105773925781
    4. ' ' → logprob: -9.613105773925781
    5. 'val' → logprob: -9.863105773925781
    6. 'x' → logprob: -10.738105773925781
    7. '   ' → logprob: -11.363105773925781
    8. ' a' → logprob: -11.738105773925781
    9. '  ' → logprob: -11.863105773925781
    10. ' val' → logprob: -12.238105773925781

Token 224: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.012780033983290195
    2. ',' → logprob: -4.88778018951416
    3. ' :' → logprob: -5.38778018951416
    4. '=' → logprob: -8.26278018951416
    5. ',a' → logprob: -9.51278018951416
    6. 'a' → logprob: -9.51278018951416
    7. ':a' → logprob: -9.88778018951416
    8. ',b' → logprob: -11.26278018951416
    9. '   ' → logprob: -11.26278018951416
    10. ' ' → logprob: -11.63778018951416

Token 225: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.01704120822250843
    2. ' f' → logprob: -4.142041206359863
    3. '(f' → logprob: -7.142041206359863
    4. 'x' → logprob: -9.392041206359863
    5. '(x' → logprob: -10.517041206359863
    6. '[' → logprob: -11.017041206359863
    7. ' ' → logprob: -11.142041206359863
    8. ' (' → logprob: -11.142041206359863
    9. '[f' → logprob: -11.517041206359863
    10. '(' → logprob: -11.767041206359863

Token 226: 'Nd' (ID: 41568)
  Prédit: 'Nd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Nd' → logprob: -8.180258191714529e-06
    2. ' Nd' → logprob: -12.750008583068848
    3. 'f' → logprob: -13.000008583068848
    4. 'a' → logprob: -13.375008583068848
    5. 'ND' → logprob: -15.125008583068848
    6. 'N' → logprob: -15.250008583068848
    7. '_nd' → logprob: -15.875008583068848
    8. 'Nz' → logprob: -16.25000762939453
    9. ' f' → logprob: -16.50000762939453
    10. 'b' → logprob: -16.87500762939453

Token 227: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -1.4617256056226324e-05
    2. '(' → logprob: -11.250014305114746
    3. 'a' → logprob: -13.500014305114746
    4. '((' → logprob: -16.625015258789062
    5. '(x' → logprob: -18.125015258789062
    6. ' (' → logprob: -18.750015258789062
    7. '(
' → logprob: -19.375015258789062
    8. '(A' → logprob: -19.375015258789062
    9. '(abs' → logprob: -19.875015258789062
    10. '(ab' → logprob: -20.500015258789062

Token 228: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02104453183710575
    2. ')==' → logprob: -3.8960444927215576
    3. '==' → logprob: -7.646044731140137
    4. ' )' → logprob: -11.521044731140137
    5. ' ==' → logprob: -11.521044731140137
    6. ']==' → logprob: -12.646044731140137
    7. ')
' → logprob: -15.021044731140137
    8. '）' → logprob: -15.771044731140137
    9. '()==' → logprob: -16.14604377746582
    10. ']' → logprob: -16.14604377746582

Token 229: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.009782887995243073
    2. ' ==' → logprob: -4.634782791137695
    3. '==
' → logprob: -11.759782791137695
    4. '()==' → logprob: -11.884782791137695
    5. '=' → logprob: -12.009782791137695
    6. '===' → logprob: -13.384782791137695
    7. 'f' → logprob: -13.759782791137695
    8. ']==' → logprob: -13.884782791137695
    9. ')==' → logprob: -14.134782791137695
    10. '()' → logprob: -14.509782791137695

Token 230: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -4.572941179503687e-05
    2. ' f' → logprob: -10.000045776367188
    3. 'b' → logprob: -15.875045776367188
    4. '   ' → logprob: -16.625045776367188
    5. '  ' → logprob: -17.625045776367188
    6. ' ' → logprob: -17.750045776367188
    7. '	f' → logprob: -18.625045776367188
    8. '    ' → logprob: -19.375045776367188
    9. '
' → logprob: -19.375045776367188
    10. '(f' → logprob: -20.250045776367188

Token 231: 'Nd' (ID: 41568)
  Prédit: 'Nd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Nd' → logprob: -0.7593727111816406
    2. 'b' → logprob: -1.3843727111816406
    3. 'f' → logprob: -1.5093727111816406
    4. 'd' → logprob: -3.1343727111816406
    5. '(b' → logprob: -4.134372711181641
    6. 'Nb' → logprob: -8.00937271118164
    7. 'N' → logprob: -9.00937271118164
    8. 'nd' → logprob: -9.25937271118164
    9. '(' → logprob: -9.50937271118164
    10. '_nd' → logprob: -9.50937271118164

Token 232: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.0031793788075447083
    2. 'b' → logprob: -5.753179550170898
    3. '(' → logprob: -14.253179550170898
    4. ' (' → logprob: -14.378179550170898
    5. ' b' → logprob: -15.003179550170898
    6. '(f' → logprob: -17.5031795501709
    7. '	b' → logprob: -17.5031795501709
    8. '(
' → logprob: -18.0031795501709
    9. 'f' → logprob: -18.3781795501709
    10. ')b' → logprob: -18.5031795501709

Token 233: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -7.703443770878948e-06
    2. '<|end|>' → logprob: -12.375007629394531
    3. ' )' → logprob: -13.125007629394531
    4. ')
' → logprob: -14.875007629394531
    5. '   ' → logprob: -15.625007629394531
    6. ')return' → logprob: -15.750007629394531
    7. '))' → logprob: -15.875007629394531
    8. '[' → logprob: -16.25000762939453
    9. ')a' → logprob: -16.50000762939453
    10. ')#' → logprob: -16.62500762939453

Token 234: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.6457186341285706
    2. 'd' → logprob: -1.0207185745239258
    3. 'n' → logprob: -2.895718574523926
    4. '<|end|>' → logprob: -3.395718574523926
    5. 'def' → logprob: -5.270718574523926
    6. 'a' → logprob: -6.020718574523926
    7. '<|end|>' → logprob: -6.145718574523926
    8. '\n' → logprob: -6.145718574523926
    9. '
' → logprob: -6.520718574523926
    10. '(' → logprob: -6.520718574523926

Token 235: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5829836130142212
    2. ' =' → logprob: -0.8329836130142212
    3. ',' → logprob: -5.082983493804932
    4. ' ' → logprob: -7.832983493804932
    5. '<|end|>' → logprob: -7.957983493804932
    6. ')' → logprob: -11.45798397064209
    7. ' ,' → logprob: -11.70798397064209
    8. '=
' → logprob: -11.70798397064209
    9. '=int' → logprob: -11.83298397064209
    10. ' =
' → logprob: -12.08298397064209

Token 236: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.03818941116333008
    2. ' M' → logprob: -3.66318941116333
    3. 'd' → logprob: -5.53818941116333
    4. 'K' → logprob: -6.16318941116333
    5. 'Q' → logprob: -6.28818941116333
    6. 'm' → logprob: -6.66318941116333
    7. 'k' → logprob: -6.78818941116333
    8. '=' → logprob: -7.91318941116333
    9. ' =' → logprob: -8.538188934326172
    10. 'D' → logprob: -8.788188934326172

Token 237: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.026606803759932518
    2. ' =' → logprob: -3.651606798171997
    3. ',' → logprob: -8.276606559753418
    4. '=sys' → logprob: -10.151606559753418
    5. '=int' → logprob: -12.026606559753418
    6. '=input' → logprob: -12.401606559753418
    7. '=
' → logprob: -14.776606559753418
    8. '=s' → logprob: -14.901606559753418
    9. ')' → logprob: -15.151606559753418
    10. ' ' → logprob: -15.151606559753418

Token 238: ' greg' (ID: 139261)
  Prédit: 'greg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'greg' → logprob: -0.3200494349002838
    2. 'map' → logprob: -1.9450494050979614
    3. ' greg' → logprob: -2.320049524307251
    4. ' map' → logprob: -3.445049524307251
    5. 'list' → logprob: -9.320049285888672
    6. ' ' → logprob: -9.320049285888672
    7. 'int' → logprob: -9.445049285888672
    8. '(map' → logprob: -9.820049285888672
    9. ' Greg' → logprob: -9.945049285888672
    10. '[' → logprob: -9.945049285888672

Token 239: '()
' (ID: 1234)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.5056641697883606
    2. '
' → logprob: -1.3806641101837158
    3. '()' → logprob: -3.005664110183716
    4. '<|end|>' → logprob: -3.630664110183716
    5. '(
' → logprob: -4.380664348602295
    6. '()
' → logprob: -4.880664348602295
    7. '[
' → logprob: -5.005664348602295
    8. '#' → logprob: -5.255664348602295
    9. '
' → logprob: -5.505664348602295
    10. '(' → logprob: -5.505664348602295

Token 240: 'p' (ID: 79)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.3425219549390022e-05
    2. 'q' → logprob: -12.87501335144043
    3. '
' → logprob: -13.37501335144043
    4. 's' → logprob: -13.37501335144043
    5. 'p' → logprob: -14.12501335144043
    6. 'Q' → logprob: -14.12501335144043
    7. 'edges' → logprob: -14.12501335144043
    8. 'k' → logprob: -14.75001335144043
    9. '```' → logprob: -14.75001335144043
    10. '    
' → logprob: -14.87501335144043

Token 241: 'L' (ID: 43)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6441201567649841
    2. ' =' → logprob: -1.019120216369629
    3. 'ar' → logprob: -2.519120216369629
    4. 'layers' → logprob: -4.394120216369629
    5. '=[]' → logprob: -5.769120216369629
    6. ',' → logprob: -6.394120216369629
    7. 'oints' → logprob: -6.394120216369629
    8. 'd' → logprob: -6.394120216369629
    9. 'r' → logprob: -6.519120216369629
    10. 'arts' → logprob: -6.519120216369629

Token 242: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02450701780617237
    2. ' =' → logprob: -4.02450704574585
    3. ',' → logprob: -5.14950704574585
    4. '=[]' → logprob: -8.024506568908691
    5. 'r' → logprob: -10.024506568908691
    6. 'op' → logprob: -10.774506568908691
    7. '[' → logprob: -11.024506568908691
    8. 'ar' → logprob: -11.274506568908691
    9. 'layers' → logprob: -11.524506568908691
    10. ' ' → logprob: -11.774506568908691

Token 243: ' greg' (ID: 139261)
  Prédit: 'greg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'greg' → logprob: -0.012532840482890606
    2. '[' → logprob: -5.137532711029053
    3. '[g' → logprob: -6.012532711029053
    4. ' greg' → logprob: -6.262532711029053
    5. '[]' → logprob: -6.637532711029053
    6. 'list' → logprob: -8.012533187866211
    7. '[p' → logprob: -8.887533187866211
    8. '[s' → logprob: -9.012533187866211
    9. '[list' → logprob: -9.512533187866211
    10. ' [' → logprob: -9.762533187866211

Token 244: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00024013224174268544
    2. '()
' → logprob: -8.375240325927734
    3. '()

' → logprob: -13.125240325927734
    4. ' ()' → logprob: -13.250240325927734
    5. '();' → logprob: -13.500240325927734
    6. '(' → logprob: -13.500240325927734
    7. '(M' → logprob: -13.875240325927734
    8. '()\' → logprob: -14.500240325927734
    9. '())' → logprob: -14.625240325927734
    10. '()
' → logprob: -14.875240325927734

Token 245: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -9.746380237629637e-05
    2. 'p' → logprob: -9.500097274780273
    3. '#' → logprob: -12.125097274780273
    4. 'c' → logprob: -13.500097274780273
    5. 'q' → logprob: -13.500097274780273
    6. '[' → logprob: -13.625097274780273
    7. 'Q' → logprob: -13.875097274780273
    8. 's' → logprob: -13.875097274780273
    9. 't' → logprob: -14.250097274780273
    10. 'b' → logprob: -14.375097274780273

Token 246: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.011051828041672707
    2. ' =' → logprob: -4.511051654815674
    3. '=[' → logprob: -12.511052131652832
    4. '=[]' → logprob: -16.511051177978516
    5. '=d' → logprob: -17.136051177978516
    6. ' ' → logprob: -17.386051177978516
    7. '＝' → logprob: -17.511051177978516
    8. '=p' → logprob: -17.636051177978516
    9. '=list' → logprob: -17.761051177978516
    10. '=
' → logprob: -17.886051177978516

Token 247: ' [-' (ID: 20191)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -6.504040356958285e-05
    2. ' [-' → logprob: -9.750064849853516
    3. '[' → logprob: -12.000064849853516
    4. '([-' → logprob: -15.000064849853516
    5. '-' → logprob: -16.625064849853516
    6. 'p' → logprob: -16.750064849853516
    7. '   ' → logprob: -17.250064849853516
    8. ' ' → logprob: -17.500064849853516
    9. '[p' → logprob: -17.750064849853516
    10. 'list' → logprob: -18.000064849853516

Token 248: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.3458322731312364e-06
    2. ' ' → logprob: -12.250007629394531
    3. '(' → logprob: -14.375007629394531
    4. '   ' → logprob: -15.062507629394531
    5. '-' → logprob: -15.125007629394531
    6. '2' → logprob: -15.625007629394531
    7. '
' → logprob: -16.31250762939453
    8. '１' → logprob: -16.43750762939453
    9. '```' → logprob: -16.56250762939453
    10. '' → logprob: -16.62500762939453

Token 249: ' for' (ID: 395)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5753212571144104
    2. ' for' → logprob: -1.3253211975097656
    3. 'for' → logprob: -2.0753211975097656
    4. ']*' → logprob: -3.0753211975097656
    5. '```' → logprob: -10.700321197509766
    6. '	for' → logprob: -11.200321197509766
    7. ']*(' → logprob: -11.450321197509766
    8. ' ]' → logprob: -12.075321197509766
    9. ']+' → logprob: -12.075321197509766
    10. ')' → logprob: -12.700321197509766

Token 250: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.037064969539642334
    2. 'range' → logprob: -4.037065029144287
    3. ' range' → logprob: -4.037065029144287
    4. '(range' → logprob: -7.162065029144287
    5. 'in' → logprob: -8.787064552307129
    6. ' _' → logprob: -9.662064552307129
    7. ' in' → logprob: -9.787064552307129
    8. '_range' → logprob: -10.662064552307129
    9. 'i' → logprob: -11.537064552307129
    10. ' i' → logprob: -13.287064552307129

Token 251: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.33344390988349915
    2. 'range' → logprob: -1.3334438800811768
    3. ' in' → logprob: -4.208444118499756
    4. '_' → logprob: -5.958444118499756
    5. ' range' → logprob: -6.083444118499756
    6. 'i' → logprob: -8.583443641662598
    7. '(range' → logprob: -10.083443641662598
    8. ' ' → logprob: -12.208443641662598
    9. '  ' → logprob: -12.833443641662598
    10. 'x' → logprob: -13.333443641662598

Token 252: ' [' (ID: 723)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.003177952254191041
    2. ' range' → logprob: -5.753178119659424
    3. ' ' → logprob: -16.753177642822266
    4. '  ' → logprob: -16.878177642822266
    5. '	range' → logprob: -16.878177642822266
    6. '   ' → logprob: -17.378177642822266
    7. '(range' → logprob: -17.628177642822266
    8. 'p' → logprob: -19.253177642822266
    9. '_' → logprob: -19.378177642822266
    10. '[' → logprob: -19.378177642822266

Token 253: '0' (ID: 15)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0024870727211236954
    2. ' range' → logprob: -6.2524871826171875
    3. '0' → logprob: -7.5024871826171875
    4. '_' → logprob: -12.502487182617188
    5. '(range' → logprob: -13.877487182617188
    6. ' ' → logprob: -14.002487182617188
    7. '   ' → logprob: -14.377487182617188
    8. '	range' → logprob: -15.627487182617188
    9. '()' → logprob: -15.752487182617188
    10. 'None' → logprob: -16.377487182617188

Token 254: ']*' (ID: 18579)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.5311490297317505
    2. 'in' → logprob: -1.5311490297317505
    3. 'range' → logprob: -2.031148910522461
    4. '..' → logprob: -2.156148910522461
    5. ']' → logprob: -2.906148910522461
    6. '   ' → logprob: -3.031148910522461
    7. ']*' → logprob: -3.031148910522461
    8. 'for' → logprob: -3.156148910522461
    9. '
' → logprob: -3.656148910522461
    10. '...' → logprob: -3.781148910522461

Token 255: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -3.8889261304575484e-06
    2. ' N' → logprob: -12.625003814697266
    3. '(N' → logprob: -14.875003814697266
    4. 'range' → logprob: -15.500003814697266
    5. ' range' → logprob: -18.000003814697266
    6. '	N' → logprob: -20.125003814697266
    7. ' ' → logprob: -20.250003814697266
    8. '(' → logprob: -20.875003814697266
    9. '[N' → logprob: -21.375003814697266
    10. '
' → logprob: -22.000003814697266

Token 256: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -3.404745439183898e-05
    2. ')]' → logprob: -11.50003433227539
    3. ' ]' → logprob: -11.75003433227539
    4. ']
' → logprob: -12.00003433227539
    5. '()]' → logprob: -12.12503433227539
    6. ']

' → logprob: -12.75003433227539
    7. '])' → logprob: -14.75003433227539
    8. ']]' → logprob: -15.75003433227539
    9. ')' → logprob: -16.12503433227539
    10. ']
' → logprob: -16.12503433227539

Token 257: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -4.203409844194539e-05
    2. ' for' → logprob: -10.500041961669922
    3. '```' → logprob: -12.625041961669922
    4. 'f' → logprob: -12.875041961669922
    5. 'p' → logprob: -13.125041961669922
    6. 'i' → logprob: -14.000041961669922
    7. 'r' → logprob: -14.250041961669922
    8. '
' → logprob: -14.250041961669922
    9. '_' → logprob: -14.500041961669922
    10. 'result' → logprob: -14.750041961669922

Token 258: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00801872555166483
    2. ' _' → logprob: -4.883018493652344
    3. ' range' → logprob: -8.133018493652344
    4. '_i' → logprob: -9.883018493652344
    5. 'range' → logprob: -10.008018493652344
    6. '_range' → logprob: -11.508018493652344
    7. 'i' → logprob: -12.008018493652344
    8. ' i' → logprob: -12.758018493652344
    9. ' ' → logprob: -14.633018493652344
    10. '_m' → logprob: -14.758018493652344

Token 259: 'j' (ID: 73)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.3135334849357605
    2. ' in' → logprob: -1.3135335445404053
    3. '_' → logprob: -8.563533782958984
    4. ' ' → logprob: -9.563533782958984
    5. 'range' → logprob: -12.063533782958984
    6. '  ' → logprob: -13.313533782958984
    7. ' _' → logprob: -13.813533782958984
    8. 'import' → logprob: -14.438533782958984
    9. ' range' → logprob: -14.438533782958984
    10. ',' → logprob: -15.813533782958984

Token 260: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.42891091108322144
    2. 'in' → logprob: -1.0539109706878662
    3. '_' → logprob: -8.553911209106445
    4. ' ' → logprob: -11.928911209106445
    5. ' _' → logprob: -12.553911209106445
    6. 'range' → logprob: -12.803911209106445
    7. ',' → logprob: -13.678911209106445
    8. '_in' → logprob: -14.053911209106445
    9. 'import' → logprob: -14.053911209106445
    10. '0' → logprob: -14.928911209106445

Token 261: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.026306800544261932
    2. ' range' → logprob: -3.6513068675994873
    3. '_' → logprob: -12.526307106018066
    4. 'p' → logprob: -14.151307106018066
    5. ' ' → logprob: -14.776307106018066
    6. '(range' → logprob: -14.901307106018066
    7. '0' → logprob: -15.026307106018066
    8. 'r' → logprob: -15.151307106018066
    9. '	range' → logprob: -15.526307106018066
    10. 'rang' → logprob: -15.776307106018066

Token 262: '(M' (ID: 6103)
  Prédit: '(M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.24051639437675476
    2. 'M' → logprob: -1.6155164241790771
    3. ' M' → logprob: -4.240516185760498
    4. '(' → logprob: -7.615516185760498
    5. ' (' → logprob: -9.615516662597656
    6. '0' → logprob: -10.865516662597656
    7. '   ' → logprob: -12.990516662597656
    8. '1' → logprob: -13.365516662597656
    9. '	M' → logprob: -13.365516662597656
    10. '_M' → logprob: -13.490516662597656

Token 263: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.47434261441230774
    2. '):' → logprob: -0.9743425846099854
    3. ')' → logprob: -9.349342346191406
    4. '):
' → logprob: -9.974342346191406
    5. ' ):' → logprob: -10.099342346191406
    6. ':' → logprob: -10.349342346191406
    7. ' ):
' → logprob: -10.349342346191406
    8. '   ' → logprob: -11.974342346191406
    9. ',' → logprob: -12.224342346191406
    10. ':
' → logprob: -12.224342346191406

Token 264: '   ' (ID: 271)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.5012354850769043
    2. 'a' → logprob: -2.1262354850769043
    3. ' u' → logprob: -2.3762354850769043
    4. ' x' → logprob: -2.3762354850769043
    5. '   ' → logprob: -3.1262354850769043
    6. 'x' → logprob: -3.7512354850769043
    7. 'u' → logprob: -4.251235485076904
    8. '	a' → logprob: -5.626235485076904
    9. ' i' → logprob: -6.876235485076904
    10. '	u' → logprob: -7.126235485076904

Token 265: ' z' (ID: 579)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.12712475657463074
    2. 'x' → logprob: -2.627124786376953
    3. 'u' → logprob: -3.127124786376953
    4. '   ' → logprob: -6.752124786376953
    5. ' a' → logprob: -7.252124786376953
    6. 'i' → logprob: -7.752124786376953
    7. 'A' → logprob: -8.127124786376953
    8. ' u' → logprob: -8.877124786376953
    9. 'l' → logprob: -9.752124786376953
    10. 'f' → logprob: -9.752124786376953

Token 266: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38329121470451355
    2. ' =' → logprob: -1.383291244506836
    3. ',' → logprob: -2.758291244506836
    4. 'p' → logprob: -6.258291244506836
    5. ',p' → logprob: -6.758291244506836
    6. ' ,' → logprob: -8.258291244506836
    7. '   ' → logprob: -8.633291244506836
    8. '=input' → logprob: -8.883291244506836
    9. ' ' → logprob: -9.008291244506836
    10. '=p' → logprob: -9.258291244506836

Token 267: ' t' (ID: 260)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'w' → logprob: -1.5107864141464233
    2. ' y' → logprob: -1.5107864141464233
    3. 'y' → logprob: -1.7607864141464233
    4. ' w' → logprob: -2.010786533355713
    5. 'x' → logprob: -2.010786533355713
    6. ' x' → logprob: -3.385786533355713
    7. 'k' → logprob: -3.635786533355713
    8. ' k' → logprob: -4.760786533355713
    9. 'q' → logprob: -4.885786533355713
    10. '_' → logprob: -5.260786533355713

Token 268: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1602427214384079
    2. ' =' → logprob: -1.9102426767349243
    3. ',' → logprob: -11.785243034362793
    4. '=sys' → logprob: -12.785243034362793
    5. '=z' → logprob: -13.035243034362793
    6. ' ' → logprob: -13.285243034362793
    7. '   ' → logprob: -14.035243034362793
    8. '=p' → logprob: -14.160243034362793
    9. '=
' → logprob: -14.660243034362793
    10. '  ' → logprob: -14.910243034362793

Token 269: ' greg' (ID: 139261)
  Prédit: 'greg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'greg' → logprob: -0.018162114545702934
    2. ' greg' → logprob: -4.018162250518799
    3. 'map' → logprob: -12.14316177368164
    4. 'Greg' → logprob: -13.51816177368164
    5. 'gre' → logprob: -14.14316177368164
    6. ' map' → logprob: -14.39316177368164
    7. '   ' → logprob: -14.39316177368164
    8. ' Greg' → logprob: -14.51816177368164
    9. 'p' → logprob: -14.89316177368164
    10. 'tuple' → logprob: -15.26816177368164

Token 270: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.06200386956334114
    2. '()
' → logprob: -2.8120038509368896
    3. '();' → logprob: -11.062004089355469
    4. '()
' → logprob: -11.437004089355469
    5. '()

' → logprob: -12.437004089355469
    6. ' ()' → logprob: -13.562004089355469
    7. '(' → logprob: -14.062004089355469
    8. '()\' → logprob: -14.062004089355469
    9. '()`' → logprob: -14.937004089355469
    10. ')' → logprob: -15.062004089355469

Token 271: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016140762716531754
    2. 'x' → logprob: -4.516140937805176
    3. ' x' → logprob: -5.766140937805176
    4. '
' → logprob: -7.016140937805176
    5. ' if' → logprob: -8.016140937805176
    6. '    
' → logprob: -8.641140937805176
    7. '<|end|>' → logprob: -9.016140937805176
    8. 'if' → logprob: -9.266140937805176
    9. ' ' → logprob: -9.391140937805176
    10. 'd' → logprob: -10.016140937805176

Token 272: ' z' (ID: 579)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.009431272745132446
    2. 'if' → logprob: -4.8844313621521
    3. '   ' → logprob: -7.1344313621521
    4. ' x' → logprob: -7.2594313621521
    5. ' if' → logprob: -8.259430885314941
    6. '
' → logprob: -10.884430885314941
    7. 'print' → logprob: -11.384430885314941
    8. 'z' (adapté à ' z') → logprob: -11.634430885314941
    9. '    
' → logprob: -12.134430885314941
    10. '_x' → logprob: -12.384430885314941

Token 273: ',' (ID: 11)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.5074598789215088
    2. ' -=' → logprob: -1.0074598789215088
    3. '-' → logprob: -4.13245964050293
    4. ',' → logprob: -4.13245964050293
    5. '=' → logprob: -8.50745964050293
    6. ' ' → logprob: -8.63245964050293
    7. ' ,' → logprob: -8.88245964050293
    8. ',z' → logprob: -9.88245964050293
    9. '  ' → logprob: -10.25745964050293
    10. ' =' → logprob: -10.25745964050293

Token 274: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.5759691596031189
    2. ' t' → logprob: -0.8259691596031189
    3. 'z' → logprob: -10.700968742370605
    4. '   ' → logprob: -13.075968742370605
    5. ' z' → logprob: -13.200968742370605
    6. '-' → logprob: -13.700968742370605
    7. '`t' → logprob: -14.075968742370605
    8. ' ' → logprob: -15.450968742370605
    9. '	t' → logprob: -15.450968742370605
    10. '    ' → logprob: -15.700968742370605

Token 275: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4387330412864685
    2. '-=' → logprob: -1.1887331008911133
    3. ' =' → logprob: -3.8137331008911133
    4. ' -=' → logprob: -3.8137331008911133
    5. '-' → logprob: -5.438733100891113
    6. ',' → logprob: -6.688733100891113
    7. '=z' → logprob: -7.563733100891113
    8. 'z' → logprob: -9.688733100891113
    9. '[' → logprob: -10.063733100891113
    10. ' ' → logprob: -10.063733100891113

Token 276: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.0017272992990911007
    2. ' z' → logprob: -6.376727104187012
    3. '[z' → logprob: -11.251727104187012
    4. '(z' → logprob: -11.751727104187012
    5. '_z' → logprob: -13.876727104187012
    6. '	z' → logprob: -14.126727104187012
    7. 'int' → logprob: -14.376727104187012
    8. '  ' → logprob: -14.751727104187012
    9. ' ' → logprob: -14.751727104187012
    10. '[' → logprob: -15.251727104187012

Token 277: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5231413245201111
    2. ' -' → logprob: -0.8981413245201111
    3. ' ' → logprob: -11.523140907287598
    4. ',' → logprob: -12.023140907287598
    5. ' ,' → logprob: -14.023140907287598
    6. '-,' → logprob: -15.398140907287598
    7. ' ' → logprob: -15.523140907287598
    8. '  ' → logprob: -16.273141860961914
    9. '1' → logprob: -16.398141860961914
    10. '()-' → logprob: -16.523141860961914

Token 278: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.024604277219623e-05
    2. ' ' → logprob: -10.125040054321289
    3. '   ' → logprob: -16.87504005432129
    4. '=' → logprob: -17.43754005432129
    5. '
' → logprob: -17.62504005432129
    6. '[' → logprob: -18.62504005432129
    7. ',' → logprob: -18.75004005432129
    8. '...' → logprob: -19.31254005432129
    9. '```' → logprob: -19.37504005432129
    10. 'z' → logprob: -19.68754005432129

Token 279: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9266199160483666e-05
    2. ' ' → logprob: -10.875019073486328
    3. '
' → logprob: -16.750019073486328
    4. '   ' → logprob: -16.750019073486328
    5. 'z' → logprob: -17.562519073486328
    6. '  ' → logprob: -18.562519073486328
    7. '{' → logprob: -18.687519073486328
    8. ',' → logprob: -18.750019073486328
    9. '[' → logprob: -18.750019073486328
    10. '```' → logprob: -18.750019073486328

Token 280: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008271370315924287
    2. ' ,' → logprob: -7.625827312469482
    3. ',t' → logprob: -8.000826835632324
    4. ',
' → logprob: -12.750826835632324
    5. ',z' → logprob: -15.250826835632324
    6. 't' → logprob: -15.500826835632324
    7. ' t' → logprob: -15.750826835632324
    8. ' ' → logprob: -16.00082778930664
    9. '   ' → logprob: -16.75082778930664
    10. ',y' → logprob: -17.62582778930664

Token 281: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.6931605935096741
    2. ' t' → logprob: -0.6931605935096741
    3. '   ' → logprob: -11.693161010742188
    4. ' ' → logprob: -12.818161010742188
    5. '    ' → logprob: -14.443161010742188
    6. ' ' → logprob: -14.568161010742188
    7. '	t' → logprob: -14.568161010742188
    8. '  ' → logprob: -14.693161010742188
    9. '`t' → logprob: -15.568161010742188
    10. '
' → logprob: -16.318161010742188

Token 282: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.5759419202804565
    2. '-' → logprob: -0.8259419202804565
    3. ' ' → logprob: -13.200942039489746
    4. ' -=' → logprob: -16.32594108581543
    5. '   ' → logprob: -16.45094108581543
    6. '–' → logprob: -16.57594108581543
    7. '[' → logprob: -16.57594108581543
    8. '<|end|>' → logprob: -16.57594108581543
    9. 'def' → logprob: -16.70094108581543
    10. 't' → logprob: -17.07594108581543

Token 283: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008052219054661691
    2. ' ' → logprob: -7.125805377960205
    3. '   ' → logprob: -15.438304901123047
    4. '<|end|>' → logprob: -16.313304901123047
    5. '-' → logprob: -16.375804901123047
    6. ' ' → logprob: -16.938304901123047
    7. '  ' → logprob: -17.188304901123047
    8. '[' → logprob: -17.313304901123047
    9. ' -' → logprob: -17.500804901123047
    10. '...' → logprob: -17.688304901123047

Token 284: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.451116051815916e-05
    2. ' ' → logprob: -10.625024795532227
    3. '   ' → logprob: -17.625024795532227
    4. '```' → logprob: -17.937524795532227
    5. '-' → logprob: -18.312524795532227
    6. '...' → logprob: -19.000024795532227
    7. '11' → logprob: -19.125024795532227
    8. '2' → logprob: -19.125024795532227
    9. '<|end|>' → logprob: -19.125024795532227
    10. '124' → logprob: -19.187524795532227

Token 285: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5512452721595764
    2. 'x' → logprob: -0.9262452721595764
    3. '
' → logprob: -4.051245212554932
    4. ' x' → logprob: -4.676245212554932
    5. 'if' → logprob: -8.05124568939209
    6. ' if' → logprob: -8.55124568939209
    7. '    
' → logprob: -8.67624568939209
    8. ' ' → logprob: -9.17624568939209
    9. 'd' → logprob: -10.05124568939209
    10. '<|end|>' → logprob: -10.05124568939209

Token 286: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1050277128815651
    2. 'x' → logprob: -2.355027675628662
    3. ' x' → logprob: -5.480027675628662
    4. 'if' → logprob: -8.10502815246582
    5. ' if' → logprob: -8.73002815246582
    6. '
' → logprob: -9.23002815246582
    7. '    
' → logprob: -10.35502815246582
    8. ' ' → logprob: -10.60502815246582
    9. '	x' → logprob: -12.23002815246582
    10. '  ' → logprob: -12.60502815246582

Token 287: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.03381720185279846
    2. 'if' → logprob: -3.4088172912597656
    3. '   ' → logprob: -10.408817291259766
    4. ' x' → logprob: -10.408817291259766
    5. '
' → logprob: -10.783817291259766
    6. '_x' → logprob: -10.783817291259766
    7. ' if' → logprob: -10.908817291259766
    8. '_' → logprob: -10.908817291259766
    9. 'print' → logprob: -11.658817291259766
    10. 'for' → logprob: -13.158817291259766

Token 288: 'union' (ID: 37013)
  Prédit: 'union'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'union' → logprob: -3.309382373117842e-05
    2. ' =' → logprob: -11.250033378601074
    3. '.union' → logprob: -11.750033378601074
    4. '=' → logprob: -12.500033378601074
    5. '_union' → logprob: -12.625033378601074
    6. ' union' → logprob: -13.375033378601074
    7. '	union' → logprob: -13.750033378601074
    8. '
' → logprob: -13.875033378601074
    9. '   ' → logprob: -14.625033378601074
    10. ',' → logprob: -15.375033378601074

Token 289: '(z' (ID: 27674)
  Prédit: '(z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(z' → logprob: -7.896309739408025e-07
    2. '(' → logprob: -14.125000953674316
    3. 'z' → logprob: -17.5
    4. '(x' → logprob: -18.5
    5. '((' → logprob: -19.25
    6. '(t' → logprob: -19.625
    7. ' (' → logprob: -19.875
    8. '(
' → logprob: -20.0
    9. '[z' → logprob: -21.25
    10. '(q' → logprob: -21.5

Token 290: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004542623180896044
    2. ' ,' → logprob: -5.754542827606201
    3. ',t' → logprob: -6.629542827606201
    4. ' t' → logprob: -11.254542350769043
    5. 't' → logprob: -11.379542350769043
    6. ',
' → logprob: -11.629542350769043
    7. '(t' → logprob: -11.879542350769043
    8. '(' → logprob: -13.379542350769043
    9. ' ' → logprob: -14.879542350769043
    10. '
' → logprob: -15.379542350769043

Token 291: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.002187256934121251
    2. ' t' → logprob: -6.127187252044678
    3. '   ' → logprob: -13.502187728881836
    4. ' ' → logprob: -15.627187728881836
    5. '	t' → logprob: -15.877187728881836
    6. ')t' → logprob: -16.127187728881836
    7. '(t' → logprob: -16.502187728881836
    8. ')' → logprob: -16.627187728881836
    9. '    ' → logprob: -16.877187728881836
    10. '  ' → logprob: -17.002187728881836

Token 292: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00026872646412812173
    2. ')
' → logprob: -8.250268936157227
    3. ' )' → logprob: -12.375268936157227
    4. '   ' → logprob: -13.000268936157227
    5. '<|end|>' → logprob: -15.000268936157227
    6. ')

' → logprob: -15.375268936157227
    7. ')return' → logprob: -16.375268936157227
    8. ' ' → logprob: -16.750268936157227
    9. '))' → logprob: -16.875268936157227
    10. '),' → logprob: -17.000268936157227

Token 293: 'q' (ID: 80)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2339046597480774
    2. 'Q' → logprob: -3.1089046001434326
    3. 'q' → logprob: -3.4839046001434326
    4. 'p' → logprob: -3.8589046001434326
    5. 'print' → logprob: -3.8589046001434326
    6. 'res' → logprob: -4.233904838562012
    7. 'k' → logprob: -4.733904838562012
    8. 'r' → logprob: -4.858904838562012
    9. 'u' → logprob: -5.358904838562012
    10. '#' → logprob: -5.358904838562012

Token 294: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14428140223026276
    2. '=' → logprob: -2.0192813873291016
    3. 'u' → logprob: -6.519281387329102
    4. ',' → logprob: -9.519281387329102
    5. '  ' → logprob: -11.269281387329102
    6. '   ' → logprob: -11.644281387329102
    7. '=int' → logprob: -12.269281387329102
    8. ' ' → logprob: -12.519281387329102
    9. 's' → logprob: -13.019281387329102
    10. ':' → logprob: -13.019281387329102

Token 295: ' [' (ID: 723)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.5034928917884827
    2. 'greg' → logprob: -1.003492832183838
    3. ' int' → logprob: -4.128492832183838
    4. ' greg' → logprob: -4.378492832183838
    5. '[int' → logprob: -8.878493309020996
    6. ' ' → logprob: -9.878493309020996
    7. '(int' → logprob: -10.628493309020996
    8. 'Greg' → logprob: -10.878493309020996
    9. '  ' → logprob: -11.440993309020996
    10. '   ' → logprob: -11.565993309020996

Token 296: 'None' (ID: 8505)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.2745731472969055
    2. 'greg' → logprob: -2.1495730876922607
    3. '*' → logprob: -2.7745730876922607
    4. 'tuple' → logprob: -3.6495730876922607
    5. ']' → logprob: -4.27457332611084
    6. '(int' → logprob: -5.52457332611084
    7. '0' → logprob: -6.02457332611084
    8. '[]' → logprob: -6.14957332611084
    9. 'i' → logprob: -6.14957332611084
    10. '_' → logprob: -6.89957332611084

Token 297: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3334939479827881
    2. 'for' → logprob: -1.708493947982788
    3. ' for' → logprob: -2.583493947982788
    4. ']*' → logprob: -4.333494186401367
    5. '()]' → logprob: -4.583494186401367
    6. '()' → logprob: -6.458494186401367
    7. ']*(' → logprob: -7.083494186401367
    8. '
' → logprob: -8.208494186401367
    9. ']int' → logprob: -8.333494186401367
    10. ']()' → logprob: -8.708494186401367

Token 298: 'N' (ID: 45)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.5721563100814819
    2. 'greg' → logprob: -1.822156310081482
    3. 'M' → logprob: -2.6971564292907715
    4. '(' → logprob: -2.9471564292907715
    5. 'N' → logprob: -3.1971564292907715
    6. '5' → logprob: -4.0721564292907715
    7. '3' → logprob: -4.3221564292907715
    8. '(int' → logprob: -4.3221564292907715
    9. '10' → logprob: -4.3221564292907715
    10. '1' → logprob: -4.4471564292907715

Token 299: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.013116697780787945
    2. 'q' → logprob: -5.013116836547852
    3. 'p' → logprob: -6.763116836547852
    4. 'i' → logprob: -7.513116836547852
    5. 'cnt' → logprob: -7.888116836547852
    6. 'idx' → logprob: -7.888116836547852
    7. 'ans' → logprob: -7.888116836547852
    8. 'c' → logprob: -8.138116836547852
    9. ' for' → logprob: -8.513116836547852
    10. 'from' → logprob: -8.763116836547852

Token 300: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.022155053913593292
    2. 'q' → logprob: -4.897155284881592
    3. 'p' → logprob: -6.272155284881592
    4. 'i' → logprob: -6.772155284881592
    5. 'c' → logprob: -7.022155284881592
    6. 'cnt' → logprob: -7.272155284881592
    7. 'answer' → logprob: -7.397155284881592
    8. 'idx' → logprob: -7.522155284881592
    9. 'answers' → logprob: -7.647155284881592
    10. 'dp' → logprob: -7.647155284881592

Token 301: ' ii' (ID: 28354)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.1604556441307068
    2. ' i' → logprob: -2.0354557037353516
    3. '_' → logprob: -5.785455703735352
    4. '_i' → logprob: -5.785455703735352
    5. 'v' → logprob: -6.410455703735352
    6. 'x' → logprob: -6.660455703735352
    7. 'k' → logprob: -6.910455703735352
    8. 'idx' → logprob: -7.035455703735352
    9. 'ix' → logprob: -7.160455703735352
    10. 'j' → logprob: -7.410455703735352

Token 302: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3136214017868042
    2. 'in' → logprob: -1.3136214017868042
    3. ' ' → logprob: -8.688621520996094
    4. ',' → logprob: -8.813621520996094
    5. 'import' → logprob: -12.063621520996094
    6. '  ' → logprob: -12.313621520996094
    7. 'In' → logprob: -12.563621520996094
    8. '_' → logprob: -12.563621520996094
    9. '_in' → logprob: -12.813621520996094
    10. ')' → logprob: -12.938621520996094

Token 303: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.9329285621643066
    2. 'p' → logprob: -1.5579285621643066
    3. 'pp' → logprob: -1.8079285621643066
    4. 'val' → logprob: -2.6829285621643066
    5. 'x' → logprob: -2.8079285621643066
    6. 'pi' → logprob: -4.057928562164307
    7. 'vv' → logprob: -4.557928562164307
    8. ' v' → logprob: -4.932928562164307
    9. 'e' → logprob: -5.307928562164307
    10. 'xx' → logprob: -5.307928562164307

Token 304: ' in' (ID: 306)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.18886855244636536
    2. ',v' → logprob: -2.438868522644043
    3. ' in' → logprob: -3.063868522644043
    4. 'in' → logprob: -3.313868522644043
    5. ',value' → logprob: -8.188868522644043
    6. ',p' → logprob: -8.563868522644043
    7. ',q' → logprob: -8.813868522644043
    8. ' ,' → logprob: -8.813868522644043
    9. ',val' → logprob: -8.813868522644043
    10. ',w' → logprob: -9.063868522644043

Token 305: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.0003360582049936056
    2. ' enumerate' → logprob: -8.000335693359375
    3. 'enum' → logprob: -15.250335693359375
    4. 'range' → logprob: -15.750335693359375
    5. 'en' → logprob: -16.500335693359375
    6. '(en' → logprob: -17.625335693359375
    7. 'who' → logprob: -17.750335693359375
    8. 'in' → logprob: -18.000335693359375
    9. 'zip' → logprob: -18.250335693359375
    10. '   ' → logprob: -18.625335693359375

Token 306: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.0004641544655896723
    2. 'p' → logprob: -8.87546443939209
    3. '(range' → logprob: -8.87546443939209
    4. '(w' → logprob: -9.37546443939209
    5. '(en' → logprob: -10.00046443939209
    6. '((' → logprob: -10.12546443939209
    7. '(' → logprob: -12.12546443939209
    8. 'range' → logprob: -13.12546443939209
    9. '(zip' → logprob: -13.12546443939209
    10. 'who' → logprob: -13.62546443939209

Token 307: 'L' (ID: 43)
  Prédit: 'L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.013975556939840317
    2. '):
' → logprob: -4.638975620269775
    3. '):' → logprob: -6.263975620269775
    4. ')' → logprob: -6.638975620269775
    5. 'l' → logprob: -8.263975143432617
    6. 'in' → logprob: -8.388975143432617
    7. 's' → logprob: -9.763975143432617
    8. '
' → logprob: -9.888975143432617
    9. ']):
' → logprob: -9.888975143432617
    10. ',' → logprob: -10.138975143432617

Token 308: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.576042115688324
    2. '):
' → logprob: -0.826042115688324
    3. '):
' → logprob: -9.826042175292969
    4. ':' → logprob: -10.326042175292969
    5. ':
' → logprob: -12.451042175292969
    6. '):

' → logprob: -12.576042175292969
    7. ')' → logprob: -12.701042175292969
    8. ']:' → logprob: -13.576042175292969
    9. '():
' → logprob: -13.576042175292969
    10. '[::-' → logprob: -14.826042175292969

Token 309: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04835307598114014
    2. ' q' → logprob: -3.4233531951904297
    3. 'q' → logprob: -4.42335319519043
    4. '	q' → logprob: -6.29835319519043
    5. ' if' → logprob: -8.29835319519043
    6. '[q' → logprob: -8.54835319519043
    7. ':
' → logprob: -9.54835319519043
    8. ':' → logprob: -9.67335319519043
    9. 'if' → logprob: -9.92335319519043
    10. ',q' → logprob: -10.04835319519043

Token 310: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' (adapté à ' q') → logprob: -0.006663862150162458
    2. 'if' → logprob: -5.631663799285889
    3. '   ' → logprob: -6.256663799285889
    4. 'root' → logprob: -7.756663799285889
    5. 'p' → logprob: -8.381664276123047
    6. 'r' → logprob: -9.506664276123047
    7. 'f' → logprob: -9.631664276123047
    8. 'j' → logprob: -10.131664276123047
    9. ' q' → logprob: -10.256664276123047
    10. 'x' → logprob: -10.381664276123047

Token 311: '[v' (ID: 36561)
  Prédit: '[f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[f' → logprob: -0.22425253689289093
    2. '[q' → logprob: -1.7242525815963745
    3. '[' → logprob: -4.099252700805664
    4. '=' → logprob: -6.849252700805664
    5. '[v' → logprob: -6.974252700805664
    6. ' =' → logprob: -6.974252700805664
    7. '[ii' → logprob: -7.349252700805664
    8. '=f' → logprob: -7.349252700805664
    9. '[i' → logprob: -7.974252700805664
    10. '[p' → logprob: -8.099252700805664

Token 312: '-' (ID: 12)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.17720063030719757
    2. '=' → logprob: -2.1772005558013916
    3. ']=' → logprob: -3.0522005558013916
    4. ' =' → logprob: -6.552200794219971
    5. ' ]' → logprob: -8.677200317382812
    6. ')' → logprob: -10.427200317382812
    7. ',' → logprob: -10.552200317382812
    8. '=i' → logprob: -10.552200317382812
    9. '=index' → logprob: -11.052200317382812
    10. ']==' → logprob: -11.177200317382812

Token 313: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005564896273426712
    2. ' ' → logprob: -7.500556468963623
    3. ']' → logprob: -13.125556945800781
    4. ')' → logprob: -14.625556945800781
    5. ',' → logprob: -15.125556945800781
    6. '```' → logprob: -15.375556945800781
    7. '   ' → logprob: -15.750556945800781
    8. '<|end|>' → logprob: -16.12555694580078
    9. '=' → logprob: -16.50055694580078
    10. ''s' → logprob: -17.12555694580078

Token 314: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.013036229647696018
    2. ']=' → logprob: -4.888036251068115
    3. '=' → logprob: -5.388036251068115
    4. ' =' → logprob: -7.263036251068115
    5. ' ]' → logprob: -9.138035774230957
    6. ')' → logprob: -10.763035774230957
    7. ',' → logprob: -12.388035774230957
    8. '=i' → logprob: -13.013035774230957
    9. ']+=' → logprob: -13.263035774230957
    10. '=index' → logprob: -13.638035774230957

Token 315: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.012524965219199657
    2. ' =' → logprob: -4.3875250816345215
    3. '=i' → logprob: -12.262524604797363
    4. '=q' → logprob: -12.512524604797363
    5. '=
' → logprob: -12.762524604797363
    6. '=index' → logprob: -13.887524604797363
    7. '=None' → logprob: -14.262524604797363
    8. '=

' → logprob: -14.637524604797363
    9. '=int' → logprob: -14.762524604797363
    10. '=True' → logprob: -15.387524604797363

Token 316: ' ii' (ID: 28354)
  Prédit: 'ii'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ii' → logprob: -1.4974866644479334e-05
    2. ' ii' → logprob: -11.375015258789062
    3. '   ' → logprob: -13.250015258789062
    4. '(ii' → logprob: -13.750015258789062
    5. '[ii' → logprob: -15.375015258789062
    6. 'str' → logprob: -16.375015258789062
    7. 'iii' → logprob: -17.125015258789062
    8. '_' → logprob: -17.250015258789062
    9. 'i' → logprob: -17.250015258789062
    10. 'ic' → logprob: -17.375015258789062

Token 317: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.10741142183542252
    2. 'print' → logprob: -2.9824113845825195
    3. '<|end|>' → logprob: -4.2324113845825195
    4. 'q' → logprob: -4.6074113845825195
    5. '#' → logprob: -4.7324113845825195
    6. 'p' → logprob: -4.9824113845825195
    7. '[' → logprob: -5.9824113845825195
    8. ' for' → logprob: -6.8574113845825195
    9. 'i' → logprob: -6.8574113845825195
    10. '```' → logprob: -7.4824113845825195

Token 318: 'ret' (ID: 3431)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9477654695510864
    2. 'res' → logprob: -1.6977654695510864
    3. 'ans' → logprob: -1.6977654695510864
    4. 'cnt' → logprob: -3.572765350341797
    5. 'r' → logprob: -3.697765350341797
    6. 'answer' → logprob: -3.822765350341797
    7. 'result' → logprob: -4.072765350341797
    8. 'out' → logprob: -4.197765350341797
    9. 'count' → logprob: -4.322765350341797
    10. 'ok' → logprob: -4.447765350341797

Token 319: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00774788623675704
    2. '=' → logprob: -4.882747650146484
    3. ' ' → logprob: -9.882747650146484
    4. 's' → logprob: -10.382747650146484
    5. ',' → logprob: -10.882747650146484
    6. ' =[' → logprob: -12.007747650146484
    7. '=[]' → logprob: -12.257747650146484
    8. '_' → logprob: -12.257747650146484
    9. 'space' → logprob: -13.257747650146484
    10. '[:]' → logprob: -13.382747650146484

Token 320: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.032696161419153214
    2. ' ' → logprob: -3.65769624710083
    3. '[' → logprob: -6.03269624710083
    4. '[]' → logprob: -6.03269624710083
    5. ' [' → logprob: -8.282695770263672
    6. '1' → logprob: -8.282695770263672
    7. '[]
' → logprob: -8.282695770263672
    8. 'sum' → logprob: -8.532695770263672
    9. ' []' → logprob: -9.657695770263672
    10. 'True' → logprob: -9.782695770263672

Token 321: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0026072871405631304
    2. 'sum' → logprob: -6.127607345581055
    3. '[]' → logprob: -9.002607345581055
    4. '[' → logprob: -9.127607345581055
    5. '42' → logprob: -9.877607345581055
    6. '[]
' → logprob: -10.377607345581055
    7. 'len' → logprob: -11.377607345581055
    8. 'all' → logprob: -11.377607345581055
    9. 'N' → logprob: -11.502607345581055
    10. '1' → logprob: -11.627607345581055

Token 322: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -6.511406809295295e-06
    2. ' for' → logprob: -12.375006675720215
    3. '```' → logprob: -13.125006675720215
    4. '
' → logprob: -15.500006675720215
    5. '``' → logprob: -16.7500057220459
    6. '	for' → logprob: -18.1250057220459
    7. '   ' → logprob: -18.3750057220459
    8. '_for' → logprob: -18.5000057220459
    9. '    
' → logprob: -18.6250057220459
    10. '0' → logprob: -18.8750057220459

Token 323: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.1517960956552997e-05
    2. 'from' → logprob: -12.125011444091797
    3. ' for' → logprob: -13.375011444091797
    4. 'group' → logprob: -13.500011444091797
    5. 'i' → logprob: -14.375011444091797
    6. 'visited' → logprob: -14.500011444091797
    7. '```' → logprob: -14.750011444091797
    8. 'used' → logprob: -14.875011444091797
    9. 'groups' → logprob: -15.250011444091797
    10. 'f' → logprob: -16.000011444091797

Token 324: ' guy' (ID: 12159)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5155157446861267
    2. ' i' → logprob: -1.0155158042907715
    3. 'ii' → logprob: -4.1405158042907715
    4. ' ii' → logprob: -5.2655158042907715
    5. '_' → logprob: -5.7655158042907715
    6. '_i' → logprob: -6.0155158042907715
    7. 'v' → logprob: -6.1405158042907715
    8. ' ix' → logprob: -6.5155158042907715
    9. ' v' → logprob: -6.6405158042907715
    10. 'idx' → logprob: -6.7655158042907715

Token 325: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.091622494161129
    2. 'in' → logprob: -2.4666225910186768
    3. ',' → logprob: -5.966622352600098
    4. ' ,' → logprob: -10.216622352600098
    5. ' ' → logprob: -10.841622352600098
    6. '_' → logprob: -11.216622352600098
    7. '_in' → logprob: -12.091622352600098
    8. 'g' → logprob: -12.216622352600098
    9. '```' → logprob: -12.591622352600098
    10. 'i' → logprob: -12.716622352600098

Token 326: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00026455431361682713
    2. ' range' → logprob: -8.250264167785645
    3. 'q' → logprob: -12.750264167785645
    4. 'p' → logprob: -15.875264167785645
    5. '(range' → logprob: -16.37526512145996
    6. 'who' → logprob: -17.37526512145996
    7. '   ' → logprob: -17.50026512145996
    8. ' ' → logprob: -18.37526512145996
    9. '  ' → logprob: -19.00026512145996
    10. 'r' → logprob: -19.12526512145996

Token 327: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0032373634167015553
    2. 'N' → logprob: -5.753237247467041
    3. '(' → logprob: -9.8782377243042
    4. '(len' → logprob: -12.3782377243042
    5. '(n' → logprob: -13.3782377243042
    6. '   ' → logprob: -13.5032377243042
    7. '(
' → logprob: -13.8782377243042
    8. ' N' → logprob: -16.003236770629883
    9. 'len' → logprob: -16.628236770629883
    10. '	N' → logprob: -17.128236770629883

Token 328: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.13066408038139343
    2. '):' → logprob: -2.130664110183716
    3. ':' → logprob: -6.005663871765137
    4. ':
' → logprob: -7.505663871765137
    5. ' ):
' → logprob: -7.755663871765137
    6. '):
' → logprob: -9.130663871765137
    7. ')' → logprob: -10.255663871765137
    8. ' ):' → logprob: -10.505663871765137
    9. '   ' → logprob: -10.630663871765137
    10. '):

' → logprob: -10.755663871765137

Token 329: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4075276255607605
    2. '   ' → logprob: -1.7825276851654053
    3. 'for' → logprob: -2.0325276851654053
    4. 'ret' → logprob: -3.9075276851654053
    5. 'p' → logprob: -5.532527446746826
    6. ' if' → logprob: -6.157527446746826
    7. 'root' → logprob: -6.657527446746826
    8. 'group' → logprob: -7.157527446746826
    9. 'g' → logprob: -7.282527446746826
    10. '```' → logprob: -7.282527446746826

Token 330: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.6941838264465332
    2. 'ret' → logprob: -0.6941838264465332
    3. '   ' → logprob: -7.694183826446533
    4. 'p' → logprob: -8.319183349609375
    5. 'root' → logprob: -8.569183349609375
    6. 'px' → logprob: -10.944183349609375
    7. 'r' → logprob: -11.069183349609375
    8. 'val' → logprob: -11.194183349609375
    9. 'pi' → logprob: -11.694183349609375
    10. 'rep' → logprob: -11.694183349609375

Token 331: ' same' (ID: 2684)
  Prédit: 'same'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'same' → logprob: -0.027090739458799362
    2. 'q' → logprob: -4.027090549468994
    3. ' same' → logprob: -5.277090549468994
    4. 'p' → logprob: -6.152090549468994
    5. 'f' → logprob: -6.777090549468994
    6. 'who' → logprob: -8.777091026306152
    7. ' q' → logprob: -8.902091026306152
    8. '   ' → logprob: -9.527091026306152
    9. ' p' → logprob: -9.652091026306152
    10. ' ' → logprob: -9.902091026306152

Token 332: 'ish' (ID: 1109)
  Prédit: 'ish'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ish' → logprob: -0.5772011280059814
    2. '(g' → logprob: -0.8272011280059814
    3. 'g' → logprob: -6.702200889587402
    4. 'is' → logprob: -12.077200889587402
    5. '```' → logprob: -12.077200889587402
    6. '(' → logprob: -12.202200889587402
    7. ' (' → logprob: -12.702200889587402
    8. '[g' → logprob: -13.577200889587402
    9. '-ish' → logprob: -13.577200889587402
    10. '(i' → logprob: -13.702200889587402

Token 333: '(g' (ID: 7791)
  Prédit: '(g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(g' → logprob: -3.7697225252486533e-06
    2. '(' → logprob: -12.625003814697266
    3. 'g' → logprob: -15.750003814697266
    4. '(p' → logprob: -16.000003814697266
    5. '(q' → logprob: -16.625003814697266
    6. '(ret' → logprob: -17.250003814697266
    7. '   ' → logprob: -17.500003814697266
    8. ' (' → logprob: -17.875003814697266
    9. '	g' → logprob: -18.000003814697266
    10. '((' → logprob: -18.750003814697266

Token 334: 'uy' (ID: 3731)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.023077525198459625
    2. '(g' → logprob: -3.8980774879455566
    3. 'uy' → logprob: -6.773077487945557
    4. ' guy' → logprob: -7.523077487945557
    5. 'gu' → logprob: -8.023077964782715
    6. ')' → logprob: -8.773077964782715
    7. 'u' → logprob: -9.148077964782715
    8. ',g' → logprob: -9.148077964782715
    9. '   ' → logprob: -9.898077964782715
    10. ' g' → logprob: -10.148077964782715

Token 335: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005702669732272625
    2. ' ,' → logprob: -5.255702495574951
    3. ',g' → logprob: -8.38070297241211
    4. ',p' → logprob: -8.88070297241211
    5. '   ' → logprob: -9.63070297241211
    6. ',q' → logprob: -11.13070297241211
    7. ' ' → logprob: -11.88070297241211
    8. 'p' → logprob: -12.50570297241211
    9. ',
' → logprob: -12.63070297241211
    10. '  ' → logprob: -13.13070297241211

Token 336: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.024190669879317284
    2. 'p' → logprob: -3.774190664291382
    3. '   ' → logprob: -7.774190902709961
    4. ' q' → logprob: -8.524190902709961
    5. 'g' → logprob: -8.774190902709961
    6. 'ret' → logprob: -9.024190902709961
    7. ' ' → logprob: -11.524190902709961
    8. '  ' → logprob: -12.024190902709961
    9. ' p' → logprob: -12.024190902709961
    10. '	q' → logprob: -12.024190902709961

Token 337: '[g' (ID: 80396)
  Prédit: '[g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[g' → logprob: -0.16059890389442444
    2. 'g' → logprob: -1.910598874092102
    3. '[' → logprob: -8.160598754882812
    4. ')' → logprob: -9.910598754882812
    5. '(g' → logprob: -10.660598754882812
    6. '   ' → logprob: -13.035598754882812
    7. 'gu' → logprob: -13.285598754882812
    8. '[q' → logprob: -13.285598754882812
    9. '_g' → logprob: -13.410598754882812
    10. '```' → logprob: -13.410598754882812

Token 338: 'uy' (ID: 3731)
  Prédit: 'uy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uy' → logprob: -5.676981345459353e-06
    2. '```' → logprob: -13.750005722045898
    3. '   ' → logprob: -14.250005722045898
    4. ')' → logprob: -14.250005722045898
    5. 'u' → logprob: -14.250005722045898
    6. ']' → logprob: -14.375005722045898
    7. '[' → logprob: -14.500005722045898
    8. '#' → logprob: -15.000005722045898
    9. 'y' → logprob: -15.375005722045898
    10. 'g' → logprob: -15.625005722045898

Token 339: ']):
' (ID: 51989)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.47532743215560913
    2. '):' → logprob: -0.9753274321556091
    3. ' ):
' → logprob: -7.600327491760254
    4. ' ):' → logprob: -7.850327491760254
    5. ')' → logprob: -8.100327491760254
    6. '):
' → logprob: -10.725327491760254
    7. '   ' → logprob: -11.225327491760254
    8. '):

' → logprob: -11.475327491760254
    9. ']):' → logprob: -13.350327491760254
    10. ' )' → logprob: -13.475327491760254

Token 340: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018342498689889908
    2. ':
' → logprob: -4.7683424949646
    3. '
' → logprob: -5.3933424949646
    4. 'ret' → logprob: -6.2683424949646
    5. ' ret' → logprob: -6.5183424949646
    6. ':' → logprob: -6.8933424949646
    7. '   ' → logprob: -7.7683424949646
    8. '1' → logprob: -9.643342971801758
    9. '):
' → logprob: -9.643342971801758
    10. '+' → logprob: -10.018342971801758

Token 341: ' ret' (ID: 2881)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ret' (adapté à ' ret') → logprob: -0.00024001303245313466
    2. '   ' → logprob: -8.500240325927734
    3. ' ret' → logprob: -10.250240325927734
    4. '
' → logprob: -13.875240325927734
    5. '       ' → logprob: -15.625240325927734
    6. '	ret' → logprob: -16.875240325927734
    7. '  ' → logprob: -19.625240325927734
    8. '(ret' → logprob: -20.000240325927734
    9. '```' → logprob: -20.125240325927734
    10. '_ret' → logprob: -20.375240325927734

Token 342: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.5759541392326355
    2. ' +=' → logprob: -0.8259541392326355
    3. '=' → logprob: -11.32595443725586
    4. ' =' → logprob: -13.45095443725586
    5. '+' → logprob: -14.82595443725586
    6. '   ' → logprob: -14.95095443725586
    7. ' ' → logprob: -15.45095443725586
    8. ']+=' → logprob: -15.45095443725586
    9. ' +' → logprob: -17.45095443725586
    10. '    ' → logprob: -18.57595443725586

Token 343: ' [' (ID: 723)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00011009939044015482
    2. ' ' → logprob: -9.125109672546387
    3. '   ' → logprob: -13.750109672546387
    4. '```' → logprob: -18.625110626220703
    5. '  ' → logprob: -18.875110626220703
    6. '
' → logprob: -18.875110626220703
    7. '       ' → logprob: -19.375110626220703
    8. '+' → logprob: -19.875110626220703
    9. ' ' → logprob: -19.875110626220703
    10. '    ' → logprob: -20.750110626220703

Token 344: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009796975646167994
    2. 'True' → logprob: -8.25097942352295
    3. '0' → logprob: -8.37597942352295
    4. ' ' → logprob: -9.25097942352295
    5. 'q' → logprob: -9.37597942352295
    6. '(' → logprob: -9.87597942352295
    7. 'p' → logprob: -10.12597942352295
    8. '
' → logprob: -10.37597942352295
    9. 'int' → logprob: -10.50097942352295
    10. '   ' → logprob: -10.75097942352295

Token 345: '][-' (ID: 162298)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00135499844327569
    2. ',' → logprob: -7.251355171203613
    3. ']()' → logprob: -7.876355171203613
    4. ' ]' → logprob: -9.126355171203613
    5. '()]' → logprob: -10.251355171203613
    6. ')' → logprob: -10.626355171203613
    7. ']
' → logprob: -10.626355171203613
    8. '](' → logprob: -11.376355171203613
    9. '][' → logprob: -11.876355171203613
    10. '0' → logprob: -12.126355171203613

Token 346: '~' (ID: 93)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0683535037969705e-05
    2. '0' → logprob: -12.12501049041748
    3. ' ' → logprob: -12.50001049041748
    4. '   ' → logprob: -14.75001049041748
    5. 'len' → logprob: -15.00001049041748
    6. ']' → logprob: -15.12501049041748
    7. ':' → logprob: -15.87501049041748
    8. '~' → logprob: -16.375011444091797
    9. '::-' → logprob: -17.125011444091797
    10. ' -' → logprob: -17.250011444091797

Token 347: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04466153681278229
    2. 'ret' → logprob: -3.419661521911621
    3. 'g' → logprob: -4.669661521911621
    4. ' ' → logprob: -7.919661521911621
    5. 'q' → logprob: -8.044661521911621
    6. '1' → logprob: -8.044661521911621
    7. '(' → logprob: -8.919661521911621
    8. '   ' → logprob: -9.294661521911621
    9. '
' → logprob: -9.794661521911621
    10. '(ret' → logprob: -10.169661521911621

Token 348: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0010657975217327476
    2. '])' → logprob: -7.001065731048584
    3. ' ]' → logprob: -9.626066207885742
    4. '0' → logprob: -11.001066207885742
    5. ')' → logprob: -11.126066207885742
    6. ')]' → logprob: -11.376066207885742
    7. ']
' → logprob: -11.626066207885742
    8. '1' → logprob: -11.876066207885742
    9. ']()' → logprob: -12.126066207885742
    10. '()]' → logprob: -12.376066207885742

Token 349: 'print' (ID: 1598)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3196808099746704
    2. '
' → logprob: -1.4446808099746704
    3. '0' → logprob: -4.069680690765381
    4. ' 
' → logprob: -4.444680690765381
    5. ' ' → logprob: -4.944680690765381
    6. '```' → logprob: -7.569680690765381
    7. ')' → logprob: -8.444681167602539
    8. '\n' → logprob: -8.694681167602539
    9. '<|end|>' → logprob: -8.694681167602539
    10. '+' → logprob: -8.944681167602539

Token 350: '(ret' (ID: 35317)
  Prédit: '(ret'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ret' → logprob: -0.0032257253769785166
    2. '(' → logprob: -5.753225803375244
    3. 'ret' → logprob: -10.003225326538086
    4. ' (' → logprob: -13.128225326538086
    5. '(
' → logprob: -14.753225326538086
    6. '(r' → logprob: -16.128225326538086
    7. '(re' → logprob: -16.378225326538086
    8. ' ret' → logprob: -16.753225326538086
    9. '('' → logprob: -17.253225326538086
    10. '(return' → logprob: -17.503225326538086

Token 351: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.97155623533763e-05
    2. ' )' → logprob: -9.500089645385742
    3. ')
' → logprob: -12.000089645385742
    4. '+' → logprob: -12.500089645385742
    5. '```' → logprob: -13.500089645385742
    6. '())' → logprob: -14.000089645385742
    7. '
' → logprob: -14.625089645385742
    8. '))' → logprob: -14.875089645385742
    9. '()' → logprob: -15.125089645385742
    10. '#' → logprob: -15.250089645385742


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 349
Tokens correctement prédits (1ère position, stricte): 116
Tokens correctement prédits (1ère position, avec adaptation): 123
Tokens correctement prédits (top 10): 276
Précision stricte (1ère position): 33.24%
Précision adaptée (1ère position): 35.24%
Précision (top 10): 79.08%
================================================================================
