================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:17:36
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def MAiN():
    N = int(input())
    ThisIsAList = list(map(int, input().split()))
    SuperVector = [None]*N
    idx = 0
    while idx < N:
        SuperVector[idx] = 0
        idx = idx + 1

    b = 0
    while b < len(ThisIsAList):
        v = ThisIsAList[b]
        SuperVector[v-1] = SuperVector[v-1] + 1
        b += 1

    [print(x) for x in SuperVector]

if 1+1 == 2:
    MAiN()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' MA' (ID: 12615)
  → Token d'amorce (pas de prédiction)

Token 2: 'i' (ID: 72)
  → Token d'amorce (pas de prédiction)

Token 3: 'N' (ID: 45)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.09654496610164642
    2. 'N' → logprob: -2.8465449810028076
    3. '(n' → logprob: -3.4715449810028076
    4. '(' → logprob: -7.0965447425842285
    5. 'nt' → logprob: -7.4715447425842285
    6. 'M' → logprob: -7.5965447425842285
    7. 'x' → logprob: -7.9715447425842285
    8. '_n' → logprob: -8.721545219421387
    9. '_' → logprob: -8.971545219421387
    10. 'D' → logprob: -8.971545219421387

Token 4: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.014664404094219208
    2. '():' → logprob: -4.889664173126221
    3. '(:' → logprob: -5.389664173126221
    4. ':' → logprob: -6.764664173126221
    5. '_' → logprob: -7.264664173126221
    6. '(
' → logprob: -8.389664649963379
    7. ' (' → logprob: -9.389664649963379
    8. '(a' → logprob: -9.639664649963379
    9. '()' → logprob: -10.264664649963379
    10. '.' → logprob: -10.514664649963379

Token 5: '   ' (ID: 271)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\' → logprob: -0.9047960638999939
    2. '\n' → logprob: -1.0297961235046387
    3. '   ' → logprob: -1.9047961235046387
    4. ':' → logprob: -3.7797961235046387
    5. '```' → logprob: -3.9047961235046387
    6. '(' → logprob: -4.529796123504639
    7. '    
' → logprob: -4.654796123504639
    8. '
' → logprob: -5.154796123504639
    9. ' 
' → logprob: -5.654796123504639
    10. '' → logprob: -5.779796123504639

Token 6: ' N' (ID: 478)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pass' → logprob: -0.8923825025558472
    2. '   ' → logprob: -1.1423825025558472
    3. 'p' → logprob: -1.7673825025558472
    4. ' pass' → logprob: -3.8923826217651367
    5. 'print' → logprob: -4.017382621765137
    6. 'a' → logprob: -4.142382621765137
    7. '    ' → logprob: -4.267382621765137
    8. ' ' → logprob: -5.142382621765137
    9. 'return' → logprob: -5.267382621765137
    10. '#' → logprob: -5.517382621765137

Token 7: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6063425540924072
    2. ' =' → logprob: -1.8563425540924072
    3. ':' → logprob: -2.9813425540924072
    4. '.' → logprob: -3.1063425540924072
    5. '   ' → logprob: -3.4813425540924072
    6. 'A' → logprob: -3.6063425540924072
    7. 'E' → logprob: -3.7313425540924072
    8. '_' → logprob: -3.7313425540924072
    9. ',' → logprob: -3.8563425540924072
    10. 'a' → logprob: -4.106342315673828

Token 8: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.07345807552337646
    2. ' ' → logprob: -3.073458194732666
    3. 'int' → logprob: -3.948458194732666
    4. '10' → logprob: -5.948458194732666
    5. ' input' → logprob: -6.198458194732666
    6. '20' → logprob: -8.823457717895508
    7. 'input' → logprob: -9.073457717895508
    8. ' eval' → logprob: -9.198457717895508
    9. '5' → logprob: -9.698457717895508
    10. '0' → logprob: -9.823457717895508

Token 9: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0008277330780401826
    2. '(input' → logprob: -7.250827789306641
    3. '('' → logprob: -9.87582778930664
    4. ' (' → logprob: -10.75082778930664
    5. '()' → logprob: -11.87582778930664
    6. '(
' → logprob: -11.87582778930664
    7. '```' → logprob: -12.75082778930664
    8. '(`' → logprob: -12.87582778930664
    9. 'input' → logprob: -13.00082778930664
    10. '(user' → logprob: -13.00082778930664

Token 10: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3764702081680298
    2. '()' → logprob: -1.2514702081680298
    3. '())' → logprob: -4.25147008895874
    4. ')' → logprob: -4.62647008895874
    5. '('' → logprob: -6.75147008895874
    6. '("("' → logprob: -7.50147008895874
    7. '(""))' → logprob: -7.75147008895874
    8. '(()' → logprob: -8.251470565795898
    9. '(
' → logprob: -8.626470565795898
    10. '()))' → logprob: -9.001470565795898

Token 11: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6841145753860474
    2. ')' → logprob: -1.9341145753860474
    3. ' ' → logprob: -2.434114456176758
    4. ''' → logprob: -3.059114456176758
    5. '```' → logprob: -3.059114456176758
    6. '\n' → logprob: -3.434114456176758
    7. '    
' → logprob: -3.684114456176758
    8. '\' → logprob: -3.934114456176758
    9. '`' → logprob: -4.309114456176758
    10. '    ' → logprob: -4.559114456176758

Token 12: ' This' (ID: 1328)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1318349838256836
    2. '```' → logprob: -1.7568349838256836
    3. 'for' → logprob: -2.1318349838256836
    4. '`' → logprob: -2.6318349838256836
    5. ' for' → logprob: -2.8818349838256836
    6. 'n' → logprob: -3.1318349838256836
    7. 'i' → logprob: -3.2568349838256836
    8. '\n' → logprob: -3.5068349838256836
    9. '    
' → logprob: -3.5068349838256836
    10. 'x' → logprob: -3.8818349838256836

Token 13: 'Is' (ID: 3031)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0352976992726326
    2. '_' → logprob: -4.160297870635986
    3. ' ' → logprob: -4.910297870635986
    4. 's' → logprob: -5.285297870635986
    5. ')' → logprob: -6.035297870635986
    6. ' is' → logprob: -6.785297870635986
    7. '[' → logprob: -7.035297870635986
    8. ' .' → logprob: -7.785297870635986
    9. ' =' → logprob: -8.285297393798828
    10. 'space' → logprob: -8.660297393798828

Token 14: 'A' (ID: 32)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9612038135528564
    2. 'S' → logprob: -2.2112038135528564
    3. 'My' → logprob: -2.2112038135528564
    4. 'A' → logprob: -2.5862038135528564
    5. 'Is' → logprob: -2.9612038135528564
    6. 'T' → logprob: -3.2112038135528564
    7. 'Variable' → logprob: -3.2112038135528564
    8. 'The' → logprob: -3.3362038135528564
    9. '_a' → logprob: -3.4612038135528564
    10. 'I' → logprob: -4.461203575134277

Token 15: 'List' (ID: 950)
  Prédit: 'rray'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rray' → logprob: -0.090946264564991
    2. 'll' → logprob: -4.215946197509766
    3. 'rr' → logprob: -4.465946197509766
    4. 'Variable' → logprob: -4.465946197509766
    5. 'L' → logprob: -5.215946197509766
    6. 'l' → logprob: -5.340946197509766
    7. 'String' → logprob: -5.465946197509766
    8. 'T' → logprob: -5.590946197509766
    9. 't' → logprob: -5.840946197509766
    10. 'Var' → logprob: -5.965946197509766

Token 16: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06818349659442902
    2. '=' → logprob: -3.568183422088623
    3. '[:]' → logprob: -3.818183422088623
    4. '[' → logprob: -5.818183422088623
    5. '=[]' → logprob: -5.818183422088623
    6. '.' → logprob: -5.818183422088623
    7. '.append' → logprob: -6.068183422088623
    8. '[]' → logprob: -6.193183422088623
    9. '_' → logprob: -7.068183422088623
    10. ')' → logprob: -7.568183422088623

Token 17: ' list' (ID: 1562)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.07517552375793457
    2. ' [' → logprob: -3.0751755237579346
    3. ' list' → logprob: -4.3251752853393555
    4. '[]' → logprob: -4.4501752853393555
    5. 'list' → logprob: -7.0751752853393555
    6. '[' → logprob: -8.575175285339355
    7. ' ' → logprob: -8.700175285339355
    8. '[input' → logprob: -9.950175285339355
    9. '[list' → logprob: -10.325175285339355
    10. ' input' → logprob: -11.075175285339355

Token 18: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.000681457226164639
    2. '(range' → logprob: -7.500681400299072
    3. '(input' → logprob: -9.75068187713623
    4. '()' → logprob: -10.50068187713623
    5. '(
' → logprob: -12.00068187713623
    6. '(int' → logprob: -12.00068187713623
    7. '((' → logprob: -12.25068187713623
    8. '(map' → logprob: -12.25068187713623
    9. '(s' → logprob: -13.12568187713623
    10. ' (' → logprob: -13.37568187713623

Token 19: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.11310340464115143
    2. '(' → logprob: -2.2381033897399902
    3. '(
' → logprob: -9.488103866577148
    4. 'int' → logprob: -9.488103866577148
    5. '(lambda' → logprob: -9.988103866577148
    6. '(str' → logprob: -10.238103866577148
    7. '(input' → logprob: -10.613103866577148
    8. ' (' → logprob: -11.863103866577148
    9. ')' → logprob: -12.488103866577148
    10. '<int' → logprob: -12.613103866577148

Token 20: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.21406346559524536
    2. '(' → logprob: -1.7140634059906006
    3. ',input' → logprob: -4.83906364440918
    4. ',' → logprob: -5.71406364440918
    5. ')' → logprob: -7.96406364440918
    6. '<|end|>' → logprob: -8.08906364440918
    7. ' (' → logprob: -8.46406364440918
    8. '(
' → logprob: -9.21406364440918
    9. ' ,' → logprob: -9.33906364440918
    10. '))' → logprob: -9.46406364440918

Token 21: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.386943519115448
    2. 'input' → logprob: -1.1369435787200928
    3. '(input' → logprob: -9.761943817138672
    4. ',input' → logprob: -11.636943817138672
    5. '	input' → logprob: -13.136943817138672
    6. '=input' → logprob: -13.511943817138672
    7. ' ' → logprob: -13.636943817138672
    8. '<input' → logprob: -14.761943817138672
    9. ')' → logprob: -15.386943817138672
    10. '   ' → logprob: -15.636943817138672

Token 22: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.8656629323959351
    2. '()))' → logprob: -1.115662932395935
    3. '()' → logprob: -1.490662932395935
    4. '())))' → logprob: -4.740663051605225
    5. '().' → logprob: -5.240663051605225
    6. '()));' → logprob: -5.490663051605225
    7. '(' → logprob: -5.615663051605225
    8. '()>' → logprob: -6.615663051605225
    9. ')' → logprob: -6.865663051605225
    10. '()),' → logprob: -8.115662574768066

Token 23: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0002135534887202084
    2. 'strip' → logprob: -8.500213623046875
    3. 'rstrip' → logprob: -11.750213623046875
    4. ' split' → logprob: -13.500213623046875
    5. '(split' → logprob: -14.375213623046875
    6. 'spl' → logprob: -16.125213623046875
    7. ')' → logprob: -17.375213623046875
    8. 's' → logprob: -17.625213623046875
    9. 'sp' → logprob: -18.125213623046875
    10. 'replace' → logprob: -18.750213623046875

Token 24: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.16821110248565674
    2. '())' → logprob: -2.043210983276367
    3. '()' → logprob: -4.043210983276367
    4. '))' → logprob: -5.418210983276367
    5. '(' → logprob: -6.543210983276367
    6. ')' → logprob: -7.043210983276367
    7. '())))' → logprob: -7.168210983276367
    8. ')))' → logprob: -9.668210983276367
    9. '()))
' → logprob: -10.793210983276367
    10. '()));' → logprob: -11.293210983276367

Token 25: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.031576428562402725
    2. '[' → logprob: -4.906576633453369
    3. '   ' → logprob: -4.906576633453369
    4. ' ' → logprob: -5.281576633453369
    5. ':' → logprob: -6.281576633453369
    6. '(' → logprob: -6.781576633453369
    7. '.' → logprob: -6.781576633453369
    8. '\n' → logprob: -6.781576633453369
    9. '
' → logprob: -7.031576633453369
    10. '\' → logprob: -7.031576633453369

Token 26: ' Super' (ID: 8220)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.588506281375885
    2. '   ' → logprob: -1.2135062217712402
    3. '.' → logprob: -2.7135062217712402
    4. 'for' → logprob: -4.08850622177124
    5. ':' → logprob: -4.33850622177124
    6. '[' → logprob: -4.83850622177124
    7. ' for' → logprob: -5.08850622177124
    8. '\' → logprob: -5.08850622177124
    9. ' ' → logprob: -5.46350622177124
    10. '```' → logprob: -5.58850622177124

Token 27: 'Vector' (ID: 7580)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.4370216727256775
    2. 'List' → logprob: -2.5620217323303223
    3. 'Set' → logprob: -2.8120217323303223
    4. '().' → logprob: -2.9370217323303223
    5. 'list' → logprob: -3.8120217323303223
    6. 'l' → logprob: -4.062021732330322
    7. '_' → logprob: -4.437021732330322
    8. '().__' → logprob: -4.437021732330322
    9. 'Array' → logprob: -4.562021732330322
    10. '_list' → logprob: -4.687021732330322

Token 28: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04688475281000137
    2. '(' → logprob: -3.796884775161743
    3. '=' → logprob: -3.921884775161743
    4. '   ' → logprob: -7.296884536743164
    5. '[' → logprob: -7.421884536743164
    6. '[:]' → logprob: -7.671884536743164
    7. '.append' → logprob: -7.796884536743164
    8. ')' → logprob: -8.421884536743164
    9. '.' → logprob: -8.671884536743164
    10. '  ' → logprob: -9.046884536743164

Token 29: ' [' (ID: 723)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.916355550289154
    2. ' [' → logprob: -1.2913556098937988
    3. ' []' → logprob: -1.5413556098937988
    4. '[' → logprob: -2.416355609893799
    5. ' This' → logprob: -4.666355609893799
    6. 'This' → logprob: -4.666355609893799
    7. ' list' → logprob: -7.541355609893799
    8. '[len' → logprob: -7.666355609893799
    9. ' ' → logprob: -7.916355609893799
    10. '[:]' → logprob: -8.41635513305664

Token 30: 'None' (ID: 8505)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002091019181534648
    2. 'This' → logprob: -7.252090930938721
    3. ' ' → logprob: -7.502090930938721
    4. '1' → logprob: -8.377091407775879
    5. 'x' → logprob: -8.877091407775879
    6. 'i' → logprob: -9.127091407775879
    7. 'sum' → logprob: -9.252091407775879
    8. 'int' → logprob: -10.252091407775879
    9. 'max' → logprob: -10.627091407775879
    10. ']' → logprob: -10.627091407775879

Token 31: ']*' (ID: 18579)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.31911996006965637
    2. ']' → logprob: -1.819119930267334
    3. 'for' → logprob: -3.319119930267334
    4. ')' → logprob: -4.069119930267334
    5. '(' → logprob: -4.194119930267334
    6. ',' → logprob: -4.319119930267334
    7. ')]' → logprob: -4.819119930267334
    8. '()' → logprob: -5.319119930267334
    9. '()]' → logprob: -5.319119930267334
    10. '(len' → logprob: -5.694119930267334

Token 32: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0008872798644006252
    2. '(N' → logprob: -7.500887393951416
    3. ' N' → logprob: -8.625886917114258
    4. '(' → logprob: -9.125886917114258
    5. ' (' → logprob: -11.250886917114258
    6. '100' → logprob: -11.500886917114258
    7. ' ' → logprob: -11.750886917114258
    8. '10' → logprob: -13.000886917114258
    9. '   ' → logprob: -13.500886917114258
    10. '  ' → logprob: -13.875886917114258

Token 33: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.13548873364925385
    2. ')' → logprob: -3.135488748550415
    3. '   ' → logprob: -3.385488748550415
    4. '[' → logprob: -4.635488510131836
    5. '\' → logprob: -4.760488510131836
    6. '\n' → logprob: -4.885488510131836
    7. '<|end|>' → logprob: -5.260488510131836
    8. '    
' → logprob: -5.510488510131836
    9. '(' → logprob: -6.010488510131836
    10. '' → logprob: -6.260488510131836

Token 34: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05919032171368599
    2. '<|end|>' → logprob: -3.559190273284912
    3. '
' → logprob: -4.559190273284912
    4. '    
' → logprob: -4.934190273284912
    5. '\n' → logprob: -5.809190273284912
    6. ' for' → logprob: -5.934190273284912
    7. ')' → logprob: -6.059190273284912
    8. ' 
' → logprob: -7.434190273284912
    9. '  
' → logprob: -7.684190273284912
    10. 'for' → logprob: -7.684190273284912

Token 35: ' idx' (ID: 14016)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.053160831332206726
    2. ' for' → logprob: -3.8031609058380127
    3. 'for' → logprob: -4.303160667419434
    4. '\n' → logprob: -5.428160667419434
    5. '\' → logprob: -6.178160667419434
    6. '\t' → logprob: -6.303160667419434
    7. '	for' → logprob: -6.303160667419434
    8. '    
' → logprob: -6.803160667419434
    9. '
' → logprob: -6.928160667419434
    10. '(' → logprob: -7.053160667419434

Token 36: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04330118000507355
    2. '=' → logprob: -3.2933011054992676
    3. ' ' → logprob: -5.293301105499268
    4. '_' → logprob: -9.543301582336426
    5. 's' → logprob: -9.668301582336426
    6. '  ' → logprob: -10.418301582336426
    7. '<|end|>' → logprob: -10.668301582336426
    8. ')' → logprob: -11.293301582336426
    9. ' +=' → logprob: -12.668301582336426
    10. ' =)' → logprob: -12.918301582336426

Token 37: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.018151817843317986
    2. ' ' → logprob: -4.018151760101318
    3. '1' → logprob: -14.268152236938477
    4. '   ' → logprob: -15.393152236938477
    5. ' N' → logprob: -15.518152236938477
    6. 'N' → logprob: -15.643152236938477
    7. '[' → logprob: -16.018152236938477
    8. '-' → logprob: -16.580652236938477
    9. ' ' → logprob: -16.705652236938477
    10. '  ' → logprob: -17.080652236938477

Token 38: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001991298486245796
    2. ' ' → logprob: -9.000199317932129
    3. 'N' → logprob: -9.875199317932129
    4. '-' → logprob: -11.250199317932129
    5. '[' → logprob: -12.375199317932129
    6. '1' → logprob: -13.125199317932129
    7. '(' → logprob: -13.500199317932129
    8. '[N' → logprob: -14.375199317932129
    9. '(N' → logprob: -14.500199317932129
    10. '-N' → logprob: -15.125199317932129

Token 39: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 40: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 41: ' while' (ID: 2049)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4999929666519165
    2. 'i' → logprob: -2.249992847442627
    3. 'w' → logprob: -2.499992847442627
    4. ' ' → logprob: -2.624992847442627
    5. 'f' → logprob: -2.999992847442627
    6. ' for' → logprob: -3.999992847442627
    7. '   ' → logprob: -4.374992847442627
    8. '<|end|>' → logprob: -4.999992847442627
    9. ':' → logprob: -5.124992847442627
    10. ',' → logprob: -5.374992847442627

Token 42: ' idx' (ID: 14016)
  Prédit: ' idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.0006950391689315438
    2. 'idx' → logprob: -7.37569522857666
    3. ' N' → logprob: -9.87569522857666
    4. ' True' → logprob: -12.37569522857666
    5. ' ' → logprob: -12.37569522857666
    6. '(idx' → logprob: -12.62569522857666
    7. '	idx' → logprob: -13.12569522857666
    8. ' len' → logprob: -14.00069522857666
    9. ' (' → logprob: -14.50069522857666
    10. 'N' → logprob: -14.62569522857666

Token 43: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.008758628740906715
    2. '<' → logprob: -4.758758544921875
    3. ' ' → logprob: -9.258758544921875
    4. ' <=' → logprob: -10.633758544921875
    5. '<len' → logprob: -11.383758544921875
    6. ' <
' → logprob: -12.883758544921875
    7. '[' → logprob: -13.008758544921875
    8. '<size' → logprob: -13.258758544921875
    9. '+' → logprob: -13.508758544921875
    10. ' less' → logprob: -13.883758544921875

Token 44: ' N' (ID: 478)
  Prédit: ' N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.14282459020614624
    2. 'N' → logprob: -2.017824649810791
    3. ' ' → logprob: -9.142824172973633
    4. ' len' → logprob: -10.642824172973633
    5. 'len' → logprob: -11.267824172973633
    6. ' ' → logprob: -12.642824172973633
    7. '	N' → logprob: -14.392824172973633
    8. 'n' → logprob: -14.517824172973633
    9. '   ' → logprob: -14.767824172973633
    10. '    ' → logprob: -14.767824172973633

Token 45: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00020735491125378758
    2. ' :' → logprob: -9.00020694732666
    3. ':
' → logprob: -9.87520694732666
    4. '   ' → logprob: -11.37520694732666
    5. ':**' → logprob: -12.12520694732666
    6. ' and' → logprob: -12.37520694732666
    7. '[' → logprob: -12.50020694732666
    8. '):' → logprob: -12.87520694732666
    9. '+:' → logprob: -14.12520694732666
    10. '():' → logprob: -14.37520694732666

Token 46: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.122679352760315
    2. ' ' → logprob: -1.372679352760315
    3. ':' → logprob: -1.872679352760315
    4. '       ' → logprob: -2.3726792335510254
    5. '[' → logprob: -2.6226792335510254
    6. '    ' → logprob: -3.1226792335510254
    7. '<|end|>' → logprob: -4.747679233551025
    8. ' :' → logprob: -5.122679233551025
    9. '    
' → logprob: -5.247679233551025
    10. ')' → logprob: -5.247679233551025

Token 47: ' Super' (ID: 8220)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.8594974875450134
    2. '   ' → logprob: -0.9844974875450134
    3. '    ' → logprob: -2.609497547149658
    4. 'if' → logprob: -2.984497547149658
    5. 's' → logprob: -4.359497547149658
    6. 'i' → logprob: -4.734497547149658
    7. ' ' → logprob: -4.984497547149658
    8. ' s' → logprob: -5.234497547149658
    9. 't' → logprob: -5.359497547149658
    10. 'Super' (adapté à ' Super') → logprob: -5.359497547149658

Token 48: 'Vector' (ID: 7580)
  Prédit: 'Vector'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Vector' → logprob: -4.127333340875339e-06
    2. 'vector' → logprob: -12.875003814697266
    3. '_Vector' → logprob: -14.375003814697266
    4. ' Vector' → logprob: -14.875003814697266
    5. '_vector' → logprob: -15.875003814697266
    6. '	Vector' → logprob: -16.250003814697266
    7. 'Vect' → logprob: -16.250003814697266
    8. 'Vec' → logprob: -16.625003814697266
    9. 'V' → logprob: -17.000003814697266
    10. '.Vector' → logprob: -17.000003814697266

Token 49: '[idx' (ID: 25582)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.40875864028930664
    2. '[idx' → logprob: -1.4087586402893066
    3. ' =' → logprob: -2.5337586402893066
    4. '=' → logprob: -5.283758640289307
    5. ' [' → logprob: -5.908758640289307
    6. '.append' → logprob: -6.908758640289307
    7. ']' → logprob: -7.658758640289307
    8. '[int' → logprob: -7.908758640289307
    9. '   ' → logprob: -8.033758163452148
    10. '=[' → logprob: -8.533758163452148

Token 50: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2543177306652069
    2. ' ]' → logprob: -1.5043177604675293
    3. ' =' → logprob: -6.379317760467529
    4. '=' → logprob: -8.629317283630371
    5. ']=' → logprob: -8.629317283630371
    6. '[' → logprob: -9.129317283630371
    7. ')' → logprob: -9.504317283630371
    8. ' ' → logprob: -9.504317283630371
    9. ' +=' → logprob: -10.879317283630371
    10. ' )' → logprob: -11.379317283630371

Token 51: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10082042217254639
    2. '=' → logprob: -2.350820541381836
    3. ' ' → logprob: -7.725820541381836
    4. ' +=' → logprob: -9.975820541381836
    5. ')' → logprob: -10.350820541381836
    6. ',' → logprob: -10.850820541381836
    7. '<|end|>' → logprob: -11.225820541381836
    8. '+' → logprob: -11.475820541381836
    9. ']' → logprob: -11.850820541381836
    10. '.' → logprob: -11.850820541381836

Token 52: ' ' (ID: 220)
  Prédit: 'This'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'This' → logprob: -0.09292484819889069
    2. ' This' → logprob: -2.5929248332977295
    3. 'int' → logprob: -5.717925071716309
    4. 'max' → logprob: -5.842925071716309
    5. '(This' → logprob: -5.842925071716309
    6. ' max' → logprob: -6.217925071716309
    7. ' int' → logprob: -7.717925071716309
    8. '0' → logprob: -7.842925071716309
    9. 'idx' → logprob: -7.842925071716309
    10. ' ' → logprob: -8.092925071716309

Token 53: '0' (ID: 15)
  Prédit: 'This'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'This' → logprob: -0.014590993523597717
    2. 'int' → logprob: -4.889591217041016
    3. 'max' → logprob: -6.139591217041016
    4. '0' → logprob: -6.514591217041016
    5. 'idx' → logprob: -7.139591217041016
    6. '(' → logprob: -7.639591217041016
    7. '(This' → logprob: -7.764591217041016
    8. ' This' → logprob: -8.264591217041016
    9. '(int' → logprob: -8.514591217041016
    10. 'input' → logprob: -8.889591217041016

Token 54: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0241540670394897
    2. '+' → logprob: -1.6491540670394897
    3. '   ' → logprob: -1.8991540670394897
    4. '<|end|>' → logprob: -2.3991541862487793
    5. '    
' → logprob: -2.6491541862487793
    6. '\n' → logprob: -3.2741541862487793
    7. ' 
' → logprob: -3.7741541862487793
    8. '       ' → logprob: -3.7741541862487793
    9. '    ' → logprob: -4.274154186248779
    10. ' ' → logprob: -5.024154186248779

Token 55: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7941620945930481
    2. '    
' → logprob: -1.6691620349884033
    3. '
' → logprob: -2.0441620349884033
    4. '       ' → logprob: -2.9191620349884033
    5. '<|end|>' → logprob: -2.9191620349884033
    6. ' 
' → logprob: -3.4191620349884033
    7. '   
' → logprob: -3.9191620349884033
    8. ' ' → logprob: -4.294162273406982
    9. '\n' → logprob: -4.294162273406982
    10. '    ' → logprob: -4.419162273406982

Token 56: ' idx' (ID: 14016)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6591735482215881
    2. '\n' → logprob: -1.2841734886169434
    3. '    
' → logprob: -2.5341734886169434
    4. 'idx' (adapté à ' idx') → logprob: -3.2841734886169434
    5. '
' → logprob: -3.4091734886169434
    6. ' if' → logprob: -4.159173488616943
    7. ' idx' → logprob: -4.409173488616943
    8. '       ' → logprob: -5.159173488616943
    9. '\' → logprob: -5.534173488616943
    10. 'if' → logprob: -5.784173488616943

Token 57: ' =' (ID: 314)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0648016706109047
    2. ' +=' → logprob: -2.9398016929626465
    3. '+=' → logprob: -4.9398016929626465
    4. ' +' → logprob: -5.9398016929626465
    5. ' ' → logprob: -9.564801216125488
    6. '++' → logprob: -12.439801216125488
    7. '<|end|>' → logprob: -12.564801216125488
    8. '+++' → logprob: -13.814801216125488
    9. '=' → logprob: -14.564801216125488
    10. '+='' → logprob: -14.564801216125488

Token 58: ' idx' (ID: 14016)
  Prédit: ' idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.0025314295198768377
    2. 'idx' → logprob: -6.0025315284729
    3. ' ' → logprob: -9.877531051635742
    4. '	idx' → logprob: -12.752531051635742
    5. '+' → logprob: -14.002531051635742
    6. '(idx' → logprob: -15.127531051635742
    7. '0' → logprob: -15.252531051635742
    8. '[idx' → logprob: -16.377531051635742
    9. 'Idx' → logprob: -17.252531051635742
    10. '1' → logprob: -17.377531051635742

Token 59: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.10021431744098663
    2. ' +' → logprob: -2.3502142429351807
    3. ' plus' → logprob: -12.600214004516602
    4. ' ' → logprob: -12.725214004516602
    5. '1' → logprob: -14.850214004516602
    6. '<|end|>' → logprob: -15.475214004516602
    7. '+++' → logprob: -15.850214004516602
    8. '0' → logprob: -15.975214004516602
    9. '＋' → logprob: -16.6002140045166
    10. '++' → logprob: -16.7252140045166

Token 60: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004307884373702109
    2. ' ' → logprob: -7.750430583953857
    3. '   ' → logprob: -15.750431060791016
    4. ' ' → logprob: -19.125431060791016
    5. '```' → logprob: -19.625431060791016
    6. '<|end|>' → logprob: -19.625431060791016
    7. '  ' → logprob: -19.750431060791016
    8. '    ' → logprob: -19.875431060791016
    9. '۱' → logprob: -20.750431060791016
    10. '１' → logprob: -21.187931060791016

Token 61: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.688212614681106e-05
    2. ' ' → logprob: -11.000017166137695
    3. '   ' → logprob: -16.750017166137695
    4. '```' → logprob: -17.500017166137695
    5. '<|end|>' → logprob: -18.375017166137695
    6. '  ' → logprob: -18.375017166137695
    7. '2' → logprob: -20.125017166137695
    8. '`' → logprob: -20.187517166137695
    9. '+' → logprob: -20.312517166137695
    10. '۱' → logprob: -20.687517166137695

Token 62: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08894655108451843
    2. '   ' → logprob: -3.213946580886841
    3. ' 
' → logprob: -3.963946580886841
    4. '    
' → logprob: -4.588946342468262
    5. '<|end|>' → logprob: -5.338946342468262
    6. '\n' → logprob: -5.588946342468262
    7. ' ' → logprob: -5.838946342468262
    8. '  
' → logprob: -6.963946342468262
    9. '' → logprob: -7.088946342468262
    10. '```' → logprob: -7.463946342468262

Token 63: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7481998801231384
    2. '
' → logprob: -0.8731998801231384
    3. '    
' → logprob: -3.123199939727783
    4. ' 
' → logprob: -3.498199939727783
    5. '' → logprob: -4.873199939727783
    6. '\n' → logprob: -4.998199939727783
    7. ' ' → logprob: -4.998199939727783
    8. '  
' → logprob: -5.498199939727783
    9. 'i' → logprob: -6.623199939727783
    10. '\' → logprob: -6.623199939727783

Token 64: ' b' (ID: 287)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.793681263923645
    2. '   ' → logprob: -1.043681263923645
    3. 'i' → logprob: -2.7936811447143555
    4. '\n' → logprob: -3.2936811447143555
    5. '
' → logprob: -3.7936811447143555
    6. ' 
' → logprob: -4.0436811447143555
    7. '    
' → logprob: -4.1686811447143555
    8. '' → logprob: -5.0436811447143555
    9. '#' → logprob: -5.2936811447143555
    10. '  ' → logprob: -5.5436811447143555

Token 65: ' =' (ID: 314)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.599128007888794
    2. 'e' → logprob: -1.349128007888794
    3. 'r' → logprob: -2.349128007888794
    4. 'i' → logprob: -3.349128007888794
    5. 'y' → logprob: -3.599128007888794
    6. 'a' → logprob: -4.974127769470215
    7. 'for' → logprob: -4.974127769470215
    8. '=' → logprob: -5.099127769470215
    9. 'f' → logprob: -5.224127769470215
    10. 'reak' → logprob: -5.974127769470215

Token 66: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.18937452137470245
    2. ' ' → logprob: -2.6893744468688965
    3. ' [' → logprob: -3.5643744468688965
    4. '[' → logprob: -3.9393744468688965
    5. '[]' → logprob: -4.1893744468688965
    6. 'int' → logprob: -4.1893744468688965
    7. '[int' → logprob: -4.9393744468688965
    8. ' []' → logprob: -5.0643744468688965
    9. 'This' → logprob: -5.8143744468688965
    10. ' int' → logprob: -5.9393744468688965

Token 67: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.49350792169570923
    2. 'int' → logprob: -1.1185078620910645
    3. '[' → logprob: -3.7435078620910645
    4. '[]' → logprob: -4.3685078620910645
    5. '[int' → logprob: -4.6185078620910645
    6. 'N' → logprob: -5.3685078620910645
    7. 'True' → logprob: -6.1185078620910645
    8. 'False' → logprob: -6.4935078620910645
    9. 'len' → logprob: -6.4935078620910645
    10. 'list' → logprob: -6.6185078620910645

Token 68: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2629340589046478
    2. '<|end|>' → logprob: -1.5129340887069702
    3. '<|end|>' → logprob: -5.13793420791626
    4. ' while' → logprob: -6.38793420791626
    5. 'while' → logprob: -7.13793420791626
    6. ' 
' → logprob: -7.26293420791626
    7. '   ' → logprob: -7.38793420791626
    8. '    
' → logprob: -8.137933731079102
    9. '	while' → logprob: -8.137933731079102
    10. '  
' → logprob: -9.012933731079102

Token 69: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8671268224716187
    2. '<|end|>' → logprob: -1.3671268224716187
    3. '
' → logprob: -1.8671268224716187
    4. 'while' → logprob: -2.617126941680908
    5. ' while' → logprob: -2.742126941680908
    6. '<|end|>' → logprob: -5.242126941680908
    7. ' ' → logprob: -5.367126941680908
    8. '	while' → logprob: -5.367126941680908
    9. '```' → logprob: -5.617126941680908
    10. '    
' → logprob: -5.992126941680908

Token 70: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.4651971459388733
    2. 'w' → logprob: -1.2151970863342285
    3. 'i' → logprob: -3.5901970863342285
    4. 'for' → logprob: -4.4651970863342285
    5. ' while' → logprob: -4.8401970863342285
    6. 'idx' → logprob: -5.0901970863342285
    7. 'b' → logprob: -5.4651970863342285
    8. 'n' → logprob: -6.0901970863342285
    9. 't' → logprob: -6.3401970863342285
    10. 'a' → logprob: -6.3401970863342285

Token 71: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.12719392776489258
    2. 'b' → logprob: -2.1271939277648926
    3. ' ' → logprob: -9.002193450927734
    4. ' N' → logprob: -9.252193450927734
    5. 'N' → logprob: -10.627193450927734
    6. '    ' → logprob: -11.377193450927734
    7. '	b' → logprob: -12.752193450927734
    8. ' True' → logprob: -13.002193450927734
    9. '   ' → logprob: -13.752193450927734
    10. '<|end|>' → logprob: -13.877193450927734

Token 72: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.0024003859143704176
    2. '<' → logprob: -6.1274003982543945
    3. ' ' → logprob: -8.502400398254395
    4. ' <=' → logprob: -11.752400398254395
    5. '<|end|>' → logprob: -13.252400398254395
    6. '<N' → logprob: -13.752400398254395
    7. '<len' → logprob: -15.377400398254395
    8. '+' → logprob: -15.627400398254395
    9. ' <",' → logprob: -15.877400398254395
    10. ' <
' → logprob: -16.002399444580078

Token 73: ' len' (ID: 4631)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.006727803498506546
    2. ' N' → logprob: -5.006727695465088
    3. ' ' → logprob: -12.256728172302246
    4. '   ' → logprob: -12.506728172302246
    5. '  ' → logprob: -13.631728172302246
    6. '	N' → logprob: -13.756728172302246
    7. 'n' → logprob: -14.381728172302246
    8. '<|end|>' → logprob: -15.006728172302246
    9. 'len' → logprob: -15.506728172302246
    10. '    ' → logprob: -15.756728172302246

Token 74: '(This' (ID: 89607)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3946787714958191
    2. '(This' → logprob: -1.1446788311004639
    3. '(S' → logprob: -4.894678592681885
    4. '(The' → logprob: -8.269679069519043
    5. '(T' → logprob: -12.269679069519043
    6. ' (' → logprob: -12.519679069519043
    7. '(A' → logprob: -12.644679069519043
    8. '(this' → logprob: -12.644679069519043
    9. '(B' → logprob: -13.019679069519043
    10. '(To' → logprob: -13.019679069519043

Token 75: 'Is' (ID: 3031)
  Prédit: 'Is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Is' → logprob: -6.392202976712724e-06
    2. 'I' → logprob: -12.375006675720215
    3. 'This' → logprob: -13.250006675720215
    4. ' Is' → logprob: -15.000006675720215
    5. '	Is' → logprob: -18.6250057220459
    6. ')' → logprob: -18.8750057220459
    7. '_Is' → logprob: -19.3750057220459
    8. 'IS' → logprob: -19.6250057220459
    9. 'A' → logprob: -19.7500057220459
    10. '...' → logprob: -19.7500057220459

Token 76: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.5451681974809617e-05
    2. 'a' → logprob: -11.625015258789062
    3. 'This' → logprob: -12.750015258789062
    4. ' A' → logprob: -13.500015258789062
    5. ')' → logprob: -14.125015258789062
    6. 'Is' → logprob: -14.875015258789062
    7. 'List' → logprob: -15.250015258789062
    8. 'The' → logprob: -15.750015258789062
    9. 'AL' → logprob: -15.750015258789062
    10. 'Vector' → logprob: -16.625015258789062

Token 77: 'List' (ID: 950)
  Prédit: 'List'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -1.2233183042553719e-05
    2. '_list' → logprob: -12.750012397766113
    3. 'ist' → logprob: -12.875012397766113
    4. 'L' → logprob: -13.375012397766113
    5. 'Li' → logprob: -13.500012397766113
    6. 'list' → logprob: -13.625012397766113
    7. 'Lst' → logprob: -14.000012397766113
    8. 'Lis' → logprob: -14.250012397766113
    9. ' List' → logprob: -14.875012397766113
    10. 'Lists' → logprob: -15.625012397766113

Token 78: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.25790315866470337
    2. ')' → logprob: -1.5079030990600586
    3. ' ):' → logprob: -5.632903099060059
    4. ' and' → logprob: -6.632903099060059
    5. 'and' → logprob: -7.882903099060059
    6. ' )' → logprob: -8.007903099060059
    7. '[' → logprob: -8.257903099060059
    8. '):
' → logprob: -9.882903099060059
    9. ':' → logprob: -11.382903099060059
    10. ' ' → logprob: -12.007903099060059

Token 79: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6475318670272827
    2. ':' → logprob: -1.1475318670272827
    3. '   ' → logprob: -2.7725319862365723
    4. '<|end|>' → logprob: -3.1475319862365723
    5. ' ' → logprob: -4.147531986236572
    6. ' :' → logprob: -5.147531986236572
    7. ':
' → logprob: -5.272531986236572
    8. '[' → logprob: -5.522531986236572
    9. '    
' → logprob: -5.897531986236572
    10. ' 
' → logprob: -6.022531986236572

Token 80: ' v' (ID: 323)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.14037585258483887
    2. '    ' → logprob: -2.515375852584839
    3. '   ' → logprob: -3.890375852584839
    4. ' if' → logprob: -5.265376091003418
    5. 'S' → logprob: -5.640376091003418
    6. ' s' → logprob: -5.890376091003418
    7. 'a' → logprob: -5.890376091003418
    8. 's' → logprob: -6.390376091003418
    9. ' S' → logprob: -6.390376091003418
    10. 'Super' → logprob: -6.890376091003418

Token 81: ' =' (ID: 314)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.24432450532913208
    2. 'al' → logprob: -2.2443244457244873
    3. '[' → logprob: -2.8693244457244873
    4. ' =' → logprob: -3.9943244457244873
    5. '[a' → logprob: -4.869324684143066
    6. '=' → logprob: -5.119324684143066
    7. '   ' → logprob: -5.869324684143066
    8. 'alue' → logprob: -6.306824684143066
    9. ' ' → logprob: -6.494324684143066
    10. '  ' → logprob: -6.806824684143066

Token 82: ' This' (ID: 1328)
  Prédit: ' This'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' This' → logprob: -0.06545083969831467
    2. 'This' → logprob: -2.81545090675354
    3. ' Super' → logprob: -6.065450668334961
    4. ' ' → logprob: -7.565450668334961
    5. ' b' → logprob: -7.940450668334961
    6. 'Super' → logprob: -9.190450668334961
    7. 'b' → logprob: -9.815450668334961
    8. '	This' → logprob: -10.315450668334961
    9. ' ' → logprob: -10.690450668334961
    10. '(This' → logprob: -10.940450668334961

Token 83: 'Is' (ID: 3031)
  Prédit: 'Is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Is' → logprob: -4.842555426876061e-06
    2. 'I' → logprob: -13.125004768371582
    3. 's' → logprob: -13.875004768371582
    4. 'As' → logprob: -14.250004768371582
    5. 'This' → logprob: -14.500004768371582
    6. ' Is' → logprob: -15.500004768371582
    7. 'In' → logprob: -16.6250057220459
    8. 'A' → logprob: -16.7500057220459
    9. 'It' → logprob: -16.7500057220459
    10. 'is' → logprob: -16.8750057220459

Token 84: 'A' (ID: 32)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.16756586730480194
    2. 'A' → logprob: -2.2925658226013184
    3. 'S' → logprob: -3.6675658226013184
    4. 'Is' → logprob: -4.042565822601318
    5. 'a' → logprob: -5.292565822601318
    6. 'This' → logprob: -5.792565822601318
    7. 'As' → logprob: -7.417565822601318
    8. 'List' → logprob: -8.667566299438477
    9. 'So' → logprob: -9.292566299438477
    10. 't' → logprob: -9.292566299438477

Token 85: 'List' (ID: 950)
  Prédit: 'List'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.00133595522493124
    2. 'list' → logprob: -7.126336097717285
    3. 'Lst' → logprob: -8.501336097717285
    4. '_list' → logprob: -9.001336097717285
    5. 'L' → logprob: -10.126336097717285
    6. 'lst' → logprob: -10.376336097717285
    7. 's' → logprob: -10.501336097717285
    8. 'ist' → logprob: -10.626336097717285
    9. 'st' → logprob: -10.876336097717285
    10. '_List' → logprob: -11.876336097717285

Token 86: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -0.016522139310836792
    2. '[' → logprob: -4.14152193069458
    3. '[v' → logprob: -8.266522407531738
    4. ' [' → logprob: -8.891522407531738
    5. 'b' → logprob: -10.016522407531738
    6. '```' → logprob: -10.641522407531738
    7. '[
' → logprob: -12.141522407531738
    8. '[s' → logprob: -12.391522407531738
    9. ' ' → logprob: -12.516522407531738
    10. '[a' → logprob: -13.141522407531738

Token 87: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.020561860874295235
    2. ')' → logprob: -4.020561695098877
    3. ']
' → logprob: -7.020561695098877
    4. '])' → logprob: -7.020561695098877
    5. ' ]' → logprob: -8.270562171936035
    6. ']+' → logprob: -9.020562171936035
    7. ')
' → logprob: -9.395562171936035
    8. '[' → logprob: -10.020562171936035
    9. ')]' → logprob: -10.270562171936035
    10. '+' → logprob: -10.395562171936035

Token 88: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 89: ' Super' (ID: 8220)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8361775875091553
    2. ' if' → logprob: -1.9611775875091553
    3. 'if' → logprob: -1.9611775875091553
    4. ' 
' → logprob: -2.4611775875091553
    5. '<|end|>' → logprob: -2.4611775875091553
    6. '   ' → logprob: -4.086177825927734
    7. '
' → logprob: -4.211177825927734
    8. 'Super' (adapté à ' Super') → logprob: -4.336177825927734
    9. '+' → logprob: -4.461177825927734
    10. 'b' → logprob: -5.086177825927734

Token 90: 'Vector' (ID: 7580)
  Prédit: 'Vector'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Vector' → logprob: -5.200166469876422e-06
    2. '_Vector' → logprob: -13.500004768371582
    3. 'Vect' → logprob: -13.625004768371582
    4. '	Vector' → logprob: -14.000004768371582
    5. '_vector' → logprob: -14.625004768371582
    6. 'ector' → logprob: -14.875004768371582
    7. 'Vec' → logprob: -15.000004768371582
    8. ' Vector' → logprob: -15.750004768371582
    9. '.Vector' → logprob: -16.2500057220459
    10. 'vector' → logprob: -16.6250057220459

Token 91: '[v' (ID: 36561)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.34891489148139954
    2. '[v' → logprob: -1.2239148616790771
    3. '[idx' → logprob: -9.598915100097656
    4. '[i' → logprob: -9.973915100097656
    5. 'v' → logprob: -10.098915100097656
    6. ' [' → logprob: -10.223915100097656
    7. '[s' → logprob: -10.223915100097656
    8. '[b' → logprob: -10.598915100097656
    9. '[val' → logprob: -10.723915100097656
    10. '[u' → logprob: -10.848915100097656

Token 92: '-' (ID: 12)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0018593916902318597
    2. ']+=' → logprob: -6.876859188079834
    3. ' ]' → logprob: -7.126859188079834
    4. '-' → logprob: -12.251859664916992
    5. '<|end|>' → logprob: -12.501859664916992
    6. '[' → logprob: -12.626859664916992
    7. ']=' → logprob: -12.876859664916992
    8. '+' → logprob: -13.001859664916992
    9. ']+' → logprob: -13.501859664916992
    10. ')' → logprob: -14.126859664916992

Token 93: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003397535183466971
    2. ' ' → logprob: -8.12533950805664
    3. '<|end|>' → logprob: -10.12533950805664
    4. ']' → logprob: -14.00033950805664
    5. '<|end|>' → logprob: -14.62533950805664
    6. ')' → logprob: -14.87533950805664
    7. '...' → logprob: -15.31283950805664
    8. '```' → logprob: -15.31283950805664
    9. '>' → logprob: -15.50033950805664
    10. '2' → logprob: -15.50033950805664

Token 94: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.013722431845963001
    2. ' ]' → logprob: -4.5137224197387695
    3. ']+=' → logprob: -6.2637224197387695
    4. ' +=' → logprob: -8.01372241973877
    5. '<|end|>' → logprob: -8.26372241973877
    6. ')' → logprob: -9.26372241973877
    7. '+' → logprob: -10.51372241973877
    8. '+=' → logprob: -10.76372241973877
    9. ' ' → logprob: -12.01372241973877
    10. '[' → logprob: -12.51372241973877

Token 95: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8240769505500793
    2. ' +=' → logprob: -1.0740768909454346
    3. '=' → logprob: -1.9490768909454346
    4. '+=' → logprob: -2.5740768909454346
    5. ' ' → logprob: -7.699077129364014
    6. '+' → logprob: -7.699077129364014
    7. '<|end|>' → logprob: -8.824076652526855
    8. ']+=' → logprob: -11.199076652526855
    9. ' +' → logprob: -11.449076652526855
    10. ')' → logprob: -11.949076652526855

Token 96: ' Super' (ID: 8220)
  Prédit: 'Super'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Super' → logprob: -0.04143194854259491
    2. '1' → logprob: -3.2914319038391113
    3. ' Super' → logprob: -5.916431903839111
    4. 'Su' → logprob: -7.916431903839111
    5. ' ' → logprob: -9.41643238067627
    6. '0' → logprob: -9.79143238067627
    7. '   ' → logprob: -10.41643238067627
    8. 'Superclass' → logprob: -10.54143238067627
    9. 'super' → logprob: -10.91643238067627
    10. 'True' → logprob: -11.04143238067627

Token 97: 'Vector' (ID: 7580)
  Prédit: 'Vector'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Vector' → logprob: -4.024604277219623e-05
    2. '_Vector' → logprob: -11.375040054321289
    3. '_vector' → logprob: -11.625040054321289
    4. '	Vector' → logprob: -11.875040054321289
    5. 'vector' → logprob: -12.500040054321289
    6. '.Vector' → logprob: -13.000040054321289
    7. 'Vec' → logprob: -13.500040054321289
    8. '<Vector' → logprob: -13.625040054321289
    9. '<|end|>' → logprob: -13.625040054321289
    10. 'Vect' → logprob: -14.000040054321289

Token 98: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.00014799882774241269
    2. 'v' → logprob: -9.625147819519043
    3. '[b' → logprob: -10.125147819519043
    4. '[' → logprob: -10.250147819519043
    5. '[val' → logprob: -13.125147819519043
    6. '```' → logprob: -14.375147819519043
    7. '[idx' → logprob: -14.500147819519043
    8. '[s' → logprob: -14.625147819519043
    9. '[S' → logprob: -14.875147819519043
    10. '[value' → logprob: -14.875147819519043

Token 99: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0004152993205934763
    2. '1' → logprob: -8.250414848327637
    3. ' -' → logprob: -9.125414848327637
    4. '<|end|>' → logprob: -11.250414848327637
    5. ']' → logprob: -11.750414848327637
    6. 'b' → logprob: -12.625414848327637
    7. '<|end|>' → logprob: -12.625414848327637
    8. ']-' → logprob: -12.875414848327637
    9. 'x' → logprob: -13.000414848327637
    10. 'v' → logprob: -13.125414848327637

Token 100: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002582402084954083
    2. '2' → logprob: -8.375258445739746
    3. ' ' → logprob: -11.250258445739746
    4. '<|end|>' → logprob: -11.750258445739746
    5. 's' → logprob: -13.125258445739746
    6. '<|end|>' → logprob: -13.500258445739746
    7. '   ' → logprob: -14.250258445739746
    8. '-' → logprob: -15.000258445739746
    9. '```' → logprob: -15.250258445739746
    10. '...' → logprob: -15.625258445739746

Token 101: ']' (ID: 60)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.1633634865283966
    2. '+' → logprob: -1.9133634567260742
    3. ']' → logprob: -6.288363456726074
    4. ']+' → logprob: -7.288363456726074
    5. ')' → logprob: -8.413363456726074
    6. ' ' → logprob: -9.163363456726074
    7. ' plus' → logprob: -9.163363456726074
    8. ' ]' → logprob: -9.788363456726074
    9. ')+' → logprob: -10.163363456726074
    10. '<|end|>' → logprob: -10.288363456726074

Token 102: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3869243860244751
    2. ' +' → logprob: -1.136924386024475
    3. ' plus' → logprob: -10.261924743652344
    4. ' ' → logprob: -11.136924743652344
    5. '1' → logprob: -13.511924743652344
    6. '+
' → logprob: -14.261924743652344
    7. ' +
' → logprob: -14.886924743652344
    8. '<|end|>' → logprob: -14.886924743652344
    9. '+b' → logprob: -15.136924743652344
    10. 'plus' → logprob: -15.386924743652344

Token 103: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0013305948814377189
    2. ' ' → logprob: -6.626330375671387
    3. 'v' → logprob: -12.876330375671387
    4. '   ' → logprob: -13.626330375671387
    5. ' v' → logprob: -15.001330375671387
    6. 'This' → logprob: -15.251330375671387
    7. '<|end|>' → logprob: -16.251331329345703
    8. '2' → logprob: -16.376331329345703
    9. '  ' → logprob: -16.876331329345703
    10. '```' → logprob: -16.876331329345703

Token 104: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.635164754698053e-05
    2. ' ' → logprob: -10.250066757202148
    3. 'v' → logprob: -10.500066757202148
    4. 'This' → logprob: -13.625066757202148
    5. '   ' → logprob: -14.500066757202148
    6. '2' → logprob: -14.625066757202148
    7. 'b' → logprob: -15.125066757202148
    8. '10' → logprob: -15.125066757202148
    9. '```' → logprob: -16.81256675720215
    10. ' v' → logprob: -16.81256675720215

Token 105: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08983280509710312
    2. '       ' → logprob: -2.5898327827453613
    3. 'b' → logprob: -5.714832782745361
    4. '   ' → logprob: -6.089832782745361
    5. '\n' → logprob: -6.214832782745361
    6. '        
' → logprob: -7.089832782745361
    7. '    
' → logprob: -7.089832782745361
    8. '
' → logprob: -7.839832782745361
    9. '\' → logprob: -8.08983325958252
    10. '<|end|>' → logprob: -8.21483325958252

Token 106: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5775120258331299
    2. '   ' → logprob: -1.5775120258331299
    3. '       ' → logprob: -1.9525120258331299
    4. 'b' → logprob: -2.45251202583313
    5. '    
' → logprob: -6.452511787414551
    6. ' b' → logprob: -7.202511787414551
    7. '        
' → logprob: -7.702511787414551
    8. '```' → logprob: -7.827511787414551
    9. ' ' → logprob: -8.20251178741455
    10. '  
' → logprob: -9.20251178741455

Token 107: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -0.013837537728250027
    2. '   ' → logprob: -4.8888373374938965
    3. '       ' → logprob: -5.5138373374938965
    4. ' b' → logprob: -6.1388373374938965
    5. ' ' → logprob: -11.888837814331055
    6. '	b' → logprob: -12.388837814331055
    7. '  ' → logprob: -12.638837814331055
    8. '
' → logprob: -13.013837814331055
    9. '    
' → logprob: -13.263837814331055
    10. '    ' → logprob: -13.513837814331055

Token 108: ' +=' (ID: 2757)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6492967009544373
    2. ' +' → logprob: -1.274296760559082
    3. ' +=' → logprob: -1.649296760559082
    4. ' ' → logprob: -5.774296760559082
    5. ' =' → logprob: -6.524296760559082
    6. '+=' → logprob: -6.899296760559082
    7. '=' → logprob: -9.274296760559082
    8. '<|end|>' → logprob: -9.899296760559082
    9. ' +
' → logprob: -11.899296760559082
    10. ' plus' → logprob: -12.024296760559082

Token 109: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0017023178515955806
    2. ' ' → logprob: -6.376702308654785
    3. '```' → logprob: -16.1267032623291
    4. '   ' → logprob: -16.6267032623291
    5. ' ' → logprob: -17.3767032623291
    6. '１' → logprob: -18.6267032623291
    7. '۱' → logprob: -18.7517032623291
    8. '  ' → logprob: -19.0642032623291
    9. '	' → logprob: -20.0017032623291
    10. '    ' → logprob: -20.0642032623291

Token 110: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.4391956685576588e-05
    2. ' ' → logprob: -10.625024795532227
    3. '```' → logprob: -17.625024795532227
    4. '   ' → logprob: -18.062524795532227
    5. '۱' → logprob: -19.125024795532227
    6. '１' → logprob: -19.312524795532227
    7. '  ' → logprob: -19.812524795532227
    8. '१' → logprob: -20.062524795532227
    9. '+' → logprob: -20.312524795532227
    10. ' ' → logprob: -20.687524795532227

Token 111: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.11367195844650269
    2. '<|end|>' → logprob: -2.7386720180511475
    3. '   ' → logprob: -3.8636720180511475
    4. '\n' → logprob: -4.113671779632568
    5. '    
' → logprob: -6.363671779632568
    6. '#' → logprob: -6.738671779632568
    7. '```' → logprob: -7.488671779632568
    8. '  
' → logprob: -7.863671779632568
    9. ')' → logprob: -8.113672256469727
    10. 'newline' → logprob: -8.488672256469727

Token 112: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9422900080680847
    2. '   ' → logprob: -0.9422900080680847
    3. '<|end|>' → logprob: -2.0672900676727295
    4. '#' → logprob: -3.1922900676727295
    5. '    
' → logprob: -3.8172900676727295
    6. '\n' → logprob: -4.94228982925415
    7. ' 
' → logprob: -4.94228982925415
    8. '```' → logprob: -5.19228982925415
    9. '  
' → logprob: -5.81728982925415
    10. '' → logprob: -6.44228982925415

Token 113: ' [' (ID: 723)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.2994160652160645
    2. 'max' → logprob: -1.2994160652160645
    3. 'idx' → logprob: -1.6744160652160645
    4. 'for' → logprob: -2.0494160652160645
    5. 'i' → logprob: -2.5494160652160645
    6. 'm' → logprob: -4.2994160652160645
    7. 'print' → logprob: -4.2994160652160645
    8. 'a' → logprob: -5.1744160652160645
    9. 'result' → logprob: -5.4244160652160645
    10. 'count' → logprob: -5.7994160652160645

Token 114: 'print' (ID: 1598)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.1425328254699707
    2. 'idx' → logprob: -2.6425328254699707
    3. 'v' → logprob: -4.017532825469971
    4. 'x' → logprob: -4.392532825469971
    5. ' i' → logprob: -4.892532825469971
    6. 'c' → logprob: -5.017532825469971
    7. 'print' → logprob: -5.017532825469971
    8. ' idx' → logprob: -5.517532825469971
    9. 'p' → logprob: -6.392532825469971
    10. 'for' → logprob: -7.392532825469971

Token 115: '(x' (ID: 4061)
  Prédit: '(S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -0.4058852195739746
    2. '(' → logprob: -1.6558852195739746
    3. '(x' → logprob: -2.1558852195739746
    4. '(i' → logprob: -3.7808852195739746
    5. '(value' → logprob: -6.780885219573975
    6. '(s' → logprob: -6.905885219573975
    7. '(item' → logprob: -7.655885219573975
    8. '(v' → logprob: -7.655885219573975
    9. '(val' → logprob: -8.530885696411133
    10. '(a' → logprob: -8.905885696411133

Token 116: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.18527868390083313
    2. '())' → logprob: -2.0602786540985107
    3. '()' → logprob: -3.1852786540985107
    4. '(' → logprob: -8.56027889251709
    5. '(),' → logprob: -9.93527889251709
    6. ',' → logprob: -10.31027889251709
    7. ' )' → logprob: -10.93527889251709
    8. ',)' → logprob: -11.81027889251709
    9. ' ())' → logprob: -11.93527889251709
    10. '(x' → logprob: -12.06027889251709

Token 117: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -1.1169438362121582
    2. '(' → logprob: -1.2419438362121582
    3. ']' → logprob: -1.4919438362121582
    4. ')' → logprob: -1.9919438362121582
    5. '()]' → logprob: -4.116943836212158
    6. ']()' → logprob: -6.366943836212158
    7. '   ' → logprob: -6.991943836212158
    8. '(S' → logprob: -7.116943836212158
    9. 'for' → logprob: -7.491943836212158
    10. ')]' → logprob: -7.741943836212158

Token 118: ' x' (ID: 1215)
  Prédit: 'Super'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Super' → logprob: -0.12695825099945068
    2. ' Super' → logprob: -2.1269583702087402
    3. ' range' → logprob: -11.376957893371582
    4. ' ' → logprob: -12.126957893371582
    5. '	S' → logprob: -12.126957893371582
    6. 'Su' → logprob: -13.376957893371582
    7. 'Superclass' → logprob: -13.626957893371582
    8. 'range' → logprob: -14.001957893371582
    9. 'Superview' → logprob: -14.501957893371582
    10. 'Range' → logprob: -14.626957893371582

Token 119: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03154096379876137
    2. '(S' → logprob: -4.156540870666504
    3. 'in' → logprob: -4.281540870666504
    4. '(' → logprob: -6.656540870666504
    5. ' (' → logprob: -9.031540870666504
    6. ' ' → logprob: -9.281540870666504
    7. ']' → logprob: -10.281540870666504
    8. ' ]' → logprob: -11.656540870666504
    9. ' Super' → logprob: -12.406540870666504
    10. ')' → logprob: -12.406540870666504

Token 120: ' Super' (ID: 8220)
  Prédit: 'Super'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Super' → logprob: -0.033653419464826584
    2. ' Super' → logprob: -3.408653497695923
    3. ' ' → logprob: -13.158653259277344
    4. '(S' → logprob: -13.408653259277344
    5. 'Su' → logprob: -13.783653259277344
    6. 'Sup' → logprob: -14.408653259277344
    7. 'Superview' → logprob: -14.533653259277344
    8. 'Superclass' → logprob: -14.658653259277344
    9. '	S' → logprob: -15.158653259277344
    10. ' range' → logprob: -15.408653259277344

Token 121: 'Vector' (ID: 7580)
  Prédit: 'Vector'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Vector' → logprob: -5.676981345459353e-06
    2. 'vector' → logprob: -12.375005722045898
    3. ' Vector' → logprob: -14.250005722045898
    4. '_vector' → logprob: -15.250005722045898
    5. '_Vector' → logprob: -15.750005722045898
    6. 'ector' → logprob: -16.2500057220459
    7. ' vector' → logprob: -16.3750057220459
    8. '	Vector' → logprob: -16.7500057220459
    9. 'Vec' → logprob: -16.8750057220459
    10. 'Vect' → logprob: -17.0000057220459

Token 122: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0030176378786563873
    2. '()]' → logprob: -5.878017425537109
    3. ')]' → logprob: -8.50301742553711
    4. ']
' → logprob: -12.37801742553711
    5. ' ]' → logprob: -13.25301742553711
    6. ']()' → logprob: -13.25301742553711
    7. '`]' → logprob: -14.25301742553711
    8. ')' → logprob: -14.25301742553711
    9. '(' → logprob: -15.37801742553711
    10. '])' → logprob: -15.62801742553711

Token 123: 'if' (ID: 366)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.655846893787384
    2. '(' → logprob: -1.6558468341827393
    3. '<|end|>' → logprob: -1.7808468341827393
    4. '
' → logprob: -2.5308468341827393
    5. '(
' → logprob: -4.280847072601318
    6. ')' → logprob: -5.280847072601318
    7. '```' → logprob: -5.280847072601318
    8. '\' → logprob: -5.655847072601318
    9. '[' → logprob: -6.030847072601318
    10. '()' → logprob: -6.030847072601318

Token 124: ' ' (ID: 220)
  Prédit: ' __'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.00672566844150424
    2. '__' → logprob: -5.006725788116455
    3. ' ' → logprob: -12.381725311279297
    4. '_' → logprob: -12.381725311279297
    5. ' _' → logprob: -14.256725311279297
    6. '___' → logprob: -14.506725311279297
    7. ' ___' → logprob: -15.131725311279297
    8. ' ' → logprob: -15.631725311279297
    9. '_name' → logprob: -15.631725311279297
    10. '/__' → logprob: -16.506725311279297

Token 125: '1' (ID: 16)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.47408756613731384
    2. ' __' → logprob: -0.9740875959396362
    3. '_name' → logprob: -12.849087715148926
    4. '_' → logprob: -12.849087715148926
    5. '___' → logprob: -13.474087715148926
    6. ' ' → logprob: -13.599087715148926
    7. ' ' → logprob: -13.724087715148926
    8. ''' → logprob: -14.349087715148926
    9. 'name' → logprob: -14.974087715148926
    10. '____' → logprob: -15.599087715148926

Token 126: '+' (ID: 10)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.6959146857261658
    2. ' __' → logprob: -1.3209147453308105
    3. '__' → logprob: -1.8209147453308105
    4. '_' → logprob: -3.3209147453308105
    5. '==' → logprob: -4.0709147453308105
    6. ' _' → logprob: -4.1959147453308105
    7. ' ' → logprob: -6.0709147453308105
    8. '0' → logprob: -7.3209147453308105
    9. '_main' → logprob: -7.8209147453308105
    10. '=' → logprob: -8.070914268493652

Token 127: '1' (ID: 16)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.5730571746826172
    2. ' __' → logprob: -1.0730571746826172
    3. '1' → logprob: -2.448057174682617
    4. ' ' → logprob: -5.698057174682617
    5. '_' → logprob: -6.448057174682617
    6. '2' → logprob: -6.448057174682617
    7. '0' → logprob: -7.823057174682617
    8. '___' → logprob: -8.323057174682617
    9. ' "__' → logprob: -8.823057174682617
    10. ' _' → logprob: -9.323057174682617

Token 128: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.25202488899230957
    2. '==' → logprob: -1.5020248889923096
    3. '=' → logprob: -10.00202465057373
    4. ' ' → logprob: -10.12702465057373
    5. ' =' → logprob: -12.87702465057373
    6. ' ' → logprob: -13.62702465057373
    7. ' =="' → logprob: -14.25202465057373
    8. ' ==
' → logprob: -14.50202465057373
    9. '()==' → logprob: -14.50202465057373
    10. '__' → logprob: -14.50202465057373

Token 129: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0004921489744447172
    2. ' ' → logprob: -7.625492095947266
    3. '   ' → logprob: -13.125492095947266
    4. '```' → logprob: -14.125492095947266
    5. '  ' → logprob: -15.375492095947266
    6. '__' → logprob: -15.375492095947266
    7. '<|end|>' → logprob: -15.500492095947266
    8. '
' → logprob: -15.625492095947266
    9. '    ' → logprob: -16.375492095947266
    10. '3' → logprob: -16.562992095947266

Token 130: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.3596853831550106e-05
    2. ' ' → logprob: -9.875053405761719
    3. '   ' → logprob: -14.375053405761719
    4. '__' → logprob: -15.375053405761719
    5. '"' → logprob: -15.500053405761719
    6. '```' → logprob: -15.500053405761719
    7. '
' → logprob: -15.625053405761719
    8. '=' → logprob: -15.750053405761719
    9. '  ' → logprob: -16.75005340576172
    10. '0' → logprob: -17.00005340576172

Token 131: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002813194179907441
    2. ':
' → logprob: -5.877813339233398
    3. ' :' → logprob: -12.877813339233398
    4. '():' → logprob: -13.377813339233398
    5. ':**' → logprob: -13.627813339233398
    6. ':

' → logprob: -13.877813339233398
    7. ':def' → logprob: -14.252813339233398
    8. '):' → logprob: -15.002813339233398
    9. ' :
' → logprob: -15.127813339233398
    10. '():
' → logprob: -15.627813339233398

Token 132: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.082400381565094
    2. ' MA' → logprob: -2.582400321960449
    3. '    
' → logprob: -6.832400321960449
    4. '<|end|>' → logprob: -6.832400321960449
    5. ' Ma' → logprob: -8.33240032196045
    6. ' ' → logprob: -8.45740032196045
    7. 'MA' → logprob: -9.08240032196045
    8. '   ' → logprob: -9.33240032196045
    9. ' 
' → logprob: -9.45740032196045
    10. ' def' → logprob: -9.45740032196045

Token 133: ' MA' (ID: 12615)
  Prédit: ' MA'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' MA' → logprob: -0.4789201617240906
    2. 'MA' (adapté à ' MA') → logprob: -0.9789201617240906
    3. '   ' → logprob: -5.353919982910156
    4. ' ' → logprob: -10.478919982910156
    5. ' ' → logprob: -10.978919982910156
    6. '    ' → logprob: -11.228919982910156
    7. 'def' → logprob: -11.478919982910156
    8. '  ' → logprob: -11.978919982910156
    9. '	' → logprob: -11.978919982910156
    10. '    
' → logprob: -12.228919982910156

Token 134: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -7.107425062713446e-06
    2. 'I' → logprob: -12.125006675720215
    3. '(i' → logprob: -15.000006675720215
    4. ' i' → logprob: -15.250006675720215
    5. 'iñ' → logprob: -15.250006675720215
    6. 'N' → logprob: -15.375006675720215
    7. 'IN' → logprob: -15.875006675720215
    8. '_i' → logprob: -16.00000762939453
    9. 'і' → logprob: -16.25000762939453
    10. 'in' → logprob: -16.37500762939453

Token 135: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -1.9361264946837764e-07
    2. '<|end|>' → logprob: -16.5
    3. ' N' → logprob: -18.0
    4. '﻿' → logprob: -18.75
    5. 'Ｎ' → logprob: -19.0
    6. '‌' → logprob: -19.0
    7. '	N' → logprob: -19.625
    8. '```' → logprob: -19.875
    9. '​' → logprob: -20.0
    10. 'Ν' → logprob: -20.0625

Token 136: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00035929924342781305
    2. '(' → logprob: -8.000359535217285
    3. '()
' → logprob: -11.625359535217285
    4. '();' → logprob: -12.000359535217285
    5. ' ()' → logprob: -12.500359535217285
    6. '()`' → logprob: -13.750359535217285
    7. '()">' → logprob: -14.375359535217285
    8. '().' → logprob: -14.625359535217285
    9. '())' → logprob: -14.625359535217285
    10. '()

' → logprob: -14.625359535217285


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 134
Tokens correctement prédits (1ère position, stricte): 56
Tokens correctement prédits (1ère position, avec adaptation): 58
Tokens correctement prédits (top 10): 105
Précision stricte (1ère position): 41.79%
Précision adaptée (1ère position): 43.28%
Précision (top 10): 78.36%
================================================================================
