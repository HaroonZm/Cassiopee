================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:17:43
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

def funky_ctr(seq):
    d = {}
    for x in seq:
        d[x] = d.get(x, 0) + 1
    return d

def ctr_and(c1, c2):
    return {k: min(c1[k], c2[k]) for k in c1 if k in c2 and min(c1[k], c2[k]) > 0}

Z=lambda:sys.stdin.readline().rstrip('\n')
n = int(Z())
s = Z()

righty = funky_ctr(s)
lefty = {}

res = -float('inf')
for idx, ch in enumerate(s):
    lefty[ch] = lefty.get(ch, 0) + 1
    righty[ch] -= 1
    if righty[ch]==0:
        del righty[ch]
    shared = ctr_and(lefty, righty)
    res = res if res > len(shared) else len(shared)
print(res)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.035847846418619156
    2. '\n' → logprob: -4.0358476638793945
    3. 'import' → logprob: -4.7858476638793945
    4. '<|end|>' → logprob: -5.2858476638793945
    5. '\' → logprob: -7.0358476638793945
    6. '<|end|>' → logprob: -7.5358476638793945
    7. 'newline' → logprob: -7.9108476638793945
    8. ',' → logprob: -8.160847663879395
    9. '[' → logprob: -8.285847663879395
    10. '' → logprob: -8.285847663879395

Token 4: ' funky' (ID: 103816)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4074983596801758
    2. ' space' → logprob: -2.032498359680176
    3. ' main' → logprob: -3.032498359680176
    4. ' process' → logprob: -3.157498359680176
    5. ' read' → logprob: -3.907498359680176
    6. ' my' → logprob: -4.157498359680176
    7. ' calculate' → logprob: -4.157498359680176
    8. ' hello' → logprob: -4.532498359680176
    9. ' a' → logprob: -5.157498359680176
    10. '_' → logprob: -5.407498359680176

Token 5: '_ctr' (ID: 179213)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3173695504665375
    2. '_' → logprob: -1.3173695802688599
    3. ' (' → logprob: -6.94236946105957
    4. 'F' → logprob: -7.56736946105957
    5. '_function' → logprob: -7.56736946105957
    6. '_fun' → logprob: -7.81736946105957
    7. '_func' → logprob: -8.06736946105957
    8. 'f' → logprob: -8.06736946105957
    9. '```' → logprob: -8.19236946105957
    10. '_f' → logprob: -8.19236946105957

Token 6: '(seq' (ID: 78669)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.13150975108146667
    2. '):' → logprob: -2.631509780883789
    3. '():' → logprob: -3.256509780883789
    4. 'l' → logprob: -5.756509780883789
    5. ':' → logprob: -6.006509780883789
    6. 'f' → logprob: -6.756509780883789
    7. ')' → logprob: -6.881509780883789
    8. '_' → logprob: -7.506509780883789
    9. '(:' → logprob: -7.631509780883789
    10. '(':' → logprob: -8.006509780883789

Token 7: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04806135222315788
    2. ',' → logprob: -3.1730613708496094
    3. ')' → logprob: -5.673061370849609
    4. ':' → logprob: -6.798061370849609
    5. '[' → logprob: -8.42306137084961
    6. 'u' → logprob: -9.29806137084961
    7. 's' → logprob: -9.92306137084961
    8. ' ):' → logprob: -10.54806137084961
    9. ' ,' → logprob: -10.79806137084961
    10. '):
' → logprob: -10.92306137084961

Token 8: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.25568658113479614
    2. '   ' → logprob: -1.5056865215301514
    3. ':
' → logprob: -6.6306867599487305
    4. ' :' → logprob: -7.6306867599487305
    5. '```' → logprob: -7.7556867599487305
    6. '[' → logprob: -8.13068675994873
    7. '(' → logprob: -8.38068675994873
    8. ' ' → logprob: -9.25568675994873
    9. '_' → logprob: -9.38068675994873
    10. '_counter' → logprob: -9.63068675994873

Token 9: ' d' (ID: 272)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2970898151397705
    2. ' counter' → logprob: -2.2970898151397705
    3. 'counter' → logprob: -2.9220898151397705
    4. 'count' → logprob: -3.7970898151397705
    5. ' ctr' → logprob: -3.7970898151397705
    6. ' count' → logprob: -4.422089576721191
    7. ' result' → logprob: -4.672089576721191
    8. ' cnt' → logprob: -5.422089576721191
    9. 'result' → logprob: -5.422089576721191
    10. '    ' → logprob: -5.672089576721191

Token 10: ' =' (ID: 314)
  Prédit: 'ef'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ef' → logprob: -0.15179991722106934
    2. ' =' → logprob: -2.1517999172210693
    3. 'ict' → logprob: -4.276800155639648
    4. '=' → logprob: -4.776800155639648
    5. 'e' → logprob: -6.651800155639648
    6. ' ' → logprob: -8.151800155639648
    7. 'ictionary' → logprob: -9.026800155639648
    8. 'eft' → logprob: -9.026800155639648
    9. 'efs' → logprob: -9.901800155639648
    10. 'ct' → logprob: -10.276800155639648

Token 11: ' {}
' (ID: 11421)
  Prédit: ' {}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' {}' → logprob: -0.08929188549518585
    2. '{}' → logprob: -2.46429181098938
    3. ' defaultdict' → logprob: -8.3392915725708
    4. 'dict' → logprob: -10.2142915725708
    5. ' ' → logprob: -10.4642915725708
    6. ' {}\' → logprob: -11.3392915725708
    7. ' dict' → logprob: -11.4642915725708
    8. ' {' → logprob: -11.5892915725708
    9. ' {'' → logprob: -12.3392915725708
    10. 'default' → logprob: -13.0892915725708

Token 12: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7784379124641418
    2. 'for' → logprob: -0.7784379124641418
    3. ' ' → logprob: -3.153437852859497
    4. '   ' → logprob: -3.403437852859497
    5. ' 
' → logprob: -6.403438091278076
    6. '  ' → logprob: -7.403438091278076
    7. '    
' → logprob: -7.778438091278076
    8. 'counter' → logprob: -7.778438091278076
    9. 'count' → logprob: -8.028437614440918
    10. ' counter' → logprob: -8.153437614440918

Token 13: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.09826351702213287
    2. ' for' → logprob: -2.8482635021209717
    3. 'count' → logprob: -3.7232635021209717
    4. 'result' → logprob: -5.348263740539551
    5. 'counter' → logprob: -5.848263740539551
    6. 'c' → logprob: -6.348263740539551
    7. ' ' → logprob: -7.848263740539551
    8. 'cnt' → logprob: -8.09826374053955
    9. ' result' → logprob: -8.22326374053955
    10. '   ' → logprob: -8.22326374053955

Token 14: ' x' (ID: 1215)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -1.0164172649383545
    2. ' s' → logprob: -2.0164172649383545
    3. ' i' → logprob: -2.3914172649383545
    4. ' item' → logprob: -2.6414172649383545
    5. ' char' → logprob: -2.7664172649383545
    6. ' x' → logprob: -2.8914172649383545
    7. ' word' → logprob: -3.1414172649383545
    8. ' ' → logprob: -3.5164172649383545
    9. 'c' → logprob: -3.6414172649383545
    10. ' elem' → logprob: -3.7664172649383545

Token 15: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.010045873932540417
    2. 'in' → logprob: -4.635046005249023
    3. ' ' → logprob: -8.385046005249023
    4. '  ' → logprob: -11.135046005249023
    5. '   ' → logprob: -11.760046005249023
    6. ',' → logprob: -11.885046005249023
    7. '	in' → logprob: -11.885046005249023
    8. 'n' → logprob: -12.010046005249023
    9. 's' → logprob: -12.635046005249023
    10. 'import' → logprob: -13.135046005249023

Token 16: ' seq' (ID: 26775)
  Prédit: ' seq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' seq' → logprob: -0.42966651916503906
    2. 'seq' → logprob: -1.054666519165039
    3. '(seq' → logprob: -7.429666519165039
    4. ' ' → logprob: -8.179666519165039
    5. ' range' → logprob: -10.804666519165039
    6. ' sys' → logprob: -11.054666519165039
    7. ' sequence' → logprob: -11.054666519165039
    8. 'range' → logprob: -11.929666519165039
    9. '```' → logprob: -12.304666519165039
    10. '  ' → logprob: -12.304666519165039

Token 17: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0010274506639689207
    2. ' :' → logprob: -7.001027584075928
    3. '       ' → logprob: -9.62602710723877
    4. ':
' → logprob: -11.12602710723877
    5. '   ' → logprob: -11.25102710723877
    6. '):' → logprob: -11.37602710723877
    7. '    ' → logprob: -12.50102710723877
    8. ',' → logprob: -13.25102710723877
    9. ':**' → logprob: -14.12602710723877
    10. '>:' → logprob: -14.37602710723877

Token 18: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0014930804027244449
    2. 'd' → logprob: -7.251492977142334
    3. '    ' → logprob: -8.001493453979492
    4. ' if' → logprob: -8.751493453979492
    5. '   ' → logprob: -9.251493453979492
    6. ':' → logprob: -9.876493453979492
    7. '        ' → logprob: -10.251493453979492
    8. ' d' → logprob: -10.376493453979492
    9. '```' → logprob: -10.876493453979492
    10. 'if' → logprob: -11.001493453979492

Token 19: ' d' (ID: 272)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.44954076409339905
    2. '       ' → logprob: -1.5745407342910767
    3. '        ' → logprob: -2.574540853500366
    4. '    ' → logprob: -3.449540853500366
    5. 'if' → logprob: -3.699540853500366
    6. 'd' (adapté à ' d') → logprob: -4.324540615081787
    7. ' d' → logprob: -4.949540615081787
    8. '   ' → logprob: -7.074540615081787
    9. '           ' → logprob: -7.699540615081787
    10. ' ' → logprob: -8.074541091918945

Token 20: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.18996070325374603
    2. '[' → logprob: -2.1899607181549072
    3. '.setdefault' → logprob: -2.8149607181549072
    4. '.get' → logprob: -7.564960479736328
    5. ' [' → logprob: -8.814960479736328
    6. '.' → logprob: -8.814960479736328
    7. ' ' → logprob: -9.939960479736328
    8. '[i' → logprob: -10.064960479736328
    9. '[token' → logprob: -10.189960479736328
    10. '[get' → logprob: -10.564960479736328

Token 21: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00516971992328763
    2. ' ]' → logprob: -5.380169868469238
    3. ']=' → logprob: -8.380169868469238
    4. ' =' → logprob: -8.505169868469238
    5. ']+=' → logprob: -9.255169868469238
    6. '=' → logprob: -11.005169868469238
    7. ' +=' → logprob: -13.255169868469238
    8. ' ' → logprob: -13.880169868469238
    9. ')' → logprob: -14.380169868469238
    10. '`]' → logprob: -15.255169868469238

Token 22: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1636238545179367
    2. ' =' → logprob: -1.9136238098144531
    3. '+=' → logprob: -5.913623809814453
    4. ' +=' → logprob: -7.288623809814453
    5. ' ' → logprob: -13.413623809814453
    6. ']' → logprob: -13.538623809814453
    7. ']+=' → logprob: -13.663623809814453
    8. '=

' → logprob: -13.663623809814453
    9. '+' → logprob: -14.288623809814453
    10. '```' → logprob: -14.413623809814453

Token 23: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.282537043094635
    2. ' d' → logprob: -1.4075369834899902
    3. '1' → logprob: -7.15753698348999
    4. '0' → logprob: -7.78253698348999
    5. ' ' → logprob: -8.907537460327148
    6. '   ' → logprob: -10.657537460327148
    7. '	d' → logprob: -11.407537460327148
    8. '(d' → logprob: -11.782537460327148
    9. ' (' → logprob: -13.595037460327148
    10. ' ' → logprob: -13.657537460327148

Token 24: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -0.0003986144147347659
    2. '.' → logprob: -8.000398635864258
    3. 'get' → logprob: -9.875398635864258
    4. '.setdefault' → logprob: -12.125398635864258
    5. '[x' → logprob: -12.250398635864258
    6. ' .' → logprob: -13.875398635864258
    7. ' ' → logprob: -16.125398635864258
    8. 'x' → logprob: -16.375398635864258
    9. '|get' → logprob: -17.000398635864258
    10. '   ' → logprob: -17.000398635864258

Token 25: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.005930693820118904
    2. '(' → logprob: -5.1309309005737305
    3. ' (' → logprob: -13.63093090057373
    4. '(token' → logprob: -14.75593090057373
    5. '(
' → logprob: -15.13093090057373
    6. 'x' → logprob: -16.880929946899414
    7. ')' → logprob: -17.005929946899414
    8. ' ' → logprob: -17.255929946899414
    9. '<|end|>' → logprob: -17.380929946899414
    10. '('' → logprob: -18.130929946899414

Token 26: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.5776860184123507e-06
    2. ' ,' → logprob: -13.50000286102295
    3. '1' → logprob: -15.00000286102295
    4. ' ' → logprob: -15.37500286102295
    5. '0' → logprob: -15.62500286102295
    6. ')' → logprob: -15.75000286102295
    7. '<|end|>' → logprob: -16.500001907348633
    8. '‌,' → logprob: -17.250001907348633
    9. '```' → logprob: -17.625001907348633
    10. 'x' → logprob: -17.875001907348633

Token 27: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005642342148348689
    2. ' ' → logprob: -7.500564098358154
    3. '1' → logprob: -11.500564575195312
    4. ')' → logprob: -14.500564575195312
    5. '   ' → logprob: -15.375564575195312
    6. '  ' → logprob: -16.313064575195312
    7. '    ' → logprob: -16.938064575195312
    8. '```' → logprob: -17.125564575195312
    9. '+' → logprob: -17.438064575195312
    10. '۰' → logprob: -17.750564575195312

Token 28: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0009806475136429071
    2. ' ' → logprob: -7.125980854034424
    3. '-' → logprob: -9.000980377197266
    4. '1' → logprob: -10.125980377197266
    5. ' -' → logprob: -11.875980377197266
    6. '  ' → logprob: -12.500980377197266
    7. ')' → logprob: -14.375980377197266
    8. '```' → logprob: -15.000980377197266
    9. '   ' → logprob: -15.063480377197266
    10. '    ' → logprob: -15.375980377197266

Token 29: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008208265644498169
    2. ')+' → logprob: -7.375820636749268
    3. '+' → logprob: -8.750821113586426
    4. ' )' → logprob: -10.375821113586426
    5. ' +' → logprob: -12.375821113586426
    6. '+)' → logprob: -15.250821113586426
    7. '1' → logprob: -16.50082015991211
    8. '}' → logprob: -17.12582015991211
    9. ' plus' → logprob: -17.50082015991211
    10. ']' → logprob: -17.62582015991211

Token 30: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5759434103965759
    2. '+' → logprob: -0.8259434103965759
    3. ' plus' → logprob: -13.325942993164062
    4. ' +
' → logprob: -14.450942993164062
    5. '<|end|>' → logprob: -14.825942993164062
    6. '+
' → logprob: -15.075942993164062
    7. '1' → logprob: -15.325942993164062
    8. '()+' → logprob: -15.325942993164062
    9. ' ' → logprob: -15.700942993164062
    10. ' ' → logprob: -16.200942993164062

Token 31: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0013259568950161338
    2. ' ' → logprob: -6.626326084136963
    3. '   ' → logprob: -17.251325607299805
    4. '```' → logprob: -18.626325607299805
    5. '  ' → logprob: -19.126325607299805
    6. ' ' → logprob: -19.126325607299805
    7. '<|end|>' → logprob: -19.251325607299805
    8. '0' → logprob: -21.376325607299805
    9. '' → logprob: -21.751325607299805
    10. '    ' → logprob: -21.876325607299805

Token 32: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0206720617134124e-05
    2. ' ' → logprob: -11.50001049041748
    3. '   ' → logprob: -17.625009536743164
    4. '  ' → logprob: -19.500009536743164
    5. '```' → logprob: -19.875009536743164
    6. '`' → logprob: -21.125009536743164
    7. '' → logprob: -21.312509536743164
    8. '2' → logprob: -21.562509536743164
    9. 'a' → logprob: -22.187509536743164
    10. '...' → logprob: -22.250009536743164

Token 33: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05581032857298851
    2. '
' → logprob: -3.4308102130889893
    3. '<|end|>' → logprob: -4.805810451507568
    4. '    
' → logprob: -4.930810451507568
    5. '       ' → logprob: -5.555810451507568
    6. ' ' → logprob: -7.180810451507568
    7. ' 
' → logprob: -7.430810451507568
    8. 'return' → logprob: -8.30580997467041
    9. '\n' → logprob: -8.55580997467041
    10. '  
' → logprob: -9.05580997467041

Token 34: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015486016869544983
    2. '       ' → logprob: -4.265486240386963
    3. '    
' → logprob: -7.265486240386963
    4. ' ' → logprob: -8.765485763549805
    5. '    ' → logprob: -8.765485763549805
    6. 'return' → logprob: -9.515485763549805
    7. '        
' → logprob: -10.390485763549805
    8. '<|end|>' → logprob: -10.515485763549805
    9. '```' → logprob: -10.515485763549805
    10. '  ' → logprob: -10.765485763549805

Token 35: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.617814302444458
    2. '   ' → logprob: -0.867814302444458
    3. ' return' → logprob: -3.492814302444458
    4. ' ' → logprob: -4.867814064025879
    5. '  ' → logprob: -7.492814064025879
    6. '    ' → logprob: -7.492814064025879
    7. ':return' → logprob: -7.617814064025879
    8. '       ' → logprob: -7.867814064025879
    9. '    
' → logprob: -8.617814064025879
    10. '	return' → logprob: -8.617814064025879

Token 36: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.054916586726903915
    2. ' d' → logprob: -2.9299166202545166
    3. '{' → logprob: -11.429916381835938
    4. '[d' → logprob: -12.054916381835938
    5. 'max' → logprob: -12.429916381835938
    6. ' ' → logprob: -12.554916381835938
    7. 'list' → logprob: -12.804916381835938
    8. ' max' → logprob: -13.679916381835938
    9. '(d' → logprob: -13.679916381835938
    10. '[' → logprob: -14.304916381835938

Token 37: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 38: 'def' (ID: 1314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5705136656761169
    2. '<|end|>' → logprob: -1.4455137252807617
    3. '#' → logprob: -2.5705137252807617
    4. '[' → logprob: -3.3205137252807617
    5. '.' → logprob: -3.5705137252807617
    6. ')' → logprob: -4.695513725280762
    7. 'newline' → logprob: -5.070513725280762
    8. '\n' → logprob: -5.195513725280762
    9. 'n' → logprob: -5.320513725280762
    10. 'def' → logprob: -5.445513725280762

Token 39: ' ctr' (ID: 113563)
  Prédit: ' funky'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' funky' → logprob: -0.20541049540042877
    2. ' main' → logprob: -3.0804104804992676
    3. ' factorial' → logprob: -3.4554104804992676
    4. ' space' → logprob: -3.7054104804992676
    5. ' fun' → logprob: -3.9554104804992676
    6. ' funk' → logprob: -4.830410480499268
    7. ' counter' → logprob: -4.830410480499268
    8. ' ' → logprob: -5.455410480499268
    9. ' func' → logprob: -5.580410480499268
    10. ' unique' → logprob: -5.955410480499268

Token 40: '_and' (ID: 18645)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.025722801685333252
    2. '(seq' → logprob: -4.400722980499268
    3. 's' → logprob: -5.650722980499268
    4. '_' → logprob: -6.025722980499268
    5. '(sequence' → logprob: -6.650722980499268
    6. '(s' → logprob: -6.900722980499268
    7. '_func' → logprob: -7.650722980499268
    8. '_by' → logprob: -8.02572250366211
    9. '<|end|>' → logprob: -8.27572250366211
    10. '_items' → logprob: -8.65072250366211

Token 41: '(c' (ID: 2410)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.1271944046020508
    2. '_seq' → logprob: -1.2521944046020508
    3. '_sum' → logprob: -2.627194404602051
    4. '_f' → logprob: -2.877194404602051
    5. '_max' → logprob: -2.877194404602051
    6. '_len' → logprob: -3.502194404602051
    7. '_sort' → logprob: -3.877194404602051
    8. '_count' → logprob: -4.002194404602051
    9. '_func' → logprob: -4.127194404602051
    10. '_freq' → logprob: -4.127194404602051

Token 42: '1' (ID: 16)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tr' → logprob: -0.15526293218135834
    2. 't' → logprob: -2.1552629470825195
    3. 'ounter' → logprob: -3.9052629470825195
    4. 'ount' → logprob: -5.5302629470825195
    5. 'nt' → logprob: -7.4052629470825195
    6. 'TR' → logprob: -7.6552629470825195
    7. 'o' → logprob: -8.03026294708252
    8. 'ont' → logprob: -8.15526294708252
    9. 'on' → logprob: -8.28026294708252
    10. 'om' → logprob: -8.40526294708252

Token 43: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.28887757658958435
    2. '1' → logprob: -1.9138776063919067
    3. '):' → logprob: -2.788877487182617
    4. '_' → logprob: -4.413877487182617
    5. ')' → logprob: -4.913877487182617
    6. '_,' → logprob: -5.288877487182617
    7. ',c' → logprob: -5.413877487182617
    8. ',_' → logprob: -5.538877487182617
    9. ' ,' → logprob: -5.663877487182617
    10. ')_' → logprob: -7.288877487182617

Token 44: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.5759708881378174
    2. 'c' → logprob: -0.8259708881378174
    3. ' ' → logprob: -11.450970649719238
    4. '   ' → logprob: -12.200970649719238
    5. ')c' → logprob: -12.450970649719238
    6. 'ct' → logprob: -13.325970649719238
    7. ')' → logprob: -13.325970649719238
    8. '	c' → logprob: -13.950970649719238
    9. ',c' → logprob: -14.200970649719238
    10. '```' → logprob: -14.200970649719238

Token 45: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5266095995903015
    2. '2' → logprob: -1.2766096591949463
    3. '):' → logprob: -2.5266096591949463
    4. ')' → logprob: -4.151609420776367
    5. 'ounter' → logprob: -4.151609420776367
    6. '_' → logprob: -4.776609420776367
    7. ',' → logprob: -5.276609420776367
    8. 'tr' → logprob: -6.776609420776367
    9. 'ont' → logprob: -7.276609420776367
    10. '```' → logprob: -8.026609420776367

Token 46: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0022517223842442036
    2. ')' → logprob: -6.377251625061035
    3. ',' → logprob: -7.877251625061035
    4. ' ):' → logprob: -9.127251625061035
    5. '):
' → logprob: -10.377251625061035
    6. ':' → logprob: -11.252251625061035
    7. '   ' → logprob: -11.627251625061035
    8. ' ' → logprob: -13.127251625061035
    9. ''):' → logprob: -14.127251625061035
    10. '  ' → logprob: -14.627251625061035

Token 47: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8128219842910767
    2. '   ' → logprob: -1.4378219842910767
    3. '{' → logprob: -2.312821865081787
    4. '(' → logprob: -2.312821865081787
    5. ' {' → logprob: -2.812821865081787
    6. ' =' → logprob: -3.312821865081787
    7. ' (' → logprob: -5.062821865081787
    8. ' ' → logprob: -5.812821865081787
    9. '<|end|>' → logprob: -6.062821865081787
    10. '):' → logprob: -6.437821865081787

Token 48: ' return' (ID: 622)
  Prédit: ' {'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' {' → logprob: -0.01163928210735321
    2. '{' → logprob: -4.76163911819458
    3. ' {}' → logprob: -6.13663911819458
    4. '   ' → logprob: -8.136639595031738
    5. ' ' → logprob: -8.136639595031738
    6. ' {
' → logprob: -9.136639595031738
    7. ' return' → logprob: -10.136639595031738
    8. ' {(' → logprob: -10.386639595031738
    9. '{}' → logprob: -10.636639595031738
    10. ' result' → logprob: -11.636639595031738

Token 49: ' {' (ID: 354)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.22736434638500214
    2. ' {' → logprob: -1.6023643016815186
    3. '{k' → logprob: -6.727364540100098
    4. '{x' → logprob: -7.477364540100098
    5. '{i' → logprob: -9.477364540100098
    6. '{}' → logprob: -9.477364540100098
    7. ' {}' → logprob: -11.977364540100098
    8. ' ' → logprob: -12.352364540100098
    9. '{return' → logprob: -12.352364540100098
    10. '{id' → logprob: -12.477364540100098

Token 50: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0052858153358101845
    2. 'x' → logprob: -5.755285739898682
    3. 'key' → logprob: -6.380285739898682
    4. ' k' → logprob: -7.880285739898682
    5. ' key' → logprob: -11.50528621673584
    6. '   ' → logprob: -11.63028621673584
    7. 'i' → logprob: -12.75528621673584
    8. ' x' → logprob: -12.75528621673584
    9. 'kx' → logprob: -12.88028621673584
    10. ' ' → logprob: -13.13028621673584

Token 51: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06296416372060776
    2. ':c' → logprob: -3.0629642009735107
    3. ':k' → logprob: -4.687963962554932
    4. ':v' → logprob: -5.687963962554932
    5. ':d' → logprob: -7.062963962554932
    6. ' :' → logprob: -8.18796443939209
    7. ':x' → logprob: -8.31296443939209
    8. ':min' → logprob: -9.06296443939209
    9. ':max' → logprob: -9.68796443939209
    10. ':value' → logprob: -10.06296443939209

Token 52: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.08707277476787567
    2. ' min' → logprob: -3.0870728492736816
    3. 'c' → logprob: -3.3370728492736816
    4. ' c' → logprob: -6.587072849273682
    5. 'max' → logprob: -7.212072849273682
    6. ' max' → logprob: -10.462072372436523
    7. 'v' → logprob: -11.087072372436523
    8. '(min' → logprob: -11.337072372436523
    9. 'ctr' → logprob: -12.149572372436523
    10. '	min' → logprob: -12.462072372436523

Token 53: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.0010532920714467764
    2. '(' → logprob: -6.876053333282471
    3. ' (' → logprob: -11.876052856445312
    4. '(
' → logprob: -11.876052856445312
    5. '(d' → logprob: -12.626052856445312
    6. '(v' → logprob: -14.001052856445312
    7. 'c' → logprob: -14.126052856445312
    8. '(

' → logprob: -14.501052856445312
    9. '((' → logprob: -14.751052856445312
    10. '(ct' → logprob: -15.626052856445312

Token 54: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.282920129597187e-05
    2. '2' → logprob: -12.625012397766113
    3. '[c' → logprob: -12.875012397766113
    4. ' ' → logprob: -14.000012397766113
    5. '```' → logprob: -14.125012397766113
    6. ')' → logprob: -14.625012397766113
    7. 'c' → logprob: -14.875012397766113
    8. 'd' → logprob: -15.062512397766113
    9. '[k' → logprob: -15.062512397766113
    10. '.get' → logprob: -15.187512397766113

Token 55: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.5760727524757385
    2. '.get' → logprob: -0.8260727524757385
    3. '.' → logprob: -8.951072692871094
    4. '[key' → logprob: -13.576072692871094
    5. ' .' → logprob: -14.576072692871094
    6. 'get' → logprob: -14.576072692871094
    7. '[c' → logprob: -14.701072692871094
    8. '.setdefault' → logprob: -15.576072692871094
    9. '[get' → logprob: -15.826072692871094
    10. '[' → logprob: -15.826072692871094

Token 56: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.00019185843120794743
    2. ' ],' → logprob: -9.000191688537598
    3. ']' → logprob: -9.625191688537598
    4. ',' → logprob: -13.500191688537598
    5. '],
' → logprob: -15.125191688537598
    6. '],

' → logprob: -15.250191688537598
    7. '},' → logprob: -16.000192642211914
    8. '),' → logprob: -16.375192642211914
    9. ''],' → logprob: -16.500192642211914
    10. ' ' → logprob: -16.875192642211914

Token 57: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.08894665539264679
    2. 'c' → logprob: -2.463946580886841
    3. '   ' → logprob: -12.463946342468262
    4. '    ' → logprob: -13.463946342468262
    5. ' ' → logprob: -13.463946342468262
    6. ')c' → logprob: -15.588946342468262
    7. '  ' → logprob: -16.463947296142578
    8. '	c' → logprob: -16.838947296142578
    9. ' ' → logprob: -17.338947296142578
    10. ' ctr' → logprob: -17.526447296142578

Token 58: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.980854959692806e-05
    2. 'k' → logprob: -10.250069618225098
    3. '[k' → logprob: -10.375069618225098
    4. '1' → logprob: -13.875069618225098
    5. '.get' → logprob: -14.000069618225098
    6. 's' → logprob: -14.625069618225098
    7. 'c' → logprob: -16.000070571899414
    8. ' k' → logprob: -16.000070571899414
    9. ' ' → logprob: -16.500070571899414
    10. 'get' → logprob: -16.500070571899414

Token 59: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -3.404745439183898e-05
    2. '.get' → logprob: -10.75003433227539
    3. '])' → logprob: -12.12503433227539
    4. 'k' → logprob: -12.50003433227539
    5. ']' → logprob: -13.50003433227539
    6. '[key' → logprob: -13.75003433227539
    7. '[' → logprob: -14.75003433227539
    8. '][' → logprob: -15.62503433227539
    9. '-k' → logprob: -16.62503433227539
    10. '[
' → logprob: -16.87503433227539

Token 60: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.00032354547875002027
    2. ')' → logprob: -8.625323295593262
    3. ']' → logprob: -10.125323295593262
    4. '])
' → logprob: -10.250323295593262
    5. ' ])' → logprob: -10.375323295593262
    6. '})' → logprob: -10.500323295593262
    7. ' })' → logprob: -12.875323295593262
    8. ' ' → logprob: -13.250323295593262
    9. ' )' → logprob: -13.625323295593262
    10. '],' → logprob: -13.875323295593262

Token 61: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.008733822964131832
    2. 'for' → logprob: -4.758733749389648
    3. '   ' → logprob: -9.758733749389648
    4. ' ' → logprob: -10.008733749389648
    5. '}' → logprob: -12.383733749389648
    6. '    ' → logprob: -12.508733749389648
    7. '	for' → logprob: -12.633733749389648
    8. ' if' → logprob: -13.383733749389648
    9. '  ' → logprob: -13.508733749389648
    10. '       ' → logprob: -13.883733749389648

Token 62: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.06997522711753845
    2. 'k' → logprob: -2.6949751377105713
    3. ' ' → logprob: -10.944974899291992
    4. '<|end|>' → logprob: -11.444974899291992
    5. '	k' → logprob: -11.944974899291992
    6. ' ' → logprob: -12.944974899291992
    7. '<|end|>' → logprob: -14.694974899291992
    8. ' in' → logprob: -15.069974899291992
    9. ' к' → logprob: -15.319974899291992
    10. '```' → logprob: -15.569974899291992

Token 63: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04913341999053955
    2. 'in' → logprob: -3.04913330078125
    3. '<|end|>' → logprob: -8.04913330078125
    4. ' ' → logprob: -8.54913330078125
    5. '  ' → logprob: -11.04913330078125
    6. '	in' → logprob: -12.17413330078125
    7. '<|end|>' → logprob: -13.04913330078125
    8. 'import' → logprob: -13.42413330078125
    9. 'k' → logprob: -13.67413330078125
    10. ' k' → logprob: -13.79913330078125

Token 64: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.18563884496688843
    2. 'c' → logprob: -1.9356389045715332
    3. ' set' → logprob: -3.810638904571533
    4. 'set' → logprob: -6.185638904571533
    5. ' (' → logprob: -7.935638904571533
    6. ' ' → logprob: -7.935638904571533
    7. '(c' → logprob: -9.935638427734375
    8. '(set' → logprob: -10.310638427734375
    9. ' k' → logprob: -10.435638427734375
    10. 'k' → logprob: -10.560638427734375

Token 65: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.474122554063797
    2. '2' → logprob: -0.9741225242614746
    3. '```' → logprob: -10.474123001098633
    4. 'c' → logprob: -12.974123001098633
    5. 'on' → logprob: -13.349123001098633
    6. '   ' → logprob: -13.474123001098633
    7. ' ' → logprob: -13.474123001098633
    8. 's' → logprob: -13.599123001098633
    9. 'r' → logprob: -13.849123001098633
    10. ')' → logprob: -13.974123001098633

Token 66: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.00016825977945700288
    2. 'if' → logprob: -9.125167846679688
    3. ' ' → logprob: -10.250167846679688
    4. '}' → logprob: -12.125167846679688
    5. ' }' → logprob: -12.125167846679688
    6. ' in' → logprob: -12.125167846679688
    7. '	if' → logprob: -12.625167846679688
    8. '<|end|>' → logprob: -13.125167846679688
    9. '.keys' → logprob: -14.125167846679688
    10. '<|end|>' → logprob: -15.375167846679688

Token 67: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.11282464116811752
    2. 'k' → logprob: -2.2378246784210205
    3. ' ' → logprob: -13.362824440002441
    4. '	k' → logprob: -14.987824440002441
    5. ' к' → logprob: -15.237824440002441
    6. '   ' → logprob: -16.737825393676758
    7. ' ' → logprob: -16.862825393676758
    8. '```' → logprob: -16.987825393676758
    9. '    ' → logprob: -17.925325393676758
    10. '  ' → logprob: -18.050325393676758

Token 68: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.002118973294273019
    2. 'in' → logprob: -6.252119064331055
    3. ' ' → logprob: -8.627119064331055
    4. '<|end|>' → logprob: -11.752119064331055
    5. ' i' → logprob: -13.627119064331055
    6. 'n' → logprob: -14.877119064331055
    7. ')' → logprob: -15.002119064331055
    8. ' n' → logprob: -15.252119064331055
    9. '<|end|>' → logprob: -15.627119064331055
    10. 'In' → logprob: -15.627119064331055

Token 69: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.07888989895582199
    2. 'c' → logprob: -2.578889846801758
    3. ' ' → logprob: -15.703889846801758
    4. ')c' → logprob: -17.453889846801758
    5. '   ' → logprob: -17.578889846801758
    6. '	c' → logprob: -18.328889846801758
    7. ' ' → logprob: -18.828889846801758
    8. '  ' → logprob: -19.203889846801758
    9. 'ct' → logprob: -19.203889846801758
    10. '    ' → logprob: -19.328889846801758

Token 70: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. '1' → logprob: -20.75
    3. '۲' → logprob: -21.375
    4. '```' → logprob: -22.0625
    5. 's' → logprob: -22.25
    6. 'r' → logprob: -22.5
    7. 'f' → logprob: -22.75
    8. '２' → logprob: -22.75
    9. '२' → logprob: -22.8125
    10. '   ' → logprob: -22.875

Token 71: ' and' (ID: 326)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '}' → logprob: -2.1008713702030946e-06
    2. ' }' → logprob: -13.500001907348633
    3. '}
' → logprob: -14.625001907348633
    4. '   ' → logprob: -15.750001907348633
    5. '}

' → logprob: -18.250001907348633
    6. '       ' → logprob: -19.875001907348633
    7. ')' → logprob: -20.125001907348633
    8. ',' → logprob: -20.250001907348633
    9. '```' → logprob: -20.250001907348633
    10. '}}' → logprob: -20.750001907348633

Token 72: ' min' (ID: 1349)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.25295183062553406
    2. 'c' → logprob: -1.5029518604278564
    3. ' min' → logprob: -7.877951622009277
    4. ' k' → logprob: -8.627951622009277
    5. ' d' → logprob: -8.752951622009277
    6. 'd' → logprob: -9.627951622009277
    7. '   ' → logprob: -9.752951622009277
    8. 'k' → logprob: -10.002951622009277
    9. 'min' → logprob: -10.002951622009277
    10. ' ' → logprob: -10.002951622009277

Token 73: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.2519453763961792
    2. '(' → logprob: -1.5019453763961792
    3. '(
' → logprob: -11.626945495605469
    4. ' (' → logprob: -12.626945495605469
    5. '(d' → logprob: -13.376945495605469
    6. '(C' → logprob: -14.501945495605469
    7. '(

' → logprob: -14.876945495605469
    8. '(ct' → logprob: -15.126945495605469
    9. '(count' → logprob: -15.376945495605469
    10. '(k' → logprob: -15.501945495605469

Token 74: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2200749754119897e-06
    2. '2' → logprob: -13.125001907348633
    3. ')' → logprob: -16.812501907348633
    4. 'and' → logprob: -17.062501907348633
    5. '```' → logprob: -18.750001907348633
    6. 's' → logprob: -18.937501907348633
    7. '१' → logprob: -19.500001907348633
    8. '   ' → logprob: -19.500001907348633
    9. '১' → logprob: -19.562501907348633
    10. '' → logprob: -19.812501907348633

Token 75: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -6.20603168499656e-05
    2. '[c' → logprob: -10.500061988830566
    3. '[' → logprob: -10.625061988830566
    4. '[key' → logprob: -12.375061988830566
    5. '<|end|>' → logprob: -12.750061988830566
    6. ' [' → logprob: -13.750061988830566
    7. '[n' → logprob: -14.500061988830566
    8. 'k' → logprob: -15.625061988830566
    9. '[
' → logprob: -15.750061988830566
    10. ',k' → logprob: -15.750061988830566

Token 76: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2945495843887329
    2. ',k' → logprob: -1.419549584388733
    3. ' ,' → logprob: -4.544549465179443
    4. ',c' → logprob: -6.544549465179443
    5. '[k' → logprob: -7.044549465179443
    6. '],' → logprob: -8.669549942016602
    7. ',n' → logprob: -9.294549942016602
    8. ',key' → logprob: -11.044549942016602
    9. ',q' → logprob: -11.544549942016602
    10. ',x' → logprob: -11.544549942016602

Token 77: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.014173625037074089
    2. 'c' → logprob: -4.26417350769043
    3. ' ' → logprob: -11.76417350769043
    4. '<|end|>' → logprob: -13.88917350769043
    5. ' ' → logprob: -14.01417350769043
    6. ')c' → logprob: -15.38917350769043
    7. ' k' → logprob: -16.76417350769043
    8. ')' → logprob: -16.88917350769043
    9. 's' → logprob: -17.07667350769043
    10. '	c' → logprob: -17.70167350769043

Token 78: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0010331686353310943
    2. '[k' → logprob: -7.001033306121826
    3. 'k' → logprob: -9.126032829284668
    4. ')' → logprob: -13.001032829284668
    5. ']' → logprob: -13.126032829284668
    6. '```' → logprob: -13.376032829284668
    7. ' k' → logprob: -13.501032829284668
    8. ' ' → logprob: -13.876032829284668
    9. '   ' → logprob: -14.126032829284668
    10. '[key' → logprob: -14.376032829284668

Token 79: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -4.008129963040119e-06
    2. 'k' → logprob: -13.125003814697266
    3. '[key' → logprob: -13.625003814697266
    4. '{k' → logprob: -15.375003814697266
    5. ']' → logprob: -16.000003814697266
    6. ')' → logprob: -16.000003814697266
    7. ' [' → logprob: -16.125003814697266
    8. '][' → logprob: -16.625003814697266
    9. '[' → logprob: -16.875003814697266
    10. '[x' → logprob: -17.500003814697266

Token 80: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0020192861557006836
    2. ')>' → logprob: -6.37701940536499
    3. '})' → logprob: -8.877018928527832
    4. '])' → logprob: -9.502018928527832
    5. ' )' → logprob: -9.752018928527832
    6. '>)' → logprob: -11.752018928527832
    7. '`)' → logprob: -11.752018928527832
    8. '>' → logprob: -12.502018928527832
    9. ' })' → logprob: -12.502018928527832
    10. '   ' → logprob: -13.002018928527832

Token 81: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.2522844672203064
    2. '>' → logprob: -1.5022845268249512
    3. ')' → logprob: -8.877284049987793
    4. ' ' → logprob: -9.127284049987793
    5. '}' → logprob: -10.002284049987793
    6. '<|end|>' → logprob: -10.752284049987793
    7. '   ' → logprob: -11.502284049987793
    8. ')>' → logprob: -12.377284049987793
    9. '1' → logprob: -12.502284049987793
    10. ' ' → logprob: -12.627284049987793

Token 82: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.012519894167780876
    2. ' ' → logprob: -4.387519836425781
    3. '1' → logprob: -11.637519836425781
    4. ' ' → logprob: -14.012519836425781
    5. '```' → logprob: -15.387519836425781
    6. '   ' → logprob: -15.637519836425781
    7. '>' → logprob: -16.45001983642578
    8. '  ' → logprob: -17.13751983642578
    9. '<|end|>' → logprob: -17.51251983642578
    10. '2' → logprob: -17.51251983642578

Token 83: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00014084660506341606
    2. ' ' → logprob: -8.875141143798828
    3. '1' → logprob: -13.875141143798828
    4. '۰' → logprob: -17.625141143798828
    5. '```' → logprob: -18.312641143798828
    6. ' ' → logprob: -18.437641143798828
    7. '<|end|>' → logprob: -18.437641143798828
    8. '   ' → logprob: -18.687641143798828
    9. '>' → logprob: -18.812641143798828
    10. '=' → logprob: -19.062641143798828

Token 84: '}

' (ID: 943)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -6.749814019713085e-06
    2. ' }' → logprob: -12.000006675720215
    3. '}
' → logprob: -14.500006675720215
    4. '   ' → logprob: -16.75000762939453
    5. ',' → logprob: -17.62500762939453
    6. '}

' → logprob: -19.37500762939453
    7. '},' → logprob: -19.50000762939453
    8. ' ' → logprob: -19.75000762939453
    9. ')' → logprob: -20.00000762939453
    10. '       ' → logprob: -20.00000762939453

Token 85: 'Z' (ID: 57)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.10390137881040573
    2. '
' → logprob: -2.9789013862609863
    3. '<|end|>' → logprob: -3.2289013862609863
    4. '

' → logprob: -4.978901386260986
    5. '#' → logprob: -7.978901386260986
    6. '<|end|>' → logprob: -8.353900909423828
    7. '_' → logprob: -8.728900909423828
    8. '\' → logprob: -8.978900909423828
    9. '```' → logprob: -9.228900909423828
    10. ' def' → logprob: -9.478900909423828

Token 86: '=lambda' (ID: 64865)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7894517779350281
    2. ' =' → logprob: -1.0394518375396729
    3. 'Z' → logprob: -2.414451837539673
    4. '[' → logprob: -3.914451837539673
    5. '   ' → logprob: -4.164451599121094
    6. 'a' → logprob: -4.414451599121094
    7. '_' → logprob: -4.789451599121094
    8. 'def' → logprob: -4.789451599121094
    9. 'e' → logprob: -5.164451599121094
    10. ')' → logprob: -5.164451599121094

Token 87: ':' (ID: 25)
  Prédit: ' lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -1.5486211776733398
    2. ' s' → logprob: -1.7986211776733398
    3. ' x' → logprob: -2.04862117767334
    4. 'x' → logprob: -2.04862117767334
    5. ' f' → logprob: -2.42362117767334
    6. 'lambda' → logprob: -2.54862117767334
    7. 'f' → logprob: -2.67362117767334
    8. 's' → logprob: -3.04862117767334
    9. ' ' → logprob: -4.17362117767334
    10. ' seq' → logprob: -4.54862117767334

Token 88: 'sys' (ID: 17324)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.032392460852861404
    2. '[]' → logprob: -3.9073925018310547
    3. '{' → logprob: -5.657392501831055
    4. ' {}' → logprob: -6.032392501831055
    5. 'set' → logprob: -6.532392501831055
    6. 'dict' → logprob: -7.032392501831055
    7. ' []' → logprob: -7.407392501831055
    8. 'default' → logprob: -7.532392501831055
    9. '0' → logprob: -7.782392501831055
    10. ' defaultdict' → logprob: -7.907392501831055

Token 89: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.061633288860321045
    2. '.exit' → logprob: -3.436633348464966
    3. '.modules' → logprob: -5.186633110046387
    4. '.version' → logprob: -5.311633110046387
    5. '.argv' → logprob: -5.311633110046387
    6. '.stdin' → logprob: -5.311633110046387
    7. '.stdout' → logprob: -5.561633110046387
    8. ' .' → logprob: -7.436633110046387
    9. '.max' → logprob: -7.686633110046387
    10. '.stderr' → logprob: -7.811633110046387

Token 90: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.3799836337566376
    2. '.' → logprob: -1.50498366355896
    3. '.read' → logprob: -2.37998366355896
    4. 'read' → logprob: -7.254983425140381
    5. '.Read' → logprob: -8.129983901977539
    6. '.readlines' → logprob: -8.254983901977539
    7. '```' → logprob: -10.129983901977539
    8. '.get' → logprob: -10.254983901977539
    9. '.write' → logprob: -10.379983901977539
    10. '().' → logprob: -10.379983901977539

Token 91: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.18195143342018127
    2. '()' → logprob: -1.9319514036178589
    3. '(
' → logprob: -4.056951522827148
    4. '
' → logprob: -6.681951522827148
    5. '()
' → logprob: -7.056951522827148
    6. 'def' → logprob: -8.306951522827148
    7. '#' → logprob: -8.306951522827148
    8. '(

' → logprob: -8.306951522827148
    9. '.' → logprob: -8.681951522827148
    10. '<|end|>' → logprob: -8.806951522827148

Token 92: 'rstrip' (ID: 180429)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.0040793512016534805
    2. 'rstrip' → logprob: -5.504079341888428
    3. ' strip' → logprob: -14.129079818725586
    4. '_strip' → logprob: -16.504079818725586
    5. 'split' → logprob: -17.504079818725586
    6. 'str' → logprob: -18.754079818725586
    7. 'read' → logprob: -19.004079818725586
    8. '-strip' → logprob: -19.004079818725586
    9. 'decode' → logprob: -19.629079818725586
    10. '(strip' → logprob: -19.629079818725586

Token 93: '('\' (ID: 24345)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1795872449874878
    2. '()' → logprob: -2.0545873641967773
    3. '(
' → logprob: -4.429587364196777
    4. '
' → logprob: -4.429587364196777
    5. '<|end|>' → logprob: -5.679587364196777
    6. '()
' → logprob: -5.929587364196777
    7. '[' → logprob: -6.804587364196777
    8. 'newline' → logprob: -6.929587364196777
    9. '#' → logprob: -7.054587364196777
    10. '\n' → logprob: -7.304587364196777

Token 94: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -4.723352049040841e-06
    2. '\n' → logprob: -12.375004768371582
    3. 'r' → logprob: -15.250004768371582
    4. 'x' → logprob: -16.500003814697266
    5. ')' → logprob: -17.125003814697266
    6. 'newline' → logprob: -17.125003814697266
    7. '012' → logprob: -18.250003814697266
    8. ' n' → logprob: -18.375003814697266
    9. 't' → logprob: -18.625003814697266
    10. 'ndef' → logprob: -18.750003814697266

Token 95: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.026711849495768547
    2. ')' → logprob: -3.901711940765381
    3. '")' → logprob: -5.151711940765381
    4. ''' → logprob: -8.401711463928223
    5. '')"' → logprob: -9.901711463928223
    6. '"' → logprob: -10.026711463928223
    7. '')
' → logprob: -10.401711463928223
    8. ''))' → logprob: -12.776711463928223
    9. '');' → logprob: -13.526711463928223
    10. ''),' → logprob: -13.651711463928223

Token 96: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.35836318135261536
    2. 'for' → logprob: -2.358363151550293
    3. 'a' → logprob: -2.983363151550293
    4. 's' → logprob: -3.608363151550293
    5. 'q' → logprob: -3.608363151550293
    6. 'def' → logprob: -3.858363151550293
    7. 'while' → logprob: -4.108363151550293
    8. 'x' → logprob: -4.733363151550293
    9. 'Q' → logprob: -4.858363151550293
    10. 'N' → logprob: -4.858363151550293

Token 97: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.028455976396799088
    2. '=' → logprob: -3.903455972671509
    3. ' ' → logprob: -4.903456211090088
    4. ',' → logprob: -8.65345573425293
    5. ' =
' → logprob: -8.65345573425293
    6. ' ,' → logprob: -9.40345573425293
    7. '=int' → logprob: -11.27845573425293
    8. 'space' → logprob: -13.02845573425293
    9. '  ' → logprob: -13.02845573425293
    10. ')' → logprob: -13.27845573425293

Token 98: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.16030526161193848
    2. ' int' → logprob: -1.9103052616119385
    3. 'Z' → logprob: -10.03530502319336
    4. ' Z' → logprob: -10.28530502319336
    5. ' ' → logprob: -13.53530502319336
    6. '=int' → logprob: -14.28530502319336
    7. '(int' → logprob: -14.91030502319336
    8. '<int' → logprob: -15.41030502319336
    9. '10' → logprob: -16.03530502319336
    10. '  ' → logprob: -16.16030502319336

Token 99: '(Z' (ID: 55117)
  Prédit: '(Z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Z' → logprob: -0.252076119184494
    2. '(' → logprob: -1.5020761489868164
    3. '('' → logprob: -9.502076148986816
    4. '(input' → logprob: -10.127076148986816
    5. '()' → logprob: -10.877076148986816
    6. '(
' → logprob: -12.752076148986816
    7. '(sys' → logprob: -12.752076148986816
    8. '("' → logprob: -13.252076148986816
    9. '(z' → logprob: -13.502076148986816
    10. '(`' → logprob: -14.252076148986816

Token 100: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.12697136402130127
    2. '()' → logprob: -2.1269712448120117
    3. ')' → logprob: -10.751971244812012
    4. '(' → logprob: -11.376971244812012
    5. '()
' → logprob: -12.751971244812012
    6. ' ())' → logprob: -13.126971244812012
    7. '()))' → logprob: -13.251971244812012
    8. '())
' → logprob: -13.626971244812012
    9. '();)' → logprob: -14.126971244812012
    10. '().' → logprob: -14.126971244812012

Token 101: 's' (ID: 82)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.26091691851615906
    2. 'c' → logprob: -2.1359169483184814
    3. 's' → logprob: -3.0109169483184814
    4. 'l' → logprob: -3.8859169483184814
    5. 'A' → logprob: -4.385916709899902
    6. 'm' → logprob: -5.135916709899902
    7. 'arr' → logprob: -5.260916709899902
    8. 'lst' → logprob: -5.385916709899902
    9. 'seq' → logprob: -6.010916709899902
    10. 'd' → logprob: -6.010916709899902

Token 102: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.015103775076568127
    2. '=' → logprob: -4.265103816986084
    3. ' ' → logprob: -7.390103816986084
    4. 'eq' → logprob: -8.390103340148926
    5. 'e' → logprob: -10.765103340148926
    6. '1' → logprob: -10.890103340148926
    7. 's' → logprob: -11.890103340148926
    8. '_' → logprob: -12.015103340148926
    9. '=input' → logprob: -12.015103340148926
    10. ' =[' → logprob: -12.265103340148926

Token 103: ' Z' (ID: 1489)
  Prédit: 'Z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Z' → logprob: -0.006807856727391481
    2. ' Z' → logprob: -5.006807804107666
    3. 'list' → logprob: -10.256808280944824
    4. '[' → logprob: -10.381808280944824
    5. '[]' → logprob: -11.131808280944824
    6. 'input' → logprob: -12.381808280944824
    7. ' list' → logprob: -13.381808280944824
    8. 'str' → logprob: -13.631808280944824
    9. '	Z' → logprob: -14.131808280944824
    10. ' ' → logprob: -14.506808280944824

Token 104: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00021438424300868064
    2. '(' → logprob: -8.500214576721191
    3. '()
' → logprob: -12.125214576721191
    4. '().' → logprob: -12.625214576721191
    5. ' ()' → logprob: -14.125214576721191
    6. '())' → logprob: -14.875214576721191
    7. ')' → logprob: -15.375214576721191
    8. '()

' → logprob: -15.375214576721191
    9. '();' → logprob: -15.375214576721191
    10. '()]' → logprob: -16.125213623046875

Token 105: 'right' (ID: 2460)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.36400434374809265
    2. 'd' → logprob: -3.114004373550415
    3. 'ctr' → logprob: -3.114004373550415
    4. 't' → logprob: -3.239004373550415
    5. 'counter' → logprob: -3.489004373550415
    6. 'from' → logprob: -3.739004373550415
    7. 'a' → logprob: -3.864004373550415
    8. 'ct' → logprob: -4.239004135131836
    9. 'cnt' → logprob: -4.489004135131836
    10. 'counts' → logprob: -4.614004135131836

Token 106: 'y' (ID: 88)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.24719685316085815
    2. ' =' → logprob: -1.622196912765503
    3. '_counts' → logprob: -5.122196674346924
    4. '_' → logprob: -5.622196674346924
    5. '_count' → logprob: -6.122196674346924
    6. '_ctr' → logprob: -6.122196674346924
    7. '_cnt' → logprob: -6.497196674346924
    8. '_counter' → logprob: -6.747196674346924
    9. '_freq' → logprob: -6.872196674346924
    10. 's' → logprob: -7.247196674346924

Token 107: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.15293431282043457
    2. '_ctr' → logprob: -2.9029343128204346
    3. '=' → logprob: -3.4029343128204346
    4. '_cnt' → logprob: -4.5279340744018555
    5. '_counts' → logprob: -4.5279340744018555
    6. '_counter' → logprob: -4.9029340744018555
    7. 's' → logprob: -5.4029340744018555
    8. '_count' → logprob: -5.6529340744018555
    9. 'Ctr' → logprob: -5.6529340744018555
    10. '_' → logprob: -5.9029340744018555

Token 108: ' funky' (ID: 103816)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.1282462328672409
    2. ' funky' → logprob: -3.128246307373047
    3. 'funk' → logprob: -3.503246307373047
    4. '{' → logprob: -3.878246307373047
    5. ' {}' → logprob: -3.878246307373047
    6. 'fun' → logprob: -6.628246307373047
    7. '[]' → logprob: -8.003246307373047
    8. '{}
' → logprob: -8.003246307373047
    9. ' {' → logprob: -8.003246307373047
    10. '[' → logprob: -8.253246307373047

Token 109: '_ctr' (ID: 179213)
  Prédit: '_ctr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ctr' → logprob: -8.2994620242971e-06
    2. '_ct' → logprob: -12.000008583068848
    3. 'ctr' → logprob: -13.625008583068848
    4. '_ctrl' → logprob: -14.500008583068848
    5. '_' → logprob: -15.000008583068848
    6. '_counter' → logprob: -17.87500762939453
    7. '_ctl' → logprob: -18.00000762939453
    8. '_ctor' → logprob: -18.50000762939453
    9. 'Ctr' → logprob: -18.87500762939453
    10. '_cnt' → logprob: -18.87500762939453

Token 110: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.00031377444975078106
    2. '(' → logprob: -8.125313758850098
    3. 's' → logprob: -12.125313758850098
    4. '<|end|>' → logprob: -12.250313758850098
    5. '(n' → logprob: -13.375313758850098
    6. '('' → logprob: -13.375313758850098
    7. '(ss' → logprob: -13.500313758850098
    8. ' (' → logprob: -13.750313758850098
    9. '(str' → logprob: -15.250313758850098
    10. '((' → logprob: -15.500313758850098

Token 111: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.598092684522271e-05
    2. '[' → logprob: -11.375056266784668
    3. '(' → logprob: -11.500056266784668
    4. ')
' → logprob: -11.500056266784668
    5. 's' → logprob: -11.875056266784668
    6. ' )' → logprob: -11.875056266784668
    7. '(s' → logprob: -13.000056266784668
    8. '())' → logprob: -13.250056266784668
    9. ')s' → logprob: -13.875056266784668
    10. '[s' → logprob: -14.000056266784668

Token 112: 'left' (ID: 4530)
  Prédit: 'left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.0442466177046299
    2. 'ans' → logprob: -4.169246673583984
    3. 'result' → logprob: -4.669246673583984
    4. 'answer' → logprob: -4.919246673583984
    5. 'lef' → logprob: -6.794246673583984
    6. 'res' → logprob: -6.919246673583984
    7. 'le' → logprob: -7.044246673583984
    8. 'right' → logprob: -7.294246673583984
    9. 'count' → logprob: -7.544246673583984
    10. 'for' → logprob: -7.669246673583984

Token 113: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.004435816314071417
    2. '=' → logprob: -6.004436016082764
    3. ' =' → logprob: -6.254436016082764
    4. '_' → logprob: -10.879435539245605
    5. 'y's' → logprob: -12.754435539245605
    6. ' ' → logprob: -13.129435539245605
    7. 'x' → logprob: -13.379435539245605
    8. '_counter' → logprob: -13.379435539245605
    9. '_ctr' → logprob: -13.754435539245605
    10. 't' → logprob: -14.004435539245605

Token 114: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2258392721414566
    2. '=' → logprob: -1.6008392572402954
    3. '={}' → logprob: -7.850839138031006
    4. '={'' → logprob: -10.975839614868164
    5. ' ' → logprob: -11.600839614868164
    6. '={' → logprob: -12.600839614868164
    7. ' ={' → logprob: -13.350839614868164
    8. '={}
' → logprob: -13.975839614868164
    9. '={"' → logprob: -14.225839614868164
    10. '=[]' → logprob: -14.225839614868164

Token 115: ' {}

' (ID: 21724)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.00018863992590922862
    2. ' {}' → logprob: -8.875188827514648
    3. '{}
' → logprob: -11.000188827514648
    4. '{' → logprob: -11.375188827514648
    5. 'fun' → logprob: -12.125188827514648
    6. 'default' → logprob: -12.875188827514648
    7. '{}\' → logprob: -13.000188827514648
    8. '{})' → logprob: -13.125188827514648
    9. 'funk' → logprob: -13.375188827514648
    10. 'dict' → logprob: -14.000188827514648

Token 116: 'res' (ID: 430)
  Prédit: 'res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.8219797015190125
    2. 'ans' → logprob: -0.9469797015190125
    3. 'result' → logprob: -2.9469797611236572
    4. 'for' → logprob: -3.1969797611236572
    5. 'answer' → logprob: -3.1969797611236572
    6. 'count' → logprob: -4.321979522705078
    7. 'max' → logprob: -5.571979522705078
    8. 'ret' → logprob: -5.696979522705078
    9. 'cnt' → logprob: -5.821979522705078
    10. 'total' → logprob: -5.946979522705078

Token 117: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11284754425287247
    2. '=' → logprob: -2.2378475666046143
    3. '=[]' → logprob: -11.487847328186035
    4. '={}' → logprob: -12.237847328186035
    5. ' ' → logprob: -12.862847328186035
    6. ',' → logprob: -12.862847328186035
    7. 's' → logprob: -12.862847328186035
    8. '=int' → logprob: -14.112847328186035
    9. '=""' → logprob: -14.987847328186035
    10. '=''' → logprob: -15.362847328186035

Token 118: ' -' (ID: 533)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.37312963604927063
    2. '[]' → logprob: -1.7481296062469482
    3. '{}' → logprob: -2.4981296062469482
    4. '""' → logprob: -3.4981296062469482
    5. 'set' → logprob: -4.373129844665527
    6. '''' → logprob: -5.498129844665527
    7. ' ' → logprob: -5.623129844665527
    8. '"' → logprob: -6.998129844665527
    9. ' []' → logprob: -6.998129844665527
    10. '[' → logprob: -7.248129844665527

Token 119: 'float' (ID: 7829)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.020453589037060738
    2. 'float' → logprob: -4.395453453063965
    3. '10' → logprob: -5.145453453063965
    4. '100' → logprob: -6.895453453063965
    5. '999' → logprob: -7.520453453063965
    6. 'int' → logprob: -9.270453453063965
    7. 'n' → logprob: -9.270453453063965
    8. 'inf' → logprob: -9.645453453063965
    9. '2' → logprob: -10.145453453063965
    10. '123' → logprob: -10.270453453063965

Token 120: '('' (ID: 706)
  Prédit: ''in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''in' → logprob: -0.07676508277654648
    2. ''' → logprob: -2.7017650604248047
    3. '('' → logprob: -6.076765060424805
    4. '"' → logprob: -6.701765060424805
    5. ''ins' → logprob: -7.576765060424805
    6. ''a' → logprob: -8.076765060424805
    7. ''inc' → logprob: -8.201765060424805
    8. ''information' → logprob: -8.326765060424805
    9. ''t' → logprob: -8.326765060424805
    10. ''op' → logprob: -8.576765060424805

Token 121: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.001544737839139998
    2. ''' → logprob: -6.626544952392578
    3. ''in' → logprob: -8.751544952392578
    4. 'Inf' → logprob: -11.001544952392578
    5. ''s' → logprob: -11.251544952392578
    6. 'info' → logprob: -11.751544952392578
    7. '')' → logprob: -12.376544952392578
    8. 'INF' → logprob: -12.501544952392578
    9. '('' → logprob: -13.001544952392578
    10. '"' → logprob: -13.251544952392578

Token 122: '')
' (ID: 2515)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.012800746597349644
    2. ')
' → logprob: -4.387800693511963
    3. '
' → logprob: -9.012801170349121
    4. 'for' → logprob: -9.137801170349121
    5. ' )' → logprob: -10.387801170349121
    6. ',' → logprob: -11.762801170349121
    7. ')

' → logprob: -12.137801170349121
    8. '')' → logprob: -12.887801170349121
    9. '1' → logprob: -13.137801170349121
    10. ' )
' → logprob: -13.262801170349121

Token 123: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.002032611286267638
    2. ' for' → logprob: -7.25203275680542
    3. 'i' → logprob: -7.37703275680542
    4. 'l' → logprob: -7.62703275680542
    5. 'ans' → logprob: -9.627032279968262
    6. 'length' → logprob: -10.752032279968262
    7. 'r' → logprob: -10.877032279968262
    8. 'pos' → logprob: -10.877032279968262
    9. 'result' → logprob: -11.127032279968262
    10. 'max' → logprob: -11.127032279968262

Token 124: ' idx' (ID: 14016)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.011580943129956722
    2. ' c' → logprob: -5.136580944061279
    3. 'i' → logprob: -5.511580944061279
    4. ' _' → logprob: -7.636580944061279
    5. ' x' → logprob: -7.761580944061279
    6. 'c' → logprob: -8.386580467224121
    7. ' ' → logprob: -8.761580467224121
    8. '_' → logprob: -9.011580467224121
    9. ' ch' → logprob: -10.136580467224121
    10. '_i' → logprob: -10.386580467224121

Token 125: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04879764840006828
    2. 'in' → logprob: -3.798797607421875
    3. ' ' → logprob: -4.173797607421875
    4. ',' → logprob: -4.673797607421875
    5. ' ,' → logprob: -7.673797607421875
    6. '  ' → logprob: -11.548797607421875
    7. '_' → logprob: -12.798797607421875
    8. '	in' → logprob: -12.798797607421875
    9. 's' → logprob: -12.923797607421875
    10. 'In' → logprob: -13.298797607421875

Token 126: ' ch' (ID: 549)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.5762863159179688
    2. ' c' → logprob: -1.5762863159179688
    3. 'ch' → logprob: -2.2012863159179688
    4. 'x' → logprob: -2.5762863159179688
    5. ' ch' → logprob: -3.8262863159179688
    6. ' x' → logprob: -4.326286315917969
    7. 'char' → logprob: -5.326286315917969
    8. ' char' → logprob: -6.076286315917969
    9. 'v' → logprob: -6.576286315917969
    10. ' v' → logprob: -8.451286315917969

Token 127: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07932066917419434
    2. 'in' → logprob: -2.5793206691741943
    3. ',' → logprob: -7.954320907592773
    4. 's' → logprob: -10.329320907592773
    5. ' ' → logprob: -10.579320907592773
    6. '```' → logprob: -12.204320907592773
    7. '  ' → logprob: -12.829320907592773
    8. ')' → logprob: -13.329320907592773
    9. '	in' → logprob: -13.454320907592773
    10. ' ,' → logprob: -13.579320907592773

Token 128: ' enumerate' (ID: 29671)
  Prédit: ' enumerate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' enumerate' → logprob: -0.00671584764495492
    2. 'enumer' → logprob: -5.006715774536133
    3. ' enumer' → logprob: -15.131715774536133
    4. ' zip' → logprob: -16.506715774536133
    5. 's' → logprob: -17.006715774536133
    6. '```' → logprob: -17.631715774536133
    7. ' enumeration' → logprob: -17.631715774536133
    8. ' en' → logprob: -18.256715774536133
    9. '(en' → logprob: -18.256715774536133
    10. 'Enumer' → logprob: -18.506715774536133

Token 129: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -9.281485836254433e-05
    2. 's' → logprob: -9.875092506408691
    3. '(' → logprob: -10.375092506408691
    4. ' s' → logprob: -11.875092506408691
    5. ' (' → logprob: -12.750092506408691
    6. '(ss' → logprob: -16.875093460083008
    7. ' ' → logprob: -17.375093460083008
    8. ')' → logprob: -17.750093460083008
    9. '(n' → logprob: -18.125093460083008
    10. '(range' → logprob: -18.250093460083008

Token 130: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0030593499541282654
    2. '):
' → logprob: -5.878059387207031
    3. ':' → logprob: -8.378059387207031
    4. ' ):' → logprob: -11.128059387207031
    5. ')' → logprob: -11.878059387207031
    6. '):
' → logprob: -13.628059387207031
    7. '   ' → logprob: -14.628059387207031
    8. '):

' → logprob: -14.753059387207031
    9. ',' → logprob: -15.128059387207031
    10. '():' → logprob: -15.753059387207031

Token 131: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01725388690829277
    2. '    
' → logprob: -4.267253875732422
    3. '<|end|>' → logprob: -6.892253875732422
    4. ' 
' → logprob: -7.017253875732422
    5. '    ' → logprob: -8.142253875732422
    6. '```' → logprob: -8.392253875732422
    7. ' if' → logprob: -8.767253875732422
    8. '
' → logprob: -9.517253875732422
    9. ' ' → logprob: -9.517253875732422
    10. '     
' → logprob: -9.642253875732422

Token 132: ' left' (ID: 3561)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007165478076785803
    2. ' left' → logprob: -5.132165431976318
    3. ' if' → logprob: -7.882165431976318
    4. 'left' (adapté à ' left') → logprob: -8.132165908813477
    5. ' right' → logprob: -8.132165908813477
    6. '    
' → logprob: -9.007165908813477
    7. '
' → logprob: -9.507165908813477
    8. 'right' → logprob: -10.632165908813477
    9. 'if' → logprob: -11.382165908813477
    10. '```' → logprob: -11.382165908813477

Token 133: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -3.173704271830502e-06
    2. '[' → logprob: -14.12500286102295
    3. '=' → logprob: -14.87500286102295
    4. ' =' → logprob: -14.87500286102295
    5. '```' → logprob: -15.00000286102295
    6. 'i' → logprob: -15.37500286102295
    7. 'y's' → logprob: -16.500003814697266
    8. '[y' → logprob: -16.500003814697266
    9. 'count' → logprob: -16.687503814697266
    10. 'ly' → logprob: -16.750003814697266

Token 134: '[ch' (ID: 140164)
  Prédit: '[ch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[ch' → logprob: -4.179569077678025e-05
    2. '[' → logprob: -11.000041961669922
    3. '=' → logprob: -11.500041961669922
    4. ' [' → logprob: -11.750041961669922
    5. ' =' → logprob: -12.375041961669922
    6. '```' → logprob: -14.500041961669922
    7. '[c' → logprob: -15.125041961669922
    8. '.setdefault' → logprob: -15.125041961669922
    9. '][' → logprob: -15.250041961669922
    10. '
' → logprob: -15.375041961669922

Token 135: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0006632337463088334
    2. ']=' → logprob: -7.3756632804870605
    3. ' ]' → logprob: -10.375662803649902
    4. '=' → logprob: -12.250662803649902
    5. ' =' → logprob: -14.250662803649902
    6. ']+=' → logprob: -17.25066375732422
    7. ')' → logprob: -17.62566375732422
    8. '']' → logprob: -18.00066375732422
    9. '"]' → logprob: -18.37566375732422
    10. 'd' → logprob: -19.25066375732422

Token 136: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.688212614681106e-05
    2. ' =' → logprob: -11.000017166137695
    3. '=d' → logprob: -17.625017166137695
    4. '=f' → logprob: -17.750017166137695
    5. '=line' → logprob: -18.500017166137695
    6. '=len' → logprob: -18.875017166137695
    7. '=count' → logprob: -18.875017166137695
    8. '=l' → logprob: -19.000017166137695
    9. '=cut' → logprob: -19.000017166137695
    10. '=root' → logprob: -19.125017166137695

Token 137: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.018154975026845932
    2. ' left' → logprob: -4.018155097961426
    3. '	left' → logprob: -12.893155097961426
    4. '1' → logprob: -13.018155097961426
    5. '(left' → logprob: -15.768155097961426
    6. '0' → logprob: -16.51815414428711
    7. ' ' → logprob: -17.39315414428711
    8. '   ' → logprob: -17.39315414428711
    9. '.left' → logprob: -17.39315414428711
    10. ':left' → logprob: -17.64315414428711

Token 138: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -8.2994620242971e-06
    2. 'left' → logprob: -12.875008583068848
    3. '```' → logprob: -13.625008583068848
    4. '1' → logprob: -13.875008583068848
    5. 'right' → logprob: -14.812508583068848
    6. 'ych' → logprob: -15.250008583068848
    7. 'y's' → logprob: -15.562508583068848
    8. '+' → logprob: -15.562508583068848
    9. 'yleft' → logprob: -15.562508583068848
    10. '...' → logprob: -15.687508583068848

Token 139: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -4.47757811343763e-05
    2. 'get' → logprob: -10.125044822692871
    3. '.' → logprob: -12.500044822692871
    4. ' .' → logprob: -14.125044822692871
    5. '[ch' → logprob: -16.500043869018555
    6. '```' → logprob: -17.875043869018555
    7. '].' → logprob: -18.125043869018555
    8. '.setdefault' → logprob: -18.375043869018555
    9. ').' → logprob: -18.500043869018555
    10. '}.' → logprob: -19.750043869018555

Token 140: '(ch' (ID: 15574)
  Prédit: '(ch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ch' → logprob: -1.2664456789934775e-06
    2. 'ch' → logprob: -14.375000953674316
    3. '(' → logprob: -14.750000953674316
    4. '/ch' → logprob: -16.625001907348633
    5. '	ch' → logprob: -16.750001907348633
    6. '[ch' → logprob: -17.125001907348633
    7. ',ch' → logprob: -17.250001907348633
    8. '(
' → logprob: -17.750001907348633
    9. '(chr' → logprob: -18.375001907348633
    10. ' (' → logprob: -18.625001907348633

Token 141: ',' (ID: 11)
  Prédit: ',ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',ch' → logprob: -0.8047363758087158
    2. ',' → logprob: -1.1797363758087158
    3. 'ch' → logprob: -1.8047363758087158
    4. '[ch' → logprob: -2.554736375808716
    5. '(ch' → logprob: -6.554736137390137
    6. '   ' → logprob: -6.679736137390137
    7. '	ch' → logprob: -8.679736137390137
    8. ' ch' → logprob: -8.929736137390137
    9. '_ch' → logprob: -9.804736137390137
    10. '.ch' → logprob: -9.804736137390137

Token 142: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00014001218369230628
    2. ' ' → logprob: -8.875140190124512
    3. ')' → logprob: -15.875140190124512
    4. '   ' → logprob: -18.125139236450195
    5. '    ' → logprob: -21.000139236450195
    6. '  ' → logprob: -21.125139236450195
    7. ' 
' → logprob: -21.500139236450195
    8. '۰' → logprob: -21.625139236450195
    9. '<|end|>' → logprob: -22.250139236450195
    10. '```' → logprob: -22.250139236450195

Token 143: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.611323624383658e-05
    2. ' ' → logprob: -9.625065803527832
    3. '   ' → logprob: -17.25006675720215
    4. ')' → logprob: -17.62506675720215
    5. '1' → logprob: -19.87506675720215
    6. '```' → logprob: -19.87506675720215
    7. '  ' → logprob: -20.25006675720215
    8. '    ' → logprob: -20.62506675720215
    9. '۰' → logprob: -20.87506675720215
    10. '<|end|>' → logprob: -21.75006675720215

Token 144: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.153795766294934e-06
    2. ' )' → logprob: -12.750005722045898
    3. ')+' → logprob: -12.875005722045898
    4. '')' → logprob: -15.750005722045898
    5. ']' → logprob: -16.2500057220459
    6. '0' → logprob: -16.7500057220459
    7. '`)' → logprob: -16.8750057220459
    8. '```' → logprob: -17.0000057220459
    9. '+' → logprob: -17.2500057220459
    10. '()' → logprob: -17.7500057220459

Token 145: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.04864879697561264
    2. ' +' → logprob: -3.0486488342285156
    3. '1' → logprob: -10.923648834228516
    4. '()+' → logprob: -11.423648834228516
    5. ')' → logprob: -11.548648834228516
    6. '0' → logprob: -11.673648834228516
    7. ' plus' → logprob: -12.048648834228516
    8. ')+' → logprob: -12.548648834228516
    9. '()' → logprob: -13.423648834228516
    10. ' ' → logprob: -14.298648834228516

Token 146: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000553151941858232
    2. ' ' → logprob: -7.500553131103516
    3. '   ' → logprob: -16.875553131103516
    4. '```' → logprob: -17.625553131103516
    5. '  ' → logprob: -19.750553131103516
    6. '<|end|>' → logprob: -20.000553131103516
    7. '0' → logprob: -20.250553131103516
    8. ' ' → logprob: -21.750553131103516
    9. '2' → logprob: -22.125553131103516
    10. '    ' → logprob: -22.250553131103516

Token 147: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.75
    3. '   ' → logprob: -19.875
    4. '```' → logprob: -20.125
    5. '
' → logprob: -21.875
    6. '<|end|>' → logprob: -22.0
    7. '  ' → logprob: -22.5
    8. '-' → logprob: -23.25
    9. '0' → logprob: -23.625
    10. '{' → logprob: -24.125

Token 148: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003116872161626816
    2. '    
' → logprob: -6.253117084503174
    3. '
' → logprob: -6.878117084503174
    4. 'right' → logprob: -9.378116607666016
    5. '<|end|>' → logprob: -10.753116607666016
    6. ' right' → logprob: -11.378116607666016
    7. '```' → logprob: -11.378116607666016
    8. '  
' → logprob: -12.128116607666016
    9. '   
' → logprob: -12.378116607666016
    10. '[right' → logprob: -12.378116607666016

Token 149: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0024743510875850916
    2. 'right' → logprob: -6.627474308013916
    3. '    
' → logprob: -6.877474308013916
    4. ' right' → logprob: -10.002474784851074
    5. '
' → logprob: -10.877474784851074
    6. '    ' → logprob: -11.252474784851074
    7. '```' → logprob: -12.252474784851074
    8. 'current' → logprob: -12.627474784851074
    9. 'counter' → logprob: -13.002474784851074
    10. 'for' → logprob: -13.002474784851074

Token 150: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' (adapté à ' right') → logprob: -0.04705570265650749
    2. '   ' → logprob: -3.172055721282959
    3. ' right' → logprob: -5.547055721282959
    4. 'for' → logprob: -9.4220552444458
    5. '	right' → logprob: -10.9220552444458
    6. 'res' → logprob: -11.2970552444458
    7. ' ' → logprob: -12.0470552444458
    8. '  ' → logprob: -12.6720552444458
    9. 'Right' → logprob: -12.6720552444458
    10. '#' → logprob: -12.6720552444458

Token 151: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -3.054500666621607e-06
    2. '[ch' → logprob: -13.12500286102295
    3. '[' → logprob: -15.25000286102295
    4. 'ch' → logprob: -15.37500286102295
    5. '```' → logprob: -15.62500286102295
    6. 'ych' → logprob: -16.375003814697266
    7. 'y's' → logprob: -16.625003814697266
    8. 'x' → logprob: -17.375003814697266
    9. ']' → logprob: -17.375003814697266
    10. 'right' → logprob: -17.625003814697266

Token 152: '[ch' (ID: 140164)
  Prédit: '[ch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[ch' → logprob: -3.4121114822482923e-06
    2. '
' → logprob: -13.875003814697266
    3. '```' → logprob: -14.250003814697266
    4. '[c' → logprob: -14.750003814697266
    5. '[' → logprob: -14.875003814697266
    6. 'ch' → logprob: -15.250003814697266
    7. ' [' → logprob: -15.375003814697266
    8. '   ' → logprob: -16.750003814697266
    9. '[cur' → logprob: -16.750003814697266
    10. '[
' → logprob: -16.875003814697266

Token 153: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.028339408338069916
    2. '=' → logprob: -3.653339385986328
    3. ']=' → logprob: -6.653339385986328
    4. '-=' → logprob: -8.153339385986328
    5. ' =' → logprob: -9.153339385986328
    6. ')' → logprob: -9.153339385986328
    7. ' -=' → logprob: -9.403339385986328
    8. '-' → logprob: -10.028339385986328
    9. ']-' → logprob: -10.278339385986328
    10. ' ]' → logprob: -10.278339385986328

Token 154: ' -=' (ID: 12583)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.026678655296564102
    2. '-=' → logprob: -4.401678562164307
    3. ' =' → logprob: -4.651678562164307
    4. ' -=' → logprob: -5.401678562164307
    5. '-' → logprob: -11.276679039001465
    6. ' ' → logprob: -14.401679039001465
    7. '```' → logprob: -14.776679039001465
    8. ')' → logprob: -15.651679039001465
    9. '[' → logprob: -16.02667808532715
    10. '   ' → logprob: -16.02667808532715

Token 155: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.392202976712724e-06
    2. ' ' → logprob: -12.000006675720215
    3. '   ' → logprob: -16.2500057220459
    4. '```' → logprob: -20.0000057220459
    5. '  ' → logprob: -20.6250057220459
    6. '0' → logprob: -21.5000057220459
    7. '<|end|>' → logprob: -22.5625057220459
    8. '۱' → logprob: -22.8125057220459
    9. '    ' → logprob: -22.8750057220459
    10. '2' → logprob: -23.0625057220459

Token 156: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.500001907348633
    3. '   ' → logprob: -16.250001907348633
    4. '  ' → logprob: -20.500001907348633
    5. '```' → logprob: -20.875001907348633
    6. '
' → logprob: -22.125001907348633
    7. '0' → logprob: -22.250001907348633
    8. '    ' → logprob: -22.437501907348633
    9. '<|end|>' → logprob: -22.687501907348633
    10. '       ' → logprob: -22.937501907348633

Token 157: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.046429093927145004
    2. '    
' → logprob: -3.42142915725708
    3. '
' → logprob: -5.17142915725708
    4. '<|end|>' → logprob: -5.29642915725708
    5. ' if' → logprob: -6.92142915725708
    6. ' 
' → logprob: -7.67142915725708
    7. 'if' → logprob: -9.171428680419922
    8. '    ' → logprob: -9.421428680419922
    9. '  
' → logprob: -9.421428680419922
    10. '   
' → logprob: -9.546428680419922

Token 158: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003008488332852721
    2. ' if' → logprob: -6.6280083656311035
    3. '    
' → logprob: -7.5030083656311035
    4. 'if' → logprob: -8.128008842468262
    5. ' current' → logprob: -8.378008842468262
    6. 'current' → logprob: -8.628008842468262
    7. ' res' → logprob: -10.003008842468262
    8. 'm' → logprob: -10.378008842468262
    9. 'res' → logprob: -10.503008842468262
    10. 'curr' → logprob: -10.503008842468262

Token 159: ' if' (ID: 538)
  Prédit: 'common'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'common' → logprob: -0.47495636343955994
    2. 'curr' → logprob: -1.8499563932418823
    3. 'cur' → logprob: -2.0999562740325928
    4. 'current' → logprob: -3.3499562740325928
    5. 'if' (adapté à ' if') → logprob: -3.8499562740325928
    6. 'over' → logprob: -5.099956512451172
    7. 'inter' → logprob: -5.224956512451172
    8. ' common' → logprob: -5.349956512451172
    9. 'temp' → logprob: -5.474956512451172
    10. 'both' → logprob: -5.599956512451172

Token 160: ' right' (ID: 1849)
  Prédit: ' right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' right' → logprob: -0.230940580368042
    2. ' all' → logprob: -2.355940580368042
    3. 'right' → logprob: -3.355940580368042
    4. ' any' → logprob: -3.355940580368042
    5. ' ch' → logprob: -4.105940818786621
    6. ' s' → logprob: -4.855940818786621
    7. ' ' → logprob: -5.230940818786621
    8. ' not' → logprob: -5.730940818786621
    9. ' left' → logprob: -6.105940818786621
    10. ' len' → logprob: -6.355940818786621

Token 161: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0009630310814827681
    2. 'ight' → logprob: -7.12596321105957
    3. 'right' → logprob: -10.12596321105957
    4. 'ch' → logprob: -10.12596321105957
    5. '   ' → logprob: -10.75096321105957
    6. ' ' → logprob: -11.37596321105957
    7. '```' → logprob: -11.62596321105957
    8. 'ly' → logprob: -12.37596321105957
    9. 'y's' → logprob: -13.43846321105957
    10. 'igh' → logprob: -13.56346321105957

Token 162: '[ch' (ID: 140164)
  Prédit: '[ch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[ch' → logprob: -0.00869718473404646
    2. '.get' → logprob: -4.758697032928467
    3. 'get' → logprob: -9.633697509765625
    4. '.setdefault' → logprob: -12.258697509765625
    5. '```' → logprob: -12.758697509765625
    6. '[get' → logprob: -13.258697509765625
    7. '
' → logprob: -14.133697509765625
    8. ' [' → logprob: -14.133697509765625
    9. ' ' → logprob: -14.258697509765625
    10. '[' → logprob: -14.258697509765625

Token 163: ']==' (ID: 34128)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.4416816830635071
    2. '==' → logprob: -1.0666816234588623
    3. ' <=' → logprob: -5.066681861877441
    4. '<=' → logprob: -5.816681861877441
    5. ' >' → logprob: -6.441681861877441
    6. '>' → logprob: -6.691681861877441
    7. ' <' → logprob: -7.691681861877441
    8. '<' → logprob: -8.441681861877441
    9. ')' → logprob: -10.316681861877441
    10. ' ' → logprob: -10.566681861877441

Token 164: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9027791495318525e-05
    2. ' ' → logprob: -10.875019073486328
    3. '   ' → logprob: -19.750019073486328
    4. '  ' → logprob: -20.750019073486328
    5. '```' → logprob: -21.000019073486328
    6. '00' → logprob: -22.000019073486328
    7. '    ' → logprob: -22.000019073486328
    8. '۰' → logprob: -22.500019073486328
    9. '
' → logprob: -23.250019073486328
    10. '	' → logprob: -23.875019073486328

Token 165: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0004641544655896723
    2. ':
' → logprob: -7.875463962554932
    3. '       ' → logprob: -10.12546443939209
    4. '):' → logprob: -10.12546443939209
    5. '   ' → logprob: -13.00046443939209
    6. ' del' → logprob: -14.50046443939209
    7. '):
' → logprob: -14.87546443939209
    8. ',' → logprob: -15.00046443939209
    9. ' :' → logprob: -16.125463485717773
    10. ']:' → logprob: -16.750463485717773

Token 166: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0021209961269050837
    2. ' del' → logprob: -6.2521209716796875
    3. 'del' → logprob: -8.752120971679688
    4. '   ' → logprob: -10.377120971679688
    5. '	del' → logprob: -13.877120971679688
    6. ',' → logprob: -14.627120971679688
    7. '```' → logprob: -15.127120971679688
    8. ':' → logprob: -15.252120971679688
    9. '	   ' → logprob: -15.627120971679688
    10. '           ' → logprob: -15.752120971679688

Token 167: ' del' (ID: 1083)
  Prédit: 'del'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'del' (adapté à ' del') → logprob: -0.39450258016586304
    2. ' del' → logprob: -1.1445026397705078
    3. '   ' → logprob: -5.144502639770508
    4. '       ' → logprob: -6.519502639770508
    5. '	del' → logprob: -8.144502639770508
    6. 'right' → logprob: -12.519502639770508
    7. '           ' → logprob: -13.769502639770508
    8. ' right' → logprob: -14.019502639770508
    9. '_del' → logprob: -15.144502639770508
    10. '
' → logprob: -15.769502639770508

Token 168: ' right' (ID: 1849)
  Prédit: ' right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' right' → logprob: -0.25192990899086
    2. 'right' → logprob: -1.5019298791885376
    3. '(right' → logprob: -14.501930236816406
    4. '[right' → logprob: -15.876930236816406
    5. '	right' → logprob: -16.126930236816406
    6. ' ' → logprob: -16.376930236816406
    7. '   ' → logprob: -16.876930236816406
    8. 'Right' → logprob: -18.501930236816406
    9. ',right' → logprob: -20.126930236816406
    10. '_right' → logprob: -20.251930236816406

Token 169: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0016469687689095736
    2. 'right' → logprob: -6.501646995544434
    3. 'ight' → logprob: -8.876646995544434
    4. 'ght' → logprob: -13.251646995544434
    5. 'yt' → logprob: -13.751646995544434
    6. 't' → logprob: -14.626646995544434
    7. '```' → logprob: -15.251646995544434
    8. 'ty' → logprob: -15.376646995544434
    9. ' right' → logprob: -15.501646995544434
    10. 'yo' → logprob: -15.626646995544434

Token 170: '[ch' (ID: 140164)
  Prédit: '[ch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[ch' → logprob: -4.36574100604048e-06
    2. 'ch' → logprob: -13.125004768371582
    3. '[right' → logprob: -13.750004768371582
    4. '[' → logprob: -14.375004768371582
    5. 'right' → logprob: -15.125004768371582
    6. '```' → logprob: -16.125003814697266
    7. '[c' → logprob: -17.000003814697266
    8. ' [' → logprob: -17.250003814697266
    9. '   ' → logprob: -17.500003814697266
    10. 's' → logprob: -17.625003814697266

Token 171: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5794988870620728
    2. '   ' → logprob: -0.8294988870620728
    3. '}' → logprob: -6.329498767852783
    4. ']' → logprob: -6.454498767852783
    5. ')
' → logprob: -8.954499244689941
    6. '')' → logprob: -11.204499244689941
    7. '<|end|>' → logprob: -11.329499244689941
    8. '
' → logprob: -11.704499244689941
    9. ' ' → logprob: -11.954499244689941
    10. '    
' → logprob: -12.329499244689941

Token 172: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023387335240840912
    2. '    
' → logprob: -3.7733874320983887
    3. '
' → logprob: -9.52338695526123
    4. '    ' → logprob: -10.89838695526123
    5. '        
' → logprob: -11.14838695526123
    6. '  
' → logprob: -11.52338695526123
    7. '   
' → logprob: -11.64838695526123
    8. '<|end|>' → logprob: -12.14838695526123
    9. '    
    
' → logprob: -13.27338695526123
    10. '    
' → logprob: -13.39838695526123

Token 173: ' shared' (ID: 9599)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013891392387449741
    2. '    
' → logprob: -4.513891220092773
    3. ' current' → logprob: -7.263891220092773
    4. '
' → logprob: -7.763891220092773
    5. 'current' → logprob: -8.513891220092773
    6. ' res' → logprob: -8.763891220092773
    7. ' curr' → logprob: -8.763891220092773
    8. 'cur' → logprob: -9.138891220092773
    9. ' common' → logprob: -9.388891220092773
    10. ' cur' → logprob: -9.388891220092773

Token 174: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2815415561199188
    2. '=' → logprob: -1.4065415859222412
    3. '_counts' → logprob: -9.15654182434082
    4. 'tokens' → logprob: -9.53154182434082
    5. 'counts' → logprob: -9.65654182434082
    6. 's' → logprob: -10.28154182434082
    7. '_keys' → logprob: -10.65654182434082
    8. '_tokens' → logprob: -10.65654182434082
    9. 'counter' → logprob: -11.40654182434082
    10. 'count' → logprob: -11.78154182434082

Token 175: ' ctr' (ID: 113563)
  Prédit: 'ctr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ctr' → logprob: -0.06203434616327286
    2. ' ctr' → logprob: -2.8120343685150146
    3. '   ' → logprob: -10.437034606933594
    4. 'ct' → logprob: -11.187034606933594
    5. ' ' → logprob: -11.812034606933594
    6. '_ctr' → logprob: -12.437034606933594
    7. 'ctrl' → logprob: -12.562034606933594
    8. 'crt' → logprob: -13.062034606933594
    9. '  ' → logprob: -13.687034606933594
    10. 'counter' → logprob: -14.437034606933594

Token 176: '_and' (ID: 18645)
  Prédit: '_and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_and' → logprob: -1.9361264946837764e-07
    2. 'and' → logprob: -16.625
    3. '_AND' → logprob: -18.25
    4. '_' → logprob: -18.625
    5. '_or' → logprob: -19.25
    6. 'andr' → logprob: -19.375
    7. '_an' → logprob: -20.75
    8. ' and' → logprob: -21.0
    9. 'And' → logprob: -21.5
    10. '_for' → logprob: -21.875

Token 177: '(left' (ID: 32958)
  Prédit: '(left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(left' → logprob: -1.735893965815194e-05
    2. 'left' → logprob: -11.250017166137695
    3. '(' → logprob: -12.750017166137695
    4. '(right' → logprob: -14.125017166137695
    5. '(lhs' → logprob: -15.250017166137695
    6. ',left' → logprob: -15.750017166137695
    7. '[left' → logprob: -16.125017166137695
    8. ' left' → logprob: -16.250017166137695
    9. ' (' → logprob: -16.250017166137695
    10. '(
' → logprob: -17.000017166137695

Token 178: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.00018947436183225363
    2. 'right' → logprob: -8.625189781188965
    3. 'left' → logprob: -12.500189781188965
    4. 'ych' → logprob: -13.625189781188965
    5. '(right' → logprob: -14.125189781188965
    6. '   ' → logprob: -14.375189781188965
    7. 'ch' → logprob: -14.500189781188965
    8. ',' → logprob: -14.750189781188965
    9. '(y' → logprob: -15.125189781188965
    10. 'ight' → logprob: -15.500189781188965

Token 179: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04268054664134979
    2. ',right' → logprob: -3.292680501937866
    3. ' ,' → logprob: -5.417680740356445
    4. 'right' → logprob: -9.292680740356445
    5. ' right' → logprob: -9.417680740356445
    6. '(right' → logprob: -11.417680740356445
    7. '   ' → logprob: -12.667680740356445
    8. ',
' → logprob: -13.667680740356445
    9. '[right' → logprob: -14.542680740356445
    10. ',left' → logprob: -15.042680740356445

Token 180: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.020545274019241333
    2. ' right' → logprob: -3.895545244216919
    3. '   ' → logprob: -14.27054500579834
    4. '(right' → logprob: -14.27054500579834
    5. '[right' → logprob: -14.52054500579834
    6. '	right' → logprob: -14.52054500579834
    7. ',right' → logprob: -15.14554500579834
    8. ')' → logprob: -15.52054500579834
    9. ' ' → logprob: -15.89554500579834
    10. 'rights' → logprob: -16.145545959472656

Token 181: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -4.596781946020201e-05
    2. 'ight' → logprob: -10.125045776367188
    3. 'right' → logprob: -12.875045776367188
    4. ')' → logprob: -14.625045776367188
    5. '```' → logprob: -14.625045776367188
    6. ' y' → logprob: -15.437545776367188
    7. 'yo' → logprob: -15.500045776367188
    8. 'hy' → logprob: -15.937545776367188
    9. 'y's' → logprob: -15.937545776367188
    10. '   ' → logprob: -16.187545776367188

Token 182: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6931818127632141
    2. ')
' → logprob: -0.6931818127632141
    3. ')
' → logprob: -10.568181991577148
    4. ' )
' → logprob: -12.443181991577148
    5. '   ' → logprob: -12.943181991577148
    6. ' )' → logprob: -13.818181991577148
    7. ')

' → logprob: -13.943181991577148
    8. ')`
' → logprob: -14.943181991577148
    9. ' ' → logprob: -15.568181991577148
    10. ')`' → logprob: -16.94318199157715

Token 183: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005187032278627157
    2. 'max' → logprob: -6.130187034606934
    3. '<|end|>' → logprob: -7.130187034606934
    4. 'count' → logprob: -7.380187034606934
    5. '    
' → logprob: -8.005187034606934
    6. 'tokens' → logprob: -8.630187034606934
    7. 'if' → logprob: -8.880187034606934
    8. 'res' → logprob: -9.130187034606934
    9. ')' → logprob: -9.380187034606934
    10. 'cnt' → logprob: -9.505187034606934

Token 184: ' res' (ID: 694)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.0757064819335938
    2. 'res' (adapté à ' res') → logprob: -1.2007064819335938
    3. 'cur' → logprob: -1.9507064819335938
    4. 'current' → logprob: -2.4507064819335938
    5. 'curr' → logprob: -2.9507064819335938
    6. 'val' → logprob: -4.075706481933594
    7. 'total' → logprob: -4.075706481933594
    8. 'count' → logprob: -4.200706481933594
    9. 'max' → logprob: -4.575706481933594
    10. '   ' → logprob: -5.450706481933594

Token 185: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06209013983607292
    2. '=' → logprob: -2.8120901584625244
    3. '=max' → logprob: -9.062089920043945
    4. 'max' → logprob: -12.187089920043945
    5. ' max' → logprob: -14.687089920043945
    6. ' ' → logprob: -15.187089920043945
    7. ')' → logprob: -15.312089920043945
    8. '>' → logprob: -15.812089920043945
    9. ' =
' → logprob: -16.437089920043945
    10. ',' → logprob: -16.562089920043945

Token 186: ' res' (ID: 694)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.3132622241973877
    2. 'max' → logprob: -1.3132622241973877
    3. '(max' → logprob: -14.813261985778809
    4. '	max' → logprob: -16.563262939453125
    5. ' ' → logprob: -17.438262939453125
    6. '[max' → logprob: -17.438262939453125
    7. '   ' → logprob: -17.438262939453125
    8. '=max' → logprob: -17.563262939453125
    9. ',max' → logprob: -18.313262939453125
    10. '.max' → logprob: -18.938262939453125

Token 187: ' if' (ID: 538)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.1204046756029129
    2. ' if' → logprob: -2.8704047203063965
    3. ' max' → logprob: -3.2454047203063965
    4. 'if' → logprob: -4.3704047203063965
    5. '=' → logprob: -7.1204047203063965
    6. '=max' → logprob: -7.3704047203063965
    7. '>' → logprob: -7.4954047203063965
    8. '(max' → logprob: -7.7454047203063965
    9. ',' → logprob: -7.9954047203063965
    10. '+' → logprob: -8.245404243469238

Token 188: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.06227352097630501
    2. ' res' → logprob: -2.8122735023498535
    3. '   ' → logprob: -8.187273979187012
    4. '>' → logprob: -10.812273979187012
    5. ' ' → logprob: -12.812273979187012
    6. 'max' → logprob: -13.312273979187012
    7. '(res' → logprob: -14.312273979187012
    8. '  ' → logprob: -14.312273979187012
    9. '	res' → logprob: -14.937273979187012
    10. ' max' → logprob: -15.062273979187012

Token 189: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.1178426742553711
    2. '>=' → logprob: -2.242842674255371
    3. ' >' → logprob: -5.992842674255371
    4. ' >=' → logprob: -5.992842674255371
    5. '≥' → logprob: -12.492842674255371
    6. ' ' → logprob: -12.992842674255371
    7. '>
' → logprob: -13.492842674255371
    8. 'else' → logprob: -14.117842674255371
    9. '>end' → logprob: -14.117842674255371
    10. '[' → logprob: -14.367842674255371

Token 190: ' len' (ID: 4631)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.3392362594604492
    2. 'max' → logprob: -1.8392362594604492
    3. ' sum' → logprob: -2.714236259460449
    4. 'len' → logprob: -3.589236259460449
    5. ' max' → logprob: -3.839236259460449
    6. '(sum' → logprob: -4.839236259460449
    7. '(max' → logprob: -5.964236259460449
    8. ' len' → logprob: -6.839236259460449
    9. ' (' → logprob: -7.089236259460449
    10. '(len' → logprob: -7.964236259460449

Token 191: '(shared' (ID: 136228)
  Prédit: '(shared'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(shared' → logprob: -0.0005552975926548243
    2. 'shared' → logprob: -7.500555515289307
    3. '/shared' → logprob: -14.375555038452148
    4. ' shared' → logprob: -14.375555038452148
    5. '(' → logprob: -14.625555038452148
    6. '.shared' → logprob: -14.625555038452148
    7. ' (' → logprob: -16.12555503845215
    8. '_shared' → logprob: -16.25055503845215
    9. 'Shared' → logprob: -17.12555503845215
    10. 's' → logprob: -17.37555503845215

Token 192: ')' (ID: 8)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.06464982032775879
    2. 'else' → logprob: -2.814649820327759
    3. '()' → logprob: -6.81464958190918
    4. ')' → logprob: -7.31464958190918
    5. ' ' → logprob: -7.81464958190918
    6. '.keys' → logprob: -7.81464958190918
    7. '[]' → logprob: -10.81464958190918
    8. '*' → logprob: -11.06464958190918
    9. '   ' → logprob: -11.43964958190918
    10. '	else' → logprob: -11.43964958190918

Token 193: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.07892625778913498
    2. 'else' → logprob: -2.5789263248443604
    3. '+' → logprob: -10.953926086425781
    4. ' ' → logprob: -11.703926086425781
    5. 'len' → logprob: -11.953926086425781
    6. ' els' → logprob: -13.703926086425781
    7. '   ' → logprob: -14.578926086425781
    8. '	else' → logprob: -14.828926086425781
    9. ' 
' → logprob: -14.828926086425781
    10. '[]' → logprob: -15.328926086425781

Token 194: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.018150877207517624
    2. ' len' → logprob: -4.018150806427002
    3. '(len' → logprob: -15.01815128326416
    4. '   ' → logprob: -15.14315128326416
    5. '	len' → logprob: -15.39315128326416
    6. '[len' → logprob: -15.51815128326416
    7. '=len' → logprob: -17.518150329589844
    8. ' ' → logprob: -18.143150329589844
    9. '    ' → logprob: -18.518150329589844
    10. '  ' → logprob: -19.018150329589844

Token 195: '(shared' (ID: 136228)
  Prédit: '(shared'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(shared' → logprob: -3.523948907968588e-05
    2. '(' → logprob: -10.375035285949707
    3. 'shared' → logprob: -12.500035285949707
    4. '(
' → logprob: -16.62503433227539
    5. '(s' → logprob: -17.37503433227539
    6. ' shared' → logprob: -17.37503433227539
    7. '.shared' → logprob: -17.50003433227539
    8. '(sh' → logprob: -18.12503433227539
    9. ' (' → logprob: -18.37503433227539
    10. '/shared' → logprob: -18.50003433227539

Token 196: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00039254239527508616
    2. '<|end|>' → logprob: -8.37539291381836
    3. ')
' → logprob: -9.75039291381836
    4. '+' → logprob: -10.12539291381836
    5. '}' → logprob: -10.87539291381836
    6. ' )' → logprob: -11.75039291381836
    7. ')return' → logprob: -11.75039291381836
    8. '   ' → logprob: -12.25039291381836
    9. ')+' → logprob: -12.25039291381836
    10. '')' → logprob: -12.37539291381836

Token 197: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -7.3458322731312364e-06
    2. ' print' → logprob: -12.625007629394531
    3. '<|end|>' → logprob: -13.250007629394531
    4. ')' → logprob: -13.875007629394531
    5. 'for' → logprob: -14.375007629394531
    6. '#' → logprob: -15.875007629394531
    7. '#print' → logprob: -16.00000762939453
    8. '```' → logprob: -16.00000762939453
    9. 'return' → logprob: -16.25000762939453
    10. '   ' → logprob: -16.50000762939453

Token 198: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.005244902800768614
    2. '(' → logprob: -5.255244731903076
    3. 'res' → logprob: -11.630245208740234
    4. '(
' → logprob: -14.130245208740234
    5. '(max' → logprob: -14.380245208740234
    6. '(len' → logprob: -14.755245208740234
    7. '('' → logprob: -15.130245208740234
    8. '(re' → logprob: -16.005245208740234
    9. ' (' → logprob: -17.255245208740234
    10. '()' → logprob: -17.255245208740234

Token 199: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.8889261304575484e-06
    2. ' )' → logprob: -12.625003814697266
    3. ')
' → logprob: -15.500003814697266
    4. '))' → logprob: -15.500003814697266
    5. ')`' → logprob: -17.000003814697266
    6. '`)' → logprob: -17.125003814697266
    7. '')' → logprob: -17.125003814697266
    8. ')#' → logprob: -18.500003814697266
    9. '+' → logprob: -18.625003814697266
    10. '```' → logprob: -18.875003814697266


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 197
Tokens correctement prédits (1ère position, stricte): 101
Tokens correctement prédits (1ère position, avec adaptation): 105
Tokens correctement prédits (top 10): 169
Précision stricte (1ère position): 51.27%
Précision adaptée (1ère position): 53.30%
Précision (top 10): 85.79%
================================================================================
