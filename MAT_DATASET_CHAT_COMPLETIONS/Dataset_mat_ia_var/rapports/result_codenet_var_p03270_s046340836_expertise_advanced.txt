================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:09:58
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from functools import lru_cache
from operator import mul
from sys import stdin

K, N = map(int, stdin.readline().split())
MOD = 998244353
MAX = 2 * K + N + 10

# Pré-calcul des factorielles et inverses
fact = [1]
for i in range(1, MAX):
    fact.append(fact[-1] * i % MOD)

factinv = [1] * MAX
factinv[MAX-1] = pow(fact[MAX-1], MOD-2, MOD)
for i in range(MAX-2, -1, -1):
    factinv[i] = factinv[i+1] * (i+1) % MOD

def ncr(n, r):
    if r < 0 or r > n:
        return 0
    return fact[n] * factinv[r] % MOD * factinv[n - r] % MOD

def nhr(n, r):
    if n == 0 and r == 0:
        return 1
    return ncr(n + r - 1, r) if n + r - 1 >= 0 and r >= 0 else 0

pow2 = [1] * (MAX)
for i in range(1, MAX):
    pow2[i] = pow2[i-1] * 2 % MOD

for i in range(2, 2*K+1):
    if i % 2 == 0:
        np = i//2 - max(i-1-K, 0) - 1
        ans = 0
        nr = K - np*2 - 1
        for nq in range(np+1):
            coef = ncr(np, nq) * pow2[nq] % MOD
            t = coef * nhr(nr + nq, N - nq) % MOD
            t += coef * nhr(nr + nq, N - nq - 1) % MOD
            ans = (ans + t) % MOD
    else:
        np = i//2 - max(i-1-K, 0)
        ans = 0
        nr = K - np*2
        for nq in range(np+1):
            coef = ncr(np, nq) * pow2[nq] % MOD
            t = coef * nhr(nr + nq, N - nq) % MOD
            ans = (ans + t) % MOD
    print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' functools' (ID: 142636)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' l' (ID: 305)
  Prédit: 'partial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'partial' → logprob: -0.612085223197937
    2. 'wrap' → logprob: -0.862085223197937
    3. 'reduce' → logprob: -3.4870853424072266
    4. 'l' → logprob: -6.112085342407227
    5. ' wraps' → logprob: -6.487085342407227
    6. 'cached' → logprob: -7.612085342407227
    7. 'cache' → logprob: -8.112085342407227
    8. 'cmp' → logprob: -9.237085342407227
    9. '```' → logprob: -9.237085342407227
    10. ' partial' → logprob: -9.612085342407227

Token 4: 'ru' (ID: 1942)
  Prédit: 'ru'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ru' → logprob: -0.0010136376367881894
    2. 'r' → logprob: -7.62601375579834
    3. 'z' → logprob: -8.50101375579834
    4. 'partial' → logprob: -9.00101375579834
    5. 'wrap' → logprob: -9.62601375579834
    6. 'ruz' → logprob: -9.62601375579834
    7. 'reduce' → logprob: -10.37601375579834
    8. 'ambda' → logprob: -12.37601375579834
    9. '```' → logprob: -12.50101375579834
    10. 'a' → logprob: -12.50101375579834

Token 5: '_cache' (ID: 27045)
  Prédit: '_cache'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cache' → logprob: -0.003076348453760147
    2. 'cache' → logprob: -6.253076553344727
    3. '_c' → logprob: -7.128076553344727
    4. 'c' → logprob: -8.878076553344727
    5. '_' → logprob: -9.628076553344727
    6. '_ca' → logprob: -10.253076553344727
    7. 'a' → logprob: -10.628076553344727
    8. 'ca' → logprob: -10.628076553344727
    9. '_cached' → logprob: -11.753076553344727
    10. 'o' → logprob: -11.878076553344727

Token 6: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.006366224493831396
    2. '\(' → logprob: -5.75636625289917
    3. '```' → logprob: -6.88136625289917
    4. '@' → logprob: -7.25636625289917
    5. 'def' → logprob: -7.50636625289917
    6. '\' → logprob: -7.88136625289917
    7. '(
' → logprob: -7.88136625289917
    8. 'd' → logprob: -10.506365776062012
    9. '`' → logprob: -10.756365776062012
    10. '\n' → logprob: -11.131365776062012

Token 7: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03600044921040535
    2. '@' → logprob: -3.5360004901885986
    3. '\(' → logprob: -6.1610002517700195
    4. 'def' → logprob: -6.2860002517700195
    5. '```' → logprob: -7.1610002517700195
    6. '\' → logprob: -7.4110002517700195
    7. '(
' → logprob: -7.4110002517700195
    8. 'd' → logprob: -9.91100025177002
    9. ':' → logprob: -10.28600025177002
    10. '`' → logprob: -10.41100025177002

Token 8: ' operator' (ID: 11019)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.7436773777008057
    2. ' collections' → logprob: -1.1186773777008057
    3. ' typing' → logprob: -1.9936773777008057
    4. ' sys' → logprob: -3.8686773777008057
    5. ' os' → logprob: -4.118677139282227
    6. ' time' → logprob: -4.493677139282227
    7. 'collections' → logprob: -6.118677139282227
    8. ' fast' → logprob: -6.368677139282227
    9. ' ' → logprob: -6.493677139282227
    10. ' threading' → logprob: -6.618677139282227

Token 9: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.02717461809515953
    2. 'import' → logprob: -3.652174711227417
    3. ' ' → logprob: -7.527174472808838
    4. '.' → logprob: -8.277174949645996
    5. '_import' → logprob: -10.527174949645996
    6. '	import' → logprob: -10.902174949645996
    7. '.import' → logprob: -11.402174949645996
    8. '<|end|>' → logprob: -11.902174949645996
    9. ' .' → logprob: -12.152174949645996
    10. '_' → logprob: -13.652174949645996

Token 10: ' mul' (ID: 9975)
  Prédit: ' add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.6356808543205261
    2. ' item' → logprob: -1.010680913925171
    3. ' attr' → logprob: -3.510680913925171
    4. ' import' → logprob: -3.885680913925171
    5. 'item' → logprob: -4.010680675506592
    6. 'add' → logprob: -4.135680675506592
    7. ' mul' → logprob: -4.635680675506592
    8. ' method' → logprob: -5.135680675506592
    9. ' ' → logprob: -6.385680675506592
    10. 'attr' → logprob: -7.010680675506592

Token 11: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.3270660638809204
    2. '\' → logprob: -1.7020660638809204
    3. '```' → logprob: -1.8270660638809204
    4. ',' → logprob: -2.202065944671631
    5. '\n' → logprob: -2.202065944671631
    6. '@' → logprob: -2.952065944671631
    7. '`' → logprob: -3.327065944671631
    8. '<|end|>' → logprob: -3.952065944671631
    9. '*' → logprob: -4.452065944671631
    10. '(
' → logprob: -4.452065944671631

Token 12: 'from' (ID: 2845)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.8901455402374268
    2. '@' → logprob: -1.3901455402374268
    3. '\' → logprob: -2.2651455402374268
    4. ',' → logprob: -2.5151455402374268
    5. '`' → logprob: -3.5151455402374268
    6. '\n' → logprob: -3.5151455402374268
    7. 'def' → logprob: -4.015145301818848
    8. '@
' → logprob: -4.390145301818848
    9. ',
' → logprob: -4.640145301818848
    10. '<|end|>' → logprob: -4.890145301818848

Token 13: ' sys' (ID: 12228)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.168516144156456
    2. ' math' → logprob: -2.418516159057617
    3. ' itertools' → logprob: -2.793516159057617
    4. 'operator' → logprob: -5.668516159057617
    5. 'it' → logprob: -6.918516159057617
    6. 'fun' → logprob: -9.168516159057617
    7. ' ' → logprob: -9.543516159057617
    8. ' operator' → logprob: -9.793516159057617
    9. ' functools' → logprob: -9.793516159057617
    10. 'os' → logprob: -10.918516159057617

Token 14: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.22828331589698792
    2. 'import' → logprob: -1.8532832860946655
    3. '.' → logprob: -3.103283405303955
    4. ' .' → logprob: -6.603283405303955
    5. '.import' → logprob: -7.603283405303955
    6. ' ' → logprob: -8.353282928466797
    7. '<|end|>' → logprob: -8.978282928466797
    8. '	import' → logprob: -10.103282928466797
    9. '```' → logprob: -10.353282928466797
    10. '<|end|>' → logprob: -10.728282928466797

Token 15: ' stdin' (ID: 75143)
  Prédit: 'version'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'version' → logprob: -1.2010982036590576
    2. 'argv' → logprob: -1.2010982036590576
    3. 'stdin' → logprob: -1.7010982036590576
    4. 'max' → logprob: -2.3260982036590576
    5. 'stdout' → logprob: -3.2010982036590576
    6. 'stderr' → logprob: -3.9510982036590576
    7. ' stdin' → logprob: -4.076098442077637
    8. 'modules' → logprob: -4.451098442077637
    9. 'exit' → logprob: -4.826098442077637
    10. ' argv' → logprob: -5.451098442077637

Token 16: '

' (ID: 279)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.0730794668197632
    2. '\' → logprob: -1.6980794668197632
    3. '
' → logprob: -2.1980795860290527
    4. '```' → logprob: -2.6980795860290527
    5. '<|end|>' → logprob: -2.8230795860290527
    6. '@' → logprob: -2.9480795860290527
    7. '

' → logprob: -2.9480795860290527
    8. 'def' → logprob: -3.1980795860290527
    9. 'import' → logprob: -3.5730795860290527
    10. ',' → logprob: -4.573079586029053

Token 17: 'K' (ID: 42)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '@' → logprob: -0.009571205824613571
    2. 'def' → logprob: -5.509571075439453
    3. '```' → logprob: -5.884571075439453
    4. '\' → logprob: -7.009571075439453
    5. '@
' → logprob: -7.259571075439453
    6. '`' → logprob: -8.134571075439453
    7. '\n' → logprob: -8.134571075439453
    8. '@

' → logprob: -8.884571075439453
    9. '``' → logprob: -9.134571075439453
    10. 'd' → logprob: -9.384571075439453

Token 18: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.23792868852615356
    2. ' =' → logprob: -1.9879286289215088
    3. ',' → logprob: -2.737928628921509
    4. ')' → logprob: -5.487928867340088
    5. '_' → logprob: -5.737928867340088
    6. '.' → logprob: -7.612928867340088
    7. '=int' → logprob: -7.612928867340088
    8. 'E' → logprob: -8.11292839050293
    9. 'I' → logprob: -8.61292839050293
    10. ':' → logprob: -8.73792839050293

Token 19: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.06795074045658112
    2. ' N' → logprob: -2.81795072555542
    3. 'n' → logprob: -6.31795072555542
    4. 'M' → logprob: -6.56795072555542
    5. 'L' → logprob: -7.69295072555542
    6. ' n' → logprob: -7.94295072555542
    7. 'A' → logprob: -8.192951202392578
    8. 'T' → logprob: -8.192951202392578
    9. ' M' → logprob: -8.192951202392578
    10. 'D' → logprob: -8.692951202392578

Token 20: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.055297691375017166
    2. '=' → logprob: -2.930297613143921
    3. ',' → logprob: -7.8052978515625
    4. ' ' → logprob: -12.9302978515625
    5. '<|end|>' → logprob: -13.1802978515625
    6. ' ,' → logprob: -13.6802978515625
    7. '=input' → logprob: -14.3052978515625
    8. '=int' → logprob: -14.4302978515625
    9. ' =",' → logprob: -15.6802978515625
    10. ')' → logprob: -15.6802978515625

Token 21: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.009948857128620148
    2. 'map' → logprob: -4.63494873046875
    3. ' ' → logprob: -8.75994873046875
    4. ' [' → logprob: -10.88494873046875
    5. ' list' → logprob: -11.50994873046875
    6. '[' → logprob: -12.75994873046875
    7. '	map' → logprob: -14.00994873046875
    8. 'list' → logprob: -14.13494873046875
    9. '0' → logprob: -14.50994873046875
    10. ' stdin' → logprob: -14.63494873046875

Token 22: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.030982229858636856
    2. '(' → logprob: -3.530982255935669
    3. '(lambda' → logprob: -7.40598201751709
    4. '(str' → logprob: -8.28098201751709
    5. '(input' → logprob: -8.28098201751709
    6. '(list' → logprob: -9.90598201751709
    7. '(stdin' → logprob: -10.53098201751709
    8. 'int' → logprob: -11.53098201751709
    9. '(tuple' → logprob: -12.03098201751709
    10. '[int' → logprob: -12.28098201751709

Token 23: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.23961210250854492
    2. '(stdin' → logprob: -1.614612102508545
    3. '(' → logprob: -4.489612102508545
    4. ',input' → logprob: -6.364612102508545
    5. '(input' → logprob: -8.364612579345703
    6. '(),' → logprob: -8.489612579345703
    7. '(st' → logprob: -8.489612579345703
    8. ')' → logprob: -8.614612579345703
    9. ' ,' → logprob: -8.739612579345703
    10. ',std' → logprob: -10.239612579345703

Token 24: ' stdin' (ID: 75143)
  Prédit: 'stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stdin' → logprob: -0.12711992859840393
    2. 'input' → logprob: -2.377120018005371
    3. ' stdin' → logprob: -3.752120018005371
    4. ' input' → logprob: -6.377120018005371
    5. '(stdin' → logprob: -6.627120018005371
    6. ')' → logprob: -10.002120018005371
    7. '.stdin' → logprob: -12.127120018005371
    8. ' ' → logprob: -12.502120018005371
    9. 'std' → logprob: -13.502120018005371
    10. ' )' → logprob: -13.627120018005371

Token 25: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0031549036502838135
    2. '.read' → logprob: -6.128154754638672
    3. '.' → logprob: -7.003154754638672
    4. '.readlines' → logprob: -10.003154754638672
    5. ').' → logprob: -11.628154754638672
    6. '.stdin' → logprob: -13.878154754638672
    7. '.buffer' → logprob: -14.128154754638672
    8. ' .' → logprob: -14.253154754638672
    9. '.Read' → logprob: -14.878154754638672
    10. ')' → logprob: -15.128154754638672

Token 26: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.018902383744716644
    2. '())' → logprob: -4.14390230178833
    3. ')' → logprob: -6.51890230178833
    4. '()' → logprob: -6.64390230178833
    5. '()))' → logprob: -9.768902778625488
    6. '))' → logprob: -11.768902778625488
    7. '(),' → logprob: -12.018902778625488
    8. '()).' → logprob: -12.768902778625488
    9. ').' → logprob: -12.893902778625488
    10. '()[' → logprob: -13.018902778625488

Token 27: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.39252543449401855
    2. 'split' → logprob: -1.1425254344940186
    3. 'rstrip' → logprob: -5.267525672912598
    4. 'read' → logprob: -7.892525672912598
    5. ')' → logprob: -9.267525672912598
    6. ' strip' → logprob: -12.017525672912598
    7. ' split' → logprob: -12.767525672912598
    8. '```' → logprob: -13.142525672912598
    9. 'decode' → logprob: -13.642525672912598
    10. 'replace' → logprob: -14.517525672912598

Token 28: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.31329429149627686
    2. '))' → logprob: -1.3132942914962769
    3. ')))' → logprob: -11.188294410705566
    4. '),' → logprob: -11.938294410705566
    5. '()' → logprob: -12.438294410705566
    6. '())' → logprob: -12.813294410705566
    7. '()))' → logprob: -13.438294410705566
    8. ')
' → logprob: -13.813294410705566
    9. '))
' → logprob: -13.938294410705566
    10. ')),' → logprob: -15.188294410705566

Token 29: 'MOD' (ID: 52135)
  Prédit: 'numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'numbers' → logprob: -1.1329989433288574
    2. 'nums' → logprob: -1.5079989433288574
    3. 'arr' → logprob: -1.8829989433288574
    4. 'fact' → logprob: -2.2579989433288574
    5. 'factor' → logprob: -3.3829989433288574
    6. 'cards' → logprob: -3.8829989433288574
    7. 'a' → logprob: -4.132998943328857
    8. 'dp' → logprob: -4.257998943328857
    9. 'data' → logprob: -4.382998943328857
    10. 'facts' → logprob: -4.382998943328857

Token 30: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2014189064502716
    2. '=' → logprob: -1.7014188766479492
    3. ' ' → logprob: -12.70141887664795
    4. ' =
' → logprob: -13.70141887664795
    5. ',' → logprob: -14.45141887664795
    6. ')' → logprob: -15.20141887664795
    7. '=int' → logprob: -15.70141887664795
    8. ' =)' → logprob: -15.70141887664795
    9. '=

' → logprob: -15.95141887664795
    10. '_' → logprob: -15.95141887664795

Token 31: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.5552209615707397
    2. '100' → logprob: -1.0552209615707397
    3. ' ' → logprob: -2.5552210807800293
    4. '1' → logprob: -8.555220603942871
    5. '998' → logprob: -9.680220603942871
    6. '2' → logprob: -13.305220603942871
    7. '109' → logprob: -13.805220603942871
    8. 'int' → logprob: -13.930220603942871
    9. '(' → logprob: -14.055220603942871
    10. '101' → logprob: -14.555220603942871

Token 32: '998' (ID: 34589)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.47610631585121155
    2. '10' → logprob: -0.9761062860488892
    3. '1' → logprob: -6.4761061668396
    4. '998' → logprob: -7.7261061668396
    5. ' ' → logprob: -11.351106643676758
    6. '123' → logprob: -11.976106643676758
    7. 'int' → logprob: -11.976106643676758
    8. '2' → logprob: -12.101106643676758
    9. '987' → logprob: -12.476106643676758
    10. '(' → logprob: -12.726106643676758

Token 33: '244' (ID: 25291)
  Prédit: '244'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '244' → logprob: -1.8789383830153383e-05
    2. '247' → logprob: -12.375019073486328
    3. '953' → logprob: -12.875019073486328
    4. '243' → logprob: -13.250019073486328
    5. '```' → logprob: -13.250019073486328
    6. '954' → logprob: -13.625019073486328
    7. '457' → logprob: -14.250019073486328
    8. '592' → logprob: -14.375019073486328
    9. '259' → logprob: -14.625019073486328
    10. '744' → logprob: -14.750019073486328

Token 34: '353' (ID: 32996)
  Prédit: '853'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '853' → logprob: -0.08474627137184143
    2. '353' → logprob: -2.7097463607788086
    3. '857' → logprob: -4.459746360778809
    4. '257' → logprob: -5.834746360778809
    5. '253' → logprob: -8.959746360778809
    6. '```' → logprob: -10.709746360778809
    7. '953' → logprob: -10.834746360778809
    8. '357' → logprob: -11.084746360778809
    9. '53' → logprob: -11.959746360778809
    10. '457' → logprob: -12.209746360778809

Token 35: '
' (ID: 198)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.7587476968765259
    2. 'factor' → logprob: -1.3837476968765259
    3. 'def' → logprob: -3.0087475776672363
    4. '
' → logprob: -3.0087475776672363
    5. 'result' → logprob: -3.0087475776672363
    6. 'data' → logprob: -3.8837475776672363
    7. '```' → logprob: -4.383747577667236
    8. '

' → logprob: -4.383747577667236
    9. 'a' → logprob: -4.508747577667236
    10. 'pow' → logprob: -4.758747577667236

Token 36: 'MAX' (ID: 21911)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0846495628356934
    2. 'def' → logprob: -1.7096495628356934
    3. '

' → logprob: -2.0846495628356934
    4. 'result' → logprob: -2.8346495628356934
    5. 'a' → logprob: -3.3346495628356934
    6. ')' → logprob: -3.3346495628356934
    7. '```' → logprob: -3.5846495628356934
    8. 'data' → logprob: -3.7096495628356934
    9. 'n' → logprob: -3.8346495628356934
    10. '\n' → logprob: -4.209649562835693

Token 37: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47847408056259155
    2. '=' → logprob: -1.4784741401672363
    3. '_' → logprob: -2.6034741401672363
    4. '_SIZE' → logprob: -3.1034741401672363
    5. '_N' → logprob: -4.103474140167236
    6. '_FACTOR' → logprob: -5.228474140167236
    7. '_FACT' → logprob: -6.228474140167236
    8. 'N' → logprob: -6.478474140167236
    9. '_LEN' → logprob: -6.603474140167236
    10. '_n' → logprob: -6.603474140167236

Token 38: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.31661269068717957
    2. '10' → logprob: -1.566612720489502
    3. '100' → logprob: -3.816612720489502
    4. '2' → logprob: -4.441612720489502
    5. ' K' → logprob: -4.566612720489502
    6. 'K' → logprob: -5.066612720489502
    7. '200' → logprob: -5.316612720489502
    8. '400' → logprob: -6.191612720489502
    9. '500' → logprob: -6.441612720489502
    10. 'N' → logprob: -6.941612720489502

Token 39: '2' (ID: 17)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.6624122262001038
    2. '100' → logprob: -1.787412166595459
    3. '2' → logprob: -2.162412166595459
    4. '200' → logprob: -2.162412166595459
    5. 'K' → logprob: -3.787412166595459
    6. '400' → logprob: -3.787412166595459
    7. 'N' → logprob: -4.412412166595459
    8. '500' → logprob: -4.537412166595459
    9. '300' → logprob: -5.162412166595459
    10. '20' → logprob: -5.662412166595459

Token 40: ' *' (ID: 425)
  Prédit: '000'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -1.020607352256775
    2. '*K' → logprob: -1.270607352256775
    3. '*' → logprob: -1.520607352256775
    4. '0' → logprob: -2.1456074714660645
    5. '**' → logprob: -4.5206074714660645
    6. '00' → logprob: -5.7706074714660645
    7. '10' → logprob: -5.8956074714660645
    8. ' *' → logprob: -6.0206074714660645
    9. '*N' → logprob: -6.3956074714660645
    10. '100' → logprob: -7.1456074714660645

Token 41: ' K' (ID: 658)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.37490755319595337
    2. 'K' → logprob: -1.3749074935913086
    3. 'N' → logprob: -3.1249074935913086
    4. '100' → logprob: -5.499907493591309
    5. ' ' → logprob: -6.249907493591309
    6. '0' → logprob: -6.749907493591309
    7. '1' → logprob: -6.749907493591309
    8. '200' → logprob: -6.874907493591309
    9. '000' → logprob: -6.999907493591309
    10. '2' → logprob: -7.249907493591309

Token 42: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.003290251363068819
    2. ' +' → logprob: -6.003290176391602
    3. '**' → logprob: -8.378290176391602
    4. '+
' → logprob: -8.378290176391602
    5. '\n' → logprob: -9.378290176391602
    6. '```' → logprob: -9.753290176391602
    7. '#' → logprob: -9.878290176391602
    8. '
' → logprob: -10.128290176391602
    9. 'import' → logprob: -11.253290176391602
    10. ' +
' → logprob: -11.503290176391602

Token 43: ' N' (ID: 478)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.9883373379707336
    2. '10' → logprob: -1.4883372783660889
    3. 'N' → logprob: -1.7383372783660889
    4. '2' → logprob: -2.238337278366089
    5. ' ' → logprob: -2.488337278366089
    6. '5' → logprob: -4.613337516784668
    7. '3' → logprob: -4.738337516784668
    8. '100' → logprob: -4.988337516784668
    9. ' N' → logprob: -5.488337516784668
    10. '4' → logprob: -5.988337516784668

Token 44: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.10573740303516388
    2. '
' → logprob: -3.1057374477386475
    3. '\n' → logprob: -4.480737209320068
    4. '+
' → logprob: -4.605737209320068
    5. ' 
' → logprob: -4.730737209320068
    6. ' +' → logprob: -4.855737209320068
    7. '**' → logprob: -5.480737209320068
    8. '```' → logprob: -5.730737209320068
    9. '\' → logprob: -5.855737209320068
    10. '
' → logprob: -6.605737209320068

Token 45: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.18298135697841644
    2. '5' → logprob: -2.682981252670288
    3. '1' → logprob: -2.807981252670288
    4. '100' → logprob: -3.932981252670288
    5. '2' → logprob: -5.057981491088867
    6. '50' → logprob: -5.307981491088867
    7. ' ' → logprob: -5.557981491088867
    8. '20' → logprob: -5.932981491088867
    9. '3' → logprob: -7.307981491088867
    10. '4' → logprob: -8.932981491088867

Token 46: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.1509392112493515
    2. '5' → logprob: -2.7759392261505127
    3. '1' → logprob: -3.0259392261505127
    4. '100' → logprob: -4.275938987731934
    5. '2' → logprob: -4.775938987731934
    6. '50' → logprob: -5.900938987731934
    7. '20' → logprob: -6.025938987731934
    8. '3' → logprob: -7.150938987731934
    9. '4' → logprob: -7.775938987731934
    10. ' ' → logprob: -8.525938987731934

Token 47: '

' (ID: 279)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.5055022835731506
    2. 'factor' → logprob: -1.7555022239685059
    3. '
' → logprob: -2.130502223968506
    4. 'dp' → logprob: -3.755502223968506
    5. '\n' → logprob: -4.380502223968506
    6. ' 
' → logprob: -4.505502223968506
    7. '```' → logprob: -4.880502223968506
    8. 'n' → logprob: -5.130502223968506
    9. '_factor' → logprob: -5.255502223968506
    10. '_fact' → logprob: -5.255502223968506

Token 48: '#' (ID: 2)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.12974627315998077
    2. 'factor' → logprob: -2.379746198654175
    3. 'fac' → logprob: -3.754746198654175
    4. 'facts' → logprob: -5.879746437072754
    5. 'from' → logprob: -7.129746437072754
    6. 'dp' → logprob: -7.504746437072754
    7. '_fact' → logprob: -7.754746437072754
    8. '```' → logprob: -8.004746437072754
    9. '_factor' → logprob: -8.879746437072754
    10. 'import' → logprob: -8.879746437072754

Token 49: ' Pré' (ID: 86400)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.0423600934445858
    2. 'factor' → logprob: -3.9173600673675537
    3. 'fac' → logprob: -4.042360305786133
    4. ' fact' → logprob: -5.792360305786133
    5. 'from' → logprob: -7.292360305786133
    6. 'facts' → logprob: -9.542360305786133
    7. 'import' → logprob: -9.667360305786133
    8. ' factorial' → logprob: -10.042360305786133
    9. '@' → logprob: -10.042360305786133
    10. '#' → logprob: -11.292360305786133

Token 50: '-cal' (ID: 84920)
  Prédit: 'fix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fix' → logprob: -0.04309842362999916
    2. 'f' → logprob: -4.168098449707031
    3. 'compute' → logprob: -4.418098449707031
    4. 'com' → logprob: -5.043098449707031
    5. 'c' → logprob: -5.543098449707031
    6. 'comput' → logprob: -6.668098449707031
    7. 'computed' → logprob: -7.418098449707031
    8. 'cache' → logprob: -7.793098449707031
    9. 'sum' → logprob: -8.168098449707031
    10. '#' → logprob: -8.668098449707031

Token 51: 'cul' (ID: 2885)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.8356808423995972
    2. 'cul' → logprob: -1.5856808423995972
    3. 'culated' → logprob: -1.7106808423995972
    4. 'culation' → logprob: -1.9606808423995972
    5. 'culate' → logprob: -3.9606809616088867
    6. 'cule' → logprob: -4.335680961608887
    7. 'cula' → logprob: -6.085680961608887
    8. 'culo' → logprob: -6.460680961608887
    9. 'culator' → logprob: -7.085680961608887
    10. '```' → logprob: -7.210680961608887

Token 52: ' des' (ID: 731)
  Prédit: 'ate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ate' → logprob: -0.24941210448741913
    2. 's' → logprob: -2.6244120597839355
    3. 'ating' → logprob: -2.9994120597839355
    4. 'ated' → logprob: -3.4994120597839355
    5. 'ation' → logprob: -4.1244120597839355
    6. '_' → logprob: -4.3744120597839355
    7. '#' → logprob: -4.7494120597839355
    8. ':' → logprob: -5.3744120597839355
    9. 'ations' → logprob: -5.4994120597839355
    10. 'ulate' → logprob: -5.4994120597839355

Token 53: ' fact' (ID: 2840)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.7888059616088867
    2. ' fact' → logprob: -0.9138059616088867
    3. 'factor' → logprob: -2.0388059616088867
    4. '```' → logprob: -5.038805961608887
    5. ' facto' → logprob: -5.413805961608887
    6. 'fac' → logprob: -6.788805961608887
    7. ' factorial' → logprob: -7.538805961608887
    8. 'facts' → logprob: -7.663805961608887
    9. '_factor' → logprob: -7.788805961608887
    10. '_fact' → logprob: -8.788805961608887

Token 54: 'ori' (ID: 6510)
  Prédit: 'ori'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ori' → logprob: -0.029021576046943665
    2. 'orial' → logprob: -4.154021739959717
    3. 'or' → logprob: -4.404021739959717
    4. 'ories' → logprob: -8.404021263122559
    5. 'os' → logprob: -8.529021263122559
    6. 'o' → logprob: -9.404021263122559
    7. '```' → logprob: -9.404021263122559
    8. 's' → logprob: -11.154021263122559
    9. 'ot' → logprob: -11.529021263122559
    10. 'oires' → logprob: -11.654021263122559

Token 55: 'elles' (ID: 8500)
  Prédit: 'els'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'els' → logprob: -0.04089105874300003
    2. 'als' → logprob: -3.665891170501709
    3. 'elles' → logprob: -4.915891170501709
    4. '```' → logprob: -5.665891170501709
    5. '``' → logprob: -6.915891170501709
    6. '`' → logprob: -7.040891170501709
    7. 'al' → logprob: -7.665891170501709
    8. 'a' → logprob: -7.915891170501709
    9. 'aux' → logprob: -8.29089069366455
    10. 'ls' → logprob: -8.79089069366455

Token 56: ' et' (ID: 859)
  Prédit: '_factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_factor' → logprob: -0.9557265043258667
    2. '_fact' → logprob: -1.2057265043258667
    3. 'fact' → logprob: -2.0807266235351562
    4. 'factor' → logprob: -2.8307266235351562
    5. '_' → logprob: -2.9557266235351562
    6. 'f' → logprob: -3.5807266235351562
    7. ',' → logprob: -4.330726623535156
    8. ':' → logprob: -5.080726623535156
    9. 's' → logprob: -5.330726623535156
    10. '```' → logprob: -5.580726623535156

Token 57: ' invers' (ID: 38721)
  Prédit: 'des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'des' → logprob: -1.0112920999526978
    2. 'inverse' → logprob: -1.5112920999526978
    3. ' leurs' → logprob: -2.011291980743408
    4. ' des' → logprob: -2.511291980743408
    5. 'inv' → logprob: -3.011291980743408
    6. 'leurs' → logprob: -3.136291980743408
    7. 'in' → logprob: -3.386291980743408
    8. 'fact' → logprob: -4.261291980743408
    9. 'their' → logprob: -4.636291980743408
    10. 'leur' → logprob: -4.886291980743408

Token 58: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.0008965740562416613
    2. 'és' → logprob: -7.500896453857422
    3. 'les' → logprob: -9.000896453857422
    4. '```' → logprob: -9.625896453857422
    5. 'ées' → logprob: -10.500896453857422
    6. 'ces' → logprob: -10.500896453857422
    7. 'ales' → logprob: -11.125896453857422
    8. 's' → logprob: -11.500896453857422
    9. 'e' → logprob: -11.500896453857422
    10. 'ques' → logprob: -11.625896453857422

Token 59: '
' (ID: 198)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.9413471221923828
    2. '_factor' → logprob: -2.066347122192383
    3. '_fact' → logprob: -2.316347122192383
    4. ':' → logprob: -2.441347122192383
    5. '```' → logprob: -2.566347122192383
    6. 'f' → logprob: -2.566347122192383
    7. 's' → logprob: -3.316347122192383
    8. 'factor' → logprob: -3.816347122192383
    9. ',' → logprob: -4.191347122192383
    10. '
' → logprob: -4.441347122192383

Token 60: 'fact' (ID: 53534)
  Prédit: 'fact'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.017662493512034416
    2. 'factor' → logprob: -4.767662525177002
    3. '_fact' → logprob: -5.017662525177002
    4. '_factor' → logprob: -6.767662525177002
    5. '
' → logprob: -8.142662048339844
    6. 'fac' → logprob: -8.267662048339844
    7. ' fact' → logprob: -8.642662048339844
    8. 'f' → logprob: -8.642662048339844
    9. '```' → logprob: -8.642662048339844
    10. 'facts' → logprob: -10.017662048339844

Token 61: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.09174920618534088
    2. ' =' → logprob: -2.4667491912841797
    3. 'or' → logprob: -6.59174919128418
    4. ',' → logprob: -7.96674919128418
    5. '_' → logprob: -7.96674919128418
    6. 'orial' → logprob: -8.46674919128418
    7. ' ' → logprob: -8.46674919128418
    8. '[' → logprob: -9.09174919128418
    9. 's' → logprob: -10.46674919128418
    10. 'os' → logprob: -10.59174919128418

Token 62: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0181527491658926
    2. ' [' → logprob: -4.018152713775635
    3. ' ' → logprob: -14.268153190612793
    4. '[f' → logprob: -15.018153190612793
    5. '[m' → logprob: -15.268153190612793
    6. '=[' → logprob: -15.518153190612793
    7. '[len' → logprob: -15.893153190612793
    8. '1' → logprob: -15.893153190612793
    9. '[MAX' → logprob: -16.143152236938477
    10. '[i' → logprob: -16.268152236938477

Token 63: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.8889261304575484e-06
    2. ' ' → logprob: -12.500003814697266
    3. ']' → logprob: -17.375003814697266
    4. '```' → logprob: -19.375003814697266
    5. '   ' → logprob: -19.875003814697266
    6. ')' → logprob: -19.875003814697266
    7. 'fact' → logprob: -20.375003814697266
    8. '  ' → logprob: -20.375003814697266
    9. '0' → logprob: -20.625003814697266
    10. '-' → logprob: -21.250003814697266

Token 64: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0006537011358886957
    2. ' ]' → logprob: -8.125653266906738
    3. ']*' → logprob: -8.375653266906738
    4. ',' → logprob: -9.250653266906738
    5. '*' → logprob: -11.625653266906738
    6. ']*(' → logprob: -11.625653266906738
    7. ' for' → logprob: -12.125653266906738
    8. ']
' → logprob: -13.000653266906738
    9. ' ' → logprob: -13.625653266906738
    10. ']

' → logprob: -13.750653266906738

Token 65: 'for' (ID: 1938)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10144790261983871
    2. ' ' → logprob: -3.101447820663452
    3. '*' → logprob: -4.351448059082031
    4. ' for' → logprob: -4.351448059082031
    5. ']' → logprob: -4.976448059082031
    6. '[' → logprob: -5.726448059082031
    7. ' ,' → logprob: -5.976448059082031
    8. ')' → logprob: -6.476448059082031
    9. 'for' → logprob: -6.476448059082031
    10. ' ]' → logprob: -6.476448059082031

Token 66: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.029772015288472176
    2. 'i' → logprob: -3.5297720432281494
    3. ' ' → logprob: -11.15477180480957
    4. ' ' → logprob: -12.90477180480957
    5. '	i' → logprob: -12.90477180480957
    6. ' _' → logprob: -13.65477180480957
    7. '_' → logprob: -14.90477180480957
    8. '_i' → logprob: -15.02977180480957
    9. 'I' → logprob: -15.65477180480957
    10. '  ' → logprob: -16.90477180480957

Token 67: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.026436496526002884
    2. 'in' → logprob: -3.6514365673065186
    3. ' ' → logprob: -9.151436805725098
    4. '	in' → logprob: -11.401436805725098
    5. '1' → logprob: -11.526436805725098
    6. ',' → logprob: -13.276436805725098
    7. ' i' → logprob: -14.276436805725098
    8. 'In' → logprob: -14.276436805725098
    9. 'import' → logprob: -14.401436805725098
    10. '  ' → logprob: -14.651436805725098

Token 68: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.008619658648967743
    2. 'range' → logprob: -4.758619785308838
    3. ' ' → logprob: -13.00861930847168
    4. '	range' → logprob: -13.13361930847168
    5. '(range' → logprob: -14.38361930847168
    6. ' xrange' → logprob: -15.13361930847168
    7. '1' → logprob: -17.13361930847168
    8. '  ' → logprob: -18.63361930847168
    9. '.range' → logprob: -18.75861930847168
    10. '_range' → logprob: -19.25861930847168

Token 69: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -5.080963092041202e-06
    2. '1' → logprob: -12.250004768371582
    3. ' (' → logprob: -16.3750057220459
    4. '(
' → logprob: -16.6250057220459
    5. ' ' → logprob: -19.0000057220459
    6. '(MAX' → logprob: -19.3750057220459
    7. '2' → logprob: -19.5000057220459
    8. '(

' → logprob: -20.3750057220459
    9. '[' → logprob: -21.2500057220459
    10. '(K' → logprob: -21.3750057220459

Token 70: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002124806633219123
    2. ' ' → logprob: -8.500212669372559
    3. 'MAX' → logprob: -11.750212669372559
    4. '(' → logprob: -14.375212669372559
    5. ' MAX' → logprob: -15.250212669372559
    6. '(MAX' → logprob: -15.750212669372559
    7. '   ' → logprob: -16.875211715698242
    8. '2' → logprob: -17.000211715698242
    9. '  ' → logprob: -17.750211715698242
    10. ' ' → logprob: -18.375211715698242

Token 71: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04859691113233566
    2. ' ,' → logprob: -3.0485968589782715
    3. ' ' → logprob: -12.42359733581543
    4. ',K' → logprob: -13.54859733581543
    5. ',len' → logprob: -13.67359733581543
    6. ')' → logprob: -13.79859733581543
    7. ',max' → logprob: -14.04859733581543
    8. ' ,
' → logprob: -15.42359733581543
    9. '，' → logprob: -15.67359733581543
    10. ' )' → logprob: -15.79859733581543

Token 72: ' MAX' (ID: 16960)
  Prédit: 'MAX'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MAX' → logprob: -0.0009115827269852161
    2. ' MAX' → logprob: -7.000911712646484
    3. '(MAX' → logprob: -16.875911712646484
    4. '_MAX' → logprob: -18.750911712646484
    5. '[MAX' → logprob: -19.000911712646484
    6. 'max' → logprob: -19.125911712646484
    7. 'Max' → logprob: -19.375911712646484
    8. ' ' → logprob: -19.375911712646484
    9. 'M' → logprob: -20.000911712646484
    10. '/MAX' → logprob: -20.625911712646484

Token 73: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.02277027815580368
    2. '+' → logprob: -4.147770404815674
    3. '):
' → logprob: -5.272770404815674
    4. ':' → logprob: -7.397770404815674
    5. ' ):' → logprob: -7.522770404815674
    6. ')' → logprob: -8.022769927978516
    7. ' +' → logprob: -9.522769927978516
    8. ']:' → logprob: -11.522769927978516
    9. '):
' → logprob: -12.022769927978516
    10. ' ):
' → logprob: -12.397769927978516

Token 74: '   ' (ID: 271)
  Prédit: ' fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fact' → logprob: -0.5767633318901062
    2. 'fact' → logprob: -0.8267633318901062
    3. '_fact' → logprob: -7.451763153076172
    4. '```' → logprob: -9.326763153076172
    5. '.fact' → logprob: -9.701763153076172
    6. '   ' → logprob: -10.451763153076172
    7. '<|end|>' → logprob: -10.701763153076172
    8. 'Fact' → logprob: -11.451763153076172
    9. 'factor' → logprob: -11.451763153076172
    10. ' factorial' → logprob: -12.076763153076172

Token 75: ' fact' (ID: 2840)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' (adapté à ' fact') → logprob: -0.10022500902414322
    2. ' fact' → logprob: -2.3502249717712402
    3. '_fact' → logprob: -11.225225448608398
    4. '```' → logprob: -12.600225448608398
    5. '.fact' → logprob: -14.350225448608398
    6. 'factor' → logprob: -14.600225448608398
    7. '   ' → logprob: -15.100225448608398
    8. 'Fact' → logprob: -15.475225448608398
    9. ' fakt' → logprob: -17.4752254486084
    10. ' factorial' → logprob: -17.7252254486084

Token 76: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.026670293882489204
    2. '.' → logprob: -3.651670217514038
    3. 'append' → logprob: -8.651670455932617
    4. '.extend' → logprob: -9.401670455932617
    5. '*' → logprob: -10.151670455932617
    6. '.app' → logprob: -11.276670455932617
    7. '=' → logprob: -11.526670455932617
    8. '_append' → logprob: -11.651670455932617
    9. '*=' → logprob: -11.776670455932617
    10. ' .' → logprob: -12.151670455932617

Token 77: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.0013768990756943822
    2. '(' → logprob: -6.751377105712891
    3. '(m' → logprob: -8.62637710571289
    4. 'fact' → logprob: -11.12637710571289
    5. '((' → logprob: -11.62637710571289
    6. '(i' → logprob: -13.25137710571289
    7. ' (' → logprob: -14.75137710571289
    8. '_fact' → logprob: -15.00137710571289
    9. ' fact' → logprob: -15.12637710571289
    10. 'mul' → logprob: -15.37637710571289

Token 78: 'act' (ID: 588)
  Prédit: 'act'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'act' → logprob: -3.292907877039397e-06
    2. '```' → logprob: -14.37500286102295
    3. 'ac' → logprob: -14.75000286102295
    4. 'a' → logprob: -14.87500286102295
    5. '*' → logprob: -14.87500286102295
    6. '(act' → logprob: -15.37500286102295
    7. '   ' → logprob: -15.62500286102295
    8. '_act' → logprob: -15.62500286102295
    9. '[' → logprob: -15.87500286102295
    10. '	act' → logprob: -16.250003814697266

Token 79: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -5.848420551046729e-05
    2. '[i' → logprob: -9.7500581741333
    3. '[' → logprob: -16.250059127807617
    4. ' [-' → logprob: -17.000059127807617
    5. '[
' → logprob: -18.250059127807617
    6. '```' → logprob: -19.375059127807617
    7. '   ' → logprob: -19.500059127807617
    8. '[m' → logprob: -20.375059127807617
    9. ' ' → logprob: -20.875059127807617
    10. 'multip' → logprob: -21.125059127807617

Token 80: '1' (ID: 16)
  Prédit: 'mul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mul' → logprob: -0.05337512493133545
    2. '1' → logprob: -3.178375244140625
    3. '_mul' → logprob: -5.428375244140625
    4. 'i' → logprob: -6.428375244140625
    5. '*' → logprob: -6.678375244140625
    6. 'imul' → logprob: -6.928375244140625
    7. ')' → logprob: -7.678375244140625
    8. ' ' → logprob: -8.553375244140625
    9. ' mul' → logprob: -8.678375244140625
    10. 'multip' → logprob: -9.178375244140625

Token 81: ']' (ID: 60)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.02336462214589119
    2. ' *' → logprob: -3.773364543914795
    3. ')' → logprob: -9.898365020751953
    4. ' ' → logprob: -10.398365020751953
    5. ' ' → logprob: -11.398365020751953
    6. 'mul' → logprob: -11.523365020751953
    7. ' mul' → logprob: -12.023365020751953
    8. '_mul' → logprob: -12.523365020751953
    9. ')*' → logprob: -13.523365020751953
    10. '*)' → logprob: -14.023365020751953

Token 82: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.014195593073964119
    2. ' *' → logprob: -4.264195442199707
    3. 'mul' → logprob: -11.264195442199707
    4. ')' → logprob: -12.014195442199707
    5. ' mul' → logprob: -12.639195442199707
    6. ' ' → logprob: -12.639195442199707
    7. '_mul' → logprob: -12.889195442199707
    8. ' ' → logprob: -13.264195442199707
    9. '*m' → logprob: -13.764195442199707
    10. '*)' → logprob: -14.014195442199707

Token 83: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6931498050689697
    2. ' i' → logprob: -0.6931498050689697
    3. '	i' → logprob: -13.06814956665039
    4. ' ' → logprob: -14.56814956665039
    5. ' ' → logprob: -16.69314956665039
    6. '   ' → logprob: -17.44314956665039
    7. '(i' → logprob: -17.81814956665039
    8. '*i' → logprob: -17.94314956665039
    9. '  ' → logprob: -18.19314956665039
    10. '```' → logprob: -18.69314956665039

Token 84: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.6933488845825195
    2. ' %' → logprob: -0.6933488845825195
    3. ')' → logprob: -8.56834888458252
    4. ' ' → logprob: -12.94334888458252
    5. ')%' → logprob: -13.19334888458252
    6. '%A' → logprob: -13.31834888458252
    7. '%B' → logprob: -13.81834888458252
    8. '%n' → logprob: -13.94334888458252
    9. '%D' → logprob: -14.06834888458252
    10. '%i' → logprob: -14.06834888458252

Token 85: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.02325037121772766
    2. ' MOD' → logprob: -3.7732503414154053
    3. '_MOD' → logprob: -12.773250579833984
    4. ' ' → logprob: -14.023250579833984
    5. '998' → logprob: -14.523250579833984
    6. '.MOD' → logprob: -14.773250579833984
    7. 'MO' → logprob: -15.898250579833984
    8. ' ' → logprob: -15.898250579833984
    9. ')' → logprob: -17.398250579833984
    10. '(M' → logprob: -17.523250579833984

Token 86: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.036524842376821e-05
    2. ' )' → logprob: -10.125040054321289
    3. ')
' → logprob: -16.62504005432129
    4. ')`' → logprob: -16.62504005432129
    5. '))' → logprob: -16.87504005432129
    6. '),' → logprob: -17.87504005432129
    7. ' ' → logprob: -18.12504005432129
    8. '')' → logprob: -18.50004005432129
    9. '*' → logprob: -18.50004005432129
    10. '*)' → logprob: -18.62504005432129

Token 87: 'fact' (ID: 53534)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.03166905418038368
    2. 'inverse' → logprob: -4.0316691398620605
    3. '_inv' → logprob: -4.7816691398620605
    4. ' inv' → logprob: -6.5316691398620605
    5. '_inverse' → logprob: -7.0316691398620605
    6. 'fact' → logprob: -7.2816691398620605
    7. '```' → logprob: -7.6566691398620605
    8. 'in' → logprob: -8.031668663024902
    9. ' inverse' → logprob: -8.406668663024902
    10. 'rev' → logprob: -9.156668663024902

Token 88: 'inv' (ID: 31086)
  Prédit: '_inverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_inverse' → logprob: -0.7903173565864563
    2. '_inv' → logprob: -1.2903172969818115
    3. '_' → logprob: -1.5403172969818115
    4. '[' → logprob: -3.6653172969818115
    5. '<|end|>' → logprob: -4.415317535400391
    6. '[::-' → logprob: -5.290317535400391
    7. '_reverse' → logprob: -5.790317535400391
    8. 'inverse' → logprob: -6.040317535400391
    9. '[-' → logprob: -6.790317535400391
    10. 'Inverse' → logprob: -6.790317535400391

Token 89: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8387771248817444
    2. ' =' → logprob: -0.9637771248817444
    3. '_' → logprob: -1.7137770652770996
    4. '[' → logprob: -5.2137770652771
    5. 's' → logprob: -7.7137770652771
    6. '.append' → logprob: -9.838777542114258
    7. '_=' → logprob: -9.963777542114258
    8. '=[' → logprob: -10.088777542114258
    9. '[:]' → logprob: -10.463777542114258
    10. '=[]' → logprob: -10.588777542114258

Token 90: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.002814505249261856
    2. ' [' → logprob: -5.877814292907715
    3. 'fact' → logprob: -12.377814292907715
    4. '[len' → logprob: -13.252814292907715
    5. '[f' → logprob: -13.877814292907715
    6. ' fact' → logprob: -14.002814292907715
    7. '[i' → logprob: -14.252814292907715
    8. ' ' → logprob: -15.002814292907715
    9. '[]' → logprob: -15.377814292907715
    10. '([' → logprob: -16.62781524658203

Token 91: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0026853985618799925
    2. '0' → logprob: -6.252685546875
    3. 'None' → logprob: -7.252685546875
    4. 'pow' → logprob: -10.377685546875
    5. 'fact' → logprob: -11.627685546875
    6. '```' → logprob: -12.377685546875
    7. '-' → logprob: -13.752685546875
    8. ']' → logprob: -14.252685546875
    9. ' ' → logprob: -14.377685546875
    10. ' None' → logprob: -14.877685546875

Token 92: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.011099581606686115
    2. ',' → logprob: -4.511099815368652
    3. ')' → logprob: -11.136099815368652
    4. ' ]' → logprob: -11.136099815368652
    5. ',
' → logprob: -12.136099815368652
    6. ']
' → logprob: -12.636099815368652
    7. ']*' → logprob: -12.761099815368652
    8. ')]' → logprob: -13.136099815368652
    9. '<|end|>' → logprob: -13.136099815368652
    10. ']*(' → logprob: -13.261099815368652

Token 93: ' *' (ID: 425)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 94: ' MAX' (ID: 16960)
  Prédit: 'MAX'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MAX' → logprob: -0.10029983520507812
    2. '(MAX' → logprob: -2.350299835205078
    3. '[MAX' → logprob: -9.975299835205078
    4. ' MAX' → logprob: -10.475299835205078
    5. '(' → logprob: -11.225299835205078
    6. '/MAX' → logprob: -12.600299835205078
    7. '(Max' → logprob: -14.975299835205078
    8. '_MAX' → logprob: -15.100299835205078
    9. 'maxlength' → logprob: -15.100299835205078
    10. '
' → logprob: -15.475299835205078

Token 95: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.15022632479667664
    2. ' for' → logprob: -2.900226354598999
    3. 'fact' → logprob: -3.525226354598999
    4. '<|end|>' → logprob: -3.650226354598999
    5. '
' → logprob: -3.775226354598999
    6. ',' → logprob: -6.02522611618042
    7. '[' → logprob: -6.52522611618042
    8. ' fact' → logprob: -7.65022611618042
    9. '#' → logprob: -7.90022611618042
    10. '```' → logprob: -8.025226593017578

Token 96: 'fact' (ID: 53534)
  Prédit: 'fact'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.14912788569927216
    2. 'for' → logprob: -2.524127960205078
    3. '
' → logprob: -4.274127960205078
    4. '#' → logprob: -4.399127960205078
    5. 'inv' → logprob: -4.649127960205078
    6. '```' → logprob: -5.024127960205078
    7. 'i' → logprob: -5.274127960205078
    8. 'from' → logprob: -6.024127960205078
    9. ' fact' → logprob: -6.399127960205078
    10. ')' → logprob: -6.524127960205078

Token 97: 'inv' (ID: 31086)
  Prédit: 'inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -8.061054359131958e-06
    2. '_inv' → logprob: -12.375007629394531
    3. 'inverse' → logprob: -13.625007629394531
    4. '[' → logprob: -13.875007629394531
    5. 'in' → logprob: -14.875007629394531
    6. '<|end|>' → logprob: -15.250007629394531
    7. '```' → logprob: -15.625007629394531
    8. 'inf' → logprob: -15.875007629394531
    9. 'n' → logprob: -16.12500762939453
    10. 'i' → logprob: -16.37500762939453

Token 98: '[MAX' (ID: 46137)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.31336653232574463
    2. '[-' → logprob: -1.3133665323257446
    3. '[MAX' → logprob: -9.438366889953613
    4. '[len' → logprob: -11.938366889953613
    5. '=' → logprob: -12.063366889953613
    6. '[:]' → logprob: -12.688366889953613
    7. '[::-' → logprob: -13.063366889953613
    8. '[
' → logprob: -13.438366889953613
    9. '=[' → logprob: -13.438366889953613
    10. '```' → logprob: -13.438366889953613

Token 99: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0008376232581213117
    2. ' -' → logprob: -7.125837802886963
    3. '1' → logprob: -11.500837326049805
    4. ')' → logprob: -11.500837326049805
    5. '<|end|>' → logprob: -12.250837326049805
    6. '<|end|>' → logprob: -13.125837326049805
    7. ']' → logprob: -13.375837326049805
    8. '-)' → logprob: -14.125837326049805
    9. '–' → logprob: -14.250837326049805
    10. '2' → logprob: -14.750837326049805

Token 100: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.375000953674316
    3. '2' → logprob: -15.250000953674316
    4. '```' → logprob: -17.375
    5. '<|end|>' → logprob: -19.4375
    6. ')' → logprob: -19.4375
    7. '

' → logprob: -19.5625
    8. '  ' → logprob: -19.5625
    9. '-' → logprob: -19.5625
    10. ']' → logprob: -19.625

Token 101: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.013709734193980694
    2. ' ]' → logprob: -4.388709545135498
    3. ']=' → logprob: -7.138709545135498
    4. '=' → logprob: -8.263710021972656
    5. ' =' → logprob: -9.013710021972656
    6. ')' → logprob: -11.638710021972656
    7. ' ' → logprob: -12.138710021972656
    8. ',' → logprob: -12.513710021972656
    9. '],' → logprob: -13.013710021972656
    10. ' )' → logprob: -14.013710021972656

Token 102: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.22543451189994812
    2. ' =' → logprob: -1.6004345417022705
    3. '<|end|>' → logprob: -12.475434303283691
    4. ',' → logprob: -12.600434303283691
    5. ' ' → logprob: -12.725434303283691
    6. '=int' → logprob: -13.225434303283691
    7. ' *=' → logprob: -13.850434303283691
    8. '=

' → logprob: -13.975434303283691
    9. ' =
' → logprob: -14.350434303283691
    10. '=len' → logprob: -14.475434303283691

Token 103: ' pow' (ID: 9779)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.00016098834748845547
    2. ' pow' → logprob: -8.750161170959473
    3. '(pow' → logprob: -13.500161170959473
    4. '1' → logprob: -13.750161170959473
    5. '0' → logprob: -18.625160217285156
    6. '_pow' → logprob: -18.750160217285156
    7. '```' → logprob: -18.750160217285156
    8. 'p' → logprob: -18.875160217285156
    9. 'power' → logprob: -19.000160217285156
    10. '2' → logprob: -19.375160217285156

Token 104: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.02976345270872116
    2. '(' → logprob: -3.5297634601593018
    3. 'fact' → logprob: -11.904763221740723
    4. 'f' → logprob: -13.654763221740723
    5. '(
' → logprob: -14.029763221740723
    6. '```' → logprob: -14.779763221740723
    7. '_fact' → logprob: -14.904763221740723
    8. '((' → logprob: -15.154763221740723
    9. '(fid' → logprob: -15.154763221740723
    10. '(

' → logprob: -15.279763221740723

Token 105: 'act' (ID: 588)
  Prédit: 'act'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'act' → logprob: -0.00033903829171322286
    2. '(act' → logprob: -8.50033950805664
    3. 'fact' → logprob: -9.75033950805664
    4. 'ac' → logprob: -10.62533950805664
    5. '(' → logprob: -10.75033950805664
    6. 'a' → logprob: -11.25033950805664
    7. ')' → logprob: -12.25033950805664
    8. '```' → logprob: -12.62533950805664
    9. '(f' → logprob: -13.75033950805664
    10. '[' → logprob: -13.75033950805664

Token 106: '[MAX' (ID: 46137)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.008616935461759567
    2. '[MAX' → logprob: -4.758616924285889
    3. '[' → logprob: -13.508617401123047
    4. 'MAX' → logprob: -14.133617401123047
    5. '[
' → logprob: -16.383617401123047
    6. '```' → logprob: -16.383617401123047
    7. '[max' → logprob: -16.508617401123047
    8. ' [-' → logprob: -18.008617401123047
    9. '(MAX' → logprob: -18.008617401123047
    10. '	' → logprob: -19.008617401123047

Token 107: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -2.117345684382599e-05
    2. ' -' → logprob: -11.125020980834961
    3. '1' → logprob: -12.875020980834961
    4. '[' → logprob: -13.500020980834961
    5. '[-' → logprob: -14.250020980834961
    6. ']' → logprob: -14.375020980834961
    7. ']-' → logprob: -15.000020980834961
    8. ')' → logprob: -15.750020980834961
    9. 'x' → logprob: -15.875020980834961
    10. 'MAX' → logprob: -16.12502098083496

Token 108: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.375000953674316
    3. '```' → logprob: -16.375
    4. '   ' → logprob: -17.625
    5. '2' → logprob: -17.75
    6. '-' → logprob: -18.5
    7. '۱' → logprob: -18.625
    8. '{' → logprob: -18.625
    9. '

' → logprob: -18.8125
    10. '<|end|>' → logprob: -18.875

Token 109: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1875571544806007e-05
    2. ' ,' → logprob: -11.375011444091797
    3. ',M' → logprob: -15.750011444091797
    4. ',-' → logprob: -16.250011444091797
    5. 'MOD' → logprob: -17.125011444091797
    6. '‌,' → logprob: -17.750011444091797
    7. ',module' → logprob: -18.000011444091797
    8. ',K' → logprob: -18.250011444091797
    9. '-' → logprob: -18.250011444091797
    10. ' ' → logprob: -18.375011444091797

Token 110: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.030305512249469757
    2. '-' → logprob: -4.1553053855896
    3. ' MOD' → logprob: -4.6553053855896
    4. '998' → logprob: -6.1553053855896
    5. ' ' → logprob: -6.6553053855896
    6. '_MOD' → logprob: -7.0303053855896
    7. '.MOD' → logprob: -9.530305862426758
    8. ' -' → logprob: -9.905305862426758
    9. '-mod' → logprob: -10.030305862426758
    10. '```' → logprob: -10.280305862426758

Token 111: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0001398929744027555
    2. ' -' → logprob: -8.875140190124512
    3. '```' → logprob: -19.750139236450195
    4. '−' → logprob: -20.125139236450195
    5. '–' → logprob: -21.000139236450195
    6. ' ' → logprob: -21.875139236450195
    7. '()-' → logprob: -22.375139236450195
    8. '{-' → logprob: -22.625139236450195
    9. '－' → logprob: -23.312639236450195
    10. '־' → logprob: -23.375139236450195

Token 112: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -14.25000286102295
    3. '244' → logprob: -15.75000286102295
    4. '```' → logprob: -15.93750286102295
    5. '-' → logprob: -16.000003814697266
    6. '3' → logprob: -16.125003814697266
    7. '22' → logprob: -16.437503814697266
    8. '224' → logprob: -16.437503814697266
    9. '245' → logprob: -16.562503814697266
    10. '

' → logprob: -16.625003814697266

Token 113: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04306507855653763
    2. ',' → logprob: -3.168065071105957
    3. ' )' → logprob: -10.043065071105957
    4. ',)' → logprob: -11.918065071105957
    5. ' ,' → logprob: -12.793065071105957
    6. ',
' → logprob: -12.918065071105957
    7. ')
' → logprob: -12.918065071105957
    8. '}' → logprob: -13.418065071105957
    9. ']' → logprob: -13.668065071105957
    10. ' ' → logprob: -13.793065071105957

Token 114: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.0004329341172706336
    2. ' MOD' → logprob: -7.750432968139648
    3. ')' → logprob: -13.000432968139648
    4. '_MOD' → logprob: -18.12543296813965
    5. '998' → logprob: -19.00043296813965
    6. '.MOD' → logprob: -19.50043296813965
    7. 'MO' → logprob: -19.87543296813965
    8. 'mod' → logprob: -20.87543296813965
    9. 'Mod' → logprob: -20.87543296813965
    10. '```' → logprob: -21.25043296813965

Token 115: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004920298233628273
    2. ')
' → logprob: -7.625492095947266
    3. ' )' → logprob: -12.750492095947266
    4. ')

' → logprob: -14.000492095947266
    5. ')
' → logprob: -16.375492095947266
    6. ')`' → logprob: -16.375492095947266
    7. '))' → logprob: -17.250492095947266
    8. '),' → logprob: -17.625492095947266
    9. '```' → logprob: -18.250492095947266
    10. ')\' → logprob: -18.500492095947266

Token 116: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00081796565791592
    2. ' for' → logprob: -7.750817775726318
    3. ')' → logprob: -8.000818252563477
    4. '```' → logprob: -10.125818252563477
    5. 'i' → logprob: -12.500818252563477
    6. ']' → logprob: -12.750818252563477
    7. '
' → logprob: -13.125818252563477
    8. '<|end|>' → logprob: -14.000818252563477
    9. '	for' → logprob: -14.375818252563477
    10. '#' → logprob: -14.500818252563477

Token 117: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.018152287229895592
    2. 'i' → logprob: -4.018152236938477
    3. ' ' → logprob: -13.518152236938477
    4. ' range' → logprob: -14.268152236938477
    5. '	i' → logprob: -15.768152236938477
    6. 'range' → logprob: -16.893152236938477
    7. ' in' → logprob: -17.143152236938477
    8. ')' → logprob: -17.393152236938477
    9. ' ' → logprob: -17.643152236938477
    10. ' reversed' → logprob: -18.268152236938477

Token 118: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004080420359969139
    2. 'in' → logprob: -5.504080295562744
    3. ' ' → logprob: -13.629080772399902
    4. ' reversed' → logprob: -15.254080772399902
    5. ' range' → logprob: -15.754080772399902
    6. 'range' → logprob: -16.004079818725586
    7. ',' → logprob: -16.379079818725586
    8. ' i' → logprob: -16.629079818725586
    9. '<|end|>' → logprob: -16.754079818725586
    10. ' ,' → logprob: -17.629079818725586

Token 119: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.06281090527772903
    2. ' range' → logprob: -2.8128108978271484
    3. 're' → logprob: -7.187810897827148
    4. ' reversed' → logprob: -9.437810897827148
    5. ' ' → logprob: -12.437810897827148
    6. '(range' → logprob: -13.437810897827148
    7. '   ' → logprob: -14.312810897827148
    8. 'reverse' → logprob: -14.312810897827148
    9. '	range' → logprob: -15.062810897827148
    10. '  ' → logprob: -15.187810897827148

Token 120: '(MAX' (ID: 129209)
  Prédit: '(MAX'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(MAX' → logprob: -0.16571220755577087
    2. '(range' → logprob: -1.9157122373580933
    3. '(' → logprob: -5.915712356567383
    4. ' range' → logprob: -6.540712356567383
    5. 'range' → logprob: -6.665712356567383
    6. ' (' → logprob: -10.415712356567383
    7. '(M' → logprob: -11.165712356567383
    8. '((' → logprob: -12.665712356567383
    9. '(
' → logprob: -12.915712356567383
    10. '(re' → logprob: -13.290712356567383

Token 121: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0007099286303855479
    2. ' -' → logprob: -7.2507100105285645
    3. '2' → logprob: -18.000709533691406
    4. ')-' → logprob: -18.375709533691406
    5. ' ' → logprob: -18.750709533691406
    6. '−' → logprob: -19.250709533691406
    7. ',' → logprob: -19.375709533691406
    8. ')' → logprob: -19.625709533691406
    9. '-
' → logprob: -20.000709533691406
    10. '1' → logprob: -20.000709533691406

Token 122: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.319370302458992e-06
    2. ' ' → logprob: -12.500005722045898
    3. '1' → logprob: -14.000005722045898
    4. '-' → logprob: -14.625005722045898
    5. '   ' → logprob: -16.0000057220459
    6. '

' → logprob: -17.3750057220459
    7. '  ' → logprob: -17.5000057220459
    8. '
' → logprob: -17.7500057220459
    9. '２' → logprob: -18.5000057220459
    10. '```' → logprob: -18.7500057220459

Token 123: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0022636132780462503
    2. ' ,' → logprob: -6.25226354598999
    3. ',-' → logprob: -8.127264022827148
    4. ',
' → logprob: -11.127264022827148
    5. ',i' → logprob: -11.752264022827148
    6. '<|end|>' → logprob: -13.002264022827148
    7. '-' → logprob: -13.127264022827148
    8. '   ' → logprob: -13.377264022827148
    9. ' ,-' → logprob: -13.627264022827148
    10. '‌,' → logprob: -13.752264022827148

Token 124: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0007163656409829855
    2. ' -' → logprob: -7.250716209411621
    3. '0' → logprob: -12.250716209411621
    4. ' ' → logprob: -13.500716209411621
    5. '   ' → logprob: -16.500717163085938
    6. '-i' → logprob: -16.625717163085938
    7. '  ' → logprob: -17.375717163085938
    8. '
' → logprob: -18.250717163085938
    9. '1' → logprob: -18.625717163085938
    10. ',' → logprob: -18.875717163085938

Token 125: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.750000953674316
    3. '
' → logprob: -16.875
    4. '```' → logprob: -16.875
    5. '

' → logprob: -17.625
    6. '   ' → logprob: -17.75
    7. '2' → logprob: -18.0
    8. '-' → logprob: -18.75
    9. ' -' → logprob: -19.4375
    10. '...' → logprob: -19.4375

Token 126: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015031944494694471
    2. ',-' → logprob: -6.626502990722656
    3. '-' → logprob: -8.876502990722656
    4. ' ,' → logprob: -10.251502990722656
    5. ' ,-' → logprob: -13.501502990722656
    6. ',
' → logprob: -15.126502990722656
    7. ' -' → logprob: -15.126502990722656
    8. '-,' → logprob: -16.251502990722656
    9. '```' → logprob: -16.376502990722656
    10. '1' → logprob: -16.501502990722656

Token 127: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.004621780011802912
    2. ' -' → logprob: -5.379621982574463
    3. ',' → logprob: -14.254621505737305
    4. ' ' → logprob: -15.004621505737305
    5. ',-' → logprob: -15.004621505737305
    6. '<|end|>' → logprob: -16.629621505737305
    7. '```' → logprob: -17.004621505737305
    8. ')' → logprob: -17.004621505737305
    9. '   ' → logprob: -17.129621505737305
    10. '1' → logprob: -18.004621505737305

Token 128: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.875
    3. '```' → logprob: -17.375
    4. ')' → logprob: -18.0
    5. '<|end|>' → logprob: -18.125
    6. ',' → logprob: -18.75
    7. '۱' → logprob: -19.125
    8. '
' → logprob: -19.25
    9. '１' → logprob: -19.625
    10. '):
' → logprob: -19.875

Token 129: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.49104154109954834
    2. '):
' → logprob: -0.9910415410995483
    3. '-' → logprob: -4.241041660308838
    4. ')' → logprob: -7.366041660308838
    5. ':' → logprob: -7.366041660308838
    6. ',' → logprob: -7.741041660308838
    7. ' ):' → logprob: -8.24104118347168
    8. '):-' → logprob: -9.11604118347168
    9. '):
' → logprob: -9.36604118347168
    10. ' ):
' → logprob: -9.49104118347168

Token 130: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6720969676971436
    2. ' fact' → logprob: -1.2970969676971436
    3. 'fact' → logprob: -1.5470969676971436
    4. '_fact' → logprob: -6.672097206115723
    5. '    
' → logprob: -7.547097206115723
    6. '	f' → logprob: -8.422097206115723
    7. ' 
' → logprob: -8.422097206115723
    8. '```' → logprob: -8.422097206115723
    9. '<|end|>' → logprob: -8.672097206115723
    10. 'Fact' → logprob: -9.047097206115723

Token 131: ' fact' (ID: 2840)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' (adapté à ' fact') → logprob: -0.0163898766040802
    2. ' fact' → logprob: -4.141389846801758
    3. '   ' → logprob: -8.141389846801758
    4. '_fact' → logprob: -10.016389846801758
    5. '```' → logprob: -12.016389846801758
    6. '.fact' → logprob: -12.266389846801758
    7. '
' → logprob: -12.391389846801758
    8. 'Fact' → logprob: -13.141389846801758
    9. '    
' → logprob: -13.891389846801758
    10. ' 
' → logprob: -14.891389846801758

Token 132: 'inv' (ID: 31086)
  Prédit: 'inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -9.849109119386412e-06
    2. 'i' → logprob: -13.000009536743164
    3. '_inv' → logprob: -13.125009536743164
    4. '[i' → logprob: -13.250009536743164
    5. 'inf' → logprob: -13.625009536743164
    6. '[' → logprob: -14.125009536743164
    7. 'in' → logprob: -14.750009536743164
    8. '   ' → logprob: -15.125009536743164
    9. 'inc' → logprob: -15.500009536743164
    10. 'inverse' → logprob: -15.500009536743164

Token 133: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0002738522016443312
    2. '[' → logprob: -8.250273704528809
    3. '[I' → logprob: -12.750273704528809
    4. ' [' → logprob: -12.875273704528809
    5. '[
' → logprob: -13.125273704528809
    6. '
' → logprob: -13.750273704528809
    7. '```' → logprob: -13.750273704528809
    8. '\[' → logprob: -14.125273704528809
    9. '<|end|>' → logprob: -15.500273704528809
    10. '=' → logprob: -15.625273704528809

Token 134: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014174441806972027
    2. ']' → logprob: -4.639174461364746
    3. ' =' → logprob: -5.514174461364746
    4. ']=' → logprob: -8.014174461364746
    5. ')' → logprob: -10.139174461364746
    6. ')=' → logprob: -11.889174461364746
    7. ' ]' → logprob: -14.389174461364746
    8. '=

' → logprob: -14.514174461364746
    9. ' ' → logprob: -15.139174461364746
    10. ',' → logprob: -15.389174461364746

Token 135: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -7.541112427134067e-05
    2. ' =' → logprob: -9.500075340270996
    3. '=

' → logprob: -14.875075340270996
    4. '=
' → logprob: -16.000076293945312
    5. '＝' → logprob: -18.500076293945312
    6. ')' → logprob: -18.625076293945312
    7. '=}' → logprob: -18.625076293945312
    8. ')=' → logprob: -18.750076293945312
    9. '=i' → logprob: -19.250076293945312
    10. '=(' → logprob: -19.250076293945312

Token 136: ' fact' (ID: 2840)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.005425374023616314
    2. '(f' → logprob: -5.505425453186035
    3. ' fact' → logprob: -6.755425453186035
    4. 'factor' → logprob: -9.380425453186035
    5. '_fact' → logprob: -10.255425453186035
    6. ' (' → logprob: -10.880425453186035
    7. '.fact' → logprob: -11.255425453186035
    8. '(' → logprob: -11.880425453186035
    9. 'f' → logprob: -12.255425453186035
    10. 'Fact' → logprob: -12.505425453186035

Token 137: 'inv' (ID: 31086)
  Prédit: 'inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.18086795508861542
    2. '[i' → logprob: -1.8058679103851318
    3. 'i' → logprob: -7.055868148803711
    4. '```' → logprob: -9.055868148803711
    5. '[' → logprob: -9.430868148803711
    6. 'fact' → logprob: -11.055868148803711
    7. '   ' → logprob: -12.180868148803711
    8. 'in' → logprob: -12.305868148803711
    9. '[-' → logprob: -12.680868148803711
    10. '(i' → logprob: -12.805868148803711

Token 138: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.0087516784551553e-05
    2. '[' → logprob: -11.62501049041748
    3. '[I' → logprob: -14.25001049041748
    4. '[
' → logprob: -15.37501049041748
    5. 'i' → logprob: -16.250009536743164
    6. '[next' → logprob: -16.750009536743164
    7. '[int' → logprob: -17.375009536743164
    8. '[idx' → logprob: -17.375009536743164
    9. '[++' → logprob: -17.875009536743164
    10. '\[' → logprob: -18.000009536743164

Token 139: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.008454885333776474
    2. '[i' → logprob: -5.1334547996521
    3. '[' → logprob: -6.0084547996521
    4. ' +' → logprob: -10.758455276489258
    5. 'i' → logprob: -11.258455276489258
    6. '+i' → logprob: -11.383455276489258
    7. '1' → logprob: -11.883455276489258
    8. '[
' → logprob: -13.383455276489258
    9. ']' → logprob: -13.633455276489258
    10. ']+' → logprob: -13.758455276489258

Token 140: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -15.000000953674316
    3. '```' → logprob: -15.500000953674316
    4. '   ' → logprob: -17.625
    5. '  ' → logprob: -18.25
    6. ']' → logprob: -19.0625
    7. '<|end|>' → logprob: -19.125
    8. '
' → logprob: -19.3125
    9. '১' → logprob: -19.625
    10. '0' → logprob: -19.6875

Token 141: ']' (ID: 60)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.25248563289642334
    2. ' *' → logprob: -1.5024856328964233
    3. ' ' → logprob: -9.002485275268555
    4. ']' → logprob: -9.002485275268555
    5. '*(' → logprob: -9.252485275268555
    6. ')' → logprob: -9.752485275268555
    7. 'multip' → logprob: -9.877485275268555
    8. '*i' → logprob: -10.877485275268555
    9. 'mul' → logprob: -10.877485275268555
    10. ' multip' → logprob: -11.127485275268555

Token 142: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.03441353514790535
    2. ' *' → logprob: -3.4094135761260986
    3. 'mul' → logprob: -8.40941333770752
    4. '*m' → logprob: -8.53441333770752
    5. '_mul' → logprob: -9.03441333770752
    6. ' mul' → logprob: -10.03441333770752
    7. 'multip' → logprob: -10.03441333770752
    8. '*i' → logprob: -10.15941333770752
    9. '**' → logprob: -11.03441333770752
    10. '*(' → logprob: -11.40941333770752

Token 143: ' (' (ID: 350)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.02642999403178692
    2. ' (' → logprob: -3.6514298915863037
    3. '(' → logprob: -9.151430130004883
    4. '(next' → logprob: -12.151430130004883
    5. '[i' → logprob: -12.401430130004883
    6. '(ii' → logprob: -12.651430130004883
    7. '(n' → logprob: -13.026430130004883
    8. 'i' → logprob: -13.526430130004883
    9. '{i' → logprob: -14.026430130004883
    10. '(len' → logprob: -14.276430130004883

Token 144: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0007129086880013347
    2. ' i' → logprob: -7.375712871551514
    3. '(i' → logprob: -9.375713348388672
    4. ' (' → logprob: -14.000713348388672
    5. '{i' → logprob: -15.000713348388672
    6. '[i' → logprob: -15.375713348388672
    7. '   ' → logprob: -16.375713348388672
    8. '	i' → logprob: -16.625713348388672
    9. '(' → logprob: -17.125713348388672
    10. ')i' → logprob: -18.250713348388672

Token 145: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00218583014793694
    2. ' +' → logprob: -6.127185821533203
    3. '+
' → logprob: -14.502185821533203
    4. '1' → logprob: -16.252185821533203
    5. ' +
' → logprob: -17.252185821533203
    6. '＋' → logprob: -17.377185821533203
    7. '+i' → logprob: -18.002185821533203
    8. '+

' → logprob: -18.377185821533203
    9. ' plus' → logprob: -19.252185821533203
    10. '()+' → logprob: -19.377185821533203

Token 146: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4498052223643754e-05
    2. '+' → logprob: -11.375014305114746
    3. ' ' → logprob: -12.750014305114746
    4. '```' → logprob: -15.750014305114746
    5. ' +' → logprob: -17.500015258789062
    6. '
' → logprob: -17.750015258789062
    7. '۱' → logprob: -19.125015258789062
    8. '   ' → logprob: -19.562515258789062
    9. '2' → logprob: -19.687515258789062
    10. '`' → logprob: -19.750015258789062

Token 147: ')' (ID: 8)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.4382014870643616
    2. ')' → logprob: -1.0632014274597168
    3. '%' → logprob: -4.938201427459717
    4. ' )' → logprob: -6.438201427459717
    5. ')%' → logprob: -7.313201427459717
    6. ' ' → logprob: -11.563201904296875
    7. ' ' → logprob: -11.938201904296875
    8. ' %)' → logprob: -12.938201904296875
    9. ' %
' → logprob: -14.688201904296875
    10. ']' → logprob: -14.688201904296875

Token 148: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.6931476593017578
    2. ' %' → logprob: -0.6931476593017578
    3. ' ' → logprob: -16.068147659301758
    4. ')%' → logprob: -16.443147659301758
    5. ')' → logprob: -16.693147659301758
    6. '```' → logprob: -16.693147659301758
    7. '%B' → logprob: -16.818147659301758
    8. ' %=' → logprob: -17.193147659301758
    9. '%c' → logprob: -17.443147659301758
    10. '%D' → logprob: -17.693147659301758

Token 149: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.0001584850688232109
    2. ' MOD' → logprob: -8.750158309936523
    3. '_MOD' → logprob: -19.125158309936523
    4. 'MO' → logprob: -19.875158309936523
    5. '.MOD' → logprob: -21.250158309936523
    6. 'MD' → logprob: -21.750158309936523
    7. '998' → logprob: -22.125158309936523
    8. ' ' → logprob: -22.250158309936523
    9. 'M' → logprob: -22.375158309936523
    10. '```' → logprob: -23.750158309936523

Token 150: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.019640007987618446
    2. ')' → logprob: -4.01963996887207
    3. '```' → logprob: -6.64463996887207
    4. '<|end|>' → logprob: -9.76963996887207
    5. ')
' → logprob: -10.26963996887207
    6. '``' → logprob: -10.51963996887207
    7. '#' → logprob: -10.64463996887207
    8. ' def' → logprob: -10.89463996887207
    9. ')(
' → logprob: -11.89463996887207
    10. 'from' → logprob: -12.64463996887207

Token 151: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.011092156171798706
    2. ')' → logprob: -4.636092185974121
    3. '@' → logprob: -6.761092185974121
    4. '```' → logprob: -8.886092185974121
    5. '#' → logprob: -12.011092185974121
    6. '+' → logprob: -12.011092185974121
    7. '(' → logprob: -12.261092185974121
    8. ' def' → logprob: -12.386092185974121
    9. '<|end|>' → logprob: -12.511092185974121
    10. ':def' → logprob: -12.761092185974121

Token 152: ' n' (ID: 297)
  Prédit: ' comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' comb' → logprob: -0.13838955760002136
    2. ' n' → logprob: -2.5133895874023438
    3. 'comb' → logprob: -3.7633895874023438
    4. 'n' → logprob: -4.138389587402344
    5. ' cmb' → logprob: -5.638389587402344
    6. 'C' → logprob: -6.013389587402344
    7. ' combination' → logprob: -6.888389587402344
    8. ' mod' → logprob: -8.013389587402344
    9. ' C' → logprob: -8.138389587402344
    10. 'cmb' → logprob: -8.638389587402344

Token 153: 'cr' (ID: 798)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.5843619108200073
    2. 'Cr' → logprob: -0.8343619108200073
    3. 'def' → logprob: -5.084362030029297
    4. '_choose' → logprob: -6.959362030029297
    5. 'cr' → logprob: -7.209362030029297
    6. 'a' → logprob: -9.459362030029297
    7. 'c' → logprob: -9.584362030029297
    8. '_' → logprob: -9.834362030029297
    9. '_cr' → logprob: -9.959362030029297
    10. '_C' → logprob: -10.459362030029297

Token 154: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.38830292224884033
    2. '(n' → logprob: -1.1383029222488403
    3. '(k' → logprob: -7.388302803039551
    4. '(i' → logprob: -7.763302803039551
    5. '(x' → logprob: -8.26330280303955
    6. '(a' → logprob: -9.88830280303955
    7. '(N' → logprob: -10.76330280303955
    8. ' (' → logprob: -10.76330280303955
    9. '(
' → logprob: -11.38830280303955
    10. '(`' → logprob: -12.63830280303955

Token 155: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002100965939462185
    2. ' ,' → logprob: -9.50020980834961
    3. ',k' → logprob: -9.50020980834961
    4. ',n' → logprob: -9.87520980834961
    5. ',r' → logprob: -13.25020980834961
    6. ',i' → logprob: -13.75020980834961
    7. '‌,' → logprob: -14.12520980834961
    8. ',j' → logprob: -14.12520980834961
    9. ',x' → logprob: -14.12520980834961
    10. ',K' → logprob: -14.12520980834961

Token 156: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.07921098172664642
    2. 'k' → logprob: -2.5792109966278076
    3. ' r' → logprob: -8.079211235046387
    4. ' k' → logprob: -11.579211235046387
    5. ' ' → logprob: -13.704211235046387
    6. '
' → logprob: -15.204211235046387
    7. '```' → logprob: -15.829211235046387
    8. '  ' → logprob: -15.954211235046387
    9. '   ' → logprob: -16.07921028137207
    10. 'm' → logprob: -17.20421028137207

Token 157: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00029041420202702284
    2. ')' → logprob: -8.250290870666504
    3. '):
' → logprob: -10.500290870666504
    4. ' ):' → logprob: -14.125290870666504
    5. ':' → logprob: -14.625290870666504
    6. '):
' → logprob: -15.375290870666504
    7. ')：' → logprob: -16.375289916992188
    8. ',' → logprob: -17.625289916992188
    9. '}:' → logprob: -17.625289916992188
    10. '=' → logprob: -18.000289916992188

Token 158: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0597190335392952
    2. '   ' → logprob: -3.8097190856933594
    3. '<|end|>' → logprob: -4.309719085693359
    4. ':return' → logprob: -4.934719085693359
    5. ' return' → logprob: -5.059719085693359
    6. '):' → logprob: -5.059719085693359
    7. ')' → logprob: -6.934719085693359
    8. ' ' → logprob: -8.05971908569336
    9. ':
' → logprob: -8.43471908569336
    10. '(' → logprob: -8.93471908569336

Token 159: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.8595123291015625
    2. 'return' → logprob: -1.1095123291015625
    3. ' if' → logprob: -1.6095123291015625
    4. ' return' → logprob: -3.1095123291015625
    5. '   ' → logprob: -6.1095123291015625
    6. ' 
' → logprob: -10.234512329101562
    7. ' ' → logprob: -11.359512329101562
    8. ':return' → logprob: -11.609512329101562
    9. '    ' → logprob: -11.734512329101562
    10. '	return' → logprob: -12.359512329101562

Token 160: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.2813977897167206
    2. 'r' → logprob: -1.406397819519043
    3. ' n' → logprob: -8.656397819519043
    4. 'n' → logprob: -9.656397819519043
    5. '0' → logprob: -12.656397819519043
    6. ' not' → logprob: -12.906397819519043
    7. ' ' → logprob: -13.031397819519043
    8. '	r' → logprob: -14.406397819519043
    9. ' ' → logprob: -14.656397819519043
    10. '   ' → logprob: -15.406397819519043

Token 161: ' <' (ID: 464)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.11296318471431732
    2. ' >' → logprob: -2.2379631996154785
    3. '<' → logprob: -9.23796272277832
    4. ' <' → logprob: -11.98796272277832
    5. '==' → logprob: -11.98796272277832
    6. '">' → logprob: -11.98796272277832
    7. '0' → logprob: -11.98796272277832
    8. '=' → logprob: -12.86296272277832
    9. ' ' → logprob: -12.86296272277832
    10. '><' → logprob: -13.36296272277832

Token 162: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.286852345103398e-05
    2. ' ' → logprob: -10.375042915344238
    3. '=' → logprob: -11.375042915344238
    4. '۰' → logprob: -17.000041961669922
    5. '```' → logprob: -17.125041961669922
    6. ' =' → logprob: -18.250041961669922
    7. 'or' → logprob: -18.687541961669922
    8. '０' → logprob: -18.750041961669922
    9. '_' → logprob: -19.500041961669922
    10. '1' → logprob: -19.562541961669922

Token 163: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.8624639324116288e-06
    2. '=' → logprob: -13.750001907348633
    3. ' ' → logprob: -14.375001907348633
    4. 'or' → logprob: -16.375001907348633
    5. '```' → logprob: -17.875001907348633
    6. '۰' → logprob: -18.625001907348633
    7. ' or' → logprob: -19.375001907348633
    8. ' =' → logprob: -20.500001907348633
    9. '1' → logprob: -20.625001907348633
    10. '  ' → logprob: -20.937501907348633

Token 164: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.005235648714005947
    2. 'or' → logprob: -5.25523567199707
    3. '	or' → logprob: -13.63023567199707
    4. '<|end|>' → logprob: -15.38023567199707
    5. ')' → logprob: -15.63023567199707
    6. ' ' → logprob: -16.50523567199707
    7. ' orun' → logprob: -16.88023567199707
    8. 'n' → logprob: -17.25523567199707
    9. '0' → logprob: -17.38023567199707
    10. ' или' → logprob: -17.50523567199707

Token 165: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0007276826072484255
    2. ' r' → logprob: -7.750727653503418
    3. 'n' → logprob: -8.125727653503418
    4. ' n' → logprob: -13.875727653503418
    5. '<|end|>' → logprob: -16.875728607177734
    6. '   ' → logprob: -17.625728607177734
    7. '	r' → logprob: -17.625728607177734
    8. '>' → logprob: -18.875728607177734
    9. '<|end|>' → logprob: -19.125728607177734
    10. ' ' → logprob: -19.125728607177734

Token 166: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.3869036138057709
    2. ' >' → logprob: -1.1369036436080933
    3. ' or' → logprob: -11.261903762817383
    4. ' n' → logprob: -11.386903762817383
    5. 'or' → logprob: -12.511903762817383
    6. 'n' → logprob: -12.636903762817383
    7. '>K' → logprob: -15.511903762817383
    8. '">' → logprob: -15.636903762817383
    9. ' ' → logprob: -15.761903762817383
    10. '```' → logprob: -16.011903762817383

Token 167: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.01815006136894226
    2. ' n' → logprob: -4.0181498527526855
    3. '	n' → logprob: -15.893150329589844
    4. ')n' → logprob: -17.018150329589844
    5. '<|end|>' → logprob: -18.018150329589844
    6. '[n' → logprob: -18.518150329589844
    7. '(n' → logprob: -18.518150329589844
    8. ' ' → logprob: -19.143150329589844
    9. '```' → logprob: -19.268150329589844
    10. '_n' → logprob: -19.393150329589844

Token 168: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07034695893526077
    2. ':return' → logprob: -2.8203470706939697
    3. ':
' → logprob: -4.945346832275391
    4. ' or' → logprob: -6.820346832275391
    5. '   ' → logprob: -9.69534683227539
    6. '):' → logprob: -10.82034683227539
    7. ')return' → logprob: -11.44534683227539
    8. ')' → logprob: -11.44534683227539
    9. ' return' → logprob: -11.57034683227539
    10. ' :' → logprob: -11.82034683227539

Token 169: '       ' (ID: 309)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.6615402698516846
    2. '   ' → logprob: -1.0365402698516846
    3. 'return' → logprob: -2.1615402698516846
    4. '0' → logprob: -5.0365400314331055
    5. ' None' → logprob: -5.9115400314331055
    6. 'None' → logprob: -6.2865400314331055
    7. '1' → logprob: -6.9115400314331055
    8. ':return' → logprob: -7.4115400314331055
    9. ' ' → logprob: -7.9115400314331055
    10. 'False' → logprob: -8.036540031433105

Token 170: ' return' (ID: 622)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2531302869319916
    2. 'return' (adapté à ' return') → logprob: -1.503130316734314
    3. ' return' → logprob: -6.7531304359436035
    4. '
' → logprob: -11.253129959106445
    5. '   ' → logprob: -11.253129959106445
    6. ' ' → logprob: -12.003129959106445
    7. '1' → logprob: -15.253129959106445
    8. ':return' → logprob: -15.503129959106445
    9. '```' → logprob: -15.503129959106445
    10. 'yield' → logprob: -15.628129959106445

Token 171: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.375001907348633
    3. '۰' → logprob: -21.750001907348633
    4. '   ' → logprob: -23.750001907348633
    5. ' ' → logprob: -24.250001907348633
    6. '```' → logprob: -24.250001907348633
    7. '０' → logprob: -24.375001907348633
    8. '
' → logprob: -24.500001907348633
    9. ' 
' → logprob: -24.875001907348633
    10. '000' → logprob: -25.250001907348633

Token 172: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -18.375
    3. '۰' → logprob: -22.0
    4. '```' → logprob: -22.875
    5. '000' → logprob: -23.125
    6. '00' → logprob: -23.75
    7. '
' → logprob: -24.125
    8. '０' → logprob: -24.25
    9. '   ' → logprob: -25.0
    10. '০' → logprob: -25.5

Token 173: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.548156201839447
    2. '<|end|>' → logprob: -1.7981562614440918
    3. '   ' → logprob: -1.9231562614440918
    4. ':' → logprob: -2.548156261444092
    5. ':return' → logprob: -3.923156261444092
    6. ')return' → logprob: -5.923156261444092
    7. '):' → logprob: -6.298156261444092
    8. '<|end|>' → logprob: -6.423156261444092
    9. ' return' → logprob: -7.048156261444092
    10. '.' → logprob: -7.173156261444092

Token 174: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0008477445808239281
    2. ')' → logprob: -7.625847816467285
    3. '<|end|>' → logprob: -9.250847816467285
    4. '```' → logprob: -9.375847816467285
    5. ' return' → logprob: -9.500847816467285
    6. '    
' → logprob: -10.625847816467285
    7. 'return' → logprob: -11.500847816467285
    8. '	return' → logprob: -11.500847816467285
    9. '  ' → logprob: -11.500847816467285
    10. ':return' → logprob: -11.750847816467285

Token 175: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011968196369707584
    2. 'return' (adapté à ' return') → logprob: -5.01196813583374
    3. ' return' → logprob: -5.26196813583374
    4. '	return' → logprob: -10.636968612670898
    5. ' ' → logprob: -11.886968612670898
    6. '    
' → logprob: -12.261968612670898
    7. 'n' → logprob: -12.261968612670898
    8. '  ' → logprob: -12.511968612670898
    9. '    ' → logprob: -13.511968612670898
    10. ')' → logprob: -13.636968612670898

Token 176: ' fact' (ID: 2840)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.012527893297374249
    2. ' fact' → logprob: -4.387527942657471
    3. '(f' → logprob: -11.637527465820312
    4. ' (' → logprob: -12.512527465820312
    5. '_fact' → logprob: -12.887527465820312
    6. '.fact' → logprob: -13.512527465820312
    7. 'factor' → logprob: -14.387527465820312
    8. 'facts' → logprob: -14.762527465820312
    9. 'Fact' → logprob: -15.137527465820312
    10. '
' → logprob: -16.012527465820312

Token 177: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -5.872261317563243e-05
    2. '[' → logprob: -10.375059127807617
    3. 'n' → logprob: -10.875059127807617
    4. '[r' → logprob: -11.875059127807617
    5. '[
' → logprob: -14.875059127807617
    6. '[-' → logprob: -15.000059127807617
    7. '[N' → logprob: -15.875059127807617
    8. '```' → logprob: -16.125059127807617
    9. '(n' → logprob: -16.375059127807617
    10. '[f' → logprob: -16.500059127807617

Token 178: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0003812217037193477
    2. ']*' → logprob: -7.875380992889404
    3. ' ]' → logprob: -14.625381469726562
    4. '[r' → logprob: -15.375381469726562
    5. ']
' → logprob: -15.625381469726562
    6. '[' → logprob: -16.125381469726562
    7. '[i' → logprob: -16.375381469726562
    8. '   ' → logprob: -17.000381469726562
    9. '[n' → logprob: -17.125381469726562
    10. '```' → logprob: -17.625381469726562

Token 179: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.3507359027862549
    2. ' *' → logprob: -1.2257359027862549
    3. '[' → logprob: -7.600735664367676
    4. ' ' → logprob: -7.725735664367676
    5. '
' → logprob: -8.225735664367676
    6. 'mul' → logprob: -8.600735664367676
    7. '```' → logprob: -8.725735664367676
    8. '**' → logprob: -8.975735664367676
    9. '   ' → logprob: -8.975735664367676
    10. '[i' → logprob: -9.725735664367676

Token 180: ' fact' (ID: 2840)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -3.249780638725497e-05
    2. ' fact' → logprob: -10.375032424926758
    3. '(f' → logprob: -14.000032424926758
    4. 'factor' → logprob: -15.875032424926758
    5. '_fact' → logprob: -16.000032424926758
    6. '.fact' → logprob: -16.875032424926758
    7. 'Fact' → logprob: -17.375032424926758
    8. 'fac' → logprob: -17.500032424926758
    9. 'facts' → logprob: -19.250032424926758
    10. 'f' → logprob: -20.000032424926758

Token 181: 'inv' (ID: 31086)
  Prédit: 'inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -1.5048530030981055e-06
    2. '[r' → logprob: -14.375001907348633
    3. '```' → logprob: -14.875001907348633
    4. 'fact' → logprob: -15.125001907348633
    5. '[' → logprob: -16.125001907348633
    6. '[n' → logprob: -16.500001907348633
    7. '_inv' → logprob: -16.875001907348633
    8. 'in' → logprob: -17.250001907348633
    9. 'inf' → logprob: -17.750001907348633
    10. 'inverse' → logprob: -19.125001907348633

Token 182: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -3.292907877039397e-06
    2. '[' → logprob: -13.37500286102295
    3. '[n' → logprob: -13.87500286102295
    4. 'r' → logprob: -14.25000286102295
    5. '[
' → logprob: -17.125003814697266
    6. '(r' → logprob: -18.625003814697266
    7. ' [' → logprob: -18.750003814697266
    8. '	r' → logprob: -19.375003814697266
    9. '```' → logprob: -19.875003814697266
    10. '

' → logprob: -20.625003814697266

Token 183: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -4.1557283111615106e-05
    2. ']%' → logprob: -10.375041961669922
    3. ' ]' → logprob: -12.250041961669922
    4. ']*' → logprob: -12.875041961669922
    5. '%' → logprob: -13.125041961669922
    6. '*' → logprob: -15.250041961669922
    7. '']' → logprob: -15.750041961669922
    8. ')' → logprob: -16.375041961669922
    9. '[' → logprob: -16.625041961669922
    10. '   ' → logprob: -16.875041961669922

Token 184: ' %' (ID: 1851)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.06249616667628288
    2. '*' → logprob: -3.3124961853027344
    3. '%' → logprob: -3.9374961853027344
    4. '   ' → logprob: -6.312496185302734
    5. ' %' → logprob: -6.937496185302734
    6. '[' → logprob: -7.437496185302734
    7. '```' → logprob: -7.937496185302734
    8. ' ' → logprob: -8.187496185302734
    9. '<|end|>' → logprob: -8.437496185302734
    10. ' ' → logprob: -8.687496185302734

Token 185: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.0007124318508431315
    2. ' MOD' → logprob: -7.2507123947143555
    3. '_MOD' → logprob: -13.750712394714355
    4. '998' → logprob: -14.125712394714355
    5. '`' → logprob: -15.375712394714355
    6. '.MOD' → logprob: -15.500712394714355
    7. '```' → logprob: -16.125713348388672
    8. ' ' → logprob: -16.625713348388672
    9. 'MO' → logprob: -17.000713348388672
    10. 'mod' → logprob: -17.750713348388672

Token 186: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.04025036469101906
    2. '*' → logprob: -3.290250301361084
    3. 'fact' → logprob: -6.540250301361084
    4. ' fact' → logprob: -7.415250301361084
    5. '```' → logprob: -9.165250778198242
    6. 'mul' → logprob: -11.040250778198242
    7. '   ' → logprob: -11.040250778198242
    8. '`' → logprob: -11.665250778198242
    9. ' ' → logprob: -12.540250778198242
    10. ' mul' → logprob: -13.290250778198242

Token 187: ' fact' (ID: 2840)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.00029625516617670655
    2. ' fact' → logprob: -8.125296592712402
    3. 'factor' → logprob: -15.500296592712402
    4. '_fact' → logprob: -16.875295639038086
    5. '.fact' → logprob: -16.875295639038086
    6. 'Fact' → logprob: -19.125295639038086
    7. '
' → logprob: -19.500295639038086
    8. 'fac' → logprob: -19.500295639038086
    9. 'facts' → logprob: -19.625295639038086
    10. '```' → logprob: -20.000295639038086

Token 188: 'inv' (ID: 31086)
  Prédit: 'inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: 0.0
    2. '[' → logprob: -18.5
    3. '_inv' → logprob: -18.5
    4. '[n' → logprob: -18.75
    5. '```' → logprob: -18.75
    6. 'inf' → logprob: -20.0
    7. ' inv' → logprob: -20.625
    8. '.inv' → logprob: -21.25
    9. '(inv' → logprob: -21.25
    10. 'INV' → logprob: -21.375

Token 189: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -3.128163257315464e-07
    2. 'n' → logprob: -15.5
    3. '[' → logprob: -16.25
    4. '(n' → logprob: -17.125
    5. '[r' → logprob: -18.5
    6. ' [' → logprob: -18.75
    7. '[
' → logprob: -19.375
    8. '	n' → logprob: -20.25
    9. '```' → logprob: -20.25
    10. '   ' → logprob: -20.75

Token 190: ' -' (ID: 533)
  Prédit: '-r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-r' → logprob: -0.010764817707240582
    2. ' -' → logprob: -4.8857645988464355
    3. '-' → logprob: -5.7607645988464355
    4. '-re' → logprob: -13.010765075683594
    5. '-R' → logprob: -14.260765075683594
    6. '-risk' → logprob: -14.385765075683594
    7. '-ra' → logprob: -14.885765075683594
    8. '[r' → logprob: -14.885765075683594
    9. 'r' → logprob: -15.760765075683594
    10. '-р' → logprob: -16.385765075683594

Token 191: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -2.339278580620885e-06
    2. ' r' → logprob: -13.000001907348633
    3. '	r' → logprob: -18.125001907348633
    4. 'р' → logprob: -19.625001907348633
    5. '   ' → logprob: -20.125001907348633
    6. ' ' → logprob: -20.875001907348633
    7. '[r' → logprob: -21.000001907348633
    8. ']' → logprob: -21.125001907348633
    9. '­r' → logprob: -21.250001907348633
    10. '_r' → logprob: -22.125001907348633

Token 192: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00026968008023686707
    2. ']%' → logprob: -8.500269889831543
    3. ' ]' → logprob: -9.625269889831543
    4. '%' → logprob: -16.750268936157227
    5. ']
' → logprob: -16.875268936157227
    6. '']' → logprob: -17.000268936157227
    7. '}' → logprob: -17.125268936157227
    8. ']>' → logprob: -18.250268936157227
    9. '[' → logprob: -18.250268936157227
    10. '])' → logprob: -18.375268936157227

Token 193: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.07889463007450104
    2. ' %' → logprob: -2.57889461517334
    3. ')%' → logprob: -13.45389461517334
    4. '```' → logprob: -13.82889461517334
    5. ')' → logprob: -14.32889461517334
    6. ' ' → logprob: -14.57889461517334
    7. ' ' → logprob: -15.20389461517334
    8. '[' → logprob: -15.20389461517334
    9. ']%' → logprob: -15.45389461517334
    10. '%n' → logprob: -15.45389461517334

Token 194: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -1.306760805164231e-05
    2. ' MOD' → logprob: -11.25001335144043
    3. '_MOD' → logprob: -18.62501335144043
    4. 'MO' → logprob: -19.12501335144043
    5. '.MOD' → logprob: -22.00001335144043
    6. 'MODE' → logprob: -22.75001335144043
    7. 'MD' → logprob: -23.50001335144043
    8. 'M' → logprob: -23.87501335144043
    9. ' ' → logprob: -24.25001335144043
    10. 'MODULE' → logprob: -24.25001335144043

Token 195: '

' (ID: 279)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.48976925015449524
    2. 'def' → logprob: -1.6147692203521729
    3. '(' → logprob: -3.364769220352173
    4. '*' → logprob: -3.489769220352173
    5. '
' → logprob: -3.614769220352173
    6. '@' → logprob: -3.864769220352173
    7. '+' → logprob: -4.239769458770752
    8. '(
' → logprob: -4.239769458770752
    9. '\n' → logprob: -4.489769458770752
    10. '#' → logprob: -5.114769458770752

Token 196: 'def' (ID: 1314)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' → logprob: -0.23337814211845398
    2. 'def' → logprob: -2.2333781719207764
    3. '(' → logprob: -2.6083781719207764
    4. ')' → logprob: -4.233377933502197
    5. 'd' → logprob: -4.858377933502197
    6. '(
' → logprob: -6.483377933502197
    7. '#' → logprob: -6.733377933502197
    8. 'n' → logprob: -7.608377933502197
    9. '\' → logprob: -7.608377933502197
    10. '[' → logprob: -8.608378410339355

Token 197: ' n' (ID: 297)
  Prédit: ' solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' solve' → logprob: -1.030160665512085
    2. ' main' → logprob: -1.280160665512085
    3. ' pow' → logprob: -2.155160665512085
    4. ' count' → logprob: -2.530160665512085
    5. 'pow' → logprob: -3.280160665512085
    6. ' power' → logprob: -3.405160665512085
    7. 'solve' → logprob: -3.405160665512085
    8. ' dp' → logprob: -3.655160665512085
    9. ' comb' → logprob: -4.780160903930664
    10. 'dp' → logprob: -5.530160903930664

Token 198: 'hr' (ID: 2012)
  Prédit: 'cr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cr' → logprob: -0.0047049494460225105
    2. 'c' → logprob: -6.00470495223999
    3. 'pow' → logprob: -8.129704475402832
    4. 'th' → logprob: -8.504704475402832
    5. 'choose' → logprob: -8.754704475402832
    6. 'r' → logprob: -9.004704475402832
    7. 'pr' → logprob: -9.129704475402832
    8. 'Cr' → logprob: -9.129704475402832
    9. 'ck' → logprob: -9.254704475402832
    10. '_cr' → logprob: -9.629704475402832

Token 199: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0004898841143585742
    2. '(' → logprob: -7.625489711761475
    3. ' (' → logprob: -15.000490188598633
    4. '(k' → logprob: -15.000490188598633
    5. '(N' → logprob: -15.250490188598633
    6. '(r' → logprob: -15.500490188598633
    7. 'def' → logprob: -15.625490188598633
    8. '(a' → logprob: -15.750490188598633
    9. 'n' → logprob: -16.375490188598633
    10. '(x' → logprob: -16.625490188598633

Token 200: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0037045928183943033
    2. ',n' → logprob: -6.37870454788208
    3. ' ,' → logprob: -7.12870454788208
    4. ',r' → logprob: -7.12870454788208
    5. ',k' → logprob: -7.87870454788208
    6. '(n' → logprob: -11.628705024719238
    7. 'n' → logprob: -13.003705024719238
    8. 'r' → logprob: -13.253705024719238
    9. ',K' → logprob: -13.503705024719238
    10. ',
' → logprob: -13.878705024719238

Token 201: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0003277176001574844
    2. ' r' → logprob: -8.250328063964844
    3. 'k' → logprob: -9.625328063964844
    4. 'n' → logprob: -15.000328063964844
    5. ' k' → logprob: -17.500328063964844
    6. '
' → logprob: -17.625328063964844
    7. '   ' → logprob: -18.000328063964844
    8. ')' → logprob: -18.125328063964844
    9. '	r' → logprob: -19.000328063964844
    10. ' ' → logprob: -19.250328063964844

Token 202: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00043698702938854694
    2. ')' → logprob: -8.375436782836914
    3. '):
' → logprob: -8.625436782836914
    4. ' ):' → logprob: -10.875436782836914
    5. '=' → logprob: -12.500436782836914
    6. ':' → logprob: -13.125436782836914
    7. ']:' → logprob: -14.500436782836914
    8. '**' → logprob: -14.875436782836914
    9. '):
' → logprob: -15.000436782836914
    10. ')：' → logprob: -15.625436782836914

Token 203: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4613392651081085
    2. '(n' → logprob: -1.5863392353057861
    3. '   ' → logprob: -2.211339235305786
    4. ' return' → logprob: -3.961339235305786
    5. ',' → logprob: -4.461339473724365
    6. 'n' → logprob: -5.086339473724365
    7. ' n' → logprob: -5.586339473724365
    8. '):' → logprob: -5.836339473724365
    9. ':return' → logprob: -6.211339473724365
    10. '.' → logprob: -6.836339473724365

Token 204: ' if' (ID: 538)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.001995131839066744
    2. 'n' → logprob: -7.001995086669922
    3. ' return' → logprob: -7.126995086669922
    4. 'if' (adapté à ' if') → logprob: -8.376995086669922
    5. '   ' → logprob: -10.126995086669922
    6. ' n' → logprob: -12.876995086669922
    7. '{return' → logprob: -13.251995086669922
    8. ' if' → logprob: -13.501995086669922
    9. '	return' → logprob: -13.751995086669922
    10. 'ret' → logprob: -13.876995086669922

Token 205: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.32011866569519043
    2. 'r' → logprob: -1.5701186656951904
    3. ' n' → logprob: -2.9451186656951904
    4. ' r' → logprob: -4.3201189041137695
    5. '0' → logprob: -11.82011890411377
    6. ' ' → logprob: -12.82011890411377
    7. '	n' → logprob: -13.38261890411377
    8. '(n' → logprob: -13.69511890411377
    9. '```' → logprob: -13.88261890411377
    10. ')' → logprob: -14.07011890411377

Token 206: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.019035033881664276
    2. ' ==' → logprob: -4.0190348625183105
    3. '=' → logprob: -7.7690348625183105
    4. '<=' → logprob: -7.8940348625183105
    5. '<|end|>' → logprob: -10.144035339355469
    6. '<' → logprob: -11.644035339355469
    7. '==
' → logprob: -12.019035339355469
    8. ' <=' → logprob: -12.144035339355469
    9. ')' → logprob: -12.269035339355469
    10. ')==' → logprob: -12.394035339355469

Token 207: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007916436879895627
    2. ' ' → logprob: -7.375791549682617
    3. '-' → logprob: -8.750791549682617
    4. ' -' → logprob: -12.125791549682617
    5. 'K' → logprob: -14.875791549682617
    6. '1' → logprob: -15.375791549682617
    7. 'None' → logprob: -15.375791549682617
    8. '  ' → logprob: -16.375791549682617
    9. 'r' → logprob: -16.750791549682617
    10. 'n' → logprob: -16.875791549682617

Token 208: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00020056030189152807
    2. ' ' → logprob: -8.875200271606445
    3. '-' → logprob: -9.750200271606445
    4. ' -' → logprob: -13.750200271606445
    5. '1' → logprob: -14.375200271606445
    6. 'K' → logprob: -14.625200271606445
    7. 'r' → logprob: -17.250200271606445
    8. 'n' → logprob: -17.250200271606445
    9. '  ' → logprob: -17.375200271606445
    10. '   ' → logprob: -17.562700271606445

Token 209: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.38522371649742126
    2. ' and' → logprob: -1.2602237462997437
    3. ':
' → logprob: -3.760223627090454
    4. ':' → logprob: -5.385223865509033
    5. ':return' → logprob: -5.385223865509033
    6. '   ' → logprob: -5.635223865509033
    7. ' ' → logprob: -10.260223388671875
    8. 'return' → logprob: -10.760223388671875
    9. ' or' → logprob: -10.885223388671875
    10. '	and' → logprob: -12.260223388671875

Token 210: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.04860825836658478
    2. ' r' → logprob: -3.0486083030700684
    3. 'n' → logprob: -11.42360782623291
    4. '0' → logprob: -11.92360782623291
    5. ' n' → logprob: -13.54860782623291
    6. ' ' → logprob: -13.79860782623291
    7. '	r' → logprob: -14.92360782623291
    8. '(r' → logprob: -15.54860782623291
    9. ' not' → logprob: -15.67360782623291
    10. '   ' → logprob: -16.611108779907227

Token 211: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.25320273637771606
    2. ' ==' → logprob: -1.5032026767730713
    3. '=' → logprob: -6.87820291519165
    4. '<' → logprob: -9.503202438354492
    5. '>' → logprob: -10.003202438354492
    6. '<|end|>' → logprob: -10.503202438354492
    7. ' ' → logprob: -11.128202438354492
    8. ' <' → logprob: -11.128202438354492
    9. ' >' → logprob: -11.253202438354492
    10. '0' → logprob: -11.503202438354492

Token 212: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0010332842357456684
    2. ' ' → logprob: -6.876033306121826
    3. 'r' → logprob: -16.001033782958984
    4. '   ' → logprob: -16.251033782958984
    5. '1' → logprob: -16.501033782958984
    6. '  ' → logprob: -16.501033782958984
    7. ')' → logprob: -17.376033782958984
    8. ' r' → logprob: -17.501033782958984
    9. '۰' → logprob: -17.813533782958984
    10. '-' → logprob: -17.876033782958984

Token 213: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00020520923135336488
    2. ' ' → logprob: -8.500205039978027
    3. 'r' → logprob: -14.625205039978027
    4. '1' → logprob: -15.250205039978027
    5. '   ' → logprob: -15.250205039978027
    6. '-' → logprob: -15.312705039978027
    7. '  ' → logprob: -16.312705993652344
    8. '۰' → logprob: -16.312705993652344
    9. 'K' → logprob: -16.562705993652344
    10. ' r' → logprob: -17.125205993652344

Token 214: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5837172269821167
    2. ':
' → logprob: -0.8337172269821167
    3. '   ' → logprob: -5.458717346191406
    4. ':return' → logprob: -5.708717346191406
    5. '):
' → logprob: -9.333717346191406
    6. '       ' → logprob: -10.458717346191406
    7. ' or' → logprob: -11.458717346191406
    8. ' return' → logprob: -12.333717346191406
    9. ' ' → logprob: -12.458717346191406
    10. ':
' → logprob: -12.583717346191406

Token 215: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003609101288020611
    2. ' return' → logprob: -5.8786091804504395
    3. '       ' → logprob: -7.5036091804504395
    4. '<|end|>' → logprob: -9.628608703613281
    5. ' ' → logprob: -10.003608703613281
    6. 'return' → logprob: -10.753608703613281
    7. '1' → logprob: -10.878608703613281
    8. ',' → logprob: -10.878608703613281
    9. ':return' → logprob: -10.878608703613281
    10. ':' → logprob: -11.253608703613281

Token 216: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.5058205723762512
    2. 'return' (adapté à ' return') → logprob: -1.1308205127716064
    3. '   ' → logprob: -2.6308205127716064
    4. '1' → logprob: -7.1308207511901855
    5. '
' → logprob: -7.5058207511901855
    6. '       ' → logprob: -8.005820274353027
    7. ' ' → logprob: -8.505820274353027
    8. '0' → logprob: -9.255820274353027
    9. '    
' → logprob: -9.755820274353027
    10. '	return' → logprob: -10.005820274353027

Token 217: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.531315314830863e-06
    2. ' ' → logprob: -12.625003814697266
    3. '   ' → logprob: -16.125003814697266
    4. '0' → logprob: -19.125003814697266
    5. '  ' → logprob: -19.375003814697266
    6. '
' → logprob: -20.875003814697266
    7. '```' → logprob: -21.125003814697266
    8. '۱' → logprob: -21.500003814697266
    9. ' ' → logprob: -21.625003814697266
    10. 'def' → logprob: -21.687503814697266

Token 218: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. '0' → logprob: -16.0
    3. ' ' → logprob: -16.25
    4. '   ' → logprob: -17.5
    5. '```' → logprob: -19.125
    6. '۱' → logprob: -19.6875
    7. '
' → logprob: -20.1875
    8. '১' → logprob: -20.5625
    9. '  ' → logprob: -20.625
    10. '(' → logprob: -21.3125

Token 219: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002094826428219676
    2. ' ' → logprob: -7.627094745635986
    3. '    
' → logprob: -7.877094745635986
    4. '
' → logprob: -7.877094745635986
    5. ')' → logprob: -8.502095222473145
    6. ' 
' → logprob: -9.002095222473145
    7. ' return' → logprob: -9.502095222473145
    8. '<|end|>' → logprob: -9.502095222473145
    9. '  ' → logprob: -9.627095222473145
    10. ',' → logprob: -10.252095222473145

Token 220: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0024126346688717604
    2. ' 
' → logprob: -7.127412796020508
    3. '    
' → logprob: -7.877412796020508
    4. ' return' → logprob: -8.002412796020508
    5. ':' → logprob: -8.627412796020508
    6. ')' → logprob: -9.002412796020508
    7. ' ' → logprob: -9.002412796020508
    8. '
' → logprob: -9.502412796020508
    9. ':return' → logprob: -10.002412796020508
    10. '	return' → logprob: -10.252412796020508

Token 221: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.20905141532421112
    2. 'if' → logprob: -1.7090513706207275
    3. ' return' → logprob: -5.709051609039307
    4. ' if' → logprob: -6.084051609039307
    5. '   ' → logprob: -6.209051609039307
    6. '	return' → logprob: -13.834051132202148
    7. 'elif' → logprob: -13.834051132202148
    8. 'def' → logprob: -14.834051132202148
    9. '    
' → logprob: -15.459051132202148
    10. '
' → logprob: -16.33405113220215

Token 222: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -5.824579784530215e-05
    2. 'fact' → logprob: -10.1250581741333
    3. ' n' → logprob: -11.0000581741333
    4. '(n' → logprob: -14.6250581741333
    5. '   ' → logprob: -15.0000581741333
    6. '0' → logprob: -15.3750581741333
    7. '
' → logprob: -16.375059127807617
    8. '1' → logprob: -16.750059127807617
    9. ' fact' → logprob: -17.250059127807617
    10. '	n' → logprob: -17.250059127807617

Token 223: 'cr' (ID: 798)
  Prédit: 'cr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cr' → logprob: -0.0009592238930054009
    2. '+' → logprob: -7.500959396362305
    3. ' +' → logprob: -8.125959396362305
    4. 'hr' → logprob: -9.500959396362305
    5. '+r' → logprob: -11.000959396362305
    6. '+n' → logprob: -11.875959396362305
    7. '_cr' → logprob: -13.000959396362305
    8. '
' → logprob: -13.625959396362305
    9. 'crm' → logprob: -13.625959396362305
    10. '+h' → logprob: -13.750959396362305

Token 224: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -4.8232690460281447e-05
    2. '(' → logprob: -10.125048637390137
    3. 'n' → logprob: -11.875048637390137
    4. '(r' → logprob: -14.625048637390137
    5. '<|end|>' → logprob: -14.875048637390137
    6. '((' → logprob: -16.00004768371582
    7. ' (' → logprob: -16.37504768371582
    8. '(
' → logprob: -17.12504768371582
    9. '[n' → logprob: -18.00004768371582
    10. '```' → logprob: -18.50004768371582

Token 225: ' +' (ID: 659)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.5844073295593262
    2. '+r' → logprob: -0.8344073295593262
    3. ' +' → logprob: -5.709407329559326
    4. '   ' → logprob: -5.959407329559326
    5. '+' → logprob: -7.459407329559326
    6. 'n' → logprob: -7.584407329559326
    7. '(r' → logprob: -7.709407329559326
    8. ' r' → logprob: -8.209407806396484
    9. '[r' → logprob: -8.209407806396484
    10. '
' → logprob: -8.959407806396484

Token 226: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: 0.0
    2. ' r' → logprob: -17.125
    3. '
' → logprob: -18.25
    4. '	r' → logprob: -20.375
    5. '(r' → logprob: -21.0
    6. '[r' → logprob: -21.625
    7. '{' → logprob: -21.625
    8. '_r' → logprob: -22.875
    9. '   ' → logprob: -23.0
    10. '{
' → logprob: -23.25

Token 227: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.05490496754646301
    2. ' -' → logprob: -2.9299049377441406
    3. 'r' → logprob: -11.55490493774414
    4. '1' → logprob: -12.55490493774414
    5. ' ' → logprob: -12.80490493774414
    6. ' r' → logprob: -13.05490493774414
    7. '[' → logprob: -13.30490493774414
    8. ',' → logprob: -13.55490493774414
    9. '   ' → logprob: -14.55490493774414
    10. 'n' → logprob: -14.80490493774414

Token 228: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '۱' → logprob: -17.375
    3. ' ' → logprob: -17.875
    4. '```' → logprob: -18.125
    5. '-' → logprob: -18.75
    6. '１' → logprob: -19.0
    7. '11' → logprob: -19.0625
    8. '১' → logprob: -19.1875
    9. '
' → logprob: -19.5
    10. '2' → logprob: -19.625

Token 229: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '-' → logprob: -20.0
    3. ' ' → logprob: -20.0
    4. '
' → logprob: -20.125
    5. '۱' → logprob: -20.375
    6. '

' → logprob: -20.875
    7. '2' → logprob: -21.0
    8. '```' → logprob: -21.125
    9. '１' → logprob: -21.25
    10. '11' → logprob: -22.3125

Token 230: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000541592831723392
    2. ',r' → logprob: -7.625541687011719
    3. ' ,' → logprob: -10.250541687011719
    4. ')' → logprob: -11.500541687011719
    5. ',n' → logprob: -12.000541687011719
    6. ',K' → logprob: -14.625541687011719
    7. 'r' → logprob: -14.750541687011719
    8. ',
' → logprob: -15.250541687011719
    9. '<|end|>' → logprob: -15.250541687011719
    10. ',m' → logprob: -16.25054168701172

Token 231: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0009117019944824278
    2. ' r' → logprob: -7.000911712646484
    3. 'n' → logprob: -16.375911712646484
    4. '	r' → logprob: -17.875911712646484
    5. '   ' → logprob: -17.875911712646484
    6. '
' → logprob: -20.625911712646484
    7. ' ' → logprob: -20.625911712646484
    8. ' n' → logprob: -21.000911712646484
    9. ')' → logprob: -21.500911712646484
    10. '    ' → logprob: -21.625911712646484

Token 232: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3425219549390022e-05
    2. ' )' → logprob: -11.37501335144043
    3. ')
' → logprob: -13.50001335144043
    4. '))' → logprob: -16.37501335144043
    5. ')}' → logprob: -16.50001335144043
    6. '')' → logprob: -16.62501335144043
    7. '}' → logprob: -17.00001335144043
    8. '),' → logprob: -17.12501335144043
    9. '")' → logprob: -17.25001335144043
    10. '   ' → logprob: -17.75001335144043

Token 233: ' if' (ID: 538)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.18841317296028137
    2. '<|end|>' → logprob: -1.813413143157959
    3. '```' → logprob: -5.813413143157959
    4. '<|end|>' → logprob: -6.313413143157959
    5. '(' → logprob: -6.563413143157959
    6. '[' → logprob: -6.938413143157959
    7. '*' → logprob: -7.938413143157959
    8. ' ' → logprob: -8.438413619995117
    9. '   ' → logprob: -9.313413619995117
    10. '+' → logprob: -9.313413619995117

Token 234: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6948047876358032
    2. ' n' → logprob: -0.6948047876358032
    3. 'r' → logprob: -7.319804668426514
    4. '(n' → logprob: -7.444804668426514
    5. ' r' → logprob: -7.944804668426514
    6. ' (' → logprob: -10.319805145263672
    7. ' ' → logprob: -11.944805145263672
    8. '(r' → logprob: -12.444805145263672
    9. '(' → logprob: -12.694805145263672
    10. ' ' → logprob: -12.819805145263672

Token 235: ' +' (ID: 659)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.011368933133780956
    2. ' >' → logprob: -5.136368751525879
    3. '!=' → logprob: -5.386368751525879
    4. '<|end|>' → logprob: -7.636368751525879
    5. 'else' → logprob: -9.011368751525879
    6. ' !=' → logprob: -9.636368751525879
    7. '<|end|>' → logprob: -10.386368751525879
    8. '">' → logprob: -10.386368751525879
    9. '[' → logprob: -10.511368751525879
    10. '{' → logprob: -11.636368751525879

Token 236: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -7.517272024415433e-05
    2. ' r' → logprob: -9.500075340270996
    3. '(r' → logprob: -15.875075340270996
    4. 'K' → logprob: -15.875075340270996
    5. '0' → logprob: -16.87507438659668
    6. 'n' → logprob: -17.25007438659668
    7. '_r' → logprob: -17.50007438659668
    8. '[r' → logprob: -18.12507438659668
    9. '	r' → logprob: -18.25007438659668
    10. '-' → logprob: -18.75007438659668

Token 237: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.07359608262777328
    2. '>' → logprob: -2.8235960006713867
    3. ' -' → logprob: -4.698596000671387
    4. ' >' → logprob: -6.573596000671387
    5. '>=' → logprob: -6.948596000671387
    6. ' >=' → logprob: -10.573596000671387
    7. '>-' → logprob: -10.573596000671387
    8. '<=' → logprob: -11.823596000671387
    9. '1' → logprob: -11.948596000671387
    10. '>
' → logprob: -12.573596000671387

Token 238: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001511408481746912
    2. ' ' → logprob: -6.501511573791504
    3. '<|end|>' → logprob: -12.626511573791504
    4. '>' → logprob: -13.251511573791504
    5. '<|end|>' → logprob: -13.626511573791504
    6. '   ' → logprob: -14.376511573791504
    7. '```' → logprob: -14.501511573791504
    8. '10' → logprob: -15.939011573791504
    9. '[' → logprob: -16.126510620117188
    10. '
' → logprob: -16.189010620117188

Token 239: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4140441635390744e-05
    2. '<|end|>' → logprob: -12.125014305114746
    3. ' ' → logprob: -12.937514305114746
    4. '2' → logprob: -14.187514305114746
    5. '۱' → logprob: -14.250014305114746
    6. '>' → logprob: -14.375014305114746
    7. '<|end|>' → logprob: -14.375014305114746
    8. '0' → logprob: -14.750014305114746
    9. '' → logprob: -15.125014305114746
    10. '```' → logprob: -15.125014305114746

Token 240: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.42902594804763794
    2. ' >=' → logprob: -1.0540258884429932
    3. '>' → logprob: -9.179025650024414
    4. '<=' → logprob: -9.554025650024414
    5. 'else' → logprob: -10.429025650024414
    6. ')>=' → logprob: -10.804025650024414
    7. ' <=' → logprob: -10.929025650024414
    8. ' >' → logprob: -10.929025650024414
    9. '<' → logprob: -11.554025650024414
    10. ' ' → logprob: -11.804025650024414

Token 241: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0072314017452299595
    2. 'r' → logprob: -5.00723123550415
    3. ' ' → logprob: -7.63223123550415
    4. ' r' → logprob: -10.382231712341309
    5. '(r' → logprob: -15.257231712341309
    6. '1' → logprob: -17.007230758666992
    7. 'n' → logprob: -18.007230758666992
    8. '   ' → logprob: -19.132230758666992
    9. '[r' → logprob: -19.257230758666992
    10. '	r' → logprob: -19.507230758666992

Token 242: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01608610339462757
    2. 'r' → logprob: -4.141086101531982
    3. ' ' → logprob: -10.01608657836914
    4. ' r' → logprob: -12.01608657836914
    5. '1' → logprob: -14.26608657836914
    6. '(r' → logprob: -14.76608657836914
    7. 'n' → logprob: -17.26608657836914
    8. '	r' → logprob: -18.39108657836914
    9. '[r' → logprob: -18.51608657836914
    10. '   ' → logprob: -18.64108657836914

Token 243: ' and' (ID: 326)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.026305289939045906
    2. 'else' → logprob: -3.6513051986694336
    3. '	else' → logprob: -12.401305198669434
    4. '   ' → logprob: -14.651305198669434
    5. ' ' → logprob: -15.401305198669434
    6. '_else' → logprob: -16.52630615234375
    7. '    ' → logprob: -16.90130615234375
    8. '<|end|>' → logprob: -17.27630615234375
    9. ' ' → logprob: -17.90130615234375
    10. '  ' → logprob: -18.40130615234375

Token 244: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.10240742564201355
    2. ' r' → logprob: -2.352407455444336
    3. 'n' → logprob: -6.477407455444336
    4. ' n' → logprob: -7.477407455444336
    5. '(r' → logprob: -10.102407455444336
    6. '0' → logprob: -10.852407455444336
    7. '(n' → logprob: -11.102407455444336
    8. ' ' → logprob: -11.352407455444336
    9. ' (' → logprob: -12.852407455444336
    10. '   ' → logprob: -13.227407455444336

Token 245: ' >=' (ID: 5064)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -1.1579712629318237
    2. '>=' → logprob: -1.4079712629318237
    3. ' >=' → logprob: -1.4079712629318237
    4. ' >' → logprob: -1.6579712629318237
    5. ')' → logprob: -6.532971382141113
    6. '0' → logprob: -7.032971382141113
    7. ' <=' → logprob: -7.407971382141113
    8. '<|end|>' → logprob: -7.407971382141113
    9. ' ' → logprob: -7.532971382141113
    10. '<=' → logprob: -7.907971382141113

Token 246: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.190178904333152e-05
    2. ' ' → logprob: -10.375031471252441
    3. '1' → logprob: -14.250031471252441
    4. '۰' → logprob: -17.625032424926758
    5. '
' → logprob: -18.500032424926758
    6. '```' → logprob: -18.687532424926758
    7. '

' → logprob: -19.687532424926758
    8. '   ' → logprob: -19.937532424926758
    9. '０' → logprob: -20.187532424926758
    10. ')' → logprob: -20.437532424926758

Token 247: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.500004768371582
    3. '1' → logprob: -13.750004768371582
    4. '```' → logprob: -18.8750057220459
    5. '۰' → logprob: -19.3750057220459
    6. '
' → logprob: -19.8750057220459
    7. ')' → logprob: -20.2500057220459
    8. '   ' → logprob: -20.5000057220459
    9. '

' → logprob: -21.1250057220459
    10. ' ' → logprob: -21.5625057220459

Token 248: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.0046258182264864445
    2. 'else' → logprob: -5.3796257972717285
    3. '	else' → logprob: -12.629626274108887
    4. '   ' → logprob: -13.129626274108887
    5. '<|end|>' → logprob: -16.37962532043457
    6. ' ' → logprob: -16.87962532043457
    7. '    ' → logprob: -17.12962532043457
    8. '_else' → logprob: -17.87962532043457
    9. '       ' → logprob: -18.37962532043457
    10. ')' → logprob: -18.37962532043457

Token 249: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.4498052223643754e-05
    2. ' ' → logprob: -11.250014305114746
    3. '   ' → logprob: -13.500014305114746
    4. '  ' → logprob: -19.000015258789062
    5. '```' → logprob: -20.875015258789062
    6. '
' → logprob: -21.375015258789062
    7. '۰' → logprob: -21.500015258789062
    8. '    ' → logprob: -21.750015258789062
    9. '    
' → logprob: -21.750015258789062
    10. '       ' → logprob: -21.875015258789062

Token 250: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.625
    3. '   ' → logprob: -19.125
    4. '```' → logprob: -19.625
    5. '۰' → logprob: -21.5
    6. '
' → logprob: -21.875
    7. '<|end|>' → logprob: -23.625
    8. '  ' → logprob: -23.625
    9. '000' → logprob: -23.75
    10. 'def' → logprob: -23.75

Token 251: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.580222725868225
    2. ')' → logprob: -1.955222725868225
    3. '<|end|>' → logprob: -1.955222725868225
    4. ':' → logprob: -2.4552226066589355
    5. '\n' → logprob: -2.5802226066589355
    6. 'def' → logprob: -2.5802226066589355
    7. '(
' → logprob: -2.7052226066589355
    8. '(n' → logprob: -3.2052226066589355
    9. '\' → logprob: -3.2052226066589355
    10. '#' → logprob: -3.3302226066589355

Token 252: 'pow' (ID: 30304)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.145073801279068
    2. 'dp' → logprob: -3.645073890686035
    3. ')' → logprob: -4.020073890686035
    4. '(' → logprob: -4.145073890686035
    5. 'print' → logprob: -4.395073890686035
    6. 'for' → logprob: -4.395073890686035
    7. 'result' → logprob: -4.520073890686035
    8. 'a' → logprob: -5.270073890686035
    9. '(
' → logprob: -5.395073890686035
    10. 'res' → logprob: -5.395073890686035

Token 253: '2' (ID: 17)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04299405589699745
    2. '_' → logprob: -3.5429940223693848
    3. 's' → logprob: -5.292994022369385
    4. 'er' → logprob: -6.042994022369385
    5. '(pow' → logprob: -6.417994022369385
    6. '_pow' → logprob: -7.542994022369385
    7. '2' → logprob: -7.667994022369385
    8. ')' → logprob: -7.667994022369385
    9. 'pow' → logprob: -8.042994499206543
    10. '_mod' → logprob: -8.167994499206543

Token 254: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7754901051521301
    2. '=' → logprob: -0.9004901051521301
    3. '_' → logprob: -2.6504900455474854
    4. '(' → logprob: -2.9004900455474854
    5. '[' → logprob: -5.2754902839660645
    6. 'pow' → logprob: -7.0254902839660645
    7. '_pow' → logprob: -7.2754902839660645
    8. '(pow' → logprob: -8.400489807128906
    9. '_=' → logprob: -9.400489807128906
    10. ')' → logprob: -9.775489807128906

Token 255: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3182550072669983
    2. 'pow' → logprob: -1.3182549476623535
    3. '[p' → logprob: -5.8182549476623535
    4. '2' → logprob: -7.5682549476623535
    5. '1' → logprob: -7.6932549476623535
    6. ' [' → logprob: -7.8182549476623535
    7. '[n' → logprob: -8.068255424499512
    8. '(pow' → logprob: -8.568255424499512
    9. ' pow' → logprob: -9.943255424499512
    10. '[K' → logprob: -10.443255424499512

Token 256: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. 'pow' → logprob: -15.875
    3. '0' → logprob: -16.375
    4. ']' → logprob: -16.5
    5. ' ' → logprob: -19.75
    6. '2' → logprob: -20.125
    7. '(' → logprob: -20.25
    8. '```' → logprob: -20.5
    9. 'None' → logprob: -21.75
    10. '   ' → logprob: -21.75

Token 257: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.007072085980325937
    2. ']
' → logprob: -5.0070719718933105
    3. ']*(' → logprob: -8.257072448730469
    4. ']*' → logprob: -10.257072448730469
    5. ']
' → logprob: -10.507072448730469
    6. ']+' → logprob: -10.882072448730469
    7. ']

' → logprob: -12.007072448730469
    8. '*' → logprob: -12.882072448730469
    9. ',' → logprob: -12.882072448730469
    10. '*(' → logprob: -13.507072448730469

Token 258: ' *' (ID: 425)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.573117733001709
    2. '
' → logprob: -1.698117733001709
    3. ',' → logprob: -2.323117733001709
    4. '[' → logprob: -3.073117733001709
    5. ' for' → logprob: -3.198117733001709
    6. '*' → logprob: -3.823117733001709
    7. '```' → logprob: -4.198117733001709
    8. '<|end|>' → logprob: -4.448117733001709
    9. ',
' → logprob: -5.073117733001709
    10. ']' → logprob: -5.698117733001709

Token 259: ' (' (ID: 350)
  Prédit: '(MAX'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(MAX' → logprob: -0.0033636698499321938
    2. '(K' → logprob: -6.378363609313965
    3. '(' → logprob: -7.128363609313965
    4. '(N' → logprob: -7.378363609313965
    5. 'MAX' → logprob: -8.503363609313965
    6. '(M' → logprob: -11.628363609313965
    7. '(max' → logprob: -12.253363609313965
    8. '((' → logprob: -12.628363609313965
    9. '(Max' → logprob: -13.003363609313965
    10. '100' → logprob: -13.003363609313965

Token 260: 'MAX' (ID: 21911)
  Prédit: 'MAX'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MAX' → logprob: -0.04050763323903084
    2. '(MAX' → logprob: -3.5405075550079346
    3. 'K' → logprob: -5.165507793426514
    4. 'N' → logprob: -5.665507793426514
    5. '(K' → logprob: -7.040507793426514
    6. '(N' → logprob: -8.540507316589355
    7. '(' → logprob: -9.040507316589355
    8. '100' → logprob: -9.415507316589355
    9. '2' → logprob: -9.540507316589355
    10. 'max' → logprob: -10.290507316589355

Token 261: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.023364044725894928
    2. ')' → logprob: -3.8983640670776367
    3. '+' → logprob: -5.898364067077637
    4. '```' → logprob: -11.148364067077637
    5. ']
' → logprob: -11.523364067077637
    6. ')

' → logprob: -11.648364067077637
    7. '
' → logprob: -11.773364067077637
    8. '+
' → logprob: -12.148364067077637
    9. '``' → logprob: -12.398364067077637
    10. '2' → logprob: -12.523364067077637

Token 262: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00012511172099038959
    2. ' for' → logprob: -9.00012493133545
    3. 'pow' → logprob: -13.62512493133545
    4. '```' → logprob: -15.12512493133545
    5. '[' → logprob: -17.375125885009766
    6. '	for' → logprob: -17.500125885009766
    7. '
' → logprob: -18.750125885009766
    8. ')' → logprob: -19.625125885009766
    9. '(pow' → logprob: -19.875125885009766
    10. 'For' → logprob: -20.000125885009766

Token 263: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00407923199236393
    2. ' i' → logprob: -5.504079341888428
    3. '_' → logprob: -14.75407886505127
    4. '_i' → logprob: -15.25407886505127
    5. '	i' → logprob: -16.129079818725586
    6. 'x' → logprob: -17.379079818725586
    7. ' ' → logprob: -18.504079818725586
    8. '   ' → logprob: -20.504079818725586
    9. '_=' → logprob: -20.629079818725586
    10. ' _' → logprob: -21.129079818725586

Token 264: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0498788021504879
    2. 'in' → logprob: -3.0498788356781006
    3. '[' → logprob: -8.04987907409668
    4. ' ' → logprob: -8.04987907409668
    5. '1' → logprob: -9.04987907409668
    6. '=' → logprob: -9.17487907409668
    7. '_' → logprob: -9.42487907409668
    8. ')' → logprob: -9.42487907409668
    9. ',' → logprob: -9.42487907409668
    10. '<|end|>' → logprob: -9.67487907409668

Token 265: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.001628525205887854
    2. ' range' → logprob: -6.501628398895264
    3. '1' → logprob: -9.001628875732422
    4. 'in' → logprob: -13.001628875732422
    5. '(range' → logprob: -15.251628875732422
    6. ' ' → logprob: -15.626628875732422
    7. ' in' → logprob: -16.001628875732422
    8. '(' → logprob: -16.626628875732422
    9. '
' → logprob: -17.501628875732422
    10. '2' → logprob: -17.876628875732422

Token 266: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -4.584861744660884e-05
    2. '1' → logprob: -10.000045776367188
    3. '(MAX' → logprob: -15.000045776367188
    4. ' ' → logprob: -19.250045776367188
    5. ' (' → logprob: -19.500045776367188
    6. '(len' → logprob: -19.500045776367188
    7. '(
' → logprob: -19.625045776367188
    8. '(pow' → logprob: -20.000045776367188
    9. '
' → logprob: -20.125045776367188
    10. '2' → logprob: -20.500045776367188

Token 267: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.988221684878226e-06
    2. 'MAX' → logprob: -12.000006675720215
    3. ' ' → logprob: -14.500006675720215
    4. '(' → logprob: -15.625006675720215
    5. '
' → logprob: -17.75000762939453
    6. '2' → logprob: -17.87500762939453
    7. 'len' → logprob: -18.00000762939453
    8. '   ' → logprob: -18.62500762939453
    9. '

' → logprob: -18.62500762939453
    10. '(MAX' → logprob: -18.75000762939453

Token 268: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.3663626305060461e-05
    2. ' ,' → logprob: -11.25001335144043
    3. ',
' → logprob: -16.00001335144043
    4. '(MAX' → logprob: -16.00001335144043
    5. ',max' → logprob: -16.00001335144043
    6. 'MAX' → logprob: -16.12501335144043
    7. ',len' → logprob: -16.50001335144043
    8. ',p' → logprob: -17.75001335144043
    9. '1' → logprob: -18.25001335144043
    10. ' ' → logprob: -19.00001335144043

Token 269: ' MAX' (ID: 16960)
  Prédit: 'MAX'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MAX' → logprob: -0.00033558503491804004
    2. ' MAX' → logprob: -8.000335693359375
    3. 'len' → logprob: -17.250335693359375
    4. '(MAX' → logprob: -18.000335693359375
    5. ' len' → logprob: -19.000335693359375
    6. '
' → logprob: -19.875335693359375
    7. ' ' → logprob: -19.875335693359375
    8. '_MAX' → logprob: -20.750335693359375
    9. '[MAX' → logprob: -21.000335693359375
    10. 'Max' → logprob: -21.250335693359375

Token 270: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.16024452447891235
    2. '):' → logprob: -1.9102444648742676
    3. '):
' → logprob: -11.535244941711426
    4. ':' → logprob: -12.285244941711426
    5. ':
' → logprob: -12.910244941711426
    6. '2' → logprob: -14.160244941711426
    7. ']:' → logprob: -14.410244941711426
    8. ' ):
' → logprob: -14.410244941711426
    9. ']:
' → logprob: -14.910244941711426
    10. ')' → logprob: -15.410244941711426

Token 271: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0182476956397295
    2. 'pow' → logprob: -4.018247604370117
    3. ' pow' → logprob: -9.643247604370117
    4. '```' → logprob: -10.893247604370117
    5. ' ' → logprob: -12.018247604370117
    6. '(pow' → logprob: -12.268247604370117
    7. '_pow' → logprob: -13.768247604370117
    8. '2' → logprob: -14.268247604370117
    9. '	p' → logprob: -14.268247604370117
    10. '  ' → logprob: -14.893247604370117

Token 272: ' pow' (ID: 9779)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' (adapté à ' pow') → logprob: -5.080963092041202e-06
    2. ' pow' → logprob: -12.250004768371582
    3. '   ' → logprob: -16.2500057220459
    4. '2' → logprob: -16.5000057220459
    5. '```' → logprob: -18.2500057220459
    6. '_pow' → logprob: -18.5000057220459
    7. 'po' → logprob: -19.6250057220459
    8. ' ' → logprob: -19.7500057220459
    9. '(pow' → logprob: -20.0000057220459
    10. '.pow' → logprob: -20.1250057220459

Token 273: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.676292231422849e-05
    2. '```' → logprob: -11.750017166137695
    3. 'pow' → logprob: -11.875017166137695
    4. '[' → logprob: -13.750017166137695
    5. '[i' → logprob: -14.125017166137695
    6. '(pow' → logprob: -17.625017166137695
    7. '²' → logprob: -18.375017166137695
    8. '   ' → logprob: -18.500017166137695
    9. '₂' → logprob: -18.625017166137695
    10. 'i' → logprob: -18.750017166137695

Token 274: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.4272752852994017e-05
    2. '[' → logprob: -11.00002384185791
    3. '```' → logprob: -12.50002384185791
    4. '\[' → logprob: -13.25002384185791
    5. ' [' → logprob: -14.37502384185791
    6. '=' → logprob: -14.50002384185791
    7. 'pow' → logprob: -15.12502384185791
    8. '[
' → logprob: -15.50002384185791
    9. '*=' → logprob: -16.000024795532227
    10. '[I' → logprob: -16.250024795532227

Token 275: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5888164043426514
    2. ']' → logprob: -0.8388164043426514
    3. ' =' → logprob: -4.4638166427612305
    4. ']=' → logprob: -6.7138166427612305
    5. ')' → logprob: -9.96381664276123
    6. '=
' → logprob: -12.71381664276123
    7. ' ]' → logprob: -13.21381664276123
    8. '   ' → logprob: -13.21381664276123
    9. '```' → logprob: -13.21381664276123
    10. ' ' → logprob: -13.58881664276123

Token 276: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -9.615255839889869e-05
    2. ' =' → logprob: -9.250096321105957
    3. '=

' → logprob: -18.62509536743164
    4. '=
' → logprob: -18.75009536743164
    5. '*=' → logprob: -18.75009536743164
    6. '=p' → logprob: -20.87509536743164
    7. '＝' → logprob: -22.00009536743164
    8. 'pow' → logprob: -22.62509536743164
    9. ']=' → logprob: -22.87509536743164
    10. '=int' → logprob: -23.25009536743164

Token 277: ' pow' (ID: 9779)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.030392836779356003
    2. '(pow' → logprob: -3.53039288520813
    3. ' pow' → logprob: -7.905392646789551
    4. ' (' → logprob: -8.78039264678955
    5. '(p' → logprob: -9.78039264678955
    6. '2' → logprob: -10.15539264678955
    7. '(' → logprob: -11.90539264678955
    8. '```' → logprob: -12.40539264678955
    9. '_pow' → logprob: -13.03039264678955
    10. '.pow' → logprob: -13.28039264678955

Token 278: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.214019307051785e-05
    2. '(' → logprob: -10.375032424926758
    3. '(pow' → logprob: -14.875032424926758
    4. 'pow' → logprob: -15.250032424926758
    5. '```' → logprob: -16.250032424926758
    6. ' ' → logprob: -16.500032424926758
    7. '   ' → logprob: -18.375032424926758
    8. '
' → logprob: -18.875032424926758
    9. ')' → logprob: -19.875032424926758
    10. '  ' → logprob: -20.125032424926758

Token 279: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.7610454708337784e-05
    2. '[' → logprob: -11.375027656555176
    3. 'i' → logprob: -12.000027656555176
    4. '2' → logprob: -12.125027656555176
    5. '[
' → logprob: -12.875027656555176
    6. ' [' → logprob: -14.375027656555176
    7. '```' → logprob: -14.875027656555176
    8. 'pow' → logprob: -15.000027656555176
    9. '[I' → logprob: -15.750027656555176
    10. ' i' → logprob: -16.25002670288086

Token 280: '-' (ID: 12)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0001129602751461789
    2. 'i' → logprob: -9.625112533569336
    3. '-' → logprob: -10.000112533569336
    4. '[-' → logprob: -15.000112533569336
    5. '(i' → logprob: -15.000112533569336
    6. '
' → logprob: -15.500112533569336
    7. '1' → logprob: -15.500112533569336
    8. '```' → logprob: -16.500112533569336
    9. '[
' → logprob: -16.625112533569336
    10. ' i' → logprob: -16.750112533569336

Token 281: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.750000953674316
    3. '
' → logprob: -16.750001907348633
    4. '   ' → logprob: -17.500001907348633
    5. '```' → logprob: -17.875001907348633
    6. '

' → logprob: -18.375001907348633
    7. 'i' → logprob: -18.375001907348633
    8. ']' → logprob: -19.125001907348633
    9. '  ' → logprob: -19.375001907348633
    10. '2' → logprob: -20.000001907348633

Token 282: ']' (ID: 60)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.10761697590351105
    2. '2' → logprob: -2.732616901397705
    3. ' *' → logprob: -3.482616901397705
    4. '[' → logprob: -5.982616901397705
    5. ']' → logprob: -6.357616901397705
    6. ' ' → logprob: -6.482616901397705
    7. ',' → logprob: -9.107617378234863
    8. '   ' → logprob: -9.607617378234863
    9. '
' → logprob: -9.732617378234863
    10. '```' → logprob: -9.982617378234863

Token 283: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.0022712242789566517
    2. ' *' → logprob: -6.1272711753845215
    3. '2' → logprob: -9.37727165222168
    4. ' ' → logprob: -14.37727165222168
    5. '```' → logprob: -15.62727165222168
    6. '   ' → logprob: -15.87727165222168
    7. '
' → logprob: -16.12727165222168
    8. 'multip' → logprob: -16.37727165222168
    9. ' ' → logprob: -16.75227165222168
    10. '**' → logprob: -16.75227165222168

Token 284: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.0445127372804563e-05
    2. ' ' → logprob: -11.50001049041748
    3. '
' → logprob: -16.500009536743164
    4. '   ' → logprob: -17.250009536743164
    5. '```' → logprob: -18.125009536743164
    6. 'mul' → logprob: -19.375009536743164
    7. '

' → logprob: -19.500009536743164
    8. '  ' → logprob: -19.750009536743164
    9. '(' → logprob: -20.062509536743164
    10. 'pow' → logprob: -20.625009536743164

Token 285: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.875
    3. '
' → logprob: -19.0
    4. '   ' → logprob: -19.0
    5. '

' → logprob: -19.375
    6. '```' → logprob: -19.75
    7. 'pow' → logprob: -20.625
    8. '(' → logprob: -20.875
    9. '  ' → logprob: -21.0
    10. '1' → logprob: -21.25

Token 286: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.038043901324272156
    2. ' %' → logprob: -3.288043975830078
    3. '%i' → logprob: -13.038043975830078
    4. '%d' → logprob: -17.038043975830078
    5. '   ' → logprob: -17.038043975830078
    6. ')%' → logprob: -17.413043975830078
    7. '%n' → logprob: -17.413043975830078
    8. '%c' → logprob: -17.538043975830078
    9. '```' → logprob: -17.538043975830078
    10. '%A' → logprob: -17.663043975830078

Token 287: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -5.512236498361744e-07
    2. ' MOD' → logprob: -14.500000953674316
    3. '998' → logprob: -18.25
    4. '_MOD' → logprob: -21.0
    5. 'MO' → logprob: -21.875
    6. '.MOD' → logprob: -23.625
    7. 'MD' → logprob: -24.75
    8. 'Mod' → logprob: -25.125
    9. 'M' → logprob: -25.375
    10. 'MODE' → logprob: -25.5

Token 288: '

' (ID: 279)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '@' → logprob: -1.0427457094192505
    2. 'def' → logprob: -1.0427457094192505
    3. 'answer' → logprob: -2.292745590209961
    4. 'result' → logprob: -2.542745590209961
    5. 'dp' → logprob: -3.167745590209961
    6. 'res' → logprob: -4.167745590209961
    7. 'ans' → logprob: -4.292745590209961
    8. 'answers' → logprob: -5.042745590209961
    9. 'print' → logprob: -5.292745590209961
    10. ')' → logprob: -5.417745590209961

Token 289: 'for' (ID: 1938)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' → logprob: -0.2610049843788147
    2. 'def' → logprob: -2.01100492477417
    3. 'for' → logprob: -3.63600492477417
    4. 'dp' → logprob: -3.76100492477417
    5. 'result' → logprob: -3.88600492477417
    6. 'res' → logprob: -4.88600492477417
    7. 'answer' → logprob: -5.13600492477417
    8. 'Q' → logprob: -6.13600492477417
    9. 'answers' → logprob: -6.26100492477417
    10. 'ans' → logprob: -6.38600492477417

Token 290: ' i' (ID: 575)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.21365225315093994
    2. '_' → logprob: -1.71365225315094
    3. ' i' → logprob: -4.46365213394165
    4. '_i' → logprob: -8.713652610778809
    5. 'i' → logprob: -8.838652610778809
    6. ' x' → logprob: -9.588652610778809
    7. ' t' → logprob: -9.963652610778809
    8. ' n' → logprob: -10.463652610778809
    9. '_=' → logprob: -10.463652610778809
    10. ' a' → logprob: -10.713652610778809

Token 291: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2015683799982071
    2. 'in' → logprob: -1.701568365097046
    3. '(' → logprob: -9.826568603515625
    4. ',' → logprob: -10.576568603515625
    5. ' ' → logprob: -10.576568603515625
    6. 'range' → logprob: -10.701568603515625
    7. '_' → logprob: -11.576568603515625
    8. '	in' → logprob: -12.701568603515625
    9. ')' → logprob: -13.326568603515625
    10. '_in' → logprob: -13.326568603515625

Token 292: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.02054702304303646
    2. ' range' → logprob: -3.8955469131469727
    3. '(range' → logprob: -12.895546913146973
    4. 'in' → logprob: -14.270546913146973
    5. '(' → logprob: -14.395546913146973
    6. ' ' → logprob: -14.895546913146973
    7. 'N' → logprob: -15.520546913146973
    8. ' in' → logprob: -16.27054786682129
    9. 'n' → logprob: -16.39554786682129
    10. '	range' → logprob: -16.39554786682129

Token 293: '(' (ID: 7)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.14751027524471283
    2. '(' → logprob: -2.147510290145874
    3. '(K' → logprob: -3.897510290145874
    4. '(n' → logprob: -10.272510528564453
    5. '(M' → logprob: -11.147510528564453
    6. 'N' → logprob: -11.647510528564453
    7. '((' → logprob: -11.897510528564453
    8. '1' → logprob: -12.397510528564453
    9. '(MAX' → logprob: -12.522510528564453
    10. '(len' → logprob: -12.647510528564453

Token 294: '2' (ID: 17)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.12123692035675049
    2. 'K' → logprob: -2.871236801147461
    3. '1' → logprob: -2.996236801147461
    4. '2' → logprob: -5.996236801147461
    5. '0' → logprob: -6.371236801147461
    6. 'MAX' → logprob: -6.746236801147461
    7. '(N' → logprob: -7.121236801147461
    8. '(' → logprob: -7.371236801147461
    9. '(K' → logprob: -7.871236801147461
    10. '3' → logprob: -8.496236801147461

Token 295: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0018197664758190513
    2. ' ,' → logprob: -6.376819610595703
    3. ',K' → logprob: -10.001819610595703
    4. ' *' → logprob: -11.126819610595703
    5. '*' → logprob: -11.251819610595703
    6. 'K' → logprob: -11.376819610595703
    7. '*K' → logprob: -11.501819610595703
    8. '1' → logprob: -12.251819610595703
    9. '2' → logprob: -12.876819610595703
    10. ' ' → logprob: -13.126819610595703

Token 296: ' ' (ID: 220)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.5275698304176331
    2. 'K' → logprob: -1.2775697708129883
    3. 'MAX' → logprob: -2.2775697708129883
    4. '2' → logprob: -3.6525697708129883
    5. ' N' → logprob: -6.902569770812988
    6. ' K' → logprob: -6.902569770812988
    7. ' MAX' → logprob: -8.152569770812988
    8. 'len' → logprob: -8.902569770812988
    9. ' ' → logprob: -8.902569770812988
    10. 'max' → logprob: -9.777569770812988

Token 297: '2' (ID: 17)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.6871380805969238
    2. 'N' → logprob: -1.0621380805969238
    3. 'MAX' → logprob: -1.9371380805969238
    4. '2' → logprob: -5.187138080596924
    5. 'len' → logprob: -6.812138080596924
    6. 'max' → logprob: -8.437137603759766
    7. '(' → logprob: -10.062137603759766
    8. 'MIN' → logprob: -10.187137603759766
    9. '1' → logprob: -10.437137603759766
    10. 'n' → logprob: -10.562137603759766

Token 298: '*K' (ID: 167586)
  Prédit: '*K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*K' → logprob: -0.3352847993373871
    2. ' *' → logprob: -1.3352848291397095
    3. '*' → logprob: -3.83528470993042
    4. '*N' → logprob: -9.585285186767578
    5. '*(' → logprob: -10.085285186767578
    6. ',' → logprob: -10.210285186767578
    7. 'K' → logprob: -10.835285186767578
    8. '*i' → logprob: -11.210285186767578
    9. '*k' → logprob: -12.585285186767578
    10. ':' → logprob: -14.585285186767578

Token 299: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0337376706302166
    2. ' +' → logprob: -3.4087376594543457
    3. ',' → logprob: -9.658738136291504
    4. '-' → logprob: -11.408738136291504
    5. '):' → logprob: -11.908738136291504
    6. '):
' → logprob: -12.033738136291504
    7. '   ' → logprob: -14.158738136291504
    8. ' -' → logprob: -14.283738136291504
    9. '```' → logprob: -14.533738136291504
    10. '+
' → logprob: -14.783738136291504

Token 300: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.010565491393208504
    2. 'N' → logprob: -4.760565280914307
    3. '2' → logprob: -6.760565280914307
    4. '(N' → logprob: -7.510565280914307
    5. '(' → logprob: -8.760565757751465
    6. '+' → logprob: -9.510565757751465
    7. '(i' → logprob: -12.385565757751465
    8. '3' → logprob: -12.635565757751465
    9. 'i' → logprob: -13.760565757751465
    10. ' ' → logprob: -13.885565757751465

Token 301: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1337025910615921
    2. '):
' → logprob: -2.133702516555786
    3. ',' → logprob: -5.758702754974365
    4. ':' → logprob: -6.133702754974365
    5. '+' → logprob: -6.633702754974365
    6. '   ' → logprob: -10.258702278137207
    7. ' ):' → logprob: -10.883702278137207
    8. '):
' → logprob: -11.008702278137207
    9. '+:' → logprob: -11.758702278137207
    10. ')' → logprob: -12.133702278137207

Token 302: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00042447797022759914
    2. ' if' → logprob: -8.7504243850708
    3. ' print' → logprob: -9.6254243850708
    4. ' for' → logprob: -9.7504243850708
    5. 'pow' → logprob: -10.3754243850708
    6. 'print' → logprob: -10.6254243850708
    7. '   ' → logprob: -11.0004243850708
    8. 'fact' → logprob: -11.1254243850708
    9. ' pow' → logprob: -11.5004243850708
    10. 'if' → logprob: -11.5004243850708

Token 303: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1933608055114746
    2. 'print' → logprob: -1.3183608055114746
    3. 'if' (adapté à ' if') → logprob: -2.1933608055114746
    4. ' if' → logprob: -2.4433608055114746
    5. ' for' → logprob: -2.8183608055114746
    6. ' print' → logprob: -3.0683608055114746
    7. 'for' → logprob: -3.4433608055114746
    8. 'pow' → logprob: -4.068360805511475
    9. 'x' → logprob: -4.193360805511475
    10. 'res' → logprob: -4.568360805511475

Token 304: ' i' (ID: 575)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.8189076781272888
    2. '(i' → logprob: -1.0689077377319336
    3. ' i' → logprob: -2.3189077377319336
    4. 'i' → logprob: -2.6939077377319336
    5. '(n' → logprob: -4.193907737731934
    6. ' n' → logprob: -4.818907737731934
    7. 'pow' → logprob: -5.068907737731934
    8. 'n' → logprob: -5.193907737731934
    9. '(' → logprob: -5.693907737731934
    10. '(K' → logprob: -5.818907737731934

Token 305: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.3885291814804077
    2. '%' → logprob: -1.1385291814804077
    3. ' <=' → logprob: -7.513529300689697
    4. ' ==' → logprob: -7.513529300689697
    5. ' ' → logprob: -9.263528823852539
    6. '==' → logprob: -9.638528823852539
    7. '[' → logprob: -9.763528823852539
    8. '<=' → logprob: -9.763528823852539
    9. '   ' → logprob: -10.013528823852539
    10. '>' → logprob: -10.388528823852539

Token 306: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9146995327901095e-05
    2. '3' → logprob: -11.000019073486328
    3. ' ' → logprob: -13.250019073486328
    4. '4' → logprob: -15.375019073486328
    5. '==' → logprob: -15.375019073486328
    6. '=' → logprob: -17.625019073486328
    7. '```' → logprob: -17.750019073486328
    8. '
' → logprob: -18.000019073486328
    9. '(' → logprob: -18.125019073486328
    10. ' ==' → logprob: -18.250019073486328

Token 307: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.8889261304575484e-06
    2. '3' → logprob: -13.125003814697266
    3. '4' → logprob: -14.000003814697266
    4. '0' → logprob: -14.250003814697266
    5. '
' → logprob: -15.875003814697266
    6. '1' → logprob: -16.125003814697266
    7. ' ' → logprob: -16.125003814697266
    8. '

' → logprob: -17.625003814697266
    9. '10' → logprob: -18.000003814697266
    10. '(' → logprob: -18.375003814697266

Token 308: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.16034913063049316
    2. ' ==' → logprob: -1.9103491306304932
    3. '!=' → logprob: -9.785348892211914
    4. ' !=' → logprob: -10.160348892211914
    5. '==
' → logprob: -11.285348892211914
    6. '=' → logprob: -11.660348892211914
    7. ')==' → logprob: -13.035348892211914
    8. '()==' → logprob: -13.160348892211914
    9. ':' → logprob: -13.410348892211914
    10. ']==' → logprob: -14.035348892211914

Token 309: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004151410888880491
    2. '1' → logprob: -5.629151344299316
    3. ' ' → logprob: -7.504151344299316
    4. '
' → logprob: -15.504151344299316
    5. '   ' → logprob: -16.879152297973633
    6. '

' → logprob: -17.566652297973633
    7. '=' → logprob: -18.004152297973633
    8. '  ' → logprob: -18.379152297973633
    9. '2' → logprob: -18.566652297973633
    10. '```' → logprob: -19.254152297973633

Token 310: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00013452880375552922
    2. '1' → logprob: -9.625134468078613
    3. '2' → logprob: -9.750134468078613
    4. ' ' → logprob: -11.500134468078613
    5. '==' → logprob: -16.87513542175293
    6. '=' → logprob: -17.37513542175293
    7. '
' → logprob: -17.75013542175293
    8. '```' → logprob: -18.12513542175293
    9. '   ' → logprob: -18.62513542175293
    10. ' ==' → logprob: -19.56263542175293

Token 311: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.032978903502225876
    2. ':
' → logprob: -3.5329790115356445
    3. ' and' → logprob: -6.0329790115356445
    4. 'and' → logprob: -8.282979011535645
    5. '   ' → logprob: -8.657979011535645
    6. '       ' → logprob: -8.907979011535645
    7. '==' → logprob: -9.782979011535645
    8. '):
' → logprob: -9.907979011535645
    9. '=' → logprob: -10.032979011535645
    10. ' ==' → logprob: -10.407979011535645

Token 312: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08296272903680801
    2. '   ' → logprob: -2.95796275138855
    3. 'print' → logprob: -3.83296275138855
    4. 'pow' → logprob: -5.707962512969971
    5. ' print' → logprob: -7.207962512969971
    6. 'fact' → logprob: -7.582962512969971
    7. 'for' → logprob: -8.207962989807129
    8. 'continue' → logprob: -8.707962989807129
    9. 'n' → logprob: -8.832962989807129
    10. ' for' → logprob: -9.082962989807129

Token 313: ' np' (ID: 5374)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.11997783184051514
    2. '   ' → logprob: -2.9949779510498047
    3. ' print' → logprob: -3.1199779510498047
    4. 'ans' → logprob: -5.369977951049805
    5. 'for' → logprob: -5.869977951049805
    6. 'pow' → logprob: -5.869977951049805
    7. ' for' → logprob: -6.744977951049805
    8. 'res' → logprob: -6.744977951049805
    9. 'n' → logprob: -7.119977951049805
    10. ' ans' → logprob: -7.369977951049805

Token 314: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8173860311508179
    2. '=' → logprob: -1.3173860311508179
    3. 'w' → logprob: -2.0673861503601074
    4. 'ow' → logprob: -2.3173861503601074
    5. 'pow' → logprob: -3.3173861503601074
    6. 'r' → logprob: -4.317386150360107
    7. '2' → logprob: -5.692386150360107
    8. '[i' → logprob: -6.442386150360107
    9. '=int' → logprob: -6.442386150360107
    10. '_pow' → logprob: -6.567386150360107

Token 315: ' i' (ID: 575)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.2786271274089813
    2. 'n' → logprob: -1.9036271572113037
    3. '(n' → logprob: -3.2786271572113037
    4. '(i' → logprob: -4.778626918792725
    5. '(pow' → logprob: -4.778626918792725
    6. ' n' → logprob: -4.903626918792725
    7. ' pow' → logprob: -5.028626918792725
    8. '(' → logprob: -5.153626918792725
    9. '2' → logprob: -5.153626918792725
    10. 'i' → logprob: -5.403626918792725

Token 316: '//' (ID: 393)
  Prédit: '//'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.5372419953346252
    2. ' //' → logprob: -1.0372419357299805
    3. '   ' → logprob: -3.7872419357299805
    4. '-' → logprob: -4.1622419357299805
    5. '=' → logprob: -4.4122419357299805
    6. ' =' → logprob: -5.4122419357299805
    7. ' -' → logprob: -6.0372419357299805
    8. '//=' → logprob: -6.2872419357299805
    9. '#' → logprob: -6.7872419357299805
    10. '       ' → logprob: -8.53724193572998

Token 317: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.5597102396423e-05
    2. ' ' → logprob: -10.250035285949707
    3. '1' → logprob: -16.250036239624023
    4. '   ' → logprob: -18.000036239624023
    5. '```' → logprob: -18.375036239624023
    6. '
' → logprob: -18.500036239624023
    7. 'i' → logprob: -19.562536239624023
    8. '۲' → logprob: -19.937536239624023
    9. '

' → logprob: -20.250036239624023
    10. '3' → logprob: -20.500036239624023

Token 318: ' -' (ID: 533)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4305630028247833
    2. '*' → logprob: -1.930562973022461
    3. '       ' → logprob: -2.180562973022461
    4. ' *' → logprob: -3.555562973022461
    5. '+' → logprob: -4.430562973022461
    6. 'pow' → logprob: -4.430562973022461
    7. '-' → logprob: -4.930562973022461
    8. '        
' → logprob: -5.180562973022461
    9. ' 
' → logprob: -5.555562973022461
    10. '*n' → logprob: -5.805562973022461

Token 319: ' max' (ID: 2999)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1994775377388578e-05
    2. ' ' → logprob: -11.500012397766113
    3. '2' → logprob: -13.500012397766113
    4. '   ' → logprob: -16.437511444091797
    5. '0' → logprob: -16.500011444091797
    6. 'K' → logprob: -16.812511444091797
    7. '(' → logprob: -16.875011444091797
    8. 'i' → logprob: -17.250011444091797
    9. '(i' → logprob: -18.125011444091797
    10. '１' → logprob: -18.500011444091797

Token 320: '(i' (ID: 3649)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.16207849979400635
    2. '(K' → logprob: -2.912078380584717
    3. '(N' → logprob: -3.037078380584717
    4. '(i' → logprob: -3.412078380584717
    5. '0' → logprob: -4.662078380584717
    6. '((' → logprob: -5.537078380584717
    7. 'K' → logprob: -8.537078857421875
    8. '(n' → logprob: -8.662078857421875
    9. '(-' → logprob: -9.037078857421875
    10. 'N' → logprob: -9.037078857421875

Token 321: '-' (ID: 12)
  Prédit: ',K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',K' → logprob: -1.343981385231018
    2. '-' → logprob: -1.468981385231018
    3. ',' → logprob: -1.718981385231018
    4. '(' → logprob: -1.718981385231018
    5. '(K' → logprob: -2.2189812660217285
    6. '-K' → logprob: -4.8439812660217285
    7. '(i' → logprob: -4.8439812660217285
    8. ' -' → logprob: -6.0939812660217285
    9. '2' → logprob: -6.2189812660217285
    10. ',i' → logprob: -6.2189812660217285

Token 322: '1' (ID: 16)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.1230318546295166
    2. 'N' → logprob: -2.2480318546295166
    3. '(' → logprob: -4.8730316162109375
    4. '2' → logprob: -6.8730316162109375
    5. '(K' → logprob: -7.1230316162109375
    6. '(N' → logprob: -7.6230316162109375
    7. '0' → logprob: -9.123031616210938
    8. ' K' → logprob: -10.998031616210938
    9. ' ' → logprob: -10.998031616210938
    10. 'i' → logprob: -11.498031616210938

Token 323: '-K' (ID: 12249)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01743653416633606
    2. '0' → logprob: -4.392436504364014
    3. '+' → logprob: -6.392436504364014
    4. ' ,' → logprob: -7.017436504364014
    5. ',K' → logprob: -7.267436504364014
    6. ')' → logprob: -7.892436504364014
    7. '(' → logprob: -8.142436981201172
    8. ' +' → logprob: -8.392436981201172
    9. '2' → logprob: -8.392436981201172
    10. '1' → logprob: -8.767436981201172

Token 324: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004977812524884939
    2. '+' → logprob: -5.754977703094482
    3. ' ,' → logprob: -6.504977703094482
    4. ' +' → logprob: -8.50497817993164
    5. '0' → logprob: -10.25497817993164
    6. ')' → logprob: -10.37997817993164
    7. '-' → logprob: -12.12997817993164
    8. '),' → logprob: -12.12997817993164
    9. '   ' → logprob: -12.75497817993164
    10. ',
' → logprob: -12.75497817993164

Token 325: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00022570860164705664
    2. ' ' → logprob: -8.625226020812988
    3. '1' → logprob: -10.000226020812988
    4. ')' → logprob: -15.625226020812988
    5. '(' → logprob: -16.000225067138672
    6. '2' → logprob: -16.125225067138672
    7. '   ' → logprob: -16.375225067138672
    8. '
' → logprob: -16.500225067138672
    9. '-' → logprob: -17.812725067138672
    10. 'i' → logprob: -17.937725067138672

Token 326: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00012844942102674395
    2. '1' → logprob: -9.125128746032715
    3. ' ' → logprob: -11.000128746032715
    4. '(' → logprob: -13.250128746032715
    5. '2' → logprob: -14.250128746032715
    6. 'i' → logprob: -15.375128746032715
    7. ')' → logprob: -16.2501277923584
    8. '-' → logprob: -17.0626277923584
    9. 'K' → logprob: -17.4376277923584
    10. '(i' → logprob: -18.1251277923584

Token 327: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06747214496135712
    2. ')
' → logprob: -2.942472219467163
    3. '+' → logprob: -4.817471981048584
    4. ')+' → logprob: -6.067471981048584
    5. ')*' → logprob: -6.692471981048584
    6. ' +' → logprob: -8.567472457885742
    7. '<|end|>' → logprob: -8.567472457885742
    8. '   ' → logprob: -9.192472457885742
    9. '       ' → logprob: -9.317472457885742
    10. ')n' → logprob: -10.067472457885742

Token 328: ' -' (ID: 533)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07059448957443237
    2. '<|end|>' → logprob: -3.570594549179077
    3. '
' → logprob: -3.820594549179077
    4. '+' → logprob: -4.820594310760498
    5. '<|end|>' → logprob: -6.195594310760498
    6. '        
' → logprob: -6.445594310760498
    7. ' else' → logprob: -6.695594310760498
    8. ' +' → logprob: -6.695594310760498
    9. '   ' → logprob: -6.945594310760498
    10. ')' → logprob: -7.070594310760498

Token 329: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0021287298295646906
    2. 'n' → logprob: -7.627128601074219
    3. '(n' → logprob: -7.627128601074219
    4. '2' → logprob: -7.752128601074219
    5. '(' → logprob: -8.002128601074219
    6. '0' → logprob: -8.752128601074219
    7. 'max' → logprob: -9.502128601074219
    8. '(i' → logprob: -10.002128601074219
    9. 'N' → logprob: -10.502128601074219
    10. 'pow' → logprob: -11.002128601074219

Token 330: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0019818067084997892
    2. 'n' → logprob: -7.376981735229492
    3. '2' → logprob: -7.751981735229492
    4. '(n' → logprob: -8.126981735229492
    5. '0' → logprob: -8.376981735229492
    6. '(' → logprob: -8.501981735229492
    7. 'max' → logprob: -8.876981735229492
    8. '(i' → logprob: -11.251981735229492
    9. 'N' → logprob: -11.501981735229492
    10. 'min' → logprob: -12.001981735229492

Token 331: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09228307008743286
    2. '<|end|>' → logprob: -3.092283010482788
    3. '+' → logprob: -4.217283248901367
    4. ')' → logprob: -4.592283248901367
    5. '   ' → logprob: -5.342283248901367
    6. ' +' → logprob: -5.717283248901367
    7. '
' → logprob: -6.217283248901367
    8. ' else' → logprob: -6.467283248901367
    9. '<|end|>' → logprob: -6.592283248901367
    10. ' *' → logprob: -7.342283248901367

Token 332: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00889310147613287
    2. '<|end|>' → logprob: -5.508893013000488
    3. '   ' → logprob: -6.383893013000488
    4. ' if' → logprob: -6.883893013000488
    5. ')' → logprob: -7.258893013000488
    6. ':' → logprob: -7.883893013000488
    7. 'if' → logprob: -8.633893013000488
    8. ':
' → logprob: -8.758893013000488
    9. ',' → logprob: -9.008893013000488
    10. 'print' → logprob: -9.383893013000488

Token 333: ' ans' (ID: 3345)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.10636813193559647
    2. 'ans' (adapté à ' ans') → logprob: -3.106368064880371
    3. 'if' → logprob: -3.606368064880371
    4. 'answer' → logprob: -5.231368064880371
    5. 'np' → logprob: -5.231368064880371
    6. 'res' → logprob: -5.356368064880371
    7. 'pow' → logprob: -5.356368064880371
    8. 'for' → logprob: -5.731368064880371
    9. '       ' → logprob: -6.231368064880371
    10. 'result' → logprob: -7.356368064880371

Token 334: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07963357120752335
    2. '=' → logprob: -2.5796334743499756
    3. ' +=' → logprob: -7.329633712768555
    4. '+=' → logprob: -9.579633712768555
    5. ' ' → logprob: -11.704633712768555
    6. ')' → logprob: -12.954633712768555
    7. ' *=' → logprob: -13.454633712768555
    8. '   ' → logprob: -13.704633712768555
    9. '%=' → logprob: -14.329633712768555
    10. ']' → logprob: -14.704633712768555

Token 335: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7799093723297119
    2. 'pow' → logprob: -0.7799093723297119
    3. '(' → logprob: -3.904909372329712
    4. 'n' → logprob: -4.154909133911133
    5. '(n' → logprob: -4.279909133911133
    6. '(pow' → logprob: -4.529909133911133
    7. '1' → logprob: -5.029909133911133
    8. 'fact' → logprob: -5.154909133911133
    9. ' pow' → logprob: -5.654909133911133
    10. ' (' → logprob: -6.279909133911133

Token 336: '0' (ID: 15)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.23235180974006653
    2. 'n' → logprob: -2.357351779937744
    3. '(n' → logprob: -3.357351779937744
    4. '0' → logprob: -3.357351779937744
    5. '(' → logprob: -3.982351779937744
    6. '(pow' → logprob: -4.482351779937744
    7. 'mul' → logprob: -5.107351779937744
    8. 'fact' → logprob: -6.232351779937744
    9. '2' → logprob: -6.482351779937744
    10. '1' → logprob: -6.482351779937744

Token 337: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.29915711283683777
    2. '<|end|>' → logprob: -1.5491571426391602
    3. '   ' → logprob: -4.04915714263916
    4. ' for' → logprob: -4.17415714263916
    5. '	for' → logprob: -5.67415714263916
    6. 'for' → logprob: -5.92415714263916
    7. ' ' → logprob: -6.04915714263916
    8. '<|end|>' → logprob: -6.42415714263916
    9. '	' → logprob: -6.67415714263916
    10. ')' → logprob: -7.79915714263916

Token 338: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10166555643081665
    2. ' for' → logprob: -2.976665496826172
    3. '	for' → logprob: -4.101665496826172
    4. '<|end|>' → logprob: -4.351665496826172
    5. 'for' → logprob: -4.601665496826172
    6. '   ' → logprob: -5.976665496826172
    7. '	' → logprob: -5.976665496826172
    8. '\t' → logprob: -7.976665496826172
    9. '	       ' → logprob: -8.851665496826172
    10. '<|end|>' → logprob: -9.476665496826172

Token 339: ' nr' (ID: 24055)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07925382256507874
    2. ' for' → logprob: -2.579253911972046
    3. '       ' → logprob: -8.829254150390625
    4. 'pow' → logprob: -9.329254150390625
    5. 'j' → logprob: -9.454254150390625
    6. 'ans' → logprob: -10.454254150390625
    7. ' j' → logprob: -11.954254150390625
    8. ' ans' → logprob: -12.954254150390625
    9. 'range' → logprob: -13.329254150390625
    10. ' pow' → logprob: -13.454254150390625

Token 340: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.28140389919281006
    2. '=' → logprob: -1.40640389919281
    3. ' ' → logprob: -9.281403541564941
    4. 'for' → logprob: -10.156403541564941
    5. 'r' → logprob: -10.656403541564941
    6. ' +=' → logprob: -10.656403541564941
    7. '   ' → logprob: -10.906403541564941
    8. ' for' → logprob: -11.406403541564941
    9. '+=' → logprob: -11.406403541564941
    10. 'ange' → logprob: -11.656403541564941

Token 341: ' K' (ID: 658)
  Prédit: 'np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'np' → logprob: -0.5220626592636108
    2. 'N' → logprob: -1.6470626592636108
    3. 'n' → logprob: -2.2720627784729004
    4. 'K' → logprob: -3.6470627784729004
    5. 'i' → logprob: -3.8970627784729004
    6. '0' → logprob: -4.0220627784729
    7. 'min' → logprob: -4.5220627784729
    8. 'max' → logprob: -4.5220627784729
    9. ' np' → logprob: -4.5220627784729
    10. ' N' → logprob: -5.6470627784729

Token 342: ' -' (ID: 533)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.37854284048080444
    2. '-' → logprob: -1.8785429000854492
    3. ' -' → logprob: -3.128542900085449
    4. '<|end|>' → logprob: -3.128542900085449
    5. ' +' → logprob: -3.253542900085449
    6. '<|end|>' → logprob: -4.253542900085449
    7. '       ' → logprob: -5.003542900085449
    8. ' =' → logprob: -6.003542900085449
    9. ')' → logprob: -6.003542900085449
    10. '
' → logprob: -6.378542900085449

Token 343: ' np' (ID: 5374)
  Prédit: 'np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'np' → logprob: -0.0036130205262452364
    2. 'i' → logprob: -6.253612995147705
    3. '1' → logprob: -7.003612995147705
    4. '(np' → logprob: -7.878612995147705
    5. '(i' → logprob: -8.753613471984863
    6. '(' → logprob: -9.253613471984863
    7. 'max' → logprob: -9.878613471984863
    8. 'K' → logprob: -10.628613471984863
    9. '2' → logprob: -11.003613471984863
    10. '(K' → logprob: -11.503613471984863

Token 344: '*' (ID: 9)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3652355670928955
    2. '
' → logprob: -1.6152355670928955
    3. '+' → logprob: -3.2402355670928955
    4. '<|end|>' → logprob: -3.4902355670928955
    5. '        
' → logprob: -4.365235328674316
    6. '<|end|>' → logprob: -5.240235328674316
    7. ' +' → logprob: -5.490235328674316
    8. ' 
' → logprob: -5.615235328674316
    9. '  
' → logprob: -5.990235328674316
    10. ' for' → logprob: -6.115235328674316

Token 345: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.2880668342113495
    2. '1' → logprob: -1.4130668640136719
    3. 'i' → logprob: -6.038066864013672
    4. '(i' → logprob: -6.538066864013672
    5. '-' → logprob: -6.663066864013672
    6. '(' → logprob: -7.413066864013672
    7. '(n' → logprob: -7.788066864013672
    8. 'n' → logprob: -8.538066864013672
    9. '           ' → logprob: -9.538066864013672
    10. ' ' → logprob: -9.538066864013672

Token 346: ' -' (ID: 533)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6982883810997009
    2. '<|end|>' → logprob: -1.4482884407043457
    3. '
' → logprob: -2.1982884407043457
    4. '+' → logprob: -2.4482884407043457
    5. '<|end|>' → logprob: -4.073288440704346
    6. '        
' → logprob: -4.448288440704346
    7. ' 
' → logprob: -4.573288440704346
    8. ')' → logprob: -4.948288440704346
    9. ' +' → logprob: -5.198288440704346
    10. '   ' → logprob: -5.448288440704346

Token 347: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1285928338766098
    2. '2' → logprob: -2.1285927295684814
    3. 'i' → logprob: -7.0035929679870605
    4. '(i' → logprob: -8.128592491149902
    5. '3' → logprob: -8.878592491149902
    6. 'N' → logprob: -9.128592491149902
    7. '(N' → logprob: -9.128592491149902
    8. '(' → logprob: -10.253592491149902
    9. '0' → logprob: -10.503592491149902
    10. '(n' → logprob: -11.128592491149902

Token 348: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.20237044990062714
    2. '2' → logprob: -1.7023704051971436
    3. '3' → logprob: -7.577370643615723
    4. 'i' → logprob: -8.577370643615723
    5. 'N' → logprob: -8.952370643615723
    6. '(i' → logprob: -9.827370643615723
    7. '(N' → logprob: -10.702370643615723
    8. '(' → logprob: -10.952370643615723
    9. '0' → logprob: -11.452370643615723
    10. '(n' → logprob: -11.827370643615723

Token 349: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03761724382638931
    2. '<|end|>' → logprob: -3.5376172065734863
    3. '
' → logprob: -6.412617206573486
    4. 'for' → logprob: -6.537617206573486
    5. ' for' → logprob: -6.662617206573486
    6. '<|end|>' → logprob: -6.912617206573486
    7. '        
' → logprob: -7.287617206573486
    8. ')' → logprob: -7.287617206573486
    9. '   ' → logprob: -8.287617683410645
    10. ',' → logprob: -8.287617683410645

Token 350: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0038423521909862757
    2. '<|end|>' → logprob: -6.253842353820801
    3. ' for' → logprob: -7.253842353820801
    4. 'for' → logprob: -7.628842353820801
    5. '   ' → logprob: -9.1288423538208
    6. '[' → logprob: -9.1288423538208
    7. '```' → logprob: -9.3788423538208
    8. ',' → logprob: -9.8788423538208
    9. '        
' → logprob: -10.0038423538208
    10. '	' → logprob: -10.1288423538208

Token 351: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.04302305355668068
    2. '       ' → logprob: -3.293023109436035
    3. ' for' → logprob: -5.418023109436035
    4. '   ' → logprob: -8.793023109436035
    5. 'ans' → logprob: -9.168023109436035
    6. 'if' → logprob: -9.168023109436035
    7. 'while' → logprob: -9.793023109436035
    8. 'n' → logprob: -10.668023109436035
    9. 'pow' → logprob: -11.043023109436035
    10. 'r' → logprob: -11.168023109436035

Token 352: ' nq' (ID: 183073)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.5668296813964844
    2. 'r' → logprob: -1.0668296813964844
    3. 'x' → logprob: -2.8168296813964844
    4. 'k' → logprob: -4.566829681396484
    5. ' j' → logprob: -5.066829681396484
    6. ' r' → logprob: -6.066829681396484
    7. '_j' → logprob: -6.566829681396484
    8. 'd' → logprob: -6.816829681396484
    9. 'a' → logprob: -6.941829681396484
    10. 'n' → logprob: -7.441829681396484

Token 353: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.018193373456597328
    2. 'in' → logprob: -4.018193244934082
    3. 'n' → logprob: -11.018193244934082
    4. ' ' → logprob: -11.268193244934082
    5. 'range' → logprob: -12.518193244934082
    6. '```' → logprob: -12.643193244934082
    7. ')' → logprob: -13.018193244934082
    8. '	in' → logprob: -13.768193244934082
    9. '0' → logprob: -14.893193244934082
    10. ' ' → logprob: -15.018193244934082

Token 354: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.2834038734436035
    2. ' range' → logprob: -1.4084038734436035
    3. '0' → logprob: -7.1584038734436035
    4. 'n' → logprob: -7.1584038734436035
    5. ' in' → logprob: -8.033403396606445
    6. ' ' → logprob: -9.283403396606445
    7. ' n' → logprob: -9.658403396606445
    8. 'in' → logprob: -9.658403396606445
    9. '(range' → logprob: -10.158403396606445
    10. ' nq' → logprob: -10.408403396606445

Token 355: '(np' (ID: 21997)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.03905866667628288
    2. '(' → logprob: -3.5390586853027344
    3. '(np' → logprob: -5.039058685302734
    4. '(K' → logprob: -6.664058685302734
    5. '(i' → logprob: -7.414058685302734
    6. '(N' → logprob: -8.039058685302734
    7. '(ans' → logprob: -8.039058685302734
    8. '((' → logprob: -8.914058685302734
    9. '(r' → logprob: -9.789058685302734
    10. '(max' → logprob: -11.164058685302734

Token 356: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.02120385691523552
    2. ' +' → logprob: -3.8962037563323975
    3. '):' → logprob: -7.771203994750977
    4. ',' → logprob: -9.021203994750977
    5. '):
' → logprob: -9.896203994750977
    6. '0' → logprob: -10.021203994750977
    7. '()+' → logprob: -12.146203994750977
    8. '1' → logprob: -12.521203994750977
    9. '2' → logprob: -13.146203994750977
    10. ')' → logprob: -13.271203994750977

Token 357: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000229046301683411
    2. ' ' → logprob: -9.250228881835938
    3. '2' → logprob: -9.375228881835938
    4. '+' → logprob: -11.000228881835938
    5. '(n' → logprob: -11.250228881835938
    6. '0' → logprob: -11.625228881835938
    7. '(' → logprob: -12.625228881835938
    8. ')' → logprob: -13.625228881835938
    9. ' +' → logprob: -13.875228881835938
    10. '
' → logprob: -14.125228881835938

Token 358: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.13792099058628082
    2. '+' → logprob: -2.637921094894409
    3. '):' → logprob: -2.887921094894409
    4. '       ' → logprob: -8.012921333312988
    5. '():
' → logprob: -8.012921333312988
    6. '   ' → logprob: -8.637921333312988
    7. ':' → logprob: -8.762921333312988
    8. '```' → logprob: -8.762921333312988
    9. '):
' → logprob: -9.012921333312988
    10. ':
' → logprob: -9.262921333312988

Token 359: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.014545407146215439
    2. '	       ' → logprob: -4.514545440673828
    3. '```' → logprob: -6.514545440673828
    4. '+' → logprob: -7.389545440673828
    5. '               ' → logprob: -8.139545440673828
    6. '       ' → logprob: -8.139545440673828
    7. '		' → logprob: -9.139545440673828
    8. '<|end|>' → logprob: -9.264545440673828
    9. 'tokens' → logprob: -9.639545440673828
    10. '[' → logprob: -9.764545440673828

Token 360: ' coef' (ID: 107584)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.48355236649513245
    2. '               ' → logprob: -1.23355233669281
    3. '           ' → logprob: -2.9835524559020996
    4. 'ans' → logprob: -3.2335524559020996
    5. ' for' → logprob: -7.4835524559021
    6. '(ans' → logprob: -7.7335524559021
    7. '```' → logprob: -7.9835524559021
    8. '	ans' → logprob: -8.108551979064941
    9. '       ' → logprob: -9.108551979064941
    10. '   ' → logprob: -9.483551979064941

Token 361: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.35460349917411804
    2. '=' → logprob: -1.2296035289764404
    3. ' +=' → logprob: -5.229603290557861
    4. '+=' → logprob: -7.229603290557861
    5. '   ' → logprob: -11.22960376739502
    6. ')' → logprob: -11.72960376739502
    7. ' ' → logprob: -11.72960376739502
    8. '+' → logprob: -12.22960376739502
    9. ']+=' → logprob: -12.60460376739502
    10. '```' → logprob: -12.85460376739502

Token 362: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.26716700196266174
    2. 'pow' → logprob: -2.017167091369629
    3. '(-' → logprob: -2.892167091369629
    4. 'mul' → logprob: -4.267167091369629
    5. '(n' → logprob: -4.517167091369629
    6. ' n' → logprob: -4.517167091369629
    7. 'fact' → logprob: -5.892167091369629
    8. '   ' → logprob: -6.767167091369629
    9. ' (-' → logprob: -6.892167091369629
    10. '((-' → logprob: -7.017167091369629

Token 363: 'cr' (ID: 798)
  Prédit: 'cr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cr' → logprob: -0.0001342903997283429
    2. 'hr' → logprob: -9.375134468078613
    3. 'q' → logprob: -11.125134468078613
    4. 'pow' → logprob: -11.250134468078613
    5. 'qr' → logprob: -12.125134468078613
    6. 'r' → logprob: -12.750134468078613
    7. 'pq' → logprob: -13.125134468078613
    8. '(cr' → logprob: -13.250134468078613
    9. 'cq' → logprob: -13.875134468078613
    10. 'CR' → logprob: -14.125134468078613

Token 364: '(np' (ID: 21997)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.3214718699455261
    2. '(np' → logprob: -1.446471929550171
    3. '(K' → logprob: -3.446471929550171
    4. '(' → logprob: -5.571471691131592
    5. '(i' → logprob: -6.321471691131592
    6. '(N' → logprob: -6.571471691131592
    7. 'nr' → logprob: -7.946471691131592
    8. 'K' → logprob: -9.32147216796875
    9. 'np' → logprob: -9.57147216796875
    10. '((' → logprob: -10.32147216796875

Token 365: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.568415641784668
    2. ',np' → logprob: -1.193415641784668
    3. '[np' → logprob: -3.193415641784668
    4. ',n' → logprob: -3.568415641784668
    5. 'np' → logprob: -3.693415641784668
    6. 'n' → logprob: -4.193415641784668
    7. '(n' → logprob: -5.068415641784668
    8. '(np' → logprob: -5.068415641784668
    9. 'i' → logprob: -6.318415641784668
    10. '[n' → logprob: -6.443415641784668

Token 366: ' nq' (ID: 183073)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00013011827832087874
    2. ' nq' → logprob: -9.000129699707031
    3. ')n' → logprob: -12.375129699707031
    4. ')' → logprob: -14.250129699707031
    5. '(n' → logprob: -14.375129699707031
    6. '	n' → logprob: -14.750129699707031
    7. '           ' → logprob: -16.00012969970703
    8. '[n' → logprob: -16.00012969970703
    9. ',n' → logprob: -16.37512969970703
    10. '<n' → logprob: -16.50012969970703

Token 367: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00020663968462031335
    2. ')*' → logprob: -8.62520694732666
    3. ')
' → logprob: -11.12520694732666
    4. '*' → logprob: -12.37520694732666
    5. ' )' → logprob: -12.50020694732666
    6. ' *' → logprob: -14.00020694732666
    7. ')*(' → logprob: -14.62520694732666
    8. '*)' → logprob: -14.75020694732666
    9. '<|end|>' → logprob: -15.37520694732666
    10. '),' → logprob: -15.50020694732666

Token 368: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.20631958544254303
    2. '           ' → logprob: -1.9563195705413818
    3. '*' → logprob: -3.331319570541382
    4. '<|end|>' → logprob: -5.331319808959961
    5. '               ' → logprob: -6.706319808959961
    6. '            
' → logprob: -7.206319808959961
    7. '
' → logprob: -7.581319808959961
    8. '       ' → logprob: -8.081319808959961
    9. ' ans' → logprob: -8.581319808959961
    10. ' 
' → logprob: -8.706319808959961

Token 369: ' pow' (ID: 9779)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.00046963783097453415
    2. ' pow' → logprob: -8.625469207763672
    3. 'fact' → logprob: -8.875469207763672
    4. '(pow' → logprob: -9.375469207763672
    5. 'n' → logprob: -10.875469207763672
    6. '   ' → logprob: -11.125469207763672
    7. 'mul' → logprob: -12.000469207763672
    8. '(n' → logprob: -12.125469207763672
    9. '(' → logprob: -12.125469207763672
    10. '       ' → logprob: -13.500469207763672

Token 370: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0027847886085510254
    2. '(' → logprob: -6.002784729003906
    3. '(n' → logprob: -8.377784729003906
    4. 'pow' → logprob: -10.252784729003906
    5. '(pow' → logprob: -10.377784729003906
    6. '```' → logprob: -12.877784729003906
    7. 'n' → logprob: -13.252784729003906
    8. '(m' → logprob: -13.627784729003906
    9. '(-' → logprob: -14.002784729003906
    10. '[' → logprob: -14.127784729003906

Token 371: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.16128972172737122
    2. '[np' → logprob: -1.9112896919250488
    3. '[-' → logprob: -7.786289691925049
    4. '[' → logprob: -7.911289691925049
    5. '[i' → logprob: -8.536290168762207
    6. '[(' → logprob: -10.161290168762207
    7. '(n' → logprob: -11.536290168762207
    8. '[N' → logprob: -11.661290168762207
    9. '[
' → logprob: -12.161290168762207
    10. '[K' → logprob: -12.286290168762207

Token 372: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.00011439072113716975
    2. 'r' → logprob: -9.500114440917969
    3. '(np' → logprob: -12.125114440917969
    4. '(n' → logprob: -12.500114440917969
    5. '(q' → logprob: -12.500114440917969
    6. '_q' → logprob: -12.625114440917969
    7. '[q' → logprob: -12.750114440917969
    8. ''q' → logprob: -13.000114440917969
    9. '[np' → logprob: -13.000114440917969
    10. 'rq' → logprob: -13.125114440917969

Token 373: ']' (ID: 60)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.4160470962524414
    2. ']%' → logprob: -2.0410470962524414
    3. '[n' → logprob: -2.2910470962524414
    4. ']' → logprob: -2.7910470962524414
    5. ' %' → logprob: -4.041047096252441
    6. '[i' → logprob: -4.041047096252441
    7. '%n' → logprob: -5.291047096252441
    8. '[' → logprob: -5.791047096252441
    9. ')%' → logprob: -6.666047096252441
    10. '(n' → logprob: -6.666047096252441

Token 374: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.6334078907966614
    2. '%' → logprob: -0.7584078907966614
    3. ')' → logprob: -8.758407592773438
    4. '%n' → logprob: -8.883407592773438
    5. '<|end|>' → logprob: -9.508407592773438
    6. ')%' → logprob: -9.633407592773438
    7. 'ans' → logprob: -9.883407592773438
    8. '           ' → logprob: -10.258407592773438
    9. ' %=' → logprob: -10.383407592773438
    10. '       ' → logprob: -10.383407592773438

Token 375: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.0013361937599256635
    2. '(M' → logprob: -7.376336097717285
    3. '(n' → logprob: -7.876336097717285
    4. ' MOD' → logprob: -8.751336097717285
    5. 'NR' → logprob: -10.001336097717285
    6. '(' → logprob: -10.501336097717285
    7. 'K' → logprob: -10.626336097717285
    8. 'nr' → logprob: -11.001336097717285
    9. '(K' → logprob: -11.626336097717285
    10. '(N' → logprob: -11.751336097717285

Token 376: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6385433077812195
    2. '<|end|>' → logprob: -1.1385433673858643
    3. ')' → logprob: -2.2635433673858643
    4. '       ' → logprob: -3.7635433673858643
    5. '*' → logprob: -5.138543128967285
    6. '<|end|>' → logprob: -5.513543128967285
    7. '               ' → logprob: -5.638543128967285
    8. ')*' → logprob: -6.138543128967285
    9. '   ' → logprob: -6.513543128967285
    10. '            
' → logprob: -6.763543128967285

Token 377: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0624118447303772
    2. ')' → logprob: -3.5624117851257324
    3. '<|end|>' → logprob: -3.8124117851257324
    4. '       ' → logprob: -4.937411785125732
    5. '               ' → logprob: -7.562411785125732
    6. '   ' → logprob: -7.562411785125732
    7. '```' → logprob: -8.06241226196289
    8. '<|end|>' → logprob: -8.68741226196289
    9. '*' → logprob: -8.81241226196289
    10. ',' → logprob: -8.93741226196289

Token 378: ' t' (ID: 260)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.011719152331352234
    2. '           ' → logprob: -4.511719226837158
    3. ' ans' → logprob: -7.511719226837158
    4. '	ans' → logprob: -10.26171875
    5. '(ans' → logprob: -10.51171875
    6. 'answer' → logprob: -10.63671875
    7. 'coef' → logprob: -11.51171875
    8. '       ' → logprob: -11.88671875
    9. '   ' → logprob: -12.26171875
    10. 'for' → logprob: -13.26171875

Token 379: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5806663632392883
    2. '=' → logprob: -1.3306663036346436
    3. ' +=' → logprob: -2.4556663036346436
    4. '+=' → logprob: -2.5806663036346436
    5. 'ans' → logprob: -4.580666542053223
    6. ' ans' → logprob: -6.955666542053223
    7. '   ' → logprob: -7.080666542053223
    8. '+' → logprob: -7.705666542053223
    9. '(ans' → logprob: -7.705666542053223
    10. '_ans' → logprob: -7.830666542053223

Token 380: ' coef' (ID: 107584)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.26071828603744507
    2. ' n' → logprob: -1.7607183456420898
    3. '(n' → logprob: -3.38571834564209
    4. 'nr' → logprob: -5.01071834564209
    5. 'ans' → logprob: -5.13571834564209
    6. ' (' → logprob: -6.01071834564209
    7. 'coef' → logprob: -6.38571834564209
    8. 'pow' → logprob: -6.63571834564209
    9. 'fact' → logprob: -6.88571834564209
    10. 'mul' → logprob: -7.01071834564209

Token 381: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.014204171486198902
    2. '*' → logprob: -4.264204025268555
    3. '*n' → logprob: -11.264204025268555
    4. 'n' → logprob: -12.014204025268555
    5. '=' → logprob: -12.514204025268555
    6. '           ' → logprob: -12.639204025268555
    7. ' ' → logprob: -12.889204025268555
    8. 'ans' → logprob: -13.139204025268555
    9. '   ' → logprob: -13.639204025268555
    10. ' ans' → logprob: -13.889204025268555

Token 382: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.007694763597100973
    2. 'pow' → logprob: -5.632694721221924
    3. 'fact' → logprob: -6.007694721221924
    4. ' n' → logprob: -7.007694721221924
    5. '(n' → logprob: -7.507694721221924
    6. '(' → logprob: -9.882695198059082
    7. 'mul' → logprob: -10.132695198059082
    8. ' fact' → logprob: -11.382695198059082
    9. '   ' → logprob: -11.882695198059082
    10. 'ans' → logprob: -11.882695198059082

Token 383: 'hr' (ID: 2012)
  Prédit: 'cr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cr' → logprob: -0.12734906375408173
    2. 'hr' → logprob: -2.1273491382598877
    3. 'r' → logprob: -9.502348899841309
    4. 'pow' → logprob: -9.752348899841309
    5. 'h' → logprob: -10.252348899841309
    6. 'rc' → logprob: -10.502348899841309
    7. 'qr' → logprob: -10.752348899841309
    8. 'pr' → logprob: -10.752348899841309
    9. 'c' → logprob: -10.877348899841309
    10. '```' → logprob: -11.252348899841309

Token 384: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.035413116216659546
    2. '(' → logprob: -3.7854130268096924
    3. '(N' → logprob: -5.1604132652282715
    4. '(K' → logprob: -5.2854132652282715
    5. '(np' → logprob: -7.1604132652282715
    6. 'nr' → logprob: -8.785412788391113
    7. '(i' → logprob: -9.285412788391113
    8. '((' → logprob: -9.285412788391113
    9. '2' → logprob: -10.160412788391113
    10. '(m' → logprob: -10.160412788391113

Token 385: 'r' (ID: 81)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.41096654534339905
    2. 'r' → logprob: -2.285966634750366
    3. '(K' → logprob: -2.285966634750366
    4. '(' → logprob: -2.410966634750366
    5. '(np' → logprob: -3.910966634750366
    6. '(r' → logprob: -4.035966396331787
    7. '(N' → logprob: -6.035966396331787
    8. 'nr' → logprob: -6.160966396331787
    9. '((' → logprob: -7.910966396331787
    10. '(i' → logprob: -8.410966873168945

Token 386: ' +' (ID: 659)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6559857726097107
    2. '(n' → logprob: -1.7809858322143555
    3. ',' → logprob: -1.9059858322143555
    4. '(K' → logprob: -1.9059858322143555
    5. ',K' → logprob: -5.0309858322143555
    6. '(np' → logprob: -5.2809858322143555
    7. '(N' → logprob: -6.5309858322143555
    8. '(i' → logprob: -7.1559858322143555
    9. ',n' → logprob: -7.6559858322143555
    10. '((' → logprob: -7.9059858322143555

Token 387: ' nq' (ID: 183073)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.16151836514472961
    2. 'np' → logprob: -2.5365183353424072
    3. 'K' → logprob: -3.0365183353424072
    4. ' nq' → logprob: -4.661518573760986
    5. '2' → logprob: -5.161518573760986
    6. 'i' → logprob: -5.536518573760986
    7. 'N' → logprob: -6.661518573760986
    8. '1' → logprob: -7.536518573760986
    9. '(n' → logprob: -8.161518096923828
    10. '   ' → logprob: -8.411518096923828

Token 388: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0029510781168937683
    2. '(n' → logprob: -6.877951145172119
    3. ',n' → logprob: -7.127951145172119
    4. ' ,' → logprob: -7.377951145172119
    5. '(' → logprob: -8.627950668334961
    6. ',K' → logprob: -8.752950668334961
    7. '(),' → logprob: -10.377950668334961
    8. '+' → logprob: -10.877950668334961
    9. '-' → logprob: -10.877950668334961
    10. ' -' → logprob: -11.002950668334961

Token 389: ' N' (ID: 478)
  Prédit: 'np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'np' → logprob: -0.5366717576980591
    2. 'n' → logprob: -1.536671757698059
    3. 'K' → logprob: -2.2866716384887695
    4. 'i' → logprob: -3.4116716384887695
    5. ' nq' → logprob: -4.0366716384887695
    6. 'nr' → logprob: -4.0366716384887695
    7. 'N' → logprob: -4.0366716384887695
    8. '2' → logprob: -5.5366716384887695
    9. ' np' → logprob: -5.5366716384887695
    10. '   ' → logprob: -6.7866716384887695

Token 390: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.07718385010957718
    2. ' -' → logprob: -3.077183961868286
    3. ')' → logprob: -3.577183961868286
    4. ')
' → logprob: -10.577183723449707
    5. '-n' → logprob: -10.827183723449707
    6. 'n' → logprob: -10.952183723449707
    7. '[' → logprob: -11.077183723449707
    8. '   ' → logprob: -11.077183723449707
    9. ',' → logprob: -11.077183723449707
    10. '       ' → logprob: -11.202183723449707

Token 391: ' nq' (ID: 183073)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.14585301280021667
    2. 'i' → logprob: -3.020853042602539
    3. 'np' → logprob: -3.145853042602539
    4. '2' → logprob: -3.395853042602539
    5. 'n' → logprob: -5.145853042602539
    6. 'K' → logprob: -6.145853042602539
    7. 'nr' → logprob: -7.645853042602539
    8. '(i' → logprob: -7.895853042602539
    9. '   ' → logprob: -8.020853042602539
    10. ' nq' → logprob: -8.020853042602539

Token 392: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002651503309607506
    2. ' )' → logprob: -8.750265121459961
    3. ')%' → logprob: -10.000265121459961
    4. '-' → logprob: -10.500265121459961
    5. '%' → logprob: -11.000265121459961
    6. ')
' → logprob: -11.500265121459961
    7. ' -' → logprob: -13.625265121459961
    8. '[' → logprob: -13.875265121459961
    9. ' %' → logprob: -14.375265121459961
    10. '   ' → logprob: -14.500265121459961

Token 393: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.75232994556427
    2. ' %' → logprob: -0.75232994556427
    3. '           ' → logprob: -3.2523298263549805
    4. ')' → logprob: -4.3773298263549805
    5. ')%' → logprob: -6.2523298263549805
    6. '<|end|>' → logprob: -6.6273298263549805
    7. '%n' → logprob: -6.8773298263549805
    8. '       ' → logprob: -7.6273298263549805
    9. '<|end|>' → logprob: -8.12732982635498
    10. '
' → logprob: -8.25232982635498

Token 394: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -9.253090865968261e-06
    2. ' MOD' → logprob: -11.625009536743164
    3. '998' → logprob: -15.125009536743164
    4. '_MOD' → logprob: -17.250009536743164
    5. '.MOD' → logprob: -17.750009536743164
    6. '```' → logprob: -18.125009536743164
    7. 'MO' → logprob: -19.625009536743164
    8. '999' → logprob: -19.750009536743164
    9. '(M' → logprob: -20.000009536743164
    10. '
' → logprob: -20.250009536743164

Token 395: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.020114241167902946
    2. '       ' → logprob: -4.270114421844482
    3. '<|end|>' → logprob: -5.770114421844482
    4. ')' → logprob: -7.270114421844482
    5. '               ' → logprob: -7.520114421844482
    6. '```' → logprob: -7.895114421844482
    7. '   ' → logprob: -8.020113945007324
    8. 'ans' → logprob: -8.520113945007324
    9. '
' → logprob: -9.145113945007324
    10. '            
' → logprob: -9.270113945007324

Token 396: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.034448664635419846
    2. '<|end|>' → logprob: -3.6594486236572266
    3. '```' → logprob: -5.659448623657227
    4. ')' → logprob: -6.034448623657227
    5. '       ' → logprob: -6.909448623657227
    6. '               ' → logprob: -7.784448623657227
    7. '<|end|>' → logprob: -8.409448623657227
    8. ')
' → logprob: -9.659448623657227
    9. '                   ' → logprob: -10.034448623657227
    10. '            
' → logprob: -10.284448623657227

Token 397: ' t' (ID: 260)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4850345253944397
    2. 'ans' → logprob: -0.9850345253944397
    3. '
' → logprob: -5.235034465789795
    4. '       ' → logprob: -6.485034465789795
    5. '   ' → logprob: -7.110034465789795
    6. '+' → logprob: -7.235034465789795
    7. '```' → logprob: -7.235034465789795
    8. ' ans' → logprob: -7.360034465789795
    9. '               ' → logprob: -8.110034942626953
    10. '	ans' → logprob: -8.235034942626953

Token 398: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.05084254592657089
    2. '=' → logprob: -3.175842523574829
    3. ' +=' → logprob: -5.300842761993408
    4. '+' → logprob: -6.925842761993408
    5. '<|end|>' → logprob: -6.925842761993408
    6. ']+=' → logprob: -7.925842761993408
    7. ')' → logprob: -8.80084228515625
    8. '   ' → logprob: -9.67584228515625
    9. '[' → logprob: -9.92584228515625
    10. '       ' → logprob: -10.67584228515625

Token 399: ' coef' (ID: 107584)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.22213466465473175
    2. ' ans' → logprob: -1.7221347093582153
    3. '(ans' → logprob: -4.847134590148926
    4. 't' → logprob: -4.847134590148926
    5. ' t' → logprob: -5.847134590148926
    6. 'MOD' → logprob: -7.722134590148926
    7. '0' → logprob: -7.847134590148926
    8. 'coef' → logprob: -7.847134590148926
    9. '	ans' → logprob: -8.847134590148926
    10. ' MOD' → logprob: -8.972134590148926

Token 400: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.1674220860004425
    2. '[n' → logprob: -2.79242205619812
    3. '*' → logprob: -3.54242205619812
    4. '<|end|>' → logprob: -3.54242205619812
    5. '%' → logprob: -4.042422294616699
    6. ')' → logprob: -5.167422294616699
    7. '[' → logprob: -5.292422294616699
    8. ' %' → logprob: -6.167422294616699
    9. '[i' → logprob: -6.917422294616699
    10. '*n' → logprob: -7.417422294616699

Token 401: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6725207567214966
    2. ' n' → logprob: -0.7975207567214966
    3. 'pow' → logprob: -3.797520637512207
    4. 't' → logprob: -5.297520637512207
    5. '(n' → logprob: -5.797520637512207
    6. ' t' → logprob: -6.047520637512207
    7. ' pow' → logprob: -6.547520637512207
    8. ' (' → logprob: -6.547520637512207
    9. 'coef' → logprob: -6.922520637512207
    10. 'ans' → logprob: -7.172520637512207

Token 402: 'hr' (ID: 2012)
  Prédit: 'hr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hr' → logprob: -0.0016598280053585768
    2. 'cr' → logprob: -6.626659870147705
    3. 'h' → logprob: -9.126659393310547
    4. '(n' → logprob: -10.376659393310547
    5. 'n' → logprob: -10.626659393310547
    6. 'r' → logprob: -10.876659393310547
    7. '[n' → logprob: -11.126659393310547
    8. '```' → logprob: -11.126659393310547
    9. 'kr' → logprob: -11.626659393310547
    10. '(hr' → logprob: -11.751659393310547

Token 403: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0012110683601349592
    2. '(' → logprob: -6.751211166381836
    3. '(np' → logprob: -10.501211166381836
    4. '(nd' → logprob: -12.251211166381836
    5. ' (' → logprob: -13.501211166381836
    6. '(nn' → logprob: -13.626211166381836
    7. '(nx' → logprob: -13.626211166381836
    8. '(N' → logprob: -13.876211166381836
    9. '((' → logprob: -14.001211166381836
    10. '(nt' → logprob: -14.501211166381836

Token 404: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -8.780830830801278e-05
    2. '(n' → logprob: -9.87508773803711
    3. 'n' → logprob: -11.50008773803711
    4. 'nr' → logprob: -11.62508773803711
    5. '(r' → logprob: -12.62508773803711
    6. '(' → logprob: -12.87508773803711
    7. ',r' → logprob: -13.50008773803711
    8. 'rr' → logprob: -13.62508773803711
    9. '	r' → logprob: -13.75008773803711
    10. ' r' → logprob: -13.87508773803711

Token 405: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5016221404075623
    2. '+n' → logprob: -1.626622200012207
    3. ' +' → logprob: -1.626622200012207
    4. '-' → logprob: -7.376622200012207
    5. '+t' → logprob: -8.751622200012207
    6. '+
' → logprob: -8.876622200012207
    7. ',' → logprob: -9.501622200012207
    8. ' -' → logprob: -10.251622200012207
    9. '[n' → logprob: -10.376622200012207
    10. '<|end|>' → logprob: -10.751622200012207

Token 406: ' nq' (ID: 183073)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0007011185516603291
    2. '1' → logprob: -7.500700950622559
    3. ' nq' → logprob: -9.375700950622559
    4. 'q' → logprob: -10.125700950622559
    5. '2' → logprob: -12.000700950622559
    6. '(n' → logprob: -12.125700950622559
    7. 'np' → logprob: -13.000700950622559
    8. '
' → logprob: -13.625700950622559
    9. ' ' → logprob: -14.125700950622559
    10. '     ' → logprob: -14.250700950622559

Token 407: ',' (ID: 11)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.03327897563576698
    2. '-' → logprob: -3.5332789421081543
    3. ' +' → logprob: -6.033278942108154
    4. ' -' → logprob: -7.408278942108154
    5. '+n' → logprob: -8.408279418945312
    6. ',' → logprob: -8.533279418945312
    7. '   ' → logprob: -10.158279418945312
    8. '```' → logprob: -10.783279418945312
    9. '+,' → logprob: -11.783279418945312
    10. '1' → logprob: -11.908279418945312

Token 408: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.01119942869991064
    2. ' N' → logprob: -4.511199474334717
    3. 'n' → logprob: -9.261198997497559
    4. '(N' → logprob: -11.261198997497559
    5. '   ' → logprob: -11.636198997497559
    6. ' ' → logprob: -11.761198997497559
    7. ' (' → logprob: -12.511198997497559
    8. '(' → logprob: -12.761198997497559
    9. '           ' → logprob: -12.761198997497559
    10. '       ' → logprob: -12.761198997497559

Token 409: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.4583539068698883
    2. '-' → logprob: -1.583353877067566
    3. '-n' → logprob: -1.833353877067566
    4. '-q' → logprob: -6.2083539962768555
    5. '+' → logprob: -7.7083539962768555
    6. ')' → logprob: -11.833353996276855
    7. '+n' → logprob: -12.083353996276855
    8. ' +' → logprob: -12.458353996276855
    9. '
' → logprob: -12.583353996276855
    10. ' ' → logprob: -12.833353996276855

Token 410: ' nq' (ID: 183073)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.10496363788843155
    2. ' nq' → logprob: -2.854963541030884
    3. '1' → logprob: -3.229963541030884
    4. '(n' → logprob: -6.979963779449463
    5. 'np' → logprob: -7.354963779449463
    6. 'q' → logprob: -7.979963779449463
    7. '-' → logprob: -9.104963302612305
    8. '(' → logprob: -9.229963302612305
    9. ' n' → logprob: -9.354963302612305
    10. '   ' → logprob: -9.729963302612305

Token 411: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.07442490756511688
    2. ' -' → logprob: -2.699424982070923
    3. ')' → logprob: -5.949424743652344
    4. '+' → logprob: -6.449424743652344
    5. '   ' → logprob: -9.199424743652344
    6. '       ' → logprob: -9.449424743652344
    7. ' +' → logprob: -10.824424743652344
    8. '1' → logprob: -10.949424743652344
    9. '-n' → logprob: -11.199424743652344
    10. '```' → logprob: -11.574424743652344

Token 412: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0015370006440207362
    2. '2' → logprob: -6.501536846160889
    3. ' ' → logprob: -11.126537322998047
    4. 'i' → logprob: -11.501537322998047
    5. '   ' → logprob: -12.626537322998047
    6. 'np' → logprob: -13.001537322998047
    7. '
' → logprob: -13.876537322998047
    8. '(' → logprob: -14.376537322998047
    9. 'n' → logprob: -14.501537322998047
    10. '(i' → logprob: -15.001537322998047

Token 413: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.143808109802194e-05
    2. '2' → logprob: -10.250041007995605
    3. ' ' → logprob: -12.375041007995605
    4. '
' → logprob: -14.750041007995605
    5. '```' → logprob: -14.875041007995605
    6. '0' → logprob: -15.000041007995605
    7. ')' → logprob: -15.625041007995605
    8. '   ' → logprob: -16.000041961669922
    9. 't' → logprob: -17.500041961669922
    10. 'i' → logprob: -17.562541961669922

Token 414: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.060719069093465805
    2. '%' → logprob: -3.8107190132141113
    3. ')%' → logprob: -3.8107190132141113
    4. ' %' → logprob: -4.560719013214111
    5. ' )' → logprob: -6.685719013214111
    6. '```' → logprob: -6.810719013214111
    7. '<|end|>' → logprob: -6.935719013214111
    8. '
' → logprob: -8.31071949005127
    9. '       ' → logprob: -9.43571949005127
    10. '           ' → logprob: -9.68571949005127

Token 415: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.48272794485092163
    2. '%' → logprob: -1.1077280044555664
    3. '
' → logprob: -3.4827280044555664
    4. '<|end|>' → logprob: -4.857728004455566
    5. '           ' → logprob: -4.982728004455566
    6. ')' → logprob: -5.982728004455566
    7. ')%' → logprob: -6.732728004455566
    8. ' %=' → logprob: -7.107728004455566
    9. '       ' → logprob: -7.357728004455566
    10. '%n' → logprob: -7.482728004455566

Token 416: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.001502717612311244
    2. ' MOD' → logprob: -6.501502513885498
    3. '_MOD' → logprob: -15.251502990722656
    4. '```' → logprob: -17.001502990722656
    5. ' ' → logprob: -18.001502990722656
    6. '
' → logprob: -18.001502990722656
    7. '.MOD' → logprob: -18.126502990722656
    8. ' ' → logprob: -18.376502990722656
    9. ' 
' → logprob: -18.751502990722656
    10. 'MO' → logprob: -19.001502990722656

Token 417: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8276247382164001
    2. '<|end|>' → logprob: -1.702624797821045
    3. '\n' → logprob: -1.827624797821045
    4. '
' → logprob: -1.952624797821045
    5. '```' → logprob: -3.827624797821045
    6. '=' → logprob: -3.952624797821045
    7. '<|end|>' → logprob: -5.327624797821045
    8. ')' → logprob: -5.452624797821045
    9. ' 
' → logprob: -5.577624797821045
    10. '            
' → logprob: -5.827624797821045

Token 418: '           ' (ID: 352)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.9949626326560974
    2. '<|end|>' → logprob: -1.3699626922607422
    3. '=' → logprob: -2.744962692260742
    4. '\' → logprob: -2.869962692260742
    5. '           ' → logprob: -2.869962692260742
    6. '\n' → logprob: -3.119962692260742
    7. '``' → logprob: -3.494962692260742
    8. '\t' → logprob: -3.869962692260742
    9. '[' → logprob: -3.994962692260742
    10. ')' → logprob: -4.119962692260742

Token 419: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -1.2490756511688232
    2. 't' → logprob: -1.4990756511688232
    3. '=' → logprob: -1.6240756511688232
    4. '\n' → logprob: -2.1240756511688232
    5. ' t' → logprob: -2.6240756511688232
    6. '```' → logprob: -2.8740756511688232
    7. ' ans' → logprob: -4.124075889587402
    8. ')' → logprob: -5.374075889587402
    9. ' =' → logprob: -5.374075889587402
    10. '\t' → logprob: -5.499075889587402

Token 420: ' =' (ID: 314)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.05560252442955971
    2. ' +=' → logprob: -3.305602550506592
    3. '=' → logprob: -4.180602550506592
    4. '%=' → logprob: -6.305602550506592
    5. ' =' → logprob: -8.555602073669434
    6. ' %=' → logprob: -10.555602073669434
    7. ']+=' → logprob: -10.680602073669434
    8. '+' → logprob: -10.805602073669434
    9. '+=(' → logprob: -11.930602073669434
    10. '   ' → logprob: -11.930602073669434

Token 421: ' (' (ID: 350)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -9.043078898685053e-05
    2. ' (' → logprob: -9.500090599060059
    3. '(' → logprob: -11.125090599060059
    4. '(answer' → logprob: -15.125090599060059
    5. '(ax' → logprob: -16.125089645385742
    6. '(t' → logprob: -16.375089645385742
    7. '(acc' → logprob: -16.500089645385742
    8. '(ast' → logprob: -17.000089645385742
    9. '           ' → logprob: -17.250089645385742
    10. '(ai' → logprob: -17.250089645385742

Token 422: 'ans' (ID: 616)
  Prédit: 'ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.12696076929569244
    2. '(ans' → logprob: -2.1269607543945312
    3. ' ans' → logprob: -10.376960754394531
    4. '	ans' → logprob: -14.001960754394531
    5. '_ans' → logprob: -15.001960754394531
    6. '(' → logprob: -15.001960754394531
    7. 'answer' → logprob: -17.12696075439453
    8. ' (' → logprob: -17.25196075439453
    9. '           ' → logprob: -17.62696075439453
    10. '
' → logprob: -17.75196075439453

Token 423: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5767725706100464
    2. ' +' → logprob: -0.8267725706100464
    3. ' ans' → logprob: -7.326772689819336
    4. 'ans' → logprob: -9.076772689819336
    5. '+t' → logprob: -10.326772689819336
    6. '(ans' → logprob: -10.826772689819336
    7. '	ans' → logprob: -13.201772689819336
    8. '```' → logprob: -13.701772689819336
    9. '_ans' → logprob: -13.826772689819336
    10. '+
' → logprob: -13.826772689819336

Token 424: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.018150296062231064
    2. ' t' → logprob: -4.018150329589844
    3. '	t' → logprob: -16.268150329589844
    4. ')t' → logprob: -16.268150329589844
    5. '`t' → logprob: -16.518150329589844
    6. '   ' → logprob: -17.518150329589844
    7. '           ' → logprob: -17.518150329589844
    8. '
' → logprob: -18.393150329589844
    9. ' ' → logprob: -19.268150329589844
    10. '(t' → logprob: -19.393150329589844

Token 425: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0032095611095428467
    2. ' )' → logprob: -5.753209590911865
    3. ')%' → logprob: -10.378209114074707
    4. '%' → logprob: -15.753209114074707
    5. ']' → logprob: -16.128210067749023
    6. '）' → logprob: -16.878210067749023
    7. '<|end|>' → logprob: -16.878210067749023
    8. '```' → logprob: -17.128210067749023
    9. ')
' → logprob: -17.128210067749023
    10. ' %' → logprob: -17.253210067749023

Token 426: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.08209821581840515
    2. '%' → logprob: -2.5820982456207275
    3. '(ans' → logprob: -6.457098007202148
    4. ')' → logprob: -6.832098007202148
    5. ' ans' → logprob: -7.957098007202148
    6. 'ans' → logprob: -9.832098007202148
    7. '
' → logprob: -10.332098007202148
    8. '%n' → logprob: -10.707098007202148
    9. ')%' → logprob: -11.082098007202148
    10. ' ' → logprob: -11.207098007202148

Token 427: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -5.512236498361744e-07
    2. ' MOD' → logprob: -14.750000953674316
    3. '998' → logprob: -16.0
    4. '```' → logprob: -17.5
    5. '
' → logprob: -19.0
    6. 'MO' → logprob: -19.875
    7. '_MOD' → logprob: -21.0
    8. '.MOD' → logprob: -21.125
    9. '   ' → logprob: -21.375
    10. '`' → logprob: -21.625

Token 428: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 429: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4186554253101349
    2. '<|end|>' → logprob: -1.5436553955078125
    3. '   ' → logprob: -2.6686553955078125
    4. '```' → logprob: -3.1686553955078125
    5. '\n' → logprob: -4.6686553955078125
    6. '       ' → logprob: -6.4186553955078125
    7. ' ' → logprob: -6.6686553955078125
    8. ']' → logprob: -7.0436553955078125
    9. '\' → logprob: -7.2936553955078125
    10. '}' → logprob: -7.6686553955078125

Token 430: ' else' (ID: 1203)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0550515316426754
    2. '   ' → logprob: -3.305051565170288
    3. ')' → logprob: -4.305051326751709
    4. '       ' → logprob: -6.180051326751709
    5. ' print' → logprob: -7.930051326751709
    6. '<|end|>' → logprob: -8.180051803588867
    7. ']' → logprob: -8.305051803588867
    8. '```' → logprob: -8.680051803588867
    9. '	print' → logprob: -9.555051803588867
    10. 'else' (adapté à ' else') → logprob: -10.305051803588867

Token 431: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010896422900259495
    2. '       ' → logprob: -5.3858962059021
    3. ' ans' → logprob: -6.3858962059021
    4. '	ans' → logprob: -6.8858962059021
    5. ' continue' → logprob: -7.3858962059021
    6. '
' → logprob: -7.7608962059021
    7. 'print' → logprob: -7.8858962059021
    8. ' print' → logprob: -7.8858962059021
    9. 'continue' → logprob: -8.260896682739258
    10. '	continue' → logprob: -8.385896682739258

Token 432: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23500968515872955
    2. ' ans' → logprob: -1.8600096702575684
    3. ' pass' → logprob: -3.8600096702575684
    4. ' print' → logprob: -4.860009670257568
    5. 'ans' → logprob: -4.985009670257568
    6. 'print' → logprob: -5.485009670257568
    7. '	ans' → logprob: -5.610009670257568
    8. ' continue' → logprob: -5.735009670257568
    9. '       ' → logprob: -5.860009670257568
    10. 'pass' → logprob: -6.235009670257568

Token 433: ' np' (ID: 5374)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.1243230327963829
    2. 'print' → logprob: -2.2493231296539307
    3. 'np' (adapté à ' np') → logprob: -5.499322891235352
    4. '   ' → logprob: -5.624322891235352
    5. 'for' → logprob: -6.749322891235352
    6. 'continue' → logprob: -7.749322891235352
    7. 'pass' → logprob: -7.749322891235352
    8. '       ' → logprob: -7.999322891235352
    9. 'nr' → logprob: -7.999322891235352
    10. 'pow' → logprob: -8.249322891235352

Token 434: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759819149971008
    2. ' =' → logprob: -0.8259819149971008
    3. ',' → logprob: -11.700982093811035
    4. ')' → logprob: -12.325982093811035
    5. '_' → logprob: -12.450982093811035
    6. '[' → logprob: -12.575982093811035
    7. '   ' → logprob: -12.575982093811035
    8. '	' → logprob: -12.825982093811035
    9. ' ' → logprob: -13.450982093811035
    10. 'for' → logprob: -13.450982093811035

Token 435: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.09689764678478241
    2. '(i' → logprob: -2.471897602081299
    3. ' i' → logprob: -5.096897602081299
    4. ' (' → logprob: -6.846897602081299
    5. 'min' → logprob: -8.971898078918457
    6. '0' → logprob: -9.096898078918457
    7. 'K' → logprob: -9.221898078918457
    8. '(' → logprob: -9.596898078918457
    9. 'max' → logprob: -9.596898078918457
    10. '(K' → logprob: -9.596898078918457

Token 436: '//' (ID: 393)
  Prédit: '//'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.0038016228936612606
    2. ' //' → logprob: -6.1288018226623535
    3. '=' → logprob: -7.1288018226623535
    4. '//=' → logprob: -7.7538018226623535
    5. '#' → logprob: -8.503801345825195
    6. ' =' → logprob: -8.753801345825195
    7. '   ' → logprob: -13.003801345825195
    8. '-' → logprob: -13.128801345825195
    9. '```' → logprob: -13.128801345825195
    10. '<|end|>' → logprob: -13.378801345825195

Token 437: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.771655115589965e-05
    2. ' ' → logprob: -11.000018119812012
    3. '1' → logprob: -14.000018119812012
    4. '۲' → logprob: -17.000017166137695
    5. '```' → logprob: -17.125017166137695
    6. '<|end|>' → logprob: -18.437517166137695
    7. '...' → logprob: -18.562517166137695
    8. '   ' → logprob: -18.812517166137695
    9. '3' → logprob: -19.062517166137695
    10. '(' → logprob: -19.187517166137695

Token 438: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.18362948298454285
    2. '-' → logprob: -1.9336295127868652
    3. ' *' → logprob: -4.308629512786865
    4. '*' → logprob: -5.183629512786865
    5. '       ' → logprob: -6.933629512786865
    6. '+' → logprob: -7.433629512786865
    7. ' =' → logprob: -7.683629512786865
    8. '	' → logprob: -7.683629512786865
    9. '=' → logprob: -7.808629512786865
    10. ' +' → logprob: -8.183629035949707

Token 439: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.05461391061544418
    2. '1' → logprob: -3.4296138286590576
    3. ' max' → logprob: -4.179614067077637
    4. '0' → logprob: -5.929614067077637
    5. '(max' → logprob: -5.929614067077637
    6. 'min' → logprob: -10.179614067077637
    7. '(' → logprob: -10.679614067077637
    8. ' ' → logprob: -11.054614067077637
    9. '2' → logprob: -11.054614067077637
    10. ' (' → logprob: -11.429614067077637

Token 440: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0003382038848940283
    2. '(' → logprob: -8.000338554382324
    3. ' (' → logprob: -13.250338554382324
    4. '(
' → logprob: -15.000338554382324
    5. '((' → logprob: -15.625338554382324
    6. '1' → logprob: -15.750338554382324
    7. '(int' → logprob: -15.875338554382324
    8. '(n' → logprob: -16.375337600708008
    9. '```' → logprob: -16.500337600708008
    10. '0' → logprob: -17.375337600708008

Token 441: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.02084420621395111
    2. '1' → logprob: -4.395843982696533
    3. ' -' → logprob: -5.395843982696533
    4. '(' → logprob: -6.145843982696533
    5. '```' → logprob: -7.270843982696533
    6. '(i' → logprob: -8.395844459533691
    7. '(K' → logprob: -8.520844459533691
    8. ' ' → logprob: -8.895844459533691
    9. '-K' → logprob: -9.145844459533691
    10. ' (' → logprob: -9.895844459533691

Token 442: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9146995327901095e-05
    2. ' ' → logprob: -11.500019073486328
    3. '2' → logprob: -12.500019073486328
    4. '0' → logprob: -12.875019073486328
    5. '(' → logprob: -13.750019073486328
    6. '```' → logprob: -14.000019073486328
    7. '   ' → logprob: -14.500019073486328
    8. '
' → logprob: -16.125019073486328
    9. '  ' → logprob: -16.750019073486328
    10. '<|end|>' → logprob: -16.875019073486328

Token 443: '-K' (ID: 12249)
  Prédit: '-K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-K' → logprob: -0.006770910695195198
    2. '-' → logprob: -6.006771087646484
    3. ' -' → logprob: -6.381771087646484
    4. '(K' → logprob: -7.131771087646484
    5. '```' → logprob: -7.131771087646484
    6. '+' → logprob: -7.881771087646484
    7. '<|end|>' → logprob: -9.006771087646484
    8. ',' → logprob: -9.131771087646484
    9. '(' → logprob: -9.256771087646484
    10. 'K' → logprob: -9.381771087646484

Token 444: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006052182870917022
    2. ' ,' → logprob: -8.625605583190918
    3. '[' → logprob: -9.125605583190918
    4. '+' → logprob: -9.125605583190918
    5. '```' → logprob: -9.625605583190918
    6. '(' → logprob: -9.875605583190918
    7. '(i' → logprob: -10.625605583190918
    8. ')' → logprob: -10.875605583190918
    9. ',
' → logprob: -11.625605583190918
    10. '(n' → logprob: -11.625605583190918

Token 445: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3869098126888275
    2. ' ' → logprob: -1.13690984249115
    3. '1' → logprob: -10.386909484863281
    4. '```' → logprob: -12.386909484863281
    5. '   ' → logprob: -13.636909484863281
    6. ' ' → logprob: -14.386909484863281
    7. '<|end|>' → logprob: -14.511909484863281
    8. '       ' → logprob: -15.261909484863281
    9. '(' → logprob: -15.449409484863281
    10. ' 
' → logprob: -16.01190948486328

Token 446: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002189279766753316
    2. ' ' → logprob: -6.1271891593933105
    3. '1' → logprob: -12.627189636230469
    4. '   ' → logprob: -15.127189636230469
    5. '```' → logprob: -15.377189636230469
    6. '
' → logprob: -15.877189636230469
    7. '(' → logprob: -16.12718963623047
    8. '<|end|>' → logprob: -17.31468963623047
    9. ' ' → logprob: -17.81468963623047
    10. ',' → logprob: -17.93968963623047

Token 447: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08047878742218018
    2. '<|end|>' → logprob: -2.8304786682128906
    3. '-' → logprob: -4.830478668212891
    4. '+' → logprob: -5.080478668212891
    5. '       ' → logprob: -6.705478668212891
    6. ' -' → logprob: -6.830478668212891
    7. ' +' → logprob: -7.205478668212891
    8. '<|end|>' → logprob: -8.08047866821289
    9. ')+' → logprob: -8.70547866821289
    10. '   ' → logprob: -9.45547866821289

Token 448: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 449: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.02109741047024727
    2. 'nr' → logprob: -4.146097183227539
    3. 'np' → logprob: -5.771097183227539
    4. 'coef' → logprob: -7.146097183227539
    5. 'n' → logprob: -8.271097183227539
    6. 'print' → logprob: -8.646097183227539
    7. ' ans' → logprob: -8.771097183227539
    8. '   ' → logprob: -9.271097183227539
    9. 'for' → logprob: -9.271097183227539
    10. 'pow' → logprob: -9.646097183227539

Token 450: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08785906434059143
    2. ' +=' → logprob: -2.8378591537475586
    3. '=' → logprob: -4.462859153747559
    4. '<|end|>' → logprob: -4.587859153747559
    5. ' *=' → logprob: -6.837859153747559
    6. ')' → logprob: -7.337859153747559
    7. '+=' → logprob: -7.587859153747559
    8. ' %=' → logprob: -8.337859153747559
    9. '   ' → logprob: -8.337859153747559
    10. ' ' → logprob: -8.462859153747559

Token 451: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.15440733730793
    2. 'n' → logprob: -2.404407262802124
    3. 'pow' → logprob: -3.279407262802124
    4. ' n' → logprob: -5.654407501220703
    5. ' ' → logprob: -5.904407501220703
    6. '(n' → logprob: -6.029407501220703
    7. '(' → logprob: -6.154407501220703
    8. '1' → logprob: -6.279407501220703
    9. ' pow' → logprob: -7.154407501220703
    10. '2' → logprob: -7.654407501220703

Token 452: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7346649765968323
    2. 'n' → logprob: -1.2346649169921875
    3. 'pow' → logprob: -1.6096649169921875
    4. '(n' → logprob: -4.4846649169921875
    5. '(' → logprob: -4.8596649169921875
    6. '1' → logprob: -5.6096649169921875
    7. 'ans' → logprob: -6.2346649169921875
    8. '(pow' → logprob: -6.2346649169921875
    9. 'sum' → logprob: -6.9846649169921875
    10. '2' → logprob: -7.3596649169921875

Token 453: '
' (ID: 198)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6370019316673279
    2. '<|end|>' → logprob: -1.3870019912719727
    3. 'for' → logprob: -2.5120019912719727
    4. '	for' → logprob: -2.5120019912719727
    5. '   ' → logprob: -4.262001991271973
    6. '       ' → logprob: -4.387001991271973
    7. '```' → logprob: -4.637001991271973
    8. '
' → logprob: -4.762001991271973
    9. '\t' → logprob: -5.137001991271973
    10. '[' → logprob: -6.387001991271973

Token 454: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2569040060043335
    2. ' for' → logprob: -2.131904125213623
    3. '<|end|>' → logprob: -2.631904125213623
    4. '	for' → logprob: -4.506904125213623
    5. '   ' → logprob: -5.131904125213623
    6. '```' → logprob: -5.256904125213623
    7. 'n' → logprob: -5.381904125213623
    8. '       ' → logprob: -5.506904125213623
    9. '[' → logprob: -6.506904125213623
    10. '	n' → logprob: -7.756904125213623

Token 455: ' nr' (ID: 24055)
  Prédit: 'nr'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nr' (adapté à ' nr') → logprob: -0.05534934252500534
    2. 'for' → logprob: -2.930349349975586
    3. '   ' → logprob: -7.930349349975586
    4. 'n' → logprob: -10.305349349975586
    5. '       ' → logprob: -10.930349349975586
    6. 'nt' → logprob: -12.180349349975586
    7. '```' → logprob: -12.305349349975586
    8. ' nr' → logprob: -12.430349349975586
    9. '           ' → logprob: -12.555349349975586
    10. '``' → logprob: -12.680349349975586

Token 456: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.34853464365005493
    2. '=' → logprob: -1.2235345840454102
    3. 'for' → logprob: -10.84853458404541
    4. '       ' → logprob: -11.09853458404541
    5. '```' → logprob: -11.72353458404541
    6. '   ' → logprob: -11.97353458404541
    7. '+=' → logprob: -11.97353458404541
    8. ')' → logprob: -12.47353458404541
    9. '#' → logprob: -12.47353458404541
    10. '=
' → logprob: -12.84853458404541

Token 457: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.033676594495773315
    2. ' K' → logprob: -3.4086766242980957
    3. '       ' → logprob: -11.283676147460938
    4. ' ' → logprob: -12.408676147460938
    5. '   ' → logprob: -12.783676147460938
    6. 'n' → logprob: -13.158676147460938
    7. '        ' → logprob: -13.908676147460938
    8. '    ' → logprob: -14.033676147460938
    9. '	K' → logprob: -14.033676147460938
    10. '           ' → logprob: -14.283676147460938

Token 458: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.05492933839559555
    2. '-' → logprob: -2.929929256439209
    3. '       ' → logprob: -11.554929733276367
    4. '```' → logprob: -11.679929733276367
    5. '   ' → logprob: -12.304929733276367
    6. '        ' → logprob: -12.429929733276367
    7. '-n' → logprob: -12.804929733276367
    8. '
' → logprob: -12.929929733276367
    9. ' ' → logprob: -13.054929733276367
    10. '*' → logprob: -13.179929733276367

Token 459: ' np' (ID: 5374)
  Prédit: 'np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'np' → logprob: -0.0006395269301719964
    2. ' np' → logprob: -7.87563943862915
    3. '2' → logprob: -8.375639915466309
    4. '1' → logprob: -10.875639915466309
    5. '(np' → logprob: -11.750639915466309
    6. '(' → logprob: -14.250639915466309
    7. ' ' → logprob: -15.125639915466309
    8. '[np' → logprob: -15.500639915466309
    9. 'n' → logprob: -15.625639915466309
    10. '*np' → logprob: -15.750639915466309

Token 460: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.026766516268253326
    2. ' *' → logprob: -3.651766538619995
    3. ' -' → logprob: -8.151766777038574
    4. '-' → logprob: -8.651766777038574
    5. '```' → logprob: -13.401766777038574
    6. ' ' → logprob: -15.151766777038574
    7. ')' → logprob: -15.276766777038574
    8. '       ' → logprob: -15.901766777038574
    9. '
' → logprob: -15.901766777038574
    10. '   ' → logprob: -16.026765823364258

Token 461: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00219866749830544
    2. '1' → logprob: -6.127198696136475
    3. ' ' → logprob: -11.627198219299316
    4. '3' → logprob: -12.377198219299316
    5. '```' → logprob: -15.377198219299316
    6. '   ' → logprob: -16.439699172973633
    7. '           ' → logprob: -17.314699172973633
    8. '۲' → logprob: -17.814699172973633
    9. '
' → logprob: -18.002199172973633
    10. '0' → logprob: -18.252199172973633

Token 462: '
' (ID: 198)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.3132723271846771
    2. '-' → logprob: -1.3132723569869995
    3. '<|end|>' → logprob: -12.438272476196289
    4. '```' → logprob: -13.063272476196289
    5. '       ' → logprob: -13.813272476196289
    6. '<|end|>' → logprob: -13.938272476196289
    7. '   ' → logprob: -14.438272476196289
    8. ' ' → logprob: -14.563272476196289
    9. '
' → logprob: -14.813272476196289
    10. '           ' → logprob: -15.563272476196289

Token 463: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.011778999119997025
    2. '```' → logprob: -4.636778831481934
    3. ' for' → logprob: -6.761778831481934
    4. '       ' → logprob: -7.261778831481934
    5. '   ' → logprob: -9.761778831481934
    6. '
' → logprob: -10.136778831481934
    7. '``' → logprob: -10.261778831481934
    8. '<|end|>' → logprob: -10.886778831481934
    9. '	for' → logprob: -12.386778831481934
    10. 'n' → logprob: -13.011778831481934

Token 464: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -1.9385402993066236e-05
    2. '```' → logprob: -11.125019073486328
    3. ' for' → logprob: -13.125019073486328
    4. '
' → logprob: -13.625019073486328
    5. '       ' → logprob: -14.250019073486328
    6. '   ' → logprob: -14.875019073486328
    7. 'n' → logprob: -16.000019073486328
    8. '``' → logprob: -16.250019073486328
    9. '	for' → logprob: -16.500019073486328
    10. 'nr' → logprob: -17.125019073486328

Token 465: ' nq' (ID: 183073)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.029781268909573555
    2. ' nq' → logprob: -3.5297813415527344
    3. 'np' → logprob: -11.279781341552734
    4. ' n' → logprob: -11.904781341552734
    5. 'nr' → logprob: -13.279781341552734
    6. 'q' → logprob: -14.154781341552734
    7. '	n' → logprob: -14.154781341552734
    8. '(n' → logprob: -14.279781341552734
    9. '`' → logprob: -14.279781341552734
    10. '```' → logprob: -14.529781341552734

Token 466: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07010994106531143
    2. 'in' → logprob: -2.6951098442077637
    3. 'range' → logprob: -9.070110321044922
    4. '(' → logprob: -10.695110321044922
    5. '(n' → logprob: -11.320110321044922
    6. 'n' → logprob: -11.570110321044922
    7. ' range' → logprob: -11.945110321044922
    8. ' ' → logprob: -12.570110321044922
    9. '(range' → logprob: -13.445110321044922
    10. '   ' → logprob: -13.820110321044922

Token 467: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.04859759286046028
    2. ' range' → logprob: -3.048597574234009
    3. 'n' → logprob: -12.17359733581543
    4. '0' → logprob: -13.04859733581543
    5. '(range' → logprob: -13.29859733581543
    6. 'np' → logprob: -15.04859733581543
    7. '(n' → logprob: -15.04859733581543
    8. 'in' → logprob: -15.54859733581543
    9. 'r' → logprob: -15.92359733581543
    10. 'ran' → logprob: -16.67359733581543

Token 468: '(np' (ID: 21997)
  Prédit: '(np'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(np' → logprob: -4.008129963040119e-06
    2. '(' → logprob: -12.750003814697266
    3. '(n' → logprob: -14.500003814697266
    4. 'np' → logprob: -15.000003814697266
    5. '[np' → logprob: -16.625003814697266
    6. ' np' → logprob: -18.500003814697266
    7. '0' → logprob: -18.750003814697266
    8. ',np' → logprob: -19.125003814697266
    9. '=np' → logprob: -19.875003814697266
    10. ' (' → logprob: -19.875003814697266

Token 469: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00010926496179308742
    2. '()+' → logprob: -9.625109672546387
    3. ' +' → logprob: -10.250109672546387
    4. '):
' → logprob: -13.250109672546387
    5. '(n' → logprob: -13.375109672546387
    6. '(' → logprob: -13.625109672546387
    7. '[' → logprob: -13.875109672546387
    8. '```' → logprob: -14.125109672546387
    9. '(+' → logprob: -14.500109672546387
    10. ')+' → logprob: -14.875109672546387

Token 470: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0012393947690725327
    2. '(n' → logprob: -7.12623929977417
    3. 'n' → logprob: -8.501239776611328
    4. '+' → logprob: -8.751239776611328
    5. 'np' → logprob: -10.251239776611328
    6. '(np' → logprob: -11.126239776611328
    7. ' nq' → logprob: -11.376239776611328
    8. '(' → logprob: -12.126239776611328
    9. '{' → logprob: -13.251239776611328
    10. ' ' → logprob: -14.126239776611328

Token 471: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.14417850971221924
    2. '):
' → logprob: -2.0191783905029297
    3. ':' → logprob: -6.64417839050293
    4. '+' → logprob: -9.64417839050293
    5. ')' → logprob: -9.64417839050293
    6. '```' → logprob: -10.26917839050293
    7. '):

' → logprob: -12.26917839050293
    8. '):
' → logprob: -12.64417839050293
    9. '():' → logprob: -12.64417839050293
    10. '   ' → logprob: -12.76917839050293

Token 472: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4353262782096863
    2. ' coef' → logprob: -1.560326337814331
    3. '```' → logprob: -2.560326337814331
    4. '       ' → logprob: -2.935326337814331
    5. '        ' → logprob: -6.310326099395752
    6. ' ' → logprob: -6.435326099395752
    7. '   ' → logprob: -6.560326099395752
    8. ' n' → logprob: -6.935326099395752
    9. '<|end|>' → logprob: -7.060326099395752
    10. '            ' → logprob: -7.310326099395752

Token 473: ' coef' (ID: 107584)
  Prédit: ' coef'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' coef' → logprob: -0.5674743056297302
    2. 'coef' (adapté à ' coef') → logprob: -1.067474365234375
    3. '           ' → logprob: -2.567474365234375
    4. '```' → logprob: -4.567474365234375
    5. '       ' → logprob: -6.817474365234375
    6. '_coef' → logprob: -7.692474365234375
    7. '   ' → logprob: -8.942474365234375
    8. 'n' → logprob: -9.817474365234375
    9. ' cof' → logprob: -9.817474365234375
    10. 'c' → logprob: -10.067474365234375

Token 474: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023618357256054878
    2. '=' → logprob: -3.773618459701538
    3. '=n' → logprob: -7.898618221282959
    4. 'n' → logprob: -14.273618698120117
    5. '(n' → logprob: -15.273618698120117
    6. ')' → logprob: -15.523618698120117
    7. '```' → logprob: -16.648618698120117
    8. '=c' → logprob: -16.773618698120117
    9. ' n' → logprob: -16.898618698120117
    10. '=
' → logprob: -17.023618698120117

Token 475: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.3868759572505951
    2. 'n' → logprob: -1.1368759870529175
    3. '(n' → logprob: -12.386876106262207
    4. '	n' → logprob: -14.511876106262207
    5. '_n' → logprob: -15.886876106262207
    6. 'pow' → logprob: -16.26187515258789
    7. ' ' → logprob: -17.76187515258789
    8. '   ' → logprob: -18.01187515258789
    9. ' (' → logprob: -18.26187515258789
    10. '(' → logprob: -18.26187515258789

Token 476: 'cr' (ID: 798)
  Prédit: 'cr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cr' → logprob: -2.1008713702030946e-06
    2. '(cr' → logprob: -13.625001907348633
    3. '(n' → logprob: -14.250001907348633
    4. 'CR' → logprob: -16.750001907348633
    5. 'n' → logprob: -17.125001907348633
    6. ' cr' → logprob: -18.125001907348633
    7. '	cr' → logprob: -18.125001907348633
    8. 'Cr' → logprob: -18.500001907348633
    9. '```' → logprob: -18.750001907348633
    10. 'c' → logprob: -18.875001907348633

Token 477: '(np' (ID: 21997)
  Prédit: '(np'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(np' → logprob: -1.4021237802808173e-05
    2. 'np' → logprob: -11.500014305114746
    3. '[np' → logprob: -12.500014305114746
    4. ',np' → logprob: -16.25001335144043
    5. '=np' → logprob: -17.62501335144043
    6. ' np' → logprob: -19.25001335144043
    7. '*np' → logprob: -19.37501335144043
    8. '(' → logprob: -19.50001335144043
    9. '(n' → logprob: -19.87501335144043
    10. '_np' → logprob: -20.50001335144043

Token 478: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04234820976853371
    2. ',n' → logprob: -3.4173481464385986
    3. '(n' → logprob: -4.917348384857178
    4. '(' → logprob: -6.792348384857178
    5. ',np' → logprob: -8.91734790802002
    6. ' ,' → logprob: -9.79234790802002
    7. '[n' → logprob: -11.54234790802002
    8. ')' → logprob: -12.16734790802002
    9. '(np' → logprob: -12.54234790802002
    10. 'n' → logprob: -12.91734790802002

Token 479: ' nq' (ID: 183073)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.0206720617134124e-05
    2. ' nq' → logprob: -11.87501049041748
    3. '(n' → logprob: -13.12501049041748
    4. '<|end|>' → logprob: -14.50001049041748
    5. ')n' → logprob: -15.75001049041748
    6. '<|end|>' → logprob: -16.000009536743164
    7. '[n' → logprob: -16.000009536743164
    8. '	n' → logprob: -16.125009536743164
    9. '<n' → logprob: -16.500009536743164
    10. ' nqi' → logprob: -17.000009536743164

Token 480: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.981667537620524e-06
    2. ' )' → logprob: -14.125001907348633
    3. ')*' → logprob: -14.375001907348633
    4. '<|end|>' → logprob: -15.750001907348633
    5. ',' → logprob: -16.625001907348633
    6. ')
' → logprob: -16.750001907348633
    7. '}' → logprob: -17.000001907348633
    8. '*' → logprob: -17.500001907348633
    9. '(n' → logprob: -17.500001907348633
    10. ']' → logprob: -17.750001907348633

Token 481: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.001040552044287324
    2. '*' → logprob: -6.876040458679199
    3. '<|end|>' → logprob: -12.5010404586792
    4. ')' → logprob: -13.3760404586792
    5. 'pow' → logprob: -14.2510404586792
    6. ',' → logprob: -14.6260404586792
    7. ' ' → logprob: -15.0010404586792
    8. '%' → logprob: -15.8760404586792
    9. '(pow' → logprob: -16.126041412353516
    10. ' ' → logprob: -16.126041412353516

Token 482: ' pow' (ID: 9779)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -6.623244553338736e-05
    2. ' pow' → logprob: -9.625065803527832
    3. '(pow' → logprob: -16.12506675720215
    4. '
' → logprob: -19.50006675720215
    5. '```' → logprob: -19.62506675720215
    6. '2' → logprob: -20.00006675720215
    7. '.pow' → logprob: -20.50006675720215
    8. '_pow' → logprob: -20.50006675720215
    9. 'p' → logprob: -21.12506675720215
    10. ' ' → logprob: -21.12506675720215

Token 483: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.816093228830141e-06
    2. 'pow' → logprob: -13.00000286102295
    3. '[' → logprob: -16.625001907348633
    4. '(' → logprob: -16.625001907348633
    5. '```' → logprob: -16.750001907348633
    6. 'ow' → logprob: -17.000001907348633
    7. '(pow' → logprob: -17.125001907348633
    8. '₂' → logprob: -18.000001907348633
    9. '_' → logprob: -18.062501907348633
    10. '２' → logprob: -18.062501907348633

Token 484: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.00013333676906768233
    2. '[' → logprob: -9.000133514404297
    3. '[
' → logprob: -12.375133514404297
    4. '(n' → logprob: -13.250133514404297
    5. ' [' → logprob: -13.250133514404297
    6. 'n' → logprob: -13.375133514404297
    7. '[i' → logprob: -15.500133514404297
    8. '```' → logprob: -15.875133514404297
    9. '[q' → logprob: -17.125133514404297
    10. '[np' → logprob: -17.125133514404297

Token 485: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.684079110622406
    2. 'n' → logprob: -0.934079110622406
    3. '[n' → logprob: -2.309079170227051
    4. '[q' → logprob: -6.059079170227051
    5. '[' → logprob: -7.809079170227051
    6. '(n' → logprob: -8.55907917022705
    7. ' nq' → logprob: -9.05907917022705
    8. '1' → logprob: -10.55907917022705
    9. '[
' → logprob: -10.80907917022705
    10. '```' → logprob: -11.55907917022705

Token 486: ']' (ID: 60)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.7633638978004456
    2. ' %' → logprob: -0.7633638978004456
    3. ')' → logprob: -2.763363838195801
    4. ')%' → logprob: -6.263363838195801
    5. ']' → logprob: -6.513363838195801
    6. ']%' → logprob: -7.513363838195801
    7. '%n' → logprob: -7.763363838195801
    8. '           ' → logprob: -9.0133638381958
    9. '```' → logprob: -9.7633638381958
    10. '[n' → logprob: -9.8883638381958

Token 487: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.2825384736061096
    2. '%' → logprob: -1.4075384140014648
    3. '<|end|>' → logprob: -6.907538414001465
    4. ' %=' → logprob: -9.032538414001465
    5. '%n' → logprob: -9.782538414001465
    6. ')' → logprob: -9.907538414001465
    7. '<|end|>' → logprob: -10.407538414001465
    8. ')%' → logprob: -10.782538414001465
    9. ' ' → logprob: -10.782538414001465
    10. ' ' → logprob: -10.907538414001465

Token 488: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.0014114240184426308
    2. ' MOD' → logprob: -6.876411437988281
    3. '(M' → logprob: -8.376411437988281
    4. '(n' → logprob: -9.376411437988281
    5. '(Mod' → logprob: -10.626411437988281
    6. '_MOD' → logprob: -11.126411437988281
    7. '(' → logprob: -11.251411437988281
    8. '2' → logprob: -12.501411437988281
    9. '(mod' → logprob: -13.251411437988281
    10. '```' → logprob: -13.626411437988281

Token 489: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12751686573028564
    2. 't' → logprob: -2.252516746520996
    3. ' t' → logprob: -4.627516746520996
    4. '       ' → logprob: -6.377516746520996
    5. '```' → logprob: -6.752516746520996
    6. '   ' → logprob: -7.002516746520996
    7. '	t' → logprob: -7.502516746520996
    8. ' ' → logprob: -9.752516746520996
    9. '		' → logprob: -9.752516746520996
    10. ',' → logprob: -10.002516746520996

Token 490: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1311909258365631
    2. ' t' → logprob: -2.8811910152435303
    3. '```' → logprob: -3.1311910152435303
    4. 't' → logprob: -4.006190776824951
    5. '	t' → logprob: -6.256190776824951
    6. '		' → logprob: -7.006190776824951
    7. ' ' → logprob: -7.506190776824951
    8. '	       ' → logprob: -7.756190776824951
    9. '       ' → logprob: -8.00619125366211
    10. '<|end|>' → logprob: -8.38119125366211

Token 491: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' (adapté à ' t') → logprob: -7.553032628493384e-05
    2. '           ' → logprob: -9.625075340270996
    3. ' t' → logprob: -11.625075340270996
    4. '```' → logprob: -14.625075340270996
    5. '`t' → logprob: -17.625076293945312
    6. '       ' → logprob: -17.750076293945312
    7. '
' → logprob: -18.375076293945312
    8. '   ' → logprob: -18.500076293945312
    9. '``' → logprob: -18.750076293945312
    10. '            
' → logprob: -19.000076293945312

Token 492: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06196869537234306
    2. '=' → logprob: -2.8119688034057617
    3. ')' → logprob: -14.311968803405762
    4. ' ' → logprob: -14.936968803405762
    5. ' ' → logprob: -17.686967849731445
    6. ' =)' → logprob: -17.811967849731445
    7. 't' → logprob: -17.936967849731445
    8. '           ' → logprob: -17.936967849731445
    9. '	' → logprob: -18.061967849731445
    10. ',' → logprob: -18.186967849731445

Token 493: ' coef' (ID: 107584)
  Prédit: 'coef'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coef' → logprob: -0.0076085166074335575
    2. ' coef' → logprob: -4.882608413696289
    3. 'co' → logprob: -14.632608413696289
    4. 'coeff' → logprob: -14.632608413696289
    5. 'coe' → logprob: -14.757608413696289
    6. '```' → logprob: -15.007608413696289
    7. 't' → logprob: -15.382608413696289
    8. '   ' → logprob: -16.00760841369629
    9. '(' → logprob: -16.25760841369629
    10. '_coef' → logprob: -16.25760841369629

Token 494: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.003600544296205044
    2. '*' → logprob: -5.628600597381592
    3. '<|end|>' → logprob: -15.878600120544434
    4. ' ' → logprob: -16.00360107421875
    5. '...' → logprob: -17.25360107421875
    6. ' ' → logprob: -17.25360107421875
    7. ',' → logprob: -17.62860107421875
    8. ')' → logprob: -17.62860107421875
    9. '*n' → logprob: -17.75360107421875
    10. '`' → logprob: -18.00360107421875

Token 495: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0040801819413900375
    2. ' n' → logprob: -5.504080295562744
    3. '
' → logprob: -14.254079818725586
    4. '(n' → logprob: -14.504079818725586
    5. '	n' → logprob: -15.254079818725586
    6. 'pow' → logprob: -16.629079818725586
    7. '```' → logprob: -16.629079818725586
    8. ' ' → logprob: -16.879079818725586
    9. ')n' → logprob: -17.629079818725586
    10. ' ' → logprob: -17.629079818725586

Token 496: 'hr' (ID: 2012)
  Prédit: 'hr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hr' → logprob: -0.0003103175258729607
    2. 'h' → logprob: -8.750309944152832
    3. 'n' → logprob: -9.000309944152832
    4. '(n' → logprob: -10.875309944152832
    5. 'r' → logprob: -12.875309944152832
    6. ' hr' → logprob: -13.000309944152832
    7. '(hr' → logprob: -13.000309944152832
    8. ' n' → logprob: -14.375309944152832
    9. 'HR' → logprob: -14.375309944152832
    10. '_hr' → logprob: -15.625309944152832

Token 497: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -8.061054359131958e-06
    2. 'nr' → logprob: -12.250007629394531
    3. 'n' → logprob: -12.875007629394531
    4. '(' → logprob: -15.125007629394531
    5. ' (' → logprob: -16.00000762939453
    6. '_nr' → logprob: -16.50000762939453
    7. '[n' → logprob: -17.00000762939453
    8. '(
' → logprob: -17.25000762939453
    9. '```' → logprob: -17.25000762939453
    10. '.nr' → logprob: -17.37500762939453

Token 498: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.011659292504191399
    2. '(n' → logprob: -4.511659145355225
    3. 'nr' → logprob: -8.011659622192383
    4. '(r' → logprob: -8.261659622192383
    5. '[n' → logprob: -11.636659622192383
    6. 'n' → logprob: -12.636659622192383
    7. '[r' → logprob: -12.761659622192383
    8. '{' → logprob: -14.136659622192383
    9. '
' → logprob: -14.386659622192383
    10. 'rn' → logprob: -14.511659622192383

Token 499: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.10676836967468262
    2. '+n' → logprob: -2.9817683696746826
    3. '+' → logprob: -3.1067683696746826
    4. '(n' → logprob: -5.606768608093262
    5. '[n' → logprob: -7.106768608093262
    6. ',' → logprob: -7.356768608093262
    7. '+,' → logprob: -7.981768608093262
    8. '+
' → logprob: -9.231768608093262
    9. '```' → logprob: -9.731768608093262
    10. '(' → logprob: -9.856768608093262

Token 500: ' nq' (ID: 183073)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0002978048287332058
    2. ' nq' → logprob: -8.250297546386719
    3. 'q' → logprob: -10.750297546386719
    4. '(n' → logprob: -11.500297546386719
    5. '[n' → logprob: -13.375297546386719
    6. ' n' → logprob: -14.500297546386719
    7. '<n' → logprob: -14.750297546386719
    8. ' ' → logprob: -15.000297546386719
    9. '```' → logprob: -15.000297546386719
    10. '+n' → logprob: -15.125297546386719

Token 501: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.8074162653647363e-05
    2. ' ,' → logprob: -11.500018119812012
    3. ',N' → logprob: -12.000018119812012
    4. ',n' → logprob: -13.375018119812012
    5. '```' → logprob: -17.000017166137695
    6. ',
' → logprob: -17.375017166137695
    7. '   ' → logprob: -18.250017166137695
    8. '(N' → logprob: -18.500017166137695
    9. '`,' → logprob: -18.750017166137695
    10. '<|end|>' → logprob: -19.000017166137695

Token 502: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.011069164611399174
    2. ' N' → logprob: -4.511069297790527
    3. '(N' → logprob: -10.886069297790527
    4. ' (' → logprob: -13.511069297790527
    5. '```' → logprob: -14.136069297790527
    6. ' ' → logprob: -15.886069297790527
    7. 'n' → logprob: -16.13606834411621
    8. '[N' → logprob: -16.13606834411621
    9. ')' → logprob: -16.76106834411621
    10. '(' → logprob: -16.76106834411621

Token 503: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.2817225158214569
    2. '-' → logprob: -1.4067225456237793
    3. '-n' → logprob: -8.031722068786621
    4. ',' → logprob: -9.531722068786621
    5. ')' → logprob: -9.656722068786621
    6. '-N' → logprob: -10.031722068786621
    7. '```' → logprob: -10.656722068786621
    8. ' ' → logprob: -10.781722068786621
    9. '   ' → logprob: -11.906722068786621
    10. '[n' → logprob: -12.406722068786621

Token 504: ' nq' (ID: 183073)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -7.588793960167095e-05
    2. ' nq' → logprob: -9.500076293945312
    3. 'q' → logprob: -14.250076293945312
    4. '	n' → logprob: -16.375076293945312
    5. ' n' → logprob: -17.000076293945312
    6. '_n' → logprob: -17.125076293945312
    7. '   ' → logprob: -17.750076293945312
    8. '(n' → logprob: -17.750076293945312
    9. '
' → logprob: -18.375076293945312
    10. ')n' → logprob: -18.500076293945312

Token 505: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.4987974029500037e-05
    2. ' )' → logprob: -11.125024795532227
    3. '-' → logprob: -12.125024795532227
    4. '```' → logprob: -13.375024795532227
    5. '   ' → logprob: -14.000024795532227
    6. ')
' → logprob: -14.000024795532227
    7. ')%' → logprob: -14.125024795532227
    8. ' ' → logprob: -15.500024795532227
    9. ' -' → logprob: -16.000024795532227
    10. '%' → logprob: -16.125024795532227

Token 506: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.31334465742111206
    2. '%' → logprob: -1.3133447170257568
    3. ')' → logprob: -10.188344955444336
    4. ')%' → logprob: -10.813344955444336
    5. '           ' → logprob: -11.313344955444336
    6. '```' → logprob: -11.688344955444336
    7. ' ' → logprob: -13.688344955444336
    8. '
' → logprob: -13.938344955444336
    9. '%n' → logprob: -15.188344955444336
    10. ' %=' → logprob: -15.188344955444336

Token 507: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.004080301150679588
    2. ' MOD' → logprob: -5.504080295562744
    3. '_MOD' → logprob: -13.504080772399902
    4. 'Mod' → logprob: -16.129079818725586
    5. '.MOD' → logprob: -16.504079818725586
    6. '(M' → logprob: -16.629079818725586
    7. 'MO' → logprob: -16.879079818725586
    8. '(Mod' → logprob: -17.004079818725586
    9. '
' → logprob: -18.879079818725586
    10. 'mod' → logprob: -19.254079818725586

Token 508: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2363407015800476
    2. '%' → logprob: -2.1113407611846924
    3. '```' → logprob: -3.1113407611846924
    4. ' %' → logprob: -3.4863407611846924
    5. ' ans' → logprob: -4.986340522766113
    6. ' t' → logprob: -5.736340522766113
    7. ')' → logprob: -6.486340522766113
    8. '               ' → logprob: -7.111340522766113
    9. '   ' → logprob: -8.361340522766113
    10. 'ans' → logprob: -8.486340522766113

Token 509: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0025383250322192907
    2. '```' → logprob: -6.502538204193115
    3. '
' → logprob: -8.252538681030273
    4. '<|end|>' → logprob: -8.377538681030273
    5. '       ' → logprob: -9.252538681030273
    6. '            
' → logprob: -9.502538681030273
    7. '   ' → logprob: -9.502538681030273
    8. '%' → logprob: -9.627538681030273
    9. '               ' → logprob: -9.877538681030273
    10. '          ' → logprob: -10.252538681030273

Token 510: ' ans' (ID: 3345)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.014149876311421394
    2. 'ans' (adapté à ' ans') → logprob: -5.0141496658325195
    3. 't' → logprob: -5.8891496658325195
    4. ' ans' → logprob: -6.0141496658325195
    5. ' t' → logprob: -6.7641496658325195
    6. '```' → logprob: -7.3891496658325195
    7. '	ans' → logprob: -8.88914966583252
    8. '   ' → logprob: -9.51414966583252
    9. '
' → logprob: -10.13914966583252
    10. '               ' → logprob: -10.63914966583252

Token 511: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2532728910446167
    2. '=' → logprob: -1.5032728910446167
    3. ' +=' → logprob: -6.878273010253906
    4. '+=' → logprob: -8.128273010253906
    5. ')' → logprob: -11.628273010253906
    6. '<|end|>' → logprob: -12.378273010253906
    7. '```' → logprob: -14.003273010253906
    8. '   ' → logprob: -14.378273010253906
    9. '           ' → logprob: -14.503273010253906
    10. ' ' → logprob: -14.878273010253906

Token 512: ' (' (ID: 350)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.005553066730499268
    2. ' (' → logprob: -5.630553245544434
    3. '(t' → logprob: -6.880553245544434
    4. '(' → logprob: -7.005553245544434
    5. '(an' → logprob: -12.255553245544434
    6. '(answer' → logprob: -13.255553245544434
    7. '(acc' → logprob: -13.380553245544434
    8. '(ord' → logprob: -13.505553245544434
    9. '(arr' → logprob: -13.755553245544434
    10. '(a' → logprob: -14.380553245544434

Token 513: 'ans' (ID: 616)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -5.438573680294212e-06
    2. 'ans' → logprob: -12.375005722045898
    3. '(t' → logprob: -14.125005722045898
    4. 't' → logprob: -15.750005722045898
    5. ' (' → logprob: -16.6250057220459
    6. '(a' → logprob: -16.7500057220459
    7. '	ans' → logprob: -16.7500057220459
    8. '(answer' → logprob: -17.0000057220459
    9. '(' → logprob: -17.2500057220459
    10. '   ' → logprob: -17.2500057220459

Token 514: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.06590775400400162
    2. '(ans' → logprob: -3.5659077167510986
    3. ' +' → logprob: -4.315907955169678
    4. '=' → logprob: -4.565907955169678
    5. ')' → logprob: -5.190907955169678
    6. '(' → logprob: -5.690907955169678
    7. ' (' → logprob: -6.565907955169678
    8. '           ' → logprob: -7.815907955169678
    9. '+=' → logprob: -8.31590747833252
    10. '
' → logprob: -8.81590747833252

Token 515: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.001503313542343676
    2. ' t' → logprob: -6.5015034675598145
    3. '           ' → logprob: -14.626502990722656
    4. ')t' → logprob: -15.626502990722656
    5. '   ' → logprob: -15.751502990722656
    6. '	t' → logprob: -16.001502990722656
    7. '       ' → logprob: -16.251502990722656
    8. '`t' → logprob: -16.501502990722656
    9. '
' → logprob: -16.751502990722656
    10. '(t' → logprob: -17.501502990722656

Token 516: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.30395716428756714
    2. ' %' → logprob: -1.428957223892212
    3. '%' → logprob: -4.178956985473633
    4. ')%' → logprob: -5.053956985473633
    5. ' )' → logprob: -7.303956985473633
    6. ' %=' → logprob: -9.928956985473633
    7. '           ' → logprob: -10.178956985473633
    8. '
' → logprob: -10.428956985473633
    9. ' %)' → logprob: -11.428956985473633
    10. '       ' → logprob: -11.428956985473633

Token 517: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.0954144075512886
    2. '%' → logprob: -2.470414400100708
    3. ')' → logprob: -5.220414638519287
    4. ')%' → logprob: -7.595414638519287
    5. ' %=' → logprob: -8.720414161682129
    6. '%n' → logprob: -8.845414161682129
    7. '
' → logprob: -9.345414161682129
    8. '```' → logprob: -10.470414161682129
    9. ' )' → logprob: -10.595414161682129
    10. '\n' → logprob: -10.720414161682129

Token 518: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.0011703446507453918
    2. ' MOD' → logprob: -6.7511701583862305
    3. '_MOD' → logprob: -16.501171112060547
    4. '.MOD' → logprob: -18.876171112060547
    5. 'MO' → logprob: -19.126171112060547
    6. 'M' → logprob: -20.751171112060547
    7. '(M' → logprob: -20.876171112060547
    8. 'MD' → logprob: -22.251171112060547
    9. ' ' → logprob: -22.376171112060547
    10. 'Mod' → logprob: -23.001171112060547

Token 519: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16478364169597626
    2. 'print' → logprob: -1.9147835969924927
    3. '
' → logprob: -5.664783477783203
    4. '       ' → logprob: -7.164783477783203
    5. ' print' → logprob: -8.789783477783203
    6. '<|end|>' → logprob: -9.664783477783203
    7. '```' → logprob: -10.289783477783203
    8. '    
' → logprob: -10.289783477783203
    9. '	print' → logprob: -10.914783477783203
    10. ')' → logprob: -13.289783477783203

Token 520: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.003110930323600769
    2. '   ' → logprob: -6.253110885620117
    3. ' print' → logprob: -6.753110885620117
    4. '	print' → logprob: -11.753110885620117
    5. '```' → logprob: -12.628110885620117
    6. '       ' → logprob: -13.753110885620117
    7. '(print' → logprob: -14.003110885620117
    8. ')' → logprob: -14.503110885620117
    9. '<|end|>' → logprob: -14.503110885620117
    10. '#print' → logprob: -16.128110885620117

Token 521: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.011680973693728447
    2. '   ' → logprob: -4.511681079864502
    3. ' print' → logprob: -7.386681079864502
    4. '```' → logprob: -12.011680603027344
    5. '	print' → logprob: -12.136680603027344
    6. '       ' → logprob: -13.636680603027344
    7. ' ' → logprob: -15.261680603027344
    8. 'for' → logprob: -16.011680603027344
    9. '
' → logprob: -16.011680603027344
    10. '#print' → logprob: -16.136680603027344

Token 522: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.04864504933357239
    2. '(i' → logprob: -3.04864501953125
    3. '(' → logprob: -10.67364501953125
    4. 'ans' → logprob: -10.92364501953125
    5. '((' → logprob: -11.92364501953125
    6. '()' → logprob: -12.42364501953125
    7. '(f' → logprob: -12.54864501953125
    8. ' (' → logprob: -14.79864501953125
    9. 'i' → logprob: -15.04864501953125
    10. '(answer' → logprob: -15.17364501953125

Token 523: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.319370302458992e-06
    2. ')
' → logprob: -14.000005722045898
    3. '<|end|>' → logprob: -14.000005722045898
    4. '())' → logprob: -14.125005722045898
    5. ' )' → logprob: -14.250005722045898
    6. '()' → logprob: -14.625005722045898
    7. '(' → logprob: -14.750005722045898
    8. '')' → logprob: -14.750005722045898
    9. '   ' → logprob: -15.000005722045898
    10. '`)' → logprob: -15.875005722045898


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 521
Tokens correctement prédits (1ère position, stricte): 218
Tokens correctement prédits (1ère position, avec adaptation): 230
Tokens correctement prédits (top 10): 452
Précision stricte (1ère position): 41.84%
Précision adaptée (1ère position): 44.15%
Précision (top 10): 86.76%
================================================================================
