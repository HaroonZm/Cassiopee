================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:38:50
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import math
import heapq
import itertools
from bisect import bisect_left as bisect_left_func
from bisect import bisect_right as bisect_right_func
from collections import defaultdict as dict_default_factory
from collections import deque as deque_class
from decimal import Decimal as decimal_decimal_class

# Input utility functions
def input_int(): return int(sys.stdin.readline())
def input_map(): return map(int, sys.stdin.readline().split())
def input_list(): return list(map(int, sys.stdin.readline().split()))
def input_str(): return sys.stdin.readline().rstrip('\n')

CONST_INF = float('inf')
CONST_MOD = 10 ** 9 + 7

def main():
    val_x, val_y = input_map()

    if (val_x + val_y) % 3 == 0:
        pass
    else:
        print(0)
        sys.exit()

    step_cnt = (val_x + val_y) // 3

    val_x -= step_cnt
    val_y -= step_cnt

    if val_x < 0 or val_y < 0:
        print(0)
        sys.exit()

    print(comb_mod(val_x + val_y, val_x, CONST_MOD))

def comb_mod(value_n, value_r, value_mod=CONST_MOD):
    value_r = min(value_r, value_n - value_r)
    result = 1
    for idx in range(value_r):
        result = result * (value_n - idx) * modinv_mod(idx + 1, value_mod) % value_mod
    return result

def modinv_mod(value_a, value_mod=CONST_MOD):
    return pow(value_a, value_mod - 2, value_mod)

def ext_gcd(value_a, value_b):
    if value_a == 0:
        return value_b, 0, 1
    else:
        g, y, x = ext_gcd(value_b % value_a, value_a)
        return g, x - (value_b // value_a) * y, y

def h_comb_mod(value_n, value_r, value_mod=CONST_MOD):
    return comb_mod(value_n + value_r - 1, value_r, value_mod)

class CombinationClass:
    def __init__(self, max_n, use_mod=CONST_MOD):
        self.mod = use_mod
        self.modinv = self.generate_modinv_list(max_n)
        self.fac, self.facinv = self.generate_factorial_lists(max_n)

    def __call__(self, n, r):
        return self.fac[n] * self.facinv[r] % self.mod * self.facinv[n - r] % self.mod

    def generate_factorial_lists(self, n):
        factorial_vals = [1]
        factorial_inv_vals = [1]
        for idx in range(1, n + 1):
            factorial_vals.append(factorial_vals[idx - 1] * idx % self.mod)
            factorial_inv_vals.append(factorial_inv_vals[idx - 1] * self.modinv[idx] % self.mod)
        return factorial_vals, factorial_inv_vals

    def generate_modinv_list(self, n):
        modinv_vals = [0] * (n + 1)
        modinv_vals[1] = 1
        for idx in range(2, n + 1):
            modinv_vals[idx] = self.mod - self.mod // idx * modinv_vals[self.mod % idx] % self.mod
        return modinv_vals

def dfs_search(graph_map, parent_arr, counter_arr, edge_start):
    search_stack = []
    search_stack.append(edge_start)
    while search_stack:
        parent_node = search_stack.pop()
        for edge_node in graph_map[parent_node]:
            if parent_arr[parent_node] == edge_node:
                continue
            else:
                parent_arr[edge_node] = parent_node
                counter_arr[edge_node] += counter_arr[parent_node]
                search_stack.append(edge_node)

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.5435490608215332
    2. '.' → logprob: -1.0435490608215332
    3. '<|end|>' → logprob: -3.918549060821533
    4. '\' → logprob: -4.043549060821533
    5. 'import' → logprob: -4.418549060821533
    6. 'newline' → logprob: -5.293549060821533
    7. '' → logprob: -6.043549060821533
    8. '\r' → logprob: -6.168549060821533
    9. '
' → logprob: -6.293549060821533
    10. '<|end|>' → logprob: -6.418549060821533

Token 4: ' math' (ID: 13324)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -1.259079363080673e-05
    2. 'os' → logprob: -11.375012397766113
    3. ' math' → logprob: -15.000012397766113
    4. '"os' → logprob: -15.375012397766113
    5. ' re' → logprob: -15.875012397766113
    6. ' json' → logprob: -16.00001335144043
    7. '_os' → logprob: -17.00001335144043
    8. '	os' → logprob: -17.00001335144043
    9. ' ' → logprob: -17.25001335144043
    10. ' argparse' → logprob: -17.25001335144043

Token 5: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.4576877951622009
    2. '\n' → logprob: -1.8326878547668457
    3. '\' → logprob: -2.3326878547668457
    4. 'import' → logprob: -3.0826878547668457
    5. '```' → logprob: -3.8326878547668457
    6. '
' → logprob: -4.207687854766846
    7. '<|end|>' → logprob: -4.207687854766846
    8. ',' → logprob: -5.582687854766846
    9. '

' → logprob: -5.832687854766846
    10. '<|end|>' → logprob: -6.582687854766846

Token 6: 'import' (ID: 561)
  Prédit: 'import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.1315985918045044
    2. '\n' → logprob: -1.6315985918045044
    3. '.' → logprob: -2.006598472595215
    4. '
' → logprob: -2.006598472595215
    5. '```' → logprob: -2.506598472595215
    6. '\' → logprob: -3.131598472595215
    7. '<|end|>' → logprob: -3.381598472595215
    8. '

' → logprob: -3.631598472595215
    9. ',' → logprob: -4.381598472595215
    10. '<|end|>' → logprob: -5.631598472595215

Token 7: ' heap' (ID: 37237)
  Prédit: 'os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'os' → logprob: -0.21260276436805725
    2. ' os' → logprob: -1.7126027345657349
    3. 'random' → logprob: -4.837602615356445
    4. ' random' → logprob: -6.462602615356445
    5. 're' → logprob: -6.962602615356445
    6. ' re' → logprob: -7.962602615356445
    7. 'collections' → logprob: -9.587602615356445
    8. 'time' → logprob: -9.962602615356445
    9. 'json' → logprob: -10.337602615356445
    10. 'numpy' → logprob: -10.337602615356445

Token 8: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -4.8232690460281447e-05
    2. '.' → logprob: -10.250048637390137
    3. '_' → logprob: -12.000048637390137
    4. 's' → logprob: -13.750048637390137
    5. '#' → logprob: -14.125048637390137
    6. 'space' → logprob: -14.250048637390137
    7. 'u' → logprob: -14.250048637390137
    8. '[' → logprob: -14.375048637390137
    9. 'queue' → logprob: -14.375048637390137
    10. 'ify' → logprob: -15.125048637390137

Token 9: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.4222056567668915
    2. '\' → logprob: -2.172205686569214
    3. '\n' → logprob: -2.422205686569214
    4. '
' → logprob: -3.047205686569214
    5. 'import' → logprob: -3.172205686569214
    6. '

' → logprob: -4.172205448150635
    7. '```' → logprob: -4.297205448150635
    8. '<|end|>' → logprob: -4.672205448150635
    9. 'def' → logprob: -5.422205448150635
    10. '<|end|>' → logprob: -6.047205448150635

Token 10: 'import' (ID: 561)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.8581612706184387
    2. '
' → logprob: -0.9831612706184387
    3. '<|end|>' → logprob: -2.608161211013794
    4. '

' → logprob: -3.483161211013794
    5. '```' → logprob: -3.608161211013794
    6. 'import' → logprob: -3.608161211013794
    7. '\' → logprob: -4.108161449432373
    8. 'def' → logprob: -4.858161449432373
    9. 'from' → logprob: -4.983161449432373
    10. '<|end|>' → logprob: -5.608161449432373

Token 11: ' itertools' (ID: 103178)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'collections' → logprob: -0.49841395020484924
    2. ' collections' → logprob: -0.9984139204025269
    3. ' itertools' → logprob: -3.7484140396118164
    4. 'bis' → logprob: -8.998414039611816
    5. ' bis' → logprob: -9.623414039611816
    6. 'random' → logprob: -9.873414039611816
    7. ' threading' → logprob: -10.123414039611816
    8. 'os' → logprob: -10.248414039611816
    9. ' queue' → logprob: -10.373414039611816
    10. 'copy' → logprob: -10.498414039611816

Token 12: '
' (ID: 198)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.5320029258728027
    2. '```' → logprob: -1.7820029258728027
    3. '
' → logprob: -2.0320029258728027
    4. '.' → logprob: -2.0320029258728027
    5. '\' → logprob: -2.1570029258728027
    6. '\n' → logprob: -2.2820029258728027
    7. '

' → logprob: -2.5320029258728027
    8. '#' → logprob: -4.532002925872803
    9. '<|end|>' → logprob: -4.532002925872803
    10. '' → logprob: -5.032002925872803

Token 13: 'from' (ID: 2845)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.3376190662384033
    2. '```' → logprob: -1.8376190662384033
    3. '.' → logprob: -2.2126190662384033
    4. '\' → logprob: -2.3376190662384033
    5. 'from' → logprob: -2.7126190662384033
    6. 'def' → logprob: -2.7126190662384033
    7. '\n' → logprob: -2.7126190662384033
    8. '
' → logprob: -2.7126190662384033
    9. '

' → logprob: -2.9626190662384033
    10. '#' → logprob: -4.212618827819824

Token 14: ' bis' (ID: 7204)
  Prédit: ' collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.1808900386095047
    2. 'collections' → logprob: -1.8058900833129883
    3. ' operator' → logprob: -7.680890083312988
    4. ' typing' → logprob: -8.180890083312988
    5. ' functools' → logprob: -8.805890083312988
    6. 'operator' → logprob: -9.430890083312988
    7. ' ' → logprob: -9.805890083312988
    8. ' math' → logprob: -10.055890083312988
    9. '_' → logprob: -10.680890083312988
    10. 'typing' → logprob: -11.305890083312988

Token 15: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -1.8908587662735954e-05
    2. 'ected' → logprob: -12.000019073486328
    3. 'ector' → logprob: -12.750019073486328
    4. 'ectl' → logprob: -12.875019073486328
    5. 'e' → logprob: -13.250019073486328
    6. 'ec' → logprob: -13.375019073486328
    7. 'ects' → logprob: -13.375019073486328
    8. 'ections' → logprob: -14.250019073486328
    9. 'ectors' → logprob: -14.500019073486328
    10. 'ection' → logprob: -15.000019073486328

Token 16: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.011251057498157024
    2. 'import' → logprob: -4.511250972747803
    3. '.' → logprob: -8.636251449584961
    4. '	import' → logprob: -11.386251449584961
    5. ' ' → logprob: -12.011251449584961
    6. ' .' → logprob: -13.136251449584961
    7. '_import' → logprob: -13.261251449584961
    8. '.import' → logprob: -13.761251449584961
    9. ' ' → logprob: -14.386251449584961
    10. '<|end|>' → logprob: -14.886251449584961

Token 17: ' bis' (ID: 7204)
  Prédit: 'bis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bis' → logprob: -0.08016471564769745
    2. ' bis' → logprob: -2.580164670944214
    3. 'ins' → logprob: -6.705164909362793
    4. ' ins' → logprob: -9.955164909362793
    5. '```' → logprob: -13.580164909362793
    6. 'b' → logprob: -15.080164909362793
    7. 'bl' → logprob: -15.080164909362793
    8. '*' → logprob: -17.455163955688477
    9. ''ins' → logprob: -17.705163955688477
    10. ''b' → logprob: -17.705163955688477

Token 18: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -1.8312570318812504e-05
    2. 'e' → logprob: -11.000018119812012
    3. 'ected' → logprob: -14.875018119812012
    4. 'ec' → logprob: -15.125018119812012
    5. 'ectl' → logprob: -15.500018119812012
    6. 'sect' → logprob: -15.625018119812012
    7. '```' → logprob: -16.375019073486328
    8. '6' → logprob: -16.625019073486328
    9. 'ecta' → logprob: -16.625019073486328
    10. '#' → logprob: -17.125019073486328

Token 19: '_left' (ID: 22189)
  Prédit: '_left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -0.49957212805747986
    2. '_right' → logprob: -0.9995721578598022
    3. '_' → logprob: -3.8745720386505127
    4. '<|end|>' → logprob: -6.124572277069092
    5. 'right' → logprob: -7.499572277069092
    6. '```' → logprob: -8.249571800231934
    7. ' ' → logprob: -8.374571800231934
    8. 'Right' → logprob: -8.749571800231934
    9. '' → logprob: -9.124571800231934
    10. '.ins' → logprob: -9.124571800231934

Token 20: ' as' (ID: 472)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.468675822019577
    2. '

' → logprob: -1.4686758518218994
    3. 'import' → logprob: -2.7186758518218994
    4. '<|end|>' → logprob: -3.5936758518218994
    5. '```' → logprob: -4.09367561340332
    6. ',' → logprob: -4.46867561340332
    7. '' → logprob: -4.71867561340332
    8. '
' → logprob: -5.71867561340332
    9. '<|end|>' → logprob: -5.84367561340332
    10. '\n' → logprob: -6.59367561340332

Token 21: ' bis' (ID: 7204)
  Prédit: ' bis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bis' → logprob: -0.8522271513938904
    2. 'bl' → logprob: -0.9772271513938904
    3. 'bis' → logprob: -1.9772272109985352
    4. ' bl' → logprob: -3.602227210998535
    5. '_bl' → logprob: -4.852227210998535
    6. 'b' → logprob: -4.852227210998535
    7. ' ' → logprob: -5.602227210998535
    8. '_b' → logprob: -5.727227210998535
    9. '	b' → logprob: -6.352227210998535
    10. '```' → logprob: -6.602227210998535

Token 22: 'ect' (ID: 534)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4081651568412781
    2. '<|end|>' → logprob: -2.408165216445923
    3. '_' → logprob: -2.533165216445923
    4. '(' → logprob: -2.783165216445923
    5. ']' → logprob: -3.158165216445923
    6. ',' → logprob: -4.033164978027344
    7. '[' → logprob: -4.408164978027344
    8. '```' → logprob: -5.408164978027344
    9. '__' → logprob: -5.908164978027344
    10. '#' → logprob: -6.408164978027344

Token 23: '_left' (ID: 22189)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.16052906215190887
    2. '\' → logprob: -2.785529136657715
    3. '(
' → logprob: -3.910529136657715
    4. ',' → logprob: -4.535529136657715
    5. '.' → logprob: -5.035529136657715
    6. '
' → logprob: -5.160529136657715
    7. '(

' → logprob: -5.285529136657715
    8. '<|end|>' → logprob: -5.285529136657715
    9. '' → logprob: -5.410529136657715
    10. '#' → logprob: -5.535529136657715

Token 24: '_func' (ID: 22252)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.23182722926139832
    2. '
' → logprob: -1.7318272590637207
    3. '<|end|>' → logprob: -4.106827259063721
    4. ',' → logprob: -5.981827259063721
    5. '\n' → logprob: -6.481827259063721
    6. ' 

' → logprob: -6.606827259063721
    7. '```' → logprob: -6.606827259063721
    8. '<|end|>' → logprob: -6.856827259063721
    9. '
' → logprob: -6.981827259063721
    10. '


' → logprob: -7.231827259063721

Token 25: '
' (ID: 198)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.5420886874198914
    2. '
' → logprob: -1.0420887470245361
    3. '\n' → logprob: -4.667088508605957
    4. '' → logprob: -4.792088508605957
    5. '
' → logprob: -4.792088508605957
    6. '\' → logprob: -4.917088508605957
    7. '```' → logprob: -4.917088508605957
    8. ',' → logprob: -5.167088508605957
    9. 'def' → logprob: -5.417088508605957
    10. 'newline' → logprob: -5.667088508605957

Token 26: 'from' (ID: 2845)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.15216489136219025
    2. '
' → logprob: -2.152164936065674
    3. ' 

' → logprob: -5.277164936065674
    4. ',' → logprob: -5.777164936065674
    5. 'import' → logprob: -5.777164936065674
    6. 'def' → logprob: -5.902164936065674
    7. '
' → logprob: -6.527164936065674
    8. '

' → logprob: -6.652164936065674
    9. '```' → logprob: -6.652164936065674
    10. '<|end|>' → logprob: -6.777164936065674

Token 27: ' bis' (ID: 7204)
  Prédit: ' collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.5966998934745789
    2. 'collections' → logprob: -1.0966999530792236
    3. ' math' → logprob: -3.5966999530792236
    4. ' bis' → logprob: -3.9716999530792236
    5. 'bis' → logprob: -4.0966997146606445
    6. ' functools' → logprob: -4.2216997146606445
    7. ' operator' → logprob: -4.3466997146606445
    8. ' typing' → logprob: -4.3466997146606445
    9. 'math' → logprob: -6.2216997146606445
    10. ' itertools' → logprob: -6.3466997146606445

Token 28: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -5.288163083605468e-05
    2. 'e' → logprob: -10.750052452087402
    3. 'ort' → logprob: -11.000052452087402
    4. 'sect' → logprob: -12.250052452087402
    5. 'import' → logprob: -12.750052452087402
    6. 'ec' → logprob: -12.875052452087402
    7. 'ct' → logprob: -14.000052452087402
    8. '```' → logprob: -14.250052452087402
    9. 'ectl' → logprob: -14.875052452087402
    10. 'ecta' → logprob: -15.125052452087402

Token 29: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.4791404902935028
    2. 'import' → logprob: -0.9791405200958252
    3. '_import' → logprob: -5.979140281677246
    4. '_' → logprob: -6.354140281677246
    5. ' ' → logprob: -7.729140281677246
    6. '<|end|>' → logprob: -8.729140281677246
    7. '	import' → logprob: -9.479140281677246
    8. ' _' → logprob: -9.604140281677246
    9. ' ' → logprob: -10.979140281677246
    10. '<|end|>' → logprob: -13.229140281677246

Token 30: ' bis' (ID: 7204)
  Prédit: ' bis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bis' → logprob: -0.004092174116522074
    2. 'bis' → logprob: -5.504092216491699
    3. ' ins' → logprob: -12.3790922164917
    4. 'ins' → logprob: -12.6290922164917
    5. '_right' → logprob: -13.7540922164917
    6. 'import' → logprob: -13.8790922164917
    7. '```' → logprob: -14.0040922164917
    8. ' right' → logprob: -14.2540922164917
    9. '_' → logprob: -14.6290922164917
    10. ' ' → logprob: -14.7540922164917

Token 31: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -0.003360581584274769
    2. 'e' → logprob: -5.753360748291016
    3. 'ec' → logprob: -9.503360748291016
    4. '_' → logprob: -10.378360748291016
    5. '_right' → logprob: -10.878360748291016
    6. 'ects' → logprob: -11.128360748291016
    7. '_e' → logprob: -11.378360748291016
    8. 'ext' → logprob: -11.753360748291016
    9. '```' → logprob: -12.253360748291016
    10. 'ex' → logprob: -12.378360748291016

Token 32: '_right' (ID: 24402)
  Prédit: '_left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -0.6699644327163696
    2. '_right' → logprob: -1.2949644327163696
    3. '_' → logprob: -1.5449644327163696
    4. '_le' → logprob: -8.294964790344238
    5. '_l' → logprob: -8.669964790344238
    6. '_

' → logprob: -9.044964790344238
    7. '_
' → logprob: -9.794964790344238
    8. '<|end|>' → logprob: -9.794964790344238
    9. '_r' → logprob: -9.919964790344238
    10. ' _' → logprob: -10.044964790344238

Token 33: ' as' (ID: 472)
  Prédit: ' as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' as' → logprob: -0.7891697287559509
    2. 'as' → logprob: -0.9141697287559509
    3. '_' → logprob: -2.1641697883605957
    4. '_func' → logprob: -4.164169788360596
    5. '_as' → logprob: -4.414169788360596
    6. '<|end|>' → logprob: -6.789169788360596
    7. '_funcs' → logprob: -8.289169311523438
    8. ' _' → logprob: -8.664169311523438
    9. '(as' → logprob: -9.289169311523438
    10. '_f' → logprob: -9.414169311523438

Token 34: ' bis' (ID: 7204)
  Prédit: ' bis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bis' → logprob: -0.00046379686682485044
    2. ' ' → logprob: -8.375463485717773
    3. 'bis' → logprob: -8.875463485717773
    4. ' ' → logprob: -9.625463485717773
    5. '_' → logprob: -12.000463485717773
    6. ' b' → logprob: -12.125463485717773
    7. ''' → logprob: -12.625463485717773
    8. '_b' → logprob: -13.125463485717773
    9. '	b' → logprob: -13.125463485717773
    10. ' ' → logprob: -13.250463485717773

Token 35: 'ect' (ID: 534)
  Prédit: 'sect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sect' → logprob: -0.05912156403064728
    2. 'ect' → logprob: -2.934121608734131
    3. 's' → logprob: -5.809121608734131
    4. '_right' → logprob: -8.184121131896973
    5. 'se' → logprob: -8.434121131896973
    6. '_' → logprob: -8.434121131896973
    7. 'es' → logprob: -8.809121131896973
    8. '_se' → logprob: -9.434121131896973
    9. '```' → logprob: -9.434121131896973
    10. 'sec' → logprob: -10.309121131896973

Token 36: '_right' (ID: 24402)
  Prédit: '_right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_right' → logprob: -0.6478921175003052
    2. '_' → logprob: -0.7728921175003052
    3. '_left' → logprob: -4.522891998291016
    4. '_r' → logprob: -6.147891998291016
    5. '_func' → logprob: -6.397891998291016
    6. '_

' → logprob: -8.397891998291016
    7. '__' → logprob: -9.272891998291016
    8. '___' → logprob: -10.522891998291016
    9. ' _' → logprob: -10.772891998291016
    10. '_rhs' → logprob: -10.897891998291016

Token 37: '_func' (ID: 22252)
  Prédit: '_func'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_func' → logprob: -0.004902838729321957
    2. '_' → logprob: -5.6299028396606445
    3. '_f' → logprob: -7.1299028396606445
    4. '_funcs' → logprob: -8.254902839660645
    5. 'func' → logprob: -9.004902839660645
    6. '_fun' → logprob: -10.504902839660645
    7. '_function' → logprob: -11.004902839660645
    8. '<|end|>' → logprob: -11.254902839660645
    9. '_FUNC' → logprob: -11.504902839660645
    10. ' _' → logprob: -12.129902839660645

Token 38: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.42156097292900085
    2. '<|end|>' → logprob: -1.5465610027313232
    3. '

' → logprob: -2.4215610027313232
    4. '\n' → logprob: -3.6715610027313232
    5. '```' → logprob: -5.671560764312744
    6. '' → logprob: -5.921560764312744
    7. '\' → logprob: -6.171560764312744
    8. '<|end|>' → logprob: -6.421560764312744
    9. 'newline' → logprob: -7.046560764312744
    10. 'def' → logprob: -7.171560764312744

Token 39: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5880253911018372
    2. '

' → logprob: -1.3380253314971924
    3. '<|end|>' → logprob: -1.9630253314971924
    4. '\n' → logprob: -4.3380255699157715
    5. '```' → logprob: -4.7130255699157715
    6. '#' → logprob: -5.0880255699157715
    7. '' → logprob: -5.8380255699157715
    8. 'import' → logprob: -6.4630255699157715
    9. ' 

' → logprob: -6.7130255699157715
    10. '\' → logprob: -6.8380255699157715

Token 40: ' collections' (ID: 22690)
  Prédit: ' collections'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.009515230543911457
    2. 'collections' → logprob: -4.884515285491943
    3. ' functools' → logprob: -7.509515285491943
    4. ' typing' → logprob: -7.509515285491943
    5. '_' → logprob: -8.134514808654785
    6. ' math' → logprob: -8.634514808654785
    7. ' operator' → logprob: -9.384514808654785
    8. ' ' → logprob: -9.509514808654785
    9. ' fractions' → logprob: -9.509514808654785
    10. ' datetime' → logprob: -10.884514808654785

Token 41: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.1802864968776703
    2. 'import' → logprob: -1.8052865266799927
    3. '.' → logprob: -8.305286407470703
    4. ' ' → logprob: -8.555286407470703
    5. '<|end|>' → logprob: -9.680286407470703
    6. '	import' → logprob: -11.430286407470703
    7. ' ' → logprob: -11.930286407470703
    8. '```' → logprob: -12.555286407470703
    9. '_import' → logprob: -13.180286407470703
    10. ' defaultdict' → logprob: -13.305286407470703

Token 42: ' defaultdict' (ID: 107098)
  Prédit: ' defaultdict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.474753737449646
    2. ' deque' → logprob: -0.974753737449646
    3. 'deque' → logprob: -7.5997538566589355
    4. ' abc' → logprob: -8.849753379821777
    5. ' de' → logprob: -11.599753379821777
    6. ' Counter' → logprob: -11.724753379821777
    7. ' named' → logprob: -11.724753379821777
    8. ' ' → logprob: -13.224753379821777
    9. ' default' → logprob: -13.224753379821777
    10. 'default' → logprob: -13.724753379821777

Token 43: ' as' (ID: 472)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.1684772968292236
    2. '
' → logprob: -1.4184772968292236
    3. '

' → logprob: -1.7934772968292236
    4. ',' → logprob: -1.9184772968292236
    5. '<|end|>' → logprob: -2.9184772968292236
    6. '```' → logprob: -3.6684772968292236
    7. ' 

' → logprob: -4.6684770584106445
    8. '\n' → logprob: -4.6684770584106445
    9. ' 
' → logprob: -4.9184770584106445
    10. 'from' → logprob: -5.2934770584106445

Token 44: ' dict' (ID: 11878)
  Prédit: ' defaultdict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.012088097631931305
    2. 'default' → logprob: -5.762088298797607
    3. ' dd' → logprob: -5.762088298797607
    4. ' d' → logprob: -6.637088298797607
    5. ' default' → logprob: -6.762088298797607
    6. ' def' → logprob: -7.012088298797607
    7. ' _' → logprob: -7.262088298797607
    8. ' Default' → logprob: -7.262088298797607
    9. 'Default' → logprob: -8.63708782196045
    10. '_default' → logprob: -8.76208782196045

Token 45: '_default' (ID: 21934)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 46: '_factory' (ID: 57891)
  Prédit: 'dict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dict' → logprob: -2.165027217415627e-05
    2. 'ict' → logprob: -11.250021934509277
    3. ' dict' → logprob: -11.750021934509277
    4. 'dic' → logprob: -15.000021934509277
    5. '_dict' → logprob: -16.12502098083496
    6. 'def' → logprob: -16.75002098083496
    7. 'Dict' → logprob: -16.75002098083496
    8. 'ct' → logprob: -17.00002098083496
    9. '(dict' → logprob: -17.25002098083496
    10. 'd' → logprob: -17.75002098083496

Token 47: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.13844208419322968
    2. '

' → logprob: -2.888442039489746
    3. '<|end|>' → logprob: -3.388442039489746
    4. 'def' → logprob: -4.638442039489746
    5. ' ' → logprob: -4.888442039489746
    6. ',' → logprob: -5.513442039489746
    7. 'import' → logprob: -5.763442039489746
    8. '' → logprob: -6.138442039489746
    9. 'newline' → logprob: -6.388442039489746
    10. '<|end|>' → logprob: -6.388442039489746

Token 48: 'from' (ID: 2845)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 49: ' collections' (ID: 22690)
  Prédit: ' collections'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.31840240955352783
    2. ' typing' → logprob: -1.9434024095535278
    3. ' ' → logprob: -2.9434022903442383
    4. ' functools' → logprob: -3.9434022903442383
    5. 'collections' → logprob: -4.193402290344238
    6. '_' → logprob: -4.568402290344238
    7. ' math' → logprob: -4.693402290344238
    8. ' itertools' → logprob: -4.693402290344238
    9. ' operator' → logprob: -5.818402290344238
    10. ' queue' → logprob: -6.068402290344238

Token 50: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.6377195715904236
    2. 'import' → logprob: -0.7627195715904236
    3. '<|end|>' → logprob: -5.887719631195068
    4. '.' → logprob: -7.012719631195068
    5. ' ' → logprob: -7.637719631195068
    6. '	import' → logprob: -8.01271915435791
    7. '```' → logprob: -8.51271915435791
    8. 'collections' → logprob: -9.26271915435791
    9. '_import' → logprob: -9.38771915435791
    10. ' imports' → logprob: -10.88771915435791

Token 51: ' deque' (ID: 90347)
  Prédit: ' defaultdict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.5195436477661133
    2. 'deque' → logprob: -1.2695436477661133
    3. ' deque' → logprob: -2.2695436477661133
    4. 'default' → logprob: -4.394543647766113
    5. ' Counter' → logprob: -5.644543647766113
    6. 'named' → logprob: -6.769543647766113
    7. 'de' → logprob: -6.894543647766113
    8. ' named' → logprob: -7.019543647766113
    9. 'abc' → logprob: -7.519543647766113
    10. 'Counter' → logprob: -7.644543647766113

Token 52: ' as' (ID: 472)
  Prédit: ' as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' as' → logprob: -0.2533385753631592
    2. ' ' → logprob: -1.6283385753631592
    3. 'as' → logprob: -4.128338813781738
    4. '<|end|>' → logprob: -4.503338813781738
    5. 'import' → logprob: -8.753338813781738
    6. '<|end|>' → logprob: -10.003338813781738
    7. ')' → logprob: -10.878338813781738
    8. ' (' → logprob: -10.878338813781738
    9. '(' → logprob: -11.378338813781738
    10. '  ' → logprob: -11.503338813781738

Token 53: ' deque' (ID: 90347)
  Prédit: ' deque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deque' → logprob: -0.011887510307133198
    2. 'deque' → logprob: -4.511887550354004
    3. ' de' → logprob: -7.261887550354004
    4. ' ' → logprob: -9.761887550354004
    5. ' dequeue' → logprob: -10.386887550354004
    6. ' dq' → logprob: -11.636887550354004
    7. 'Deque' → logprob: -12.136887550354004
    8. ' collections' → logprob: -12.136887550354004
    9. ' d' → logprob: -12.261887550354004
    10. ' dde' → logprob: -12.386887550354004

Token 54: '_class' (ID: 10602)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 55: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 56: 'from' (ID: 2845)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 57: ' decimal' (ID: 26964)
  Prédit: ' threading'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' threading' → logprob: -0.9957688450813293
    2. ' collections' → logprob: -1.2457687854766846
    3. ' queue' → logprob: -2.1207687854766846
    4. ' typing' → logprob: -2.2457687854766846
    5. ' heap' → logprob: -3.3707687854766846
    6. ' os' → logprob: -3.6207687854766846
    7. ' functools' → logprob: -3.9957687854766846
    8. ' itertools' → logprob: -4.620769023895264
    9. ' operator' → logprob: -4.870769023895264
    10. ' math' → logprob: -4.995769023895264

Token 58: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.35145220160484314
    2. '<|end|>' → logprob: -1.4764522314071655
    3. 'import' → logprob: -2.851452112197876
    4. ' ' → logprob: -4.851452350616455
    5. '<|end|>' → logprob: -7.101452350616455
    6. '	import' → logprob: -7.976452350616455
    7. ' ' → logprob: -8.476451873779297
    8. '_import' → logprob: -8.476451873779297
    9. '```' → logprob: -8.476451873779297
    10. '.' → logprob: -8.851451873779297

Token 59: ' Decimal' (ID: 56874)
  Prédit: ' Decimal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Decimal' → logprob: -0.02884659171104431
    2. 'Decimal' → logprob: -3.778846502304077
    3. '.Decimal' → logprob: -5.278846740722656
    4. ' ' → logprob: -8.278846740722656
    5. ' Dec' → logprob: -9.903846740722656
    6. ' ' → logprob: -10.278846740722656
    7. ' decimal' → logprob: -10.278846740722656
    8. 'decimal' → logprob: -10.403846740722656
    9. '_decimal' → logprob: -10.653846740722656
    10. 'Decimals' → logprob: -11.528846740722656

Token 60: ' as' (ID: 472)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 61: ' decimal' (ID: 26964)
  Prédit: ' Decimal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Decimal' → logprob: -0.019186485558748245
    2. 'Decimal' → logprob: -4.644186496734619
    3. ' ' → logprob: -4.894186496734619
    4. ' Dec' → logprob: -7.019186496734619
    5. ' decimal' → logprob: -7.269186496734619
    6. ' D' → logprob: -9.519186019897461
    7. ' ' → logprob: -9.894186019897461
    8. '_decimal' → logprob: -9.894186019897461
    9. '_' → logprob: -10.519186019897461
    10. '.Decimal' → logprob: -10.644186019897461

Token 62: '_decimal' (ID: 178716)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9083421230316162
    2. '<|end|>' → logprob: -1.2833421230316162
    3. '
' → logprob: -1.6583421230316162
    4. '.' → logprob: -2.408342123031616
    5. ' ' → logprob: -4.658342361450195
    6. ')' → logprob: -5.533342361450195
    7. '_
' → logprob: -5.658342361450195
    8. '\' → logprob: -5.658342361450195
    9. '\n' → logprob: -5.658342361450195
    10. '' → logprob: -5.658342361450195

Token 63: '_class' (ID: 10602)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 64: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7605178356170654
    2. '<|end|>' → logprob: -0.7605178356170654
    3. '\n' → logprob: -4.5105180740356445
    4. '

' → logprob: -4.6355180740356445
    5. '```' → logprob: -5.0105180740356445
    6. ' ' → logprob: -5.3855180740356445
    7. '<|end|>' → logprob: -5.3855180740356445
    8. '' → logprob: -5.3855180740356445
    9. ',' → logprob: -5.6355180740356445
    10. 'newline' → logprob: -5.7605180740356445

Token 65: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.240045964717865
    2. '

' → logprob: -3.2400460243225098
    3. '#' → logprob: -3.6150460243225098
    4. '.' → logprob: -3.8650460243225098
    5. '' → logprob: -4.11504602432251
    6. '<|end|>' → logprob: -4.11504602432251
    7. '_' → logprob: -4.24004602432251
    8. 'a' → logprob: -4.36504602432251
    9. '\n' → logprob: -4.61504602432251
    10. ',' → logprob: -4.61504602432251

Token 66: ' Input' (ID: 10090)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.012411106377840042
    2. '<|end|>' → logprob: -5.137411117553711
    3. '<|end|>' → logprob: -5.637411117553711
    4. 'def' → logprob: -6.387411117553711
    5. ' def' → logprob: -8.262411117553711
    6. ' #' → logprob: -8.637411117553711
    7. ' The' → logprob: -8.887411117553711
    8. '#' → logprob: -9.262411117553711
    9. 'import' → logprob: -9.512411117553711
    10. ' ```' → logprob: -9.512411117553711

Token 67: ' utility' (ID: 24779)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8511883020401001
    2. '_' → logprob: -0.8511883020401001
    3. 's' → logprob: -2.4761881828308105
    4. ' =' → logprob: -4.1011881828308105
    5. '()' → logprob: -4.2261881828308105
    6. ':' → logprob: -5.1011881828308105
    7. ' ' → logprob: -5.1011881828308105
    8. '=' → logprob: -5.3511881828308105
    9. '[' → logprob: -5.9761881828308105
    10. ')' → logprob: -6.1011881828308105

Token 68: ' functions' (ID: 9964)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3440738916397095
    2. 'def' → logprob: -1.5940738916397095
    3. 's' → logprob: -2.59407377243042
    4. ' def' → logprob: -5.21907377243042
    5. ':' → logprob: -5.84407377243042
    6. ' =' → logprob: -7.46907377243042
    7. '\' → logprob: -7.46907377243042
    8. '=' → logprob: -7.46907377243042
    9. '(' → logprob: -7.71907377243042
    10. ')' → logprob: -7.71907377243042

Token 69: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4165809750556946
    2. '_' → logprob: -1.1665809154510498
    3. 'd' → logprob: -4.416581153869629
    4. '
' → logprob: -4.666581153869629
    5. '_
' → logprob: -5.791581153869629
    6. '```' → logprob: -7.291581153869629
    7. '_def' → logprob: -7.416581153869629
    8. '_de' → logprob: -7.416581153869629
    9. '_

' → logprob: -7.416581153869629
    10. '

' → logprob: -7.541581153869629

Token 70: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.003146819770336151
    2. '
' → logprob: -6.628146648406982
    3. '_' → logprob: -7.128146648406982
    4. 'de' → logprob: -8.00314712524414
    5. 'd' → logprob: -8.37814712524414
    6. '_def' → logprob: -8.62814712524414
    7. '_de' → logprob: -8.87814712524414
    8. ' def' → logprob: -9.62814712524414
    9. '\' → logprob: -11.00314712524414
    10. '_
' → logprob: -11.12814712524414

Token 71: ' input' (ID: 3422)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7164177298545837
    2. ' read' → logprob: -0.8414177298545837
    3. '_' → logprob: -3.5914177894592285
    4. ' input' → logprob: -3.8414177894592285
    5. ' parse' → logprob: -4.2164177894592285
    6. ' get' → logprob: -4.7164177894592285
    7. ' readline' → logprob: -6.2164177894592285
    8. '_input' → logprob: -6.3414177894592285
    9. '_read' → logprob: -6.5914177894592285
    10. ' _' → logprob: -7.4664177894592285

Token 72: '_int' (ID: 12285)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.30403023958206177
    2. '(' → logprob: -1.429030179977417
    3. '_' → logprob: -4.429030418395996
    4. '()' → logprob: -4.804030418395996
    5. '():
' → logprob: -7.804030418395996
    6. '):' → logprob: -8.054030418395996
    7. '_line' → logprob: -8.429030418395996
    8. '(prompt' → logprob: -8.679030418395996
    9. '_data' → logprob: -9.179030418395996
    10. '_token' → logprob: -9.179030418395996

Token 73: '():' (ID: 9442)
  Prédit: '():'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0019512299913913012
    2. '()' → logprob: -6.501951217651367
    3. ' ():' → logprob: -8.501951217651367
    4. '(' → logprob: -8.876951217651367
    5. '():
' → logprob: -9.376951217651367
    6. ' ()' → logprob: -12.001951217651367
    7. '_' → logprob: -12.751951217651367
    8. '32' → logprob: -13.376951217651367
    9. '(prompt' → logprob: -13.501951217651367
    10. '():

' → logprob: -13.751951217651367

Token 74: ' return' (ID: 622)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1967950165271759
    2. '()' → logprob: -1.8217949867248535
    3. '(int' → logprob: -5.5717949867248535
    4. '(
' → logprob: -5.9467949867248535
    5. 'int' → logprob: -6.0717949867248535
    6. 'return' → logprob: -6.0717949867248535
    7. ' ()' → logprob: -6.6967949867248535
    8. '():' → logprob: -7.0717949867248535
    9. ' return' → logprob: -7.4467949867248535
    10. ' (' → logprob: -7.4467949867248535

Token 75: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.00560641149058938
    2. 'int' → logprob: -5.630606174468994
    3. ' ' → logprob: -6.505606174468994
    4. ' in' → logprob: -7.630606174468994
    5. '	int' → logprob: -11.755606651306152
    6. ' i' → logprob: -12.255606651306152
    7. '(int' → logprob: -12.380606651306152
    8. '  ' → logprob: -13.255606651306152
    9. ' ' → logprob: -13.755606651306152
    10. '[int' → logprob: -14.130606651306152

Token 76: '(sys' (ID: 41042)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0047089881263673306
    2. '(input' → logprob: -5.504708766937256
    3. '(sys' → logprob: -7.379708766937256
    4. '(
' → logprob: -12.879709243774414
    5. '(

' → logprob: -13.379709243774414
    6. ' (' → logprob: -13.879709243774414
    7. '('' → logprob: -14.629709243774414
    8. 'input' → logprob: -15.129709243774414
    9. '()' → logprob: -15.254709243774414
    10. '((' → logprob: -16.004709243774414

Token 77: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.001957179047167301
    2. '.' → logprob: -6.251957416534424
    3. '.readline' → logprob: -10.876956939697266
    4. '.argv' → logprob: -12.126956939697266
    5. '.stdout' → logprob: -12.626956939697266
    6. '.std' → logprob: -14.376956939697266
    7. '.st' → logprob: -16.251956939697266
    8. '.input' → logprob: -16.376956939697266
    9. '(stdin' → logprob: -16.876956939697266
    10. '.standard' → logprob: -17.126956939697266

Token 78: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.00047690561041235924
    2. '.' → logprob: -7.750476837158203
    3. '.read' → logprob: -10.000476837158203
    4. '.stdin' → logprob: -14.000476837158203
    5. ' .' → logprob: -16.750476837158203
    6. '.)' → logprob: -18.000476837158203
    7. ' readline' → logprob: -18.000476837158203
    8. '.re' → logprob: -19.000476837158203
    9. '.readlines' → logprob: -19.000476837158203
    10. ')' → logprob: -19.125476837158203

Token 79: '())
' (ID: 4574)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '().' → logprob: -0.38789746165275574
    2. '())' → logprob: -1.1378974914550781
    3. '()' → logprob: -6.887897491455078
    4. ' ())' → logprob: -13.137897491455078
    5. '(' → logprob: -13.262897491455078
    6. '()
' → logprob: -14.762897491455078
    7. '()[' → logprob: -14.762897491455078
    8. '();)' → logprob: -15.387897491455078
    9. '()\' → logprob: -15.387897491455078
    10. '()]' → logprob: -15.512897491455078

Token 80: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.038462456315755844
    2. '\n' → logprob: -4.4134626388549805
    3. '(' → logprob: -4.6634626388549805
    4. '()' → logprob: -5.2884626388549805
    5. '

' → logprob: -6.1634626388549805
    6. '(
' → logprob: -6.2884626388549805
    7. '()
' → logprob: -6.5384626388549805
    8. '' → logprob: -6.6634626388549805
    9. 'def' → logprob: -6.6634626388549805
    10. ' 
' → logprob: -7.0384626388549805

Token 81: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.5199730396270752
    2. 'input' → logprob: -1.1449730396270752
    3. '_input' → logprob: -2.519973039627075
    4. '_' → logprob: -5.144972801208496
    5. ' _' → logprob: -7.269972801208496
    6. ' ' → logprob: -8.769972801208496
    7. '(input' → logprob: -10.394972801208496
    8. 'space' → logprob: -11.019972801208496
    9. ' space' → logprob: -12.019972801208496
    10. '_space' → logprob: -12.269972801208496

Token 82: '_map' (ID: 11824)
  Prédit: '_str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.4423453211784363
    2. '_' → logprob: -1.067345380783081
    3. '_line' → logprob: -5.317345142364502
    4. '()' → logprob: -5.692345142364502
    5. '_string' → logprob: -5.942345142364502
    6. '_s' → logprob: -7.442345142364502
    7. ' _' → logprob: -7.817345142364502
    8. '_raw' → logprob: -7.942345142364502
    9. '_float' → logprob: -8.81734561920166
    10. '_list' → logprob: -9.06734561920166

Token 83: '():' (ID: 9442)
  Prédit: '():'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.46839606761932373
    2. '()' → logprob: -1.0933960676193237
    3. '(lambda' → logprob: -3.3433961868286133
    4. '(' → logprob: -7.093396186828613
    5. '(int' → logprob: -7.343396186828613
    6. '()(' → logprob: -7.343396186828613
    7. ' ()' → logprob: -8.093396186828613
    8. '(str' → logprob: -8.468396186828613
    9. 'lambda' → logprob: -8.968396186828613
    10. '(){' → logprob: -9.218396186828613

Token 84: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.0037937811575829983
    2. 'return' → logprob: -6.003793716430664
    3. ' map' → logprob: -7.003793716430664
    4. ' ' → logprob: -8.003793716430664
    5. '    ' → logprob: -10.503793716430664
    6. ' ' → logprob: -11.628793716430664
    7. ' 
' → logprob: -11.628793716430664
    8. '	return' → logprob: -11.878793716430664
    9. '()' → logprob: -12.503793716430664
    10. 'map' → logprob: -13.003793716430664

Token 85: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.4742741286754608
    2. ' map' → logprob: -0.9742741584777832
    3. '(map' → logprob: -9.099273681640625
    4. '	map' → logprob: -9.724273681640625
    5. 'sys' → logprob: -11.724273681640625
    6. ' sys' → logprob: -11.849273681640625
    7. ' ' → logprob: -12.224273681640625
    8. ' ' → logprob: -13.224273681640625
    9. '  ' → logprob: -13.599273681640625
    10. 'm' → logprob: -14.349273681640625

Token 86: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00018494461255613714
    2. '(str' → logprob: -9.125185012817383
    3. 'int' → logprob: -10.000185012817383
    4. '(' → logprob: -10.500185012817383
    5. '<int' → logprob: -13.500185012817383
    6. 'str' → logprob: -13.875185012817383
    7. '=int' → logprob: -15.750185012817383
    8. '[int' → logprob: -16.125185012817383
    9. ']int' → logprob: -16.125185012817383
    10. '(eval' → logprob: -16.625185012817383

Token 87: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002848152944352478
    2. ' ,' → logprob: -8.500285148620605
    3. ',int' → logprob: -10.000285148620605
    4. ',input' → logprob: -11.000285148620605
    5. '(sys' → logprob: -12.250285148620605
    6. ',(' → logprob: -12.250285148620605
    7. 'sys' → logprob: -13.250285148620605
    8. ',s' → logprob: -13.500285148620605
    9. ',System' → logprob: -14.000285148620605
    10. ',line' → logprob: -14.000285148620605

Token 88: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.016115307807922363
    2. ' sys' → logprob: -4.141115188598633
    3. ')' → logprob: -9.641115188598633
    4. ' ' → logprob: -12.891115188598633
    5. '=sys' → logprob: -13.016115188598633
    6. '	sys' → logprob: -13.141115188598633
    7. 'input' → logprob: -13.266115188598633
    8. '(sys' → logprob: -13.391115188598633
    9. ' )' → logprob: -13.891115188598633
    10. '```' → logprob: -14.141115188598633

Token 89: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0033616507425904274
    2. '.' → logprob: -5.753361701965332
    3. 'stdin' → logprob: -8.878361701965332
    4. '.stdout' → logprob: -10.253361701965332
    5. '(stdin' → logprob: -12.628361701965332
    6. ' stdin' → logprob: -12.878361701965332
    7. '.std' → logprob: -13.253361701965332
    8. '.readline' → logprob: -14.378361701965332
    9. '.
' → logprob: -15.128361701965332
    10. '.stderr' → logprob: -15.503361701965332

Token 90: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.33835119009017944
    2. '.' → logprob: -1.8383512496948242
    3. '().' → logprob: -2.088351249694824
    4. '()' → logprob: -6.463351249694824
    5. '.stdin' → logprob: -6.963351249694824
    6. '())' → logprob: -7.338351249694824
    7. ')' → logprob: -7.588351249694824
    8. '._' → logprob: -9.463351249694824
    9. '(stdin' → logprob: -9.588351249694824
    10. '.)' → logprob: -9.838351249694824

Token 91: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0001628956088097766
    2. '()' → logprob: -8.750163078308105
    3. ' ().' → logprob: -13.000163078308105
    4. '())' → logprob: -13.625163078308105
    5. ')' → logprob: -14.125163078308105
    6. ' ()' → logprob: -16.12516212463379
    7. '(' → logprob: -16.62516212463379
    8. '().__' → logprob: -18.00016212463379
    9. '.' → logprob: -18.12516212463379
    10. '().'' → logprob: -18.37516212463379

Token 92: 'split' (ID: 13627)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.8121607303619385
    2. 'rstrip' → logprob: -1.3121607303619385
    3. 'strip' → logprob: -1.5621607303619385
    4. 'split' → logprob: -2.5621607303619385
    5. ' readline' → logprob: -10.68716049194336
    6. '.readline' → logprob: -11.31216049194336
    7. ' ' → logprob: -12.56216049194336
    8. ')' → logprob: -13.18716049194336
    9. 'decode' → logprob: -13.43716049194336
    10. '```' → logprob: -14.56216049194336

Token 93: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.005467351526021957
    2. '()' → logprob: -5.380467414855957
    3. ')' → logprob: -7.130467414855957
    4. '())
' → logprob: -10.505467414855957
    5. ' ())' → logprob: -11.755467414855957
    6. '()))' → logprob: -12.630467414855957
    7. '(' → logprob: -12.755467414855957
    8. '()
' → logprob: -13.130467414855957
    9. '())

' → logprob: -14.255467414855957
    10. '())
' → logprob: -15.005467414855957

Token 94: 'def' (ID: 1314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.8119890093803406
    2. 'def' → logprob: -1.0619890689849854
    3. '()
' → logprob: -2.8119890689849854
    4. '
' → logprob: -2.8119890689849854
    5. '(' → logprob: -2.9369890689849854
    6. '_' → logprob: -4.311988830566406
    7. '\n' → logprob: -5.186988830566406
    8. '(
' → logprob: -5.561988830566406
    9. '\' → logprob: -5.686988830566406
    10. '#' → logprob: -5.936988830566406

Token 95: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.6934778690338135
    2. ' input' → logprob: -0.6934778690338135
    3. '_input' → logprob: -8.193477630615234
    4. ' ' → logprob: -11.193477630615234
    5. '	input' → logprob: -11.943477630615234
    6. 'int' → logprob: -12.568477630615234
    7. '(input' → logprob: -12.693477630615234
    8. '=input' → logprob: -12.755977630615234
    9. 'list' → logprob: -13.193477630615234
    10. 's' → logprob: -13.255977630615234

Token 96: '_list' (ID: 4162)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5990360975265503
    2. '_str' → logprob: -1.0990360975265503
    3. '_list' → logprob: -2.72403621673584
    4. '_line' → logprob: -3.84903621673584
    5. '_string' → logprob: -3.97403621673584
    6. '_array' → logprob: -5.09903621673584
    7. '_s' → logprob: -5.84903621673584
    8. '_raw' → logprob: -7.22403621673584
    9. '_int' → logprob: -7.47403621673584
    10. '_text' → logprob: -8.34903621673584

Token 97: '():' (ID: 9442)
  Prédit: '():'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.001387850963510573
    2. '()' → logprob: -6.626388072967529
    3. ' ():' → logprob: -10.626387596130371
    4. '():
' → logprob: -10.751387596130371
    5. '()>' → logprob: -12.501387596130371
    6. ' ()' → logprob: -12.626387596130371
    7. '():

' → logprob: -13.001387596130371
    8. 'def' → logprob: -13.501387596130371
    9. '()]' → logprob: -14.501387596130371
    10. '`()' → logprob: -14.626387596130371

Token 98: ' return' (ID: 622)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.43342626094818115
    2. ' return' → logprob: -1.0584262609481812
    3. 'return' → logprob: -5.558426380157471
    4. ' ' → logprob: -7.808426380157471
    5. ' []' → logprob: -8.683425903320312
    6. ' ()' → logprob: -9.558425903320312
    7. '[]' → logprob: -9.808425903320312
    8. ' list' → logprob: -10.058425903320312
    9. '  ' → logprob: -10.558425903320312
    10. '	return' → logprob: -11.058425903320312

Token 99: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.4742763638496399
    2. 'list' → logprob: -0.9742763638496399
    3. '[list' → logprob: -9.099276542663574
    4. '[' → logprob: -9.974276542663574
    5. ' [' → logprob: -10.474276542663574
    6. '(list' → logprob: -12.349276542663574
    7. ' ' → logprob: -13.099276542663574
    8. '	list' → logprob: -13.349276542663574
    9. 'sys' → logprob: -13.724276542663574
    10. ' sys' → logprob: -13.849276542663574

Token 100: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.09834616631269455
    2. '(' → logprob: -2.84834623336792
    3. '(sys' → logprob: -3.34834623336792
    4. '(int' → logprob: -7.47334623336792
    5. 'map' → logprob: -12.848345756530762
    6. '(s' → logprob: -12.973345756530762
    7. '(
' → logprob: -13.348345756530762
    8. ' (' → logprob: -13.473345756530762
    9. '(

' → logprob: -13.473345756530762
    10. '(system' → logprob: -13.973345756530762

Token 101: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.012576762586832047
    2. '(' → logprob: -4.387576580047607
    3. '<int' → logprob: -10.137577056884766
    4. 'int' → logprob: -11.637577056884766
    5. '(in' → logprob: -12.512577056884766
    6. ' (' → logprob: -12.637577056884766
    7. '(
' → logprob: -12.637577056884766
    8. '[int' → logprob: -13.012577056884766
    9. '_int' → logprob: -13.262577056884766
    10. '(input' → logprob: -13.762577056884766

Token 102: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03534269332885742
    2. '(sys' → logprob: -3.5353426933288574
    3. ' ,' → logprob: -5.285342693328857
    4. 'sys' → logprob: -8.410343170166016
    5. ' sys' → logprob: -9.410343170166016
    6. ',int' → logprob: -9.535343170166016
    7. '=sys' → logprob: -10.160343170166016
    8. ',(' → logprob: -10.535343170166016
    9. ',s' → logprob: -10.785343170166016
    10. ',input' → logprob: -11.035343170166016

Token 103: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.5761756896972656
    2. ' sys' → logprob: -0.8261756896972656
    3. '(sys' → logprob: -8.451175689697266
    4. ')' → logprob: -11.826175689697266
    5. '=sys' → logprob: -12.326175689697266
    6. '	sys' → logprob: -12.576175689697266
    7. ' ' → logprob: -12.701175689697266
    8. 'input' → logprob: -13.826175689697266
    9. ' )' → logprob: -14.076175689697266
    10. ' input' → logprob: -14.451175689697266

Token 104: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -5.598092684522271e-05
    2. '.stdout' → logprob: -10.625056266784668
    3. '._' → logprob: -11.125056266784668
    4. 'stdin' → logprob: -11.875056266784668
    5. '_list' → logprob: -12.375056266784668
    6. '.' → logprob: -13.250056266784668
    7. '.readline' → logprob: -13.375056266784668
    8. '.std' → logprob: -13.625056266784668
    9. '(stdin' → logprob: -15.250056266784668
    10. '.argv' → logprob: -15.500056266784668

Token 105: '.readline' (ID: 74673)
  Prédit: '_list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.6417236328125
    2. '())' → logprob: -1.1417236328125
    3. '()))' → logprob: -2.3917236328125
    4. ')' → logprob: -3.5167236328125
    5. '().' → logprob: -4.5167236328125
    6. '_' → logprob: -4.7667236328125
    7. '()' → logprob: -5.7667236328125
    8. '))' → logprob: -6.1417236328125
    9. '())
' → logprob: -6.1417236328125
    10. '()))
' → logprob: -6.1417236328125

Token 106: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.935296834039036e-06
    2. '()' → logprob: -13.12500286102295
    3. ' ().' → logprob: -14.75000286102295
    4. ')' → logprob: -15.37500286102295
    5. '))' → logprob: -16.375003814697266
    6. '.' → logprob: -16.750003814697266
    7. '(' → logprob: -17.125003814697266
    8. '()))' → logprob: -17.375003814697266
    9. ' .' → logprob: -17.875003814697266
    10. '())' → logprob: -18.625003814697266

Token 107: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00019102399528492242
    2. 'strip' → logprob: -8.625190734863281
    3. ')' → logprob: -12.125190734863281
    4. ' split' → logprob: -12.375190734863281
    5. '(split' → logprob: -14.250190734863281
    6. 'rstrip' → logprob: -14.750190734863281
    7. 'read' → logprob: -15.000190734863281
    8. '())' → logprob: -16.75019073486328
    9. '))' → logprob: -16.87519073486328
    10. 'spl' → logprob: -17.00019073486328

Token 108: '()))
' (ID: 24521)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.42803850769996643
    2. '()))' → logprob: -1.178038477897644
    3. '())' → logprob: -4.053038597106934
    4. ')' → logprob: -4.428038597106934
    5. '()' → logprob: -4.553038597106934
    6. '()))
' → logprob: -8.303038597106934
    7. '))
' → logprob: -9.428038597106934
    8. '(' → logprob: -9.428038597106934
    9. '())
' → logprob: -10.553038597106934
    10. ' ))' → logprob: -10.678038597106934

Token 109: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.015138411894440651
    2. 'def' → logprob: -4.890138626098633
    3. '

' → logprob: -5.140138626098633
    4. '#' → logprob: -7.640138626098633
    5. 'd' → logprob: -7.765138626098633
    6. '' → logprob: -8.640138626098633
    7. '<|end|>' → logprob: -9.015138626098633
    8. '
' → logprob: -9.140138626098633
    9. ' 
' → logprob: -9.640138626098633
    10. '\n' → logprob: -9.640138626098633

Token 110: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.6467965245246887
    2. 'input' → logprob: -0.7717965245246887
    3. '_input' → logprob: -4.271796703338623
    4. '_' → logprob: -9.396796226501465
    5. '	input' → logprob: -11.646796226501465
    6. ' ' → logprob: -11.771796226501465
    7. 'output' → logprob: -12.396796226501465
    8. '_str' → logprob: -12.646796226501465
    9. '(input' → logprob: -12.834296226501465
    10. ' _' → logprob: -12.959296226501465

Token 111: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.001768947229720652
    2. '_line' → logprob: -7.001769065856934
    3. '_string' → logprob: -7.751769065856934
    4. '_' → logprob: -8.001769065856934
    5. '_int' → logprob: -10.376769065856934
    6. '_s' → logprob: -11.001769065856934
    7. '_raw' → logprob: -11.126769065856934
    8. '()' → logprob: -11.626769065856934
    9. '_split' → logprob: -12.501769065856934
    10. '_strip' → logprob: -12.626769065856934

Token 112: '():' (ID: 9442)
  Prédit: '():'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0022881142795085907
    2. '()' → logprob: -6.127288341522217
    3. '_line' → logprob: -10.127287864685059
    4. ' ():' → logprob: -10.252287864685059
    5. '():
' → logprob: -11.377287864685059
    6. '_str' → logprob: -12.002287864685059
    7. '_' → logprob: -13.002287864685059
    8. 'def' → logprob: -13.627287864685059
    9. ' ()' → logprob: -13.627287864685059
    10. 'line' → logprob: -13.877287864685059

Token 113: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.10179013013839722
    2. 'return' → logprob: -2.351790189743042
    3. ' sys' → logprob: -6.726789951324463
    4. 'sys' → logprob: -8.476790428161621
    5. '   ' → logprob: -8.976790428161621
    6. '()' → logprob: -11.476790428161621
    7. ' ' → logprob: -11.726790428161621
    8. ' ()' → logprob: -11.851790428161621
    9. 'def' → logprob: -11.851790428161621
    10. '    ' → logprob: -12.101790428161621

Token 114: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.20165355503559113
    2. ' sys' → logprob: -1.7016535997390747
    3. 'input' → logprob: -8.576653480529785
    4. ' input' → logprob: -10.201653480529785
    5. 'str' → logprob: -11.576653480529785
    6. '(sys' → logprob: -13.076653480529785
    7. '	sys' → logprob: -13.701653480529785
    8. '=sys' → logprob: -14.201653480529785
    9. ' ' → logprob: -14.451653480529785
    10. ' str' → logprob: -14.826653480529785

Token 115: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0001999642699956894
    2. '.readline' → logprob: -9.375200271606445
    3. '.stdout' → logprob: -9.750200271606445
    4. '.' → logprob: -10.000200271606445
    5. '.argv' → logprob: -12.250200271606445
    6. '.std' → logprob: -13.000200271606445
    7. '.str' → logprob: -13.375200271606445
    8. '(stdin' → logprob: -13.875200271606445
    9. 'stdin' → logprob: -14.125200271606445
    10. '.stderr' → logprob: -15.000200271606445

Token 116: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -7.028536492725834e-05
    2. '.' → logprob: -10.000070571899414
    3. '.read' → logprob: -10.625070571899414
    4. '.readlines' → logprob: -15.125070571899414
    5. '_read' → logprob: -15.875070571899414
    6. ' readline' → logprob: -16.375070571899414
    7. '().' → logprob: -17.625070571899414
    8. 'read' → logprob: -18.375070571899414
    9. ' .' → logprob: -18.375070571899414
    10. '.rstrip' → logprob: -19.625070571899414

Token 117: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.02975963056087494
    2. '()' → logprob: -3.529759645462036
    3. ' ().' → logprob: -12.029759407043457
    4. ' ()' → logprob: -13.779759407043457
    5. '(' → logprob: -13.904759407043457
    6. '.rstrip' → logprob: -15.654759407043457
    7. '()

' → logprob: -15.904759407043457
    8. '.strip' → logprob: -16.029760360717773
    9. '()
' → logprob: -16.154760360717773
    10. 'rstrip' → logprob: -16.404760360717773

Token 118: 'rstrip' (ID: 180429)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.2014141082763672
    2. 'rstrip' → logprob: -1.7014141082763672
    3. ' strip' → logprob: -14.201414108276367
    4. 'decode' → logprob: -15.701414108276367
    5. '_strip' → logprob: -17.326414108276367
    6. 'read' → logprob: -17.576414108276367
    7. 'str' → logprob: -17.951414108276367
    8. 'rst' → logprob: -18.326414108276367
    9. '.rstrip' → logprob: -18.701414108276367
    10. '```' → logprob: -18.951414108276367

Token 119: '('\' (ID: 24345)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.01724322699010372
    2. '(' → logprob: -4.142243385314941
    3. '()
' → logprob: -6.892243385314941
    4. '(
' → logprob: -9.517243385314941
    5. '()

' → logprob: -9.892243385314941
    6. '()\' → logprob: -10.267243385314941
    7. 'def' → logprob: -11.767243385314941
    8. '\(' → logprob: -12.267243385314941
    9. ')' → logprob: -12.642243385314941
    10. '#' → logprob: -12.767243385314941

Token 120: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.1279587745666504
    2. '\n' → logprob: -2.1279587745666504
    3. ')' → logprob: -7.25295877456665
    4. ')\' → logprob: -8.502958297729492
    5. '')' → logprob: -10.002958297729492
    6. 'newline' → logprob: -10.377958297729492
    7. ''\' → logprob: -11.127958297729492
    8. '
' → logprob: -11.502958297729492
    9. 'r' → logprob: -12.377958297729492
    10. '\' → logprob: -12.627958297729492

Token 121: '')

' (ID: 9735)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '')' → logprob: -0.25504425168037415
    2. ')' → logprob: -1.5050442218780518
    3. '()' → logprob: -6.130044460296631
    4. '")' → logprob: -7.380044460296631
    5. ''))' → logprob: -9.005043983459473
    6. '())' → logprob: -9.130043983459473
    7. '')
' → logprob: -10.380043983459473
    8. ''' → logprob: -11.005043983459473
    9. '))' → logprob: -11.630043983459473
    10. ')")' → logprob: -12.255043983459473

Token 122: 'CONST' (ID: 168319)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.35488376021385193
    2. 'd' → logprob: -1.9798837900161743
    3. 'def' → logprob: -2.1048836708068848
    4. '#' → logprob: -3.3548836708068848
    5. '\' → logprob: -6.604883670806885
    6. '

' → logprob: -6.979883670806885
    7. '' → logprob: -7.979883670806885
    8. '
' → logprob: -8.104884147644043
    9. '\n' → logprob: -8.479884147644043
    10. '#
' → logprob: -8.729884147644043

Token 123: '_INF' (ID: 173649)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.010259108617901802
    2. 'S' → logprob: -5.26025915145874
    3. '_VAL' → logprob: -6.63525915145874
    4. '_MAX' → logprob: -7.13525915145874
    5. '_S' → logprob: -7.88525915145874
    6. '_=' → logprob: -8.010258674621582
    7. ' _' → logprob: -8.260258674621582
    8. ' =' → logprob: -8.260258674621582
    9. '_SPACE' → logprob: -8.635258674621582
    10. 'ANT' → logprob: -9.135258674621582

Token 124: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.594817578792572
    2. '_' → logprob: -1.2198176383972168
    3. '=' → logprob: -2.094817638397217
    4. ' ' → logprob: -4.594817638397217
    5. 'ITY' → logprob: -4.844817638397217
    6. '  ' → logprob: -5.594817638397217
    7. '   ' → logprob: -5.969817638397217
    8. '=_' → logprob: -6.719817638397217
    9. ' _' → logprob: -7.344817638397217
    10. 'ETY' → logprob: -8.094817161560059

Token 125: ' float' (ID: 4428)
  Prédit: ' float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.8204048275947571
    2. ' ' → logprob: -1.0704047679901123
    3. 'float' → logprob: -1.6954047679901123
    4. '10' → logprob: -3.5704047679901123
    5. ' math' → logprob: -5.570405006408691
    6. 'math' → logprob: -6.820405006408691
    7. 'int' → logprob: -9.195405006408691
    8. ' int' → logprob: -9.320405006408691
    9. '1' → logprob: -9.945405006408691
    10. ' sys' → logprob: -11.070405006408691

Token 126: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -1.9743012671824545e-05
    2. '(' → logprob: -11.500020027160645
    3. ''' → logprob: -12.375020027160645
    4. '("' → logprob: -12.500020027160645
    5. ''in' → logprob: -14.000020027160645
    6. '('+' → logprob: -15.625020027160645
    7. ' ('' → logprob: -15.750020027160645
    8. '('-' → logprob: -16.250019073486328
    9. '32' → logprob: -17.250019073486328
    10. ''s' → logprob: -17.875019073486328

Token 127: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -2.6060808522743173e-05
    2. 'in' → logprob: -11.500025749206543
    3. ''in' → logprob: -12.125025749206543
    4. ''' → logprob: -12.375025749206543
    5. 'info' → logprob: -13.125025749206543
    6. ' inf' → logprob: -13.250025749206543
    7. 'INF' → logprob: -14.000025749206543
    8. 'i' → logprob: -14.750025749206543
    9. '_inf' → logprob: -15.125025749206543
    10. '-inf' → logprob: -15.250025749206543

Token 128: '')
' (ID: 2515)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06995878368616104
    2. '')' → logprob: -2.6949586868286133
    3. ')'' → logprob: -11.819958686828613
    4. '_' → logprob: -12.444958686828613
    5. '")' → logprob: -12.944958686828613
    6. ''' → logprob: -13.194958686828613
    7. ' )' → logprob: -13.444958686828613
    8. '')
' → logprob: -14.069958686828613
    9. ')
' → logprob: -14.194958686828613
    10. '('' → logprob: -14.569958686828613

Token 129: 'CONST' (ID: 168319)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2008739411830902
    2. 'def' → logprob: -1.8258739709854126
    3. '#' → logprob: -4.700873851776123
    4. '

' → logprob: -5.575873851776123
    5. '<|end|>' → logprob: -6.200873851776123
    6. '' → logprob: -6.575873851776123
    7. '
' → logprob: -6.700873851776123
    8. '_' → logprob: -6.700873851776123
    9. ' 
' → logprob: -8.075874328613281
    10. '\n' → logprob: -8.450874328613281

Token 130: '_MOD' (ID: 45275)
  Prédit: '_MAX'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_MAX' → logprob: -0.37241533398628235
    2. '_' → logprob: -1.62241530418396
    3. '_INF' → logprob: -3.74741530418396
    4. '_ZERO' → logprob: -3.87241530418396
    5. '_NONE' → logprob: -4.247415542602539
    6. '_S' → logprob: -4.747415542602539
    7. '_MIN' → logprob: -4.872415542602539
    8. '_INT' → logprob: -4.997415542602539
    9. '_INFINITY' → logprob: -5.122415542602539
    10. '_N' → logprob: -5.747415542602539

Token 131: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.013533231802284718
    2. '=' → logprob: -4.888533115386963
    3. ' ' → logprob: -5.138533115386963
    4. ' =
' → logprob: -11.388533592224121
    5. '  ' → logprob: -11.888533592224121
    6. '_' → logprob: -12.638533592224121
    7. ' ,' → logprob: -12.638533592224121
    8. '32' → logprob: -12.763533592224121
    9. ',' → logprob: -12.763533592224121
    10. ' =)' → logprob: -13.388533592224121

Token 132: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.00488694291561842
    2. '10' → logprob: -5.379887104034424
    3. '100' → logprob: -8.254886627197266
    4. '1' → logprob: -12.379886627197266
    5. ' 
' → logprob: -14.254886627197266
    6. ' ' → logprob: -14.379886627197266
    7. '998' → logprob: -15.004886627197266
    8. '999' → logprob: -15.129886627197266
    9. ' (' → logprob: -16.004886627197266
    10. ' int' → logprob: -16.004886627197266

Token 133: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.10033876448869705
    2. '100' → logprob: -2.3503386974334717
    3. '998' → logprob: -9.60033893585205
    4. '1' → logprob: -9.97533893585205
    5. ' ' → logprob: -10.97533893585205
    6. 'int' → logprob: -14.35033893585205
    7. '(' → logprob: -16.225337982177734
    8. '999' → logprob: -16.600337982177734
    9. '```' → logprob: -16.975337982177734
    10. '123' → logprob: -17.850337982177734

Token 134: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.5240315198898315
    2. '9' → logprob: -1.2740315198898315
    3. '000' → logprob: -2.399031639099121
    4. '09' → logprob: -3.524031639099121
    5. ' ' → logprob: -5.899031639099121
    6. '00' → logprob: -6.024031639099121
    7. '0' → logprob: -6.524031639099121
    8. ' **' → logprob: -7.024031639099121
    9. '009' → logprob: -8.774031639099121
    10. '7' → logprob: -9.274031639099121

Token 135: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: 0.0
    2. '09' → logprob: -17.0
    3. '９' → logprob: -20.875
    4. '```' → logprob: -21.0
    5. ' ' → logprob: -21.375
    6. '+' → logprob: -22.0
    7. '10' → logprob: -23.25
    8. '19' → logprob: -23.375
    9. '18' → logprob: -23.375
    10. '
' → logprob: -24.0

Token 136: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: 0.0
    2. '09' → logprob: -20.25
    3. ' ' → logprob: -20.625
    4. '```' → logprob: -20.875
    5. '９' → logprob: -21.5
    6. '
' → logprob: -22.5
    7. '18' → logprob: -23.75
    8. '10' → logprob: -24.125
    9. '   ' → logprob: -24.5
    10. '

' → logprob: -24.625

Token 137: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.006743792910128832
    2. ' +' → logprob: -5.006743907928467
    3. '7' → logprob: -10.506743431091309
    4. ' plus' → logprob: -14.756743431091309
    5. '+
' → logprob: -15.631743431091309
    6. ' ' → logprob: -15.881743431091309
    7. ' ' → logprob: -16.006744384765625
    8. '＋' → logprob: -16.006744384765625
    9. 'plus' → logprob: -16.756744384765625
    10. '```' → logprob: -17.381744384765625

Token 138: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. '+' → logprob: -17.875
    3. '```' → logprob: -19.5
    4. ' ' → logprob: -20.0
    5. '   ' → logprob: -20.625
    6. '07' → logprob: -20.625
    7. '

' → logprob: -21.25
    8. '７' → logprob: -21.375
    9. '  ' → logprob: -21.75
    10. '
' → logprob: -22.0

Token 139: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. '+' → logprob: -19.375
    3. ' ' → logprob: -20.0
    4. '７' → logprob: -20.375
    5. '```' → logprob: -20.5
    6. '07' → logprob: -21.5
    7. '' → logprob: -22.0
    8. '

' → logprob: -22.125
    9. '۷' → logprob: -22.125
    10. '٧' → logprob: -22.5

Token 140: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.44398927688598633
    2. 'def' → logprob: -1.3189892768859863
    3. '

' → logprob: -3.0689892768859863
    4. '#' → logprob: -3.8189892768859863
    5. '<|end|>' → logprob: -3.9439892768859863
    6. '' → logprob: -6.943989276885986
    7. '<|end|>' → logprob: -7.193989276885986
    8. '
' → logprob: -7.693989276885986
    9. '\n' → logprob: -8.318988800048828
    10. '```' → logprob: -8.943988800048828

Token 141: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.004054413642734289
    2. 'class' → logprob: -5.629054546356201
    3. '#' → logprob: -8.004054069519043
    4. 'd' → logprob: -9.879054069519043
    5. '
' → logprob: -10.754054069519043
    6. '\' → logprob: -11.004054069519043
    7. 'de' → logprob: -11.879054069519043
    8. 'ndef' → logprob: -12.004054069519043
    9. 'deque' → logprob: -12.629054069519043
    10. 'n' → logprob: -12.629054069519043

Token 142: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.6269774436950684
    2. ' solve' → logprob: -1.3769774436950684
    3. ' ' → logprob: -2.1269774436950684
    4. ' factorial' → logprob: -3.2519774436950684
    5. ' calculate' → logprob: -4.376977443695068
    6. ' _' → logprob: -4.376977443695068
    7. ' compute' → logprob: -4.626977443695068
    8. '_' → logprob: -4.751977443695068
    9. ' binary' → logprob: -6.251977443695068
    10. ' factor' → logprob: -7.001977443695068

Token 143: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -6.098748053773306e-05
    2. ' ():' → logprob: -9.75006103515625
    3. '()' → logprob: -13.62506103515625
    4. '():
' → logprob: -14.00006103515625
    5. '(:' → logprob: -15.00006103515625
    6. '(' → logprob: -16.00006103515625
    7. '(":' → logprob: -16.37506103515625
    8. ':' → logprob: -17.25006103515625
    9. '(':' → logprob: -18.50006103515625
    10. '():
' → logprob: -19.87506103515625

Token 144: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007542973384261131
    2. '(' → logprob: -6.007543087005615
    3. '    ' → logprob: -6.132543087005615
    4. ':' → logprob: -6.632543087005615
    5. '    
' → logprob: -7.007543087005615
    6. '[' → logprob: -9.132542610168457
    7. '
' → logprob: -9.632542610168457
    8. '<|end|>' → logprob: -9.632542610168457
    9. 'n' → logprob: -10.132542610168457
    10. ')' → logprob: -10.132542610168457

Token 145: ' val' (ID: 1459)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.019943760707974434
    2. 'n' → logprob: -5.269943714141846
    3. '    ' → logprob: -5.269943714141846
    4. ' n' → logprob: -5.394943714141846
    5. ' 
' → logprob: -6.644943714141846
    6. '   ' → logprob: -6.894943714141846
    7. ' i' → logprob: -8.019944190979004
    8. 'a' → logprob: -8.144944190979004
    9. '     
' → logprob: -8.144944190979004
    10. ' a' → logprob: -8.519944190979004

Token 146: '_x' (ID: 7054)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3193129897117615
    2. '=' → logprob: -1.8193130493164062
    3. '_' → logprob: -2.3193130493164062
    4. ' ' → logprob: -4.694313049316406
    5. 's' → logprob: -6.319313049316406
    6. '   ' → logprob: -7.444313049316406
    7. ',' → logprob: -7.819313049316406
    8. '  ' → logprob: -8.569313049316406
    9. 'u' → logprob: -8.944313049316406
    10. '[' → logprob: -9.069313049316406

Token 147: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04897724464535713
    2. '=' → logprob: -3.5489771366119385
    3. ',' → logprob: -4.048977375030518
    4. ' ,' → logprob: -6.798977375030518
    5. ' ' → logprob: -7.923977375030518
    6. '   ' → logprob: -9.54897689819336
    7. '  ' → logprob: -11.29897689819336
    8. '=int' → logprob: -11.29897689819336
    9. '_' → logprob: -11.67397689819336
    10. ',y' → logprob: -12.92397689819336

Token 148: ' val' (ID: 1459)
  Prédit: ' val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.07896403968334198
    2. 'val' → logprob: -2.5789639949798584
    3. '_val' → logprob: -10.453964233398438
    4. ' ' → logprob: -10.703964233398438
    5. '	val' → logprob: -11.953964233398438
    6. '_' → logprob: -12.328964233398438
    7. ' ' → logprob: -13.078964233398438
    8. '  ' → logprob: -13.453964233398438
    9. ' _' → logprob: -13.453964233398438
    10. ',val' → logprob: -13.453964233398438

Token 149: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -0.00017112065688706934
    2. 'y' → logprob: -9.375170707702637
    3. '_' → logprob: -9.750170707702637
    4. '_val' → logprob: -11.375170707702637
    5. '_x' → logprob: -11.625170707702637
    6. ',' → logprob: -13.500170707702637
    7. '_a' → logprob: -14.000170707702637
    8. '_z' → logprob: -14.375170707702637
    9. '_,' → logprob: -14.750170707702637
    10. '_t' → logprob: -15.125170707702637

Token 150: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.23080231249332428
    2. '=' → logprob: -1.605802297592163
    3. ',' → logprob: -5.230802536010742
    4. ')' → logprob: -11.605802536010742
    5. ' ' → logprob: -12.105802536010742
    6. ' ,' → logprob: -12.230802536010742
    7. '<|end|>' → logprob: -12.605802536010742
    8. ' =)' → logprob: -14.730802536010742
    9. ')=' → logprob: -14.855802536010742
    10. '<|end|>' → logprob: -15.480802536010742

Token 151: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.04669671878218651
    2. 'input' → logprob: -3.171696662902832
    3. ' map' → logprob: -5.671696662902832
    4. ' ' → logprob: -9.171696662902832
    5. 'map' → logprob: -9.296696662902832
    6. ' list' → logprob: -10.546696662902832
    7. '0' → logprob: -12.171696662902832
    8. 'list' → logprob: -12.796696662902832
    9. ' ' → logprob: -13.171696662902832
    10. '	input' → logprob: -13.484196662902832

Token 152: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -0.0013589247828349471
    2. '_' → logprob: -7.126358985900879
    3. '_list' → logprob: -8.126358985900879
    4. '_int' → logprob: -8.501358985900879
    5. '_str' → logprob: -10.001358985900879
    6. '()' → logprob: -11.751358985900879
    7. '_line' → logprob: -13.876358985900879
    8. '_tuple' → logprob: -15.251358985900879
    9. '_float' → logprob: -15.251358985900879
    10. '_Map' → logprob: -15.501358985900879

Token 153: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.0802738870552275e-05
    2. '(' → logprob: -11.87501049041748
    3. '()
' → logprob: -12.75001049041748
    4. '(),' → logprob: -15.62501049041748
    5. '()]' → logprob: -15.62501049041748
    6. ' ()' → logprob: -15.75001049041748
    7. '();' → logprob: -15.75001049041748
    8. '()

' → logprob: -16.125011444091797
    9. '()`' → logprob: -16.125011444091797
    10. '()"' → logprob: -17.000011444091797

Token 154: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3075644075870514
    2. '
' → logprob: -1.807564377784729
    3. '    
' → logprob: -2.8075644969940186
    4. '<|end|>' → logprob: -3.6825644969940186
    5. ')' → logprob: -4.6825642585754395
    6. ' 
' → logprob: -6.3075642585754395
    7. '  
' → logprob: -6.5575642585754395
    8. '\n' → logprob: -7.5575642585754395
    9. ' ' → logprob: -7.6825642585754395
    10. '<|end|>' → logprob: -7.8075642585754395

Token 155: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.4841257333755493
    2. 'result' → logprob: -2.2341256141662598
    3. 'dp' → logprob: -2.9841256141662598
    4. 'g' → logprob: -2.9841256141662598
    5. 'res' → logprob: -3.2341256141662598
    6. 'ans' → logprob: -3.6091256141662598
    7. 'dist' → logprob: -3.9841256141662598
    8. 'diff' → logprob: -4.10912561416626
    9. 'val' → logprob: -4.48412561416626
    10. 'distance' → logprob: -4.73412561416626

Token 156: ' (' (ID: 350)
  Prédit: ' val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.007462515961378813
    2. ' ' → logprob: -5.007462501525879
    3. 'val' → logprob: -7.507462501525879
    4. ' (' → logprob: -9.632462501525879
    5. ' not' → logprob: -10.007462501525879
    6. '  ' → logprob: -10.382462501525879
    7. ' abs' → logprob: -10.382462501525879
    8. ' ' → logprob: -11.757462501525879
    9. '_val' → logprob: -12.507462501525879
    10. '   ' → logprob: -12.632462501525879

Token 157: 'val' (ID: 1105)
  Prédit: ' val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.38956740498542786
    2. 'val' → logprob: -1.1395673751831055
    3. ' abs' → logprob: -6.6395673751831055
    4. 'abs' → logprob: -6.8895673751831055
    5. '   ' → logprob: -8.389567375183105
    6. '(val' → logprob: -10.014567375183105
    7. ' (' → logprob: -10.514567375183105
    8. ' math' → logprob: -11.139567375183105
    9. '    ' → logprob: -11.264567375183105
    10. 'math' → logprob: -11.514567375183105

Token 158: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.001686962554231286
    2. '_' → logprob: -6.626687049865723
    3. '_y' → logprob: -8.501687049865723
    4. ' _' → logprob: -9.251687049865723
    5. '_
' → logprob: -11.251687049865723
    6. 'x' → logprob: -11.376687049865723
    7. ')' → logprob: -12.001687049865723
    8. '   ' → logprob: -12.126687049865723
    9. ')_' → logprob: -12.126687049865723
    10. '_)' → logprob: -12.251687049865723

Token 159: ' +' (ID: 659)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.6718856692314148
    2. ' >' → logprob: -1.2968857288360596
    3. ' +' → logprob: -2.0468857288360596
    4. ',' → logprob: -4.1718854904174805
    5. '==' → logprob: -4.1718854904174805
    6. ' <' → logprob: -4.5468854904174805
    7. '**' → logprob: -4.6718854904174805
    8. ' >=' → logprob: -4.9218854904174805
    9. '+' → logprob: -5.0468854904174805
    10. ' ' → logprob: -5.4218854904174805

Token 160: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.2823438048362732
    2. ' val' → logprob: -1.407343864440918
    3. '1' → logprob: -7.657343864440918
    4. '2' → logprob: -7.782343864440918
    5. ' ' → logprob: -8.657343864440918
    6. '   ' → logprob: -10.782343864440918
    7. '3' → logprob: -11.032343864440918
    8. '  ' → logprob: -11.407343864440918
    9. '10' → logprob: -11.907343864440918
    10. ')' → logprob: -11.907343864440918

Token 161: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -0.00016098834748845547
    2. 'y' → logprob: -9.000161170959473
    3. '_' → logprob: -11.125161170959473
    4. '_x' → logprob: -11.375161170959473
    5. ')' → logprob: -12.875161170959473
    6. '_val' → logprob: -12.875161170959473
    7. '_
' → logprob: -13.625161170959473
    8. 'val' → logprob: -13.750161170959473
    9. '
' → logprob: -14.250161170959473
    10. '_)' → logprob: -14.937661170959473

Token 162: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008232106338255107
    2. ')%' → logprob: -7.875823020935059
    3. ' )' → logprob: -8.500823020935059
    4. '>' → logprob: -9.250823020935059
    5. '==' → logprob: -9.875823020935059
    6. '>=' → logprob: -10.750823020935059
    7. ')>=' → logprob: -11.375823020935059
    8. ')==' → logprob: -11.500823020935059
    9. ')>' → logprob: -11.625823020935059
    10. '%' → logprob: -11.875823020935059

Token 163: ' %' (ID: 1851)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1613839715719223
    2. ' %' → logprob: -2.411383867263794
    3. '%' → logprob: -3.161383867263794
    4. ')%' → logprob: -5.786384105682373
    5. ' ==' → logprob: -5.911384105682373
    6. ' )' → logprob: -5.911384105682373
    7. ' <' → logprob: -5.911384105682373
    8. '==' → logprob: -6.411384105682373
    9. '>' → logprob: -7.036384105682373
    10. ' ' → logprob: -7.161384105682373

Token 164: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.056743476539850235
    2. '3' → logprob: -3.1817433834075928
    3. ' ' → logprob: -4.306743621826172
    4. '4' → logprob: -8.806743621826172
    5. '   ' → logprob: -11.681743621826172
    6. '  ' → logprob: -11.931743621826172
    7. '
' → logprob: -13.619243621826172
    8. '6' → logprob: -14.556743621826172
    9. '{' → logprob: -14.619243621826172
    10. '7' → logprob: -14.931743621826172

Token 165: '3' (ID: 18)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.14569464325904846
    2. '3' → logprob: -2.0206947326660156
    3. ' ' → logprob: -5.895694732666016
    4. '4' → logprob: -8.395694732666016
    5. '  ' → logprob: -11.270694732666016
    6. '{' → logprob: -11.645694732666016
    7. '10' → logprob: -12.520694732666016
    8. '   ' → logprob: -12.770694732666016
    9. '(' → logprob: -13.833194732666016
    10. '5' → logprob: -14.020694732666016

Token 166: ' ==' (ID: 951)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.07715901732444763
    2. '!=' → logprob: -3.2021589279174805
    3. ' ==' → logprob: -3.5771589279174805
    4. '==' → logprob: -5.2021589279174805
    5. ' ' → logprob: -9.32715892791748
    6. '=' → logprob: -11.82715892791748
    7. ' ' → logprob: -12.32715892791748
    8. ')' → logprob: -12.45215892791748
    9. ':' → logprob: -12.57715892791748
    10. ' =' → logprob: -13.07715892791748

Token 167: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.47443127632141113
    2. ' ' → logprob: -0.9744312763214111
    3. '1' → logprob: -8.099431037902832
    4. '2' → logprob: -9.974431037902832
    5. ' ' → logprob: -14.411931037902832
    6. '!=' → logprob: -14.599431037902832
    7. '```' → logprob: -14.911931037902832
    8. '  ' → logprob: -15.036931037902832
    9. '   ' → logprob: -15.099431037902832
    10. ' !=' → logprob: -15.349431037902832

Token 168: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002591469557955861
    2. ' ' → logprob: -6.252591609954834
    3. '1' → logprob: -7.752591609954834
    4. '2' → logprob: -8.377591133117676
    5. '   ' → logprob: -14.627591133117676
    6. '```' → logprob: -14.752591133117676
    7. '  ' → logprob: -15.627591133117676
    8. '(' → logprob: -15.752591133117676
    9. 'not' → logprob: -15.815091133117676
    10. 's' → logprob: -16.565092086791992

Token 169: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.2837718725204468
    2. ':' → logprob: -1.4087718725204468
    3. 'and' → logprob: -6.283771991729736
    4. ':
' → logprob: -8.033771514892578
    5. '   ' → logprob: -8.033771514892578
    6. ' :' → logprob: -9.408771514892578
    7. '    ' → logprob: -12.408771514892578
    8. ',' → logprob: -12.533771514892578
    9. '       ' → logprob: -12.533771514892578
    10. ' or' → logprob: -12.908771514892578

Token 170: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13760066032409668
    2. ' and' → logprob: -2.1376006603240967
    3. '    ' → logprob: -5.137600898742676
    4. '   ' → logprob: -5.637600898742676
    5. ',' → logprob: -7.762600898742676
    6. 'and' → logprob: -8.512600898742676
    7. ':' → logprob: -8.762600898742676
    8. '<|end|>' → logprob: -9.387600898742676
    9. ' (' → logprob: -10.262600898742676
    10. ' &&' → logprob: -10.387600898742676

Token 171: ' pass' (ID: 1853)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20916293561458588
    2. '    ' → logprob: -1.959162950515747
    3. ' if' → logprob: -4.334162712097168
    4. '        ' → logprob: -4.459162712097168
    5. '   ' → logprob: -4.709162712097168
    6. ' ' → logprob: -4.834162712097168
    7. '        
' → logprob: -6.459162712097168
    8. '     ' → logprob: -7.334162712097168
    9. ' 
' → logprob: -7.709162712097168
    10. '    
' → logprob: -7.834162712097168

Token 172: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 173: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05797784402966499
    2. '<|end|>' → logprob: -3.6829779148101807
    3. '    
' → logprob: -4.932977676391602
    4. ' else' → logprob: -5.182977676391602
    5. '
' → logprob: -5.182977676391602
    6. '       ' → logprob: -5.307977676391602
    7. '    ' → logprob: -6.057977676391602
    8. ' ' → logprob: -6.432977676391602
    9. '  ' → logprob: -7.557977676391602
    10. ':' → logprob: -7.682977676391602

Token 174: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.40745809674263
    2. '    ' → logprob: -2.1574580669403076
    3. '       ' → logprob: -2.7824580669403076
    4. '<|end|>' → logprob: -2.7824580669403076
    5. '    
' → logprob: -3.1574580669403076
    6. '
' → logprob: -4.157458305358887
    7. ':' → logprob: -4.657458305358887
    8. ' ' → logprob: -4.782458305358887
    9. ' else' → logprob: -5.907458305358887
    10. '<|end|>' → logprob: -6.157458305358887

Token 175: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0032134840730577707
    2. ':
' → logprob: -5.878213405609131
    3. '       ' → logprob: -7.878213405609131
    4. '   ' → logprob: -10.753213882446289
    5. ':return' → logprob: -12.128213882446289
    6. ',' → logprob: -13.878213882446289
    7. ' :' → logprob: -14.128213882446289
    8. '    ' → logprob: -15.003213882446289
    9. ':\' → logprob: -15.378213882446289
    10. ' :
' → logprob: -15.628213882446289

Token 176: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.7835754988482222e-05
    2. '
' → logprob: -11.875018119812012
    3. ' return' → logprob: -12.250018119812012
    4. '   ' → logprob: -12.750018119812012
    5. 'return' → logprob: -14.000018119812012
    6. '        
' → logprob: -14.500018119812012
    7. '    
' → logprob: -14.750018119812012
    8. '\n' → logprob: -15.250018119812012
    9. '           ' → logprob: -15.625018119812012
    10. 'print' → logprob: -15.750018119812012

Token 177: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1550181359052658
    2. '       ' → logprob: -2.4050180912017822
    3. ' print' → logprob: -3.2800180912017822
    4. 'print' (adapté à ' print') → logprob: -4.280018329620361
    5. ' return' → logprob: -6.780018329620361
    6. 'return' → logprob: -7.405018329620361
    7. '    ' → logprob: -9.405017852783203
    8. '	print' → logprob: -10.905017852783203
    9. '    
' → logprob: -11.530017852783203
    10. '   ' → logprob: -12.905017852783203

Token 178: '(' (ID: 7)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.14397630095481873
    2. '(' → logprob: -2.0189762115478516
    3. '('' → logprob: -6.768976211547852
    4. '(
' → logprob: -9.268976211547852
    5. ' ("' → logprob: -10.768976211547852
    6. '(-' → logprob: -11.268976211547852
    7. ' (' → logprob: -11.893976211547852
    8. '(False' → logprob: -12.143976211547852
    9. '   ' → logprob: -13.143976211547852
    10. '(

' → logprob: -13.143976211547852

Token 179: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7316906452178955
    2. '"' → logprob: -0.9816906452178955
    3. '"No' → logprob: -1.9816906452178955
    4. ''' → logprob: -5.481690406799316
    5. 'No' → logprob: -6.481690406799316
    6. 'NO' → logprob: -7.981690406799316
    7. '-' → logprob: -9.481690406799316
    8. ' ' → logprob: -9.856690406799316
    9. '"N' → logprob: -10.106690406799316
    10. '“No' → logprob: -10.106690406799316

Token 180: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10039526224136353
    2. ')
' → logprob: -2.3503952026367188
    3. ')return' → logprob: -9.225395202636719
    4. '   ' → logprob: -9.975395202636719
    5. ' )' → logprob: -10.975395202636719
    6. '       ' → logprob: -11.350395202636719
    7. ')
' → logprob: -12.225395202636719
    8. '
' → logprob: -12.225395202636719
    9. ' )
' → logprob: -13.225395202636719
    10. ')

' → logprob: -14.725395202636719

Token 181: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10880299657583237
    2. '
' → logprob: -2.7338030338287354
    3. '   ' → logprob: -3.3588030338287354
    4. '    
' → logprob: -6.358802795410156
    5. '<|end|>' → logprob: -6.983802795410156
    6. '        
' → logprob: -7.733802795410156
    7. '\n' → logprob: -9.858802795410156
    8. '  
' → logprob: -9.858802795410156
    9. '    ' → logprob: -11.233802795410156
    10. '' → logprob: -11.358802795410156

Token 182: ' sys' (ID: 12228)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.39531150460243225
    2. '       ' → logprob: -1.1453114748001099
    3. '   ' → logprob: -5.14531135559082
    4. ' return' → logprob: -6.02031135559082
    5. '
' → logprob: -9.02031135559082
    6. '	return' → logprob: -10.64531135559082
    7. ' ' → logprob: -13.27031135559082
    8. '```' → logprob: -13.89531135559082
    9. ':return' → logprob: -15.02031135559082
    10. '           ' → logprob: -15.14531135559082

Token 183: '.exit' (ID: 27076)
  Prédit: '.exit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.exit' → logprob: -4.143808109802194e-05
    2. 'exit' → logprob: -10.625041007995605
    3. '.stdout' → logprob: -11.750041007995605
    4. '.' → logprob: -12.000041007995605
    5. '	exit' → logprob: -14.250041007995605
    6. '.return' → logprob: -14.375041007995605
    7. 'return' → logprob: -14.500041007995605
    8. '.quit' → logprob: -14.625041007995605
    9. '.stderr' → logprob: -14.875041007995605
    10. '.EXIT' → logprob: -15.875041007995605

Token 184: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.1269645392894745
    2. '(' → logprob: -2.126964569091797
    3. '()
' → logprob: -10.876964569091797
    4. '0' → logprob: -12.251964569091797
    5. ' ()' → logprob: -12.251964569091797
    6. '()(' → logprob: -12.626964569091797
    7. '()`' → logprob: -13.251964569091797
    8. '()\' → logprob: -14.126964569091797
    9. '();' → logprob: -15.126964569091797
    10. '().' → logprob: -15.126964569091797

Token 185: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014917649328708649
    2. '    
' → logprob: -4.764917850494385
    3. '
' → logprob: -5.764917850494385
    4. '<|end|>' → logprob: -5.889917850494385
    5. '    ' → logprob: -8.889917373657227
    6. '        
' → logprob: -10.014917373657227
    7. '<|end|>' → logprob: -10.014917373657227
    8. '       ' → logprob: -10.764917373657227
    9. '  
' → logprob: -10.764917373657227
    10. '    
    
' → logprob: -11.139917373657227

Token 186: ' step' (ID: 5983)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04645651951432228
    2. '    
' → logprob: -3.4214565753936768
    3. '  
' → logprob: -6.171456336975098
    4. '    ' → logprob: -6.296456336975098
    5. ' 
' → logprob: -6.546456336975098
    6. '
' → logprob: -6.796456336975098
    7. '   
' → logprob: -6.921456336975098
    8. 'n' → logprob: -6.921456336975098
    9. 'v' → logprob: -7.546456336975098
    10. '  ' → logprob: -7.671456336975098

Token 187: '_cnt' (ID: 35412)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3080728054046631
    2. '_x' → logprob: -1.433072805404663
    3. '1' → logprob: -4.558073043823242
    4. '_count' → logprob: -4.683073043823242
    5. '_sum' → logprob: -5.933073043823242
    6. ' =' → logprob: -6.683073043823242
    7. '_a' → logprob: -7.308073043823242
    8. '_' → logprob: -7.808073043823242
    9. '_max' → logprob: -8.058073043823242
    10. '_total' → logprob: -8.433073043823242

Token 188: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0010580566013231874
    2. '=' → logprob: -6.876058101654053
    3. 's' → logprob: -11.001057624816895
    4. '_x' → logprob: -13.001057624816895
    5. '1' → logprob: -13.251057624816895
    6. ' ' → logprob: -13.501057624816895
    7. '_' → logprob: -13.501057624816895
    8. 'x' → logprob: -14.751057624816895
    9. ',' → logprob: -15.251057624816895
    10. '  ' → logprob: -15.501057624816895

Token 189: ' (' (ID: 350)
  Prédit: '(val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(val' → logprob: -0.25303134322166443
    2. ' (' → logprob: -1.5030313730239868
    3. '   ' → logprob: -7.003031253814697
    4. '(int' → logprob: -9.003031730651855
    5. '(vals' → logprob: -11.253031730651855
    6. '(var' → logprob: -11.503031730651855
    7. '(' → logprob: -11.503031730651855
    8. '(const' → logprob: -12.003031730651855
    9. '(max' → logprob: -12.003031730651855
    10. ' ' → logprob: -12.128031730651855

Token 190: 'val' (ID: 1105)
  Prédit: 'val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.01281016506254673
    2. ' val' → logprob: -4.387810230255127
    3. '(val' → logprob: -8.137809753417969
    4. ' (' → logprob: -13.137809753417969
    5. '   ' → logprob: -13.387809753417969
    6. '	val' → logprob: -13.387809753417969
    7. '[val' → logprob: -13.387809753417969
    8. ' ' → logprob: -14.012809753417969
    9. '(' → logprob: -15.012809753417969
    10. '_val' → logprob: -15.512809753417969

Token 191: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -3.054500666621607e-06
    2. 'x' → logprob: -13.00000286102295
    3. '_y' → logprob: -14.87500286102295
    4. '_' → logprob: -15.12500286102295
    5. '_
' → logprob: -16.500003814697266
    6. '```' → logprob: -18.375003814697266
    7. '
' → logprob: -18.625003814697266
    8. '__' → logprob: -18.875003814697266
    9. '   ' → logprob: -19.187503814697266
    10. '[' → logprob: -19.187503814697266

Token 192: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.47408443689346313
    2. '+' → logprob: -0.9740844368934631
    3. ' plus' → logprob: -12.599084854125977
    4. ' ' → logprob: -13.099084854125977
    5. '＋' → logprob: -14.599084854125977
    6. 'plus' → logprob: -14.599084854125977
    7. '_plus' → logprob: -15.474084854125977
    8. '+
' → logprob: -15.724084854125977
    9. ' +
' → logprob: -15.849084854125977
    10. 'val' → logprob: -15.974084854125977

Token 193: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.033647891134023666
    2. ' val' → logprob: -3.4086477756500244
    3. ' ' → logprob: -14.158647537231445
    4. '_val' → logprob: -14.158647537231445
    5. '   ' → logprob: -15.783647537231445
    6. '	val' → logprob: -15.908647537231445
    7. '2' → logprob: -16.033647537231445
    8. '[val' → logprob: -16.533647537231445
    9. '  ' → logprob: -16.908647537231445
    10. '.val' → logprob: -17.283647537231445

Token 194: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -1.5451681974809617e-05
    2. 'y' → logprob: -11.125015258789062
    3. 'val' → logprob: -14.625015258789062
    4. '_' → logprob: -16.375015258789062
    5. '_val' → logprob: -16.375015258789062
    6. '_x' → logprob: -17.250015258789062
    7. '```' → logprob: -19.000015258789062
    8. '_
' → logprob: -19.375015258789062
    9. ')' → logprob: -19.500015258789062
    10. '   ' → logprob: -20.000015258789062

Token 195: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001354824344161898
    2. ')//' → logprob: -9.12513542175293
    3. ' )' → logprob: -11.00013542175293
    4. '//' → logprob: -12.12513542175293
    5. '#' → logprob: -12.87513542175293
    6. '   ' → logprob: -14.00013542175293
    7. ' //' → logprob: -14.62513542175293
    8. ' ' → logprob: -16.12513542175293
    9. ' ' → logprob: -16.50013542175293
    10. '）' → logprob: -16.50013542175293

Token 196: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.6357500553131104
    2. '//' → logprob: -0.7607500553131104
    3. '#' → logprob: -6.135749816894531
    4. ' ' → logprob: -8.135749816894531
    5. '
' → logprob: -8.260749816894531
    6. ')' → logprob: -8.385749816894531
    7. '   ' → logprob: -9.260749816894531
    8. ' ' → logprob: -10.260749816894531
    9. ' #' → logprob: -10.885749816894531
    10. '```' → logprob: -11.260749816894531

Token 197: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.00012439649435691535
    2. ' ' → logprob: -9.000123977661133
    3. '   ' → logprob: -14.125123977661133
    4. '  ' → logprob: -16.625123977661133
    5. '۳' → logprob: -16.937623977661133
    6. '```' → logprob: -17.187623977661133
    7. '৩' → logprob: -17.500123977661133
    8. '３' → logprob: -18.125123977661133
    9. '
' → logprob: -18.500123977661133
    10. '३' → logprob: -18.562623977661133

Token 198: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -2.2200749754119897e-06
    2. ' ' → logprob: -13.125001907348633
    3. '   ' → logprob: -16.750001907348633
    4. '۳' → logprob: -17.750001907348633
    5. '৩' → logprob: -18.375001907348633
    6. '```' → logprob: -19.250001907348633
    7. '
' → logprob: -19.312501907348633
    8. '  ' → logprob: -19.375001907348633
    9. '३' → logprob: -19.437501907348633
    10. '３' → logprob: -19.437501907348633

Token 199: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.107176274061203
    2. '
' → logprob: -2.3571763038635254
    3. '    
' → logprob: -5.232176303863525
    4. '<|end|>' → logprob: -7.107176303863525
    5. 'def' → logprob: -7.857176303863525
    6. 'if' → logprob: -8.732175827026367
    7. ' if' → logprob: -9.607175827026367
    8. '<|end|>' → logprob: -10.232175827026367
    9. '

' → logprob: -10.732175827026367
    10. '
' → logprob: -11.107175827026367

Token 200: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0002467966405674815
    2. 'if' → logprob: -9.25024700164795
    3. '
' → logprob: -9.37524700164795
    4. '    
' → logprob: -10.25024700164795
    5. '<|end|>' → logprob: -10.87524700164795
    6. 'def' → logprob: -12.50024700164795
    7. ' if' → logprob: -12.62524700164795
    8. '    ' → logprob: -13.12524700164795
    9. '<|end|>' → logprob: -15.00024700164795
    10. '#' → logprob: -15.12524700164795

Token 201: ' val' (ID: 1459)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.02034064382314682
    2. '#' → logprob: -5.645340442657471
    3. '   ' → logprob: -5.645340442657471
    4. 'def' → logprob: -5.770340442657471
    5. 'dp' → logprob: -5.770340442657471
    6. 'x' → logprob: -5.895340442657471
    7. 'max' → logprob: -7.395340442657471
    8. 'a' → logprob: -7.395340442657471
    9. 'min' → logprob: -7.520340442657471
    10. 'step' → logprob: -7.645340442657471

Token 202: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.006830694619566202
    2. '_' → logprob: -5.00683069229126
    3. 'x' → logprob: -9.131831169128418
    4. '_y' → logprob: -13.506831169128418
    5. '_=' → logprob: -13.756831169128418
    6. '_
' → logprob: -14.131831169128418
    7. '_,' → logprob: -14.756831169128418
    8. '_s' → logprob: -14.756831169128418
    9. '_step' → logprob: -14.881831169128418
    10. '_a' → logprob: -15.006831169128418

Token 203: ' -=' (ID: 12583)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09642621129751205
    2. ' -=' → logprob: -3.721426248550415
    3. ' ,' → logprob: -4.221426010131836
    4. '=' → logprob: -4.221426010131836
    5. ' >=' → logprob: -4.596426010131836
    6. ' =' → logprob: -5.096426010131836
    7. '_remaining' → logprob: -5.471426010131836
    8. '_' → logprob: -5.721426010131836
    9. '-=' → logprob: -5.721426010131836
    10. '>=' → logprob: -5.846426010131836

Token 204: ' step' (ID: 5983)
  Prédit: 'step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'step' → logprob: -0.10044302046298981
    2. ' step' → logprob: -2.350443124771118
    3. '2' → logprob: -8.600442886352539
    4. '	step' → logprob: -10.725442886352539
    5. ' ' → logprob: -11.475442886352539
    6. '1' → logprob: -11.600442886352539
    7. '(step' → logprob: -12.350442886352539
    8. 'tep' → logprob: -13.100442886352539
    9. '0' → logprob: -13.600442886352539
    10. '3' → logprob: -13.975442886352539

Token 205: '_cnt' (ID: 35412)
  Prédit: '_cnt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cnt' → logprob: -0.014167038723826408
    2. 'cnt' → logprob: -4.264166831970215
    3. 'Cnt' → logprob: -13.389166831970215
    4. '	cnt' → logprob: -13.889166831970215
    5. ' cnt' → logprob: -14.889166831970215
    6. '_c' → logprob: -15.889166831970215
    7. 'count' → logprob: -16.01416778564453
    8. 't' → logprob: -16.38916778564453
    9. '_ct' → logprob: -16.51416778564453
    10. '_' → logprob: -16.51416778564453

Token 206: '
' (ID: 198)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.41519519686698914
    2. '
' → logprob: -1.2901952266693115
    3. '   ' → logprob: -3.1651952266693115
    4. '<|end|>' → logprob: -4.165194988250732
    5. ' val' → logprob: -5.790194988250732
    6. 'if' → logprob: -5.915194988250732
    7. 'def' → logprob: -8.41519546508789
    8. '	val' → logprob: -8.54019546508789
    9. '    
' → logprob: -8.66519546508789
    10. '<|end|>' → logprob: -8.79019546508789

Token 207: '   ' (ID: 271)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.23000633716583252
    2. '   ' → logprob: -1.6050063371658325
    3. ' val' → logprob: -5.480006217956543
    4. '
' → logprob: -8.105006217956543
    5. '	val' → logprob: -10.105006217956543
    6. '<|end|>' → logprob: -10.855006217956543
    7. ',val' → logprob: -11.480006217956543
    8. '    
' → logprob: -11.605006217956543
    9. '-val' → logprob: -12.105006217956543
    10. '  ' → logprob: -12.105006217956543

Token 208: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' (adapté à ' val') → logprob: -0.0015925843035802245
    2. ' val' → logprob: -6.626592636108398
    3. '2' → logprob: -8.501592636108398
    4. 'step' → logprob: -9.751592636108398
    5. ' step' → logprob: -13.251592636108398
    6. ' ' → logprob: -13.626592636108398
    7. '   ' → logprob: -13.751592636108398
    8. '
' → logprob: -15.376592636108398
    9. '  ' → logprob: -15.501592636108398
    10. '	val' → logprob: -16.2515926361084

Token 209: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -1.0206720617134124e-05
    2. 'y' → logprob: -12.37501049041748
    3. '_x' → logprob: -12.50001049041748
    4. '_' → logprob: -13.75001049041748
    5. '_cnt' → logprob: -13.75001049041748
    6. 'cnt' → logprob: -18.000009536743164
    7. '_val' → logprob: -18.750009536743164
    8. ' _' → logprob: -19.125009536743164
    9. '_count' → logprob: -19.500009536743164
    10. '_c' → logprob: -20.000009536743164

Token 210: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.10174910724163055
    2. ' -=' → logprob: -2.3517491817474365
    3. '-' → logprob: -6.476748943328857
    4. '=' → logprob: -13.726749420166016
    5. ' -' → logprob: -14.476749420166016
    6. '   ' → logprob: -15.226749420166016
    7. ' ' → logprob: -15.601749420166016
    8. '    ' → logprob: -16.226749420166016
    9. '+=' → logprob: -16.351749420166016
    10. '  ' → logprob: -17.101749420166016

Token 211: ' step' (ID: 5983)
  Prédit: 'step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'step' → logprob: -0.18024836480617523
    2. ' step' → logprob: -1.8052483797073364
    3. '2' → logprob: -7.680248260498047
    4. ' ' → logprob: -10.305248260498047
    5. '	step' → logprob: -12.305248260498047
    6. '(step' → logprob: -13.430248260498047
    7. '_step' → logprob: -14.805248260498047
    8. 'Step' → logprob: -14.930248260498047
    9. 'tep' → logprob: -14.930248260498047
    10. '   ' → logprob: -15.430248260498047

Token 212: '_cnt' (ID: 35412)
  Prédit: '_cnt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cnt' → logprob: -0.0003357006062287837
    2. 'cnt' → logprob: -8.000335693359375
    3. 'Cnt' → logprob: -15.625335693359375
    4. '	cnt' → logprob: -17.125335693359375
    5. '_ct' → logprob: -17.375335693359375
    6. '_' → logprob: -18.000335693359375
    7. '_c' → logprob: -18.000335693359375
    8. '_cn' → logprob: -18.875335693359375
    9. ' cnt' → logprob: -19.000335693359375
    10. '_count' → logprob: -19.875335693359375

Token 213: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.010433733463287354
    2. '   ' → logprob: -5.135433673858643
    3. '<|end|>' → logprob: -6.510433673858643
    4. '    
' → logprob: -6.635433673858643
    5. '

' → logprob: -7.260433673858643
    6. '  
' → logprob: -7.885433673858643
    7. ' 
' → logprob: -8.0104341506958
    8. 'if' → logprob: -8.7604341506958
    9. ' if' → logprob: -10.3854341506958
    10. '
' → logprob: -10.6354341506958

Token 214: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023254329338669777
    2. 'if' → logprob: -3.77325439453125
    3. '    
' → logprob: -12.02325439453125
    4. ' if' → logprob: -13.02325439453125
    5. '
' → logprob: -14.52325439453125
    6. '```' → logprob: -17.02325439453125
    7. 'If' → logprob: -17.14825439453125
    8. '	if' → logprob: -17.27325439453125
    9. '  
' → logprob: -17.39825439453125
    10. 'def' → logprob: -18.02325439453125

Token 215: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.008625447750091553
    2. '   ' → logprob: -4.758625507354736
    3. ' if' → logprob: -11.508625030517578
    4. '```' → logprob: -14.883625030517578
    5. '    
' → logprob: -15.758625030517578
    6. 'def' → logprob: -17.008625030517578
    7. 'If' → logprob: -17.133625030517578
    8. '  ' → logprob: -17.258625030517578
    9. 'from' → logprob: -17.383625030517578
    10. '#' → logprob: -17.758625030517578

Token 216: ' val' (ID: 1459)
  Prédit: ' val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.04319808632135391
    2. 'val' → logprob: -3.1681981086730957
    3. ' min' → logprob: -9.293197631835938
    4. ' not' → logprob: -10.168197631835938
    5. '0' → logprob: -10.918197631835938
    6. ' ' → logprob: -11.168197631835938
    7. '(val' → logprob: -11.793197631835938
    8. 'v' → logprob: -11.918197631835938
    9. ' (' → logprob: -12.418197631835938
    10. ' va' → logprob: -12.668197631835938

Token 217: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -7.703443770878948e-06
    2. '_' → logprob: -12.000007629394531
    3. '_y' → logprob: -13.625007629394531
    4. 'x' → logprob: -15.000007629394531
    5. '_
' → logprob: -17.12500762939453
    6. '_<' → logprob: -18.50000762939453
    7. '_

' → logprob: -18.62500762939453
    8. '__' → logprob: -19.87500762939453
    9. '<' → logprob: -19.87500762939453
    10. '_
' → logprob: -20.75000762939453

Token 218: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.048698533326387405
    2. ' <' → logprob: -3.0486984252929688
    3. '>=' → logprob: -9.173698425292969
    4. ' >=' → logprob: -12.923698425292969
    5. ' ' → logprob: -13.173698425292969
    6. '()<' → logprob: -14.423698425292969
    7. '>' → logprob: -15.298698425292969
    8. '<class' → logprob: -15.423698425292969
    9. '<len' → logprob: -15.548698425292969
    10. '==' → logprob: -15.548698425292969

Token 219: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00018101456225849688
    2. ' ' → logprob: -8.625181198120117
    3. ' or' → logprob: -13.750181198120117
    4. '=' → logprob: -16.125181198120117
    5. 'or' → logprob: -16.625181198120117
    6. '۰' → logprob: -16.625181198120117
    7. '   ' → logprob: -17.562681198120117
    8. '０' → logprob: -17.812681198120117
    9. '```' → logprob: -18.062681198120117
    10. ' ' → logprob: -18.250181198120117

Token 220: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.000001907348633
    3. 'or' → logprob: -17.500001907348633
    4. '۰' → logprob: -17.500001907348633
    5. ' or' → logprob: -18.125001907348633
    6. '０' → logprob: -18.250001907348633
    7. '00' → logprob: -19.625001907348633
    8. '-' → logprob: -19.750001907348633
    9. '০' → logprob: -20.250001907348633
    10. '٠' → logprob: -20.375001907348633

Token 221: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.00976116769015789
    2. 'or' → logprob: -4.634761333465576
    3. ' ' → logprob: -12.509760856628418
    4. '   ' → logprob: -14.384760856628418
    5. '	or' → logprob: -14.384760856628418
    6. '0' → logprob: -16.509761810302734
    7. ' o' → logprob: -16.634761810302734
    8. 'o' → logprob: -16.884761810302734
    9. ':' → logprob: -17.884761810302734
    10. ' and' → logprob: -18.134761810302734

Token 222: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.0007105246186256409
    2. ' val' → logprob: -7.250710487365723
    3. '   ' → logprob: -14.875710487365723
    4. '           ' → logprob: -16.25071144104004
    5. '  ' → logprob: -17.12571144104004
    6. '       ' → logprob: -17.87571144104004
    7. '    ' → logprob: -18.12571144104004
    8. ' ' → logprob: -18.12571144104004
    9. '	val' → logprob: -18.12571144104004
    10. '_val' → logprob: -19.87571144104004

Token 223: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -3.292907877039397e-06
    2. 'y' → logprob: -12.75000286102295
    3. '_' → logprob: -15.75000286102295
    4. '_x' → logprob: -16.250003814697266
    5. '	y' → logprob: -20.000003814697266
    6. '```' → logprob: -20.875003814697266
    7. '>' → logprob: -21.125003814697266
    8. ' y' → logprob: -21.250003814697266
    9. '_val' → logprob: -21.375003814697266
    10. '__' → logprob: -21.500003814697266

Token 224: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.4287617802619934
    2. ' <' → logprob: -1.0537617206573486
    3. '<|end|>' → logprob: -9.92876148223877
    4. ' ' → logprob: -12.05376148223877
    5. ')<' → logprob: -13.30376148223877
    6. '()<' → logprob: -14.17876148223877
    7. ')' → logprob: -14.17876148223877
    8. '<class' → logprob: -14.42876148223877
    9. '<int' → logprob: -15.42876148223877
    10. ',' → logprob: -15.92876148223877

Token 225: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002615742268972099
    2. ' ' → logprob: -8.250261306762695
    3. '=' → logprob: -16.000261306762695
    4. '   ' → logprob: -18.000261306762695
    5. '```' → logprob: -18.312761306762695
    6. '1' → logprob: -18.437761306762695
    7. '۰' → logprob: -18.562761306762695
    8. '<|end|>' → logprob: -18.687761306762695
    9. ',' → logprob: -19.125261306762695
    10. '>' → logprob: -19.125261306762695

Token 226: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.13388703338569e-06
    2. ' ' → logprob: -11.625009536743164
    3. '<|end|>' → logprob: -16.500009536743164
    4. '۰' → logprob: -18.750009536743164
    5. '   ' → logprob: -19.875009536743164
    6. '```' → logprob: -20.250009536743164
    7. '1' → logprob: -20.375009536743164
    8. '<|end|>' → logprob: -20.562509536743164
    9. '  ' → logprob: -20.750009536743164
    10. 'def' → logprob: -20.875009536743164

Token 227: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03546857461333275
    2. ':
' → logprob: -3.410468578338623
    3. ' or' → logprob: -6.410468578338623
    4. '   ' → logprob: -8.910468101501465
    5. ':return' → logprob: -10.785468101501465
    6. '       ' → logprob: -11.160468101501465
    7. ' :' → logprob: -13.160468101501465
    8. 'or' → logprob: -13.285468101501465
    9. '):
' → logprob: -14.035468101501465
    10. ' :
' → logprob: -14.660468101501465

Token 228: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000726252153981477
    2. '   ' → logprob: -8.250726699829102
    3. ':' → logprob: -8.625726699829102
    4. ':
' → logprob: -8.625726699829102
    5. ' or' → logprob: -9.875726699829102
    6. '0' → logprob: -11.125726699829102
    7. '```' → logprob: -11.500726699829102
    8. 'print' → logprob: -11.875726699829102
    9. '
' → logprob: -12.250726699829102
    10. ',' → logprob: -12.500726699829102

Token 229: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.09531687200069427
    2. '       ' → logprob: -2.5953168869018555
    3. '   ' → logprob: -4.3453168869018555
    4. ' print' → logprob: -5.7203168869018555
    5. '```' → logprob: -10.220316886901855
    6. '``' → logprob: -12.095316886901855
    7. '	print' → logprob: -13.220316886901855
    8. ' ' → logprob: -13.720316886901855
    9. '
' → logprob: -14.720316886901855
    10. '0' → logprob: -14.845316886901855

Token 230: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -8.494741632603109e-05
    2. '0' → logprob: -9.37508487701416
    3. ' (' → logprob: -17.000085830688477
    4. '(
' → logprob: -17.750085830688477
    5. '```' → logprob: -19.625085830688477
    6. ' ' → logprob: -20.500085830688477
    7. '`' → logprob: -21.000085830688477
    8. '   ' → logprob: -21.500085830688477
    9. '()' → logprob: -22.125085830688477
    10. '('' → logprob: -22.250085830688477

Token 231: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.2664456789934775e-06
    2. '(' → logprob: -13.750000953674316
    3. ' ' → logprob: -16.375001907348633
    4. '   ' → logprob: -18.750001907348633
    5. '۰' → logprob: -20.875001907348633
    6. '
' → logprob: -21.250001907348633
    7. '```' → logprob: -21.500001907348633
    8. '０' → logprob: -21.625001907348633
    9. '       ' → logprob: -21.625001907348633
    10. '"' → logprob: -21.750001907348633

Token 232: ')
' (ID: 446)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1460127979516983
    2. ')
' → logprob: -2.521012783050537
    3. ')' → logprob: -2.896012783050537
    4. '   ' → logprob: -9.021013259887695
    5. '
' → logprob: -10.021013259887695
    6. ')return' → logprob: -10.021013259887695
    7. '<|end|>' → logprob: -11.771013259887695
    8. ')
' → logprob: -12.771013259887695
    9. ',' → logprob: -13.146013259887695
    10. '')
' → logprob: -13.896013259887695

Token 233: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -3.619311974034645e-05
    2. '   ' → logprob: -10.750036239624023
    3. 'return' → logprob: -11.625036239624023
    4. ' return' → logprob: -13.125036239624023
    5. ',' → logprob: -13.250036239624023
    6. '<|end|>' → logprob: -14.375036239624023
    7. '
' → logprob: -14.625036239624023
    8. 'import' → logprob: -15.000036239624023
    9. ')' → logprob: -15.375036239624023
    10. '```' → logprob: -15.500036239624023

Token 234: ' sys' (ID: 12228)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.36111170053482056
    2. '       ' → logprob: -1.3611116409301758
    3. ' return' → logprob: -3.236111640930176
    4. 'sys' (adapté à ' sys') → logprob: -5.236111640930176
    5. '
' → logprob: -7.111111640930176
    6. '   ' → logprob: -7.236111640930176
    7. ' sys' → logprob: -7.611111640930176
    8. '	return' → logprob: -10.736111640930176
    9. '	sys' → logprob: -11.861111640930176
    10. '
' → logprob: -11.986111640930176

Token 235: '.exit' (ID: 27076)
  Prédit: '.exit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.exit' → logprob: -1.9623810658231378e-05
    2. 'exit' → logprob: -11.125020027160645
    3. '_exit' → logprob: -12.750020027160645
    4. '	exit' → logprob: -13.500020027160645
    5. '.EXIT' → logprob: -16.125019073486328
    6. '.' → logprob: -16.375019073486328
    7. '.Exit' → logprob: -16.500019073486328
    8. '_EXIT' → logprob: -16.875019073486328
    9. ' exit' → logprob: -17.000019073486328
    10. '```' → logprob: -17.125019073486328

Token 236: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -3.619311974034645e-05
    2. '()
' → logprob: -10.750036239624023
    3. '(' → logprob: -11.500036239624023
    4. '()`' → logprob: -12.750036239624023
    5. '()

' → logprob: -14.875036239624023
    6. '()]' → logprob: -15.250036239624023
    7. '();' → logprob: -15.375036239624023
    8. '()\' → logprob: -15.500036239624023
    9. '())' → logprob: -15.750036239624023
    10. ' ()' → logprob: -16.000036239624023

Token 237: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0014659387525171041
    2. '    ' → logprob: -7.626465797424316
    3. '(' → logprob: -8.001465797424316
    4. '    
' → logprob: -8.251465797424316
    5. 'def' → logprob: -9.001465797424316
    6. '#' → logprob: -9.001465797424316
    7. ')' → logprob: -9.501465797424316
    8. 'n' → logprob: -11.751465797424316
    9. '_' → logprob: -12.126465797424316
    10. ',' → logprob: -12.251465797424316

Token 238: ' print' (ID: 2123)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9533554315567017
    2. 'dp' → logprob: -1.7033554315567017
    3. 'factor' → logprob: -2.328355312347412
    4. 'def' → logprob: -2.703355312347412
    5. '   ' → logprob: -3.078355312347412
    6. 'result' → logprob: -3.078355312347412
    7. 'fact' → logprob: -3.203355312347412
    8. 'res' → logprob: -3.328355312347412
    9. 'total' → logprob: -3.953355312347412
    10. 'n' → logprob: -3.953355312347412

Token 239: '(com' (ID: 27868)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.13626806437969208
    2. '(pow' → logprob: -2.136268138885498
    3. '(math' → logprob: -5.261268138885498
    4. '(step' → logprob: -6.136268138885498
    5. '((' → logprob: -7.011268138885498
    6. '(
' → logprob: -7.636268138885498
    7. 'pow' → logprob: -7.886268138885498
    8. '1' → logprob: -9.51126766204834
    9. '(com' → logprob: -10.38626766204834
    10. '("' → logprob: -10.88626766204834

Token 240: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0010864014038816094
    2. 'math' → logprob: -7.751086235046387
    3. '(' → logprob: -8.626086235046387
    4. '[b' → logprob: -9.376086235046387
    5. '(b' → logprob: -10.001086235046387
    6. '
' → logprob: -10.001086235046387
    7. '(math' → logprob: -10.001086235046387
    8. 'pow' → logprob: -10.376086235046387
    9. 'bin' → logprob: -10.501086235046387
    10. 'bination' → logprob: -10.626086235046387

Token 241: '_mod' (ID: 15325)
  Prédit: '(val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(val' → logprob: -0.4293970763683319
    2. '(step' → logprob: -1.0543971061706543
    3. '(' → logprob: -7.804397106170654
    4. '   ' → logprob: -9.429396629333496
    5. 'val' → logprob: -9.804396629333496
    6. '[val' → logprob: -9.804396629333496
    7. ')' → logprob: -10.054396629333496
    8. ',val' → logprob: -11.929396629333496
    9. ' val' → logprob: -12.179396629333496
    10. '(
' → logprob: -12.304396629333496

Token 242: '(val' (ID: 17391)
  Prédit: '(step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(step' → logprob: -0.014397015795111656
    2. '(val' → logprob: -4.389397144317627
    3. '(' → logprob: -6.389397144317627
    4. ')' → logprob: -8.639396667480469
    5. '((' → logprob: -11.639396667480469
    6. '(
' → logprob: -12.264396667480469
    7. ' (' → logprob: -12.764396667480469
    8. '(len' → logprob: -13.264396667480469
    9. '<|end|>' → logprob: -13.389396667480469
    10. 'val' → logprob: -13.514396667480469

Token 243: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.02345021814107895
    2. '(step' → logprob: -3.7734501361846924
    3. ')' → logprob: -10.398449897766113
    4. '(val' → logprob: -10.523449897766113
    5. '(' → logprob: -10.773449897766113
    6. '_cnt' → logprob: -11.273449897766113
    7. '(
' → logprob: -11.398449897766113
    8. '_(' → logprob: -11.773449897766113
    9. ' step' → logprob: -11.773449897766113
    10. '   ' → logprob: -11.773449897766113

Token 244: ' +' (ID: 659)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.023591574281454086
    2. ' +' → logprob: -4.2735915184021
    3. ' ,' → logprob: -5.1485915184021
    4. '+' → logprob: -5.6485915184021
    5. ',val' → logprob: -10.773591995239258
    6. ' ' → logprob: -11.523591995239258
    7. ',
' → logprob: -11.648591995239258
    8. '+,' → logprob: -12.648591995239258
    9. ' step' → logprob: -13.523591995239258
    10. ')' → logprob: -13.773591995239258

Token 245: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.0042881653644144535
    2. 'step' → logprob: -5.504288196563721
    3. ' val' → logprob: -8.504287719726562
    4. ' step' → logprob: -11.879287719726562
    5. '   ' → logprob: -16.879287719726562
    6. '(val' → logprob: -16.879287719726562
    7. '_val' → logprob: -17.004287719726562
    8. '	val' → logprob: -17.504287719726562
    9. ',val' → logprob: -17.629287719726562
    10. '
' → logprob: -17.754287719726562

Token 246: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -0.06467854231595993
    2. 'y' → logprob: -3.189678430557251
    3. '_x' → logprob: -4.56467866897583
    4. 'step' → logprob: -5.56467866897583
    5. '_cnt' → logprob: -6.18967866897583
    6. 'cnt' → logprob: -6.43967866897583
    7. '(step' → logprob: -6.93967866897583
    8. 'x' → logprob: -7.31467866897583
    9. ' step' → logprob: -8.064678192138672
    10. 's' → logprob: -8.439678192138672

Token 247: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0019416073337197304
    2. ' ,' → logprob: -6.251941680908203
    3. ',
' → logprob: -11.876941680908203
    4. ',val' → logprob: -13.501941680908203
    5. ')' → logprob: -14.001941680908203
    6. ',k' → logprob: -14.376941680908203
    7. ',n' → logprob: -15.251941680908203
    8. ',num' → logprob: -15.251941680908203
    9. ' ' → logprob: -15.376941680908203
    10. ',len' → logprob: -15.501941680908203

Token 248: ' val' (ID: 1459)
  Prédit: ' step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' step' → logprob: -0.08808853477239609
    2. 'step' → logprob: -2.8380885124206543
    3. ' val' → logprob: -3.8380885124206543
    4. 'val' → logprob: -5.463088512420654
    5. '	step' → logprob: -11.963088989257812
    6. '[val' → logprob: -14.713088989257812
    7. ',val' → logprob: -15.088088989257812
    8. '	val' → logprob: -16.213088989257812
    9. ' ' → logprob: -16.213088989257812
    10. 'Step' → logprob: -16.338088989257812

Token 249: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.0014014291809871793
    2. 'x' → logprob: -6.751401424407959
    3. '_y' → logprob: -8.376401901245117
    4. '_' → logprob: -14.626401901245117
    5. 'y' → logprob: -14.626401901245117
    6. '[' → logprob: -16.876401901245117
    7. ' x' → logprob: -17.751401901245117
    8. '```' → logprob: -18.376401901245117
    9. '	x' → logprob: -18.626401901245117
    10. '$x' → logprob: -18.751401901245117

Token 250: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.46622809767723083
    2. ',' → logprob: -1.0912281274795532
    3. '))' → logprob: -3.3412280082702637
    4. ' )' → logprob: -7.341228008270264
    5. ' ,' → logprob: -7.466228008270264
    6. ')
' → logprob: -9.466228485107422
    7. ' ))' → logprob: -10.216228485107422
    8. '))
' → logprob: -10.841228485107422
    9. ')))' → logprob: -11.341228485107422
    10. ',)' → logprob: -11.466228485107422

Token 251: ' CONST' (ID: 116101)
  Prédit: 'CONST'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'CONST' → logprob: -0.0007771117961965501
    2. ' CONST' → logprob: -7.375777244567871
    3. ')' → logprob: -9.250777244567871
    4. 'CON' → logprob: -10.125777244567871
    5. '_CONST' → logprob: -12.500777244567871
    6. '   ' → logprob: -12.750777244567871
    7. '))' → logprob: -13.125777244567871
    8. 'step' → logprob: -13.250777244567871
    9. 'const' → logprob: -14.125777244567871
    10. 'Const' → logprob: -14.250777244567871

Token 252: '_MOD' (ID: 45275)
  Prédit: '_MOD'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_MOD' → logprob: -3.128163257315464e-07
    2. 'MOD' → logprob: -15.625
    3. '_mod' → logprob: -16.25
    4. '_CONST' → logprob: -18.0
    5. '_Mod' → logprob: -18.625
    6. ' _' → logprob: -18.875
    7. ')_' → logprob: -19.5
    8. '._' → logprob: -20.0
    9. '_INF' → logprob: -20.125
    10. '.MOD' → logprob: -20.25

Token 253: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011048642918467522
    2. '))' → logprob: -4.511048793792725
    3. ' )' → logprob: -14.886048316955566
    4. ')))' → logprob: -15.386048316955566
    5. ')
' → logprob: -15.511048316955566
    6. ')`' → logprob: -17.636049270629883
    7. '))
' → logprob: -18.261049270629883
    8. ')")' → logprob: -18.511049270629883
    9. ')}' → logprob: -18.636049270629883
    10. '   ' → logprob: -18.761049270629883

Token 254: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -5.157039049663581e-05
    2. '
' → logprob: -11.250051498413086
    3. ':def' → logprob: -11.250051498413086
    4. '#' → logprob: -11.875051498413086
    5. 'from' → logprob: -12.000051498413086
    6. 'import' → logprob: -12.250051498413086
    7. 'de' → logprob: -13.750051498413086
    8. ' 
' → logprob: -13.875051498413086
    9. '(' → logprob: -14.000051498413086
    10. ':' → logprob: -14.125051498413086

Token 255: ' comb' (ID: 4134)
  Prédit: ' comb'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' comb' → logprob: -0.0019381542224436998
    2. 'comb' → logprob: -6.251938343048096
    3. '_comb' → logprob: -11.751937866210938
    4. ' _' → logprob: -14.626937866210938
    5. '_' → logprob: -14.751937866210938
    6. ' combine' → logprob: -15.126937866210938
    7. 'com' → logprob: -15.376937866210938
    8. ' ' → logprob: -16.126937866210938
    9. ' cmb' → logprob: -16.626937866210938
    10. ' combin' → logprob: -16.876937866210938

Token 256: '_mod' (ID: 15325)
  Prédit: '_mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mod' → logprob: -1.0280383548888494e-06
    2. '_' → logprob: -15.125000953674316
    3. '_m' → logprob: -15.125000953674316
    4. ' _' → logprob: -15.625000953674316
    5. '(_' → logprob: -16.125001907348633
    6. '_MOD' → logprob: -16.375001907348633
    7. '_mode' → logprob: -16.500001907348633
    8. '_Mod' → logprob: -18.125001907348633
    9. '._' → logprob: -18.875001907348633
    10. '_(' → logprob: -19.000001907348633

Token 257: '(value' (ID: 6333)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.004080062732100487
    2. '(' → logprob: -5.504080295562744
    3. ' (' → logprob: -13.754079818725586
    4. '(a' → logprob: -15.254079818725586
    5. '(
' → logprob: -16.379079818725586
    6. '(N' → logprob: -16.379079818725586
    7. 'n' → logprob: -16.504079818725586
    8. '(k' → logprob: -16.879079818725586
    9. '(num' → logprob: -17.254079818725586
    10. '(

' → logprob: -17.879079818725586

Token 258: '_n' (ID: 2170)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.366060346364975
    2. '_n' → logprob: -1.2410603761672974
    3. '_,' → logprob: -5.116060256958008
    4. '1' → logprob: -5.241060256958008
    5. ',n' → logprob: -5.991060256958008
    6. '_a' → logprob: -6.741060256958008
    7. 'n' → logprob: -7.116060256958008
    8. '_' → logprob: -7.241060256958008
    9. ' ,' → logprob: -7.866060256958008
    10. 's' → logprob: -8.491060256958008

Token 259: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00019710339256562293
    2. ' ,' → logprob: -9.125197410583496
    3. ',n' → logprob: -10.375197410583496
    4. '_,' → logprob: -10.875197410583496
    5. ',k' → logprob: -11.250197410583496
    6. ',value' → logprob: -11.250197410583496
    7. ',val' → logprob: -12.375197410583496
    8. ',r' → logprob: -13.625197410583496
    9. ',
' → logprob: -14.250197410583496
    10. 's' → logprob: -14.375197410583496

Token 260: ' value' (ID: 1432)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.037582915276288986
    2. ' value' → logprob: -3.4125828742980957
    3. 'k' → logprob: -5.787582874298096
    4. 'r' → logprob: -7.412582874298096
    5. ' k' → logprob: -8.412583351135254
    6. ' r' → logprob: -10.537583351135254
    7. '	value' → logprob: -13.287583351135254
    8. 'alue' → logprob: -13.662583351135254
    9. '
' → logprob: -13.912583351135254
    10. 'n' → logprob: -14.162583351135254

Token 261: '_r' (ID: 3442)
  Prédit: '_k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_k' → logprob: -0.6953165531158447
    2. '_r' → logprob: -1.0703165531158447
    3. 'k' → logprob: -1.9453165531158447
    4. 'r' → logprob: -4.195316314697266
    5. '_' → logprob: -9.945316314697266
    6. '```' → logprob: -10.070316314697266
    7. '
' → logprob: -10.570316314697266
    8. '_m' → logprob: -11.070316314697266
    9. ',' → logprob: -11.945316314697266
    10. 'm' → logprob: -11.945316314697266

Token 262: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.955703818472102e-05
    2. ' ,' → logprob: -9.750059127807617
    3. '_,' → logprob: -14.250059127807617
    4. ',
' → logprob: -16.000059127807617
    5. '):' → logprob: -16.250059127807617
    6. ')' → logprob: -16.625059127807617
    7. ' ' → logprob: -16.875059127807617
    8. '‌,' → logprob: -16.875059127807617
    9. ',int' → logprob: -17.000059127807617
    10. ',value' → logprob: -17.000059127807617

Token 263: ' value' (ID: 1432)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.04392370581626892
    2. 'value' → logprob: -3.5439236164093018
    3. ' mod' → logprob: -4.668923854827881
    4. ' value' → logprob: -5.918923854827881
    5. ' modulus' → logprob: -6.918923854827881
    6. 'MOD' → logprob: -7.668923854827881
    7. ' modulo' → logprob: -8.793923377990723
    8. 'm' → logprob: -8.918923377990723
    9. 'const' → logprob: -9.168923377990723
    10. ' MOD' → logprob: -10.043923377990723

Token 264: '_mod' (ID: 15325)
  Prédit: '_mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mod' → logprob: -0.585623025894165
    2. '_m' → logprob: -0.835623025894165
    3. 'mod' → logprob: -5.585622787475586
    4. 'm' → logprob: -5.960622787475586
    5. '):' → logprob: -6.460622787475586
    6. '_' → logprob: -7.210622787475586
    7. ')' → logprob: -7.835622787475586
    8. '_p' → logprob: -8.460622787475586
    9. '_n' → logprob: -9.085622787475586
    10. '):
' → logprob: -9.585622787475586

Token 265: '=' (ID: 28)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -4.0722858102526516e-05
    2. ')' → logprob: -10.625041007995605
    3. ' ):' → logprob: -11.625041007995605
    4. '):
' → logprob: -12.125041007995605
    5. ':' → logprob: -13.250041007995605
    6. '=' → logprob: -16.00004005432129
    7. ',' → logprob: -17.25004005432129
    8. '):
' → logprob: -17.50004005432129
    9. '):

' → logprob: -18.25004005432129
    10. ')：' → logprob: -18.62504005432129

Token 266: 'CONST' (ID: 168319)
  Prédit: 'CONST'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'CONST' → logprob: -0.008745759725570679
    2. ' CONST' → logprob: -4.7587456703186035
    3. '10' → logprob: -9.758746147155762
    4. '100' → logprob: -10.258746147155762
    5. '_CONST' → logprob: -11.508746147155762
    6. 'CON' → logprob: -11.633746147155762
    7. ' ' → logprob: -12.008746147155762
    8. 'const' → logprob: -12.508746147155762
    9. 'Const' → logprob: -13.258746147155762
    10. ' const' → logprob: -13.383746147155762

Token 267: '_MOD' (ID: 45275)
  Prédit: '_MOD'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_MOD' → logprob: -1.1637164789135568e-05
    2. 'MOD' → logprob: -11.375011444091797
    3. '_INF' → logprob: -17.375011444091797
    4. '_mod' → logprob: -17.625011444091797
    5. '_Mod' → logprob: -18.375011444091797
    6. '	mod' → logprob: -18.500011444091797
    7. '```' → logprob: -18.625011444091797
    8. ' MOD' → logprob: -18.750011444091797
    9. '.MOD' → logprob: -19.000011444091797
    10. 'mod' → logprob: -19.875011444091797

Token 268: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00018613664724398404
    2. ')' → logprob: -8.6251859664917
    3. '):
' → logprob: -12.3751859664917
    4. ' ):' → logprob: -13.2501859664917
    5. ':' → logprob: -15.0001859664917
    6. '):
' → logprob: -16.500186920166016
    7. ',' → logprob: -16.875186920166016
    8. ')：' → logprob: -17.125186920166016
    9. '):

' → logprob: -17.750186920166016
    10. '*' → logprob: -18.125186920166016

Token 269: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0943550392985344
    2. '):' → logprob: -2.4693551063537598
    3. '():' → logprob: -6.34435510635376
    4. '   ' → logprob: -6.34435510635376
    5. ':
' → logprob: -7.59435510635376
    6. ',' → logprob: -7.96935510635376
    7. ' :' → logprob: -8.344354629516602
    8. '):
' → logprob: -8.844354629516602
    9. ':return' → logprob: -8.969354629516602
    10. ':**' → logprob: -9.094354629516602

Token 270: ' value' (ID: 1432)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03230659291148186
    2. 'result' → logprob: -3.907306671142578
    3. 'if' → logprob: -6.157306671142578
    4. 'res' → logprob: -6.157306671142578
    5. 'numer' → logprob: -6.157306671142578
    6. '    
' → logprob: -6.407306671142578
    7. 'fact' → logprob: -6.657306671142578
    8. ' result' → logprob: -7.282306671142578
    9. 'factor' → logprob: -7.407306671142578
    10. ' if' → logprob: -7.782306671142578

Token 271: '_r' (ID: 3442)
  Prédit: '_n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -0.009677942842245102
    2. '_r' → logprob: -6.134677886962891
    3. '_fact' → logprob: -6.134677886962891
    4. '_' → logprob: -6.509677886962891
    5. '_factor' → logprob: -6.634677886962891
    6. '_fac' → logprob: -6.884677886962891
    7. '   ' → logprob: -7.759677886962891
    8. 'fact' → logprob: -8.25967788696289
    9. '_p' → logprob: -8.50967788696289
    10. '=' → logprob: -9.38467788696289

Token 272: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38689711689949036
    2. ' =' → logprob: -1.136897087097168
    3. ')' → logprob: -10.886897087097168
    4. ' ' → logprob: -13.261897087097168
    5. '=int' → logprob: -13.386897087097168
    6. ')=' → logprob: -14.136897087097168
    7. ',' → logprob: -14.511897087097168
    8. 'if' → logprob: -14.511897087097168
    9. ' if' → logprob: -15.011897087097168
    10. '_=' → logprob: -15.511897087097168

Token 273: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.0181842390447855
    2. ' min' → logprob: -4.018184185028076
    3. 'value' → logprob: -11.018184661865234
    4. 'max' → logprob: -11.018184661865234
    5. ' value' → logprob: -13.768184661865234
    6. '	min' → logprob: -15.393184661865234
    7. ' max' → logprob: -16.143184661865234
    8. '0' → logprob: -16.768184661865234
    9. '(min' → logprob: -17.768184661865234
    10. ' ' → logprob: -18.018184661865234

Token 274: '(value' (ID: 6333)
  Prédit: '(value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(value' → logprob: -8.061054359131958e-06
    2. '(' → logprob: -11.750007629394531
    3. 'value' → logprob: -16.25000762939453
    4. '(
' → logprob: -17.62500762939453
    5. ' (' → logprob: -19.37500762939453
    6. ',value' → logprob: -19.62500762939453
    7. '[value' → logprob: -19.87500762939453
    8. ')value' → logprob: -19.87500762939453
    9. ' value' → logprob: -20.12500762939453
    10. '"value' → logprob: -20.37500762939453

Token 275: '_r' (ID: 3442)
  Prédit: '_r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_r' → logprob: -0.002265517134219408
    2. 'r' → logprob: -6.627265453338623
    3. '(value' → logprob: -7.002265453338623
    4. '_n' → logprob: -11.752265930175781
    5. ')' → logprob: -12.377265930175781
    6. '(' → logprob: -12.502265930175781
    7. '```' → logprob: -12.752265930175781
    8. '_' → logprob: -13.502265930175781
    9. ',value' → logprob: -13.502265930175781
    10. '[value' → logprob: -13.502265930175781

Token 276: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009137284359894693
    2. ' ,' → logprob: -7.000913619995117
    3. ',value' → logprob: -13.125913619995117
    4. ',
' → logprob: -15.750913619995117
    5. ',

' → logprob: -18.750913619995117
    6. ' ,
' → logprob: -19.500913619995117
    7. 'value' → logprob: -19.500913619995117
    8. ',val' → logprob: -20.125913619995117
    9. '(),' → logprob: -20.250913619995117
    10. '_,' → logprob: -20.375913619995117

Token 277: ' value' (ID: 1432)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.5759442448616028
    2. ' value' → logprob: -0.8259442448616028
    3. ' ' → logprob: -12.950943946838379
    4. '   ' → logprob: -13.575943946838379
    5. '(value' → logprob: -14.450943946838379
    6. ')value' → logprob: -15.700943946838379
    7. '"value' → logprob: -16.075944900512695
    8. '	value' → logprob: -16.950944900512695
    9. ''value' → logprob: -16.950944900512695
    10. '  ' → logprob: -17.450944900512695

Token 278: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -2.45848218582978e-06
    2. '_' → logprob: -13.00000286102295
    3. '_
' → logprob: -16.000001907348633
    4. ' _' → logprob: -17.875001907348633
    5. '_k' → logprob: -18.000001907348633
    6. 'n' → logprob: -18.500001907348633
    7. '_x' → logprob: -18.625001907348633
    8. ')' → logprob: -19.000001907348633
    9. '_nt' → logprob: -19.125001907348633
    10. ' -' → logprob: -19.250001907348633

Token 279: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.038456257432699203
    2. '-' → logprob: -3.2884562015533447
    3. '-value' → logprob: -7.788456439971924
    4. ')' → logprob: -16.663455963134766
    5. '-val' → logprob: -17.163455963134766
    6. ' ' → logprob: -17.538455963134766
    7. '-key' → logprob: -17.663455963134766
    8. ' ' → logprob: -18.288455963134766
    9. '-v' → logprob: -18.288455963134766
    10. ' -
' → logprob: -18.788455963134766

Token 280: ' value' (ID: 1432)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.0007101670489646494
    2. ' value' → logprob: -7.2507100105285645
    3. ' ' → logprob: -16.875709533691406
    4. ''value' → logprob: -16.875709533691406
    5. '"value' → logprob: -17.000709533691406
    6. 'Value' → logprob: -17.375709533691406
    7. '	value' → logprob: -18.125709533691406
    8. ')value' → logprob: -18.250709533691406
    9. '   ' → logprob: -18.500709533691406
    10. '$value' → logprob: -18.875709533691406

Token 281: '_r' (ID: 3442)
  Prédit: '_r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_r' → logprob: -5.836499985889532e-05
    2. 'r' → logprob: -9.7500581741333
    3. '_' → logprob: -18.000059127807617
    4. '	r' → logprob: -18.250059127807617
    5. ' ' → logprob: -20.250059127807617
    6. ''r' → logprob: -20.375059127807617
    7. '_n' → logprob: -20.750059127807617
    8. ' r' → logprob: -20.750059127807617
    9. ')' → logprob: -21.375059127807617
    10. '
' → logprob: -21.625059127807617

Token 282: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011166787706315517
    2. ')
' → logprob: -4.511166572570801
    3. ')

' → logprob: -9.1361665725708
    4. '   ' → logprob: -12.2611665725708
    5. ')
' → logprob: -12.3861665725708
    6. ' )' → logprob: -13.2611665725708
    7. ' )
' → logprob: -15.7611665725708
    8. ')

' → logprob: -16.011167526245117
    9. ' ' → logprob: -16.386167526245117
    10. ')return' → logprob: -16.511167526245117

Token 283: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04913081228733063
    2. '    
' → logprob: -3.424130916595459
    3. '
' → logprob: -4.299130916595459
    4. '   
' → logprob: -7.174130916595459
    5. '  
' → logprob: -7.924130916595459
    6. ' 
' → logprob: -8.6741304397583
    7. ')' → logprob: -9.2991304397583
    8. ' if' → logprob: -9.6741304397583
    9. 'n' → logprob: -9.9241304397583
    10. 'if' → logprob: -10.1741304397583

Token 284: ' result' (ID: 1534)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03932494670152664
    2. 'fact' → logprob: -4.539324760437012
    3. '    
' → logprob: -4.664324760437012
    4. 'result' (adapté à ' result') → logprob: -5.039324760437012
    5. 'fac' → logprob: -5.914324760437012
    6. 'res' → logprob: -6.289324760437012
    7. 'n' → logprob: -6.789324760437012
    8. ' result' → logprob: -6.914324760437012
    9. 'factor' → logprob: -7.039324760437012
    10. 'if' → logprob: -7.039324760437012

Token 285: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02056805044412613
    2. '=' → logprob: -3.8955681324005127
    3. ',' → logprob: -11.145567893981934
    4. ' ' → logprob: -11.395567893981934
    5. '  ' → logprob: -15.895567893981934
    6. ' ,' → logprob: -16.27056884765625
    7. 's' → logprob: -16.64556884765625
    8. '   ' → logprob: -17.14556884765625
    9. '=int' → logprob: -17.77056884765625
    10. ')' → logprob: -17.89556884765625

Token 286: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.7610454708337784e-05
    2. ' ' → logprob: -10.500027656555176
    3. 'pow' → logprob: -17.37502670288086
    4. '[' → logprob: -18.00002670288086
    5. ' ' → logprob: -19.00002670288086
    6. '   ' → logprob: -19.12502670288086
    7. '```' → logprob: -19.12502670288086
    8. '۱' → logprob: -19.93752670288086
    9. 'value' → logprob: -20.06252670288086
    10. '１' → logprob: -20.12502670288086

Token 287: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. '[' → logprob: -16.0
    3. ' ' → logprob: -16.25
    4. 'pow' → logprob: -17.25
    5. '```' → logprob: -18.75
    6. 'result' → logprob: -19.0
    7. 'value' → logprob: -20.0
    8. '
' → logprob: -20.0
    9. 'factor' → logprob: -20.5625
    10. '(' → logprob: -20.75

Token 288: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 289: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.046829018741846085
    2. ' for' → logprob: -3.5468289852142334
    3. '<|end|>' → logprob: -4.5468292236328125
    4. 'for' → logprob: -6.0468292236328125
    5. ',' → logprob: -6.0468292236328125
    6. '    
' → logprob: -7.2968292236328125
    7. '
' → logprob: -8.671829223632812
    8. '  ' → logprob: -8.671829223632812
    9. '	for' → logprob: -9.046829223632812
    10. ' ' → logprob: -9.171829223632812

Token 290: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.08902584761381149
    2. ' for' → logprob: -2.4640257358551025
    3. '   ' → logprob: -10.214025497436523
    4. '
' → logprob: -10.839025497436523
    5. 'i' → logprob: -10.964025497436523
    6. ' i' → logprob: -12.714025497436523
    7. '    
' → logprob: -13.214025497436523
    8. 'f' → logprob: -13.464025497436523
    9. 'range' → logprob: -13.839025497436523
    10. '```' → logprob: -13.964025497436523

Token 291: ' idx' (ID: 14016)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.03811068832874298
    2. ' i' → logprob: -3.2881107330322266
    3. 'k' → logprob: -9.788110733032227
    4. '	i' → logprob: -12.538110733032227
    5. 'num' → logprob: -13.288110733032227
    6. 'x' → logprob: -13.288110733032227
    7. 'n' → logprob: -13.663110733032227
    8. '_i' → logprob: -13.788110733032227
    9. 'value' → logprob: -14.413110733032227
    10. ' k' → logprob: -14.413110733032227

Token 292: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004690591711550951
    2. 'in' → logprob: -5.379690647125244
    3. ' ' → logprob: -10.129690170288086
    4. ',' → logprob: -10.629690170288086
    5. 'range' → logprob: -12.879690170288086
    6. ' ,' → logprob: -14.004690170288086
    7. 's' → logprob: -14.254690170288086
    8. '1' → logprob: -14.379690170288086
    9. 'n' → logprob: -14.504690170288086
    10. '	in' → logprob: -15.629690170288086

Token 293: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.07889088988304138
    2. ' range' → logprob: -2.578890800476074
    3. '(range' → logprob: -14.453890800476074
    4. '	range' → logprob: -14.953890800476074
    5. ' ' → logprob: -15.828890800476074
    6. '  ' → logprob: -17.32889175415039
    7. '   ' → logprob: -17.45389175415039
    8. 'rang' → logprob: -18.07889175415039
    9. '
' → logprob: -18.32889175415039
    10. '```' → logprob: -18.70389175415039

Token 294: '(value' (ID: 6333)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.08324061334133148
    2. '1' → logprob: -2.583240509033203
    3. '(value' → logprob: -5.458240509033203
    4. 'value' → logprob: -9.833240509033203
    5. ' ' → logprob: -10.583240509033203
    6. '2' → logprob: -14.333240509033203
    7. ',value' → logprob: -14.958240509033203
    8. '```' → logprob: -15.833240509033203
    9. '
' → logprob: -15.958240509033203
    10. '[value' → logprob: -16.583240509033203

Token 295: '_r' (ID: 3442)
  Prédit: '_r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_r' → logprob: -5.200166469876422e-06
    2. '_n' → logprob: -12.625004768371582
    3. '_' → logprob: -14.000004768371582
    4. ' ' → logprob: -14.125004768371582
    5. '1' → logprob: -16.2500057220459
    6. '(' → logprob: -16.3750057220459
    7. '
' → logprob: -17.1250057220459
    8. 'r' → logprob: -17.5000057220459
    9. '```' → logprob: -17.7500057220459
    10. '   ' → logprob: -18.0000057220459

Token 296: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03384716063737869
    2. '):
' → logprob: -3.6588470935821533
    3. ' ):' → logprob: -5.283847332000732
    4. '1' → logprob: -6.783847332000732
    5. '+' → logprob: -7.283847332000732
    6. ',' → logprob: -7.658847332000732
    7. ' ):
' → logprob: -9.783846855163574
    8. ' +' → logprob: -10.033846855163574
    9. ' ,' → logprob: -11.033846855163574
    10. ' ' → logprob: -11.158846855163574

Token 297: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006109290407039225
    2. '<|end|>' → logprob: -8.625611305236816
    3. ',' → logprob: -8.750611305236816
    4. 'result' → logprob: -8.875611305236816
    5. '   ' → logprob: -9.750611305236816
    6. ' result' → logprob: -10.625611305236816
    7. ',result' → logprob: -11.250611305236816
    8. '        
' → logprob: -11.500611305236816
    9. '```' → logprob: -11.500611305236816
    10. '    
' → logprob: -12.875611305236816

Token 298: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -0.043829575181007385
    2. ' result' → logprob: -3.5438296794891357
    3. '       ' → logprob: -4.293829441070557
    4. '```' → logprob: -8.418829917907715
    5. '   ' → logprob: -10.668829917907715
    6. '           ' → logprob: -10.793829917907715
    7. ',result' → logprob: -10.918829917907715
    8. '(result' → logprob: -11.043829917907715
    9. '        
' → logprob: -11.293829917907715
    10. '	result' → logprob: -12.543829917907715

Token 299: ' =' (ID: 314)
  Prédit: ' *='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *=' → logprob: -0.4446570575237274
    2. ' =' → logprob: -1.5696570873260498
    3. '=' → logprob: -2.31965708732605
    4. '*=' → logprob: -3.56965708732605
    5. '*' → logprob: -4.069656848907471
    6. ' *' → logprob: -4.944656848907471
    7. ' ' → logprob: -9.569657325744629
    8. ' ' → logprob: -10.069657325744629
    9. '```' → logprob: -11.069657325744629
    10. '_' → logprob: -11.819657325744629

Token 300: ' result' (ID: 1534)
  Prédit: '(result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.21174533665180206
    2. 'result' → logprob: -2.336745262145996
    3. ' result' → logprob: -2.836745262145996
    4. ' (' → logprob: -3.336745262145996
    5. '   ' → logprob: -12.461745262145996
    6. '=result' → logprob: -12.586745262145996
    7. '[result' → logprob: -12.961745262145996
    8. ',result' → logprob: -13.086745262145996
    9. ' ' → logprob: -13.211745262145996
    10. '	result' → logprob: -13.336745262145996

Token 301: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.04858839511871338
    2. '*' → logprob: -3.048588275909424
    3. ' ' → logprob: -14.048588752746582
    4. ' ' → logprob: -15.673588752746582
    5. '*(' → logprob: -16.798587799072266
    6. '```' → logprob: -16.923587799072266
    7. '**' → logprob: -17.423587799072266
    8. '  ' → logprob: -18.423587799072266
    9. '*object' → logprob: -18.673587799072266
    10. ' **' → logprob: -18.798587799072266

Token 302: ' (' (ID: 350)
  Prédit: '(value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(value' → logprob: -0.001106875017285347
    2. '((' → logprob: -7.1261067390441895
    3. ' (' → logprob: -8.126107215881348
    4. '(result' → logprob: -12.251107215881348
    5. '   ' → logprob: -14.251107215881348
    6. 'value' → logprob: -14.751107215881348
    7. ' ((' → logprob: -15.251107215881348
    8. '(' → logprob: -15.626107215881348
    9. '(n' → logprob: -15.751107215881348
    10. '(
' → logprob: -17.50110626220703

Token 303: 'value' (ID: 1594)
  Prédit: 'value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.01179137360304594
    2. '(value' → logprob: -4.636791229248047
    3. ' value' → logprob: -6.261791229248047
    4. '   ' → logprob: -9.636791229248047
    5. ' (' → logprob: -10.011791229248047
    6. ')value' → logprob: -12.261791229248047
    7. '"value' → logprob: -12.761791229248047
    8. '	value' → logprob: -13.011791229248047
    9. '[value' → logprob: -13.636791229248047
    10. ''value' → logprob: -13.886791229248047

Token 304: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -3.128163257315464e-07
    2. '_' → logprob: -16.0
    3. 'n' → logprob: -16.0
    4. '
' → logprob: -18.375
    5. '```' → logprob: -18.375
    6. '_k' → logprob: -18.5
    7. ' _' → logprob: -19.375
    8. '_
' → logprob: -19.375
    9. '_j' → logprob: -20.0
    10. '_i' → logprob: -20.0

Token 305: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.2519311308860779
    2. '-' → logprob: -1.5019311904907227
    3. '-index' → logprob: -13.626931190490723
    4. ' ' → logprob: -14.751931190490723
    5. ' idx' → logprob: -16.251930236816406
    6. '-
' → logprob: -16.876930236816406
    7. '-result' → logprob: -17.126930236816406
    8. '-i' → logprob: -17.501930236816406
    9. '-id' → logprob: -17.751930236816406
    10. ' -
' → logprob: -18.001930236816406

Token 306: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.0019299437990412116
    2. ' idx' → logprob: -6.251929759979248
    3. '	idx' → logprob: -13.626930236816406
    4. '(idx' → logprob: -16.751930236816406
    5. 'index' → logprob: -17.251930236816406
    6. '
' → logprob: -17.376930236816406
    7. '[idx' → logprob: -17.501930236816406
    8. '_idx' → logprob: -17.751930236816406
    9. ' ' → logprob: -18.376930236816406
    10. '   ' → logprob: -18.751930236816406

Token 307: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00039706481038592756
    2. ' )' → logprob: -8.250396728515625
    3. ')
' → logprob: -9.375396728515625
    4. ')%' → logprob: -10.125396728515625
    5. ')//' → logprob: -12.375396728515625
    6. '   ' → logprob: -13.000396728515625
    7. ' ' → logprob: -13.875396728515625
    8. ' 
' → logprob: -14.500396728515625
    9. '
' → logprob: -14.625396728515625
    10. ')\
' → logprob: -14.625396728515625

Token 308: ' *' (ID: 425)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.14246074855327606
    2. '%' → logprob: -2.142460823059082
    3. '       ' → logprob: -4.392460823059082
    4. ' //' → logprob: -6.142460823059082
    5. ' *' → logprob: -8.017460823059082
    6. '
' → logprob: -9.017460823059082
    7. '   ' → logprob: -9.142460823059082
    8. '```' → logprob: -9.142460823059082
    9. ')' → logprob: -9.642460823059082
    10. '//' → logprob: -10.267460823059082

Token 309: ' mod' (ID: 1812)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.0003825293097179383
    2. ' pow' → logprob: -7.875382423400879
    3. '(pow' → logprob: -13.500382423400879
    4. 'mod' → logprob: -14.250382423400879
    5. 'power' → logprob: -16.000383377075195
    6. '_pow' → logprob: -16.500383377075195
    7. '   ' → logprob: -17.000383377075195
    8. '```' → logprob: -17.625383377075195
    9. 'Pow' → logprob: -18.250383377075195
    10. '.pow' → logprob: -18.375383377075195

Token 310: 'inv' (ID: 31086)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.009473913349211216
    2. '_pow' → logprob: -5.00947380065918
    3. ' pow' → logprob: -6.13447380065918
    4. '(pow' → logprob: -8.38447380065918
    5. 'inv' → logprob: -8.75947380065918
    6. '_inv' → logprob: -8.88447380065918
    7. '_inverse' → logprob: -10.25947380065918
    8. 'mod' → logprob: -11.13447380065918
    9. 'inverse' → logprob: -11.88447380065918
    10. 'invert' → logprob: -13.25947380065918

Token 311: '_mod' (ID: 15325)
  Prédit: '(result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.1637372076511383
    2. 'result' → logprob: -2.2887372970581055
    3. '(' → logprob: -3.1637372970581055
    4. '((' → logprob: -5.1637372970581055
    5. '(pow' → logprob: -6.6637372970581055
    6. '(
' → logprob: -9.038737297058105
    7. 'factor' → logprob: -9.788737297058105
    8. 'fact' → logprob: -10.163737297058105
    9. ' result' → logprob: -10.538737297058105
    10. 'pow' → logprob: -10.538737297058105

Token 312: '(idx' (ID: 42793)
  Prédit: '(result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.6202382445335388
    2. '(' → logprob: -1.7452383041381836
    3. '(pow' → logprob: -2.1202383041381836
    4. '((' → logprob: -2.2452383041381836
    5. 'result' → logprob: -3.2452383041381836
    6. 'pow' → logprob: -4.495238304138184
    7. 'factor' → logprob: -5.495238304138184
    8. 'fact' → logprob: -6.370238304138184
    9. 'def' → logprob: -6.745238304138184
    10. '(math' → logprob: -6.870238304138184

Token 313: ' +' (ID: 659)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6397974491119385
    2. '+' → logprob: -0.7647974491119385
    3. ' +' → logprob: -5.014797210693359
    4. ' ' → logprob: -7.889797210693359
    5. '```' → logprob: -10.26479721069336
    6. 'import' → logprob: -10.38979721069336
    7. '2' → logprob: -10.51479721069336
    8. '   ' → logprob: -12.13979721069336
    9. '10' → logprob: -12.26479721069336
    10. '100' → logprob: -12.26479721069336

Token 314: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.292907877039397e-06
    2. '   ' → logprob: -13.62500286102295
    3. ' ' → logprob: -14.00000286102295
    4. '2' → logprob: -14.50000286102295
    5. 'value' → logprob: -15.62500286102295
    6. '```' → logprob: -15.62500286102295
    7. '+' → logprob: -16.687503814697266
    8. 'result' → logprob: -16.875003814697266
    9. '
' → logprob: -17.812503814697266
    10. 'int' → logprob: -18.000003814697266

Token 315: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.054500666621607e-06
    2. ' ' → logprob: -13.50000286102295
    3. '2' → logprob: -14.12500286102295
    4. '```' → logprob: -14.81250286102295
    5. '   ' → logprob: -15.50000286102295
    6. '１' → logprob: -17.062503814697266
    7. '
' → logprob: -17.375003814697266
    8. 'value' → logprob: -17.562503814697266
    9. '۱' → logprob: -17.750003814697266
    10. '+' → logprob: -18.187503814697266

Token 316: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004230954684317112
    2. ' ,' → logprob: -5.754230976104736
    3. ',value' → logprob: -7.004230976104736
    4. ')' → logprob: -9.004230499267578
    5. ',
' → logprob: -11.379230499267578
    6. '%' → logprob: -12.754230499267578
    7. 'value' → logprob: -13.379230499267578
    8. ')%' → logprob: -13.629230499267578
    9. ' %' → logprob: -14.004230499267578
    10. '%,' → logprob: -14.254230499267578

Token 317: ' value' (ID: 1432)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.12693388760089874
    2. ' value' → logprob: -2.1269338130950928
    3. '"value' → logprob: -13.501934051513672
    4. ')value' → logprob: -13.876934051513672
    5. ''value' → logprob: -14.251934051513672
    6. ' ' → logprob: -14.376934051513672
    7. '	value' → logprob: -14.626934051513672
    8. '```' → logprob: -14.751934051513672
    9. '   ' → logprob: -15.251934051513672
    10. '$value' → logprob: -15.376934051513672

Token 318: '_mod' (ID: 15325)
  Prédit: '_mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mod' → logprob: -0.00017028623551595956
    2. 'mod' → logprob: -8.750170707702637
    3. ')' → logprob: -12.250170707702637
    4. '_MOD' → logprob: -13.750170707702637
    5. '_m' → logprob: -13.875170707702637
    6. 'r' → logprob: -14.125170707702637
    7. '_r' → logprob: -14.750170707702637
    8. '_' → logprob: -15.000170707702637
    9. '	mod' → logprob: -15.125170707702637
    10. ',' → logprob: -15.250170707702637

Token 319: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0029319413006305695
    2. ' )' → logprob: -6.377932071685791
    3. ')%' → logprob: -6.877932071685791
    4. '%' → logprob: -9.002931594848633
    5. '%)' → logprob: -9.752931594848633
    6. ',' → logprob: -12.002931594848633
    7. ' %' → logprob: -12.377931594848633
    8. ')
' → logprob: -12.627931594848633
    9. ' %)' → logprob: -14.252931594848633
    10. '   ' → logprob: -14.377931594848633

Token 320: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.05492358282208443
    2. ' %' → logprob: -2.9299235343933105
    3. '%
' → logprob: -11.179924011230469
    4. '%c' → logprob: -11.679924011230469
    5. ')' → logprob: -12.679924011230469
    6. '%n' → logprob: -13.054924011230469
    7. '%e' → logprob: -13.429924011230469
    8. ' %=' → logprob: -13.429924011230469
    9. '%s' → logprob: -13.554924011230469
    10. '   ' → logprob: -13.554924011230469

Token 321: ' value' (ID: 1432)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.00012356207298580557
    2. ' value' → logprob: -9.000123977661133
    3. '(value' → logprob: -16.375123977661133
    4. '"value' → logprob: -19.000123977661133
    5. '
' → logprob: -19.375123977661133
    6. '```' → logprob: -20.750123977661133
    7. ''value' → logprob: -20.875123977661133
    8. '$value' → logprob: -21.375123977661133
    9. '[value' → logprob: -21.625123977661133
    10. '   ' → logprob: -21.750123977661133

Token 322: '_mod' (ID: 15325)
  Prédit: '_mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mod' → logprob: -3.166338137816638e-05
    2. 'mod' → logprob: -10.375031471252441
    3. '_MOD' → logprob: -15.500031471252441
    4. '	mod' → logprob: -15.625031471252441
    5. '```' → logprob: -17.125032424926758
    6. ' мод' → logprob: -17.125032424926758
    7. 'Mod' → logprob: -17.875032424926758
    8. '_' → logprob: -18.375032424926758
    9. '_Mod' → logprob: -18.375032424926758
    10. '_m' → logprob: -19.250032424926758

Token 323: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004862753674387932
    2. '
' → logprob: -5.5048627853393555
    3. 'return' → logprob: -8.004862785339355
    4. ' return' → logprob: -8.379862785339355
    5. '    
' → logprob: -9.004862785339355
    6. '	return' → logprob: -10.504862785339355
    7. ',' → logprob: -10.629862785339355
    8. '<|end|>' → logprob: -11.129862785339355
    9. ':return' → logprob: -12.004862785339355
    10. ' 
' → logprob: -12.004862785339355

Token 324: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018969999626278877
    2. '
' → logprob: -4.143970012664795
    3. ' return' → logprob: -6.518970012664795
    4. 'return' → logprob: -7.268970012664795
    5. '    
' → logprob: -7.893970012664795
    6. '	return' → logprob: -8.893969535827637
    7. ' 
' → logprob: -9.018969535827637
    8. ',' → logprob: -10.518969535827637
    9. ',
' → logprob: -10.643969535827637
    10. ':return' → logprob: -10.893969535827637

Token 325: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1395503580570221
    2. 'return' (adapté à ' return') → logprob: -2.3895504474639893
    3. ' return' → logprob: -3.2645504474639893
    4. '	return' → logprob: -8.76455020904541
    5. ' ' → logprob: -9.63955020904541
    6. '
' → logprob: -10.01455020904541
    7. '       ' → logprob: -10.26455020904541
    8. '    
' → logprob: -10.88955020904541
    9. ' 
' → logprob: -11.13955020904541
    10. '```' → logprob: -11.63955020904541

Token 326: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.16022473573684692
    2. ' result' → logprob: -1.9102246761322021
    3. '(result' → logprob: -14.410224914550781
    4. '	result' → logprob: -17.16022491455078
    5. 'res' → logprob: -18.66022491455078
    6. '   ' → logprob: -18.91022491455078
    7. ' ' → logprob: -19.03522491455078
    8. '$result' → logprob: -19.41022491455078
    9. '=result' → logprob: -19.41022491455078
    10. '[result' → logprob: -19.41022491455078

Token 327: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.16693998873233795
    2. '   ' → logprob: -2.5419399738311768
    3. '<|end|>' → logprob: -2.9169399738311768
    4. '    
' → logprob: -4.916940212249756
    5. '
' → logprob: -5.166940212249756
    6. ' 
' → logprob: -6.166940212249756
    7. '```' → logprob: -6.291940212249756
    8. ' ' → logprob: -6.916940212249756
    9. '  
' → logprob: -7.166940212249756
    10. ' def' → logprob: -7.416940212249756

Token 328: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0553940087556839
    2. '
' → logprob: -3.055393934249878
    3. '    
' → logprob: -6.055394172668457
    4. ' 
' → logprob: -6.055394172668457
    5. ' def' → logprob: -7.680394172668457
    6. '   
' → logprob: -7.680394172668457
    7. '  
' → logprob: -8.055394172668457
    8. '   ' → logprob: -8.055394172668457
    9. '\' → logprob: -9.180394172668457
    10. '#' → logprob: -9.680394172668457

Token 329: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.25194334983825684
    2. ' mod' → logprob: -1.5019433498382568
    3. 'def' → logprob: -11.501943588256836
    4. 'pow' → logprob: -13.001943588256836
    5. '	mod' → logprob: -14.001943588256836
    6. ' def' → logprob: -15.126943588256836
    7. '_mod' → logprob: -15.251943588256836
    8. ' pow' → logprob: -15.751943588256836
    9. '(mod' → logprob: -16.251943588256836
    10. ' modular' → logprob: -16.876943588256836

Token 330: 'inv' (ID: 31086)
  Prédit: 'inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -1.7954958821064793e-05
    2. '_inv' → logprob: -11.000018119812012
    3. ' inv' → logprob: -14.625018119812012
    4. 'pow' → logprob: -15.125018119812012
    5. 'inverse' → logprob: -15.500018119812012
    6. 'int' → logprob: -15.875018119812012
    7. 'def' → logprob: -16.250017166137695
    8. 'in' → logprob: -17.750017166137695
    9. '_inverse' → logprob: -18.000017166137695
    10. 'import' → logprob: -18.500017166137695

Token 331: '_mod' (ID: 15325)
  Prédit: '_mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mod' → logprob: -1.9361264946837764e-07
    2. '_' → logprob: -16.125
    3. ' _' → logprob: -16.75
    4. '_Mod' → logprob: -18.25
    5. '```' → logprob: -18.375
    6. '_m' → logprob: -18.5
    7. '_MOD' → logprob: -18.625
    8. '(_' → logprob: -18.875
    9. '##_' → logprob: -19.625
    10. '_mode' → logprob: -19.875

Token 332: '(value' (ID: 6333)
  Prédit: '(value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(value' → logprob: -0.04967225342988968
    2. '(' → logprob: -3.7996723651885986
    3. '(a' → logprob: -4.1746721267700195
    4. '(num' → logprob: -5.1746721267700195
    5. '(x' → logprob: -5.6746721267700195
    6. '(number' → logprob: -7.4246721267700195
    7. '(n' → logprob: -7.5496721267700195
    8. ' (' → logprob: -8.42467212677002
    9. '_mod' → logprob: -9.04967212677002
    10. '(val' → logprob: -9.79967212677002

Token 333: '_a' (ID: 10852)
  Prédit: '_mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mod' → logprob: -0.1625986099243164
    2. ',' → logprob: -2.5375986099243164
    3. '_,' → logprob: -3.2875986099243164
    4. '_' → logprob: -4.412598609924316
    5. '_n' → logprob: -4.537598609924316
    6. '_a' → logprob: -5.912598609924316
    7. 'n' → logprob: -6.412598609924316
    8. 'a' → logprob: -6.662598609924316
    9. '_value' → logprob: -6.912598609924316
    10. '_m' → logprob: -7.287598609924316

Token 334: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00017183588352054358
    2. ',value' → logprob: -9.250171661376953
    3. ' ,' → logprob: -9.500171661376953
    4. 'value' → logprob: -15.625171661376953
    5. ',val' → logprob: -16.250171661376953
    6. ',
' → logprob: -16.750171661376953
    7. ',a' → logprob: -17.000171661376953
    8. 'a' → logprob: -17.250171661376953
    9. '‌,' → logprob: -17.250171661376953
    10. '_,' → logprob: -17.375171661376953

Token 335: ' value' (ID: 1432)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.029754308983683586
    2. ' value' → logprob: -3.529754400253296
    3. ')value' → logprob: -13.904754638671875
    4. ' ' → logprob: -14.529754638671875
    5. 'mod' → logprob: -14.529754638671875
    6. '	value' → logprob: -15.029754638671875
    7. ')' → logprob: -15.404754638671875
    8. 'alue' → logprob: -15.529754638671875
    9. '"value' → logprob: -15.779754638671875
    10. 'Value' → logprob: -15.904754638671875

Token 336: '_mod' (ID: 15325)
  Prédit: '_mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mod' → logprob: -0.0009005005122162402
    2. 'mod' → logprob: -7.2509002685546875
    3. '_b' → logprob: -9.625900268554688
    4. '_m' → logprob: -9.750900268554688
    5. 'b' → logprob: -10.250900268554688
    6. '):
' → logprob: -11.000900268554688
    7. 'a' → logprob: -12.750900268554688
    8. ')' → logprob: -13.000900268554688
    9. '_MOD' → logprob: -13.000900268554688
    10. '_a' → logprob: -13.125900268554688

Token 337: '=' (ID: 28)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -4.56102097814437e-05
    2. '):
' → logprob: -10.125045776367188
    3. ' ):' → logprob: -12.500045776367188
    4. '=' → logprob: -14.000045776367188
    5. ')' → logprob: -14.250045776367188
    6. '):

' → logprob: -16.500045776367188
    7. '   ' → logprob: -16.625045776367188
    8. '):
' → logprob: -16.625045776367188
    9. ':' → logprob: -16.750045776367188
    10. ',' → logprob: -18.250045776367188

Token 338: 'CONST' (ID: 168319)
  Prédit: 'CONST'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'CONST' → logprob: -3.833878508885391e-05
    2. ' CONST' → logprob: -10.250038146972656
    3. 'CON' → logprob: -13.750038146972656
    4. 'const' → logprob: -13.750038146972656
    5. '_CONST' → logprob: -15.000038146972656
    6. '10' → logprob: -15.375038146972656
    7. 'Const' → logprob: -15.500038146972656
    8. '   ' → logprob: -17.750038146972656
    9. '```' → logprob: -18.125038146972656
    10. ' ' → logprob: -18.125038146972656

Token 339: '_MOD' (ID: 45275)
  Prédit: '_mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mod' → logprob: -0.11310616880655289
    2. '_MOD' → logprob: -2.2381062507629395
    3. 'a' → logprob: -8.363105773925781
    4. 'MOD' → logprob: -10.613105773925781
    5. '_Mod' → logprob: -11.363105773925781
    6. '_a' → logprob: -11.613105773925781
    7. '
' → logprob: -13.738105773925781
    8. 'Mod' → logprob: -13.988105773925781
    9. 'mod' → logprob: -14.113105773925781
    10. '```' → logprob: -14.488105773925781

Token 340: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -4.966313281329349e-05
    2. '):
' → logprob: -10.000049591064453
    3. ')' → logprob: -12.750049591064453
    4. ' ):' → logprob: -14.375049591064453
    5. '):

' → logprob: -14.875049591064453
    6. '):
' → logprob: -15.500049591064453
    7. '   ' → logprob: -15.500049591064453
    8. ',' → logprob: -17.750049591064453
    9. 'def' → logprob: -18.000049591064453
    10. ')：' → logprob: -18.000049591064453

Token 341: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006797884125262499
    2. '    
' → logprob: -8.750679969787598
    3. ' if' → logprob: -9.000679969787598
    4. ' for' → logprob: -9.625679969787598
    5. ' x' → logprob: -9.625679969787598
    6. 'a' → logprob: -9.750679969787598
    7. ' value' → logprob: -10.125679969787598
    8. '    ' → logprob: -10.750679969787598
    9. ' inverse' → logprob: -10.750679969787598
    10. ' a' → logprob: -10.875679969787598

Token 342: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.008773165754973888
    2. '   ' → logprob: -4.758773326873779
    3. ' return' → logprob: -9.008772850036621
    4. 'value' → logprob: -11.258772850036621
    5. '	return' → logprob: -11.758772850036621
    6. 'b' → logprob: -12.008772850036621
    7. '    
' → logprob: -13.258772850036621
    8. 'pow' → logprob: -13.383772850036621
    9. 'a' → logprob: -13.508772850036621
    10. '```' → logprob: -13.633772850036621

Token 343: ' pow' (ID: 9779)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -6.704273118884885e-07
    2. ' pow' → logprob: -14.250000953674316
    3. 'power' → logprob: -17.125
    4. '(pow' → logprob: -19.25
    5. '_pow' → logprob: -19.75
    6. 'mod' → logprob: -20.375
    7. 'value' → logprob: -22.0
    8. 'Pow' → logprob: -22.625
    9. '

' → logprob: -23.25
    10. '   ' → logprob: -23.5

Token 344: '(value' (ID: 6333)
  Prédit: '(value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(value' → logprob: -0.00030066570616327226
    2. '(' → logprob: -8.125300407409668
    3. '(
' → logprob: -12.875300407409668
    4. 'value' → logprob: -13.125300407409668
    5. ',value' → logprob: -17.625301361083984
    6. ')value' → logprob: -17.750301361083984
    7. '[value' → logprob: -18.250301361083984
    8. '$value' → logprob: -18.625301361083984
    9. '=value' → logprob: -18.750301361083984
    10. '"value' → logprob: -18.875301361083984

Token 345: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.0028417224530130625
    2. 'a' → logprob: -5.877841949462891
    3. 'value' → logprob: -10.37784194946289
    4. '_value' → logprob: -13.37784194946289
    5. '(value' → logprob: -14.12784194946289
    6. ',' → logprob: -14.37784194946289
    7. ',value' → logprob: -14.37784194946289
    8. '[value' → logprob: -15.00284194946289
    9. '_mod' → logprob: -15.12784194946289
    10. ' a' → logprob: -15.12784194946289

Token 346: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4751189053058624
    2. ',value' → logprob: -0.97511887550354
    3. 'value' → logprob: -7.350119113922119
    4. '(value' → logprob: -8.100118637084961
    5. ' ,' → logprob: -9.350118637084961
    6. ',
' → logprob: -12.475118637084961
    7. ' value' → logprob: -13.600118637084961
    8. ',val' → logprob: -13.600118637084961
    9. ')value' → logprob: -15.100118637084961
    10. '(' → logprob: -15.475118637084961

Token 347: ' value' (ID: 1432)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -9.019237768370658e-05
    2. ' value' → logprob: -9.375090599060059
    3. '"value' → logprob: -13.500090599060059
    4. '<|end|>' → logprob: -13.875090599060059
    5. '	value' → logprob: -14.500090599060059
    6. ')value' → logprob: -14.625090599060059
    7. '-value' → logprob: -14.875090599060059
    8. '$value' → logprob: -14.875090599060059
    9. '
' → logprob: -15.375090599060059
    10. ''value' → logprob: -15.375090599060059

Token 348: '_mod' (ID: 15325)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6563782691955566
    2. 'value' → logprob: -0.7813782691955566
    3. '_mod' → logprob: -3.9063782691955566
    4. 'mod' → logprob: -7.031378269195557
    5. ' value' → logprob: -7.531378269195557
    6. '-mod' → logprob: -7.656378269195557
    7. '.value' → logprob: -7.906378269195557
    8. '(value' → logprob: -8.281377792358398
    9. '[value' → logprob: -8.406377792358398
    10. '_value' → logprob: -9.156377792358398

Token 349: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0024756586644798517
    2. ' -' → logprob: -6.002475738525391
    3. '−' → logprob: -19.75247573852539
    4. ' ' → logprob: -19.87747573852539
    5. '```' → logprob: -19.87747573852539
    6. ' ' → logprob: -20.87747573852539
    7. '   ' → logprob: -21.75247573852539
    8. '()-' → logprob: -22.00247573852539
    9. '{-' → logprob: -22.00247573852539
    10. '–' → logprob: -22.00247573852539

Token 350: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.250000953674316
    3. '۲' → logprob: -18.0
    4. '２' → logprob: -18.9375
    5. '
' → logprob: -19.25
    6. '-' → logprob: -19.375
    7. '```' → logprob: -19.625
    8. '٢' → logprob: -20.0
    9. '২' → logprob: -20.375
    10. '२' → logprob: -20.375

Token 351: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.125
    3. '
' → logprob: -18.75
    4. '-' → logprob: -18.875
    5. '۲' → logprob: -19.375
    6. '

' → logprob: -19.75
    7. '```' → logprob: -19.75
    8. '２' → logprob: -20.0
    9. '
' → logprob: -20.875
    10. '٢' → logprob: -21.0625

Token 352: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00034630970912985504
    2. ' ,' → logprob: -8.000346183776855
    3. ')' → logprob: -11.875346183776855
    4. ',value' → logprob: -13.000346183776855
    5. '   ' → logprob: -13.875346183776855
    6. ',
' → logprob: -14.625346183776855
    7. ' )' → logprob: -16.375347137451172
    8. ' ' → logprob: -17.250347137451172
    9. '```' → logprob: -17.500347137451172
    10. '  ' → logprob: -18.875347137451172

Token 353: ' value' (ID: 1432)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.02324547804892063
    2. ' value' → logprob: -3.7732455730438232
    3. '"value' → logprob: -18.273244857788086
    4. '   ' → logprob: -18.398244857788086
    5. ')value' → logprob: -18.773244857788086
    6. '_value' → logprob: -19.023244857788086
    7. '	value' → logprob: -19.273244857788086
    8. '```' → logprob: -19.398244857788086
    9. '    ' → logprob: -19.523244857788086
    10. '$value' → logprob: -19.523244857788086

Token 354: '_mod' (ID: 15325)
  Prédit: '_mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mod' → logprob: -0.00037371189682744443
    2. 'mod' → logprob: -8.000373840332031
    3. ')' → logprob: -10.250373840332031
    4. '_MOD' → logprob: -13.750373840332031
    5. 'Mod' → logprob: -14.250373840332031
    6. 'value' → logprob: -15.125373840332031
    7. '```' → logprob: -15.875373840332031
    8. 'MOD' → logprob: -16.00037384033203
    9. ')`' → logprob: -16.62537384033203
    10. 'omod' → logprob: -16.62537384033203

Token 355: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.512236498361744e-07
    2. ')
' → logprob: -14.875000953674316
    3. ' )' → logprob: -16.0
    4. ')return' → logprob: -19.625
    5. '   ' → logprob: -20.125
    6. ')#' → logprob: -20.375
    7. ')`' → logprob: -20.625
    8. ')

' → logprob: -20.625
    9. '))' → logprob: -20.75
    10. '),' → logprob: -20.75

Token 356: 'def' (ID: 1314)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.39568647742271423
    2. '<|end|>' → logprob: -1.1456865072250366
    3. ')' → logprob: -6.020686626434326
    4. ' if' → logprob: -6.520686626434326
    5. '
' → logprob: -7.145686626434326
    6. '[' → logprob: -7.270686626434326
    7. '<|end|>' → logprob: -7.270686626434326
    8. '#' → logprob: -7.270686626434326
    9. '   ' → logprob: -7.520686626434326
    10. ',' → logprob: -8.020686149597168

Token 357: ' ext' (ID: 1936)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.003175932914018631
    2. '_main' → logprob: -6.753175735473633
    3. 'main' → logprob: -7.378175735473633
    4. 'if' → logprob: -7.378175735473633
    5. '_' → logprob: -7.503175735473633
    6. ' __' → logprob: -8.878175735473633
    7. '_if' → logprob: -11.503175735473633
    8. '_validate' → logprob: -11.503175735473633
    9. ' main' → logprob: -11.878175735473633
    10. '_run' → logprob: -12.253175735473633

Token 358: '_g' (ID: 5439)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.04576386883854866
    2. 'def' → logprob: -3.1707639694213867
    3. '_g' → logprob: -6.545763969421387
    4. ' gcd' → logprob: -7.295763969421387
    5. 'ended' → logprob: -8.045763969421387
    6. '```' → logprob: -9.420763969421387
    7. 'd' → logprob: -9.795763969421387
    8. 'eded' → logprob: -10.545763969421387
    9. 'cd' → logprob: -10.545763969421387
    10. 'a' → logprob: -10.920763969421387

Token 359: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -1.1472419600977446e-06
    2. '```' → logprob: -14.750000953674316
    3. '_cd' → logprob: -15.000000953674316
    4. 'reat' → logprob: -15.875000953674316
    5. 'c' → logprob: -16.375001907348633
    6. 'cm' → logprob: -16.875001907348633
    7. 'cf' → logprob: -17.250001907348633
    8. '[' → logprob: -17.250001907348633
    9. 'CD' → logprob: -17.375001907348633
    10. 'def' → logprob: -17.500001907348633

Token 360: '(value' (ID: 6333)
  Prédit: '(value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(value' → logprob: -0.27656182646751404
    2. '(' → logprob: -1.9015618562698364
    3. '(a' → logprob: -2.401561737060547
    4. '_(' → logprob: -7.276561737060547
    5. '(x' → logprob: -7.901561737060547
    6. '(val' → logprob: -8.151561737060547
    7. '(_' → logprob: -9.026561737060547
    8. '_' → logprob: -9.776561737060547
    9. ' (' → logprob: -10.151561737060547
    10. '(v' → logprob: -11.026561737060547

Token 361: '_a' (ID: 10852)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.7082117795944214
    2. '_a' → logprob: -0.8332117795944214
    3. '_(' → logprob: -3.333211898803711
    4. '_' → logprob: -3.958211898803711
    5. '_func' → logprob: -4.958211898803711
    6. 'a' → logprob: -5.833211898803711
    7. '_ext' → logprob: -6.208211898803711
    8. '_mod' → logprob: -6.458211898803711
    9. '_g' → logprob: -6.458211898803711
    10. '_extended' → logprob: -7.333211898803711

Token 362: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011105302110081539
    2. ',value' → logprob: -9.125110626220703
    3. ' ,' → logprob: -13.500110626220703
    4. '‌,' → logprob: -14.750110626220703
    5. '<|end|>' → logprob: -15.875110626220703
    6. ',
' → logprob: -16.375110626220703
    7. ',val' → logprob: -17.000110626220703
    8. '_,' → logprob: -17.000110626220703
    9. 'value' → logprob: -17.375110626220703
    10. 'a' → logprob: -17.750110626220703

Token 363: ' value' (ID: 1432)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.014174560084939003
    2. ' value' → logprob: -4.264174461364746
    3. '<|end|>' → logprob: -11.639174461364746
    4. ' ' → logprob: -14.264174461364746
    5. '	value' → logprob: -14.514174461364746
    6. '(value' → logprob: -15.264174461364746
    7. '.value' → logprob: -16.139175415039062
    8. ')value' → logprob: -16.139175415039062
    9. '_value' → logprob: -16.264175415039062
    10. ''value' → logprob: -16.264175415039062

Token 364: '_b' (ID: 1535)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3600946366786957
    2. '_b' → logprob: -1.235094666481018
    3. 'b' → logprob: -5.1100945472717285
    4. ',b' → logprob: -5.2350945472717285
    5. ',
' → logprob: -10.235095024108887
    6. '_,' → logprob: -10.235095024108887
    7. ')' → logprob: -10.360095024108887
    8. 'alue' → logprob: -10.610095024108887
    9. '<|end|>' → logprob: -11.610095024108887
    10. '_r' → logprob: -11.985095024108887

Token 365: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07955817133188248
    2. ',' → logprob: -2.5795581340789795
    3. ' ):' → logprob: -7.579558372497559
    4. ')' → logprob: -9.454558372497559
    5. '):
' → logprob: -10.204558372497559
    6. ' ,' → logprob: -10.454558372497559
    7. ',value' → logprob: -12.079558372497559
    8. '):
' → logprob: -12.829558372497559
    9. ':' → logprob: -13.454558372497559
    10. ' ' → logprob: -14.954558372497559

Token 366: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011155464686453342
    2. '<|end|>' → logprob: -5.011155605316162
    3. ' if' → logprob: -6.011155605316162
    4. '	if' → logprob: -6.886155605316162
    5. 'if' → logprob: -7.386155605316162
    6. '<|end|>' → logprob: -9.011155128479004
    7. 'def' → logprob: -9.886155128479004
    8. ',' → logprob: -10.136155128479004
    9. 'a' → logprob: -11.198655128479004
    10. '    
' → logprob: -11.261155128479004

Token 367: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.047375909984111786
    2. '   ' → logprob: -3.5473759174346924
    3. ' if' → logprob: -4.047375679016113
    4. '	if' → logprob: -12.797375679016113
    5. 'a' → logprob: -17.04737663269043
    6. 'def' → logprob: -17.04737663269043
    7. ' ' → logprob: -17.42237663269043
    8. '    ' → logprob: -17.54737663269043
    9. '  ' → logprob: -18.17237663269043
    10. '    
' → logprob: -18.17237663269043

Token 368: ' value' (ID: 1432)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.12693262100219727
    2. ' value' → logprob: -2.1269326210021973
    3. ' not' → logprob: -13.001932144165039
    4. 'not' → logprob: -13.626932144165039
    5. ' ' → logprob: -14.876932144165039
    6. '(value' → logprob: -15.376932144165039
    7. '   ' → logprob: -15.376932144165039
    8. '0' → logprob: -15.876932144165039
    9. '	value' → logprob: -16.37693214416504
    10. '  ' → logprob: -17.50193214416504

Token 369: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.048651520162820816
    2. '_b' → logprob: -3.0486514568328857
    3. 'a' → logprob: -9.673651695251465
    4. '==' → logprob: -14.173651695251465
    5. 'b' → logprob: -14.798651695251465
    6. '```' → logprob: -17.92365074157715
    7. '	a' → logprob: -18.29865074157715
    8. '=' → logprob: -19.04865074157715
    9. '   ' → logprob: -19.29865074157715
    10. '===' → logprob: -19.42365074157715

Token 370: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.014367637224495411
    2. ' ==' → logprob: -4.264367580413818
    3. '=' → logprob: -8.514368057250977
    4. '==
' → logprob: -13.889368057250977
    5. '%' → logprob: -14.139368057250977
    6. '===' → logprob: -14.264368057250977
    7. ' =' → logprob: -14.764368057250977
    8. ')==' → logprob: -15.389368057250977
    9. ']==' → logprob: -15.764368057250977
    10. '0' → logprob: -16.014368057250977

Token 371: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.493430894101039e-05
    2. ' ' → logprob: -9.500075340270996
    3. '   ' → logprob: -22.00007438659668
    4. '۰' → logprob: -22.75007438659668
    5. '０' → logprob: -24.12507438659668
    6. '00' → logprob: -24.50007438659668
    7. '000' → logprob: -25.25007438659668
    8. '  ' → logprob: -25.25007438659668
    9. '```' → logprob: -25.62507438659668
    10. '<|end|>' → logprob: -26.37507438659668

Token 372: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.500003814697266
    3. '   ' → logprob: -21.375003814697266
    4. '۰' → logprob: -21.875003814697266
    5. '０' → logprob: -22.375003814697266
    6. '```' → logprob: -23.750003814697266
    7. '  ' → logprob: -24.125003814697266
    8. '00' → logprob: -24.375003814697266
    9. '000' → logprob: -24.500003814697266
    10. ' ' → logprob: -24.750003814697266

Token 373: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2922913730144501
    2. ':
' → logprob: -1.4172914028167725
    3. ':return' → logprob: -4.542291164398193
    4. '   ' → logprob: -8.542291641235352
    5. ',' → logprob: -8.917291641235352
    6. ' and' → logprob: -10.542291641235352
    7. '<|end|>' → logprob: -10.542291641235352
    8. '       ' → logprob: -11.167291641235352
    9. '):
' → logprob: -11.542291641235352
    10. ' or' → logprob: -12.167291641235352

Token 374: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19004015624523163
    2. ' return' → logprob: -2.315040111541748
    3. '(value' → logprob: -3.690040111541748
    4. 'return' → logprob: -3.690040111541748
    5. ' (' → logprob: -3.815040111541748
    6. ' value' → logprob: -6.940040111541748
    7. 'value' → logprob: -7.190040111541748
    8. '(' → logprob: -8.565040588378906
    9. '       ' → logprob: -9.065040588378906
    10. '	return' → logprob: -9.190040588378906

Token 375: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25560110807418823
    2. 'return' (adapté à ' return') → logprob: -1.630601167678833
    3. ' return' → logprob: -3.880601167678833
    4. '(return' → logprob: -5.630600929260254
    5. '(' → logprob: -6.005600929260254
    6. '(value' → logprob: -6.130600929260254
    7. '	return' → logprob: -7.880600929260254
    8. ' (' → logprob: -8.255600929260254
    9. '{return' → logprob: -8.880600929260254
    10. '    
' → logprob: -10.630600929260254

Token 376: ' value' (ID: 1432)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.005354720633476973
    2. '(value' → logprob: -5.255354881286621
    3. ' value' → logprob: -9.755354881286621
    4. '(' → logprob: -9.755354881286621
    5. ' (' → logprob: -12.505354881286621
    6. '"value' → logprob: -14.505354881286621
    7. ')value' → logprob: -15.880354881286621
    8. ',value' → logprob: -16.005353927612305
    9. '-value' → logprob: -16.380353927612305
    10. '_value' → logprob: -16.380353927612305

Token 377: '_b' (ID: 1535)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.02461402304470539
    2. '_b' → logprob: -4.024613857269287
    3. '_value' → logprob: -5.149613857269287
    4. 'b' → logprob: -8.149614334106445
    5. ' value' → logprob: -8.649614334106445
    6. ',value' → logprob: -9.399614334106445
    7. '(value' → logprob: -10.149614334106445
    8. '"value' → logprob: -10.899614334106445
    9. '_,' → logprob: -11.524614334106445
    10. '0' → logprob: -11.524614334106445

Token 378: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.1318875446449965e-05
    2. ',value' → logprob: -10.250041007995605
    3. ',b' → logprob: -13.000041007995605
    4. '(),' → logprob: -14.000041007995605
    5. ' ,' → logprob: -14.125041007995605
    6. ',val' → logprob: -14.500041007995605
    7. '_,' → logprob: -14.750041007995605
    8. ',None' → logprob: -15.250041007995605
    9. 'value' → logprob: -15.875041007995605
    10. ',y' → logprob: -16.000041961669922

Token 379: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.125
    3. '(' → logprob: -20.875
    4. 'value' → logprob: -21.5
    5. '```' → logprob: -21.5
    6. '۰' → logprob: -21.75
    7. 'None' → logprob: -22.125
    8. '1' → logprob: -22.125
    9. '   ' → logprob: -22.375
    10. '
' → logprob: -22.625

Token 380: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -18.625
    3. 'value' → logprob: -18.75
    4. '1' → logprob: -21.125
    5. '(' → logprob: -21.5
    6. '```' → logprob: -22.0
    7. '۰' → logprob: -22.375
    8. 'None' → logprob: -23.25
    9. '
' → logprob: -23.5625
    10. '00' → logprob: -23.6875

Token 381: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.2664456789934775e-06
    2. ' ,' → logprob: -13.750000953674316
    3. ',
' → logprob: -16.375001907348633
    4. '0' → logprob: -16.875001907348633
    5. '<|end|>' → logprob: -17.250001907348633
    6. ',\
' → logprob: -17.500001907348633
    7. '1' → logprob: -18.125001907348633
    8. ',None' → logprob: -18.125001907348633
    9. '‌,' → logprob: -18.875001907348633
    10. ' ' → logprob: -19.250001907348633

Token 382: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -13.875000953674316
    3. 'value' → logprob: -17.625001907348633
    4. '0' → logprob: -21.625001907348633
    5. '```' → logprob: -21.875001907348633
    6. '   ' → logprob: -22.375001907348633
    7. ' value' → logprob: -22.625001907348633
    8. '<|end|>' → logprob: -24.000001907348633
    9. '
' → logprob: -24.250001907348633
    10. '۱' → logprob: -25.000001907348633

Token 383: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -20.0
    3. 'value' → logprob: -22.0
    4. '0' → logprob: -23.75
    5. '１' → logprob: -24.625
    6. '```' → logprob: -25.125
    7. '<|end|>' → logprob: -25.5
    8. '۱' → logprob: -25.875
    9. '১' → logprob: -26.0
    10. '१' → logprob: -27.5

Token 384: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3615805208683014
    2. '
' → logprob: -1.361580491065979
    3. '    
' → logprob: -3.1115806102752686
    4. '   
' → logprob: -6.8615803718566895
    5. '  
' → logprob: -7.4865803718566895
    6. '<|end|>' → logprob: -7.9865803718566895
    7. '\n' → logprob: -8.361580848693848
    8. ' 
' → logprob: -9.111580848693848
    9. '	
' → logprob: -9.236580848693848
    10. ',' → logprob: -9.361580848693848

Token 385: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006658772937953472
    2. '    
' → logprob: -5.131658554077148
    3. '
' → logprob: -7.881658554077148
    4. '   
' → logprob: -8.756658554077148
    5. '<|end|>' → logprob: -9.631658554077148
    6. '  
' → logprob: -10.131658554077148
    7. ' 
' → logprob: -10.381658554077148
    8. '	
' → logprob: -11.506658554077148
    9. 'def' → logprob: -11.506658554077148
    10. '\n' → logprob: -11.631658554077148

Token 386: ' else' (ID: 1203)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.44378662109375
    2. '   ' → logprob: -1.06878662109375
    3. 'else' (adapté à ' else') → logprob: -4.94378662109375
    4. '    
' → logprob: -5.56878662109375
    5. '
' → logprob: -6.94378662109375
    6. 'def' → logprob: -7.31878662109375
    7. ' else' → logprob: -7.44378662109375
    8. 'value' → logprob: -7.81878662109375
    9. ' a' → logprob: -8.31878662109375
    10. 'x' → logprob: -8.56878662109375

Token 387: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.49534234404563904
    2. '<|end|>' → logprob: -1.7453423738479614
    3. '   ' → logprob: -1.8703423738479614
    4. ':' → logprob: -3.620342254638672
    5. ',' → logprob: -4.620342254638672
    6. ':
' → logprob: -5.745342254638672
    7. '```' → logprob: -5.995342254638672
    8. ' gcd' → logprob: -6.245342254638672
    9. ':return' → logprob: -6.245342254638672
    10. 'value' → logprob: -6.245342254638672

Token 388: '       ' (ID: 309)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7101380825042725
    2. '       ' → logprob: -1.2101380825042725
    3. '   ' → logprob: -2.4601380825042725
    4. 'value' → logprob: -3.3351380825042725
    5. 'r' → logprob: -3.8351380825042725
    6. 'x' → logprob: -4.085138320922852
    7. ' a' → logprob: -4.960138320922852
    8. 'rec' → logprob: -5.085138320922852
    9. 'val' → logprob: -5.210138320922852
    10. '<|end|>' → logprob: -5.710138320922852

Token 389: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' (adapté à ' g') → logprob: -0.02356700785458088
    2. ' gcd' → logprob: -3.898566961288452
    3. 'value' → logprob: -6.773567199707031
    4. 'd' → logprob: -7.273567199707031
    5. 'val' → logprob: -7.523567199707031
    6. 'r' → logprob: -8.148567199707031
    7. ' g' → logprob: -9.148567199707031
    8. 'res' → logprob: -9.648567199707031
    9. 'rec' → logprob: -9.898567199707031
    10. 'b' → logprob: -10.523567199707031

Token 390: ',' (ID: 11)
  Prédit: 'cd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -0.11975820362567902
    2. ',' → logprob: -2.244758129119873
    3. '_cd' → logprob: -5.494758129119873
    4. '_val' → logprob: -6.744758129119873
    5. '_value' → logprob: -7.619758129119873
    6. ',g' → logprob: -7.869758129119873
    7. ',_' → logprob: -8.869758605957031
    8. '_g' → logprob: -8.869758605957031
    9. 'CD' → logprob: -9.744758605957031
    10. ',value' → logprob: -9.869758605957031

Token 391: ' y' (ID: 342)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.07893132418394089
    2. 'y' → logprob: -2.5789313316345215
    3. ' y' → logprob: -10.703930854797363
    4. ' x' → logprob: -10.953930854797363
    5. 'p' → logprob: -13.828930854797363
    6. 'm' → logprob: -14.828930854797363
    7. 'b' → logprob: -16.20393180847168
    8. 'xy' → logprob: -16.32893180847168
    9. '```' → logprob: -17.32893180847168
    10. 'value' → logprob: -17.45393180847168

Token 392: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003233070601709187
    2. ',x' → logprob: -8.125323295593262
    3. 'x' → logprob: -10.875323295593262
    4. ' ,' → logprob: -12.875323295593262
    5. ',z' → logprob: -13.750323295593262
    6. ',y' → logprob: -13.875323295593262
    7. ',g' → logprob: -14.000323295593262
    8. '=' → logprob: -14.750323295593262
    9. 's' → logprob: -14.875323295593262
    10. ',s' → logprob: -15.375323295593262

Token 393: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -5.836499985889532e-05
    2. ' x' → logprob: -9.7500581741333
    3. 'z' → logprob: -20.500059127807617
    4. '	x' → logprob: -21.250059127807617
    5. '```' → logprob: -22.375059127807617
    6. '"x' → logprob: -23.000059127807617
    7. 'y' → logprob: -23.125059127807617
    8. 'g' → logprob: -23.500059127807617
    9. 'a' → logprob: -24.750059127807617
    10. '_x' → logprob: -25.000059127807617

Token 394: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00861669983714819
    2. ' =' → logprob: -4.758616924285889
    3. ')=' → logprob: -14.63361644744873
    4. '<|end|>' → logprob: -15.13361644744873
    5. '=g' → logprob: -15.50861644744873
    6. '_=' → logprob: -15.50861644744873
    7. '	' → logprob: -15.75861644744873
    8. '=

' → logprob: -15.88361644744873
    9. '=
' → logprob: -16.008617401123047
    10. ',' → logprob: -16.383617401123047

Token 395: ' ext' (ID: 1936)
  Prédit: 'ext'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ext' → logprob: -0.005233882926404476
    2. ' ext' → logprob: -5.2552337646484375
    3. '(ext' → logprob: -16.630233764648438
    4. '_ext' → logprob: -17.380233764648438
    5. '*' → logprob: -17.630233764648438
    6. '.ext' → logprob: -18.505233764648438
    7. 'Ext' → logprob: -21.005233764648438
    8. '
' → logprob: -22.130233764648438
    9. 'extent' → logprob: -22.130233764648438
    10. '-ext' → logprob: -22.255233764648438

Token 396: '_g' (ID: 5439)
  Prédit: '_g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_g' → logprob: -1.8624639324116288e-06
    2. 'g' → logprob: -13.250001907348633
    3. '_gid' → logprob: -19.625001907348633
    4. '_' → logprob: -19.750001907348633
    5. ' gcd' → logprob: -20.375001907348633
    6. 'd' → logprob: -21.125001907348633
    7. '_gc' → logprob: -21.500001907348633
    8. 'gcc' → logprob: -21.625001907348633
    9. 'a' → logprob: -21.875001907348633
    10. '_G' → logprob: -21.875001907348633

Token 397: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -1.3306015716807451e-05
    2. 'g' → logprob: -12.00001335144043
    3. '_g' → logprob: -12.25001335144043
    4. 'cdf' → logprob: -13.75001335144043
    5. '_cd' → logprob: -14.87501335144043
    6. 'c' → logprob: -15.12501335144043
    7. ' gcd' → logprob: -15.25001335144043
    8. 'cdn' → logprob: -16.50001335144043
    9. 'CD' → logprob: -16.50001335144043
    10. 'd' → logprob: -18.00001335144043

Token 398: '(value' (ID: 6333)
  Prédit: '(value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(value' → logprob: -0.00011605957115534693
    2. 'value' → logprob: -9.375116348266602
    3. '(' → logprob: -10.625116348266602
    4. '(
' → logprob: -12.000116348266602
    5. '"value' → logprob: -15.500116348266602
    6. ')value' → logprob: -16.1251163482666
    7. '((' → logprob: -16.2501163482666
    8. ' value' → logprob: -16.3751163482666
    9. ',value' → logprob: -16.7501163482666
    10. ''value' → logprob: -17.1251163482666

Token 399: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.00010950337309623137
    2. 'b' → logprob: -9.125109672546387
    3. '_a' → logprob: -14.875109672546387
    4. '(value' → logprob: -16.25010871887207
    5. 'value' → logprob: -16.37510871887207
    6. 'a' → logprob: -17.87510871887207
    7. '%b' → logprob: -18.25010871887207
    8. 'B' → logprob: -18.87510871887207
    9. '	b' → logprob: -19.37510871887207
    10. '```' → logprob: -19.50010871887207

Token 400: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.029843280091881752
    2. ' %' → logprob: -3.529843330383301
    3. '%b' → logprob: -9.9048433303833
    4. '%s' → logprob: -10.9048433303833
    5. '%x' → logprob: -11.6548433303833
    6. 'value' → logprob: -11.9048433303833
    7. '%d' → logprob: -12.2798433303833
    8. '%i' → logprob: -12.7798433303833
    9. '%c' → logprob: -14.6548433303833
    10. '%B' → logprob: -15.2798433303833

Token 401: ' value' (ID: 1432)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -4.5491004129871726e-05
    2. ' value' → logprob: -10.000045776367188
    3. '"value' → logprob: -17.125045776367188
    4. ''value' → logprob: -17.750045776367188
    5. '(value' → logprob: -17.875045776367188
    6. '<|end|>' → logprob: -18.625045776367188
    7. ' ' → logprob: -19.000045776367188
    8. 'alue' → logprob: -19.000045776367188
    9. '	value' → logprob: -19.375045776367188
    10. '$value' → logprob: -19.375045776367188

Token 402: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.4740888178348541
    2. 'a' → logprob: -0.9740887880325317
    3. 'value' → logprob: -11.599088668823242
    4. ' a' → logprob: -14.224088668823242
    5. '{' → logprob: -14.849088668823242
    6. 'A' → logprob: -15.224088668823242
    7. '[' → logprob: -15.724088668823242
    8. '%' → logprob: -15.724088668823242
    9. '­a' → logprob: -15.974088668823242
    10. 'а' → logprob: -16.224088668823242

Token 403: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.816591434879228e-05
    2. ' ,' → logprob: -10.00008773803711
    3. ',value' → logprob: -10.25008773803711
    4. 'value' → logprob: -12.00008773803711
    5. ')' → logprob: -14.50008773803711
    6. ' value' → logprob: -15.00008773803711
    7. '),' → logprob: -15.87508773803711
    8. ',
' → logprob: -16.87508773803711
    9. ' ' → logprob: -17.00008773803711
    10. '(value' → logprob: -17.00008773803711

Token 404: ' value' (ID: 1432)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -1.5048530030981055e-06
    2. ' value' → logprob: -13.500001907348633
    3. ' ' → logprob: -20.000001907348633
    4. '   ' → logprob: -20.125001907348633
    5. 'alue' → logprob: -21.500001907348633
    6. '"value' → logprob: -21.750001907348633
    7. '(value' → logprob: -22.250001907348633
    8. ')value' → logprob: -22.375001907348633
    9. '	value' → logprob: -22.625001907348633
    10. 'a' → logprob: -22.625001907348633

Token 405: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -5.157039049663581e-05
    2. 'a' → logprob: -9.875051498413086
    3. '[' → logprob: -19.125051498413086
    4. '%' → logprob: -20.375051498413086
    5. '_' → logprob: -20.625051498413086
    6. ' a' → logprob: -20.750051498413086
    7. 'а' → logprob: -20.750051498413086
    8. '```' → logprob: -20.750051498413086
    9. 'mod' → logprob: -21.000051498413086
    10. ',' → logprob: -21.000051498413086

Token 406: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.3869031071662903
    2. ')' → logprob: -1.1369030475616455
    3. ')
' → logprob: -10.511902809143066
    4. ')

' → logprob: -13.011902809143066
    5. ' )
' → logprob: -13.136902809143066
    6. ' )' → logprob: -15.011902809143066
    7. ')return' → logprob: -15.761902809143066
    8. '   ' → logprob: -16.261903762817383
    9. '),' → logprob: -18.011903762817383
    10. ' ' → logprob: -18.511903762817383

Token 407: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9327371716499329
    2. '<|end|>' → logprob: -1.307737112045288
    3. '
' → logprob: -2.057737112045288
    4. ')' → logprob: -3.182737112045288
    5. '    
' → logprob: -3.182737112045288
    6. ',' → logprob: -3.682737112045288
    7. 'return' → logprob: -3.807737112045288
    8. '  
' → logprob: -4.057737350463867
    9. '   
' → logprob: -4.432737350463867
    10. '	return' → logprob: -4.932737350463867

Token 408: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.1711352914571762
    2. ' return' → logprob: -2.046135187149048
    3. '   ' → logprob: -4.296135425567627
    4. 'g' → logprob: -5.546135425567627
    5. '       ' → logprob: -5.796135425567627
    6. 'x' → logprob: -5.921135425567627
    7. ',' → logprob: -5.921135425567627
    8. ' x' → logprob: -7.171135425567627
    9. '	return' → logprob: -7.921135425567627
    10. ' g' → logprob: -8.046134948730469

Token 409: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -4.5491004129871726e-05
    2. ' g' → logprob: -10.000045776367188
    3. '	g' → logprob: -18.250045776367188
    4. '(g' → logprob: -18.250045776367188
    5. '   ' → logprob: -19.750045776367188
    6. '
' → logprob: -19.875045776367188
    7. ',g' → logprob: -21.375045776367188
    8. '_g' → logprob: -21.875045776367188
    9. '[g' → logprob: -22.000045776367188
    10. ',' → logprob: -22.375045776367188

Token 410: ',' (ID: 11)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.003925468306988478
    2. ' x' → logprob: -5.753925323486328
    3. ',' → logprob: -7.253925323486328
    4. ',x' → logprob: -10.128925323486328
    5. ' ,' → logprob: -15.753925323486328
    6. '	x' → logprob: -17.003925323486328
    7. '```' → logprob: -17.253925323486328
    8. '   ' → logprob: -17.753925323486328
    9. '(x' → logprob: -18.003925323486328
    10. '_x' → logprob: -18.753925323486328

Token 411: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0008062947308644652
    2. ' x' → logprob: -7.1258063316345215
    3. '(x' → logprob: -13.750805854797363
    4. '(' → logprob: -14.875805854797363
    5. ' (' → logprob: -15.250805854797363
    6. '   ' → logprob: -16.75080680847168
    7. '	x' → logprob: -16.75080680847168
    8. '1' → logprob: -17.25080680847168
    9. ' ' → logprob: -17.62580680847168
    10. '_x' → logprob: -18.00080680847168

Token 412: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.015567369759082794
    2. ' -' → logprob: -4.265567302703857
    3. '-y' → logprob: -6.640567302703857
    4. 'y' → logprob: -9.515567779541016
    5. '-value' → logprob: -11.140567779541016
    6. '-(' → logprob: -13.015567779541016
    7. ' y' → logprob: -13.015567779541016
    8. 'value' → logprob: -13.390567779541016
    9. ',' → logprob: -13.640567779541016
    10. '1' → logprob: -15.640567779541016

Token 413: ' (' (ID: 350)
  Prédit: '(value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(value' → logprob: -7.584239938296378e-06
    2. ' (' → logprob: -12.000007629394531
    3. 'value' → logprob: -14.125007629394531
    4. '(y' → logprob: -14.875007629394531
    5. '(' → logprob: -15.750007629394531
    6. ',value' → logprob: -16.37500762939453
    7. '[value' → logprob: -16.75000762939453
    8. '"value' → logprob: -16.75000762939453
    9. ')value' → logprob: -18.00000762939453
    10. ''value' → logprob: -18.87500762939453

Token 414: 'value' (ID: 1594)
  Prédit: '(value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(value' → logprob: -1.771655115589965e-05
    2. 'value' → logprob: -11.375018119812012
    3. ' (' → logprob: -12.125018119812012
    4. '(y' → logprob: -15.500018119812012
    5. '(' → logprob: -16.000017166137695
    6. '[value' → logprob: -16.125017166137695
    7. ',value' → logprob: -16.250017166137695
    8. ')value' → logprob: -16.500017166137695
    9. '"value' → logprob: -16.750017166137695
    10. '   ' → logprob: -17.375017166137695

Token 415: '_b' (ID: 1535)
  Prédit: '(value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(value' → logprob: -0.00207460206001997
    2. 'value' → logprob: -6.252074718475342
    3. '[value' → logprob: -9.877074241638184
    4. '"value' → logprob: -10.752074241638184
    5. ',value' → logprob: -10.877074241638184
    6. ' (' → logprob: -11.002074241638184
    7. ')value' → logprob: -11.127074241638184
    8. ' value' → logprob: -11.502074241638184
    9. ''value' → logprob: -12.127074241638184
    10. ':value' → logprob: -12.627074241638184

Token 416: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.00023166877508629113
    2. ' //' → logprob: -8.375231742858887
    3. 'value' → logprob: -15.000231742858887
    4. '//
' → logprob: -15.250231742858887
    5. '//=' → logprob: -15.250231742858887
    6. '
' → logprob: -15.750231742858887
    7. '#' → logprob: -16.50023078918457
    8. '```' → logprob: -16.87523078918457
    9. '"value' → logprob: -17.00023078918457
    10. ' value' → logprob: -18.00023078918457

Token 417: ' value' (ID: 1432)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -5.2166411478538066e-05
    2. ' value' → logprob: -10.250052452087402
    3. '(value' → logprob: -11.000052452087402
    4. '"value' → logprob: -16.875051498413086
    5. ''value' → logprob: -17.875051498413086
    6. ')value' → logprob: -18.000051498413086
    7. ',value' → logprob: -18.625051498413086
    8. '_value' → logprob: -18.875051498413086
    9. '[value' → logprob: -19.125051498413086
    10. '	value' → logprob: -19.250051498413086

Token 418: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.1609283834695816
    2. 'a' → logprob: -2.03592848777771
    3. 'value' → logprob: -4.035928249359131
    4. ' value' → logprob: -8.285928726196289
    5. '//' → logprob: -9.285928726196289
    6. ' ' → logprob: -10.910928726196289
    7. '_value' → logprob: -10.910928726196289
    8. '[value' → logprob: -11.285928726196289
    9. '(value' → logprob: -11.785928726196289
    10. '/value' → logprob: -12.535928726196289

Token 419: ')' (ID: 8)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.171095609664917
    2. ')' → logprob: -2.171095609664917
    3. ' *' → logprob: -3.421095609664917
    4. ' ' → logprob: -5.546095848083496
    5. ' value' → logprob: -6.546095848083496
    6. '//' → logprob: -6.671095848083496
    7. '```' → logprob: -6.796095848083496
    8. ' ' → logprob: -7.171095848083496
    9. ' y' → logprob: -7.546095848083496
    10. '*y' → logprob: -7.921095848083496

Token 420: ' *' (ID: 425)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0009656535112299025
    2. ' y' → logprob: -7.000965595245361
    3. '*y' → logprob: -10.00096607208252
    4. '*' → logprob: -11.75096607208252
    5. '(y' → logprob: -14.50096607208252
    6. ' *' → logprob: -16.375965118408203
    7. '	y' → logprob: -16.375965118408203
    8. '   ' → logprob: -16.625965118408203
    9. '```' → logprob: -16.625965118408203
    10. '`' → logprob: -17.125965118408203

Token 421: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -5.836499985889532e-05
    2. ' y' → logprob: -9.7500581741333
    3. '	y' → logprob: -17.000059127807617
    4. ',y' → logprob: -20.625059127807617
    5. '<|end|>' → logprob: -20.625059127807617
    6. ''y' → logprob: -20.750059127807617
    7. '   ' → logprob: -21.500059127807617
    8. '*y' → logprob: -21.500059127807617
    9. 'x' → logprob: -21.750059127807617
    10. ')y' → logprob: -22.125059127807617

Token 422: ',' (ID: 11)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.13006189465522766
    2. ' y' → logprob: -2.1300618648529053
    3. ',y' → logprob: -6.005062103271484
    4. ',' → logprob: -7.380062103271484
    5. '	y' → logprob: -10.380062103271484
    6. ' ,' → logprob: -11.880062103271484
    7. '*y' → logprob: -14.505062103271484
    8. ''y' → logprob: -15.505062103271484
    9. '_y' → logprob: -15.880062103271484
    10. ' ' → logprob: -16.380062103271484

Token 423: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0006266565760597587
    2. ' y' → logprob: -7.375626564025879
    3. '	y' → logprob: -16.750627517700195
    4. '   ' → logprob: -18.375627517700195
    5. ',y' → logprob: -20.500627517700195
    6. '
' → logprob: -20.625627517700195
    7. ''y' → logprob: -20.875627517700195
    8. 'x' → logprob: -21.125627517700195
    9. ' ' → logprob: -21.250627517700195
    10. '' → logprob: -21.500627517700195

Token 424: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 425: 'def' (ID: 1314)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.723973582556937e-05
    2. ' if' → logprob: -12.000017166137695
    3. '<|end|>' → logprob: -12.500017166137695
    4. '```' → logprob: -13.125017166137695
    5. '#' → logprob: -13.250017166137695
    6. '
' → logprob: -13.750017166137695
    7. '  
' → logprob: -14.000017166137695
    8. '#if' → logprob: -15.125017166137695
    9. '    
' → logprob: -15.125017166137695
    10. '   ' → logprob: -15.875017166137695

Token 426: ' h' (ID: 312)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.21501892805099487
    2. 'main' → logprob: -2.0900189876556396
    3. 'pow' → logprob: -2.9650189876556396
    4. 'is' → logprob: -5.4650187492370605
    5. 'crt' → logprob: -6.0900187492370605
    6. 'comb' → logprob: -6.2150187492370605
    7. 'l' → logprob: -6.2150187492370605
    8. 'fast' → logprob: -6.8400187492370605
    9. 'solve' → logprob: -6.8400187492370605
    10. ' mod' → logprob: -7.2150187492370605

Token 427: '_comb' (ID: 105956)
  Prédit: 'ash'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ash' → logprob: -0.6278784871101379
    2. 'e' → logprob: -1.1278784275054932
    3. 'ello' → logprob: -3.627878427505493
    4. 'el' → logprob: -3.877878427505493
    5. 'elper' → logprob: -3.877878427505493
    6. 'ost' → logprob: -4.127878665924072
    7. 'eight' → logprob: -4.127878665924072
    8. 'ell' → logprob: -5.002878665924072
    9. 'anoi' → logprob: -5.752878665924072
    10. 'eat' → logprob: -5.877878665924072

Token 428: '_mod' (ID: 15325)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.21495652198791504
    2. '(value' → logprob: -2.339956521987915
    3. '_mod' → logprob: -2.589956521987915
    4. 'ination' → logprob: -3.839956521987915
    5. '(' → logprob: -8.339956283569336
    6. 'inition' → logprob: -10.089956283569336
    7. '(int' → logprob: -10.839956283569336
    8. '_comb' → logprob: -10.839956283569336
    9. '(val' → logprob: -10.839956283569336
    10. '(num' → logprob: -10.964956283569336

Token 429: '(value' (ID: 6333)
  Prédit: '(value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(value' → logprob: -0.0023331898264586926
    2. '(n' → logprob: -6.377333164215088
    3. '(' → logprob: -7.377333164215088
    4. '(*' → logprob: -13.877333641052246
    5. '(size' → logprob: -14.627333641052246
    6. ' (' → logprob: -14.752333641052246
    7. '(a' → logprob: -14.877333641052246
    8. '(
' → logprob: -15.002333641052246
    9. '(k' → logprob: -15.127333641052246
    10. '(length' → logprob: -15.252333641052246

Token 430: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -0.03234444558620453
    2. '(n' → logprob: -4.157344341278076
    3. ',' → logprob: -6.032344341278076
    4. '(value' → logprob: -6.157344341278076
    5. ',n' → logprob: -6.282344341278076
    6. '_' → logprob: -6.282344341278076
    7. '_c' → logprob: -6.907344341278076
    8. '_func' → logprob: -7.032344341278076
    9. ')' → logprob: -7.157344341278076
    10. '_,' → logprob: -7.282344341278076

Token 431: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00012594614236149937
    2. ',value' → logprob: -9.125125885009766
    3. ' ,' → logprob: -11.250125885009766
    4. 'value' → logprob: -13.750125885009766
    5. ',n' → logprob: -14.000125885009766
    6. '_,' → logprob: -14.125125885009766
    7. ',r' → logprob: -14.875125885009766
    8. ',
' → logprob: -15.250125885009766
    9. ',val' → logprob: -16.250125885009766
    10. 'r' → logprob: -16.750125885009766

Token 432: ' value' (ID: 1432)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.003604940138757229
    2. ' value' → logprob: -5.628604888916016
    3. '(value' → logprob: -13.878604888916016
    4. ' ' → logprob: -14.378604888916016
    5. 'alue' → logprob: -14.378604888916016
    6. 'val' → logprob: -14.628604888916016
    7. '<|end|>' → logprob: -14.878604888916016
    8. 'def' → logprob: -15.003604888916016
    9. ')value' → logprob: -15.253604888916016
    10. ',value' → logprob: -15.628604888916016

Token 433: '_r' (ID: 3442)
  Prédit: '_r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_r' → logprob: -0.008081043139100075
    2. ',' → logprob: -5.258080959320068
    3. ',r' → logprob: -6.008080959320068
    4. '_n' → logprob: -8.508081436157227
    5. 'r' → logprob: -9.008081436157227
    6. '_,' → logprob: -10.258081436157227
    7. ',n' → logprob: -11.758081436157227
    8. ' ,' → logprob: -13.133081436157227
    9. ',value' → logprob: -13.133081436157227
    10. ',_' → logprob: -13.633081436157227

Token 434: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.4987974029500037e-05
    2. ' ,' → logprob: -11.250024795532227
    3. ',value' → logprob: -11.750024795532227
    4. '):' → logprob: -12.500024795532227
    5. '‌,' → logprob: -16.875024795532227
    6. '   ' → logprob: -17.375024795532227
    7. ',
' → logprob: -17.500024795532227
    8. ',val' → logprob: -17.625024795532227
    9. ',n' → logprob: -18.000024795532227
    10. ':' → logprob: -18.250024795532227

Token 435: ' value' (ID: 1432)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.20141908526420593
    2. ' value' → logprob: -1.7014191150665283
    3. 'const' → logprob: -13.45141887664795
    4. ' ' → logprob: -14.07641887664795
    5. '	value' → logprob: -14.07641887664795
    6. '(value' → logprob: -14.32641887664795
    7. ')value' → logprob: -14.32641887664795
    8. '<|end|>' → logprob: -14.70141887664795
    9. 'alue' → logprob: -15.57641887664795
    10. '"value' → logprob: -16.076419830322266

Token 436: '_mod' (ID: 15325)
  Prédit: '_n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -0.3242467939853668
    2. '_mod' → logprob: -1.6992467641830444
    3. '):' → logprob: -3.074246883392334
    4. ')' → logprob: -4.699246883392334
    5. '_r' → logprob: -4.699246883392334
    6. 'mod' → logprob: -4.699246883392334
    7. '):
' → logprob: -4.824246883392334
    8. '=' → logprob: -5.574246883392334
    9. 'n' → logprob: -5.699246883392334
    10. ',' → logprob: -6.824246883392334

Token 437: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0002523992152418941
    2. '):' → logprob: -8.375252723693848
    3. '=None' → logprob: -11.125252723693848
    4. '):
' → logprob: -12.375252723693848
    5. '=C' → logprob: -13.625252723693848
    6. ' =' → logprob: -14.000252723693848
    7. ')' → logprob: -15.000252723693848
    8. '=int' → logprob: -16.50025177001953
    9. ')=' → logprob: -16.62525177001953
    10. '=value' → logprob: -16.87525177001953

Token 438: 'CONST' (ID: 168319)
  Prédit: 'CONST'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'CONST' → logprob: -0.0002795703476294875
    2. '10' → logprob: -8.500279426574707
    3. ' CONST' → logprob: -9.875279426574707
    4. 'const' → logprob: -11.375279426574707
    5. '_CONST' → logprob: -12.375279426574707
    6. 'CON' → logprob: -12.375279426574707
    7. '100' → logprob: -13.750279426574707
    8. 'None' → logprob: -13.875279426574707
    9. ')' → logprob: -14.750279426574707
    10. ' ' → logprob: -15.125279426574707

Token 439: '_MOD' (ID: 45275)
  Prédit: '_MOD'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_MOD' → logprob: -1.688212614681106e-05
    2. 'MOD' → logprob: -11.000017166137695
    3. '_CONST' → logprob: -16.500017166137695
    4. '_mod' → logprob: -17.000017166137695
    5. 'mod' → logprob: -17.625017166137695
    6. '.MOD' → logprob: -18.250017166137695
    7. '_Mod' → logprob: -18.250017166137695
    8. '	mod' → logprob: -18.375017166137695
    9. '-mod' → logprob: -18.500017166137695
    10. '_MODE' → logprob: -18.750017166137695

Token 440: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0010674663353711367
    2. '):
' → logprob: -6.876067638397217
    3. ')' → logprob: -10.501067161560059
    4. '):
' → logprob: -12.501067161560059
    5. ' ):' → logprob: -13.876067161560059
    6. '=' → logprob: -13.876067161560059
    7. '=None' → logprob: -14.501067161560059
    8. '):

' → logprob: -15.126067161560059
    9. ':' → logprob: -15.501067161560059
    10. '   ' → logprob: -15.501067161560059

Token 441: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001359401736408472
    2. 'return' → logprob: -6.751359462738037
    3. 'result' → logprob: -9.126358985900879
    4. 'if' → logprob: -10.001358985900879
    5. ' return' → logprob: -11.126358985900879
    6. ':' → logprob: -12.001358985900879
    7. ')' → logprob: -13.251358985900879
    8. '):
' → logprob: -13.501358985900879
    9. '	return' → logprob: -13.626358985900879
    10. '   ' → logprob: -13.751358985900879

Token 442: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.13556306064128876
    2. '   ' → logprob: -2.7605631351470947
    3. 'if' → logprob: -3.0105631351470947
    4. 'res' → logprob: -4.760562896728516
    5. 'result' → logprob: -5.260562896728516
    6. ' return' → logprob: -8.260562896728516
    7. 'def' → logprob: -9.760562896728516
    8. ' if' → logprob: -10.760562896728516
    9. 'value' → logprob: -10.760562896728516
    10. 'ans' → logprob: -11.135562896728516

Token 443: ' comb' (ID: 4134)
  Prédit: 'comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comb' → logprob: -0.0007941396324895322
    2. ' comb' → logprob: -7.250793933868408
    3. 'com' → logprob: -9.625794410705566
    4. 'math' → logprob: -12.375794410705566
    5. 'pow' → logprob: -12.750794410705566
    6. 'comm' → logprob: -13.250794410705566
    7. 'Comb' → logprob: -13.750794410705566
    8. '(com' → logprob: -13.750794410705566
    9. 'combo' → logprob: -13.875794410705566
    10. '   ' → logprob: -14.125794410705566

Token 444: '_mod' (ID: 15325)
  Prédit: '_mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mod' → logprob: -6.749814019713085e-06
    2. '(value' → logprob: -12.000006675720215
    3. 'mod' → logprob: -14.625006675720215
    4. '(' → logprob: -17.37500762939453
    5. '_MOD' → logprob: -17.37500762939453
    6. 'Mod' → logprob: -18.50000762939453
    7. '```' → logprob: -18.50000762939453
    8. '_Mod' → logprob: -18.75000762939453
    9. '(mod' → logprob: -19.12500762939453
    10. '	mod' → logprob: -19.50000762939453

Token 445: '(value' (ID: 6333)
  Prédit: '(value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(value' → logprob: -0.00011200665176147595
    2. '(' → logprob: -9.62511157989502
    3. 'value' → logprob: -10.37511157989502
    4. '<|end|>' → logprob: -11.50011157989502
    5. '"value' → logprob: -13.25011157989502
    6. ')value' → logprob: -14.12511157989502
    7. '((' → logprob: -14.25011157989502
    8. '(
' → logprob: -15.00011157989502
    9. '[value' → logprob: -15.12511157989502
    10. ''value' → logprob: -15.25011157989502

Token 446: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -0.00028493450372479856
    2. 'n' → logprob: -8.250285148620605
    3. '_r' → logprob: -11.375285148620605
    4. '(value' → logprob: -12.125285148620605
    5. '+n' → logprob: -13.000285148620605
    6. '(n' → logprob: -13.125285148620605
    7. 'value' → logprob: -13.375285148620605
    8. 'r' → logprob: -14.625285148620605
    9. '(' → logprob: -16.50028419494629
    10. '_value' → logprob: -16.75028419494629

Token 447: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.38831841945648193
    2. ' +' → logprob: -1.138318419456482
    3. '+r' → logprob: -6.6383185386657715
    4. 'value' → logprob: -9.513318061828613
    5. '-' → logprob: -10.638318061828613
    6. '(value' → logprob: -11.638318061828613
    7. '   ' → logprob: -12.138318061828613
    8. '+
' → logprob: -12.263318061828613
    9. '[value' → logprob: -12.388318061828613
    10. ',value' → logprob: -12.888318061828613

Token 448: ' value' (ID: 1432)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -1.981667537620524e-06
    2. ' value' → logprob: -13.250001907348633
    3. '(value' → logprob: -16.625001907348633
    4. '"value' → logprob: -18.375001907348633
    5. '   ' → logprob: -18.750001907348633
    6. '$value' → logprob: -19.000001907348633
    7. ''value' → logprob: -19.750001907348633
    8. ')value' → logprob: -20.000001907348633
    9. '.value' → logprob: -20.000001907348633
    10. '	value' → logprob: -20.250001907348633

Token 449: '_r' (ID: 3442)
  Prédit: '_r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_r' → logprob: -0.11304634064435959
    2. 'r' → logprob: -2.363046407699585
    3. 'value' → logprob: -4.363046169281006
    4. '_value' → logprob: -11.238046646118164
    5. 'R' → logprob: -12.988046646118164
    6. '   ' → logprob: -14.238046646118164
    7. '-r' → logprob: -14.863046646118164
    8. ' value' → logprob: -14.988046646118164
    9. '-' → logprob: -15.613046646118164
    10. 'val' → logprob: -15.738046646118164

Token 450: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0005536287208087742
    2. ' -' → logprob: -7.500553607940674
    3. 'value' → logprob: -15.250554084777832
    4. '   ' → logprob: -16.000553131103516
    5. '1' → logprob: -16.250553131103516
    6. '–' → logprob: -16.625553131103516
    7. '—' → logprob: -16.875553131103516
    8. '−' → logprob: -16.875553131103516
    9. '
' → logprob: -17.375553131103516
    10. ',' → logprob: -17.750553131103516

Token 451: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. '-' → logprob: -15.0
    3. ' ' → logprob: -18.875
    4. '
' → logprob: -19.625
    5. '```' → logprob: -20.25
    6. ' -' → logprob: -20.5
    7. '

' → logprob: -21.0
    8. 'value' → logprob: -21.0
    9. '۱' → logprob: -21.0
    10. '2' → logprob: -21.0

Token 452: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '-' → logprob: -19.375
    3. '```' → logprob: -19.375
    4. '۱' → logprob: -19.5
    5. '１' → logprob: -20.25
    6. ' ' → logprob: -20.5
    7. '১' → logprob: -20.625
    8. '111' → logprob: -20.75
    9. '11' → logprob: -21.0625
    10. '2' → logprob: -21.25

Token 453: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007294706883840263
    2. ',value' → logprob: -7.750729560852051
    3. ' ,' → logprob: -8.12572956085205
    4. ',
' → logprob: -13.50072956085205
    5. ',val' → logprob: -14.50072956085205
    6. 'value' → logprob: -14.62572956085205
    7. ')' → logprob: -15.62572956085205
    8. ' value' → logprob: -16.375728607177734
    9. '<|end|>' → logprob: -16.750728607177734
    10. ' ' → logprob: -17.250728607177734

Token 454: ' value' (ID: 1432)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.008616226725280285
    2. ' value' → logprob: -4.7586164474487305
    3. '   ' → logprob: -13.50861644744873
    4. '    ' → logprob: -15.63361644744873
    5. '(value' → logprob: -17.008615493774414
    6. '	value' → logprob: -17.258615493774414
    7. '"value' → logprob: -17.258615493774414
    8. ')value' → logprob: -17.633615493774414
    9. '$value' → logprob: -18.258615493774414
    10. ''value' → logprob: -18.383615493774414

Token 455: '_r' (ID: 3442)
  Prédit: '_r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_r' → logprob: -0.00010950337309623137
    2. 'r' → logprob: -9.125109672546387
    3. ',' → logprob: -15.625109672546387
    4. '```' → logprob: -16.37510871887207
    5. ' r' → logprob: -16.50010871887207
    6. '   ' → logprob: -17.00010871887207
    7. ')' → logprob: -17.37510871887207
    8. '1' → logprob: -18.00010871887207
    9. '_n' → logprob: -18.12510871887207
    10. '	r' → logprob: -18.37510871887207

Token 456: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5762102007865906
    2. ',' → logprob: -0.8262102007865906
    3. ' ,' → logprob: -8.951210021972656
    4. ' )' → logprob: -9.076210021972656
    5. '   ' → logprob: -11.326210021972656
    6. ',)' → logprob: -12.951210021972656
    7. ',value' → logprob: -12.951210021972656
    8. ')
' → logprob: -13.076210021972656
    9. '),' → logprob: -13.451210021972656
    10. '-' → logprob: -13.451210021972656

Token 457: ' value' (ID: 1432)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.023245595395565033
    2. ' value' → logprob: -3.7732455730438232
    3. ')value' → logprob: -17.523244857788086
    4. ')' → logprob: -17.648244857788086
    5. 'alue' → logprob: -17.898244857788086
    6. '   ' → logprob: -18.148244857788086
    7. '	value' → logprob: -18.398244857788086
    8. 'Value' → logprob: -18.898244857788086
    9. ' ' → logprob: -19.023244857788086
    10. '_value' → logprob: -19.023244857788086

Token 458: '_mod' (ID: 15325)
  Prédit: '_mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mod' → logprob: -7.517272024415433e-05
    2. 'mod' → logprob: -9.500075340270996
    3. 'omod' → logprob: -16.50007438659668
    4. '_MOD' → logprob: -16.75007438659668
    5. '	mod' → logprob: -16.87507438659668
    6. 'od' → logprob: -17.37507438659668
    7. ')' → logprob: -17.50007438659668
    8. 'value' → logprob: -17.75007438659668
    9. 'Mod' → logprob: -18.37507438659668
    10. '```' → logprob: -18.37507438659668

Token 459: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.512236498361744e-07
    2. ' )' → logprob: -15.125000953674316
    3. ')
' → logprob: -15.500000953674316
    4. '   ' → logprob: -17.375
    5. '))' → logprob: -17.875
    6. ')}' → logprob: -18.125
    7. ')return' → logprob: -19.0
    8. ' ' → logprob: -19.125
    9. '),' → logprob: -19.25
    10. '())' → logprob: -19.5

Token 460: 'class' (ID: 1444)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 461: ' Combination' (ID: 134507)
  Prédit: ' Solution'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Solution' → logprob: -1.664121150970459
    2. ' Combination' → logprob: -1.789121150970459
    3. ' My' → logprob: -2.039121150970459
    4. ' Factor' → logprob: -2.289121150970459
    5. ' Node' → logprob: -3.039121150970459
    6. ' Union' → logprob: -3.164121150970459
    7. ' Trie' → logprob: -3.539121150970459
    8. ' Queue' → logprob: -3.664121150970459
    9. ' factorial' → logprob: -4.039121150970459
    10. '_' → logprob: -4.164121150970459

Token 462: 'Class' (ID: 2579)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0001745775662129745
    2. '(object' → logprob: -9.875174522399902
    3. '():' → logprob: -10.000174522399902
    4. '(' → logprob: -10.125174522399902
    5. ':
' → logprob: -11.250174522399902
    6. ' :' → logprob: -11.625174522399902
    7. ':**' → logprob: -13.375174522399902
    8. '<|end|>' → logprob: -13.625174522399902
    9. '):' → logprob: -13.875174522399902
    10. '```' → logprob: -14.125174522399902

Token 463: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -5.8961017202818766e-05
    2. '(object' → logprob: -11.000059127807617
    3. ' :' → logprob: -11.125059127807617
    4. ':
' → logprob: -11.375059127807617
    5. '():' → logprob: -11.375059127807617
    6. '(' → logprob: -13.750059127807617
    7. '<|end|>' → logprob: -13.875059127807617
    8. ':def' → logprob: -14.375059127807617
    9. '>:' → logprob: -14.625059127807617
    10. ':**' → logprob: -14.750059127807617

Token 464: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023494234308600426
    2. ' def' → logprob: -3.773494243621826
    3. 'def' → logprob: -8.523493766784668
    4. '	def' → logprob: -10.023493766784668
    5. '   ' → logprob: -13.523493766784668
    6. '<|end|>' → logprob: -13.523493766784668
    7. ':def' → logprob: -14.148493766784668
    8. ' ' → logprob: -14.648493766784668
    9. '    
' → logprob: -15.023493766784668
    10. ':' → logprob: -15.523493766784668

Token 465: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.3646298944950104
    2. 'def' (adapté à ' def') → logprob: -1.614629864692688
    3. '   ' → logprob: -2.2396299839019775
    4. ' __' → logprob: -10.364629745483398
    5. '__' → logprob: -10.489629745483398
    6. '	def' → logprob: -11.364629745483398
    7. ' ' → logprob: -11.614629745483398
    8. 'class' → logprob: -13.364629745483398
    9. '  ' → logprob: -14.239629745483398
    10. ':def' → logprob: -14.489629745483398

Token 466: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.014688023366034031
    2. '__' → logprob: -4.264688014984131
    3. '_init' → logprob: -8.139688491821289
    4. '_' → logprob: -9.014688491821289
    5. ' _' → logprob: -9.514688491821289
    6. ' init' → logprob: -10.889688491821289
    7. 'init' → logprob: -11.764688491821289
    8. ' def' → logprob: -12.389688491821289
    9. ' ' → logprob: -12.764688491821289
    10. '___' → logprob: -13.389688491821289

Token 467: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: 0.0
    2. 'int' → logprob: -19.5
    3. 'ini' → logprob: -19.875
    4. ' init' → logprob: -20.5
    5. 'inite' → logprob: -20.875
    6. 'in' → logprob: -21.75
    7. '
' → logprob: -22.5
    8. 'post' → logprob: -23.0
    9. 'new' → logprob: -23.125
    10. 'innit' → logprob: -23.625

Token 468: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.05634952709078789
    2. '(self' → logprob: -2.931349515914917
    3. '(' → logprob: -6.681349754333496
    4. '_(' → logprob: -9.306349754333496
    5. '__' → logprob: -9.806349754333496
    6. '__(
' → logprob: -10.806349754333496
    7. 'self' → logprob: -11.181349754333496
    8. ' (' → logprob: -11.556349754333496
    9. ')(' → logprob: -12.431349754333496
    10. '<|end|>' → logprob: -12.806349754333496

Token 469: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -3.273621405242011e-05
    2. ' self' → logprob: -10.375032424926758
    3. '(self' → logprob: -13.750032424926758
    4. '0' → logprob: -16.125032424926758
    5. '   ' → logprob: -17.250032424926758
    6. '	self' → logprob: -17.375032424926758
    7. '
' → logprob: -17.375032424926758
    8. '1' → logprob: -17.500032424926758
    9. ' ' → logprob: -17.625032424926758
    10. '__(' → logprob: -18.250032424926758

Token 470: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.39679622650146484
    2. '(self' → logprob: -2.021796226501465
    3. '__(' → logprob: -2.021796226501465
    4. 'self' → logprob: -2.896796226501465
    5. ')(' → logprob: -6.021796226501465
    6. '__,' → logprob: -6.521796226501465
    7. '(' → logprob: -6.521796226501465
    8. ',self' → logprob: -7.396796226501465
    9. '_,' → logprob: -7.896796226501465
    10. ' (' → logprob: -8.146796226501465

Token 471: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.06554675102233887
    2. 'n' → logprob: -3.190546751022339
    3. 'value' → logprob: -3.940546751022339
    4. 'self' → logprob: -6.440546989440918
    5. ' max' → logprob: -7.565546989440918
    6. 'size' → logprob: -8.190546989440918
    7. 'maximum' → logprob: -8.690546989440918
    8. 'limit' → logprob: -9.065546989440918
    9. ' n' → logprob: -9.440546989440918
    10. ')' → logprob: -10.815546989440918

Token 472: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -0.04439213499426842
    2. '_value' → logprob: -3.7943921089172363
    3. '_size' → logprob: -4.044392108917236
    4. '_val' → logprob: -6.169392108917236
    5. '_num' → logprob: -7.419392108917236
    6. 'n' → logprob: -8.169392585754395
    7. ')' → logprob: -9.544392585754395
    8. '_comb' → logprob: -9.544392585754395
    9. 'size' → logprob: -9.919392585754395
    10. 'value' → logprob: -10.419392585754395

Token 473: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1532449722290039
    2. ',' → logprob: -2.278244972229004
    3. ':' → logprob: -3.778244972229004
    4. '=' → logprob: -4.153244972229004
    5. '):
' → logprob: -7.528244972229004
    6. ':int' → logprob: -8.778244972229004
    7. ' ):' → logprob: -8.778244972229004
    8. '=None' → logprob: -8.903244972229004
    9. ')' → logprob: -11.028244972229004
    10. '=int' → logprob: -11.528244972229004

Token 474: ' use' (ID: 1199)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.38707810640335083
    2. 'value' → logprob: -1.137078046798706
    3. ' value' → logprob: -9.387078285217285
    4. ' mod' → logprob: -10.262078285217285
    5. 'max' → logprob: -10.387078285217285
    6. 'MOD' → logprob: -11.137078285217285
    7. '```' → logprob: -12.012078285217285
    8. 'init' → logprob: -12.137078285217285
    9. 'prime' → logprob: -12.262078285217285
    10. 'Mod' → logprob: -12.387078285217285

Token 475: '_mod' (ID: 15325)
  Prédit: '_mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mod' → logprob: -0.01206277683377266
    2. '_cache' → logprob: -5.7620625495910645
    3. '_factor' → logprob: -6.1370625495910645
    4. '_m' → logprob: -7.1370625495910645
    5. '_p' → logprob: -7.2620625495910645
    6. '_inverse' → logprob: -7.2620625495910645
    7. '_pow' → logprob: -7.3870625495910645
    8. '_inv' → logprob: -7.8870625495910645
    9. '_class' → logprob: -8.012063026428223
    10. 'mod' → logprob: -8.262063026428223

Token 476: '=' (ID: 28)
  Prédit: '=True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=True' → logprob: -0.05639909952878952
    2. '=' → logprob: -3.05639910697937
    3. '=None' → logprob: -4.931398868560791
    4. 'ule' → logprob: -8.30639934539795
    5. '):' → logprob: -8.80639934539795
    6. '=False' → logprob: -9.18139934539795
    7. ':' → logprob: -10.80639934539795
    8. 'ulo' → logprob: -11.30639934539795
    9. 'ed' → logprob: -11.55639934539795
    10. 'e' → logprob: -11.55639934539795

Token 477: 'CONST' (ID: 168319)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.10293044149875641
    2. 'CONST' → logprob: -2.3529305458068848
    3. 'None' → logprob: -6.102930545806885
    4. '10' → logprob: -8.727930068969727
    5. '100' → logprob: -9.852930068969727
    6. ' True' → logprob: -10.102930068969727
    7. 'TRUE' → logprob: -10.227930068969727
    8. 'CON' → logprob: -10.352930068969727
    9. 'Const' → logprob: -10.477930068969727
    10. 'const' → logprob: -10.477930068969727

Token 478: '_MOD' (ID: 45275)
  Prédit: '_MOD'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_MOD' → logprob: -0.014172090217471123
    2. 'MOD' → logprob: -4.264172077178955
    3. 'mod' → logprob: -12.389172554016113
    4. '```' → logprob: -14.014172554016113
    5. '	mod' → logprob: -14.139172554016113
    6. '   ' → logprob: -14.514172554016113
    7. '.MOD' → logprob: -14.764172554016113
    8. '
' → logprob: -14.889172554016113
    9. '_mod' → logprob: -15.389172554016113
    10. ' MOD' → logprob: -16.014171600341797

Token 479: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.009336678311228752
    2. '):
' → logprob: -4.759336471557617
    3. ',' → logprob: -7.259336471557617
    4. ')' → logprob: -11.634336471557617
    5. '):
' → logprob: -11.884336471557617
    6. ' ):' → logprob: -13.259336471557617
    7. '):

' → logprob: -15.134336471557617
    8. ':' → logprob: -15.634336471557617
    9. '   ' → logprob: -16.134336471557617
    10. ''):' → logprob: -17.009336471557617

Token 480: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002358167665079236
    2. '<|end|>' → logprob: -6.6273579597473145
    3. '   ' → logprob: -7.8773579597473145
    4. '	' → logprob: -8.502358436584473
    5. ':' → logprob: -9.127358436584473
    6. '	   ' → logprob: -9.752358436584473
    7. ',' → logprob: -9.877358436584473
    8. '):
' → logprob: -10.127358436584473
    9. ')' → logprob: -10.252358436584473
    10. '<|end|>' → logprob: -10.502358436584473

Token 481: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.08492094278335571
    2. ' self' → logprob: -3.084920883178711
    3. '       ' → logprob: -3.334920883178711
    4. '   ' → logprob: -10.709920883178711
    5. '	self' → logprob: -10.959920883178711
    6. 'super' → logprob: -11.084920883178711
    7. ' ' → logprob: -13.084920883178711
    8. '(self' → logprob: -13.209920883178711
    9. ' super' → logprob: -13.209920883178711
    10. '	' → logprob: -13.334920883178711

Token 482: '.mod' (ID: 19046)
  Prédit: '.max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.max' → logprob: -0.026050034910440445
    2. '.' → logprob: -5.151050090789795
    3. 'max' → logprob: -5.276050090789795
    4. '.use' → logprob: -5.651050090789795
    5. '   ' → logprob: -5.776050090789795
    6. ' =' → logprob: -6.276050090789795
    7. '       ' → logprob: -6.526050090789795
    8. '.mod' → logprob: -6.901050090789795
    9. '.maximum' → logprob: -7.276050090789795
    10. '.value' → logprob: -7.901050090789795

Token 483: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07891920208930969
    2. '=' → logprob: -2.5789191722869873
    3. '_' → logprob: -10.953919410705566
    4. '   ' → logprob: -12.078919410705566
    5. ',' → logprob: -13.328919410705566
    6. '	' → logprob: -13.953919410705566
    7. ' ' → logprob: -14.078919410705566
    8. '  ' → logprob: -14.453919410705566
    9. 'ulus' → logprob: -14.703919410705566
    10. '=_' → logprob: -14.703919410705566

Token 484: ' use' (ID: 1199)
  Prédit: 'use'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'use' → logprob: -7.941850526549388e-06
    2. ' use' → logprob: -11.750007629394531
    3. '100' → logprob: -20.87500762939453
    4. 'value' → logprob: -20.87500762939453
    5. 'int' → logprob: -21.12500762939453
    6. '10' → logprob: -21.62500762939453
    7. '(use' → logprob: -22.00000762939453
    8. 'max' → logprob: -22.12500762939453
    9. '   ' → logprob: -22.50000762939453
    10. '	use' → logprob: -22.87500762939453

Token 485: '_mod' (ID: 15325)
  Prédit: '_mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mod' → logprob: -3.128163257315464e-07
    2. 'mod' → logprob: -15.125
    3. '	mod' → logprob: -18.25
    4. '_MOD' → logprob: -19.5
    5. 'omod' → logprob: -19.625
    6. '=' → logprob: -19.625
    7. ' мод' → logprob: -21.125
    8. '_mode' → logprob: -21.25
    9. 'Mod' → logprob: -21.375
    10. '
' → logprob: -21.5

Token 486: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00595522578805685
    2. '
' → logprob: -5.255955219268799
    3. '<|end|>' → logprob: -7.505955219268799
    4. ',' → logprob: -9.380955696105957
    5. 'self' → logprob: -9.755955696105957
    6. ',
' → logprob: -11.755955696105957
    7. '        
' → logprob: -11.880955696105957
    8. ' self' → logprob: -12.630955696105957
    9. '   ' → logprob: -12.755955696105957
    10. '  
' → logprob: -13.630955696105957

Token 487: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009180770255625248
    2. '
' → logprob: -4.884180545806885
    3. '<|end|>' → logprob: -7.259180545806885
    4. '   ' → logprob: -7.509180545806885
    5. '	' → logprob: -8.884181022644043
    6. '        
' → logprob: -9.759181022644043
    7. 'self' → logprob: -10.759181022644043
    8. ' ' → logprob: -10.759181022644043
    9. '  
' → logprob: -11.259181022644043
    10. '	self' → logprob: -11.634181022644043

Token 488: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0024923032615333796
    2. '       ' → logprob: -6.002492427825928
    3. ' self' → logprob: -11.12749195098877
    4. '
' → logprob: -13.75249195098877
    5. '   ' → logprob: -14.75249195098877
    6. '        
' → logprob: -15.50249195098877
    7. '	self' → logprob: -15.50249195098877
    8. '
' → logprob: -17.252492904663086
    9. '#' → logprob: -18.127492904663086
    10. '(self' → logprob: -18.502492904663086

Token 489: '.mod' (ID: 19046)
  Prédit: '.max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.max' → logprob: -0.9876712560653687
    2. '.fact' → logprob: -0.9876712560653687
    3. '.factor' → logprob: -1.8626712560653687
    4. '.fac' → logprob: -2.362671375274658
    5. '._' → logprob: -5.362671375274658
    6. '.size' → logprob: -8.3626708984375
    7. '.maximum' → logprob: -8.8626708984375
    8. 'max' → logprob: -8.9876708984375
    9. '.n' → logprob: -9.2376708984375
    10. 'fact' → logprob: -9.3626708984375

Token 490: 'inv' (ID: 31086)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0728776454925537
    2. 'inv' → logprob: -1.9478776454925537
    3. '_factor' → logprob: -2.0728776454925537
    4. '_inv' → logprob: -2.1978776454925537
    5. '_fac' → logprob: -2.4478776454925537
    6. '_fact' → logprob: -2.9478776454925537
    7. '=' → logprob: -3.1978776454925537
    8. 'fac' → logprob: -3.5728776454925537
    9. 'fact' → logprob: -3.9478776454925537
    10. '_comb' → logprob: -4.322877883911133

Token 491: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.795383632183075
    2. '=' → logprob: -1.0453836917877197
    3. ' =' → logprob: -1.6703836917877197
    4. '_list' → logprob: -5.170383453369141
    5. '_cache' → logprob: -7.295383453369141
    6. '_arr' → logprob: -7.670383453369141
    7. '_fact' → logprob: -8.04538345336914
    8. '_table' → logprob: -8.17038345336914
    9. '_class' → logprob: -8.54538345336914
    10. '=[' → logprob: -8.67038345336914

Token 492: ' self' (ID: 1051)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.000399925687815994
    2. '{' → logprob: -8.250399589538574
    3. '[value' → logprob: -9.375399589538574
    4. '[val' → logprob: -10.750399589538574
    5. '[self' → logprob: -11.125399589538574
    6. ' [' → logprob: -12.500399589538574
    7. '[class' → logprob: -13.375399589538574
    8. '[int' → logprob: -13.500399589538574
    9. '{}' → logprob: -14.000399589538574
    10. '[-' → logprob: -14.125399589538574

Token 493: '.generate' (ID: 33917)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.014331908896565437
    2. '_mod' → logprob: -5.139331817626953
    3. '_class' → logprob: -5.389331817626953
    4. '[]' → logprob: -7.014331817626953
    5. '[class' → logprob: -7.264331817626953
    6. '=[' → logprob: -7.389331817626953
    7. 'mod' → logprob: -8.139331817626953
    8. 'class' → logprob: -8.389331817626953
    9. '   ' → logprob: -9.139331817626953
    10. '{' → logprob: -9.764331817626953

Token 494: '_mod' (ID: 15325)
  Prédit: '(max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.43964529037475586
    2. '_mod' → logprob: -2.189645290374756
    3. '[max' → logprob: -2.314645290374756
    4. '[' → logprob: -2.814645290374756
    5. '(' → logprob: -3.064645290374756
    6. '([' → logprob: -4.689645290374756
    7. 'mod' → logprob: -4.939645290374756
    8. 'max' → logprob: -5.689645290374756
    9. '([]' → logprob: -5.814645290374756
    10. '_list' → logprob: -5.814645290374756

Token 495: 'inv' (ID: 31086)
  Prédit: 'inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.028371285647153854
    2. 'in' → logprob: -4.653371334075928
    3. '_inv' → logprob: -4.903371334075928
    4. 'inverse' → logprob: -5.403371334075928
    5. '_in' → logprob: -5.653371334075928
    6. '_inverse' → logprob: -5.903371334075928
    7. 'invert' → logprob: -9.40337085723877
    8. 'int' → logprob: -10.40337085723877
    9. '_list' → logprob: -10.77837085723877
    10. 's' → logprob: -11.02837085723877

Token 496: '_list' (ID: 4162)
  Prédit: '(max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.08548472821712494
    2. '_list' → logprob: -2.960484743118286
    3. '_array' → logprob: -3.710484743118286
    4. 's' → logprob: -5.585484504699707
    5. 'list' → logprob: -7.585484504699707
    6. '_func' → logprob: -8.085484504699707
    7. '_table' → logprob: -8.085484504699707
    8. 'array' → logprob: -8.710484504699707
    9. '_arr' → logprob: -8.710484504699707
    10. '_mod' → logprob: -8.960484504699707

Token 497: '(max' (ID: 17178)
  Prédit: '(max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -1.1472419600977446e-06
    2. '(' → logprob: -13.750000953674316
    3. 'max' → logprob: -17.250001907348633
    4. '[max' → logprob: -18.625001907348633
    5. '=max' → logprob: -19.250001907348633
    6. '(MAX' → logprob: -19.750001907348633
    7. '((' → logprob: -20.125001907348633
    8. ' (' → logprob: -20.750001907348633
    9. '(self' → logprob: -21.000001907348633
    10. '(min' → logprob: -21.125001907348633

Token 498: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -3.128163257315464e-07
    2. 'n' → logprob: -16.875
    3. '   ' → logprob: -17.125
    4. '(max' → logprob: -17.25
    5. '=max' → logprob: -17.875
    6. '=' → logprob: -18.125
    7. '_' → logprob: -18.875
    8. '+' → logprob: -18.875
    9. ')' → logprob: -18.875
    10. 'max' → logprob: -19.0

Token 499: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0018150020623579621
    2. ' )' → logprob: -6.876814842224121
    3. ')
' → logprob: -7.751814842224121
    4. ',' → logprob: -8.001814842224121
    5. '+' → logprob: -12.501814842224121
    6. ' )
' → logprob: -13.001814842224121
    7. ' ,' → logprob: -13.376814842224121
    8. '(max' → logprob: -13.501814842224121
    9. ')
' → logprob: -13.626814842224121
    10. ' ' → logprob: -13.626814842224121

Token 500: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13318727910518646
    2. '<|end|>' → logprob: -2.8831872940063477
    3. '
' → logprob: -3.0081872940063477
    4. 'self' → logprob: -4.758187294006348
    5. '   ' → logprob: -5.258187294006348
    6. '	self' → logprob: -5.633187294006348
    7. ' self' → logprob: -6.633187294006348
    8. '[self' → logprob: -9.008187294006348
    9. '        
' → logprob: -9.008187294006348
    10. ' ' → logprob: -9.508187294006348

Token 501: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.07952216267585754
    2. '       ' → logprob: -2.579522132873535
    3. ' self' → logprob: -7.454522132873535
    4. '   ' → logprob: -9.954522132873535
    5. '	self' → logprob: -12.329522132873535
    6. ' ' → logprob: -14.829522132873535
    7. '[self' → logprob: -14.954522132873535
    8. '<|end|>' → logprob: -15.079522132873535
    9. '	' → logprob: -16.07952308654785
    10. '```' → logprob: -16.20452308654785

Token 502: '.fac' (ID: 108153)
  Prédit: '.fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.fact' → logprob: -0.8113434314727783
    2. '.fac' → logprob: -1.1863434314727783
    3. 'fact' → logprob: -2.1863434314727783
    4. '.factor' → logprob: -2.5613434314727783
    5. 'fac' → logprob: -3.3113434314727783
    6. 'factor' → logprob: -4.061343193054199
    7. '   ' → logprob: -5.936343193054199
    8. '_fact' → logprob: -6.686343193054199
    9. '_factor' → logprob: -6.936343193054199
    10. '_fac' → logprob: -7.311343193054199

Token 503: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16058489680290222
    2. ' =' → logprob: -1.9105849266052246
    3. ',' → logprob: -8.035584449768066
    4. 't' → logprob: -10.785584449768066
    5. '   ' → logprob: -12.410584449768066
    6. ' ' → logprob: -12.535584449768066
    7. '_fac' → logprob: -13.410584449768066
    8. 'ility' → logprob: -14.285584449768066
    9. '=f' → logprob: -14.535584449768066
    10. '=[' → logprob: -14.660584449768066

Token 504: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.04866957291960716
    2. ' self' → logprob: -3.0486695766448975
    3. '<|end|>' → logprob: -10.798669815063477
    4. '=self' → logprob: -11.173669815063477
    5. '       ' → logprob: -11.798669815063477
    6. '    ' → logprob: -11.923669815063477
    7. ',self' → logprob: -12.173669815063477
    8. '[self' → logprob: -12.298669815063477
    9. '   ' → logprob: -12.423669815063477
    10. '(self' → logprob: -12.673669815063477

Token 505: '.f' (ID: 1196)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.18708574771881104
    2. 'if' → logprob: -1.937085747718811
    3. 'fac' → logprob: -3.9370856285095215
    4. '_inv' → logprob: -5.5620856285095215
    5. 'fin' → logprob: -7.0620856285095215
    6. '.inv' → logprob: -7.1870856285095215
    7. 'ifact' → logprob: -7.8120856285095215
    8. '_if' → logprob: -8.06208610534668
    9. '.fac' → logprob: -8.31208610534668
    10. '_fac' → logprob: -8.43708610534668

Token 506: 'acin' (ID: 18829)
  Prédit: 'ac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ac' → logprob: -0.0022807421628385782
    2. 'inv' → logprob: -6.3772807121276855
    3. 'act' → logprob: -8.002281188964844
    4. '```' → logprob: -10.002281188964844
    5. '_inv' → logprob: -10.127281188964844
    6. 'actor' → logprob: -10.502281188964844
    7. '
' → logprob: -10.752281188964844
    8. 'acs' → logprob: -11.002281188964844
    9. '[]' → logprob: -11.127281188964844
    10. 'rac' → logprob: -11.627281188964844

Token 507: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0002466774603817612
    2. 'verse' → logprob: -9.37524700164795
    3. 'vl' → logprob: -10.00024700164795
    4. 'vc' → logprob: -10.00024700164795
    5. 'vs' → logprob: -10.62524700164795
    6. 'vf' → logprob: -11.87524700164795
    7. 'c' → logprob: -12.00024700164795
    8. 'vt' → logprob: -12.25024700164795
    9. '
' → logprob: -12.50024700164795
    10. 'vers' → logprob: -12.62524700164795

Token 508: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16022585332393646
    2. ' =' → logprob: -1.9102258682250977
    3. ',' → logprob: -13.660225868225098
    4. '=self' → logprob: -15.660225868225098
    5. ' ' → logprob: -15.910225868225098
    6. '<|end|>' → logprob: -16.03522491455078
    7. 's' → logprob: -16.91022491455078
    8. ')' → logprob: -17.53522491455078
    9. '＝' → logprob: -17.53522491455078
    10. '=None' → logprob: -17.53522491455078

Token 509: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.039929699152708054
    2. ' self' → logprob: -3.2899296283721924
    3. '[self' → logprob: -6.6649298667907715
    4. '(self' → logprob: -7.9149298667907715
    5. '   ' → logprob: -9.289929389953613
    6. ' [' → logprob: -9.664929389953613
    7. '[' → logprob: -9.664929389953613
    8. ' (' → logprob: -11.539929389953613
    9. '
' → logprob: -12.039929389953613
    10. 'tuple' → logprob: -13.289929389953613

Token 510: '.generate' (ID: 33917)
  Prédit: '.generate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.generate' → logprob: -0.001823812141083181
    2. 'generate' → logprob: -6.501823902130127
    3. 'enerate' → logprob: -9.001823425292969
    4. '.calculate' → logprob: -10.251823425292969
    5. '.compute' → logprob: -10.376823425292969
    6. '=' → logprob: -10.501823425292969
    7. '.initialize' → logprob: -10.876823425292969
    8. '.create' → logprob: -11.001823425292969
    9. '_generate' → logprob: -11.001823425292969
    10. '.__' → logprob: -11.251823425292969

Token 511: '_factor' (ID: 43757)
  Prédit: '_factor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_factor' → logprob: -0.300415575504303
    2. '_fac' → logprob: -2.050415515899658
    3. '_mod' → logprob: -2.800415515899658
    4. '(max' → logprob: -3.675415515899658
    5. 'factor' → logprob: -4.175415515899658
    6. '_fact' → logprob: -4.425415515899658
    7. '_comb' → logprob: -5.050415515899658
    8. '(' → logprob: -6.425415515899658
    9. 'max' → logprob: -6.550415515899658
    10. 'fac' → logprob: -6.675415515899658

Token 512: 'ial' (ID: 563)
  Prédit: 'ial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ial' → logprob: -0.252831369638443
    2. 'ials' → logprob: -1.5028313398361206
    3. 'list' → logprob: -7.37783145904541
    4. '_list' → logprob: -8.75283145904541
    5. '```' → logprob: -9.62783145904541
    6. 'ialize' → logprob: -10.62783145904541
    7. 'ialist' → logprob: -11.37783145904541
    8. 'al' → logprob: -12.25283145904541
    9. ' ' → logprob: -13.25283145904541
    10. '   ' → logprob: -13.37783145904541

Token 513: '_lists' (ID: 93609)
  Prédit: '_lists'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lists' → logprob: -0.0009046725463122129
    2. '_and' → logprob: -8.12590503692627
    3. '_list' → logprob: -8.50090503692627
    4. 'lists' → logprob: -8.75090503692627
    5. 's' → logprob: -8.75090503692627
    6. '_pairs' → logprob: -10.62590503692627
    7. '_pair' → logprob: -10.75090503692627
    8. '_arrays' → logprob: -11.00090503692627
    9. '_factor' → logprob: -11.75090503692627
    10. 'and' → logprob: -12.62590503692627

Token 514: '(max' (ID: 17178)
  Prédit: '(max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -4.008129963040119e-06
    2. '(' → logprob: -12.625003814697266
    3. ' (' → logprob: -15.000003814697266
    4. 'max' → logprob: -15.875003814697266
    5. '(min' → logprob: -16.625003814697266
    6. '=max' → logprob: -17.375003814697266
    7. ',max' → logprob: -17.625003814697266
    8. '[max' → logprob: -17.750003814697266
    9. ' max' → logprob: -17.875003814697266
    10. '(
' → logprob: -18.125003814697266

Token 515: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -1.2664456789934775e-06
    2. 'n' → logprob: -14.250000953674316
    3. '   ' → logprob: -16.250001907348633
    4. '```' → logprob: -16.500001907348633
    5. 's' → logprob: -16.750001907348633
    6. ')' → logprob: -17.000001907348633
    7. '
' → logprob: -17.000001907348633
    8. '(n' → logprob: -17.312501907348633
    9. '_' → logprob: -17.437501907348633
    10. '(max' → logprob: -17.625001907348633

Token 516: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -9.341087570646778e-05
    2. ',' → logprob: -10.000093460083008
    3. ')
' → logprob: -10.375093460083008
    4. ' )' → logprob: -11.750093460083008
    5. '   ' → logprob: -13.250093460083008
    6. '<|end|>' → logprob: -13.375093460083008
    7. '+' → logprob: -13.625093460083008
    8. '),' → logprob: -14.000093460083008
    9. ')}' → logprob: -14.125093460083008
    10. '<|end|>' → logprob: -14.250093460083008

Token 517: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.17768320441246033
    2. '<|end|>' → logprob: -2.177683115005493
    3. '   ' → logprob: -3.302683115005493
    4. '    
' → logprob: -5.302683353424072
    5. '       ' → logprob: -6.052683353424072
    6. '```' → logprob: -6.927683353424072
    7. '  
' → logprob: -7.052683353424072
    8. 'def' → logprob: -7.052683353424072
    9. ' 
' → logprob: -7.552683353424072
    10. '<|end|>' → logprob: -7.802683353424072

Token 518: ' def' (ID: 1056)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0995725691318512
    2. '	def' → logprob: -2.9745726585388184
    3. 'def' (adapté à ' def') → logprob: -3.4745726585388184
    4. ' def' → logprob: -5.224572658538818
    5. '   ' → logprob: -5.599572658538818
    6. '<|end|>' → logprob: -6.474572658538818
    7. '	
' → logprob: -7.099572658538818
    8. '    
' → logprob: -7.724572658538818
    9. '```' → logprob: -8.34957218170166
    10. '
' → logprob: -9.34957218170166

Token 519: ' __' (ID: 2516)
  Prédit: 'generate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'generate' → logprob: -0.007815174758434296
    2. ' generate' → logprob: -5.632815361022949
    3. '_generate' → logprob: -6.132815361022949
    4. 'mod' → logprob: -6.757815361022949
    5. '__' → logprob: -7.257815361022949
    6. 'get' → logprob: -9.75781536102295
    7. 'gen' → logprob: -10.50781536102295
    8. '_mod' → logprob: -11.00781536102295
    9. 'factor' → logprob: -11.63281536102295
    10. 'init' → logprob: -11.63281536102295

Token 520: 'call' (ID: 9925)
  Prédit: 'init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.008346008136868477
    2. 'getitem' → logprob: -5.008346080780029
    3. 'len' → logprob: -6.508346080780029
    4. 'call' → logprob: -9.133345603942871
    5. 'pow' → logprob: -11.008345603942871
    6. 'get' → logprob: -12.258345603942871
    7. 'contains' → logprob: -13.133345603942871
    8. 'iter' → logprob: -13.258345603942871
    9. 'next' → logprob: -13.383345603942871
    10. 'repr' → logprob: -14.133345603942871

Token 521: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0018150020623579621
    2. '(' → logprob: -6.376814842224121
    3. ' (' → logprob: -9.626814842224121
    4. '__(' → logprob: -10.251814842224121
    5. '(s' → logprob: -12.626814842224121
    6. ')(' → logprob: -13.001814842224121
    7. '(
' → logprob: -13.376814842224121
    8. 'self' → logprob: -14.126814842224121
    9. '}(' → logprob: -14.501814842224121
    10. '(this' → logprob: -14.751814842224121

Token 522: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -3.128163257315464e-07
    2. ' self' → logprob: -15.125
    3. '   ' → logprob: -17.125
    4. 'value' → logprob: -17.875
    5. 's' → logprob: -18.25
    6. '(self' → logprob: -18.5
    7. '       ' → logprob: -19.0
    8. ',' → logprob: -19.375
    9. '0' → logprob: -19.75
    10. '  ' → logprob: -20.625

Token 523: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001884015218820423
    2. ' ,' → logprob: -8.750188827514648
    3. ',n' → logprob: -11.125188827514648
    4. ',value' → logprob: -11.250188827514648
    5. ',index' → logprob: -14.750188827514648
    6. ',val' → logprob: -14.875188827514648
    7. ',num' → logprob: -15.625188827514648
    8. ',k' → logprob: -16.00018882751465
    9. '‌,' → logprob: -16.12518882751465
    10. ',max' → logprob: -16.12518882751465

Token 524: ' n' (ID: 297)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.530914843082428
    2. 'n' → logprob: -1.0309147834777832
    3. ' value' → logprob: -3.155914783477783
    4. ' n' → logprob: -4.530914783477783
    5. 'self' → logprob: -6.405914783477783
    6. 'num' → logprob: -10.030915260314941
    7. ' self' → logprob: -10.405915260314941
    8. 'val' → logprob: -10.530915260314941
    9. ' ' → logprob: -10.780915260314941
    10. 'index' → logprob: -11.155915260314941

Token 525: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.578184497309849e-05
    2. ',r' → logprob: -9.500085830688477
    3. ' ,' → logprob: -11.500085830688477
    4. 'r' → logprob: -14.250085830688477
    5. ',n' → logprob: -16.875085830688477
    6. ' r' → logprob: -17.250085830688477
    7. ',k' → logprob: -17.375085830688477
    8. '   ' → logprob: -18.125085830688477
    9. '):' → logprob: -18.250085830688477
    10. ',
' → logprob: -18.625085830688477

Token 526: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.05533818528056145
    2. 'k' → logprob: -2.930338144302368
    3. ' r' → logprob: -7.805338382720947
    4. ' k' → logprob: -10.805337905883789
    5. '
' → logprob: -11.680337905883789
    6. '```' → logprob: -11.930337905883789
    7. ' ' → logprob: -12.555337905883789
    8. '   ' → logprob: -12.680337905883789
    9. '	r' → logprob: -13.305337905883789
    10. '  ' → logprob: -13.930337905883789

Token 527: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.000229046301683411
    2. ')' → logprob: -8.625228881835938
    3. ',' → logprob: -10.375228881835938
    4. '):
' → logprob: -11.375228881835938
    5. ' ):' → logprob: -12.250228881835938
    6. ':' → logprob: -13.625228881835938
    7. '):
' → logprob: -15.000228881835938
    8. '),' → logprob: -15.875228881835938
    9. '=None' → logprob: -16.375228881835938
    10. '   ' → logprob: -16.375228881835938

Token 528: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07417457550764084
    2. '<|end|>' → logprob: -2.699174642562866
    3. ':' → logprob: -6.699174404144287
    4. '):' → logprob: -6.949174404144287
    5. ')' → logprob: -7.074174404144287
    6. '   ' → logprob: -7.449174404144287
    7. ' ' → logprob: -9.199174880981445
    8. '<|end|>' → logprob: -9.324174880981445
    9. '    ' → logprob: -9.449174880981445
    10. ' if' → logprob: -9.699174880981445

Token 529: ' return' (ID: 622)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.46503400802612305
    2. '       ' → logprob: -1.465034008026123
    3. ' if' → logprob: -1.965034008026123
    4. '   ' → logprob: -7.715034008026123
    5. '	if' → logprob: -8.590034484863281
    6. 'return' (adapté à ' return') → logprob: -11.340034484863281
    7. 'r' → logprob: -11.590034484863281
    8. 'n' → logprob: -12.090034484863281
    9. '	' → logprob: -13.215034484863281
    10. '<|end|>' → logprob: -13.715034484863281

Token 530: ' self' (ID: 1051)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.5729888677597046
    2. 'self' → logprob: -0.9479888677597046
    3. ' (' → logprob: -3.697988986968994
    4. ' self' → logprob: -3.822988986968994
    5. '(' → logprob: -6.572988986968994
    6. '0' → logprob: -8.072988510131836
    7. '((' → logprob: -8.572988510131836
    8. '(
' → logprob: -9.447988510131836
    9. ' ' → logprob: -11.197988510131836
    10. '   ' → logprob: -12.572988510131836

Token 531: '.fac' (ID: 108153)
  Prédit: '.fac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.fac' → logprob: -0.01716495491564274
    2. '.com' → logprob: -4.142165184020996
    3. '.combine' → logprob: -7.267165184020996
    4. '.factor' → logprob: -8.767165184020996
    5. 'comb' → logprob: -10.017165184020996
    6. '.comp' → logprob: -10.392165184020996
    7. '._' → logprob: -10.517165184020996
    8. '.combo' → logprob: -10.517165184020996
    9. 'fac' → logprob: -10.892165184020996
    10. '.mod' → logprob: -10.892165184020996

Token 532: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -1.0280383548888494e-06
    2. 'n' → logprob: -14.500000953674316
    3. '[' → logprob: -15.125000953674316
    4. '[r' → logprob: -17.500001907348633
    5. '(n' → logprob: -17.625001907348633
    6. '	n' → logprob: -19.250001907348633
    7. '```' → logprob: -19.375001907348633
    8. ' [' → logprob: -19.625001907348633
    9. '[int' → logprob: -19.750001907348633
    10. '[
' → logprob: -19.875001907348633

Token 533: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -8.65707261255011e-06
    2. ']*' → logprob: -12.500008583068848
    3. '   ' → logprob: -12.625008583068848
    4. ' ]' → logprob: -13.750008583068848
    5. ']
' → logprob: -14.875008583068848
    6. '       ' → logprob: -15.875008583068848
    7. ' ' → logprob: -18.125009536743164
    8. ']%' → logprob: -18.500009536743164
    9. '    ' → logprob: -18.625009536743164
    10. '[r' → logprob: -18.625009536743164

Token 534: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.20148614048957825
    2. ' *' → logprob: -1.7014861106872559
    3. '   ' → logprob: -10.326486587524414
    4. '*self' → logprob: -11.201486587524414
    5. '       ' → logprob: -12.451486587524414
    6. ' ' → logprob: -12.451486587524414
    7. '        ' → logprob: -12.451486587524414
    8. '*(' → logprob: -12.701486587524414
    9. '    ' → logprob: -13.201486587524414
    10. '*r' → logprob: -13.451486587524414

Token 535: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.009761752560734749
    2. ' self' → logprob: -4.634761810302734
    3. '(self' → logprob: -13.134761810302734
    4. '<|end|>' → logprob: -13.259761810302734
    5. '	self' → logprob: -14.259761810302734
    6. 's' → logprob: -15.259761810302734
    7. '[self' → logprob: -15.259761810302734
    8. '       ' → logprob: -15.259761810302734
    9. '   ' → logprob: -15.634761810302734
    10. ' ' → logprob: -16.134761810302734

Token 536: '.f' (ID: 1196)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.021056905388832092
    2. '.f' → logprob: -3.896056890487671
    3. '	f' → logprob: -8.14605712890625
    4. '_f' → logprob: -8.77105712890625
    5. '(f' → logprob: -11.14605712890625
    6. ''f' → logprob: -11.52105712890625
    7. '   ' → logprob: -12.39605712890625
    8. '[f' → logprob: -12.39605712890625
    9. 'fac' → logprob: -12.39605712890625
    10. ',f' → logprob: -12.39605712890625

Token 537: 'acin' (ID: 18829)
  Prédit: 'acin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acin' → logprob: -0.0036794093903154135
    2. 'ac' → logprob: -5.628679275512695
    3. 'cin' → logprob: -9.878679275512695
    4. 'ain' → logprob: -10.878679275512695
    5. '
' → logprob: -13.503679275512695
    6. 'a' → logprob: -13.753679275512695
    7. '```' → logprob: -13.878679275512695
    8. 'inv' → logprob: -14.003679275512695
    9. '#' → logprob: -14.503679275512695
    10. 'acc' → logprob: -14.628679275512695

Token 538: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -1.0280383548888494e-06
    2. 'x' → logprob: -15.375000953674316
    3. 'vx' → logprob: -15.625000953674316
    4. 'vin' → logprob: -15.875000953674316
    5. '[v' → logprob: -16.750001907348633
    6. 'vi' → logprob: -16.750001907348633
    7. '
' → logprob: -16.750001907348633
    8. ' v' → logprob: -17.000001907348633
    9. 'vf' → logprob: -17.000001907348633
    10. 'в' → logprob: -17.375001907348633

Token 539: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -1.1472419600977446e-06
    2. 'r' → logprob: -14.000000953674316
    3. '[' → logprob: -15.875000953674316
    4. '[n' → logprob: -16.375001907348633
    5. '(r' → logprob: -16.500001907348633
    6. '	r' → logprob: -17.750001907348633
    7. '
' → logprob: -18.000001907348633
    8. '```' → logprob: -18.375001907348633
    9. '   ' → logprob: -19.125001907348633
    10. '[
' → logprob: -19.500001907348633

Token 540: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -2.3676733690081164e-05
    2. ']*' → logprob: -10.75002384185791
    3. ']%' → logprob: -14.00002384185791
    4. ' ]' → logprob: -14.75002384185791
    5. '']' → logprob: -15.00002384185791
    6. '*' → logprob: -15.00002384185791
    7. ']
' → logprob: -16.125022888183594
    8. '}' → logprob: -16.750022888183594
    9. '<|end|>' → logprob: -16.750022888183594
    10. '%' → logprob: -17.000022888183594

Token 541: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.6329998970031738
    2. ' %' → logprob: -0.7579998970031738
    3. '   ' → logprob: -8.507999420166016
    4. ' *' → logprob: -9.007999420166016
    5. '       ' → logprob: -11.632999420166016
    6. '	' → logprob: -11.632999420166016
    7. '    ' → logprob: -11.632999420166016
    8. ' ' → logprob: -11.757999420166016
    9. '[' → logprob: -11.882999420166016
    10. '```' → logprob: -11.882999420166016

Token 542: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00317783304490149
    2. ' self' → logprob: -5.753177642822266
    3. '(self' → logprob: -16.628177642822266
    4. '
' → logprob: -16.878177642822266
    5. ' ' → logprob: -18.753177642822266
    6. '	self' → logprob: -18.878177642822266
    7. '```' → logprob: -19.253177642822266
    8. ' ' → logprob: -19.378177642822266
    9. '[self' → logprob: -19.378177642822266
    10. 's' → logprob: -19.753177642822266

Token 543: '.mod' (ID: 19046)
  Prédit: '.mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.mod' → logprob: -0.0019297054968774319
    2. 'mod' → logprob: -6.251929759979248
    3. '.' → logprob: -14.00192928314209
    4. ' .' → logprob: -16.626930236816406
    5. '	mod' → logprob: -16.876930236816406
    6. '_mod' → logprob: -17.501930236816406
    7. ' mod' → logprob: -17.626930236816406
    8. '```' → logprob: -18.126930236816406
    9. '   ' → logprob: -19.501930236816406
    10. 'omod' → logprob: -19.626930236816406

Token 544: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.005397038068622351
    2. '*' → logprob: -5.380396842956543
    3. '   ' → logprob: -7.630396842956543
    4. '       ' → logprob: -8.255396842956543
    5. ' ' → logprob: -11.880396842956543
    6. ' ' → logprob: -11.880396842956543
    7. '	' → logprob: -12.005396842956543
    8. '  ' → logprob: -12.505396842956543
    9. '```' → logprob: -12.755396842956543
    10. '    ' → logprob: -13.130396842956543

Token 545: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00038038729690015316
    2. ' self' → logprob: -7.875380516052246
    3. '(self' → logprob: -16.00037956237793
    4. '[self' → logprob: -16.87537956237793
    5. '	self' → logprob: -17.00037956237793
    6. '       ' → logprob: -17.37537956237793
    7. '   ' → logprob: -17.50037956237793
    8. ' ' → logprob: -18.62537956237793
    9. '  ' → logprob: -19.00037956237793
    10. '<|end|>' → logprob: -19.50037956237793

Token 546: '.f' (ID: 1196)
  Prédit: '.f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.f' → logprob: -2.3438327843905427e-05
    2. '.fac' → logprob: -11.37502384185791
    3. '	f' → logprob: -12.12502384185791
    4. '.' → logprob: -12.62502384185791
    5. ' .' → logprob: -13.87502384185791
    6. 'f' → logprob: -14.37502384185791
    7. '_f' → logprob: -14.50002384185791
    8. '```' → logprob: -15.25002384185791
    9. '[' → logprob: -15.62502384185791
    10. 'fac' → logprob: -15.87502384185791

Token 547: 'acin' (ID: 18829)
  Prédit: 'ac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ac' → logprob: -0.5658945441246033
    2. 'acin' → logprob: -0.9408945441246033
    3. 'inv' → logprob: -3.440894603729248
    4. 'cin' → logprob: -5.065894603729248
    5. 'ain' → logprob: -6.190894603729248
    6. '   ' → logprob: -7.565894603729248
    7. '```' → logprob: -8.31589412689209
    8. 'a' → logprob: -9.31589412689209
    9. 'c' → logprob: -9.81589412689209
    10. '  ' → logprob: -9.94089412689209

Token 548: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -1.7432603272027336e-06
    2. 'inv' → logprob: -14.500001907348633
    3. 'vx' → logprob: -15.000001907348633
    4. 'vin' → logprob: -15.625001907348633
    5. '
' → logprob: -15.625001907348633
    6. '_inv' → logprob: -16.500001907348633
    7. 'vf' → logprob: -16.875001907348633
    8. 'x' → logprob: -17.125001907348633
    9. '_v' → logprob: -17.250001907348633
    10. 'nv' → logprob: -17.500001907348633

Token 549: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -5.512236498361744e-07
    2. '[' → logprob: -15.125000953674316
    3. 'n' → logprob: -16.375
    4. ' [' → logprob: -17.0
    5. '(n' → logprob: -17.125
    6. '[
' → logprob: -17.5
    7. '[[' → logprob: -18.375
    8. '
' → logprob: -18.875
    9. '   ' → logprob: -18.875
    10. '[(' → logprob: -19.25

Token 550: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.1049475446343422
    2. ' -' → logprob: -2.354947566986084
    3. '-r' → logprob: -5.354947566986084
    4. '-R' → logprob: -13.229947090148926
    5. ' ' → logprob: -13.979947090148926
    6. '   ' → logprob: -14.979947090148926
    7. '-
' → logprob: -15.104947090148926
    8. '-re' → logprob: -15.479947090148926
    9. '−' → logprob: -15.854947090148926
    10. '-р' → logprob: -16.104948043823242

Token 551: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -4.842555426876061e-06
    2. ' r' → logprob: -12.250004768371582
    3. '	r' → logprob: -19.3750057220459
    4. '   ' → logprob: -22.1250057220459
    5. '[r' → logprob: -22.5000057220459
    6. '_r' → logprob: -23.0000057220459
    7. 'р' → logprob: -23.2500057220459
    8. '  ' → logprob: -24.0000057220459
    9. ' ' → logprob: -24.3750057220459
    10. '
' → logprob: -25.1250057220459

Token 552: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -7.350386295001954e-05
    2. ']%' → logprob: -9.875073432922363
    3. ' ]' → logprob: -10.750073432922363
    4. ']
' → logprob: -15.375073432922363
    5. ']>' → logprob: -16.12507438659668
    6. '']' → logprob: -16.25007438659668
    7. '],' → logprob: -16.87507438659668
    8. '}' → logprob: -17.25007438659668
    9. '<|end|>' → logprob: -17.25007438659668
    10. '])' → logprob: -17.75007438659668

Token 553: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.5759493708610535
    2. ' %' → logprob: -0.8259493708610535
    3. ' ' → logprob: -12.575949668884277
    4. '   ' → logprob: -13.200949668884277
    5. '%n' → logprob: -13.575949668884277
    6. ' ' → logprob: -14.075949668884277
    7. '[' → logprob: -14.575949668884277
    8. ')' → logprob: -14.700949668884277
    9. ')%' → logprob: -14.950949668884277
    10. '```' → logprob: -15.325949668884277

Token 554: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.038042064756155014
    2. ' self' → logprob: -3.2880420684814453
    3. ' ' → logprob: -15.538042068481445
    4. '   ' → logprob: -16.163042068481445
    5. '	self' → logprob: -16.288042068481445
    6. '(self' → logprob: -16.663042068481445
    7. '       ' → logprob: -17.288042068481445
    8. ' ' → logprob: -17.663042068481445
    9. '  ' → logprob: -18.163042068481445
    10. '
' → logprob: -18.413042068481445

Token 555: '.mod' (ID: 19046)
  Prédit: '.mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.mod' → logprob: -0.00012190054985694587
    2. 'self' → logprob: -9.6251220703125
    3. 'mod' → logprob: -10.0001220703125
    4. '_mod' → logprob: -12.0001220703125
    5. '.self' → logprob: -12.7501220703125
    6. '.' → logprob: -14.8751220703125
    7. ' .' → logprob: -15.2501220703125
    8. '	mod' → logprob: -15.8751220703125
    9. '.modal' → logprob: -16.1251220703125
    10. ' self' → logprob: -16.3751220703125

Token 556: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 557: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2603404223918915
    2. '
' → logprob: -2.385340452194214
    3. '<|end|>' → logprob: -2.760340452194214
    4. '    
' → logprob: -2.885340452194214
    5. 'def' → logprob: -5.385340213775635
    6. '  
' → logprob: -6.010340213775635
    7. '	def' → logprob: -6.260340213775635
    8. '	
' → logprob: -6.760340213775635
    9. ' 
' → logprob: -6.885340213775635
    10. '   
' → logprob: -7.135340213775635

Token 558: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.08516991883516312
    2. ' def' → logprob: -2.835170030593872
    3. '
' → logprob: -4.460169792175293
    4. '   ' → logprob: -4.585169792175293
    5. '	def' → logprob: -7.085169792175293
    6. '    
' → logprob: -8.835169792175293
    7. ' ' → logprob: -9.710169792175293
    8. '```' → logprob: -9.960169792175293
    9. ' 
' → logprob: -10.335169792175293
    10. '<|end|>' → logprob: -11.460169792175293

Token 559: ' generate' (ID: 10419)
  Prédit: 'generate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'generate' → logprob: -0.16024261713027954
    2. ' generate' → logprob: -1.9102425575256348
    3. 'def' → logprob: -11.785243034362793
    4. '_generate' → logprob: -13.160243034362793
    5. '   ' → logprob: -13.285243034362793
    6. '  ' → logprob: -13.660243034362793
    7. ' ' → logprob: -13.785243034362793
    8. ' def' → logprob: -13.910243034362793
    9. 'gener' → logprob: -14.285243034362793
    10. '
' → logprob: -14.410243034362793

Token 560: '_factor' (ID: 43757)
  Prédit: '_mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mod' → logprob: -0.0012003510491922498
    2. '_factor' → logprob: -7.126200199127197
    3. 'mod' → logprob: -7.876200199127197
    4. 'factor' → logprob: -11.751200675964355
    5. '   ' → logprob: -12.501200675964355
    6. '_' → logprob: -13.001200675964355
    7. 'self' → logprob: -14.501200675964355
    8. ' ' → logprob: -14.876200675964355
    9. '_m' → logprob: -15.626200675964355
    10. '_fac' → logprob: -15.751200675964355

Token 561: 'ial' (ID: 563)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.6957212686538696
    2. 'v' → logprob: -1.9457212686538696
    3. 'val' → logprob: -2.07072114944458
    4. 'al' → logprob: -2.07072114944458
    5. '_factor' → logprob: -3.07072114944458
    6. 'ial' → logprob: -3.44572114944458
    7. 'mod' → logprob: -4.32072114944458
    8. '_inv' → logprob: -5.82072114944458
    9. 'iv' → logprob: -6.44572114944458
    10. 'list' → logprob: -6.57072114944458

Token 562: '_lists' (ID: 93609)
  Prédit: '_lists'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lists' → logprob: -0.005715589504688978
    2. 's' → logprob: -5.880715370178223
    3. '_list' → logprob: -6.005715370178223
    4. 'lists' → logprob: -8.630715370178223
    5. '(self' → logprob: -8.880715370178223
    6. 'self' → logprob: -9.380715370178223
    7. '_' → logprob: -11.130715370178223
    8. 'def' → logprob: -12.130715370178223
    9. 'list' → logprob: -12.505715370178223
    10. '(' → logprob: -12.880715370178223

Token 563: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -8.2994620242971e-06
    2. '(' → logprob: -11.750008583068848
    3. '(
' → logprob: -15.500008583068848
    4. 'self' → logprob: -16.50000762939453
    5. '(s' → logprob: -17.75000762939453
    6. '(Self' → logprob: -18.12500762939453
    7. ' (' → logprob: -18.37500762939453
    8. '   ' → logprob: -18.37500762939453
    9. '(this' → logprob: -18.50000762939453
    10. '(sel' → logprob: -18.62500762939453

Token 564: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.723973582556937e-05
    2. '(' → logprob: -11.250017166137695
    3. 'self' → logprob: -13.125017166137695
    4. '(max' → logprob: -13.625017166137695
    5. ',' → logprob: -15.250017166137695
    6. 'def' → logprob: -15.375017166137695
    7. ' (' → logprob: -15.875017166137695
    8. '(s' → logprob: -16.375017166137695
    9. '(
' → logprob: -16.875017166137695
    10. '   ' → logprob: -17.000017166137695

Token 565: ' n' (ID: 297)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.029714040458202362
    2. 'n' → logprob: -4.529714107513428
    3. 'self' → logprob: -4.529714107513428
    4. ' max' → logprob: -5.279714107513428
    5. 'value' → logprob: -6.154714107513428
    6. ' n' → logprob: -9.02971363067627
    7. '   ' → logprob: -9.52971363067627
    8. 'num' → logprob: -9.65471363067627
    9. ' self' → logprob: -9.77971363067627
    10. 'limit' → logprob: -10.02971363067627

Token 566: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3026130199432373
    2. 'self' → logprob: -1.5526130199432373
    3. ',' → logprob: -3.0526130199432373
    4. '):
' → logprob: -6.302613258361816
    5. '   ' → logprob: -9.302613258361816
    6. '       ' → logprob: -9.552613258361816
    7. ' self' → logprob: -9.677613258361816
    8. '(self' → logprob: -10.302613258361816
    9. ',self' → logprob: -10.302613258361816
    10. '):
' → logprob: -10.677613258361816

Token 567: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00016480287013109773
    2. 'fac' → logprob: -9.250164985656738
    3. '   ' → logprob: -10.875164985656738
    4. 'self' → logprob: -11.000164985656738
    5. '	   ' → logprob: -11.375164985656738
    6. '	' → logprob: -11.375164985656738
    7. 'n' → logprob: -13.250164985656738
    8. '        
' → logprob: -13.500164985656738
    9. '_fac' → logprob: -13.500164985656738
    10. '      ' → logprob: -14.625164985656738

Token 568: ' factorial' (ID: 111204)
  Prédit: 'fac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fac' → logprob: -0.04888971894979477
    2. 'fact' → logprob: -3.423889636993408
    3. '       ' → logprob: -4.298889636993408
    4. 'factor' → logprob: -6.548889636993408
    5. ' fac' → logprob: -10.423890113830566
    6. 'f' → logprob: -10.673890113830566
    7. '   ' → logprob: -11.298890113830566
    8. 'self' → logprob: -11.548890113830566
    9. 'facts' → logprob: -11.548890113830566
    10. 'fab' → logprob: -11.673890113830566

Token 569: '_vals' (ID: 71688)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3968164324760437
    2. '=' → logprob: -1.6468164920806885
    3. ' =' → logprob: -2.0218164920806885
    4. '=[' → logprob: -6.396816253662109
    5. '_list' → logprob: -8.14681625366211
    6. '_s' → logprob: -9.02181625366211
    7. '_' → logprob: -9.14681625366211
    8. '   ' → logprob: -9.27181625366211
    9. '=[]
' → logprob: -10.39681625366211
    10. '_=' → logprob: -10.52181625366211

Token 570: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4741179645061493
    2. ' =' → logprob: -0.9741179943084717
    3. '=[' → logprob: -10.72411823272705
    4. ',' → logprob: -11.97411823272705
    5. '   ' → logprob: -12.22411823272705
    6. ' ' → logprob: -12.72411823272705
    7. ' =[' → logprob: -13.22411823272705
    8. '=[]
' → logprob: -13.97411823272705
    9. '  ' → logprob: -13.97411823272705
    10. '=[]' → logprob: -14.34911823272705

Token 571: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -9.782141569303349e-05
    2. ' [' → logprob: -9.25009822845459
    3. '[n' → logprob: -15.25009822845459
    4. '[class' → logprob: -15.37509822845459
    5. '[value' → logprob: -15.62509822845459
    6. '   ' → logprob: -16.125097274780273
    7. '[val' → logprob: -16.250097274780273
    8. '1' → logprob: -16.625097274780273
    9. '[num' → logprob: -16.750097274780273
    10. '[start' → logprob: -17.000097274780273

Token 572: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.625
    3. '   ' → logprob: -20.875
    4. '
' → logprob: -21.5
    5. '１' → logprob: -21.75
    6. 'None' → logprob: -22.0
    7. '```' → logprob: -22.375
    8. '0' → logprob: -23.125
    9. '۱' → logprob: -23.125
    10. '
' → logprob: -23.5

Token 573: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.005862667225301266
    2. ']
' → logprob: -5.255862712860107
    3. ']*' → logprob: -8.25586223602295
    4. ']+' → logprob: -8.88086223602295
    5. ' for' → logprob: -9.25586223602295
    6. ']*(' → logprob: -9.88086223602295
    7. ',' → logprob: -10.25586223602295
    8. 'for' → logprob: -10.63086223602295
    9. '
' → logprob: -12.00586223602295
    10. ']
' → logprob: -12.00586223602295

Token 574: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7763808965682983
    2. '       ' → logprob: -1.4013808965682983
    3. ' for' → logprob: -1.6513808965682983
    4. '	for' → logprob: -3.276381015777588
    5. '
' → logprob: -3.401381015777588
    6. '	' → logprob: -4.151381015777588
    7. ',' → logprob: -4.651381015777588
    8. '   ' → logprob: -5.651381015777588
    9. '		
' → logprob: -7.276381015777588
    10. '        
' → logprob: -8.40138053894043

Token 575: ' factorial' (ID: 111204)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.40915367007255554
    2. '       ' → logprob: -1.409153699874878
    3. ' for' → logprob: -2.534153699874878
    4. '	for' → logprob: -4.909153461456299
    5. '	' → logprob: -5.909153461456299
    6. '   ' → logprob: -7.159153461456299
    7. 'factor' → logprob: -7.159153461456299
    8. '	   ' → logprob: -8.409153938293457
    9. ' ' → logprob: -9.909153938293457
    10. 'i' → logprob: -10.284153938293457

Token 576: '_inv' (ID: 53427)
  Prédit: '_vals'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_vals' → logprob: -0.03062477335333824
    2. '=' → logprob: -4.280624866485596
    3. ' =' → logprob: -5.155624866485596
    4. '_val' → logprob: -5.405624866485596
    5. 'vals' → logprob: -5.655624866485596
    6. 's' → logprob: -6.905624866485596
    7. 'val' → logprob: -7.780624866485596
    8. '_' → logprob: -7.905624866485596
    9. 'for' → logprob: -8.405624389648438
    10. '```' → logprob: -8.780624389648438

Token 577: '_vals' (ID: 71688)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.058559369295835495
    2. '_vals' → logprob: -2.9335594177246094
    3. 'al' → logprob: -6.808559417724609
    4. ' =' → logprob: -7.058559417724609
    5. 'vals' → logprob: -7.058559417724609
    6. 'als' → logprob: -7.808559417724609
    7. '=' → logprob: -8.43355941772461
    8. '_s' → logprob: -9.05855941772461
    9. '=[]' → logprob: -10.93355941772461
    10. ' s' → logprob: -11.30855941772461

Token 578: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12711173295974731
    2. ' =' → logprob: -2.1271116733551025
    3. '=[' → logprob: -9.127111434936523
    4. '.append' → logprob: -10.377111434936523
    5. '=[]' → logprob: -10.502111434936523
    6. ' =[' → logprob: -12.002111434936523
    7. ',' → logprob: -12.752111434936523
    8. '[' → logprob: -13.127111434936523
    9. '=[
' → logprob: -13.502111434936523
    10. '=[]
' → logprob: -13.502111434936523

Token 579: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0008056987426243722
    2. ' [' → logprob: -7.125805854797363
    3. '1' → logprob: -14.750805854797363
    4. ' ' → logprob: -15.000805854797363
    5. 'factor' → logprob: -15.625805854797363
    6. '   ' → logprob: -16.125804901123047
    7. '[n' → logprob: -16.500804901123047
    8. '  ' → logprob: -17.125804901123047
    9. '[class' → logprob: -18.250804901123047
    10. '[
' → logprob: -18.375804901123047

Token 580: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. 'None' → logprob: -15.250000953674316
    3. 'pow' → logprob: -15.875000953674316
    4. ']' → logprob: -16.375
    5. ' ' → logprob: -16.625
    6. '0' → logprob: -16.625
    7. '```' → logprob: -17.25
    8. '
' → logprob: -18.0625
    9. '-' → logprob: -18.125
    10. '(' → logprob: -19.0625

Token 581: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.11143236607313156
    2. ']' → logprob: -2.3614323139190674
    3. ',' → logprob: -4.8614325523376465
    4. ']

' → logprob: -5.9864325523376465
    5. '   ' → logprob: -7.6114325523376465
    6. ']
' → logprob: -8.611432075500488
    7. '
' → logprob: -9.236432075500488
    8. ',
' → logprob: -9.361432075500488
    9. '	' → logprob: -10.986432075500488
    10. ' for' → logprob: -11.611432075500488

Token 582: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2326563149690628
    2. ' for' → logprob: -2.607656240463257
    3. '
' → logprob: -2.857656240463257
    4. 'for' → logprob: -2.982656240463257
    5. '	' → logprob: -4.482656478881836
    6. '	for' → logprob: -5.107656478881836
    7. '		
' → logprob: -5.732656478881836
    8. '   ' → logprob: -6.107656478881836
    9. '        
' → logprob: -6.732656478881836
    10. ',' → logprob: -7.357656478881836

Token 583: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.023533238098025322
    2. '       ' → logprob: -3.773533344268799
    3. ' for' → logprob: -8.39853286743164
    4. 'fact' → logprob: -10.27353286743164
    5. 'factor' → logprob: -10.89853286743164
    6. '	for' → logprob: -12.39853286743164
    7. 'fac' → logprob: -13.02353286743164
    8. '   ' → logprob: -13.89853286743164
    9. '	' → logprob: -14.14853286743164
    10. '```' → logprob: -14.52353286743164

Token 584: ' idx' (ID: 14016)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.27039018273353577
    2. 'idx' → logprob: -1.5203901529312134
    3. 'num' → logprob: -4.395390033721924
    4. 'val' → logprob: -6.145390033721924
    5. 'x' → logprob: -6.270390033721924
    6. 'value' → logprob: -6.895390033721924
    7. 'index' → logprob: -8.020390510559082
    8. 'ii' → logprob: -9.020390510559082
    9. 'k' → logprob: -9.270390510559082
    10. 'number' → logprob: -9.395390510559082

Token 585: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07002823799848557
    2. 'in' → logprob: -2.695028305053711
    3. '	in' → logprob: -9.945028305053711
    4. '1' → logprob: -10.570028305053711
    5. '_in' → logprob: -12.195028305053711
    6. ' ' → logprob: -12.570028305053711
    7. ',' → logprob: -13.070028305053711
    8. 'In' → logprob: -13.445028305053711
    9. '   ' → logprob: -14.320028305053711
    10. 'import' → logprob: -14.320028305053711

Token 586: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0003361774142831564
    2. ' range' → logprob: -8.000336647033691
    3. '   ' → logprob: -14.875336647033691
    4. ' ' → logprob: -15.375336647033691
    5. 'in' → logprob: -16.750335693359375
    6. '  ' → logprob: -17.250335693359375
    7. '    ' → logprob: -18.250335693359375
    8. '	range' → logprob: -18.500335693359375
    9. 'list' → logprob: -18.625335693359375
    10. '
' → logprob: -18.625335693359375

Token 587: '(' (ID: 7)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.034592388459714e-06
    2. '(' → logprob: -12.875005722045898
    3. 'n' → logprob: -12.875005722045898
    4. ' ' → logprob: -14.125005722045898
    5. '(n' → logprob: -16.6250057220459
    6. '   ' → logprob: -18.1250057220459
    7. '１' → logprob: -19.8750057220459
    8. '
' → logprob: -21.2500057220459
    9. '    ' → logprob: -21.2500057220459
    10. ',n' → logprob: -21.7500057220459

Token 588: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.107425062713446e-06
    2. 'n' → logprob: -11.875006675720215
    3. ' ' → logprob: -16.00000762939453
    4. '   ' → logprob: -20.12500762939453
    5. '１' → logprob: -21.50000762939453
    6. '2' → logprob: -22.12500762939453
    7. '(' → logprob: -22.25000762939453
    8. ' n' → logprob: -22.75000762939453
    9. '	n' → logprob: -23.37500762939453
    10. '```' → logprob: -23.37500762939453

Token 589: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004345379304140806
    2. ',n' → logprob: -5.504345417022705
    3. ' ,' → logprob: -8.254344940185547
    4. 'n' → logprob: -12.754344940185547
    5. ',
' → logprob: -12.879344940185547
    6. ' to' → logprob: -14.629344940185547
    7. '   ' → logprob: -15.754344940185547
    8. ',len' → logprob: -16.004344940185547
    9. 'to' → logprob: -16.004344940185547
    10. '```' → logprob: -16.254344940185547

Token 590: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.01815146580338478
    2. ' n' → logprob: -4.01815128326416
    3. '	n' → logprob: -13.39315128326416
    4. '   ' → logprob: -17.643152236938477
    5. '    ' → logprob: -19.143152236938477
    6. ')n' → logprob: -20.393152236938477
    7. '  ' → logprob: -20.768152236938477
    8. '_n' → logprob: -20.893152236938477
    9. '(n' → logprob: -21.268152236938477
    10. ' ' → logprob: -21.268152236938477

Token 591: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.20143575966358185
    2. ' +' → logprob: -1.7014358043670654
    3. '):
' → logprob: -11.576436042785645
    4. '):' → logprob: -11.826436042785645
    5. '+
' → logprob: -12.951436042785645
    6. ' +
' → logprob: -13.701436042785645
    7. ' ' → logprob: -14.201436042785645
    8. ',' → logprob: -14.326436042785645
    9. '   ' → logprob: -15.451436042785645
    10. ' ,' → logprob: -15.576436042785645

Token 592: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00023083435371518135
    2. ' ' → logprob: -8.37523078918457
    3. '
' → logprob: -16.12523078918457
    4. '   ' → logprob: -16.87523078918457
    5. ')' → logprob: -17.37523078918457
    6. '```' → logprob: -17.50023078918457
    7. '):
' → logprob: -19.12523078918457
    8. '+' → logprob: -19.37523078918457
    9. '  ' → logprob: -19.37523078918457
    10. '    ' → logprob: -20.62523078918457

Token 593: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.014684110297821e-06
    2. ' ' → logprob: -11.625008583068848
    3. '   ' → logprob: -19.125009536743164
    4. '
' → logprob: -19.375009536743164
    5. '```' → logprob: -20.125009536743164
    6. ')' → logprob: -20.250009536743164
    7. '  ' → logprob: -20.500009536743164
    8. '+' → logprob: -22.000009536743164
    9. '۱' → logprob: -22.125009536743164
    10. '１' → logprob: -22.125009536743164

Token 594: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.022693946957588196
    2. ':' → logprob: -4.647694110870361
    3. '):' → logprob: -4.772694110870361
    4. ':
' → logprob: -5.647694110870361
    5. '       ' → logprob: -7.272694110870361
    6. '   ' → logprob: -9.897693634033203
    7. '):
' → logprob: -10.022693634033203
    8. ',' → logprob: -10.397693634033203
    9. ' ):
' → logprob: -10.772693634033203
    10. '	' → logprob: -11.772693634033203

Token 595: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008263258263468742
    2. 'factor' → logprob: -5.258263111114502
    3. ' factorial' → logprob: -5.883263111114502
    4. '           ' → logprob: -9.38326358795166
    5. 'fact' → logprob: -10.13326358795166
    6. '_factor' → logprob: -10.75826358795166
    7. '```' → logprob: -10.75826358795166
    8. '	       ' → logprob: -11.00826358795166
    9. '	   ' → logprob: -11.13326358795166
    10. '	' → logprob: -11.50826358795166

Token 596: ' factorial' (ID: 111204)
  Prédit: 'factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'factor' → logprob: -0.29931193590164185
    2. '       ' → logprob: -1.424311876296997
    3. '           ' → logprob: -4.299312114715576
    4. ' factorial' → logprob: -5.799312114715576
    5. 'fact' → logprob: -6.924312114715576
    6. '   ' → logprob: -8.674311637878418
    7. '```' → logprob: -9.174311637878418
    8. '               ' → logprob: -10.424311637878418
    9. ' factor' → logprob: -10.549311637878418
    10. 'fac' → logprob: -11.674311637878418

Token 597: '_vals' (ID: 71688)
  Prédit: '_vals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vals' → logprob: -0.0003418991982471198
    2. '=' → logprob: -8.75034236907959
    3. '_val' → logprob: -9.25034236907959
    4. 'vals' → logprob: -9.62534236907959
    5. '_' → logprob: -12.00034236907959
    6. '=_' → logprob: -12.50034236907959
    7. ' =' → logprob: -12.62534236907959
    8. 's' → logprob: -12.75034236907959
    9. '_=' → logprob: -13.62534236907959
    10. '
' → logprob: -14.12534236907959

Token 598: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00038837024476379156
    2. '.' → logprob: -7.875388145446777
    3. ' .' → logprob: -12.375388145446777
    4. '.app' → logprob: -13.250388145446777
    5. 'append' → logprob: -13.750388145446777
    6. '.ap' → logprob: -14.000388145446777
    7. '_append' → logprob: -16.375389099121094
    8. '=' → logprob: -16.875389099121094
    9. '.Append' → logprob: -17.000389099121094
    10. '   ' → logprob: -17.875389099121094

Token 599: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.000925157277379185
    2. 'factor' → logprob: -7.000925064086914
    3. ' factorial' → logprob: -12.000925064086914
    4. '(' → logprob: -12.125925064086914
    5. '((' → logprob: -13.250925064086914
    6. '	f' → logprob: -16.250925064086914
    7. 'fact' → logprob: -16.750925064086914
    8. '_factor' → logprob: -17.000925064086914
    9. '.factor' → logprob: -17.250925064086914
    10. ' (' → logprob: -17.250925064086914

Token 600: 'actor' (ID: 8428)
  Prédit: 'actor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'actor' → logprob: -0.003138616681098938
    2. 'factor' → logprob: -6.003138542175293
    3. '_factor' → logprob: -7.503138542175293
    4. ' factorial' → logprob: -9.503138542175293
    5. 'act' → logprob: -11.003138542175293
    6. '   ' → logprob: -12.628138542175293
    7. '*' → logprob: -12.878138542175293
    8. '.factor' → logprob: -12.878138542175293
    9. '```' → logprob: -13.128138542175293
    10. '           ' → logprob: -13.378138542175293

Token 601: 'ial' (ID: 563)
  Prédit: 'ial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ial' → logprob: -0.34700801968574524
    2. 'al' → logprob: -1.5970079898834229
    3. 'actor' → logprob: -3.097007989883423
    4. 'val' → logprob: -4.222008228302002
    5. 'ctor' → logprob: -4.722008228302002
    6. 'ator' → logprob: -5.347008228302002
    7. 'factor' → logprob: -5.472008228302002
    8. 'atorial' → logprob: -5.597008228302002
    9. '_factor' → logprob: -5.847008228302002
    10. ' factorial' → logprob: -6.722008228302002

Token 602: '_vals' (ID: 71688)
  Prédit: '_vals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vals' → logprob: -0.0006963504129089415
    2. 'vals' → logprob: -7.500696182250977
    3. '[-' → logprob: -9.125696182250977
    4. '[idx' → logprob: -10.625696182250977
    5. 'Vals' → logprob: -11.875696182250977
    6. 's' → logprob: -13.375696182250977
    7. '_idxs' → logprob: -14.625696182250977
    8. ' vals' → logprob: -15.250696182250977
    9. '(vals' → logprob: -15.625696182250977
    10. '```' → logprob: -15.875696182250977

Token 603: '[idx' (ID: 25582)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.00020401719666551799
    2. '[idx' → logprob: -8.500204086303711
    3. '   ' → logprob: -14.625204086303711
    4. '[' → logprob: -18.37520408630371
    5. ' [-' → logprob: -19.12520408630371
    6. '```' → logprob: -19.50020408630371
    7. 'idx' → logprob: -19.62520408630371
    8. '-' → logprob: -19.75020408630371
    9. '[
' → logprob: -20.37520408630371
    10. '
' → logprob: -21.00020408630371

Token 604: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.003602917306125164
    2. ' -' → logprob: -5.628602981567383
    3. '   ' → logprob: -13.003602981567383
    4. ' ' → logprob: -15.003602981567383
    5. '1' → logprob: -16.253602981567383
    6. ']' → logprob: -16.378602981567383
    7. '−' → logprob: -17.003602981567383
    8. '```' → logprob: -17.253602981567383
    9. '  ' → logprob: -17.378602981567383
    10. ')' → logprob: -17.628602981567383

Token 605: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.36574100604048e-06
    2. ' ' → logprob: -12.375004768371582
    3. '   ' → logprob: -16.250003814697266
    4. '...' → logprob: -18.500003814697266
    5. '  ' → logprob: -18.812503814697266
    6. '<|end|>' → logprob: -18.937503814697266
    7. ')' → logprob: -19.250003814697266
    8. ']' → logprob: -19.625003814697266
    9. '```' → logprob: -19.625003814697266
    10. '    ' → logprob: -19.750003814697266

Token 606: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3425219549390022e-05
    2. ' ' → logprob: -11.25001335144043
    3. '   ' → logprob: -15.50001335144043
    4. '
' → logprob: -16.62501335144043
    5. '  ' → logprob: -16.87501335144043
    6. '    ' → logprob: -18.12501335144043
    7. '```' → logprob: -18.18751335144043
    8. ')' → logprob: -18.50001335144043
    9. ']' → logprob: -18.81251335144043
    10. '...' → logprob: -19.43751335144043

Token 607: ']' (ID: 60)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.38689595460891724
    2. ' *' → logprob: -1.1368958950042725
    3. ')' → logprob: -10.761896133422852
    4. ' ' → logprob: -13.386896133422852
    5. ' ' → logprob: -14.011896133422852
    6. ')*' → logprob: -14.886896133422852
    7. '*
' → logprob: -15.386896133422852
    8. '	' → logprob: -16.13689613342285
    9. ']' → logprob: -16.26189613342285
    10. ',' → logprob: -16.51189613342285

Token 608: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.38687559962272644
    2. ' *' → logprob: -1.1368756294250488
    3. ' ' → logprob: -13.63687515258789
    4. ' ' → logprob: -13.76187515258789
    5. '[idx' → logprob: -14.26187515258789
    6. 'idx' → logprob: -15.01187515258789
    7. '*object' → logprob: -15.51187515258789
    8. ',' → logprob: -15.63687515258789
    9. '*
' → logprob: -15.63687515258789
    10. ' idx' → logprob: -16.01187515258789

Token 609: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.014164102263748646
    2. ' idx' → logprob: -4.264163970947266
    3. '	idx' → logprob: -14.639163970947266
    4. '   ' → logprob: -16.514163970947266
    5. '(idx' → logprob: -17.639163970947266
    6. ' ' → logprob: -17.764163970947266
    7. '  ' → logprob: -20.014163970947266
    8. '[idx' → logprob: -20.014163970947266
    9. '           ' → logprob: -20.264163970947266
    10. 'id' → logprob: -20.389163970947266

Token 610: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.3868885934352875
    2. '%' → logprob: -1.1368886232376099
    3. '%c' → logprob: -12.26188850402832
    4. '%d' → logprob: -12.88688850402832
    5. ')' → logprob: -13.13688850402832
    6. ')%' → logprob: -13.63688850402832
    7. '%e' → logprob: -13.63688850402832
    8. '%n' → logprob: -13.88688850402832
    9. '%x' → logprob: -13.88688850402832
    10. '   ' → logprob: -14.13688850402832

Token 611: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0011706985533237457
    2. ' self' → logprob: -6.751170635223389
    3. '           ' → logprob: -15.251171112060547
    4. '       ' → logprob: -16.001171112060547
    5. '	self' → logprob: -16.626171112060547
    6. '   ' → logprob: -17.001171112060547
    7. '(self' → logprob: -17.251171112060547
    8. '
' → logprob: -17.626171112060547
    9. ' ' → logprob: -18.376171112060547
    10. '[self' → logprob: -19.626171112060547

Token 612: '.mod' (ID: 19046)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.2519494891166687
    2. '.mod' → logprob: -1.5019495487213135
    3. ' mod' → logprob: -11.001949310302734
    4. 'self' → logprob: -13.501949310302734
    5. '	mod' → logprob: -13.501949310302734
    6. '_mod' → logprob: -14.751949310302734
    7. '
' → logprob: -15.501949310302734
    8. ' .' → logprob: -15.626949310302734
    9. '.' → logprob: -16.501949310302734
    10. ' ' → logprob: -16.626949310302734

Token 613: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5776020884513855
    2. ')
' → logprob: -0.8276020884513855
    3. '       ' → logprob: -6.452601909637451
    4. ')
' → logprob: -10.32760238647461
    5. ')

' → logprob: -10.70260238647461
    6. ' )
' → logprob: -11.57760238647461
    7. ' )' → logprob: -11.95260238647461
    8. '   ' → logprob: -12.20260238647461
    9. '           ' → logprob: -12.20260238647461
    10. '),' → logprob: -13.45260238647461

Token 614: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01415199227631092
    2. '           ' → logprob: -4.8891520500183105
    3. '	' → logprob: -6.2641520500183105
    4. ' factorial' → logprob: -6.6391520500183105
    5. 'factor' → logprob: -6.7641520500183105
    6. ',' → logprob: -7.7641520500183105
    7. '	       ' → logprob: -7.7641520500183105
    8. '        
' → logprob: -8.014151573181152
    9. '```' → logprob: -8.014151573181152
    10. '	   ' → logprob: -8.389151573181152

Token 615: ' factorial' (ID: 111204)
  Prédit: 'factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'factor' → logprob: -0.002236970467492938
    2. '       ' → logprob: -6.752236843109131
    3. '           ' → logprob: -6.877236843109131
    4. '   ' → logprob: -11.002237319946289
    5. ' factorial' → logprob: -11.502237319946289
    6. 'fact' → logprob: -11.877237319946289
    7. 'for' → logprob: -14.627237319946289
    8. '               ' → logprob: -15.877237319946289
    9. '```' → logprob: -15.877237319946289
    10. '_factor' → logprob: -16.12723731994629

Token 616: '_inv' (ID: 53427)
  Prédit: '_inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inv' → logprob: -8.351697033504024e-05
    2. '_vals' → logprob: -9.500083923339844
    3. 'inv' → logprob: -12.125083923339844
    4. '_val' → logprob: -14.000083923339844
    5. 's' → logprob: -14.750083923339844
    6. '```' → logprob: -14.750083923339844
    7. '
' → logprob: -14.875083923339844
    8. '_INV' → logprob: -15.250083923339844
    9. '_inverse' → logprob: -15.250083923339844
    10. 'vals' → logprob: -15.500083923339844

Token 617: '_vals' (ID: 71688)
  Prédit: '_vals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vals' → logprob: -9.209963900502771e-05
    2. 'vals' → logprob: -10.250092506408691
    3. 's' → logprob: -10.500092506408691
    4. '.append' → logprob: -10.625092506408691
    5. '(vals' → logprob: -13.875092506408691
    6. '```' → logprob: -14.125092506408691
    7. 'Vals' → logprob: -14.500092506408691
    8. '
' → logprob: -14.500092506408691
    9. '=' → logprob: -14.875092506408691
    10. '_' → logprob: -15.875092506408691

Token 618: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -9.686778503237292e-05
    2. '.' → logprob: -9.250097274780273
    3. ' .' → logprob: -14.875097274780273
    4. 'append' → logprob: -15.500097274780273
    5. '.extend' → logprob: -15.750097274780273
    6. '.app' → logprob: -17.000097274780273
    7. '.Append' → logprob: -19.375097274780273
    8. '.ap' → logprob: -19.875097274780273
    9. 'Append' → logprob: -19.875097274780273
    10. '_append' → logprob: -20.125097274780273

Token 619: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.008684301748871803
    2. 'factor' → logprob: -4.758684158325195
    3. '(' → logprob: -10.258684158325195
    4. '((' → logprob: -10.383684158325195
    5. ' factorial' → logprob: -13.258684158325195
    6. 'fact' → logprob: -13.883684158325195
    7. '(
' → logprob: -14.633684158325195
    8. '_factor' → logprob: -15.883684158325195
    9. 'f' → logprob: -16.008684158325195
    10. 'Factor' → logprob: -16.383684158325195

Token 620: 'actor' (ID: 8428)
  Prédit: 'factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'factor' → logprob: -0.0063964310102164745
    2. '(f' → logprob: -5.881396293640137
    3. '(self' → logprob: -6.381396293640137
    4. 'self' → logprob: -7.256396293640137
    5. 'actor' → logprob: -7.381396293640137
    6. '(' → logprob: -8.506396293640137
    7. ' factorial' → logprob: -8.631396293640137
    8. 'fact' → logprob: -10.006396293640137
    9. '_factor' → logprob: -10.506396293640137
    10. '.factor' → logprob: -10.506396293640137

Token 621: 'ial' (ID: 563)
  Prédit: 'al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.7722963094711304
    2. '_inv' → logprob: -1.6472963094711304
    3. 'actor' → logprob: -2.27229642868042
    4. 'or' → logprob: -2.27229642868042
    5. '_factor' → logprob: -3.52229642868042
    6. 'ctor' → logprob: -3.77229642868042
    7. 'c' → logprob: -3.89729642868042
    8. 'ial' → logprob: -4.39729642868042
    9. 'tor' → logprob: -4.64729642868042
    10. '_val' → logprob: -5.02229642868042

Token 622: '_inv' (ID: 53427)
  Prédit: '_vals'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vals' → logprob: -0.08035118877887726
    2. '_inv' → logprob: -2.9553511142730713
    3. 'vals' → logprob: -4.20535135269165
    4. 'inv' → logprob: -4.70535135269165
    5. '[idx' → logprob: -8.205350875854492
    6. '[self' → logprob: -8.455350875854492
    7. '[-' → logprob: -9.080350875854492
    8. 'self' → logprob: -9.080350875854492
    9. '_val' → logprob: -9.330350875854492
    10. '[' → logprob: -9.830350875854492

Token 623: '_vals' (ID: 71688)
  Prédit: '_vals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vals' → logprob: -0.15730920433998108
    2. '[' → logprob: -2.1573092937469482
    3. 's' → logprob: -4.532309055328369
    4. '[idx' → logprob: -4.782309055328369
    5. '[-' → logprob: -5.782309055328369
    6. 'al' → logprob: -6.157309055328369
    7. 'vals' → logprob: -6.532309055328369
    8. 'als' → logprob: -6.782309055328369
    9. '[val' → logprob: -7.032309055328369
    10. '_val' → logprob: -7.657309055328369

Token 624: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.04858816787600517
    2. '[-' → logprob: -3.048588275909424
    3. '[' → logprob: -14.673587799072266
    4. 'idx' → logprob: -15.298587799072266
    5. '[id' → logprob: -17.173587799072266
    6. '	idx' → logprob: -17.548587799072266
    7. '[
' → logprob: -17.673587799072266
    8. '[index' → logprob: -18.048587799072266
    9. '(idx' → logprob: -18.798587799072266
    10. ' idx' → logprob: -18.923587799072266

Token 625: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.12693022191524506
    2. ' -' → logprob: -2.1269302368164062
    3. '   ' → logprob: -13.751930236816406
    4. ' ' → logprob: -14.251930236816406
    5. '−' → logprob: -15.626930236816406
    6. '  ' → logprob: -16.001930236816406
    7. '1' → logprob: -17.251930236816406
    8. '[-' → logprob: -17.376930236816406
    9. '[' → logprob: -18.251930236816406
    10. 'idx' → logprob: -18.251930236816406

Token 626: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.5107177862082608e-05
    2. ' ' → logprob: -10.625024795532227
    3. '   ' → logprob: -15.000024795532227
    4. 'idx' → logprob: -15.812524795532227
    5. '
' → logprob: -16.500024795532227
    6. '```' → logprob: -16.750024795532227
    7. '１' → logprob: -17.812524795532227
    8. '  ' → logprob: -18.125024795532227
    9. '' → logprob: -18.250024795532227
    10. '۱' → logprob: -18.312524795532227

Token 627: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.319370302458992e-06
    2. ' ' → logprob: -12.625005722045898
    3. 'idx' → logprob: -13.500005722045898
    4. '-' → logprob: -15.250005722045898
    5. '   ' → logprob: -16.0625057220459
    6. '```' → logprob: -16.8750057220459
    7. '
' → logprob: -17.4375057220459
    8. 'len' → logprob: -17.4375057220459
    9. '0' → logprob: -18.1250057220459
    10. '(' → logprob: -18.3125057220459

Token 628: ']' (ID: 60)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.6326847672462463
    2. '*' → logprob: -0.7576847672462463
    3. ')' → logprob: -9.757684707641602
    4. ' ' → logprob: -12.007684707641602
    5. ' *
' → logprob: -12.257684707641602
    6. '**' → logprob: -12.757684707641602
    7. '*
' → logprob: -12.882684707641602
    8. ')*' → logprob: -13.007684707641602
    9. ' ' → logprob: -13.132684707641602
    10. '*)' → logprob: -13.882684707641602

Token 629: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.16034497320652008
    2. ' *' → logprob: -1.9103449583053589
    3. ')' → logprob: -10.035345077514648
    4. '*self' → logprob: -10.160345077514648
    5. '*object' → logprob: -10.660345077514648
    6. ' ' → logprob: -12.910345077514648
    7. '*(' → logprob: -13.285345077514648
    8. ')*' → logprob: -13.285345077514648
    9. '**' → logprob: -13.660345077514648
    10. '*)' → logprob: -14.035345077514648

Token 630: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0001589618914294988
    2. ' self' → logprob: -8.75015926361084
    3. '(self' → logprob: -15.25015926361084
    4. '   ' → logprob: -16.000158309936523
    5. '	self' → logprob: -16.500158309936523
    6. '[self' → logprob: -17.375158309936523
    7. '       ' → logprob: -18.750158309936523
    8. '=self' → logprob: -19.000158309936523
    9. '*self' → logprob: -19.000158309936523
    10. ' ' → logprob: -19.250158309936523

Token 631: '.mod' (ID: 19046)
  Prédit: '.mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.mod' → logprob: -0.001502717612311244
    2. 'mod' → logprob: -6.501502513885498
    3. '	mod' → logprob: -14.876502990722656
    4. ' mod' → logprob: -18.126502990722656
    5. '.' → logprob: -19.126502990722656
    6. '(mod' → logprob: -19.876502990722656
    7. '```' → logprob: -20.501502990722656
    8. '
' → logprob: -20.626502990722656
    9. 'MOD' → logprob: -20.751502990722656
    10. ' .' → logprob: -21.251502990722656

Token 632: 'inv' (ID: 31086)
  Prédit: 'inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -3.4121114822482923e-06
    2. 'pow' → logprob: -12.875003814697266
    3. '_inv' → logprob: -15.625003814697266
    4. '-' → logprob: -16.000003814697266
    5. 'inverse' → logprob: -16.125003814697266
    6. ')' → logprob: -16.250003814697266
    7. 'mod' → logprob: -16.375003814697266
    8. '```' → logprob: -16.750003814697266
    9. '
' → logprob: -17.125003814697266
    10. '(inv' → logprob: -17.250003814697266

Token 633: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.0003799104888457805
    2. '[' → logprob: -8.00037956237793
    3. '[
' → logprob: -10.37537956237793
    4. '[index' → logprob: -13.12537956237793
    5. '[self' → logprob: -13.37537956237793
    6. '[len' → logprob: -13.50037956237793
    7. 'idx' → logprob: -13.62537956237793
    8. '[-' → logprob: -13.62537956237793
    9. '(idx' → logprob: -14.25037956237793
    10. '
' → logprob: -14.25037956237793

Token 634: ']' (ID: 60)
  Prédit: '[idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.25028476119041443
    2. 'idx' → logprob: -2.5002846717834473
    3. '(idx' → logprob: -2.7502846717834473
    4. ']' → logprob: -3.0002846717834473
    5. '])' → logprob: -4.125284671783447
    6. '	idx' → logprob: -6.250284671783447
    7. '  ' → logprob: -6.375284671783447
    8. ' idx' → logprob: -6.500284671783447
    9. '   ' → logprob: -6.750284671783447
    10. '[' → logprob: -7.750284671783447

Token 635: ' %' (ID: 1851)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0034029979724437
    2. '       ' → logprob: -6.003403186798096
    3. '<|end|>' → logprob: -8.753402709960938
    4. '(' → logprob: -8.878402709960938
    5. '   ' → logprob: -9.003402709960938
    6. ')
' → logprob: -9.128402709960938
    7. ' )' → logprob: -9.253402709960938
    8. '           ' → logprob: -9.753402709960938
    9. 'import' → logprob: -10.753402709960938
    10. '())' → logprob: -11.003402709960938

Token 636: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -3.2020991056924686e-05
    2. ' self' → logprob: -10.375032424926758
    3. '[self' → logprob: -14.875032424926758
    4. '(self' → logprob: -16.000032424926758
    5. '```' → logprob: -16.125032424926758
    6. '	self' → logprob: -16.875032424926758
    7. '       ' → logprob: -17.250032424926758
    8. '1' → logprob: -17.500032424926758
    9. '   ' → logprob: -18.250032424926758
    10. '=self' → logprob: -18.875032424926758

Token 637: '.mod' (ID: 19046)
  Prédit: '.mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.mod' → logprob: -0.035895686596632004
    2. 'mod' → logprob: -3.410895586013794
    3. 'self' → logprob: -6.285895824432373
    4. '_mod' → logprob: -8.535895347595215
    5. '0' → logprob: -10.535895347595215
    6. ')' → logprob: -10.785895347595215
    7. '1' → logprob: -10.910895347595215
    8. '>' → logprob: -11.160895347595215
    9. '.self' → logprob: -11.285895347595215
    10. '	mod' → logprob: -11.535895347595215

Token 638: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.026123905554413795
    2. '       ' → logprob: -4.276124000549316
    3. ')
' → logprob: -4.526124000549316
    4. '
' → logprob: -7.151124000549316
    5. '	' → logprob: -9.401124000549316
    6. '<|end|>' → logprob: -9.651124000549316
    7. ')return' → logprob: -9.776124000549316
    8. '   ' → logprob: -11.401124000549316
    9. ' )' → logprob: -11.401124000549316
    10. '        
' → logprob: -12.151124000549316

Token 639: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0012415404198691249
    2. '	' → logprob: -6.751241683959961
    3. '	return' → logprob: -10.876241683959961
    4. '<|end|>' → logprob: -11.126241683959961
    5. '
' → logprob: -11.501241683959961
    6. '	   ' → logprob: -11.876241683959961
    7. 'return' → logprob: -11.876241683959961
    8. ' return' → logprob: -12.376241683959961
    9. '	       ' → logprob: -12.626241683959961
    10. '   ' → logprob: -13.501241683959961

Token 640: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005361702758818865
    2. 'return' (adapté à ' return') → logprob: -5.255361557006836
    3. '   ' → logprob: -9.130361557006836
    4. ' return' → logprob: -10.880361557006836
    5. '	return' → logprob: -14.630361557006836
    6. '
' → logprob: -16.505361557006836
    7. '	' → logprob: -16.630361557006836
    8. '	   ' → logprob: -17.130361557006836
    9. ' ' → logprob: -17.880361557006836
    10. ':return' → logprob: -17.880361557006836

Token 641: ' factorial' (ID: 111204)
  Prédit: 'factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'factor' → logprob: -0.0008286866941489279
    2. ' factorial' → logprob: -7.125828742980957
    3. '(f' → logprob: -11.000828742980957
    4. 'fact' → logprob: -12.125828742980957
    5. '   ' → logprob: -14.375828742980957
    6. 'fraction' → logprob: -14.750828742980957
    7. ' factor' → logprob: -15.000828742980957
    8. '_factor' → logprob: -15.625828742980957
    9. '(' → logprob: -16.00082778930664
    10. '
' → logprob: -16.25082778930664

Token 642: '_vals' (ID: 71688)
  Prédit: '_vals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vals' → logprob: -0.007447848562151194
    2. 'vals' → logprob: -5.382447719573975
    3. 'factor' → logprob: -5.882447719573975
    4. '_factor' → logprob: -10.632448196411133
    5. 'Vals' → logprob: -12.757448196411133
    6. '(vals' → logprob: -12.757448196411133
    7. ' factorial' → logprob: -13.257448196411133
    8. ',' → logprob: -14.257448196411133
    9. 'f' → logprob: -14.257448196411133
    10. '```' → logprob: -14.507448196411133

Token 643: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0067426045425236225
    2. ',f' → logprob: -5.006742477416992
    3. ' ,' → logprob: -10.756742477416992
    4. ',
' → logprob: -12.506742477416992
    5. ',float' → logprob: -14.006742477416992
    6. 'factor' → logprob: -15.506742477416992
    7. ',result' → logprob: -15.756742477416992
    8. ',function' → logprob: -16.006742477416992
    9. ',c' → logprob: -16.006742477416992
    10. ' factorial' → logprob: -16.006742477416992

Token 644: ' factorial' (ID: 111204)
  Prédit: 'factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'factor' → logprob: -0.011053125374019146
    2. ' factorial' → logprob: -4.511053085327148
    3. ' factor' → logprob: -13.136053085327148
    4. 'fact' → logprob: -13.511053085327148
    5. '   ' → logprob: -14.011053085327148
    6. '_factor' → logprob: -15.136053085327148
    7. ' ' → logprob: -15.511053085327148
    8. '  ' → logprob: -16.01105308532715
    9. 'Factor' → logprob: -16.13605308532715
    10. ' ' → logprob: -16.38605308532715

Token 645: '_inv' (ID: 53427)
  Prédit: '_inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inv' → logprob: -0.00034380643046461046
    2. 'inv' → logprob: -8.000344276428223
    3. 'n' → logprob: -12.750344276428223
    4. '_val' → logprob: -12.875344276428223
    5. '
' → logprob: -13.625344276428223
    6. '_inf' → logprob: -14.875344276428223
    7. '_vals' → logprob: -15.250344276428223
    8. '[_' → logprob: -15.375344276428223
    9. '_INV' → logprob: -16.250343322753906
    10. '```' → logprob: -16.250343322753906

Token 646: '_vals' (ID: 71688)
  Prédit: '_vals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vals' → logprob: -0.007350104860961437
    2. '_val' → logprob: -5.757349967956543
    3. 'v' → logprob: -6.382349967956543
    4. 'vals' → logprob: -6.507349967956543
    5. 'al' → logprob: -7.757349967956543
    6. 'als' → logprob: -8.007349967956543
    7. 's' → logprob: -9.382349967956543
    8. '(vals' → logprob: -10.382349967956543
    9. '_inv' → logprob: -10.882349967956543
    10. 'val' → logprob: -11.007349967956543

Token 647: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 648: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6766857504844666
    2. '   ' → logprob: -1.4266858100891113
    3. ' def' → logprob: -1.6766858100891113
    4. '<|end|>' → logprob: -3.1766858100891113
    5. '	def' → logprob: -4.801685810089111
    6. '
' → logprob: -5.301685810089111
    7. ' ' → logprob: -5.676685810089111
    8. '```' → logprob: -6.301685810089111
    9. '[' → logprob: -6.801685810089111
    10. '    
' → logprob: -6.926685810089111

Token 649: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.006144692189991474
    2. '   ' → logprob: -5.2561445236206055
    3. ' def' → logprob: -7.0061445236206055
    4. '
' → logprob: -12.756144523620605
    5. '    
' → logprob: -14.381144523620605
    6. '	def' → logprob: -14.381144523620605
    7. ' ' → logprob: -16.631145477294922
    8. '  ' → logprob: -17.756145477294922
    9. '```' → logprob: -17.756145477294922
    10. '

' → logprob: -17.881145477294922

Token 650: ' generate' (ID: 10419)
  Prédit: 'generate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'generate' → logprob: -0.0003036457928828895
    2. ' generate' → logprob: -8.125303268432617
    3. '   ' → logprob: -11.875303268432617
    4. 'gener' → logprob: -16.125303268432617
    5. 'def' → logprob: -16.375303268432617
    6. ' ' → logprob: -16.500303268432617
    7. 'gen' → logprob: -16.625303268432617
    8. '.generate' → logprob: -16.625303268432617
    9. '_generate' → logprob: -16.875303268432617
    10. 'create' → logprob: -17.250303268432617

Token 651: '_mod' (ID: 15325)
  Prédit: '_mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mod' → logprob: -0.0036045825108885765
    2. 'mod' → logprob: -5.628604412078857
    3. '_factor' → logprob: -12.878604888916016
    4. 'def' → logprob: -15.128604888916016
    5. '_inv' → logprob: -15.128604888916016
    6. '_inverse' → logprob: -15.128604888916016
    7. 'self' → logprob: -15.378604888916016
    8. 'pow' → logprob: -15.878604888916016
    9. '_extended' → logprob: -16.503604888916016
    10. 'factor' → logprob: -16.503604888916016

Token 652: 'inv' (ID: 31086)
  Prédit: 'inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: 0.0
    2. 'inf' → logprob: -17.5
    3. '```' → logprob: -19.25
    4. ' inv' → logprob: -19.75
    5. 'inverse' → logprob: -19.875
    6. 'int' → logprob: -19.875
    7. '_inv' → logprob: -20.375
    8. 'def' → logprob: -20.375
    9. 'in' → logprob: -21.25
    10. '   ' → logprob: -21.25

Token 653: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.0022783654276281595
    2. 'list' → logprob: -6.6272783279418945
    3. 'self' → logprob: -7.2522783279418945
    4. '(self' → logprob: -8.502278327941895
    5. '   ' → logprob: -10.752278327941895
    6. 'List' → logprob: -12.002278327941895
    7. ' list' → logprob: -12.877278327941895
    8. 'def' → logprob: -13.127278327941895
    9. 's' → logprob: -13.377278327941895
    10. 'class' → logprob: -13.502278327941895

Token 654: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -4.008129963040119e-06
    2. '(' → logprob: -12.625003814697266
    3. '   ' → logprob: -14.750003814697266
    4. 'self' → logprob: -15.500003814697266
    5. '       ' → logprob: -17.125003814697266
    6. '(
' → logprob: -18.125003814697266
    7. ' (' → logprob: -18.375003814697266
    8. ' ' → logprob: -18.375003814697266
    9. '[self' → logprob: -18.500003814697266
    10. 'def' → logprob: -19.000003814697266

Token 655: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -4.60414821645827e-06
    2. '(' → logprob: -12.875004768371582
    3. 'self' → logprob: -13.375004768371582
    4. ',' → logprob: -15.875004768371582
    5. ',self' → logprob: -16.500003814697266
    6. '       ' → logprob: -17.125003814697266
    7. '   ' → logprob: -17.500003814697266
    8. ' (' → logprob: -17.625003814697266
    9. '=self' → logprob: -18.125003814697266
    10. '[self' → logprob: -18.375003814697266

Token 656: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.22258740663528442
    2. 'self' → logprob: -1.8475873470306396
    3. 'max' → logprob: -3.2225873470306396
    4. 'len' → logprob: -7.972587585449219
    5. ' n' → logprob: -8.347587585449219
    6. ' self' → logprob: -8.722587585449219
    7. '0' → logprob: -8.847587585449219
    8. '<|end|>' → logprob: -8.847587585449219
    9. '(n' → logprob: -9.222587585449219
    10. '   ' → logprob: -9.222587585449219

Token 657: '):
' (ID: 1883)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.23703551292419434
    2. '       ' → logprob: -2.2370355129241943
    3. 'self' → logprob: -2.6120355129241943
    4. '   ' → logprob: -4.112035751342773
    5. ',' → logprob: -4.862035751342773
    6. ' self' → logprob: -6.112035751342773
    7. '):' → logprob: -6.237035751342773
    8. '):
' → logprob: -6.362035751342773
    9. '	self' → logprob: -7.862035751342773
    10. '(' → logprob: -9.112035751342773

Token 658: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16189490258693695
    2. 'mod' → logprob: -1.9118949174880981
    3. '   ' → logprob: -7.036894798278809
    4. ' mod' → logprob: -8.036894798278809
    5. '	mod' → logprob: -8.536894798278809
    6. 'inv' → logprob: -8.661894798278809
    7. 'mods' → logprob: -9.911894798278809
    8. '[' → logprob: -11.036894798278809
    9. '	' → logprob: -11.536894798278809
    10. 'lst' → logprob: -11.911894798278809

Token 659: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' (adapté à ' mod') → logprob: -0.0011864188127219677
    2. '       ' → logprob: -7.001186370849609
    3. '[' → logprob: -8.62618637084961
    4. 'inv' → logprob: -9.75118637084961
    5. 'mods' → logprob: -10.87618637084961
    6. '   ' → logprob: -12.37618637084961
    7. '	mod' → logprob: -12.37618637084961
    8. ' mod' → logprob: -12.37618637084961
    9. 'result' → logprob: -13.25118637084961
    10. 'lst' → logprob: -14.00118637084961

Token 660: 'inv' (ID: 31086)
  Prédit: 'inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -3.273621405242011e-05
    2. 'in' → logprob: -11.125032424926758
    3. 'inverse' → logprob: -11.250032424926758
    4. '_inv' → logprob: -12.375032424926758
    5. '_inverse' → logprob: -15.000032424926758
    6. 'iv' → logprob: -16.500032424926758
    7. 'rev' → logprob: -16.750032424926758
    8. ' inv' → logprob: -17.000032424926758
    9. 'invert' → logprob: -17.000032424926758
    10. 'int' → logprob: -17.500032424926758

Token 661: '_vals' (ID: 71688)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14698073267936707
    2. '=' → logprob: -2.2719807624816895
    3. '_list' → logprob: -3.5219807624816895
    4. '_vals' → logprob: -6.2719807624816895
    5. '=[' → logprob: -6.7719807624816895
    6. 's' → logprob: -7.2719807624816895
    7. 'list' → logprob: -10.021980285644531
    8. ' =[' → logprob: -10.021980285644531
    9. 'vals' → logprob: -10.271980285644531
    10. '=[]' → logprob: -10.271980285644531

Token 662: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07889540493488312
    2. ' =' → logprob: -2.578895330429077
    3. '=[' → logprob: -12.203895568847656
    4. '[' → logprob: -15.828895568847656
    5. ' =[' → logprob: -15.828895568847656
    6. '=[]' → logprob: -16.078895568847656
    7. '   ' → logprob: -16.703895568847656
    8. '=
' → logprob: -16.828895568847656
    9. '=[]
' → logprob: -17.328895568847656
    10. '＝' → logprob: -17.703895568847656

Token 663: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -8.602024900028482e-05
    2. ' [' → logprob: -9.375085830688477
    3. '   ' → logprob: -14.250085830688477
    4. '[n' → logprob: -15.375085830688477
    5. '[-' → logprob: -15.875085830688477
    6. ' ' → logprob: -17.875085830688477
    7. '{' → logprob: -18.250085830688477
    8. '[...,' → logprob: -18.500085830688477
    9. '[self' → logprob: -18.625085830688477
    10. '```' → logprob: -18.750085830688477

Token 664: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.009169078432023525
    2. 'None' → logprob: -4.759169101715088
    3. '1' → logprob: -7.509169101715088
    4. '-' → logprob: -12.38416862487793
    5. ' None' → logprob: -13.25916862487793
    6. ' ' → logprob: -16.00916862487793
    7. '_' → logprob: -16.13416862487793
    8. '_None' → logprob: -17.13416862487793
    9. '[' → logprob: -17.25916862487793
    10. 'False' → logprob: -17.38416862487793

Token 665: ']' (ID: 60)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.0868278524139896e-05
    2. ']' → logprob: -9.75006103515625
    3. ',
' → logprob: -13.25006103515625
    4. ' ,' → logprob: -14.37506103515625
    5. '1' → logprob: -16.75006103515625
    6. ']*' → logprob: -16.75006103515625
    7. ']*(' → logprob: -17.50006103515625
    8. ' ' → logprob: -17.50006103515625
    9. ',None' → logprob: -17.62506103515625
    10. ' for' → logprob: -17.87506103515625

Token 666: ' *' (ID: 425)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010092071170220152
    2. ' ,' → logprob: -9.750101089477539
    3. ',
' → logprob: -10.250101089477539
    4. '   ' → logprob: -12.750101089477539
    5. ' ' → logprob: -14.125101089477539
    6. '[' → logprob: -14.250101089477539
    7. '```' → logprob: -14.625101089477539
    8. ']' → logprob: -14.750101089477539
    9. '0' → logprob: -14.750101089477539
    10. '       ' → logprob: -14.875101089477539

Token 667: ' (' (ID: 350)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.01820741780102253
    2. '(max' → logprob: -4.018207550048828
    3. ' (' → logprob: -10.268207550048828
    4. '(' → logprob: -10.893207550048828
    5. '(nn' → logprob: -13.768207550048828
    6. '((' → logprob: -14.143207550048828
    7. 'n' → logprob: -14.268207550048828
    8. 'max' → logprob: -14.768207550048828
    9. '(nx' → logprob: -15.143207550048828
    10. '(nd' → logprob: -16.018207550048828

Token 668: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.004631265066564083
    2. '(n' → logprob: -5.379631042480469
    3. ' n' → logprob: -12.754631042480469
    4. ' (' → logprob: -13.004631042480469
    5. '(' → logprob: -13.129631042480469
    6. '(max' → logprob: -13.379631042480469
    7. 'max' → logprob: -13.879631042480469
    8. '[n' → logprob: -14.879631042480469
    9. '	n' → logprob: -15.004631042480469
    10. '   ' → logprob: -15.129631042480469

Token 669: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0019286326132714748
    2. ' +' → logprob: -6.251928806304932
    3. '+
' → logprob: -17.751928329467773
    4. ' ' → logprob: -17.751928329467773
    5. '＋' → logprob: -18.751928329467773
    6. '2' → logprob: -19.376928329467773
    7. '1' → logprob: -19.876928329467773
    8. '   ' → logprob: -21.001928329467773
    9. '0' → logprob: -21.001928329467773
    10. ' +
' → logprob: -21.751928329467773

Token 670: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.56102097814437e-05
    2. ' ' → logprob: -10.250045776367188
    3. '2' → logprob: -11.500045776367188
    4. '```' → logprob: -17.500045776367188
    5. '   ' → logprob: -18.250045776367188
    6. '  ' → logprob: -18.375045776367188
    7. '１' → logprob: -19.437545776367188
    8. '7' → logprob: -20.187545776367188
    9. '۱' → logprob: -20.312545776367188
    10. '	' → logprob: -20.375045776367188

Token 671: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. '2' → logprob: -14.750000953674316
    3. ' ' → logprob: -16.0
    4. '１' → logprob: -19.625
    5. '10' → logprob: -19.875
    6. '
' → logprob: -20.0
    7. '۱' → logprob: -20.5
    8. '  ' → logprob: -20.625
    9. '   ' → logprob: -20.8125
    10. '```' → logprob: -20.875

Token 672: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.2522081434726715
    2. ')' → logprob: -1.5022081136703491
    3. ' )
' → logprob: -8.50220775604248
    4. ')
' → logprob: -10.00220775604248
    5. ' )' → logprob: -11.50220775604248
    6. ')

' → logprob: -11.62720775604248
    7. '       ' → logprob: -13.25220775604248
    8. ' ' → logprob: -13.50220775604248
    9. '<|end|>' → logprob: -13.62720775604248
    10. ',' → logprob: -13.75220775604248

Token 673: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1164279505610466
    2. 'mod' → logprob: -2.2414278984069824
    3. ' mod' → logprob: -5.866427898406982
    4. '   ' → logprob: -7.616427898406982
    5. '	mod' → logprob: -8.49142837524414
    6. '```' → logprob: -10.61642837524414
    7. '(mod' → logprob: -11.11642837524414
    8. '<|end|>' → logprob: -11.36642837524414
    9. ' ' → logprob: -12.11642837524414
    10. '           ' → logprob: -13.61642837524414

Token 674: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' (adapté à ' mod') → logprob: -0.001959678716957569
    2. ' mod' → logprob: -6.251959800720215
    3. '       ' → logprob: -10.501959800720215
    4. '	mod' → logprob: -12.876959800720215
    5. '1' → logprob: -14.751959800720215
    6. '```' → logprob: -15.251959800720215
    7. '   ' → logprob: -15.376959800720215
    8. ' ' → logprob: -16.3769588470459
    9. '(mod' → logprob: -16.6269588470459
    10. '_mod' → logprob: -17.2519588470459

Token 675: 'inv' (ID: 31086)
  Prédit: 'inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -2.7133641196996905e-05
    2. 'mod' → logprob: -11.25002670288086
    3. '       ' → logprob: -11.62502670288086
    4. ' inv' → logprob: -13.25002670288086
    5. 'in' → logprob: -13.50002670288086
    6. '```' → logprob: -14.12502670288086
    7. '   ' → logprob: -14.37502670288086
    8. 'import' → logprob: -16.12502670288086
    9. 'inf' → logprob: -16.50002670288086
    10. 'int' → logprob: -16.87502670288086

Token 676: '_vals' (ID: 71688)
  Prédit: '_vals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vals' → logprob: -4.60414821645827e-06
    2. '[' → logprob: -13.000004768371582
    3. 'vals' → logprob: -13.500004768371582
    4. 'Vals' → logprob: -15.250004768371582
    5. 's' → logprob: -15.750004768371582
    6. '=' → logprob: -15.875004768371582
    7. '_val' → logprob: -16.750003814697266
    8. '_' → logprob: -17.000003814697266
    9. '```' → logprob: -17.125003814697266
    10. '  ' → logprob: -17.500003814697266

Token 677: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.842555426876061e-06
    2. '[
' → logprob: -12.750004768371582
    3. '<|end|>' → logprob: -14.000004768371582
    4. ' =' → logprob: -14.750004768371582
    5. '```' → logprob: -15.250004768371582
    6. '=' → logprob: -15.750004768371582
    7. ' ' → logprob: -16.3750057220459
    8. ' [' → logprob: -16.8750057220459
    9. '2' → logprob: -17.1250057220459
    10. '0' → logprob: -17.5000057220459

Token 678: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00026217024424113333
    2. '0' → logprob: -8.250262260437012
    3. ' ' → logprob: -14.125262260437012
    4. '-' → logprob: -17.125261306762695
    5. ']' → logprob: -17.250261306762695
    6. '   ' → logprob: -17.750261306762695
    7. '[' → logprob: -18.375261306762695
    8. ')' → logprob: -18.625261306762695
    9. '```' → logprob: -18.750261306762695
    10. '  ' → logprob: -19.375261306762695

Token 679: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10070035606622696
    2. ']' → logprob: -2.8507003784179688
    3. ' =' → logprob: -3.3507003784179688
    4. ']=' → logprob: -5.850700378417969
    5. ')' → logprob: -10.350700378417969
    6. ' ]' → logprob: -11.725700378417969
    7. ')=' → logprob: -11.725700378417969
    8. ',' → logprob: -12.975700378417969
    9. '<|end|>' → logprob: -13.975700378417969
    10. '']=' → logprob: -14.475700378417969

Token 680: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.011047814972698689
    2. ' =' → logprob: -4.511047840118408
    3. '=
' → logprob: -17.51104736328125
    4. '=

' → logprob: -17.88604736328125
    5. '＝' → logprob: -18.01104736328125
    6. '<|end|>' → logprob: -19.13604736328125
    7. '=}' → logprob: -19.76104736328125
    8. ',' → logprob: -20.01104736328125
    9. '.=' → logprob: -20.01104736328125
    10. ' =
' → logprob: -20.13604736328125

Token 681: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.0
    3. '۱' → logprob: -21.375
    4. '```' → logprob: -22.0
    5. '১' → logprob: -22.875
    6. '१' → logprob: -22.875
    7. '１' → logprob: -23.25
    8. '<|end|>' → logprob: -24.625
    9. '   ' → logprob: -25.125
    10. '١' → logprob: -25.4375

Token 682: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -19.75
    3. '۱' → logprob: -21.25
    4. '১' → logprob: -22.625
    5. '１' → logprob: -23.125
    6. '१' → logprob: -23.125
    7. '```' → logprob: -23.25
    8. '' → logprob: -24.875
    9. '١' → logprob: -25.25
    10. '<|end|>' → logprob: -25.375

Token 683: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0007314971298910677
    2. '<|end|>' → logprob: -7.875731468200684
    3. '    
' → logprob: -9.250731468200684
    4. '	
' → logprob: -9.375731468200684
    5. '
' → logprob: -9.375731468200684
    6. '   ' → logprob: -10.625731468200684
    7. '  
' → logprob: -10.625731468200684
    8. ' 
' → logprob: -11.375731468200684
    9. '\n' → logprob: -12.250731468200684
    10. '

' → logprob: -12.750731468200684

Token 684: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21892328560352325
    2. '   ' → logprob: -1.7189233303070068
    3. '
' → logprob: -4.468923091888428
    4. '<|end|>' → logprob: -5.718923091888428
    5. '	for' → logprob: -7.093923091888428
    6. '	   ' → logprob: -7.218923091888428
    7. '```' → logprob: -8.593923568725586
    8. ' for' → logprob: -8.593923568725586
    9. '	       ' → logprob: -9.468923568725586
    10. '	' → logprob: -9.718923568725586

Token 685: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.005716065876185894
    2. ' for' → logprob: -5.755715847015381
    3. '       ' → logprob: -6.005715847015381
    4. '	for' → logprob: -9.630716323852539
    5. '   ' → logprob: -12.755716323852539
    6. '	' → logprob: -13.505716323852539
    7. '	   ' → logprob: -14.755716323852539
    8. '```' → logprob: -16.00571632385254
    9. 'i' → logprob: -17.38071632385254
    10. ' ' → logprob: -17.63071632385254

Token 686: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.034438636153936386
    2. 'i' → logprob: -3.4094386100769043
    3. ' idx' → logprob: -7.909438610076904
    4. 'num' → logprob: -8.784439086914062
    5. 'index' → logprob: -8.784439086914062
    6. ' i' → logprob: -9.659439086914062
    7. 'val' → logprob: -11.034439086914062
    8. 'value' → logprob: -11.034439086914062
    9. '_idx' → logprob: -12.409439086914062
    10. 'ii' → logprob: -12.659439086914062

Token 687: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005354836117476225
    2. 'in' → logprob: -5.255354881286621
    3. ' ' → logprob: -9.380354881286621
    4. '<|end|>' → logprob: -10.880354881286621
    5. '	in' → logprob: -11.505354881286621
    6. '2' → logprob: -13.630354881286621
    7. '[' → logprob: -14.130354881286621
    8. '  ' → logprob: -14.130354881286621
    9. '1' → logprob: -14.380354881286621
    10. '=' → logprob: -14.630354881286621

Token 688: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.000553151941858232
    2. ' range' → logprob: -7.500553131103516
    3. '	range' → logprob: -16.875553131103516
    4. ' ' → logprob: -18.125553131103516
    5. '(range' → logprob: -20.125553131103516
    6. '   ' → logprob: -20.875553131103516
    7. '  ' → logprob: -21.000553131103516
    8. ' xrange' → logprob: -22.000553131103516
    9. '2' → logprob: -22.625553131103516
    10. 'list' → logprob: -22.625553131103516

Token 689: '(' (ID: 7)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.157039049663581e-05
    2. ' ' → logprob: -9.875051498413086
    3. '   ' → logprob: -17.750051498413086
    4. '(' → logprob: -19.000051498413086
    5. '２' → logprob: -19.125051498413086
    6. '۲' → logprob: -19.875051498413086
    7. '  ' → logprob: -21.125051498413086
    8. '
' → logprob: -21.500051498413086
    9. '	' → logprob: -21.625051498413086
    10. '```' → logprob: -22.250051498413086

Token 690: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.75
    3. '２' → logprob: -20.625
    4. '   ' → logprob: -22.0
    5. '۲' → logprob: -22.75
    6. '(' → logprob: -24.5
    7. '২' → logprob: -24.625
    8. '२' → logprob: -25.0
    9. '  ' → logprob: -25.0
    10. '_' → logprob: -25.125

Token 691: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000973517308011651
    2. ',n' → logprob: -7.000973701477051
    3. ' ,' → logprob: -9.75097370147705
    4. ',
' → logprob: -13.75097370147705
    5. 'n' → logprob: -13.87597370147705
    6. '<|end|>' → logprob: -14.50097370147705
    7. '   ' → logprob: -14.87597370147705
    8. ' to' → logprob: -15.62597370147705
    9. ',len' → logprob: -16.375972747802734
    10. ',int' → logprob: -16.375972747802734

Token 692: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.16022828221321106
    2. ' n' → logprob: -1.9102282524108887
    3. '	n' → logprob: -12.410228729248047
    4. '   ' → logprob: -17.160228729248047
    5. '       ' → logprob: -17.285228729248047
    6. '_n' → logprob: -18.535228729248047
    7. ')n' → logprob: -18.785228729248047
    8. '    ' → logprob: -18.910228729248047
    9. '```' → logprob: -19.660228729248047
    10. '(n' → logprob: -19.785228729248047

Token 693: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.02324722334742546
    2. ' +' → logprob: -3.773247241973877
    3. '+
' → logprob: -13.773246765136719
    4. '1' → logprob: -15.898246765136719
    5. ' +
' → logprob: -16.14824676513672
    6. ',' → logprob: -16.39824676513672
    7. '+,' → logprob: -16.64824676513672
    8. '＋' → logprob: -16.64824676513672
    9. '<|end|>' → logprob: -16.77324676513672
    10. '```' → logprob: -16.89824676513672

Token 694: ' ' (ID: 220)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0031174644827842712
    2. '1' → logprob: -6.878117561340332
    3. ' n' → logprob: -6.878117561340332
    4. '(n' → logprob: -7.128117561340332
    5. '+' → logprob: -8.753117561340332
    6. '   ' → logprob: -9.878117561340332
    7. ' ' → logprob: -10.878117561340332
    8. '(' → logprob: -12.128117561340332
    9. ' (' → logprob: -12.253117561340332
    10. ')' → logprob: -13.003117561340332

Token 695: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.34500691294670105
    2. '+' → logprob: -1.5950069427490234
    3. 'n' → logprob: -2.4700069427490234
    4. '(n' → logprob: -6.095006942749023
    5. ')' → logprob: -7.470006942749023
    6. '(' → logprob: -7.720006942749023
    7. ' ' → logprob: -8.720006942749023
    8. ' +' → logprob: -8.970006942749023
    9. '100' → logprob: -9.095006942749023
    10. 'int' → logprob: -9.095006942749023

Token 696: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.03867177665233612
    2. '):' → logprob: -3.2886717319488525
    3. ':' → logprob: -8.163671493530273
    4. '):
' → logprob: -8.413671493530273
    5. ':
' → logprob: -9.913671493530273
    6. '       ' → logprob: -9.913671493530273
    7. '   ' → logprob: -11.663671493530273
    8. ')' → logprob: -12.038671493530273
    9. ',' → logprob: -13.038671493530273
    10. '):

' → logprob: -13.413671493530273

Token 697: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0007905708043836057
    2. '       ' → logprob: -7.875790596008301
    3. '```' → logprob: -8.1257905960083
    4. '	       ' → logprob: -9.5007905960083
    5. 'mod' → logprob: -11.1257905960083
    6. '   ' → logprob: -11.6257905960083
    7. ' mod' → logprob: -12.1257905960083
    8. '	mod' → logprob: -12.7507905960083
    9. '          ' → logprob: -13.7507905960083
    10. '(mod' → logprob: -13.7507905960083

Token 698: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' (adapté à ' mod') → logprob: -0.0005543439765460789
    2. '           ' → logprob: -7.75055456161499
    3. '       ' → logprob: -9.375554084777832
    4. ' mod' → logprob: -10.375554084777832
    5. '               ' → logprob: -12.375554084777832
    6. '	mod' → logprob: -13.250554084777832
    7. '   ' → logprob: -13.500554084777832
    8. '(mod' → logprob: -16.00055503845215
    9. '```' → logprob: -16.87555503845215
    10. '_mod' → logprob: -17.00055503845215

Token 699: 'inv' (ID: 31086)
  Prédit: 'inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -2.5776860184123507e-06
    2. 'in' → logprob: -13.37500286102295
    3. '   ' → logprob: -15.37500286102295
    4. 'int' → logprob: -15.87500286102295
    5. 'inf' → logprob: -16.000001907348633
    6. '       ' → logprob: -16.500001907348633
    7. '```' → logprob: -16.625001907348633
    8. '=' → logprob: -17.000001907348633
    9. 'val' → logprob: -17.000001907348633
    10. 'mod' → logprob: -17.000001907348633

Token 700: '_vals' (ID: 71688)
  Prédit: '_vals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vals' → logprob: -4.7755875129951164e-05
    2. 'vals' → logprob: -10.00004768371582
    3. 's' → logprob: -14.00004768371582
    4. 'Vals' → logprob: -14.25004768371582
    5. '[' → logprob: -15.00004768371582
    6. '=' → logprob: -16.25004768371582
    7. ' =' → logprob: -16.50004768371582
    8. 'v' → logprob: -16.75004768371582
    9. '(vals' → logprob: -16.75004768371582
    10. '```' → logprob: -17.12504768371582

Token 701: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -3.128163257315464e-07
    2. '[' → logprob: -15.5
    3. '[index' → logprob: -16.625
    4. 'idx' → logprob: -17.625
    5. '[i' → logprob: -17.875
    6. '[
' → logprob: -18.25
    7. '	idx' → logprob: -18.25
    8. '```' → logprob: -18.25
    9. '[id' → logprob: -18.375
    10. '[ind' → logprob: -19.125

Token 702: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10021379590034485
    2. ' =' → logprob: -2.3502137660980225
    3. ']=' → logprob: -12.225214004516602
    4. ']' → logprob: -13.475214004516602
    5. '=(' → logprob: -15.725214004516602
    6. '=
' → logprob: -15.725214004516602
    7. '=int' → logprob: -15.850214004516602
    8. '＝' → logprob: -15.975214004516602
    9. ')=' → logprob: -16.4752140045166
    10. '=len' → logprob: -16.9752140045166

Token 703: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0019288709154352546
    2. ' =' → logprob: -6.251928806304932
    3. '＝' → logprob: -16.626928329467773
    4. '=int' → logprob: -16.751928329467773
    5. '=
' → logprob: -17.501928329467773
    6. '.=' → logprob: -17.626928329467773
    7. '=com' → logprob: -18.376928329467773
    8. '=

' → logprob: -18.501928329467773
    9. '=sys' → logprob: -19.126928329467773
    10. '=}' → logprob: -19.251928329467773

Token 704: ' self' (ID: 1051)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.5214300751686096
    2. '(mod' → logprob: -1.2714300155639648
    3. 'self' → logprob: -2.271430015563965
    4. '-(' → logprob: -4.146430015563965
    5. '(self' → logprob: -6.271430015563965
    6. '(' → logprob: -6.271430015563965
    7. ' (' → logprob: -6.771430015563965
    8. '-mod' → logprob: -8.021430015563965
    9. ' ' → logprob: -8.021430015563965
    10. '-' → logprob: -8.271430015563965

Token 705: '.mod' (ID: 19046)
  Prédit: '.mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.mod' → logprob: -1.6047699318733066e-05
    2. 'mod' → logprob: -11.250016212463379
    3. '_mod' → logprob: -13.250016212463379
    4. '	mod' → logprob: -14.250016212463379
    5. '```' → logprob: -15.750016212463379
    6. '.' → logprob: -15.875016212463379
    7. '(mod' → logprob: -16.500015258789062
    8. '[' → logprob: -16.875015258789062
    9. 'MOD' → logprob: -17.250015258789062
    10. ' mod' → logprob: -17.750015258789062

Token 706: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.12693987786769867
    2. ' -' → logprob: -2.1269397735595703
    3. 'inv' → logprob: -12.37693977355957
    4. '-mod' → logprob: -12.75193977355957
    5. '%' → logprob: -13.12693977355957
    6. '*' → logprob: -13.62693977355957
    7. 'mod' → logprob: -15.00193977355957
    8. ' *' → logprob: -15.37693977355957
    9. '_mod' → logprob: -15.50193977355957
    10. '   ' → logprob: -15.50193977355957

Token 707: ' self' (ID: 1051)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.4367505609989166
    2. 'self' → logprob: -1.4367505311965942
    3. 'mod' → logprob: -2.436750650405884
    4. '(mod' → logprob: -3.561750650405884
    5. ' self' → logprob: -8.436750411987305
    6. ' (' → logprob: -9.311750411987305
    7. ' mod' → logprob: -11.311750411987305
    8. '(' → logprob: -11.811750411987305
    9. '	self' → logprob: -13.311750411987305
    10. '	mod' → logprob: -13.686750411987305

Token 708: '.mod' (ID: 19046)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.03315582126379013
    2. '.mod' → logprob: -3.533155918121338
    3. 'self' → logprob: -6.033155918121338
    4. '_mod' → logprob: -8.28315544128418
    5. '//' → logprob: -8.28315544128418
    6. '(mod' → logprob: -8.53315544128418
    7. '	mod' → logprob: -9.28315544128418
    8. '```' → logprob: -9.40815544128418
    9. '[self' → logprob: -10.28315544128418
    10. '(self' → logprob: -10.78315544128418

Token 709: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.0018428480252623558
    2. 'inv' → logprob: -6.751842975616455
    3. '```' → logprob: -8.626842498779297
    4. 'mod' → logprob: -8.876842498779297
    5. '_vals' → logprob: -9.751842498779297
    6. '#' → logprob: -9.751842498779297
    7. '_mod' → logprob: -9.876842498779297
    8. '_inv' → logprob: -9.876842498779297
    9. ' //' → logprob: -10.126842498779297
    10. 'val' → logprob: -10.626842498779297

Token 710: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -5.676981345459353e-06
    2. ' idx' → logprob: -12.625005722045898
    3. '	idx' → logprob: -13.375005722045898
    4. '[idx' → logprob: -14.250005722045898
    5. '(idx' → logprob: -16.5000057220459
    6. '_idx' → logprob: -18.2500057220459
    7. '.idx' → logprob: -19.7500057220459
    8. '```' → logprob: -19.8750057220459
    9. 'Idx' → logprob: -21.5000057220459
    10. '   ' → logprob: -21.5000057220459

Token 711: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.16022635996341705
    2. '*' → logprob: -1.9102263450622559
    3. ' ' → logprob: -14.410226821899414
    4. ' ' → logprob: -14.660226821899414
    5. ')' → logprob: -15.285226821899414
    6. '*object' → logprob: -15.410226821899414
    7. '   ' → logprob: -15.785226821899414
    8. '*(' → logprob: -15.910226821899414
    9. '```' → logprob: -16.035226821899414
    10. '*self' → logprob: -16.410226821899414

Token 712: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.0009115827269852161
    2. ' mod' → logprob: -7.000911712646484
    3. '	mod' → logprob: -17.375911712646484
    4. 'mo' → logprob: -18.875911712646484
    5. '   ' → logprob: -20.125911712646484
    6. '(mod' → logprob: -20.500911712646484
    7. ' ' → logprob: -20.500911712646484
    8. ' мод' → logprob: -20.625911712646484
    9. '_mod' → logprob: -20.625911712646484
    10. 'moder' → logprob: -21.125911712646484

Token 713: 'inv' (ID: 31086)
  Prédit: 'inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -4.320199877838604e-07
    2. 'in' → logprob: -15.0
    3. 'mod' → logprob: -18.25
    4. '_inv' → logprob: -18.75
    5. ' inv' → logprob: -18.875
    6. 'val' → logprob: -19.125
    7. 'v' → logprob: -19.25
    8. 'int' → logprob: -20.0
    9. 'inf' → logprob: -20.25
    10. 'iv' → logprob: -20.625

Token 714: '_vals' (ID: 71688)
  Prédit: '_vals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vals' → logprob: -4.723352049040841e-06
    2. 'vals' → logprob: -12.375004768371582
    3. '_mod' → logprob: -15.000004768371582
    4. 'Vals' → logprob: -16.250003814697266
    5. '(vals' → logprob: -17.000003814697266
    6. ' vals' → logprob: -18.125003814697266
    7. '_values' → logprob: -18.750003814697266
    8. 'mod' → logprob: -19.250003814697266
    9. '_val' → logprob: -19.250003814697266
    10. 's' → logprob: -19.375003814697266

Token 715: '[self' (ID: 33734)
  Prédit: '[self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[self' → logprob: -2.2246291337069124e-05
    2. '[' → logprob: -10.750021934509277
    3. 'self' → logprob: -14.500021934509277
    4. '[idx' → logprob: -16.000022888183594
    5. '[int' → logprob: -17.250022888183594
    6. '[
' → logprob: -17.625022888183594
    7. 'mod' → logprob: -18.000022888183594
    8. '(self' → logprob: -18.625022888183594
    9. '[(' → logprob: -18.625022888183594
    10. '[module' → logprob: -19.250022888183594

Token 716: '.mod' (ID: 19046)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.3879687786102295
    2. '.mod' → logprob: -1.1379687786102295
    3. ' mod' → logprob: -7.762969017028809
    4. '	mod' → logprob: -8.137969017028809
    5. ' мод' → logprob: -9.012969017028809
    6. '```' → logprob: -9.137969017028809
    7. '_mod' → logprob: -9.762969017028809
    8. ' ' → logprob: -10.762969017028809
    9. '[' → logprob: -11.137969017028809
    10. 'omod' → logprob: -11.137969017028809

Token 717: ' %' (ID: 1851)
  Prédit: '[idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.4842410981655121
    2. '%' → logprob: -1.2342411279678345
    3. 'mod' → logprob: -2.984241008758545
    4. '[' → logprob: -3.234241008758545
    5. 'idx' → logprob: -6.109241008758545
    6. '```' → logprob: -9.109241485595703
    7. ' %' → logprob: -9.359241485595703
    8. '_mod' → logprob: -9.359241485595703
    9. '[module' → logprob: -9.359241485595703
    10. ' mod' → logprob: -9.609241485595703

Token 718: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -1.8624639324116288e-06
    2. ' idx' → logprob: -13.250001907348633
    3. '	idx' → logprob: -17.125001907348633
    4. '(idx' → logprob: -18.250001907348633
    5. '_idx' → logprob: -19.125001907348633
    6. '[idx' → logprob: -19.875001907348633
    7. 'index' → logprob: -20.375001907348633
    8. '.idx' → logprob: -21.000001907348633
    9. 'id' → logprob: -22.375001907348633
    10. 'indx' → logprob: -23.625001907348633

Token 719: ']' (ID: 60)
  Prédit: '[idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.8361692428588867
    2. 'idx' → logprob: -1.2111692428588867
    3. ']' → logprob: -1.3361692428588867
    4. ' idx' → logprob: -5.586169242858887
    5. '(idx' → logprob: -6.586169242858887
    6. '	idx' → logprob: -8.086169242858887
    7. '   ' → logprob: -9.086169242858887
    8. 'dx' → logprob: -9.086169242858887
    9. '_idx' → logprob: -9.211169242858887
    10. '[' → logprob: -10.586169242858887

Token 720: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.711663544178009
    2. ' %' → logprob: -0.836663544178009
    3. '[idx' → logprob: -2.5866634845733643
    4. '[' → logprob: -8.461663246154785
    5. ')%' → logprob: -8.586663246154785
    6. ')' → logprob: -8.586663246154785
    7. ']' → logprob: -9.711663246154785
    8. '[index' → logprob: -10.461663246154785
    9. '(idx' → logprob: -10.836663246154785
    10. ' idx' → logprob: -11.836663246154785

Token 721: ' self' (ID: 1051)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.014229321852326393
    2. 'self' → logprob: -4.2642292976379395
    3. ' idx' → logprob: -9.889229774475098
    4. 'n' → logprob: -11.889229774475098
    5. ' self' → logprob: -12.264229774475098
    6. 'mod' → logprob: -13.389229774475098
    7. '```' → logprob: -14.014229774475098
    8. 'index' → logprob: -14.764229774475098
    9. '	idx' → logprob: -15.264229774475098
    10. '(idx' → logprob: -15.889229774475098

Token 722: '.mod' (ID: 19046)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.008616461418569088
    2. '.mod' → logprob: -4.7586164474487305
    3. '	mod' → logprob: -13.38361644744873
    4. '_mod' → logprob: -15.63361644744873
    5. ' mod' → logprob: -16.008617401123047
    6. '(mod' → logprob: -17.008617401123047
    7. '```' → logprob: -17.258617401123047
    8. 'omod' → logprob: -17.758617401123047
    9. ' мод' → logprob: -17.883617401123047
    10. ' ' → logprob: -19.008617401123047

Token 723: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6181411743164062
    2. '<|end|>' → logprob: -1.1181411743164062
    3. '
' → logprob: -2.8681411743164062
    4. '\n' → logprob: -3.8681411743164062
    5. '[' → logprob: -4.743141174316406
    6. ' ' → logprob: -5.118141174316406
    7. '        
' → logprob: -5.118141174316406
    8. '	' → logprob: -5.368141174316406
    9. '           ' → logprob: -5.493141174316406
    10. '.' → logprob: -5.618141174316406

Token 724: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18461671471595764
    2. '	return' → logprob: -2.184616804122925
    3. ' return' → logprob: -4.184616565704346
    4. '   ' → logprob: -4.184616565704346
    5. '[' → logprob: -4.809616565704346
    6. 'return' → logprob: -5.059616565704346
    7. ' ' → logprob: -6.309616565704346
    8. '<|end|>' → logprob: -6.434616565704346
    9. '```' → logprob: -6.684616565704346
    10. '           ' → logprob: -6.809616565704346

Token 725: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.020993409678339958
    2. ' return' → logprob: -4.645993232727051
    3. 'return' (adapté à ' return') → logprob: -4.895993232727051
    4. '   ' → logprob: -5.645993232727051
    5. '	return' → logprob: -9.64599323272705
    6. ' ' → logprob: -10.52099323272705
    7. '           ' → logprob: -10.52099323272705
    8. '	' → logprob: -11.39599323272705
    9. '```' → logprob: -11.64599323272705
    10. '      ' → logprob: -12.27099323272705

Token 726: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.0001234428636962548
    2. ' mod' → logprob: -9.000123023986816
    3. '	mod' → logprob: -19.875123977661133
    4. '(mod' → logprob: -21.500123977661133
    5. ' мод' → logprob: -24.000123977661133
    6. '_mod' → logprob: -24.500123977661133
    7. 'modifiable' → logprob: -24.500123977661133
    8. 'mo' → logprob: -24.625123977661133
    9. 'modal' → logprob: -24.625123977661133
    10. 'moder' → logprob: -25.125123977661133

Token 727: 'inv' (ID: 31086)
  Prédit: 'inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -5.200166469876422e-06
    2. 'val' → logprob: -12.500004768371582
    3. 'in' → logprob: -14.875004768371582
    4. 'mod' → logprob: -15.000004768371582
    5. '_vals' → logprob: -15.000004768371582
    6. 'vals' → logprob: -15.500004768371582
    7. '_inv' → logprob: -16.6250057220459
    8. '_values' → logprob: -17.1250057220459
    9. 'inf' → logprob: -17.1250057220459
    10. 'int' → logprob: -17.2500057220459

Token 728: '_vals' (ID: 71688)
  Prédit: '_vals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vals' → logprob: -0.00038086410495452583
    2. 'vals' → logprob: -7.875380992889404
    3. '(vals' → logprob: -15.250380516052246
    4. 'Vals' → logprob: -15.500380516052246
    5. 's' → logprob: -15.875380516052246
    6. 'v' → logprob: -17.375381469726562
    7. 'mod' → logprob: -18.000381469726562
    8. '_' → logprob: -18.125381469726562
    9. '_values' → logprob: -18.250381469726562
    10. 'val' → logprob: -18.250381469726562

Token 729: '

' (ID: 279)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5829893350601196
    2. '<|end|>' → logprob: -0.8329893350601196
    3. '```' → logprob: -5.33298921585083
    4. ' if' → logprob: -7.33298921585083
    5. '<|end|>' → logprob: -8.207989692687988
    6. '#' → logprob: -8.457989692687988
    7. 'comb' → logprob: -8.457989692687988
    8. '_comb' → logprob: -8.582989692687988
    9. '
' → logprob: -9.082989692687988
    10. 'main' → logprob: -9.207989692687988

Token 730: 'def' (ID: 1314)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -6.515961285913363e-05
    2. 'main' → logprob: -10.875064849853516
    3. ' if' → logprob: -11.000064849853516
    4. '<|end|>' → logprob: -11.000064849853516
    5. '```' → logprob: -11.875064849853516
    6. '#' → logprob: -13.000064849853516
    7. '#if' → logprob: -14.000064849853516
    8. '    
' → logprob: -14.125064849853516
    9. '
' → logprob: -14.250064849853516
    10. '  
' → logprob: -14.750064849853516

Token 731: ' dfs' (ID: 51252)
  Prédit: ' __'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.056336451321840286
    2. 'if' → logprob: -3.8063364028930664
    3. ' if' → logprob: -3.9313364028930664
    4. '__' → logprob: -4.431336402893066
    5. ' main' → logprob: -7.431336402893066
    6. '_' → logprob: -8.556336402893066
    7. ' ' → logprob: -9.431336402893066
    8. ' _' → logprob: -9.556336402893066
    9. '_if' → logprob: -9.931336402893066
    10. 'main' → logprob: -11.181336402893066

Token 732: '_search' (ID: 23642)
  Prédit: '(node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(node' → logprob: -0.31347405910491943
    2. '(value' → logprob: -1.8134740591049194
    3. '(' → logprob: -2.313474178314209
    4. '(depth' → logprob: -5.563474178314209
    5. '_func' → logprob: -8.18847370147705
    6. '_def' → logprob: -8.18847370147705
    7. '(root' → logprob: -8.18847370147705
    8. '(tree' → logprob: -8.18847370147705
    9. '_' → logprob: -8.68847370147705
    10. '(n' → logprob: -8.68847370147705

Token 733: '(graph' (ID: 51300)
  Prédit: '(node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -0.09666412323713303
    2. '(value' → logprob: -2.4716641902923584
    3. '(' → logprob: -5.471663951873779
    4. '(depth' → logprob: -6.596663951873779
    5. '(start' → logprob: -7.471663951873779
    6. '(root' → logprob: -7.596663951873779
    7. '(vertex' → logprob: -8.846664428710938
    8. '(n' → logprob: -8.846664428710938
    9. '(pos' → logprob: -9.096664428710938
    10. '(graph' → logprob: -9.471664428710938

Token 734: '_map' (ID: 11824)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002135534887202084
    2. ',node' → logprob: -8.625213623046875
    3. '(node' → logprob: -10.625213623046875
    4. '(graph' → logprob: -13.000213623046875
    5. ',value' → logprob: -13.250213623046875
    6. ' ,' → logprob: -13.875213623046875
    7. ',
' → logprob: -13.875213623046875
    8. '(vertex' → logprob: -14.500213623046875
    9. 'def' → logprob: -14.625213623046875
    10. '[node' → logprob: -14.875213623046875

Token 735: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.546478935983032e-05
    2. ',node' → logprob: -10.750025749206543
    3. ' ,' → logprob: -13.000025749206543
    4. '(node' → logprob: -13.750025749206543
    5. ',
' → logprob: -16.125024795532227
    6. ',v' → logprob: -16.500024795532227
    7. ',start' → logprob: -16.625024795532227
    8. '(vertex' → logprob: -16.875024795532227
    9. ',current' → logprob: -17.500024795532227
    10. '[node' → logprob: -17.500024795532227

Token 736: ' parent' (ID: 5980)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.5684646964073181
    2. 'node' → logprob: -1.818464756011963
    3. 'current' → logprob: -1.943464756011963
    4. ' start' → logprob: -2.943464756011963
    5. ' current' → logprob: -3.318464756011963
    6. ' node' → logprob: -3.443464756011963
    7. 'visited' → logprob: -5.193464756011963
    8. 'vertex' → logprob: -6.943464756011963
    9. ' visited' → logprob: -8.318464279174805
    10. ' vertex' → logprob: -8.818464279174805

Token 737: '_arr' (ID: 25121)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006951583200134337
    2. ',node' → logprob: -7.62569522857666
    3. '_node' → logprob: -9.00069522857666
    4. 'node' → logprob: -10.50069522857666
    5. ',current' → logprob: -10.87569522857666
    6. ' ,' → logprob: -12.12569522857666
    7. '_vertex' → logprob: -12.62569522857666
    8. '_map' → logprob: -12.75069522857666
    9. '):' → logprob: -12.87569522857666
    10. ',
' → logprob: -13.00069522857666

Token 738: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.0219828002154827e-05
    2. ',node' → logprob: -11.875020027160645
    3. '):' → logprob: -12.375020027160645
    4. ' ,' → logprob: -12.500020027160645
    5. 'd' → logprob: -14.375020027160645
    6. ',
' → logprob: -14.375020027160645
    7. '):
' → logprob: -14.500020027160645
    8. ',u' → logprob: -14.625020027160645
    9. ',current' → logprob: -14.750020027160645
    10. 'e' → logprob: -14.750020027160645

Token 739: ' counter' (ID: 9446)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.2465137243270874
    2. 'node' → logprob: -1.7465137243270874
    3. ' current' → logprob: -3.871513843536377
    4. 'start' → logprob: -4.996513843536377
    5. 'cur' → logprob: -5.121513843536377
    6. ' node' → logprob: -5.246513843536377
    7. 'curr' → logprob: -5.746513843536377
    8. 'vertex' → logprob: -7.246513843536377
    9. 'now' → logprob: -7.746513843536377
    10. 'visited' → logprob: -8.371513366699219

Token 740: '_arr' (ID: 25121)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00915147177875042
    2. '_map' → logprob: -5.509151458740234
    3. '):' → logprob: -5.884151458740234
    4. '_arr' → logprob: -7.384151458740234
    5. ',node' → logprob: -7.509151458740234
    6. '):
' → logprob: -8.509151458740234
    7. '_node' → logprob: -8.759151458740234
    8. '_idx' → logprob: -8.884151458740234
    9. '_counter' → logprob: -8.884151458740234
    10. '_nodes' → logprob: -9.384151458740234

Token 741: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007282786536961794
    2. '):' → logprob: -7.250728130340576
    3. ' ,' → logprob: -11.750728607177734
    4. '):
' → logprob: -12.625728607177734
    5. ',node' → logprob: -13.125728607177734
    6. '=None' → logprob: -14.375728607177734
    7. 'def' → logprob: -14.375728607177734
    8. '   ' → logprob: -14.750728607177734
    9. ',index' → logprob: -14.750728607177734
    10. ',n' → logprob: -14.750728607177734

Token 742: ' edge' (ID: 11165)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.6179505586624146
    2. 'node' → logprob: -1.3679505586624146
    3. ' current' → logprob: -2.242950439453125
    4. ' node' → logprob: -2.617950439453125
    5. 'cur' → logprob: -4.742950439453125
    6. 'start' → logprob: -4.992950439453125
    7. 'curr' → logprob: -5.367950439453125
    8. 'vertex' → logprob: -6.242950439453125
    9. 'now' → logprob: -6.742950439453125
    10. ' curr' → logprob: -7.117950439453125

Token 743: '_start' (ID: 10949)
  Prédit: '_list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.7606940865516663
    2. 's' → logprob: -1.8856940269470215
    3. '_idx' → logprob: -1.8856940269470215
    4. '_map' → logprob: -2.3856940269470215
    5. ',' → logprob: -2.7606940269470215
    6. '_index' → logprob: -3.7606940269470215
    7. '):' → logprob: -3.7606940269470215
    8. '_id' → logprob: -4.7606940269470215
    9. '_stack' → logprob: -5.5106940269470215
    10. '_indices' → logprob: -6.3856940269470215

Token 744: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.018003016710281372
    2. '_nodes' → logprob: -5.268002986907959
    3. '_node' → logprob: -6.018002986907959
    4. '_list' → logprob: -6.518002986907959
    5. '):' → logprob: -6.518002986907959
    6. '_idx' → logprob: -6.768002986907959
    7. ',_' → logprob: -6.768002986907959
    8. '_map' → logprob: -6.893002986907959
    9. ' ,' → logprob: -7.268002986907959
    10. 's' → logprob: -7.393002986907959

Token 745: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12608881294727325
    2. '   ' → logprob: -2.251088857650757
    3. '():' → logprob: -5.251088619232178
    4. '	stack' → logprob: -6.376088619232178
    5. '(stack' → logprob: -6.626088619232178
    6. ',' → logprob: -6.751088619232178
    7. ':
' → logprob: -7.126088619232178
    8. '):' → logprob: -7.126088619232178
    9. '_stack' → logprob: -8.251089096069336
    10. '[' → logprob: -8.376089096069336

Token 746: ' search' (ID: 3684)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.5284099578857422
    2. ' stack' → logprob: -0.9034099578857422
    3. '   ' → logprob: -5.403409957885742
    4. ' for' → logprob: -7.778409957885742
    5. 'for' → logprob: -8.528409957885742
    6. '	stack' → logprob: -10.028409957885742
    7. 'counter' → logprob: -10.278409957885742
    8. ' visited' → logprob: -11.028409957885742
    9. ' counter' → logprob: -11.028409957885742
    10. 'visited' → logprob: -11.153409957885742

Token 747: '_stack' (ID: 35650)
  Prédit: '_stack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_stack' → logprob: -0.004076382145285606
    2. '_queue' → logprob: -5.6290764808654785
    3. 'stack' → logprob: -8.50407600402832
    4. '_node' → logprob: -9.50407600402832
    5. '_nodes' → logprob: -9.62907600402832
    6. '_order' → logprob: -10.25407600402832
    7. ' =' → logprob: -11.00407600402832
    8. '_' → logprob: -11.37907600402832
    9. ' stack' → logprob: -11.75407600402832
    10. '_list' → logprob: -12.00407600402832

Token 748: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25195586681365967
    2. '=' → logprob: -1.5019558668136597
    3. ',' → logprob: -11.00195598602295
    4. '.append' → logprob: -12.37695598602295
    5. '=[]' → logprob: -13.00195598602295
    6. '   ' → logprob: -13.37695598602295
    7. '=[' → logprob: -14.12695598602295
    8. '=[]
' → logprob: -15.12695598602295
    9. '.' → logprob: -15.25195598602295
    10. '[' → logprob: -15.25195598602295

Token 749: ' []
' (ID: 8911)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7061227560043335
    2. '[(' → logprob: -0.7061227560043335
    3. ' [' → logprob: -5.206122875213623
    4. ' [(' → logprob: -5.706122875213623
    5. 'deque' → logprob: -5.706122875213623
    6. ' deque' → logprob: -8.081122398376465
    7. '[((' → logprob: -8.831122398376465
    8. '[node' → logprob: -9.206122398376465
    9. '[parent' → logprob: -10.081122398376465
    10. '[array' → logprob: -10.331122398376465

Token 750: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07244773954153061
    2. 'search' → logprob: -2.8224477767944336
    3. ' search' → logprob: -4.572447776794434
    4. '	search' → logprob: -9.322447776794434
    5. '   ' → logprob: -14.197447776794434
    6. '_search' → logprob: -14.447447776794434
    7. '(search' → logprob: -14.947447776794434
    8. 'def' → logprob: -15.322447776794434
    9. '```' → logprob: -15.322447776794434
    10. ' ' → logprob: -15.447447776794434

Token 751: ' search' (ID: 3684)
  Prédit: 'search'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'search' (adapté à ' search') → logprob: -0.01009047869592905
    2. ' search' → logprob: -4.635090351104736
    3. '   ' → logprob: -8.135090827941895
    4. 'graph' → logprob: -10.385090827941895
    5. 'edge' → logprob: -12.635090827941895
    6. 'stack' → logprob: -13.635090827941895
    7. '[' → logprob: -13.635090827941895
    8. 'deque' → logprob: -13.635090827941895
    9. '	search' → logprob: -14.010090827941895
    10. ' graph' → logprob: -14.635090827941895

Token 752: '_stack' (ID: 35650)
  Prédit: '_stack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_stack' → logprob: -0.000353100651409477
    2. '_map' → logprob: -9.00035285949707
    3. '_counter' → logprob: -9.87535285949707
    4. 'stack' → logprob: -10.62535285949707
    5. '_depth' → logprob: -10.62535285949707
    6. '_start' → logprob: -10.75035285949707
    7. '_queue' → logprob: -10.75035285949707
    8. '   ' → logprob: -10.75035285949707
    9. 'Stack' → logprob: -11.37535285949707
    10. ' =' → logprob: -12.12535285949707

Token 753: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0010092307347804308
    2. '.' → logprob: -7.001009464263916
    3. 'append' → logprob: -10.126008987426758
    4. ' =' → logprob: -10.376008987426758
    5. '=' → logprob: -11.126008987426758
    6. ' .' → logprob: -12.126008987426758
    7. '_append' → logprob: -12.376008987426758
    8. '.extend' → logprob: -13.876008987426758
    9. '.push' → logprob: -15.001008987426758
    10. '.=' → logprob: -15.501008987426758

Token 754: '(edge' (ID: 84023)
  Prédit: '(edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(edge' → logprob: -0.0015214069280773401
    2. '((' → logprob: -6.501521587371826
    3. 'edge' → logprob: -11.126521110534668
    4. '(' → logprob: -12.376521110534668
    5. '=edge' → logprob: -16.626522064208984
    6. '(edges' → logprob: -16.876522064208984
    7. ' edge' → logprob: -17.626522064208984
    8. '(
' → logprob: -17.751522064208984
    9. '(ed' → logprob: -18.251522064208984
    10. ' (' → logprob: -18.751522064208984

Token 755: '_start' (ID: 10949)
  Prédit: '_start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -1.9361264946837764e-07
    2. 'start' → logprob: -15.875
    3. '_' → logprob: -18.0
    4. '_START' → logprob: -18.75
    5. '_star' → logprob: -18.75
    6. '[start' → logprob: -19.5
    7. '_Start' → logprob: -20.125
    8. '-start' → logprob: -20.25
    9. '_end' → logprob: -20.5
    10. '_stack' → logprob: -20.75

Token 756: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006290406454354525
    2. ')
' → logprob: -7.37562894821167
    3. ' )' → logprob: -13.625629425048828
    4. ')
' → logprob: -14.500629425048828
    5. ',' → logprob: -14.750629425048828
    6. ')

' → logprob: -15.125629425048828
    7. '[' → logprob: -16.625629425048828
    8. '   ' → logprob: -17.750629425048828
    9. '),' → logprob: -18.125629425048828
    10. '))' → logprob: -18.250629425048828

Token 757: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18665874004364014
    2. 'while' → logprob: -2.3116588592529297
    3. '	while' → logprob: -3.1866588592529297
    4. ' while' → logprob: -3.6866588592529297
    5. '    
' → logprob: -5.56165885925293
    6. '
' → logprob: -7.43665885925293
    7. '```' → logprob: -8.18665885925293
    8. '	
' → logprob: -10.81165885925293
    9. '<|end|>' → logprob: -11.06165885925293
    10. '   ' → logprob: -11.93665885925293

Token 758: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.8705071210861206
    2. ' while' → logprob: -1.1205071210861206
    3. '   ' → logprob: -1.3705071210861206
    4. '	while' → logprob: -6.99550724029541
    5. '
' → logprob: -8.62050724029541
    6. '    
' → logprob: -10.24550724029541
    7. 'visited' → logprob: -10.87050724029541
    8. ' 
' → logprob: -12.24550724029541
    9. '```' → logprob: -12.62050724029541
    10. '   ' → logprob: -12.74550724029541

Token 759: ' search' (ID: 3684)
  Prédit: 'search'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'search' → logprob: -0.00014454191841650754
    2. ' search' → logprob: -9.125144958496094
    3. 'len' → logprob: -10.250144958496094
    4. ' len' → logprob: -16.500144958496094
    5. '(search' → logprob: -18.125144958496094
    6. '	search' → logprob: -18.500144958496094
    7. 'se' → logprob: -18.875144958496094
    8. '   ' → logprob: -19.500144958496094
    9. ' ' → logprob: -20.000144958496094
    10. '  ' → logprob: -20.625144958496094

Token 760: '_stack' (ID: 35650)
  Prédit: '_stack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_stack' → logprob: -9.088346359931165e-07
    2. 'stack' → logprob: -14.375000953674316
    3. '_' → logprob: -15.875000953674316
    4. 'Stack' → logprob: -17.25
    5. '_STACK' → logprob: -17.875
    6. '
' → logprob: -18.0
    7. '_start' → logprob: -18.0
    8. '_
' → logprob: -18.375
    9. ' stack' → logprob: -18.5
    10. '_search' → logprob: -18.5

Token 761: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -9.102680633077398e-05
    2. '):' → logprob: -10.000090599060059
    3. ':
' → logprob: -10.500090599060059
    4. '>:' → logprob: -11.250090599060059
    5. ' :' → logprob: -14.125090599060059
    6. '():' → logprob: -14.500090599060059
    7. ':not' → logprob: -14.500090599060059
    8. 'and' → logprob: -14.625090599060059
    9. '!=' → logprob: -14.875090599060059
    10. ':**' → logprob: -15.125090599060059

Token 762: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1854369342327118
    2. '   ' → logprob: -1.8104369640350342
    3. '```' → logprob: -6.310436725616455
    4. ':' → logprob: -7.060436725616455
    5. ':
' → logprob: -7.435436725616455
    6. '
' → logprob: -7.435436725616455
    7. '):
' → logprob: -7.685436725616455
    8. ',' → logprob: -8.185437202453613
    9. '    
' → logprob: -8.435437202453613
    10. '<|end|>' → logprob: -9.185437202453613

Token 763: ' parent' (ID: 5980)
  Prédit: ' current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.8547400832176208
    2. 'current' → logprob: -0.9797400832176208
    3. ' node' → logprob: -2.4797401428222656
    4. 'node' → logprob: -2.6047401428222656
    5. 'cur' → logprob: -3.7297401428222656
    6. ' curr' → logprob: -5.229740142822266
    7. 'curr' → logprob: -5.479740142822266
    8. ' cur' → logprob: -5.604740142822266
    9. 'edge' → logprob: -6.479740142822266
    10. ' edge' → logprob: -6.854740142822266

Token 764: '_node' (ID: 11390)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47100701928138733
    2. '_node' → logprob: -1.596006989479065
    3. '=' → logprob: -1.971006989479065
    4. '_vertex' → logprob: -4.721006870269775
    5. 'node' → logprob: -5.096006870269775
    6. '_edge' → logprob: -5.346006870269775
    7. ',' → logprob: -5.721006870269775
    8. '=current' → logprob: -6.221006870269775
    9. '_current' → logprob: -6.596006870269775
    10. 'current' → logprob: -6.721006870269775

Token 765: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12695278227329254
    2. '=' → logprob: -2.126952886581421
    3. ',' → logprob: -10.626953125
    4. ' ' → logprob: -15.876953125
    5. ')' → logprob: -16.126953125
    6. '   ' → logprob: -16.501953125
    7. '    ' → logprob: -17.001953125
    8. '＝' → logprob: -17.001953125
    9. '	' → logprob: -17.376953125
    10. ' ,' → logprob: -17.376953125

Token 766: ' search' (ID: 3684)
  Prédit: 'search'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'search' → logprob: -0.011047935113310814
    2. ' search' → logprob: -4.511047840118408
    3. 'earch' → logprob: -17.63604736328125
    4. ' ' → logprob: -17.63604736328125
    5. '	search' → logprob: -18.01104736328125
    6. '   ' → logprob: -18.26104736328125
    7. 'graph' → logprob: -18.51104736328125
    8. 'parent' → logprob: -18.63604736328125
    9. '(search' → logprob: -18.76104736328125
    10. '  ' → logprob: -19.26104736328125

Token 767: '_stack' (ID: 35650)
  Prédit: '_stack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_stack' → logprob: -0.0001170132018160075
    2. 'Stack' → logprob: -9.875117301940918
    3. 'stack' → logprob: -10.125117301940918
    4. '_node' → logprob: -11.750117301940918
    5. '_search' → logprob: -12.500117301940918
    6. '_map' → logprob: -13.000117301940918
    7. '_STACK' → logprob: -13.250117301940918
    8. '_nodes' → logprob: -13.375117301940918
    9. '_start' → logprob: -13.625117301940918
    10. 'search' → logprob: -13.625117301940918

Token 768: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -8.08944896562025e-05
    2. '[-' → logprob: -9.500081062316895
    3. 'pop' → logprob: -12.375081062316895
    4. '_pop' → logprob: -13.625081062316895
    5. '.' → logprob: -14.750081062316895
    6. '   ' → logprob: -16.125080108642578
    7. '.append' → logprob: -17.125080108642578
    8. ' .' → logprob: -17.625080108642578
    9. '	pop' → logprob: -19.250080108642578
    10. '=' → logprob: -19.375080108642578

Token 769: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00022046364028938115
    2. '()
' → logprob: -8.50022029876709
    3. '(' → logprob: -11.00022029876709
    4. '()
' → logprob: -16.125221252441406
    5. '()

' → logprob: -16.375221252441406
    6. '();' → logprob: -17.375221252441406
    7. '(
' → logprob: -17.375221252441406
    8. '(),' → logprob: -17.375221252441406
    9. ' ()' → logprob: -17.500221252441406
    10. ')' → logprob: -18.125221252441406

Token 770: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03974468633532524
    2. ' for' → logprob: -3.6647446155548096
    3. '       ' → logprob: -4.664744853973389
    4. 'for' → logprob: -5.664744853973389
    5. ',' → logprob: -8.66474437713623
    6. ' if' → logprob: -9.53974437713623
    7. '    
' → logprob: -10.03974437713623
    8. 'if' → logprob: -10.41474437713623
    9. '	for' → logprob: -10.41474437713623
    10. ':' → logprob: -10.66474437713623

Token 771: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -8.85235276655294e-05
    2. ' for' → logprob: -9.875088691711426
    3. '   ' → logprob: -10.500088691711426
    4. 'counter' → logprob: -12.250088691711426
    5. 'if' → logprob: -12.875088691711426
    6. 'current' → logprob: -13.750088691711426
    7. '       ' → logprob: -14.750088691711426
    8. 'child' → logprob: -15.750088691711426
    9. '    
' → logprob: -16.25008773803711
    10. '
' → logprob: -16.37508773803711

Token 772: ' edge' (ID: 11165)
  Prédit: 'child'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'child' → logprob: -0.13263078033924103
    2. 'next' → logprob: -2.5076308250427246
    3. 'neighbor' → logprob: -4.007630825042725
    4. 'adj' → logprob: -4.382630825042725
    5. ' child' → logprob: -5.382630825042725
    6. 'current' → logprob: -5.757630825042725
    7. 'node' → logprob: -6.757630825042725
    8. 'connected' → logprob: -7.132630825042725
    9. ' next' → logprob: -7.257630825042725
    10. 'edge' → logprob: -7.382630825042725

Token 773: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.4617026150226593
    2. ' in' → logprob: -1.086702585220337
    3. ',' → logprob: -4.086702823638916
    4. 'in' → logprob: -6.211702823638916
    5. 'to' → logprob: -6.211702823638916
    6. '_neighbor' → logprob: -6.336702823638916
    7. '_idx' → logprob: -6.586702823638916
    8. '_' → logprob: -6.586702823638916
    9. '_index' → logprob: -6.836702823638916
    10. '_to' → logprob: -7.211702823638916

Token 774: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.4287927448749542
    2. ' in' → logprob: -1.0537927150726318
    3. ',' → logprob: -9.678792953491211
    4. '	in' → logprob: -11.178792953491211
    5. ' ' → logprob: -11.803792953491211
    6. '_in' → logprob: -13.303792953491211
    7. ' ' → logprob: -13.803792953491211
    8. '[in' → logprob: -14.178792953491211
    9. ',in' → logprob: -14.303792953491211
    10. '
' → logprob: -14.553792953491211

Token 775: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -2.935296834039036e-06
    2. ' graph' → logprob: -12.75000286102295
    3. '	graph' → logprob: -17.750003814697266
    4. '(graph' → logprob: -18.625003814697266
    5. '   ' → logprob: -20.125003814697266
    6. 'range' → logprob: -20.250003814697266
    7. '
' → logprob: -20.500003814697266
    8. 'list' → logprob: -21.000003814697266
    9. '[' → logprob: -21.000003814697266
    10. 'grid' → logprob: -21.375003814697266

Token 776: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -0.00038384052459150553
    2. '[parent' → logprob: -7.8753838539123535
    3. 'map' → logprob: -13.125383377075195
    4. '_parent' → logprob: -14.125383377075195
    5. 'parent' → logprob: -14.500383377075195
    6. '[' → logprob: -15.000383377075195
    7. '[node' → logprob: -17.125383377075195
    8. '_list' → logprob: -17.250383377075195
    9. '(parent' → logprob: -17.375383377075195
    10. 'Map' → logprob: -17.500383377075195

Token 777: '[parent' (ID: 186852)
  Prédit: '[parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[parent' → logprob: -4.320199877838604e-07
    2. 'parent' → logprob: -15.25
    3. '[' → logprob: -17.25
    4. '[
' → logprob: -18.625
    5. '[player' → logprob: -19.125
    6. ' [' → logprob: -19.375
    7. '(parent' → logprob: -19.375
    8. ',parent' → logprob: -19.5
    9. 'paren' → logprob: -19.75
    10. '.get' → logprob: -20.0

Token 778: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.0041725412011146545
    2. '[parent' → logprob: -5.754172325134277
    3. '[node' → logprob: -8.254172325134277
    4. 'node' → logprob: -8.379172325134277
    5. 'parent' → logprob: -8.504172325134277
    6. '_parent' → logprob: -8.629172325134277
    7. '_nodes' → logprob: -9.254172325134277
    8. 's' → logprob: -12.004172325134277
    9. '][' → logprob: -12.629172325134277
    10. '])' → logprob: -13.379172325134277

Token 779: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.0038994653150439262
    2. ']:
' → logprob: -5.753899574279785
    3. ':' → logprob: -7.378899574279785
    4. ']' → logprob: -10.503899574279785
    5. '):' → logprob: -10.753899574279785
    6. '>:' → logprob: -11.003899574279785
    7. '[' → logprob: -11.503899574279785
    8. ']:
' → logprob: -11.753899574279785
    9. '}:' → logprob: -12.003899574279785
    10. ':
' → logprob: -13.003899574279785

Token 780: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00680098682641983
    2. '       ' → logprob: -5.631801128387451
    3. ' if' → logprob: -6.756801128387451
    4. ',' → logprob: -7.256801128387451
    5. 'if' → logprob: -7.381801128387451
    6. '<|end|>' → logprob: -8.256800651550293
    7. '	       ' → logprob: -8.631800651550293
    8. ':
' → logprob: -9.631800651550293
    9. '   ' → logprob: -10.131800651550293
    10. '<|end|>' → logprob: -10.381800651550293

Token 781: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.05004662647843361
    2. 'if' (adapté à ' if') → logprob: -3.050046682357788
    3. '       ' → logprob: -6.925046443939209
    4. '               ' → logprob: -8.050046920776367
    5. '	if' → logprob: -9.425046920776367
    6. '   ' → logprob: -9.925046920776367
    7. '           ' → logprob: -11.425046920776367
    8. '<|end|>' → logprob: -12.175046920776367
    9. ',' → logprob: -12.550046920776367
    10. '	       ' → logprob: -13.175046920776367

Token 782: ' parent' (ID: 5980)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.08810469508171082
    2. 'parent' → logprob: -2.588104724884033
    3. ' edge' → logprob: -4.838104724884033
    4. 'not' → logprob: -6.963104724884033
    5. ' parent' → logprob: -8.588104248046875
    6. ' not' → logprob: -9.713104248046875
    7. '(edge' → logprob: -11.088104248046875
    8. 'child' → logprob: -11.588104248046875
    9. '   ' → logprob: -12.025604248046875
    10. 'node' → logprob: -12.963104248046875

Token 783: '_arr' (ID: 25121)
  Prédit: '_arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_arr' → logprob: -0.0005551783833652735
    2. '_node' → logprob: -7.500555038452148
    3. 'node' → logprob: -13.750555038452148
    4. 'arr' → logprob: -14.500555038452148
    5. '[node' → logprob: -15.500555038452148
    6. 'Arr' → logprob: -15.875555038452148
    7. 's' → logprob: -16.62555503845215
    8. '_array' → logprob: -16.87555503845215
    9. '	arr' → logprob: -16.87555503845215
    10. 'Node' → logprob: -17.50055503845215

Token 784: '[parent' (ID: 186852)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.2664456789934775e-06
    2. 'edge' → logprob: -15.000000953674316
    3. '=edge' → logprob: -15.000000953674316
    4. '[
' → logprob: -15.375000953674316
    5. ' [' → logprob: -16.625001907348633
    6. '```' → logprob: -16.750001907348633
    7. '[...]' → logprob: -17.500001907348633
    8. '
' → logprob: -17.750001907348633
    9. '[node' → logprob: -17.750001907348633
    10. '(edge' → logprob: -18.000001907348633

Token 785: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -5.5027299822540954e-05
    2. 'node' → logprob: -9.875055313110352
    3. 'Node' → logprob: -13.500055313110352
    4. '_NODE' → logprob: -14.250055313110352
    5. '[node' → logprob: -14.375055313110352
    6. '_edge' → logprob: -15.125055313110352
    7. 'edge' → logprob: -16.00005531311035
    8. ' node' → logprob: -16.25005531311035
    9. '_Node' → logprob: -16.62505531311035
    10. '<Node' → logprob: -16.87505531311035

Token 786: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.008344000205397606
    2. ']==' → logprob: -5.5083441734313965
    3. ']!=' → logprob: -5.6333441734313965
    4. ' ]' → logprob: -8.883343696594238
    5. ' !=' → logprob: -9.133343696594238
    6. '==' → logprob: -9.508343696594238
    7. '[' → logprob: -9.633343696594238
    8. '!=' → logprob: -9.758343696594238
    9. ' ==' → logprob: -9.883343696594238
    10. ' is' → logprob: -10.008343696594238

Token 787: ' ==' (ID: 951)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.9405785799026489
    2. ' !=' → logprob: -1.565578579902649
    3. '!=' → logprob: -1.940578579902649
    4. ' is' → logprob: -2.5655784606933594
    5. '==' → logprob: -2.6905784606933594
    6. ' ==' → logprob: -3.0655784606933594
    7. '[' → logprob: -3.5655784606933594
    8. ']==' → logprob: -4.315578460693359
    9. ']!=' → logprob: -4.315578460693359
    10. 'is' → logprob: -5.565578460693359

Token 788: ' edge' (ID: 11165)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.0046515571884810925
    2. ' edge' → logprob: -5.3796515464782715
    3. '   ' → logprob: -11.12965202331543
    4. '-' → logprob: -12.12965202331543
    5. '=edge' → logprob: -12.87965202331543
    6. '(edge' → logprob: -13.37965202331543
    7. ' ' → logprob: -13.50465202331543
    8. '  ' → logprob: -13.62965202331543
    9. '0' → logprob: -13.75465202331543
    10. '    ' → logprob: -14.12965202331543

Token 789: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.0001818489981815219
    2. 'node' → logprob: -8.625182151794434
    3. 'edge' → logprob: -14.625182151794434
    4. '_edge' → logprob: -15.000182151794434
    5. '[node' → logprob: -15.000182151794434
    6. 'Node' → logprob: -15.250182151794434
    7. '_start' → logprob: -15.875182151794434
    8. ' node' → logprob: -16.125181198120117
    9. '
' → logprob: -16.375181198120117
    10. '   ' → logprob: -16.500181198120117

Token 790: ':
' (ID: 734)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.4039255380630493
    2. ':' → logprob: -1.1539255380630493
    3. ':
' → logprob: -4.27892541885376
    4. '               ' → logprob: -6.65392541885376
    5. ' continue' → logprob: -6.77892541885376
    6. ' and' → logprob: -8.028925895690918
    7. 'continue' → logprob: -9.028925895690918
    8. ':return' → logprob: -10.028925895690918
    9. ' :' → logprob: -10.153925895690918
    10. '           ' → logprob: -10.903925895690918

Token 791: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.046800922602415085
    2. ':' → logprob: -3.4218008518218994
    3. ' continue' → logprob: -5.0468010902404785
    4. ':
' → logprob: -5.7968010902404785
    5. 'continue' → logprob: -5.7968010902404785
    6. ' or' → logprob: -8.17180061340332
    7. '           ' → logprob: -8.42180061340332
    8. '	continue' → logprob: -10.42180061340332
    9. '_continue' → logprob: -12.17180061340332
    10. ',' → logprob: -12.42180061340332

Token 792: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.2977488934993744
    2. ' continue' → logprob: -1.5477489233016968
    3. '               ' → logprob: -3.2977488040924072
    4. '           ' → logprob: -5.672749042510986
    5. '	continue' → logprob: -5.922749042510986
    6. '                   ' → logprob: -6.547749042510986
    7. '   ' → logprob: -8.797748565673828
    8. '       ' → logprob: -10.047748565673828
    9. '_continue' → logprob: -10.297748565673828
    10. '	           ' → logprob: -11.297748565673828

Token 793: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.014444372616708279
    2. '
' → logprob: -4.264444351196289
    3. '<|end|>' → logprob: -9.014444351196289
    4. '            
' → logprob: -9.139444351196289
    5. '		' → logprob: -11.014444351196289
    6. '               ' → logprob: -12.014444351196289
    7. '          ' → logprob: -12.764444351196289
    8. ' 
' → logprob: -12.764444351196289
    9. '  
' → logprob: -12.889444351196289
    10. '
' → logprob: -12.889444351196289

Token 794: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01597219705581665
    2. '
' → logprob: -4.890972137451172
    3. '       ' → logprob: -6.015972137451172
    4. '   ' → logprob: -6.515972137451172
    5. '            
' → logprob: -6.640972137451172
    6. '<|end|>' → logprob: -6.890972137451172
    7. '		' → logprob: -8.140972137451172
    8. ' if' → logprob: -8.140972137451172
    9. '	   ' → logprob: -8.640972137451172
    10. '    
' → logprob: -8.765972137451172

Token 795: ' else' (ID: 1203)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8015896677970886
    2. ' if' → logprob: -1.3015897274017334
    3. '       ' → logprob: -1.8015897274017334
    4. 'if' → logprob: -2.4265897274017334
    5. 'parent' → logprob: -4.301589488983154
    6. ' parent' → logprob: -4.676589488983154
    7. '   ' → logprob: -7.051589488983154
    8. '	   ' → logprob: -7.801589488983154
    9. '[parent' → logprob: -7.926589488983154
    10. '	' → logprob: -8.176589965820312

Token 796: ':
' (ID: 734)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.16745193302631378
    2. '               ' → logprob: -2.542451858520508
    3. 'if' → logprob: -3.542451858520508
    4. ':' → logprob: -3.667451858520508
    5. ':
' → logprob: -4.292451858520508
    6. '           ' → logprob: -5.167451858520508
    7. ',' → logprob: -7.042451858520508
    8. '       ' → logprob: -8.542451858520508
    9. '   ' → logprob: -8.667451858520508
    10. ' and' → logprob: -9.542451858520508

Token 797: '               ' (ID: 506)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.13267701864242554
    2. ' if' → logprob: -2.8826770782470703
    3. 'parent' → logprob: -2.8826770782470703
    4. '           ' → logprob: -4.88267707824707
    5. '               ' → logprob: -5.63267707824707
    6. ' parent' → logprob: -6.88267707824707
    7. '       ' → logprob: -9.88267707824707
    8. '   ' → logprob: -10.38267707824707
    9. '[parent' → logprob: -11.88267707824707
    10. '	parent' → logprob: -13.50767707824707

Token 798: ' parent' (ID: 5980)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' (adapté à ' parent') → logprob: -0.08963643014431
    2. ' parent' → logprob: -2.7146363258361816
    3. 'if' → logprob: -4.589636325836182
    4. ' if' → logprob: -5.339636325836182
    5. '           ' → logprob: -5.464636325836182
    6. '   ' → logprob: -8.71463680267334
    7. '               ' → logprob: -9.08963680267334
    8. '       ' → logprob: -10.83963680267334
    9. '	parent' → logprob: -12.08963680267334
    10. '[parent' → logprob: -12.58963680267334

Token 799: '_arr' (ID: 25121)
  Prédit: '_arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_arr' → logprob: -1.2664456789934775e-06
    2. 'arr' → logprob: -13.750000953674316
    3. 'Arr' → logprob: -16.625001907348633
    4. '	arr' → logprob: -17.500001907348633
    5. '[arr' → logprob: -17.750001907348633
    6. '_node' → logprob: -17.875001907348633
    7. '_array' → logprob: -18.000001907348633
    8. '[node' → logprob: -18.125001907348633
    9. '$arr' → logprob: -19.500001907348633
    10. '[_' → logprob: -19.625001907348633

Token 800: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.961759259458631e-06
    2. '=edge' → logprob: -12.875004768371582
    3. '[parent' → logprob: -13.625004768371582
    4. '[node' → logprob: -14.500004768371582
    5. 'edge' → logprob: -16.1250057220459
    6. '[element' → logprob: -16.3750057220459
    7. '[array' → logprob: -16.7500057220459
    8. '(edge' → logprob: -17.0000057220459
    9. '[assembly' → logprob: -17.1250057220459
    10. '[end' → logprob: -17.3750057220459

Token 801: 'edge' (ID: 13457)
  Prédit: 'edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -8.149051427608356e-05
    2. ' edge' → logprob: -9.625081062316895
    3. '[' → logprob: -11.625081062316895
    4. '(edge' → logprob: -12.500081062316895
    5. '=edge' → logprob: -12.875081062316895
    6. '   ' → logprob: -16.50008201599121
    7. '_edge' → logprob: -16.75008201599121
    8. '][' → logprob: -17.37508201599121
    9. '.edge' → logprob: -17.62508201599121
    10. 'edges' → logprob: -18.75008201599121

Token 802: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -5.3358446166384965e-05
    2. 'node' → logprob: -10.000053405761719
    3. '_nodes' → logprob: -12.125053405761719
    4. ']' → logprob: -13.875053405761719
    5. '_NODE' → logprob: -14.750053405761719
    6. 'Node' → logprob: -15.250053405761719
    7. '_stack' → logprob: -15.625053405761719
    8. '[node' → logprob: -16.25005340576172
    9. '_arr' → logprob: -16.62505340576172
    10. ']_' → logprob: -17.00005340576172

Token 803: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.06618661433458328
    2. '=' → logprob: -3.3161866664886475
    3. ' =' → logprob: -3.6911866664886475
    4. ']=' → logprob: -5.941186428070068
    5. ' ]' → logprob: -8.941186904907227
    6. ')' → logprob: -10.066186904907227
    7. '[' → logprob: -12.316186904907227
    8. ',' → logprob: -13.441186904907227
    9. '=edge' → logprob: -14.066186904907227
    10. ')=' → logprob: -14.191186904907227

Token 804: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04858759790658951
    2. ' =' → logprob: -3.0485875606536865
    3. '[' → logprob: -16.298587799072266
    4. '＝' → logprob: -16.923587799072266
    5. '[parent' → logprob: -18.173587799072266
    6. ']=' → logprob: -18.423587799072266
    7. ',' → logprob: -18.798587799072266
    8. '=edge' → logprob: -19.048587799072266
    9. '==' → logprob: -19.298587799072266
    10. ']' → logprob: -19.298587799072266

Token 805: ' parent' (ID: 5980)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.00012368128227535635
    2. ' parent' → logprob: -9.000123977661133
    3. '	parent' → logprob: -16.125123977661133
    4. 'paren' → logprob: -16.875123977661133
    5. '[parent' → logprob: -18.000123977661133
    6. '(parent' → logprob: -18.500123977661133
    7. '
' → logprob: -19.500123977661133
    8. '_parent' → logprob: -20.125123977661133
    9. ',parent' → logprob: -20.875123977661133
    10. '.parent' → logprob: -20.875123977661133

Token 806: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -2.696889623621246e-06
    2. 'node' → logprob: -13.37500286102295
    3. '_parent' → logprob: -14.62500286102295
    4. '_arr' → logprob: -15.00000286102295
    5. '_user' → logprob: -16.500001907348633
    6. '_' → logprob: -16.625001907348633
    7. 'arr' → logprob: -16.625001907348633
    8. '_NODE' → logprob: -17.500001907348633
    9. 'Node' → logprob: -17.875001907348633
    10. '_n' → logprob: -17.875001907348633

Token 807: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00034702493576332927
    2. '<|end|>' → logprob: -8.250347137451172
    3. '           ' → logprob: -10.500347137451172
    4. ',' → logprob: -11.125347137451172
    5. '
' → logprob: -11.750347137451172
    6. '                   ' → logprob: -11.875347137451172
    7. '       ' → logprob: -11.875347137451172
    8. '                ' → logprob: -12.125347137451172
    9. '              ' → logprob: -12.250347137451172
    10. '                
' → logprob: -12.375347137451172

Token 808: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.2948405128554441e-05
    2. '			' → logprob: -11.75001335144043
    3. '<|end|>' → logprob: -13.50001335144043
    4. '                   ' → logprob: -14.00001335144043
    5. '       ' → logprob: -14.12501335144043
    6. '           ' → logprob: -14.37501335144043
    7. ',' → logprob: -15.00001335144043
    8. '		       ' → logprob: -15.25001335144043
    9. '              ' → logprob: -15.37501335144043
    10. '	' → logprob: -15.62501335144043

Token 809: ' counter' (ID: 9446)
  Prédit: 'search'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'search' → logprob: -0.6945045590400696
    2. 'counter' (adapté à ' counter') → logprob: -0.6945045590400696
    3. '               ' → logprob: -6.819504737854004
    4. ' counter' → logprob: -9.194504737854004
    5. '           ' → logprob: -9.444504737854004
    6. ' search' → logprob: -9.694504737854004
    7. '                   ' → logprob: -11.694504737854004
    8. '   ' → logprob: -11.944504737854004
    9. '       ' → logprob: -12.944504737854004
    10. 'count' → logprob: -14.069504737854004

Token 810: '_arr' (ID: 25121)
  Prédit: '_arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_arr' → logprob: -0.0008106979075819254
    2. '[' → logprob: -7.125810623168945
    3. 'arr' → logprob: -12.375810623168945
    4. 'Arr' → logprob: -13.500810623168945
    5. '[arr' → logprob: -14.375810623168945
    6. '	arr' → logprob: -17.000810623168945
    7. '```' → logprob: -18.500810623168945
    8. 's' → logprob: -18.625810623168945
    9. '   ' → logprob: -18.750810623168945
    10. '_ar' → logprob: -18.875810623168945

Token 811: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.9361264946837764e-07
    2. ' [' → logprob: -16.375
    3. '=edge' → logprob: -17.25
    4. '```' → logprob: -18.0
    5. '[node' → logprob: -19.5
    6. '[counter' → logprob: -19.625
    7. '[
' → logprob: -19.875
    8. '[in' → logprob: -19.875
    9. 'edge' → logprob: -20.25
    10. '[event' → logprob: -20.25

Token 812: 'edge' (ID: 13457)
  Prédit: 'edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -6.575563020305708e-05
    2. ' edge' → logprob: -9.750065803527832
    3. '[' → logprob: -12.250065803527832
    4. '0' → logprob: -13.875065803527832
    5. '(edge' → logprob: -14.625065803527832
    6. '=edge' → logprob: -14.750065803527832
    7. 'error' → logprob: -15.750065803527832
    8. 'egde' → logprob: -16.125064849853516
    9. '   ' → logprob: -16.375064849853516
    10. '.edge' → logprob: -16.875064849853516

Token 813: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -7.20734242349863e-05
    2. 'node' → logprob: -9.625072479248047
    3. 'Node' → logprob: -13.500072479248047
    4. ']' → logprob: -14.000072479248047
    5. '_edge' → logprob: -14.000072479248047
    6. '[node' → logprob: -14.375072479248047
    7. '```' → logprob: -15.000072479248047
    8. '_code' → logprob: -15.375072479248047
    9. 'edge' → logprob: -15.500072479248047
    10. '   ' → logprob: -16.000072479248047

Token 814: ']' (ID: 60)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.47450241446495056
    2. '+=' → logprob: -0.974502444267273
    3. '=' → logprob: -8.099502563476562
    4. ' =' → logprob: -9.099502563476562
    5. ']+=' → logprob: -12.599502563476562
    6. '+' → logprob: -13.099502563476562
    7. ')' → logprob: -13.599502563476562
    8. ' -=' → logprob: -13.974502563476562
    9. '[' → logprob: -13.974502563476562
    10. ']' → logprob: -14.224502563476562

Token 815: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.1025107130408287
    2. ' +=' → logprob: -2.352510690689087
    3. '=' → logprob: -6.102510929107666
    4. ' =' → logprob: -9.727510452270508
    5. '+' → logprob: -12.852510452270508
    6. '   ' → logprob: -14.227510452270508
    7. ']+=' → logprob: -15.102510452270508
    8. '-=' → logprob: -15.227510452270508
    9. ' ' → logprob: -15.727510452270508
    10. '[' → logprob: -15.852510452270508

Token 816: ' counter' (ID: 9446)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07894575595855713
    2. 'counter' → logprob: -2.5789456367492676
    3. ' counter' → logprob: -10.203946113586426
    4. ' ' → logprob: -11.328946113586426
    5. '   ' → logprob: -13.453946113586426
    6. '(counter' → logprob: -13.578946113586426
    7. '	counter' → logprob: -14.203946113586426
    8. '[counter' → logprob: -14.328946113586426
    9. 'cnt' → logprob: -15.016446113586426
    10. 'count' → logprob: -15.016446113586426

Token 817: '_arr' (ID: 25121)
  Prédit: '_arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_arr' → logprob: -0.0002705145161598921
    2. 'arr' → logprob: -9.00027084350586
    3. '[parent' → logprob: -9.00027084350586
    4. '1' → logprob: -11.50027084350586
    5. 'parent' → logprob: -11.87527084350586
    6. 'counter' → logprob: -13.00027084350586
    7. ' ' → logprob: -14.25027084350586
    8. 'Arr' → logprob: -14.37527084350586
    9. '[' → logprob: -14.62527084350586
    10. '_parent' → logprob: -15.00027084350586

Token 818: '[parent' (ID: 186852)
  Prédit: '[parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[parent' → logprob: -1.676292231422849e-05
    2. 'parent' → logprob: -11.000017166137695
    3. '	parent' → logprob: -17.750017166137695
    4. '(parent' → logprob: -18.625017166137695
    5. '[' → logprob: -18.750017166137695
    6. '```' → logprob: -18.875017166137695
    7. ',parent' → logprob: -19.625017166137695
    8. '_parent' → logprob: -19.875017166137695
    9. '1' → logprob: -20.125017166137695
    10. '   ' → logprob: -20.250017166137695

Token 819: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.0013726113829761744
    2. 'node' → logprob: -6.626372814178467
    3. 'Node' → logprob: -10.126372337341309
    4. '_NODE' → logprob: -13.376372337341309
    5. ']' → logprob: -13.751372337341309
    6. '_token' → logprob: -14.001372337341309
    7. '           ' → logprob: -14.751372337341309
    8. '   ' → logprob: -14.751372337341309
    9. '```' → logprob: -15.251372337341309
    10. ' ' → logprob: -15.376372337341309

Token 820: ']
' (ID: 1592)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 821: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -8.0536883615423e-05
    2. 'search' → logprob: -9.500080108642578
    3. ' search' → logprob: -12.750080108642578
    4. '			' → logprob: -14.625080108642578
    5. '       ' → logprob: -14.750080108642578
    6. '                   ' → logprob: -14.875080108642578
    7. '           ' → logprob: -14.875080108642578
    8. '                
' → logprob: -15.250080108642578
    9. '              ' → logprob: -15.500080108642578
    10. '   ' → logprob: -15.625080108642578

Token 822: ' search' (ID: 3684)
  Prédit: 'search'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'search' (adapté à ' search') → logprob: -0.018075138330459595
    2. '               ' → logprob: -4.268074989318848
    3. ' search' → logprob: -5.643074989318848
    4. '           ' → logprob: -8.018074989318848
    5. '   ' → logprob: -10.893074989318848
    6. '       ' → logprob: -11.643074989318848
    7. '	search' → logprob: -12.518074989318848
    8. '_search' → logprob: -14.643074989318848
    9. '                   ' → logprob: -15.268074989318848
    10. ' ' → logprob: -15.643074989318848

Token 823: '_stack' (ID: 35650)
  Prédit: '_stack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_stack' → logprob: -1.0280383548888494e-06
    2. '_' → logprob: -14.750000953674316
    3. 'stack' → logprob: -14.750000953674316
    4. 'Stack' → logprob: -16.625001907348633
    5. '_STACK' → logprob: -16.875001907348633
    6. '_
' → logprob: -18.375001907348633
    7. '_queue' → logprob: -18.625001907348633
    8. '_arr' → logprob: -19.125001907348633
    9. '[' → logprob: -19.375001907348633
    10. ')_' → logprob: -19.375001907348633

Token 824: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00020914296328555793
    2. '.' → logprob: -8.500208854675293
    3. '.extend' → logprob: -12.250208854675293
    4. 'append' → logprob: -14.375208854675293
    5. '.push' → logprob: -15.750208854675293
    6. '.app' → logprob: -16.00020980834961
    7. ' .' → logprob: -18.50020980834961
    8. '.ap' → logprob: -18.62520980834961
    9. '.Append' → logprob: -18.75020980834961
    10. '_append' → logprob: -18.87520980834961

Token 825: '(edge' (ID: 84023)
  Prédit: '(edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(edge' → logprob: 0.0
    2. 'edge' → logprob: -17.75
    3. '(' → logprob: -18.5
    4. '=edge' → logprob: -20.375
    5. '(edges' → logprob: -22.125
    6. '(
' → logprob: -22.375
    7. ' edge' → logprob: -23.125
    8. '(error' → logprob: -24.25
    9. '(ed' → logprob: -24.75
    10. '(e' → logprob: -25.125

Token 826: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -1.2664456789934775e-06
    2. ')' → logprob: -14.625000953674316
    3. 'node' → logprob: -14.750000953674316
    4. '_' → logprob: -16.000001907348633
    5. '```' → logprob: -17.125001907348633
    6. 'Node' → logprob: -17.250001907348633
    7. ')_' → logprob: -17.375001907348633
    8. ' _' → logprob: -17.750001907348633
    9. '_n' → logprob: -17.750001907348633
    10. '[node' → logprob: -17.875001907348633

Token 827: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00011188744247192517
    2. ')
' → logprob: -9.12511157989502
    3. '<|end|>' → logprob: -13.50011157989502
    4. ')return' → logprob: -14.75011157989502
    5. ' )' → logprob: -14.87511157989502
    6. '())' → logprob: -15.75011157989502
    7. '```' → logprob: -16.000112533569336
    8. '
' → logprob: -16.250112533569336
    9. '   ' → logprob: -16.250112533569336
    10. ')

' → logprob: -16.875112533569336

Token 828: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 829: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.0003364158037584275
    2. '__' → logprob: -8.000336647033691
    3. ' ' → logprob: -14.500336647033691
    4. 'name' → logprob: -15.625336647033691
    5. '_' → logprob: -16.500335693359375
    6. '_name' → logprob: -17.125335693359375
    7. ' "__' → logprob: -17.125335693359375
    8. ' _' → logprob: -17.875335693359375
    9. ' ___' → logprob: -17.875335693359375
    10. ' '__' → logprob: -18.750335693359375

Token 830: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.031133035197854042
    2. ' __' → logprob: -3.531132936477661
    3. ' ==' → logprob: -7.15613317489624
    4. '_' → logprob: -7.90613317489624
    5. '_main' → logprob: -9.906132698059082
    6. '_name' → logprob: -10.031132698059082
    7. '[' → logprob: -11.156132698059082
    8. '==' → logprob: -11.281132698059082
    9. '.__' → logprob: -11.281132698059082
    10. '___' → logprob: -11.406132698059082

Token 831: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.005362179130315781
    2. '==' → logprob: -6.005362033843994
    3. ' ==' → logprob: -6.005362033843994
    4. '=="' → logprob: -8.130362510681152
    5. '__.__' → logprob: -9.505362510681152
    6. '=='' → logprob: -10.880362510681152
    7. '_' → logprob: -11.130362510681152
    8. '__.' → logprob: -12.630362510681152
    9. '__":
' → logprob: -12.755362510681152
    10. ' __' → logprob: -13.505362510681152

Token 832: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.6077761054039001
    2. '==' → logprob: -1.482776165008545
    3. ' ==' → logprob: -1.607776165008545
    4. '=="' → logprob: -3.607776165008545
    5. '=='' → logprob: -7.607776165008545
    6. '_' → logprob: -8.232775688171387
    7. '==
' → logprob: -9.857775688171387
    8. ' =="' → logprob: -10.482775688171387
    9. '__":
' → logprob: -10.607775688171387
    10. '=' → logprob: -10.982775688171387

Token 833: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.1269380897283554
    2. ''' → logprob: -2.1269381046295166
    3. '__' → logprob: -12.001937866210938
    4. ' "__' → logprob: -12.626937866210938
    5. ' '__' → logprob: -14.626937866210938
    6. ''"' → logprob: -16.501937866210938
    7. '   ' → logprob: -17.126937866210938
    8. '"'' → logprob: -17.626937866210938
    9. '"user' → logprob: -17.876937866210938
    10. '	' → logprob: -18.126937866210938

Token 834: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -1.7432603272027336e-06
    2. 'name' → logprob: -13.375001907348633
    3. '_main' → logprob: -16.375001907348633
    4. '__' → logprob: -17.500001907348633
    5. ' main' → logprob: -17.625001907348633
    6. '"' → logprob: -18.250001907348633
    7. 'built' → logprob: -19.125001907348633
    8. '(main' → logprob: -19.375001907348633
    9. '	main' → logprob: -20.250001907348633
    10. 'ma' → logprob: -20.500001907348633

Token 835: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.06229244917631149
    2. '__' → logprob: -2.8122923374176025
    3. '__:' → logprob: -8.562292098999023
    4. '__':
' → logprob: -8.937292098999023
    5. '__.' → logprob: -13.937292098999023
    6. '__["' → logprob: -15.062292098999023
    7. '_' → logprob: -15.312292098999023
    8. '":' → logprob: -15.687292098999023
    9. '__.__' → logprob: -16.062292098999023
    10. '__
' → logprob: -16.312292098999023

Token 836: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07680052518844604
    2. 'main' → logprob: -2.701800584793091
    3. '	main' → logprob: -5.576800346374512
    4. ' main' → logprob: -5.951800346374512
    5. '    
' → logprob: -8.076800346374512
    6. '(main' → logprob: -9.576800346374512
    7. '_main' → logprob: -10.201800346374512
    8. '<|end|>' → logprob: -11.826800346374512
    9. '```' → logprob: -11.826800346374512
    10. ' ' → logprob: -12.326800346374512

Token 837: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -5.512236498361744e-07
    2. '   ' → logprob: -15.000000953674316
    3. ' main' → logprob: -16.25
    4. '	main' → logprob: -18.875
    5. '_main' → logprob: -22.375
    6. '(main' → logprob: -22.625
    7. 'sys' → logprob: -23.375
    8. '.main' → logprob: -24.875
    9. 'import' → logprob: -25.0
    10. '  ' → logprob: -25.25

Token 838: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 836
Tokens correctement prédits (1ère position, stricte): 367
Tokens correctement prédits (1ère position, avec adaptation): 395
Tokens correctement prédits (top 10): 732
Précision stricte (1ère position): 43.90%
Précision adaptée (1ère position): 47.25%
Précision (top 10): 87.56%
================================================================================
