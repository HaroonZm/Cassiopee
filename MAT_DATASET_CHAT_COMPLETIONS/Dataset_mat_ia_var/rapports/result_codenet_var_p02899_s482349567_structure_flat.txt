================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:43:44
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n = int(input())
lst = list(map(int, input().split()))
lst2 = [0] * n
i = 0
while i < n:
    x = lst[i]
    lst2[x - 1] = i + 1
    i += 1
i = 0
while i < n:
    if i != n - 1:
        print(lst2[i], end=' ')
    else:
        print(lst2[i])
    i += 1
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00010807292710524052
    2. '(n' → logprob: -10.250107765197754
    3. ''' → logprob: -10.625107765197754
    4. '('' → logprob: -11.375107765197754
    5. '```' → logprob: -11.625107765197754
    6. '(
' → logprob: -12.000107765197754
    7. '("("' → logprob: -12.375107765197754
    8. '()' → logprob: -12.375107765197754
    9. '`' → logprob: -12.500107765197754
    10. ')' → logprob: -13.125107765197754

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.08201935887336731
    2. ')' → logprob: -2.582019329071045
    3. '()' → logprob: -6.332019329071045
    4. '(
' → logprob: -7.707019329071045
    5. '())' → logprob: -8.457019805908203
    6. '('' → logprob: -9.332019805908203
    7. ''' → logprob: -9.457019805908203
    8. '`' → logprob: -9.707019805908203
    9. '')' → logprob: -9.707019805908203
    10. '```' → logprob: -10.082019805908203

Token 5: 'lst' (ID: 65430)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.0521364212036133
    2. 'for' → logprob: -1.3021364212036133
    3. 'if' → logprob: -1.4271364212036133
    4. 's' → logprob: -3.1771364212036133
    5. 'f' → logprob: -4.177136421203613
    6. 'x' → logprob: -4.177136421203613
    7. 'a' → logprob: -4.552136421203613
    8. ')' → logprob: -4.677136421203613
    9. ' ' → logprob: -4.677136421203613
    10. '*' → logprob: -4.927136421203613

Token 6: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0029799600597471
    2. '.' → logprob: -6.002979755401611
    3. ')' → logprob: -8.50298023223877
    4. '\[' → logprob: -9.12798023223877
    5. '(' → logprob: -9.62798023223877
    6. 's' → logprob: -10.75298023223877
    7. '[]' → logprob: -10.87798023223877
    8. '[n' → logprob: -11.12798023223877
    9. '[
' → logprob: -11.12798023223877
    10. ''' → logprob: -11.25298023223877

Token 7: ' list' (ID: 1562)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.05306779593229294
    2. '[]' → logprob: -3.178067684173584
    3. '[' → logprob: -5.178067684173584
    4. ' [' → logprob: -5.803067684173584
    5. '[input' → logprob: -7.428067684173584
    6. ' list' → logprob: -8.428068161010742
    7. ' ' → logprob: -8.553068161010742
    8. 'list' → logprob: -8.678068161010742
    9. 'input' → logprob: -9.553068161010742
    10. ' input' → logprob: -9.803068161010742

Token 8: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0004885728703811765
    2. '(range' → logprob: -8.25048828125
    3. '(input' → logprob: -9.62548828125
    4. '(n' → logprob: -10.00048828125
    5. '()' → logprob: -10.75048828125
    6. '(lst' → logprob: -10.75048828125
    7. '(
' → logprob: -11.62548828125
    8. '((' → logprob: -11.62548828125
    9. '(ls' → logprob: -11.87548828125
    10. '```' → logprob: -12.12548828125

Token 9: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.04074067994952202
    2. '(' → logprob: -3.290740728378296
    3. 'int' → logprob: -6.665740489959717
    4. '(input' → logprob: -7.165740489959717
    5. '(str' → logprob: -8.165740966796875
    6. '<int' → logprob: -9.040740966796875
    7. '=int' → logprob: -9.790740966796875
    8. ')' → logprob: -9.915740966796875
    9. '```' → logprob: -10.665740966796875
    10. ' int' → logprob: -10.790740966796875

Token 10: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0063823373056948185
    2. '(' → logprob: -5.631382465362549
    3. ',input' → logprob: -6.256382465362549
    4. '))' → logprob: -8.00638198852539
    5. ')' → logprob: -8.50638198852539
    6. 'input' → logprob: -9.13138198852539
    7. '=input' → logprob: -9.63138198852539
    8. ',' → logprob: -9.75638198852539
    9. '```' → logprob: -11.00638198852539
    10. ' (' → logprob: -11.38138198852539

Token 11: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.03806180879473686
    2. ' input' → logprob: -3.2880618572235107
    3. '(input' → logprob: -10.91306209564209
    4. ',input' → logprob: -13.78806209564209
    5. ')' → logprob: -15.03806209564209
    6. '	input' → logprob: -15.28806209564209
    7. '=input' → logprob: -15.28806209564209
    8. ' ' → logprob: -16.163061141967773
    9. '<input' → logprob: -16.413061141967773
    10. '))' → logprob: -17.288061141967773

Token 12: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.7665808200836182
    2. '()))' → logprob: -1.2665808200836182
    3. '()' → logprob: -1.5165808200836182
    4. '())' → logprob: -3.516580820083618
    5. '()));' → logprob: -6.141580581665039
    6. '(' → logprob: -7.391580581665039
    7. '))' → logprob: -7.891580581665039
    8. '()>' → logprob: -8.266580581665039
    9. '())))' → logprob: -8.266580581665039
    10. ')' → logprob: -8.516580581665039

Token 13: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.000356199947418645
    2. 'strip' → logprob: -8.000356674194336
    3. 'rstrip' → logprob: -10.875356674194336
    4. ' split' → logprob: -13.625356674194336
    5. '(split' → logprob: -14.500356674194336
    6. 'spl' → logprob: -16.125356674194336
    7. ')' → logprob: -17.750356674194336
    8. 's' → logprob: -18.000356674194336
    9. 'sp' → logprob: -18.750356674194336
    10. '```' → logprob: -19.250356674194336

Token 14: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.23210258781909943
    2. '))' → logprob: -1.732102632522583
    3. '())' → logprob: -4.107102394104004
    4. '()' → logprob: -5.107102394104004
    5. ')' → logprob: -5.232102394104004
    6. '(' → logprob: -6.482102394104004
    7. ')))' → logprob: -8.107102394104004
    8. '())))' → logprob: -8.482102394104004
    9. ''))' → logprob: -8.857102394104004
    10. '('' → logprob: -9.357102394104004

Token 15: 'lst' (ID: 65430)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.1983499974012375
    2. 'lst' → logprob: -3.323349952697754
    3. 'sum' → logprob: -3.573349952697754
    4. 'c' → logprob: -4.073349952697754
    5. 'count' → logprob: -4.448349952697754
    6. 'result' → logprob: -4.448349952697754
    7. 'm' → logprob: -4.448349952697754
    8. 'total' → logprob: -4.573349952697754
    9. 'cnt' → logprob: -4.698349952697754
    10. 'for' → logprob: -4.698349952697754

Token 16: '2' (ID: 17)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.013493004254996777
    2. '.' → logprob: -5.388493061065674
    3. '```' → logprob: -5.763493061065674
    4. '<|end|>' → logprob: -6.013493061065674
    5. '\[' → logprob: -6.763493061065674
    6. '[n' → logprob: -7.888493061065674
    7. '[:]' → logprob: -8.263492584228516
    8. '[
' → logprob: -8.388492584228516
    9. '[len' → logprob: -8.388492584228516
    10. '\' → logprob: -8.888492584228516

Token 17: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.08242540806531906
    2. '[' → logprob: -2.957425355911255
    3. '.append' → logprob: -4.457425594329834
    4. '[:]' → logprob: -4.957425594329834
    5. '=' → logprob: -6.082425594329834
    6. ' =' → logprob: -6.082425594329834
    7. '.extend' → logprob: -6.707425594329834
    8. '.setdefault' → logprob: -7.582425594329834
    9. '.count' → logprob: -7.832425594329834
    10. ' .' → logprob: -7.832425594329834

Token 18: ' [' (ID: 723)
  Prédit: 'lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lst' → logprob: -1.0378069877624512
    2. '[]' → logprob: -1.4128069877624512
    3. ' []' → logprob: -1.9128069877624512
    4. ' lst' → logprob: -2.037806987762451
    5. 'list' → logprob: -3.287806987762451
    6. '[' → logprob: -3.412806987762451
    7. ' [' → logprob: -3.787806987762451
    8. 'sorted' → logprob: -4.162806987762451
    9. ' sorted' → logprob: -5.037806987762451
    10. ' list' → logprob: -5.162806987762451

Token 19: '0' (ID: 15)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.13370145857334137
    2. '0' → logprob: -2.3837015628814697
    3. ' x' → logprob: -4.008701324462891
    4. 'lst' → logprob: -4.758701324462891
    5. ' lst' → logprob: -5.508701324462891
    6. 'i' → logprob: -6.883701324462891
    7. ' ' → logprob: -8.00870132446289
    8. 'num' → logprob: -8.25870132446289
    9. 'abs' → logprob: -8.75870132446289
    10. 'n' → logprob: -9.00870132446289

Token 20: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01050108764320612
    2. ',' → logprob: -5.885500907897949
    3. ' ]' → logprob: -5.885500907897949
    4. ' for' → logprob: -6.385500907897949
    5. ')]' → logprob: -6.635500907897949
    6. ')' → logprob: -6.635500907897949
    7. ']*' → logprob: -7.635500907897949
    8. 'for' → logprob: -9.76050090789795
    9. ']*(' → logprob: -11.63550090789795
    10. ' )' → logprob: -12.01050090789795

Token 21: ' *' (ID: 425)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.43602824211120605
    2. ' for' → logprob: -1.686028242111206
    3. '[' → logprob: -2.186028242111206
    4. 'for' → logprob: -3.811028242111206
    5. '+' → logprob: -5.061028480529785
    6. '_' → logprob: -5.311028480529785
    7. '*' → logprob: -5.561028480529785
    8. ' ]' → logprob: -5.811028480529785
    9. ' )' → logprob: -5.936028480529785
    10. ' [' → logprob: -5.936028480529785

Token 22: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.030184082686901093
    2. '(n' → logprob: -3.780184030532837
    3. ' n' → logprob: -5.280184268951416
    4. '(' → logprob: -6.530184268951416
    5. 'len' → logprob: -8.780183792114258
    6. ' (' → logprob: -9.405183792114258
    7. '(len' → logprob: -10.030183792114258
    8. '100' → logprob: -10.155183792114258
    9. '10' → logprob: -11.530183792114258
    10. ' ' → logprob: -11.655183792114258

Token 23: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.28105443716049194
    2. ' for' → logprob: -1.6560544967651367
    3. '
' → logprob: -3.0310544967651367
    4. ' 
' → logprob: -6.031054496765137
    5. '\n' → logprob: -6.656054496765137
    6. '' → logprob: -7.031054496765137
    7. '```' → logprob: -8.031054496765137
    8. ' ' → logprob: -8.406054496765137
    9. '<|end|>' → logprob: -8.656054496765137
    10. '
' → logprob: -8.656054496765137

Token 24: 'i' (ID: 72)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.013339275494217873
    2. ' for' → logprob: -4.763339042663574
    3. 'i' → logprob: -6.013339042663574
    4. '
' → logprob: -6.888339042663574
    5. 'f' → logprob: -7.638339042663574
    6. '\n' → logprob: -9.013339042663574
    7. '' → logprob: -9.138339042663574
    8. '```' → logprob: -9.388339042663574
    9. '[' → logprob: -9.638339042663574
    10. ' 
' → logprob: -10.013339042663574

Token 25: ' =' (ID: 314)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.1437153816223145
    2. 'n' → logprob: -1.2687153816223145
    3. '=' → logprob: -1.7687153816223145
    4. ' =' → logprob: -2.6437153816223145
    5. ' ' → logprob: -2.8937153816223145
    6. 'nd' → logprob: -3.2687153816223145
    7. 'f' → logprob: -3.6437153816223145
    8. ' +=' → logprob: -4.2687153816223145
    9. 'nt' → logprob: -5.2687153816223145
    10. '<|end|>' → logprob: -5.6437153816223145

Token 26: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0023186765611171722
    2. ' ' → logprob: -6.252318859100342
    3. '1' → logprob: -7.877318859100342
    4. 'n' → logprob: -11.877318382263184
    5. ' n' → logprob: -12.877318382263184
    6. '2' → logprob: -13.877318382263184
    7. 'i' → logprob: -16.3773193359375
    8. '+' → logprob: -16.9398193359375
    9. '3' → logprob: -17.3148193359375
    10. '(' → logprob: -17.5023193359375

Token 27: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001556163071654737
    2. '1' → logprob: -6.626556396484375
    3. 'n' → logprob: -8.751556396484375
    4. ' ' → logprob: -9.626556396484375
    5. '2' → logprob: -13.001556396484375
    6. ' n' → logprob: -13.501556396484375
    7. '(n' → logprob: -14.126556396484375
    8. '-' → logprob: -14.501556396484375
    9. '(' → logprob: -14.751556396484375
    10. 'i' → logprob: -15.126556396484375

Token 28: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 29: 'while' (ID: 7032)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.1433790922164917
    2. 'w' → logprob: -1.3933790922164917
    3. '<|end|>' → logprob: -1.8933790922164917
    4. 'while' → logprob: -2.1433792114257812
    5. ' while' → logprob: -3.6433792114257812
    6. '\' → logprob: -3.7683792114257812
    7. ',' → logprob: -3.8933792114257812
    8. ' 
' → logprob: -4.143379211425781
    9. '```' → logprob: -4.393379211425781
    10. '
' → logprob: -4.643379211425781

Token 30: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.005241225939244032
    2. 'i' → logprob: -5.255241394042969
    3. ' n' → logprob: -12.630241394042969
    4. ' ' → logprob: -13.505241394042969
    5. '	i' → logprob: -13.880241394042969
    6. '(i' → logprob: -14.380241394042969
    7. 'n' → logprob: -14.755241394042969
    8. ' ' → logprob: -15.005241394042969
    9. ' True' → logprob: -15.755241394042969
    10. 'True' → logprob: -16.25524139404297

Token 31: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.08912048488855362
    2. '<' → logprob: -2.464120388031006
    3. ' ' → logprob: -9.089120864868164
    4. '<n' → logprob: -9.839120864868164
    5. '<len' → logprob: -11.964120864868164
    6. ' <=' → logprob: -12.714120864868164
    7. '[' → logprob: -13.714120864868164
    8. '<size' → logprob: -13.839120864868164
    9. ' less' → logprob: -14.339120864868164
    10. '<=' → logprob: -14.589120864868164

Token 32: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.03804229199886322
    2. 'n' → logprob: -3.2880423069000244
    3. ' ' → logprob: -14.288042068481445
    4. '	n' → logprob: -16.663042068481445
    5. ' ' → logprob: -16.788042068481445
    6. ' len' → logprob: -16.788042068481445
    7. 'len' → logprob: -17.788042068481445
    8. '(n' → logprob: -18.788042068481445
    9. ')n' → logprob: -19.538042068481445
    10. '_n' → logprob: -19.663042068481445

Token 33: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0006459566066041589
    2. ':
' → logprob: -7.375646114349365
    3. ' :' → logprob: -11.500645637512207
    4. ':**' → logprob: -13.000645637512207
    5. '+:' → logprob: -13.375645637512207
    6. '[i' → logprob: -14.125645637512207
    7. '   ' → logprob: -14.250645637512207
    8. '):' → logprob: -14.625645637512207
    9. ':

' → logprob: -14.750645637512207
    10. '**' → logprob: -14.750645637512207

Token 34: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.49648401141166687
    2. ' lst' → logprob: -1.2464840412139893
    3. 'lst' → logprob: -2.9964840412139893
    4. '    ' → logprob: -3.7464840412139893
    5. ' ' → logprob: -3.9964840412139893
    6. '    
' → logprob: -5.62148380279541
    7. ' 
' → logprob: -5.62148380279541
    8. ' if' → logprob: -6.37148380279541
    9. '     
' → logprob: -6.62148380279541
    10. '_lst' → logprob: -8.49648380279541

Token 35: ' x' (ID: 1215)
  Prédit: 'lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lst' → logprob: -0.956767201423645
    2. ' lst' → logprob: -1.081767201423645
    3. ' if' → logprob: -1.706767201423645
    4. 'if' → logprob: -3.0817670822143555
    5. '   ' → logprob: -3.3317670822143555
    6. ' ' → logprob: -5.2067670822143555
    7. '    ' → logprob: -6.0817670822143555
    8. 'j' → logprob: -6.3317670822143555
    9. ' j' → logprob: -6.9567670822143555
    10. '_lst' → logprob: -7.7067670822143555

Token 36: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08145646750926971
    2. '=' → logprob: -2.581456422805786
    3. ' ' → logprob: -6.331456661224365
    4. ',' → logprob: -8.331456184387207
    5. '   ' → logprob: -8.956456184387207
    6. 'lst' → logprob: -9.331456184387207
    7. ']' → logprob: -9.456456184387207
    8. ')' → logprob: -10.331456184387207
    9. '=int' → logprob: -10.581456184387207
    10. '-' → logprob: -10.581456184387207

Token 37: ' lst' (ID: 33384)
  Prédit: ' lst'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lst' → logprob: -0.4291841387748718
    2. 'lst' → logprob: -1.0541841983795166
    3. 'int' → logprob: -9.179183959960938
    4. ' ' → logprob: -9.679183959960938
    5. ' int' → logprob: -9.804183959960938
    6. 'i' → logprob: -9.929183959960938
    7. ' i' → logprob: -10.054183959960938
    8. '0' → logprob: -10.554183959960938
    9. 'len' → logprob: -10.679183959960938
    10. '(lst' → logprob: -11.054183959960938

Token 38: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00010902655776590109
    2. '[' → logprob: -9.37510871887207
    3. '```' → logprob: -12.12510871887207
    4. '[x' → logprob: -12.37510871887207
    5. '2' → logprob: -12.50010871887207
    6. ' [' → logprob: -12.75010871887207
    7. 'i' → logprob: -13.00010871887207
    8. '[I' → logprob: -14.25010871887207
    9. '\[' → logprob: -14.50010871887207
    10. '[count' → logprob: -14.87510871887207

Token 39: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.007010056171566248
    2. '])' → logprob: -6.007009983062744
    3. ']+' → logprob: -6.757009983062744
    4. ')' → logprob: -7.007009983062744
    5. '+' → logprob: -7.257009983062744
    6. ']
' → logprob: -7.382009983062744
    7. '[i' → logprob: -7.632009983062744
    8. '[' → logprob: -8.382010459899902
    9. ' ]' → logprob: -8.757010459899902
    10. '-' → logprob: -9.257010459899902

Token 40: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5523414611816406
    2. '    
' → logprob: -1.6773414611816406
    3. ' if' → logprob: -2.8023414611816406
    4. ' 
' → logprob: -3.4273414611816406
    5. 'if' → logprob: -3.6773414611816406
    6. '
' → logprob: -3.6773414611816406
    7. ' ' → logprob: -3.9273414611816406
    8. '   
' → logprob: -4.052341461181641
    9. '+' → logprob: -4.552341461181641
    10. '  
' → logprob: -4.552341461181641

Token 41: ' lst' (ID: 33384)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.4846456050872803
    2. ' if' → logprob: -1.4846456050872803
    3. '   ' → logprob: -1.7346456050872803
    4. ' ' → logprob: -1.8596456050872803
    5. 'lst' (adapté à ' lst') → logprob: -3.1096456050872803
    6. '_' → logprob: -3.4846456050872803
    7. ' for' → logprob: -3.7346456050872803
    8. '_lst' → logprob: -4.234645843505859
    9. ')' → logprob: -4.359645843505859
    10. 'for' → logprob: -4.609645843505859

Token 42: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.8325677703833207e-05
    2. '```' → logprob: -11.000028610229492
    3. '[' → logprob: -11.625028610229492
    4. '[i' → logprob: -13.875028610229492
    5. ' ' → logprob: -14.812528610229492
    6. '   ' → logprob: -15.562528610229492
    7. '۲' → logprob: -16.562528610229492
    8. '२' → logprob: -16.625028610229492
    9. ']' → logprob: -16.687528610229492
    10. '²' → logprob: -16.750028610229492

Token 43: '[x' (ID: 17295)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6360907554626465
    2. '[x' → logprob: -0.7610907554626465
    3. '[i' → logprob: -5.8860907554626465
    4. ' [' → logprob: -7.7610907554626465
    5. '[l' → logprob: -8.636091232299805
    6. '[index' → logprob: -11.511091232299805
    7. '[
' → logprob: -11.761091232299805
    8. 'x' → logprob: -12.011091232299805
    9. '[(' → logprob: -12.261091232299805
    10. ' ' → logprob: -12.261091232299805

Token 44: ' -' (ID: 533)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0017061287071555853
    2. ']+=' → logprob: -7.126706123352051
    3. ' ]' → logprob: -8.00170612335205
    4. '-' → logprob: -8.00170612335205
    5. '+' → logprob: -9.12670612335205
    6. ' -' → logprob: -10.12670612335205
    7. '[' → logprob: -10.50170612335205
    8. ']=' → logprob: -10.75170612335205
    9. ']+' → logprob: -11.62670612335205
    10. '[i' → logprob: -12.00170612335205

Token 45: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00018983196059707552
    2. ' ' → logprob: -8.625189781188965
    3. '<|end|>' → logprob: -12.500189781188965
    4. '>' → logprob: -13.000189781188965
    5. '   ' → logprob: -14.437689781188965
    6. '<|end|>' → logprob: -14.500189781188965
    7. '=' → logprob: -14.625189781188965
    8. '`' → logprob: -14.625189781188965
    9. '...' → logprob: -14.750189781188965
    10. '```' → logprob: -14.812689781188965

Token 46: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4021237802808173e-05
    2. ' ' → logprob: -11.375014305114746
    3. '<|end|>' → logprob: -13.625014305114746
    4. '>' → logprob: -15.750014305114746
    5. '=' → logprob: -16.00001335144043
    6. '0' → logprob: -16.18751335144043
    7. '```' → logprob: -16.18751335144043
    8. ')' → logprob: -16.25001335144043
    9. '2' → logprob: -16.37501335144043
    10. '`' → logprob: -16.37501335144043

Token 47: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0008482214179821312
    2. ' ]' → logprob: -7.625848293304443
    3. ']+=' → logprob: -8.500847816467285
    4. ']=' → logprob: -9.000847816467285
    5. '=' → logprob: -10.875847816467285
    6. ')' → logprob: -11.750847816467285
    7. ' =' → logprob: -12.625847816467285
    8. ' +=' → logprob: -14.000847816467285
    9. '   ' → logprob: -14.125847816467285
    10. '[' → logprob: -14.875847816467285

Token 48: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4748985469341278
    2. '=' → logprob: -0.9748985767364502
    3. ' +=' → logprob: -7.224898338317871
    4. '+=' → logprob: -9.349898338317871
    5. ' ' → logprob: -12.849898338317871
    6. ' |=' → logprob: -13.849898338317871
    7. ')' → logprob: -15.099898338317871
    8. ' ^=' → logprob: -15.224898338317871
    9. '=int' → logprob: -15.474898338317871
    10. ']+=' → logprob: -16.099899291992188

Token 49: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0068527162075042725
    2. 'x' → logprob: -5.506852626800537
    3. 'lst' → logprob: -6.006852626800537
    4. ' i' → logprob: -8.631853103637695
    5. 'str' → logprob: -9.381853103637695
    6. '1' → logprob: -11.256853103637695
    7. '(i' → logprob: -11.756853103637695
    8. '   ' → logprob: -12.006853103637695
    9. ' lst' → logprob: -13.131853103637695
    10. '0' → logprob: -13.256853103637695

Token 50: ' +' (ID: 659)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.8438743948936462
    2. '
' → logprob: -1.093874454498291
    3. 'i' → logprob: -2.218874454498291
    4. '   ' → logprob: -2.718874454498291
    5. ' i' → logprob: -3.593874454498291
    6. '    
' → logprob: -3.843874454498291
    7. '  
' → logprob: -5.843874454498291
    8. '   
' → logprob: -6.218874454498291
    9. ' 
' → logprob: -6.343874454498291
    10. '	i' → logprob: -6.343874454498291

Token 51: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.518582762917504e-05
    2. ' ' → logprob: -9.37508487701416
    3. '2' → logprob: -16.375085830688477
    4. '<|end|>' → logprob: -16.875085830688477
    5. '```' → logprob: -18.500085830688477
    6. '１' → logprob: -18.625085830688477
    7. '  ' → logprob: -18.625085830688477
    8. '`' → logprob: -18.812585830688477
    9. '...' → logprob: -19.312585830688477
    10. '<|end|>' → logprob: -19.312585830688477

Token 52: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.392202976712724e-06
    2. ' ' → logprob: -12.000006675720215
    3. '2' → logprob: -15.625006675720215
    4. '<|end|>' → logprob: -17.9375057220459
    5. '１' → logprob: -19.0625057220459
    6. '۱' → logprob: -19.1875057220459
    7. '১' → logprob: -19.1875057220459
    8. '१' → logprob: -19.4375057220459
    9. '```' → logprob: -19.8750057220459
    10. '  ' → logprob: -19.8750057220459

Token 53: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5874329805374146
    2. '
' → logprob: -1.4624329805374146
    3. '\n' → logprob: -1.5874329805374146
    4. '    
' → logprob: -5.462432861328125
    5. 'i' → logprob: -5.962432861328125
    6. ' i' → logprob: -7.462432861328125
    7. '
' → logprob: -8.337432861328125
    8. '[i' → logprob: -9.087432861328125
    9. '  
' → logprob: -9.337432861328125
    10. '\' → logprob: -9.462432861328125

Token 54: '   ' (ID: 271)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.33272355794906616
    2. '   ' → logprob: -1.707723617553711
    3. '
' → logprob: -2.582723617553711
    4. ' i' → logprob: -3.957723617553711
    5. '\n' → logprob: -5.207723617553711
    6. '	i' → logprob: -7.582723617553711
    7. '```' → logprob: -7.707723617553711
    8. '    
' → logprob: -7.957723617553711
    9. '[i' → logprob: -8.707723617553711
    10. '  
' → logprob: -10.582723617553711

Token 55: ' i' (ID: 575)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21334171295166016
    2. 'i' (adapté à ' i') → logprob: -1.7133417129516602
    3. ' i' → logprob: -4.46334171295166
    4. '	i' → logprob: -8.33834171295166
    5. '
' → logprob: -10.08834171295166
    6. '```' → logprob: -10.46334171295166
    7. '[i' → logprob: -11.58834171295166
    8. ',i' → logprob: -12.08834171295166
    9. '_i' → logprob: -12.96334171295166
    10. '\n' → logprob: -13.21334171295166

Token 56: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.7057430744171143
    2. '+' → logprob: -1.2057430744171143
    3. '+=' → logprob: -1.5807430744171143
    4. ' +' → logprob: -7.205742835998535
    5. '=' → logprob: -8.580742835998535
    6. ' ' → logprob: -11.205742835998535
    7. ' =' → logprob: -11.580742835998535
    8. '<|end|>' → logprob: -12.330742835998535
    9. '+='' → logprob: -12.830742835998535
    10. ')' → logprob: -13.330742835998535

Token 57: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00017958412354346365
    2. ' ' → logprob: -8.625179290771484
    3. '```' → logprob: -18.125179290771484
    4. '１' → logprob: -20.375179290771484
    5. '   ' → logprob: -20.625179290771484
    6. '0' → logprob: -20.875179290771484
    7. '۱' → logprob: -20.875179290771484
    8. ' ' → logprob: -21.125179290771484
    9. '<|end|>' → logprob: -22.562679290771484
    10. '+' → logprob: -22.625179290771484

Token 58: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.375000953674316
    3. '```' → logprob: -18.375
    4. '   ' → logprob: -21.125
    5. '۱' → logprob: -21.125
    6. '１' → logprob: -21.375
    7. '<|end|>' → logprob: -21.5
    8. '2' → logprob: -21.8125
    9. '0' → logprob: -21.9375
    10. '१' → logprob: -22.0

Token 59: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.009309163317084312
    2. 'for' → logprob: -5.0093092918396
    3. '
' → logprob: -6.0093092918396
    4. '```' → logprob: -9.384308815002441
    5. ' for' → logprob: -11.134308815002441
    6. ' print' → logprob: -11.509308815002441
    7. '    
' → logprob: -12.259308815002441
    8. '  
' → logprob: -12.759308815002441
    9. '\n' → logprob: -12.759308815002441
    10. ' 
' → logprob: -13.009308815002441

Token 60: 'i' (ID: 72)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.11912645399570465
    2. 'for' → logprob: -2.244126558303833
    3. '
' → logprob: -5.119126319885254
    4. '```' → logprob: -8.494126319885254
    5. ' for' → logprob: -9.994126319885254
    6. '  
' → logprob: -11.369126319885254
    7. '    
' → logprob: -11.744126319885254
    8. ' print' → logprob: -11.869126319885254
    9. '``' → logprob: -12.119126319885254
    10. '\n' → logprob: -12.119126319885254

Token 61: ' =' (ID: 314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 62: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04930398240685463
    2. ' ' → logprob: -3.0493040084838867
    3. '1' → logprob: -7.299304008483887
    4. 'n' → logprob: -10.549304008483887
    5. ' n' → logprob: -11.674304008483887
    6. '2' → logprob: -14.611804008483887
    7. 'i' → logprob: -14.611804008483887
    8. ' ' → logprob: -14.799304008483887
    9. '<|end|>' → logprob: -14.924304008483887
    10. 'len' → logprob: -15.049304008483887

Token 63: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0010501964716240764
    2. '1' → logprob: -7.376049995422363
    3. ' ' → logprob: -7.876049995422363
    4. 'n' → logprob: -10.251049995422363
    5. 'lst' → logprob: -13.251049995422363
    6. 'i' → logprob: -13.438549995422363
    7. '2' → logprob: -13.813549995422363
    8. '```' → logprob: -14.626049995422363
    9. ' n' → logprob: -14.751049995422363
    10. '   ' → logprob: -14.938549995422363

Token 64: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6446211338043213
    2. 'while' → logprob: -0.7696211338043213
    3. '<|end|>' → logprob: -4.769620895385742
    4. '\n' → logprob: -6.769620895385742
    5. ' while' → logprob: -7.144620895385742
    6. 'n' → logprob: -7.769620895385742
    7. '```' → logprob: -8.144620895385742
    8. 'print' → logprob: -8.144620895385742
    9. '' → logprob: -8.644620895385742
    10. '
' → logprob: -9.394620895385742

Token 65: 'while' (ID: 7032)
  Prédit: 'while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.0004366294015198946
    2. 'print' → logprob: -8.625436782836914
    3. '<|end|>' → logprob: -9.250436782836914
    4. ' while' → logprob: -9.875436782836914
    5. '\n' → logprob: -10.375436782836914
    6. '
' → logprob: -10.375436782836914
    7. '```' → logprob: -11.125436782836914
    8. 'w' → logprob: -11.250436782836914
    9. 'n' → logprob: -11.625436782836914
    10. '\' → logprob: -12.375436782836914

Token 66: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.2813869118690491
    2. 'i' → logprob: -1.4063868522644043
    3. ' n' → logprob: -9.031387329101562
    4. 'n' → logprob: -9.281387329101562
    5. ' ' → logprob: -11.156387329101562
    6. '	i' → logprob: -12.156387329101562
    7. ' ' → logprob: -13.031387329101562
    8. '(i' → logprob: -14.656387329101562
    9. '  ' → logprob: -15.156387329101562
    10. '```' → logprob: -15.281387329101562

Token 67: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.07947228848934174
    2. '<' → logprob: -2.579472303390503
    3. '<n' → logprob: -7.454472064971924
    4. ' n' → logprob: -13.454472541809082
    5. ' ' → logprob: -13.829472541809082
    6. 'n' → logprob: -14.579472541809082
    7. '<len' → logprob: -15.329472541809082
    8. ' <
' → logprob: -15.454472541809082
    9. '<size' → logprob: -16.579471588134766
    10. '<num' → logprob: -16.954471588134766

Token 68: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.03805205225944519
    2. ' n' → logprob: -3.2880520820617676
    3. ' ' → logprob: -11.66305160522461
    4. '   ' → logprob: -14.66305160522461
    5. '	n' → logprob: -14.78805160522461
    6. 'len' → logprob: -15.78805160522461
    7. '  ' → logprob: -15.78805160522461
    8. ' ' → logprob: -15.97555160522461
    9. '2' → logprob: -16.03805160522461
    10. '(n' → logprob: -16.60055160522461

Token 69: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14274874329566956
    2. ':
' → logprob: -2.0177488327026367
    3. '   ' → logprob: -10.017748832702637
    4. ':

' → logprob: -11.392748832702637
    5. ':
' → logprob: -12.642748832702637
    6. ' :
' → logprob: -13.017748832702637
    7. '```' → logprob: -13.142748832702637
    8. 'print' → logprob: -13.392748832702637
    9. '):
' → logprob: -13.392748832702637
    10. ' :' → logprob: -13.767748832702637

Token 70: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02303255908191204
    2. 'print' → logprob: -4.0230326652526855
    3. ' print' → logprob: -5.5230326652526855
    4. '    
' → logprob: -8.273032188415527
    5. '
' → logprob: -8.523032188415527
    6. '```' → logprob: -9.148032188415527
    7. ' 
' → logprob: -9.648032188415527
    8. '\n' → logprob: -10.523032188415527
    9. '	print' → logprob: -10.523032188415527
    10. '\' → logprob: -10.648032188415527

Token 71: ' if' (ID: 538)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.47442060708999634
    2. ' print' → logprob: -0.9744206070899963
    3. '   ' → logprob: -8.724420547485352
    4. ' ' → logprob: -9.474420547485352
    5. ' 
' → logprob: -10.849420547485352
    6. 'pr' → logprob: -11.474420547485352
    7. '	print' → logprob: -11.599420547485352
    8. '```' → logprob: -11.599420547485352
    9. 'lst' → logprob: -11.599420547485352
    10. ' lst' → logprob: -11.849420547485352

Token 72: ' i' (ID: 575)
  Prédit: ' lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lst' → logprob: -0.2267383188009262
    2. 'lst' → logprob: -1.6017383337020874
    3. ' i' → logprob: -6.976738452911377
    4. 'i' → logprob: -8.351737976074219
    5. '   ' → logprob: -9.851737976074219
    6. '(lst' → logprob: -10.101737976074219
    7. ' ' → logprob: -10.601737976074219
    8. ' ls' → logprob: -11.851737976074219
    9. ' not' → logprob: -11.976737976074219
    10. '    ' → logprob: -12.976737976074219

Token 73: ' !=' (ID: 1666)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.8986698985099792
    2. ' !=' → logprob: -1.023669958114624
    3. '+' → logprob: -2.523669958114624
    4. '!=' → logprob: -2.898669958114624
    5. '==' → logprob: -3.023669958114624
    6. '2' → logprob: -4.023669719696045
    7. ' +' → logprob: -4.648669719696045
    8. ' <' → logprob: -4.773669719696045
    9. ' ' → logprob: -5.148669719696045
    10. '   ' → logprob: -6.023669719696045

Token 74: ' n' (ID: 297)
  Prédit: 'lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lst' → logprob: -0.31106075644493103
    2. ' lst' → logprob: -1.4360607862472534
    3. '0' → logprob: -3.936060667037964
    4. ' ' → logprob: -5.311060905456543
    5. 'n' → logprob: -5.936060905456543
    6. ' n' → logprob: -6.186060905456543
    7. '(lst' → logprob: -9.561060905456543
    8. '   ' → logprob: -9.811060905456543
    9. '  ' → logprob: -10.436060905456543
    10. 'l' → logprob: -10.561060905456543

Token 75: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.08901820331811905
    2. ' -' → logprob: -2.4640181064605713
    3. '1' → logprob: -10.089017868041992
    4. ' ' → logprob: -10.589017868041992
    5. '   ' → logprob: -11.964017868041992
    6. '```' → logprob: -13.339017868041992
    7. '<|end|>' → logprob: -14.214017868041992
    8. '−' → logprob: -14.464017868041992
    9. '  ' → logprob: -15.214017868041992
    10. '2' → logprob: -15.401517868041992

Token 76: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.554343366995454e-05
    2. ' ' → logprob: -9.375085830688477
    3. '<|end|>' → logprob: -15.750085830688477
    4. '0' → logprob: -15.875085830688477
    5. '2' → logprob: -16.437585830688477
    6. '```' → logprob: -16.937585830688477
    7. '<|end|>' → logprob: -16.937585830688477
    8. '１' → logprob: -17.750085830688477
    9. '

' → logprob: -17.937585830688477
    10. 'i' → logprob: -18.000085830688477

Token 77: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.034592388459714e-06
    2. ' ' → logprob: -12.250005722045898
    3. '<|end|>' → logprob: -15.437505722045898
    4. 'i' → logprob: -15.875005722045898
    5. '2' → logprob: -16.3125057220459
    6. '```' → logprob: -16.5000057220459
    7. '<|end|>' → logprob: -16.5625057220459
    8. ')' → logprob: -16.9375057220459
    9. '１' → logprob: -17.3750057220459
    10. ',' → logprob: -17.6250057220459

Token 78: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.013062936253845692
    2. ':
' → logprob: -4.763062953948975
    3. ' and' → logprob: -5.513062953948975
    4. 'and' → logprob: -8.138062477111816
    5. '   ' → logprob: -9.763062477111816
    6. ',' → logprob: -11.013062477111816
    7. ':

' → logprob: -11.763062477111816
    8. ' :' → logprob: -11.888062477111816
    9. ')' → logprob: -12.138062477111816
    10. '):' → logprob: -12.388062477111816

Token 79: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5402750372886658
    2. '   ' → logprob: -0.9152750372886658
    3. ' print' → logprob: -4.4152750968933105
    4. 'print' → logprob: -5.9152750968933105
    5. '    ' → logprob: -7.5402750968933105
    6. ' ' → logprob: -7.7902750968933105
    7. '	print' → logprob: -8.040274620056152
    8. '<|end|>' → logprob: -8.540274620056152
    9. ',' → logprob: -8.665274620056152
    10. ':' → logprob: -8.790274620056152

Token 80: ' print' (ID: 2123)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2277430146932602
    2. ' print' → logprob: -1.9777430295944214
    3. 'print' (adapté à ' print') → logprob: -2.852742910385132
    4. ' ' → logprob: -5.477743148803711
    5. '   ' → logprob: -6.227743148803711
    6. ' 
' → logprob: -7.852743148803711
    7. '    ' → logprob: -8.727743148803711
    8. '	print' → logprob: -8.727743148803711
    9. '.print' → logprob: -9.102743148803711
    10. '     ' → logprob: -9.477743148803711

Token 81: '(lst' (ID: 95688)
  Prédit: '(lst'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lst' → logprob: -0.0015168882673606277
    2. '(' → logprob: -6.501516819000244
    3. 'lst' → logprob: -11.626517295837402
    4. '(ls' → logprob: -12.501517295837402
    5. '(str' → logprob: -14.501517295837402
    6. '(chr' → logprob: -15.126517295837402
    7. '(l' → logprob: -15.251517295837402
    8. '(
' → logprob: -15.376517295837402
    9. '((' → logprob: -15.876517295837402
    10. '(f' → logprob: -15.876517295837402

Token 82: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0002678920282050967
    2. '[i' → logprob: -8.62526798248291
    3. '[' → logprob: -9.87526798248291
    4. '```' → logprob: -12.18776798248291
    5. ')' → logprob: -12.56276798248291
    6. '   ' → logprob: -12.93776798248291
    7. '[x' → logprob: -12.93776798248291
    8. ' [' → logprob: -13.25026798248291
    9. ' ' → logprob: -13.37526798248291
    10. ')[' → logprob: -13.81276798248291

Token 83: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.5941604690160602e-05
    2. '[' → logprob: -10.750025749206543
    3. 'i' → logprob: -12.875025749206543
    4. ')' → logprob: -13.500025749206543
    5. '(i' → logprob: -15.750025749206543
    6. '[
' → logprob: -16.00002670288086
    7. ',' → logprob: -16.62502670288086
    8. '   ' → logprob: -17.00002670288086
    9. ',i' → logprob: -17.25002670288086
    10. ' [' → logprob: -17.25002670288086

Token 84: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.022342881187796593
    2. ',end' → logprob: -3.8973429203033447
    3. ' ,' → logprob: -6.397342681884766
    4. '),' → logprob: -9.397342681884766
    5. 'end' → logprob: -11.147342681884766
    6. '   ' → logprob: -11.647342681884766
    7. ',",' → logprob: -12.147342681884766
    8. '',' → logprob: -12.147342681884766
    9. ')' → logprob: -12.647342681884766
    10. '",' → logprob: -12.897342681884766

Token 85: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.027690857648849487
    2. ',end' → logprob: -4.277690887451172
    3. ' end' → logprob: -5.402690887451172
    4. ',' → logprob: -5.527690887451172
    5. '"' → logprob: -5.902690887451172
    6. ''' → logprob: -6.902690887451172
    7. ''end' → logprob: -7.152690887451172
    8. ')' → logprob: -8.402690887451172
    9. '",' → logprob: -9.902690887451172
    10. '',' → logprob: -10.277690887451172

Token 86: '='' (ID: 2053)
  Prédit: '=''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '='' → logprob: -0.014097217470407486
    2. '=' → logprob: -4.889097213745117
    3. '="' → logprob: -5.264097213745117
    4. '=',' → logprob: -6.889097213745117
    5. ''' → logprob: -8.639097213745117
    6. '=",' → logprob: -9.764097213745117
    7. '"' → logprob: -10.389097213745117
    8. ' ='' → logprob: -12.389097213745117
    9. '=''' → logprob: -12.764097213745117
    10. ')' → logprob: -13.639097213745117

Token 87: ' ')
' (ID: 49195)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.00680205225944519
    2. ' ' → logprob: -5.756802082061768
    3. ' '' → logprob: -6.506802082061768
    4. '"' → logprob: -7.006802082061768
    5. ')' → logprob: -7.256802082061768
    6. ' )' → logprob: -7.756802082061768
    7. ',' → logprob: -10.50680160522461
    8. '')' → logprob: -11.13180160522461
    9. ' ,' → logprob: -11.50680160522461
    10. '',' → logprob: -11.88180160522461

Token 88: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.038183439522981644
    2. 'else' → logprob: -3.2881834506988525
    3. ' else' → logprob: -9.413183212280273
    4. ')' → logprob: -10.288183212280273
    5. ')
' → logprob: -12.038183212280273
    6. 'print' → logprob: -12.163183212280273
    7. '```' → logprob: -12.288183212280273
    8. '       ' → logprob: -13.038183212280273
    9. '    
' → logprob: -13.288183212280273
    10. '  ' → logprob: -14.038183212280273

Token 89: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.0028122442308813334
    2. '   ' → logprob: -6.002812385559082
    3. ' else' → logprob: -8.002812385559082
    4. '	else' → logprob: -13.877812385559082
    5. '  ' → logprob: -14.252812385559082
    6. ' ' → logprob: -15.502812385559082
    7. '       ' → logprob: -16.252811431884766
    8. 'elif' → logprob: -17.252811431884766
    9. '```' → logprob: -17.502811431884766
    10. 'elser' → logprob: -17.752811431884766

Token 90: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.019589971750974655
    2. ':
' → logprob: -4.019589900970459
    3. '       ' → logprob: -6.644589900970459
    4. 'print' → logprob: -9.394590377807617
    5. '   ' → logprob: -10.019590377807617
    6. ' print' → logprob: -12.394590377807617
    7. '):' → logprob: -12.769590377807617
    8. ' :' → logprob: -14.019590377807617
    9. '):
' → logprob: -14.269590377807617
    10. ':

' → logprob: -14.894590377807617

Token 91: '       ' (ID: 309)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.006207243539392948
    2. ' print' → logprob: -5.256207466125488
    3. '       ' → logprob: -7.006207466125488
    4. '   ' → logprob: -9.631207466125488
    5. '	print' → logprob: -14.131207466125488
    6. '```' → logprob: -15.631207466125488
    7. '    ' → logprob: -16.381206512451172
    8. ' ' → logprob: -17.381206512451172
    9. '           ' → logprob: -17.381206512451172
    10. '     ' → logprob: -18.006206512451172

Token 92: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -6.2729995988775045e-06
    2. ' print' → logprob: -12.000006675720215
    3. '   ' → logprob: -18.7500057220459
    4. '```' → logprob: -19.3750057220459
    5. '       ' → logprob: -20.7500057220459
    6. '	print' → logprob: -20.8750057220459
    7. ' ' → logprob: -23.5000057220459
    8. 'printf' → logprob: -23.5000057220459
    9. '``' → logprob: -23.7500057220459
    10. '.print' → logprob: -24.0000057220459

Token 93: '(lst' (ID: 95688)
  Prédit: '(lst'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lst' → logprob: -1.735893965815194e-05
    2. '(' → logprob: -11.000017166137695
    3. '(ls' → logprob: -14.250017166137695
    4. 'lst' → logprob: -17.000017166137695
    5. ' (' → logprob: -17.875017166137695
    6. '(l' → logprob: -18.125017166137695
    7. '(
' → logprob: -18.500017166137695
    8. '(lhs' → logprob: -18.750017166137695
    9. '(len' → logprob: -19.500017166137695
    10. '(ll' → logprob: -19.875017166137695

Token 94: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. '۲' → logprob: -20.125
    3. '_' → logprob: -20.5
    4. '₂' → logprob: -20.5625
    5. '```' → logprob: -20.6875
    6. '２' → logprob: -20.8125
    7. '[' → logprob: -20.9375
    8. ' ' → logprob: -21.0
    9. '[i' → logprob: -21.125
    10. '٢' → logprob: -21.375

Token 95: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00043710620957426727
    2. '[' → logprob: -7.750437259674072
    3. '[n' → logprob: -12.375436782836914
    4. ')' → logprob: -13.875436782836914
    5. '[
' → logprob: -15.000436782836914
    6. '[I' → logprob: -15.375436782836914
    7. ')[' → logprob: -15.500436782836914
    8. 'i' → logprob: -15.500436782836914
    9. ']' → logprob: -16.000436782836914
    10. '[x' → logprob: -16.375436782836914

Token 96: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007323168683797121
    2. '))' → logprob: -7.250732421875
    3. '')' → logprob: -11.250732421875
    4. ')
' → logprob: -12.625732421875
    5. '`)' → logprob: -13.250732421875
    6. ')`' → logprob: -13.250732421875
    7. ')")' → logprob: -13.625732421875
    8. ')))' → logprob: -15.000732421875
    9. ' )' → logprob: -15.125732421875
    10. '")' → logprob: -15.250732421875

Token 97: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20258115231990814
    2. 'i' → logprob: -1.7025811672210693
    3. '	i' → logprob: -6.95258092880249
    4. ' i' → logprob: -8.577581405639648
    5. ',i' → logprob: -12.077581405639648
    6. '  ' → logprob: -12.077581405639648
    7. '    
' → logprob: -12.577581405639648
    8. ' ' → logprob: -13.202581405639648
    9. '[i' → logprob: -14.077581405639648
    10. '       ' → logprob: -14.077581405639648

Token 98: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.01421545259654522
    2. '   ' → logprob: -4.264215469360352
    3. ' i' → logprob: -10.014215469360352
    4. '	i' → logprob: -12.514215469360352
    5. '  ' → logprob: -12.764215469360352
    6. ' ' → logprob: -14.639215469360352
    7. '    
' → logprob: -16.88921546936035
    8. '    ' → logprob: -17.01421546936035
    9. '```' → logprob: -17.63921546936035
    10. '       ' → logprob: -17.63921546936035

Token 99: ' +=' (ID: 2757)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6812168955802917
    2. '+=' → logprob: -0.9312168955802917
    3. ' +=' → logprob: -2.3062169551849365
    4. '++' → logprob: -9.056217193603516
    5. '<|end|>' → logprob: -10.056217193603516
    6. ' ' → logprob: -10.181217193603516
    7. '+='' → logprob: -10.556217193603516
    8. ' +' → logprob: -10.931217193603516
    9. '+="' → logprob: -11.181217193603516
    10. '+++' → logprob: -11.306217193603516

Token 100: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.06993676722049713
    2. ' ' → logprob: -2.694936752319336
    3. ' ' → logprob: -15.069936752319336
    4. '```' → logprob: -15.944936752319336
    5. '`' → logprob: -18.007436752319336
    6. '0' → logprob: -18.257436752319336
    7. '   ' → logprob: -18.319936752319336
    8. '2' → logprob: -18.382436752319336
    9. '１' → logprob: -18.694936752319336
    10. ' 
' → logprob: -18.757436752319336

Token 101: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.625000953674316
    3. '```' → logprob: -17.625
    4. '１' → logprob: -19.625
    5. '   ' → logprob: -20.0
    6. '`' → logprob: -20.3125
    7. '۱' → logprob: -20.4375
    8. '<|end|>' → logprob: -20.75
    9. '१' → logprob: -20.9375
    10. '2' → logprob: -21.1875


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 99
Tokens correctement prédits (1ère position, stricte): 38
Tokens correctement prédits (1ère position, avec adaptation): 41
Tokens correctement prédits (top 10): 82
Précision stricte (1ère position): 38.38%
Précision adaptée (1ère position): 41.41%
Précision (top 10): 82.83%
================================================================================
