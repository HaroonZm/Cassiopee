================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:41:14
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from math import degrees, acos, atan

def compute_angle(a: int, b: int, x: int) -> float:
    vol = a * a * b
    half = 0.5 * vol
    if x <= half:
        h = 2 * x / (a * b)
        hy = (h * h + b * b) ** 0.5
        # Simplify cosa using only b and h
        cosa = b / hy
        angle = 90 + degrees(acos(cosa))
    else:
        empty_height = 2 * (vol - x) / (a * a)
        angle = degrees(atan(empty_height))
    return angle

print(compute_angle(*map(int, input().split())))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' math' (ID: 13324)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' degrees' (ID: 18210)
  Prédit: 'sqrt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sqrt' → logprob: -0.2745301127433777
    2. ' sqrt' → logprob: -1.5245301723480225
    3. 'pow' → logprob: -4.774529933929443
    4. 'sin' → logprob: -5.024529933929443
    5. ' pi' → logprob: -5.899529933929443
    6. 'pi' → logprob: -6.274529933929443
    7. ' sin' → logprob: -7.024529933929443
    8. 'ceil' → logprob: -7.899529933929443
    9. 'import' → logprob: -8.274530410766602
    10. ' ceil' → logprob: -8.399530410766602

Token 4: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0007204149151220918
    2. '(
' → logprob: -8.000720024108887
    3. '\(' → logprob: -8.250720024108887
    4. '.' → logprob: -10.125720024108887
    5. ',' → logprob: -10.500720024108887
    6. ' (' → logprob: -11.375720024108887
    7. '```' → logprob: -11.750720024108887
    8. '\n' → logprob: -12.125720024108887
    9. '\' → logprob: -12.500720024108887
    10. 'import' → logprob: -12.750720024108887

Token 5: ' acos' (ID: 185572)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.13049229979515076
    2. 'atan' → logprob: -2.1304922103881836
    3. ' radians' → logprob: -6.005492210388184
    4. 'sin' → logprob: -7.505492210388184
    5. 'acos' → logprob: -8.630492210388184
    6. '```' → logprob: -9.130492210388184
    7. 'sqrt' → logprob: -9.380492210388184
    8. 'asin' → logprob: -10.255492210388184
    9. ' atan' → logprob: -10.505492210388184
    10. 'is' → logprob: -10.505492210388184

Token 6: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00013893934374209493
    2. '(
' → logprob: -9.750139236450195
    3. '\(' → logprob: -9.750139236450195
    4. ',' → logprob: -12.875139236450195
    5. '(open' → logprob: -12.875139236450195
    6. '(d' → logprob: -13.375139236450195
    7. 'def' → logprob: -13.500139236450195
    8. '```' → logprob: -13.625139236450195
    9. ' (' → logprob: -13.750139236450195
    10. '\n' → logprob: -14.125139236450195

Token 7: ' atan' (ID: 70327)
  Prédit: ' sqrt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sqrt' → logprob: -1.141500473022461
    2. 'sqrt' → logprob: -1.391500473022461
    3. 'atan' → logprob: -2.141500473022461
    4. ' cos' → logprob: -2.391500473022461
    5. ' radians' → logprob: -2.891500473022461
    6. 'cos' → logprob: -3.141500473022461
    7. 'is' → logprob: -3.391500473022461
    8. 'sin' → logprob: -3.766500473022461
    9. ' is' → logprob: -4.141500473022461
    10. ' sin' → logprob: -4.266500473022461

Token 8: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.009953346103429794
    2. '2' → logprob: -4.759953498840332
    3. 's' → logprob: -8.009953498840332
    4. '\(' → logprob: -8.509953498840332
    5. ',' → logprob: -8.884953498840332
    6. '(
' → logprob: -9.009953498840332
    7. '#' → logprob: -9.509953498840332
    8. ' (' → logprob: -9.634953498840332
    9. 'def' → logprob: -10.259953498840332
    10. '40' → logprob: -10.259953498840332

Token 9: 'def' (ID: 1314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0019449377432465553
    2. '2' → logprob: -6.5019450187683105
    3. ' (' → logprob: -9.001944541931152
    4. ',' → logprob: -9.126944541931152
    5. '#' → logprob: -10.001944541931152
    6. '(
' → logprob: -10.001944541931152
    7. '\(' → logprob: -10.501944541931152
    8. 'def' → logprob: -10.876944541931152
    9. 's' → logprob: -11.126944541931152
    10. '((' → logprob: -12.001944541931152

Token 10: ' compute' (ID: 23864)
  Prédit: ' calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' calculate' → logprob: -0.5310325622558594
    2. ' get' → logprob: -1.4060325622558594
    3. ' vector' → logprob: -2.5310325622558594
    4. ' angle' → logprob: -3.7810325622558594
    5. ' convert' → logprob: -4.656032562255859
    6. ' find' → logprob: -4.781032562255859
    7. ' compute' → logprob: -4.906032562255859
    8. ' space' → logprob: -4.906032562255859
    9. ' triangle' → logprob: -5.281032562255859
    10. ' distance' → logprob: -5.406032562255859

Token 11: '_angle' (ID: 51505)
  Prédit: '_angle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_angle' → logprob: -0.01144164614379406
    2. '_' → logprob: -5.136441707611084
    3. '_distance' → logprob: -5.761441707611084
    4. '(' → logprob: -7.511441707611084
    5. '_angles' → logprob: -7.761441707611084
    6. ')' → logprob: -8.011441230773926
    7. '_vector' → logprob: -8.511441230773926
    8. '_direction' → logprob: -9.011441230773926
    9. '_velocity' → logprob: -9.136441230773926
    10. '_s' → logprob: -9.886441230773926

Token 12: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0015954379923641682
    2. '(angle' → logprob: -8.001595497131348
    3. '_between' → logprob: -8.126595497131348
    4. ' (' → logprob: -9.126595497131348
    5. '_' → logprob: -9.126595497131348
    6. '(parent' → logprob: -9.376595497131348
    7. '(x' → logprob: -9.501595497131348
    8. '(user' → logprob: -9.626595497131348
    9. '(p' → logprob: -9.751595497131348
    10. '(theta' → logprob: -9.876595497131348

Token 13: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004855041857808828
    2. '_,' → logprob: -6.504855155944824
    3. ',b' → logprob: -6.504855155944824
    4. ' ,' → logprob: -6.629855155944824
    5. '_b' → logprob: -8.754855155944824
    6. 'b' → logprob: -9.254855155944824
    7. 's' → logprob: -9.379855155944824
    8. '):' → logprob: -10.254855155944824
    9. '_' → logprob: -10.379855155944824
    10. '1' → logprob: -10.629855155944824

Token 14: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -1.3045986890792847
    2. ' float' → logprob: -1.4295986890792847
    3. 'int' → logprob: -2.054598808288574
    4. 'float' → logprob: -2.054598808288574
    5. ' List' → logprob: -2.304598808288574
    6. ' list' → logprob: -2.804598808288574
    7. ')' → logprob: -3.804598808288574
    8. 'List' → logprob: -3.929598808288574
    9. ' tuple' → logprob: -4.929598808288574
    10. 'list' → logprob: -5.179598808288574

Token 15: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0014943843707442284
    2. ' ,' → logprob: -6.876494407653809
    3. ')' → logprob: -8.251494407653809
    4. ',a' → logprob: -9.626494407653809
    5. ',b' → logprob: -10.126494407653809
    6. 'a' → logprob: -10.751494407653809
    7. '<|end|>' → logprob: -11.126494407653809
    8. '):' → logprob: -11.376494407653809
    9. '[' → logprob: -11.501494407653809
    10. ',
' → logprob: -11.876494407653809

Token 16: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.043056052178144455
    2. 'b' → logprob: -3.168056011199951
    3. ' ' → logprob: -10.04305648803711
    4. ')' → logprob: -12.54305648803711
    5. ' ' → logprob: -12.79305648803711
    6. '    ' → logprob: -13.16805648803711
    7. '   ' → logprob: -13.66805648803711
    8. '  ' → logprob: -14.60555648803711
    9. ' )' → logprob: -14.91805648803711
    10. '	b' → logprob: -14.98055648803711

Token 17: ':' (ID: 25)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9213539958000183
    2. ':' → logprob: -1.171354055404663
    3. ',' → logprob: -1.671354055404663
    4. '):' → logprob: -2.296354055404663
    5. '=' → logprob: -6.796353816986084
    6. ')>' → logprob: -7.171353816986084
    7. '<|end|>' → logprob: -8.296354293823242
    8. '[' → logprob: -8.421354293823242
    9. ' ' → logprob: -8.546354293823242
    10. ' ,' → logprob: -9.171354293823242

Token 18: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.5761244297027588
    2. 'int' → logprob: -0.8261244297027588
    3. ')' → logprob: -9.20112419128418
    4. ' float' → logprob: -10.45112419128418
    5. 'float' → logprob: -11.32612419128418
    6. '[int' → logprob: -11.45112419128418
    7. ' ' → logprob: -11.70112419128418
    8. ':int' → logprob: -12.45112419128418
    9. '(int' → logprob: -12.45112419128418
    10. ' )' → logprob: -12.95112419128418

Token 19: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.24173595011234283
    2. '):' → logprob: -2.1167359352111816
    3. ',' → logprob: -2.3667359352111816
    4. ':' → logprob: -8.99173641204834
    5. ')>' → logprob: -9.99173641204834
    6. '```' → logprob: -10.11673641204834
    7. ' ,' → logprob: -10.24173641204834
    8. ')->' → logprob: -10.49173641204834
    9. '),' → logprob: -10.74173641204834
    10. '*' → logprob: -10.86673641204834

Token 20: ' x' (ID: 1215)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.1603514701128006
    2. 'c' → logprob: -1.9103515148162842
    3. ' ' → logprob: -9.910351753234863
    4. ')' → logprob: -10.910351753234863
    5. '```' → logprob: -11.285351753234863
    6. ':' → logprob: -12.160351753234863
    7. '   ' → logprob: -12.222851753234863
    8. '  ' → logprob: -12.285351753234863
    9. '	c' → logprob: -12.597851753234863
    10. ',' → logprob: -12.660351753234863

Token 21: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9156829714775085
    2. '):' → logprob: -1.1656830310821533
    3. ':' → logprob: -2.0406830310821533
    4. ')' → logprob: -2.0406830310821533
    5. '1' → logprob: -4.165682792663574
    6. '2' → logprob: -4.665682792663574
    7. '3' → logprob: -6.540682792663574
    8. '0' → logprob: -8.415682792663574
    9. ' ):' → logprob: -8.540682792663574
    10. ',y' → logprob: -8.790682792663574

Token 22: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00929215271025896
    2. ' int' → logprob: -4.759292125701904
    3. 'float' → logprob: -8.009292602539062
    4. ')' → logprob: -8.259292602539062
    5. '[int' → logprob: -10.759292602539062
    6. ' float' → logprob: -11.384292602539062
    7. ':int' → logprob: -11.384292602539062
    8. 'nt' → logprob: -11.384292602539062
    9. '(int' → logprob: -11.509292602539062
    10. '=int' → logprob: -12.884292602539062

Token 23: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.23722191154956818
    2. '):' → logprob: -1.6122219562530518
    3. ',' → logprob: -4.487221717834473
    4. ')>' → logprob: -8.487221717834473
    5. ':' → logprob: -10.237221717834473
    6. ')->' → logprob: -10.237221717834473
    7. '):
' → logprob: -10.612221717834473
    8. '),' → logprob: -10.737221717834473
    9. 'a' → logprob: -10.987221717834473
    10. ')">' → logprob: -10.987221717834473

Token 24: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0027845539152622223
    2. '):' → logprob: -6.002784729003906
    3. ':return' → logprob: -9.377784729003906
    4. '():' → logprob: -9.502784729003906
    5. '':' → logprob: -10.377784729003906
    6. ':**' → logprob: -10.502784729003906
    7. ' :' → logprob: -11.002784729003906
    8. '>:' → logprob: -11.002784729003906
    9. ')' → logprob: -11.627784729003906
    10. '   ' → logprob: -11.877784729003906

Token 25: ' float' (ID: 4428)
  Prédit: ' float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.050996847450733185
    2. 'float' → logprob: -3.050996780395508
    3. ' int' → logprob: -6.175996780395508
    4. 'int' → logprob: -8.050996780395508
    5. ' str' → logprob: -12.800996780395508
    6. ' None' → logprob: -12.800996780395508
    7. '	float' → logprob: -13.550996780395508
    8. ' ' → logprob: -14.050996780395508
    9. ' ' → logprob: -14.925996780395508
    10. '<float' → logprob: -15.925996780395508

Token 26: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0008663220214657485
    2. '):' → logprob: -7.750866413116455
    3. '(:' → logprob: -8.750865936279297
    4. '():' → logprob: -8.750865936279297
    5. ':**' → logprob: -10.375865936279297
    6. '(' → logprob: -10.500865936279297
    7. ' :' → logprob: -11.750865936279297
    8. '':' → logprob: -11.750865936279297
    9. ':return' → logprob: -12.000865936279297
    10. '(':' → logprob: -12.250865936279297

Token 27: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.050868723541498184
    2. '   ' → logprob: -3.1758687496185303
    3. '():' → logprob: -5.675868511199951
    4. '(' → logprob: -6.550868511199951
    5. '):' → logprob: -6.675868511199951
    6. '```' → logprob: -7.050868511199951
    7. ' :' → logprob: -8.55086898803711
    8. ':
' → logprob: -9.17586898803711
    9. ' ' → logprob: -9.80086898803711
    10. ',' → logprob: -9.80086898803711

Token 28: ' vol' (ID: 2639)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10313722491264343
    2. ' if' → logprob: -3.853137254714966
    3. ' c' → logprob: -4.603137016296387
    4. 'if' → logprob: -4.853137016296387
    5. 'c' → logprob: -4.978137016296387
    6. '(' → logprob: -5.103137016296387
    7. ' return' → logprob: -5.228137016296387
    8. ')' → logprob: -5.353137016296387
    9. ' ' → logprob: -5.478137016296387
    10. 'return' → logprob: -5.853137016296387

Token 29: ' =' (ID: 314)
  Prédit: 'ume'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ume' → logprob: -0.004785511177033186
    2. ' =' → logprob: -5.879785537719727
    3. 'tage' → logprob: -6.504785537719727
    4. 'um' → logprob: -9.004785537719727
    5. '=' → logprob: -9.129785537719727
    6. 't' → logprob: -9.754785537719727
    7. 'me' → logprob: -10.004785537719727
    8. '_' → logprob: -10.504785537719727
    9. 'umes' → logprob: -10.504785537719727
    10. 'ue' → logprob: -10.754785537719727

Token 30: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.038453735411167145
    2. ' a' → logprob: -3.5384538173675537
    3. '(a' → logprob: -5.413453578948975
    4. 'abs' → logprob: -6.788453578948975
    5. ' (' → logprob: -7.038453578948975
    6. '(' → logprob: -7.163453578948975
    7. 'x' → logprob: -7.788453578948975
    8. '(x' → logprob: -8.413454055786133
    9. ' abs' → logprob: -8.538454055786133
    10. '(abs' → logprob: -9.288454055786133

Token 31: ' *' (ID: 425)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.1353217214345932
    2. '*' → logprob: -2.635321617126465
    3. '*b' → logprob: -3.260321617126465
    4. ' *' → logprob: -4.760321617126465
    5. '2' → logprob: -5.760321617126465
    6. ' **' → logprob: -6.385321617126465
    7. ' +' → logprob: -6.635321617126465
    8. '*a' → logprob: -6.760321617126465
    9. '*x' → logprob: -8.260321617126465
    10. '+' → logprob: -9.010321617126465

Token 32: ' a' (ID: 261)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.10203579813241959
    2. 'x' → logprob: -2.6020357608795166
    3. ' b' → logprob: -4.602035999298096
    4. 'a' → logprob: -5.102035999298096
    5. ' x' → logprob: -5.602035999298096
    6. 'vol' → logprob: -6.102035999298096
    7. ' a' → logprob: -8.102035522460938
    8. ' ' → logprob: -8.727035522460938
    9. ' vol' → logprob: -9.102035522460938
    10. '(' → logprob: -9.602035522460938

Token 33: ' *' (ID: 425)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.2461952567100525
    2. '*' → logprob: -2.7461953163146973
    3. ' *' → logprob: -2.8711953163146973
    4. ' -' → logprob: -3.1211953163146973
    5. '+' → logprob: -3.3711953163146973
    6. '+b' → logprob: -5.121195316314697
    7. '*b' → logprob: -5.496195316314697
    8. '-' → logprob: -5.746195316314697
    9. ' ' → logprob: -6.246195316314697
    10. 'b' → logprob: -7.246195316314697

Token 34: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.1140536516904831
    2. 'a' → logprob: -2.864053726196289
    3. 'x' → logprob: -2.989053726196289
    4. ' b' → logprob: -8.364053726196289
    5. ' x' → logprob: -9.739053726196289
    6. ' a' → logprob: -9.864053726196289
    7. '3' → logprob: -11.239053726196289
    8. 'vol' → logprob: -11.739053726196289
    9. 'math' → logprob: -11.864053726196289
    10. '   ' → logprob: -12.176553726196289

Token 35: '
' (ID: 198)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.50315922498703
    2. ' /' → logprob: -1.7531592845916748
    3. '-' → logprob: -2.378159284591675
    4. ' +' → logprob: -3.003159284591675
    5. ' ' → logprob: -3.753159284591675
    6. '+' → logprob: -4.003159046173096
    7. '   ' → logprob: -4.503159046173096
    8. '*' → logprob: -4.878159046173096
    9. '/' → logprob: -5.378159046173096
    10. ')' → logprob: -5.503159046173096

Token 36: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06205832213163376
    2. ')' → logprob: -4.062058448791504
    3. '-' → logprob: -4.812058448791504
    4. ' /' → logprob: -5.312058448791504
    5. '*' → logprob: -5.562058448791504
    6. ' ' → logprob: -5.562058448791504
    7. ',' → logprob: -5.687058448791504
    8. ' if' → logprob: -5.687058448791504
    9. ' -' → logprob: -5.812058448791504
    10. '/' → logprob: -6.187058448791504

Token 37: ' half' (ID: 6375)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7795910239219666
    2. ' if' → logprob: -1.4045910835266113
    3. ' -' → logprob: -2.5295910835266113
    4. '-' → logprob: -3.0295910835266113
    5. ' /' → logprob: -3.0295910835266113
    6. '/' → logprob: -3.6545910835266113
    7. '*' → logprob: -4.529591083526611
    8. 'if' → logprob: -4.654591083526611
    9. ' return' → logprob: -4.904591083526611
    10. '**' → logprob: -5.029591083526611

Token 38: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.20147377252578735
    2. '_vol' → logprob: -2.2014737129211426
    3. ' =' → logprob: -3.4514737129211426
    4. '_b' → logprob: -3.9514737129211426
    5. '_volume' → logprob: -4.326473712921143
    6. '=' → logprob: -6.326473712921143
    7. '_v' → logprob: -6.451473712921143
    8. '_x' → logprob: -6.826473712921143
    9. 'vol' → logprob: -7.201473712921143
    10. '_val' → logprob: -7.326473712921143

Token 39: ' ' (ID: 220)
  Prédit: ' vol'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vol' → logprob: -0.5318707823753357
    2. ' b' → logprob: -1.2818708419799805
    3. 'vol' → logprob: -2.4068708419799805
    4. 'b' → logprob: -3.6568708419799805
    5. ' x' → logprob: -4.6568708419799805
    6. ' a' → logprob: -5.2818708419799805
    7. 'x' → logprob: -6.6568708419799805
    8. ' ' → logprob: -6.6568708419799805
    9. '0' → logprob: -7.4068708419799805
    10. ' (' → logprob: -7.7818708419799805

Token 40: '0' (ID: 15)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.7967378497123718
    2. 'vol' → logprob: -0.9217378497123718
    3. 'x' → logprob: -2.2967379093170166
    4. 'a' → logprob: -3.7967379093170166
    5. ' vol' → logprob: -4.1717376708984375
    6. ' b' → logprob: -4.7967376708984375
    7. ' x' → logprob: -5.9217376708984375
    8. ' a' → logprob: -7.1717376708984375
    9. 'v' → logprob: -7.5467376708984375
    10. '0' → logprob: -7.7967376708984375

Token 41: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -4.990154047845863e-05
    2. 'x' → logprob: -11.125049591064453
    3. ' ' → logprob: -12.125049591064453
    4. '0' → logprob: -12.250049591064453
    5. ' .' → logprob: -12.375049591064453
    6. 'b' → logprob: -12.500049591064453
    7. 'a' → logprob: -13.125049591064453
    8. 'if' → logprob: -13.125049591064453
    9. '   ' → logprob: -13.625049591064453
    10. '45' → logprob: -13.625049591064453

Token 42: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.02346966229379177
    2. '0' → logprob: -3.8984696865081787
    3. '1' → logprob: -6.5234694480896
    4. '3' → logprob: -6.6484694480896
    5. '2' → logprob: -9.398469924926758
    6. 'five' → logprob: -11.273469924926758
    7. '05' → logprob: -11.523469924926758
    8. '6' → logprob: -11.898469924926758
    9. '50' → logprob: -12.023469924926758
    10. '53' → logprob: -12.398469924926758

Token 43: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.12406349927186966
    2. '*' → logprob: -2.749063491821289
    3. '<|end|>' → logprob: -3.249063491821289
    4. '   ' → logprob: -5.499063491821289
    5. '*(' → logprob: -6.124063491821289
    6. '
' → logprob: -6.874063491821289
    7. ' ' → logprob: -6.874063491821289
    8. ')' → logprob: -7.124063491821289
    9. '*b' → logprob: -7.374063491821289
    10. '*v' → logprob: -7.499063491821289

Token 44: ' vol' (ID: 2639)
  Prédit: 'vol'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vol' → logprob: -0.14290747046470642
    2. ' vol' → logprob: -2.0179073810577393
    3. 'x' → logprob: -8.76790714263916
    4. ' x' → logprob: -9.89290714263916
    5. 'b' → logprob: -11.39290714263916
    6. '(vol' → logprob: -12.51790714263916
    7. 'a' → logprob: -12.64290714263916
    8. ' a' → logprob: -13.64290714263916
    9. 'vole' → logprob: -13.64290714263916
    10. 'volume' → logprob: -14.01790714263916

Token 45: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 46: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4410657286643982
    2. '   ' → logprob: -1.691065788269043
    3. '    
' → logprob: -2.316065788269043
    4. '<|end|>' → logprob: -2.941065788269043
    5. '\n' → logprob: -4.691065788269043
    6. 'newline' → logprob: -5.566065788269043
    7. '   
' → logprob: -6.441065788269043
    8. 'n' → logprob: -6.816065788269043
    9. '  
' → logprob: -6.816065788269043
    10. '<|end|>' → logprob: -7.191065788269043

Token 47: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -1.0076358318328857
    2. 'angle' → logprob: -1.3826358318328857
    3. ' if' → logprob: -1.7576358318328857
    4. 'theta' → logprob: -3.2576358318328857
    5. 'x' → logprob: -3.7576358318328857
    6. 'cos' → logprob: -3.8826358318328857
    7. 'c' → logprob: -3.8826358318328857
    8. 'return' → logprob: -4.132636070251465
    9. ' angle' → logprob: -4.382636070251465
    10. '\n' → logprob: -4.382636070251465

Token 48: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.14006729423999786
    2. 'x' → logprob: -2.1400673389434814
    3. ' b' → logprob: -5.765067100524902
    4. ' ' → logprob: -5.890067100524902
    5. ' half' → logprob: -6.265067100524902
    6. ' a' → logprob: -6.390067100524902
    7. ' vol' → logprob: -7.265067100524902
    8. 'b' → logprob: -7.515067100524902
    9. 'vol' → logprob: -7.640067100524902
    10. 'a' → logprob: -8.140067100524902

Token 49: ' <=' (ID: 5017)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.35234129428863525
    2. ' <=' → logprob: -1.6023412942886353
    3. ' >' → logprob: -3.1023411750793457
    4. ' >=' → logprob: -3.7273411750793457
    5. '<' → logprob: -4.477341175079346
    6. ' ==' → logprob: -4.977341175079346
    7. '<=' → logprob: -5.477341175079346
    8. '>' → logprob: -6.727341175079346
    9. ' ' → logprob: -7.102341175079346
    10. ' *' → logprob: -7.477341175079346

Token 50: ' half' (ID: 6375)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6934564113616943
    2. ' ' → logprob: -1.6934564113616943
    3. 'half' → logprob: -1.6934564113616943
    4. ' half' → logprob: -2.5684564113616943
    5. 'a' → logprob: -3.0684564113616943
    6. ' a' → logprob: -5.193456649780273
    7. 'b' → logprob: -6.443456649780273
    8. 'vol' → logprob: -7.443456649780273
    9. ' b' → logprob: -7.568456649780273
    10. '(' → logprob: -8.443456649780273

Token 51: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00013250234769657254
    2. ':
' → logprob: -9.62513256072998
    3. ':return' → logprob: -10.00013256072998
    4. '):' → logprob: -11.12513256072998
    5. ' :' → logprob: -13.00013256072998
    6. ':**' → logprob: -14.37513256072998
    7. '>:' → logprob: -14.50013256072998
    8. '():' → logprob: -14.87513256072998
    9. ' and' → logprob: -14.87513256072998
    10. '   ' → logprob: -15.00013256072998

Token 52: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0682232528924942
    2. '       ' → logprob: -3.068223237991333
    3. ':
' → logprob: -4.443223476409912
    4. '   ' → logprob: -5.193223476409912
    5. '\n' → logprob: -7.818223476409912
    6. ',' → logprob: -8.318222999572754
    7. ':return' → logprob: -8.318222999572754
    8. ' :' → logprob: -8.568222999572754
    9. '    ' → logprob: -8.943222999572754
    10. '<|end|>' → logprob: -8.943222999572754

Token 53: ' h' (ID: 312)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1314328908920288
    2. ' return' → logprob: -1.5064328908920288
    3. ' angle' → logprob: -1.8814328908920288
    4. ' theta' → logprob: -2.2564330101013184
    5. 'angle' → logprob: -3.2564330101013184
    6. 'theta' → logprob: -3.2564330101013184
    7. '   ' → logprob: -3.3814330101013184
    8. 'return' → logprob: -3.5064330101013184
    9. ')' → logprob: -5.006433010101318
    10. '           ' → logprob: -5.381433010101318

Token 54: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11738541722297668
    2. 'eight' → logprob: -2.7423853874206543
    3. '=' → logprob: -3.2423853874206543
    4. 'e' → logprob: -5.867385387420654
    5. '_angle' → logprob: -5.992385387420654
    6. '   ' → logprob: -7.492385387420654
    7. 't' → logprob: -8.242385864257812
    8. 'angle' → logprob: -8.242385864257812
    9. 'eg' → logprob: -9.117385864257812
    10. '=float' → logprob: -9.367385864257812

Token 55: ' ' (ID: 220)
  Prédit: 'atan'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'atan' → logprob: -1.0096980333328247
    2. 'degrees' → logprob: -1.8846980333328247
    3. '(' → logprob: -2.134697914123535
    4. ' degrees' → logprob: -2.634697914123535
    5. 'x' → logprob: -2.634697914123535
    6. 'a' → logprob: -3.134697914123535
    7. ' atan' → logprob: -3.634697914123535
    8. '2' → logprob: -3.759697914123535
    9. ' (' → logprob: -4.009697914123535
    10. ' x' → logprob: -4.009697914123535

Token 56: '2' (ID: 17)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.9769660830497742
    2. 'x' → logprob: -1.226966142654419
    3. '2' → logprob: -1.601966142654419
    4. '(x' → logprob: -3.226966142654419
    5. 'vol' → logprob: -3.851966142654419
    6. 'b' → logprob: -4.47696590423584
    7. 'a' → logprob: -4.60196590423584
    8. 'degrees' → logprob: -4.85196590423584
    9. '3' → logprob: -4.97696590423584
    10. 'atan' → logprob: -5.10196590423584

Token 57: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.47488436102867126
    2. '*' → logprob: -0.9748843908309937
    3. '.' → logprob: -7.724884510040283
    4. '*x' → logprob: -8.349884033203125
    5. '   ' → logprob: -9.849884033203125
    6. '*b' → logprob: -10.974884033203125
    7. ' ' → logprob: -10.974884033203125
    8. '*(' → logprob: -11.349884033203125
    9. '       ' → logprob: -12.349884033203125
    10. '*h' → logprob: -12.599884033203125

Token 58: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.19728347659111023
    2. ' x' → logprob: -1.8222835063934326
    3. '(x' → logprob: -4.9472832679748535
    4. ' (' → logprob: -5.1972832679748535
    5. '(' → logprob: -5.5722832679748535
    6. ' ' → logprob: -8.697283744812012
    7. 'vol' → logprob: -8.822283744812012
    8. 'half' → logprob: -8.822283744812012
    9. ' half' → logprob: -9.072283744812012
    10. '   ' → logprob: -9.572283744812012

Token 59: ' /' (ID: 820)
  Prédit: ' /'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.3961622416973114
    2. '/' → logprob: -1.1461622714996338
    3. '/(' → logprob: -5.146162033081055
    4. '       ' → logprob: -6.896162033081055
    5. '/b' → logprob: -7.396162033081055
    6. '/a' → logprob: -7.646162033081055
    7. ' /(' → logprob: -7.646162033081055
    8. '   ' → logprob: -7.896162033081055
    9. 'b' → logprob: -8.896162033081055
    10. 'a' → logprob: -9.771162033081055

Token 60: ' (' (ID: 350)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.217345729470253
    2. 'a' → logprob: -1.9673457145690918
    3. '(vol' → logprob: -3.717345714569092
    4. ' (' → logprob: -3.842345714569092
    5. '(' → logprob: -4.717345714569092
    6. 'vol' → logprob: -7.592345714569092
    7. ' a' → logprob: -9.09234619140625
    8. ' vol' → logprob: -10.09234619140625
    9. '(b' → logprob: -10.34234619140625
    10. '(h' → logprob: -11.09234619140625

Token 61: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.2884753942489624
    2. '(a' → logprob: -1.4134753942489624
    3. ' (' → logprob: -5.413475513458252
    4. '(' → logprob: -6.413475513458252
    5. ' a' → logprob: -7.038475513458252
    6. 'b' → logprob: -8.663475036621094
    7. '(b' → logprob: -10.038475036621094
    8. '   ' → logprob: -10.788475036621094
    9. ')a' → logprob: -10.788475036621094
    10. ')' → logprob: -11.663475036621094

Token 62: ' *' (ID: 425)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -0.5255357623100281
    2. ')' → logprob: -1.6505358219146729
    3. '/' → logprob: -2.025535821914673
    4. '/a' → logprob: -3.025535821914673
    5. '/b' → logprob: -4.275535583496094
    6. ' /' → logprob: -5.525535583496094
    7. '<|end|>' → logprob: -5.525535583496094
    8. ')**' → logprob: -5.775535583496094
    9. '*b' → logprob: -5.900535583496094
    10. '*' → logprob: -6.150535583496094

Token 63: ' b' (ID: 287)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.03830070048570633
    2. 'b' → logprob: -3.2883007526397705
    3. '<|end|>' → logprob: -8.913300514221191
    4. ' a' → logprob: -10.163300514221191
    5. ')' → logprob: -10.413300514221191
    6. ' b' → logprob: -11.788300514221191
    7. '<|end|>' → logprob: -12.038300514221191
    8. ' ' → logprob: -12.163300514221191
    9. '```' → logprob: -12.288300514221191
    10. '   ' → logprob: -12.413300514221191

Token 64: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.25319236516952515
    2. ')
' → logprob: -1.50319242477417
    3. ')
' → logprob: -7.25319242477417
    4. '   ' → logprob: -7.87819242477417
    5. '       ' → logprob: -9.628191947937012
    6. ')

' → logprob: -10.628191947937012
    7. ' )' → logprob: -10.628191947937012
    8. '**' → logprob: -10.753191947937012
    9. ' )
' → logprob: -11.128191947937012
    10. ')**' → logprob: -11.378191947937012

Token 65: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3928415775299072
    2. '
' → logprob: -1.5178415775299072
    3. '\n' → logprob: -2.3928415775299072
    4. '        
' → logprob: -5.017841339111328
    5. '
' → logprob: -6.142841339111328
    6. '' → logprob: -7.142841339111328
    7. ' 
' → logprob: -7.267841339111328
    8. '   ' → logprob: -7.642841339111328
    9. '    
' → logprob: -7.642841339111328
    10. 'return' → logprob: -8.017841339111328

Token 66: ' hy' (ID: 7537)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16946761310100555
    2. ' return' → logprob: -3.5444676876068115
    3. '\n' → logprob: -3.7944676876068115
    4. 'return' → logprob: -3.7944676876068115
    5. 'angle' → logprob: -3.9194676876068115
    6. 'h' → logprob: -4.169467449188232
    7. ' angle' → logprob: -4.419467449188232
    8. 'theta' → logprob: -5.294467449188232
    9. ' theta' → logprob: -5.794467449188232
    10. 'd' → logprob: -5.919467449188232

Token 67: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.48749077320098877
    2. '=' → logprob: -1.2374907732009888
    3. 'p' → logprob: -2.362490653991699
    4. '=p' → logprob: -6.987490653991699
    5. 'pe' → logprob: -8.3624906539917
    6. '   ' → logprob: -9.9874906539917
    7. '=h' → logprob: -9.9874906539917
    8. 'ight' → logprob: -10.8624906539917
    9. 'e' → logprob: -10.9874906539917
    10. '       ' → logprob: -11.2374906539917

Token 68: ' (' (ID: 350)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7157086730003357
    2. ' a' → logprob: -0.9657086730003357
    3. ' h' → logprob: -2.8407087326049805
    4. 'h' → logprob: -2.8407087326049805
    5. ' ' → logprob: -5.4657087326049805
    6. '2' → logprob: -6.8407087326049805
    7. 'b' → logprob: -7.0907087326049805
    8. '   ' → logprob: -7.0907087326049805
    9. ' b' → logprob: -7.0907087326049805
    10. ' (' → logprob: -7.2157087326049805

Token 69: 'h' (ID: 71)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.18937374651432037
    2. 'h' → logprob: -2.064373731613159
    3. '2' → logprob: -3.564373731613159
    4. 'b' → logprob: -4.689373970031738
    5. 'vol' → logprob: -5.939373970031738
    6. ' a' → logprob: -6.439373970031738
    7. ' h' → logprob: -7.064373970031738
    8. '(' → logprob: -7.439373970031738
    9. '3' → logprob: -7.939373970031738
    10. '(a' → logprob: -7.939373970031738

Token 70: ' *' (ID: 425)
  Prédit: ' /'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.3557332456111908
    2. '/' → logprob: -1.3557332754135132
    3. ')' → logprob: -3.6057331562042236
    4. '/a' → logprob: -5.230733394622803
    5. '**' → logprob: -5.480733394622803
    6. '*' → logprob: -6.605733394622803
    7. '-' → logprob: -7.105733394622803
    8. ' )' → logprob: -7.230733394622803
    9. ' -' → logprob: -7.355733394622803
    10. ' *' → logprob: -7.855733394622803

Token 71: ' h' (ID: 312)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -1.1272202730178833
    2. 'a' → logprob: -1.2522202730178833
    3. 'h' → logprob: -1.7522202730178833
    4. ' ' → logprob: -3.0022201538085938
    5. ' /' → logprob: -3.1272201538085938
    6. '2' → logprob: -3.2522201538085938
    7. ' h' → logprob: -3.2522201538085938
    8. 'b' → logprob: -4.377220153808594
    9. '/' → logprob: -4.627220153808594
    10. ')' → logprob: -5.252220153808594

Token 72: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.2526901960372925
    2. '+' → logprob: -1.6276901960372925
    3. ')' → logprob: -4.002690315246582
    4. ' -' → logprob: -6.002690315246582
    5. '   ' → logprob: -6.127690315246582
    6. ' /' → logprob: -7.127690315246582
    7. '    ' → logprob: -7.127690315246582
    8. '-' → logprob: -7.502690315246582
    9. ' ' → logprob: -7.627690315246582
    10. '+)' → logprob: -8.502690315246582

Token 73: ' b' (ID: 287)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5788053870201111
    2. ' a' → logprob: -0.8288053870201111
    3. ' b' → logprob: -6.828805446624756
    4. 'b' → logprob: -6.828805446624756
    5. ' ' → logprob: -8.328804969787598
    6. '	a' → logprob: -8.953804969787598
    7. '   ' → logprob: -9.453804969787598
    8. ' (' → logprob: -9.828804969787598
    9. '4' → logprob: -9.953804969787598
    10. '(a' → logprob: -10.328804969787598

Token 74: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.5457607507705688
    2. ' *' → logprob: -1.0457607507705688
    3. '*b' → logprob: -2.7957606315612793
    4. '**' → logprob: -4.920760631561279
    5. 'b' → logprob: -7.670760631561279
    6. '*h' → logprob: -8.670761108398438
    7. ' ' → logprob: -9.170761108398438
    8. '2' → logprob: -11.170761108398438
    9. ' **' → logprob: -11.295761108398438
    10. '   ' → logprob: -11.670761108398438

Token 75: ' b' (ID: 287)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.3157603442668915
    2. '*b' → logprob: -1.9407603740692139
    3. ' *' → logprob: -2.315760374069214
    4. '**' → logprob: -4.690760135650635
    5. '*h' → logprob: -4.815760135650635
    6. 'b' → logprob: -4.940760135650635
    7. '2' → logprob: -5.690760135650635
    8. '*a' → logprob: -8.065760612487793
    9. ' ' → logprob: -8.815760612487793
    10. 'h' → logprob: -10.315760612487793

Token 76: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.22728762030601501
    2. ')**' → logprob: -1.6022876501083374
    3. ' )' → logprob: -6.727287769317627
    4. ' -' → logprob: -7.852287769317627
    5. '-' → logprob: -8.977287292480469
    6. '   ' → logprob: -9.602287292480469
    7. '**' → logprob: -9.852287292480469
    8. ' ' → logprob: -11.602287292480469
    9. '    ' → logprob: -12.477287292480469
    10. '  ' → logprob: -12.602287292480469

Token 77: ' **' (ID: 6240)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.7606669664382935
    2. '**' → logprob: -1.5106669664382935
    3. '-' → logprob: -2.010666847229004
    4. ' **' → logprob: -2.885666847229004
    5. ')**' → logprob: -3.135666847229004
    6. ')' → logprob: -3.385666847229004
    7. ' ' → logprob: -4.135666847229004
    8. '   ' → logprob: -4.385666847229004
    9. ' /' → logprob: -5.510666847229004
    10. '/' → logprob: -5.510666847229004

Token 78: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01420381385833025
    2. ' ' → logprob: -4.264204025268555
    3. '(' → logprob: -10.514204025268555
    4. '.' → logprob: -11.889204025268555
    5. '-' → logprob: -12.514204025268555
    6. ' ' → logprob: -14.139204025268555
    7. ' (' → logprob: -14.264204025268555
    8. '1' → logprob: -14.889204025268555
    9. ' -' → logprob: -15.139204025268555
    10. ' .' → logprob: -15.139204025268555

Token 79: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.1008713702030946e-06
    2. '.' → logprob: -13.625001907348633
    3. ' ' → logprob: -14.250001907348633
    4. '(' → logprob: -15.750001907348633
    5. '-' → logprob: -16.750001907348633
    6. '{' → logprob: -17.250001907348633
    7. '```' → logprob: -18.750001907348633
    8. '1' → logprob: -19.375001907348633
    9. '   ' → logprob: -19.625001907348633
    10. '۰' → logprob: -20.875001907348633

Token 80: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -7.946405094116926e-05
    2. '-' → logprob: -10.125079154968262
    3. '```' → logprob: -11.375079154968262
    4. '.-' → logprob: -11.625079154968262
    5. '5' → logprob: -12.125079154968262
    6. '0' → logprob: -12.375079154968262
    7. '1' → logprob: -13.500079154968262
    8. '-.' → logprob: -14.000079154968262
    9. ' .' → logprob: -14.125079154968262
    10. '`.' → logprob: -14.250079154968262

Token 81: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -4.320199877838604e-07
    2. '```' → logprob: -16.125
    3. '   ' → logprob: -16.875
    4. '.' → logprob: -16.9375
    5. '4' → logprob: -17.625
    6. '0' → logprob: -17.625
    7. '**' → logprob: -18.0
    8. '25' → logprob: -18.0625
    9. 'five' → logprob: -18.375
    10. '  ' → logprob: -18.625

Token 82: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8105267882347107
    2. '       ' → logprob: -0.8105267882347107
    3. '<|end|>' → logprob: -2.4355268478393555
    4. ')' → logprob: -4.3105268478393555
    5. '   ' → logprob: -6.3105268478393555
    6. '\n' → logprob: -6.5605268478393555
    7. 'newline' → logprob: -6.9355268478393555
    8. ',' → logprob: -6.9355268478393555
    9. '<|end|>' → logprob: -6.9355268478393555
    10. ',
' → logprob: -7.9355268478393555

Token 83: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3932630121707916
    2. '       ' → logprob: -1.6432629823684692
    3. ')' → logprob: -2.518263101577759
    4. '\n' → logprob: -4.39326286315918
    5. '   ' → logprob: -4.51826286315918
    6. '    
' → logprob: -4.89326286315918
    7. ' 
' → logprob: -5.01826286315918
    8. ')
' → logprob: -5.89326286315918
    9. '<|end|>' → logprob: -6.14326286315918
    10. '        
' → logprob: -6.51826286315918

Token 84: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05565451458096504
    2. 'return' → logprob: -3.055654525756836
    3. ' return' → logprob: -5.055654525756836
    4. '   ' → logprob: -8.180654525756836
    5. 'angle' → logprob: -8.930654525756836
    6. '           ' → logprob: -9.555654525756836
    7. '```' → logprob: -10.055654525756836
    8. ' ' → logprob: -10.680654525756836
    9. ')' → logprob: -10.805654525756836
    10. ' angle' → logprob: -10.930654525756836

Token 85: ' Simpl' (ID: 92258)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.19017086923122406
    2. '       ' → logprob: -2.1901707649230957
    3. 'return' → logprob: -2.8151707649230957
    4. '   ' → logprob: -7.190170764923096
    5. ' ' → logprob: -9.190171241760254
    6. ' y' → logprob: -9.315171241760254
    7. ' angle' → logprob: -9.315171241760254
    8. '    ' → logprob: -9.440171241760254
    9. '        ' → logprob: -9.690171241760254
    10. ' ' → logprob: -10.440171241760254

Token 86: 'ify' (ID: 1985)
  Prédit: 'ify'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ify' → logprob: -0.002622385509312153
    2. 'if' → logprob: -6.377622604370117
    3. 'ified' → logprob: -8.002622604370117
    4. 'y' → logprob: -8.752622604370117
    5. 'fy' → logprob: -8.752622604370117
    6. '   ' → logprob: -9.502622604370117
    7. 'ifying' → logprob: -10.252622604370117
    8. 'ifye' → logprob: -10.252622604370117
    9. 'e' → logprob: -10.502622604370117
    10. 'ifi' → logprob: -11.002622604370117

Token 87: ' cosa' (ID: 28958)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06531337648630142
    2. 'return' → logprob: -3.3153133392333984
    3. ' return' → logprob: -3.6903133392333984
    4. ')' → logprob: -7.690313339233398
    5. 'angle' → logprob: -7.690313339233398
    6. ' angle' → logprob: -8.315313339233398
    7. '<|end|>' → logprob: -8.690313339233398
    8. '           ' → logprob: -9.440313339233398
    9. 'theta' → logprob: -9.440313339233398
    10. '   ' → logprob: -9.440313339233398

Token 88: ' using' (ID: 2360)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.052518680691719055
    2. '=' → logprob: -3.177518606185913
    3. ' ' → logprob: -5.552518844604492
    4. ')' → logprob: -6.302518844604492
    5. ',' → logprob: -6.927518844604492
    6. '<|end|>' → logprob: -7.302518844604492
    7. '   ' → logprob: -7.427518844604492
    8. '       ' → logprob: -7.677518844604492
    9. 's' → logprob: -8.302518844604492
    10. '  ' → logprob: -8.802518844604492

Token 89: ' only' (ID: 1606)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.2522237002849579
    2. ' b' → logprob: -2.3772237300872803
    3. 'h' → logprob: -2.6272237300872803
    4. '(h' → logprob: -4.002223491668701
    5. ' h' → logprob: -4.627223491668701
    6. ' acos' → logprob: -4.877223491668701
    7. 'hy' → logprob: -5.502223491668701
    8. ' (' → logprob: -5.627223491668701
    9. '(b' → logprob: -5.752223491668701
    10. '(' → logprob: -5.752223491668701

Token 90: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.3204398155212402
    2. ' b' → logprob: -1.3204398155212402
    3. 'h' → logprob: -1.9454398155212402
    4. 'a' → logprob: -2.3204398155212402
    5. ' h' → logprob: -2.5704398155212402
    6. ' a' → logprob: -2.6954398155212402
    7. ' acos' → logprob: -3.6954398155212402
    8. ' the' → logprob: -4.32043981552124
    9. ' math' → logprob: -4.32043981552124
    10. 'hy' → logprob: -4.69543981552124

Token 91: ' and' (ID: 326)
  Prédit: ' /'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.048830803483724594
    2. '/' → logprob: -3.67383074760437
    3. ' ' → logprob: -5.423830986022949
    4. '/h' → logprob: -5.423830986022949
    5. ' /
' → logprob: -5.798830986022949
    6. 'b' → logprob: -6.048830986022949
    7. '<|end|>' → logprob: -6.173830986022949
    8. '[' → logprob: -6.673830986022949
    9. '/b' → logprob: -7.048830986022949
    10. ' *' → logprob: -7.298830986022949

Token 92: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.050958216190338135
    2. ' h' → logprob: -3.0509581565856934
    3. 'hy' → logprob: -6.300958156585693
    4. 'a' → logprob: -8.050958633422852
    5. ' hy' → logprob: -9.050958633422852
    6. ' a' → logprob: -10.675958633422852
    7. '	h' → logprob: -10.800958633422852
    8. 'hx' → logprob: -11.300958633422852
    9. 'b' → logprob: -11.550958633422852
    10. '<|end|>' → logprob: -11.925958633422852

Token 93: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.32322320342063904
    2. 'b' → logprob: -2.073223114013672
    3. ')' → logprob: -3.198223114013672
    4. ',' → logprob: -3.323223114013672
    5. '   ' → logprob: -4.073223114013672
    6. 'h' → logprob: -4.323223114013672
    7. '<|end|>' → logprob: -4.573223114013672
    8. ':' → logprob: -4.948223114013672
    9. 'hy' → logprob: -5.198223114013672
    10. 'c' → logprob: -5.198223114013672

Token 94: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05872620269656181
    2. '   ' → logprob: -3.3087263107299805
    3. ',' → logprob: -5.1837263107299805
    4. 'c' → logprob: -5.1837263107299805
    5. ')' → logprob: -5.6837263107299805
    6. ' ' → logprob: -7.0587263107299805
    7. 'b' → logprob: -7.1837263107299805
    8. '    ' → logprob: -7.4337263107299805
    9. '<|end|>' → logprob: -7.5587263107299805
    10. ':' → logprob: -7.6837263107299805

Token 95: ' cosa' (ID: 28958)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15457651019096375
    2. 'c' → logprob: -2.029576539993286
    3. ' c' → logprob: -5.654576301574707
    4. 'b' → logprob: -6.029576301574707
    5. '           ' → logprob: -6.279576301574707
    6. '```' → logprob: -6.279576301574707
    7. 'h' → logprob: -8.029576301574707
    8. ',' → logprob: -8.154576301574707
    9. ' b' → logprob: -8.654576301574707
    10. '   ' → logprob: -8.779576301574707

Token 96: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.054893676191568375
    2. '=' → logprob: -2.929893732070923
    3. ' ' → logprob: -12.679893493652344
    4. ':' → logprob: -12.929893493652344
    5. '<|end|>' → logprob: -13.179893493652344
    6. ',' → logprob: -13.679893493652344
    7. ' =
' → logprob: -14.054893493652344
    8. ')' → logprob: -15.179893493652344
    9. ' =)' → logprob: -15.304893493652344
    10. '   ' → logprob: -15.429893493652344

Token 97: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.020608458667993546
    2. ' b' → logprob: -4.145608425140381
    3. '(b' → logprob: -6.270608425140381
    4. '   ' → logprob: -6.770608425140381
    5. 'h' → logprob: -7.645608425140381
    6. ' (' → logprob: -7.895608425140381
    7. '(h' → logprob: -8.270608901977539
    8. '       ' → logprob: -8.895608901977539
    9. '	b' → logprob: -9.020608901977539
    10. ' h' → logprob: -10.145608901977539

Token 98: ' /' (ID: 820)
  Prédit: ' /'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.12127768248319626
    2. '/' → logprob: -2.3712775707244873
    3. '/h' → logprob: -3.8712775707244873
    4. ' /
' → logprob: -12.621277809143066
    5. '   ' → logprob: -12.871277809143066
    6. '/(' → logprob: -12.996277809143066
    7. '/b' → logprob: -13.121277809143066
    8. ' ' → logprob: -13.246277809143066
    9. '-' → logprob: -13.996277809143066
    10. '       ' → logprob: -14.121277809143066

Token 99: ' hy' (ID: 7537)
  Prédit: 'hy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hy' → logprob: -6.704273118884885e-07
    2. 'hyp' → logprob: -15.000000953674316
    3. ' hy' → logprob: -15.125000953674316
    4. 'hay' → logprob: -17.5
    5. 'hyr' → logprob: -17.875
    6. 'h' → logprob: -18.25
    7. 'hyde' → logprob: -18.875
    8. '.hy' → logprob: -19.125
    9. 'hyd' → logprob: -19.375
    10. ' ' → logprob: -20.625

Token 100: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08038803935050964
    2. ')' → logprob: -3.205388069152832
    3. '   ' → logprob: -3.955388069152832
    4. '<|end|>' → logprob: -4.205388069152832
    5. 'return' → logprob: -7.455388069152832
    6. '
' → logprob: -8.455388069152832
    7. ' return' → logprob: -8.455388069152832
    8. '           ' → logprob: -8.580388069152832
    9. '<|end|>' → logprob: -8.705388069152832
    10. '     ' → logprob: -8.830388069152832

Token 101: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00385672808624804
    2. ')' → logprob: -6.378856658935547
    3. '   ' → logprob: -7.253856658935547
    4. '\n' → logprob: -7.503856658935547
    5. '<|end|>' → logprob: -8.503856658935547
    6. ' return' → logprob: -8.878856658935547
    7. '
' → logprob: -9.128856658935547
    8. 'return' → logprob: -9.253856658935547
    9. ',' → logprob: -9.753856658935547
    10. '        
' → logprob: -9.753856658935547

Token 102: ' angle' (ID: 16538)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.6523426175117493
    2. '       ' → logprob: -0.9023426175117493
    3. ' return' → logprob: -3.4023425579071045
    4. 'angle' (adapté à ' angle') → logprob: -4.027342796325684
    5. 'theta' → logprob: -4.652342796325684
    6. '   ' → logprob: -4.902342796325684
    7. ')' → logprob: -7.277342796325684
    8. '           ' → logprob: -7.527342796325684
    9. '     ' → logprob: -7.777342796325684
    10. 't' → logprob: -7.777342796325684

Token 103: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.043008897453546524
    2. '=' → logprob: -3.168008804321289
    3. ' ' → logprob: -12.418008804321289
    4. 's' → logprob: -12.668008804321289
    5. '	' → logprob: -14.418008804321289
    6. '   ' → logprob: -14.543008804321289
    7. '  ' → logprob: -14.668008804321289
    8. '_' → logprob: -15.418008804321289
    9. ')' → logprob: -15.668008804321289
    10. 'es' → logprob: -16.04300880432129

Token 104: ' ' (ID: 220)
  Prédit: 'degrees'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'degrees' → logprob: -0.8716694116592407
    2. ' degrees' → logprob: -1.1216694116592407
    3. ' acos' → logprob: -2.121669292449951
    4. 'acos' → logprob: -2.246669292449951
    5. '   ' → logprob: -4.246669292449951
    6. 'atan' → logprob: -4.371669292449951
    7. ' atan' → logprob: -7.121669292449951
    8. ' ' → logprob: -7.871669292449951
    9. '	de' → logprob: -7.871669292449951
    10. '    ' → logprob: -8.30916976928711

Token 105: '90' (ID: 2744)
  Prédit: 'degrees'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'degrees' → logprob: -0.23746147751808167
    2. 'acos' → logprob: -1.8624614477157593
    3. ' degrees' → logprob: -3.862461566925049
    4. 'atan' → logprob: -3.862461566925049
    5. ' acos' → logprob: -4.862461566925049
    6. '   ' → logprob: -5.362461566925049
    7. 'deg' → logprob: -8.73746109008789
    8. '  ' → logprob: -8.73746109008789
    9. 'de' → logprob: -8.98746109008789
    10. ' atan' → logprob: -8.98746109008789

Token 106: ' +' (ID: 659)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.023637456819415092
    2. '-' → logprob: -4.023637294769287
    3. '.' → logprob: -5.273637294769287
    4. ')' → logprob: -9.398637771606445
    5. ' ' → logprob: -9.898637771606445
    6. '*' → logprob: -10.148637771606445
    7. ' *' → logprob: -10.273637771606445
    8. '0' → logprob: -10.273637771606445
    9. '-degree' → logprob: -10.773637771606445
    10. '()' → logprob: -11.148637771606445

Token 107: ' degrees' (ID: 18210)
  Prédit: ' degrees'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' degrees' → logprob: -0.6367237567901611
    2. 'degrees' → logprob: -0.7617237567901611
    3. '   ' → logprob: -6.761723518371582
    4. '-' → logprob: -7.261723518371582
    5. 'int' → logprob: -7.386723518371582
    6. ' -' → logprob: -7.386723518371582
    7. 'atan' → logprob: -8.386723518371582
    8. 'de' → logprob: -8.636723518371582
    9. '-de' → logprob: -8.636723518371582
    10. '	de' → logprob: -9.386723518371582

Token 108: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -8.65707261255011e-06
    2. '(ac' → logprob: -12.375008583068848
    3. ' (' → logprob: -12.625008583068848
    4. '(
' → logprob: -14.500008583068848
    5. '((' → logprob: -15.625008583068848
    6. '('' → logprob: -16.875009536743164
    7. '(at' → logprob: -16.875009536743164
    8. '```' → logprob: -16.875009536743164
    9. '("("' → logprob: -17.250009536743164
    10. '(

' → logprob: -17.250009536743164

Token 109: 'acos' (ID: 50078)
  Prédit: 'acos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acos' → logprob: -0.0029383599758148193
    2. ' acos' → logprob: -6.252938270568848
    3. 'atan' → logprob: -7.252938270568848
    4. '   ' → logprob: -8.877938270568848
    5. '(' → logprob: -9.002938270568848
    6. 'asin' → logprob: -11.127938270568848
    7. 'acet' → logprob: -12.502938270568848
    8. '  ' → logprob: -13.002938270568848
    9. 'acom' → logprob: -13.127938270568848
    10. ' ' → logprob: -13.127938270568848

Token 110: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.0018702136585488915
    2. '(' → logprob: -6.376870155334473
    3. ' (' → logprob: -9.001870155334473
    4. 'c' → logprob: -10.501870155334473
    5. ')c' → logprob: -12.251870155334473
    6. '()' → logprob: -12.876870155334473
    7. ')' → logprob: -12.876870155334473
    8. '((' → logprob: -13.376870155334473
    9. ')(' → logprob: -13.626870155334473
    10. ' ' → logprob: -13.751870155334473

Token 111: 'osa' (ID: 6935)
  Prédit: 'osa'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'osa' → logprob: -3.7697225252486533e-06
    2. 'оса' → logprob: -13.875003814697266
    3. 'os' → logprob: -14.000003814697266
    4. 'onsa' → logprob: -14.375003814697266
    5. ')' → logprob: -14.875003814697266
    6. 'sa' → logprob: -15.250003814697266
    7. 'osaic' → logprob: -15.875003814697266
    8. ' osa' → logprob: -16.125003814697266
    9. 'ossa' → logprob: -16.250003814697266
    10. 'ona' → logprob: -16.500003814697266

Token 112: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.003121152287349105
    2. ')' → logprob: -6.378121376037598
    3. ' ))' → logprob: -6.628121376037598
    4. ')))' → logprob: -10.378121376037598
    5. ' )' → logprob: -10.753121376037598
    6. '))
' → logprob: -10.753121376037598
    7. '   ' → logprob: -11.503121376037598
    8. ' ' → logprob: -12.128121376037598
    9. '()))' → logprob: -13.253121376037598
    10. '       ' → logprob: -13.503121376037598

Token 113: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08781878650188446
    2. ' else' → logprob: -3.8378188610076904
    3. '\n' → logprob: -3.9628188610076904
    4. '
' → logprob: -4.337818622589111
    5. '<|end|>' → logprob: -4.462818622589111
    6. 'else' → logprob: -5.462818622589111
    7. '       ' → logprob: -5.712818622589111
    8. ')' → logprob: -5.837818622589111
    9. '\' → logprob: -6.462818622589111
    10. '    
' → logprob: -6.837818622589111

Token 114: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8006351590156555
    2. ' else' → logprob: -0.8006351590156555
    3. 'else' (adapté à ' else') → logprob: -2.3006350994110107
    4. '	else' → logprob: -6.42563533782959
    5. '<|end|>' → logprob: -10.30063533782959
    6. ')' → logprob: -11.05063533782959
    7. '    
' → logprob: -11.67563533782959
    8. '
' → logprob: -12.05063533782959
    9. '```' → logprob: -12.17563533782959
    10. ':' → logprob: -12.67563533782959

Token 115: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0011170001234859228
    2. ':
' → logprob: -6.87611722946167
    3. '       ' → logprob: -9.501116752624512
    4. ' :' → logprob: -12.376116752624512
    5. '   ' → logprob: -13.001116752624512
    6. '<|end|>' → logprob: -14.376116752624512
    7. ':
' → logprob: -14.501116752624512
    8. ':

' → logprob: -15.501116752624512
    9. ':return' → logprob: -15.501116752624512
    10. '{' → logprob: -15.501116752624512

Token 116: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006153396097943187
    2. 'h' → logprob: -8.250615119934082
    3. ' h' → logprob: -8.250615119934082
    4. '```' → logprob: -10.125615119934082
    5. '   ' → logprob: -11.250615119934082
    6. ' x' → logprob: -11.375615119934082
    7. 'x' → logprob: -12.375615119934082
    8. 'vol' → logprob: -12.875615119934082
    9. '           ' → logprob: -13.250615119934082
    10. 'space' → logprob: -13.375615119934082

Token 117: ' empty' (ID: 8213)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.2253129780292511
    2. '       ' → logprob: -1.9753129482269287
    3. ' h' → logprob: -3.4753129482269287
    4. 'x' → logprob: -5.350313186645508
    5. 'y' → logprob: -5.600313186645508
    6. 'vol' → logprob: -5.850313186645508
    7. 'hx' → logprob: -5.975313186645508
    8. 'angle' → logprob: -6.475313186645508
    9. 'hy' → logprob: -6.475313186645508
    10. 'v' → logprob: -6.787813186645508

Token 118: '_height' (ID: 21576)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.24925930798053741
    2. '_vol' → logprob: -2.3742592334747314
    3. '_volume' → logprob: -2.7492592334747314
    4. '=' → logprob: -4.2492594718933105
    5. '_space' → logprob: -4.3742594718933105
    6. '_' → logprob: -4.7492594718933105
    7. 'vol' → logprob: -5.1242594718933105
    8. '_height' → logprob: -5.4992594718933105
    9. 'space' → logprob: -5.4992594718933105
    10. '_h' → logprob: -5.8742594718933105

Token 119: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07004036009311676
    2. '=' → logprob: -2.695040464401245
    3. ' ' → logprob: -9.320040702819824
    4. '   ' → logprob: -11.570040702819824
    5. '  ' → logprob: -13.820040702819824
    6. 's' → logprob: -13.945040702819824
    7. ',' → logprob: -14.445040702819824
    8. 't' → logprob: -14.570040702819824
    9. ' ' → logprob: -15.570040702819824
    10. '    ' → logprob: -15.632540702819824

Token 120: ' ' (ID: 220)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.6383723616600037
    2. ' (' → logprob: -1.6383724212646484
    3. ' b' → logprob: -2.3883724212646484
    4. '(b' → logprob: -2.7633724212646484
    5. '(' → logprob: -3.3883724212646484
    6. 'vol' → logprob: -3.5133724212646484
    7. '2' → logprob: -4.013372421264648
    8. ' ' → logprob: -4.388372421264648
    9. '(vol' → logprob: -4.638372421264648
    10. ' vol' → logprob: -5.263372421264648

Token 121: '2' (ID: 17)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.32452964782714844
    2. '2' → logprob: -2.4495296478271484
    3. '(b' → logprob: -2.8245296478271484
    4. 'vol' → logprob: -2.9495296478271484
    5. '(' → logprob: -3.0745296478271484
    6. 'a' → logprob: -4.449529647827148
    7. '(vol' → logprob: -4.449529647827148
    8. '3' → logprob: -5.824529647827148
    9. '(a' → logprob: -6.324529647827148
    10. '(x' → logprob: -7.199529647827148

Token 122: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.4810485243797302
    2. ' *' → logprob: -0.9810485243797302
    3. '*(' → logprob: -4.981048583984375
    4. '   ' → logprob: -10.481048583984375
    5. ' ' → logprob: -10.856048583984375
    6. '*((' → logprob: -12.106048583984375
    7. '.' → logprob: -12.606048583984375
    8. '/' → logprob: -12.606048583984375
    9. ' *(' → logprob: -12.856048583984375
    10. ':' → logprob: -12.981048583984375

Token 123: ' (' (ID: 350)
  Prédit: '(vol'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(vol' → logprob: -0.8793336153030396
    2. '(x' → logprob: -1.0043336153030396
    3. '(' → logprob: -2.37933349609375
    4. '(b' → logprob: -2.50433349609375
    5. '(a' → logprob: -3.87933349609375
    6. ' (' → logprob: -4.62933349609375
    7. '(v' → logprob: -5.00433349609375
    8. '(abs' → logprob: -5.12933349609375
    9. '(h' → logprob: -8.37933349609375
    10. '((' → logprob: -8.62933349609375

Token 124: 'vol' (ID: 2978)
  Prédit: 'vol'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vol' → logprob: -0.019474707543849945
    2. '(vol' → logprob: -4.269474506378174
    3. 'x' → logprob: -6.269474506378174
    4. 'b' → logprob: -6.769474506378174
    5. '(' → logprob: -7.269474506378174
    6. ' vol' → logprob: -7.644474506378174
    7. '(x' → logprob: -8.144474983215332
    8. 'a' → logprob: -8.644474983215332
    9. 'half' → logprob: -9.019474983215332
    10. '(b' → logprob: -9.144474983215332

Token 125: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.3147878348827362
    2. '-' → logprob: -1.3147878646850586
    3. ' /' → logprob: -7.564787864685059
    4. ' ' → logprob: -7.939787864685059
    5. '/' → logprob: -8.439787864685059
    6. ')' → logprob: -8.689787864685059
    7. '   ' → logprob: -8.939787864685059
    8. '-x' → logprob: -9.439787864685059
    9. '  ' → logprob: -11.314787864685059
    10. 'x' → logprob: -11.564787864685059

Token 126: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.06196891888976097
    2. ' x' → logprob: -2.8119688034057617
    3. ' ' → logprob: -14.436968803405762
    4. '	x' → logprob: -15.186968803405762
    5. '(x' → logprob: -15.311968803405762
    6. '   ' → logprob: -16.311969757080078
    7. ')x' → logprob: -16.436969757080078
    8. '<|end|>' → logprob: -17.936969757080078
    9. ')' → logprob: -18.061969757080078
    10. ''x' → logprob: -18.311969757080078

Token 127: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005475530633702874
    2. ' )' → logprob: -7.750547409057617
    3. '   ' → logprob: -10.000547409057617
    4. '/' → logprob: -11.000547409057617
    5. ')/' → logprob: -11.000547409057617
    6. ' ' → logprob: -11.250547409057617
    7. ' /' → logprob: -11.625547409057617
    8. ')/(' → logprob: -12.000547409057617
    9. '       ' → logprob: -12.375547409057617
    10. '    ' → logprob: -14.000547409057617

Token 128: ' /' (ID: 820)
  Prédit: ' /'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.18631862103939056
    2. '/' → logprob: -1.8113186359405518
    3. '       ' → logprob: -5.186318397521973
    4. '/(' → logprob: -7.436318397521973
    5. ' ' → logprob: -9.186318397521973
    6. '   ' → logprob: -9.686318397521973
    7. ' /(' → logprob: -9.811318397521973
    8. ')' → logprob: -10.186318397521973
    9. '/h' → logprob: -10.311318397521973
    10. '        ' → logprob: -11.561318397521973

Token 129: ' (' (ID: 350)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.03404916822910309
    2. ' (' → logprob: -3.4090492725372314
    3. '(' → logprob: -8.784049034118652
    4. '(b' → logprob: -9.159049034118652
    5. '(ab' → logprob: -9.534049034118652
    6. '(A' → logprob: -9.784049034118652
    7. 'b' → logprob: -12.159049034118652
    8. '(abs' → logprob: -12.409049034118652
    9. '(area' → logprob: -13.784049034118652
    10. '(v' → logprob: -14.034049034118652

Token 130: 'a' (ID: 64)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.015421802178025246
    2. ' (' → logprob: -4.6404218673706055
    3. 'a' → logprob: -5.2654218673706055
    4. '(' → logprob: -7.7654218673706055
    5. ')' → logprob: -11.265421867370605
    6. '(A' → logprob: -11.515421867370605
    7. ' a' → logprob: -11.640421867370605
    8. 'b' → logprob: -11.765421867370605
    9. '(b' → logprob: -12.015421867370605
    10. '   ' → logprob: -12.390421867370605

Token 131: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.2241317480802536
    2. '*' → logprob: -2.0991318225860596
    3. '*b' → logprob: -2.5991318225860596
    4. 'b' → logprob: -6.4741315841674805
    5. ' ' → logprob: -6.5991315841674805
    6. ')' → logprob: -7.8491315841674805
    7. ' b' → logprob: -8.09913158416748
    8. '**' → logprob: -9.47413158416748
    9. ' (' → logprob: -9.84913158416748
    10. '   ' → logprob: -10.09913158416748

Token 132: ' a' (ID: 261)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.01277250051498413
    2. ' b' → logprob: -4.512772560119629
    3. '(b' → logprob: -6.637772560119629
    4. ' (' → logprob: -8.512772560119629
    5. 'a' → logprob: -8.762772560119629
    6. '(' → logprob: -11.012772560119629
    7. '   ' → logprob: -11.262772560119629
    8. '(a' → logprob: -11.637772560119629
    9. ' a' → logprob: -12.512772560119629
    10. '	b' → logprob: -12.762772560119629

Token 133: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.10087236762046814
    2. ')' → logprob: -2.350872278213501
    3. ')
' → logprob: -7.60087251663208
    4. ' )
' → logprob: -9.225872039794922
    5. ')

' → logprob: -10.225872039794922
    6. '       ' → logprob: -11.225872039794922
    7. '   ' → logprob: -11.850872039794922
    8. ' )' → logprob: -12.475872039794922
    9. 'b' → logprob: -13.475872039794922
    10. 'def' → logprob: -13.475872039794922

Token 134: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18908406794071198
    2. 'c' → logprob: -2.564084053039551
    3. 'angle' → logprob: -3.189084053039551
    4. 'hy' → logprob: -3.564084053039551
    5. '
' → logprob: -3.939084053039551
    6. 'cos' → logprob: -6.314084053039551
    7. 'h' → logprob: -6.564084053039551
    8. '        
' → logprob: -8.18908405303955
    9. ' angle' → logprob: -8.18908405303955
    10. 'theta' → logprob: -8.18908405303955

Token 135: ' angle' (ID: 16538)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.1272362321615219
    2. 'cos' → logprob: -3.2522361278533936
    3. 'angle' (adapté à ' angle') → logprob: -3.3772361278533936
    4. ' cosa' → logprob: -4.377236366271973
    5. '   ' → logprob: -4.752236366271973
    6. 'ch' → logprob: -4.752236366271973
    7. 'theta' → logprob: -5.502236366271973
    8. ' angle' → logprob: -6.377236366271973
    9. '       ' → logprob: -6.627236366271973
    10. 'tan' → logprob: -7.002236366271973

Token 136: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04858794063329697
    2. '=' → logprob: -3.0485880374908447
    3. ' ' → logprob: -14.923587799072266
    4. '   ' → logprob: -16.048587799072266
    5. ')' → logprob: -18.173587799072266
    6. '	' → logprob: -18.298587799072266
    7. '＝' → logprob: -18.423587799072266
    8. '    ' → logprob: -18.673587799072266
    9. 's' → logprob: -19.048587799072266
    10. ',' → logprob: -19.173587799072266

Token 137: ' degrees' (ID: 18210)
  Prédit: 'degrees'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'degrees' → logprob: -0.21043354272842407
    2. ' degrees' → logprob: -1.7104334831237793
    3. '90' → logprob: -5.210433483123779
    4. '   ' → logprob: -6.710433483123779
    5. 'atan' → logprob: -6.710433483123779
    6. ' ' → logprob: -8.210433959960938
    7. '  ' → logprob: -8.335433959960938
    8. 'de' → logprob: -8.710433959960938
    9. '    ' → logprob: -9.085433959960938
    10. '       ' → logprob: -9.585433959960938

Token 138: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -7.584239938296378e-06
    2. '(at' → logprob: -12.375007629394531
    3. ' (' → logprob: -13.875007629394531
    4. '(math' → logprob: -14.125007629394531
    5. 'atan' → logprob: -14.250007629394531
    6. '(ac' → logprob: -15.375007629394531
    7. '.atan' → logprob: -15.625007629394531
    8. '   ' → logprob: -15.750007629394531
    9. '((' → logprob: -16.25000762939453
    10. '	' → logprob: -16.50000762939453

Token 139: 'atan' (ID: 8294)
  Prédit: 'atan'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atan' → logprob: -0.0061164903454482555
    2. '   ' → logprob: -5.3811163902282715
    3. ' atan' → logprob: -6.8811163902282715
    4. 'acos' → logprob: -8.50611686706543
    5. ')' → logprob: -9.38111686706543
    6. '.atan' → logprob: -10.13111686706543
    7. ' ' → logprob: -10.13111686706543
    8. '       ' → logprob: -10.75611686706543
    9. '  ' → logprob: -10.75611686706543
    10. ' acos' → logprob: -11.63111686706543

Token 140: '(empty' (ID: 56323)
  Prédit: '(empty'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(empty' → logprob: -0.02872324176132679
    2. '(b' → logprob: -4.278723239898682
    3. '((' → logprob: -4.528723239898682
    4. '(' → logprob: -6.153723239898682
    5. ' (' → logprob: -6.653723239898682
    6. '2' → logprob: -9.40372371673584
    7. 'empty' → logprob: -9.77872371673584
    8. 'b' → logprob: -10.02872371673584
    9. '(blank' → logprob: -10.90372371673584
    10. ' ((' → logprob: -11.40372371673584

Token 141: '_height' (ID: 21576)
  Prédit: '_height'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_height' → logprob: -0.0017077792435884476
    2. 'height' → logprob: -6.626707553863525
    3. '((' → logprob: -8.876708030700684
    4. '(height' → logprob: -9.251708030700684
    5. '(' → logprob: -10.376708030700684
    6. '(_' → logprob: -10.501708030700684
    7. ')' → logprob: -11.126708030700684
    8. '\' → logprob: -11.626708030700684
    9. ' (' → logprob: -11.626708030700684
    10. '   ' → logprob: -12.001708030700684

Token 142: '))
' (ID: 2210)
  Prédit: ' /'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.024876397103071213
    2. '/' → logprob: -4.149876594543457
    3. '/b' → logprob: -4.774876594543457
    4. ')' → logprob: -8.274876594543457
    5. '))' → logprob: -9.774876594543457
    6. 'b' → logprob: -11.024876594543457
    7. '(b' → logprob: -11.524876594543457
    8. '/a' → logprob: -11.774876594543457
    9. ' ' → logprob: -12.024876594543457
    10. '   ' → logprob: -12.399876594543457

Token 143: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0012086842907592654
    2. ' return' → logprob: -7.626208782196045
    3. '
' → logprob: -8.001208305358887
    4. 'return' → logprob: -8.126208305358887
    5. '	return' → logprob: -9.751208305358887
    6. '    
' → logprob: -10.626208305358887
    7. '<|end|>' → logprob: -12.876208305358887
    8. '       ' → logprob: -13.376208305358887
    9. '
' → logprob: -14.626208305358887
    10. ' 
' → logprob: -14.751208305358887

Token 144: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010223237797617912
    2. ' return' → logprob: -4.760223388671875
    3. 'return' (adapté à ' return') → logprob: -6.510223388671875
    4. '
' → logprob: -9.510223388671875
    5. '	return' → logprob: -10.510223388671875
    6. '    
' → logprob: -11.260223388671875
    7. '<|end|>' → logprob: -13.385223388671875
    8. '       ' → logprob: -14.510223388671875
    9. ' ' → logprob: -14.510223388671875
    10. ' 
' → logprob: -14.760223388671875

Token 145: ' angle' (ID: 16538)
  Prédit: 'angle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'angle' → logprob: -0.01815052703022957
    2. ' angle' → logprob: -4.018150329589844
    3. '(angle' → logprob: -14.393150329589844
    4. 'round' → logprob: -17.143150329589844
    5. 'float' → logprob: -17.768150329589844
    6. ' round' → logprob: -18.643150329589844
    7. 'abs' → logprob: -18.768150329589844
    8. '   ' → logprob: -18.768150329589844
    9. ' ' → logprob: -19.393150329589844
    10. ' float' → logprob: -20.143150329589844

Token 146: '

' (ID: 279)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.23710426688194275
    2. '<|end|>' → logprob: -1.7371042966842651
    3. '(' → logprob: -3.6121041774749756
    4. '\n' → logprob: -5.737104415893555
    5. '```' → logprob: -6.862104415893555
    6. '\' → logprob: -7.362104415893555
    7. '<|end|>' → logprob: -7.362104415893555
    8. '}' → logprob: -7.487104415893555
    9. '#' → logprob: -7.862104415893555
    10. '.' → logprob: -8.112104415893555

Token 147: 'print' (ID: 1598)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.38698890805244446
    2. '<|end|>' → logprob: -1.386988878250122
    3. '\n' → logprob: -2.886988878250122
    4. '
' → logprob: -5.261989116668701
    5. '<|end|>' → logprob: -5.886989116668701
    6. '(' → logprob: -6.011989116668701
    7. '```' → logprob: -6.761989116668701
    8. ':' → logprob: -7.011989116668701
    9. '}' → logprob: -7.261989116668701
    10. '\' → logprob: -8.136988639831543

Token 148: '(com' (ID: 27868)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00010700009443098679
    2. '(print' → logprob: -9.875106811523438
    3. '('' → logprob: -10.625106811523438
    4. '(
' → logprob: -11.875106811523438
    5. ' (' → logprob: -12.000106811523438
    6. '()' → logprob: -12.375106811523438
    7. '("("' → logprob: -12.375106811523438
    8. '(

' → logprob: -13.500106811523438
    9. '(com' → logprob: -13.750106811523438
    10. '((' → logprob: -13.875106811523438

Token 149: 'pute' (ID: 13605)
  Prédit: 'pute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pute' → logprob: -0.0005649457452818751
    2. 'put' → logprob: -7.500565052032471
    3. 'ute' → logprob: -11.750564575195312
    4. 'pte' → logprob: -13.375564575195312
    5. 'pt' → logprob: -14.375564575195312
    6. 'putate' → logprob: -14.375564575195312
    7. '_put' → logprob: -14.500564575195312
    8. 'p' → logprob: -14.875564575195312
    9. 'plete' → logprob: -15.625564575195312
    10. '```' → logprob: -16.625564575195312

Token 150: '_angle' (ID: 51505)
  Prédit: '_angle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_angle' → logprob: -2.463036435074173e-05
    2. '_' → logprob: -11.000024795532227
    3. '(' → logprob: -12.250024795532227
    4. ')' → logprob: -14.500024795532227
    5. '_angles' → logprob: -14.500024795532227
    6. '(angle' → logprob: -14.750024795532227
    7. '(_' → logprob: -15.125024795532227
    8. 'Angle' → logprob: -15.250024795532227
    9. '_)' → logprob: -15.375024795532227
    10. '_a' → logprob: -15.500024795532227

Token 151: '(*' (ID: 9000)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0021397899836301804
    2. '((' → logprob: -7.002139568328857
    3. '()' → logprob: -7.252139568328857
    4. '())' → logprob: -8.752140045166016
    5. '(()' → logprob: -8.752140045166016
    6. ')' → logprob: -9.627140045166016
    7. '(a' → logprob: -9.627140045166016
    8. ' (' → logprob: -10.752140045166016
    9. '(`' → logprob: -11.627140045166016
    10. '(
' → logprob: -12.127140045166016

Token 152: 'map' (ID: 3726)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5313385725021362
    2. '[' → logprob: -1.0313385725021362
    3. 'map' → logprob: -3.031338691711426
    4. '(map' → logprob: -5.531338691711426
    5. ' map' → logprob: -6.906338691711426
    6. ' (' → logprob: -7.156338691711426
    7. ')' → logprob: -7.406338691711426
    8. 'input' → logprob: -8.031338691711426
    9. ' [' → logprob: -8.906338691711426
    10. '[input' → logprob: -9.031338691711426

Token 153: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.000251326389843598
    2. '(' → logprob: -9.250251770019531
    3. 'int' → logprob: -9.375251770019531
    4. '(float' → logprob: -10.125251770019531
    5. '(input' → logprob: -11.375251770019531
    6. '(str' → logprob: -11.500251770019531
    7. '```' → logprob: -13.125251770019531
    8. '(lambda' → logprob: -13.625251770019531
    9. '(eval' → logprob: -13.625251770019531
    10. '[int' → logprob: -13.875251770019531

Token 154: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.1706041395664215
    2. 'input' → logprob: -1.9206041097640991
    3. ',input' → logprob: -4.670604228973389
    4. ' input' → logprob: -7.670604228973389
    5. '(' → logprob: -7.795604228973389
    6. ',' → logprob: -10.04560375213623
    7. '```' → logprob: -10.79560375213623
    8. '('' → logprob: -12.17060375213623
    9. '(
' → logprob: -12.92060375213623
    10. '=input' → logprob: -13.17060375213623

Token 155: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0011873723706230521
    2. ' input' → logprob: -6.751187324523926
    3. '(input' → logprob: -11.001187324523926
    4. '```' → logprob: -15.876187324523926
    5. '	input' → logprob: -16.001188278198242
    6. ',input' → logprob: -16.126188278198242
    7. 'open' → logprob: -16.751188278198242
    8. '=input' → logprob: -17.126188278198242
    9. '_input' → logprob: -17.876188278198242
    10. '[input' → logprob: -18.376188278198242

Token 156: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00043805985478684306
    2. '()' → logprob: -7.750438213348389
    3. '()))' → logprob: -12.62543773651123
    4. 'split' → logprob: -13.50043773651123
    5. ' ().' → logprob: -14.12543773651123
    6. '())))' → logprob: -14.75043773651123
    7. 'input' → logprob: -15.00043773651123
    8. '()
' → logprob: -15.12543773651123
    9. '()`' → logprob: -15.87543773651123
    10. '().__' → logprob: -16.125438690185547

Token 157: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.001178439473733306
    2. 'strip' → logprob: -6.75117826461792
    3. 'read' → logprob: -13.126178741455078
    4. '(split' → logprob: -13.126178741455078
    5. 'rstrip' → logprob: -13.126178741455078
    6. ' split' → logprob: -13.626178741455078
    7. '().' → logprob: -14.001178741455078
    8. '.split' → logprob: -16.251178741455078
    9. '(strip' → logprob: -17.751178741455078
    10. '_split' → logprob: -18.376178741455078

Token 158: '())))' (ID: 168342)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.21101342141628265
    2. '())))' → logprob: -1.7110134363174438
    3. '()' → logprob: -4.961013317108154
    4. '())' → logprob: -6.336013317108154
    5. '())))
' → logprob: -7.961013317108154
    6. '()))
' → logprob: -8.586013793945312
    7. ')))' → logprob: -8.961013793945312
    8. '))' → logprob: -9.836013793945312
    9. '()));' → logprob: -10.586013793945312
    10. '(' → logprob: -11.336013793945312


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 156
Tokens correctement prédits (1ère position, stricte): 56
Tokens correctement prédits (1ère position, avec adaptation): 57
Tokens correctement prédits (top 10): 123
Précision stricte (1ère position): 35.90%
Précision adaptée (1ère position): 36.54%
Précision (top 10): 78.85%
================================================================================
