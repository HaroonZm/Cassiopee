================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:03:51
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import itertools
import sys
import math
from functools import lru_cache
from queue import Queue
from operator import mul
from functools import reduce

input = sys.stdin.readline

x, y, z, kk = map(int, input().split())

a = list(map(int, input().split()))
b = list(map(int, input().split()))
c = list(map(int, input().split()))

a.sort(reverse=True)
b.sort(reverse=True)
c.sort(reverse=True)

ll = []
for i in range(len(a)):
    for j in range(len(b)):
        if i * j > kk:
            break
        for k in range(len(c)):
            if i * j * k > kk:
                break
            ll.append(a[i] + b[j] + c[k])
ll.sort(reverse=True)

for i in range(kk):
    print(ll[i])
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' itertools' (ID: 103178)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -1.9862216504407115e-05
    2. '```' → logprob: -12.625020027160645
    3. 'import' → logprob: -13.250020027160645
    4. '."""' → logprob: -13.500020027160645
    5. '\' → logprob: -13.625020027160645
    6. ' .' → logprob: -13.750020027160645
    7. '.

' → logprob: -13.750020027160645
    8. '\.' → logprob: -13.875020027160645
    9. '​.' → logprob: -14.125020027160645
    10. '.`' → logprob: -14.125020027160645

Token 4: ' sys' (ID: 12228)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.771233320236206
    2. ' sys' → logprob: -1.146233320236206
    3. ' os' → logprob: -1.896233320236206
    4. ' collections' → logprob: -3.271233320236206
    5. ' functools' → logprob: -3.896233320236206
    6. 'os' → logprob: -5.896233558654785
    7. ' operator' → logprob: -6.271233558654785
    8. 'math' → logprob: -6.271233558654785
    9. 'sys' → logprob: -6.896233558654785
    10. 'collections' → logprob: -7.021233558654785

Token 5: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.07184483855962753
    2. '\n' → logprob: -3.4468448162078857
    3. '\' → logprob: -3.9468448162078857
    4. '```' → logprob: -5.321845054626465
    5. '
' → logprob: -5.696845054626465
    6. 'import' → logprob: -5.821845054626465
    7. '

' → logprob: -6.446845054626465
    8. ',' → logprob: -6.696845054626465
    9. '<|end|>' → logprob: -7.321845054626465
    10. '[' → logprob: -7.446845054626465

Token 6: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.07533849775791168
    2. '\n' → logprob: -3.32533860206604
    3. '```' → logprob: -4.200338363647461
    4. '\' → logprob: -5.200338363647461
    5. 'import' → logprob: -5.950338363647461
    6. '
' → logprob: -6.200338363647461
    7. ',' → logprob: -6.200338363647461
    8. '[' → logprob: -6.325338363647461
    9. 'newline' → logprob: -6.325338363647461
    10. '<|end|>' → logprob: -6.825338363647461

Token 7: ' math' (ID: 13324)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.04921184107661247
    2. 'os' → logprob: -3.0492117404937744
    3. ' collections' → logprob: -7.6742119789123535
    4. ' math' → logprob: -9.299211502075195
    5. 'collections' → logprob: -10.049211502075195
    6. ' io' → logprob: -12.174211502075195
    7. ' functools' → logprob: -12.299211502075195
    8. 'math' → logprob: -12.424211502075195
    9. ' re' → logprob: -12.924211502075195
    10. ' argparse' → logprob: -13.424211502075195

Token 8: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.029032345861196518
    2. '
' → logprob: -5.279032230377197
    3. '

' → logprob: -5.404032230377197
    4. '\n' → logprob: -5.404032230377197
    5. '```' → logprob: -5.654032230377197
    6. '\' → logprob: -5.779032230377197
    7. '<|end|>' → logprob: -6.029032230377197
    8. '(' → logprob: -6.529032230377197
    9. ',' → logprob: -7.029032230377197
    10. '<|end|>' → logprob: -7.154032230377197

Token 9: 'from' (ID: 2845)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.9108415246009827
    2. '.' → logprob: -1.160841464996338
    3. '\' → logprob: -2.160841464996338
    4. '```' → logprob: -2.910841464996338
    5. '
' → logprob: -3.410841464996338
    6. '<|end|>' → logprob: -3.785841464996338
    7. '

' → logprob: -4.535841464996338
    8. ',' → logprob: -4.660841464996338
    9. 'def' → logprob: -4.660841464996338
    10. 'import' → logprob: -4.660841464996338

Token 10: ' functools' (ID: 142636)
  Prédit: ' collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.4540348947048187
    2. 'collections' → logprob: -1.0790349245071411
    3. ' typing' → logprob: -5.079034805297852
    4. ' fractions' → logprob: -5.079034805297852
    5. ' functools' → logprob: -5.704034805297852
    6. 'typing' → logprob: -6.454034805297852
    7. 'os' → logprob: -6.579034805297852
    8. 'fra' → logprob: -6.829034805297852
    9. ' operator' → logprob: -6.829034805297852
    10. ' statistics' → logprob: -6.954034805297852

Token 11: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.009846041910350323
    2. 'import' → logprob: -4.634846210479736
    3. ' ' → logprob: -10.134845733642578
    4. '.' → logprob: -10.384845733642578
    5. '_import' → logprob: -12.134845733642578
    6. '	import' → logprob: -12.134845733642578
    7. '_' → logprob: -13.134845733642578
    8. '<|end|>' → logprob: -13.259845733642578
    9. ' ' → logprob: -13.509845733642578
    10. ' .' → logprob: -14.134845733642578

Token 12: ' l' (ID: 305)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.9170640110969543
    2. ' l' → logprob: -1.1670639514923096
    3. ' reduce' → logprob: -1.6670639514923096
    4. 'l' → logprob: -2.7920639514923096
    5. ' wraps' → logprob: -4.167064189910889
    6. 'wrap' → logprob: -4.792064189910889
    7. 'partial' → logprob: -4.917064189910889
    8. ' partial' → logprob: -4.917064189910889
    9. 'redu' → logprob: -9.41706371307373
    10. ' ' → logprob: -9.54206371307373

Token 13: 'ru' (ID: 1942)
  Prédit: 'ru'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ru' → logprob: -3.249780638725497e-05
    2. 'u' → logprob: -12.000032424926758
    3. 'ambda' → logprob: -12.000032424926758
    4. 'r' → logprob: -12.125032424926758
    5. 'a' → logprob: -12.625032424926758
    6. 'amb' → logprob: -12.875032424926758
    7. 'ruz' → logprob: -12.875032424926758
    8. 'z' → logprob: -13.625032424926758
    9. 'reduce' → logprob: -13.875032424926758
    10. 'partial' → logprob: -14.500032424926758

Token 14: '_cache' (ID: 27045)
  Prédit: '_cache'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cache' → logprob: -0.02996118552982807
    2. 'c' → logprob: -4.279961109161377
    3. '_c' → logprob: -4.654961109161377
    4. 'cache' → logprob: -5.279961109161377
    5. '_' → logprob: -7.029961109161377
    6. 'ca' → logprob: -10.154961585998535
    7. 't' → logprob: -10.654961585998535
    8. 'che' → logprob: -10.779961585998535
    9. '_ca' → logprob: -10.904961585998535
    10. '_cached' → logprob: -10.904961585998535

Token 15: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.7390802502632141
    2. '\' → logprob: -1.2390801906585693
    3. '
' → logprob: -2.1140801906585693
    4. '

' → logprob: -3.2390801906585693
    5. '@' → logprob: -3.9890801906585693
    6. 'def' → logprob: -4.364080429077148
    7. 'import' → logprob: -4.614080429077148
    8. '```' → logprob: -4.739080429077148
    9. '' → logprob: -4.989080429077148
    10. '#' → logprob: -5.489080429077148

Token 16: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7884463667869568
    2. '\n' → logprob: -2.0384464263916016
    3. '

' → logprob: -2.2884464263916016
    4. '\' → logprob: -2.6634464263916016
    5. 'def' → logprob: -2.6634464263916016
    6. '' → logprob: -2.6634464263916016
    7. 'd' → logprob: -3.6634464263916016
    8. '```' → logprob: -3.6634464263916016
    9. '#' → logprob: -3.9134464263916016
    10. 'import' → logprob: -4.788446426391602

Token 17: ' queue' (ID: 13661)
  Prédit: ' collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.7645512223243713
    2. ' operator' → logprob: -1.1395511627197266
    3. 'collections' → logprob: -2.3895511627197266
    4. ' typing' → logprob: -2.3895511627197266
    5. 'operator' → logprob: -3.8895511627197266
    6. 'typing' → logprob: -5.764551162719727
    7. ' itertools' → logprob: -5.764551162719727
    8. ' ' → logprob: -6.139551162719727
    9. ' random' → logprob: -7.889551162719727
    10. ' math' → logprob: -8.139551162719727

Token 18: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.016953418031334877
    2. 'import' → logprob: -4.141953468322754
    3. '.' → logprob: -8.016953468322754
    4. ' ' → logprob: -8.141953468322754
    5. '<|end|>' → logprob: -8.266953468322754
    6. '	import' → logprob: -10.641953468322754
    7. '<|end|>' → logprob: -12.766953468322754
    8. '_import' → logprob: -13.016953468322754
    9. ' im' → logprob: -13.391953468322754
    10. ' impor' → logprob: -13.391953468322754

Token 19: ' Queue' (ID: 35581)
  Prédit: ' Priority'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Priority' → logprob: -0.024776382371783257
    2. ' Queue' → logprob: -3.7747764587402344
    3. 'Priority' → logprob: -6.649776458740234
    4. ' Simple' → logprob: -9.274776458740234
    5. '.Priority' → logprob: -9.774776458740234
    6. 'Queue' → logprob: -10.149776458740234
    7. ' deque' → logprob: -10.274776458740234
    8. '```' → logprob: -12.024776458740234
    9. '.Queue' → logprob: -13.024776458740234
    10. ' priority' → logprob: -14.274776458740234

Token 20: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.40304821729660034
    2. '

' → logprob: -1.6530482769012451
    3. '\n' → logprob: -2.528048276901245
    4. '<|end|>' → logprob: -3.778048276901245
    5. 'import' → logprob: -4.403048038482666
    6. '#' → logprob: -4.528048038482666
    7. '' → logprob: -5.528048038482666
    8. '\' → logprob: -5.528048038482666
    9. '```' → logprob: -6.278048038482666
    10. '<|end|>' → logprob: -7.403048038482666

Token 21: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1351417899131775
    2. '

' → logprob: -2.3851418495178223
    3. '\n' → logprob: -4.010141849517822
    4. '#' → logprob: -5.010141849517822
    5. 'import' → logprob: -5.635141849517822
    6. 'class' → logprob: -6.135141849517822
    7. 'n' → logprob: -7.260141849517822
    8. '<|end|>' → logprob: -7.510141849517822
    9. '' → logprob: -7.635141849517822
    10. '```' → logprob: -7.760141849517822

Token 22: ' operator' (ID: 11019)
  Prédit: ' collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.8939973711967468
    2. 'collections' → logprob: -1.1439974308013916
    3. ' threading' → logprob: -1.5189974308013916
    4. ' multiprocessing' → logprob: -3.3939974308013916
    5. 'heap' → logprob: -4.7689971923828125
    6. 'thread' → logprob: -5.3939971923828125
    7. 'multip' → logprob: -5.7689971923828125
    8. ' typing' → logprob: -6.6439971923828125
    9. ' heap' → logprob: -6.7689971923828125
    10. 'typing' → logprob: -8.143997192382812

Token 23: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.026396676898002625
    2. 'import' → logprob: -3.6513967514038086
    3. ' ' → logprob: -10.276396751403809
    4. '<|end|>' → logprob: -10.401396751403809
    5. '	import' → logprob: -11.151396751403809
    6. '.' → logprob: -11.651396751403809
    7. '_import' → logprob: -13.276396751403809
    8. ' as' → logprob: -13.526396751403809
    9. ' Import' → logprob: -14.026396751403809
    10. '  ' → logprob: -14.026396751403809

Token 24: ' mul' (ID: 9975)
  Prédit: ' item'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' item' → logprob: -0.33580726385116577
    2. 'item' → logprob: -1.3358073234558105
    3. ' add' → logprob: -4.7108073234558105
    4. 'add' → logprob: -5.5858073234558105
    5. ' attr' → logprob: -6.2108073234558105
    6. ' mul' → logprob: -6.2108073234558105
    7. 'mul' → logprob: -6.5858073234558105
    8. ' import' → logprob: -6.7108073234558105
    9. ' is' → logprob: -7.2108073234558105
    10. 'attr' → logprob: -7.2108073234558105

Token 25: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3477039933204651
    2. 'import' → logprob: -1.8477039337158203
    3. 'from' → logprob: -3.4727039337158203
    4. '
' → logprob: -3.4727039337158203
    5. '\n' → logprob: -3.8477039337158203
    6. '<|end|>' → logprob: -4.34770393371582
    7. '' → logprob: -4.72270393371582
    8. ',
' → logprob: -4.72270393371582
    9. '

' → logprob: -5.47270393371582
    10. '#' → logprob: -5.47270393371582

Token 26: 'from' (ID: 2845)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.2425605058670044
    2. '
' → logprob: -1.4925605058670044
    3. 'import' → logprob: -1.8675605058670044
    4. '<|end|>' → logprob: -2.242560386657715
    5. '\n' → logprob: -2.492560386657715
    6. '#' → logprob: -2.867560386657715
    7. ' ' → logprob: -4.117560386657715
    8. '

' → logprob: -4.242560386657715
    9. 'n' → logprob: -4.867560386657715
    10. '' → logprob: -5.117560386657715

Token 27: ' functools' (ID: 142636)
  Prédit: ' itertools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.6487762331962585
    2. ' functools' → logprob: -0.7737762331962585
    3. 'operator' → logprob: -4.898776054382324
    4. ' operator' → logprob: -5.773776054382324
    5. 'fun' → logprob: -6.023776054382324
    6. '_' → logprob: -7.648776054382324
    7. ' math' → logprob: -7.773776054382324
    8. ' ' → logprob: -7.898776054382324
    9. 'math' → logprob: -8.023776054382324
    10. 'it' → logprob: -8.273776054382324

Token 28: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.10470268130302429
    2. 'import' → logprob: -2.3547027111053467
    3. ' ' → logprob: -5.979702472686768
    4. '_import' → logprob: -6.604702472686768
    5. '_' → logprob: -8.479702949523926
    6. ' _' → logprob: -8.729702949523926
    7. '.' → logprob: -8.979702949523926
    8. '	import' → logprob: -9.979702949523926
    9. '.import' → logprob: -11.479702949523926
    10. ' .' → logprob: -11.729702949523926

Token 29: ' reduce' (ID: 10389)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.0016830360982567072
    2. ' reduce' → logprob: -6.501683235168457
    3. 'partial' → logprob: -9.251683235168457
    4. 'redu' → logprob: -10.001683235168457
    5. 'wrap' → logprob: -10.751683235168457
    6. 'import' → logprob: -11.751683235168457
    7. 'cache' → logprob: -13.001683235168457
    8. '.reduce' → logprob: -13.251683235168457
    9. '_reduce' → logprob: -13.251683235168457
    10. 'red' → logprob: -14.126683235168457

Token 30: '

' (ID: 279)
  Prédit: '

'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.5297861695289612
    2. '
' → logprob: -1.0297861099243164
    3. '\n' → logprob: -3.6547861099243164
    4. '#' → logprob: -4.904786109924316
    5. 'import' → logprob: -4.904786109924316
    6. 'def' → logprob: -5.779786109924316
    7. '\' → logprob: -6.279786109924316
    8. '' → logprob: -6.654786109924316
    9. '<|end|>' → logprob: -6.654786109924316
    10. 'n' → logprob: -7.029786109924316

Token 31: 'input' (ID: 2586)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8967196345329285
    2. 'd' → logprob: -1.3967196941375732
    3. '#' → logprob: -1.5217196941375732
    4. '
' → logprob: -2.8967196941375732
    5. '\' → logprob: -3.6467196941375732
    6. 'n' → logprob: -4.271719455718994
    7. '@' → logprob: -4.896719455718994
    8. '\n' → logprob: -4.896719455718994
    9. 'a' → logprob: -5.896719455718994
    10. '

' → logprob: -6.146719455718994

Token 32: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00032259183353744447
    2. '.' → logprob: -8.875322341918945
    3. ' (' → logprob: -9.750322341918945
    4. '('' → logprob: -10.500322341918945
    5. '()' → logprob: -10.625322341918945
    6. ')' → logprob: -10.875322341918945
    7. '(
' → logprob: -11.625322341918945
    8. '("("' → logprob: -12.125322341918945
    9. '(

' → logprob: -12.375322341918945
    10. ' ' → logprob: -12.500322341918945

Token 33: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.15611624717712402
    2. 'sys' → logprob: -2.031116247177124
    3. 'input' → logprob: -4.906116485595703
    4. ' input' → logprob: -5.156116485595703
    5. ' lambda' → logprob: -9.281116485595703
    6. 'lambda' → logprob: -10.406116485595703
    7. ' iter' → logprob: -10.906116485595703
    8. ' ' → logprob: -11.531116485595703
    9. ' raw' → logprob: -11.656116485595703
    10. 'raw' → logprob: -11.656116485595703

Token 34: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.022595824673771858
    2. '.stdin' → logprob: -3.8975958824157715
    3. '.readline' → logprob: -6.5225958824157715
    4. '.input' → logprob: -8.772595405578613
    5. ' .' → logprob: -8.772595405578613
    6. '.stdout' → logprob: -9.397595405578613
    7. '.read' → logprob: -10.022595405578613
    8. '.import' → logprob: -10.147595405578613
    9. '.argv' → logprob: -10.647595405578613
    10. '.setdefault' → logprob: -11.647595405578613

Token 35: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.35333722829818726
    2. '.' → logprob: -1.228337287902832
    3. '.read' → logprob: -5.353337287902832
    4. 'read' → logprob: -9.103337287902832
    5. '.readlines' → logprob: -10.978337287902832
    6. '.Read' → logprob: -12.228337287902832
    7. ' readline' → logprob: -12.603337287902832
    8. '.\' → logprob: -13.103337287902832
    9. '.write' → logprob: -13.228337287902832
    10. '<|end|>' → logprob: -13.728337287902832

Token 36: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6188256144523621
    2. '(' → logprob: -1.4938256740570068
    3. '()' → logprob: -2.618825674057007
    4. '
' → logprob: -2.993825674057007
    5. '

' → logprob: -3.243825674057007
    6. '(
' → logprob: -3.993825674057007
    7. '()

' → logprob: -4.493825435638428
    8. '\' → logprob: -4.618825435638428
    9. '\n' → logprob: -4.868825435638428
    10. '#' → logprob: -5.243825435638428

Token 37: 'x' (ID: 87)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.30864784121513367
    2. 'n' → logprob: -1.558647871017456
    3. 'class' → logprob: -3.058647871017456
    4. '
' → logprob: -6.183647632598877
    5. '

' → logprob: -6.433647632598877
    6. '@' → logprob: -6.558647632598877
    7. '#' → logprob: -7.183647632598877
    8. '\n' → logprob: -7.183647632598877
    9. '\' → logprob: -7.433647632598877
    10. 'd' → logprob: -8.183648109436035

Token 38: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6984586715698242
    2. '[' → logprob: -2.073458671569824
    3. '=' → logprob: -2.323458671569824
    4. ' =' → logprob: -2.323458671569824
    5. '(' → logprob: -3.073458671569824
    6. ' ' → logprob: -3.198458671569824
    7. ',' → logprob: -3.698458671569824
    8. '+' → logprob: -4.448458671569824
    9. '_' → logprob: -4.448458671569824
    10. 's' → logprob: -4.448458671569824

Token 39: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.11307422816753387
    2. ' y' → logprob: -2.23807430267334
    3. ' ' → logprob: -8.98807430267334
    4. '=' → logprob: -9.36307430267334
    5. ' =' → logprob: -10.48807430267334
    6. '_y' → logprob: -13.36307430267334
    7. 'x' → logprob: -13.48807430267334
    8. 'n' → logprob: -13.61307430267334
    9. ',y' → logprob: -13.73807430267334
    10. 'space' → logprob: -14.11307430267334

Token 40: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22726406157016754
    2. '=' → logprob: -1.6022640466690063
    3. ',' → logprob: -6.477263927459717
    4. ' ' → logprob: -8.227264404296875
    5. ' ,' → logprob: -10.727264404296875
    6. ')' → logprob: -12.102264404296875
    7. '<|end|>' → logprob: -12.477264404296875
    8. ' =
' → logprob: -12.727264404296875
    9. '  ' → logprob: -13.602264404296875
    10. '.' → logprob: -13.977264404296875

Token 41: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.5141534805297852
    2. ' z' → logprob: -1.6391534805297852
    3. '=' → logprob: -2.014153480529785
    4. ' =' → logprob: -2.889153480529785
    5. ' ' → logprob: -4.139153480529785
    6. 'n' → logprob: -7.889153480529785
    7. ',z' → logprob: -7.889153480529785
    8. 'x' → logprob: -8.014153480529785
    9. ',' → logprob: -8.264153480529785
    10. '_' → logprob: -8.264153480529785

Token 42: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08097495138645172
    2. '=' → logprob: -3.08097505569458
    3. ',' → logprob: -3.45597505569458
    4. ' ,' → logprob: -8.455974578857422
    5. ' ' → logprob: -9.830974578857422
    6. ' =
' → logprob: -10.580974578857422
    7. '<|end|>' → logprob: -11.705974578857422
    8. ')' → logprob: -12.330974578857422
    9. '  ' → logprob: -13.830974578857422
    10. '=

' → logprob: -14.205974578857422

Token 43: ' kk' (ID: 76595)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9788756370544434
    2. 'w' → logprob: -1.1038756370544434
    3. '=' → logprob: -1.8538756370544434
    4. 'n' → logprob: -2.9788756370544434
    5. ' ' → logprob: -3.6038756370544434
    6. 'a' → logprob: -3.9788756370544434
    7. ' w' → logprob: -4.353875637054443
    8. 'k' → logprob: -4.603875637054443
    9. 't' → logprob: -5.103875637054443
    10. ' n' → logprob: -6.353875637054443

Token 44: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5761582851409912
    2. '=' → logprob: -0.8261582851409912
    3. ',' → logprob: -8.45115852355957
    4. ' ' → logprob: -12.57615852355957
    5. ' =
' → logprob: -15.32615852355957
    6. '=input' → logprob: -15.45115852355957
    7. '＝' → logprob: -15.57615852355957
    8. '  ' → logprob: -15.95115852355957
    9. ' ,' → logprob: -15.95115852355957
    10. '=

' → logprob: -15.95115852355957

Token 45: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.4287338852882385
    2. ' map' → logprob: -1.0537338256835938
    3. 'm' → logprob: -11.928733825683594
    4. '[' → logprob: -12.303733825683594
    5. 'input' → logprob: -12.553733825683594
    6. ' ' → logprob: -12.553733825683594
    7. '	map' → logprob: -12.678733825683594
    8. 'list' → logprob: -12.678733825683594
    9. ' list' → logprob: -13.553733825683594
    10. '0' → logprob: -13.678733825683594

Token 46: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.30450722575187683
    2. '(int' → logprob: -1.4295072555541992
    3. '(input' → logprob: -3.929507255554199
    4. '(lambda' → logprob: -5.929507255554199
    5. '(str' → logprob: -7.429507255554199
    6. '(
' → logprob: -9.6795072555542
    7. '(eval' → logprob: -11.0545072555542
    8. '(float' → logprob: -11.1795072555542
    9. '(bool' → logprob: -11.9295072555542
    10. '()' → logprob: -12.0545072555542

Token 47: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5574515461921692
    2. '(' → logprob: -1.1824514865875244
    3. '(input' → logprob: -2.1824514865875244
    4. ',' → logprob: -5.3074517250061035
    5. '()' → logprob: -6.8074517250061035
    6. 'input' → logprob: -7.4324517250061035
    7. '(x' → logprob: -7.6824517250061035
    8. ',input' → logprob: -8.432451248168945
    9. ')(' → logprob: -8.932451248168945
    10. '(
' → logprob: -9.432451248168945

Token 48: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.06199188902974129
    2. ' input' → logprob: -2.8119919300079346
    3. ')' → logprob: -11.186991691589355
    4. '(input' → logprob: -12.311991691589355
    5. ',input' → logprob: -13.061991691589355
    6. ' ' → logprob: -13.936991691589355
    7. '=input' → logprob: -14.061991691589355
    8. 'sys' → logprob: -14.436991691589355
    9. '	input' → logprob: -14.686991691589355
    10. ' )' → logprob: -15.061991691589355

Token 49: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.09805958718061447
    2. '())' → logprob: -2.59805965423584
    3. '()' → logprob: -3.97305965423584
    4. ')' → logprob: -9.22305965423584
    5. '()))' → logprob: -10.72305965423584
    6. '());' → logprob: -11.47305965423584
    7. '(' → logprob: -11.97305965423584
    8. '();)' → logprob: -11.97305965423584
    9. '()
' → logprob: -12.09805965423584
    10. ' ())' → logprob: -12.47305965423584

Token 50: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.014428500086069107
    2. 'strip' → logprob: -4.264428615570068
    3. 'rstrip' → logprob: -8.26442813873291
    4. 'read' → logprob: -12.88942813873291
    5. '().' → logprob: -12.88942813873291
    6. ' split' → logprob: -13.38942813873291
    7. ')' → logprob: -15.01442813873291
    8. '(split' → logprob: -15.13942813873291
    9. 'spl' → logprob: -15.76442813873291
    10. ' strip' → logprob: -17.139429092407227

Token 51: '())

' (ID: 27654)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01575501635670662
    2. '))' → logprob: -4.7657551765441895
    3. '())' → logprob: -5.0157551765441895
    4. '()' → logprob: -7.7657551765441895
    5. ')))' → logprob: -11.265754699707031
    6. '(' → logprob: -11.515754699707031
    7. '()))' → logprob: -11.765754699707031
    8. '),' → logprob: -11.765754699707031
    9. ' )' → logprob: -12.765754699707031
    10. '`)' → logprob: -12.890754699707031

Token 52: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.06980680674314499
    2. 'A' → logprob: -3.4448068141937256
    3. 'x' → logprob: -3.5698068141937256
    4. 'X' → logprob: -6.0698065757751465
    5. 'abc' → logprob: -6.1948065757751465
    6. 'list' → logprob: -7.3198065757751465
    7. 'dp' → logprob: -7.5698065757751465
    8. 'p' → logprob: -7.6948065757751465
    9. 'arr' → logprob: -8.069807052612305
    10. 'lst' → logprob: -8.819807052612305

Token 53: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.27410125732421875
    2. 's' → logprob: -2.5241012573242188
    3. '_' → logprob: -3.0241012573242188
    4. '1' → logprob: -3.1491012573242188
    5. ',' → logprob: -3.2741012573242188
    6. '_list' → logprob: -4.149101257324219
    7. '=' → logprob: -4.899101257324219
    8. ' ,' → logprob: -6.399101257324219
    9. '_lst' → logprob: -7.024101257324219
    10. ' ' → logprob: -7.274101257324219

Token 54: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.04611143842339516
    2. ' list' → logprob: -4.046111583709717
    3. '[]' → logprob: -4.296111583709717
    4. 'sorted' → logprob: -5.296111583709717
    5. '[' → logprob: -5.421111583709717
    6. '[list' → logprob: -5.546111583709717
    7. ' [' → logprob: -8.671111106872559
    8. '[int' → logprob: -8.671111106872559
    9. ' []' → logprob: -9.296111106872559
    10. ' sorted' → logprob: -9.921111106872559

Token 55: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.31958243250846863
    2. '(' → logprob: -1.319582462310791
    3. '()' → logprob: -5.319582462310791
    4. '(int' → logprob: -6.694582462310791
    5. '(range' → logprob: -9.819581985473633
    6. '(a' → logprob: -9.819581985473633
    7. '(input' → logprob: -11.194581985473633
    8. 'map' → logprob: -11.819581985473633
    9. '(

' → logprob: -12.069581985473633
    10. '(m' → logprob: -12.319581985473633

Token 56: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00318353995680809
    2. '(' → logprob: -5.753183364868164
    3. '[int' → logprob: -13.253183364868164
    4. 'int' → logprob: -14.003183364868164
    5. '(in' → logprob: -14.253183364868164
    6. '<int' → logprob: -14.628183364868164
    7. ',int' → logprob: -14.878183364868164
    8. '(str' → logprob: -14.878183364868164
    9. '(input' → logprob: -15.003183364868164
    10. '=int' → logprob: -15.128183364868164

Token 57: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5767467021942139
    2. ',input' → logprob: -0.8267467021942139
    3. '(input' → logprob: -7.326746940612793
    4. 'input' → logprob: -9.701746940612793
    5. '(' → logprob: -9.951746940612793
    6. '(),' → logprob: -10.451746940612793
    7. ' ,' → logprob: -12.076746940612793
    8. ',(' → logprob: -13.451746940612793
    9. '=input' → logprob: -14.326746940612793
    10. ',int' → logprob: -14.576746940612793

Token 58: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.20141743123531342
    2. ' input' → logprob: -1.7014174461364746
    3. '(input' → logprob: -12.951416969299316
    4. ' ' → logprob: -14.076416969299316
    5. '	input' → logprob: -14.951416969299316
    6. '=input' → logprob: -15.076416969299316
    7. ',input' → logprob: -16.076417922973633
    8. ')' → logprob: -16.451417922973633
    9. '_input' → logprob: -16.951417922973633
    10. '[input' → logprob: -17.701417922973633

Token 59: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0001860174525063485
    2. '()' → logprob: -8.6251859664917
    3. ')' → logprob: -13.3751859664917
    4. '.' → logprob: -13.5001859664917
    5. ' ().' → logprob: -13.6251859664917
    6. '(' → logprob: -14.2501859664917
    7. '().__' → logprob: -14.6251859664917
    8. '())' → logprob: -15.2501859664917
    9. '()-' → logprob: -16.250186920166016
    10. '()).' → logprob: -16.375186920166016

Token 60: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -3.7697225252486533e-06
    2. 'strip' → logprob: -13.375003814697266
    3. 'spl' → logprob: -14.000003814697266
    4. '(split' → logprob: -14.250003814697266
    5. ' split' → logprob: -14.875003814697266
    6. 'rstrip' → logprob: -15.250003814697266
    7. ')' → logprob: -17.625003814697266
    8. 'read' → logprob: -18.125003814697266
    9. 'plit' → logprob: -18.250003814697266
    10. 's' → logprob: -18.875003814697266

Token 61: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.2787165939807892
    2. '())' → logprob: -2.153716564178467
    3. '))' → logprob: -2.528716564178467
    4. ')' → logprob: -3.528716564178467
    5. '()' → logprob: -4.403716564178467
    6. '(' → logprob: -5.153716564178467
    7. '()));' → logprob: -11.028717041015625
    8. '()),' → logprob: -11.403717041015625
    9. '()))
' → logprob: -11.653717041015625
    10. '())))' → logprob: -12.278717041015625

Token 62: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -6.718606891809031e-05
    2. ' b' → logprob: -9.625066757202148
    3. '<|end|>' → logprob: -15.000066757202148
    4. '  
' → logprob: -15.250066757202148
    5. ' 
' → logprob: -15.625066757202148
    6. '```' → logprob: -16.12506675720215
    7. '
' → logprob: -16.12506675720215
    8. 'a' → logprob: -16.25006675720215
    9. '	b' → logprob: -17.12506675720215
    10. ' ' → logprob: -17.50006675720215

Token 63: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.048587825149297714
    2. '=' → logprob: -3.0485877990722656
    3. ')' → logprob: -16.173587799072266
    4. ' ' → logprob: -16.298587799072266
    5. ' =)' → logprob: -16.548587799072266
    6. ',' → logprob: -16.798587799072266
    7. '.' → logprob: -17.173587799072266
    8. '＝' → logprob: -17.173587799072266
    9. 's' → logprob: -17.548587799072266
    10. ' )' → logprob: -17.923587799072266

Token 64: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.127308651804924
    2. 'list' → logprob: -2.1273086071014404
    3. '(list' → logprob: -7.8773088455200195
    4. '=list' → logprob: -13.75230884552002
    5. '	list' → logprob: -16.002307891845703
    6. 'List' → logprob: -17.252307891845703
    7. ':list' → logprob: -17.877307891845703
    8. '_list' → logprob: -18.502307891845703
    9. '.list' → logprob: -18.752307891845703
    10. 'ist' → logprob: -18.752307891845703

Token 65: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.023532193154096603
    2. '(' → logprob: -3.7735321521759033
    3. '(int' → logprob: -9.148531913757324
    4. ' (' → logprob: -9.398531913757324
    5. '(list' → logprob: -10.648531913757324
    6. 'map' → logprob: -10.648531913757324
    7. ',map' → logprob: -11.773531913757324
    8. '(
' → logprob: -11.898531913757324
    9. '(mapped' → logprob: -12.148531913757324
    10. '.map' → logprob: -12.273531913757324

Token 66: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0005582740413956344
    2. '(' → logprob: -7.500558376312256
    3. '<int' → logprob: -13.250557899475098
    4. 'int' → logprob: -13.375557899475098
    5. '=int' → logprob: -14.500557899475098
    6. '(in' → logprob: -14.750557899475098
    7. ',int' → logprob: -15.000557899475098
    8. '[int' → logprob: -15.125557899475098
    9. ']int' → logprob: -15.625557899475098
    10. ' (' → logprob: -15.750557899475098

Token 67: ',' (ID: 11)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.006196472328156233
    2. ',int' → logprob: -5.75619649887085
    3. 'int' → logprob: -6.00619649887085
    4. ',' → logprob: -7.88119649887085
    5. '=int' → logprob: -9.006196022033691
    6. '<int' → logprob: -10.506196022033691
    7. '[int' → logprob: -11.756196022033691
    8. ' int' → logprob: -12.131196022033691
    9. '(' → logprob: -12.131196022033691
    10. ']int' → logprob: -13.881196022033691

Token 68: ' input' (ID: 3422)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0016374544939026237
    2. ' int' → logprob: -6.7516374588012695
    3. 'input' → logprob: -7.7516374588012695
    4. ' input' → logprob: -10.87663745880127
    5. '(int' → logprob: -11.00163745880127
    6. '[int' → logprob: -13.75163745880127
    7. '<int' → logprob: -15.12663745880127
    8. '(input' → logprob: -16.251636505126953
    9. '=int' → logprob: -16.876636505126953
    10. ',int' → logprob: -17.501636505126953

Token 69: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -5.676981345459353e-06
    2. '()' → logprob: -12.250005722045898
    3. '.' → logprob: -14.625005722045898
    4. '(' → logprob: -15.125005722045898
    5. ' ().' → logprob: -17.1250057220459
    6. '(.' → logprob: -17.2500057220459
    7. '()).' → logprob: -17.7500057220459
    8. '().__' → logprob: -17.7500057220459
    9. '().'' → logprob: -18.7500057220459
    10. '())' → logprob: -19.0000057220459

Token 70: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.981667537620524e-06
    2. 'spl' → logprob: -14.125001907348633
    3. '.split' → logprob: -15.250001907348633
    4. 's' → logprob: -15.375001907348633
    5. 'read' → logprob: -15.750001907348633
    6. '().' → logprob: -15.875001907348633
    7. '(split' → logprob: -16.250001907348633
    8. 'sys' → logprob: -16.500001907348633
    9. ' split' → logprob: -16.625001907348633
    10. ').' → logprob: -16.625001907348633

Token 71: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.21365928649902344
    2. '))' → logprob: -1.9636592864990234
    3. '())' → logprob: -3.2136592864990234
    4. ')' → logprob: -4.838659286499023
    5. '()' → logprob: -5.588659286499023
    6. '(' → logprob: -9.838659286499023
    7. '()));' → logprob: -9.838659286499023
    8. '()))
' → logprob: -10.463659286499023
    9. ''))' → logprob: -12.338659286499023
    10. '())).' → logprob: -12.588659286499023

Token 72: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -9.253090865968261e-06
    2. ' c' → logprob: -11.625009536743164
    3. 'import' → logprob: -16.750009536743164
    4. '```' → logprob: -17.000009536743164
    5. '_c' → logprob: -17.375009536743164
    6. '
' → logprob: -17.875009536743164
    7. 'C' → logprob: -18.125009536743164
    8. '	c' → logprob: -18.375009536743164
    9. 'from' → logprob: -18.375009536743164
    10. ')c' → logprob: -18.625009536743164

Token 73: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47407856583595276
    2. '=' → logprob: -0.9740785360336304
    3. '(' → logprob: -14.724078178405762
    4. '＝' → logprob: -14.724078178405762
    5. ')' → logprob: -15.099078178405762
    6. ',' → logprob: -15.974078178405762
    7. ' ' → logprob: -16.599079132080078
    8. 's' → logprob: -16.724079132080078
    9. '=list' → logprob: -16.724079132080078
    10. ' =)' → logprob: -16.974079132080078

Token 74: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.01823633536696434
    2. 'list' → logprob: -4.26823616027832
    3. '(list' → logprob: -5.51823616027832
    4. '=list' → logprob: -9.89323616027832
    5. '.list' → logprob: -14.64323616027832
    6. '	list' → logprob: -15.26823616027832
    7. ':list' → logprob: -15.26823616027832
    8. '(' → logprob: -16.01823616027832
    9. '_list' → logprob: -17.01823616027832
    10. '$list' → logprob: -17.51823616027832

Token 75: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.047861941158771515
    2. '(' → logprob: -3.2978620529174805
    3. '(list' → logprob: -5.2978620529174805
    4. '(int' → logprob: -5.4228620529174805
    5. ' (' → logprob: -8.29786205291748
    6. 'map' → logprob: -10.42286205291748
    7. '```' → logprob: -11.29786205291748
    8. '(tuple' → logprob: -11.92286205291748
    9. '(max' → logprob: -12.04786205291748
    10. ',map' → logprob: -12.04786205291748

Token 76: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -6.480199954239652e-05
    2. 'int' → logprob: -9.875064849853516
    3. '=int' → logprob: -12.125064849853516
    4. '<int' → logprob: -12.750064849853516
    5. ',int' → logprob: -12.750064849853516
    6. ']int' → logprob: -14.250064849853516
    7. '[int' → logprob: -14.250064849853516
    8. '(' → logprob: -14.375064849853516
    9. ':int' → logprob: -16.375064849853516
    10. ' int' → logprob: -16.750064849853516

Token 77: ',' (ID: 11)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.002194279106333852
    2. ',int' → logprob: -6.877194404602051
    3. 'int' → logprob: -7.127194404602051
    4. ',' → logprob: -8.25219440460205
    5. '=int' → logprob: -9.62719440460205
    6. '(' → logprob: -11.50219440460205
    7. '<int' → logprob: -11.75219440460205
    8. '[int' → logprob: -12.37719440460205
    9. ')' → logprob: -12.87719440460205
    10. ':int' → logprob: -13.12719440460205

Token 78: ' input' (ID: 3422)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.26644083857536316
    2. 'input' → logprob: -1.5164408683776855
    3. ' input' → logprob: -4.2664408683776855
    4. ' int' → logprob: -8.141440391540527
    5. '(input' → logprob: -9.516440391540527
    6. '(int' → logprob: -11.766440391540527
    7. '[int' → logprob: -13.766440391540527
    8. '<int' → logprob: -14.516440391540527
    9. '=input' → logprob: -15.266440391540527
    10. '<input' → logprob: -15.641440391540527

Token 79: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0006980192265473306
    2. '.' → logprob: -7.375698089599609
    3. '()' → logprob: -9.75069808959961
    4. '(' → logprob: -12.37569808959961
    5. '(.' → logprob: -12.87569808959961
    6. ').' → logprob: -13.00069808959961
    7. ')' → logprob: -13.12569808959961
    8. ' .' → logprob: -13.75069808959961
    9. '())' → logprob: -15.75069808959961
    10. '.split' → logprob: -16.25069808959961

Token 80: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -2.5941604690160602e-05
    2. '.split' → logprob: -11.000025749206543
    3. '(split' → logprob: -12.875025749206543
    4. '```' → logprob: -13.250025749206543
    5. '().' → logprob: -13.375025749206543
    6. 'spl' → logprob: -13.375025749206543
    7. ' split' → logprob: -14.375025749206543
    8. 's' → logprob: -14.500025749206543
    9. 'strip' → logprob: -15.750025749206543
    10. ').' → logprob: -15.875025749206543

Token 81: '()))

' (ID: 125972)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07974552363157272
    2. '())' → logprob: -2.8297455310821533
    3. '()' → logprob: -4.704745292663574
    4. '))' → logprob: -4.829745292663574
    5. '()))' → logprob: -7.579745292663574
    6. '(' → logprob: -9.954745292663574
    7. ' )' → logprob: -11.829745292663574
    8. '）' → logprob: -12.329745292663574
    9. '])' → logprob: -12.829745292663574
    10. ')))' → logprob: -14.204745292663574

Token 82: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.008333359844982624
    2. 'abc' → logprob: -5.758333206176758
    3. 'd' → logprob: -6.133333206176758
    4. 'import' → logprob: -7.383333206176758
    5. 'result' → logprob: -8.383333206176758
    6. '.' → logprob: -8.508333206176758
    7. 'q' → logprob: -8.508333206176758
    8. '#' → logprob: -8.633333206176758
    9. 'results' → logprob: -8.758333206176758
    10. 'all' → logprob: -8.758333206176758

Token 83: '.sort' (ID: 19551)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.3518885374069214
    2. '.sort' → logprob: -1.2268885374069214
    3. '=' → logprob: -6.476888656616211
    4. '[' → logprob: -7.476888656616211
    5. '[:]' → logprob: -7.851888656616211
    6. ' =' → logprob: -7.976888656616211
    7. ',' → logprob: -7.976888656616211
    8. '_sorted' → logprob: -8.726888656616211
    9. 'sort' → logprob: -10.601888656616211
    10. '[:' → logprob: -11.601888656616211

Token 84: '(reverse' (ID: 110806)
  Prédit: '(reverse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(reverse' → logprob: -0.15757246315479279
    2. '()' → logprob: -2.7825725078582764
    3. 'reverse' → logprob: -2.7825725078582764
    4. '(' → logprob: -4.157572269439697
    5. '.reverse' → logprob: -5.407572269439697
    6. 'a' → logprob: -6.907572269439697
    7. '_reverse' → logprob: -8.407572746276855
    8. '[::-' → logprob: -8.407572746276855
    9. '()
' → logprob: -9.032572746276855
    10. '(
' → logprob: -9.407572746276855

Token 85: '=True' (ID: 7827)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.6833829879760742
    2. ')' → logprob: -1.1833829879760742
    3. '()' → logprob: -1.6833829879760742
    4. '=True' → logprob: -6.683382987976074
    5. '(' → logprob: -7.058382987976074
    6. '(True' → logprob: -7.183382987976074
    7. '())
' → logprob: -10.058382987976074
    8. '()
' → logprob: -10.058382987976074
    9. ' ())' → logprob: -11.058382987976074
    10. '(),' → logprob: -11.183382987976074

Token 86: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.961759259458631e-06
    2. ' )' → logprob: -12.625004768371582
    3. ')
' → logprob: -13.625004768371582
    4. ')a' → logprob: -15.125004768371582
    5. '),' → logprob: -17.1250057220459
    6. '))' → logprob: -17.6250057220459
    7. '()' → logprob: -18.0000057220459
    8. ')b' → logprob: -18.1250057220459
    9. 'a' → logprob: -18.2500057220459
    10. ')

' → logprob: -18.2500057220459

Token 87: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -4.11996734328568e-05
    2. ' b' → logprob: -10.125041007995605
    3. ',' → logprob: -14.875041007995605
    4. ' 
' → logprob: -15.125041007995605
    5. '```' → logprob: -15.500041007995605
    6. ',b' → logprob: -15.750041007995605
    7. '  
' → logprob: -16.125041961669922
    8. 'a' → logprob: -17.250041961669922
    9. '<|end|>' → logprob: -17.375041961669922
    10. '[' → logprob: -17.500041961669922

Token 88: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.01827051118016243
    2. '.' → logprob: -4.018270492553711
    3. '.reverse' → logprob: -9.518270492553711
    4. ' .' → logprob: -10.143270492553711
    5. '.s' → logprob: -12.393270492553711
    6. '.sorted' → logprob: -13.893270492553711
    7. '.setdefault' → logprob: -14.893270492553711
    8. ').' → logprob: -15.018270492553711
    9. 'sort' → logprob: -15.143270492553711
    10. ' =' → logprob: -15.268270492553711

Token 89: '(reverse' (ID: 110806)
  Prédit: '(reverse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(reverse' → logprob: -0.023449400439858437
    2. '()' → logprob: -3.773449420928955
    3. '(True' → logprob: -9.023448944091797
    4. '(' → logprob: -10.023448944091797
    5. 'reverse' → logprob: -11.148448944091797
    6. '()(' → logprob: -11.148448944091797
    7. '(False' → logprob: -12.023448944091797
    8. '(inplace' → logprob: -14.148448944091797
    9. '(re' → logprob: -14.398448944091797
    10. '(true' → logprob: -14.648448944091797

Token 90: '=True' (ID: 7827)
  Prédit: '=True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=True' → logprob: -0.006346207577735186
    2. '()' → logprob: -5.631346225738525
    3. '())' → logprob: -6.631346225738525
    4. '=' → logprob: -6.631346225738525
    5. '()==' → logprob: -10.006345748901367
    6. '(True' → logprob: -10.631345748901367
    7. '()='' → logprob: -11.256345748901367
    8. '()>' → logprob: -12.006345748901367
    9. ')' → logprob: -12.381345748901367
    10. '=False' → logprob: -12.631345748901367

Token 91: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.5776860184123507e-06
    2. ')
' → logprob: -13.12500286102295
    3. ' )' → logprob: -15.00000286102295
    4. ')b' → logprob: -16.250001907348633
    5. ')

' → logprob: -17.625001907348633
    6. '),' → logprob: -17.750001907348633
    7. 'b' → logprob: -17.875001907348633
    8. '))' → logprob: -17.875001907348633
    9. ')c' → logprob: -18.000001907348633
    10. '()' → logprob: -18.250001907348633

Token 92: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.00018089536752086133
    2. ' c' → logprob: -9.000181198120117
    3. '
' → logprob: -10.125181198120117
    4. ' 
' → logprob: -11.750181198120117
    5. '```' → logprob: -12.125181198120117
    6. '``' → logprob: -13.875181198120117
    7. ')c' → logprob: -14.625181198120117
    8. '<|end|>' → logprob: -14.750181198120117
    9. '
' → logprob: -14.875181198120117
    10. '[c' → logprob: -15.000181198120117

Token 93: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.043305058032274246
    2. '.' → logprob: -3.1683051586151123
    3. '.reverse' → logprob: -9.293305397033691
    4. ' .' → logprob: -9.668305397033691
    5. '.s' → logprob: -9.668305397033691
    6. ' =' → logprob: -9.793305397033691
    7. '=' → logprob: -11.668305397033691
    8. '.setdefault' → logprob: -12.543305397033691
    9. ').' → logprob: -12.793305397033691
    10. '=.' → logprob: -12.918305397033691

Token 94: '(reverse' (ID: 110806)
  Prédit: '(reverse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(reverse' → logprob: -0.03820236399769783
    2. '()' → logprob: -3.2882022857666016
    3. 'reverse' → logprob: -9.163202285766602
    4. '(' → logprob: -11.038202285766602
    5. '(True' → logprob: -11.288202285766602
    6. '())' → logprob: -11.413202285766602
    7. '(False' → logprob: -11.913202285766602
    8. '()(' → logprob: -12.288202285766602
    9. '()>' → logprob: -14.413202285766602
    10. '(),' → logprob: -14.413202285766602

Token 95: '=True' (ID: 7827)
  Prédit: '=True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=True' → logprob: -0.0015710416482761502
    2. '())' → logprob: -6.876571178436279
    3. '()' → logprob: -7.751571178436279
    4. '=' → logprob: -9.626570701599121
    5. '(True' → logprob: -10.376570701599121
    6. ')' → logprob: -12.126570701599121
    7. '()==' → logprob: -13.001570701599121
    8. '=False' → logprob: -13.626570701599121
    9. '()>' → logprob: -14.751570701599121
    10. '()]' → logprob: -15.001570701599121

Token 96: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.816093228830141e-06
    2. '()' → logprob: -13.75000286102295
    3. ' )' → logprob: -13.87500286102295
    4. ')
' → logprob: -15.00000286102295
    5. '))' → logprob: -15.62500286102295
    6. '())' → logprob: -16.250001907348633
    7. ')

' → logprob: -16.750001907348633
    8. '),' → logprob: -16.875001907348633
    9. ']' → logprob: -17.750001907348633
    10. '#' → logprob: -17.875001907348633

Token 97: 'll' (ID: 680)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.8208893537521362
    2. 'q' → logprob: -2.070889472961426
    3. 'from' → logprob: -2.320889472961426
    4. 'ans' → logprob: -2.445889472961426
    5. 'result' → logprob: -2.570889472961426
    6. 'res' → logprob: -3.195889472961426
    7. 'pq' → logprob: -3.320889472961426
    8. 'results' → logprob: -3.695889472961426
    9. 'abc' → logprob: -3.695889472961426
    10. 'hq' → logprob: -4.695889472961426

Token 98: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.615402102470398
    2. '=[]' → logprob: -1.740402102470398
    3. 'ist' → logprob: -1.865402102470398
    4. ' =' → logprob: -2.6154022216796875
    5. 'm' → logprob: -4.2404022216796875
    6. 'l' → logprob: -4.6154022216796875
    7. 'ists' → logprob: -4.7404022216796875
    8. '=[]
' → logprob: -5.3654022216796875
    9. 'is' → logprob: -5.7404022216796875
    10. 'i' → logprob: -5.9904022216796875

Token 99: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.017347149550914764
    2. '[(' → logprob: -4.51734733581543
    3. '[' → logprob: -5.76734733581543
    4. 'len' → logprob: -7.51734733581543
    5. 'x' → logprob: -7.64234733581543
    6. '0' → logprob: -7.64234733581543
    7. 'Queue' → logprob: -7.76734733581543
    8. '[]}' → logprob: -8.39234733581543
    9. '[]
' → logprob: -8.51734733581543
    10. 'min' → logprob: -9.14234733581543

Token 100: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00024548539659008384
    2. 'import' → logprob: -8.750245094299316
    3. 'from' → logprob: -9.500245094299316
    4. 'q' → logprob: -12.000245094299316
    5. ' for' → logprob: -13.125245094299316
    6. 'queue' → logprob: -13.500245094299316
    7. 'heap' → logprob: -13.625245094299316
    8. '```' → logprob: -14.500245094299316
    9. 'que' → logprob: -15.000245094299316
    10. 'i' → logprob: -15.500245094299316

Token 101: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.03585473820567131
    2. 'i' → logprob: -3.5358548164367676
    3. ' ai' → logprob: -5.285854816436768
    4. 'ai' → logprob: -7.410854816436768
    5. ' ia' → logprob: -8.78585433959961
    6. '	i' → logprob: -9.53585433959961
    7. ' ' → logprob: -9.78585433959961
    8. ' aa' → logprob: -10.53585433959961
    9. '_ai' → logprob: -11.16085433959961
    10. '```' → logprob: -11.28585433959961

Token 102: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.12822851538658142
    2. 'in' → logprob: -2.1282284259796143
    3. ' ' → logprob: -7.003228664398193
    4. ',' → logprob: -8.253228187561035
    5. 'n' → logprob: -10.628228187561035
    6. ' ,' → logprob: -10.628228187561035
    7. '  ' → logprob: -10.753228187561035
    8. '1' → logprob: -11.128228187561035
    9. '0' → logprob: -11.378228187561035
    10. ' i' → logprob: -11.378228187561035

Token 103: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.47851213812828064
    2. ' range' → logprob: -1.228512167930603
    3. 'a' → logprob: -2.4785120487213135
    4. ' a' → logprob: -5.603512287139893
    5. ' ' → logprob: -12.603511810302734
    6. '	range' → logprob: -12.853511810302734
    7. '   ' → logprob: -12.978511810302734
    8. ' xrange' → logprob: -13.603511810302734
    9. '  ' → logprob: -13.728511810302734
    10. 'r' → logprob: -13.853511810302734

Token 104: '(len' (ID: 14990)
  Prédit: '(min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(min' → logprob: -0.041403014212846756
    2. '(x' → logprob: -3.79140305519104
    3. '(len' → logprob: -4.041402816772461
    4. '(' → logprob: -7.916402816772461
    5. 'min' → logprob: -10.041402816772461
    6. 'x' → logprob: -12.291402816772461
    7. '(k' → logprob: -12.541402816772461
    8. 'len' → logprob: -13.916402816772461
    9. ' min' → logprob: -14.041402816772461
    10. '(max' → logprob: -14.541402816772461

Token 105: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -1.8312570318812504e-05
    2. 'a' → logprob: -11.125018119812012
    3. '(' → logprob: -13.000018119812012
    4. ' (' → logprob: -14.750018119812012
    5. '(A' → logprob: -15.250018119812012
    6. '(x' → logprob: -16.125019073486328
    7. '(s' → logprob: -16.125019073486328
    8. '(b' → logprob: -16.375019073486328
    9. ' a' → logprob: -16.625019073486328
    10. ')a' → logprob: -16.875019073486328

Token 106: ')):
' (ID: 22530)
  Prédit: ')):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')):' → logprob: -0.0048265615478158
    2. '):' → logprob: -6.004826545715332
    3. ')):
' → logprob: -6.504826545715332
    4. '))' → logprob: -7.254826545715332
    5. ')' → logprob: -9.129826545715332
    6. ' ' → logprob: -10.754826545715332
    7. ' ))' → logprob: -12.254826545715332
    8. ')):
' → logprob: -13.129826545715332
    9. ']):' → logprob: -13.504826545715332
    10. '[' → logprob: -13.879826545715332

Token 107: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6790726780891418
    2. '   ' → logprob: -1.179072618484497
    3. ' for' → logprob: -2.054072618484497
    4. ' ' → logprob: -3.304072618484497
    5. '<|end|>' → logprob: -4.679072856903076
    6. '	for' → logprob: -5.179072856903076
    7. 'for' → logprob: -6.179072856903076
    8. '  ' → logprob: -7.179072856903076
    9. ',' → logprob: -7.179072856903076
    10. '    ' → logprob: -7.679072856903076

Token 108: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.12750878930091858
    2. 'for' (adapté à ' for') → logprob: -2.1275088787078857
    3. '   ' → logprob: -7.877508640289307
    4. ' ' → logprob: -9.002509117126465
    5. '	for' → logprob: -10.127509117126465
    6. ' a' → logprob: -10.877509117126465
    7. '  ' → logprob: -12.502509117126465
    8. '    ' → logprob: -12.502509117126465
    9. '<|end|>' → logprob: -12.502509117126465
    10. 'a' → logprob: -13.002509117126465

Token 109: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.2818005084991455
    2. 'j' → logprob: -1.4068005084991455
    3. ' range' → logprob: -8.406800270080566
    4. '   ' → logprob: -8.531800270080566
    5. 'range' → logprob: -8.531800270080566
    6. ' ' → logprob: -11.656800270080566
    7. '	j' → logprob: -11.906800270080566
    8. '  ' → logprob: -12.156800270080566
    9. '_j' → logprob: -12.406800270080566
    10. '    ' → logprob: -12.781800270080566

Token 110: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0017344404477626085
    2. 'in' → logprob: -6.376734256744385
    3. ' ' → logprob: -10.751734733581543
    4. '    ' → logprob: -12.001734733581543
    5. '   ' → logprob: -12.626734733581543
    6. 'range' → logprob: -14.251734733581543
    7. ' range' → logprob: -15.001734733581543
    8. '  ' → logprob: -16.001733779907227
    9. '	in' → logprob: -16.626733779907227
    10. ' i' → logprob: -17.376733779907227

Token 111: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5759406089782715
    2. ' range' → logprob: -0.8259406089782715
    3. '(range' → logprob: -13.70094108581543
    4. '	range' → logprob: -16.82594108581543
    5. ' ' → logprob: -17.57594108581543
    6. '   ' → logprob: -18.07594108581543
    7. '  ' → logprob: -19.20094108581543
    8. 'ange' → logprob: -19.57594108581543
    9. '_range' → logprob: -19.82594108581543
    10. '    ' → logprob: -20.32594108581543

Token 112: '(len' (ID: 14990)
  Prédit: '(range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.17284263670444489
    2. '(len' → logprob: -2.4228427410125732
    3. ' range' → logprob: -2.9228427410125732
    4. 'range' → logprob: -4.297842502593994
    5. ' (' → logprob: -6.422842502593994
    6. '(' → logprob: -6.922842502593994
    7. ' in' → logprob: -10.797842979431152
    8. '(length' → logprob: -10.797842979431152
    9. '   ' → logprob: -11.672842979431152
    10. '	range' → logprob: -11.797842979431152

Token 113: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -4.0722858102526516e-05
    2. 'b' → logprob: -10.625041007995605
    3. '(' → logprob: -11.375041007995605
    4. ' b' → logprob: -13.250041007995605
    5. ' (' → logprob: -13.500041007995605
    6. '(a' → logprob: -13.625041007995605
    7. '(
' → logprob: -15.875041007995605
    8. ')b' → logprob: -16.00004005432129
    9. ')' → logprob: -16.25004005432129
    10. '(c' → logprob: -17.00004005432129

Token 114: ')):
' (ID: 22530)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.000810936326161027
    2. '):
' → logprob: -7.1258111000061035
    3. ' ):' → logprob: -12.625810623168945
    4. ')' → logprob: -13.625810623168945
    5. '   ' → logprob: -14.000810623168945
    6. ':' → logprob: -14.750810623168945
    7. '():' → logprob: -15.625810623168945
    8. '):

' → logprob: -15.875810623168945
    9. ')):' → logprob: -15.875810623168945
    10. '):
' → logprob: -16.000810623168945

Token 115: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013708675280213356
    2. ':' → logprob: -4.513708591461182
    3. ' for' → logprob: -6.263708591461182
    4. '   ' → logprob: -8.63870906829834
    5. '    ' → logprob: -9.13870906829834
    6. '      ' → logprob: -9.38870906829834
    7. ',' → logprob: -9.51370906829834
    8. ' ' → logprob: -9.63870906829834
    9. 'for' → logprob: -10.01370906829834
    10. '     ' → logprob: -10.26370906829834

Token 116: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.019323423504829407
    2. ' ll' → logprob: -4.394323348999023
    3. 'll' → logprob: -6.269323348999023
    4. '   ' → logprob: -6.269323348999023
    5. ' for' → logprob: -6.644323348999023
    6. 'for' → logprob: -7.144323348999023
    7. '       ' → logprob: -8.269323348999023
    8. '	ll' → logprob: -8.394323348999023
    9. ' if' → logprob: -8.769323348999023
    10. 'if' (adapté à ' if') → logprob: -9.519323348999023

Token 117: ' i' (ID: 575)
  Prédit: ' len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.9358014464378357
    2. 'i' → logprob: -1.6858015060424805
    3. 'len' → logprob: -1.8108015060424805
    4. ' i' → logprob: -1.8108015060424805
    5. 'a' → logprob: -3.3108015060424805
    6. ' a' → logprob: -3.8108015060424805
    7. ' not' → logprob: -3.9358015060424805
    8. ' kk' → logprob: -5.0608015060424805
    9. 'kk' → logprob: -5.9358015060424805
    10. ' ' → logprob: -6.1858015060424805

Token 118: ' *' (ID: 425)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.16995984315872192
    2. '+' → logprob: -2.044959783554077
    3. ' *' → logprob: -4.169960021972656
    4. '*' → logprob: -5.294960021972656
    5. ' <' → logprob: -5.544960021972656
    6. '<' → logprob: -7.169960021972656
    7. '   ' → logprob: -7.669960021972656
    8. ' ' → logprob: -8.169960021972656
    9. ' >=' → logprob: -8.169960021972656
    10. '+j' → logprob: -8.294960021972656

Token 119: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.15751014649868011
    2. 'len' → logprob: -2.2825100421905518
    3. ' j' → logprob: -4.032510280609131
    4. ' len' → logprob: -4.407510280609131
    5. '10' → logprob: -5.157510280609131
    6. '100' → logprob: -6.907510280609131
    7. '8' → logprob: -7.282510280609131
    8. '4' → logprob: -7.282510280609131
    9. ' ' → logprob: -7.407510280609131
    10. '   ' → logprob: -7.782510280609131

Token 120: ' >' (ID: 1424)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.7558625340461731
    2. '<' → logprob: -1.2558624744415283
    3. ' >=' → logprob: -2.3808624744415283
    4. '>=' → logprob: -2.7558624744415283
    5. ' >' → logprob: -3.0058624744415283
    6. '>' → logprob: -4.130862712860107
    7. '<=' → logprob: -4.755862712860107
    8. ' <=' → logprob: -4.755862712860107
    9. '<len' → logprob: -6.005862712860107
    10. '==' → logprob: -6.755862712860107

Token 121: ' kk' (ID: 76595)
  Prédit: 'kk'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'kk' → logprob: -0.33958858251571655
    2. ' kk' → logprob: -1.3395886421203613
    3. '100' → logprob: -4.464588642120361
    4. ' ' → logprob: -5.214588642120361
    5. 'k' → logprob: -5.589588642120361
    6. '10' → logprob: -6.089588642120361
    7. '0' → logprob: -6.464588642120361
    8. '500' → logprob: -8.089588165283203
    9. '300' → logprob: -8.589588165283203
    10. '1' → logprob: -9.089588165283203

Token 122: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.007024507503956556
    2. ':
' → logprob: -5.00702428817749
    3. ' :' → logprob: -8.507024765014648
    4. '   ' → logprob: -9.882024765014648
    5. ':return' → logprob: -11.132024765014648
    6. ' ' → logprob: -11.382024765014648
    7. ' or' → logprob: -11.757024765014648
    8. ' :
' → logprob: -12.257024765014648
    9. '+' → logprob: -12.257024765014648
    10. '  ' → logprob: -13.132024765014648

Token 123: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.013617542572319508
    2. '       ' → logprob: -5.013617515563965
    3. ':' → logprob: -5.888617515563965
    4. 'break' → logprob: -6.763617515563965
    5. '   ' → logprob: -7.138617515563965
    6. '               ' → logprob: -7.388617515563965
    7. '	break' → logprob: -7.638617515563965
    8. ' break' → logprob: -7.888617515563965
    9. '<|end|>' → logprob: -9.013617515563965
    10. '          ' → logprob: -9.263617515563965

Token 124: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.2026381939649582
    2. '           ' → logprob: -2.2026381492614746
    3. ' break' → logprob: -3.2026381492614746
    4. '               ' → logprob: -3.4526381492614746
    5. '
' → logprob: -8.327638626098633
    6. '	break' → logprob: -8.577638626098633
    7. '            
' → logprob: -10.202638626098633
    8. '                   ' → logprob: -10.452638626098633
    9. '```' → logprob: -10.952638626098633
    10. 'continue' → logprob: -11.077638626098633

Token 125: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5438749194145203
    2. '           ' → logprob: -1.168874979019165
    3. '<|end|>' → logprob: -3.293874979019165
    4. ' ' → logprob: -3.418874979019165
    5. '   ' → logprob: -4.418874740600586
    6. ':' → logprob: -5.168874740600586
    7. '               ' → logprob: -5.543874740600586
    8. '+' → logprob: -6.043874740600586
    9. '  ' → logprob: -6.168874740600586
    10. ',' → logprob: -6.293874740600586

Token 126: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00839092768728733
    2. '        ' → logprob: -5.8833909034729
    3. ',' → logprob: -6.6333909034729
    4. '           ' → logprob: -7.2583909034729
    5. '<|end|>' → logprob: -7.3833909034729
    6. '+' → logprob: -7.6333909034729
    7. ' ' → logprob: -7.8833909034729
    8. '    ' → logprob: -8.008391380310059
    9. '   ' → logprob: -8.258391380310059
    10. '      ' → logprob: -8.383391380310059

Token 127: ' for' (ID: 395)
  Prédit: 'll'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'll' → logprob: -0.1280520111322403
    2. 'for' (adapté à ' for') → logprob: -2.503051996231079
    3. ' ll' → logprob: -4.253052234649658
    4. '   ' → logprob: -4.628052234649658
    5. '       ' → logprob: -5.253052234649658
    6. ' for' → logprob: -5.628052234649658
    7. '           ' → logprob: -5.753052234649658
    8. '	ll' → logprob: -6.503052234649658
    9. ' ' → logprob: -8.8780517578125
    10. 'lll' → logprob: -9.2530517578125

Token 128: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.04860473424196243
    2. ' k' → logprob: -3.048604726791382
    3. 'l' → logprob: -11.298604965209961
    4. ' l' → logprob: -13.423604965209961
    5. ' ' → logprob: -13.673604965209961
    6. 'm' → logprob: -13.923604965209961
    7. '   ' → logprob: -14.673604965209961
    8. 'z' → logprob: -15.673604965209961
    9. '  ' → logprob: -15.798604965209961
    10. '```' → logprob: -15.798604965209961

Token 129: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.014172324910759926
    2. 'in' → logprob: -4.264172554016113
    3. '   ' → logprob: -12.514172554016113
    4. ' ' → logprob: -13.264172554016113
    5. 'range' → logprob: -13.764172554016113
    6. '  ' → logprob: -14.889172554016113
    7. '    ' → logprob: -14.889172554016113
    8. ')' → logprob: -15.139172554016113
    9. ',' → logprob: -15.139172554016113
    10. 'In' → logprob: -15.639172554016113

Token 130: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.014169743284583092
    2. ' range' → logprob: -4.264169692993164
    3. '(range' → logprob: -12.014169692993164
    4. '	range' → logprob: -16.389169692993164
    5. 'len' → logprob: -16.889169692993164
    6. '   ' → logprob: -18.014169692993164
    7. ' ' → logprob: -18.514169692993164
    8. '  ' → logprob: -18.639169692993164
    9. 'rang' → logprob: -19.139169692993164
    10. '.range' → logprob: -19.639169692993164

Token 131: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -6.2729995988775045e-06
    2. 'len' → logprob: -12.000006675720215
    3. '(' → logprob: -16.6250057220459
    4. '(min' → logprob: -18.6250057220459
    5. ' len' → logprob: -19.0000057220459
    6. '[len' → logprob: -19.6250057220459
    7. '<len' → logprob: -20.2500057220459
    8. '=len' → logprob: -20.2500057220459
    9. '	len' → logprob: -20.2500057220459
    10. ',len' → logprob: -21.2500057220459

Token 132: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -4.60414821645827e-06
    2. '(a' → logprob: -12.375004768371582
    3. '(' → logprob: -15.625004768371582
    4. '(b' → logprob: -16.500003814697266
    5. '(C' → logprob: -16.875003814697266
    6. ')c' → logprob: -17.125003814697266
    7. 'c' → logprob: -18.000003814697266
    8. '(k' → logprob: -18.500003814697266
    9. '©' → logprob: -18.875003814697266
    10. ')' → logprob: -19.875003814697266

Token 133: ')):
' (ID: 22530)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.000556012790184468
    2. ')):' → logprob: -8.125555992126465
    3. '):
' → logprob: -8.375555992126465
    4. ' ):' → logprob: -11.750555992126465
    5. ']):' → logprob: -12.125555992126465
    6. '[]):' → logprob: -12.125555992126465
    7. ')' → logprob: -13.000555992126465
    8. '[' → logprob: -13.375555992126465
    9. '):

' → logprob: -13.625555992126465
    10. '>):' → logprob: -13.750555992126465

Token 134: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5440440773963928
    2. '           ' → logprob: -0.9190440773963928
    3. '<|end|>' → logprob: -4.419044017791748
    4. '):' → logprob: -6.169044017791748
    5. '       ' → logprob: -6.419044017791748
    6. ':
' → logprob: -6.794044017791748
    7. ' ' → logprob: -7.294044017791748
    8. '          ' → logprob: -7.419044017791748
    9. '        ' → logprob: -7.544044017791748
    10. '            ' → logprob: -8.169044494628906

Token 135: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.09880513697862625
    2. '           ' → logprob: -3.0988051891326904
    3. ' if' → logprob: -3.2238051891326904
    4. '               ' → logprob: -4.723804950714111
    5. '   ' → logprob: -8.97380542755127
    6. ' ' → logprob: -9.72380542755127
    7. '       ' → logprob: -10.09880542755127
    8. '                   ' → logprob: -10.72380542755127
    9. '            ' → logprob: -11.59880542755127
    10. '                       ' → logprob: -12.34880542755127

Token 136: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.03397519141435623
    2. ' i' → logprob: -3.408975124359131
    3. '   ' → logprob: -8.283975601196289
    4. ' ' → logprob: -10.533975601196289
    5. '  ' → logprob: -11.033975601196289
    6. '(i' → logprob: -11.658975601196289
    7. 'k' → logprob: -12.033975601196289
    8. 'len' → logprob: -12.408975601196289
    9. '	i' → logprob: -12.408975601196289
    10. '    ' → logprob: -12.783975601196289

Token 137: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.062004320323467255
    2. '*' → logprob: -2.812004327774048
    3. '*j' → logprob: -11.187004089355469
    4. ' ' → logprob: -12.062004089355469
    5. '*k' → logprob: -12.187004089355469
    6. ' +' → logprob: -12.312004089355469
    7. '**' → logprob: -12.562004089355469
    8. '+' → logprob: -13.687004089355469
    9. ' **' → logprob: -14.312004089355469
    10. ' *
' → logprob: -15.062004089355469

Token 138: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.025866860523819923
    2. 'k' → logprob: -4.150866985321045
    3. ' j' → logprob: -4.650866985321045
    4. 'jk' → logprob: -8.900866508483887
    5. ' k' → logprob: -9.400866508483887
    6. ' ' → logprob: -13.150866508483887
    7. '	j' → logprob: -13.150866508483887
    8. '*j' → logprob: -13.525866508483887
    9. '   ' → logprob: -13.900866508483887
    10. ' jk' → logprob: -13.900866508483887

Token 139: ' *' (ID: 425)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.6764764785766602
    2. '>' → logprob: -0.9264764785766602
    3. '*' → logprob: -2.55147647857666
    4. ' *' → logprob: -4.05147647857666
    5. ' ' → logprob: -8.80147647857666
    6. ' >=' → logprob: -9.42647647857666
    7. '>=' → logprob: -10.80147647857666
    8. '*>' → logprob: -11.17647647857666
    9. ')' → logprob: -12.55147647857666
    10. '*k' → logprob: -13.05147647857666

Token 140: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.00524667976424098
    2. ' k' → logprob: -5.255246639251709
    3. 'c' → logprob: -11.630247116088867
    4. ' ' → logprob: -13.630247116088867
    5. '(k' → logprob: -14.255247116088867
    6. '  ' → logprob: -14.505247116088867
    7. '   ' → logprob: -14.630247116088867
    8. '*k' → logprob: -15.130247116088867
    9. ' c' → logprob: -15.755247116088867
    10. 'x' → logprob: -16.005247116088867

Token 141: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.5759848356246948
    2. ' >' → logprob: -0.8259848356246948
    3. ' ' → logprob: -10.700984954833984
    4. '>=' → logprob: -11.450984954833984
    5. ' >=' → logprob: -11.575984954833984
    6. '<|end|>' → logprob: -14.450984954833984
    7. '>
' → logprob: -14.825984954833984
    8. ' ' → logprob: -15.325984954833984
    9. '  ' → logprob: -15.825984954833984
    10. ')' → logprob: -15.950984954833984

Token 142: ' kk' (ID: 76595)
  Prédit: 'kk'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'kk' → logprob: -0.04859066382050514
    2. ' kk' → logprob: -3.048590660095215
    3. 'k' → logprob: -13.423590660095215
    4. ' ' → logprob: -14.298590660095215
    5. 'kkkk' → logprob: -14.298590660095215
    6. 'ck' → logprob: -15.798590660095215
    7. 'ks' → logprob: -15.923590660095215
    8. '
' → logprob: -16.42359161376953
    9. '  ' → logprob: -16.67359161376953
    10. 'KK' → logprob: -17.42359161376953

Token 143: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0044953967444598675
    2. ':
' → logprob: -5.504495620727539
    3. '               ' → logprob: -8.254495620727539
    4. ' or' → logprob: -9.254495620727539
    5. '           ' → logprob: -10.254495620727539
    6. ' :' → logprob: -12.129495620727539
    7. '<|end|>' → logprob: -12.129495620727539
    8. ':

' → logprob: -12.879495620727539
    9. '):' → logprob: -13.379495620727539
    10. '       ' → logprob: -13.504495620727539

Token 144: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.021317286416888237
    2. ':' → logprob: -3.89631724357605
    3. 'break' → logprob: -8.521317481994629
    4. '              ' → logprob: -8.896317481994629
    5. ':
' → logprob: -9.146317481994629
    6. '           ' → logprob: -9.146317481994629
    7. '<|end|>' → logprob: -9.521317481994629
    8. ' break' → logprob: -10.271317481994629
    9. '                   ' → logprob: -10.896317481994629
    10. '                ' → logprob: -10.896317481994629

Token 145: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.07897064834833145
    2. ' break' → logprob: -2.5789706707000732
    3. '               ' → logprob: -10.078970909118652
    4. '                   ' → logprob: -10.578970909118652
    5. '                       ' → logprob: -12.453970909118652
    6. '   ' → logprob: -13.078970909118652
    7. '	break' → logprob: -13.203970909118652
    8. '                               ' → logprob: -13.203970909118652
    9. '           ' → logprob: -13.703970909118652
    10. '```' → logprob: -14.453970909118652

Token 146: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.21927517652511597
    2. '           ' → logprob: -1.7192752361297607
    3. '            ' → logprob: -5.719274997711182
    4. ' ' → logprob: -6.219274997711182
    5. ' ll' → logprob: -6.344274997711182
    6. '              ' → logprob: -6.469274997711182
    7. '                   ' → logprob: -6.719274997711182
    8. '                ' → logprob: -6.719274997711182
    9. '<|end|>' → logprob: -6.719274997711182
    10. ':' → logprob: -7.219274997711182

Token 147: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7162619829177856
    2. '               ' → logprob: -0.7162619829177856
    3. '                   ' → logprob: -4.841261863708496
    4. 'll' → logprob: -5.591261863708496
    5. '                       ' → logprob: -6.216261863708496
    6. ' ll' → logprob: -6.591261863708496
    7. '+' → logprob: -7.216261863708496
    8. '                           ' → logprob: -7.216261863708496
    9. '          ' → logprob: -7.466261863708496
    10. '       ' → logprob: -7.591261863708496

Token 148: ' ll' (ID: 11475)
  Prédit: 'll'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'll' (adapté à ' ll') → logprob: -0.22993192076683044
    2. '           ' → logprob: -2.2299318313598633
    3. '               ' → logprob: -3.1049318313598633
    4. ' ll' → logprob: -3.1049318313598633
    5. '   ' → logprob: -6.229931831359863
    6. '	ll' → logprob: -6.354931831359863
    7. '<ll' → logprob: -6.854931831359863
    8. ',ll' → logprob: -6.854931831359863
    9. '       ' → logprob: -7.104931831359863
    10. '                   ' → logprob: -7.354931831359863

Token 149: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.4742564857006073
    2. '.' → logprob: -0.9742565155029297
    3. '.ap' → logprob: -9.09925651550293
    4. '.app' → logprob: -10.34925651550293
    5. ' .' → logprob: -10.59925651550293
    6. '.extend' → logprob: -12.72425651550293
    7. '.add' → logprob: -12.84925651550293
    8. '.push' → logprob: -13.84925651550293
    9. ').' → logprob: -13.97425651550293
    10. 'append' → logprob: -14.47425651550293

Token 150: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.03949581831693649
    2. '((' → logprob: -3.2894957065582275
    3. '(' → logprob: -6.539495944976807
    4. 'a' → logprob: -12.539495468139648
    5. '(((' → logprob: -13.664495468139648
    6. '(
' → logprob: -13.914495468139648
    7. '(m' → logprob: -14.164495468139648
    8. '([' → logprob: -14.289495468139648
    9. '(('' → logprob: -15.539495468139648
    10. '((-' → logprob: -15.664495468139648

Token 151: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.7697225252486533e-06
    2. '[' → logprob: -12.625003814697266
    3. ' [' → logprob: -16.250003814697266
    4. 'i' → logprob: -16.375003814697266
    5. '[a' → logprob: -16.875003814697266
    6. '```' → logprob: -16.875003814697266
    7. '[I' → logprob: -17.250003814697266
    8. '[
' → logprob: -17.375003814697266
    9. ')' → logprob: -17.500003814697266
    10. '[j' → logprob: -18.500003814697266

Token 152: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.002071990631520748
    2. ']+' → logprob: -6.252071857452393
    3. ' ]' → logprob: -9.62707233428955
    4. ']*' → logprob: -10.37707233428955
    5. '+' → logprob: -10.50207233428955
    6. ')' → logprob: -11.50207233428955
    7. '*' → logprob: -12.75207233428955
    8. ' +' → logprob: -13.12707233428955
    9. '])' → logprob: -13.25207233428955
    10. ' ' → logprob: -14.00207233428955

Token 153: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2256416231393814
    2. ' +' → logprob: -1.6006416082382202
    3. '+b' → logprob: -8.850641250610352
    4. '*' → logprob: -9.850641250610352
    5. '+
' → logprob: -11.100641250610352
    6. '+j' → logprob: -12.350641250610352
    7. ')' → logprob: -12.600641250610352
    8. ' *' → logprob: -12.850641250610352
    9. ' +
' → logprob: -13.475641250610352
    10. ' ' → logprob: -13.475641250610352

Token 154: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.5231307744979858
    2. ' b' → logprob: -0.8981307744979858
    3. ' ' → logprob: -12.273130416870117
    4. '<|end|>' → logprob: -13.648130416870117
    5. ')b' → logprob: -15.023130416870117
    6. '+b' → logprob: -15.523130416870117
    7. '	b' → logprob: -15.648130416870117
    8. '    ' → logprob: -15.648130416870117
    9. ' ' → logprob: -15.773130416870117
    10. '(b' → logprob: -15.773130416870117

Token 155: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -2.165027217415627e-05
    2. '[' → logprob: -11.375021934509277
    3. '[k' → logprob: -11.625021934509277
    4. '[i' → logprob: -13.875021934509277
    5. ' [' → logprob: -15.500021934509277
    6. '[
' → logprob: -17.50002098083496
    7. 'j' → logprob: -18.25002098083496
    8. '```' → logprob: -18.87502098083496
    9. '[c' → logprob: -19.37502098083496
    10. '[m' → logprob: -19.50002098083496

Token 156: ']' (ID: 60)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.4751265347003937
    2. '+' → logprob: -0.9751265048980713
    3. ']' → logprob: -7.10012674331665
    4. ']+' → logprob: -8.600126266479492
    5. ')' → logprob: -11.475126266479492
    6. '+c' → logprob: -11.600126266479492
    7. ' ' → logprob: -11.975126266479492
    8. '[' → logprob: -12.225126266479492
    9. ' ]' → logprob: -12.350126266479492
    10. '<|end|>' → logprob: -13.350126266479492

Token 157: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.47413942217826843
    2. ' +' → logprob: -0.9741394519805908
    3. '+c' → logprob: -9.724139213562012
    4. ' ' → logprob: -13.849139213562012
    5. '+
' → logprob: -14.974139213562012
    6. '+k' → logprob: -15.099139213562012
    7. ' +
' → logprob: -15.224139213562012
    8. '+C' → logprob: -15.474139213562012
    9. ')' → logprob: -15.974139213562012
    10. '[' → logprob: -16.349140167236328

Token 158: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.16022564470767975
    2. ' c' → logprob: -1.9102256298065186
    3. ')c' → logprob: -14.660225868225098
    4. ' ' → logprob: -15.160225868225098
    5. '	c' → logprob: -15.285225868225098
    6. '+c' → logprob: -15.910225868225098
    7. '   ' → logprob: -16.16022491455078
    8. '<|end|>' → logprob: -16.16022491455078
    9. '  ' → logprob: -16.41022491455078
    10. '(c' → logprob: -16.41022491455078

Token 159: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -1.6240566083070007e-06
    2. 'k' → logprob: -13.750001907348633
    3. '[' → logprob: -15.250001907348633
    4. ' [' → logprob: -16.750001907348633
    5. '[c' → logprob: -16.875001907348633
    6. '(k' → logprob: -17.500001907348633
    7. '```' → logprob: -17.500001907348633
    8. '[
' → logprob: -18.000001907348633
    9. '[i' → logprob: -18.125001907348633
    10. '	k' → logprob: -18.500001907348633

Token 160: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00046177039621397853
    2. '])' → logprob: -8.12546157836914
    3. '))' → logprob: -8.87546157836914
    4. ' )' → logprob: -11.37546157836914
    5. ')
' → logprob: -11.62546157836914
    6. '})' → logprob: -13.37546157836914
    7. '）' → logprob: -14.25046157836914
    8. ')`' → logprob: -14.25046157836914
    9. ')])' → logprob: -14.62546157836914
    10. '`)' → logprob: -14.75046157836914

Token 161: 'll' (ID: 680)
  Prédit: 'll'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'll' → logprob: -0.002581366803497076
    2. ' ll' → logprob: -6.377581596374512
    3. ',ll' → logprob: -8.002581596374512
    4. '
' → logprob: -8.877581596374512
    5. '.ll' → logprob: -9.127581596374512
    6. '	ll' → logprob: -9.877581596374512
    7. 'ls' → logprob: -10.127581596374512
    8. '_ll' → logprob: -10.252581596374512
    9. '<ll' → logprob: -10.252581596374512
    10. '(ll' → logprob: -10.377581596374512

Token 162: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.5765101313591003
    2. '.' → logprob: -0.8265101313591003
    3. '<|end|>' → logprob: -8.201510429382324
    4. 'sort' → logprob: -9.451510429382324
    5. '.
' → logprob: -9.451510429382324
    6. '.append' → logprob: -10.076510429382324
    7. '
' → logprob: -11.076510429382324
    8. '[' → logprob: -11.076510429382324
    9. '[:' → logprob: -11.326510429382324
    10. '[:]' → logprob: -11.576510429382324

Token 163: '(reverse' (ID: 110806)
  Prédit: '(reverse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(reverse' → logprob: -9.782141569303349e-05
    2. 'reverse' → logprob: -9.37509822845459
    3. '(' → logprob: -11.50009822845459
    4. '()' → logprob: -12.87509822845459
    5. '(re' → logprob: -17.000097274780273
    6. ' reverse' → logprob: -17.125097274780273
    7. '.reverse' → logprob: -17.250097274780273
    8. 'Reverse' → logprob: -17.500097274780273
    9. '_reverse' → logprob: -17.750097274780273
    10. '()
' → logprob: -17.750097274780273

Token 164: '=True' (ID: 7827)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.06329689174890518
    2. '()' → logprob: -2.8132967948913574
    3. ')' → logprob: -7.313296794891357
    4. '()]' → logprob: -8.563297271728516
    5. '(True' → logprob: -8.938297271728516
    6. '=True' → logprob: -9.188297271728516
    7. '()>' → logprob: -9.688297271728516
    8. '())
' → logprob: -9.813297271728516
    9. '()
' → logprob: -10.063297271728516
    10. '();)' → logprob: -11.063297271728516

Token 165: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06516138464212418
    2. ')
' → logprob: -2.8151614665985107
    3. '[:' → logprob: -6.440161228179932
    4. '
' → logprob: -6.815161228179932
    5. '[' → logprob: -8.19016170501709
    6. ',' → logprob: -9.69016170501709
    7. ')

' → logprob: -10.44016170501709
    8. ' )' → logprob: -10.81516170501709
    9. '<|end|>' → logprob: -10.81516170501709
    10. '  
' → logprob: -11.44016170501709

Token 166: 'for' (ID: 1938)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5597968697547913
    2. 'print' → logprob: -1.5597968101501465
    3. 'for' → logprob: -1.6847968101501465
    4. '[:' → logprob: -3.9347968101501465
    5. '[
' → logprob: -5.3097968101501465
    6. '[:]' → logprob: -5.6847968101501465
    7. '[]' → logprob: -6.8097968101501465
    8. ' for' → logprob: -6.9347968101501465
    9. '```' → logprob: -7.9347968101501465
    10. ')' → logprob: -8.059797286987305

Token 167: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.10304088890552521
    2. 'i' → logprob: -2.853040933609009
    3. '_' → logprob: -4.22804069519043
    4. ' val' → logprob: -4.72804069519043
    5. ' _' → logprob: -4.72804069519043
    6. ' ans' → logprob: -6.22804069519043
    7. ' v' → logprob: -6.35304069519043
    8. 'v' → logprob: -6.97804069519043
    9. '_i' → logprob: -7.10304069519043
    10. ' ' → logprob: -7.60304069519043

Token 168: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.007667317055165768
    2. 'in' → logprob: -4.882667541503906
    3. ' ' → logprob: -9.882667541503906
    4. '  ' → logprob: -12.632667541503906
    5. 'range' → logprob: -12.632667541503906
    6. ',' → logprob: -13.507667541503906
    7. 'n' → logprob: -14.257667541503906
    8. '   ' → logprob: -14.257667541503906
    9. ' range' → logprob: -15.507667541503906
    10. ' i' → logprob: -15.882667541503906

Token 169: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.000936951139010489
    2. ' range' → logprob: -7.000936985015869
    3. 'll' → logprob: -10.625936508178711
    4. 'ran' → logprob: -15.000936508178711
    5. 'rang' → logprob: -15.125936508178711
    6. 'ra' → logprob: -15.750936508178711
    7. 'rr' → logprob: -15.750936508178711
    8. ' ll' → logprob: -16.75093650817871
    9. '(range' → logprob: -16.75093650817871
    10. '	range' → logprob: -17.00093650817871

Token 170: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00038801267510280013
    2. '(min' → logprob: -7.875388145446777
    3. '(k' → logprob: -12.000388145446777
    4. 'min' → logprob: -13.625388145446777
    5. '(
' → logprob: -14.875388145446777
    6. '(ll' → logprob: -16.50038719177246
    7. '(K' → logprob: -16.87538719177246
    8. ' (' → logprob: -16.87538719177246
    9. '((' → logprob: -17.00038719177246
    10. 'kk' → logprob: -17.62538719177246

Token 171: 'kk' (ID: 8701)
  Prédit: 'kk'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'kk' → logprob: -0.00021807955636177212
    2. ' kk' → logprob: -8.750218391418457
    3. 'min' → logprob: -9.750218391418457
    4. 'k' → logprob: -15.000218391418457
    5. '   ' → logprob: -15.125218391418457
    6. 'kkkk' → logprob: -15.500218391418457
    7. ' min' → logprob: -15.750218391418457
    8. '  ' → logprob: -16.12521743774414
    9. ' ' → logprob: -16.25021743774414
    10. '10' → logprob: -16.87521743774414

Token 172: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -5.3596853831550106e-05
    2. ' ):' → logprob: -10.375053405761719
    3. '):
' → logprob: -11.250053405761719
    4. ':' → logprob: -12.125053405761719
    5. ')' → logprob: -12.625053405761719
    6. ']:' → logprob: -15.625053405761719
    7. '():' → logprob: -16.12505340576172
    8. '}:' → logprob: -16.12505340576172
    9. '):
' → logprob: -17.12505340576172
    10. '>' → logprob: -17.37505340576172

Token 173: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00553611246868968
    2. ' print' → logprob: -5.630536079406738
    3. '   ' → logprob: -6.255536079406738
    4. 'if' → logprob: -12.130536079406738
    5. '```' → logprob: -12.630536079406738
    6. '	print' → logprob: -13.005536079406738
    7. '
' → logprob: -13.880536079406738
    8. '    
' → logprob: -14.130536079406738
    9. ' if' → logprob: -14.255536079406738
    10. ' 
' → logprob: -15.005536079406738

Token 174: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.00010568885772954673
    2. ' print' → logprob: -9.250105857849121
    3. 'if' → logprob: -11.750105857849121
    4. '   ' → logprob: -13.500105857849121
    5. ' if' → logprob: -15.875105857849121
    6. '```' → logprob: -16.375104904174805
    7. '	print' → logprob: -18.000104904174805
    8. '#print' → logprob: -19.750104904174805
    9. '
' → logprob: -20.000104904174805
    10. '``' → logprob: -20.125104904174805

Token 175: '(ll' (ID: 76557)
  Prédit: '(ll'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ll' → logprob: -0.02988332137465477
    2. 'll' → logprob: -3.52988338470459
    3. '<ll' → logprob: -9.40488338470459
    4. ' ll' → logprob: -10.77988338470459
    5. '(' → logprob: -11.02988338470459
    6. '	ll' → logprob: -12.02988338470459
    7. 'lll' → logprob: -12.65488338470459
    8. ',ll' → logprob: -13.15488338470459
    9. '(l' → logprob: -13.52988338470459
    10. '(ls' → logprob: -15.02988338470459

Token 176: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0003103175258729607
    2. '[' → logprob: -8.125309944152832
    3. ')' → logprob: -11.875309944152832
    4. ')[' → logprob: -12.250309944152832
    5. '[
' → logprob: -13.625309944152832
    6. ' [' → logprob: -14.500309944152832
    7. ')i' → logprob: -14.750309944152832
    8. ']' → logprob: -16.00031089782715
    9. 'i' → logprob: -16.25031089782715
    10. '][' → logprob: -16.50031089782715

Token 177: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.759734732331708e-05
    2. '])' → logprob: -11.250017166137695
    3. '))' → logprob: -12.875017166137695
    4. ' )' → logprob: -13.875017166137695
    5. ')
' → logprob: -14.500017166137695
    6. '})' → logprob: -15.125017166137695
    7. ')`' → logprob: -16.250017166137695
    8. '+' → logprob: -17.125017166137695
    9. '）' → logprob: -17.125017166137695
    10. ']' → logprob: -17.125017166137695


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 175
Tokens correctement prédits (1ère position, stricte): 76
Tokens correctement prédits (1ère position, avec adaptation): 81
Tokens correctement prédits (top 10): 156
Précision stricte (1ère position): 43.43%
Précision adaptée (1ère position): 46.29%
Précision (top 10): 89.14%
================================================================================
