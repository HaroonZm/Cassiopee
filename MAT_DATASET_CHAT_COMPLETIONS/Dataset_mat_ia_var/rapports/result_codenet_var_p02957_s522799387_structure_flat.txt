================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:50:24
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
a, b = map(int, input().split())
s = a + b
if s % 2 == 0:
    m = s // 2
    print(m)
else:
    print('IMPOSSIBLE')
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'a' (ID: 64)
  → Token d'amorce (pas de prédiction)

Token 1: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 2: ' b' (ID: 287)
  → Token d'amorce (pas de prédiction)

Token 3: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0942426547408104
    2. '+' → logprob: -2.469242572784424
    3. ' =' → logprob: -5.594242572784424
    4. ',' → logprob: -7.469242572784424
    5. '+=' → logprob: -7.844242572784424
    6. ' +' → logprob: -8.719243049621582
    7. '```' → logprob: -9.719243049621582
    8. '*' → logprob: -9.844243049621582
    9. '**' → logprob: -10.219243049621582
    10. ' ' → logprob: -10.219243049621582

Token 4: ' map' (ID: 4014)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2597934305667877
    2. '1' → logprob: -1.6347934007644653
    3. '0' → logprob: -4.009793281555176
    4. '10' → logprob: -4.384793281555176
    5. '5' → logprob: -6.134793281555176
    6. 'input' → logprob: -8.259793281555176
    7. '3' → logprob: -9.009793281555176
    8. '2' → logprob: -9.259793281555176
    9. '42' → logprob: -9.259793281555176
    10. 'a' → logprob: -9.634793281555176

Token 5: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.199392169713974
    2. '(lambda' → logprob: -2.324392080307007
    3. '```' → logprob: -2.699392080307007
    4. '<|end|>' → logprob: -4.699392318725586
    5. ')' → logprob: -7.074392318725586
    6. '(int' → logprob: -7.199392318725586
    7. '[' → logprob: -7.574392318725586
    8. '`' → logprob: -7.949392318725586
    9. '(str' → logprob: -8.324392318725586
    10. 'user' → logprob: -8.324392318725586

Token 6: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.18195661902427673
    2. '(' → logprob: -2.4319565296173096
    3. '(input' → logprob: -3.4319565296173096
    4. ')(' → logprob: -4.556956768035889
    5. '(user' → logprob: -4.556956768035889
    6. '(token' → logprob: -4.806956768035889
    7. '<|end|>' → logprob: -5.431956768035889
    8. '```' → logprob: -6.056956768035889
    9. ',' → logprob: -6.431956768035889
    10. '(next' → logprob: -7.056956768035889

Token 7: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.10487626492977142
    2. ' input' → logprob: -2.3548762798309326
    3. '(input' → logprob: -5.6048760414123535
    4. ')' → logprob: -6.9798760414123535
    5. ' )' → logprob: -10.854876518249512
    6. ',input' → logprob: -11.729876518249512
    7. '=input' → logprob: -12.479876518249512
    8. 'user' → logprob: -12.854876518249512
    9. '<input' → logprob: -12.979876518249512
    10. ' (' → logprob: -13.104876518249512

Token 8: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.22056008875370026
    2. ')' → logprob: -2.095560073852539
    3. '())' → logprob: -2.970560073852539
    4. '(token' → logprob: -5.095560073852539
    5. '()' → logprob: -5.470560073852539
    6. '('' → logprob: -6.595560073852539
    7. '<|end|>' → logprob: -6.720560073852539
    8. '(""))' → logprob: -6.845560073852539
    9. '```' → logprob: -7.345560073852539
    10. '(
' → logprob: -7.345560073852539

Token 9: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00021831797494087368
    2. 'strip' → logprob: -8.500218391418457
    3. ')' → logprob: -12.000218391418457
    4. 'rstrip' → logprob: -12.250218391418457
    5. ' split' → logprob: -12.750218391418457
    6. 'read' → logprob: -14.375218391418457
    7. '(split' → logprob: -15.625218391418457
    8. 'spl' → logprob: -15.750218391418457
    9. 'startswith' → logprob: -16.62521743774414
    10. '_split' → logprob: -17.75021743774414

Token 10: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12047538161277771
    2. '))' → logprob: -2.4954752922058105
    3. '())' → logprob: -3.4954752922058105
    4. '()))' → logprob: -7.8704752922058105
    5. '()' → logprob: -8.495475769042969
    6. '(' → logprob: -9.995475769042969
    7. '`)' → logprob: -10.745475769042969
    8. ')`' → logprob: -11.120475769042969
    9. ')))' → logprob: -11.495475769042969
    10. ' )' → logprob: -11.870475769042969

Token 11: 's' (ID: 82)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.02117467112839222
    2. '*' → logprob: -5.271174907684326
    3. 'if' → logprob: -5.271174907684326
    4. '#' → logprob: -5.646174907684326
    5. '+c' → logprob: -6.021174907684326
    6. 'c' → logprob: -6.646174907684326
    7. '+
' → logprob: -6.646174907684326
    8. ',' → logprob: -8.021174430847168
    9. 'print' → logprob: -8.271174430847168
    10. '>' → logprob: -8.396174430847168

Token 12: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8059273958206177
    2. '.' → logprob: -1.4309273958206177
    3. 'um' → logprob: -1.9309273958206177
    4. ' =' → logprob: -2.555927276611328
    5. 'u' → logprob: -3.180927276611328
    6. '[' → logprob: -3.555927276611328
    7. ',' → logprob: -4.680927276611328
    8. '+' → logprob: -5.930927276611328
    9. 'a' → logprob: -6.680927276611328
    10. 'tr' → logprob: -6.680927276611328

Token 13: ' a' (ID: 261)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.010106652043759823
    2. 'a' → logprob: -5.385106563568115
    3. ' input' → logprob: -5.385106563568115
    4. '""' → logprob: -7.760106563568115
    5. 'list' → logprob: -9.385107040405273
    6. '"' → logprob: -9.385107040405273
    7. 'str' → logprob: -9.635107040405273
    8. '"a' → logprob: -10.135107040405273
    9. '0' → logprob: -10.510107040405273
    10. '''' → logprob: -10.635107040405273

Token 14: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.015586383640766144
    2. ' +' → logprob: -4.2655863761901855
    3. ' ' → logprob: -7.2655863761901855
    4. '*' → logprob: -8.765586853027344
    5. '-' → logprob: -8.890586853027344
    6. '[' → logprob: -9.390586853027344
    7. '_' → logprob: -9.765586853027344
    8. ')' → logprob: -9.765586853027344
    9. '>' → logprob: -10.015586853027344
    10. ' +=' → logprob: -10.390586853027344

Token 15: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.5759437084197998
    2. ' b' → logprob: -0.8259437084197998
    3. ' ' → logprob: -12.575943946838379
    4. '1' → logprob: -14.575943946838379
    5. '	b' → logprob: -16.450942993164062
    6. '_b' → logprob: -17.075942993164062
    7. ' ' → logprob: -17.075942993164062
    8. 's' → logprob: -17.700942993164062
    9. ' б' → logprob: -18.200942993164062
    10. ')b' → logprob: -18.200942993164062

Token 16: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.5074098706245422
    2. '<|end|>' → logprob: -1.7574098110198975
    3. '\' → logprob: -1.8824098110198975
    4. '*' → logprob: -4.007410049438477
    5. '```' → logprob: -4.007410049438477
    6. '
' → logprob: -4.132410049438477
    7. 'newline' → logprob: -5.882410049438477
    8. '.' → logprob: -6.007410049438477
    9. '' → logprob: -6.132410049438477
    10. '#' → logprob: -6.257410049438477

Token 17: 'if' (ID: 366)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0004418743774294853
    2. ' print' → logprob: -8.750441551208496
    3. '```' → logprob: -9.125441551208496
    4. '\n' → logprob: -9.750441551208496
    5. 'p' → logprob: -10.500441551208496
    6. '\' → logprob: -11.000441551208496
    7. '
' → logprob: -11.125441551208496
    8. '*' → logprob: -11.750441551208496
    9. '#' → logprob: -12.000441551208496
    10. 's' → logprob: -12.250441551208496

Token 18: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.04916190728545189
    2. 's' → logprob: -3.674161911010742
    3. ' ' → logprob: -3.799161911010742
    4. ' not' → logprob: -9.049161911010742
    5. ' a' → logprob: -9.799161911010742
    6. ' ' → logprob: -11.174161911010742
    7. 'a' → logprob: -12.174161911010742
    8. ' (' → logprob: -12.299161911010742
    9. '  ' → logprob: -12.549161911010742
    10. ' b' → logprob: -13.299161911010742

Token 19: ' %' (ID: 1851)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.1265275627374649
    2. '>' → logprob: -2.2515275478363037
    3. ' <' → logprob: -5.751527786254883
    4. ' ==' → logprob: -5.751527786254883
    5. ' >=' → logprob: -5.751527786254883
    6. ' <=' → logprob: -6.376527786254883
    7. ' ' → logprob: -7.376527786254883
    8. '<' → logprob: -7.751527786254883
    9. '==' → logprob: -7.876527786254883
    10. '>=' → logprob: -8.376527786254883

Token 20: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.11283955723047256
    2. ' ' → logprob: -2.237839460372925
    3. '3' → logprob: -11.112839698791504
    4. '4' → logprob: -14.112839698791504
    5. '1' → logprob: -14.737839698791504
    6. '```' → logprob: -15.112839698791504
    7. '10' → logprob: -15.737839698791504
    8. '6' → logprob: -15.987839698791504
    9. '==' → logprob: -15.987839698791504
    10. '7' → logprob: -16.237838745117188

Token 21: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0017828793497756124
    2. '3' → logprob: -6.5017828941345215
    3. ' ' → logprob: -9.001782417297363
    4. '10' → logprob: -9.001782417297363
    5. '5' → logprob: -10.876782417297363
    6. '7' → logprob: -11.751782417297363
    7. '4' → logprob: -12.626782417297363
    8. '100' → logprob: -14.126782417297363
    9. '1' → logprob: -14.376782417297363
    10. '==' → logprob: -14.626782417297363

Token 22: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.01733473688364029
    2. '==' → logprob: -4.267334938049316
    3. ' !=' → logprob: -6.017334938049316
    4. ':' → logprob: -7.642334938049316
    5. ' ' → logprob: -9.142334938049316
    6. ' =' → logprob: -9.767334938049316
    7. '!=' → logprob: -10.392334938049316
    8. ' :' → logprob: -10.642334938049316
    9. '=' → logprob: -10.892334938049316
    10. '0' → logprob: -12.517334938049316

Token 23: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1605922132730484
    2. ' ' → logprob: -1.9105921983718872
    3. '1' → logprob: -7.910592079162598
    4. '2' → logprob: -14.785592079162598
    5. '=' → logprob: -15.285592079162598
    6. '  ' → logprob: -16.660593032836914
    7. '==' → logprob: -16.973093032836914
    8. ' ' → logprob: -17.035593032836914
    9. ' 

' → logprob: -17.160593032836914
    10. 's' → logprob: -17.285593032836914

Token 24: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004089085850864649
    2. ' ' → logprob: -5.754088878631592
    3. '1' → logprob: -7.004088878631592
    4. '2' → logprob: -13.87908935546875
    5. '```' → logprob: -15.00408935546875
    6. '  ' → logprob: -15.44158935546875
    7. '

' → logprob: -16.19158935546875
    8. '=' → logprob: -16.25408935546875
    9. ''' → logprob: -16.56658935546875
    10. ':' → logprob: -16.69158935546875

Token 25: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00012725738633889705
    2. ' :' → logprob: -9.000126838684082
    3. ':
' → logprob: -13.000126838684082
    4. '>:' → logprob: -15.000126838684082
    5. ':**' → logprob: -15.000126838684082
    6. ':return' → logprob: -15.625126838684082
    7. '':'' → logprob: -15.750126838684082
    8. '):' → logprob: -15.750126838684082
    9. '':' → logprob: -16.2501277923584
    10. '：' → logprob: -16.7501277923584

Token 26: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3053285479545593
    2. ' print' → logprob: -1.430328607559204
    3. 'print' → logprob: -4.180328369140625
    4. '\n' → logprob: -5.555328369140625
    5. '    ' → logprob: -6.055328369140625
    6. '\' → logprob: -7.305328369140625
    7. '    
' → logprob: -7.930328369140625
    8. ''' → logprob: -8.430328369140625
    9. ' ' → logprob: -8.430328369140625
    10. '
' → logprob: -8.680328369140625

Token 27: ' m' (ID: 284)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.022256141528487206
    2. 'print' → logprob: -3.8972561359405518
    3. '   ' → logprob: -6.397256374359131
    4. ' pass' → logprob: -10.772255897521973
    5. '    ' → logprob: -11.897255897521973
    6. ' ' → logprob: -12.147255897521973
    7. ' p' → logprob: -12.522255897521973
    8. ' s' → logprob: -13.147255897521973
    9. '	print' → logprob: -13.272255897521973
    10. ' result' → logprob: -14.022255897521973

Token 28: ' =' (ID: 314)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.27493396401405334
    2. '   ' → logprob: -2.6499340534210205
    3. ' ' → logprob: -3.2749340534210205
    4. '=' → logprob: -3.3999340534210205
    5. '  ' → logprob: -3.3999340534210205
    6. 'e' → logprob: -4.024933815002441
    7. 'a' → logprob: -4.399933815002441
    8. ' =' → logprob: -4.899933815002441
    9. ' print' → logprob: -5.399933815002441
    10. 'essage' → logprob: -5.774933815002441

Token 29: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.21751628816127777
    2. 's' → logprob: -1.717516303062439
    3. '"' → logprob: -5.2175164222717285
    4. ' "' → logprob: -5.3425164222717285
    5. ' ' → logprob: -6.5925164222717285
    6. ''s' → logprob: -6.9675164222717285
    7. ''' → logprob: -7.3425164222717285
    8. ' '' → logprob: -7.7175164222717285
    9. '"s' → logprob: -7.8425164222717285
    10. '0' → logprob: -7.9675164222717285

Token 30: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.005297673400491476
    2. '//' → logprob: -5.380297660827637
    3. ' /' → logprob: -8.130297660827637
    4. '   ' → logprob: -8.505297660827637
    5. ' ' → logprob: -9.755297660827637
    6. ' *' → logprob: -10.755297660827637
    7. '```' → logprob: -11.255297660827637
    8. '/' → logprob: -11.505297660827637
    9. ' else' → logprob: -11.505297660827637
    10. 'print' → logprob: -11.630297660827637

Token 31: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.009762583300471306
    2. ' ' → logprob: -4.634762763977051
    3. '3' → logprob: -13.38476276397705
    4. '   ' → logprob: -13.50976276397705
    5. '4' → logprob: -13.75976276397705
    6. '  ' → logprob: -13.88476276397705
    7. ' ' → logprob: -14.38476276397705
    8. '２' → logprob: -15.44726276397705
    9. '1' → logprob: -16.009761810302734
    10. '```' → logprob: -16.259761810302734

Token 32: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0004908377304673195
    2. ' ' → logprob: -7.625490665435791
    3. '   ' → logprob: -13.50049114227295
    4. '3' → logprob: -14.62549114227295
    5. '  ' → logprob: -15.06299114227295
    6. '4' → logprob: -15.18799114227295
    7. '２' → logprob: -16.062990188598633
    8. ' ' → logprob: -16.937990188598633
    9. '1' → logprob: -17.125490188598633
    10. '```' → logprob: -17.125490188598633

Token 33: '
' (ID: 198)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.6402612924575806
    2. '   ' → logprob: -1.2652612924575806
    3. '
' → logprob: -2.015261173248291
    4. ' else' → logprob: -3.390261173248291
    5. 'print' → logprob: -4.515261173248291
    6. '    
' → logprob: -4.890261173248291
    7. '\n' → logprob: -6.015261173248291
    8. 'elif' → logprob: -7.390261173248291
    9. '```' → logprob: -8.01526165008545
    10. '  
' → logprob: -8.14026165008545

Token 34: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0122182369232178
    2. 'print' → logprob: -1.0122182369232178
    3. '
' → logprob: -1.5122182369232178
    4. 'else' → logprob: -3.5122182369232178
    5. '    
' → logprob: -4.762218475341797
    6. ' else' → logprob: -5.012218475341797
    7. '  
' → logprob: -6.512218475341797
    8. ' print' → logprob: -6.637218475341797
    9. '\n' → logprob: -7.387218475341797
    10. ' ' → logprob: -7.387218475341797

Token 35: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.006156542804092169
    2. 'if' → logprob: -6.0061564445495605
    3. '   ' → logprob: -6.2561564445495605
    4. 'a' → logprob: -7.3811564445495605
    5. 'for' → logprob: -7.5061564445495605
    6. 'while' → logprob: -8.631156921386719
    7. 'else' → logprob: -8.881156921386719
    8. 'n' → logprob: -10.006156921386719
    9. ' print' → logprob: -10.256156921386719
    10. 'm' → logprob: -10.381156921386719

Token 36: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.04877040162682533
    2. '(' → logprob: -3.0487704277038574
    3. 'm' → logprob: -9.0487699508667
    4. '('' → logprob: -10.5487699508667
    5. ' (' → logprob: -11.5487699508667
    6. '("' → logprob: -11.6737699508667
    7. ' m' → logprob: -11.9237699508667
    8. '(f' → logprob: -12.0487699508667
    9. '()' → logprob: -12.7987699508667
    10. '(s' → logprob: -12.7987699508667

Token 37: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.0484450437361374e-05
    2. ' )' → logprob: -10.875040054321289
    3. ')
' → logprob: -11.125040054321289
    4. '))' → logprob: -13.125040054321289
    5. '*' → logprob: -14.125040054321289
    6. '   ' → logprob: -14.375040054321289
    7. ')`' → logprob: -14.500040054321289
    8. '')' → logprob: -15.125040054321289
    9. ',' → logprob: -15.250040054321289
    10. '}' → logprob: -15.375040054321289

Token 38: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.006219097413122654
    2. ' else' → logprob: -5.131218910217285
    3. 'elif' → logprob: -8.256218910217285
    4. '<|end|>' → logprob: -11.506218910217285
    5. '```' → logprob: -12.131218910217285
    6. ')' → logprob: -13.131218910217285
    7. ' ' → logprob: -13.131218910217285
    8. 'e' → logprob: -13.256218910217285
    9. '.' → logprob: -13.506218910217285
    10. '_else' → logprob: -13.631218910217285

Token 39: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00040636269841343164
    2. ':
' → logprob: -7.875406265258789
    3. '   ' → logprob: -11.125406265258789
    4. ' :' → logprob: -11.625406265258789
    5. ',' → logprob: -14.000406265258789
    6. '    ' → logprob: -14.875406265258789
    7. ':
' → logprob: -15.750406265258789
    8. ' :
' → logprob: -15.875406265258789
    9. '  ' → logprob: -16.00040626525879
    10. '```' → logprob: -16.00040626525879

Token 40: '   ' (ID: 271)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    ' → logprob: -0.48454079031944275
    2. '   ' → logprob: -0.9845408201217651
    3. ' ' → logprob: -5.859540939331055
    4. '```' → logprob: -6.484540939331055
    5. '"' → logprob: -6.984540939331055
    6. ''' → logprob: -7.359540939331055
    7. '     
' → logprob: -7.484540939331055
    8. '0' → logprob: -7.984540939331055
    9. '`' → logprob: -8.109540939331055
    10. 's' → logprob: -8.234540939331055

Token 41: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06134563684463501
    2. ' print' → logprob: -3.3113455772399902
    3. 'print' (adapté à ' print') → logprob: -4.56134557723999
    4. '    ' → logprob: -5.68634557723999
    5. '```' → logprob: -5.81134557723999
    6. ' m' → logprob: -6.68634557723999
    7. ' None' → logprob: -6.93634557723999
    8. 'n' → logprob: -7.06134557723999
    9. 's' → logprob: -7.56134557723999
    10. ' n' → logprob: -7.81134557723999

Token 42: '('' (ID: 706)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03327113389968872
    2. '("' → logprob: -4.283271312713623
    3. '('' → logprob: -5.033271312713623
    4. '(s' → logprob: -5.033271312713623
    5. '()' → logprob: -5.533271312713623
    6. '(m' → logprob: -7.158271312713623
    7. '((' → logprob: -7.533271312713623
    8. '("("' → logprob: -9.033270835876465
    9. '(None' → logprob: -9.408270835876465
    10. '(a' → logprob: -9.408270835876465

Token 43: 'IMP' (ID: 67171)
  Prédit: 'im'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'im' → logprob: -1.66157865524292
    2. 'Odd' → logprob: -1.66157865524292
    3. 'IMP' → logprob: -2.41157865524292
    4. 'Invalid' → logprob: -2.53657865524292
    5. 'Impossible' → logprob: -2.78657865524292
    6. 'Error' → logprob: -2.91157865524292
    7. ''' → logprob: -3.03657865524292
    8. '-' → logprob: -3.41157865524292
    9. '"' → logprob: -3.53657865524292
    10. 'No' → logprob: -3.53657865524292

Token 44: 'OSS' (ID: 26496)
  Prédit: 'OSS'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'OSS' → logprob: -0.002671972382813692
    2. 'OS' → logprob: -6.50267219543457
    3. '')' → logprob: -7.37767219543457
    4. 'O' → logprob: -8.62767219543457
    5. 'P' → logprob: -9.25267219543457
    6. ''' → logprob: -9.37767219543457
    7. 'S' → logprob: -10.00267219543457
    8. 'oss' → logprob: -10.25267219543457
    9. ''),' → logprob: -11.50267219543457
    10. '')
' → logprob: -12.25267219543457

Token 45: 'IBLE' (ID: 22408)
  Prédit: 'IBLE'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IBLE' → logprob: -2.5776860184123507e-06
    2. 'I' → logprob: -13.62500286102295
    3. 'IB' → logprob: -14.00000286102295
    4. 'IBE' → logprob: -15.62500286102295
    5. 'IABLE' → logprob: -16.375001907348633
    6. 'ible' → logprob: -16.750001907348633
    7. 'IBILITY' → logprob: -16.875001907348633
    8. 'IPLE' → logprob: -17.000001907348633
    9. 'ILE' → logprob: -17.500001907348633
    10. '1' → logprob: -17.875001907348633

Token 46: '')' (ID: 1542)
  Prédit: '')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.0003136552404612303
    2. ')' → logprob: -8.250313758850098
    3. ''' → logprob: -9.875313758850098
    4. '')
' → logprob: -14.625313758850098
    5. '")' → logprob: -15.125313758850098
    6. '}')' → logprob: -17.50031280517578
    7. ')'' → logprob: -18.12531280517578
    8. ''))' → logprob: -18.25031280517578
    9. '',' → logprob: -18.25031280517578
    10. '('' → logprob: -18.50031280517578


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 44
Tokens correctement prédits (1ère position, stricte): 15
Tokens correctement prédits (1ère position, avec adaptation): 16
Tokens correctement prédits (top 10): 36
Précision stricte (1ère position): 34.09%
Précision adaptée (1ère position): 36.36%
Précision (top 10): 81.82%
================================================================================
