================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:35:17
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Code refait avec des choix idiosyncratiques
N = int(input())
dicta = list()
bigl = [[]._copy() for _ in [*range(N)]]
for egg in range(N):
    ufo = int(input())
    dicta.append(ufo)
    for oof in (lambda s: range(s))(ufo):
        foo, bar = [*map(int, input().split())]
        bigl[egg].append((foo-1, bar))
resulto = -9**9
for mask in range(1<<(N)):
    masky = [int(c) for c in f"{mask:0{N}b}"[::-1]]
    score = sum(masky)
    weirdflag = 3.14j
    for tori in range(N):
        if masky[tori]:
            for idx in range(dicta[tori]):
                xi, why = bigl[tori][idx]
                if masky[xi] != why:
                    weirdflag = 42
                    break
            if weirdflag == 42:
                break
    else:
        if resulto < score:
            resulto = score
print(resulto)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Code' (ID: 9441)
  → Token d'amorce (pas de prédiction)

Token 2: ' ref' (ID: 2714)
  → Token d'amorce (pas de prédiction)

Token 3: 'ait' (ID: 1271)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8235167264938354
    2. ':' → logprob: -1.6985167264938354
    3. '```' → logprob: -1.6985167264938354
    4. 'er' → logprob: -2.698516845703125
    5. '#' → logprob: -3.073516845703125
    6. '.' → logprob: -4.323516845703125
    7. '`' → logprob: -4.573516845703125
    8. '=' → logprob: -4.698516845703125
    9. 'actoring' → logprob: -5.198516845703125
    10. '``' → logprob: -5.323516845703125

Token 4: ' avec' (ID: 3937)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.35160139203071594
    2. ':' → logprob: -1.9766013622283936
    3. '```' → logprob: -2.8516013622283936
    4. '<|end|>' → logprob: -2.8516013622283936
    5. '\' → logprob: -4.851601600646973
    6. '<|end|>' → logprob: -5.101601600646973
    7. '.' → logprob: -5.101601600646973
    8. '\n' → logprob: -5.351601600646973
    9. '
' → logprob: -6.101601600646973
    10. ' #' → logprob: -6.226601600646973

Token 5: ' des' (ID: 731)
  Prédit: ' #'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' #' → logprob: -1.073839545249939
    2. ' ' → logprob: -1.323839545249939
    3. ' des' → logprob: -1.948839545249939
    4. ' l' → logprob: -3.3238396644592285
    5. 'out' → logprob: -3.5738396644592285
    6. ' ' → logprob: -3.6988396644592285
    7. '#' → logprob: -4.0738396644592285
    8. 'des' → logprob: -4.0738396644592285
    9. 'un' → logprob: -4.3238396644592285
    10. ' un' → logprob: -4.4488396644592285

Token 6: ' choix' (ID: 28642)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.1537692546844482
    2. 'comment' → logprob: -1.6537692546844482
    3. 'fon' → logprob: -1.7787692546844482
    4. ' commentaires' → logprob: -2.5287692546844482
    5. 'comments' → logprob: -2.6537692546844482
    6. 'Commentaires' → logprob: -3.1537692546844482
    7. 'esp' → logprob: -4.403769493103027
    8. 'annotations' → logprob: -4.403769493103027
    9. 'types' → logprob: -4.653769493103027
    10. 'classes' → logprob: -4.778769493103027

Token 7: ' id' (ID: 1211)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.35494929552078247
    2. ':' → logprob: -1.6049492359161377
    3. ' ' → logprob: -2.7299492359161377
    4. ' :' → logprob: -4.479949474334717
    5. ' #' → logprob: -4.854949474334717
    6. '=' → logprob: -5.479949474334717
    7. '_' → logprob: -5.729949474334717
    8. ' =' → logprob: -6.854949474334717
    9. 's' → logprob: -6.979949474334717
    10. '```' → logprob: -6.979949474334717

Token 8: 'ios' (ID: 2453)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'é' → logprob: -1.214614987373352
    2. 'ent' → logprob: -1.589614987373352
    3. 'e' → logprob: -2.0896148681640625
    4. 'a' → logprob: -2.4646148681640625
    5. 'ées' → logprob: -2.4646148681640625
    6. 'nt' → logprob: -2.7146148681640625
    7. 'es' → logprob: -3.2146148681640625
    8. 'enti' → logprob: -3.8396148681640625
    9. 'éal' → logprob: -4.3396148681640625
    10. 'és' → logprob: -4.3396148681640625

Token 9: 'yn' (ID: 1276)
  Prédit: 'yn'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yn' → logprob: -0.012920545414090157
    2. 'y' → logprob: -4.512920379638672
    3. 'syn' → logprob: -7.137920379638672
    4. 'n' → logprob: -7.262920379638672
    5. 'ynt' → logprob: -9.387920379638672
    6. 'cr' → logprob: -9.762920379638672
    7. 'ynch' → logprob: -10.387920379638672
    8. 'ync' → logprob: -10.512920379638672
    9. 'ynth' → logprob: -10.512920379638672
    10. 'in' → logprob: -10.762920379638672

Token 10: 'cr' (ID: 798)
  Prédit: 'cr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cr' → logprob: -0.00043376852408982813
    2. 'cra' → logprob: -7.750433921813965
    3. '(cr' → logprob: -14.750433921813965
    4. 'chr' → logprob: -14.875433921813965
    5. '\' → logprob: -15.000433921813965
    6. 'crate' → logprob: -15.375433921813965
    7. '```' → logprob: -15.375433921813965
    8. '{' → logprob: -15.500433921813965
    9. '#' → logprob: -15.625433921813965
    10. 'tr' → logprob: -15.750433921813965

Token 11: 'atiques' (ID: 31318)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.006868582684546709
    2. 'ra' → logprob: -5.506868362426758
    3. 'rat' → logprob: -6.631868362426758
    4. '#' → logprob: -7.506868362426758
    5. 'atiques' → logprob: -8.381868362426758
    6. '```' → logprob: -8.631868362426758
    7. '`' → logprob: -9.006868362426758
    8. '``' → logprob: -10.006868362426758
    9. 'rá' → logprob: -10.131868362426758
    10. '%' → logprob: -10.131868362426758

Token 12: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.24725018441677094
    2. '#' → logprob: -2.2472500801086426
    3. ' :' → logprob: -3.4972500801086426
    4. '```' → logprob: -4.247250080108643
    5. 'import' → logprob: -4.372250080108643
    6. '
' → logprob: -4.372250080108643
    7. ',' → logprob: -4.372250080108643
    8. ' ' → logprob: -4.872250080108643
    9. '.' → logprob: -5.247250080108643
    10. '_' → logprob: -5.622250080108643

Token 13: 'N' (ID: 45)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1271895170211792
    2. '#' → logprob: -2.8771896362304688
    3. ' :' → logprob: -3.6271896362304688
    4. '_' → logprob: -4.627189636230469
    5. '```' → logprob: -4.752189636230469
    6. ',' → logprob: -5.502189636230469
    7. ' ' → logprob: -5.502189636230469
    8. 'import' → logprob: -6.002189636230469
    9. '.' → logprob: -6.502189636230469
    10. '
' → logprob: -7.002189636230469

Token 14: ' =' (ID: 314)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.7898589968681335
    2. 'o' → logprob: -1.6648590564727783
    3. 'b' → logprob: -2.0398590564727783
    4. '#' → logprob: -2.6648590564727783
    5. '=' → logprob: -2.6648590564727783
    6. ' =' → logprob: -3.7898590564727783
    7. 'u' → logprob: -4.164858818054199
    8. 'a' → logprob: -4.289858818054199
    9. '_' → logprob: -5.039858818054199
    10. 'é' → logprob: -5.164858818054199

Token 15: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.010290967300534248
    2. '10' → logprob: -4.63529109954834
    3. '20' → logprob: -8.51029109954834
    4. '5' → logprob: -9.38529109954834
    5. '32' → logprob: -9.51029109954834
    6. '100' → logprob: -9.76029109954834
    7. 'int' → logprob: -10.38529109954834
    8. ' int' → logprob: -10.51029109954834
    9. '50' → logprob: -10.51029109954834
    10. '4' → logprob: -12.01029109954834

Token 16: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0006083175539970398
    2. '(input' → logprob: -7.625608444213867
    3. ' (' → logprob: -10.375608444213867
    4. '('' → logprob: -10.500608444213867
    5. '(N' → logprob: -10.750608444213867
    6. '()' → logprob: -11.000608444213867
    7. '(
' → logprob: -12.000608444213867
    8. '(`' → logprob: -12.625608444213867
    9. '<|end|>' → logprob: -12.875608444213867
    10. '("' → logprob: -13.125608444213867

Token 17: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.010545322671532631
    2. '()' → logprob: -5.135545253753662
    3. ')' → logprob: -5.510545253753662
    4. '())' → logprob: -7.885545253753662
    5. '(
' → logprob: -9.13554573059082
    6. '(

' → logprob: -10.38554573059082
    7. '('' → logprob: -10.88554573059082
    8. '(""))' → logprob: -12.01054573059082
    9. '(`' → logprob: -12.38554573059082
    10. '("("' → logprob: -12.63554573059082

Token 18: 'dict' (ID: 20993)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8071656823158264
    2. 's' → logprob: -1.3071656227111816
    3. 'for' → logprob: -2.3071656227111816
    4. ')' → logprob: -2.5571656227111816
    5. ' for' → logprob: -3.4321656227111816
    6. '_' → logprob: -4.307165622711182
    7. ' )' → logprob: -4.932165622711182
    8. 'a' → logprob: -5.057165622711182
    9. 'data' → logprob: -5.182165622711182
    10. 'n' → logprob: -5.432165622711182

Token 19: 'a' (ID: 64)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4016321897506714
    2. '(' → logprob: -2.401632308959961
    3. 'a' → logprob: -2.651632308959961
    4. 's' → logprob: -3.526632308959961
    5. '[' → logprob: -3.776632308959961
    6. '_a' → logprob: -3.776632308959961
    7. '_input' → logprob: -4.151632308959961
    8. 'ion' → logprob: -4.776632308959961
    9. '_data' → logprob: -5.026632308959961
    10. '_var' → logprob: -5.026632308959961

Token 20: ' =' (ID: 314)
  Prédit: 'ry'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ry' → logprob: -0.0010051815770566463
    2. '_' → logprob: -8.501005172729492
    3. 'r' → logprob: -8.626005172729492
    4. 'rie' → logprob: -9.376005172729492
    5. ' =' → logprob: -9.376005172729492
    6. 'ire' → logprob: -9.376005172729492
    7. '[' → logprob: -9.751005172729492
    8. 'n' → logprob: -9.751005172729492
    9. '()' → logprob: -10.126005172729492
    10. '=' → logprob: -10.376005172729492

Token 21: ' list' (ID: 1562)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.003762190230190754
    2. ' {}' → logprob: -6.003762245178223
    3. 'dict' → logprob: -6.878762245178223
    4. '{' → logprob: -8.503762245178223
    5. 'default' → logprob: -10.503762245178223
    6. ' dict' → logprob: -11.753762245178223
    7. '{})' → logprob: -12.378762245178223
    8. '[]' → logprob: -12.878762245178223
    9. '{}
' → logprob: -13.128762245178223
    10. ' {' → logprob: -13.253762245178223

Token 22: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.017552968114614487
    2. '()' → logprob: -4.267552852630615
    3. '(range' → logprob: -6.142552852630615
    4. '(dict' → logprob: -7.517552852630615
    5. '(
' → logprob: -9.017553329467773
    6. '(input' → logprob: -9.017553329467773
    7. '(map' → logprob: -9.017553329467773
    8. ')' → logprob: -10.017553329467773
    9. '(zip' → logprob: -10.142553329467773
    10. '[' → logprob: -10.267553329467773

Token 23: 'big' (ID: 25934)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.009433992207050323
    2. '[' → logprob: -5.509434223175049
    3. ' for' → logprob: -6.134434223175049
    4. '(' → logprob: -7.009434223175049
    5. ':' → logprob: -7.509434223175049
    6. ')' → logprob: -7.884434223175049
    7. '=' → logprob: -8.13443374633789
    8. ' ' → logprob: -8.38443374633789
    9. '.' → logprob: -8.38443374633789
    10. '
' → logprob: -9.75943374633789

Token 24: 'l' (ID: 75)
  Prédit: 'gest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'gest' → logprob: -0.2582264840602875
    2. 'est' → logprob: -1.8832265138626099
    3. 'er' → logprob: -3.6332263946533203
    4. 'dict' → logprob: -3.6332263946533203
    5. '_dict' → logprob: -5.38322639465332
    6. 'ram' → logprob: -5.63322639465332
    7. ' =' → logprob: -5.75822639465332
    8. 'raph' → logprob: -6.13322639465332
    9. '_' → logprob: -6.88322639465332
    10. 'set' → logprob: -7.00822639465332

Token 25: ' =' (ID: 314)
  Prédit: 'ist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ist' → logprob: -0.05760227516293526
    2. 'i' → logprob: -3.8076021671295166
    3. 'is' → logprob: -4.057602405548096
    4. 'et' → logprob: -5.557602405548096
    5. 'st' → logprob: -5.682602405548096
    6. 'e' → logprob: -6.182602405548096
    7. 'est' → logprob: -6.557602405548096
    8. ' =' → logprob: -6.682602405548096
    9. 'o' → logprob: -7.432602405548096
    10. 'en' → logprob: -7.557602405548096

Token 26: ' [[' (ID: 9237)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.6599803566932678
    2. '{}' → logprob: -1.284980297088623
    3. ' []' → logprob: -2.159980297088623
    4. 'dict' → logprob: -3.034980297088623
    5. '[' → logprob: -3.534980297088623
    6. ' {}' → logprob: -5.409980297088623
    7. '{' → logprob: -5.784980297088623
    8. ' dict' → logprob: -6.784980297088623
    9. ' [' → logprob: -7.034980297088623
    10. '0' → logprob: -7.034980297088623

Token 27: ']._' (ID: 90560)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06416338682174683
    2. ']' → logprob: -3.9391634464263916
    3. '[]' → logprob: -4.3141632080078125
    4. 'False' → logprob: -4.4391632080078125
    5. '1' → logprob: -5.9391632080078125
    6. '[' → logprob: -5.9391632080078125
    7. ' ]' → logprob: -6.1891632080078125
    8. ' ' → logprob: -6.4391632080078125
    9. '-' → logprob: -6.5641632080078125
    10. 'int' → logprob: -6.9391632080078125

Token 28: 'copy' (ID: 14730)
  Prédit: 'append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -0.00017541198758408427
    2. 'extend' → logprob: -9.875175476074219
    3. '_append' → logprob: -10.500175476074219
    4. 'copy' → logprob: -11.125175476074219
    5. 'for' → logprob: -11.250175476074219
    6. 'clear' → logprob: -11.375175476074219
    7. ' append' → logprob: -11.500175476074219
    8. '.append' → logprob: -11.750175476074219
    9. 'insert' → logprob: -11.750175476074219
    10. 'from' → logprob: -11.875175476074219

Token 29: '()' (ID: 416)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.010693581774830818
    2. '()' → logprob: -5.510693550109863
    3. ']()' → logprob: -5.635693550109863
    4. ']' → logprob: -6.135693550109863
    5. 'copy' → logprob: -8.135693550109863
    6. '())' → logprob: -8.260693550109863
    7. ')]' → logprob: -8.510693550109863
    8. ')' → logprob: -10.760693550109863
    9. '.copy' → logprob: -11.385693550109863
    10. '()]
' → logprob: -11.385693550109863

Token 30: ' for' (ID: 395)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.029367635026574135
    2. '())' → logprob: -4.279367446899414
    3. '()' → logprob: -4.404367446899414
    4. ')]' → logprob: -6.404367446899414
    5. ']()' → logprob: -7.654367446899414
    6. ']' → logprob: -8.154367446899414
    7. ')' → logprob: -8.154367446899414
    8. '(' → logprob: -9.779367446899414
    9. '()][' → logprob: -10.404367446899414
    10. ' ()' → logprob: -11.404367446899414

Token 31: ' _' (ID: 1175)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.13860151171684265
    2. '_' → logprob: -2.138601541519165
    3. ' range' → logprob: -4.513601303100586
    4. 'i' → logprob: -7.888601303100586
    5. '_range' → logprob: -9.138601303100586
    6. '_i' → logprob: -9.888601303100586
    7. '__' → logprob: -10.763601303100586
    8. 'in' → logprob: -11.138601303100586
    9. ' _' → logprob: -11.513601303100586
    10. ' ' → logprob: -11.888601303100586

Token 32: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3826419413089752
    2. 'in' → logprob: -1.5076419115066528
    3. 'range' → logprob: -2.5076420307159424
    4. ' range' → logprob: -4.382641792297363
    5. ' ' → logprob: -6.382641792297363
    6. '_' → logprob: -7.882641792297363
    7. ' _' → logprob: -8.507641792297363
    8. 'i' → logprob: -9.257641792297363
    9. '  ' → logprob: -9.882641792297363
    10. '()' → logprob: -10.257641792297363

Token 33: ' [' (ID: 723)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0009415964013896883
    2. ' range' → logprob: -7.000941753387451
    3. 'rang' → logprob: -11.375941276550293
    4. '[' → logprob: -12.125941276550293
    5. '_' → logprob: -12.375941276550293
    6. '(range' → logprob: -13.125941276550293
    7. 'ra' → logprob: -13.375941276550293
    8. 'ran' → logprob: -13.375941276550293
    9. '_range' → logprob: -14.125941276550293
    10. 'dict' → logprob: -14.250941276550293

Token 34: '*' (ID: 9)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.05321022868156433
    2. ' range' → logprob: -3.5532102584838867
    3. '0' → logprob: -4.053210258483887
    4. '{}' → logprob: -5.928210258483887
    5. '[]' → logprob: -6.553210258483887
    6. '[' → logprob: -7.303210258483887
    7. '1' → logprob: -8.428210258483887
    8. ' ' → logprob: -8.678210258483887
    9. 'set' → logprob: -8.803210258483887
    10. '{' → logprob: -9.053210258483887

Token 35: 'range' (ID: 20967)
  Prédit: 'range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.000829759519547224
    2. ' range' → logprob: -7.500829696655273
    3. '{}' → logprob: -9.125829696655273
    4. '(range' → logprob: -9.625829696655273
    5. 'dict' → logprob: -10.375829696655273
    6. '[' → logprob: -10.875829696655273
    7. '{' → logprob: -11.000829696655273
    8. 'rang' → logprob: -11.375829696655273
    9. 'ra' → logprob: -12.375829696655273
    10. '[]' → logprob: -12.625829696655273

Token 36: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.14340758323669434
    2. '(' → logprob: -2.0184075832366943
    3. '(n' → logprob: -7.643407821655273
    4. ' (' → logprob: -9.268407821655273
    5. '(
' → logprob: -9.518407821655273
    6. '(len' → logprob: -11.018407821655273
    7. '((' → logprob: -11.518407821655273
    8. '(-' → logprob: -11.518407821655273
    9. '()' → logprob: -11.643407821655273
    10. '(int' → logprob: -11.643407821655273

Token 37: ')]' (ID: 15710)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0840349942445755
    2. ')]' → logprob: -2.5840349197387695
    3. ')])' → logprob: -5.4590349197387695
    4. '())' → logprob: -8.33403491973877
    5. '])]' → logprob: -8.58403491973877
    6. ' )' → logprob: -8.70903491973877
    7. '(' → logprob: -9.58403491973877
    8. '()' → logprob: -9.83403491973877
    9. ']]]' → logprob: -11.08403491973877
    10. ' ' → logprob: -11.20903491973877

Token 38: ']
' (ID: 1592)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.001613173633813858
    2. ']' → logprob: -6.626613140106201
    3. '()' → logprob: -9.00161361694336
    4. ']()' → logprob: -9.37661361694336
    5. '(' → logprob: -10.25161361694336
    6. ')]' → logprob: -11.00161361694336
    7. '.copy' → logprob: -11.62661361694336
    8. '()][' → logprob: -12.75161361694336
    9. ' ]' → logprob: -13.12661361694336
    10. 'copy' → logprob: -13.12661361694336

Token 39: 'for' (ID: 1938)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.4057912528514862
    2. '()' → logprob: -1.1557912826538086
    3. '(' → logprob: -4.780791282653809
    4. '.copy' → logprob: -5.905791282653809
    5. '().' → logprob: -6.030791282653809
    6. ']()' → logprob: -6.155791282653809
    7. ']' → logprob: -7.030791282653809
    8. '()[' → logprob: -7.905791282653809
    9. 'copy' → logprob: -7.905791282653809
    10. '.' → logprob: -8.030791282653809

Token 40: ' egg' (ID: 16102)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.5473591685295105
    2. ' _' → logprob: -1.0473592281341553
    3. ' ' → logprob: -3.0473592281341553
    4. '_' → logprob: -3.9223592281341553
    5. 'i' → logprob: -6.547358989715576
    6. ' n' → logprob: -7.422358989715576
    7. ' x' → logprob: -7.922358989715576
    8. ' l' → logprob: -8.922359466552734
    9. 'n' → logprob: -9.547359466552734
    10. ' t' → logprob: -9.672359466552734

Token 41: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.49600455164909363
    2. 'in' → logprob: -0.996004581451416
    3. 's' → logprob: -3.871004581451416
    4. ' ' → logprob: -7.746004581451416
    5. '_' → logprob: -8.871004104614258
    6. 'a' → logprob: -9.871004104614258
    7. '  ' → logprob: -10.246004104614258
    8. 'cellent' → logprob: -10.496004104614258
    9. ',' → logprob: -10.996004104614258
    10. 'import' → logprob: -11.371004104614258

Token 42: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.062192872166633606
    2. ' range' → logprob: -2.812192916870117
    3. 'big' → logprob: -9.187192916870117
    4. 'dict' → logprob: -10.187192916870117
    5. '_' → logprob: -10.562192916870117
    6. '[' → logprob: -11.062192916870117
    7. '	range' → logprob: -11.562192916870117
    8. ' big' → logprob: -11.687192916870117
    9. '_range' → logprob: -11.937192916870117
    10. '(range' → logprob: -12.437192916870117

Token 43: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0932055115699768
    2. '(' → logprob: -2.468205451965332
    3. ' (' → logprob: -5.468205451965332
    4. '(n' → logprob: -11.468205451965332
    5. 'N' → logprob: -11.718205451965332
    6. '(s' → logprob: -12.218205451965332
    7. '(
' → logprob: -12.343205451965332
    8. ' N' → logprob: -13.093205451965332
    9. '(len' → logprob: -13.343205451965332
    10. 's' → logprob: -13.343205451965332

Token 44: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00403043394908309
    2. ')' → logprob: -6.504030227661133
    3. '+' → logprob: -6.754030227661133
    4. ' ):' → logprob: -6.754030227661133
    5. '):
' → logprob: -9.379030227661133
    6. ':' → logprob: -9.504030227661133
    7. ']:' → logprob: -11.754030227661133
    8. ' +' → logprob: -11.879030227661133
    9. ' )' → logprob: -12.379030227661133
    10. ',' → logprob: -12.629030227661133

Token 45: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08474046736955643
    2. ' ' → logprob: -3.834740400314331
    3. ':' → logprob: -4.08474063873291
    4. 'dict' → logprob: -5.20974063873291
    5. '    ' → logprob: -5.33474063873291
    6. ' ' → logprob: -5.58474063873291
    7. '[' → logprob: -5.70974063873291
    8. ')' → logprob: -5.83474063873291
    9. 'big' → logprob: -6.33474063873291
    10. '  ' → logprob: -6.33474063873291

Token 46: ' u' (ID: 337)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21016095578670502
    2. ' big' → logprob: -2.835160970687866
    3. 'dict' → logprob: -2.960160970687866
    4. ' []' → logprob: -3.710160970687866
    5. 'big' → logprob: -3.710160970687866
    6. ' dict' → logprob: -4.835160732269287
    7. ' ' → logprob: -5.210160732269287
    8. ' egg' → logprob: -6.585160732269287
    9. '_' → logprob: -6.835160732269287
    10. '[]' → logprob: -6.897660732269287

Token 47: 'fo' (ID: 1070)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.34658536314964294
    2. 'ser' → logprob: -2.221585273742676
    3. 'p' → logprob: -2.846585273742676
    4. 'n' → logprob: -3.471585273742676
    5. '=' → logprob: -3.596585273742676
    6. 'dict' → logprob: -4.596585273742676
    7. 'se' → logprob: -4.971585273742676
    8. '=int' → logprob: -5.346585273742676
    9. 'nique' → logprob: -5.596585273742676
    10. 'sr' → logprob: -5.596585273742676

Token 48: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6828128099441528
    2. 'p' → logprob: -0.8078128099441528
    3. '=' → logprob: -3.3078126907348633
    4. 'se' → logprob: -4.932812690734863
    5. 'n' → logprob: -7.057812690734863
    6. 'ser' → logprob: -7.307812690734863
    7. 's' → logprob: -7.557812690734863
    8. '.append' → logprob: -7.682812690734863
    9. 'dict' → logprob: -7.932812690734863
    10. 'r' → logprob: -8.057812690734863

Token 49: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.0557764768600464
    2. 'input' → logprob: -1.3057764768600464
    3. '[]' → logprob: -1.5557764768600464
    4. '{}' → logprob: -2.180776596069336
    5. 'list' → logprob: -4.180776596069336
    6. 'dict' → logprob: -4.305776596069336
    7. '0' → logprob: -5.430776596069336
    8. '[int' → logprob: -5.430776596069336
    9. '{' → logprob: -5.555776596069336
    10. 'str' → logprob: -5.680776596069336

Token 50: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.39561697840690613
    2. '(' → logprob: -1.1456170082092285
    3. '()' → logprob: -4.7706170082092285
    4. '(user' → logprob: -9.77061653137207
    5. '(
' → logprob: -10.27061653137207
    6. 'input' → logprob: -10.39561653137207
    7. '('' → logprob: -10.89561653137207
    8. ')' → logprob: -11.14561653137207
    9. '<|end|>' → logprob: -11.14561653137207
    10. ' (' → logprob: -11.77061653137207

Token 51: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.010688981041312218
    2. '()' → logprob: -4.635688781738281
    3. ')' → logprob: -7.135688781738281
    4. '())
' → logprob: -9.385688781738281
    5. '(' → logprob: -10.760688781738281
    6. '()))' → logprob: -11.385688781738281
    7. ' ())' → logprob: -11.385688781738281
    8. '())

' → logprob: -13.010688781738281
    9. '();)' → logprob: -13.385688781738281
    10. '());' → logprob: -13.760688781738281

Token 52: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3844197988510132
    2. '   ' → logprob: -1.2594197988510132
    3. ' ' → logprob: -4.384419918060303
    4. '<|end|>' → logprob: -5.384419918060303
    5. ' )' → logprob: -5.509419918060303
    6. '    ' → logprob: -6.259419918060303
    7. 'big' → logprob: -6.384419918060303
    8. '  ' → logprob: -6.384419918060303
    9. '(' → logprob: -6.509419918060303
    10. '[' → logprob: -6.884419918060303

Token 53: ' dicta' (ID: 164554)
  Prédit: 'dict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dict' → logprob: -1.1169134378433228
    2. 'big' → logprob: -1.7419134378433228
    3. ' big' → logprob: -1.8669134378433228
    4. ' dicta' → logprob: -1.9919134378433228
    5. '   ' → logprob: -2.741913318634033
    6. ')' → logprob: -2.991913318634033
    7. '_' → logprob: -3.741913318634033
    8. ' dict' → logprob: -4.241913318634033
    9. '[]' → logprob: -4.616913318634033
    10. '[' → logprob: -5.366913318634033

Token 54: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.014209111221134663
    2. '.' → logprob: -4.264209270477295
    3. '.add' → logprob: -11.139208793640137
    4. ' .' → logprob: -11.514208793640137
    5. '.extend' → logprob: -11.764208793640137
    6. '.app' → logprob: -12.139208793640137
    7. '.setdefault' → logprob: -12.639208793640137
    8. '.ap' → logprob: -13.139208793640137
    9. '.insert' → logprob: -14.389208793640137
    10. '.copy' → logprob: -14.889208793640137

Token 55: '(u' (ID: 17057)
  Prédit: '(u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.01816890574991703
    2. '(' → logprob: -4.018168926239014
    3. 'u' → logprob: -12.018168449401855
    4. '((' → logprob: -12.393168449401855
    5. '(str' → logprob: -13.268168449401855
    6. '('' → logprob: -13.643168449401855
    7. '(int' → logprob: -13.768168449401855
    8. '(input' → logprob: -14.018168449401855
    9. '(U' → logprob: -14.393168449401855
    10. '(
' → logprob: -14.518168449401855

Token 56: 'fo' (ID: 1070)
  Prédit: 'fo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fo' → logprob: -0.1891700178384781
    2. 'f' → logprob: -3.6891701221466064
    3. '(' → logprob: -3.9391701221466064
    4. 'p' → logprob: -4.314169883728027
    5. 'int' → logprob: -4.439169883728027
    6. 'nt' → logprob: -4.689169883728027
    7. 'tf' → logprob: -4.814169883728027
    8. ')' → logprob: -5.189169883728027
    9. 'ser' → logprob: -5.439169883728027
    10. '('' → logprob: -5.439169883728027

Token 57: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.587483221665025e-05
    2. '))' → logprob: -9.875065803527832
    3. ')
' → logprob: -11.875065803527832
    4. ' )' → logprob: -12.000065803527832
    5. ')`' → logprob: -14.375065803527832
    6. ')))' → logprob: -16.50006675720215
    7. '`)' → logprob: -16.62506675720215
    8. '),' → logprob: -16.62506675720215
    9. '   ' → logprob: -16.62506675720215
    10. ')**' → logprob: -17.00006675720215

Token 58: '   ' (ID: 271)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.4566033184528351
    2. '.' → logprob: -1.9566032886505127
    3. '(' → logprob: -2.2066032886505127
    4. ')' → logprob: -2.7066032886505127
    5. '[' → logprob: -4.456603527069092
    6. '())' → logprob: -4.831603527069092
    7. '_' → logprob: -4.956603527069092
    8. '.copy' → logprob: -5.331603527069092
    9. '().' → logprob: -5.456603527069092
    10. '()
' → logprob: -5.581603527069092

Token 59: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8862888813018799
    2. ' big' → logprob: -1.2612888813018799
    3. ')' → logprob: -1.7612888813018799
    4. 'big' → logprob: -2.51128888130188
    5. '[]' → logprob: -4.386288642883301
    6. ' ' → logprob: -5.011288642883301
    7. ' for' → logprob: -5.261288642883301
    8. '[' → logprob: -5.261288642883301
    9. '[:]' → logprob: -5.386288642883301
    10. ']' → logprob: -6.511288642883301

Token 60: ' o' (ID: 293)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -1.3621623516082764
    2. ' _' → logprob: -1.3621623516082764
    3. ' range' → logprob: -1.3621623516082764
    4. ' j' → logprob: -2.7371623516082764
    5. ' big' → logprob: -3.4871623516082764
    6. ' ' → logprob: -3.9871623516082764
    7. '_' → logprob: -4.2996625900268555
    8. ' bird' → logprob: -5.0496625900268555
    9. ' item' → logprob: -5.1746625900268555
    10. ' y' → logprob: -5.1746625900268555

Token 61: 'of' (ID: 1440)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.18199636042118073
    2. 'range' → logprob: -2.4319963455200195
    3. ' range' → logprob: -3.8069963455200195
    4. 'b' → logprob: -5.1194963455200195
    5. 'f' → logprob: -5.3069963455200195
    6. 'ut' → logprob: -5.5569963455200195
    7. 'o' → logprob: -5.7444963455200195
    8. 'ffset' → logprob: -5.8694963455200195
    9. 'cc' → logprob: -6.0569963455200195
    10. '2' → logprob: -6.1194963455200195

Token 62: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3485989570617676
    2. 'in' → logprob: -1.2235989570617676
    3. ' ' → logprob: -9.09859848022461
    4. ',' → logprob: -11.34859848022461
    5. 'range' → logprob: -11.84859848022461
    6. '   ' → logprob: -13.09859848022461
    7. '  ' → logprob: -13.22359848022461
    8. 'n' → logprob: -13.22359848022461
    9. ' ' → logprob: -13.34859848022461
    10. 'o' → logprob: -13.47359848022461

Token 63: ' (' (ID: 350)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.2534275949001312
    2. ' range' → logprob: -1.5034276247024536
    3. 'big' → logprob: -6.753427505493164
    4. ' big' → logprob: -8.753427505493164
    5. '[' → logprob: -9.628427505493164
    6. '	range' → logprob: -10.503427505493164
    7. 'dict' → logprob: -10.628427505493164
    8. 'b' → logprob: -11.128427505493164
    9. '(range' → logprob: -12.003427505493164
    10. '[_' → logprob: -12.378427505493164

Token 64: 'lambda' (ID: 35280)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.1360168159008026
    2. ' range' → logprob: -2.511016845703125
    3. 'dict' → logprob: -3.511016845703125
    4. 'big' → logprob: -4.761016845703125
    5. '[' → logprob: -6.761016845703125
    6. ' big' → logprob: -7.261016845703125
    7. ' u' → logprob: -7.261016845703125
    8. ')' → logprob: -7.261016845703125
    9. '_' → logprob: -7.386016845703125
    10. ' dict' → logprob: -7.511016845703125

Token 65: ' s' (ID: 265)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.4728447198867798
    2. ' range' → logprob: -2.8478446006774902
    3. 'x' → logprob: -2.9728446006774902
    4. ' y' → logprob: -3.0978446006774902
    5. ' i' → logprob: -3.3478446006774902
    6. ' l' → logprob: -3.8478446006774902
    7. ' k' → logprob: -3.9728446006774902
    8. 'range' → logprob: -4.09784460067749
    9. ' n' → logprob: -4.34784460067749
    10. ' j' → logprob: -4.47284460067749

Token 66: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.32151058316230774
    2. ' :' → logprob: -1.8215105533599854
    3. ' s' → logprob: -2.9465105533599854
    4. ':s' → logprob: -4.4465107917785645
    5. ':list' → logprob: -4.5715107917785645
    6. ' range' → logprob: -4.8215107917785645
    7. ',' → logprob: -4.9465107917785645
    8. 's' → logprob: -4.9465107917785645
    9. 'range' → logprob: -5.3215107917785645
    10. ':[' → logprob: -6.3215107917785645

Token 67: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.8441045880317688
    2. 'range' → logprob: -0.8441045880317688
    3. 's' → logprob: -3.469104528427124
    4. ' s' → logprob: -3.469104528427124
    5. ' list' → logprob: -4.219104766845703
    6. 'list' → logprob: -4.344104766845703
    7. '[' → logprob: -4.344104766845703
    8. ' [' → logprob: -4.844104766845703
    9. '[s' → logprob: -4.969104766845703
    10. 'str' → logprob: -5.594104766845703

Token 68: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.04168764874339104
    2. '(' → logprob: -3.9166877269744873
    3. '(u' → logprob: -4.041687488555908
    4. '(len' → logprob: -5.791687488555908
    5. '(-' → logprob: -9.791687965393066
    6. '(int' → logprob: -9.916687965393066
    7. 's' → logprob: -9.916687965393066
    8. '(n' → logprob: -10.291687965393066
    9. '(max' → logprob: -10.541687965393066
    10. '(o' → logprob: -10.791687965393066

Token 69: '))(' (ID: 72297)
  Prédit: '(u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.11293485760688782
    2. '):' → logprob: -2.9879348278045654
    3. '(' → logprob: -3.4879348278045654
    4. '(s' → logprob: -4.1129350662231445
    5. ')):' → logprob: -5.9879350662231445
    6. '(len' → logprob: -6.1129350662231445
    7. ')(' → logprob: -6.4879350662231445
    8. ' ):' → logprob: -7.3629350662231445
    9. 'u' → logprob: -7.6129350662231445
    10. ' (' → logprob: -7.7379350662231445

Token 70: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.28610408306121826
    2. ' u' → logprob: -1.4111040830612183
    3. 'dict' → logprob: -6.036104202270508
    4. '   ' → logprob: -7.286104202270508
    5. ' dict' → logprob: -7.911104202270508
    6. '(u' → logprob: -8.036104202270508
    7. '	u' → logprob: -8.411104202270508
    8. ' ' → logprob: -8.536104202270508
    9. '  ' → logprob: -9.286104202270508
    10. '    ' → logprob: -9.286104202270508

Token 71: 'fo' (ID: 1070)
  Prédit: 'fo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fo' → logprob: -0.00944686122238636
    2. ')' → logprob: -5.75944709777832
    3. 'f' → logprob: -6.38444709777832
    4. 'FO' → logprob: -6.88444709777832
    5. '   ' → logprob: -8.00944709777832
    6. '):' → logprob: -8.00944709777832
    7. '))' → logprob: -8.13444709777832
    8. '[' → logprob: -8.25944709777832
    9. 'foo' → logprob: -8.25944709777832
    10. '+' → logprob: -8.38444709777832

Token 72: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.001040671137161553
    2. ')' → logprob: -7.376040458679199
    3. ' ):' → logprob: -7.876040458679199
    4. ':' → logprob: -10.8760404586792
    5. '):
' → logprob: -11.7510404586792
    6. '+' → logprob: -12.8760404586792
    7. '   ' → logprob: -13.3760404586792
    8. ' ' → logprob: -14.2510404586792
    9. ' )' → logprob: -14.3760404586792
    10. ' :' → logprob: -15.3760404586792

Token 73: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07190019637346268
    2. '   ' → logprob: -3.8219001293182373
    3. '<|end|>' → logprob: -3.9469001293182373
    4. ' ' → logprob: -5.071900367736816
    5. ' big' → logprob: -5.071900367736816
    6. '    ' → logprob: -5.196900367736816
    7. 'big' → logprob: -5.821900367736816
    8. '        
' → logprob: -6.946900367736816
    9. ' 
' → logprob: -7.196900367736816
    10. ' ' → logprob: -7.446900367736816

Token 74: ' foo' (ID: 30551)
  Prédit: ' big'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' big' → logprob: -0.5100321173667908
    2. '   ' → logprob: -1.7600321769714355
    3. 'big' → logprob: -1.7600321769714355
    4. '    ' → logprob: -3.5100321769714355
    5. ' ' → logprob: -5.1350321769714355
    6. '       ' → logprob: -5.2600321769714355
    7. ' ' → logprob: -5.3850321769714355
    8. '	b' → logprob: -6.5100321769714355
    9. '        ' → logprob: -7.0100321769714355
    10. '  ' → logprob: -7.1350321769714355

Token 75: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4733467400074005
    2. '=' → logprob: -1.7233467102050781
    3. 's' → logprob: -1.8483467102050781
    4. 't' → logprob: -3.598346710205078
    5. ' ' → logprob: -5.723346710205078
    6. '   ' → logprob: -5.973346710205078
    7. 'r' → logprob: -6.723346710205078
    8. '.' → logprob: -6.848346710205078
    9. 'big' → logprob: -7.348346710205078
    10. 'd' → logprob: -7.598346710205078

Token 76: ' bar' (ID: 3608)
  Prédit: 'bar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bar' → logprob: -0.25495362281799316
    2. ' bar' → logprob: -1.5049536228179932
    3. '_' → logprob: -7.129953384399414
    4. '_bar' → logprob: -7.254953384399414
    5. ' ' → logprob: -8.004953384399414
    6. '	bar' → logprob: -9.004953384399414
    7. 'boo' → logprob: -9.129953384399414
    8. ' _' → logprob: -9.129953384399414
    9. 'baa' → logprob: -9.379953384399414
    10. ' barr' → logprob: -9.379953384399414

Token 77: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4743208587169647
    2. ' =' → logprob: -0.9743208885192871
    3. ',' → logprob: -8.474320411682129
    4. '=input' → logprob: -10.724320411682129
    5. ' ' → logprob: -12.599320411682129
    6. ')' → logprob: -12.849320411682129
    7. '=line' → logprob: -13.724320411682129
    8. '=int' → logprob: -13.974320411682129
    9. '    ' → logprob: -14.099320411682129
    10. 's' → logprob: -14.724320411682129

Token 78: ' [' (ID: 723)
  Prédit: ' map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.4108770489692688
    2. ' input' → logprob: -1.785876989364624
    3. 'map' → logprob: -2.410876989364624
    4. 'input' → logprob: -2.910876989364624
    5. ' [' → logprob: -4.285877227783203
    6. '[' → logprob: -5.410877227783203
    7. ' list' → logprob: -6.160877227783203
    8. '[input' → logprob: -6.160877227783203
    9. ' ' → logprob: -7.535877227783203
    10. 'list' → logprob: -7.660877227783203

Token 79: '*' (ID: 9)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.020504049956798553
    2. '*' → logprob: -4.020503997802734
    3. ' int' → logprob: -6.895503997802734
    4. 'map' → logprob: -7.145503997802734
    5. '   ' → logprob: -8.895503997802734
    6. ']int' → logprob: -9.020503997802734
    7. 'input' → logprob: -9.395503997802734
    8. ' map' → logprob: -10.020503997802734
    9. '[int' → logprob: -10.395503997802734
    10. '0' → logprob: -10.895503997802734

Token 80: 'map' (ID: 3726)
  Prédit: 'map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.00880837719887495
    2. 'input' → logprob: -5.008808612823486
    3. ' map' → logprob: -6.258808612823486
    4. '(map' → logprob: -9.133808135986328
    5. 'range' → logprob: -10.758808135986328
    6. 'int' → logprob: -11.008808135986328
    7. 'list' → logprob: -12.133808135986328
    8. ' input' → logprob: -12.258808135986328
    9. '	map' → logprob: -12.383808135986328
    10. '[' → logprob: -12.883808135986328

Token 81: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0011737978784367442
    2. 'int' → logprob: -7.376173973083496
    3. '(' → logprob: -7.626173973083496
    4. '(str' → logprob: -10.626173973083496
    5. ']int' → logprob: -11.876173973083496
    6. '(
' → logprob: -12.001173973083496
    7. '(lambda' → logprob: -12.501173973083496
    8. ' (' → logprob: -12.626173973083496
    9. '(input' → logprob: -13.001173973083496
    10. '(float' → logprob: -13.126173973083496

Token 82: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0053090620785951614
    2. ',input' → logprob: -5.630309104919434
    3. ')]' → logprob: -7.505309104919434
    4. '(' → logprob: -7.755309104919434
    5. ',' → logprob: -8.130309104919434
    6. ')' → logprob: -8.255309104919434
    7. 'input' → logprob: -9.005309104919434
    8. '<|end|>' → logprob: -11.380309104919434
    9. ' input' → logprob: -12.130309104919434
    10. ')(' → logprob: -12.130309104919434

Token 83: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.04318096861243248
    2. ' input' → logprob: -3.1681809425354004
    3. '(input' → logprob: -8.668181419372559
    4. ')' → logprob: -12.543181419372559
    5. ',input' → logprob: -12.668181419372559
    6. '=input' → logprob: -13.918181419372559
    7. '	input' → logprob: -14.168181419372559
    8. '[input' → logprob: -14.668181419372559
    9. '   ' → logprob: -15.043181419372559
    10. '_input' → logprob: -15.418181419372559

Token 84: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -8.602024900028482e-05
    2. '()' → logprob: -9.375085830688477
    3. '(' → logprob: -14.875085830688477
    4. '()
' → logprob: -15.000085830688477
    5. ' ().' → logprob: -15.375085830688477
    6. '())' → logprob: -15.625085830688477
    7. ')' → logprob: -17.375085830688477
    8. ' ' → logprob: -18.000085830688477
    9. '().__' → logprob: -18.625085830688477
    10. '   ' → logprob: -19.000085830688477

Token 85: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00415651872754097
    2. 'strip' → logprob: -5.504156589508057
    3. 'rstrip' → logprob: -9.754156112670898
    4. ' split' → logprob: -10.879156112670898
    5. 'read' → logprob: -14.754156112670898
    6. 'spl' → logprob: -14.879156112670898
    7. '(split' → logprob: -15.129156112670898
    8. '().' → logprob: -16.3791561126709
    9. 's' → logprob: -17.0041561126709
    10. ' strip' → logprob: -17.1291561126709

Token 86: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0205594040453434
    2. '()' → logprob: -4.020559310913086
    3. '()))' → logprob: -6.645559310913086
    4. '()]' → logprob: -6.895559310913086
    5. '(' → logprob: -9.645559310913086
    6. ')]' → logprob: -10.645559310913086
    7. ' ())' → logprob: -13.895559310913086
    8. '())
' → logprob: -14.145559310913086
    9. '()),' → logprob: -14.145559310913086
    10. '('' → logprob: -14.270559310913086

Token 87: ']
' (ID: 1592)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.011190474964678288
    2. '())' → logprob: -4.886190414428711
    3. ')' → logprob: -6.386190414428711
    4. '()' → logprob: -6.761190414428711
    5. '()]' → logprob: -7.511190414428711
    6. ')])' → logprob: -9.511190414428711
    7. ' )' → logprob: -10.261190414428711
    8. ')],' → logprob: -10.886190414428711
    9. '),' → logprob: -11.386190414428711
    10. ')]
' → logprob: -11.386190414428711

Token 88: '       ' (ID: 309)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1413965225219727
    2. ' ' → logprob: -1.7663965225219727
    3. '<|end|>' → logprob: -1.8913965225219727
    4. '
' → logprob: -2.0163965225219727
    5. '   ' → logprob: -3.2663965225219727
    6. '       ' → logprob: -3.2663965225219727
    7. ' 
' → logprob: -3.5163965225219727
    8. '    
' → logprob: -3.6413965225219727
    9. '        
' → logprob: -4.016396522521973
    10. '  
' → logprob: -4.141396522521973

Token 89: ' big' (ID: 3464)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.631886899471283
    2. 'big' (adapté à ' big') → logprob: -1.2568869590759277
    3. '<|end|>' → logprob: -2.6318869590759277
    4. ' 
' → logprob: -3.3818869590759277
    5. ' big' → logprob: -3.5068869590759277
    6. '   ' → logprob: -5.006886959075928
    7. '    
' → logprob: -5.006886959075928
    8. '   
' → logprob: -5.756886959075928
    9. '  
' → logprob: -5.756886959075928
    10. '  ' → logprob: -6.006886959075928

Token 90: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -7.896309739408025e-07
    2. ' l' → logprob: -15.000000953674316
    3. '```' → logprob: -15.750000953674316
    4. '	l' → logprob: -15.875000953674316
    5. '[l' → logprob: -17.0
    6. 'л' → logprob: -17.125
    7. '_l' → logprob: -17.25
    8. '[' → logprob: -18.0625
    9. '1' → logprob: -18.5
    10. 'lst' → logprob: -18.5

Token 91: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.935296834039036e-06
    2. ' [' → logprob: -14.75000286102295
    3. '[o' → logprob: -14.75000286102295
    4. '[event' → logprob: -14.75000286102295
    5. '[u' → logprob: -15.12500286102295
    6. '[word' → logprob: -15.25000286102295
    7. '[e' → logprob: -16.125003814697266
    8. '[[' → logprob: -16.250003814697266
    9. '[obj' → logprob: -16.375003814697266
    10. '[assembly' → logprob: -16.625003814697266

Token 92: 'egg' (ID: 72126)
  Prédit: 'egg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'egg' → logprob: -0.00012856863031629473
    2. ' egg' → logprob: -9.000128746032715
    3. 'eg' → logprob: -12.750128746032715
    4. 'o' → logprob: -13.750128746032715
    5. 'e' → logprob: -15.500128746032715
    6. 'Egg' → logprob: -15.625128746032715
    7. '   ' → logprob: -16.1251277923584
    8. '[' → logprob: -16.6251277923584
    9. 'ego' → logprob: -17.0001277923584
    10. ' ' → logprob: -17.0001277923584

Token 93: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.0009675608016550541
    2. ']' → logprob: -8.000967979431152
    3. '.append' → logprob: -8.500967979431152
    4. ' ].' → logprob: -8.500967979431152
    5. '][' → logprob: -8.625967979431152
    6. ').' → logprob: -10.625967979431152
    7. '.' → logprob: -12.000967979431152
    8. '[' → logprob: -12.125967979431152
    9. '   ' → logprob: -12.625967979431152
    10. 'append' → logprob: -12.750967979431152

Token 94: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -0.00010366239439463243
    2. ' append' → logprob: -10.125103950500488
    3. 'copy' → logprob: -10.500103950500488
    4. '.append' → logprob: -10.625103950500488
    5. 'insert' → logprob: -12.750103950500488
    6. 'extend' → logprob: -13.000103950500488
    7. 'appen' → logprob: -13.125103950500488
    8. 'app' → logprob: -13.750103950500488
    9. '_append' → logprob: -14.125103950500488
    10. '	append' → logprob: -14.250103950500488

Token 95: '((' (ID: 2054)
  Prédit: '(['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.482408732175827
    2. '((' → logprob: -1.1074087619781494
    3. '(bar' → logprob: -3.7324087619781494
    4. '(' → logprob: -4.10740852355957
    5. '(foo' → logprob: -4.48240852355957
    6. '[' → logprob: -7.60740852355957
    7. '([]' → logprob: -11.48240852355957
    8. '(tuple' → logprob: -11.60740852355957
    9. '(True' → logprob: -11.73240852355957
    10. '(([' → logprob: -11.85740852355957

Token 96: 'foo' (ID: 16660)
  Prédit: 'foo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'foo' → logprob: -0.0031918513122946024
    2. ' foo' → logprob: -5.753191947937012
    3. '(foo' → logprob: -12.003191947937012
    4. '   ' → logprob: -13.003191947937012
    5. ' ' → logprob: -13.378191947937012
    6. 'fo' → logprob: -13.628191947937012
    7. 'bar' → logprob: -13.753191947937012
    8. '    ' → logprob: -15.128191947937012
    9. '  ' → logprob: -15.128191947937012
    10. 'foobar' → logprob: -15.378191947937012

Token 97: '-' (ID: 12)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00977556686848402
    2. ' ,' → logprob: -4.634775638580322
    3. ' ' → logprob: -12.009775161743164
    4. '-' → logprob: -12.384775161743164
    5. '   ' → logprob: -13.134775161743164
    6. ' bar' → logprob: -13.509775161743164
    7. 'bar' → logprob: -13.884775161743164
    8. ',b' → logprob: -13.884775161743164
    9. ',
' → logprob: -14.009775161743164
    10. ' -' → logprob: -14.259775161743164

Token 98: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0011708177626132965
    2. ' ' → logprob: -6.751170635223389
    3. '   ' → logprob: -14.876171112060547
    4. '0' → logprob: -16.126171112060547
    5. '<|end|>' → logprob: -17.501171112060547
    6. '2' → logprob: -17.626171112060547
    7. '    ' → logprob: -18.001171112060547
    8. ' bar' → logprob: -18.126171112060547
    9. 'bar' → logprob: -18.376171112060547
    10. '  ' → logprob: -18.438671112060547

Token 99: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012521898373961449
    2. ' ,' → logprob: -4.387521743774414
    3. ')' → logprob: -12.387521743774414
    4. '   ' → logprob: -13.262521743774414
    5. ',
' → logprob: -13.637521743774414
    6. '       ' → logprob: -13.887521743774414
    7. '<|end|>' → logprob: -13.887521743774414
    8. '	bar' → logprob: -14.262521743774414
    9. ',b' → logprob: -14.387521743774414
    10. ' ' → logprob: -15.012521743774414

Token 100: ' bar' (ID: 3608)
  Prédit: 'bar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bar' → logprob: -0.1427692025899887
    2. ' bar' → logprob: -2.0177690982818604
    3. ' ' → logprob: -10.267768859863281
    4. '	bar' → logprob: -10.767768859863281
    5. '(bar' → logprob: -11.517768859863281
    6. '   ' → logprob: -11.642768859863281
    7. '  ' → logprob: -11.767768859863281
    8. '    ' → logprob: -12.705268859863281
    9. ' ' → logprob: -13.767768859863281
    10. ' (' → logprob: -14.455268859863281

Token 101: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0033997902646660805
    2. ' ))' → logprob: -6.003399848937988
    3. '))
' → logprob: -7.628399848937988
    4. '-' → logprob: -8.503399848937988
    5. ')' → logprob: -9.628399848937988
    6. '+' → logprob: -9.878399848937988
    7. ')))' → logprob: -10.253399848937988
    8. ' -' → logprob: -10.628399848937988
    9. ',' → logprob: -10.753399848937988
    10. ' )' → logprob: -12.003399848937988

Token 102: 'result' (ID: 2521)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.33289259672164917
    2. '<|end|>' → logprob: -1.332892656326294
    3. ' ' → logprob: -4.332892417907715
    4. '#' → logprob: -6.082892417907715
    5. ']' → logprob: -6.707892417907715
    6. '   ' → logprob: -7.332892417907715
    7. '[' → logprob: -7.457892417907715
    8. '<|end|>' → logprob: -7.707892417907715
    9. ' )' → logprob: -7.832892417907715
    10. '```' → logprob: -8.957892417907715

Token 103: 'o' (ID: 78)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.05138840153813362
    2. ' =' → logprob: -3.1763885021209717
    3. '=' → logprob: -5.051388263702393
    4. 'a' → logprob: -7.176388263702393
    5. '<|end|>' → logprob: -7.426388263702393
    6. ' ' → logprob: -8.17638874053955
    7. 'dict' → logprob: -9.92638874053955
    8. ' s' → logprob: -10.17638874053955
    9. '=[]' → logprob: -10.42638874053955
    10. '.' → logprob: -10.55138874053955

Token 104: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.06860877573490143
    2. ' =' → logprob: -2.9436087608337402
    3. '=' → logprob: -4.44360876083374
    4. 't' → logprob: -7.56860876083374
    5. '_' → logprob: -8.318609237670898
    6. '.' → logprob: -8.318609237670898
    7. 'dict' → logprob: -8.568609237670898
    8. 'd' → logprob: -9.068609237670898
    9. '[:]' → logprob: -9.068609237670898
    10. 'a' → logprob: -9.193609237670898

Token 105: ' -' (ID: 533)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0345789194107056
    2. ' [' → logprob: -1.0345789194107056
    3. '0' → logprob: -2.409578800201416
    4. '[]' → logprob: -2.659578800201416
    5. ' []' → logprob: -2.909578800201416
    6. ' ' → logprob: -3.784578800201416
    7. '{}' → logprob: -4.409578800201416
    8. ' {}' → logprob: -4.659578800201416
    9. 'dict' → logprob: -5.409578800201416
    10. 'sum' → logprob: -5.909578800201416

Token 106: '9' (ID: 24)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0017131395870819688
    2. '100' → logprob: -7.251713275909424
    3. '10' → logprob: -8.126712799072266
    4. '999' → logprob: -8.251712799072266
    5. '2' → logprob: -9.001712799072266
    6. 'float' → logprob: -9.126712799072266
    7. ' ' → logprob: -10.126712799072266
    8. 'max' → logprob: -11.126712799072266
    9. 'int' → logprob: -11.126712799072266
    10. '987' → logprob: -11.251712799072266

Token 107: '**' (ID: 410)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 108: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.06565794348716736
    2. '99' → logprob: -3.8156578540802
    3. '15' → logprob: -4.440658092498779
    4. '18' → logprob: -4.440658092498779
    5. '999' → logprob: -5.190658092498779
    6. '10' → logprob: -5.565658092498779
    7. '12' → logprob: -6.190658092498779
    8. '100' → logprob: -6.190658092498779
    9. '8' → logprob: -6.440658092498779
    10. '6' → logprob: -7.190658092498779

Token 109: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 110: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8805091977119446
    2. ' for' → logprob: -1.5055091381072998
    3. ' 
' → logprob: -2.1305091381073
    4. ' ' → logprob: -2.3805091381073
    5. '
' → logprob: -2.6305091381073
    6. '  
' → logprob: -3.6305091381073
    7. '\n' → logprob: -4.505509376525879
    8. '<|end|>' → logprob: -5.005509376525879
    9. '0' → logprob: -5.130509376525879
    10. '+' → logprob: -5.255509376525879

Token 111: ' mask' (ID: 10910)
  Prédit: ' egg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' egg' → logprob: -0.2796204090118408
    2. ' i' → logprob: -2.404620409011841
    3. ' _' → logprob: -4.404620170593262
    4. ' u' → logprob: -4.779620170593262
    5. ' o' → logprob: -5.029620170593262
    6. ' x' → logprob: -5.092120170593262
    7. ' idx' → logprob: -5.154620170593262
    8. '_' → logprob: -5.154620170593262
    9. 'egg' → logprob: -5.467120170593262
    10. ' l' → logprob: -5.717120170593262

Token 112: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0013539257925003767
    2. 'in' → logprob: -6.626353740692139
    3. ' ' → logprob: -10.626354217529297
    4. ',' → logprob: -13.501354217529297
    5. '```' → logprob: -14.501354217529297
    6. ' ' → logprob: -15.126354217529297
    7. '1' → logprob: -15.501354217529297
    8. 's' → logprob: -16.126354217529297
    9. '_' → logprob: -16.376354217529297
    10. '   ' → logprob: -16.438854217529297

Token 113: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.012559332884848118
    2. 'range' → logprob: -4.387559413909912
    3. '(range' → logprob: -10.137558937072754
    4. '(' → logprob: -13.137558937072754
    5. ' ' → logprob: -13.137558937072754
    6. ' (' → logprob: -13.262558937072754
    7. '[' → logprob: -13.512558937072754
    8. '	range' → logprob: -13.762558937072754
    9. '   ' → logprob: -15.012558937072754
    10. '[*' → logprob: -15.012558937072754

Token 114: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.8193366486229934e-05
    2. '((' → logprob: -11.000018119812012
    3. ' (' → logprob: -14.000018119812012
    4. '(
' → logprob: -15.250018119812012
    5. '(N' → logprob: -15.500018119812012
    6. '1' → logprob: -16.875019073486328
    7. '(len' → logprob: -17.875019073486328
    8. ' ' → logprob: -18.125019073486328
    9. '(pow' → logprob: -18.125019073486328
    10. '()' → logprob: -18.375019073486328

Token 115: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.010503687895834446
    2. '2' → logprob: -4.760503768920898
    3. '(' → logprob: -6.510503768920898
    4. ' ' → logprob: -7.885503768920898
    5. '   ' → logprob: -10.885503768920898
    6. '3' → logprob: -13.385503768920898
    7. 'N' → logprob: -14.260503768920898
    8. ' (' → logprob: -14.385503768920898
    9. '  ' → logprob: -14.760503768920898
    10. '    ' → logprob: -15.260503768920898

Token 116: '<<(' (ID: 82331)
  Prédit: ' <<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <<' → logprob: -0.3593906760215759
    2. '<<' → logprob: -1.3593907356262207
    3. ',' → logprob: -3.2343907356262207
    4. ' ,' → logprob: -5.234390735626221
    5. '<<(' → logprob: -8.484390258789062
    6. ' ' → logprob: -9.109390258789062
    7. '   ' → logprob: -10.734390258789062
    8. '1' → logprob: -11.484390258789062
    9. ' <<
' → logprob: -12.484390258789062
    10. ',N' → logprob: -13.359390258789062

Token 117: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -9.849109119386412e-06
    2. ' N' → logprob: -11.875009536743164
    3. '   ' → logprob: -13.125009536743164
    4. ' ' → logprob: -15.250009536743164
    5. '  ' → logprob: -16.000009536743164
    6. '10' → logprob: -16.000009536743164
    7. 'len' → logprob: -16.125009536743164
    8. 'n' → logprob: -17.000009536743164
    9. '9' → logprob: -17.000009536743164
    10. '```' → logprob: -17.375009536743164

Token 118: ')):
' (ID: 22530)
  Prédit: ')):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')):' → logprob: -0.0355423167347908
    2. ')):
' → logprob: -4.2855424880981445
    3. '))' → logprob: -4.6605424880981445
    4. ')' → logprob: -4.6605424880981445
    5. '):' → logprob: -6.4105424880981445
    6. ')):
' → logprob: -8.285542488098145
    7. ' ))' → logprob: -9.160542488098145
    8. ' ' → logprob: -9.160542488098145
    9. '```' → logprob: -10.035542488098145
    10. '):
' → logprob: -10.535542488098145

Token 119: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4565802216529846
    2. ' ' → logprob: -1.7065801620483398
    3. '<|end|>' → logprob: -2.33158016204834
    4. '    ' → logprob: -3.33158016204834
    5. ' 
' → logprob: -3.83158016204834
    6. '    
' → logprob: -4.95658016204834
    7. ' :
' → logprob: -5.33158016204834
    8. ' :' → logprob: -5.45658016204834
    9. ' if' → logprob: -6.08158016204834
    10. '
' → logprob: -6.20658016204834

Token 120: ' mask' (ID: 10910)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'score' → logprob: -1.2274466753005981
    2. '   ' → logprob: -2.2274465560913086
    3. 'sum' → logprob: -2.3524465560913086
    4. 'res' → logprob: -2.9774465560913086
    5. 'total' → logprob: -3.2274465560913086
    6. 'val' → logprob: -3.2274465560913086
    7. 's' → logprob: -3.2274465560913086
    8. 'valid' → logprob: -3.4774465560913086
    9. 'count' → logprob: -3.9774465560913086
    10. 'cur' → logprob: -3.9774465560913086

Token 121: 'y' (ID: 88)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '&' → logprob: -0.3639692962169647
    2. ' &' → logprob: -1.738969326019287
    3. ':' → logprob: -2.488969326019287
    4. '=' → logprob: -4.113969326019287
    5. ',' → logprob: -4.988969326019287
    6. '   ' → logprob: -5.488969326019287
    7. '>>' → logprob: -5.738969326019287
    8. ' &=' → logprob: -5.863969326019287
    9. ')' → logprob: -6.363969326019287
    10. '|' → logprob: -6.613969326019287

Token 122: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.022221565246582
    2. '&' → logprob: -1.147221565246582
    3. ' &' → logprob: -1.772221565246582
    4. ' =' → logprob: -2.522221565246582
    5. ' &=' → logprob: -3.147221565246582
    6. '_' → logprob: -3.897221565246582
    7. ')' → logprob: -6.022221565246582
    8. ',' → logprob: -6.147221565246582
    9. ' |=' → logprob: -7.272221565246582
    10. ' ' → logprob: -7.522221565246582

Token 123: ' [' (ID: 723)
  Prédit: 'mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mask' → logprob: -1.0837093591690063
    2. '0' → logprob: -1.2087093591690063
    3. '(mask' → logprob: -2.208709239959717
    4. 'bin' → logprob: -2.708709239959717
    5. ' mask' → logprob: -3.208709239959717
    6. '[]' → logprob: -3.333709239959717
    7. '(' → logprob: -3.583709239959717
    8. ' ' → logprob: -3.833709239959717
    9. '[' → logprob: -4.083709239959717
    10. '(bin' → logprob: -4.458709239959717

Token 124: 'int' (ID: 491)
  Prédit: '(mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(mask' → logprob: -0.7661064863204956
    2. 'bool' → logprob: -1.5161064863204956
    3. 'mask' → logprob: -2.766106605529785
    4. '(' → logprob: -2.891106605529785
    5. '((' → logprob: -2.891106605529785
    6. '(bool' → logprob: -3.016106605529785
    7. '(i' → logprob: -4.016106605529785
    8. 'False' → logprob: -4.016106605529785
    9. 'int' → logprob: -4.141106605529785
    10. '0' → logprob: -4.516106605529785

Token 125: '(c' (ID: 2410)
  Prédit: '(bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(bool' → logprob: -0.9081283807754517
    2. '((' → logprob: -1.2831283807754517
    3. '(x' → logprob: -1.4081283807754517
    4. '(i' → logprob: -2.783128261566162
    5. '(bit' → logprob: -5.658128261566162
    6. '(' → logprob: -6.283128261566162
    7. '(d' → logprob: -6.408128261566162
    8. '(_)' → logprob: -6.658128261566162
    9. '(b' → logprob: -6.908128261566162
    10. '(c' → logprob: -7.158128261566162

Token 126: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06093455106019974
    2. 'for' → logprob: -4.435934543609619
    3. 'in' → logprob: -4.685934543609619
    4. '('' → logprob: -4.810934543609619
    5. '(x' → logprob: -5.185934543609619
    6. ''' → logprob: -5.435934543609619
    7. '')' → logprob: -5.685934543609619
    8. '   ' → logprob: -5.685934543609619
    9. '(' → logprob: -5.810934543609619
    10. ' ' → logprob: -6.435934543609619

Token 127: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5252828001976013
    2. ' for' → logprob: -0.9002828001976013
    3. ')' → logprob: -6.650282859802246
    4. ' ' → logprob: -7.900282859802246
    5. 'or' → logprob: -8.400282859802246
    6. ' in' → logprob: -9.525282859802246
    7. 'in' → logprob: -9.525282859802246
    8. '   ' → logprob: -10.775282859802246
    9. '  ' → logprob: -11.400282859802246
    10. '==' → logprob: -11.525282859802246

Token 128: ' c' (ID: 274)
  Prédit: 'bin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bin' → logprob: -0.003834756091237068
    2. ' bin' → logprob: -5.8788347244262695
    3. 'f' → logprob: -7.0038347244262695
    4. ' f' → logprob: -9.62883472442627
    5. 'format' → logprob: -10.37883472442627
    6. 'b' → logprob: -11.62883472442627
    7. 'str' → logprob: -12.12883472442627
    8. '(bin' → logprob: -12.62883472442627
    9. 're' → logprob: -13.37883472442627
    10. ' ' → logprob: -13.50383472442627

Token 129: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.35028451681137085
    2. ' in' → logprob: -1.2252845764160156
    3. 'bin' → logprob: -6.350284576416016
    4. ' ' → logprob: -9.725284576416016
    5. '  ' → logprob: -11.475284576416016
    6. '   ' → logprob: -12.225284576416016
    7. ' bin' → logprob: -12.475284576416016
    8. 'f' → logprob: -12.600284576416016
    9. '(bin' → logprob: -12.975284576416016
    10. 'x' → logprob: -13.225284576416016

Token 130: ' f' (ID: 285)
  Prédit: 'bin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bin' → logprob: -0.08724987506866455
    2. 'f' → logprob: -2.587249755859375
    3. 'format' → logprob: -5.462249755859375
    4. ' bin' → logprob: -5.962249755859375
    5. ' f' → logprob: -6.837249755859375
    6. 'str' → logprob: -8.837249755859375
    7. ' format' → logprob: -9.212249755859375
    8. 'list' → logprob: -10.087249755859375
    9. '(bin' → logprob: -10.337249755859375
    10. '"{' → logprob: -10.462249755859375

Token 131: '"{' (ID: 27510)
  Prédit: 'bin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bin' → logprob: -0.09253260493278503
    2. 'format' → logprob: -2.7175326347351074
    3. 'f' → logprob: -4.717532634735107
    4. 'ormat' → logprob: -5.342532634735107
    5. ''{' → logprob: -5.467532634735107
    6. '"{' → logprob: -5.592532634735107
    7. ' bin' → logprob: -8.21753215789795
    8. ' format' → logprob: -8.71753215789795
    9. '(bin' → logprob: -8.96753215789795
    10. 'orm' → logprob: -9.71753215789795

Token 132: 'mask' (ID: 22527)
  Prédit: 'mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mask' → logprob: -0.0007311395602300763
    2. 'bin' → logprob: -7.250730991363525
    3. ' mask' → logprob: -10.875731468200684
    4. '(mask' → logprob: -14.375731468200684
    5. '0' → logprob: -14.875731468200684
    6. '   ' → logprob: -15.125731468200684
    7. 'format' → logprob: -15.500731468200684
    8. ':' → logprob: -16.000730514526367
    9. '
' → logprob: -16.000730514526367
    10. ' ' → logprob: -16.000730514526367

Token 133: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00031615851912647486
    2. ':b' → logprob: -8.250316619873047
    3. ':{' → logprob: -10.375316619873047
    4. '{' → logprob: -11.750316619873047
    5. ' :' → logprob: -12.000316619873047
    6. ':N' → logprob: -12.500316619873047
    7. '0' → logprob: -13.125316619873047
    8. ':#' → logprob: -14.000316619873047
    9. 'b' → logprob: -14.625316619873047
    10. ':<' → logprob: -15.125316619873047

Token 134: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00016337241686414927
    2. '{' → logprob: -9.125163078308105
    3. ' ' → logprob: -10.750163078308105
    4. 'b' → logprob: -11.125163078308105
    5. 'N' → logprob: -11.875163078308105
    6. '>' → logprob: -12.250163078308105
    7. 'f' → logprob: -12.875163078308105
    8. '#' → logprob: -13.750163078308105
    9. '  ' → logprob: -14.625163078308105
    10. '   ' → logprob: -15.000163078308105

Token 135: '{' (ID: 90)
  Prédit: '{'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.00020020268857479095
    2. '0' → logprob: -8.625200271606445
    3. 'N' → logprob: -11.375200271606445
    4. 'b' → logprob: -12.250200271606445
    5. ' {' → logprob: -12.875200271606445
    6. ' ' → logprob: -14.625200271606445
    7. '{
' → logprob: -15.000200271606445
    8. '{}' → logprob: -15.125200271606445
    9. '>{' → logprob: -15.375200271606445
    10. '
' → logprob: -15.500200271606445

Token 136: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.038116078823804855
    2. '{' → logprob: -3.288115978240967
    3. ' N' → logprob: -9.663116455078125
    4. '   ' → logprob: -12.788116455078125
    5. ' ' → logprob: -12.913116455078125
    6. '
' → logprob: -13.288116455078125
    7. '{}' → logprob: -13.788116455078125
    8. '>N' → logprob: -14.413116455078125
    9. '  ' → logprob: -14.538116455078125
    10. '	N' → logprob: -14.788116455078125

Token 137: '}' (ID: 92)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0002036595979006961
    2. '}' → logprob: -8.500204086303711
    3. ' b' → logprob: -16.75020408630371
    4. '_b' → logprob: -17.12520408630371
    5. '{' → logprob: -17.37520408630371
    6. ')b' → logprob: -18.12520408630371
    7. '[b' → logprob: -18.25020408630371
    8. '$b' → logprob: -18.37520408630371
    9. '*b' → logprob: -18.75020408630371
    10. '>b' → logprob: -18.75020408630371

Token 138: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0004904801025986671
    2. '}' → logprob: -7.625490665435791
    3. '}"' → logprob: -13.125490188598633
    4. ' b' → logprob: -16.375490188598633
    5. ')b' → logprob: -16.500490188598633
    6. '_b' → logprob: -16.625490188598633
    7. '[b' → logprob: -17.250490188598633
    8. '
' → logprob: -17.500490188598633
    9. 's' → logprob: -17.500490188598633
    10. '{' → logprob: -17.625490188598633

Token 139: '}"' (ID: 21503)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.06434045732021332
    2. '"]' → logprob: -2.939340353012085
    3. ']' → logprob: -5.189340591430664
    4. '}"' → logprob: -5.689340591430664
    5. '"}' → logprob: -8.439340591430664
    6. '}]' → logprob: -9.189340591430664
    7. ']"' → logprob: -9.689340591430664
    8. '}")' → logprob: -10.564340591430664
    9. '"' → logprob: -11.189340591430664
    10. '"]]' → logprob: -11.939340591430664

Token 140: '[::-' (ID: 159890)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0016096011968329549
    2. ']
' → logprob: -6.501609802246094
    3. ' ]' → logprob: -9.626609802246094
    4. '()]' → logprob: -10.876609802246094
    5. ')]' → logprob: -11.251609802246094
    6. ']
' → logprob: -12.501609802246094
    7. '   ' → logprob: -13.501609802246094
    8. ']

' → logprob: -14.001609802246094
    9. '"]' → logprob: -14.126609802246094
    10. '']' → logprob: -14.876609802246094

Token 141: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2984476089477539
    2. 'N' → logprob: -1.798447608947754
    3. ']' → logprob: -2.923447608947754
    4. 's' → logprob: -4.673447608947754
    5. '])' → logprob: -4.798447608947754
    6. 'd' → logprob: -4.923447608947754
    7. ')]' → logprob: -5.798447608947754
    8. '```' → logprob: -6.298447608947754
    9. '_N' → logprob: -6.673447608947754
    10. ']}' → logprob: -7.048447608947754

Token 142: ']]
' (ID: 29446)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00037371189682744443
    2. ']
' → logprob: -8.500373840332031
    3. ')]' → logprob: -9.250373840332031
    4. ' ]' → logprob: -9.750373840332031
    5. '()]' → logprob: -12.125373840332031
    6. '   ' → logprob: -12.750373840332031
    7. ']
' → logprob: -13.625373840332031
    8. ']]' → logprob: -13.875373840332031
    9. ']

' → logprob: -14.125373840332031
    10. '])' → logprob: -14.125373840332031

Token 143: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.033738598227500916
    2. ' for' → logprob: -3.783738613128662
    3. 'for' → logprob: -5.158738613128662
    4. ' if' → logprob: -6.533738613128662
    5. ')' → logprob: -7.033738613128662
    6. '<|end|>' → logprob: -7.033738613128662
    7. 'if' → logprob: -8.408738136291504
    8. '
' → logprob: -8.408738136291504
    9. '    
' → logprob: -8.533738136291504
    10. ']' → logprob: -8.908738136291504

Token 144: ' score' (ID: 8429)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -1.7380945682525635
    2. 'for' → logprob: -1.8630945682525635
    3. 's' → logprob: -1.9880945682525635
    4. 'score' (adapté à ' score') → logprob: -2.2380945682525635
    5. 'total' → logprob: -2.4880945682525635
    6. '   ' → logprob: -2.8630945682525635
    7. 'val' → logprob: -3.1130945682525635
    8. 'res' → logprob: -3.1130945682525635
    9. 'valid' → logprob: -3.8630945682525635
    10. 'cur' → logprob: -4.113094329833984

Token 145: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2824830412864685
    2. '=' → logprob: -1.4074831008911133
    3. ' +=' → logprob: -6.907483100891113
    4. '+=' → logprob: -8.157483100891113
    5. ' ' → logprob: -10.532483100891113
    6. ',' → logprob: -12.032483100891113
    7. '_' → logprob: -12.657483100891113
    8. '+' → logprob: -12.782483100891113
    9. 's' → logprob: -13.407483100891113
    10. '_=' → logprob: -13.782483100891113

Token 146: ' sum' (ID: 4215)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0076709832064807415
    2. ' ' → logprob: -4.882670879364014
    3. '   ' → logprob: -10.007671356201172
    4. 'dict' → logprob: -12.382671356201172
    5. '       ' → logprob: -12.757671356201172
    6. 'sum' → logprob: -12.882671356201172
    7. '9' → logprob: -13.445171356201172
    8. '  ' → logprob: -13.507671356201172
    9. '    ' → logprob: -13.820171356201172
    10. '1' → logprob: -14.070171356201172

Token 147: '(mask' (ID: 80748)
  Prédit: '(dict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(dict' → logprob: -0.32254084944725037
    2. '((' → logprob: -2.322540760040283
    3. '(' → logprob: -2.947540760040283
    4. '(
' → logprob: -3.072540760040283
    5. '(b' → logprob: -3.072540760040283
    6. '([' → logprob: -4.322540760040283
    7. 'dict' → logprob: -4.822540760040283
    8. '(big' → logprob: -5.947540760040283
    9. '(((' → logprob: -6.072540760040283
    10. '(bar' → logprob: -6.822540760040283

Token 148: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.46617740392684937
    2. '[' → logprob: -1.7161774635314941
    3. '[y' → logprob: -2.216177463531494
    4. '[i' → logprob: -2.591177463531494
    5. '[k' → logprob: -5.591177463531494
    6. '[c' → logprob: -6.466177463531494
    7. ')' → logprob: -7.216177463531494
    8. '[m' → logprob: -7.716177463531494
    9. '[x' → logprob: -7.716177463531494
    10. '[token' → logprob: -8.091176986694336

Token 149: ')
' (ID: 446)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.002432024572044611
    2. '[' → logprob: -7.127431869506836
    3. '[k' → logprob: -7.377431869506836
    4. '[o' → logprob: -8.127431869506836
    5. '[n' → logprob: -8.627431869506836
    6. '[idx' → logprob: -9.002431869506836
    7. '[_' → logprob: -9.502431869506836
    8. '[x' → logprob: -9.502431869506836
    9. '[e' → logprob: -9.752431869506836
    10. '[j' → logprob: -10.377431869506836

Token 150: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 151: ' weird' (ID: 28783)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6348475813865662
    2. ' for' → logprob: -1.134847640991211
    3. '
' → logprob: -2.134847640991211
    4. '   ' → logprob: -4.634847640991211
    5. 'if' → logprob: -5.384847640991211
    6. ')' → logprob: -5.509847640991211
    7. '    
' → logprob: -5.759847640991211
    8. ' if' → logprob: -6.259847640991211
    9. ' 
' → logprob: -6.759847640991211
    10. '  
' → logprob: -6.884847640991211

Token 152: 'flag' (ID: 17665)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.35904091596603394
    2. '=' → logprob: -1.7340409755706787
    3. '_score' → logprob: -3.6090409755706787
    4. '_mask' → logprob: -4.1090407371521
    5. 'score' → logprob: -4.2340407371521
    6. 's' → logprob: -4.4840407371521
    7. 'y' → logprob: -4.4840407371521
    8. 'mask' → logprob: -4.6090407371521
    9. '_scores' → logprob: -4.8590407371521
    10. '_' → logprob: -5.2340407371521

Token 153: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3870936632156372
    2. '=' → logprob: -1.1370936632156372
    3. '=True' → logprob: -8.762093544006348
    4. '=False' → logprob: -9.762093544006348
    5. ' ' → logprob: -12.887093544006348
    6. '   ' → logprob: -13.762093544006348
    7. '  ' → logprob: -13.887093544006348
    8. ',' → logprob: -14.012093544006348
    9. ' ' → logprob: -14.137093544006348
    10. ':' → logprob: -14.512093544006348

Token 154: ' ' (ID: 220)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.5882130861282349
    2. 'False' → logprob: -0.8382130861282349
    3. '0' → logprob: -4.963212966918945
    4. ' True' → logprob: -6.213212966918945
    5. '1' → logprob: -6.713212966918945
    6. ' False' → logprob: -6.838212966918945
    7. '   ' → logprob: -7.963212966918945
    8. '[' → logprob: -8.463212966918945
    9. '(True' → logprob: -9.213212966918945
    10. 'all' → logprob: -9.963212966918945

Token 155: '3' (ID: 18)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.7171085476875305
    2. 'False' → logprob: -0.7171085476875305
    3. '0' → logprob: -3.9671084880828857
    4. '1' → logprob: -5.717108726501465
    5. '[' → logprob: -7.592108726501465
    6. ' True' → logprob: -8.967108726501465
    7. '(True' → logprob: -8.967108726501465
    8. ' False' → logprob: -9.092108726501465
    9. 'None' → logprob: -9.467108726501465
    10. 'sum' → logprob: -9.717108726501465

Token 156: '.' (ID: 13)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 157: '14' (ID: 1265)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1789039373397827
    2. '14' → logprob: -1.4289039373397827
    3. '141' → logprob: -1.4289039373397827
    4. 'for' → logprob: -2.4289040565490723
    5. '7' → logprob: -3.3039040565490723
    6. '5' → logprob: -3.8039040565490723
    7. '2' → logprob: -4.678904056549072
    8. '1' → logprob: -4.678904056549072
    9. '3' → logprob: -4.928904056549072
    10. '4' → logprob: -5.053904056549072

Token 158: 'j' (ID: 73)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 159: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 160: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7397732138633728
    2. ' for' → logprob: -1.8647732734680176
    3. '   ' → logprob: -1.9897732734680176
    4. '<|end|>' → logprob: -1.9897732734680176
    5. '
' → logprob: -2.8647732734680176
    6. ')' → logprob: -3.6147732734680176
    7. '	for' → logprob: -6.864773273468018
    8. ' ' → logprob: -6.864773273468018
    9. '    
' → logprob: -6.989773273468018
    10. '<|end|>' → logprob: -6.989773273468018

Token 161: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6945673227310181
    2. ' for' → logprob: -1.319567322731018
    3. 'for' (adapté à ' for') → logprob: -1.694567322731018
    4. '
' → logprob: -3.4445672035217285
    5. '<|end|>' → logprob: -4.4445672035217285
    6. '    
' → logprob: -6.0695672035217285
    7. ' if' → logprob: -7.1945672035217285
    8. ')' → logprob: -7.5695672035217285
    9. 'if' → logprob: -7.9445672035217285
    10. '	for' → logprob: -7.9445672035217285

Token 162: ' t' (ID: 260)
  Prédit: ' egg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' egg' → logprob: -1.5726206302642822
    2. ' i' → logprob: -1.7601206302642822
    3. ' range' → logprob: -2.3851206302642822
    4. '(' → logprob: -3.1351206302642822
    5. ' idx' → logprob: -3.1351206302642822
    6. 'egg' → logprob: -3.8851206302642822
    7. ' j' → logprob: -3.8851206302642822
    8. 'i' → logprob: -3.8851206302642822
    9. ' x' → logprob: -3.9476206302642822
    10. '(i' → logprob: -4.385120391845703

Token 163: 'ori' (ID: 6510)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04917268827557564
    2. 'in' → logprob: -3.0491726398468018
    3. 'oken' → logprob: -8.299172401428223
    4. 'ime' → logprob: -9.674172401428223
    5. ' ' → logprob: -9.924172401428223
    6. 'ok' → logprob: -10.049172401428223
    7. '_' → logprob: -10.549172401428223
    8. ',' → logprob: -10.549172401428223
    9. 'mask' → logprob: -11.299172401428223
    10. 'o' → logprob: -11.424172401428223

Token 164: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06230644881725311
    2. 'in' → logprob: -2.8123064041137695
    3. ',' → logprob: -8.43730640411377
    4. ' ' → logprob: -9.31230640411377
    5. 'n' → logprob: -11.93730640411377
    6. 'range' → logprob: -12.18730640411377
    7. '<|end|>' → logprob: -12.68730640411377
    8. '```' → logprob: -13.43730640411377
    9. ' ,' → logprob: -13.62480640411377
    10. '  ' → logprob: -13.87480640411377

Token 165: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.018323775380849838
    2. ' range' → logprob: -4.01832389831543
    3. '(range' → logprob: -8.76832389831543
    4. '(' → logprob: -11.76832389831543
    5. '[' → logprob: -12.26832389831543
    6. '	range' → logprob: -13.39332389831543
    7. 'big' → logprob: -13.64332389831543
    8. 'b' → logprob: -14.76832389831543
    9. '[*' → logprob: -14.76832389831543
    10. ' ' → logprob: -14.89332389831543

Token 166: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.00023393364972434938
    2. '(' → logprob: -8.62523365020752
    3. 'N' → logprob: -10.37523365020752
    4. '(len' → logprob: -11.37523365020752
    5. '   ' → logprob: -11.87523365020752
    6. '(
' → logprob: -13.25023365020752
    7. ' (' → logprob: -14.00023365020752
    8. '(n' → logprob: -14.37523365020752
    9. '((' → logprob: -15.25023365020752
    10. '(M' → logprob: -15.50023365020752

Token 167: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.28266391158103943
    2. '):' → logprob: -1.4076639413833618
    3. '   ' → logprob: -6.907663822174072
    4. '+' → logprob: -8.03266429901123
    5. ')' → logprob: -9.40766429901123
    6. '       ' → logprob: -10.03266429901123
    7. ':' → logprob: -10.90766429901123
    8. '):

' → logprob: -11.03266429901123
    9. '):
' → logprob: -11.78266429901123
    10. '<|end|>' → logprob: -12.53266429901123

Token 168: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014429436065256596
    2. '   ' → logprob: -5.764429569244385
    3. '    ' → logprob: -5.764429569244385
    4. '<|end|>' → logprob: -5.764429569244385
    5. ' if' → logprob: -6.514429569244385
    6. ' ' → logprob: -7.014429569244385
    7. ':' → logprob: -7.014429569244385
    8. '        ' → logprob: -7.889429569244385
    9. 'if' → logprob: -8.389429092407227
    10. '     ' → logprob: -8.889429092407227

Token 169: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.47640663385391235
    2. ' if' → logprob: -0.9764066338539124
    3. '   ' → logprob: -6.351406574249268
    4. '       ' → logprob: -8.101407051086426
    5. '    ' → logprob: -9.101407051086426
    6. 'for' → logprob: -9.101407051086426
    7. ' for' → logprob: -10.101407051086426
    8. '        ' → logprob: -12.101407051086426
    9. '	if' → logprob: -12.726407051086426
    10. '           ' → logprob: -13.476407051086426

Token 170: ' mask' (ID: 10910)
  Prédit: 'mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mask' → logprob: -0.4761597216129303
    2. ' mask' → logprob: -0.9761596918106079
    3. '(mask' → logprob: -6.976159572601318
    4. ' not' → logprob: -7.726159572601318
    5. '   ' → logprob: -7.851159572601318
    6. 'not' → logprob: -8.351160049438477
    7. '	mask' → logprob: -10.851160049438477
    8. ' ' → logprob: -10.851160049438477
    9. ' (' → logprob: -11.976160049438477
    10. '       ' → logprob: -12.101160049438477

Token 171: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0001884015218820423
    2. '&' → logprob: -9.500188827514648
    3. ' &' → logprob: -10.000188827514648
    4. '   ' → logprob: -11.000188827514648
    5. '[' → logprob: -11.250188827514648
    6. '```' → logprob: -11.875188827514648
    7. ' ' → logprob: -12.125188827514648
    8. ']' → logprob: -12.500188827514648
    9. ')' → logprob: -12.750188827514648
    10. '>>' → logprob: -12.875188827514648

Token 172: '[t' (ID: 32184)
  Prédit: '[t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[t' → logprob: -5.872261317563243e-05
    2. '[' → logprob: -9.875059127807617
    3. ' [' → logprob: -12.000059127807617
    4. '[token' → logprob: -14.875059127807617
    5. 't' → logprob: -15.375059127807617
    6. '[
' → logprob: -15.625059127807617
    7. '[T' → logprob: -15.750059127807617
    8. ' t' → logprob: -16.625059127807617
    9. '   ' → logprob: -17.125059127807617
    10. '(t' → logprob: -17.750059127807617

Token 173: 'ori' (ID: 6510)
  Prédit: '[t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[t' → logprob: -0.00481220381334424
    2. '[' → logprob: -5.504812240600586
    3. '][' → logprob: -7.629812240600586
    4. '[y' → logprob: -10.004812240600586
    5. '[i' → logprob: -10.129812240600586
    6. '[o' → logprob: -10.254812240600586
    7. '```' → logprob: -10.879812240600586
    8. ']' → logprob: -11.004812240600586
    9. 'or' → logprob: -11.004812240600586
    10. 't' → logprob: -11.254812240600586

Token 174: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.672991156578064
    2. ']' → logprob: -1.672991156578064
    3. ']==' → logprob: -1.672991156578064
    4. ']:
' → logprob: -2.4229912757873535
    5. ':' → logprob: -4.7979912757873535
    6. ' ]' → logprob: -5.0479912757873535
    7. '==' → logprob: -5.5479912757873535
    8. '):' → logprob: -6.4229912757873535
    9. '):
' → logprob: -6.7979912757873535
    10. ' ==' → logprob: -7.0479912757873535

Token 175: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3050670921802521
    2. ':' → logprob: -1.5550670623779297
    3. ':
' → logprob: -3.1800670623779297
    4. ' and' → logprob: -5.43006706237793
    5. '       ' → logprob: -6.30506706237793
    6. ',' → logprob: -7.18006706237793
    7. ' for' → logprob: -7.30506706237793
    8. ' =' → logprob: -7.55506706237793
    9. ' continue' → logprob: -7.68006706237793
    10. ' ==' → logprob: -8.05506706237793

Token 176: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.22417041659355164
    2. ' for' → logprob: -1.724170446395874
    3. '           ' → logprob: -3.849170446395874
    4. '   ' → logprob: -7.724170207977295
    5. 'continue' → logprob: -8.349170684814453
    6. '               ' → logprob: -8.474170684814453
    7. ' continue' → logprob: -9.349170684814453
    8. '       ' → logprob: -9.599170684814453
    9. '
' → logprob: -10.474170684814453
    10. '```' → logprob: -11.099170684814453

Token 177: ' idx' (ID: 14016)
  Prédit: 'foo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'foo' → logprob: -0.9498268961906433
    2. '(foo' → logprob: -2.074826955795288
    3. '(' → logprob: -2.824826955795288
    4. 'fo' → logprob: -3.449826955795288
    5. '(x' → logprob: -4.137326717376709
    6. 'egg' → logprob: -4.512326717376709
    7. '(f' → logprob: -4.637326717376709
    8. '(j' → logprob: -4.762326717376709
    9. 'b' → logprob: -4.762326717376709
    10. ' foo' → logprob: -4.824826717376709

Token 178: ' in' (ID: 306)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.301873117685318
    2. ' in' → logprob: -1.5518730878829956
    3. 'in' → logprob: -3.051873207092285
    4. ' ,' → logprob: -6.676873207092285
    5. '   ' → logprob: -10.551873207092285
    6. ' ' → logprob: -10.551873207092285
    7. '_,' → logprob: -11.051873207092285
    8. ',t' → logprob: -11.426873207092285
    9. '```' → logprob: -11.426873207092285
    10. ',value' → logprob: -11.551873207092285

Token 179: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.16660279035568237
    2. 'big' → logprob: -2.541602849960327
    3. ' range' → logprob: -2.666602849960327
    4. 'b' → logprob: -5.666602611541748
    5. ' big' → logprob: -6.416602611541748
    6. '[' → logprob: -10.041603088378906
    7. '(range' → logprob: -10.416603088378906
    8. '	range' → logprob: -11.416603088378906
    9. '(big' → logprob: -11.666603088378906
    10. ' b' → logprob: -11.666603088378906

Token 180: '(dict' (ID: 71792)
  Prédit: '(len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.004110103938728571
    2. 'len' → logprob: -5.504110336303711
    3. '(u' → logprob: -10.754110336303711
    4. '   ' → logprob: -12.379110336303711
    5. ' len' → logprob: -12.629110336303711
    6. '       ' → logprob: -14.129110336303711
    7. '(' → logprob: -14.254110336303711
    8. '	len' → logprob: -15.004110336303711
    9. '=len' → logprob: -15.254110336303711
    10. '           ' → logprob: -15.254110336303711

Token 181: 'a' (ID: 64)
  Prédit: '[t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[t' → logprob: -0.0034543105866760015
    2. '[' → logprob: -5.878454208374023
    3. 't' → logprob: -7.753454208374023
    4. '[N' → logprob: -9.253454208374023
    5. 'y' → logprob: -10.003454208374023
    6. '[y' → logprob: -10.128454208374023
    7. ' [' → logprob: -12.503454208374023
    8. '[T' → logprob: -12.503454208374023
    9. '   ' → logprob: -12.753454208374023
    10. '[x' → logprob: -12.878454208374023

Token 182: '[t' (ID: 32184)
  Prédit: '[t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[t' → logprob: -9.849109119386412e-06
    2. '[' → logprob: -11.875009536743164
    3. 't' → logprob: -13.000009536743164
    4. ' [' → logprob: -15.625009536743164
    5. '[T' → logprob: -16.000009536743164
    6. '   ' → logprob: -16.500009536743164
    7. '(t' → logprob: -17.875009536743164
    8. '[u' → logprob: -18.000009536743164
    9. ')[' → logprob: -18.250009536743164
    10. '[i' → logprob: -18.500009536743164

Token 183: 'ori' (ID: 6510)
  Prédit: 'ori'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ori' → logprob: -0.003400975139811635
    2. 't' → logprob: -5.753400802612305
    3. '[' → logprob: -9.753400802612305
    4. ']' → logprob: -10.003400802612305
    5. 'o' → logprob: -10.628400802612305
    6. '[t' → logprob: -10.753400802612305
    7. '#' → logprob: -10.878400802612305
    8. '][' → logprob: -12.378400802612305
    9. 'ори' → logprob: -12.628400802612305
    10. '])' → logprob: -12.940900802612305

Token 184: ']):
' (ID: 51989)
  Prédit: ']):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']):' → logprob: -0.7477416396141052
    2. ']):
' → logprob: -0.9977416396141052
    3. '][' → logprob: -2.49774169921875
    4. '[t' → logprob: -3.37274169921875
    5. ']' → logprob: -3.49774169921875
    6. '])' → logprob: -4.99774169921875
    7. '[' → logprob: -5.99774169921875
    8. 't' → logprob: -7.62274169921875
    9. ' ]' → logprob: -7.99774169921875
    10. ']+' → logprob: -8.37274169921875

Token 185: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00602798443287611
    2. ',' → logprob: -6.131028175354004
    3. '           ' → logprob: -6.506028175354004
    4. ' if' → logprob: -6.631028175354004
    5. '):
' → logprob: -8.631028175354004
    6. '<|end|>' → logprob: -8.631028175354004
    7. ':
' → logprob: -8.756028175354004
    8. '                
' → logprob: -9.006028175354004
    9. 'if' → logprob: -9.131028175354004
    10. ':' → logprob: -9.256028175354004

Token 186: ' xi' (ID: 26869)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.378669410943985
    2. 'if' → logprob: -2.378669500350952
    3. ' x' → logprob: -2.503669500350952
    4. '           ' → logprob: -3.003669500350952
    5. 'x' → logprob: -3.503669500350952
    6. '               ' → logprob: -4.003669261932373
    7. ' foo' → logprob: -4.753669261932373
    8. 'foo' → logprob: -5.128669261932373
    9. ',' → logprob: -5.253669261932373
    10. 'v' → logprob: -6.003669261932373

Token 187: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7355681657791138
    2. ' =' → logprob: -0.8605681657791138
    3. '=' → logprob: -2.485568046569824
    4. ' ,' → logprob: -5.110568046569824
    5. 's' → logprob: -5.985568046569824
    6. ',y' → logprob: -7.360568046569824
    7. ',t' → logprob: -7.360568046569824
    8. 'x' → logprob: -7.485568046569824
    9. '           ' → logprob: -7.860568046569824
    10. '   ' → logprob: -8.360568046569824

Token 188: ' why' (ID: 4436)
  Prédit: 'yi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'yi' → logprob: -0.23351086676120758
    2. 'val' → logprob: -3.108510971069336
    3. 'vi' → logprob: -3.233510971069336
    4. 'yj' → logprob: -3.233510971069336
    5. 'wi' → logprob: -4.108510971069336
    6. 'y' → logprob: -4.358510971069336
    7. ' yi' → logprob: -4.608510971069336
    8. 'value' → logprob: -5.233510971069336
    9. 'yf' → logprob: -5.983510971069336
    10. 'yv' → logprob: -6.108510971069336

Token 189: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.28128883242607117
    2. '=' → logprob: -1.4062888622283936
    3. ',' → logprob: -9.406289100646973
    4. '               ' → logprob: -11.156289100646973
    5. '                   ' → logprob: -11.531289100646973
    6. '   ' → logprob: -12.156289100646973
    7. '           ' → logprob: -12.406289100646973
    8. ' ' → logprob: -12.531289100646973
    9. '                ' → logprob: -12.781289100646973
    10. ')' → logprob: -12.906289100646973

Token 190: ' big' (ID: 3464)
  Prédit: 'big'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'big' → logprob: -0.10462495684623718
    2. ' big' → logprob: -2.3546249866485596
    3. 'b' → logprob: -5.4796247482299805
    4. '   ' → logprob: -8.85462474822998
    5. 'Big' → logprob: -10.97962474822998
    6. '       ' → logprob: -11.29212474822998
    7. '(big' → logprob: -11.41712474822998
    8. '	b' → logprob: -11.47962474822998
    9. '    ' → logprob: -11.66712474822998
    10. '           ' → logprob: -12.66712474822998

Token 191: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.6405310816480778e-05
    2. 'gl' → logprob: -12.125016212463379
    3. '[l' → logprob: -12.625016212463379
    4. '[' → logprob: -12.625016212463379
    5. '```' → logprob: -14.000016212463379
    6. '_l' → logprob: -14.750016212463379
    7. '[[' → logprob: -15.000016212463379
    8. '	l' → logprob: -15.250016212463379
    9. 'il' → logprob: -15.625016212463379
    10. '...' → logprob: -15.875016212463379

Token 192: '[t' (ID: 32184)
  Prédit: '[t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[t' → logprob: -3.273621405242011e-05
    2. '[' → logprob: -10.375032424926758
    3. 't' → logprob: -13.875032424926758
    4. ' [' → logprob: -14.875032424926758
    5. '[[' → logprob: -16.625032424926758
    6. '[to' → logprob: -17.625032424926758
    7. '   ' → logprob: -18.000032424926758
    8. '```' → logprob: -18.000032424926758
    9. '][' → logprob: -18.250032424926758
    10. '[T' → logprob: -18.250032424926758

Token 193: 'ori' (ID: 6510)
  Prédit: 'ori'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ori' → logprob: -0.004148087929934263
    2. 't' → logprob: -5.504148006439209
    3. '[' → logprob: -10.379148483276367
    4. '][' → logprob: -11.754148483276367
    5. ']' → logprob: -12.004148483276367
    6. '[t' → logprob: -12.004148483276367
    7. 'or' → logprob: -12.629148483276367
    8. '#' → logprob: -13.004148483276367
    9. 's' → logprob: -13.254148483276367
    10. 'uri' → logprob: -13.754148483276367

Token 194: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0002146226615877822
    2. '[t' → logprob: -9.250214576721191
    3. ' ][' → logprob: -10.000214576721191
    4. '[' → logprob: -10.250214576721191
    5. ']' → logprob: -10.375214576721191
    6. '"][' → logprob: -13.125214576721191
    7. 't' → logprob: -13.625214576721191
    8. ']][' → logprob: -14.125214576721191
    9. ''][' → logprob: -14.625214576721191
    10. '   ' → logprob: -14.625214576721191

Token 195: 'idx' (ID: 13196)
  Prédit: 'idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -5.943783253314905e-05
    2. ' idx' → logprob: -9.750059127807617
    3. '[idx' → logprob: -14.750059127807617
    4. '
' → logprob: -14.875059127807617
    5. '][' → logprob: -15.250059127807617
    6. '	idx' → logprob: -16.875059127807617
    7. '(idx' → logprob: -17.000059127807617
    8. ' ' → logprob: -17.250059127807617
    9. '               ' → logprob: -18.125059127807617
    10. '                   ' → logprob: -18.125059127807617

Token 196: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.06607124209403992
    2. ']' → logprob: -2.9410712718963623
    3. ')
' → logprob: -4.691071033477783
    4. ')' → logprob: -6.566071033477783
    5. ']
' → logprob: -8.441071510314941
    6. '               ' → logprob: -8.941071510314941
    7. '])
' → logprob: -9.941071510314941
    8. ')]
' → logprob: -10.691071510314941
    9. '][' → logprob: -10.816071510314941
    10. ']

' → logprob: -10.941071510314941

Token 197: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.003774670185521245
    2. ' if' → logprob: -7.003774642944336
    3. '<|end|>' → logprob: -7.003774642944336
    4. '       ' → logprob: -7.253774642944336
    5. '           ' → logprob: -8.128774642944336
    6. '                   ' → logprob: -8.378774642944336
    7. '                
' → logprob: -8.753774642944336
    8. ',' → logprob: -9.003774642944336
    9. 'if' → logprob: -9.128774642944336
    10. ')' → logprob: -10.003774642944336

Token 198: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.23003022372722626
    2. ' if' → logprob: -1.9800301790237427
    3. 'score' → logprob: -2.7300302982330322
    4. ' score' → logprob: -6.230030059814453
    5. '               ' → logprob: -8.855030059814453
    6. '                   ' → logprob: -9.355030059814453
    7. '   ' → logprob: -13.105030059814453
    8. ' ' → logprob: -13.230030059814453
    9. '           ' → logprob: -13.980030059814453
    10. '       ' → logprob: -14.230030059814453

Token 199: ' mask' (ID: 10910)
  Prédit: 'mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mask' → logprob: -0.25477153062820435
    2. ' mask' → logprob: -1.8797714710235596
    3. '(mask' → logprob: -3.0047714710235596
    4. ' not' → logprob: -4.629771709442139
    5. 'not' → logprob: -4.629771709442139
    6. '(not' → logprob: -6.754771709442139
    7. ' (' → logprob: -7.254771709442139
    8. '((' → logprob: -7.879771709442139
    9. '(' → logprob: -8.50477123260498
    10. '(x' → logprob: -9.12977123260498

Token 200: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0008316631428897381
    2. '[' → logprob: -7.125831604003906
    3. '[y' → logprob: -11.000831604003906
    4. '```' → logprob: -13.375831604003906
    5. 'x' → logprob: -13.500831604003906
    6. '
' → logprob: -13.750831604003906
    7. ' y' → logprob: -14.375831604003906
    8. '[in' → logprob: -14.500831604003906
    9. '[int' → logprob: -14.688331604003906
    10. '

' → logprob: -14.750831604003906

Token 201: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.00026991849881596863
    2. '[' → logprob: -8.250269889831543
    3. 'xi' → logprob: -12.500269889831543
    4. '[
' → logprob: -13.125269889831543
    5. ' [' → logprob: -13.750269889831543
    6. '```' → logprob: -15.250269889831543
    7. '(x' → logprob: -15.375269889831543
    8. '
' → logprob: -15.750269889831543
    9. ' xi' → logprob: -15.750269889831543
    10. '   ' → logprob: -15.875269889831543

Token 202: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.20314531028270721
    2. 'ori' → logprob: -2.0781452655792236
    3. 't' → logprob: -3.0781452655792236
    4. '```' → logprob: -5.828145503997803
    5. 'iori' → logprob: -6.078145503997803
    6. 'itori' → logprob: -6.703145503997803
    7. 'xi' → logprob: -7.078145503997803
    8. 'tor' → logprob: -7.453145503997803
    9. ']' → logprob: -7.453145503997803
    10. 'ti' → logprob: -7.828145503997803

Token 203: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2798689305782318
    2. ']==' → logprob: -1.5298689603805542
    3. ']:' → logprob: -3.7798688411712646
    4. ']:
' → logprob: -5.529869079589844
    5. ']:
' → logprob: -9.029869079589844
    6. ']<' → logprob: -9.029869079589844
    7. ']:

' → logprob: -9.154869079589844
    8. ']!=' → logprob: -9.404869079589844
    9. '==' → logprob: -9.529869079589844
    10. ']>' → logprob: -10.154869079589844

Token 204: ' !=' (ID: 1666)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.04456315562129021
    2. ' ==' → logprob: -3.294563055038452
    3. ':' → logprob: -5.294563293457031
    4. '!=' → logprob: -7.419563293457031
    5. ':
' → logprob: -8.544563293457031
    6. '<' → logprob: -8.794563293457031
    7. ' and' → logprob: -9.044563293457031
    8. ']==' → logprob: -9.044563293457031
    9. 'and' → logprob: -9.419563293457031
    10. '<=' → logprob: -9.669563293457031

Token 205: ' why' (ID: 4436)
  Prédit: 'why'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'why' → logprob: -0.035047490149736404
    2. ' why' → logprob: -3.4100475311279297
    3. '1' → logprob: -6.91004753112793
    4. ' ' → logprob: -9.28504753112793
    5. '   ' → logprob: -9.66004753112793
    6. 'wh' → logprob: -9.66004753112793
    7. '(' → logprob: -9.78504753112793
    8. '0' → logprob: -10.53504753112793
    9. 'bar' → logprob: -11.41004753112793
    10. 'int' → logprob: -11.59754753112793

Token 206: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14297764003276825
    2. ':
' → logprob: -2.017977714538574
    3. '):' → logprob: -8.892977714538574
    4. '           ' → logprob: -10.017977714538574
    5. '):
' → logprob: -10.267977714538574
    6. '               ' → logprob: -10.767977714538574
    7. ':return' → logprob: -10.767977714538574
    8. '                   ' → logprob: -11.517977714538574
    9. ':
' → logprob: -11.767977714538574
    10. '                       ' → logprob: -11.767977714538574

Token 207: '                   ' (ID: 699)
  Prédit: ' break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -1.1016749143600464
    2. '                   ' → logprob: -1.2266749143600464
    3. '               ' → logprob: -1.3516749143600464
    4. 'break' → logprob: -2.726675033569336
    5. ':
' → logprob: -3.976675033569336
    6. '           ' → logprob: -4.726675033569336
    7. '   ' → logprob: -5.601675033569336
    8. '                       ' → logprob: -5.601675033569336
    9. ':' → logprob: -5.976675033569336
    10. ')' → logprob: -5.976675033569336

Token 208: ' weird' (ID: 28783)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.0967206209897995
    2. 'we' → logprob: -2.7217206954956055
    3. ' break' → logprob: -4.5967206954956055
    4. '           ' → logprob: -5.3467206954956055
    5. '   ' → logprob: -5.5967206954956055
    6. 'score' → logprob: -5.7217206954956055
    7. '       ' → logprob: -6.4717206954956055
    8. '               ' → logprob: -6.5967206954956055
    9. '                   ' → logprob: -7.0967206954956055
    10. ' weird' → logprob: -7.7217206954956055

Token 209: 'flag' (ID: 17665)
  Prédit: 'flag'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flag' → logprob: -4.320199877838604e-07
    2. ' flag' → logprob: -15.125
    3. '_flag' → logprob: -16.625
    4. '	flag' → logprob: -18.25
    5. 'flags' → logprob: -18.625
    6. 'Flag' → logprob: -19.125
    7. 'score' → logprob: -19.125
    8. '.flag' → logprob: -19.5
    9. 'f' → logprob: -19.625
    10. '(flag' → logprob: -19.75

Token 210: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01580348052084446
    2. ' =' → logprob: -4.265803337097168
    3. '*=' → logprob: -6.515803337097168
    4. '+=' → logprob: -9.390803337097168
    5. ' *=' → logprob: -11.015803337097168
    6. '=False' → logprob: -11.140803337097168
    7. '-=' → logprob: -11.515803337097168
    8. '=None' → logprob: -11.890803337097168
    9. '/=' → logprob: -12.140803337097168
    10. '*' → logprob: -12.390803337097168

Token 211: ' ' (ID: 220)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.08219077438116074
    2. '0' → logprob: -3.332190752029419
    3. 'None' → logprob: -3.832190752029419
    4. 'True' → logprob: -4.207190990447998
    5. '-' → logprob: -5.457190990447998
    6. '1' → logprob: -7.207190990447998
    7. ' False' → logprob: -7.707190990447998
    8. 'mask' → logprob: -9.08219051361084
    9. 't' → logprob: -9.20719051361084
    10. 'float' → logprob: -9.33219051361084

Token 212: '42' (ID: 4689)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.07297425717115402
    2. '0' → logprob: -3.69797420501709
    3. 'True' → logprob: -3.82297420501709
    4. 'None' → logprob: -4.19797420501709
    5. '-' → logprob: -5.19797420501709
    6. '1' → logprob: -6.57297420501709
    7. 'float' → logprob: -8.44797420501709
    8. 'not' → logprob: -8.69797420501709
    9. 'mask' → logprob: -9.07297420501709
    10. '42' → logprob: -9.19797420501709

Token 213: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0007370850071310997
    2. '                       ' → logprob: -8.375737190246582
    3. '               ' → logprob: -8.500737190246582
    4. '           ' → logprob: -9.250737190246582
    5. 'break' → logprob: -9.250737190246582
    6. '                           ' → logprob: -10.500737190246582
    7. '       ' → logprob: -11.125737190246582
    8. '   ' → logprob: -11.250737190246582
    9. '<|end|>' → logprob: -11.375737190246582
    10. '                  ' → logprob: -11.500737190246582

Token 214: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0012310652527958155
    2. '   ' → logprob: -8.12623119354248
    3. '                    
' → logprob: -8.12623119354248
    4. '               ' → logprob: -8.37623119354248
    5. '           ' → logprob: -9.37623119354248
    6. '                    ' → logprob: -9.87623119354248
    7. '       ' → logprob: -9.87623119354248
    8. '<|end|>' → logprob: -10.12623119354248
    9. '                  ' → logprob: -10.25123119354248
    10. '                       ' → logprob: -10.25123119354248

Token 215: ' break' (ID: 2338)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.02602170780301094
    2. 'break' (adapté à ' break') → logprob: -3.776021718978882
    3. ' break' → logprob: -6.151021480560303
    4. '                       ' → logprob: -8.151021957397461
    5. '               ' → logprob: -8.526021957397461
    6. '           ' → logprob: -9.651021957397461
    7. '                           ' → logprob: -10.276021957397461
    8. '       ' → logprob: -11.401021957397461
    9. '				' → logprob: -11.776021957397461
    10. '	break' → logprob: -12.026021957397461

Token 216: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3394944369792938
    2. '               ' → logprob: -2.339494466781616
    3. '                   ' → logprob: -2.464494466781616
    4. '<|end|>' → logprob: -2.839494466781616
    5. '       ' → logprob: -3.339494466781616
    6. '   ' → logprob: -5.714494228363037
    7. '                ' → logprob: -6.464494228363037
    8. '            ' → logprob: -6.964494228363037
    9. ' ' → logprob: -7.214494228363037
    10. '          ' → logprob: -7.714494228363037

Token 217: '           ' (ID: 352)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7087599635124207
    2. '           ' → logprob: -1.2087600231170654
    3. '                   ' → logprob: -1.9587600231170654
    4. '       ' → logprob: -3.0837600231170654
    5. '<|end|>' → logprob: -4.833759784698486
    6. '                ' → logprob: -5.583759784698486
    7. '   ' → logprob: -5.958759784698486
    8. '            ' → logprob: -6.583759784698486
    9. ' ' → logprob: -6.958759784698486
    10. '                       ' → logprob: -7.083759784698486

Token 218: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21761688590049744
    2. '           ' → logprob: -2.3426167964935303
    3. '<|end|>' → logprob: -3.4676167964935303
    4. '               ' → logprob: -3.8426167964935303
    5. '   ' → logprob: -4.092617034912109
    6. ' ' → logprob: -4.217617034912109
    7. '                   ' → logprob: -5.592617034912109
    8. '        ' → logprob: -5.842617034912109
    9. '    ' → logprob: -6.092617034912109
    10. '                ' → logprob: -6.717617034912109

Token 219: ' weird' (ID: 28783)
  Prédit: 'we'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'we' → logprob: -0.03806949034333229
    2. ' weird' → logprob: -3.288069486618042
    3. 'not' → logprob: -11.538069725036621
    4. ' we' → logprob: -12.038069725036621
    5. ' ' → logprob: -12.163069725036621
    6. '   ' → logprob: -13.038069725036621
    7. ' not' → logprob: -13.913069725036621
    8. 'str' → logprob: -14.413069725036621
    9. ' isinstance' → logprob: -14.413069725036621
    10. '  ' → logprob: -14.663069725036621

Token 220: 'flag' (ID: 17665)
  Prédit: 'flag'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flag' → logprob: -3.4285862057004124e-05
    2. '_flag' → logprob: -10.37503433227539
    3. ' flag' → logprob: -12.87503433227539
    4. '(flag' → logprob: -15.62503433227539
    5. 'flags' → logprob: -16.25003433227539
    6. 'Flag' → logprob: -16.37503433227539
    7. '	flag' → logprob: -16.62503433227539
    8. 'mask' → logprob: -17.00003433227539
    9. 'not' → logprob: -17.75003433227539
    10. '           ' → logprob: -18.12503433227539

Token 221: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.31392234563827515
    2. '==' → logprob: -1.31392240524292
    3. ' is' → logprob: -7.81392240524292
    4. ' !=' → logprob: -8.688921928405762
    5. '!=' → logprob: -9.813921928405762
    6. 'is' → logprob: -10.813921928405762
    7. ' ' → logprob: -12.313921928405762
    8. '===' → logprob: -12.938921928405762
    9. '=' → logprob: -13.438921928405762
    10. ':' → logprob: -13.813921928405762

Token 222: ' ' (ID: 220)
  Prédit: '42'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '42' → logprob: -0.0004883344518020749
    2. ' ' → logprob: -7.62548828125
    3. '   ' → logprob: -16.25048828125
    4. '  ' → logprob: -16.50048828125
    5. '    ' → logprob: -17.87548828125
    6. '41' → logprob: -18.12548828125
    7. '           ' → logprob: -18.50048828125
    8. '43' → logprob: -18.62548828125
    9. '4' → logprob: -19.12548828125
    10. '            ' → logprob: -19.62548828125

Token 223: '42' (ID: 4689)
  Prédit: '42'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '42' → logprob: -3.15441757265944e-05
    2. ' ' → logprob: -10.375031471252441
    3. '  ' → logprob: -16.375032424926758
    4. '   ' → logprob: -16.375032424926758
    5. '4' → logprob: -17.875032424926758
    6. '41' → logprob: -18.125032424926758
    7. '    ' → logprob: -18.375032424926758
    8. '43' → logprob: -18.875032424926758
    9. '44' → logprob: -19.000032424926758
    10. '```' → logprob: -19.125032424926758

Token 224: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.275997519493103
    2. ':' → logprob: -1.775997519493103
    3. ':
' → logprob: -2.6509976387023926
    4. '                   ' → logprob: -7.400997638702393
    5. '                       ' → logprob: -8.150997161865234
    6. '           ' → logprob: -9.025997161865234
    7. ' :
' → logprob: -9.275997161865234
    8. ' :' → logprob: -9.900997161865234
    9. '       ' → logprob: -10.525997161865234
    10. ',' → logprob: -10.650997161865234

Token 225: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0002314303710591048
    2. ' break' → logprob: -9.000231742858887
    3. 'break' → logprob: -9.875231742858887
    4. '                   ' → logprob: -10.250231742858887
    5. '           ' → logprob: -11.500231742858887
    6. '                       ' → logprob: -12.125231742858887
    7. '       ' → logprob: -13.750231742858887
    8. '
' → logprob: -14.000231742858887
    9. '```' → logprob: -14.000231742858887
    10. '                
' → logprob: -14.125231742858887

Token 226: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.03188395872712135
    2. ' break' → logprob: -3.531883955001831
    3. '                   ' → logprob: -6.53188419342041
    4. '               ' → logprob: -7.53188419342041
    5. '   ' → logprob: -9.15688419342041
    6. '       ' → logprob: -10.90688419342041
    7. '           ' → logprob: -11.53188419342041
    8. '	break' → logprob: -12.78188419342041
    9. ' ' → logprob: -13.53188419342041
    10. '                       ' → logprob: -13.65688419342041

Token 227: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.020451489835977554
    2. ')' → logprob: -5.395451545715332
    3. '       ' → logprob: -5.520451545715332
    4. '+' → logprob: -5.770451545715332
    5. '           ' → logprob: -6.270451545715332
    6. '    
' → logprob: -6.770451545715332
    7. '
' → logprob: -6.895451545715332
    8. ' 
' → logprob: -7.020451545715332
    9. ' else' → logprob: -7.645451545715332
    10. ' ' → logprob: -7.645451545715332

Token 228: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0978037416934967
    2. ' if' → logprob: -2.722803831100464
    3. 'if' → logprob: -3.972803831100464
    4. ')' → logprob: -5.597803592681885
    5. '       ' → logprob: -6.097803592681885
    6. 'result' → logprob: -7.097803592681885
    7. 'else' → logprob: -7.597803592681885
    8. ' result' → logprob: -8.347804069519043
    9. '           ' → logprob: -8.347804069519043
    10. ' else' → logprob: -8.722804069519043

Token 229: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7528454661369324
    2. 'if' → logprob: -0.7528454661369324
    3. ' if' → logprob: -2.877845525741577
    4. 'else' (adapté à ' else') → logprob: -6.877845287322998
    5. '```' → logprob: -8.252845764160156
    6. 'result' → logprob: -9.252845764160156
    7. '       ' → logprob: -9.377845764160156
    8. ')' → logprob: -9.502845764160156
    9. ' ' → logprob: -10.627845764160156
    10. '
' → logprob: -10.877845764160156

Token 230: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04974927380681038
    2. ':
' → logprob: -3.4247493743896484
    3. ' :' → logprob: -4.424749374389648
    4. ' :
' → logprob: -5.924749374389648
    5. '       ' → logprob: -7.174749374389648
    6. '   ' → logprob: -7.674749374389648
    7. '    ' → logprob: -9.424749374389648
    8. ':

' → logprob: -13.424749374389648
    9. ' :
' → logprob: -13.424749374389648
    10. ' ' → logprob: -13.549749374389648

Token 231: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003190309274941683
    2. '   ' → logprob: -6.003190517425537
    3. 'result' → logprob: -8.128190040588379
    4. 'if' → logprob: -8.503190040588379
    5. ' if' → logprob: -8.628190040588379
    6. ' result' → logprob: -10.878190040588379
    7. 'score' → logprob: -11.628190040588379
    8. '           ' → logprob: -11.753190040588379
    9. ' score' → logprob: -14.128190040588379
    10. '     ' → logprob: -15.003190040588379

Token 232: ' if' (ID: 538)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.12353506684303284
    2. 'if' (adapté à ' if') → logprob: -2.37353515625
    3. '       ' → logprob: -3.87353515625
    4. '   ' → logprob: -6.74853515625
    5. 'score' → logprob: -7.24853515625
    6. ' result' → logprob: -8.49853515625
    7. ' if' → logprob: -9.12353515625
    8. '           ' → logprob: -9.74853515625
    9. 'res' → logprob: -12.74853515625
    10. '
' → logprob: -12.99853515625

Token 233: ' result' (ID: 1534)
  Prédit: ' score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' score' → logprob: -0.5761644244194031
    2. 'score' → logprob: -0.8261644244194031
    3. '   ' → logprob: -9.201164245605469
    4. '(score' → logprob: -10.201164245605469
    5. ' result' → logprob: -10.451164245605469
    6. 'result' → logprob: -10.576164245605469
    7. 'mask' → logprob: -11.701164245605469
    8. '	score' → logprob: -11.826164245605469
    9. ' mask' → logprob: -11.951164245605469
    10. ' ' → logprob: -12.326164245605469

Token 234: 'o' (ID: 78)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.04828140139579773
    2. '<' → logprob: -3.67328143119812
    3. 'o' → logprob: -3.92328143119812
    4. ' =' → logprob: -7.048281192779541
    5. ' ' → logprob: -7.173281192779541
    6. '=' → logprob: -8.1732816696167
    7. '<s' → logprob: -11.5482816696167
    8. '  ' → logprob: -12.4232816696167
    9. '   ' → logprob: -12.4232816696167
    10. 'о' → logprob: -12.7982816696167

Token 235: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.14315162599086761
    2. ' <' → logprob: -2.0181515216827393
    3. '<=' → logprob: -8.76815128326416
    4. '<int' → logprob: -9.14315128326416
    5. ' <=' → logprob: -9.89315128326416
    6. '<size' → logprob: -10.51815128326416
    7. '<len' → logprob: -10.76815128326416
    8. '   ' → logprob: -11.14315128326416
    9. '<const' → logprob: -11.26815128326416
    10. '<num' → logprob: -11.51815128326416

Token 236: ' score' (ID: 8429)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'score' → logprob: -0.0008058178937062621
    2. ' score' → logprob: -7.125805854797363
    3. '   ' → logprob: -14.000805854797363
    4. ' ' → logprob: -16.125804901123047
    5. '	score' → logprob: -16.250804901123047
    6. '(score' → logprob: -16.625804901123047
    7. '       ' → logprob: -17.000804901123047
    8. '  ' → logprob: -17.125804901123047
    9. '           ' → logprob: -17.500804901123047
    10. '    ' → logprob: -17.750804901123047

Token 237: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.10056183487176895
    2. ':' → logprob: -2.4755618572235107
    3. '           ' → logprob: -5.100561618804932
    4. '=' → logprob: -5.975561618804932
    5. ' =' → logprob: -6.100561618804932
    6. ' :
' → logprob: -8.22556209564209
    7. '       ' → logprob: -8.85056209564209
    8. '   ' → logprob: -9.85056209564209
    9. '=result' → logprob: -9.97556209564209
    10. ' :' → logprob: -9.97556209564209

Token 238: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.33085620403289795
    2. ' result' → logprob: -1.580856204032898
    3. 'result' → logprob: -2.5808563232421875
    4. '               ' → logprob: -9.580856323242188
    5. '       ' → logprob: -9.705856323242188
    6. ',result' → logprob: -11.080856323242188
    7. '                   ' → logprob: -11.580856323242188
    8. '   ' → logprob: -12.330856323242188
    9. '                       ' → logprob: -12.705856323242188
    10. '
' → logprob: -12.705856323242188

Token 239: ' result' (ID: 1534)
  Prédit: ' result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' result' → logprob: -0.31330302357673645
    2. 'result' (adapté à ' result') → logprob: -1.313302993774414
    3. '               ' → logprob: -10.813302993774414
    4. '           ' → logprob: -10.938302993774414
    5. '       ' → logprob: -13.688302993774414
    6. '   ' → logprob: -13.813302993774414
    7. '	result' → logprob: -14.813302993774414
    8. ' resultat' → logprob: -15.188302993774414
    9. ',result' → logprob: -16.563302993774414
    10. '            ' → logprob: -16.688302993774414

Token 240: 'o' (ID: 78)
  Prédit: 'o'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -1.1279553291387856e-05
    2. '=' → logprob: -11.500011444091797
    3. '	o' → logprob: -15.250011444091797
    4. '_o' → logprob: -15.500011444091797
    5. ' =' → logprob: -15.625011444091797
    6. '=o' → logprob: -15.625011444091797
    7. 'о' → logprob: -15.750011444091797
    8. '```' → logprob: -16.500011444091797
    9. '0' → logprob: -17.375011444091797
    10. '{o' → logprob: -17.625011444091797

Token 241: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01815076172351837
    2. '=' → logprob: -4.018150806427002
    3. ' ' → logprob: -14.643150329589844
    4. ' +=' → logprob: -15.643150329589844
    5. '=result' → logprob: -15.643150329589844
    6. ' =)' → logprob: -17.018150329589844
    7. ' ' → logprob: -17.893150329589844
    8. '+=' → logprob: -18.268150329589844
    9. '＝' → logprob: -18.518150329589844
    10. ' =
' → logprob: -18.768150329589844

Token 242: ' score' (ID: 8429)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'score' → logprob: -0.03804149478673935
    2. ' score' → logprob: -3.288041591644287
    3. '	score' → logprob: -20.163042068481445
    4. '(score' → logprob: -20.788042068481445
    5. 'result' → logprob: -21.663042068481445
    6. '_score' → logprob: -23.663042068481445
    7. ' ' → logprob: -24.413042068481445
    8. 'code' → logprob: -24.913042068481445
    9. 'Score' → logprob: -25.038042068481445
    10. '   ' → logprob: -25.163042068481445

Token 243: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.11549665778875351
    2. '
' → logprob: -2.3654966354370117
    3. '<|end|>' → logprob: -4.615496635437012
    4. ' print' → logprob: -5.490496635437012
    5. ' 
' → logprob: -7.365496635437012
    6. ')' → logprob: -9.240496635437012
    7. '```' → logprob: -9.615496635437012
    8. '    
' → logprob: -9.865496635437012
    9. '   ' → logprob: -9.865496635437012
    10. '            
' → logprob: -10.115496635437012

Token 244: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2075316607952118
    2. '
' → logprob: -2.707531690597534
    3. ')' → logprob: -2.957531690597534
    4. '<|end|>' → logprob: -3.082531690597534
    5. ' 
' → logprob: -4.707531452178955
    6. ' print' → logprob: -5.207531452178955
    7. '#' → logprob: -6.582531452178955
    8. '```' → logprob: -6.957531452178955
    9. ' )' → logprob: -7.082531452178955
    10. 'result' → logprob: -7.207531452178955

Token 245: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.00021676832693628967
    2. '(' → logprob: -8.500216484069824
    3. 'result' → logprob: -11.250216484069824
    4. ' (' → logprob: -16.25021743774414
    5. '(
' → logprob: -16.50021743774414
    6. '()' → logprob: -16.75021743774414
    7. ',result' → logprob: -17.37521743774414
    8. '(res' → logprob: -17.50021743774414
    9. '=result' → logprob: -18.00021743774414
    10. '(resultado' → logprob: -18.12521743774414

Token 246: 'o' (ID: 78)
  Prédit: 'o'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -4.47757811343763e-05
    2. ')' → logprob: -10.125044822692871
    3. 'ot' → logprob: -13.375044822692871
    4. ')o' → logprob: -13.500044822692871
    5. '0' → logprob: -14.625044822692871
    6. '_o' → logprob: -14.875044822692871
    7. '```' → logprob: -15.250044822692871
    8. 'о' → logprob: -15.375044822692871
    9. 'os' → logprob: -16.875043869018555
    10. 'ocode' → logprob: -16.875043869018555

Token 247: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.6240566083070007e-06
    2. ' )' → logprob: -13.875001907348633
    3. ')
' → logprob: -15.125001907348633
    4. '))' → logprob: -16.375001907348633
    5. ')#' → logprob: -16.375001907348633
    6. ')`' → logprob: -17.125001907348633
    7. ')}' → logprob: -17.875001907348633
    8. '```' → logprob: -18.000001907348633
    9. '+)' → logprob: -18.250001907348633
    10. '`)' → logprob: -18.375001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 245
Tokens correctement prédits (1ère position, stricte): 93
Tokens correctement prédits (1ère position, avec adaptation): 97
Tokens correctement prédits (top 10): 175
Précision stricte (1ère position): 37.96%
Précision adaptée (1ère position): 39.59%
Précision (top 10): 71.43%
================================================================================
