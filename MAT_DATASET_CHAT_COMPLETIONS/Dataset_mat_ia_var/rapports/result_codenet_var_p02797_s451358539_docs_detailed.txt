================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:30:08
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def generate_sequence(N, K, S):
    """
    Génère une séquence de N entiers selon les paramètres donnés.

    - Les K premiers éléments de la séquence valent S.
    - Les N-K éléments suivants valent:
        * 2 si S vaut 1,
        * 3 si S vaut 2,
        * S-1 sinon.

    Args:
        N (int): Longueur totale de la séquence.
        K (int): Nombre d'éléments à la valeur S vers le début.
        S (int): La valeur assignée aux K premiers éléments.

    Returns:
        str: Une chaîne de caractères représentant la séquence, les valeurs séparées par des espaces.
    """
    ans = []
    # Remplir les K premiers éléments avec la valeur S
    for _ in range(K):
        ans.append(S)
    # Ajouter les N-K éléments restants selon la valeur de S
    for _ in range(N - K):
        if S == 1:
            ans.append(2)   # Si S=1, les suivants valent 2
        elif S == 2:
            ans.append(3)   # Si S=2, les suivants valent 3
        else:
            ans.append(S - 1)  # Sinon, les suivants valent S-1
    # Transformer la liste d'entiers en chaîne de caractères, séparés par des espaces
    return " ".join(map(str, ans))


if __name__ == "__main__":
    # Lecture et décomposition des entrées utilisateur : N, K, S
    N, K, S = map(int, input().split())
    # Générer et afficher la séquence demandée
    answer = generate_sequence(N, K, S)
    print(answer)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' generate' (ID: 10419)
  → Token d'amorce (pas de prédiction)

Token 2: '_sequence' (ID: 55606)
  → Token d'amorce (pas de prédiction)

Token 3: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002228287048637867
    2. '_' → logprob: -6.377228260040283
    3. '(:' → logprob: -8.252228736877441
    4. '():' → logprob: -9.002228736877441
    5. '(_:' → logprob: -9.877228736877441
    6. '```' → logprob: -10.627228736877441
    7. '(_' → logprob: -11.377228736877441
    8. ':' → logprob: -11.502228736877441
    9. ' (' → logprob: -11.627228736877441
    10. '(**' → logprob: -12.377228736877441

Token 4: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.011843445710837841
    2. ')' → logprob: -4.511843681335449
    3. ',' → logprob: -7.761843681335449
    4. ':' → logprob: -8.01184368133545
    5. '):
' → logprob: -11.76184368133545
    6. '[' → logprob: -12.13684368133545
    7. ')>' → logprob: -12.88684368133545
    8. '```' → logprob: -12.88684368133545
    9. ' ):' → logprob: -13.13684368133545
    10. '**' → logprob: -13.26184368133545

Token 5: ' K' (ID: 658)
  Prédit: ' start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' start' → logprob: -0.8090274333953857
    2. ' sequence' → logprob: -1.6840274333953857
    3. 'start' → logprob: -2.0590274333953857
    4. ' seed' → logprob: -2.1840274333953857
    5. 'seed' → logprob: -2.8090274333953857
    6. 'sequence' → logprob: -3.0590274333953857
    7. ' seq' → logprob: -4.559027671813965
    8. 'seq' → logprob: -5.809027671813965
    9. ' x' → logprob: -6.934027671813965
    10. ' )' → logprob: -6.934027671813965

Token 6: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0034470646642148495
    2. ':' → logprob: -6.00344705581665
    3. ')' → logprob: -7.12844705581665
    4. ',' → logprob: -8.878447532653809
    5. ''):' → logprob: -11.753447532653809
    6. '):
' → logprob: -12.503447532653809
    7. '```' → logprob: -12.503447532653809
    8. '**' → logprob: -12.878447532653809
    9. '*' → logprob: -12.878447532653809
    10. '"):' → logprob: -14.253447532653809

Token 7: ' S' (ID: 336)
  Prédit: ' sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sequence' → logprob: -0.09134279936552048
    2. ' start' → logprob: -3.5913426876068115
    3. ' M' → logprob: -4.216342926025391
    4. 'sequence' → logprob: -4.216342926025391
    5. ' ' → logprob: -5.841342926025391
    6. ' )' → logprob: -5.841342926025391
    7. ' seq' → logprob: -5.966342926025391
    8. ')' → logprob: -6.091342926025391
    9. ' lst' → logprob: -6.091342926025391
    10. ' initial' → logprob: -6.091342926025391

Token 8: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.002339612226933241
    2. ')' → logprob: -6.377339839935303
    3. ':' → logprob: -7.502339839935303
    4. ',' → logprob: -10.127339363098145
    5. '):
' → logprob: -11.127339363098145
    6. '```' → logprob: -11.377339363098145
    7. ''):' → logprob: -11.502339363098145
    8. ' ):' → logprob: -13.377339363098145
    9. '**' → logprob: -13.502339363098145
    10. '"):' → logprob: -14.127339363098145

Token 9: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02889094315469265
    2. '   ' → logprob: -3.77889084815979
    3. '```' → logprob: -5.403891086578369
    4. ':
' → logprob: -7.278891086578369
    5. '    
' → logprob: -9.778890609741211
    6. '):' → logprob: -10.028890609741211
    7. '():' → logprob: -10.028890609741211
    8. '":' → logprob: -10.028890609741211
    9. '`:' → logprob: -10.028890609741211
    10. '':' → logprob: -10.153890609741211

Token 10: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7792137265205383
    2. '```' → logprob: -1.0292136669158936
    3. '\n' → logprob: -2.4042136669158936
    4. '`' → logprob: -3.5292136669158936
    5. '       ' → logprob: -3.9042136669158936
    6. '\' → logprob: -4.404213905334473
    7. ''' → logprob: -4.779213905334473
    8. '``' → logprob: -5.029213905334473
    9. '    ' → logprob: -5.529213905334473
    10. '    
' → logprob: -5.904213905334473

Token 11: '   ' (ID: 271)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.8869490027427673
    2. '"""
' → logprob: -1.511949062347412
    3. 'result' → logprob: -2.011949062347412
    4. '   ' → logprob: -2.386949062347412
    5. 'for' → logprob: -3.386949062347412
    6. ' for' → logprob: -4.136949062347412
    7. ' """
' → logprob: -4.136949062347412
    8. 'i' → logprob: -4.386949062347412
    9. ' result' → logprob: -5.011949062347412
    10. ' """' → logprob: -5.136949062347412

Token 12: ' Gén' (ID: 71828)
  Prédit: 'Generate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Generate' → logprob: -0.32885318994522095
    2. 'Gener' → logprob: -1.4538531303405762
    3. '"""' → logprob: -3.703853130340576
    4. '"""
' → logprob: -3.953853130340576
    5. 'Returns' → logprob: -6.953853130340576
    6. '   ' → logprob: -7.328853130340576
    7. ' Generates' → logprob: -8.328853607177734
    8. 'Return' → logprob: -8.578853607177734
    9. '```' → logprob: -8.828853607177734
    10. ''''' → logprob: -8.828853607177734

Token 13: 'ère' (ID: 4346)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.1604224443435669
    2. 'ère' → logprob: -2.7854223251342773
    3. 'érer' → logprob: -2.7854223251342773
    4. 'é' → logprob: -5.035422325134277
    5. 'ération' → logprob: -5.035422325134277
    6. 'èr' → logprob: -6.160422325134277
    7. 'ér' → logprob: -6.410422325134277
    8. 'érateur' → logprob: -6.410422325134277
    9. 'éra' → logprob: -6.660422325134277
    10. '   ' → logprob: -6.910422325134277

Token 14: ' une' (ID: 2463)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.2727915346622467
    2. ' une' → logprob: -1.8977915048599243
    3. ' a' → logprob: -3.522791624069214
    4. ' la' → logprob: -4.147791385650635
    5. ' ' → logprob: -4.522791385650635
    6. 'une' → logprob: -4.647791385650635
    7. ' des' → logprob: -4.772791385650635
    8. 'e' → logprob: -5.397791385650635
    9. '   ' → logprob: -6.147791385650635
    10. 'a' → logprob: -6.397791385650635

Token 15: ' sé' (ID: 7462)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.2111682891845703
    2. ' sé' → logprob: -1.4611682891845703
    3. ' liste' → logprob: -1.5861682891845703
    4. ' sequence' → logprob: -2.2111682891845703
    5. 'sé' → logprob: -2.4611682891845703
    6. 'sequence' → logprob: -4.08616828918457
    7. 'liste' → logprob: -4.33616828918457
    8. '   ' → logprob: -4.58616828918457
    9. '_' → logprob: -4.58616828918457
    10. ' chaîne' → logprob: -4.96116828918457

Token 16: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -0.0003420183784328401
    2. 'rie' → logprob: -8.12534236907959
    3. 'q' → logprob: -10.87534236907959
    4. 'qu' → logprob: -10.87534236907959
    5. 'QUENCE' → logprob: -12.75034236907959
    6. 'que' → logprob: -13.12534236907959
    7. '-' → logprob: -14.12534236907959
    8. 'ance' → logprob: -14.12534236907959
    9. 'quences' → logprob: -14.25034236907959
    10. '#' → logprob: -14.87534236907959

Token 17: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.41840314865112305
    2. ' de' → logprob: -1.168403148651123
    3. '_' → logprob: -5.293403148651123
    4. '   ' → logprob: -5.543403148651123
    5. '```' → logprob: -5.543403148651123
    6. ' d' → logprob: -6.043403148651123
    7. ')' → logprob: -6.043403148651123
    8. 'e' → logprob: -6.293403148651123
    9. ',' → logprob: -6.918403148651123
    10. ' )' → logprob: -7.043403148651123

Token 18: ' N' (ID: 478)
  Prédit: ' caractères'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' caractères' → logprob: -1.3933167457580566
    2. ' N' → logprob: -1.5183167457580566
    3. ' ent' → logprob: -1.7683167457580566
    4. ' nombres' → logprob: -2.3933167457580566
    5. 'ent' → logprob: -2.5183167457580566
    6. 'N' → logprob: -2.6433167457580566
    7. ' K' → logprob: -4.018316745758057
    8. 's' → logprob: -4.393316745758057
    9. ' ' → logprob: -4.518316745758057
    10. 'car' → logprob: -4.768316745758057

Token 19: ' ent' (ID: 1121)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2010030299425125
    2. ' caractères' → logprob: -1.951003074645996
    3. 'élé' → logprob: -4.576003074645996
    4. ' éléments' → logprob: -4.701003074645996
    5. ' caract' → logprob: -5.451003074645996
    6. ' ent' → logprob: -6.076003074645996
    7. ' caracteres' → logprob: -6.076003074645996
    8. '  ' → logprob: -6.326003074645996
    9. 'car' → logprob: -6.701003074645996
    10. '   ' → logprob: -6.951003074645996

Token 20: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.2270589917898178
    2. 'i' → logprob: -1.602059006690979
    3. 'ières' → logprob: -6.7270588874816895
    4. 'ié' → logprob: -8.227059364318848
    5. '```' → logprob: -9.977059364318848
    6. ' i' → logprob: -10.102059364318848
    7. 'ier' → logprob: -10.852059364318848
    8. '   ' → logprob: -11.102059364318848
    9. '_i' → logprob: -11.227059364318848
    10. '(i' → logprob: -12.102059364318848

Token 21: ' selon' (ID: 27571)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4472847282886505
    2. '```' → logprob: -1.5722846984863281
    3. ',' → logprob: -3.072284698486328
    4. ' ' → logprob: -3.947284698486328
    5. ' de' → logprob: -4.322284698486328
    6. '`' → logprob: -4.822284698486328
    7. ' (' → logprob: -4.947284698486328
    8. '  ' → logprob: -5.072284698486328
    9. 's' → logprob: -5.197284698486328
    10. ' ,' → logprob: -5.322284698486328

Token 22: ' les' (ID: 1341)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.35165920853614807
    2. ' une' → logprob: -1.8516591787338257
    3. 'une' → logprob: -2.8516592979431152
    4. ' le' → logprob: -3.6016592979431152
    5. ' un' → logprob: -4.351659297943115
    6. '   ' → logprob: -4.351659297943115
    7. ' les' → logprob: -4.601659297943115
    8. ' ' → logprob: -5.101659297943115
    9. ' l' → logprob: -5.726659297943115
    10. 'un' → logprob: -5.976659297943115

Token 23: ' paramètres' (ID: 130696)
  Prédit: ' contraintes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' contraintes' → logprob: -0.8650018572807312
    2. ' critères' → logprob: -1.365001916885376
    3. ' règles' → logprob: -1.490001916885376
    4. ' ' → logprob: -3.740001916885376
    5. ' instructions' → logprob: -3.740001916885376
    6. ' cons' → logprob: -4.115001678466797
    7. '   ' → logprob: -4.865001678466797
    8. ' conditions' → logprob: -4.865001678466797
    9. ' spéc' → logprob: -5.865001678466797
    10. ' valeurs' → logprob: -6.365001678466797

Token 24: ' donn' (ID: 20414)
  Prédit: ' :'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' :' → logprob: -1.1062190532684326
    2. ' ' → logprob: -1.3562190532684326
    3. '```' → logprob: -1.7312190532684326
    4. '   ' → logprob: -2.7312190532684326
    5. '.' → logprob: -2.7312190532684326
    6. ',' → logprob: -2.9812190532684326
    7. ':' → logprob: -3.9812190532684326
    8. '"""' → logprob: -5.106219291687012
    9. '  ' → logprob: -5.481219291687012
    10. ' ,' → logprob: -5.731219291687012

Token 25: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.001689462224021554
    2. 'es' → logprob: -6.501689434051514
    3. 'é' → logprob: -8.626689910888672
    4. 'ées' → logprob: -12.126689910888672
    5. 'ès' → logprob: -13.751689910888672
    6. '```' → logprob: -13.876689910888672
    7. 'ée' → logprob: -15.376689910888672
    8. 'e' → logprob: -15.626689910888672
    9. 'ÉS' → logprob: -17.626689910888672
    10. 's' → logprob: -17.751689910888672

Token 26: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2446119487285614
    2. ':' → logprob: -2.369611978530884
    3. ' :' → logprob: -2.619611978530884
    4. '```' → logprob: -4.369611740112305
    5. '.' → logprob: -4.744611740112305
    6. ',' → logprob: -4.869611740112305
    7. ' ' → logprob: -4.869611740112305
    8. '    ' → logprob: -5.744611740112305
    9. '\n' → logprob: -6.369611740112305
    10. ''' → logprob: -6.994611740112305

Token 27: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0016968417912721634
    2. '```' → logprob: -7.001697063446045
    3. '    ' → logprob: -8.251696586608887
    4. '    
' → logprob: -9.001696586608887
    5. '
' → logprob: -9.126696586608887
    6. '"""' → logprob: -9.626696586608887
    7. '"""
' → logprob: -9.751696586608887
    8. ' 
' → logprob: -9.876696586608887
    9. ' """
' → logprob: -10.126696586608887
    10. '\n' → logprob: -11.001696586608887

Token 28: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0028983091469854116
    2. '```' → logprob: -6.502898216247559
    3. '"""' → logprob: -6.877898216247559
    4. '"""
' → logprob: -8.752898216247559
    5. '    ' → logprob: -9.752898216247559
    6. '\n' → logprob: -10.127898216247559
    7. '
' → logprob: -10.752898216247559
    8. ' """
' → logprob: -11.377898216247559
    9. '`' → logprob: -11.377898216247559
    10. 'n' → logprob: -11.752898216247559

Token 29: ' Les' (ID: 7029)
  Prédit: 'param'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'param' → logprob: -0.8085130453109741
    2. ':param' → logprob: -2.1835131645202637
    3. '   ' → logprob: -2.3085131645202637
    4. ' param' → logprob: -2.4335131645202637
    5. '```' → logprob: -2.8085131645202637
    6. '"""
' → logprob: -3.4335131645202637
    7. 'Param' → logprob: -3.5585131645202637
    8. 'La' → logprob: -3.6835131645202637
    9. ' La' → logprob: -3.9335131645202637
    10. '@param' → logprob: -4.058513164520264

Token 30: ' K' (ID: 658)
  Prédit: ' éléments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' éléments' → logprob: -0.8691647052764893
    2. ' valeurs' → logprob: -1.6191647052764893
    3. ' nombres' → logprob: -2.1191647052764893
    4. 'élé' → logprob: -2.3691647052764893
    5. ' ' → logprob: -2.9941647052764893
    6. 'ent' → logprob: -3.7441647052764893
    7. ' ent' → logprob: -3.9941647052764893
    8. ' espaces' → logprob: -4.11916446685791
    9. ' paramètres' → logprob: -4.24416446685791
    10. ' contraintes' → logprob: -5.24416446685791

Token 31: ' premiers' (ID: 59140)
  Prédit: ' premiers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' premiers' → logprob: -0.03380071744322777
    2. 'prem' → logprob: -4.2838006019592285
    3. ' premier' → logprob: -5.1588006019592285
    4. ' premières' → logprob: -5.4088006019592285
    5. '_' → logprob: -5.9088006019592285
    6. ' ' → logprob: -6.1588006019592285
    7. ' _' → logprob: -7.0338006019592285
    8. ' =' → logprob: -7.2838006019592285
    9. ' espaces' → logprob: -8.033801078796387
    10. ' )' → logprob: -8.033801078796387

Token 32: ' éléments' (ID: 57375)
  Prédit: ' éléments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' éléments' → logprob: -0.8147720694541931
    2. ' ent' → logprob: -1.314772129058838
    3. 'élé' → logprob: -1.814772129058838
    4. ' ' → logprob: -2.814772129058838
    5. 'ent' → logprob: -3.939772129058838
    6. ' elements' → logprob: -4.439772129058838
    7. ' caractères' → logprob: -4.814772129058838
    8. ' tokens' → logprob: -5.189772129058838
    9. ' mots' → logprob: -5.189772129058838
    10. ' integers' → logprob: -5.689772129058838

Token 33: ' de' (ID: 334)
  Prédit: ' sont'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sont' → logprob: -1.0889207124710083
    2. ',' → logprob: -1.5889207124710083
    3. ' ' → logprob: -1.9639207124710083
    4. 's' → logprob: -2.9639205932617188
    5. ' de' → logprob: -3.4639205932617188
    6. '   ' → logprob: -3.5889205932617188
    7. '=' → logprob: -3.5889205932617188
    8. ' =' → logprob: -3.7139205932617188
    9. ' :' → logprob: -3.7139205932617188
    10. ' ,' → logprob: -3.8389205932617188

Token 34: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.01337774284183979
    2. 'la' → logprob: -5.138377666473389
    3. ' S' → logprob: -5.638377666473389
    4. 'S' → logprob: -6.388377666473389
    5. 'a' → logprob: -7.013377666473389
    6. 's' → logprob: -8.388378143310547
    7. ' ' → logprob: -8.513378143310547
    8. ' l' → logprob: -8.638378143310547
    9. 'l' → logprob: -9.138378143310547
    10. ' ' → logprob: -9.263378143310547

Token 35: ' sé' (ID: 7462)
  Prédit: 'sé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sé' → logprob: -0.12642891705036163
    2. ' sé' → logprob: -2.8764288425445557
    3. 'sequence' → logprob: -2.8764288425445557
    4. 's' → logprob: -5.751429080963135
    5. ' sequence' → logprob: -6.251429080963135
    6. 'liste' → logprob: -7.376429080963135
    7. 'suite' → logprob: -9.001428604125977
    8. ' liste' → logprob: -9.626428604125977
    9. 'sequ' → logprob: -9.626428604125977
    10. 'seq' → logprob: -10.126428604125977

Token 36: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -5.240481914370321e-05
    2. 'q' → logprob: -10.250052452087402
    3. 'rie' → logprob: -11.750052452087402
    4. 'QUENCE' → logprob: -12.625052452087402
    5. 'qu' → logprob: -13.250052452087402
    6. '```' → logprob: -13.625052452087402
    7. 'quences' → logprob: -13.750052452087402
    8. 'que' → logprob: -14.250052452087402
    9. '#' → logprob: -15.250052452087402
    10. '`' → logprob: -16.125051498413086

Token 37: ' valent' (ID: 148217)
  Prédit: ' sont'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sont' → logprob: -0.9127726554870605
    2. ',' → logprob: -1.1627726554870605
    3. 's' → logprob: -2.5377726554870605
    4. ' are' → logprob: -2.7877726554870605
    5. ')' → logprob: -4.1627726554870605
    6. ' (' → logprob: -4.2877726554870605
    7. ' ,' → logprob: -4.4127726554870605
    8. ' )' → logprob: -4.4127726554870605
    9. '<|end|>' → logprob: -4.4127726554870605
    10. '   ' → logprob: -4.6627726554870605

Token 38: ' S' (ID: 336)
  Prédit: ' S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' S' → logprob: -0.4115527868270874
    2. ' ' → logprob: -1.9115527868270874
    3. '0' → logprob: -2.286552906036377
    4. 'S' → logprob: -3.036552906036377
    5. ':' → logprob: -4.411552906036377
    6. ' K' → logprob: -5.036552906036377
    7. '1' → logprob: -5.286552906036377
    8. '  ' → logprob: -5.411552906036377
    9. '```' → logprob: -6.036552906036377
    10. 's' → logprob: -6.411552906036377

Token 39: '.
' (ID: 558)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0006641149520874
    2. '.' → logprob: -1.0006641149520874
    3. '[' → logprob: -1.6256641149520874
    4. ')' → logprob: -3.750664234161377
    5. '"""' → logprob: -4.250664234161377
    6. '```' → logprob: -4.750664234161377
    7. '   ' → logprob: -5.250664234161377
    8. '[:' → logprob: -5.750664234161377
    9. 'e' → logprob: -6.250664234161377
    10. '"' → logprob: -6.750664234161377

Token 40: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10508288443088531
    2. '"""' → logprob: -2.6050829887390137
    3. ')' → logprob: -4.355082988739014
    4. '\n' → logprob: -5.230082988739014
    5. '"' → logprob: -5.855082988739014
    6. '```' → logprob: -6.105082988739014
    7. ''' → logprob: -7.855082988739014
    8. '\' → logprob: -8.230082511901855
    9. ' ' → logprob: -8.355082511901855
    10. ' """' → logprob: -8.355082511901855

Token 41: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07986989617347717
    2. '```' → logprob: -3.0798699855804443
    3. ''' → logprob: -4.454869747161865
    4. ')' → logprob: -4.829869747161865
    5. '"""' → logprob: -5.954869747161865
    6. '`' → logprob: -6.329869747161865
    7. '\n' → logprob: -6.704869747161865
    8. '"' → logprob: -6.704869747161865
    9. ',' → logprob: -7.079869747161865
    10. '  ' → logprob: -7.329869747161865

Token 42: ' Les' (ID: 7029)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.026221105828881264
    2. '```' → logprob: -5.15122127532959
    3. '    ' → logprob: -5.27622127532959
    4. ' ' → logprob: -5.77622127532959
    5. ' for' → logprob: -6.77622127532959
    6. ' ```' → logprob: -7.02622127532959
    7. ' Le' → logprob: -7.15122127532959
    8. ' return' → logprob: -7.40122127532959
    9. ')' → logprob: -7.40122127532959
    10. ' space' → logprob: -7.65122127532959

Token 43: ' N' (ID: 478)
  Prédit: ' N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.9733328819274902
    2. ' autres' → logprob: -1.5983328819274902
    3. ' éléments' → logprob: -2.5983328819274902
    4. 'N' → logprob: -2.5983328819274902
    5. ' suivants' → logprob: -2.8483328819274902
    6. 'élé' → logprob: -2.9733328819274902
    7. ' K' → logprob: -3.0983328819274902
    8. 'i' → logprob: -3.8483328819274902
    9. 'aut' → logprob: -3.9733328819274902
    10. 'n' → logprob: -4.59833288192749

Token 44: '-K' (ID: 12249)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.21213696897029877
    2. ' -' → logprob: -2.21213698387146
    3. '[' → logprob: -3.96213698387146
    4. ')' → logprob: -4.337136745452881
    5. ' ' → logprob: -4.462136745452881
    6. '-K' → logprob: -4.712136745452881
    7. ' premiers' → logprob: -4.837136745452881
    8. '_' → logprob: -4.962136745452881
    9. '-k' → logprob: -6.212136745452881
    10. ' K' → logprob: -6.712136745452881

Token 45: ' éléments' (ID: 57375)
  Prédit: ' éléments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' éléments' → logprob: -0.17100007832050323
    2. ' premiers' → logprob: -2.5460000038146973
    3. ' elements' → logprob: -3.5460000038146973
    4. ' derniers' → logprob: -3.9210000038146973
    5. ' ' → logprob: -4.046000003814697
    6. 'élé' → logprob: -5.046000003814697
    7. ' suivants' → logprob: -6.296000003814697
    8. ' prochains' → logprob: -7.171000003814697
    9. ' él' → logprob: -7.421000003814697
    10. ' élément' → logprob: -7.421000003814697

Token 46: ' suivants' (ID: 112219)
  Prédit: ' suivants'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' suivants' → logprob: -0.16588379442691803
    2. ' rest' → logprob: -2.040883779525757
    3. ' suivant' → logprob: -4.040884017944336
    4. 'rest' → logprob: -6.040884017944336
    5. ' suivantes' → logprob: -7.540884017944336
    6. ' sont' → logprob: -7.665884017944336
    7. ' suivante' → logprob: -7.665884017944336
    8. ' restent' → logprob: -8.540884017944336
    9. ' restantes' → logprob: -8.540884017944336
    10. 'su' → logprob: -8.790884017944336

Token 47: ' valent' (ID: 148217)
  Prédit: ' sont'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sont' → logprob: -1.3630731105804443
    2. ' valent' → logprob: -1.4880731105804443
    3. ' val' → logprob: -1.8630731105804443
    4. 'val' → logprob: -2.1130731105804443
    5. ' vaut' → logprob: -2.3630731105804443
    6. 's' → logprob: -2.9880731105804443
    7. ' ' → logprob: -3.3630731105804443
    8. ' ont' → logprob: -3.9880731105804443
    9. 'ont' → logprob: -4.613073348999023
    10. ' vale' → logprob: -5.113073348999023

Token 48: ':
' (ID: 734)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5233811736106873
    2. ' ' → logprob: -1.023381233215332
    3. ' S' → logprob: -3.523381233215332
    4. 'S' → logprob: -4.148381233215332
    5. 's' → logprob: -6.898381233215332
    6. ' (' → logprob: -8.148381233215332
    7. '1' → logprob: -8.773381233215332
    8. '-' → logprob: -8.835881233215332
    9. '```' → logprob: -9.085881233215332
    10. 'z' → logprob: -9.148381233215332

Token 49: '       ' (ID: 309)
  Prédit: ' S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' S' → logprob: -0.6930009126663208
    2. ' ' → logprob: -1.3180009126663208
    3. '0' → logprob: -1.6930009126663208
    4. 'S' → logprob: -3.1930007934570312
    5. 's' → logprob: -6.193000793457031
    6. ' (' → logprob: -6.693000793457031
    7. ' `' → logprob: -6.818000793457031
    8. '1' → logprob: -7.068000793457031
    9. '`' → logprob: -7.193000793457031
    10. '```' → logprob: -7.693000793457031

Token 50: ' *' (ID: 425)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.3903462290763855
    2. '0' → logprob: -1.7653462886810303
    3. ' S' → logprob: -2.0153462886810303
    4. ' ' → logprob: -4.890346050262451
    5. 's' → logprob: -5.765346050262451
    6. '   ' → logprob: -6.390346050262451
    7. '1' → logprob: -6.640346050262451
    8. ' (' → logprob: -6.640346050262451
    9. '`' → logprob: -7.265346050262451
    10. '(' → logprob: -7.890346050262451

Token 51: ' ' (ID: 220)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.6693311929702759
    2. '0' → logprob: -1.2943311929702759
    3. ' S' → logprob: -1.7943311929702759
    4. ' ' → logprob: -3.6693310737609863
    5. 's' → logprob: -4.669331073760986
    6. ' (' → logprob: -5.919331073760986
    7. '   ' → logprob: -6.169331073760986
    8. '1' → logprob: -6.919331073760986
    9. ' la' → logprob: -7.044331073760986
    10. '(' → logprob: -7.044331073760986

Token 52: '2' (ID: 17)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7145154476165771
    2. 'S' → logprob: -0.7145154476165771
    3. 's' → logprob: -5.339515686035156
    4. '1' → logprob: -5.589515686035156
    5. '(' → logprob: -5.839515686035156
    6. '-' → logprob: -6.589515686035156
    7. 'i' → logprob: -6.589515686035156
    8. '2' → logprob: -6.964515686035156
    9. 'N' → logprob: -7.214515686035156
    10. 'l' → logprob: -7.464515686035156

Token 53: ' si' (ID: 1784)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.22624169290065765
    2. '*' → logprob: -1.7262417078018188
    3. '*S' → logprob: -3.7262415885925293
    4. 'S' → logprob: -8.851242065429688
    5. '**' → logprob: -9.226242065429688
    6. ' **' → logprob: -10.101242065429688
    7. ' ' → logprob: -10.226242065429688
    8. ' S' → logprob: -10.476242065429688
    9. ' +' → logprob: -11.101242065429688
    10. '+' → logprob: -11.476242065429688

Token 54: ' S' (ID: 336)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -1.2706570625305176
    2. ' K' → logprob: -1.3956570625305176
    3. ' S' → logprob: -1.6456570625305176
    4. 'i' → logprob: -2.0206570625305176
    5. 'S' → logprob: -2.6456570625305176
    6. 'K' → logprob: -3.1456570625305176
    7. ' N' → logprob: -4.020657062530518
    8. 'N' → logprob: -4.770657062530518
    9. ' (' → logprob: -6.520657062530518
    10. ' ' → logprob: -7.270657062530518

Token 55: ' vaut' (ID: 83004)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.8933244347572327
    2. '>' → logprob: -1.268324375152588
    3. ' ==' → logprob: -2.143324375152588
    4. '==' → logprob: -2.393324375152588
    5. '=' → logprob: -3.268324375152588
    6. ' <' → logprob: -3.393324375152588
    7. '<' → logprob: -4.768324375152588
    8. '+' → logprob: -5.268324375152588
    9. ' ' → logprob: -5.518324375152588
    10. ' >=' → logprob: -5.768324375152588

Token 56: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.09804165363311768
    2. '0' → logprob: -2.973041534423828
    3. '1' → logprob: -3.223041534423828
    4. '2' → logprob: -6.223041534423828
    5. '3' → logprob: -9.223041534423828
    6. ' -' → logprob: -9.598041534423828
    7. ' S' → logprob: -10.098041534423828
    8. '4' → logprob: -10.473041534423828
    9. '  ' → logprob: -10.848041534423828
    10. 'S' → logprob: -10.973041534423828

Token 57: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4074455201625824
    2. '1' → logprob: -1.1574455499649048
    3. ' ' → logprob: -4.657445430755615
    4. '2' → logprob: -4.782445430755615
    5. '-' → logprob: -6.782445430755615
    6. '3' → logprob: -7.407445430755615
    7. 'S' → logprob: -8.782445907592773
    8. '4' → logprob: -8.907445907592773
    9. '5' → logprob: -9.282445907592773
    10. '"' → logprob: -9.782445907592773

Token 58: ',
' (ID: 412)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13841135799884796
    2. '\n' → logprob: -2.763411283493042
    3. '```' → logprob: -4.263411521911621
    4. '
' → logprob: -4.513411521911621
    5. '0' → logprob: -4.763411521911621
    6. '\' → logprob: -5.138411521911621
    7. '2' → logprob: -5.263411521911621
    8. '       ' → logprob: -5.388411521911621
    9. '    
' → logprob: -6.013411521911621
    10. ',' → logprob: -6.263411521911621

Token 59: '       ' (ID: 309)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.34030935168266296
    2. '3' → logprob: -2.2153093814849854
    3. '2' → logprob: -2.7153093814849854
    4. ' ' → logprob: -3.2153093814849854
    5. '```' → logprob: -3.7153093814849854
    6. '0' → logprob: -4.215309143066406
    7. '4' → logprob: -4.715309143066406
    8. '*' → logprob: -5.215309143066406
    9. '   ' → logprob: -5.340309143066406
    10. ' else' → logprob: -5.340309143066406

Token 60: ' *' (ID: 425)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7625546455383301
    2. '3' → logprob: -1.63755464553833
    3. '*' (adapté à ' *') → logprob: -2.01255464553833
    4. '2' → logprob: -3.38755464553833
    5. '```' → logprob: -3.38755464553833
    6. ' sinon' → logprob: -3.51255464553833
    7. '   ' → logprob: -3.63755464553833
    8. ' ' → logprob: -3.88755464553833
    9. '4' → logprob: -4.01255464553833
    10. ' *' → logprob: -4.51255464553833

Token 61: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7640342712402344
    2. '1' → logprob: -1.5140342712402344
    3. '3' → logprob: -1.5140342712402344
    4. '0' → logprob: -2.7640342712402344
    5. '4' → logprob: -3.8890342712402344
    6. ' S' → logprob: -6.139034271240234
    7. '5' → logprob: -6.389034271240234
    8. '7' → logprob: -6.764034271240234
    9. '-' → logprob: -6.764034271240234
    10. ' -' → logprob: -6.889034271240234

Token 62: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.51020747423172
    2. '1' → logprob: -1.5102074146270752
    3. '0' → logprob: -1.8852074146270752
    4. 'S' → logprob: -4.385207653045654
    5. '4' → logprob: -5.385207653045654
    6. '-' → logprob: -5.510207653045654
    7. 'else' → logprob: -6.760207653045654
    8. 'aut' → logprob: -6.760207653045654
    9. '5' → logprob: -7.510207653045654
    10. ' ' → logprob: -7.635207653045654

Token 63: ' si' (ID: 1784)
  Prédit: ' si'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' si' → logprob: -0.10789525508880615
    2. ' if' → logprob: -2.8578953742980957
    3. 'si' → logprob: -3.2328953742980957
    4. ' sinon' → logprob: -5.732895374298096
    5. '<|end|>' → logprob: -7.482895374298096
    6. 'if' → logprob: -7.607895374298096
    7. ' ' → logprob: -7.982895374298096
    8. ' s' → logprob: -8.357894897460938
    9. 'sin' → logprob: -8.982894897460938
    10. 's' → logprob: -8.982894897460938

Token 64: ' S' (ID: 336)
  Prédit: ' S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' S' → logprob: -0.11298287659883499
    2. 'S' → logprob: -2.237982988357544
    3. ' not' → logprob: -9.612982749938965
    4. ' ' → logprob: -10.362982749938965
    5. 'not' → logprob: -10.362982749938965
    6. 's' → logprob: -10.987982749938965
    7. ' ' → logprob: -12.987982749938965
    8. '<|end|>' → logprob: -13.487982749938965
    9. ' s' → logprob: -13.612982749938965
    10. '>' → logprob: -13.925482749938965

Token 65: ' vaut' (ID: 83004)
  Prédit: ' vaut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vaut' → logprob: -0.0005635190173052251
    2. ' ' → logprob: -8.625563621520996
    3. ' est' → logprob: -9.250563621520996
    4. ' ==' → logprob: -9.250563621520996
    5. '<|end|>' → logprob: -9.875563621520996
    6. 'val' → logprob: -10.250563621520996
    7. ' val' → logprob: -10.375563621520996
    8. '==' → logprob: -10.500563621520996
    9. ' ' → logprob: -11.750563621520996
    10. ' vale' → logprob: -12.000563621520996

Token 66: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.037188101559877396
    2. '0' → logprob: -3.7871880531311035
    3. '2' → logprob: -4.2871880531311035
    4. '3' → logprob: -9.662188529968262
    5. '  ' → logprob: -12.162188529968262
    6. '7' → logprob: -12.287188529968262
    7. '>' → logprob: -12.662188529968262
    8. 'else' → logprob: -12.662188529968262
    9. '4' → logprob: -12.787188529968262
    10. ' -' → logprob: -12.787188529968262

Token 67: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.25711023807525635
    2. '0' → logprob: -1.5071102380752563
    3. '3' → logprob: -6.007110118865967
    4. ' ' → logprob: -6.007110118865967
    5. '4' → logprob: -9.882110595703125
    6. '5' → logprob: -10.007110595703125
    7. '7' → logprob: -10.007110595703125
    8. '-' → logprob: -10.882110595703125
    9. '1' → logprob: -11.257110595703125
    10. '>' → logprob: -11.257110595703125

Token 68: ',
' (ID: 412)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07431446760892868
    2. ',' → logprob: -3.4493143558502197
    3. '```' → logprob: -4.324314594268799
    4. '.' → logprob: -4.449314594268799
    5. '"""' → logprob: -4.949314594268799
    6. ')' → logprob: -5.824314594268799
    7. 'def' → logprob: -6.074314594268799
    8. ',
' → logprob: -7.199314594268799
    9. '       ' → logprob: -7.824314594268799
    10. '
' → logprob: -8.19931411743164

Token 69: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2627438008785248
    2. '*' → logprob: -2.0127437114715576
    3. ' *' → logprob: -2.8877437114715576
    4. '   ' → logprob: -4.387743949890137
    5. ' or' → logprob: -4.762743949890137
    6. ' ou' → logprob: -5.262743949890137
    7. '    ' → logprob: -6.012743949890137
    8. ',' → logprob: -6.137743949890137
    9. '        ' → logprob: -6.262743949890137
    10. ' ' → logprob: -6.512743949890137

Token 70: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' (adapté à ' *') → logprob: -0.01725025475025177
    2. ' *' → logprob: -5.517250061035156
    3. '       ' → logprob: -5.517250061035156
    4. ' ou' → logprob: -5.892250061035156
    5. ' or' → logprob: -6.017250061035156
    6. 'et' → logprob: -6.517250061035156
    7. '   ' → logprob: -7.392250061035156
    8. 'ou' → logprob: -8.017250061035156
    9. '4' → logprob: -8.392250061035156
    10. '#' → logprob: -8.517250061035156

Token 71: ' S' (ID: 336)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.29000625014305115
    2. '4' → logprob: -1.5400062799453735
    3. ' S' → logprob: -4.165006160736084
    4. 'S' → logprob: -4.415006160736084
    5. '1' → logprob: -5.040006160736084
    6. '0' → logprob: -6.790006160736084
    7. '7' → logprob: -7.540006160736084
    8. 's' → logprob: -8.665006637573242
    9. '5' → logprob: -8.790006637573242
    10. ' else' → logprob: -9.040006637573242

Token 72: '-' (ID: 12)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 73: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002430716762319207
    2. ' ' → logprob: -6.6274309158325195
    3. '2' → logprob: -7.0024309158325195
    4. '3' → logprob: -9.00243091583252
    5. '0' → logprob: -10.25243091583252
    6. '4' → logprob: -10.87743091583252
    7. '10' → logprob: -12.25243091583252
    8. '5' → logprob: -12.87743091583252
    9. '-' → logprob: -13.50243091583252
    10. '100' → logprob: -14.25243091583252

Token 74: ' sinon' (ID: 52915)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.15979483723640442
    2. '   ' → logprob: -2.159794807434082
    3. '```' → logprob: -4.034794807434082
    4. ' ' → logprob: -5.534794807434082
    5. ',' → logprob: -5.784794807434082
    6. '
' → logprob: -6.409794807434082
    7. '\n' → logprob: -6.659794807434082
    8. '.
' → logprob: -7.034794807434082
    9. '"""' → logprob: -7.534794807434082
    10. '  ' → logprob: -7.659794807434082

Token 75: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18164046108722687
    2. '"""' → logprob: -1.9316405057907104
    3. ')' → logprob: -4.681640625
    4. '\n' → logprob: -5.056640625
    5. '```' → logprob: -5.806640625
    6. '"' → logprob: -7.431640625
    7. ' """' → logprob: -7.556640625
    8. '"""
' → logprob: -7.556640625
    9. '
' → logprob: -7.931640625
    10. '\' → logprob: -9.181640625

Token 76: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4822688102722168
    2. '"""' → logprob: -0.9822688102722168
    3. '"""
' → logprob: -5.232268810272217
    4. ' """' → logprob: -6.857268810272217
    5. '```' → logprob: -6.982268810272217
    6. '"' → logprob: -7.982268810272217
    7. ' """
' → logprob: -8.607269287109375
    8. '""' → logprob: -8.732269287109375
    9. ' ' → logprob: -9.857269287109375
    10. '\n' → logprob: -10.357269287109375

Token 77: ' Args' (ID: 39185)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.6458417177200317
    2. '   ' → logprob: -1.1458417177200317
    3. '"""
' → logprob: -1.8958417177200317
    4. '"' → logprob: -5.645841598510742
    5. '```' → logprob: -5.770841598510742
    6. ' """
' → logprob: -7.770841598510742
    7. '""' → logprob: -8.520841598510742
    8. ' """' → logprob: -9.270841598510742
    9. '\n' → logprob: -9.520841598510742
    10. '
' → logprob: -10.145841598510742

Token 78: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03288709744811058
    2. ',' → logprob: -3.9078869819641113
    3. ' :' → logprob: -4.907886981964111
    4. '):' → logprob: -5.907886981964111
    5. ')' → logprob: -7.657886981964111
    6. '<|end|>' → logprob: -7.657886981964111
    7. '[' → logprob: -7.782886981964111
    8. '<|end|>' → logprob: -9.15788745880127
    9. '```' → logprob: -9.40788745880127
    10. '=' → logprob: -9.53288745880127

Token 79: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3987131416797638
    2. ' N' → logprob: -1.1487131118774414
    3. 'N' → logprob: -4.523713111877441
    4. ' n' → logprob: -7.773713111877441
    5. 'n' → logprob: -8.023713111877441
    6. '```' → logprob: -9.273713111877441
    7. '	N' → logprob: -11.148713111877441
    8. '    ' → logprob: -11.148713111877441
    9. ' def' → logprob: -11.398713111877441
    10. ' ' → logprob: -11.523713111877441

Token 80: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' (adapté à ' N') → logprob: -0.004792872350662947
    2. '   ' → logprob: -5.5047926902771
    3. ' N' → logprob: -7.5047926902771
    4. 'self' → logprob: -8.754793167114258
    5. '```' → logprob: -13.129793167114258
    6. ' ' → logprob: -13.504793167114258
    7. 'n' → logprob: -14.004793167114258
    8. ' self' → logprob: -14.254793167114258
    9. '	N' → logprob: -14.629793167114258
    10. '
' → logprob: -15.754793167114258

Token 81: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01109156385064125
    2. ':' → logprob: -5.261091709136963
    3. '<|end|>' → logprob: -6.136091709136963
    4. ' ,' → logprob: -6.511091709136963
    5. ':int' → logprob: -6.636091709136963
    6. ',int' → logprob: -7.761091709136963
    7. 'int' → logprob: -8.761091232299805
    8. '<|end|>' → logprob: -9.511091232299805
    9. ')' → logprob: -9.636091232299805
    10. ' (' → logprob: -10.886091232299805

Token 82: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.28434768319129944
    2. ' int' → logprob: -1.409347653388977
    3. ',' → logprob: -7.1593475341796875
    4. ' )' → logprob: -7.2843475341796875
    5. ':int' → logprob: -7.7843475341796875
    6. '[int' → logprob: -8.159347534179688
    7. '=int' → logprob: -8.284347534179688
    8. ',int' → logprob: -8.284347534179688
    9. ')' → logprob: -8.409347534179688
    10. ' ,' → logprob: -8.909347534179688

Token 83: '):' (ID: 3127)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5284394025802612
    2. '):' → logprob: -1.2784394025802612
    3. ',' → logprob: -2.028439521789551
    4. '<|end|>' → logprob: -8.65343952178955
    5. '),' → logprob: -9.40343952178955
    6. ':' → logprob: -9.65343952178955
    7. '):
' → logprob: -10.52843952178955
    8. ' )' → logprob: -10.90343952178955
    9. ' ):' → logprob: -11.15343952178955
    10. '<|end|>' → logprob: -11.40343952178955

Token 84: ' Long' (ID: 7790)
  Prédit: ' N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.9075403809547424
    2. '<|end|>' → logprob: -1.0325403213500977
    3. ' Nombre' → logprob: -3.1575403213500977
    4. ' The' → logprob: -3.4075403213500977
    5. ' Le' → logprob: -4.032540321350098
    6. '```' → logprob: -4.157540321350098
    7. ')' → logprob: -4.282540321350098
    8. '   ' → logprob: -4.282540321350098
    9. '<|end|>' → logprob: -4.407540321350098
    10. ' la' → logprob: -4.532540321350098

Token 85: 'ueur' (ID: 43728)
  Prédit: 'ueur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ueur' → logprob: -0.0003520277969073504
    2. 'er' → logprob: -9.500351905822754
    3. 'év' → logprob: -9.625351905822754
    4. 'ue' → logprob: -9.875351905822754
    5. 'def' → logprob: -10.000351905822754
    6. 'uer' → logprob: -10.500351905822754
    7. 'eur' → logprob: -11.250351905822754
    8. 'é' → logprob: -11.500351905822754
    9. 'u' → logprob: -11.625351905822754
    10. '   ' → logprob: -11.875351905822754

Token 86: ' totale' (ID: 52898)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.8209476470947266
    2. ' ' → logprob: -1.1959476470947266
    3. '   ' → logprob: -1.8209476470947266
    4. ')' → logprob: -3.3209476470947266
    5. ',' → logprob: -3.8209476470947266
    6. '  ' → logprob: -5.195947647094727
    7. '<|end|>' → logprob: -5.320947647094727
    8. '=' → logprob: -5.570947647094727
    9. '[' → logprob: -5.570947647094727
    10. ' )' → logprob: -5.820947647094727

Token 87: ' de' (ID: 334)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2966051995754242
    2. ',' → logprob: -2.421605110168457
    3. ' de' → logprob: -2.421605110168457
    4. '   ' → logprob: -2.921605110168457
    5. '```' → logprob: -4.171605110168457
    6. '<|end|>' → logprob: -5.921605110168457
    7. ' )' → logprob: -6.171605110168457
    8. 'de' → logprob: -6.671605110168457
    9. '[' → logprob: -7.546605110168457
    10. 'def' → logprob: -7.546605110168457

Token 88: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.1285024732351303
    2. 'la' → logprob: -2.128502368927002
    3. 'l' → logprob: -6.753502368927002
    4. 'a' → logprob: -8.75350284576416
    5. ' l' → logprob: -9.50350284576416
    6. ' the' → logprob: -10.12850284576416
    7. 'the' → logprob: -10.25350284576416
    8. ' a' → logprob: -10.62850284576416
    9. ' ' → logprob: -10.75350284576416
    10. 's' → logprob: -11.50350284576416

Token 89: ' sé' (ID: 7462)
  Prédit: ' sé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sé' → logprob: -0.6293694376945496
    2. 'sé' → logprob: -1.0043694972991943
    3. ' sequence' → logprob: -2.7543694972991943
    4. 'sequence' → logprob: -3.3793694972991943
    5. 's' → logprob: -5.879369258880615
    6. ' ' → logprob: -9.129369735717773
    7. 'seq' → logprob: -9.754369735717773
    8. 'sequ' → logprob: -10.129369735717773
    9. ' sequ' → logprob: -11.129369735717773
    10. '_sequence' → logprob: -11.879369735717773

Token 90: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -0.0010210209293290973
    2. 'q' → logprob: -7.001020908355713
    3. 'qu' → logprob: -9.376021385192871
    4. 'que' → logprob: -11.501021385192871
    5. 'quences' → logprob: -11.626021385192871
    6. 'QUENCE' → logprob: -12.626021385192871
    7. '   ' → logprob: -13.626021385192871
    8. '-' → logprob: -15.001021385192871
    9. 'u' → logprob: -15.376021385192871
    10. '#' → logprob: -15.751021385192871

Token 91: '.
' (ID: 558)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012728013098239899
    2. ')' → logprob: -4.637728214263916
    3. ',
' → logprob: -6.262728214263916
    4. '   ' → logprob: -7.262728214263916
    5. '):' → logprob: -8.762727737426758
    6. '```' → logprob: -9.012727737426758
    7. ' ,' → logprob: -10.512727737426758
    8. '),' → logprob: -10.887727737426758
    9. '):
' → logprob: -12.512727737426758
    10. ',

' → logprob: -12.762727737426758

Token 92: '       ' (ID: 309)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6708244681358337
    2. ',' → logprob: -0.9208244681358337
    3. '   ' → logprob: -3.0458245277404785
    4. '```' → logprob: -4.2958245277404785
    5. ' 
' → logprob: -5.1708245277404785
    6. ' ' → logprob: -5.1708245277404785
    7. ',
' → logprob: -5.5458245277404785
    8. '    
' → logprob: -5.9208245277404785
    9. ' ,' → logprob: -6.0458245277404785
    10. '  
' → logprob: -6.1708245277404785

Token 93: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' (adapté à ' K') → logprob: -0.13143670558929443
    2. ' K' → logprob: -2.131436824798584
    3. '   ' → logprob: -5.881436824798584
    4. '       ' → logprob: -6.881436824798584
    5. 'S' → logprob: -7.881436824798584
    6. ' S' → logprob: -9.506436347961426
    7. '```' → logprob: -9.506436347961426
    8. '    ' → logprob: -10.131436347961426
    9. ' 
' → logprob: -11.131436347961426
    10. '        
' → logprob: -11.256436347961426

Token 94: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.21457742154598236
    2. '(int' → logprob: -2.2145774364471436
    3. ':' → logprob: -3.0895774364471436
    4. ':int' → logprob: -3.5895774364471436
    5. '   ' → logprob: -5.9645771980285645
    6. ',' → logprob: -6.0895771980285645
    7. ' :' → logprob: -6.2145771980285645
    8. ')' → logprob: -6.5895771980285645
    9. '):' → logprob: -7.0895771980285645
    10. ' ' → logprob: -7.9645771980285645

Token 95: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0003373694489710033
    2. ' int' → logprob: -8.000337600708008
    3. ')' → logprob: -13.500337600708008
    4. ':int' → logprob: -15.125337600708008
    5. ']int' → logprob: -16.500337600708008
    6. '=int' → logprob: -16.875337600708008
    7. '(int' → logprob: -16.875337600708008
    8. '[int' → logprob: -17.375337600708008
    9. ',int' → logprob: -17.750337600708008
    10. '<int' → logprob: -17.750337600708008

Token 96: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.08949781954288483
    2. ')' → logprob: -2.4644978046417236
    3. ' ):' → logprob: -8.339497566223145
    4. ':' → logprob: -8.589497566223145
    5. ',' → logprob: -9.839497566223145
    6. '):
' → logprob: -9.964497566223145
    7. ' )' → logprob: -12.089497566223145
    8. '   ' → logprob: -12.214497566223145
    9. ':int' → logprob: -12.589497566223145
    10. 'int' → logprob: -12.839497566223145

Token 97: ' Nombre' (ID: 70208)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.18206842243671417
    2. ' nombre' → logprob: -2.182068347930908
    3. ' Nombre' → logprob: -3.432068347930908
    4. ' Le' → logprob: -4.807068347930908
    5. 'int' → logprob: -5.557068347930908
    6. ' number' → logprob: -6.057068347930908
    7. ' ' → logprob: -6.182068347930908
    8. ' le' → logprob: -6.682068347930908
    9. ' Number' → logprob: -7.307068347930908
    10. 'Nombre' → logprob: -7.682068347930908

Token 98: ' d' (ID: 272)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.45924025774002075
    2. '_' → logprob: -1.584240198135376
    3. ')' → logprob: -3.209240198135376
    4. ' ' → logprob: -3.209240198135376
    5. ' de' → logprob: -3.334240198135376
    6. ' des' → logprob: -4.209240436553955
    7. ' =' → logprob: -4.959240436553955
    8. ' d' → logprob: -5.209240436553955
    9. ' )' → logprob: -5.334240436553955
    10. '   ' → logprob: -5.584240436553955

Token 99: ''' (ID: 6)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4043211340904236
    2. '_' → logprob: -1.7793211936950684
    3. ' espaces' → logprob: -2.4043211936950684
    4. ' d' → logprob: -3.4043211936950684
    5. ' de' → logprob: -4.279321193695068
    6. ' espace' → logprob: -5.404321193695068
    7. ' à' → logprob: -5.904321193695068
    8. ' space' → logprob: -5.904321193695068
    9. ' premiers' → logprob: -6.029321193695068
    10. ' des' → logprob: -6.154321193695068

Token 100: 'élé' (ID: 15228)
  Prédit: 'élé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.02937735989689827
    2. ' éléments' → logprob: -3.7793774604797363
    3. ' premiers' → logprob: -5.404377460479736
    4. 'é' → logprob: -7.279377460479736
    5. 'él' → logprob: -8.154376983642578
    6. ' ' → logprob: -8.154376983642578
    7. ' él' → logprob: -8.779376983642578
    8. ''' → logprob: -10.404376983642578
    9. ''é' → logprob: -10.529376983642578
    10. 'prem' → logprob: -10.529376983642578

Token 101: 'ments' (ID: 1626)
  Prédit: 'ments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ments' → logprob: -0.012730957008898258
    2. 'm' → logprob: -4.387731075286865
    3. '   ' → logprob: -9.762730598449707
    4. 'ment' → logprob: -10.637730598449707
    5. 'éments' → logprob: -10.637730598449707
    6. ' ' → logprob: -11.137730598449707
    7. '```' → logprob: -11.137730598449707
    8. 'me' → logprob: -11.137730598449707
    9. '	' → logprob: -12.262730598449707
    10. '=' → logprob: -12.262730598449707

Token 102: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.2766090929508209
    2. '=' → logprob: -2.276609182357788
    3. ' =' → logprob: -3.401609182357788
    4. ' )' → logprob: -3.901609182357788
    5. '   ' → logprob: -4.151608943939209
    6. ')' → logprob: -4.151608943939209
    7. '    ' → logprob: -4.151608943939209
    8. '_' → logprob: -4.651608943939209
    9. ' initial' → logprob: -4.776608943939209
    10. ' ' → logprob: -5.776608943939209

Token 103: ' la' (ID: 557)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3177436888217926
    2. ' remplir' → logprob: -2.3177437782287598
    3. ' initial' → logprob: -2.4427437782287598
    4. ' rép' → logprob: -4.19274377822876
    5. 's' → logprob: -4.94274377822876
    6. ' garder' → logprob: -4.94274377822876
    7. ' conserver' → logprob: -5.06774377822876
    8. ' mettre' → logprob: -5.44274377822876
    9. ' génér' → logprob: -5.56774377822876
    10. 'initial' → logprob: -5.69274377822876

Token 104: ' valeur' (ID: 41664)
  Prédit: ' rép'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' rép' → logprob: -0.9276605844497681
    2. '   ' → logprob: -1.802660584449768
    3. 's' → logprob: -2.0526604652404785
    4. 'r' → logprob: -3.3026604652404785
    5. 'val' → logprob: -3.4276604652404785
    6. 'g' → logprob: -3.6776604652404785
    7. 'rem' → logprob: -3.6776604652404785
    8. ' ' → logprob: -4.0526604652404785
    9. ' remplir' → logprob: -4.3026604652404785
    10. 'ré' → logprob: -4.3026604652404785

Token 105: ' S' (ID: 336)
  Prédit: ' S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' S' → logprob: -0.2068752497434616
    2. ' initial' → logprob: -2.3318753242492676
    3. ' de' → logprob: -3.0818753242492676
    4. 'S' → logprob: -3.4568753242492676
    5. ' ' → logprob: -4.956875324249268
    6. 'initial' → logprob: -5.706875324249268
    7. 'de' → logprob: -7.581875324249268
    8. ' =' → logprob: -8.20687484741211
    9. ' init' → logprob: -8.45687484741211
    10. 's' → logprob: -8.58187484741211

Token 106: ' vers' (ID: 3640)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.22659634053707123
    2. '   ' → logprob: -2.4765963554382324
    3. '):
' → logprob: -2.9765963554382324
    4. ')' → logprob: -2.9765963554382324
    5. ',' → logprob: -4.226596355438232
    6. '```' → logprob: -6.976596355438232
    7. ':' → logprob: -7.726596355438232
    8. ' ):' → logprob: -8.101595878601074
    9. ' ' → logprob: -9.476595878601074
    10. ' )' → logprob: -9.851595878601074

Token 107: ' le' (ID: 505)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.38393551111221313
    2. ' la' → logprob: -1.8839354515075684
    3. 'la' → logprob: -2.3839354515075684
    4. ' le' → logprob: -2.6339354515075684
    5. ' ' → logprob: -6.758935451507568
    6. '   ' → logprob: -8.133935928344727
    7. 'er' → logprob: -8.258935928344727
    8. 'l' → logprob: -8.258935928344727
    9. '_le' → logprob: -8.258935928344727
    10. 'e' → logprob: -9.133935928344727

Token 108: ' début' (ID: 29589)
  Prédit: 'bas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bas' → logprob: -0.5185900926589966
    2. 'haut' → logprob: -1.3935900926589966
    3. ' ' → logprob: -3.018589973449707
    4. 'dro' → logprob: -3.143589973449707
    5. 'ha' → logprob: -3.518589973449707
    6. ' haut' → logprob: -5.143589973449707
    7. 'dé' → logprob: -5.268589973449707
    8. '   ' → logprob: -5.643589973449707
    9. '```' → logprob: -5.768589973449707
    10. ' ' → logprob: -6.018589973449707

Token 109: '.
' (ID: 558)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6713924407958984
    2. '   ' → logprob: -1.4213924407958984
    3. ')' → logprob: -1.5463924407958984
    4. '):
' → logprob: -4.171392440795898
    5. ',' → logprob: -4.421392440795898
    6. '.' → logprob: -6.671392440795898
    7. ' de' → logprob: -6.796392440795898
    8. '```' → logprob: -6.796392440795898
    9. ':' → logprob: -7.296392440795898
    10. ' ):' → logprob: -7.546392440795898

Token 110: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.025187168270349503
    2. ')' → logprob: -4.400187015533447
    3. '```' → logprob: -4.650187015533447
    4. '"""' → logprob: -6.900187015533447
    5. '    
' → logprob: -7.525187015533447
    6. '):' → logprob: -8.150187492370605
    7. '  
' → logprob: -8.400187492370605
    8. '
' → logprob: -8.525187492370605
    9. '"""
' → logprob: -8.650187492370605
    10. '):
' → logprob: -8.900187492370605

Token 111: ' S' (ID: 336)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.032768040895462036
    2. 'S' (adapté à ' S') → logprob: -4.032768249511719
    3. '       ' → logprob: -5.532768249511719
    4. ' S' → logprob: -5.657768249511719
    5. ')' → logprob: -6.157768249511719
    6. ' ' → logprob: -6.657768249511719
    7. '```' → logprob: -7.157768249511719
    8. '    ' → logprob: -7.782768249511719
    9. '"""
' → logprob: -8.407768249511719
    10. '"""' → logprob: -8.407768249511719

Token 112: ' (' (ID: 350)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.17766575515270233
    2. ':' → logprob: -2.1776657104492188
    3. ' (' → logprob: -4.052665710449219
    4. ')' → logprob: -4.677665710449219
    5. ':int' → logprob: -4.677665710449219
    6. '(int' → logprob: -5.177665710449219
    7. ' :' → logprob: -5.927665710449219
    8. ' ):' → logprob: -6.052665710449219
    9. '):
' → logprob: -6.177665710449219
    10. 'int' → logprob: -8.552665710449219

Token 113: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.6280151009559631
    2. ')' → logprob: -1.1280150413513184
    3. ' int' → logprob: -2.6280150413513184
    4. ':int' → logprob: -3.3780150413513184
    5. '):' → logprob: -3.6280150413513184
    6. ':' → logprob: -5.503015041351318
    7. '[int' → logprob: -6.128015041351318
    8. '(int' → logprob: -6.878015041351318
    9. '):
' → logprob: -6.878015041351318
    10. ' )' → logprob: -7.378015041351318

Token 114: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.016745366156101227
    2. ')' → logprob: -4.141745567321777
    3. '):
' → logprob: -7.391745567321777
    4. ' ):' → logprob: -9.766745567321777
    5. ':' → logprob: -10.516745567321777
    6. ',' → logprob: -12.016745567321777
    7. '   ' → logprob: -14.016745567321777
    8. '):

' → logprob: -14.266745567321777
    9. '),' → logprob: -14.641745567321777
    10. ' ' → logprob: -15.141745567321777

Token 115: ' La' (ID: 3038)
  Prédit: 'Vale'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Vale' → logprob: -0.8684802055358887
    2. ' int' → logprob: -1.4934802055358887
    3. 'La' → logprob: -2.1184802055358887
    4. ' Vale' → logprob: -2.3684802055358887
    5. 'int' → logprob: -2.7434802055358887
    6. ' La' → logprob: -3.1184802055358887
    7. 'Initial' → logprob: -4.368480205535889
    8. 'Int' → logprob: -5.243480205535889
    9. 'L' → logprob: -5.868480205535889
    10. ' valeur' → logprob: -6.368480205535889

Token 116: ' valeur' (ID: 41664)
  Prédit: ' valeur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' valeur' → logprob: -0.5736637115478516
    2. 'val' → logprob: -0.9486637115478516
    3. ' ' → logprob: -3.1986637115478516
    4. ' val' → logprob: -5.198663711547852
    5. '   ' → logprob: -6.323663711547852
    6. 'prem' → logprob: -7.698663711547852
    7. ' première' → logprob: -8.698663711547852
    8. '  ' → logprob: -8.948663711547852
    9. ' vale' → logprob: -9.198663711547852
    10. 's' → logprob: -10.073663711547852

Token 117: ' assign' (ID: 14975)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.28555482625961304
    2. ' initial' → logprob: -1.4105548858642578
    3. 'initial' → logprob: -5.910554885864258
    4. 'de' → logprob: -7.160554885864258
    5. ' ' → logprob: -7.910554885864258
    6. ' à' → logprob: -8.410554885864258
    7. ' des' → logprob: -8.660554885864258
    8. ' du' → logprob: -10.035554885864258
    9. '   ' → logprob: -10.535554885864258
    10. '_initial' → logprob: -10.785554885864258

Token 118: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.16030973196029663
    2. 'é' → logprob: -1.9103097915649414
    3. 'e' → logprob: -10.160309791564941
    4. 'er' → logprob: -11.410309791564941
    5. '   ' → logprob: -11.785309791564941
    6. '=' → logprob: -11.785309791564941
    7. 'ee' → logprob: -11.910309791564941
    8. 'és' → logprob: -12.410309791564941
    9. 'ées' → logprob: -12.785309791564941
    10. ' é' → logprob: -13.785309791564941

Token 119: ' aux' (ID: 5850)
  Prédit: ' aux'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' aux' → logprob: -0.00803917832672596
    2. ' au' → logprob: -5.1330389976501465
    3. 'aux' → logprob: -7.1330389976501465
    4. ' à' → logprob: -7.2580389976501465
    5. ' ' → logprob: -8.633039474487305
    6. '   ' → logprob: -8.758039474487305
    7. 'au' → logprob: -9.133039474487305
    8. ' initial' → logprob: -9.258039474487305
    9. ' des' → logprob: -10.508039474487305
    10. ' a' → logprob: -11.883039474487305

Token 120: ' K' (ID: 658)
  Prédit: ' premiers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' premiers' → logprob: -0.3991602063179016
    2. ' K' → logprob: -1.2741601467132568
    3. 'K' → logprob: -4.149160385131836
    4. ' ' → logprob: -4.274160385131836
    5. 'élé' → logprob: -5.274160385131836
    6. ' premier' → logprob: -5.399160385131836
    7. ' éléments' → logprob: -5.774160385131836
    8. ' premières' → logprob: -5.899160385131836
    9. 'prem' → logprob: -6.274160385131836
    10. '  ' → logprob: -7.024160385131836

Token 121: ' premiers' (ID: 59140)
  Prédit: ' premiers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' premiers' → logprob: -0.046228908002376556
    2. 'prem' → logprob: -3.1712288856506348
    3. ' premières' → logprob: -6.796228885650635
    4. ' premier' → logprob: -7.546228885650635
    5. ' ' → logprob: -7.671228885650635
    6. '_' → logprob: -7.921228885650635
    7. ' ' → logprob: -8.421229362487793
    8. ' éléments' → logprob: -8.921229362487793
    9. ' prém' → logprob: -9.046229362487793
    10. 'élé' → logprob: -9.171229362487793

Token 122: ' éléments' (ID: 57375)
  Prédit: ' éléments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' éléments' → logprob: -0.3204277753829956
    2. 'élé' → logprob: -1.3204277753829956
    3. ' elements' → logprob: -5.195427894592285
    4. ' él' → logprob: -7.445427894592285
    5. ' élément' → logprob: -7.445427894592285
    6. ' ' → logprob: -8.570427894592285
    7. 'elements' → logprob: -9.445427894592285
    8. ' é' → logprob: -10.070427894592285
    9. 'él' → logprob: -11.070427894592285
    10. '   ' → logprob: -11.195427894592285

Token 123: '.

' (ID: 364)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5930966138839722
    2. ')' → logprob: -1.8430966138839722
    3. '   ' → logprob: -1.8430966138839722
    4. '):
' → logprob: -2.0930967330932617
    5. '.' → logprob: -5.968096733093262
    6. ':' → logprob: -6.468096733093262
    7. ',' → logprob: -7.093096733093262
    8. '```' → logprob: -7.593096733093262
    9. ' ):' → logprob: -7.843096733093262
    10. '):

' → logprob: -8.218096733093262

Token 124: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1627534180879593
    2. ')' → logprob: -2.9127533435821533
    3. '"""' → logprob: -3.1627533435821533
    4. '\n' → logprob: -3.7877533435821533
    5. '"""
' → logprob: -4.537753582000732
    6. '
' → logprob: -5.537753582000732
    7. '    
' → logprob: -5.662753582000732
    8. '):' → logprob: -5.787753582000732
    9. '  
' → logprob: -5.912753582000732
    10. '```' → logprob: -6.537753582000732

Token 125: ' Returns' (ID: 9609)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""' → logprob: -1.1005988121032715
    2. 'Returns' (adapté à ' Returns') → logprob: -1.3505988121032715
    3. '"""
' → logprob: -1.6005988121032715
    4. '   ' → logprob: -1.7255988121032715
    5. 'returns' → logprob: -3.7255988121032715
    6. '```' → logprob: -6.4755988121032715
    7. '""' → logprob: -6.9755988121032715
    8. ' Returns' → logprob: -7.4755988121032715
    9. 'result' → logprob: -8.35059928894043
    10. ' """
' → logprob: -8.60059928894043

Token 126: ':
' (ID: 734)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8351659774780273
    2. ':' → logprob: -1.4601659774780273
    3. ' :' → logprob: -1.9601659774780273
    4. ' [' → logprob: -2.7101659774780273
    5. ' []' → logprob: -3.2101659774780273
    6. '[]' → logprob: -3.8351659774780273
    7. ' ' → logprob: -3.8351659774780273
    8. '[:]' → logprob: -3.9601659774780273
    9. '<|end|>' → logprob: -4.960165977478027
    10. ' [
' → logprob: -5.710165977478027

Token 127: '       ' (ID: 309)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.07932748645544052
    2. ' []' → logprob: -2.9543275833129883
    3. '[' → logprob: -3.8293275833129883
    4. '   ' → logprob: -6.329327583312988
    5. ' [
' → logprob: -8.454327583312988
    6. '[]' → logprob: -8.704327583312988
    7. ' list' → logprob: -9.329327583312988
    8. ' a' → logprob: -9.954327583312988
    9. 'List' → logprob: -10.704327583312988
    10. '[List' → logprob: -10.704327583312988

Token 128: ' str' (ID: 989)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.5222904086112976
    2. 'list' → logprob: -1.2722904682159424
    3. 'List' → logprob: -2.6472904682159424
    4. ' List' → logprob: -2.8972904682159424
    5. ' [' → logprob: -8.272290229797363
    6. '[List' → logprob: -9.022290229797363
    7. '[' → logprob: -10.147290229797363
    8. '_list' → logprob: -10.647290229797363
    9. '   ' → logprob: -10.647290229797363
    10. 'lst' → logprob: -10.772290229797363

Token 129: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02383442595601082
    2. ')' → logprob: -5.023834228515625
    3. '"' → logprob: -5.398834228515625
    4. '```' → logprob: -6.148834228515625
    5. '"""' → logprob: -6.773834228515625
    6. '[' → logprob: -6.898834228515625
    7. ''' → logprob: -7.023834228515625
    8. ']' → logprob: -7.023834228515625
    9. ' :' → logprob: -7.148834228515625
    10. '   ' → logprob: -7.398834228515625

Token 130: ' Une' (ID: 19758)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.6993584632873535
    2. '"' → logprob: -1.4493584632873535
    3. ' '' → logprob: -1.5743584632873535
    4. ' "' → logprob: -2.9493584632873535
    5. ' ' → logprob: -5.4493584632873535
    6. '[' → logprob: -6.8243584632873535
    7. ' ''.' → logprob: -7.1993584632873535
    8. ' '['' → logprob: -8.199357986450195
    9. ' [' → logprob: -8.449357986450195
    10. '''' → logprob: -8.699357986450195

Token 131: ' chaîne' (ID: 89288)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3073905110359192
    2. ' sequence' → logprob: -1.6823904514312744
    3. ' '' → logprob: -3.5573904514312744
    4. ''' → logprob: -4.6823906898498535
    5. ' chaîne' → logprob: -4.6823906898498535
    6. ' string' → logprob: -4.8073906898498535
    7. '"' → logprob: -5.1823906898498535
    8. ' liste' → logprob: -5.8073906898498535
    9. ' "' → logprob: -6.0573906898498535
    10. ' list' → logprob: -6.6823906898498535

Token 132: ' de' (ID: 334)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.3948644995689392
    2. ' de' → logprob: -2.019864559173584
    3. ''' → logprob: -2.644864559173584
    4. '   ' → logprob: -2.894864559173584
    5. ' '' → logprob: -3.644864559173584
    6. ' "' → logprob: -4.394864559173584
    7. '```' → logprob: -5.019864559173584
    8. 'de' → logprob: -5.394864559173584
    9. ' contenant' → logprob: -5.894864559173584
    10. ' representing' → logprob: -6.144864559173584

Token 133: ' caractères' (ID: 183106)
  Prédit: ''ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''ent' → logprob: -1.2776780128479004
    2. ''' → logprob: -1.5276780128479004
    3. 'car' → logprob: -1.7776780128479004
    4. ' caractères' → logprob: -2.0276780128479004
    5. 'ent' → logprob: -2.5276780128479004
    6. ' ent' → logprob: -3.2776780128479004
    7. ' '' → logprob: -4.1526780128479
    8. 'str' → logprob: -4.1526780128479
    9. 'int' → logprob: -4.4026780128479
    10. ' N' → logprob: -5.1526780128479

Token 134: ' représentant' (ID: 136122)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -1.063561201095581
    2. ''' → logprob: -1.688561201095581
    3. ' contenant' → logprob: -2.063561201095581
    4. ' de' → logprob: -2.188561201095581
    5. ' '' → logprob: -2.688561201095581
    6. ' "' → logprob: -2.938561201095581
    7. '   ' → logprob: -3.188561201095581
    8. ' representing' → logprob: -4.06356143951416
    9. ' représentant' → logprob: -4.56356143951416
    10. ' containing' → logprob: -5.81356143951416

Token 135: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.5180661082267761
    2. ''' → logprob: -1.143066167831421
    3. ' '' → logprob: -3.018066167831421
    4. ' les' → logprob: -4.768065929412842
    5. ' une' → logprob: -4.893065929412842
    6. ' ' → logprob: -4.893065929412842
    7. ' l' → logprob: -4.893065929412842
    8. ' le' → logprob: -6.143065929412842
    9. '"' → logprob: -6.518065929412842
    10. ' "' → logprob: -8.14306640625

Token 136: ' sé' (ID: 7462)
  Prédit: ' sé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sé' → logprob: -0.1839951127767563
    2. ''' → logprob: -2.808995008468628
    3. 'sé' → logprob: -2.808995008468628
    4. 's' → logprob: -3.933995008468628
    5. ' sequence' → logprob: -4.433995246887207
    6. ' '' → logprob: -5.183995246887207
    7. 'sequence' → logprob: -5.183995246887207
    8. ' ' → logprob: -6.058995246887207
    9. '"' → logprob: -7.058995246887207
    10. ' liste' → logprob: -7.558995246887207

Token 137: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -9.102680633077398e-05
    2. 'qu' → logprob: -10.250090599060059
    3. 'q' → logprob: -10.500090599060059
    4. 'QUENCE' → logprob: -11.500090599060059
    5. 'que' → logprob: -12.125090599060059
    6. 'quences' → logprob: -13.125090599060059
    7. '-' → logprob: -13.125090599060059
    8. 'rie' → logprob: -13.250090599060059
    9. 'u' → logprob: -13.625090599060059
    10. 'ence' → logprob: -14.000090599060059

Token 138: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8801179528236389
    2. '   ' → logprob: -1.2551178932189941
    3. '"' → logprob: -2.005117893218994
    4. '\n' → logprob: -2.880117893218994
    5. ')' → logprob: -3.630117893218994
    6. ' =' → logprob: -4.255117893218994
    7. '[' → logprob: -4.755117893218994
    8. '    
' → logprob: -5.005117893218994
    9. ',
' → logprob: -5.130117893218994
    10. '\' → logprob: -5.130117893218994

Token 139: ' les' (ID: 1341)
  Prédit: ' ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.5498679280281067
    2. ''' → logprob: -1.424867868423462
    3. '"' → logprob: -1.924867868423462
    4. ' "' → logprob: -3.674867868423462
    5. ' ' → logprob: -5.549868106842041
    6. ' join' → logprob: -6.299868106842041
    7. '   ' → logprob: -7.049868106842041
    8. ' sépar' → logprob: -7.049868106842041
    9. ' avec' → logprob: -7.799868106842041
    10. '    ' → logprob: -8.174867630004883

Token 140: ' valeurs' (ID: 73668)
  Prédit: ' éléments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' éléments' → logprob: -0.3991120755672455
    2. ' ' → logprob: -2.7741119861602783
    3. ' '' → logprob: -2.8991119861602783
    4. ''' → logprob: -2.8991119861602783
    5. ' espaces' → logprob: -3.5241119861602783
    6. 'élé' → logprob: -3.7741119861602783
    7. ' ent' → logprob: -3.7741119861602783
    8. ' valeurs' → logprob: -4.149112224578857
    9. ' "' → logprob: -4.274112224578857
    10. '"' → logprob: -4.399112224578857

Token 141: ' sépar' (ID: 97160)
  Prédit: ' sépar'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sépar' → logprob: -0.015715472400188446
    2. ' étant' → logprob: -5.015715599060059
    3. ' separated' → logprob: -5.640715599060059
    4. ' espac' → logprob: -6.390715599060059
    5. 'sé' → logprob: -6.890715599060059
    6. ' separ' → logprob: -7.015715599060059
    7. ' sé' → logprob: -7.640715599060059
    8. ' being' → logprob: -7.890715599060059
    9. ' concaten' → logprob: -8.765715599060059
    10. ' ' → logprob: -8.890715599060059

Token 142: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.032765962183475494
    2. 'é' → logprob: -3.9077658653259277
    3. 'ée' → logprob: -4.907765865325928
    4. 'és' → logprob: -5.407765865325928
    5. 'er' → logprob: -8.782766342163086
    6. 'É' → logprob: -10.157766342163086
    7. '```' → logprob: -10.282766342163086
    8. ' par' → logprob: -11.157766342163086
    9. 'par' → logprob: -11.657766342163086
    10. 'ant' → logprob: -12.032766342163086

Token 143: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.043068159371614456
    2. 'par' → logprob: -3.1680681705474854
    3. '```' → logprob: -11.043067932128906
    4. '(par' → logprob: -11.168067932128906
    5. '_par' → logprob: -11.418067932128906
    6. ''' → logprob: -11.668067932128906
    7. '"' → logprob: -11.918067932128906
    8. ' by' → logprob: -12.918067932128906
    9. ' ' → logprob: -13.543067932128906
    10. 'es' → logprob: -13.543067932128906

Token 144: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.6747394800186157
    2. ''un' → logprob: -1.7997394800186157
    3. ''' → logprob: -2.299739360809326
    4. 'un' → logprob: -2.924739360809326
    5. 'des' → logprob: -2.924739360809326
    6. ''espace' → logprob: -3.174739360809326
    7. ' un' → logprob: -3.424739360809326
    8. ''esp' → logprob: -4.049739360809326
    9. ' espaces' → logprob: -4.799739360809326
    10. '"' → logprob: -5.174739360809326

Token 145: ' espaces' (ID: 98361)
  Prédit: ' espaces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' espaces' → logprob: -0.18147890269756317
    2. ''esp' → logprob: -2.806478977203369
    3. 'esp' → logprob: -3.181478977203369
    4. ''espace' → logprob: -3.306478977203369
    5. ' espace' → logprob: -4.681478977203369
    6. 'es' → logprob: -5.056478977203369
    7. 'spaces' → logprob: -5.681478977203369
    8. 'space' → logprob: -5.931478977203369
    9. '_' → logprob: -6.806478977203369
    10. '"' → logprob: -6.931478977203369

Token 146: '.
' (ID: 558)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.30249887704849243
    2. '   ' → logprob: -1.4274988174438477
    3. '"' → logprob: -5.302498817443848
    4. ')
' → logprob: -5.427498817443848
    5. '")' → logprob: -5.677498817443848
    6. '
' → logprob: -6.427498817443848
    7. 'def' → logprob: -6.552498817443848
    8. '"""
' → logprob: -6.802498817443848
    9. '"""' → logprob: -7.052498817443848
    10. '\n' → logprob: -7.052498817443848

Token 147: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03274427354335785
    2. '"""' → logprob: -4.657744407653809
    3. '\n' → logprob: -4.907744407653809
    4. '
' → logprob: -5.282744407653809
    5. '"""
' → logprob: -5.782744407653809
    6. '    
' → logprob: -6.032744407653809
    7. ' 
' → logprob: -6.407744407653809
    8. '```' → logprob: -6.657744407653809
    9. '"' → logprob: -7.907744407653809
    10. '"\' → logprob: -8.032744407653809

Token 148: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5893787741661072
    2. '\n' → logprob: -1.589378833770752
    3. '
' → logprob: -1.964378833770752
    4. '    
' → logprob: -2.839378833770752
    5. ' 
' → logprob: -4.464378833770752
    6. '"""
' (adapté à ' """
') → logprob: -4.839378833770752
    7. '"' → logprob: -5.214378833770752
    8. '"""' → logprob: -5.714378833770752
    9. '  
' → logprob: -5.839378833770752
    10. 'n' → logprob: -6.089378833770752

Token 149: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0069520496763288975
    2. '    
' → logprob: -6.256952285766602
    3. 'sequence' → logprob: -6.756952285766602
    4. ' sequence' → logprob: -6.881952285766602
    5. '\n' → logprob: -7.506952285766602
    6. 'return' → logprob: -7.631952285766602
    7. '
' → logprob: -7.881952285766602
    8. 'result' → logprob: -8.006952285766602
    9. ' return' → logprob: -8.381952285766602
    10. '```' → logprob: -8.631952285766602

Token 150: ' ans' (ID: 3345)
  Prédit: 'sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sequence' → logprob: -0.22275780141353607
    2. 'seq' → logprob: -2.0977578163146973
    3. 'result' → logprob: -3.3477578163146973
    4. 'if' → logprob: -3.7227578163146973
    5. ' sequence' → logprob: -4.222757816314697
    6. ' seq' → logprob: -7.097757816314697
    7. ' if' → logprob: -7.222757816314697
    8. '   ' → logprob: -7.347757816314697
    9. 'res' → logprob: -8.222757339477539
    10. 'return' → logprob: -8.847757339477539

Token 151: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0700359120965004
    2. '=' → logprob: -2.695035934448242
    3. ' ' → logprob: -10.195035934448242
    4. 'or' → logprob: -10.445035934448242
    5. ' =
' → logprob: -12.070035934448242
    6. 'ow' → logprob: -12.320035934448242
    7. '   ' → logprob: -12.820035934448242
    8. '[' → logprob: -12.945035934448242
    9. ' +=' → logprob: -12.945035934448242
    10. '=[]' → logprob: -13.445035934448242

Token 152: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.45530879497528076
    2. ' []' → logprob: -1.0803087949752808
    3. ' [' → logprob: -4.45530891418457
    4. '[' → logprob: -5.45530891418457
    5. ' "' → logprob: -5.58030891418457
    6. '"' → logprob: -6.45530891418457
    7. ' '' → logprob: -6.45530891418457
    8. ''' → logprob: -6.95530891418457
    9. ' ['' → logprob: -7.20530891418457
    10. '['' → logprob: -7.33030891418457

Token 153: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26860180497169495
    2. ' for' → logprob: -1.5186017751693726
    3. 'for' → logprob: -4.768601894378662
    4. ' ans' → logprob: -4.893601894378662
    5. '    
' → logprob: -8.143601417541504
    6. ' if' → logprob: -9.018601417541504
    7. '    ' → logprob: -10.393601417541504
    8. ' 
' → logprob: -10.518601417541504
    9. 'ans' → logprob: -10.768601417541504
    10. '
' → logprob: -11.268601417541504

Token 154: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8001744747161865
    2. 'ans' → logprob: -1.1751744747161865
    3. '   ' → logprob: -2.4251744747161865
    4. ' for' → logprob: -2.4251744747161865
    5. ' ans' → logprob: -2.9251744747161865
    6. 'if' → logprob: -4.675174713134766
    7. ' if' → logprob: -6.425174713134766
    8. '    
' → logprob: -8.925174713134766
    9. '	ans' → logprob: -8.925174713134766
    10. '(ans' → logprob: -9.675174713134766

Token 155: ' Rem' (ID: 6890)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.603259265422821
    2. ' ans' → logprob: -1.4782593250274658
    3. 'for' → logprob: -1.8532593250274658
    4. ' for' → logprob: -3.478259325027466
    5. 'if' → logprob: -3.728259325027466
    6. '   ' → logprob: -4.603259086608887
    7. ' if' → logprob: -5.853259086608887
    8. '(ans' → logprob: -9.353259086608887
    9. '#' → logprob: -9.728259086608887
    10. '    
' → logprob: -10.228259086608887

Token 156: 'pl' (ID: 528)
  Prédit: 'pl'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pl' → logprob: -0.00101220712531358
    2. 'p' → logprob: -7.751012325286865
    3. 'plit' → logprob: -7.876012325286865
    4. 'placer' → logprob: -9.376011848449707
    5. '   ' → logprob: -10.126011848449707
    6. 'plier' → logprob: -10.251011848449707
    7. 'plies' → logprob: -11.376011848449707
    8. 'pli' → logprob: -12.001011848449707
    9. 'pler' → logprob: -12.126011848449707
    10. 'place' → logprob: -12.501011848449707

Token 157: 'ir' (ID: 380)
  Prédit: 'ir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ir' → logprob: -0.0006479830481112003
    2. '   ' → logprob: -8.12564754486084
    3. 'i' → logprob: -9.00064754486084
    4. 'pl' → logprob: -10.50064754486084
    5. 'issage' → logprob: -10.50064754486084
    6. 'iss' → logprob: -10.75064754486084
    7. 'a' → logprob: -10.87564754486084
    8. 'is' → logprob: -11.25064754486084
    9. 'er' → logprob: -11.37564754486084
    10. '```' → logprob: -11.50064754486084

Token 158: ' les' (ID: 1341)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.37604600191116333
    2. 'ans' → logprob: -1.3760459423065186
    3. '(ans' → logprob: -2.8760459423065186
    4. ' for' → logprob: -5.876046180725098
    5. 'for' → logprob: -6.876046180725098
    6. ' ' → logprob: -8.751046180725098
    7. '	ans' → logprob: -8.876046180725098
    8. '   ' → logprob: -8.876046180725098
    9. '  ' → logprob: -10.376046180725098
    10. 'range' → logprob: -10.376046180725098

Token 159: ' K' (ID: 658)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.2600668668746948
    2. 'ans' → logprob: -1.5100668668746948
    3. ' K' → logprob: -5.385066986083984
    4. 'K' → logprob: -6.010066986083984
    5. '[' → logprob: -8.385066986083984
    6. ' first' → logprob: -8.510066986083984
    7. '   ' → logprob: -9.385066986083984
    8. '(ans' → logprob: -9.510066986083984
    9. ' premiers' → logprob: -9.510066986083984
    10. ' ' → logprob: -10.010066986083984

Token 160: ' premiers' (ID: 59140)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.021204551681876183
    2. '   ' → logprob: -4.896204471588135
    3. ' ' → logprob: -5.646204471588135
    4. ' premiers' → logprob: -6.146204471588135
    5. '  ' → logprob: -6.271204471588135
    6. 'ans' → logprob: -6.521204471588135
    7. ' for' → logprob: -6.646204471588135
    8. ' ' → logprob: -7.396204471588135
    9. '    ' → logprob: -7.521204471588135
    10. ' [' → logprob: -8.271204948425293

Token 161: ' éléments' (ID: 57375)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.09043477475643158
    2. 'ans' → logprob: -2.9654347896575928
    3. ' for' → logprob: -3.8404347896575928
    4. '   ' → logprob: -5.465434551239014
    5. '    
' → logprob: -5.465434551239014
    6. 'for' → logprob: -5.715434551239014
    7. ' 
' → logprob: -8.090435028076172
    8. '    ' → logprob: -8.465435028076172
    9. ' ' → logprob: -8.715435028076172
    10. '_' → logprob: -8.840435028076172

Token 162: ' avec' (ID: 3937)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25865235924720764
    2. ' for' → logprob: -2.008652448654175
    3. ' ans' → logprob: -2.508652448654175
    4. 'for' → logprob: -5.258652210235596
    5. 'ans' → logprob: -5.633652210235596
    6. ' =' → logprob: -6.758652210235596
    7. '    
' → logprob: -6.883652210235596
    8. '(ans' → logprob: -7.258652210235596
    9. '	ans' → logprob: -8.758652687072754
    10. '=' → logprob: -8.883652687072754

Token 163: ' la' (ID: 557)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.05103548616170883
    2. ' S' → logprob: -3.4260354042053223
    3. 'str' → logprob: -4.301035404205322
    4. ' str' → logprob: -5.926035404205322
    5. '[S' → logprob: -7.926035404205322
    6. '   ' → logprob: -8.17603588104248
    7. '[' → logprob: -9.42603588104248
    8. '[str' → logprob: -9.55103588104248
    9. '"S' → logprob: -9.67603588104248
    10. ' [' → logprob: -9.80103588104248

Token 164: ' valeur' (ID: 41664)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.018648045137524605
    2. ' S' → logprob: -4.393648147583008
    3. 'str' → logprob: -5.518648147583008
    4. '"' → logprob: -7.643648147583008
    5. '"S' → logprob: -7.768648147583008
    6. ' str' → logprob: -7.893648147583008
    7. ''S' → logprob: -8.143648147583008
    8. ''' → logprob: -8.143648147583008
    9. ' '' → logprob: -9.893648147583008
    10. ' "' → logprob: -10.268648147583008

Token 165: ' S' (ID: 336)
  Prédit: ' S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' S' → logprob: -0.576333224773407
    2. 'S' → logprob: -0.826333224773407
    3. ' de' → logprob: -9.076333045959473
    4. ''' → logprob: -9.826333045959473
    5. '   ' → logprob: -9.826333045959473
    6. ' '' → logprob: -10.201333045959473
    7. 's' → logprob: -11.076333045959473
    8. 'de' → logprob: -11.076333045959473
    9. '"' → logprob: -11.201333045959473
    10. '`' → logprob: -11.326333045959473

Token 166: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015085450373589993
    2. '
' → logprob: -5.390085220336914
    3. ' for' → logprob: -5.640085220336914
    4. 'for' → logprob: -5.765085220336914
    5. '    
' → logprob: -5.890085220336914
    6. ' ans' → logprob: -7.515085220336914
    7. 'ans' → logprob: -8.015085220336914
    8. '   
' → logprob: -10.765085220336914
    9. '  
' → logprob: -11.140085220336914
    10. ' 
' → logprob: -11.390085220336914

Token 167: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012942321598529816
    2. '    
' → logprob: -4.887942314147949
    3. ' for' → logprob: -6.137942314147949
    4. ' ans' → logprob: -6.387942314147949
    5. 'for' → logprob: -7.387942314147949
    6. '
' → logprob: -7.637942314147949
    7. 'ans' → logprob: -8.63794231414795
    8. ' 
' → logprob: -9.26294231414795
    9. '     
' → logprob: -10.76294231414795
    10. '   
' → logprob: -10.88794231414795

Token 168: ' for' (ID: 395)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.3436448574066162
    2. 'ans' → logprob: -1.4686448574066162
    3. '   ' → logprob: -3.718644857406616
    4. ' for' → logprob: -3.843644857406616
    5. 'for' (adapté à ' for') → logprob: -4.218645095825195
    6. '	ans' → logprob: -9.593645095825195
    7. '(ans' → logprob: -10.218645095825195
    8. '    
' → logprob: -10.218645095825195
    9. ' 
' → logprob: -10.968645095825195
    10. '
' → logprob: -12.343645095825195

Token 169: ' _' (ID: 1175)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.00580946309491992
    2. ' _' → logprob: -5.505809307098389
    3. ' ' → logprob: -6.630809307098389
    4. 'i' → logprob: -8.380809783935547
    5. '_' → logprob: -8.630809783935547
    6. '_i' → logprob: -13.755809783935547
    7. '	i' → logprob: -14.880809783935547
    8. ' k' → logprob: -14.880809783935547
    9. '  ' → logprob: -15.005809783935547
    10. ' ‌' → logprob: -15.130809783935547

Token 170: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.002058307873085141
    2. 'in' → logprob: -6.502058506011963
    3. ' ' → logprob: -7.502058506011963
    4. ' i' → logprob: -13.002058029174805
    5. ' ' → logprob: -15.127058029174805
    6. '  ' → logprob: -15.252058029174805
    7. '_' → logprob: -15.377058029174805
    8. 'range' → logprob: -15.377058029174805
    9. 'import' → logprob: -15.877058029174805
    10. ' _' → logprob: -15.877058029174805

Token 171: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.023269355297088623
    2. 'range' → logprob: -3.7732694149017334
    3. ' ' → logprob: -10.773269653320312
    4. ' ran' → logprob: -14.148269653320312
    5. ' rang' → logprob: -14.773269653320312
    6. ' ra' → logprob: -14.898269653320312
    7. 'rang' → logprob: -14.898269653320312
    8. ' in' → logprob: -15.273269653320312
    9. '	range' → logprob: -15.648269653320312
    10. ' xrange' → logprob: -15.773269653320312

Token 172: '(K' (ID: 28797)
  Prédit: '(K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(K' → logprob: -0.053040552884340286
    2. '(' → logprob: -3.0530405044555664
    3. ' K' → logprob: -5.678040504455566
    4. ' (' → logprob: -7.053040504455566
    5. 'K' → logprob: -8.803040504455566
    6. '(
' → logprob: -12.303040504455566
    7. '(k' → logprob: -13.303040504455566
    8. '(KERN' → logprob: -13.678040504455566
    9. ',K' → logprob: -16.053041458129883
    10. ' ' → logprob: -16.053041458129883

Token 173: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03896557167172432
    2. '):
' → logprob: -3.4139654636383057
    3. ')' → logprob: -5.413965702056885
    4. ' ):' → logprob: -7.163965702056885
    5. ':' → logprob: -10.038965225219727
    6. ' ):
' → logprob: -11.163965225219727
    7. ' )' → logprob: -11.913965225219727
    8. '   ' → logprob: -12.038965225219727
    9. '):
' → logprob: -13.038965225219727
    10. ',' → logprob: -13.038965225219727

Token 174: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09547172486782074
    2. ' ans' → logprob: -2.4704716205596924
    3. '   ' → logprob: -5.8454718589782715
    4. 'ans' → logprob: -5.9704718589782715
    5. ':
' → logprob: -8.095471382141113
    6. ':' → logprob: -8.220471382141113
    7. '(ans' → logprob: -9.095471382141113
    8. '	ans' → logprob: -9.595471382141113
    9. '    
' → logprob: -10.220471382141113
    10. '
' → logprob: -10.220471382141113

Token 175: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.04866696521639824
    2. ' ans' → logprob: -3.0486669540405273
    3. '   ' → logprob: -9.673666954040527
    4. '       ' → logprob: -11.548666954040527
    5. '	ans' → logprob: -12.923666954040527
    6. '(ans' → logprob: -13.048666954040527
    7. '
' → logprob: -14.673666954040527
    8. '_ans' → logprob: -14.673666954040527
    9. 'answer' → logprob: -14.923666954040527
    10. '    ' → logprob: -15.048666954040527

Token 176: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00033796546631492674
    2. '.' → logprob: -8.000337600708008
    3. '.app' → logprob: -13.125337600708008
    4. 'append' → logprob: -15.125337600708008
    5. '.extend' → logprob: -15.625337600708008
    6. '.ap' → logprob: -17.000337600708008
    7. '.Append' → logprob: -18.125337600708008
    8. '.add' → logprob: -18.500337600708008
    9. '.push' → logprob: -18.625337600708008
    10. ' .' → logprob: -19.000337600708008

Token 177: '(S' (ID: 6181)
  Prédit: '(S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -0.062009137123823166
    2. '(' → logprob: -2.81200909614563
    3. '(s' → logprob: -10.68700885772705
    4. '(
' → logprob: -12.06200885772705
    5. 'S' → logprob: -12.06200885772705
    6. '('' → logprob: -12.18700885772705
    7. ' (' → logprob: -13.81200885772705
    8. '(int' → logprob: -15.43700885772705
    9. '((' → logprob: -15.43700885772705
    10. ' S' → logprob: -15.56200885772705

Token 178: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00023846338444855064
    2. ' )' → logprob: -8.375238418579102
    3. ')
' → logprob: -11.875238418579102
    4. '   ' → logprob: -14.875238418579102
    5. '))' → logprob: -15.000238418579102
    6. ' )
' → logprob: -16.8752384185791
    7. '),' → logprob: -17.2502384185791
    8. ')`' → logprob: -17.3752384185791
    9. ' ' → logprob: -17.7502384185791
    10. ')

' → logprob: -17.8752384185791

Token 179: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1420021653175354
    2. '   ' → logprob: -2.6420021057128906
    3. '    
' → logprob: -4.017002105712891
    4. ' 
' → logprob: -4.142002105712891
    5. ' for' → logprob: -4.392002105712891
    6. 'for' → logprob: -4.642002105712891
    7. '  
' → logprob: -5.392002105712891
    8. '   
' → logprob: -7.642002105712891
    9. '\n' → logprob: -9.01700210571289
    10. '```' → logprob: -10.76700210571289

Token 180: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7012602686882019
    2. 'for' → logprob: -1.3262603282928467
    3. '   ' → logprob: -1.8262603282928467
    4. ' for' → logprob: -2.7012603282928467
    5. '    
' → logprob: -4.701260089874268
    6. ' 
' → logprob: -7.326260089874268
    7. '\n' → logprob: -8.576260566711426
    8. '  
' → logprob: -8.701260566711426
    9. '   
' → logprob: -8.826260566711426
    10. 'if' → logprob: -9.451260566711426

Token 181: ' Ajouter' (ID: 165754)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.10573407262563705
    2. ' for' → logprob: -2.98073410987854
    3. 'if' → logprob: -3.48073410987854
    4. 'val' → logprob: -5.105733871459961
    5. 'rest' → logprob: -5.355733871459961
    6. ' if' → logprob: -6.230733871459961
    7. 'rem' → logprob: -6.730733871459961
    8. 'remaining' → logprob: -6.855733871459961
    9. '   ' → logprob: -7.355733871459961
    10. ' rest' → logprob: -7.355733871459961

Token 182: ' les' (ID: 1341)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.1504656076431274
    2. '_' → logprob: -2.025465488433838
    3. ' the' → logprob: -2.150465488433838
    4. ' ' → logprob: -2.150465488433838
    5. ' a' → logprob: -2.900465488433838
    6. 'for' → logprob: -2.900465488433838
    7. ' N' → logprob: -3.650465488433838
    8. ' "' → logprob: -3.775465488433838
    9. '<|end|>' → logprob: -4.025465488433838
    10. '<|end|>' → logprob: -4.025465488433838

Token 183: ' N' (ID: 478)
  Prédit: ' N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.09353289008140564
    2. 'N' → logprob: -3.7185328006744385
    3. ' "' → logprob: -4.218533039093018
    4. '_' → logprob: -5.218533039093018
    5. ' (' → logprob: -5.218533039093018
    6. ' rest' → logprob: -5.468533039093018
    7. ' ' → logprob: -5.718533039093018
    8. 's' → logprob: -5.843533039093018
    9. 'n' → logprob: -5.968533039093018
    10. '[' → logprob: -6.218533039093018

Token 184: '-K' (ID: 12249)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.3351009786128998
    2. ' -' → logprob: -1.3351010084152222
    3. '-K' → logprob: -3.8351008892059326
    4. ' ' → logprob: -13.585101127624512
    5. '-
' → logprob: -14.460101127624512
    6. '-К' → logprob: -14.960101127624512
    7. '<|end|>' → logprob: -15.210101127624512
    8. '
' → logprob: -15.335101127624512
    9. '_' → logprob: -15.460101127624512
    10. '-\xc4' → logprob: -15.960101127624512

Token 185: ' éléments' (ID: 57375)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.5630406737327576
    2. ' elements' → logprob: -1.1880407333374023
    3. '-' → logprob: -2.8130407333374023
    4. '-K' → logprob: -3.5630407333374023
    5. ' éléments' → logprob: -4.688040733337402
    6. ' ans' → logprob: -4.813040733337402
    7. 'elements' → logprob: -5.063040733337402
    8. ' ' → logprob: -5.813040733337402
    9. '<|end|>' → logprob: -6.563040733337402
    10. ' ones' → logprob: -6.813040733337402

Token 186: ' rest' (ID: 2867)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.18055491149425507
    2. 'for' → logprob: -2.3055548667907715
    3. '   ' → logprob: -2.9305548667907715
    4. ' with' → logprob: -5.5555548667907715
    5. ',' → logprob: -6.1805548667907715
    6. ' pour' → logprob: -6.1805548667907715
    7. ' avec' → logprob: -7.5555548667907715
    8. 'with' → logprob: -7.5555548667907715
    9. ' en' → logprob: -7.8055548667907715
    10. 's' → logprob: -8.30555534362793

Token 187: 'ants' (ID: 2027)
  Prédit: 'ants'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ants' → logprob: -0.0005256305448710918
    2. 'ant' → logprob: -7.75052547454834
    3. '   ' → logprob: -9.50052547454834
    4. 'aux' → logprob: -11.00052547454834
    5. 'a' → logprob: -14.12552547454834
    6. 'ans' → logprob: -14.37552547454834
    7. 'nants' → logprob: -14.37552547454834
    8. 'antes' → logprob: -15.00052547454834
    9. '-' → logprob: -15.25052547454834
    10. 'au' → logprob: -15.37552547454834

Token 188: ' selon' (ID: 27571)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.15963207185268402
    2. '   ' → logprob: -2.4096319675445557
    3. 'for' → logprob: -2.9096319675445557
    4. '    
' → logprob: -6.534632205963135
    5. ' 
' → logprob: -7.284632205963135
    6. '
' → logprob: -7.784632205963135
    7. ' if' → logprob: -8.909631729125977
    8. '   
' → logprob: -9.034631729125977
    9. '  
' → logprob: -9.159631729125977
    10. ',' → logprob: -9.409631729125977

Token 189: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.24811123311519623
    2. '   ' → logprob: -2.2481112480163574
    3. ' S' → logprob: -3.3731112480163574
    4. ' ' → logprob: -3.7481112480163574
    5. ' the' → logprob: -4.498111248016357
    6. '    ' → logprob: -5.123111248016357
    7. '2' → logprob: -5.248111248016357
    8. '1' → logprob: -5.373111248016357
    9. ' (' → logprob: -5.373111248016357
    10. ' le' → logprob: -5.748111248016357

Token 190: ' valeur' (ID: 41664)
  Prédit: 'condition'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'condition' → logprob: -0.43050557374954224
    2. ' condition' → logprob: -1.4305055141448975
    3. 'val' → logprob: -2.3055055141448975
    4. '   ' → logprob: -5.805505752563477
    5. ' valeur' → logprob: -6.305505752563477
    6. ' logique' → logprob: -6.305505752563477
    7. ' règle' → logprob: -7.305505752563477
    8. ' ' → logprob: -7.305505752563477
    9. ' val' → logprob: -7.805505752563477
    10. '
' → logprob: -8.180505752563477

Token 191: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.11152385920286179
    2. ' S' → logprob: -3.3615238666534424
    3. 'S' → logprob: -3.4865238666534424
    4. 'de' → logprob: -3.7365238666534424
    5. '   ' → logprob: -4.361523628234863
    6. ' ' → logprob: -6.111523628234863
    7. '  ' → logprob: -7.236523628234863
    8. '    ' → logprob: -8.986523628234863
    9. '(S' → logprob: -8.986523628234863
    10. 's' → logprob: -9.236523628234863

Token 192: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.02975858747959137
    2. ' S' → logprob: -3.5297586917877197
    3. 's' → logprob: -12.27975845336914
    4. ' ' → logprob: -12.65475845336914
    5. '   ' → logprob: -16.40475845336914
    6. ' s' → logprob: -16.52975845336914
    7. '  ' → logprob: -16.90475845336914
    8. '_S' → logprob: -17.02975845336914
    9. '(S' → logprob: -17.02975845336914
    10. '	S' → logprob: -17.40475845336914

Token 193: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1169929504394531
    2. ' for' → logprob: -1.1169929504394531
    3. ' if' → logprob: -2.241992950439453
    4. '
' → logprob: -2.491992950439453
    5. 'for' → logprob: -2.491992950439453
    6. 'if' → logprob: -2.741992950439453
    7. '    
' → logprob: -4.991992950439453
    8. ' 
' → logprob: -6.866992950439453
    9. '  
' → logprob: -8.116992950439453
    10. '   
' → logprob: -8.116992950439453

Token 194: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.43364810943603516
    2. ' for' → logprob: -1.9336481094360352
    3. 'for' → logprob: -2.433648109436035
    4. 'if' → logprob: -2.683648109436035
    5. ' if' → logprob: -3.183648109436035
    6. 'rest' → logprob: -5.933648109436035
    7. 'val' → logprob: -6.308648109436035
    8. '    
' → logprob: -6.433648109436035
    9. 'next' → logprob: -6.808648109436035
    10. '
' → logprob: -7.558648109436035

Token 195: ' for' (ID: 395)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3769790828227997
    2. 'for' (adapté à ' for') → logprob: -1.626979112625122
    3. ' if' → logprob: -2.876979112625122
    4. ' for' → logprob: -3.876979112625122
    5. 'val' → logprob: -4.251978874206543
    6. 'next' → logprob: -4.501978874206543
    7. 'rest' → logprob: -5.626978874206543
    8. '   ' → logprob: -5.626978874206543
    9. 'value' → logprob: -5.751978874206543
    10. ' next' → logprob: -6.751978874206543

Token 196: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.29438313841819763
    2. '_' → logprob: -1.54438316822052
    3. ' ' → logprob: -3.2943830490112305
    4. ' i' → logprob: -5.5443830490112305
    5. ' range' → logprob: -7.6693830490112305
    6. ' in' → logprob: -9.66938304901123
    7. ' ' → logprob: -10.54438304901123
    8. '  ' → logprob: -13.04438304901123
    9. ' ‌' → logprob: -13.66938304901123
    10. ' _
' → logprob: -13.79438304901123

Token 197: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.557221531867981
    2. 'in' → logprob: -1.557221531867981
    3. 'range' → logprob: -1.557221531867981
    4. ' range' → logprob: -5.307221412658691
    5. ' ' → logprob: -7.307221412658691
    6. 'ange' → logprob: -9.682221412658691
    7. '  ' → logprob: -10.182221412658691
    8. '   ' → logprob: -10.682221412658691
    9. '    ' → logprob: -12.057221412658691
    10. 'space' → logprob: -13.557221412658691

Token 198: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.048593614250421524
    2. ' range' → logprob: -3.048593521118164
    3. '(range' → logprob: -12.048593521118164
    4. '   ' → logprob: -16.173593521118164
    5. '	range' → logprob: -16.298593521118164
    6. ' ' → logprob: -17.548593521118164
    7. 'rang' → logprob: -17.798593521118164
    8. '    ' → logprob: -17.923593521118164
    9. '(' → logprob: -18.173593521118164
    10. '[' → logprob: -18.548593521118164

Token 199: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.001348688150756061
    2. '(K' → logprob: -6.876348495483398
    3. '(' → logprob: -8.126348495483398
    4. ' (' → logprob: -11.251348495483398
    5. 'N' → logprob: -12.501348495483398
    6. '(
' → logprob: -13.751348495483398
    7. '(n' → logprob: -14.126348495483398
    8. 'K' → logprob: -14.251348495483398
    9. ' N' → logprob: -14.626348495483398
    10. '   ' → logprob: -15.626348495483398

Token 200: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.41290879249572754
    2. '-' → logprob: -1.1629087924957275
    3. '-K' → logprob: -3.6629087924957275
    4. ' ' → logprob: -10.162908554077148
    5. '   ' → logprob: -12.787908554077148
    6. '-
' → logprob: -13.287908554077148
    7. ' -
' → logprob: -15.037908554077148
    8. '
' → logprob: -15.662908554077148
    9. '-К' → logprob: -15.662908554077148
    10. ')' → logprob: -16.28790855407715

Token 201: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.06196802109479904
    2. ' K' → logprob: -2.8119680881500244
    3. ' ' → logprob: -15.561967849731445
    4. '   ' → logprob: -16.936967849731445
    5. '	K' → logprob: -17.061967849731445
    6. '>K' → logprob: -17.186967849731445
    7. ',K' → logprob: -19.186967849731445
    8. '<|end|>' → logprob: -20.061967849731445
    9. '
' → logprob: -20.311967849731445
    10. ')' → logprob: -20.436967849731445

Token 202: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.3869559168815613
    2. '):' → logprob: -1.136955976486206
    3. ')' → logprob: -10.136956214904785
    4. '):
' → logprob: -10.511956214904785
    5. ' ):' → logprob: -12.136956214904785
    6. '):

' → logprob: -12.136956214904785
    7. ' ):
' → logprob: -12.261956214904785
    8. ':' → logprob: -13.011956214904785
    9. '():
' → logprob: -16.01195526123047
    10. ':
' → logprob: -16.38695526123047

Token 203: '       ' (ID: 309)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.2736858129501343
    2. '   ' → logprob: -2.398685932159424
    3. '    ' → logprob: -2.898685932159424
    4. '       ' → logprob: -3.023685932159424
    5. ' if' → logprob: -4.273685932159424
    6. ' 
' → logprob: -4.773685932159424
    7. '(ans' → logprob: -4.773685932159424
    8. ' ' → logprob: -5.273685932159424
    9. 'ans' → logprob: -5.898685932159424
    10. '):
' → logprob: -7.023685932159424

Token 204: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.02483627013862133
    2. 'ans' → logprob: -3.899836301803589
    3. ' if' → logprob: -5.52483606338501
    4. '       ' → logprob: -8.774836540222168
    5. ' ans' → logprob: -9.149836540222168
    6. '           ' → logprob: -11.149836540222168
    7. '   ' → logprob: -11.524836540222168
    8. '
' → logprob: -12.024836540222168
    9. '(ans' → logprob: -13.024836540222168
    10. '{
' → logprob: -13.649836540222168

Token 205: ' S' (ID: 336)
  Prédit: ' S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' S' → logprob: -0.01815696805715561
    2. 'S' → logprob: -4.018157005310059
    3. ' ' → logprob: -11.893157005310059
    4. ' ' → logprob: -16.268156051635742
    5. 's' → logprob: -16.393156051635742
    6. ' (' → logprob: -16.893156051635742
    7. ' s' → logprob: -17.143156051635742
    8. '<|end|>' → logprob: -17.643156051635742
    9. '  ' → logprob: -17.893156051635742
    10. '(S' → logprob: -18.393156051635742

Token 206: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.11283912509679794
    2. '==' → logprob: -2.2378392219543457
    3. '=' → logprob: -11.737838745117188
    4. ')' → logprob: -12.737838745117188
    5. ' =' → logprob: -13.112838745117188
    6. ' ' → logprob: -13.487838745117188
    7. ' ' → logprob: -13.987838745117188
    8. '1' → logprob: -14.112838745117188
    9. ')==' → logprob: -15.112838745117188
    10. ' )' → logprob: -15.237838745117188

Token 207: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.16022412478923798
    2. ' ' → logprob: -1.9102240800857544
    3. '0' → logprob: -16.91022491455078
    4. '<|end|>' → logprob: -17.41022491455078
    5. '  ' → logprob: -18.41022491455078
    6. ' ' → logprob: -18.41022491455078
    7. '   ' → logprob: -19.41022491455078
    8. '```' → logprob: -19.53522491455078
    9. '2' → logprob: -20.41022491455078
    10. '۱' → logprob: -20.84772491455078

Token 208: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.2729995988775045e-06
    2. ' ' → logprob: -12.000006675720215
    3. '0' → logprob: -19.2500057220459
    4. '<|end|>' → logprob: -20.3750057220459
    5. '   ' → logprob: -20.8750057220459
    6. '  ' → logprob: -20.8750057220459
    7. '```' → logprob: -21.0000057220459
    8. '۱' → logprob: -21.3750057220459
    9. '１' → logprob: -22.2500057220459
    10. '১' → logprob: -23.6250057220459

Token 209: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12696431577205658
    2. ':
' → logprob: -2.1269643306732178
    3. '):
' → logprob: -11.376964569091797
    4. '):' → logprob: -11.626964569091797
    5. ':
' → logprob: -12.251964569091797
    6. '           ' → logprob: -12.376964569091797
    7. ')' → logprob: -12.751964569091797
    8. '       ' → logprob: -13.376964569091797
    9. ' :' → logprob: -13.876964569091797
    10. ':

' → logprob: -14.376964569091797

Token 210: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.18163350224494934
    2. ':' → logprob: -2.306633472442627
    3. ' ans' → logprob: -2.806633472442627
    4. ':
' → logprob: -5.806633472442627
    5. 'ans' → logprob: -6.181633472442627
    6. '2' → logprob: -7.681633472442627
    7. '               ' → logprob: -9.181633949279785
    8. '(ans' → logprob: -9.306633949279785
    9. ' :' → logprob: -9.556633949279785
    10. '       ' → logprob: -9.556633949279785

Token 211: ' ans' (ID: 3345)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.46717122197151184
    2. ' ans' → logprob: -1.7171711921691895
    3. 'ans' (adapté à ' ans') → logprob: -1.7171711921691895
    4. '           ' → logprob: -4.4671711921691895
    5. ' ' → logprob: -6.2171711921691895
    6. '               ' → logprob: -7.5921711921691895
    7. '   ' → logprob: -10.467171669006348
    8. '(ans' → logprob: -10.842171669006348
    9. '	ans' → logprob: -11.217171669006348
    10. '                   ' → logprob: -11.342171669006348

Token 212: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.02324908785521984
    2. '.' → logprob: -3.7732491493225098
    3. '.extend' → logprob: -13.273248672485352
    4. 'append' → logprob: -13.773248672485352
    5. '.app' → logprob: -14.523248672485352
    6. '.Append' → logprob: -16.27324867248535
    7. ' .' → logprob: -16.52324867248535
    8. '.add' → logprob: -16.77324867248535
    9. '.ap' → logprob: -17.02324867248535
    10. ').' → logprob: -17.64824867248535

Token 213: '(' (ID: 7)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.21046079695224762
    2. '(' → logprob: -1.7104607820510864
    3. ' ' → logprob: -4.710460662841797
    4. '   ' → logprob: -12.835460662841797
    5. '(
' → logprob: -13.210460662841797
    6. ' (' → logprob: -13.460460662841797
    7. '    ' → logprob: -16.085460662841797
    8. '       ' → logprob: -17.335460662841797
    9. '  ' → logprob: -17.835460662841797
    10. '     ' → logprob: -18.960460662841797

Token 214: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.2729995988775045e-06
    2. ' ' → logprob: -12.000006675720215
    3. '   ' → logprob: -17.0000057220459
    4. '  ' → logprob: -21.8750057220459
    5. '۲' → logprob: -22.1250057220459
    6. '２' → logprob: -22.3750057220459
    7. '    ' → logprob: -22.6250057220459
    8. '       ' → logprob: -23.2500057220459
    9. '```' → logprob: -23.6250057220459
    10. '٢' → logprob: -24.2500057220459

Token 215: ')' (ID: 8)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.2555810809135437
    2. ')' → logprob: -1.5055811405181885
    3. '       ' → logprob: -5.630580902099609
    4. ' )
' → logprob: -10.25558090209961
    5. ')
' → logprob: -11.38058090209961
    6. ' )' → logprob: -12.38058090209961
    7. '   ' → logprob: -12.63058090209961
    8. '           ' → logprob: -13.25558090209961
    9. ')

' → logprob: -13.25558090209961
    10. ')`
' → logprob: -14.38058090209961

Token 216: '  ' (ID: 256)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002907465910539031
    2. 'elif' → logprob: -6.2529072761535645
    3. ' elif' → logprob: -8.127907752990723
    4. ' else' → logprob: -8.127907752990723
    5. '
' → logprob: -8.252907752990723
    6. 'else' → logprob: -9.252907752990723
    7. '        
' → logprob: -12.127907752990723
    8. '   ' → logprob: -12.252907752990723
    9. '<|end|>' → logprob: -12.252907752990723
    10. '      ' → logprob: -13.127907752990723

Token 217: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13546040654182434
    2. 'elif' → logprob: -2.260460376739502
    3. '
' → logprob: -4.385460376739502
    4. 'else' → logprob: -4.885460376739502
    5. ' elif' → logprob: -6.885460376739502
    6. ' else' → logprob: -7.135460376739502
    7. '        
' → logprob: -8.26046085357666
    8. '    
' → logprob: -9.88546085357666
    9. ' 
' → logprob: -10.01046085357666
    10. '   ' → logprob: -10.63546085357666

Token 218: ' Si' (ID: 7832)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.29193049669265747
    2. '
' → logprob: -1.9169304370880127
    3. '       ' → logprob: -2.5419304370880127
    4. 'else' → logprob: -4.541930675506592
    5. ' elif' → logprob: -4.666930675506592
    6. ' 
' → logprob: -6.416930675506592
    7. ')' → logprob: -6.541930675506592
    8. '        
' → logprob: -6.791930675506592
    9. ' else' → logprob: -6.916930675506592
    10. ')
' → logprob: -7.666930675506592

Token 219: ' S' (ID: 336)
  Prédit: ' S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' S' → logprob: -0.11323966085910797
    2. 'S' → logprob: -2.2382397651672363
    3. ' ' → logprob: -8.238239288330078
    4. 's' → logprob: -9.238239288330078
    5. ' ' → logprob: -11.113239288330078
    6. '<|end|>' → logprob: -11.238239288330078
    7. ' s' → logprob: -11.988239288330078
    8. '(S' → logprob: -12.613239288330078
    9. '    ' → logprob: -13.613239288330078
    10. '2' → logprob: -13.613239288330078

Token 220: '=' (ID: 28)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.348577618598938
    2. '==' → logprob: -1.223577618598938
    3. ' vaut' → logprob: -9.598577499389648
    4. '=' → logprob: -9.848577499389648
    5. ' ' → logprob: -12.098577499389648
    6. ' =' → logprob: -12.973577499389648
    7. ' ' → logprob: -13.598577499389648
    8. '===' → logprob: -14.348577499389648
    9. ')' → logprob: -14.723577499389648
    10. 'val' → logprob: -15.348577499389648

Token 221: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.026304826140403748
    2. ' ' → logprob: -3.6513047218322754
    3. '<|end|>' → logprob: -12.901305198669434
    4. '  ' → logprob: -14.401305198669434
    5. '   ' → logprob: -15.151305198669434
    6. ' ' → logprob: -15.401305198669434
    7. '```' → logprob: -15.401305198669434
    8. 'S' → logprob: -16.151304244995117
    9. '2' → logprob: -16.151304244995117
    10. '...' → logprob: -16.526304244995117

Token 222: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0314323864877224
    2. 'elif' → logprob: -4.156432151794434
    3. 'else' → logprob: -5.281432151794434
    4. ' else' → logprob: -5.406432151794434
    5. '<|end|>' → logprob: -6.156432151794434
    6. ' elif' → logprob: -6.531432151794434
    7. '
' → logprob: -6.656432151794434
    8. ')' → logprob: -7.781432151794434
    9. '   ' → logprob: -9.781432151794434
    10. '           ' → logprob: -10.156432151794434

Token 223: ' les' (ID: 1341)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10645783692598343
    2. 'elif' → logprob: -2.8564579486846924
    3. 'else' → logprob: -4.606457710266113
    4. ' elif' → logprob: -4.606457710266113
    5. 'ans' → logprob: -4.731457710266113
    6. ' ans' → logprob: -4.981457710266113
    7. ' else' → logprob: -5.231457710266113
    8. '           ' → logprob: -6.856457710266113
    9. '2' → logprob: -8.106457710266113
    10. '```' → logprob: -8.731457710266113

Token 224: ' suivants' (ID: 112219)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.4185589551925659
    2. 'val' → logprob: -2.4185590744018555
    3. ' suivants' → logprob: -2.6685590744018555
    4. ' éléments' → logprob: -2.7935590744018555
    5. 'su' → logprob: -3.0435590744018555
    6. 'de' → logprob: -3.7935590744018555
    7. 'next' → logprob: -4.2935590744018555
    8. ' prochains' → logprob: -4.9185590744018555
    9. ' next' → logprob: -5.7935590744018555
    10. 'elements' → logprob: -5.9185590744018555

Token 225: ' valent' (ID: 148217)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8017734289169312
    2. '.append' → logprob: -0.9267734289169312
    3. '       ' → logprob: -3.3017735481262207
    4. ' sont' → logprob: -3.8017735481262207
    5. ' ans' → logprob: -3.8017735481262207
    6. ' append' → logprob: -4.426773548126221
    7. 'append' → logprob: -4.551773548126221
    8. ')' → logprob: -4.676773548126221
    9. ' continue' → logprob: -5.176773548126221
    10. ' doivent' → logprob: -5.551773548126221

Token 226: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.08897873014211655
    2. '2' → logprob: -2.4639787673950195
    3. ' ' → logprob: -11.08897876739502
    4. '    ' → logprob: -11.83897876739502
    5. '  ' → logprob: -12.08897876739502
    6. '```' → logprob: -12.83897876739502
    7. ''' → logprob: -13.46397876739502
    8. ' deux' → logprob: -13.71397876739502
    9. ' )' → logprob: -14.08897876739502
    10. '3' → logprob: -14.46397876739502

Token 227: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0430297926068306
    2. ' ' → logprob: -3.16802978515625
    3. '  ' → logprob: -11.66802978515625
    4. '```' → logprob: -12.04302978515625
    5. '3' → logprob: -12.16802978515625
    6. '   ' → logprob: -13.29302978515625
    7. ' deux' → logprob: -13.29302978515625
    8. '    ' → logprob: -13.41802978515625
    9. ' ' → logprob: -14.04302978515625
    10. ''' → logprob: -14.16802978515625

Token 228: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.020419612526893616
    2. 'elif' → logprob: -4.395419597625732
    3. '
' → logprob: -5.020419597625732
    4. ' elif' → logprob: -7.395419597625732
    5. 'else' → logprob: -8.52042007446289
    6. ' else' → logprob: -9.14542007446289
    7. '<|end|>' → logprob: -9.64542007446289
    8. ')' → logprob: -9.77042007446289
    9. '\n' → logprob: -10.14542007446289
    10. '   ' → logprob: -10.27042007446289

Token 229: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016633175313472748
    2. 'elif' → logprob: -5.016633033752441
    3. '
' → logprob: -5.141633033752441
    4. 'else' → logprob: -5.891633033752441
    5. ' else' → logprob: -7.141633033752441
    6. ' elif' → logprob: -8.766633033752441
    7. ')
' → logprob: -9.016633033752441
    8. ')' → logprob: -9.141633033752441
    9. '        
' → logprob: -10.891633033752441
    10. '   ' → logprob: -11.516633033752441

Token 230: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.19035781919956207
    2. ' elif' → logprob: -1.9403578042984009
    3. '       ' → logprob: -3.5653579235076904
    4. 'else' → logprob: -7.065357685089111
    5. ' else' → logprob: -7.565357685089111
    6. 'el' → logprob: -11.06535816192627
    7. 'elseif' → logprob: -13.06535816192627
    8. '   ' → logprob: -13.44035816192627
    9. '	elif' → logprob: -13.69035816192627
    10. 'els' → logprob: -14.19035816192627

Token 231: ' S' (ID: 336)
  Prédit: ' S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' S' → logprob: -0.033654000610113144
    2. 'S' → logprob: -3.408653974533081
    3. ' ' → logprob: -11.78365421295166
    4. ' ' → logprob: -15.15865421295166
    5. '    ' → logprob: -15.78365421295166
    6. 's' → logprob: -15.78365421295166
    7. ' (' → logprob: -17.158653259277344
    8. ' s' → logprob: -17.408653259277344
    9. '   ' → logprob: -17.408653259277344
    10. '(S' → logprob: -17.908653259277344

Token 232: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.03805273771286011
    2. '==' → logprob: -3.288052797317505
    3. ' ' → logprob: -11.663052558898926
    4. ' =' → logprob: -13.788052558898926
    5. '=' → logprob: -14.038052558898926
    6. ' ' → logprob: -14.663052558898926
    7. ' ==
' → logprob: -15.913052558898926
    8. ' ===' → logprob: -16.288053512573242
    9. '==
' → logprob: -16.788053512573242
    10. ')==' → logprob: -16.913053512573242

Token 233: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.2811521589756012
    2. ' ' → logprob: -1.4061521291732788
    3. '   ' → logprob: -13.78115177154541
    4. '  ' → logprob: -15.03115177154541
    5. '    ' → logprob: -15.21865177154541
    6. '۲' → logprob: -16.906152725219727
    7. '1' → logprob: -17.093652725219727
    8. '
' → logprob: -17.281152725219727
    9. '     ' → logprob: -17.531152725219727
    10. '```' → logprob: -17.718652725219727

Token 234: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0002036595979006961
    2. ' ' → logprob: -8.500204086303711
    3. '   ' → logprob: -16.87520408630371
    4. '  ' → logprob: -17.31270408630371
    5. '1' → logprob: -18.00020408630371
    6. '```' → logprob: -18.56270408630371
    7. '۲' → logprob: -18.62520408630371
    8. '
' → logprob: -18.68770408630371
    9. '２' → logprob: -19.37520408630371
    10. '    ' → logprob: -19.43770408630371

Token 235: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.024971039965748787
    2. '           ' → logprob: -4.399971008300781
    3. ':
' → logprob: -4.399971008300781
    4. '       ' → logprob: -9.399971008300781
    5. '          ' → logprob: -12.274971008300781
    6. ' :' → logprob: -12.274971008300781
    7. '        ' → logprob: -13.024971008300781
    8. '.append' → logprob: -13.149971008300781
    9. '=' → logprob: -13.399971008300781
    10. '   ' → logprob: -13.524971008300781

Token 236: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0006911090458743274
    2. ' ans' → logprob: -7.500690937042236
    3. 'ans' → logprob: -9.000691413879395
    4. '          ' → logprob: -12.000691413879395
    5. '(ans' → logprob: -12.625691413879395
    6. '         ' → logprob: -13.750691413879395
    7. '               ' → logprob: -14.000691413879395
    8. ':' → logprob: -14.250691413879395
    9. '       ' → logprob: -14.250691413879395
    10. '	ans' → logprob: -14.375691413879395

Token 237: ' ans' (ID: 3345)
  Prédit: ' ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.47496065497398376
    2. 'ans' (adapté à ' ans') → logprob: -0.9749606847763062
    3. '           ' → logprob: -7.099960803985596
    4. '(ans' → logprob: -10.724960327148438
    5. '3' → logprob: -11.224960327148438
    6. '	ans' → logprob: -11.474960327148438
    7. '       ' → logprob: -12.224960327148438
    8. '_ans' → logprob: -13.599960327148438
    9. ' ' → logprob: -13.974960327148438
    10. '   ' → logprob: -13.974960327148438

Token 238: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -2.176947600673884e-05
    2. '.' → logprob: -10.750021934509277
    3. 'append' → logprob: -15.875021934509277
    4. '.app' → logprob: -16.62502098083496
    5. '.extend' → logprob: -18.25002098083496
    6. ' .' → logprob: -18.25002098083496
    7. '.add' → logprob: -19.00002098083496
    8. '.Append' → logprob: -19.87502098083496
    9. ').' → logprob: -20.00002098083496
    10. '	append' → logprob: -20.12502098083496

Token 239: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4743444621562958
    2. '3' → logprob: -0.9743444919586182
    3. ' ' → logprob: -8.599344253540039
    4. ' (' → logprob: -10.099344253540039
    5. '(
' → logprob: -10.224344253540039
    6. '   ' → logprob: -12.724344253540039
    7. '       ' → logprob: -14.099344253540039
    8. '           ' → logprob: -14.599344253540039
    9. '    ' → logprob: -14.599344253540039
    10. '        ' → logprob: -15.224344253540039

Token 240: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -8.061054359131958e-06
    2. ' ' → logprob: -11.750007629394531
    3. '   ' → logprob: -16.62500762939453
    4. '           ' → logprob: -18.12500762939453
    5. '       ' → logprob: -18.87500762939453
    6. '               ' → logprob: -20.00000762939453
    7. '۳' → logprob: -20.00000762939453
    8. '    ' → logprob: -20.62500762939453
    9. ')' → logprob: -20.87500762939453
    10. '                   ' → logprob: -20.93750762939453

Token 241: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00021271906734909862
    2. ')
' → logprob: -8.625212669372559
    3. '       ' → logprob: -10.875212669372559
    4. '   ' → logprob: -11.875212669372559
    5. ' )' → logprob: -11.875212669372559
    6. ')
' → logprob: -16.500213623046875
    7. ')

' → logprob: -17.250213623046875
    8. '           ' → logprob: -17.375213623046875
    9. ' )
' → logprob: -17.500213623046875
    10. ' ' → logprob: -17.625213623046875

Token 242: '  ' (ID: 256)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0015823511639609933
    2. ' else' → logprob: -6.751582145690918
    3. 'else' → logprob: -8.126582145690918
    4. '<|end|>' → logprob: -10.126582145690918
    5. '   ' → logprob: -10.376582145690918
    6. ')' → logprob: -11.001582145690918
    7. '           ' → logprob: -12.001582145690918
    8. '      ' → logprob: -12.376582145690918
    9. ' )' → logprob: -12.876582145690918
    10. ' ' → logprob: -13.001582145690918

Token 243: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00575422216206789
    2. ' else' → logprob: -5.505753993988037
    3. 'else' → logprob: -6.505753993988037
    4. ')' → logprob: -9.130754470825195
    5. '   ' → logprob: -10.380754470825195
    6. ' )' → logprob: -11.380754470825195
    7. '<|end|>' → logprob: -11.630754470825195
    8. '      ' → logprob: -12.005754470825195
    9. ' ' → logprob: -12.255754470825195
    10. '  ' → logprob: -13.130754470825195

Token 244: ' Si' (ID: 7832)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5939387083053589
    2. 'else' → logprob: -0.9689387083053589
    3. ' else' → logprob: -2.7189388275146484
    4. 'elif' → logprob: -6.593938827514648
    5. '           ' → logprob: -7.843938827514648
    6. ' ans' → logprob: -8.593938827514648
    7. ')' → logprob: -8.968938827514648
    8. ' elif' → logprob: -8.968938827514648
    9. 'ans' → logprob: -9.343938827514648
    10. '   ' → logprob: -10.343938827514648

Token 245: ' S' (ID: 336)
  Prédit: ' S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' S' → logprob: -0.04302990809082985
    2. 'S' → logprob: -3.168030023574829
    3. ' ' → logprob: -10.66802978515625
    4. ' ' → logprob: -12.29302978515625
    5. '    ' → logprob: -14.54302978515625
    6. '(S' → logprob: -14.79302978515625
    7. 's' → logprob: -14.79302978515625
    8. '   ' → logprob: -15.16802978515625
    9. '  ' → logprob: -15.29302978515625
    10. ' (' → logprob: -15.66802978515625

Token 246: '=' (ID: 28)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6931567788124084
    2. ' ==' → logprob: -0.6931567788124084
    3. '=' → logprob: -11.943157196044922
    4. ')' → logprob: -14.068157196044922
    5. ' ' → logprob: -14.318157196044922
    6. ' ' → logprob: -15.068157196044922
    7. ' =' → logprob: -15.443157196044922
    8. '==-' → logprob: -15.443157196044922
    9. '===' → logprob: -15.568157196044922
    10. ')==' → logprob: -15.568157196044922

Token 247: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.5298983454704285
    2. ' ' → logprob: -1.5298984050750732
    3. '1' → logprob: -1.6548984050750732
    4. '3' → logprob: -5.654898166656494
    5. '  ' → logprob: -10.529898643493652
    6. ')' → logprob: -10.529898643493652
    7. 'S' → logprob: -11.029898643493652
    8. '=' → logprob: -11.154898643493652
    9. '   ' → logprob: -11.154898643493652
    10. '<|end|>' → logprob: -11.279898643493652

Token 248: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22951103746891022
    2. ')' → logprob: -1.604511022567749
    3. 'else' → logprob: -5.979511260986328
    4. '   ' → logprob: -6.979511260986328
    5. ' else' → logprob: -7.979511260986328
    6. '           ' → logprob: -9.604511260986328
    7. '<|end|>' → logprob: -9.604511260986328
    8. ' )' → logprob: -9.729511260986328
    9. 'elif' → logprob: -11.229511260986328
    10. '  ' → logprob: -11.479511260986328

Token 249: ' les' (ID: 1341)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.021226389333605766
    2. '           ' → logprob: -4.521226406097412
    3. 'ans' → logprob: -4.646226406097412
    4. '(ans' → logprob: -8.271225929260254
    5. '       ' → logprob: -8.646225929260254
    6. ' ' → logprob: -10.271225929260254
    7. '	ans' → logprob: -10.521225929260254
    8. '               ' → logprob: -11.771225929260254
    9. '   ' → logprob: -12.146225929260254
    10. '_ans' → logprob: -12.271225929260254

Token 250: ' suivants' (ID: 112219)
  Prédit: ' suivants'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' suivants' → logprob: -0.11785655468702316
    2. 'append' → logprob: -3.117856502532959
    3. 'su' → logprob: -3.117856502532959
    4. 's' → logprob: -5.117856502532959
    5. '.append' → logprob: -5.242856502532959
    6. 'ans' → logprob: -5.367856502532959
    7. ' suivant' → logprob: -5.867856502532959
    8. ' append' → logprob: -6.867856502532959
    9. 'following' → logprob: -6.992856502532959
    10. 'aj' → logprob: -7.117856502532959

Token 251: ' valent' (ID: 148217)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00018518301658332348
    2. 'append' → logprob: -9.375185012817383
    3. '           ' → logprob: -9.875185012817383
    4. ' append' → logprob: -11.000185012817383
    5. '.' → logprob: -11.250185012817383
    6. ' .' → logprob: -11.750185012817383
    7. 'val' → logprob: -12.500185012817383
    8. ' val' → logprob: -13.250185012817383
    9. '       ' → logprob: -13.500185012817383
    10. ' vaut' → logprob: -13.625185012817383

Token 252: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.042223189026117325
    2. '2' → logprob: -3.7922232151031494
    3. ' )' → logprob: -4.79222297668457
    4. ')' → logprob: -5.41722297668457
    5. '3' → logprob: -5.54222297668457
    6. ' (' → logprob: -7.29222297668457
    7. '(' → logprob: -7.41722297668457
    8. '    ' → logprob: -8.04222297668457
    9. '1' → logprob: -9.16722297668457
    10. ' S' → logprob: -9.16722297668457

Token 253: '3' (ID: 18)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.644778311252594
    2. 'S' → logprob: -0.769778311252594
    3. '2' → logprob: -4.894778251647949
    4. '3' → logprob: -6.394778251647949
    5. ' S' → logprob: -6.769778251647949
    6. ' ' → logprob: -6.894778251647949
    7. '4' → logprob: -7.894778251647949
    8. '(S' → logprob: -8.89477825164795
    9. '   ' → logprob: -9.26977825164795
    10. '(' → logprob: -9.51977825164795

Token 254: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01693280041217804
    2. 'else' → logprob: -4.141932964324951
    3. ' else' → logprob: -7.016932964324951
    4. '	else' → logprob: -14.141932487487793
    5. '	' → logprob: -15.641932487487793
    6. '   ' → logprob: -16.01693344116211
    7. '```' → logprob: -16.26693344116211
    8. '<|end|>' → logprob: -16.26693344116211
    9. '      ' → logprob: -16.39193344116211
    10. '_else' → logprob: -16.39193344116211

Token 255: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.022684169933199883
    2. 'else' → logprob: -3.897684097290039
    3. ' else' → logprob: -6.147684097290039
    4. '   ' → logprob: -14.397684097290039
    5. '	else' → logprob: -14.772684097290039
    6. '```' → logprob: -15.647684097290039
    7. '	' → logprob: -15.772684097290039
    8. '_else' → logprob: -16.64768409729004
    9. '      ' → logprob: -16.77268409729004
    10. '           ' → logprob: -17.52268409729004

Token 256: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.3589414954185486
    2. '       ' → logprob: -1.3589415550231934
    3. ' else' → logprob: -3.1089415550231934
    4. '	else' → logprob: -13.233941078186035
    5. '   ' → logprob: -13.733941078186035
    6. '```' → logprob: -15.108941078186035
    7. '_else' → logprob: -15.233941078186035
    8. '      ' → logprob: -15.983941078186035
    9. 'elif' → logprob: -16.48394203186035
    10. '           ' → logprob: -17.10894203186035

Token 257: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5858243703842163
    2. '           ' → logprob: -0.9608243703842163
    3. ':' → logprob: -2.835824489593506
    4. ' ans' → logprob: -6.835824489593506
    5. '       ' → logprob: -8.085824012756348
    6. 'ans' → logprob: -8.460824012756348
    7. ' :
' → logprob: -8.585824012756348
    8. '(ans' → logprob: -9.085824012756348
    9. '          ' → logprob: -9.960824012756348
    10. '   ' → logprob: -10.335824012756348

Token 258: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.26781165599823
    2. ' ans' → logprob: -1.64281165599823
    3. 'ans' → logprob: -3.3928117752075195
    4. '       ' → logprob: -4.8928117752075195
    5. '   ' → logprob: -8.76781177520752
    6. '	ans' → logprob: -9.14281177520752
    7. '(ans' → logprob: -9.76781177520752
    8. '          ' → logprob: -10.51781177520752
    9. '               ' → logprob: -11.01781177520752
    10. '         ' → logprob: -11.51781177520752

Token 259: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.0040818434208631516
    2. ' ans' → logprob: -5.504081726074219
    3. '           ' → logprob: -13.754081726074219
    4. '   ' → logprob: -14.129081726074219
    5. '	ans' → logprob: -14.129081726074219
    6. '       ' → logprob: -14.379081726074219
    7. '(ans' → logprob: -15.129081726074219
    8. ' ' → logprob: -17.75408172607422
    9. '    ' → logprob: -18.12908172607422
    10. '_ans' → logprob: -18.12908172607422

Token 260: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -5.5577775128767826e-06
    2. '.' → logprob: -12.250005722045898
    3. 'append' → logprob: -14.750005722045898
    4. '.extend' → logprob: -15.500005722045898
    5. '.app' → logprob: -16.6250057220459
    6. ' .' → logprob: -17.0000057220459
    7. ').' → logprob: -17.2500057220459
    8. '	append' → logprob: -19.1250057220459
    9. '.ap' → logprob: -19.2500057220459
    10. '   ' → logprob: -19.2500057220459

Token 261: '(S' (ID: 6181)
  Prédit: '(S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -0.004096327815204859
    2. '(' → logprob: -5.504096508026123
    3. 'S' → logprob: -11.504096031188965
    4. ' (' → logprob: -12.004096031188965
    5. ' S' → logprob: -14.254096031188965
    6. '(
' → logprob: -14.629096031188965
    7. '(s' → logprob: -14.754096031188965
    8. '((' → logprob: -16.50409698486328
    9. 's' → logprob: -17.87909698486328
    10. '('' → logprob: -17.87909698486328

Token 262: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.38688504695892334
    2. ' -' → logprob: -1.1368850469589233
    3. ')' → logprob: -11.386884689331055
    4. ' ' → logprob: -13.761884689331055
    5. '   ' → logprob: -13.886884689331055
    6. ')-' → logprob: -16.011884689331055
    7. '-)' → logprob: -16.011884689331055
    8. ' ' → logprob: -16.136884689331055
    9. ' )' → logprob: -16.511884689331055
    10. '1' → logprob: -16.886884689331055

Token 263: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001584850688232109
    2. ' ' → logprob: -8.750158309936523
    3. '<|end|>' → logprob: -17.875158309936523
    4. '   ' → logprob: -19.000158309936523
    5. '  ' → logprob: -20.250158309936523
    6. '۱' → logprob: -21.000158309936523
    7. '```' → logprob: -21.125158309936523
    8. '１' → logprob: -21.125158309936523
    9. ' ' → logprob: -21.375158309936523
    10. ')' → logprob: -21.500158309936523

Token 264: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.375
    3. '<|end|>' → logprob: -18.125
    4. '   ' → logprob: -19.125
    5. '```' → logprob: -20.25
    6. '
' → logprob: -20.25
    7. '１' → logprob: -20.625
    8. '۱' → logprob: -20.75
    9. '  ' → logprob: -21.0
    10. '১' → logprob: -21.0

Token 265: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.9040898880339228e-05
    2. ' )' → logprob: -11.125028610229492
    3. ')
' → logprob: -11.250028610229492
    4. '       ' → logprob: -14.375028610229492
    5. '   ' → logprob: -15.000028610229492
    6. '))' → logprob: -15.250028610229492
    7. ')}' → logprob: -17.500028610229492
    8. ')`' → logprob: -18.000028610229492
    9. ')return' → logprob: -18.750028610229492
    10. ')

' → logprob: -18.750028610229492

Token 266: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3217843770980835
    2. '   ' → logprob: -1.3217843770980835
    3. ' return' → logprob: -5.321784496307373
    4. '    
' → logprob: -6.321784496307373
    5. 'return' → logprob: -6.446784496307373
    6. '  
' → logprob: -9.446784019470215
    7. ' 
' → logprob: -9.946784019470215
    8. ')
' → logprob: -10.446784019470215
    9. '	return' → logprob: -11.071784019470215
    10. '   
' → logprob: -11.446784019470215

Token 267: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10297668725252151
    2. ')
' → logprob: -2.7279767990112305
    3. '   ' → logprob: -3.6029767990112305
    4. 'return' → logprob: -5.9779767990112305
    5. ')' → logprob: -6.2279767990112305
    6. ' return' → logprob: -7.8529767990112305
    7. '    
' → logprob: -8.97797679901123
    8. '  
' → logprob: -9.35297679901123
    9. ' 
' → logprob: -10.22797679901123
    10. ')return' → logprob: -10.47797679901123

Token 268: ' Sinon' (ID: 154924)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 269: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5848187208175659
    2. ' return' → logprob: -1.459818720817566
    3. 'return' → logprob: -2.0848188400268555
    4. '
' → logprob: -3.0848188400268555
    5. ')
' → logprob: -3.4598188400268555
    6. ')' → logprob: -4.9598188400268555
    7. ')return' → logprob: -7.4598188400268555
    8. '    
' → logprob: -7.4598188400268555
    9. ':return' → logprob: -8.834818840026855
    10. '<|end|>' → logprob: -8.959818840026855

Token 270: ' les' (ID: 1341)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.01862313225865364
    2. 'ans' → logprob: -4.018623352050781
    3. '(ans' → logprob: -8.518623352050781
    4. '           ' → logprob: -9.143623352050781
    5. '	ans' → logprob: -10.143623352050781
    6. '2' → logprob: -10.143623352050781
    7. ' ' → logprob: -11.268623352050781
    8. ')' → logprob: -11.393623352050781
    9. '1' → logprob: -11.768623352050781
    10. '       ' → logprob: -11.893623352050781

Token 271: ' suivants' (ID: 112219)
  Prédit: ' suivants'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' suivants' → logprob: -0.9429967999458313
    2. 'ans' → logprob: -1.3179967403411865
    3. 'su' → logprob: -1.8179967403411865
    4. 's' → logprob: -3.0679967403411865
    5. ')' → logprob: -3.1929967403411865
    6. ' ans' → logprob: -3.5679967403411865
    7. ' suivant' → logprob: -3.9429967403411865
    8. 'following' → logprob: -4.192996978759766
    9. ' following' → logprob: -6.192996978759766
    10. ')
' → logprob: -6.317996978759766

Token 272: ' valent' (ID: 148217)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.5929504632949829
    2. ')' → logprob: -0.8429504632949829
    3. ' )' → logprob: -4.467950344085693
    4. 'append' → logprob: -5.592950344085693
    5. ' .' → logprob: -8.342950820922852
    6. ' append' → logprob: -8.467950820922852
    7. ')
' → logprob: -8.592950820922852
    8. '.' → logprob: -8.592950820922852
    9. '           ' → logprob: -8.842950820922852
    10. '   ' → logprob: -9.217950820922852

Token 273: ' S' (ID: 336)
  Prédit: ' S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' S' → logprob: -0.06941363960504532
    2. 'S' → logprob: -3.069413661956787
    3. ' (' → logprob: -4.944413661956787
    4. ' ' → logprob: -5.194413661956787
    5. '(S' → logprob: -5.319413661956787
    6. '1' → logprob: -6.444413661956787
    7. '(' → logprob: -7.819413661956787
    8. ' ans' → logprob: -7.944413661956787
    9. ' )' → logprob: -8.694413185119629
    10. 's' → logprob: -8.819413185119629

Token 274: '-' (ID: 12)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.038046542555093765
    2. '-' → logprob: -3.2880465984344482
    3. ')' → logprob: -13.288046836853027
    4. '<|end|>' → logprob: -13.913046836853027
    5. '   ' → logprob: -14.163046836853027
    6. ' -
' → logprob: -14.288046836853027
    7. '           ' → logprob: -14.663046836853027
    8. ' ' → logprob: -15.288046836853027
    9. ' )' → logprob: -16.16304588317871
    10. '       ' → logprob: -16.28804588317871

Token 275: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00029613598599098623
    2. ' ' → logprob: -8.125296592712402
    3. '   ' → logprob: -16.375295639038086
    4. ' ' → logprob: -18.375295639038086
    5. '  ' → logprob: -18.625295639038086
    6. '<|end|>' → logprob: -18.750295639038086
    7. '```' → logprob: -18.875295639038086
    8. '    ' → logprob: -19.250295639038086
    9. '           ' → logprob: -20.500295639038086
    10. '
' → logprob: -20.625295639038086

Token 276: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5681363344192505
    2. '   ' → logprob: -1.3181363344192505
    3. 'return' → logprob: -2.068136215209961
    4. ' return' → logprob: -3.318136215209961
    5. '    
' → logprob: -5.818136215209961
    6. '  
' → logprob: -10.068136215209961
    7. ' 
' → logprob: -10.318136215209961
    8. '   
' → logprob: -10.693136215209961
    9. '
' → logprob: -10.943136215209961
    10. '	return' → logprob: -10.943136215209961

Token 277: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5125946998596191
    2. 'return' → logprob: -1.5125946998596191
    3. ' return' → logprob: -1.7625946998596191
    4. '
' → logprob: -4.887594699859619
    5. '    
' → logprob: -6.512594699859619
    6. '  
' → logprob: -10.387594223022461
    7. '	return' → logprob: -10.387594223022461
    8. ' 
' → logprob: -10.762594223022461
    9. '   
' → logprob: -11.887594223022461
    10. '```' → logprob: -12.387594223022461

Token 278: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.16059371829032898
    2. '   ' → logprob: -2.1605937480926514
    3. ' return' → logprob: -3.4105937480926514
    4. '
' → logprob: -9.78559398651123
    5. '    
' → logprob: -10.78559398651123
    6. '	return' → logprob: -12.28559398651123
    7. 'ret' → logprob: -14.53559398651123
    8. '  
' → logprob: -14.66059398651123
    9. ' 
' → logprob: -15.16059398651123
    10. ')return' → logprob: -15.28559398651123

Token 279: ' Transformer' (ID: 113133)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0019457722082734108
    2. ' return' → logprob: -6.251945972442627
    3. '   ' → logprob: -11.001945495605469
    4. 'ret' → logprob: -15.126945495605469
    5. '
' → logprob: -16.62694549560547
    6. 'eturn' → logprob: -17.25194549560547
    7. 'Return' → logprob: -17.50194549560547
    8. 'result' → logprob: -17.62694549560547
    9. '```' → logprob: -17.87694549560547
    10. '#' → logprob: -18.12694549560547

Token 280: ' la' (ID: 557)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.6275057196617126
    2. '"' → logprob: -1.5025057792663574
    3. ' return' → logprob: -1.8775057792663574
    4. ''' → logprob: -2.5025057792663574
    5. ' '' → logprob: -5.252505779266357
    6. ' "' → logprob: -6.752505779266357
    7. ' ans' → logprob: -6.877505779266357
    8. 'ans' → logprob: -7.877505779266357
    9. '(ans' → logprob: -7.877505779266357
    10. ' ' → logprob: -8.5025053024292

Token 281: ' liste' (ID: 31719)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.084888756275177
    2. ''' → logprob: -2.5848886966705322
    3. ' "' → logprob: -5.584888935089111
    4. ' '' → logprob: -6.334888935089111
    5. 'return' → logprob: -8.084888458251953
    6. 'str' → logprob: -9.709888458251953
    7. ' return' → logprob: -10.459888458251953
    8. ''s' → logprob: -10.709888458251953
    9. '   ' → logprob: -11.459888458251953
    10. 'join' → logprob: -11.834888458251953

Token 282: ' d' (ID: 272)
  Prédit: ' en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.3344234824180603
    2. 'ans' → logprob: -2.209423542022705
    3. ' ans' → logprob: -2.459423542022705
    4. 'en' → logprob: -3.084423542022705
    5. '(ans' → logprob: -3.709423542022705
    6. ' into' → logprob: -4.584423542022705
    7. '(' → logprob: -6.709423542022705
    8. '"' → logprob: -6.834423542022705
    9. 'into' → logprob: -6.959423542022705
    10. '   ' → logprob: -7.084423542022705

Token 283: ''ent' (ID: 53422)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.12230637669563293
    2. ' ans' → logprob: -3.2473063468933105
    3. '(ans' → logprob: -3.7473063468933105
    4. 'es' → logprob: -3.8723063468933105
    5. ''' → logprob: -3.9973063468933105
    6. 'e' → logprob: -5.3723063468933105
    7. ' '' → logprob: -6.3723063468933105
    8. 'str' → logprob: -6.4973063468933105
    9. ''espace' → logprob: -6.9973063468933105
    10. '"' → logprob: -7.1223063468933105

Token 284: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.08574473112821579
    2. 'ières' → logprob: -2.585744619369507
    3. 'ier' → logprob: -6.335744857788086
    4. 'er' → logprob: -6.585744857788086
    5. 'ière' → logprob: -6.960744857788086
    6. '   ' → logprob: -7.335744857788086
    7. 'ers' → logprob: -7.585744857788086
    8. ''' → logprob: -8.335744857788086
    9. 'ieres' → logprob: -8.585744857788086
    10. '"' → logprob: -8.835744857788086

Token 285: ' en' (ID: 469)
  Prédit: ' en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.16875210404396057
    2. ' into' → logprob: -2.9187521934509277
    3. 'en' → logprob: -3.0437521934509277
    4. ' ans' → logprob: -3.4187521934509277
    5. 'ans' → logprob: -4.418752193450928
    6. ' in' → logprob: -5.918752193450928
    7. 'into' → logprob: -6.293752193450928
    8. '(ans' → logprob: -6.293752193450928
    9. 'return' → logprob: -7.168752193450928
    10. '   ' → logprob: -7.668752193450928

Token 286: ' chaîne' (ID: 89288)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.689032256603241
    2. '"' → logprob: -1.0640323162078857
    3. ' '' → logprob: -1.9390323162078857
    4. ' "' → logprob: -4.814032077789307
    5. ''une' → logprob: -7.814032077789307
    6. ''un' → logprob: -8.064032554626465
    7. ''a' → logprob: -9.564032554626465
    8. 'str' → logprob: -10.064032554626465
    9. ' ' → logprob: -10.939032554626465
    10. ''s' → logprob: -11.314032554626465

Token 287: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8635127544403076
    2. 'return' → logprob: -1.1135127544403076
    3. ' return' → logprob: -1.9885127544403076
    4. '"' → logprob: -2.4885127544403076
    5. ''' → logprob: -3.7385127544403076
    6. '('' → logprob: -6.113512992858887
    7. '("' → logprob: -6.988512992858887
    8. ' '' → logprob: -7.613512992858887
    9. ' "' → logprob: -7.988512992858887
    10. ' de' → logprob: -8.113512992858887

Token 288: ' caractères' (ID: 183106)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.03841301053762436
    2. ' caractères' → logprob: -3.2884130477905273
    3. ''' → logprob: -8.538413047790527
    4. 'str' → logprob: -9.913413047790527
    5. 'chars' → logprob: -10.663413047790527
    6. ' car' → logprob: -10.788413047790527
    7. ' caracteres' → logprob: -11.288413047790527
    8. ' caract' → logprob: -11.288413047790527
    9. 'texte' → logprob: -11.413413047790527
    10. ' chaînes' → logprob: -11.663413047790527

Token 289: ',' (ID: 11)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.3206113874912262
    2. ' return' → logprob: -1.3206113576889038
    3. '   ' → logprob: -4.945611476898193
    4. '"' → logprob: -8.945611000061035
    5. ''' → logprob: -9.820611000061035
    6. ' ans' → logprob: -11.320611000061035
    7. ' '' → logprob: -12.945611000061035
    8. '
' → logprob: -13.070611000061035
    9. 'ans' → logprob: -13.445611000061035
    10. ',' → logprob: -14.070611000061035

Token 290: ' sépar' (ID: 97160)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.7344891428947449
    2. 'return' → logprob: -1.4844892024993896
    3. '"' → logprob: -2.1094892024993896
    4. ' '' → logprob: -2.3594892024993896
    5. ''' → logprob: -2.7344892024993896
    6. ' "' → logprob: -4.6094889640808105
    7. '   ' → logprob: -6.3594889640808105
    8. ' ' → logprob: -7.4844889640808105
    9. ' ans' → logprob: -8.734489440917969
    10. ' join' → logprob: -8.859489440917969

Token 291: 'és' (ID: 1756)
  Prédit: 'ée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.039141084998846054
    2. ' par' → logprob: -3.6641411781311035
    3. 'ées' → logprob: -5.0391411781311035
    4. 'é' → logprob: -5.4141411781311035
    5. 'par' → logprob: -6.6641411781311035
    6. 'és' → logprob: -8.789140701293945
    7. 'e' → logprob: -9.289140701293945
    8. '   ' → logprob: -9.414140701293945
    9. 'er' → logprob: -10.164140701293945
    10. 'join' → logprob: -10.164140701293945

Token 292: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.04305193945765495
    2. 'par' → logprob: -3.1680519580841064
    3. ''' → logprob: -10.918051719665527
    4. ' by' → logprob: -11.543051719665527
    5. '"' → logprob: -11.793051719665527
    6. ' ' → logprob: -12.543051719665527
    7. '_par' → logprob: -12.668051719665527
    8. 'by' → logprob: -13.293051719665527
    9. '('' → logprob: -13.418051719665527
    10. '(par' → logprob: -13.543051719665527

Token 293: ' des' (ID: 731)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.6152901649475098
    2. ' des' → logprob: -1.9902901649475098
    3. ''un' → logprob: -2.2402901649475098
    4. ''espace' → logprob: -2.4902901649475098
    5. ''esp' → logprob: -3.2402901649475098
    6. 'des' → logprob: -3.6152901649475098
    7. ' espaces' → logprob: -3.8652901649475098
    8. '"' → logprob: -3.8652901649475098
    9. ' '' → logprob: -4.36529016494751
    10. ' un' → logprob: -5.61529016494751

Token 294: ' espaces' (ID: 98361)
  Prédit: ' espaces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' espaces' → logprob: -0.8501730561256409
    2. ''esp' → logprob: -1.350172996520996
    3. ''espace' → logprob: -1.725172996520996
    4. ''' → logprob: -2.975172996520996
    5. '"' → logprob: -3.600172996520996
    6. 'esp' → logprob: -4.225172996520996
    7. 'spaces' → logprob: -4.350172996520996
    8. 'space' → logprob: -4.475172996520996
    9. ' '' → logprob: -5.350172996520996
    10. ' espace' → logprob: -5.350172996520996

Token 295: '
' (ID: 198)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.25266575813293457
    2. ' return' → logprob: -1.5026657581329346
    3. '"' → logprob: -7.7526655197143555
    4. ''' → logprob: -8.377665519714355
    5. '   ' → logprob: -9.502665519714355
    6. ' '' → logprob: -13.877665519714355
    7. ' ans' → logprob: -14.627665519714355
    8. ' "' → logprob: -15.002665519714355
    9. 'ans' → logprob: -16.002666473388672
    10. '	return' → logprob: -16.377666473388672

Token 296: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.16237233579158783
    2. ' return' → logprob: -1.912372350692749
    3. '   ' → logprob: -6.16237211227417
    4. '
' → logprob: -10.912372589111328
    5. '"' → logprob: -11.162372589111328
    6. ''' → logprob: -12.787372589111328
    7. ' 
' → logprob: -13.537372589111328
    8. '    
' → logprob: -13.662372589111328
    9. '	return' → logprob: -14.787372589111328
    10. 'eturn' → logprob: -15.662372589111328

Token 297: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.009394899010658264
    2. ' return' → logprob: -4.759395122528076
    3. ''' → logprob: -7.634395122528076
    4. '"' → logprob: -8.134394645690918
    5. '   ' → logprob: -12.884394645690918
    6. ' '' → logprob: -14.509394645690918
    7. ' "' → logprob: -16.134395599365234
    8. 'ans' → logprob: -17.509395599365234
    9. 'result' → logprob: -17.509395599365234
    10. ''re' → logprob: -17.884395599365234

Token 298: ' "' (ID: 392)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.20256955921649933
    2. '"' → logprob: -1.702569603919983
    3. ' '' → logprob: -7.077569484710693
    4. ' "' → logprob: -8.077569961547852
    5. ''s' → logprob: -14.452569961547852
    6. ''int' → logprob: -15.452569961547852
    7. ''a' → logprob: -16.57756996154785
    8. ''m' → logprob: -16.82756996154785
    9. ''ex' → logprob: -16.95256996154785
    10. ''en' → logprob: -17.20256996154785

Token 299: ' ".' (ID: 11730)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.33248019218444824
    2. ' ".' → logprob: -1.5824801921844482
    3. ''' → logprob: -2.5824801921844482
    4. '".' → logprob: -6.832480430603027
    5. ' "' → logprob: -7.457480430603027
    6. ' '.' → logprob: -9.957480430603027
    7. ''s' → logprob: -10.707480430603027
    8. 'str' → logprob: -10.957480430603027
    9. '.join' → logprob: -11.332480430603027
    10. 'join' → logprob: -11.332480430603027

Token 300: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -6.704273118884885e-07
    2. 'jo' → logprob: -15.625000953674316
    3. ' join' → logprob: -15.750000953674316
    4. '.join' → logprob: -16.0
    5. 'joint' → logprob: -16.875
    6. 'j' → logprob: -16.875
    7. '"' → logprob: -17.625
    8. '```' → logprob: -18.875
    9. 'joins' → logprob: -19.875
    10. '(join' → logprob: -20.25

Token 301: '(map' (ID: 16946)
  Prédit: '(str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.20172525942325592
    2. '(map' → logprob: -1.7017252445220947
    3. 'map' → logprob: -8.701725006103516
    4. 'str' → logprob: -8.951725006103516
    5. '[str' → logprob: -11.576725006103516
    6. '(' → logprob: -12.576725006103516
    7. '([' → logprob: -12.701725006103516
    8. '(list' → logprob: -16.201725006103516
    9. ' map' → logprob: -16.826725006103516
    10. ' str' → logprob: -18.326725006103516

Token 302: '(str' (ID: 7946)
  Prédit: '(str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.029781386256217957
    2. 'str' → logprob: -3.5297813415527344
    3. ' str' → logprob: -11.029781341552734
    4. '(int' → logprob: -11.404781341552734
    5. '=str' → logprob: -13.654781341552734
    6. '[str' → logprob: -13.779781341552734
    7. '(' → logprob: -14.154781341552734
    8. 'int' → logprob: -15.029781341552734
    9. '	str' → logprob: -15.904781341552734
    10. '(
' → logprob: -16.529781341552734

Token 303: ',' (ID: 11)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.002946320688351989
    2. ',' → logprob: -6.377946376800537
    3. 'ans' → logprob: -6.752946376800537
    4. ' ans' → logprob: -9.627945899963379
    5. ')' → logprob: -12.502945899963379
    6. '   ' → logprob: -12.877945899963379
    7. '	ans' → logprob: -13.377945899963379
    8. '(' → logprob: -14.752945899963379
    9. '),' → logprob: -14.877945899963379
    10. ' (' → logprob: -14.877945899963379

Token 304: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0001246348983841017
    2. ' ans' → logprob: -9.00012493133545
    3. '(ans' → logprob: -13.75012493133545
    4. '	ans' → logprob: -16.875123977661133
    5. '   ' → logprob: -18.000123977661133
    6. 'answer' → logprob: -20.125123977661133
    7. 'Ans' → logprob: -20.875123977661133
    8. '_ans' → logprob: -20.875123977661133
    9. 'ANS' → logprob: -22.125123977661133
    10. '       ' → logprob: -22.375123977661133

Token 305: '))


' (ID: 49252)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -2.963691804325208e-05
    2. ')' → logprob: -10.625029563903809
    3. ')))' → logprob: -12.375029563903809
    4. '))
' → logprob: -14.375029563903809
    5. ' ))' → logprob: -15.250029563903809
    6. '   ' → logprob: -16.875030517578125
    7. '()))' → logprob: -17.500030517578125
    8. ' ' → logprob: -17.750030517578125
    9. '[' → logprob: -18.375030517578125
    10. '));' → logprob: -19.125030517578125

Token 306: 'if' (ID: 366)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.23600570857524872
    2. '[' → logprob: -2.9860057830810547
    3. '
' → logprob: -2.9860057830810547
    4. 'print' → logprob: -3.8610057830810547
    5. 'generate' → logprob: -3.9860057830810547
    6. 'def' → logprob: -4.111005783081055
    7. '<|end|>' → logprob: -4.111005783081055
    8. 'N' → logprob: -4.361005783081055
    9. '(' → logprob: -4.861005783081055
    10. '\n' → logprob: -6.111005783081055

Token 307: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.005825109779834747
    2. '__' → logprob: -5.255825042724609
    3. '_' → logprob: -7.880825042724609
    4. ' _' → logprob: -8.88082504272461
    5. ' ' → logprob: -10.00582504272461
    6. '_name' → logprob: -11.13082504272461
    7. ' ' → logprob: -11.50582504272461
    8. ' ' → logprob: -13.88082504272461
    9. ' ___' → logprob: -14.13082504272461
    10. '___' → logprob: -15.00582504272461

Token 308: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.5843595266342163
    2. ' __' → logprob: -0.8343595266342163
    3. ' ==' → logprob: -5.209359645843506
    4. 'name' → logprob: -5.959359645843506
    5. '_' → logprob: -8.959359169006348
    6. '==' → logprob: -9.459359169006348
    7. '_name' → logprob: -9.709359169006348
    8. ' _' → logprob: -11.209359169006348
    9. ' =' → logprob: -11.334359169006348
    10. 'if' → logprob: -11.834359169006348

Token 309: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -2.816093228830141e-06
    2. '==' → logprob: -13.25000286102295
    3. '__
' → logprob: -14.37500286102295
    4. '__.__' → logprob: -15.87500286102295
    5. '___' → logprob: -16.500001907348633
    6. '____' → logprob: -16.875001907348633
    7. '_' → logprob: -17.125001907348633
    8. '__

' → logprob: -17.250001907348633
    9. '__":
' → logprob: -17.500001907348633
    10. '=="' → logprob: -17.500001907348633

Token 310: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0038487708661705256
    2. '==' → logprob: -6.128848552703857
    3. ' ==' → logprob: -6.628848552703857
    4. '=="' → logprob: -8.253849029541016
    5. '_' → logprob: -9.753849029541016
    6. '___' → logprob: -11.378849029541016
    7. '__.__' → logprob: -12.628849029541016
    8. ' __' → logprob: -12.753849029541016
    9. '=='' → logprob: -14.503849029541016
    10. '=' → logprob: -14.503849029541016

Token 311: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0024970639497041702
    2. ''' → logprob: -6.00249719619751
    3. ' "__' → logprob: -10.877496719360352
    4. ' "' → logprob: -13.127496719360352
    5. '__' → logprob: -15.377496719360352
    6. '"user' → logprob: -16.37749671936035
    7. '"name' → logprob: -16.75249671936035
    8. ' '__' → logprob: -17.37749671936035
    9. '"_' → logprob: -17.50249671936035
    10. '"log' → logprob: -17.75249671936035

Token 312: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -4.4849443838757e-06
    2. 'name' → logprob: -12.375004768371582
    3. ' main' → logprob: -16.125003814697266
    4. '_main' → logprob: -17.250003814697266
    5. 'ma' → logprob: -18.750003814697266
    6. '__' → logprob: -19.500003814697266
    7. 'm' → logprob: -19.625003814697266
    8. '	main' → logprob: -20.125003814697266
    9. '_MAIN' → logprob: -20.750003814697266
    10. '主' → logprob: -21.250003814697266

Token 313: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.07890763878822327
    2. '__' → logprob: -2.5789077281951904
    3. '__':
' → logprob: -10.95390796661377
    4. '__:' → logprob: -15.32890796661377
    5. '_' → logprob: -15.95390796661377
    6. '__["' → logprob: -17.203907012939453
    7. '__",' → logprob: -18.328907012939453
    8. '___' → logprob: -18.578907012939453
    9. '__
' → logprob: -18.828907012939453
    10. '__("' → logprob: -19.328907012939453

Token 314: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7152639627456665
    2. ':' → logprob: -0.8402639627456665
    3. ':
' → logprob: -3.465263843536377
    4. '<|end|>' → logprob: -3.840263843536377
    5. 'def' → logprob: -5.590263843536377
    6. '    
' → logprob: -5.590263843536377
    7. '<|end|>' → logprob: -5.715263843536377
    8. '():
' → logprob: -6.090263843536377
    9. '(n' → logprob: -6.090263843536377
    10. '' → logprob: -6.840263843536377

Token 315: ' #' (ID: 1069)
  Prédit: ' N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.696100115776062
    2. 'N' → logprob: -0.821100115776062
    3. ' import' → logprob: -3.5711002349853516
    4. 'import' → logprob: -3.9461002349853516
    5. 'n' → logprob: -4.696100234985352
    6. ' n' → logprob: -5.446100234985352
    7. '   ' → logprob: -7.446100234985352
    8. '#' (adapté à ' #') → logprob: -11.071100234985352
    9. '    
' → logprob: -12.321100234985352
    10. 't' → logprob: -12.321100234985352

Token 316: ' Lecture' (ID: 106534)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.46033167839050293
    2. ' N' → logprob: -1.335331678390503
    3. 'import' → logprob: -3.085331678390503
    4. ' import' → logprob: -3.335331678390503
    5. 'n' → logprob: -4.335331916809082
    6. ' n' → logprob: -4.585331916809082
    7. '#' → logprob: -7.835331916809082
    8. '   ' → logprob: -7.960331916809082
    9. ' test' → logprob: -9.085331916809082
    10. ' #' → logprob: -9.585331916809082

Token 317: ' et' (ID: 859)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.08228103816509247
    2. '   ' → logprob: -2.8322811126708984
    3. ' des' → logprob: -5.207281112670898
    4. ' =' → logprob: -5.707281112670898
    5. '(N' → logprob: -6.082281112670898
    6. '(' → logprob: -6.207281112670898
    7. 'import' → logprob: -6.207281112670898
    8. 's' → logprob: -7.582281112670898
    9. '<|end|>' → logprob: -7.832281112670898
    10. '_' → logprob: -7.957281112670898

Token 318: ' dé' (ID: 2393)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -1.3286657333374023
    2. ' traitement' → logprob: -1.9536657333374023
    3. ' execution' → logprob: -2.4536657333374023
    4. ' validation' → logprob: -2.5786657333374023
    5. ' conversion' → logprob: -2.7036657333374023
    6. ' sais' → logprob: -2.8286657333374023
    7. ' test' → logprob: -3.0786657333374023
    8. ' ex' → logprob: -3.4536657333374023
    9. 'ex' → logprob: -3.5786657333374023
    10. ' la' → logprob: -3.8286657333374023

Token 319: 'composition' (ID: 119135)
  Prédit: 'fin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fin' → logprob: -0.12122541666030884
    2. 'f' → logprob: -2.246225357055664
    3. 'but' → logprob: -5.996225357055664
    4. 'termination' → logprob: -5.996225357055664
    5. 'fi' → logprob: -6.121225357055664
    6. 'tection' → logprob: -7.746225357055664
    7. 'veloppement' → logprob: -8.621225357055664
    8. ' finition' → logprob: -8.871225357055664
    9. 'part' → logprob: -9.246225357055664
    10. 'claration' → logprob: -9.371225357055664

Token 320: ' des' (ID: 731)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.8998571634292603
    2. ' des' → logprob: -0.8998571634292603
    3. ' de' → logprob: -2.1498570442199707
    4. '   ' → logprob: -3.6498570442199707
    5. ' line' → logprob: -4.149857044219971
    6. 'de' → logprob: -4.899857044219971
    7. 'des' → logprob: -5.774857044219971
    8. ' ' → logprob: -5.899857044219971
    9. 'line' → logprob: -5.899857044219971
    10. 'input' → logprob: -6.024857044219971

Token 321: ' entr' (ID: 7072)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.3400544822216034
    2. 'input' → logprob: -1.3400545120239258
    3. ' inputs' → logprob: -4.465054512023926
    4. 'entrée' → logprob: -5.590054512023926
    5. 'inputs' → logprob: -5.715054512023926
    6. ' entr' → logprob: -5.840054512023926
    7. 'entr' → logprob: -6.465054512023926
    8. ' données' → logprob: -6.965054512023926
    9. ' lignes' → logprob: -7.590054512023926
    10. 'ent' → logprob: -7.840054512023926

Token 322: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.0036205046344548464
    2. 'ees' → logprob: -5.628620624542236
    3. 'ée' → logprob: -11.128620147705078
    4. 'es' → logprob: -13.128620147705078
    5. 'rees' → logprob: -14.003620147705078
    6. 'é' → logprob: -14.128620147705078
    7. 'és' → logprob: -14.753620147705078
    8. '�' → logprob: -15.628620147705078
    9. '   ' → logprob: -15.753620147705078
    10. 'e' → logprob: -15.753620147705078

Token 323: ' utilisateur' (ID: 115595)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6674463748931885
    2. '   ' → logprob: -1.4174463748931885
    3. ' n' → logprob: -1.9174463748931885
    4. ' N' → logprob: -3.4174463748931885
    5. ' line' → logprob: -3.9174463748931885
    6. 'N' → logprob: -4.417446136474609
    7. ' input' → logprob: -4.417446136474609
    8. 'input' → logprob: -4.792446136474609
    9. '    
' → logprob: -5.042446136474609
    10. 'line' → logprob: -6.167446136474609

Token 324: ' :' (ID: 712)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05490553379058838
    2. 'input' → logprob: -3.304905414581299
    3. 'n' → logprob: -5.804905414581299
    4. ':' → logprob: -6.054905414581299
    5. '    
' → logprob: -6.179905414581299
    6. 'line' → logprob: -6.679905414581299
    7. ' input' → logprob: -6.679905414581299
    8. 'user' → logprob: -6.679905414581299
    9. ' line' → logprob: -6.804905414581299
    10. 'import' → logprob: -7.179905414581299

Token 325: ' N' (ID: 478)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.6086977124214172
    2. ' line' → logprob: -1.1086976528167725
    3. ' N' → logprob: -2.8586976528167725
    4. ' input' → logprob: -3.6086976528167725
    5. '   ' → logprob: -3.9836976528167725
    6. 'n' → logprob: -4.233697891235352
    7. ' inputs' → logprob: -6.108697891235352
    8. 'line' → logprob: -6.483697891235352
    9. 'N' → logprob: -6.483697891235352
    10. ' data' → logprob: -7.483697891235352

Token 326: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00020783171930816025
    2. ' ,' → logprob: -9.125207901000977
    3. ',K' → logprob: -9.500207901000977
    4. ' =' → logprob: -11.750207901000977
    5. ',N' → logprob: -11.875207901000977
    6. '=' → logprob: -12.500207901000977
    7. ',input' → logprob: -13.375207901000977
    8. ',k' → logprob: -14.250207901000977
    9. ',S' → logprob: -14.375207901000977
    10. ',
' → logprob: -14.750207901000977

Token 327: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.5759420990943909
    2. ' K' → logprob: -0.8259420990943909
    3. ' ' → logprob: -13.075942039489746
    4. ',' → logprob: -15.075942039489746
    5. 'k' → logprob: -16.700942993164062
    6. 'S' → logprob: -16.700942993164062
    7. ' ,' → logprob: -16.825942993164062
    8. ',K' → logprob: -17.200942993164062
    9. 'space' → logprob: -17.325942993164062
    10. '  ' → logprob: -17.575942993164062

Token 328: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001248804503120482
    2. ' =' → logprob: -6.876248836517334
    3. '=' → logprob: -8.501248359680176
    4. ' ,' → logprob: -11.626248359680176
    5. '=input' → logprob: -13.376248359680176
    6. ',input' → logprob: -14.001248359680176
    7. '=int' → logprob: -15.126248359680176
    8. ',N' → logprob: -15.376248359680176
    9. 's' → logprob: -15.626248359680176
    10. ',s' → logprob: -16.251249313354492

Token 329: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.008780959993600845
    2. ' S' → logprob: -4.7587809562683105
    3. 'et' → logprob: -9.758781433105469
    4. ' and' → logprob: -10.008781433105469
    5. ' et' → logprob: -10.633781433105469
    6. 'and' → logprob: -10.758781433105469
    7. ' ' → logprob: -11.133781433105469
    8. ',' → logprob: -12.758781433105469
    9. ' 
' → logprob: -15.508781433105469
    10. 's' → logprob: -15.633781433105469

Token 330: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0032121767289936543
    2. '=' → logprob: -5.878211975097656
    3. '   ' → logprob: -7.878211975097656
    4. ',' → logprob: -11.378211975097656
    5. '=input' → logprob: -11.503211975097656
    6. ' =
' → logprob: -12.878211975097656
    7. 'input' → logprob: -12.878211975097656
    8. '=int' → logprob: -15.003211975097656
    9. '    
' → logprob: -15.378211975097656
    10. '    ' → logprob: -15.628211975097656

Token 331: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004559711553156376
    2. 'input' → logprob: -6.504559516906738
    3. '    
' → logprob: -6.754559516906738
    4. 'n' → logprob: -7.254559516906738
    5. ' N' → logprob: -7.754559516906738
    6. ' input' → logprob: -8.379559516906738
    7. 'N' → logprob: -8.379559516906738
    8. ' =' → logprob: -10.129559516906738
    9. ' line' → logprob: -10.629559516906738
    10. ',' → logprob: -10.879559516906738

Token 332: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' (adapté à ' N') → logprob: -0.06560592353343964
    2. ' N' → logprob: -2.940605878829956
    3. 'input' → logprob: -5.815606117248535
    4. 'line' → logprob: -5.940606117248535
    5. ' line' → logprob: -6.440606117248535
    6. 'inputs' → logprob: -6.565606117248535
    7. 'n' → logprob: -7.315606117248535
    8. '   ' → logprob: -7.690606117248535
    9. ' input' → logprob: -7.940606117248535
    10. ' inputs' → logprob: -8.190606117248535

Token 333: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.607391408877447e-05
    2. ',K' → logprob: -10.375036239624023
    3. ' ,' → logprob: -12.875036239624023
    4. ',N' → logprob: -14.000036239624023
    5. ',k' → logprob: -14.500036239624023
    6. '=' → logprob: -14.875036239624023
    7. ' =' → logprob: -16.250036239624023
    8. ',input' → logprob: -16.375036239624023
    9. ',user' → logprob: -16.500036239624023
    10. ',
' → logprob: -16.625036239624023

Token 334: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.28205958008766174
    2. ' K' → logprob: -1.4070595502853394
    3. ' ' → logprob: -7.282059669494629
    4. '=' → logprob: -9.157059669494629
    5. '  ' → logprob: -9.907059669494629
    6. ' =' → logprob: -10.157059669494629
    7. '<|end|>' → logprob: -11.282059669494629
    8. '    ' → logprob: -12.657059669494629
    9. ' 
' → logprob: -13.282059669494629
    10. ',' → logprob: -13.282059669494629

Token 335: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00036263695801608264
    2. '=' → logprob: -8.500362396240234
    3. ' =' → logprob: -8.875362396240234
    4. ' ,' → logprob: -11.000362396240234
    5. '<|end|>' → logprob: -13.750362396240234
    6. ',S' → logprob: -14.125362396240234
    7. ',K' → logprob: -15.750362396240234
    8. ',input' → logprob: -15.750362396240234
    9. ',s' → logprob: -15.875362396240234
    10. ',user' → logprob: -16.625362396240234

Token 336: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.10020915418863297
    2. ' S' → logprob: -2.3502092361450195
    3. ' ' → logprob: -13.22520923614502
    4. ' =' → logprob: -15.22520923614502
    5. '  ' → logprob: -15.72520923614502
    6. 's' → logprob: -16.225208282470703
    7. '<|end|>' → logprob: -16.225208282470703
    8. '=' → logprob: -16.850208282470703
    9. '=S' → logprob: -16.975208282470703
    10. '    ' → logprob: -18.850208282470703

Token 337: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3132679760456085
    2. '=' → logprob: -1.3132679462432861
    3. '=input' → logprob: -12.063267707824707
    4. ')' → logprob: -15.188267707824707
    5. ',' → logprob: -15.938267707824707
    6. '=int' → logprob: -16.438268661499023
    7. ' =
' → logprob: -17.938268661499023
    8. ' ' → logprob: -17.938268661499023
    9. '＝' → logprob: -17.938268661499023
    10. ')=' → logprob: -18.063268661499023

Token 338: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.20142777264118195
    2. 'map' → logprob: -1.7014278173446655
    3. '[' → logprob: -12.326427459716797
    4. ' ' → logprob: -12.826427459716797
    5. '	map' → logprob: -13.076427459716797
    6. 'm' → logprob: -13.326427459716797
    7. ' ' → logprob: -13.701427459716797
    8. '(map' → logprob: -14.201427459716797
    9. 'input' → logprob: -14.451427459716797
    10. ' [' → logprob: -15.326427459716797

Token 339: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00023441045777872205
    2. 'int' → logprob: -8.750234603881836
    3. '(' → logprob: -9.500234603881836
    4. '(
' → logprob: -14.750234603881836
    5. '<int' → logprob: -15.125234603881836
    6. ' int' → logprob: -15.625234603881836
    7. '(input' → logprob: -15.750234603881836
    8. '=int' → logprob: -16.500234603881836
    9. '[int' → logprob: -18.000234603881836
    10. '```' → logprob: -18.750234603881836

Token 340: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.25412294268608093
    2. 'input' → logprob: -1.5041229724884033
    3. '(' → logprob: -7.129122734069824
    4. ')' → logprob: -7.629122734069824
    5. ' input' → logprob: -7.754122734069824
    6. ',input' → logprob: -7.754122734069824
    7. '=input' → logprob: -10.879122734069824
    8. ',' → logprob: -11.754122734069824
    9. '   ' → logprob: -11.754122734069824
    10. ' (' → logprob: -13.004122734069824

Token 341: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.002475777640938759
    2. ' input' → logprob: -6.002475738525391
    3. '(input' → logprob: -17.37747573852539
    4. '   ' → logprob: -17.62747573852539
    5. '=input' → logprob: -18.87747573852539
    6. '<input' → logprob: -19.25247573852539
    7. '	input' → logprob: -19.25247573852539
    8. ')' → logprob: -19.37747573852539
    9. ',input' → logprob: -19.37747573852539
    10. ' ' → logprob: -19.62747573852539

Token 342: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -8.578184497309849e-05
    2. '()' → logprob: -9.375085830688477
    3. ' ().' → logprob: -14.250085830688477
    4. '()
' → logprob: -16.625085830688477
    5. '(' → logprob: -16.875085830688477
    6. '("").' → logprob: -18.125085830688477
    7. '('').' → logprob: -20.000085830688477
    8. '("' → logprob: -20.000085830688477
    9. '()

' → logprob: -20.125085830688477
    10. ' ()' → logprob: -20.250085830688477

Token 343: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.002476016292348504
    2. 'strip' → logprob: -6.002476215362549
    3. 'rstrip' → logprob: -15.50247573852539
    4. ' split' → logprob: -16.62747573852539
    5. '(split' → logprob: -17.00247573852539
    6. 'read' → logprob: -18.25247573852539
    7. 'spl' → logprob: -19.25247573852539
    8. '.split' → logprob: -19.37747573852539
    9. '_split' → logprob: -20.37747573852539
    10. '().' → logprob: -20.50247573852539

Token 344: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.010336745530366898
    2. '()))' → logprob: -4.760336875915527
    3. ')' → logprob: -7.135336875915527
    4. '()' → logprob: -7.135336875915527
    5. '))' → logprob: -9.385336875915527
    6. '(' → logprob: -10.135336875915527
    7. '('' → logprob: -13.635336875915527
    8. ' ())' → logprob: -13.885336875915527
    9. '())
' → logprob: -14.885336875915527
    10. '()))
' → logprob: -15.260336875915527

Token 345: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0018408215837553144
    2. '   ' → logprob: -6.501840591430664
    3. ' print' → logprob: -8.001840591430664
    4. 'result' → logprob: -13.501840591430664
    5. '    
' → logprob: -13.876840591430664
    6. '
' → logprob: -14.376840591430664
    7. 'sequence' → logprob: -15.501840591430664
    8. '	print' → logprob: -15.876840591430664
    9. '```' → logprob: -16.126840591430664
    10. '.print' → logprob: -16.751840591430664

Token 346: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0021092169918119907
    2. 'sequence' → logprob: -6.502109050750732
    3. 'result' → logprob: -7.502109050750732
    4. ' print' → logprob: -10.00210952758789
    5. ' sequence' → logprob: -11.87710952758789
    6. 'output' → logprob: -13.37710952758789
    7. 'seq' → logprob: -14.37710952758789
    8. '   ' → logprob: -15.00210952758789
    9. ' result' → logprob: -15.75210952758789
    10. 'res' → logprob: -17.75210952758789

Token 347: ' Gén' (ID: 71828)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00685567781329155
    2. 'result' → logprob: -5.756855487823486
    3. 'sequence' → logprob: -5.756855487823486
    4. ' print' → logprob: -7.756855487823486
    5. ' sequence' → logprob: -10.006855964660645
    6. 'seq' → logprob: -10.756855964660645
    7. 'output' → logprob: -11.756855964660645
    8. ' result' → logprob: -12.131855964660645
    9. 'res' → logprob: -13.631855964660645
    10. '#' → logprob: -14.506855964660645

Token 348: 'érer' (ID: 29097)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.3016110062599182
    2. 'érer' → logprob: -1.4266109466552734
    3. 'ère' → logprob: -4.676610946655273
    4. '   ' → logprob: -4.926610946655273
    5. 'print' → logprob: -6.676610946655273
    6. '
' → logprob: -7.676610946655273
    7. 'rate' → logprob: -7.801610946655273
    8. 'èr' → logprob: -8.301610946655273
    9. 'ér' → logprob: -8.426610946655273
    10. 'ération' → logprob: -8.551610946655273

Token 349: ' et' (ID: 859)
  Prédit: 'sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sequence' → logprob: -0.5631734728813171
    2. '_sequence' → logprob: -1.438173532485962
    3. 'print' → logprob: -1.813173532485962
    4. ' sequence' → logprob: -3.688173532485962
    5. '(sequence' → logprob: -5.938173294067383
    6. 'seq' → logprob: -7.688173294067383
    7. '_print' → logprob: -8.063173294067383
    8. '_' → logprob: -8.063173294067383
    9. 'result' → logprob: -8.063173294067383
    10. '_seq' → logprob: -8.313173294067383

Token 350: ' afficher' (ID: 146524)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.008614808320999146
    2. ' print' → logprob: -4.758615016937256
    3. 'im' → logprob: -16.633615493774414
    4. '_print' → logprob: -16.883615493774414
    5. 'aff' → logprob: -17.008615493774414
    6. ' imprimir' → logprob: -17.258615493774414
    7. ' impr' → logprob: -17.258615493774414
    8. ' afficher' → logprob: -17.508615493774414
    9. 'printer' → logprob: -17.508615493774414
    10. ' imprime' → logprob: -17.883615493774414

Token 351: ' la' (ID: 557)
  Prédit: '(generate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(generate' → logprob: -0.0620521642267704
    2. 'generate' → logprob: -2.8120522499084473
    3. '(' → logprob: -10.187051773071289
    4. 'la' → logprob: -10.437051773071289
    5. ' generate' → logprob: -11.812051773071289
    6. 'the' → logprob: -12.937051773071289
    7. 'print' → logprob: -13.062051773071289
    8. 'le' → logprob: -13.062051773071289
    9. '(g' → logprob: -13.312051773071289
    10. ' la' → logprob: -14.562051773071289

Token 352: ' sé' (ID: 7462)
  Prédit: 'generate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'generate' → logprob: -0.03262382745742798
    2. 'sequence' → logprob: -3.532623767852783
    3. ' generate' → logprob: -6.157623767852783
    4. ' sequence' → logprob: -7.782623767852783
    5. 'print' → logprob: -8.032624244689941
    6. 'generated' → logprob: -12.282624244689941
    7. 'result' → logprob: -12.782624244689941
    8. '(generate' → logprob: -14.032624244689941
    9. ' generated' → logprob: -14.657624244689941
    10. '_sequence' → logprob: -14.657624244689941

Token 353: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -1.6240566083070007e-06
    2. 'QUENCE' → logprob: -13.500001907348633
    3. 'q' → logprob: -16.125001907348633
    4. 'qu' → logprob: -18.000001907348633
    5. 'quences' → logprob: -18.625001907348633
    6. '
' → logprob: -18.625001907348633
    7. 'rence' → logprob: -18.875001907348633
    8. '   ' → logprob: -19.250001907348633
    9. 'sequence' → logprob: -19.375001907348633
    10. '_' → logprob: -19.625001907348633

Token 354: ' demand' (ID: 8492)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.06262931227684021
    2. '   ' → logprob: -2.812629222869873
    3. ' print' → logprob: -7.812629222869873
    4. 'sequence' → logprob: -8.562629699707031
    5. '(sequence' → logprob: -10.437629699707031
    6. '(print' → logprob: -10.687629699707031
    7. '(' → logprob: -12.312629699707031
    8. 'result' → logprob: -12.562629699707031
    9. ' sequence' → logprob: -12.812629699707031
    10. '	print' → logprob: -14.437629699707031

Token 355: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.00022821188031230122
    2. 'er' → logprob: -9.125227928161621
    3. 'ee' → logprob: -9.500227928161621
    4. '   ' → logprob: -11.000227928161621
    5. 'é' → logprob: -11.500227928161621
    6. 'e' → logprob: -11.625227928161621
    7. 'rée' → logprob: -12.125227928161621
    8. 'érée' → logprob: -13.250227928161621
    9. 'ér' → logprob: -14.625227928161621
    10. 'née' → logprob: -15.625227928161621

Token 356: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.10044852644205093
    2. '   ' → logprob: -2.3504486083984375
    3. ' print' → logprob: -8.350448608398438
    4. '    
' → logprob: -13.350448608398438
    5. '	print' → logprob: -13.350448608398438
    6. 'sequence' → logprob: -13.475448608398438
    7. '
' → logprob: -15.225448608398438
    8. '```' → logprob: -15.475448608398438
    9. '(print' → logprob: -16.225448608398438
    10. ')' → logprob: -16.475448608398438

Token 357: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0002843384863808751
    2. ' print' → logprob: -8.375284194946289
    3. '   ' → logprob: -9.875284194946289
    4. 'sequence' → logprob: -13.125284194946289
    5. 'result' → logprob: -15.625284194946289
    6. ' sequence' → logprob: -16.25028419494629
    7. '
' → logprob: -17.12528419494629
    8. '```' → logprob: -18.00028419494629
    9. '	print' → logprob: -18.37528419494629
    10. '(print' → logprob: -18.50028419494629

Token 358: ' answer' (ID: 6052)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.9361264946837764e-07
    2. 'sequence' → logprob: -16.75
    3. ' print' → logprob: -17.0
    4. 'result' → logprob: -20.5
    5. 'prin' → logprob: -23.0
    6. 'pr' → logprob: -23.25
    7. 'seq' → logprob: -24.75
    8. ' sequence' → logprob: -25.875
    9. 'output' → logprob: -26.5
    10. '	print' → logprob: -27.0

Token 359: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25195345282554626
    2. '=' → logprob: -1.5019534826278687
    3. 's' → logprob: -11.376953125
    4. '_' → logprob: -12.501953125
    5. '   ' → logprob: -13.251953125
    6. 'print' → logprob: -13.626953125
    7. ')' → logprob: -14.001953125
    8. '_=' → logprob: -14.126953125
    9. '  ' → logprob: -14.501953125
    10. 'e' → logprob: -14.751953125

Token 360: ' generate' (ID: 10419)
  Prédit: 'generate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'generate' → logprob: -0.03804183006286621
    2. ' generate' → logprob: -3.288041830062866
    3. '(generate' → logprob: -15.038042068481445
    4. '.generate' → logprob: -18.538042068481445
    5. '_generate' → logprob: -19.788042068481445
    6. 'gener' → logprob: -20.538042068481445
    7. 'enerate' → logprob: -21.038042068481445
    8. '"' → logprob: -22.413042068481445
    9. ' ' → logprob: -22.413042068481445
    10. '   ' → logprob: -22.413042068481445

Token 361: '_sequence' (ID: 55606)
  Prédit: '_sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sequence' → logprob: -6.704273118884885e-07
    2. '_' → logprob: -15.250000953674316
    3. 'sequence' → logprob: -15.250000953674316
    4. '_sequences' → logprob: -16.75
    5. '_seq' → logprob: -17.0
    6. '_SEQUENCE' → logprob: -18.0
    7. ' sequence' → logprob: -18.75
    8. 'Sequence' → logprob: -19.0
    9. '_sentence' → logprob: -20.0
    10. '(sequence' → logprob: -20.875

Token 362: '(N' (ID: 10564)
  Prédit: '_sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sequence' → logprob: -0.4872402250766754
    2. '(N' → logprob: -0.987240195274353
    3. 'Sequence' → logprob: -4.612240314483643
    4. 'sequence' → logprob: -5.987240314483643
    5. '(' → logprob: -7.737240314483643
    6. '_' → logprob: -9.487239837646484
    7. ' sequence' → logprob: -9.737239837646484
    8. '_(' → logprob: -10.737239837646484
    9. ' (' → logprob: -11.112239837646484
    10. '_SEQUENCE' → logprob: -11.487239837646484

Token 363: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003084428608417511
    2. ',N' → logprob: -6.003084659576416
    3. '(N' → logprob: -7.753084659576416
    4. '(' → logprob: -9.003084182739258
    5. ' ,' → logprob: -10.253084182739258
    6. ',K' → logprob: -11.128084182739258
    7. ')' → logprob: -12.503084182739258
    8. ',
' → logprob: -13.753084182739258
    9. 'N' → logprob: -14.253084182739258
    10. ',n' → logprob: -15.878084182739258

Token 364: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.0002615742268972099
    2. ' K' → logprob: -8.250261306762695
    3. 'S' → logprob: -15.375261306762695
    4. ')' → logprob: -18.250261306762695
    5. ' ' → logprob: -18.500261306762695
    6. '   ' → logprob: -19.375261306762695
    7. '	K' → logprob: -19.750261306762695
    8. '>K' → logprob: -20.875261306762695
    9. ',K' → logprob: -22.000261306762695
    10. '  ' → logprob: -22.125261306762695

Token 365: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.845798710244708e-05
    2. ',S' → logprob: -10.250038146972656
    3. ' ,' → logprob: -12.875038146972656
    4. 'S' → logprob: -15.000038146972656
    5. ',
' → logprob: -16.125038146972656
    6. ')' → logprob: -18.625038146972656
    7. ',s' → logprob: -18.875038146972656
    8. ' ' → logprob: -19.500038146972656
    9. '```' → logprob: -20.250038146972656
    10. ' S' → logprob: -20.375038146972656

Token 366: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.006715370807796717
    2. ' S' → logprob: -5.006715297698975
    3. ')' → logprob: -18.256715774536133
    4. ' ' → logprob: -19.631715774536133
    5. '   ' → logprob: -21.131715774536133
    6. '	S' → logprob: -21.506715774536133
    7. '_S' → logprob: -21.631715774536133
    8. ' ' → logprob: -21.631715774536133
    9. 's' → logprob: -21.881715774536133
    10. '(S' → logprob: -22.131715774536133

Token 367: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2519519627094269
    2. ')
' → logprob: -1.5019519329071045
    3. ')
' → logprob: -10.751952171325684
    4. ')

' → logprob: -14.126952171325684
    5. 'print' → logprob: -15.251952171325684
    6. ' )
' → logprob: -15.501952171325684
    7. '   ' → logprob: -15.751952171325684
    8. ' )' → logprob: -16.126951217651367
    9. ')`
' → logprob: -17.126951217651367
    10. ')`' → logprob: -18.001951217651367

Token 368: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.004345856141299009
    2. '   ' → logprob: -5.504345893859863
    3. '
' → logprob: -8.629345893859863
    4. ' print' → logprob: -9.379345893859863
    5. '    
' → logprob: -13.129345893859863
    6. '	print' → logprob: -14.004345893859863
    7. '(print' → logprob: -15.129345893859863
    8. '  
' → logprob: -15.379345893859863
    9. '```' → logprob: -15.379345893859863
    10. '.print' → logprob: -15.754345893859863

Token 369: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -3.128163257315464e-07
    2. ' print' → logprob: -15.5
    3. '   ' → logprob: -20.125
    4. '.print' → logprob: -24.5
    5. 'pr' → logprob: -24.75
    6. '	print' → logprob: -25.0
    7. '(print' → logprob: -25.625
    8. '-print' → logprob: -25.75
    9. '_print' → logprob: -26.0
    10. '#print' → logprob: -26.125

Token 370: '(answer' (ID: 78433)
  Prédit: '(answer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(answer' → logprob: -0.00020520923135336488
    2. '(' → logprob: -8.500205039978027
    3. '(ans' → logprob: -13.875205039978027
    4. ' (' → logprob: -14.750205039978027
    5. '()' → logprob: -15.375205039978027
    6. '(
' → logprob: -17.125205993652344
    7. '(question' → logprob: -17.250205993652344
    8. 'answer' → logprob: -17.375205993652344
    9. '(address' → logprob: -17.625205993652344
    10. '(output' → logprob: -17.750205993652344

Token 371: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.320199877838604e-07
    2. ' )' → logprob: -16.25
    3. '))' → logprob: -16.5
    4. ')`' → logprob: -16.5
    5. '())' → logprob: -17.25
    6. '()' → logprob: -17.5
    7. '(' → logprob: -19.125
    8. ')}' → logprob: -19.125
    9. '`)' → logprob: -19.5
    10. ')
' → logprob: -19.75


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 369
Tokens correctement prédits (1ère position, stricte): 144
Tokens correctement prédits (1ère position, avec adaptation): 155
Tokens correctement prédits (top 10): 264
Précision stricte (1ère position): 39.02%
Précision adaptée (1ère position): 42.01%
Précision (top 10): 71.54%
================================================================================
