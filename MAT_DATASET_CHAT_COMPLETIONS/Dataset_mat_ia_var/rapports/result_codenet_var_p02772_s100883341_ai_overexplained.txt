================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:26:12
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Demande à l'utilisateur de saisir une valeur entière qui sera stockée dans la variable 'time'.
# Cette valeur représente le nombre d'éléments dans la séquence qui sera traitée par le programme.
time = int(input())  # Conversion explicite de l'entrée utilisateur (qui est une chaîne de caractères) en entier

# Demande à l'utilisateur de saisir une séquence de valeurs séparées par des espaces.
# Utilise la méthode split() pour diviser la chaîne saisie en plusieurs sous-chaînes, chacune représentant un nombre.
# Utilise une compréhension de liste pour convertir chaque sous-chaîne en entier en utilisant int().
# Stocke la liste des entiers dans la variable 'nums'.
nums = [int(i) for i in input().split()]

# Initialise un compteur pour le nombre de nombres impairs rencontrés dans la séquence. Commence à 0.
odd = 0

# Initialise un compteur pour le nombre de nombres pairs rencontrés dans la séquence. Commence à 0.
even = 0

# Initialise un compteur pour le nombre de nombres pairs qui sont divisibles par 3 ou par 5.
# Commence également à 0.
even35 = 0

# Parcourt la séquence à l'aide d'une boucle for pour examiner chaque élément individuellement.
# La boucle utilise la fonction range() pour générer des indices de 0 à time-1.
for j in range(time):
    # Vérifie si l'élément courant (nums[j]) est pair en utilisant l'opérateur modulo (%).
    # Si un nombre modulo 2 est égal à 0, cela signifie que le nombre est pair.
    if nums[j] % 2 == 0:
        # Incrémente le compteur 'even' d'une unité car nums[j] est pair.
        even += 1
        # À l'intérieur de la branche pair, vérifie une condition supplémentaire :
        # Teste si nums[j] n'est pas divisible par 3 ET n'est pas divisible par 5.
        # Cela signifie que si nums[j] modulo 3 n'est PAS égal à 0 ET nums[j] modulo 5 n'est PAS égal à 0.
        if nums[j] % 3 != 0 and nums[j] % 5 != 0:
            # Si la condition précédente est vraie, on passe à l'itération suivante de la boucle sans exécuter ce qui suit.
            continue  # L'instruction continue arrête cette itération et passe à la suivante.
        else:
            # Si nums[j] est divisible par 3 ou par 5 (ou les deux), incrémente le compteur 'even35'.
            even35 += 1
    else:
        # Si nums[j] n'est PAS pair (donc il est impair), alors on incrémente le compteur 'odd'.
        odd += 1

# Après la fin de la boucle, tous les éléments de la liste ont été examinés et les compteurs ont été mis à jour.
# Vérifie maintenant si tous les nombres pairs de la séquence sont aussi comptés dans 'even35'.
# Cela revient à tester si tous les nombres pairs sont aussi divisibles par 3 ou par 5.
if even35 == even:
    # Si c'est le cas (tous les nombres pairs dans la séquence sont divisibles par 3 ou 5), affiche 'APPROVED'.
    print("APPROVED")
else:
    # Sinon (il existe au moins un nombre pair qui n'est divisible ni par 3 ni par 5), affiche 'DENIED'.
    print("DENIED")
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Dem' (ID: 9458)
  → Token d'amorce (pas de prédiction)

Token 2: 'ande' (ID: 4102)
  → Token d'amorce (pas de prédiction)

Token 3: ' à' (ID: 1221)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7734304070472717
    2. ' ' → logprob: -1.398430347442627
    3. 's' → logprob: -1.773430347442627
    4. ':' → logprob: -2.898430347442627
    5. ' de' → logprob: -3.523430347442627
    6. ''' → logprob: -4.898430347442627
    7. ' :' → logprob: -5.398430347442627
    8. '```' → logprob: -5.523430347442627
    9. '.' → logprob: -5.648430347442627
    10. ' d' → logprob: -5.648430347442627

Token 4: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0062631662003695965
    2. ' l' → logprob: -5.256263256072998
    3. 'user' → logprob: -7.506263256072998
    4. 'util' → logprob: -8.63126277923584
    5. 'la' → logprob: -10.00626277923584
    6. 'un' → logprob: -10.13126277923584
    7. '`' → logprob: -10.38126277923584
    8. '#' → logprob: -10.50626277923584
    9. '```' → logprob: -10.50626277923584
    10. ' ' → logprob: -11.13126277923584

Token 5: ''utilisateur' (ID: 140803)
  Prédit: ''utilisateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''utilisateur' → logprob: -0.036522276699543
    2. ''' → logprob: -4.161522388458252
    3. 'u' → logprob: -4.661522388458252
    4. 'util' → logprob: -5.661522388458252
    5. '’utilisateur' → logprob: -5.661522388458252
    6. 'a' → logprob: -6.161522388458252
    7. ' utilisateur' → logprob: -6.786522388458252
    8. ''util' → logprob: -8.661521911621094
    9. ''user' → logprob: -9.161521911621094
    10. ''us' → logprob: -9.411521911621094

Token 6: ' de' (ID: 334)
  Prédit: 'nom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nom' → logprob: -0.41761481761932373
    2. 'name' → logprob: -1.9176148176193237
    3. 'user' → logprob: -2.4176149368286133
    4. 'input' → logprob: -3.0426149368286133
    5. 'age' → logprob: -4.292614936828613
    6. 'print' → logprob: -4.542614936828613
    7. 'username' → logprob: -5.167614936828613
    8. 's' → logprob: -5.167614936828613
    9. 'prenom' → logprob: -5.167614936828613
    10. 'n' → logprob: -5.292614936828613

Token 7: ' saisir' (ID: 152120)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.010186896659433842
    2. 'entr' → logprob: -5.135186672210693
    3. 'r' → logprob: -7.010186672210693
    4. '```' → logprob: -7.010186672210693
    5. ' saisir' → logprob: -7.010186672210693
    6. '#' → logprob: -7.510186672210693
    7. 'input' → logprob: -8.760187149047852
    8. 'entrée' → logprob: -8.885187149047852
    9. 'sa' → logprob: -8.885187149047852
    10. 'don' → logprob: -9.010187149047852

Token 8: ' une' (ID: 2463)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4754936993122101
    2. ' un' → logprob: -1.4754936695098877
    3. ' une' → logprob: -2.2254936695098877
    4. ''' → logprob: -4.350493907928467
    5. 's' → logprob: -5.725493907928467
    6. ''un' → logprob: -5.850493907928467
    7. ' ' → logprob: -5.850493907928467
    8. 'un' → logprob: -6.100493907928467
    9. 'une' → logprob: -6.225493907928467
    10. ''une' → logprob: -6.350493907928467

Token 9: ' valeur' (ID: 41664)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.08864790946245193
    2. ' chaîne' → logprob: -2.8386478424072266
    3. ' phrase' → logprob: -4.463647842407227
    4. 'chaine' → logprob: -5.463647842407227
    5. ' valeur' → logprob: -6.088647842407227
    6. ' ligne' → logprob: -6.338647842407227
    7. ' chaine' → logprob: -6.463647842407227
    8. 'phrase' → logprob: -6.713647842407227
    9. ' espace' → logprob: -7.088647842407227
    10. ' ' → logprob: -7.713647842407227

Token 10: ' entière' (ID: 61583)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.2164095789194107
    2. 'value' → logprob: -2.591409683227539
    3. 'val' → logprob: -2.591409683227539
    4. '_' → logprob: -4.216409683227539
    5. 'input' → logprob: -4.841409683227539
    6. 'x' → logprob: -5.341409683227539
    7. 's' → logprob: -5.466409683227539
    8. 'n' → logprob: -5.716409683227539
    9. 'user' → logprob: -5.966409683227539
    10. 'i' → logprob: -6.341409683227539

Token 11: ' qui' (ID: 2780)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.9475868940353394
    2. 'i' → logprob: -1.4475868940353394
    3. 'v' → logprob: -1.5725868940353394
    4. 'x' → logprob: -2.072587013244629
    5. '`' → logprob: -4.697587013244629
    6. '#' → logprob: -4.947587013244629
    7. 'value' → logprob: -5.322587013244629
    8. 'input' → logprob: -5.322587013244629
    9. 'val' → logprob: -5.697587013244629
    10. '\n' → logprob: -5.822587013244629

Token 12: ' sera' (ID: 15511)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5285449624061584
    2. 's' → logprob: -1.7785449028015137
    3. ''' → logprob: -2.0285449028015137
    4. 'n' → logprob: -3.9035449028015137
    5. ' sera' → logprob: -4.028544902801514
    6. '`' → logprob: -4.653544902801514
    7. '"' → logprob: -5.028544902801514
    8. '_' → logprob: -5.153544902801514
    9. ' ' → logprob: -5.278544902801514
    10. ' est' → logprob: -5.403544902801514

Token 13: ' stock' (ID: 6546)
  Prédit: ' stock'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stock' → logprob: -0.6824989318847656
    2. ' utilisée' → logprob: -0.8074989318847656
    3. ' multip' → logprob: -3.6824989318847656
    4. ' affect' → logprob: -5.182498931884766
    5. 'stock' → logprob: -5.557498931884766
    6. ' convert' → logprob: -6.057498931884766
    7. 'util' → logprob: -6.307498931884766
    8. 'convert' → logprob: -6.807498931884766
    9. 'multip' → logprob: -7.057498931884766
    10. ' ' → logprob: -7.307498931884766

Token 14: 'ée' (ID: 2894)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.013461604714393616
    2. 'e' → logprob: -5.013461589813232
    3. ' ' → logprob: -5.138461589813232
    4. ' _' → logprob: -8.26346206665039
    5. 's' → logprob: -9.01346206665039
    6. '_d' → logprob: -9.38846206665039
    7. 'é' → logprob: -9.51346206665039
    8. ' e' → logprob: -9.63846206665039
    9. '_e' → logprob: -10.13846206665039
    10. ' ' → logprob: -10.26346206665039

Token 15: ' dans' (ID: 2671)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5102437138557434
    2. 'n' → logprob: -2.6352436542510986
    3. ':' → logprob: -2.7602436542510986
    4. '.' → logprob: -3.2602436542510986
    5. ',' → logprob: -3.2602436542510986
    6. 'a' → logprob: -3.3852436542510986
    7. 'x' → logprob: -3.3852436542510986
    8. 's' → logprob: -3.3852436542510986
    9. 'v' → logprob: -4.010243892669678
    10. '`' → logprob: -4.510243892669678

Token 16: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.5968396067619324
    2. 'une' → logprob: -1.8468396663665771
    3. ' la' → logprob: -2.221839666366577
    4. 'n' → logprob: -2.721839666366577
    5. '`' → logprob: -3.221839666366577
    6. 'a' → logprob: -4.221839427947998
    7. ' une' → logprob: -4.346839427947998
    8. '```' → logprob: -4.471839427947998
    9. 'variable' → logprob: -4.596839427947998
    10. 'l' → logprob: -4.971839427947998

Token 17: ' variable' (ID: 11076)
  Prédit: 'variable'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'variable' → logprob: -0.023384422063827515
    2. ' variable' → logprob: -3.8983843326568604
    3. 'var' → logprob: -6.5233845710754395
    4. '```' → logprob: -7.7733845710754395
    5. 'val' → logprob: -8.273384094238281
    6. '\n' → logprob: -8.648384094238281
    7. '`' → logprob: -9.523384094238281
    8. 'nombre' → logprob: -9.648384094238281
    9. 'ligne' → logprob: -10.023384094238281
    10. 's' → logprob: -10.148384094238281

Token 18: ' '' (ID: 461)
  Prédit: '`'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '`' → logprob: -1.1509740352630615
    2. 's' → logprob: -1.7759740352630615
    3. 'n' → logprob: -2.5259740352630615
    4. 'ent' → logprob: -2.7759740352630615
    5. 'user' → logprob: -2.9009740352630615
    6. 'val' → logprob: -3.2759740352630615
    7. '_' → logprob: -3.4009740352630615
    8. 'x' → logprob: -3.6509740352630615
    9. '```' → logprob: -3.6509740352630615
    10. ' user' → logprob: -3.7759740352630615

Token 19: 'time' (ID: 4580)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.8375750184059143
    2. 'nombre' → logprob: -0.8375750184059143
    3. 'n' → logprob: -2.2125749588012695
    4. 'age' → logprob: -4.8375749588012695
    5. 'ent' → logprob: -5.3375749588012695
    6. 'value' → logprob: -5.7125749588012695
    7. 'x' → logprob: -5.8375749588012695
    8. 'nb' → logprob: -6.3375749588012695
    9. '`' → logprob: -6.8375749588012695
    10. 'user' → logprob: -6.9625749588012695

Token 20: ''.
' (ID: 49980)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6449348330497742
    2. ''' → logprob: -1.019934892654419
    3. '_'' → logprob: -2.894934892654419
    4. ')' → logprob: -3.644934892654419
    5. 's' → logprob: -4.39493465423584
    6. ')'' → logprob: -4.51993465423584
    7. 'e' → logprob: -5.76993465423584
    8. '')' → logprob: -6.01993465423584
    9. 'u' → logprob: -7.51993465423584
    10. '.' → logprob: -7.89493465423584

Token 21: '#' (ID: 2)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.0008210649830289185
    2. 't' → logprob: -7.250821113586426
    3. ' time' → logprob: -9.625821113586426
    4. 'n' → logprob: -11.125821113586426
    5. '```' → logprob: -11.500821113586426
    6. 'value' → logprob: -12.750821113586426
    7. 'user' → logprob: -13.000821113586426
    8. 'ti' → logprob: -13.375821113586426
    9. 'input' → logprob: -13.500821113586426
    10. '`' → logprob: -13.625821113586426

Token 22: ' Cette' (ID: 27383)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.007437554653733969
    2. 't' → logprob: -5.257437705993652
    3. ' time' → logprob: -6.132437705993652
    4. ' t' → logprob: -12.132437705993652
    5. 'tim' → logprob: -12.257437705993652
    6. 'user' → logprob: -12.632437705993652
    7. 'n' → logprob: -13.007437705993652
    8. '#' → logprob: -13.257437705993652
    9. 'input' → logprob: -13.382437705993652
    10. 'times' → logprob: -13.757437705993652

Token 23: ' valeur' (ID: 41664)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7300154566764832
    2. '_time' → logprob: -1.355015516281128
    3. '_' → logprob: -2.105015516281128
    4. 'time' → logprob: -2.855015516281128
    5. ' time' → logprob: -3.480015516281128
    6. '=' → logprob: -4.730015277862549
    7. ' ' → logprob: -4.980015277862549
    8. ' )' → logprob: -5.105015277862549
    9. '_value' → logprob: -5.730015277862549
    10. '_val' → logprob: -5.730015277862549

Token 24: ' représente' (ID: 88912)
  Prédit: ' sera'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sera' → logprob: -0.6128659844398499
    2. ' est' → logprob: -2.112865924835205
    3. '_' → logprob: -2.487865924835205
    4. ' doit' → logprob: -2.737865924835205
    5. ' =' → logprob: -3.362865924835205
    6. ' ' → logprob: -3.737865924835205
    7. 'est' → logprob: -3.737865924835205
    8. 's' → logprob: -4.112865924835205
    9. ' devra' → logprob: -4.362865924835205
    10. ' correspond' → logprob: -4.362865924835205

Token 25: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.2171066701412201
    2. 'le' → logprob: -2.217106580734253
    3. ' la' → logprob: -2.717106580734253
    4. 'la' → logprob: -4.717106819152832
    5. ' une' → logprob: -5.467106819152832
    6. 'une' → logprob: -5.717106819152832
    7. ' ' → logprob: -7.092106819152832
    8. 'l' → logprob: -7.217106819152832
    9. ' un' → logprob: -7.342106819152832
    10. ' en' → logprob: -7.342106819152832

Token 26: ' nombre' (ID: 9733)
  Prédit: ' nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.6249000430107117
    2. ' temps' → logprob: -1.2499001026153564
    3. 'temps' → logprob: -2.4999001026153564
    4. 'nombre' → logprob: -3.3749001026153564
    5. ' délai' → logprob: -3.3749001026153564
    6. 'dur' → logprob: -4.499899864196777
    7. ' durée' → logprob: -5.374899864196777
    8. ' ' → logprob: -5.499899864196777
    9. 's' → logprob: -6.624899864196777
    10. 'd' → logprob: -6.874899864196777

Token 27: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.28478047251701355
    2. ' de' → logprob: -1.784780502319336
    3. ' ' → logprob: -3.409780502319336
    4. '_' → logprob: -3.534780502319336
    5. 'd' → logprob: -4.409780502319336
    6. '_de' → logprob: -6.034780502319336
    7. 'de' → logprob: -6.784780502319336
    8. '_d' → logprob: -7.284780502319336
    9. ' total' → logprob: -7.659780502319336
    10. '_total' → logprob: -8.909780502319336

Token 28: ''' (ID: 6)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9975469708442688
    2. 'he' → logprob: -1.497546911239624
    3. ''' → logprob: -1.997546911239624
    4. '_he' → logprob: -2.247546911239624
    5. 'e' → logprob: -2.497546911239624
    6. ' heures' → logprob: -3.872546911239624
    7. ' ' → logprob: -3.997546911239624
    8. '_second' → logprob: -4.497547149658203
    9. ' secondes' → logprob: -4.497547149658203
    10. ''heure' → logprob: -5.622547149658203

Token 29: 'élé' (ID: 15228)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.021243656054139137
    2. 'ann' → logprob: -5.021243572235107
    3. 'heure' → logprob: -5.146243572235107
    4. 'second' → logprob: -5.646243572235107
    5. ''' → logprob: -6.146243572235107
    6. 'unit' → logprob: -7.771243572235107
    7. ' heures' → logprob: -7.896243572235107
    8. 'année' → logprob: -8.146244049072266
    9. '```' → logprob: -8.271244049072266
    10. ''ann' → logprob: -8.396244049072266

Token 30: 'ments' (ID: 1626)
  Prédit: 'ments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ments' → logprob: -0.004831788130104542
    2. 'ment' → logprob: -5.379831790924072
    3. 'urs' → logprob: -9.629831314086914
    4. 'ements' → logprob: -9.879831314086914
    5. 'ves' → logprob: -10.754831314086914
    6. 'v' → logprob: -11.254831314086914
    7. '`' → logprob: -11.879831314086914
    8. 'éments' → logprob: -12.004831314086914
    9. 'm' → logprob: -12.129831314086914
    10. 'ures' → logprob: -12.629831314086914

Token 31: ' dans' (ID: 2671)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.25792986154556274
    2. ' time' → logprob: -2.257929801940918
    3. ' =' → logprob: -3.257929801940918
    4. 's' → logprob: -3.632929801940918
    5. ' ' → logprob: -4.132929801940918
    6. 'n' → logprob: -4.882929801940918
    7. ')' → logprob: -5.507929801940918
    8. ' )' → logprob: -5.632929801940918
    9. 't' → logprob: -5.882929801940918
    10. 'times' → logprob: -6.257929801940918

Token 32: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.3555985987186432
    2. 'la' → logprob: -1.4805985689163208
    3. 'une' → logprob: -3.9805986881256104
    4. ' une' → logprob: -4.355598449707031
    5. 'l' → logprob: -4.730598449707031
    6. ' time' → logprob: -4.730598449707031
    7. 'le' → logprob: -5.105598449707031
    8. ' le' → logprob: -5.355598449707031
    9. 'time' → logprob: -5.355598449707031
    10. ' l' → logprob: -6.480598449707031

Token 33: ' sé' (ID: 7462)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.6026882529258728
    2. ' liste' → logprob: -0.8526882529258728
    3. ' tableau' → logprob: -4.852688312530518
    4. 'list' → logprob: -5.227688312530518
    5. 'table' → logprob: -5.727688312530518
    6. ' list' → logprob: -6.477688312530518
    7. ' table' → logprob: -6.852688312530518
    8. ' file' → logprob: -7.102688312530518
    9. ' ' → logprob: -7.477688312530518
    10. 'Liste' → logprob: -7.477688312530518

Token 34: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -0.04499435797333717
    2. 'q' → logprob: -3.294994354248047
    3. 'rie' → logprob: -6.169994354248047
    4. 'qu' → logprob: -6.294994354248047
    5. 'r' → logprob: -7.169994354248047
    6. 'quences' → logprob: -7.544994354248047
    7. '#' → logprob: -7.544994354248047
    8. 'que' → logprob: -7.544994354248047
    9. 'c' → logprob: -8.794994354248047
    10. 'lection' → logprob: -9.294994354248047

Token 35: ' qui' (ID: 2780)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.09861612319946289
    2. 't' → logprob: -3.098616123199463
    3. 'n' → logprob: -3.473616123199463
    4. '
' → logprob: -5.348616123199463
    5. '```' → logprob: -5.973616123199463
    6. ' time' → logprob: -6.473616123199463
    7. ':' → logprob: -6.598616123199463
    8. '\' → logprob: -7.098616123199463
    9. 's' → logprob: -7.223616123199463
    10. '\n' → logprob: -7.223616123199463

Token 36: ' sera' (ID: 15511)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.13668954372406
    2. ' sera' → logprob: -1.38668954372406
    3. 'su' → logprob: -1.88668954372406
    4. 'ser' → logprob: -2.3866896629333496
    5. 'sera' → logprob: -2.5116896629333496
    6. ' suit' → logprob: -3.5116896629333496
    7. ' seront' → logprob: -4.13668966293335
    8. 'dé' → logprob: -4.76168966293335
    9. ' va' → logprob: -4.88668966293335
    10. ' doit' → logprob: -5.01168966293335

Token 37: ' trait' (ID: 15458)
  Prédit: ' trait'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' trait' → logprob: -0.35459980368614197
    2. ' génér' → logprob: -2.479599714279175
    3. ' analys' → logprob: -2.854599714279175
    4. 'trait' → logprob: -3.104599714279175
    5. 'g' → logprob: -3.979599714279175
    6. ' demand' → logprob: -4.229599952697754
    7. ' affich' → logprob: -4.479599952697754
    8. ' stock' → logprob: -4.729599952697754
    9. ' utilisée' → logprob: -4.729599952697754
    10. ' g' → logprob: -4.854599952697754

Token 38: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.13337434828281403
    2. 'é' → logprob: -2.1333744525909424
    3. 'e' → logprob: -5.133374214172363
    4. '#' → logprob: -9.133374214172363
    5. 'és' → logprob: -9.133374214172363
    6. 'ement' → logprob: -9.258374214172363
    7. 'ee' → logprob: -9.758374214172363
    8. 'ment' → logprob: -10.508374214172363
    9. 'ed' → logprob: -11.008374214172363
    10. 'm' → logprob: -11.133374214172363

Token 39: ' par' (ID: 686)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.0015245062531903386
    2. 't' → logprob: -7.001524448394775
    3. 'n' → logprob: -8.251524925231934
    4. '
' → logprob: -9.126524925231934
    5. ' time' → logprob: -9.251524925231934
    6. '```' → logprob: -10.376524925231934
    7. 'times' → logprob: -11.126524925231934
    8. 'ti' → logprob: -11.251524925231934
    9. 'try' → logprob: -11.751524925231934
    10. 'tim' → logprob: -11.751524925231934

Token 40: ' le' (ID: 505)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.585725724697113
    2. ' ' → logprob: -1.7107257843017578
    3. ' l' → logprob: -2.335725784301758
    4. ' le' → logprob: -2.960725784301758
    5. 'la' → logprob: -3.960725784301758
    6. ' input' → logprob: -4.210725784301758
    7. 'l' → logprob: -4.460725784301758
    8. ' une' → logprob: -4.460725784301758
    9. ' len' → logprob: -4.835725784301758
    10. 'le' → logprob: -4.960725784301758

Token 41: ' programme' (ID: 18190)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.9721461534500122
    2. ' code' → logprob: -1.4721461534500122
    3. ' program' → logprob: -1.9721461534500122
    4. ' programme' → logprob: -2.0971460342407227
    5. ' algorithm' → logprob: -3.5971460342407227
    6. ' process' → logprob: -3.8471460342407227
    7. 'for' → logprob: -4.472146034240723
    8. ' space' → logprob: -4.972146034240723
    9. ' sequence' → logprob: -5.097146034240723
    10. ' time' → logprob: -5.097146034240723

Token 42: '.
' (ID: 558)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.1624576598405838
    2. 't' → logprob: -1.9124577045440674
    3. 'n' → logprob: -6.412457466125488
    4. 'ti' → logprob: -9.037457466125488
    5. '```' → logprob: -9.162457466125488
    6. '#' → logprob: -9.412457466125488
    7. 'i' → logprob: -10.037457466125488
    8. ' time' → logprob: -10.037457466125488
    9. 'tim' → logprob: -10.287457466125488
    10. '
' → logprob: -10.912457466125488

Token 43: 'time' (ID: 4580)
  Prédit: 'time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.25459447503089905
    2. 't' → logprob: -1.5045944452285767
    3. 'n' → logprob: -6.254594326019287
    4. '#' → logprob: -8.754594802856445
    5. '```' → logprob: -9.129594802856445
    6. '
' → logprob: -9.254594802856445
    7. ' time' → logprob: -9.254594802856445
    8. 'ti' → logprob: -10.254594802856445
    9. 'i' → logprob: -10.254594802856445
    10. '`' → logprob: -10.379594802856445

Token 44: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01816692017018795
    2. '=' → logprob: -4.018167018890381
    3. '=int' → logprob: -12.018166542053223
    4. '=input' → logprob: -12.393166542053223
    5. 's' → logprob: -13.018166542053223
    6. 'space' → logprob: -13.643166542053223
    7. ' ' → logprob: -14.268166542053223
    8. '_' → logprob: -14.268166542053223
    9. ' ' → logprob: -14.393166542053223
    10. ')' → logprob: -15.143166542053223

Token 45: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.0027663595974445343
    2. 'int' → logprob: -6.002766132354736
    3. ' input' → logprob: -8.252766609191895
    4. ' ' → logprob: -10.877766609191895
    5. '=int' → logprob: -12.377766609191895
    6. ' ' → logprob: -12.377766609191895
    7. 'input' → logprob: -13.127766609191895
    8. ' in' → logprob: -15.877766609191895
    9. '  ' → logprob: -16.002765655517578
    10. '[int' → logprob: -16.127765655517578

Token 46: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5759539008140564
    2. '(input' → logprob: -0.8259539008140564
    3. 'input' → logprob: -12.200953483581543
    4. '()' → logprob: -12.825953483581543
    5. '(
' → logprob: -13.200953483581543
    6. ' (' → logprob: -13.700953483581543
    7. '('' → logprob: -13.825953483581543
    8. '(int' → logprob: -14.325953483581543
    9. '(

' → logprob: -14.700953483581543
    10. '(user' → logprob: -14.950953483581543

Token 47: '())' (ID: 3516)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.622909665107727
    2. '("("' → logprob: -1.122909665107727
    3. '('' → logprob: -2.2479095458984375
    4. '("' → logprob: -3.9979095458984375
    5. '()' → logprob: -4.6229095458984375
    6. '("")' → logprob: -6.2479095458984375
    7. '(""))' → logprob: -6.6229095458984375
    8. '("(' → logprob: -7.3729095458984375
    9. '(">' → logprob: -8.122909545898438
    10. '())' → logprob: -8.997909545898438

Token 48: ' ' (ID: 220)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9257901906967163
    2. ' ' → logprob: -1.5507901906967163
    3. '<|end|>' → logprob: -1.6757901906967163
    4. '(' → logprob: -2.050790309906006
    5. '#' → logprob: -3.300790309906006
    6. '\' → logprob: -4.800790309906006
    7. '
' → logprob: -5.050790309906006
    8. '.' → logprob: -5.675790309906006
    9. '<|end|>' → logprob: -5.800790309906006
    10. '```' → logprob: -6.300790309906006

Token 49: ' #' (ID: 1069)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7902598977088928
    2. '<|end|>' → logprob: -1.790259838104248
    3. '#' → logprob: -2.040259838104248
    4. ' ' → logprob: -2.165259838104248
    5. 'for' → logprob: -2.915259838104248
    6. '
' → logprob: -3.915259838104248
    7. 'if' → logprob: -3.915259838104248
    8. '<|end|>' → logprob: -5.290259838104248
    9. '[' → logprob: -5.415259838104248
    10. '.' → logprob: -5.540259838104248

Token 50: ' Conversion' (ID: 74433)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7430166006088257
    2. '(' → logprob: -1.1180166006088257
    3. ' ' → logprob: -1.9930166006088257
    4. ' )' → logprob: -3.7430167198181152
    5. '()' → logprob: -4.493016719818115
    6. '"' → logprob: -5.493016719818115
    7. '#' → logprob: -5.868016719818115
    8. ' (' → logprob: -5.993016719818115
    9. '("' → logprob: -5.993016719818115
    10. '("")' → logprob: -5.993016719818115

Token 51: ' explic' (ID: 20781)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0008355968166142702
    2. '()' → logprob: -8.000835418701172
    3. '('' → logprob: -8.250835418701172
    4. '("' → logprob: -9.000835418701172
    5. ' (' → logprob: -9.750835418701172
    6. '(
' → logprob: -11.500835418701172
    7. ' ' → logprob: -11.750835418701172
    8. '("""' → logprob: -11.750835418701172
    9. '("")' → logprob: -12.000835418701172
    10. '<|end|>' → logprob: -12.625835418701172

Token 52: 'ite' (ID: 651)
  Prédit: 'ite'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ite' → logprob: -0.0005956856766715646
    2. 'ic' → logprob: -8.125596046447754
    3. ' ite' → logprob: -9.000596046447754
    4. 'it' → logprob: -9.625596046447754
    5. 'ique' → logprob: -10.375596046447754
    6. 'icit' → logprob: -11.250596046447754
    7. ' ' → logprob: -11.500596046447754
    8. 'ité' → logprob: -11.500596046447754
    9. 'itation' → logprob: -12.000596046447754
    10. 'ète' → logprob: -12.000596046447754

Token 53: ' de' (ID: 334)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0010209017200395465
    2. ')' → logprob: -8.376020431518555
    3. ' (' → logprob: -8.501020431518555
    4. '()' → logprob: -8.626020431518555
    5. ' ' → logprob: -8.876020431518555
    6. '(
' → logprob: -9.626020431518555
    7. '('' → logprob: -9.626020431518555
    8. ',' → logprob: -10.876020431518555
    9. '```' → logprob: -10.876020431518555
    10. '("' → logprob: -11.001020431518555

Token 54: ' l' (ID: 305)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8631246089935303
    2. ''' → logprob: -1.3631246089935303
    3. 'input' → logprob: -1.9881246089935303
    4. ' input' → logprob: -2.4881246089935303
    5. '"' → logprob: -2.7381246089935303
    6. ' l' → logprob: -4.738124847412109
    7. 'l' → logprob: -4.738124847412109
    8. ' ' → logprob: -5.613124847412109
    9. ')' → logprob: -5.863124847412109
    10. '(input' → logprob: -5.988124847412109

Token 55: ''entrée' (ID: 115820)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.45870041847229004
    2. ''entrée' → logprob: -1.58370041847229
    3. ''utilisateur' → logprob: -2.83370041847229
    4. 'input' → logprob: -3.08370041847229
    5. ''espace' → logprob: -3.95870041847229
    6. ' input' → logprob: -4.333700180053711
    7. 'e' → logprob: -4.833700180053711
    8. ''ent' → logprob: -5.333700180053711
    9. 'a' → logprob: -5.708700180053711
    10. 'entrée' → logprob: -5.833700180053711

Token 56: ' utilisateur' (ID: 115595)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.13973022997379303
    2. '(' → logprob: -2.514730215072632
    3. '()' → logprob: -3.889730215072632
    4. ' )' → logprob: -3.889730215072632
    5. ' ' → logprob: -6.014730453491211
    6. '())' → logprob: -6.264730453491211
    7. ' (' → logprob: -6.889730453491211
    8. '<|end|>' → logprob: -7.389730453491211
    9. '('' → logprob: -7.514730453491211
    10. '#' → logprob: -8.014730453491211

Token 57: ' (' (ID: 350)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.22937175631523132
    2. ' ' → logprob: -1.8543717861175537
    3. '<|end|>' → logprob: -3.9793717861175537
    4. '
' → logprob: -4.729371547698975
    5. ' )' → logprob: -5.104371547698975
    6. '\n' → logprob: -6.104371547698975
    7. '(' → logprob: -6.229371547698975
    8. '.' → logprob: -6.604371547698975
    9. '#' → logprob: -6.729371547698975
    10. '\' → logprob: -6.729371547698975

Token 58: 'qui' (ID: 22771)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8907506465911865
    2. ' )' → logprob: -1.0157506465911865
    3. ' ' → logprob: -2.3907506465911865
    4. ''' → logprob: -2.3907506465911865
    5. ' '' → logprob: -3.6407506465911865
    6. '"' → logprob: -5.015750885009766
    7. ' en' → logprob: -5.765750885009766
    8. ' "' → logprob: -5.890750885009766
    9. ' '')' → logprob: -7.515750885009766
    10. ' string' → logprob: -7.640750885009766

Token 59: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.09075749665498734
    2. ' s' → logprob: -3.9657576084136963
    3. ' )' → logprob: -4.340757369995117
    4. ')' → logprob: -4.340757369995117
    5. ' correspond' → logprob: -4.465757369995117
    6. ' is' → logprob: -4.965757369995117
    7. 'est' → logprob: -5.090757369995117
    8. ' représente' → logprob: -5.840757369995117
    9. ' contient' → logprob: -6.215757369995117
    10. ' n' → logprob: -6.215757369995117

Token 60: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.04496290907263756
    2. ' toujours' → logprob: -3.6699628829956055
    3. ' un' → logprob: -5.1699628829956055
    4. 'une' → logprob: -5.2949628829956055
    5. ' ' → logprob: -6.1699628829956055
    6. ' de' → logprob: -6.9199628829956055
    7. ' sous' → logprob: -6.9199628829956055
    8. ' always' → logprob: -7.1699628829956055
    9. 'string' → logprob: -7.6699628829956055
    10. 'str' → logprob: -8.044962882995605

Token 61: ' chaîne' (ID: 89288)
  Prédit: ' chaîne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.01574680022895336
    2. ' chaine' → logprob: -4.890746593475342
    3. ' string' → logprob: -5.140746593475342
    4. 'chaine' → logprob: -6.765746593475342
    5. ' ' → logprob: -7.140746593475342
    6. 'string' → logprob: -8.7657470703125
    7. 'cha' → logprob: -10.2657470703125
    8. ' )' → logprob: -10.5157470703125
    9. ' chaînes' → logprob: -10.6407470703125
    10. ')' → logprob: -10.7657470703125

Token 62: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.048539333045482635
    2. 'de' → logprob: -3.173539400100708
    3. ')' → logprob: -5.548539161682129
    4. ' )' → logprob: -6.548539161682129
    5. ' ' → logprob: -10.173539161682129
    6. ' en' → logprob: -10.298539161682129
    7. ' caractères' → logprob: -10.298539161682129
    8. 'vide' → logprob: -11.173539161682129
    9. 'car' → logprob: -11.423539161682129
    10. 's' → logprob: -11.798539161682129

Token 63: ' caractères' (ID: 183106)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.3136097192764282
    2. ' caractères' → logprob: -1.3136097192764282
    3. ' caractère' → logprob: -9.063610076904297
    4. ' caracteres' → logprob: -9.188610076904297
    5. ' caract' → logprob: -9.563610076904297
    6. 'texte' → logprob: -10.438610076904297
    7. 'chars' → logprob: -12.063610076904297
    8. ' car' → logprob: -12.438610076904297
    9. 'char' → logprob: -12.813610076904297
    10. 'c' → logprob: -13.063610076904297

Token 64: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09015398472547531
    2. ' en' → logprob: -2.840153932571411
    3. ' )' → logprob: -3.590153932571411
    4. 'en' → logprob: -8.840153694152832
    5. ' ' → logprob: -11.965153694152832
    6. ''en' → logprob: -12.090153694152832
    7. '()' → logprob: -12.215153694152832
    8. ' à' → logprob: -12.215153694152832
    9. ' ' → logprob: -12.215153694152832
    10. ' par' → logprob: -12.590153694152832

Token 65: ' en' (ID: 469)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04528605192899704
    2. ' )' → logprob: -3.170285940170288
    3. ' ' → logprob: -6.545286178588867
    4. '<|end|>' → logprob: -8.045286178588867
    5. '+' → logprob: -9.170286178588867
    6. '[' → logprob: -9.295286178588867
    7. '#' → logprob: -9.670286178588867
    8. '.' → logprob: -10.670286178588867
    9. '(' → logprob: -10.795286178588867
    10. ' ' → logprob: -10.795286178588867

Token 66: ' entier' (ID: 80473)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.270358681678772
    2. ' ' → logprob: -1.895358681678772
    3. ' entier' → logprob: -3.1453585624694824
    4. ' int' → logprob: -3.6453585624694824
    5. 'ent' → logprob: -5.520358562469482
    6. '  ' → logprob: -5.520358562469482
    7. 'int' → logprob: -5.770358562469482
    8. 'un' → logprob: -6.270358562469482
    9. ' une' → logprob: -7.145358562469482
    10. ' ent' → logprob: -7.270358562469482

Token 67: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.4313957691192627
    2. '<|end|>' → logprob: -1.6813957691192627
    3. ')' → logprob: -1.8063957691192627
    4. '#' → logprob: -2.1813957691192627
    5. ' ' → logprob: -2.6813957691192627
    6. 'for' → logprob: -3.0563957691192627
    7. '.' → logprob: -3.3063957691192627
    8. ' 
' → logprob: -3.8063957691192627
    9. 's' → logprob: -3.9313957691192627
    10. '[' → logprob: -3.9313957691192627

Token 68: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9733413457870483
    2. 'for' → logprob: -1.2233413457870483
    3. '#' → logprob: -2.473341464996338
    4. '\n' → logprob: -3.098341464996338
    5. '.' → logprob: -3.223341464996338
    6. ' for' → logprob: -3.348341464996338
    7. ':' → logprob: -4.098341464996338
    8. 'n' → logprob: -4.098341464996338
    9. ' 
' → logprob: -4.473341464996338
    10. '\' → logprob: -4.473341464996338

Token 69: ' Dem' (ID: 9458)
  Prédit: 'sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sequence' → logprob: -0.8660649657249451
    2. 'for' → logprob: -1.1160650253295898
    3. ' sequence' → logprob: -2.74106502532959
    4. 'result' → logprob: -2.86606502532959
    5. 'numbers' → logprob: -3.36606502532959
    6. ' for' → logprob: -3.99106502532959
    7. 'elements' → logprob: -4.24106502532959
    8. 'values' → logprob: -4.24106502532959
    9. ' numbers' → logprob: -4.74106502532959
    10. 'sum' → logprob: -5.24106502532959

Token 70: 'ande' (ID: 4102)
  Prédit: 'ande'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ande' → logprob: -0.08734841644763947
    2. 'a' → logprob: -3.337348461151123
    3. 'e' → logprob: -3.962348461151123
    4. 'andez' → logprob: -4.587348461151123
    5. '#' → logprob: -5.337348461151123
    6. 'mande' → logprob: -5.462348461151123
    7. 'ade' → logprob: -5.587348461151123
    8. 'and' → logprob: -6.587348461151123
    9. 'an' → logprob: -7.337348461151123
    10. 'time' → logprob: -7.462348461151123

Token 71: ' à' (ID: 1221)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.7452967762947083
    2. ' à' → logprob: -1.9952967166900635
    3. '(' → logprob: -2.4952967166900635
    4. 's' → logprob: -2.6202967166900635
    5. 'au' → logprob: -3.2452967166900635
    6. '_' → logprob: -3.3702967166900635
    7. ')' → logprob: -3.8702967166900635
    8. ' une' → logprob: -3.9952967166900635
    9. ' la' → logprob: -4.370296955108643
    10. '#' → logprob: -4.370296955108643

Token 72: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.0196553468704224
    2. ' l' → logprob: -1.0196553468704224
    3. ' une' → logprob: -2.144655227661133
    4. 'une' → logprob: -2.144655227661133
    5. ' la' → logprob: -4.144655227661133
    6. 'la' → logprob: -4.894655227661133
    7. '#' → logprob: -5.769655227661133
    8. 'range' → logprob: -6.394655227661133
    9. ' ' → logprob: -6.394655227661133
    10. ' un' → logprob: -6.519655227661133

Token 73: ''utilisateur' (ID: 140803)
  Prédit: ''utilisateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''utilisateur' → logprob: -0.07150207459926605
    2. 'u' → logprob: -3.6965019702911377
    3. 'a' → logprob: -4.446502208709717
    4. ''' → logprob: -4.446502208709717
    5. '’utilisateur' → logprob: -4.946502208709717
    6. 'e' → logprob: -5.821502208709717
    7. 'util' → logprob: -5.821502208709717
    8. 'user' → logprob: -6.071502208709717
    9. ''util' → logprob: -6.446502208709717
    10. ' utilisateur' → logprob: -7.071502208709717

Token 74: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4416271150112152
    2. 's' → logprob: -2.191627025604248
    3. '_' → logprob: -2.566627025604248
    4. ')' → logprob: -2.816627025604248
    5. '#' → logprob: -3.816627025604248
    6. '(' → logprob: -3.941627025604248
    7. ',' → logprob: -4.691627025604248
    8. '()' → logprob: -4.941627025604248
    9. ' )' → logprob: -4.941627025604248
    10. ' de' → logprob: -5.066627025604248

Token 75: ' saisir' (ID: 152120)
  Prédit: ' saisir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' saisir' → logprob: -0.9091881513595581
    2. 's' → logprob: -1.409188151359558
    3. 'range' → logprob: -2.7841882705688477
    4. 'l' → logprob: -2.9091882705688477
    5. 'for' → logprob: -3.4091882705688477
    6. ' continuer' → logprob: -3.5341882705688477
    7. ' traiter' → logprob: -3.5341882705688477
    8. ' for' → logprob: -3.7841882705688477
    9. ' range' → logprob: -4.034188270568848
    10. 'int' → logprob: -4.159188270568848

Token 76: ' une' (ID: 2463)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.19567465782165527
    2. ' un' → logprob: -2.8206746578216553
    3. ' ' → logprob: -3.5706746578216553
    4. ' une' → logprob: -4.320674896240234
    5. 's' → logprob: -4.445674896240234
    6. ' la' → logprob: -4.570674896240234
    7. '(' → logprob: -4.695674896240234
    8. '_' → logprob: -4.945674896240234
    9. 'a' → logprob: -5.070674896240234
    10. ',' → logprob: -5.320674896240234

Token 77: ' sé' (ID: 7462)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.38008207082748413
    2. ' valeur' → logprob: -1.380082130432129
    3. '_' → logprob: -3.505082130432129
    4. ' nombre' → logprob: -4.630082130432129
    5. ' espace' → logprob: -5.130082130432129
    6. ' chaîne' → logprob: -5.755082130432129
    7. ' variable' → logprob: -5.880082130432129
    8. 'n' → logprob: -6.005082130432129
    9. ' ' → logprob: -6.880082130432129
    10. ' n' → logprob: -6.880082130432129

Token 78: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -0.00043472214019857347
    2. 'q' → logprob: -8.125434875488281
    3. 'qu' → logprob: -9.500434875488281
    4. 'que' → logprob: -10.375434875488281
    5. '#' → logprob: -11.500434875488281
    6. 'quences' → logprob: -12.250434875488281
    7. 'rie' → logprob: -12.500434875488281
    8. 'QUENCE' → logprob: -12.500434875488281
    9. 'e' → logprob: -13.375434875488281
    10. 'u' → logprob: -13.500434875488281

Token 79: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0743931457400322
    2. 's' → logprob: -3.4493930339813232
    3. '[' → logprob: -3.9493930339813232
    4. '_' → logprob: -4.824393272399902
    5. ')' → logprob: -6.074393272399902
    6. ' de' → logprob: -6.574393272399902
    7. 'n' → logprob: -6.699393272399902
    8. ' )' → logprob: -6.949393272399902
    9. ' d' → logprob: -6.949393272399902
    10. '<|end|>' → logprob: -7.199393272399902

Token 80: ' valeurs' (ID: 73668)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6061100959777832
    2. ' nombres' → logprob: -2.106110095977783
    3. 'élé' → logprob: -2.856110095977783
    4. 's' → logprob: -2.856110095977783
    5. ' valeurs' → logprob: -3.356110095977783
    6. ' caractères' → logprob: -3.481110095977783
    7. ' l' → logprob: -3.856110095977783
    8. ' '' → logprob: -4.231110095977783
    9. 'n' → logprob: -4.356110095977783
    10. ' espaces' → logprob: -4.731110095977783

Token 81: ' sépar' (ID: 97160)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.018582994118332863
    2. 's' → logprob: -4.893582820892334
    3. '<|end|>' → logprob: -5.518582820892334
    4. ' ,' → logprob: -6.018582820892334
    5. '  ' → logprob: -7.018582820892334
    6. ' ' → logprob: -7.393582820892334
    7. '[' → logprob: -7.518582820892334
    8. ' )' → logprob: -7.893582820892334
    9. 'es' → logprob: -8.518583297729492
    10. ',' → logprob: -8.893583297729492

Token 82: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.04531681537628174
    2. 'ée' → logprob: -3.670316696166992
    3. 'é' → logprob: -4.170316696166992
    4. 'és' → logprob: -6.045316696166992
    5. ' par' → logprob: -7.545316696166992
    6. 'es' → logprob: -8.420316696166992
    7. 'par' → logprob: -9.045316696166992
    8. 'e' → logprob: -10.545316696166992
    9. '```' → logprob: -11.045316696166992
    10. ''é' → logprob: -11.295316696166992

Token 83: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.1075294092297554
    2. 'par' → logprob: -3.107529401779175
    3. 'es' → logprob: -3.232529401779175
    4. '<|end|>' → logprob: -5.357529640197754
    5. ' ' → logprob: -5.482529640197754
    6. ' espaces' → logprob: -5.857529640197754
    7. 's' → logprob: -6.232529640197754
    8. '```' → logprob: -7.107529640197754
    9. ' espace' → logprob: -7.232529640197754
    10. '  ' → logprob: -7.732529640197754

Token 84: ' des' (ID: 731)
  Prédit: ' espaces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' espaces' → logprob: -0.868282675743103
    2. ' des' → logprob: -1.868282675743103
    3. ' ' → logprob: -2.4932827949523926
    4. ' espace' → logprob: -2.7432827949523926
    5. 'un' → logprob: -2.8682827949523926
    6. 'es' → logprob: -2.8682827949523926
    7. ' un' → logprob: -3.2432827949523926
    8. 'des' → logprob: -3.3682827949523926
    9. ''espace' → logprob: -3.7432827949523926
    10. ''' → logprob: -3.9932827949523926

Token 85: ' espaces' (ID: 98361)
  Prédit: ' espaces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' espaces' → logprob: -0.0057062203995883465
    2. 'esp' → logprob: -5.755706310272217
    3. ' espace' → logprob: -7.130706310272217
    4. 'es' → logprob: -7.380706310272217
    5. 'spaces' → logprob: -8.005705833435059
    6. ' ' → logprob: -8.880705833435059
    7. 'space' → logprob: -9.005705833435059
    8. ''esp' → logprob: -9.255705833435059
    9. ''espace' → logprob: -9.255705833435059
    10. '_' → logprob: -9.380705833435059

Token 86: '.
' (ID: 558)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5622205138206482
    2. 'n' → logprob: -2.062220573425293
    3. 'sequence' → logprob: -2.187220573425293
    4. 'val' → logprob: -2.937220573425293
    5. 'values' → logprob: -2.937220573425293
    6. 't' → logprob: -3.687220573425293
    7. ' ' → logprob: -4.937220573425293
    8. 'input' → logprob: -5.187220573425293
    9. ' sequence' → logprob: -5.312220573425293
    10. 'data' → logprob: -5.437220573425293

Token 87: '#' (ID: 2)
  Prédit: 'sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sequence' → logprob: -0.8643584251403809
    2. 'values' → logprob: -1.4893584251403809
    3. 's' → logprob: -1.8643584251403809
    4. 't' → logprob: -2.989358425140381
    5. 'data' → logprob: -3.739358425140381
    6. ' sequence' → logprob: -3.864358425140381
    7. 'n' → logprob: -4.364358425140381
    8. ' values' → logprob: -4.364358425140381
    9. ' ' → logprob: -4.614358425140381
    10. 'val' → logprob: -4.989358425140381

Token 88: ' Util' (ID: 13564)
  Prédit: 'sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sequence' → logprob: -0.7921233177185059
    2. 'values' → logprob: -1.2921233177185059
    3. ' sequence' → logprob: -2.417123317718506
    4. ' values' → logprob: -2.667123317718506
    5. 's' → logprob: -2.792123317718506
    6. 'data' → logprob: -4.917123317718506
    7. 'seq' → logprob: -5.167123317718506
    8. 't' → logprob: -5.417123317718506
    9. 'n' → logprob: -5.792123317718506
    10. 'numbers' → logprob: -5.792123317718506

Token 89: 'ise' (ID: 1096)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.07386405020952225
    2. 'se' → logprob: -2.948863983154297
    3. 'ser' → logprob: -4.448863983154297
    4. 'sat' → logprob: -6.198863983154297
    5. 'sage' → logprob: -7.073863983154297
    6. 'sé' → logprob: -7.323863983154297
    7. '#' → logprob: -7.323863983154297
    8. 'sa' → logprob: -7.448863983154297
    9. 'ses' → logprob: -7.698863983154297
    10. 'sal' → logprob: -8.073863983154297

Token 90: ' la' (ID: 557)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -1.3405178785324097
    2. ' ' → logprob: -1.4655178785324097
    3. ' input' → logprob: -1.5905178785324097
    4. 's' → logprob: -2.465517997741699
    5. ' s' → logprob: -3.090517997741699
    6. ' la' → logprob: -3.215517997741699
    7. 'r' → logprob: -3.340517997741699
    8. ' le' → logprob: -4.215517997741699
    9. ' ' → logprob: -4.215517997741699
    10. '_' → logprob: -4.778017997741699

Token 91: ' méthode' (ID: 71490)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -1.074593186378479
    2. 'split' → logprob: -1.074593186378479
    3. 's' → logprob: -1.699593186378479
    4. 'list' → logprob: -3.3245930671691895
    5. 'liste' → logprob: -3.9495930671691895
    6. ' input' → logprob: -4.3245930671691895
    7. ' liste' → logprob: -4.4495930671691895
    8. ' méthode' → logprob: -5.1995930671691895
    9. 'spl' → logprob: -5.1995930671691895
    10. 'map' → logprob: -5.3245930671691895

Token 92: ' split' (ID: 12648)
  Prédit: 'split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.893000602722168
    2. ' input' → logprob: -1.518000602722168
    3. 'input' → logprob: -1.768000602722168
    4. ' split' → logprob: -2.768000602722168
    5. 's' → logprob: -2.893000602722168
    6. ' .' → logprob: -3.143000602722168
    7. '.split' → logprob: -4.143000602722168
    8. ' ' → logprob: -4.893000602722168
    9. '.' → logprob: -5.018000602722168
    10. ' s' → logprob: -6.018000602722168

Token 93: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.038414619863033295
    2. '(' → logprob: -3.413414716720581
    3. '('' → logprob: -5.663414478302002
    4. '("' → logprob: -7.538414478302002
    5. '().' → logprob: -8.53841495513916
    6. ' ()' → logprob: -8.78841495513916
    7. '(
' → logprob: -9.53841495513916
    8. '("("' → logprob: -9.66341495513916
    9. '("")' → logprob: -10.41341495513916
    10. '()
' → logprob: -10.66341495513916

Token 94: ' pour' (ID: 1930)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.022890185937285423
    2. ' ()' → logprob: -4.647890090942383
    3. 'user' → logprob: -5.897890090942383
    4. '().' → logprob: -6.272890090942383
    5. 'time' → logprob: -6.522890090942383
    6. '(' → logprob: -6.772890090942383
    7. ')' → logprob: -6.897890090942383
    8. ' )' → logprob: -7.147890090942383
    9. ' pour' → logprob: -7.147890090942383
    10. 's' → logprob: -7.522890090942383

Token 95: ' div' (ID: 4223)
  Prédit: ' récupérer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' récupérer' → logprob: -1.1178209781646729
    2. ' décou' → logprob: -1.3678209781646729
    3. ' sé' → logprob: -1.7428209781646729
    4. ' transformer' → logprob: -3.117820978164673
    5. ' créer' → logprob: -3.242820978164673
    6. ' convertir' → logprob: -3.367820978164673
    7. ' obtenir' → logprob: -3.992820978164673
    8. 'r' → logprob: -4.367820739746094
    9. ' div' → logprob: -4.492820739746094
    10. 'sé' → logprob: -4.492820739746094

Token 96: 'iser' (ID: 7466)
  Prédit: 'iser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iser' → logprob: -0.04612896591424942
    2. 'er' → logprob: -3.171128988265991
    3. 'ise' → logprob: -6.671128749847412
    4. 'ider' → logprob: -7.171128749847412
    5. 'ser' → logprob: -8.04612922668457
    6. '#' → logprob: -8.67112922668457
    7. 'isé' → logprob: -8.79612922668457
    8. 'erse' → logprob: -10.17112922668457
    9. 'i' → logprob: -10.29612922668457
    10. '	' → logprob: -10.67112922668457

Token 97: ' la' (ID: 557)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5790057182312012
    2. '()' → logprob: -1.2040057182312012
    3. '('' → logprob: -2.204005718231201
    4. '(input' → logprob: -4.954005718231201
    5. 'l' → logprob: -5.079005718231201
    6. ' l' → logprob: -5.704005718231201
    7. 'input' → logprob: -5.829005718231201
    8. ' (' → logprob: -5.954005718231201
    9. ''' → logprob: -6.579005718231201
    10. ' la' → logprob: -6.829005718231201

Token 98: ' chaîne' (ID: 89288)
  Prédit: ' chaîne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.5015368461608887
    2. 'chaine' → logprob: -1.3765368461608887
    3. 'cha' → logprob: -2.1265368461608887
    4. 'entrée' → logprob: -4.876536846160889
    5. ' chaine' → logprob: -5.126536846160889
    6. 'input' → logprob: -5.876536846160889
    7. 's' → logprob: -6.126536846160889
    8. 'string' → logprob: -6.251536846160889
    9. ' input' → logprob: -7.626536846160889
    10. 'val' → logprob: -7.751536846160889

Token 99: ' sais' (ID: 30010)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.46699923276901245
    2. ' ' → logprob: -2.0919992923736572
    3. ' )' → logprob: -2.8419992923736572
    4. 's' → logprob: -3.5919992923736572
    5. '('' → logprob: -3.7169992923736572
    6. ' (' → logprob: -3.7169992923736572
    7. ' ()' → logprob: -3.8419992923736572
    8. ' des' → logprob: -4.341999053955078
    9. '[' → logprob: -4.466999053955078
    10. ')' → logprob: -4.841999053955078

Token 100: 'ie' (ID: 396)
  Prédit: 'sie'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sie' → logprob: -0.7651870250701904
    2. 'e' → logprob: -0.8901870250701904
    3. 'ie' → logprob: -3.2651870250701904
    4. 'é' → logprob: -3.7651870250701904
    5. 'ée' → logprob: -3.8901870250701904
    6. 's' → logprob: -4.7651872634887695
    7. 'rie' → logprob: -5.0151872634887695
    8. 'er' → logprob: -5.2651872634887695
    9. 'die' → logprob: -5.6401872634887695
    10. 'cie' → logprob: -6.1401872634887695

Token 101: ' en' (ID: 469)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.928770124912262
    2. ')' → logprob: -1.8037700653076172
    3. ' )' → logprob: -2.053770065307617
    4. '[' → logprob: -2.678770065307617
    5. 's' → logprob: -2.678770065307617
    6. ' ' → logprob: -3.303770065307617
    7. '[]' → logprob: -3.678770065307617
    8. '.' → logprob: -4.428770065307617
    9. ',' → logprob: -4.553770065307617
    10. 'e' → logprob: -4.678770065307617

Token 102: ' plusieurs' (ID: 20875)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.02033865451812744
    2. ' des' → logprob: -4.520338535308838
    3. 'une' → logprob: -4.895338535308838
    4. ' un' → logprob: -6.895338535308838
    5. '```' → logprob: -9.020339012145996
    6. 'des' → logprob: -9.145339012145996
    7. ' espaces' → logprob: -9.145339012145996
    8. ' ' → logprob: -9.270339012145996
    9. ' liste' → logprob: -10.020339012145996
    10. 'liste' → logprob: -10.395339012145996

Token 103: ' sous' (ID: 14487)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.2437237650156021
    2. ' éléments' → logprob: -1.993723750114441
    3. ' ' → logprob: -2.9937238693237305
    4. ' chaînes' → logprob: -4.6187238693237305
    5. ' elements' → logprob: -5.6187238693237305
    6. 'm' → logprob: -5.8687238693237305
    7. ' )' → logprob: -6.2437238693237305
    8. 'elements' → logprob: -6.4937238693237305
    9. ' valeurs' → logprob: -6.6187238693237305
    10. ' mots' → logprob: -6.8687238693237305

Token 104: '-cha' (ID: 163177)
  Prédit: ' chaînes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaînes' → logprob: -0.07451054453849792
    2. '-' → logprob: -3.0745105743408203
    3. '_' → logprob: -5.57451057434082
    4. ' chain' → logprob: -5.69951057434082
    5. '-cha' → logprob: -5.94951057434082
    6. 'strings' → logprob: -5.94951057434082
    7. '-chain' → logprob: -6.19951057434082
    8. 'chain' → logprob: -6.44951057434082
    9. 'cha' → logprob: -6.69951057434082
    10. 'élé' → logprob: -6.94951057434082

Token 105: 'înes' (ID: 171517)
  Prédit: 'înes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'înes' → logprob: -0.30452919006347656
    2. 'î' → logprob: -1.4295291900634766
    3. 'nes' → logprob: -4.304529190063477
    4. 'ines' → logprob: -5.679529190063477
    5. 'Î' → logprob: -6.554529190063477
    6. 'ï' → logprob: -6.804529190063477
    7. 'r' → logprob: -7.054529190063477
    8. '```' → logprob: -7.179529190063477
    9. 'ı' → logprob: -8.054529190063477
    10. ' nes' → logprob: -8.054529190063477

Token 106: ',' (ID: 11)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8691575527191162
    2. ',' → logprob: -1.2441575527191162
    3. 'values' → logprob: -3.369157552719116
    4. ' ,' → logprob: -3.494157552719116
    5. 'val' → logprob: -3.744157552719116
    6. ' ' → logprob: -3.994157552719116
    7. 't' → logprob: -4.244157791137695
    8. 'es' → logprob: -4.244157791137695
    9. 'input' → logprob: -4.244157791137695
    10. 'user' → logprob: -4.244157791137695

Token 107: ' chacune' (ID: 127465)
  Prédit: ' puis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' puis' → logprob: -1.7379940748214722
    2. 's' → logprob: -1.9879940748214722
    3. 'time' → logprob: -2.1129941940307617
    4. 'input' → logprob: -2.2379941940307617
    5. 'values' → logprob: -2.6129941940307617
    6. ' ' → logprob: -3.2379941940307617
    7. 't' → logprob: -3.3629941940307617
    8. '[' → logprob: -3.7379941940307617
    9. 'tokens' → logprob: -3.7379941940307617
    10. ' la' → logprob: -3.8629941940307617

Token 108: ' représentant' (ID: 136122)
  Prédit: 'cor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cor' → logprob: -0.5625349283218384
    2. 're' → logprob: -1.5625349283218384
    3. ' représentant' → logprob: -2.687534809112549
    4. 'represent' → logprob: -3.062534809112549
    5. ' étant' → logprob: -3.312534809112549
    6. ' correspondant' → logprob: -4.062534809112549
    7. ' representing' → logprob: -4.187534809112549
    8. 's' → logprob: -4.562534809112549
    9. '<|end|>' → logprob: -5.062534809112549
    10. 'ét' → logprob: -5.562534809112549

Token 109: ' un' (ID: 537)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.8417024612426758
    2. ' des' → logprob: -1.2167024612426758
    3. ' un' → logprob: -2.216702461242676
    4. ' les' → logprob: -2.966702461242676
    5. 'des' → logprob: -2.966702461242676
    6. 'une' → logprob: -3.841702461242676
    7. 'les' → logprob: -3.841702461242676
    8. 'un' → logprob: -4.466702461242676
    9. ' ' → logprob: -6.466702461242676
    10. 'a' → logprob: -6.716702461242676

Token 110: ' nombre' (ID: 9733)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.030820993706583977
    2. ' élément' → logprob: -3.6558210849761963
    3. 'nombre' → logprob: -6.780820846557617
    4. 'element' → logprob: -6.905820846557617
    5. ' nombre' → logprob: -7.405820846557617
    6. ' ' → logprob: -8.030820846557617
    7. ' espace' → logprob: -8.280820846557617
    8. 'val' → logprob: -8.280820846557617
    9. 'ent' → logprob: -8.655820846557617
    10. ' éléments' → logprob: -8.905820846557617

Token 111: '.
' (ID: 558)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3144291639328003
    2. ' )' → logprob: -2.31442928314209
    3. ' ' → logprob: -2.81442928314209
    4. ')' → logprob: -3.68942928314209
    5. ' ,' → logprob: -4.06442928314209
    6. 'es' → logprob: -4.43942928314209
    7. ' s' → logprob: -4.43942928314209
    8. ',' → logprob: -5.56442928314209
    9. '.' → logprob: -5.68942928314209
    10. '_' → logprob: -5.93942928314209

Token 112: '#' (ID: 2)
  Prédit: 'sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sequence' → logprob: -0.6022807359695435
    2. 'values' → logprob: -1.2272807359695435
    3. 'times' → logprob: -3.477280616760254
    4. 'time' → logprob: -3.602280616760254
    5. 'val' → logprob: -3.727280616760254
    6. 'data' → logprob: -4.352280616760254
    7. 's' → logprob: -4.477280616760254
    8. 'seq' → logprob: -4.602280616760254
    9. 'elements' → logprob: -5.102280616760254
    10. 'temps' → logprob: -5.227280616760254

Token 113: ' Util' (ID: 13564)
  Prédit: 'values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'values' → logprob: -0.41983819007873535
    2. 'sequence' → logprob: -1.6698381900787354
    3. 'times' → logprob: -3.1698381900787354
    4. 'data' → logprob: -3.9198381900787354
    5. ' values' → logprob: -4.044837951660156
    6. 'numbers' → logprob: -4.419837951660156
    7. 'val' → logprob: -4.669837951660156
    8. 'time' → logprob: -4.669837951660156
    9. ' sequence' → logprob: -4.669837951660156
    10. 'elements' → logprob: -5.169837951660156

Token 114: 'ise' (ID: 1096)
  Prédit: 'ise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ise' → logprob: -0.0016077011823654175
    2. 'se' → logprob: -7.001607894897461
    3. 'is' → logprob: -8.376607894897461
    4. 'ises' → logprob: -9.126607894897461
    5. '#' → logprob: -9.501607894897461
    6. 'isation' → logprob: -9.626607894897461
    7. 'isez' → logprob: -10.001607894897461
    8. 'e' → logprob: -10.251607894897461
    9. 'i' → logprob: -10.376607894897461
    10. 'iser' → logprob: -10.751607894897461

Token 115: ' une' (ID: 2463)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.7944306135177612
    2. ' map' → logprob: -1.7944306135177612
    3. ' ' → logprob: -1.9194306135177612
    4. ' l' → logprob: -2.294430732727051
    5. ' list' → logprob: -2.419430732727051
    6. 'map' → logprob: -4.544430732727051
    7. '(' → logprob: -4.669430732727051
    8. 'l' → logprob: -5.419430732727051
    9. ' le' → logprob: -5.669430732727051
    10. ' ' → logprob: -5.919430732727051

Token 116: ' compréhension' (ID: 142333)
  Prédit: ' liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.6624691486358643
    2. ' compréhension' → logprob: -1.1624691486358643
    3. ' list' → logprob: -2.6624691486358643
    4. 'liste' → logprob: -3.2874691486358643
    5. ' comprehension' → logprob: -3.6624691486358643
    6. 'list' → logprob: -3.6624691486358643
    7. 'compr' → logprob: -5.787468910217285
    8. ' ligne' → logprob: -6.287468910217285
    9. ' ' → logprob: -6.412468910217285
    10. 's' → logprob: -6.537468910217285

Token 117: ' de' (ID: 334)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.01841212995350361
    2. ' [' → logprob: -5.143412113189697
    3. '[]' → logprob: -6.268412113189697
    4. '[int' → logprob: -6.518412113189697
    5. '[
' → logprob: -6.768412113189697
    6. '[n' → logprob: -6.893412113189697
    7. '[i' → logprob: -7.143412113189697
    8. ' des' → logprob: -7.643412113189697
    9. '[num' → logprob: -7.893412113189697
    10. '[array' → logprob: -7.893412113189697

Token 118: ' liste' (ID: 31719)
  Prédit: ' liste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.15214768052101135
    2. 'liste' → logprob: -2.9021477699279785
    3. '[' → logprob: -3.1521477699279785
    4. ' la' → logprob: -4.1521477699279785
    5. ' list' → logprob: -4.1521477699279785
    6. 'list' → logprob: -5.5271477699279785
    7. '[l' → logprob: -6.6521477699279785
    8. 'l' → logprob: -6.7771477699279785
    9. ' [' → logprob: -6.9021477699279785
    10. ' l' → logprob: -7.1521477699279785

Token 119: ' pour' (ID: 1930)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0951533243060112
    2. ' [' → logprob: -2.970153331756592
    3. 'time' → logprob: -4.345153331756592
    4. 'temps' → logprob: -5.220153331756592
    5. '[
' → logprob: -5.345153331756592
    6. ' time' → logprob: -6.345153331756592
    7. '[int' → logprob: -6.470153331756592
    8. 'values' → logprob: -6.470153331756592
    9. ' [
' → logprob: -6.720153331756592
    10. '[val' → logprob: -6.720153331756592

Token 120: ' convertir' (ID: 79223)
  Prédit: ' convertir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' convertir' → logprob: -0.10297119617462158
    2. ' créer' → logprob: -2.602971076965332
    3. ' time' → logprob: -5.602971076965332
    4. ' stock' → logprob: -5.727971076965332
    5. ' transformer' → logprob: -6.102971076965332
    6. ' récupérer' → logprob: -6.102971076965332
    7. 'r' → logprob: -6.352971076965332
    8. 'convert' → logprob: -6.602971076965332
    9. ' ' → logprob: -6.852971076965332
    10. ' convert' → logprob: -6.977971076965332

Token 121: ' chaque' (ID: 21194)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.31651291251182556
    2. ' [' → logprob: -1.941512942314148
    3. ' ' → logprob: -2.5665128231048584
    4. '[int' → logprob: -3.4415128231048584
    5. ' la' → logprob: -4.3165130615234375
    6. 'int' → logprob: -7.1915130615234375
    7. ' l' → logprob: -7.3165130615234375
    8. ' list' → logprob: -7.6915130615234375
    9. 'list' → logprob: -7.8165130615234375
    10. ' les' → logprob: -8.066513061523438

Token 122: ' sous' (ID: 14487)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.5586410164833069
    2. ' élément' → logprob: -1.308640956878662
    3. 'int' → logprob: -2.308640956878662
    4. ' int' → logprob: -3.933640956878662
    5. ' element' → logprob: -4.183640956878662
    6. ' valeur' → logprob: -4.933640956878662
    7. 'val' → logprob: -5.558640956878662
    8. 'element' → logprob: -5.808640956878662
    9. ' entier' → logprob: -6.058640956878662
    10. ' elem' → logprob: -7.058640956878662

Token 123: '-cha' (ID: 163177)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6254904270172119
    2. 'ent' → logprob: -2.375490427017212
    3. 'val' → logprob: -2.750490427017212
    4. '-' → logprob: -2.875490427017212
    5. '_ent' → logprob: -2.875490427017212
    6. '=' → logprob: -3.625490427017212
    7. '_val' → logprob: -4.000490188598633
    8. '[:]' → logprob: -4.125490188598633
    9. 'int' → logprob: -4.250490188598633
    10. '=int' → logprob: -4.625490188598633

Token 124: 'îne' (ID: 55188)
  Prédit: 'îne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'îne' → logprob: -0.0047918036580085754
    2. 'î' → logprob: -5.504791736602783
    3. 'ine' → logprob: -8.379792213439941
    4. 'ïne' → logprob: -8.504792213439941
    5. 'ne' → logprob: -9.504792213439941
    6. 'îner' → logprob: -9.629792213439941
    7. 'în' → logprob: -10.379792213439941
    8. 'înes' → logprob: -10.504792213439941
    9. 'r' → logprob: -11.004792213439941
    10. 'íne' → logprob: -11.254792213439941

Token 125: ' en' (ID: 469)
  Prédit: ' en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.02561718225479126
    2. ' ' → logprob: -4.6506171226501465
    3. 'en' → logprob: -4.6506171226501465
    4. '[' → logprob: -6.2756171226501465
    5. ' in' → logprob: -6.5256171226501465
    6. ' into' → logprob: -7.6506171226501465
    7. '[int' → logprob: -7.6506171226501465
    8. ')' → logprob: -7.9006171226501465
    9. 'int' → logprob: -8.525617599487305
    10. '(' → logprob: -8.525617599487305

Token 126: ' entier' (ID: 80473)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.20599696040153503
    2. 'int' → logprob: -1.9559969902038574
    3. ' un' → logprob: -3.3309969902038574
    4. ' entier' → logprob: -5.455996990203857
    5. 'ent' → logprob: -6.205996990203857
    6. ' des' → logprob: -6.830996990203857
    7. ' ' → logprob: -7.080996990203857
    8. ' integer' → logprob: -8.0809965133667
    9. ' ent' → logprob: -8.5809965133667
    10. ' une' → logprob: -9.2059965133667

Token 127: ' en' (ID: 469)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.09062401950359344
    2. 's' → logprob: -3.0906240940093994
    3. ']' → logprob: -4.34062385559082
    4. '[
' → logprob: -5.21562385559082
    5. ',' → logprob: -5.59062385559082
    6. 'temps' → logprob: -5.59062385559082
    7. 'times' → logprob: -6.09062385559082
    8. 'time' → logprob: -6.21562385559082
    9. ')' → logprob: -6.46562385559082
    10. ':' → logprob: -6.46562385559082

Token 128: ' utilisant' (ID: 92474)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.7601069211959839
    2. 's' → logprob: -1.8851069211959839
    3. ' ' → logprob: -2.3851070404052734
    4. '[' → logprob: -2.7601070404052734
    5. ' t' → logprob: -2.7601070404052734
    6. '_' → logprob: -3.0101070404052734
    7. ' [' → logprob: -3.8851070404052734
    8. 'te' → logprob: -4.510107040405273
    9. ' time' → logprob: -5.260107040405273
    10. ' suivant' → logprob: -5.260107040405273

Token 129: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.19806165993213654
    2. 'int' → logprob: -2.44806170463562
    3. ' la' → logprob: -2.69806170463562
    4. ' ' → logprob: -4.198061466217041
    5. ' list' → logprob: -5.698061466217041
    6. '[int' → logprob: -6.198061466217041
    7. ' l' → logprob: -6.448061466217041
    8. ' map' → logprob: -7.198061466217041
    9. 'list' → logprob: -7.823061466217041
    10. '[' → logprob: -7.948061466217041

Token 130: '().
' (ID: 58434)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.142322838306427
    2. '()' → logprob: -3.1423227787017822
    3. 's' → logprob: -3.2673227787017822
    4. '(time' → logprob: -3.8923227787017822
    5. '[' → logprob: -4.267323017120361
    6. '([' → logprob: -5.517323017120361
    7. '(values' → logprob: -5.892323017120361
    8. '(s' → logprob: -6.642323017120361
    9. ']' → logprob: -6.892323017120361
    10. 'time' → logprob: -7.392323017120361

Token 131: '#' (ID: 2)
  Prédit: 'sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sequence' → logprob: -0.2308288961648941
    2. 'values' → logprob: -2.3558290004730225
    3. 'times' → logprob: -3.3558290004730225
    4. ' sequence' → logprob: -4.105828762054443
    5. 'time' → logprob: -4.355828762054443
    6. 'seq' → logprob: -4.605828762054443
    7. 'numbers' → logprob: -4.855828762054443
    8. 'data' → logprob: -5.230828762054443
    9. 's' → logprob: -5.230828762054443
    10. 'temps' → logprob: -5.605828762054443

Token 132: ' Stock' (ID: 16382)
  Prédit: 'sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sequence' → logprob: -0.6921876072883606
    2. 'values' → logprob: -1.0671875476837158
    3. ' sequence' → logprob: -3.442187547683716
    4. 'times' → logprob: -3.442187547683716
    5. 'numbers' → logprob: -3.942187547683716
    6. 'seq' → logprob: -4.067187786102295
    7. ' values' → logprob: -4.442187786102295
    8. 'arr' → logprob: -5.192187786102295
    9. 'time' → logprob: -5.192187786102295
    10. 'data' → logprob: -5.317187786102295

Token 133: 'e' (ID: 68)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7443990707397461
    2. 'age' → logprob: -1.369399070739746
    3. ' =' → logprob: -1.744399070739746
    4. '=[]' → logprob: -3.744399070739746
    5. 'e' → logprob: -3.869399070739746
    6. 'ages' → logprob: -4.119399070739746
    7. '=[]
' → logprob: -5.494399070739746
    8. 'eg' → logprob: -5.494399070739746
    9. '[]' → logprob: -6.119399070739746
    10. 'range' → logprob: -6.119399070739746

Token 134: ' la' (ID: 557)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2862493097782135
    2. ' la' → logprob: -2.9112493991851807
    3. '_' → logprob: -3.2862493991851807
    4. '[' → logprob: -3.2862493991851807
    5. ' ' → logprob: -3.2862493991851807
    6. 's' → logprob: -3.6612493991851807
    7. '()' → logprob: -4.161249160766602
    8. ' (' → logprob: -4.661249160766602
    9. 'time' → logprob: -5.036249160766602
    10. ' les' → logprob: -5.661249160766602

Token 135: ' liste' (ID: 31719)
  Prédit: ' sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sequence' → logprob: -1.2275863885879517
    2. 's' → logprob: -2.352586269378662
    3. ' ' → logprob: -2.352586269378662
    4. '[' → logprob: -2.477586269378662
    5. ' liste' → logprob: -2.977586269378662
    6. ' lst' → logprob: -3.227586269378662
    7. 'sequence' → logprob: -3.352586269378662
    8. 'temps' → logprob: -3.602586269378662
    9. ' result' → logprob: -3.727586269378662
    10. ' list' → logprob: -3.727586269378662

Token 136: ' des' (ID: 731)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.14389528334140778
    2. '[' → logprob: -2.643895387649536
    3. '_' → logprob: -3.393895387649536
    4. ' des' → logprob: -4.518895149230957
    5. 's' → logprob: -4.768895149230957
    6. ' (' → logprob: -5.768895149230957
    7. 'des' → logprob: -6.518895149230957
    8. '_des' → logprob: -6.893895149230957
    9. '([' → logprob: -7.143895149230957
    10. '_time' → logprob: -8.018895149230957

Token 137: ' ent' (ID: 1121)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.23697710037231445
    2. ' valeurs' → logprob: -2.4869771003723145
    3. ' values' → logprob: -3.7369771003723145
    4. ' numbers' → logprob: -4.1119771003723145
    5. ' time' → logprob: -4.1119771003723145
    6. ' val' → logprob: -4.6119771003723145
    7. 'val' → logprob: -4.7369771003723145
    8. ' elements' → logprob: -4.8619771003723145
    9. 'values' → logprob: -5.1119771003723145
    10. ' integers' → logprob: -5.2369771003723145

Token 138: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.0013927347026765347
    2. 'ières' → logprob: -7.001392841339111
    3. 'i' → logprob: -7.876392841339111
    4. 'ier' → logprob: -9.626392364501953
    5. 'ers' → logprob: -11.126392364501953
    6. 'er' → logprob: -11.626392364501953
    7. 'ière' → logprob: -12.376392364501953
    8. 'ités' → logprob: -12.751392364501953
    9. 'ié' → logprob: -13.126392364501953
    10. 'ieres' → logprob: -14.126392364501953

Token 139: ' dans' (ID: 2671)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.20144569873809814
    2. 's' → logprob: -2.4514455795288086
    3. 'time' → logprob: -4.451445579528809
    4. 'times' → logprob: -4.576445579528809
    5. '_' → logprob: -4.701445579528809
    6. '[' → logprob: -4.701445579528809
    7. 'temps' → logprob: -4.826445579528809
    8. 'values' → logprob: -4.826445579528809
    9. 'sequence' → logprob: -5.076445579528809
    10. '()' → logprob: -5.201445579528809

Token 140: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.7643829584121704
    2. ' time' → logprob: -1.2643829584121704
    3. ' times' → logprob: -2.389382839202881
    4. ' sequence' → logprob: -2.764382839202881
    5. ' ' → logprob: -3.639382839202881
    6. 'sequence' → logprob: -4.639382839202881
    7. ' lst' → logprob: -4.639382839202881
    8. 'time' → logprob: -4.889382839202881
    9. ' values' → logprob: -4.889382839202881
    10. ' l' → logprob: -5.389382839202881

Token 141: ' variable' (ID: 11076)
  Prédit: 'sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sequence' → logprob: -0.21558621525764465
    2. ' sequence' → logprob: -3.2155861854553223
    3. 'values' → logprob: -3.7155861854553223
    4. 'list' → logprob: -3.9655861854553223
    5. 'times' → logprob: -3.9655861854553223
    6. 'lst' → logprob: -4.215586185455322
    7. 'variable' → logprob: -4.340586185455322
    8. 'liste' → logprob: -4.840586185455322
    9. 'data' → logprob: -4.965586185455322
    10. 'seq' → logprob: -5.215586185455322

Token 142: ' '' (ID: 461)
  Prédit: ' sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sequence' → logprob: -0.5167679190635681
    2. ' values' → logprob: -1.641767978668213
    3. ' data' → logprob: -2.891767978668213
    4. ' lst' → logprob: -3.016767978668213
    5. 'sequence' → logprob: -4.016767978668213
    6. ' sequences' → logprob: -4.016767978668213
    7. ' s' → logprob: -4.766767978668213
    8. 's' → logprob: -4.891767978668213
    9. ' seq' → logprob: -4.891767978668213
    10. ' numbers' → logprob: -5.016767978668213

Token 143: 'nums' (ID: 44465)
  Prédit: 'sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sequence' → logprob: -0.70014888048172
    2. 'values' → logprob: -1.3251488208770752
    3. ' sequence' → logprob: -2.575148820877075
    4. 'numbers' → logprob: -3.200148820877075
    5. 'seq' → logprob: -3.950148820877075
    6. 'time' → logprob: -4.325149059295654
    7. ' values' → logprob: -4.325149059295654
    8. 'data' → logprob: -4.450149059295654
    9. 'arr' → logprob: -4.575149059295654
    10. 'elements' → logprob: -4.700149059295654

Token 144: ''.
' (ID: 49980)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.024086179211735725
    2. '')' → logprob: -3.8990862369537354
    3. ' )' → logprob: -6.774085998535156
    4. 's' → logprob: -7.274085998535156
    5. '[]' → logprob: -7.899085998535156
    6. ''' → logprob: -8.399085998535156
    7. '[' → logprob: -8.524085998535156
    8. ' =' → logprob: -8.649085998535156
    9. 'es' → logprob: -9.024085998535156
    10. '_' → logprob: -9.149085998535156

Token 145: 'nums' (ID: 44465)
  Prédit: 'nums'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nums' → logprob: -0.0006420228746719658
    2. ' nums' → logprob: -7.500641822814941
    3. 'numbers' → logprob: -9.750641822814941
    4. 'num' → logprob: -11.375641822814941
    5. '(nums' → logprob: -12.000641822814941
    6. 'n' → logprob: -12.750641822814941
    7. 's' → logprob: -13.250641822814941
    8. '_nums' → logprob: -13.375641822814941
    9. '[' → logprob: -13.625641822814941
    10. 'temps' → logprob: -14.250641822814941

Token 146: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10022338479757309
    2. '=' → logprob: -2.3502233028411865
    3. '[' → logprob: -12.475223541259766
    4. ',' → logprob: -12.600223541259766
    5. ' =[' → logprob: -12.600223541259766
    6. 's' → logprob: -13.725223541259766
    7. '=[]' → logprob: -14.225223541259766
    8. '=[' → logprob: -14.225223541259766
    9. '[:]' → logprob: -14.350223541259766
    10. '.' → logprob: -14.475223541259766

Token 147: ' [' (ID: 723)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.8778604865074158
    2. ' [' → logprob: -1.5028605461120605
    3. 'list' → logprob: -1.8778605461120605
    4. '[list' → logprob: -2.0028605461120605
    5. '[int' → logprob: -3.0028605461120605
    6. '[' → logprob: -3.7528605461120605
    7. '[input' → logprob: -7.8778605461120605
    8. '[i' → logprob: -9.502860069274902
    9. '[List' → logprob: -9.502860069274902
    10. '[l' → logprob: -9.752860069274902

Token 148: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0002636006975080818
    2. ' int' → logprob: -8.250263214111328
    3. 'time' → logprob: -13.875263214111328
    4. ']int' → logprob: -15.000263214111328
    5. '<int' → logprob: -15.625263214111328
    6. 'i' → logprob: -16.000263214111328
    7. '[int' → logprob: -16.125263214111328
    8. '(int' → logprob: -16.125263214111328
    9. '```' → logprob: -16.250263214111328
    10. '   ' → logprob: -16.500263214111328

Token 149: '(i' (ID: 3649)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.044548675417900085
    2. '(' → logprob: -3.919548749923706
    3. '(i' → logprob: -4.044548511505127
    4. '(input' → logprob: -5.294548511505127
    5. '(s' → logprob: -6.919548511505127
    6. '(value' → logprob: -9.294548988342285
    7. ' (' → logprob: -10.419548988342285
    8. '(num' → logprob: -10.419548988342285
    9. '(n' → logprob: -11.669548988342285
    10. '(token' → logprob: -11.794548988342285

Token 150: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00018411019118502736
    2. ' )' → logprob: -9.125184059143066
    3. 'for' → logprob: -10.375184059143066
    4. '(input' → logprob: -10.875184059143066
    5. '()' → logprob: -11.750184059143066
    6. 'input' → logprob: -12.000184059143066
    7. '())' → logprob: -12.250184059143066
    8. ' for' → logprob: -12.750184059143066
    9. '(' → logprob: -13.250184059143066
    10. 'in' → logprob: -14.625184059143066

Token 151: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.16024544835090637
    2. 'for' → logprob: -1.910245418548584
    3. ')' → logprob: -11.035245895385742
    4. ' f' → logprob: -13.410245895385742
    5. ' ' → logprob: -14.035245895385742
    6. ' in' → logprob: -14.410245895385742
    7. 'input' → logprob: -14.785245895385742
    8. ' input' → logprob: -14.910245895385742
    9. '	for' → logprob: -15.160245895385742
    10. 'pour' → logprob: -15.160245895385742

Token 152: ' i' (ID: 575)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.0751391351222992
    2. ' ' → logprob: -2.700139045715332
    3. 'input' → logprob: -5.825139045715332
    4. ' i' → logprob: -6.450139045715332
    5. ' in' → logprob: -8.200139045715332
    6. '  ' → logprob: -8.950139045715332
    7. ' s' → logprob: -9.575139045715332
    8. ' inp' → logprob: -10.325139045715332
    9. ' x' → logprob: -10.700139045715332
    10. ' user' → logprob: -10.700139045715332

Token 153: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005941359326243401
    2. 'in' → logprob: -5.255941390991211
    3. 'input' → logprob: -7.880941390991211
    4. ' input' → logprob: -8.130941390991211
    5. ' ' → logprob: -10.505941390991211
    6. '=input' → logprob: -13.005941390991211
    7. 'range' → logprob: -13.755941390991211
    8. 's' → logprob: -13.880941390991211
    9. '(input' → logprob: -14.005941390991211
    10. ' range' → logprob: -14.380941390991211

Token 154: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.1602717489004135
    2. ' input' → logprob: -1.9102717638015747
    3. '(input' → logprob: -10.285271644592285
    4. ' ' → logprob: -12.160271644592285
    5. '=input' → logprob: -13.410271644592285
    6. 'range' → logprob: -13.785271644592285
    7. '<input' → logprob: -14.035271644592285
    8. '[input' → logprob: -14.160271644592285
    9. '  ' → logprob: -14.472771644592285
    10. '	input' → logprob: -14.472771644592285

Token 155: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -8.542423165636137e-05
    2. '()' → logprob: -9.500085830688477
    3. ' ().' → logprob: -11.500085830688477
    4. '(' → logprob: -15.125085830688477
    5. '()].' → logprob: -17.375085830688477
    6. '()]' → logprob: -17.750085830688477
    7. ' ()' → logprob: -17.875085830688477
    8. '.split' → logprob: -19.125085830688477
    9. '())' → logprob: -19.500085830688477
    10. '("' → logprob: -20.250085830688477

Token 156: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.005237906239926815
    2. 'strip' → logprob: -5.255238056182861
    3. 'rstrip' → logprob: -13.005237579345703
    4. ' split' → logprob: -13.380237579345703
    5. '(split' → logprob: -15.505237579345703
    6. 'spl' → logprob: -15.755237579345703
    7. 'plit' → logprob: -17.130237579345703
    8. '.split' → logprob: -17.505237579345703
    9. ' strip' → logprob: -18.255237579345703
    10. '```' → logprob: -18.505237579345703

Token 157: '()' (ID: 416)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.016334054991602898
    2. '()' → logprob: -4.266334056854248
    3. '())' → logprob: -6.266334056854248
    4. '(' → logprob: -8.26633358001709
    5. '('' → logprob: -12.51633358001709
    6. '()]
' → logprob: -13.51633358001709
    7. ' ()' → logprob: -13.51633358001709
    8. ')]' → logprob: -14.01633358001709
    9. '()].' → logprob: -14.01633358001709
    10. '()][' → logprob: -14.14133358001709

Token 158: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0627150759100914
    2. '()]' → logprob: -2.8127150535583496
    3. ')]' → logprob: -7.81271505355835
    4. ' ]' → logprob: -8.062715530395508
    5. '()' → logprob: -11.312715530395508
    6. ')' → logprob: -12.312715530395508
    7. '(' → logprob: -12.437715530395508
    8. '])' → logprob: -12.687715530395508
    9. ']()' → logprob: -13.437715530395508
    10. '[:' → logprob: -14.687715530395508

Token 159: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6449375152587891
    2. '
' → logprob: -1.144937515258789
    3. '<|end|>' → logprob: -3.019937515258789
    4. ' ' → logprob: -3.394937515258789
    5. ' 
' → logprob: -3.894937515258789
    6. 'if' → logprob: -4.269937515258789
    7. '[' → logprob: -4.644937515258789
    8. ' if' → logprob: -5.144937515258789
    9. '  
' → logprob: -5.394937515258789
    10. '.' → logprob: -5.519937515258789

Token 160: ' Initialise' (ID: 179601)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -1.4381189346313477
    2. 'i' → logprob: -1.9381189346313477
    3. 's' → logprob: -1.9381189346313477
    4. '#' → logprob: -2.0631189346313477
    5. 'max' → logprob: -2.1881189346313477
    6. 'for' → logprob: -2.4381189346313477
    7. 'if' → logprob: -2.8131189346313477
    8. 'm' → logprob: -3.6881189346313477
    9. 'result' → logprob: -3.8131189346313477
    10. 'r' → logprob: -4.563118934631348

Token 161: ' un' (ID: 537)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.40505918860435486
    2. ' result' → logprob: -1.9050592184066772
    3. ' total' → logprob: -2.7800590991973877
    4. 'max' → logprob: -3.1550590991973877
    5. 'result' → logprob: -4.030059337615967
    6. ' a' → logprob: -4.280059337615967
    7. ' sum' → logprob: -4.280059337615967
    8. 'total' → logprob: -5.030059337615967
    9. ' min' → logprob: -5.280059337615967
    10. 'sum' → logprob: -5.655059337615967

Token 162: ' compteur' (ID: 163344)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -1.6460285186767578
    2. 'max' → logprob: -1.6460285186767578
    3. 'result' → logprob: -1.7710285186767578
    4. 's' → logprob: -2.396028518676758
    5. 'd' → logprob: -2.521028518676758
    6. 'count' → logprob: -2.896028518676758
    7. ' result' → logprob: -3.021028518676758
    8. 'total' → logprob: -3.521028518676758
    9. 'counter' → logprob: -4.021028518676758
    10. ' compteur' → logprob: -4.146028518676758

Token 163: ' pour' (ID: 1930)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8759295344352722
    2. ' ' → logprob: -1.000929594039917
    3. '=' → logprob: -1.750929594039917
    4. 'count' → logprob: -4.375929355621338
    5. 's' → logprob: -4.500929355621338
    6. '_' → logprob: -5.125929355621338
    7. ' count' → logprob: -6.375929355621338
    8. 'total' → logprob: -6.750929355621338
    9. 'i' → logprob: -7.125929355621338
    10. ' total' → logprob: -7.375929355621338

Token 164: ' le' (ID: 505)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.2933639883995056
    2. 'i' → logprob: -2.5433640480041504
    3. ' count' → logprob: -3.5433640480041504
    4. ' i' → logprob: -3.5433640480041504
    5. ' compter' → logprob: -3.5433640480041504
    6. ' le' → logprob: -3.6683640480041504
    7. 'comp' → logprob: -4.54336404800415
    8. 'le' → logprob: -5.16836404800415
    9. 'val' → logprob: -5.29336404800415
    10. ' counting' → logprob: -5.54336404800415

Token 165: ' nombre' (ID: 9733)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.9807478189468384
    2. 'count' → logprob: -1.7307478189468384
    3. 's' → logprob: -2.230747699737549
    4. 'comp' → logprob: -2.730747699737549
    5. 'total' → logprob: -2.980747699737549
    6. ' nombre' → logprob: -3.480747699737549
    7. 'max' → logprob: -3.605747699737549
    8. 'maximum' → logprob: -3.730747699737549
    9. 'result' → logprob: -3.855747699737549
    10. 'sum' → logprob: -3.980747699737549

Token 166: ' de' (ID: 334)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.9518746137619019
    2. ' d' → logprob: -1.2018746137619019
    3. 'de' → logprob: -2.0768747329711914
    4. ' de' → logprob: -2.5768747329711914
    5. 's' → logprob: -2.8268747329711914
    6. '<|end|>' → logprob: -3.9518747329711914
    7. ' ' → logprob: -4.201874732971191
    8. ' of' → logprob: -5.576874732971191
    9. '_' → logprob: -5.951874732971191
    10. 'total' → logprob: -6.326874732971191

Token 167: ' nombres' (ID: 76205)
  Prédit: ' trip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' trip' → logprob: -1.4160548448562622
    2. 's' → logprob: -2.1660547256469727
    3. 'pairs' → logprob: -2.2910547256469727
    4. ' pairs' → logprob: -2.4160547256469727
    5. 'trip' → logprob: -2.5410547256469727
    6. '0' → logprob: -2.7910547256469727
    7. 'pal' → logprob: -3.4160547256469727
    8. ' ' → logprob: -3.9160547256469727
    9. ' nombres' → logprob: -4.041054725646973
    10. ' zeros' → logprob: -4.166054725646973

Token 168: ' imp' (ID: 3282)
  Prédit: '_pairs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_pairs' → logprob: -0.7500746846199036
    2. '_' → logprob: -1.6250746250152588
    3. '_pair' → logprob: -2.500074625015259
    4. ' pairs' → logprob: -2.875074625015259
    5. 's' → logprob: -3.125074625015259
    6. 'pairs' → logprob: -3.250074625015259
    7. 'pair' → logprob: -4.250074863433838
    8. '_p' → logprob: -4.375074863433838
    9. ' pair' → logprob: -4.500074863433838
    10. '<|end|>' → logprob: -4.625074863433838

Token 169: 'airs' (ID: 6498)
  Prédit: 'airs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'airs' → logprob: -0.0048187305219471455
    2. 'air' → logprob: -5.379818916320801
    3. 'ar' → logprob: -9.1298189163208
    4. 'aires' → logprob: -10.5048189163208
    5. 'a' → logprob: -11.0048189163208
    6. 'r' → logprob: -11.3798189163208
    7. 'aire' → logprob: -11.6298189163208
    8. 'pairs' → logprob: -11.6298189163208
    9. 'aris' → logprob: -12.1298189163208
    10. 'ars' → logprob: -13.2548189163208

Token 170: ' rencontr' (ID: 49751)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.08744344860315323
    2. ' ' → logprob: -3.3374433517456055
    3. ' odd' → logprob: -4.5874433517456055
    4. 'i' → logprob: -4.7124433517456055
    5. 'odd' → logprob: -5.0874433517456055
    6. ' _' → logprob: -5.2124433517456055
    7. ' i' → logprob: -5.5874433517456055
    8. 'o' → logprob: -5.9624433517456055
    9. 'count' → logprob: -6.0874433517456055
    10. 's' → logprob: -6.7124433517456055

Token 171: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.002913884585723281
    2. 'é' → logprob: -6.252913951873779
    3. 's' → logprob: -7.252913951873779
    4. 'es' → logprob: -9.252913475036621
    5. 'e' → logprob: -10.127913475036621
    6. 'ant' → logprob: -11.002913475036621
    7. 'u' → logprob: -11.002913475036621
    8. ' encountered' → logprob: -11.002913475036621
    9. 'ées' → logprob: -11.252913475036621
    10. 'er' → logprob: -11.377913475036621

Token 172: ' dans' (ID: 2671)
  Prédit: 'odd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'odd' → logprob: -0.6487661600112915
    2. 'count' → logprob: -1.0237661600112915
    3. ' odd' → logprob: -2.398766040802002
    4. ' count' → logprob: -3.898766040802002
    5. 'counter' → logprob: -6.148766040802002
    6. 'imp' → logprob: -7.148766040802002
    7. '_' → logprob: -7.898766040802002
    8. ' counter' → logprob: -7.898766040802002
    9. 'im' → logprob: -8.02376651763916
    10. 'cnt' → logprob: -8.02376651763916

Token 173: ' la' (ID: 557)
  Prédit: ' nums'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nums' → logprob: -0.6353664398193359
    2. ' la' → logprob: -1.135366439819336
    3. 'nums' → logprob: -2.010366439819336
    4. ' ' → logprob: -5.135366439819336
    5. 'la' → logprob: -5.885366439819336
    6. '(nums' → logprob: -6.385366439819336
    7. ' ' → logprob: -6.635366439819336
    8. ' les' → logprob: -7.135366439819336
    9. ' the' → logprob: -7.260366439819336
    10. ' le' → logprob: -7.385366439819336

Token 174: ' sé' (ID: 7462)
  Prédit: 'nums'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nums' → logprob: -0.07509591430425644
    2. ' nums' → logprob: -3.7000958919525146
    3. ' sequence' → logprob: -3.8250958919525146
    4. 'sequence' → logprob: -3.8250958919525146
    5. 's' → logprob: -6.950096130371094
    6. 'range' → logprob: -7.200096130371094
    7. 'liste' → logprob: -7.575096130371094
    8. ' range' → logprob: -8.200096130371094
    9. 'seq' → logprob: -8.325096130371094
    10. ' liste' → logprob: -8.325096130371094

Token 175: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -0.0004017137107439339
    2. 'q' → logprob: -8.625401496887207
    3. '`' → logprob: -10.625401496887207
    4. '#' → logprob: -10.625401496887207
    5. 'rie' → logprob: -10.625401496887207
    6. 'ance' → logprob: -10.625401496887207
    7. 'quences' → logprob: -10.875401496887207
    8. 'que' → logprob: -11.125401496887207
    9. 'QUENCE' → logprob: -11.125401496887207
    10. 'ence' → logprob: -11.375401496887207

Token 176: '.' (ID: 13)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.4403615891933441
    2. 'odd' → logprob: -1.1903616189956665
    3. ' count' → logprob: -3.815361499786377
    4. ' odd' → logprob: -3.940361499786377
    5. 'counter' → logprob: -5.315361499786377
    6. 'cnt' → logprob: -5.940361499786377
    7. 'imp' → logprob: -7.440361499786377
    8. 'od' → logprob: -7.565361499786377
    9. ' counter' → logprob: -8.065361976623535
    10. 'n' → logprob: -8.190361976623535

Token 177: ' Comm' (ID: 57464)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.1193181723356247
    2. 'odd' → logprob: -2.3693182468414307
    3. 'counter' → logprob: -4.494318008422852
    4. ' count' → logprob: -5.244318008422852
    5. ' odd' → logprob: -6.619318008422852
    6. 'cnt' → logprob: -7.244318008422852
    7. ' counter' → logprob: -8.869318008422852
    8. 'od' → logprob: -9.369318008422852
    9. '
' → logprob: -9.994318008422852
    10. 'imp' → logprob: -10.869318008422852

Token 178: 'ence' (ID: 1082)
  Prédit: 'ence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ence' → logprob: -0.4396425187587738
    2. 'ent' → logprob: -1.0646425485610962
    3. 'e' → logprob: -5.314642429351807
    4. 'encé' → logprob: -6.314642429351807
    5. 'enç' → logprob: -6.439642429351807
    6. 'ente' → logprob: -6.939642429351807
    7. 'encer' → logprob: -7.814642429351807
    8. 'en' → logprob: -8.064642906188965
    9. 'encent' → logprob: -9.064642906188965
    10. 'er' → logprob: -9.189642906188965

Token 179: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.40039998292922974
    2. ' =' → logprob: -2.025399923324585
    3. ' ' → logprob: -2.275399923324585
    4. '=' → logprob: -2.900399923324585
    5. ' par' → logprob: -4.400400161743164
    6. ' a' → logprob: -4.525400161743164
    7. 'e' → logprob: -5.025400161743164
    8. ' at' → logprob: -5.525400161743164
    9. 'à' → logprob: -6.775400161743164
    10. '_' → logprob: -6.775400161743164

Token 180: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.043076951056718826
    2. ' ' → logprob: -3.168076992034912
    3. 'z' → logprob: -10.293076515197754
    4. ' z' → logprob: -10.418076515197754
    5. ' zéro' → logprob: -12.168076515197754
    6. '1' → logprob: -12.293076515197754
    7. ' zero' → logprob: -13.168076515197754
    8. 'zero' → logprob: -14.293076515197754
    9. '```' → logprob: -15.043076515197754
    10. ' ' → logprob: -15.418076515197754

Token 181: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00020139472326263785
    2. 'z' → logprob: -8.750201225280762
    3. 'zero' → logprob: -10.875201225280762
    4. ' ' → logprob: -10.875201225280762
    5. '1' → logprob: -12.625201225280762
    6. ' zéro' → logprob: -13.875201225280762
    7. '```' → logprob: -15.125201225280762
    8. ' z' → logprob: -15.875201225280762
    9. ' zero' → logprob: -16.500202178955078
    10. '-' → logprob: -17.250202178955078

Token 182: '.
' (ID: 558)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.7460265755653381
    2. 'odd' → logprob: -1.4960265159606934
    3. 'i' → logprob: -1.9960265159606934
    4. 'c' → logprob: -2.4960265159606934
    5. 'counter' → logprob: -3.7460265159606934
    6. 'n' → logprob: -4.621026515960693
    7. 's' → logprob: -4.871026515960693
    8. 'imp' → logprob: -5.121026515960693
    9. '_' → logprob: -5.246026515960693
    10. 'o' → logprob: -5.371026515960693

Token 183: 'odd' (ID: 18303)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.30127280950546265
    2. 'odd' → logprob: -1.4262728691101074
    3. 'counter' → logprob: -4.426272869110107
    4. 'cnt' → logprob: -5.301272869110107
    5. ' count' → logprob: -6.551272869110107
    6. ' odd' → logprob: -7.176272869110107
    7. 'od' → logprob: -8.42627239227295
    8. '```' → logprob: -8.92627239227295
    9. 'imp' → logprob: -9.30127239227295
    10. 'c' → logprob: -9.55127239227295

Token 184: ' =' (ID: 314)
  Prédit: '_count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.01086176186800003
    2. 's' → logprob: -5.260861873626709
    3. '_' → logprob: -5.385861873626709
    4. '_counter' → logprob: -7.260861873626709
    5. '_counts' → logprob: -8.63586139678955
    6. '_cnt' → logprob: -9.63586139678955
    7. ' =' → logprob: -10.88586139678955
    8. '_c' → logprob: -11.26086139678955
    9. 'count' → logprob: -11.51086139678955
    10. '_sum' → logprob: -11.51086139678955

Token 185: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6931514739990234
    2. ' ' → logprob: -0.6931514739990234
    3. ' ' → logprob: -12.443151473999023
    4. '1' → logprob: -16.318151473999023
    5. '  ' → logprob: -17.193151473999023
    6. 's' → logprob: -17.505651473999023
    7. '۰' → logprob: -17.630651473999023
    8. ' 
' → logprob: -17.880651473999023
    9. ' ' → logprob: -18.630651473999023
    10. '	' → logprob: -18.755651473999023

Token 186: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001234428636962548
    2. ' ' → logprob: -9.000123023986816
    3. ' ' → logprob: -17.375123977661133
    4. '۰' → logprob: -17.937623977661133
    5. '０' → logprob: -18.625123977661133
    6. 'int' → logprob: -18.750123977661133
    7. '1' → logprob: -19.312623977661133
    8. '```' → logprob: -19.375123977661133
    9. '  ' → logprob: -19.437623977661133
    10. '`' → logprob: -19.750123977661133

Token 187: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.01575208082795143
    2. 'for' → logprob: -4.76575231552124
    3. ' for' → logprob: -5.14075231552124
    4. '<|end|>' → logprob: -7.51575231552124
    5. '
' → logprob: -8.390751838684082
    6. ' 
' → logprob: -8.515751838684082
    7. '\n' → logprob: -8.890751838684082
    8. '

' → logprob: -9.515751838684082
    9. '' → logprob: -10.640751838684082
    10. ' ' → logprob: -10.765751838684082

Token 188: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0017810913268476725
    2. '
' → logprob: -6.376780986785889
    3. ' for' → logprob: -9.501781463623047
    4. 'f' → logprob: -13.751781463623047
    5. 'if' → logprob: -14.376781463623047
    6. '' → logprob: -14.501781463623047
    7. '\n' → logprob: -14.751781463623047
    8. '
' → logprob: -15.126781463623047
    9. 'fo' → logprob: -15.251781463623047
    10. 'i' → logprob: -15.251781463623047

Token 189: ' Initialise' (ID: 179601)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -4.274932143744081e-05
    2. ' for' → logprob: -10.125042915344238
    3. 'fo' → logprob: -13.750042915344238
    4. 'i' → logprob: -14.375042915344238
    5. 'f' → logprob: -15.250042915344238
    6. '
' → logprob: -15.625042915344238
    7. 'if' → logprob: -15.750042915344238
    8. 'pour' → logprob: -16.125041961669922
    9. '#' → logprob: -17.250041961669922
    10. 'For' → logprob: -17.500041961669922

Token 190: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.3501220643520355
    2. ' une' → logprob: -1.475122094154358
    3. ' ' → logprob: -3.7251219749450684
    4. ' a' → logprob: -3.9751219749450684
    5. ' la' → logprob: -4.850121974945068
    6. ' le' → logprob: -5.850121974945068
    7. ' ' → logprob: -5.850121974945068
    8. ' i' → logprob: -6.225121974945068
    9. ' even' → logprob: -6.725121974945068
    10. 'un' → logprob: -6.850121974945068

Token 191: ' compteur' (ID: 163344)
  Prédit: 'counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'counter' → logprob: -0.8222334980964661
    2. ' compteur' → logprob: -1.8222334384918213
    3. 'for' → logprob: -2.3222334384918213
    4. ' counter' → logprob: -2.4472334384918213
    5. 'even' → logprob: -2.9472334384918213
    6. ' for' → logprob: -3.0722334384918213
    7. ' ' → logprob: -3.3222334384918213
    8. ' even' → logprob: -4.1972336769104
    9. 'count' → logprob: -4.3222336769104
    10. 'total' → logprob: -4.8222336769104

Token 192: ' pour' (ID: 1930)
  Prédit: 'pour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pour' → logprob: -0.8097782731056213
    2. ' pour' → logprob: -1.0597782135009766
    3. 'for' → logprob: -1.8097782135009766
    4. ' for' → logprob: -3.5597782135009766
    5. ' =' → logprob: -4.809778213500977
    6. '=' → logprob: -6.184778213500977
    7. 'de' → logprob: -6.434778213500977
    8. ' de' → logprob: -6.559778213500977
    9. '#' → logprob: -7.434778213500977
    10. 'd' → logprob: -7.559778213500977

Token 193: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.15754079818725586
    2. ' les' → logprob: -2.407540798187256
    3. ' la' → logprob: -4.157540798187256
    4. 'les' → logprob: -4.782540798187256
    5. ' ' → logprob: -4.907540798187256
    6. ' the' → logprob: -5.532540798187256
    7. 'le' → logprob: -5.532540798187256
    8. ' l' → logprob: -5.782540798187256
    9. 'even' → logprob: -5.907540798187256
    10. ' even' → logprob: -6.032540798187256

Token 194: ' nombre' (ID: 9733)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.2955160140991211
    2. ' nombre' → logprob: -1.420516014099121
    3. 's' → logprob: -5.670516014099121
    4. 'n' → logprob: -6.170516014099121
    5. 'number' → logprob: -6.170516014099121
    6. ' compteur' → logprob: -6.545516014099121
    7. ' number' → logprob: -6.670516014099121
    8. ' nombres' → logprob: -6.795516014099121
    9. 'total' → logprob: -8.170516014099121
    10. 'count' → logprob: -8.295516014099121

Token 195: ' de' (ID: 334)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -1.0031859874725342
    2. ' de' → logprob: -1.2531859874725342
    3. 'd' → logprob: -1.6281859874725342
    4. 'de' → logprob: -2.253185987472534
    5. ' of' → logprob: -5.003186225891113
    6. '_' → logprob: -5.003186225891113
    7. ' ' → logprob: -5.253186225891113
    8. 'des' → logprob: -5.378186225891113
    9. ' des' → logprob: -5.503186225891113
    10. '<|end|>' → logprob: -5.753186225891113

Token 196: ' nombres' (ID: 76205)
  Prédit: ' nombres'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombres' → logprob: -0.25376829504966736
    2. ' pairs' → logprob: -1.7537683248519897
    3. 'pairs' → logprob: -4.378768444061279
    4. ' numbers' → logprob: -5.128768444061279
    5. 'even' → logprob: -5.128768444061279
    6. ' even' → logprob: -5.503768444061279
    7. ' ' → logprob: -5.503768444061279
    8. 'numbers' → logprob: -5.753768444061279
    9. 'nombre' → logprob: -6.503768444061279
    10. ' pair' → logprob: -6.628768444061279

Token 197: ' pairs' (ID: 24702)
  Prédit: ' pairs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pairs' → logprob: -0.36061015725135803
    2. 'pairs' → logprob: -1.3606101274490356
    3. 'pair' → logprob: -3.735610246658325
    4. '_pairs' → logprob: -4.610610008239746
    5. ' pair' → logprob: -4.985610008239746
    6. ' p' → logprob: -6.235610008239746
    7. '_' → logprob: -6.985610008239746
    8. ' ' → logprob: -6.985610008239746
    9. 'p' → logprob: -7.235610008239746
    10. '_pair' → logprob: -8.360610008239746

Token 198: ' rencontr' (ID: 49751)
  Prédit: ' pairs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pairs' → logprob: -1.4405088424682617
    2. '<|end|>' → logprob: -1.4405088424682617
    3. ' ' → logprob: -1.8155088424682617
    4. 'even' → logprob: -1.9405088424682617
    5. ' =' → logprob: -2.5655088424682617
    6. 'pairs' → logprob: -3.1905088424682617
    7. ' even' → logprob: -3.3155088424682617
    8. '_even' → logprob: -3.9405088424682617
    9. '_pairs' → logprob: -4.565508842468262
    10. '.' → logprob: -5.065508842468262

Token 199: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.020772406831383705
    2. 'enc' → logprob: -5.020772457122803
    3. 'ents' → logprob: -5.895772457122803
    4. 'contr' → logprob: -6.395772457122803
    5. 'à' → logprob: -6.395772457122803
    6. 'ont' → logprob: -6.895772457122803
    7. 'counter' → logprob: -7.145772457122803
    8. 'ent' → logprob: -7.520772457122803
    9. ' encountered' → logprob: -7.645772457122803
    10. 'us' → logprob: -8.020771980285645

Token 200: ' dans' (ID: 2671)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5259792804718018
    2. '.' → logprob: -1.6509792804718018
    3. '<|end|>' → logprob: -2.9009792804718018
    4. 'dans' → logprob: -3.5259792804718018
    5. 'odd' → logprob: -3.6509792804718018
    6. '=' → logprob: -3.9009792804718018
    7. 'even' → logprob: -4.025979042053223
    8. '#' → logprob: -4.150979042053223
    9. ' à' → logprob: -4.525979042053223
    10. ' ' → logprob: -5.400979042053223

Token 201: ' la' (ID: 557)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3177851736545563
    2. ' la' → logprob: -2.3177852630615234
    3. ' ' → logprob: -2.5677852630615234
    4. 'la' → logprob: -3.0677852630615234
    5. 'l' → logprob: -4.067785263061523
    6. 'the' → logprob: -4.192785263061523
    7. '1' → logprob: -5.317785263061523
    8. 'nums' → logprob: -5.692785263061523
    9. ' the' → logprob: -5.817785263061523
    10. 'le' → logprob: -6.067785263061523

Token 202: ' sé' (ID: 7462)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.9575464129447937
    2. 'sequence' → logprob: -0.9575464129447937
    3. ' sequence' → logprob: -2.4575464725494385
    4. 'sé' → logprob: -2.7075464725494385
    5. ' ' → logprob: -3.4575464725494385
    6. 's' → logprob: -3.5825464725494385
    7. ' sé' → logprob: -4.582546234130859
    8. 'se' → logprob: -5.457546234130859
    9. 'seq' → logprob: -5.957546234130859
    10. '1' → logprob: -6.707546234130859

Token 203: 'quence' (ID: 6975)
  Prédit: 'quences'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quences' → logprob: -0.5259067416191101
    2. 'quence' → logprob: -0.9009067416191101
    3. 'q' → logprob: -6.150906562805176
    4. 's' → logprob: -8.775906562805176
    5. 'QUENCE' → logprob: -9.525906562805176
    6. '=' → logprob: -9.650906562805176
    7. 'pares' → logprob: -9.775906562805176
    8. 'p' → logprob: -9.900906562805176
    9. 'qs' → logprob: -10.150906562805176
    10. '_' → logprob: -10.275906562805176

Token 204: '.' (ID: 13)
  Prédit: 'even'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'even' → logprob: -0.14504791796207428
    2. ' =' → logprob: -2.520047903060913
    3. '.' → logprob: -3.770047903060913
    4. ' even' → logprob: -4.020048141479492
    5. '=' → logprob: -4.770048141479492
    6. 'pairs' → logprob: -6.770048141479492
    7. 'odd' → logprob: -7.020048141479492
    8. 'pair' → logprob: -7.020048141479492
    9. '_even' → logprob: -7.270048141479492
    10. ' pairs' → logprob: -7.895048141479492

Token 205: ' Comm' (ID: 57464)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5568142533302307
    2. ' ' → logprob: -1.056814193725586
    3. ' even' → logprob: -3.181814193725586
    4. 'even' → logprob: -3.431814193725586
    5. ' pair' → logprob: -5.931814193725586
    6. ' pairs' → logprob: -7.306814193725586
    7. 'pair' → logprob: -7.681814193725586
    8. 'odd' → logprob: -7.806814193725586
    9. ' odd' → logprob: -8.181814193725586
    10. '2' → logprob: -8.306814193725586

Token 206: 'ence' (ID: 1082)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.10561395436525345
    2. 'ence' → logprob: -2.605613946914673
    3. 'ent' → logprob: -4.105614185333252
    4. '=' → logprob: -5.230614185333252
    5. '#' → logprob: -6.480614185333252
    6. 'en' → logprob: -6.480614185333252
    7. 'ente' → logprob: -6.980614185333252
    8. 'es' → logprob: -9.105613708496094
    9. 'ents' → logprob: -9.730613708496094
    10. 'a' → logprob: -9.730613708496094

Token 207: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.021254632622003555
    2. ' =' → logprob: -4.521254539489746
    3. 'à' → logprob: -4.896254539489746
    4. '=' → logprob: -6.271254539489746
    5. ' ' → logprob: -7.771254539489746
    6. ' a' → logprob: -8.271254539489746
    7. '0' → logprob: -10.146254539489746
    8. 'a' → logprob: -10.271254539489746
    9. ' ' → logprob: -11.271254539489746
    10. ' at' → logprob: -12.021254539489746

Token 208: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3484482765197754
    2. ' ' → logprob: -1.2234482765197754
    3. ' ' → logprob: -13.223447799682617
    4. '1' → logprob: -13.973447799682617
    5. '```' → logprob: -15.723447799682617
    6. '  ' → logprob: -16.285947799682617
    7. '۰' → logprob: -16.535947799682617
    8. ' zéro' → logprob: -16.848447799682617
    9. '.' → logprob: -16.910947799682617
    10. 's' → logprob: -16.910947799682617

Token 209: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00026169343618676066
    2. ' ' → logprob: -8.250261306762695
    3. '۰' → logprob: -16.187761306762695
    4. '1' → logprob: -16.312761306762695
    5. '```' → logprob: -17.000261306762695
    6. ' ' → logprob: -17.375261306762695
    7. '０' → logprob: -17.750261306762695
    8. '00' → logprob: -17.875261306762695
    9. '000' → logprob: -18.250261306762695
    10. '٠' → logprob: -18.375261306762695

Token 210: '.
' (ID: 558)
  Prédit: 'even'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'even' → logprob: -0.021054107695817947
    2. 'odd' → logprob: -4.396054267883301
    3. ' even' → logprob: -5.021054267883301
    4. '_even' → logprob: -7.396054267883301
    5. 'pair' → logprob: -7.646054267883301
    6. 'pairs' → logprob: -7.771054267883301
    7. '
' → logprob: -8.8960542678833
    8. 'evenodd' → logprob: -9.5210542678833
    9. ' odd' → logprob: -10.1460542678833
    10. ',' → logprob: -10.5210542678833

Token 211: 'even' (ID: 28689)
  Prédit: 'even'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'even' → logprob: -0.001708732801489532
    2. ' even' → logprob: -6.376708507537842
    3. 'eve' → logprob: -12.751708984375
    4. 'e' → logprob: -14.126708984375
    5. 'evenodd' → logprob: -14.376708984375
    6. 'odd' → logprob: -14.501708984375
    7. 'pair' → logprob: -14.876708984375
    8. 'ev' → logprob: -14.876708984375
    9. 'Even' → logprob: -15.251708984375
    10. '0' → logprob: -15.876708984375

Token 212: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10020720958709717
    2. '=' → logprob: -2.3502073287963867
    3. ' ' → logprob: -14.850207328796387
    4. 's' → logprob: -16.85020637512207
    5. ' =
' → logprob: -16.85020637512207
    6. ' ' → logprob: -16.97520637512207
    7. '0' → logprob: -17.47520637512207
    8. ')' → logprob: -17.97520637512207
    9. ',' → logprob: -18.60020637512207
    10. '＝' → logprob: -18.97520637512207

Token 213: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07889033854007721
    2. ' ' → logprob: -2.578890323638916
    3. ' ' → logprob: -14.703890800476074
    4. '  ' → logprob: -17.641389846801758
    5. '   ' → logprob: -17.703889846801758
    6. '۰' → logprob: -18.203889846801758
    7. '1' → logprob: -18.391389846801758
    8. '	' → logprob: -18.703889846801758
    9. '```' → logprob: -19.141389846801758
    10. '00' → logprob: -19.328889846801758

Token 214: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.2729995988775045e-06
    2. ' ' → logprob: -12.000006675720215
    3. '۰' → logprob: -18.1875057220459
    4. '00' → logprob: -19.0000057220459
    5. '０' → logprob: -19.3750057220459
    6. '000' → logprob: -19.8125057220459
    7. '   ' → logprob: -19.8750057220459
    8. '1' → logprob: -20.2500057220459
    9. '```' → logprob: -20.2500057220459
    10. 'int' → logprob: -20.3750057220459

Token 215: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.002206281991675496
    2. 'for' → logprob: -6.627206325531006
    3. ' for' → logprob: -7.627206325531006
    4. '

' → logprob: -8.502205848693848
    5. '
' → logprob: -9.127205848693848
    6. '<|end|>' → logprob: -9.877205848693848
    7. ' 
' → logprob: -11.252205848693848
    8. '\n' → logprob: -11.627205848693848
    9. '  
' → logprob: -13.127205848693848
    10. '' → logprob: -13.252205848693848

Token 216: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00019865304057020694
    2. '
' → logprob: -8.875198364257812
    3. ' for' → logprob: -9.750198364257812
    4. '

' → logprob: -16.000198364257812
    5. '\n' → logprob: -16.125198364257812
    6. '
' → logprob: -16.125198364257812
    7. '#' → logprob: -16.125198364257812
    8. '	for' → logprob: -17.000198364257812
    9. ' 
' → logprob: -17.875198364257812
    10. 'n' → logprob: -18.000198364257812

Token 217: ' Initialise' (ID: 179601)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -4.842555426876061e-06
    2. ' for' → logprob: -12.375004768371582
    3. '#' → logprob: -15.125004768371582
    4. 'if' → logprob: -16.0000057220459
    5. 'pour' → logprob: -17.7500057220459
    6. 'For' → logprob: -18.1250057220459
    7. 'i' → logprob: -18.1250057220459
    8. '	for' → logprob: -18.2500057220459
    9. 'fo' → logprob: -18.6250057220459
    10. '
' → logprob: -18.7500057220459

Token 218: ' un' (ID: 537)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.48284369707107544
    2. ' un' → logprob: -1.1078436374664307
    3. ' a' → logprob: -3.3578436374664307
    4. ' la' → logprob: -5.10784387588501
    5. ' i' → logprob: -5.73284387588501
    6. ' ' → logprob: -6.10784387588501
    7. ' ' → logprob: -6.35784387588501
    8. 'a' → logprob: -6.85784387588501
    9. 'une' → logprob: -6.85784387588501
    10. 'un' → logprob: -7.73284387588501

Token 219: ' compteur' (ID: 163344)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.15604344010353088
    2. ' for' → logprob: -2.281043529510498
    3. 'i' → logprob: -3.906043529510498
    4. ' compteur' → logprob: -5.406043529510498
    5. 'index' → logprob: -5.906043529510498
    6. ' i' → logprob: -6.406043529510498
    7. 'indice' → logprob: -6.656043529510498
    8. 'counter' → logprob: -6.781043529510498
    9. ' index' → logprob: -6.906043529510498
    10. '_' → logprob: -7.031043529510498

Token 220: ' pour' (ID: 1930)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.927893877029419
    2. ' for' → logprob: -1.177893877029419
    3. 'pour' → logprob: -1.677893877029419
    4. ' pour' → logprob: -2.427893877029419
    5. ' i' → logprob: -4.92789363861084
    6. 'i' → logprob: -5.55289363861084
    7. 'total' → logprob: -5.92789363861084
    8. ' =' → logprob: -6.67789363861084
    9. ' total' → logprob: -6.80289363861084
    10. '#' → logprob: -6.80289363861084

Token 221: ' le' (ID: 505)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.04450764134526253
    2. ' _' → logprob: -3.5445077419281006
    3. 'i' → logprob: -4.5445075035095215
    4. '_' → logprob: -6.5445075035095215
    5. ' ' → logprob: -6.9195075035095215
    6. ' idx' → logprob: -7.4195075035095215
    7. ' index' → logprob: -8.54450798034668
    8. ' la' → logprob: -8.79450798034668
    9. ' l' → logprob: -9.04450798034668
    10. ' ' → logprob: -9.16950798034668

Token 222: ' nombre' (ID: 9733)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7248743772506714
    2. ' i' → logprob: -0.7248743772506714
    3. 'for' → logprob: -4.474874496459961
    4. ' for' → logprob: -5.349874496459961
    5. 'index' → logprob: -6.099874496459961
    6. ' index' → logprob: -6.474874496459961
    7. ' nombre' → logprob: -6.599874496459961
    8. 'nombre' → logprob: -6.724874496459961
    9. 's' → logprob: -6.974874496459961
    10. 'indice' → logprob: -7.099874496459961

Token 223: ' de' (ID: 334)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.0631481409072876
    2. ' d' → logprob: -1.1881481409072876
    3. 'de' → logprob: -2.563148021697998
    4. '<|end|>' → logprob: -2.563148021697998
    5. ' de' → logprob: -2.688148021697998
    6. 'des' → logprob: -2.938148021697998
    7. ' des' → logprob: -3.688148021697998
    8. '_' → logprob: -4.688148021697998
    9. ' of' → logprob: -4.938148021697998
    10. '#' → logprob: -5.063148021697998

Token 224: ' nombres' (ID: 76205)
  Prédit: ' zeros'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' zeros' → logprob: -1.1197131872177124
    2. ' nombres' → logprob: -1.1197131872177124
    3. ' numbers' → logprob: -2.244713306427002
    4. 'numbers' → logprob: -2.869713306427002
    5. ' num' → logprob: -3.369713306427002
    6. 'zeros' → logprob: -4.244713306427002
    7. ' zero' → logprob: -4.369713306427002
    8. ' éléments' → logprob: -4.619713306427002
    9. ' pairs' → logprob: -4.619713306427002
    10. 'num' → logprob: -4.619713306427002

Token 225: ' pairs' (ID: 24702)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' → logprob: -1.751044511795044
    2. '_' → logprob: -2.376044511795044
    3. ' total' → logprob: -2.501044511795044
    4. 'total' → logprob: -2.501044511795044
    5. 'posit' → logprob: -2.751044511795044
    6. 'pairs' → logprob: -3.126044511795044
    7. ' n' → logprob: -3.251044511795044
    8. ' pairs' → logprob: -3.251044511795044
    9. 's' → logprob: -3.376044511795044
    10. 'n' → logprob: -3.376044511795044

Token 226: ' qui' (ID: 2780)
  Prédit: 'dans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dans' → logprob: -1.6249330043792725
    2. '#' → logprob: -1.8749330043792725
    3. 'im' → logprob: -2.8749330043792725
    4. ' dans' → logprob: -2.9999330043792725
    5. '_' → logprob: -3.1249330043792725
    6. 'con' → logprob: -3.3749330043792725
    7. 'distinct' → logprob: -3.6249330043792725
    8. 'pairs' → logprob: -3.7499330043792725
    9. 'imp' → logprob: -3.9999330043792725
    10. 'in' → logprob: -3.9999330043792725

Token 227: ' sont' (ID: 5242)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.9234442710876465
    2. ' sont' → logprob: -0.9234442710876465
    3. 'ont' → logprob: -2.1734442710876465
    4. ' se' → logprob: -3.7984442710876465
    5. ' dépass' → logprob: -4.2984442710876465
    6. ' appara' → logprob: -4.4234442710876465
    7. ' ont' → logprob: -5.1734442710876465
    8. ' suivent' → logprob: -5.4234442710876465
    9. ' seront' → logprob: -5.5484442710876465
    10. ' rencontr' → logprob: -5.7984442710876465

Token 228: ' divis' (ID: 37826)
  Prédit: 'sup'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sup' → logprob: -0.8086692690849304
    2. 'strict' → logprob: -1.6836693286895752
    3. 'multip' → logprob: -2.683669328689575
    4. ' strict' → logprob: -3.308669328689575
    5. ' multip' → logprob: -3.308669328689575
    6. ' non' → logprob: -3.433669328689575
    7. 'inf' → logprob: -3.808669328689575
    8. 'égal' → logprob: -4.058669090270996
    9. ' sup' → logprob: -4.183669090270996
    10. 'div' → logprob: -4.183669090270996

Token 229: 'ibles' (ID: 12234)
  Prédit: 'ibles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ibles' → logprob: -0.009700966998934746
    2. 'bles' → logprob: -5.384700775146484
    3. 'ible' → logprob: -5.634700775146484
    4. 'és' → logprob: -7.634700775146484
    5. '```' → logprob: -7.634700775146484
    6. 'ables' → logprob: -8.509700775146484
    7. 'i' → logprob: -9.509700775146484
    8. 'es' → logprob: -9.884700775146484
    9. 'e' → logprob: -10.759700775146484
    10. 'is' → logprob: -10.759700775146484

Token 230: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.6987537741661072
    2. 'par' → logprob: -0.6987537741661072
    3. ' ' → logprob: -6.573753833770752
    4. '3' → logprob: -7.323753833770752
    5. '_par' → logprob: -7.323753833770752
    6. '<|end|>' → logprob: -7.448753833770752
    7. '2' → logprob: -7.573753833770752
    8. 'by' → logprob: -7.698753833770752
    9. '4' → logprob: -8.198753356933594
    10. '	par' → logprob: -8.198753356933594

Token 231: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.14387628436088562
    2. '3' → logprob: -2.018876314163208
    3. ' ' → logprob: -7.893876075744629
    4. ' trois' → logprob: -7.893876075744629
    5. '4' → logprob: -8.768876075744629
    6. '2' → logprob: -9.143876075744629
    7. '6' → logprob: -9.518876075744629
    8. ' three' → logprob: -10.518876075744629
    9. '5' → logprob: -10.518876075744629
    10. '7' → logprob: -11.518876075744629

Token 232: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.06375432759523392
    2. ' ' → logprob: -2.9387543201446533
    3. '4' → logprob: -5.313754558563232
    4. '5' → logprob: -6.313754558563232
    5. '6' → logprob: -6.438754558563232
    6. '7' → logprob: -8.563754081726074
    7. '2' → logprob: -9.438754081726074
    8. '10' → logprob: -10.188754081726074
    9. '9' → logprob: -10.563754081726074
    10. '8' → logprob: -10.751254081726074

Token 233: ' ou' (ID: 2031)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.8014886975288391
    2. '.' → logprob: -1.0514886379241943
    3. ' divisible' → logprob: -2.5514886379241943
    4. 'and' → logprob: -3.9264886379241943
    5. 'even' → logprob: -4.301488876342773
    6. 'et' → logprob: -4.301488876342773
    7. 'par' → logprob: -4.426488876342773
    8. '0' → logprob: -4.551488876342773
    9. ' et' → logprob: -4.801488876342773
    10. ',' → logprob: -4.801488876342773

Token 234: ' par' (ID: 686)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.36634862422943115
    2. '7' → logprob: -1.7413486242294312
    3. ' ' → logprob: -2.2413487434387207
    4. '9' → logprob: -4.741348743438721
    5. ' par' → logprob: -4.866348743438721
    6. '4' → logprob: -6.366348743438721
    7. ' divisible' → logprob: -6.616348743438721
    8. '<|end|>' → logprob: -6.741348743438721
    9. '2' → logprob: -7.241348743438721
    10. '#' → logprob: -7.241348743438721

Token 235: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.04040722921490669
    2. '5' → logprob: -3.290407180786133
    3. '2' → logprob: -6.790407180786133
    4. '9' → logprob: -7.415407180786133
    5. '7' → logprob: -7.915407180786133
    6. ' ' → logprob: -8.915407180786133
    7. '6' → logprob: -9.790407180786133
    8. '3' → logprob: -11.352907180786133
    9. '_' → logprob: -11.540407180786133
    10. ' cinq' → logprob: -12.290407180786133

Token 236: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.0771072655916214
    2. '2' → logprob: -3.3271071910858154
    3. '9' → logprob: -3.9521071910858154
    4. '7' → logprob: -4.2021074295043945
    5. '4' → logprob: -5.9521074295043945
    6. '6' → logprob: -6.8271074295043945
    7. ' ' → logprob: -8.577107429504395
    8. 'five' → logprob: -9.952107429504395
    9. '10' → logprob: -10.389607429504395
    10. '11' → logprob: -10.452107429504395

Token 237: '.
' (ID: 558)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.04486581310629845
    2. 'even' → logprob: -3.919865846633911
    3. 'count' → logprob: -4.794865608215332
    4. ' divisible' → logprob: -5.044865608215332
    5. 'special' → logprob: -6.294865608215332
    6. '.' → logprob: -6.919865608215332
    7. 'by' → logprob: -7.169865608215332
    8. 'odd' → logprob: -7.294865608215332
    9. 'and' → logprob: -7.294865608215332
    10. ',' → logprob: -7.669865608215332

Token 238: '#' (ID: 2)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.8023701310157776
    2. 'even' → logprob: -0.8023701310157776
    3. 'multiple' → logprob: -3.177370071411133
    4. 'count' → logprob: -3.927370071411133
    5. 'special' → logprob: -4.177370071411133
    6. 'odd' → logprob: -5.427370071411133
    7. ' divisible' → logprob: -5.802370071411133
    8. 'mult' → logprob: -6.302370071411133
    9. 'multip' → logprob: -6.427370071411133
    10. 'three' → logprob: -6.552370071411133

Token 239: ' Comm' (ID: 57464)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.28594109416007996
    2. 'multiple' → logprob: -2.6609411239624023
    3. 'special' → logprob: -3.0359411239624023
    4. 'even' → logprob: -3.1609411239624023
    5. 'count' → logprob: -3.6609411239624023
    6. ' divisible' → logprob: -4.035941123962402
    7. 'for' → logprob: -4.910941123962402
    8. 'odd' → logprob: -4.910941123962402
    9. '#' → logprob: -5.410941123962402
    10. 'both' → logprob: -5.785941123962402

Token 240: 'ence' (ID: 1082)
  Prédit: 'ente'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ente' → logprob: -0.2658461332321167
    2. 'ence' → logprob: -1.5158461332321167
    3. '#' → logprob: -4.765846252441406
    4. 'ent' → logprob: -6.640846252441406
    5. 'e' → logprob: -6.890846252441406
    6. '>' → logprob: -7.890846252441406
    7. '```' → logprob: -8.265846252441406
    8. 'ents' → logprob: -8.765846252441406
    9. 'nte' → logprob: -8.765846252441406
    10. 'mente' → logprob: -8.765846252441406

Token 241: ' également' (ID: 15488)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.31995463371276855
    2. ' =' → logprob: -1.3199546337127686
    3. '=' → logprob: -5.319954872131348
    4. 'à' → logprob: -7.319954872131348
    5. ' at' → logprob: -8.069954872131348
    6. ' even' → logprob: -8.569954872131348
    7. ' a' → logprob: -8.694954872131348
    8. 'even' → logprob: -9.194954872131348
    9. '_even' → logprob: -9.694954872131348
    10. ' par' → logprob: -10.069954872131348

Token 242: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.05709516629576683
    2. '0' → logprob: -3.4320950508117676
    3. 'à' → logprob: -3.8070950508117676
    4. ' ' → logprob: -8.057095527648926
    5. ' a' → logprob: -8.307095527648926
    6. 'a' → logprob: -8.557095527648926
    7. ' at' → logprob: -9.182095527648926
    8. ' ' → logprob: -10.307095527648926
    9. ' =' → logprob: -10.557095527648926
    10. '=' → logprob: -11.682095527648926

Token 243: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001398929744027555
    2. ' ' → logprob: -8.875140190124512
    3. ' ' → logprob: -18.625139236450195
    4. ' zéro' → logprob: -19.000139236450195
    5. '```' → logprob: -19.125139236450195
    6. '۰' → logprob: -19.500139236450195
    7. 'zero' → logprob: -19.875139236450195
    8. '1' → logprob: -20.000139236450195
    9. 'z' → logprob: -20.562639236450195
    10. ' zero' → logprob: -20.562639236450195

Token 244: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.625000953674316
    3. '```' → logprob: -17.750001907348633
    4. '۰' → logprob: -18.250001907348633
    5. 'zero' → logprob: -18.812501907348633
    6. '...' → logprob: -19.312501907348633
    7. '０' → logprob: -19.500001907348633
    8. '.' → logprob: -19.625001907348633
    9. '1' → logprob: -19.687501907348633
    10. '٠' → logprob: -19.812501907348633

Token 245: '.
' (ID: 558)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.8947827219963074
    2. 'even' → logprob: -1.0197827816009521
    3. 'count' → logprob: -2.269782781600952
    4. 'special' → logprob: -2.644782781600952
    5. 'multiple' → logprob: -3.394782781600952
    6. 'odd' → logprob: -5.519782543182373
    7. 'counter' → logprob: -5.769782543182373
    8. 'multip' → logprob: -5.769782543182373
    9. 'sum' → logprob: -7.144782543182373
    10. 'mult' → logprob: -7.519782543182373

Token 246: 'even' (ID: 28689)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.8984238505363464
    2. 'special' → logprob: -1.7734239101409912
    3. 'even' → logprob: -1.8984239101409912
    4. 'count' → logprob: -1.8984239101409912
    5. 'multiple' → logprob: -2.398423910140991
    6. 'multip' → logprob: -5.648423671722412
    7. 'both' → logprob: -5.773423671722412
    8. 'counter' → logprob: -5.898423671722412
    9. 'multi' → logprob: -6.023423671722412
    10. 'mult' → logprob: -6.148423671722412

Token 247: '35' (ID: 2467)
  Prédit: '_div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_div' → logprob: -0.1946321278810501
    2. '_' → logprob: -2.069632053375244
    3. '_par' → logprob: -4.069632053375244
    4. 'div' → logprob: -4.569632053375244
    5. '_by' → logprob: -4.944632053375244
    6. '3' → logprob: -5.069632053375244
    7. '_mult' → logprob: -6.694632053375244
    8. '_m' → logprob: -6.694632053375244
    9. '=' → logprob: -6.944632053375244
    10. '_multiple' → logprob: -7.069632053375244

Token 248: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14271390438079834
    2. '=' → logprob: -2.017714023590088
    3. '35' → logprob: -10.51771354675293
    4. 'div' → logprob: -12.89271354675293
    5. 's' → logprob: -13.51771354675293
    6. '0' → logprob: -13.76771354675293
    7. '3' → logprob: -13.76771354675293
    8. ' ' → logprob: -13.76771354675293
    9. 'count' → logprob: -13.76771354675293
    10. '_' → logprob: -14.51771354675293

Token 249: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0019286326132714748
    2. ' ' → logprob: -6.251928806304932
    3. ' ' → logprob: -19.876928329467773
    4. '۰' → logprob: -21.376928329467773
    5. '00' → logprob: -22.001928329467773
    6. '   ' → logprob: -22.001928329467773
    7. '  ' → logprob: -22.001928329467773
    8. '000' → logprob: -22.751928329467773
    9. '1' → logprob: -23.314428329467773
    10. '```' → logprob: -23.564428329467773

Token 250: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.438573680294212e-06
    2. ' ' → logprob: -12.125005722045898
    3. '۰' → logprob: -20.6250057220459
    4. '00' → logprob: -21.7500057220459
    5. '   ' → logprob: -22.1250057220459
    6. ' ' → logprob: -22.1250057220459
    7. '```' → logprob: -22.1250057220459
    8. '000' → logprob: -22.3750057220459
    9. 'int' → logprob: -22.8750057220459
    10. '  ' → logprob: -23.0000057220459

Token 251: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4893418550491333
    2. 'for' → logprob: -1.4893418550491333
    3. '<|end|>' → logprob: -2.2393417358398438
    4. ' for' → logprob: -2.9893417358398438
    5. '\n' → logprob: -5.614341735839844
    6. '<|end|>' → logprob: -7.489341735839844
    7. '

' → logprob: -9.364341735839844
    8. '
' → logprob: -9.739341735839844
    9. 'newline' → logprob: -9.864341735839844
    10. '  
' → logprob: -10.239341735839844

Token 252: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0002738522016443312
    2. ' for' → logprob: -8.750273704528809
    3. '
' → logprob: -9.125273704528809
    4. 'f' → logprob: -13.375273704528809
    5. '\n' → logprob: -13.500273704528809
    6. '#' → logprob: -13.625273704528809
    7. 'n' → logprob: -14.125273704528809
    8. '' → logprob: -14.750273704528809
    9. 'i' → logprob: -14.875273704528809
    10. '<|end|>' → logprob: -15.375273704528809

Token 253: ' Parc' (ID: 68618)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -3.857719275401905e-05
    2. '#' → logprob: -10.500038146972656
    3. ' for' → logprob: -12.000038146972656
    4. 'i' → logprob: -12.875038146972656
    5. 'if' → logprob: -13.500038146972656
    6. 'pour' → logprob: -15.125038146972656
    7. 'while' → logprob: -15.500038146972656
    8. 'For' → logprob: -16.250038146972656
    9. 'index' → logprob: -16.375038146972656
    10. '	for' → logprob: -17.250038146972656

Token 254: 'ourt' (ID: 38600)
  Prédit: 'ourt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ourt' → logprob: -0.5893761515617371
    2. 'ours' → logprob: -0.8393761515617371
    3. 'our' → logprob: -4.339375972747803
    4. 'oure' → logprob: -8.714376449584961
    5. 'ourse' → logprob: -9.464376449584961
    6. 'or' → logprob: -10.464376449584961
    7. 'ou' → logprob: -10.964376449584961
    8. 'o' → logprob: -12.089376449584961
    9. 'ount' → logprob: -13.214376449584961
    10. 'ourses' → logprob: -13.214376449584961

Token 255: ' la' (ID: 557)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -1.0875083208084106
    2. ' nums' → logprob: -1.3375083208084106
    3. ' la' → logprob: -1.7125083208084106
    4. ' ' → logprob: -1.9625083208084106
    5. ' ' → logprob: -3.212508201599121
    6. 'range' → logprob: -4.212508201599121
    7. ' les' → logprob: -5.087508201599121
    8. 'nums' → logprob: -5.337508201599121
    9. 's' → logprob: -6.087508201599121
    10. ' for' → logprob: -6.087508201599121

Token 256: ' sé' (ID: 7462)
  Prédit: 'nums'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nums' → logprob: -0.22599829733371735
    2. 'range' → logprob: -1.9759982824325562
    3. ' range' → logprob: -3.4759984016418457
    4. ' nums' → logprob: -3.4759984016418457
    5. 'num' → logprob: -7.725998401641846
    6. 's' → logprob: -8.600997924804688
    7. ' liste' → logprob: -8.600997924804688
    8. 'liste' → logprob: -8.725997924804688
    9. 'sequence' → logprob: -8.850997924804688
    10. ' sequence' → logprob: -9.225997924804688

Token 257: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -0.00010831133840838447
    2. '#' → logprob: -10.00010871887207
    3. 'q' → logprob: -10.12510871887207
    4. 'que' → logprob: -12.25010871887207
    5. 'quences' → logprob: -12.50010871887207
    6. 'qu' → logprob: -12.62510871887207
    7. 'u' → logprob: -12.62510871887207
    8. 'ence' → logprob: -13.37510871887207
    9. 'QUENCE' → logprob: -13.87510871887207
    10. '`' → logprob: -14.00010871887207

Token 258: ' à' (ID: 1221)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.13554608821868896
    2. 'for' → logprob: -2.1355462074279785
    3. ' des' → logprob: -4.8855462074279785
    4. ' de' → logprob: -7.7605462074279785
    5. ' of' → logprob: -8.63554573059082
    6. ' pour' → logprob: -8.88554573059082
    7. ' ' → logprob: -9.51054573059082
    8. 'pour' → logprob: -10.13554573059082
    9. 'de' → logprob: -10.76054573059082
    10. 'des' → logprob: -10.76054573059082

Token 259: ' l' (ID: 305)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.1122058629989624
    2. 'tr' → logprob: -1.3622058629989624
    3. 'ra' → logprob: -2.112205982208252
    4. 'range' → logprob: -3.487205982208252
    5. 'l' → logprob: -3.612205982208252
    6. 'tra' → logprob: -3.737205982208252
    7. 'n' → logprob: -3.737205982208252
    8. ' partir' → logprob: -4.112205982208252
    9. 'trait' → logprob: -4.362205982208252
    10. 'i' → logprob: -4.487205982208252

Token 260: ''aide' (ID: 75684)
  Prédit: 'ange'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ange' → logprob: -0.35331210494041443
    2. 'range' → logprob: -1.2283121347427368
    3. 'ength' → logprob: -6.603312015533447
    4. 'a' → logprob: -6.978312015533447
    5. 'for' → logprob: -7.228312015533447
    6. 'en' → logprob: -7.353312015533447
    7. ' range' → logprob: -7.603312015533447
    8. 'arge' → logprob: -8.478312492370605
    9. 'e' → logprob: -9.228312492370605
    10. 'anger' → logprob: -9.978312492370605

Token 261: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.01169005036354065
    2. 'd' → logprob: -4.511690139770508
    3. ' de' → logprob: -7.761690139770508
    4. ' of' → logprob: -9.011690139770508
    5. 'for' → logprob: -10.636690139770508
    6. 'de' → logprob: -10.636690139770508
    7. ' for' → logprob: -10.886690139770508
    8. '#' → logprob: -11.386690139770508
    9. ' a' → logprob: -12.511690139770508
    10. ' range' → logprob: -13.136690139770508

Token 262: ''une' (ID: 13337)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.8681694269180298
    2. 'range' → logprob: -1.6181694269180298
    3. ' a' → logprob: -1.9931694269180298
    4. ' for' → logprob: -2.3681693077087402
    5. 'for' → logprob: -2.9931693077087402
    6. 'une' → logprob: -3.4931693077087402
    7. ' une' → logprob: -3.6181693077087402
    8. ' un' → logprob: -3.8681693077087402
    9. 'a' → logprob: -3.9931693077087402
    10. ' la' → logprob: -6.36816930770874

Token 263: ' boucle' (ID: 174211)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03613625094294548
    2. ' for' → logprob: -3.4111361503601074
    3. 'range' → logprob: -6.161136150360107
    4. ' range' → logprob: -7.911136150360107
    5. ' boucle' → logprob: -12.286136627197266
    6. ' ' → logprob: -13.786136627197266
    7. 'bou' → logprob: -13.786136627197266
    8. '```' → logprob: -13.786136627197266
    9. '`' → logprob: -14.411136627197266
    10. 'rang' → logprob: -14.536136627197266

Token 264: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.22542870044708252
    2. 'for' → logprob: -1.6004287004470825
    3. ' pour' → logprob: -12.100428581237793
    4. 'pour' → logprob: -12.600428581237793
    5. ' ' → logprob: -12.850428581237793
    6. ' `' → logprob: -13.100428581237793
    7. ':' → logprob: -14.850428581237793
    8. 'f' → logprob: -15.100428581237793
    9. '_for' → logprob: -15.350428581237793
    10. 's' → logprob: -15.350428581237793

Token 265: ' pour' (ID: 1930)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.04035204276442528
    2. 'i' → logprob: -4.040351867675781
    3. ' for' → logprob: -5.165351867675781
    4. ' time' → logprob: -5.290351867675781
    5. ' ' → logprob: -5.665351867675781
    6. ' ' → logprob: -6.790351867675781
    7. '.' → logprob: -7.040351867675781
    8. 'for' → logprob: -7.040351867675781
    9. ' range' → logprob: -7.040351867675781
    10. ':' → logprob: -7.540351867675781

Token 266: ' examiner' (ID: 115931)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.12690742313861847
    2. ' num' → logprob: -2.6269073486328125
    3. 'i' → logprob: -3.2519073486328125
    4. 'num' → logprob: -5.2519073486328125
    5. ' n' → logprob: -6.1269073486328125
    6. 'n' → logprob: -7.3769073486328125
    7. ' ' → logprob: -10.001907348632812
    8. ' ' → logprob: -10.626907348632812
    9. ' number' → logprob: -10.876907348632812
    10. ' val' → logprob: -11.251907348632812

Token 267: ' chaque' (ID: 21194)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.17842645943164825
    2. ' num' → logprob: -2.053426504135132
    3. ' n' → logprob: -4.303426265716553
    4. ' ' → logprob: -4.928426265716553
    5. 'i' → logprob: -5.053426265716553
    6. ' chaque' → logprob: -5.803426265716553
    7. 'num' → logprob: -6.428426265716553
    8. 'n' → logprob: -7.178426265716553
    9. ' each' → logprob: -7.178426265716553
    10. ' ' → logprob: -7.678426265716553

Token 268: ' élément' (ID: 99627)
  Prédit: ' num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' num' → logprob: -0.33255431056022644
    2. ' ' → logprob: -1.7075543403625488
    3. 'num' → logprob: -3.207554340362549
    4. ' n' → logprob: -3.957554340362549
    5. 'n' → logprob: -4.332554340362549
    6. ' i' → logprob: -4.332554340362549
    7. ' number' → logprob: -4.832554340362549
    8. ' nombre' → logprob: -6.082554340362549
    9. ' element' → logprob: -6.332554340362549
    10. ' nums' → logprob: -7.582554340362549

Token 269: ' individ' (ID: 3928)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1466369479894638
    2. 'in' → logprob: -3.396636962890625
    3. ' i' → logprob: -3.771636962890625
    4. ' dans' → logprob: -3.896636962890625
    5. ' nums' → logprob: -4.396636962890625
    6. ' en' → logprob: -4.771636962890625
    7. ' num' → logprob: -5.146636962890625
    8. ' time' → logprob: -5.146636962890625
    9. 'nums' → logprob: -5.521636962890625
    10. ':' → logprob: -5.646636962890625

Token 270: 'uellement' (ID: 36026)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.09386330097913742
    2. 'ual' → logprob: -2.8438632488250732
    3. 'uel' → logprob: -3.7188632488250732
    4. 'uellement' → logprob: -5.968863487243652
    5. 'ue' → logprob: -6.093863487243652
    6. ' u' → logprob: -6.468863487243652
    7. 'al' → logprob: -8.218863487243652
    8. 'uelle' → logprob: -8.468863487243652
    9. 'ué' → logprob: -9.093863487243652
    10. 'ua' → logprob: -9.968863487243652

Token 271: '.
' (ID: 558)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.35082563757896423
    2. ':' → logprob: -1.4758256673812866
    3. ' for' → logprob: -2.850825548171997
    4. ':
' → logprob: -5.475825786590576
    5. ' :' → logprob: -6.725825786590576
    6. '.' → logprob: -6.850825786590576
    7. 'n' → logprob: -7.350825786590576
    8. ' :
' → logprob: -7.350825786590576
    9. ',' → logprob: -7.475825786590576
    10. '
' → logprob: -7.725825786590576

Token 272: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.02058054879307747
    2. ' for' → logprob: -3.895580530166626
    3. '
' → logprob: -10.395580291748047
    4. ' 
' → logprob: -12.395580291748047
    5. '```' → logprob: -13.395580291748047
    6. 'i' → logprob: -14.020580291748047
    7. 'f' → logprob: -15.020580291748047
    8. '	for' → logprob: -15.520580291748047
    9. '  
' → logprob: -15.520580291748047
    10. 'n' → logprob: -15.645580291748047

Token 273: ' La' (ID: 3038)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.048587825149297714
    2. ' for' → logprob: -3.0485877990722656
    3. 'f' → logprob: -16.298587799072266
    4. ' 
' → logprob: -16.798587799072266
    5. '
' → logprob: -16.923587799072266
    6. ' ' → logprob: -17.048587799072266
    7. 'i' → logprob: -17.048587799072266
    8. '	for' → logprob: -17.173587799072266
    9. ' ' → logprob: -17.423587799072266
    10. '```' → logprob: -17.548587799072266

Token 274: ' boucle' (ID: 174211)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.18170784413814545
    2. ' for' → logprob: -1.8067078590393066
    3. 'i' → logprob: -7.431707859039307
    4. ' i' → logprob: -8.181707382202148
    5. ' range' → logprob: -8.431707382202148
    6. 'range' → logprob: -8.806707382202148
    7. ' ' → logprob: -8.931707382202148
    8. 'r' → logprob: -8.931707382202148
    9. 'if' → logprob: -9.181707382202148
    10. 's' → logprob: -9.806707382202148

Token 275: ' utilise' (ID: 70283)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4289456903934479
    2. 'for' → logprob: -1.0539456605911255
    3. ' range' → logprob: -9.053945541381836
    4. ' i' → logprob: -10.303945541381836
    5. 'range' → logprob: -10.553945541381836
    6. ' ' → logprob: -11.053945541381836
    7. ' in' → logprob: -11.428945541381836
    8. ' continue' → logprob: -11.428945541381836
    9. ' ' → logprob: -11.803945541381836
    10. 's' → logprob: -11.928945541381836

Token 276: ' la' (ID: 557)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.2586812376976013
    2. 'range' → logprob: -1.633681297302246
    3. ' i' → logprob: -4.633681297302246
    4. '_' → logprob: -5.258681297302246
    5. ' nums' → logprob: -5.258681297302246
    6. 'nums' → logprob: -5.508681297302246
    7. 'i' → logprob: -5.508681297302246
    8. ' time' → logprob: -6.883681297302246
    9. ' for' → logprob: -7.008681297302246
    10. ' num' → logprob: -7.508681297302246

Token 277: ' fonction' (ID: 17610)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.22826936841011047
    2. 'for' → logprob: -2.103269338607788
    3. ' range' → logprob: -2.603269338607788
    4. ' for' → logprob: -5.478269577026367
    5. 'i' → logprob: -5.853269577026367
    6. ' i' → logprob: -8.228269577026367
    7. 'r' → logprob: -8.353269577026367
    8. '_' → logprob: -8.853269577026367
    9. 'nums' → logprob: -9.728269577026367
    10. 'rang' → logprob: -9.978269577026367

Token 278: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0015228374395519495
    2. ' range' → logprob: -6.876523017883301
    3. 'for' → logprob: -7.626523017883301
    4. ' for' → logprob: -13.3765230178833
    5. '(range' → logprob: -15.2515230178833
    6. 'i' → logprob: -15.3765230178833
    7. 'time' → logprob: -15.8765230178833
    8. 'r' → logprob: -16.376522064208984
    9. 'rang' → logprob: -16.626522064208984
    10. 'len' → logprob: -16.876522064208984

Token 279: '()' (ID: 416)
  Prédit: '(time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(time' → logprob: -0.005457508843392134
    2. '(' → logprob: -5.380457401275635
    3. '(len' → logprob: -7.130457401275635
    4. '(t' → logprob: -10.755457878112793
    5. '(length' → logprob: -11.380457878112793
    6. '(times' → logprob: -14.005457878112793
    7. '(
' → logprob: -14.255457878112793
    8. ' (' → logprob: -14.380457878112793
    9. '(n' → logprob: -15.005457878112793
    10. '(l' → logprob: -15.005457878112793

Token 280: ' pour' (ID: 1930)
  Prédit: '(time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(time' → logprob: -0.0031878093723207712
    2. '(' → logprob: -5.753187656402588
    3. '(len' → logprob: -12.378188133239746
    4. '(t' → logprob: -13.003188133239746
    5. 'time' → logprob: -13.128188133239746
    6. '(
' → logprob: -14.378188133239746
    7. '(length' → logprob: -14.878188133239746
    8. '(times' → logprob: -15.503188133239746
    9. '(range' → logprob: -16.37818717956543
    10. ' (' → logprob: -16.50318717956543

Token 281: ' génér' (ID: 18939)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.516146719455719
    2. 'range' → logprob: -1.6411466598510742
    3. ' time' → logprob: -1.7661466598510742
    4. 'time' → logprob: -3.266146659851074
    5. '_' → logprob: -8.891146659851074
    6. ' i' → logprob: -10.141146659851074
    7. 'i' → logprob: -10.891146659851074
    8. '(range' → logprob: -10.891146659851074
    9. '(time' → logprob: -11.016146659851074
    10. 't' → logprob: -11.391146659851074

Token 282: 'er' (ID: 259)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.1724841594696045
    2. 'range' → logprob: -1.9224841594696045
    3. ' time' → logprob: -4.547484397888184
    4. ' range' → logprob: -6.547484397888184
    5. '(time' → logprob: -9.922484397888184
    6. '1' → logprob: -10.922484397888184
    7. 'ime' → logprob: -11.672484397888184
    8. '0' → logprob: -11.797484397888184
    9. 'i' → logprob: -12.047484397888184
    10. 't' → logprob: -12.172484397888184

Token 283: ' des' (ID: 731)
  Prédit: '(time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(time' → logprob: -0.0009170551202259958
    2. '(' → logprob: -7.125916957855225
    3. '(len' → logprob: -9.625917434692383
    4. 'time' → logprob: -10.125917434692383
    5. '(t' → logprob: -12.250917434692383
    6. '(length' → logprob: -14.750917434692383
    7. ' time' → logprob: -14.750917434692383
    8. '(range' → logprob: -15.625917434692383
    9. '(times' → logprob: -15.625917434692383
    10. '(i' → logprob: -16.375917434692383

Token 284: ' indices' (ID: 30378)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.5471010208129883
    2. ' time' → logprob: -0.9221010208129883
    3. 'range' → logprob: -4.297101020812988
    4. ' range' → logprob: -4.672101020812988
    5. '(time' → logprob: -7.422101020812988
    6. 'len' → logprob: -10.047101020812988
    7. ' len' → logprob: -10.672101020812988
    8. 't' → logprob: -11.547101020812988
    9. 'length' → logprob: -11.922101020812988
    10. '1' → logprob: -12.172101020812988

Token 285: ' de' (ID: 334)
  Prédit: '(time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(time' → logprob: -0.011231496930122375
    2. '(' → logprob: -4.511231422424316
    3. '(len' → logprob: -8.761231422424316
    4. '(t' → logprob: -10.761231422424316
    5. '(
' → logprob: -12.761231422424316
    6. '(length' → logprob: -14.011231422424316
    7. '(times' → logprob: -14.261231422424316
    8. '(

' → logprob: -14.886231422424316
    9. '(range' → logprob: -15.511231422424316
    10. 'time' → logprob: -15.761231422424316

Token 286: ' ' (ID: 220)
  Prédit: ' time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' time' → logprob: -0.5310109853744507
    2. 'time' → logprob: -0.9060109853744507
    3. '0' → logprob: -5.03101110458374
    4. ' range' → logprob: -7.65601110458374
    5. 'range' → logprob: -8.281010627746582
    6. ' ' → logprob: -8.531010627746582
    7. 't' → logprob: -8.781010627746582
    8. '1' → logprob: -10.031010627746582
    9. 'len' → logprob: -10.156010627746582
    10. 'ti' → logprob: -10.281010627746582

Token 287: '0' (ID: 15)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.01845952682197094
    2. '0' → logprob: -4.018459320068359
    3. ' time' → logprob: -8.76845932006836
    4. 'len' → logprob: -8.89345932006836
    5. 'range' → logprob: -12.14345932006836
    6. 'temps' → logprob: -12.39345932006836
    7. 't' → logprob: -13.14345932006836
    8. '1' → logprob: -13.26845932006836
    9. '(time' → logprob: -14.14345932006836
    10. 'length' → logprob: -14.14345932006836

Token 288: ' à' (ID: 1221)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.18182998895645142
    2. ' to' → logprob: -2.3068299293518066
    3. ' à' → logprob: -3.5568299293518066
    4. 'to' → logprob: -4.056829929351807
    5. 'time' → logprob: -5.181829929351807
    6. ' ,' → logprob: -5.181829929351807
    7. ' time' → logprob: -5.681829929351807
    8. ' ' → logprob: -6.181829929351807
    9. ')' → logprob: -7.056829929351807
    10. 'à' → logprob: -7.056829929351807

Token 289: ' time' (ID: 1058)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.38687965273857117
    2. ' time' → logprob: -1.1368796825408936
    3. '(time' → logprob: -13.386879920959473
    4. 't' → logprob: -13.511879920959473
    5. 'range' → logprob: -13.511879920959473
    6. ' range' → logprob: -14.261879920959473
    7. '	time' → logprob: -14.386879920959473
    8. 'len' → logprob: -14.886879920959473
    9. 'ti' → logprob: -14.886879920959473
    10. 'ime' → logprob: -15.261879920959473

Token 290: '-' (ID: 12)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7613278031349182
    2. ')' → logprob: -1.7613277435302734
    3. ':' → logprob: -2.0113277435302734
    4. '):' → logprob: -2.6363277435302734
    5. '-' → logprob: -2.8863277435302734
    6. ' :' → logprob: -3.2613277435302734
    7. ' (' → logprob: -3.6363277435302734
    8. ' -' → logprob: -4.261327743530273
    9. ' )' → logprob: -5.386327743530273
    10. ' ' → logprob: -5.511327743530273

Token 291: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.012522017583251
    2. ' ' → logprob: -4.387522220611572
    3. 'time' → logprob: -11.637521743774414
    4. ')' → logprob: -13.762521743774414
    5. ' time' → logprob: -14.137521743774414
    6. '```' → logprob: -15.012521743774414
    7. ' -' → logprob: -15.262521743774414
    8. '-' → logprob: -15.387521743774414
    9. ' ' → logprob: -15.762521743774414
    10. '  ' → logprob: -16.200021743774414

Token 292: '.
' (ID: 558)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.17936189472675323
    2. '(' → logprob: -2.5543618202209473
    3. 'for' → logprob: -3.0543618202209473
    4. ':
' → logprob: -4.054361820220947
    5. '(time' → logprob: -4.679361820220947
    6. ')' → logprob: -5.179361820220947
    7. '(range' → logprob: -5.929361820220947
    8. ' for' → logprob: -6.429361820220947
    9. 'range' → logprob: -7.429361820220947
    10. '(
' → logprob: -7.804361820220947

Token 293: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.032082539051771164
    2. ' for' → logprob: -3.5320825576782227
    3. '
' → logprob: -6.282082557678223
    4. ':' → logprob: -7.907082557678223
    5. ':
' → logprob: -9.907082557678223
    6. ' 
' → logprob: -11.782082557678223
    7. '
' → logprob: -11.782082557678223
    8. '

' → logprob: -12.532082557678223
    9. '' → logprob: -12.907082557678223
    10. 'f' → logprob: -12.907082557678223

Token 294: ' j' (ID: 441)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.09138404577970505
    2. ' ' → logprob: -2.466383934020996
    3. ' time' → logprob: -6.716383934020996
    4. ' _' → logprob: -7.341383934020996
    5. 'i' → logprob: -7.841383934020996
    6. '  ' → logprob: -9.466383934020996
    7. ' t' → logprob: -10.591383934020996
    8. '_' → logprob: -10.716383934020996
    9. ' range' → logprob: -11.216383934020996
    10. ' ' → logprob: -11.341383934020996

Token 295: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0042925612069666386
    2. 'in' → logprob: -5.6292924880981445
    3. 'n' → logprob: -7.7542924880981445
    4. ' ' → logprob: -8.379292488098145
    5. ' i' → logprob: -11.254292488098145
    6. ' n' → logprob: -11.754292488098145
    7. '  ' → logprob: -13.004292488098145
    8. ' j' → logprob: -13.504292488098145
    9. 'j' → logprob: -13.629292488098145
    10. '	in' → logprob: -13.754292488098145

Token 296: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.026302501559257507
    2. ' range' → logprob: -3.6513025760650635
    3. '(range' → logprob: -14.526302337646484
    4. ' ' → logprob: -14.651302337646484
    5. '	range' → logprob: -14.651302337646484
    6. ')' → logprob: -15.401302337646484
    7. '```' → logprob: -16.151302337646484
    8. 'time' → logprob: -16.151302337646484
    9. '   ' → logprob: -16.276302337646484
    10. '  ' → logprob: -16.401302337646484

Token 297: '(time' (ID: 19192)
  Prédit: '(time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(time' → logprob: -0.0040823169983923435
    2. '(' → logprob: -5.504082202911377
    3. ' (' → logprob: -13.129082679748535
    4. '(
' → logprob: -13.504082679748535
    5. '(t' → logprob: -14.629082679748535
    6. '(times' → logprob: -16.37908172607422
    7. '(len' → logprob: -17.62908172607422
    8. '(Time' → logprob: -18.12908172607422
    9. '(length' → logprob: -18.62908172607422
    10. '(

' → logprob: -18.75408172607422

Token 298: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0006569160032086074
    2. ')' → logprob: -7.500657081604004
    3. ':' → logprob: -10.250657081604004
    4. ' ):' → logprob: -10.250657081604004
    5. '):
' → logprob: -10.375657081604004
    6. '():' → logprob: -14.125657081604004
    7. '+' → logprob: -14.750657081604004
    8. '1' → logprob: -16.000656127929688
    9. '):

' → logprob: -16.000656127929688
    10. ' :' → logprob: -16.125656127929688

Token 299: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03280668333172798
    2. ':' → logprob: -4.032806873321533
    3. ' if' → logprob: -5.032806873321533
    4. '    
' → logprob: -5.907806873321533
    5. ':
' → logprob: -6.157806873321533
    6. ' :' → logprob: -6.907806873321533
    7. 'if' → logprob: -7.407806873321533
    8. ' 
' → logprob: -7.657806873321533
    9. ' :
' → logprob: -7.782806873321533
    10. ' ' → logprob: -8.782806396484375

Token 300: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.13560864329338074
    2. '   ' → logprob: -2.385608673095703
    3. 'if' → logprob: -3.510608673095703
    4. '    ' → logprob: -7.010608673095703
    5. ' ' → logprob: -7.260608673095703
    6. ' num' → logprob: -7.510608673095703
    7. '    
' → logprob: -7.635608673095703
    8. 'num' → logprob: -7.760608673095703
    9. ' 
' → logprob: -7.885608673095703
    10. ' val' → logprob: -8.385608673095703

Token 301: ' Vér' (ID: 159169)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3045186400413513
    2. 'num' → logprob: -1.429518699645996
    3. ' if' → logprob: -4.679518699645996
    4. 'n' → logprob: -5.429518699645996
    5. 'val' → logprob: -5.554518699645996
    6. 'value' → logprob: -5.804518699645996
    7. 'number' → logprob: -6.679518699645996
    8. '   ' → logprob: -7.554518699645996
    9. ' num' → logprob: -8.054518699645996
    10. 'x' → logprob: -8.429518699645996

Token 302: 'ifie' (ID: 46409)
  Prédit: 'ifie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifie' → logprob: -0.0002537104592192918
    2. 'if' → logprob: -8.375253677368164
    3. 'ifier' → logprob: -11.625253677368164
    4. 'ifiez' → logprob: -12.000253677368164
    5. 'ife' → logprob: -12.375253677368164
    6. 'ify' → logprob: -12.875253677368164
    7. ' if' → logprob: -14.750253677368164
    8. 'ifi' → logprob: -15.500253677368164
    9. 'ifies' → logprob: -15.875253677368164
    10. 'ifié' → logprob: -16.000253677368164

Token 303: ' si' (ID: 1784)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.10332323610782623
    2. ' ' → logprob: -2.728323221206665
    3. ' nums' → logprob: -3.978323221206665
    4. 'if' → logprob: -4.353323459625244
    5. 'nums' → logprob: -7.853323459625244
    6. '  ' → logprob: -7.978323459625244
    7. '   ' → logprob: -8.603322982788086
    8. ' ' → logprob: -8.853322982788086
    9. ' i' → logprob: -9.353322982788086
    10. ' whether' → logprob: -10.728322982788086

Token 304: ' l' (ID: 305)
  Prédit: 'nums'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nums' → logprob: -0.16023863852024078
    2. ' nums' → logprob: -1.9102386236190796
    3. '(nums' → logprob: -11.785238265991211
    4. 'num' → logprob: -12.285238265991211
    5. ' ' → logprob: -13.285238265991211
    6. '   ' → logprob: -16.03523826599121
    7. 'j' → logprob: -16.28523826599121
    8. ' num' → logprob: -16.41023826599121
    9. 'Nums' → logprob: -16.53523826599121
    10. 'numbers' → logprob: -17.03523826599121

Token 305: ''' (ID: 6)
  Prédit: 'nums'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nums' → logprob: -0.1442325860261917
    2. ' nums' → logprob: -2.0192325115203857
    3. '(nums' → logprob: -8.269232749938965
    4. 's' → logprob: -8.394232749938965
    5. '[' → logprob: -8.519232749938965
    6. 'a' → logprob: -8.644232749938965
    7. 'e' → logprob: -8.644232749938965
    8. 'es' → logprob: -9.394232749938965
    9. '`' → logprob: -9.644232749938965
    10. 'num' → logprob: -10.019232749938965

Token 306: 'élé' (ID: 15228)
  Prédit: 'nums'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nums' → logprob: -0.04868365824222565
    2. ' nums' → logprob: -3.0486836433410645
    3. 'num' → logprob: -9.923684120178223
    4. '(nums' → logprob: -10.423684120178223
    5. ' ' → logprob: -12.423684120178223
    6. 'ms' → logprob: -13.423684120178223
    7. 'Nums' → logprob: -13.548684120178223
    8. 's' → logprob: -13.548684120178223
    9. 'ums' → logprob: -13.673684120178223
    10. '_nums' → logprob: -13.673684120178223

Token 307: 'ment' (ID: 508)
  Prédit: 'ment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ment' → logprob: -0.056497909128665924
    2. 'ément' → logprob: -3.181497812271118
    3. 'ement' → logprob: -4.431498050689697
    4. 'ém' → logprob: -7.931498050689697
    5. 'em' → logprob: -8.056497573852539
    6. 'm' → logprob: -8.056497573852539
    7. 'mnt' → logprob: -8.806497573852539
    8. 'ments' → logprob: -9.556497573852539
    9. 'mt' → logprob: -9.806497573852539
    10. 'lement' → logprob: -10.056497573852539

Token 308: ' courant' (ID: 74694)
  Prédit: ' nums'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' nums' → logprob: -0.12795288860797882
    2. 'nums' → logprob: -2.502952814102173
    3. 's' → logprob: -3.627952814102173
    4. ' ' → logprob: -5.252953052520752
    5. '[' → logprob: -5.877953052520752
    6. '%' → logprob: -6.502953052520752
    7. '[j' → logprob: -6.877953052520752
    8. ' %' → logprob: -7.377953052520752
    9. ' j' → logprob: -9.002952575683594
    10. '(nums' → logprob: -9.002952575683594

Token 309: ' (' (ID: 350)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.47383666038513184
    2. ' nums' → logprob: -1.5988366603851318
    3. ' ' → logprob: -1.9738366603851318
    4. '%' → logprob: -3.848836660385132
    5. 'nums' → logprob: -4.473836898803711
    6. 's' → logprob: -6.098836898803711
    7. '[' → logprob: -7.848836898803711
    8. '(nums' → logprob: -8.348836898803711
    9. ' ' → logprob: -8.473836898803711
    10. '[j' → logprob: -9.223836898803711

Token 310: 'nums' (ID: 44465)
  Prédit: 'nums'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nums' → logprob: -0.5233669877052307
    2. ' nums' → logprob: -0.8983669877052307
    3. '(nums' → logprob: -8.648366928100586
    4. ')' → logprob: -9.898366928100586
    5. 'j' → logprob: -12.148366928100586
    6. ' )' → logprob: -12.398366928100586
    7. ' ' → logprob: -12.898366928100586
    8. 'num' → logprob: -13.273366928100586
    9. ' j' → logprob: -13.523366928100586
    10. '_nums' → logprob: -14.273366928100586

Token 311: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.00016337241686414927
    2. '[' → logprob: -8.750163078308105
    3. ')' → logprob: -12.750163078308105
    4. ' [' → logprob: -14.000163078308105
    5. ')[' → logprob: -14.125163078308105
    6. '[
' → logprob: -15.250163078308105
    7. '```' → logprob: -17.125164031982422
    8. '[js' → logprob: -17.250164031982422
    9. 'j' → logprob: -17.375164031982422
    10. '[i' → logprob: -17.500164031982422

Token 312: '])' (ID: 4636)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03967422991991043
    2. '])' → logprob: -3.2896742820739746
    3. ']%' → logprob: -6.789674282073975
    4. ' ]' → logprob: -8.539673805236816
    5. ')' → logprob: -8.539673805236816
    6. ' ])' → logprob: -9.664673805236816
    7. '%' → logprob: -10.289673805236816
    8. ' ' → logprob: -13.039673805236816
    9. ' ' → logprob: -13.164673805236816
    10. '[' → logprob: -13.289673805236816

Token 313: ' est' (ID: 893)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.18165208399295807
    2. '%' → logprob: -1.8066520690917969
    3. ' ' → logprob: -6.306652069091797
    4. ')' → logprob: -10.056652069091797
    5. ' ' → logprob: -10.306652069091797
    6. ' )' → logprob: -13.556652069091797
    7. ')%' → logprob: -14.431652069091797
    8. ' is' → logprob: -14.431652069091797
    9. ' %
' → logprob: -15.056652069091797
    10. '<|end|>' → logprob: -15.181652069091797

Token 314: ' pair' (ID: 10610)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.30812665820121765
    2. '%' → logprob: -2.18312668800354
    3. ' divisible' → logprob: -2.80812668800354
    4. ' %' → logprob: -2.93312668800354
    5. ' even' → logprob: -4.058126449584961
    6. ' odd' → logprob: -4.558126449584961
    7. 'even' → logprob: -5.183126449584961
    8. ' pair' → logprob: -5.933126449584961
    9. '_even' → logprob: -7.058126449584961
    10. 'odd' → logprob: -7.058126449584961

Token 315: ' en' (ID: 469)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.285200297832489
    2. ' and' → logprob: -1.5352003574371338
    3. ' :' → logprob: -4.160200119018555
    4. 'and' → logprob: -4.410200119018555
    5. '   ' → logprob: -5.535200119018555
    6. ':
' → logprob: -7.785200119018555
    7. ' et' → logprob: -8.535200119018555
    8. ' ' → logprob: -10.035200119018555
    9. ' if' → logprob: -10.035200119018555
    10. '):' → logprob: -10.160200119018555

Token 316: ' utilisant' (ID: 92474)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.2159089595079422
    2. ' %' → logprob: -1.7159090042114258
    3. ' ' → logprob: -4.340909004211426
    4. ')' → logprob: -8.090909004211426
    5. ' divisible' → logprob: -8.090909004211426
    6. 'nums' → logprob: -8.465909004211426
    7. ' nums' → logprob: -8.590909004211426
    8. ' )' → logprob: -10.090909004211426
    9. 's' → logprob: -10.590909004211426
    10. 'if' → logprob: -10.590909004211426

Token 317: ' l' (ID: 305)
  Prédit: 'nums'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nums' → logprob: -0.6501052379608154
    2. ' nums' → logprob: -0.9001052379608154
    3. '%' → logprob: -3.1501052379608154
    4. ' %' → logprob: -4.4001054763793945
    5. ' ' → logprob: -4.9001054763793945
    6. '(nums' → logprob: -5.2751054763793945
    7. 'if' → logprob: -6.7751054763793945
    8. ' ' → logprob: -7.5251054763793945
    9. ' if' → logprob: -7.7751054763793945
    10. '%n' → logprob: -8.525105476379395

Token 318: ''op' (ID: 70747)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.017270762473344803
    2. ''' → logprob: -4.767270565032959
    3. 'e' → logprob: -5.642270565032959
    4. ' %' → logprob: -6.142270565032959
    5. '`' → logprob: -6.892270565032959
    6. ''%' → logprob: -7.392270565032959
    7. ' modulo' → logprob: -7.767270565032959
    8. '```' → logprob: -9.017271041870117
    9. 'a' → logprob: -9.142271041870117
    10. 'es' → logprob: -9.517271041870117

Token 319: 'érateur' (ID: 108528)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.056038934737443924
    2. 't' → logprob: -3.8060388565063477
    3. 'ar' → logprob: -4.931038856506348
    4. 'r' → logprob: -5.181038856506348
    5. 'er' → logprob: -5.181038856506348
    6. 'érateur' → logprob: -5.806038856506348
    7. '%d' → logprob: -6.556038856506348
    8. ' %' → logprob: -6.681038856506348
    9. '()%' → logprob: -6.806038856506348
    10. '%(' → logprob: -7.181038856506348

Token 320: ' modulo' (ID: 112372)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.1269645392894745
    2. ' %' → logprob: -2.126964569091797
    3. ' ' → logprob: -12.001964569091797
    4. ' ' → logprob: -12.126964569091797
    5. '%d' → logprob: -12.126964569091797
    6. ' modulo' → logprob: -12.751964569091797
    7. '%i' → logprob: -12.751964569091797
    8. '%s' → logprob: -12.876964569091797
    9. '%b' → logprob: -13.626964569091797
    10. '%n' → logprob: -13.626964569091797

Token 321: ' (%' (ID: 32540)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.5530111193656921
    2. ' ' → logprob: -1.553011178970337
    3. '%' → logprob: -2.303011178970337
    4. '(' → logprob: -3.178011178970337
    5. ' (' → logprob: -3.678011178970337
    6. ' ==' → logprob: -4.053010940551758
    7. ' (%)' → logprob: -4.803010940551758
    8. ' nums' → logprob: -5.428010940551758
    9. '2' → logprob: -5.428010940551758
    10. '1' → logprob: -5.553010940551758

Token 322: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.21007958054542542
    2. ' )' → logprob: -2.4600796699523926
    3. '==' → logprob: -3.0850796699523926
    4. ' ==' → logprob: -3.4600796699523926
    5. '2' → logprob: -4.210079669952393
    6. ')==' → logprob: -5.335079669952393
    7. ' ' → logprob: -5.585079669952393
    8. ' !=' → logprob: -6.710079669952393
    9. '!=' → logprob: -7.210079669952393
    10. '1' → logprob: -7.960079669952393

Token 323: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01371337752789259
    2. ' if' → logprob: -4.638713359832764
    3. 'if' → logprob: -7.013713359832764
    4. '    ' → logprob: -7.013713359832764
    5. ' ' → logprob: -7.263713359832764
    6. '    
' → logprob: -7.263713359832764
    7. ':' → logprob: -8.513713836669922
    8. '       ' → logprob: -9.138713836669922
    9. '     
' → logprob: -9.263713836669922
    10. '4' → logprob: -9.763713836669922

Token 324: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2900882363319397
    2. 'if' → logprob: -1.540088176727295
    3. '   ' → logprob: -3.290088176727295
    4. ' ' → logprob: -9.915088653564453
    5. '    ' → logprob: -10.165088653564453
    6. '	if' → logprob: -10.540088653564453
    7. ' i' → logprob: -10.915088653564453
    8. '  ' → logprob: -11.665088653564453
    9. '    
' → logprob: -11.665088653564453
    10. ':' → logprob: -11.790088653564453

Token 325: ' Si' (ID: 7832)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4072359800338745
    2. 'if' → logprob: -1.1572359800338745
    3. '   ' → logprob: -3.907236099243164
    4. '    ' → logprob: -10.282236099243164
    5. ' ' → logprob: -11.532236099243164
    6. '	if' → logprob: -11.782236099243164
    7. '    
' → logprob: -13.032236099243164
    8. '```' → logprob: -13.157236099243164
    9. 'If' → logprob: -13.282236099243164
    10. '  ' → logprob: -13.782236099243164

Token 326: ' un' (ID: 537)
  Prédit: ' nums'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' nums' → logprob: -0.1269710510969162
    2. 'nums' → logprob: -2.1269710063934326
    3. '(nums' → logprob: -10.126971244812012
    4. ' ' → logprob: -13.501971244812012
    5. 'num' → logprob: -14.126971244812012
    6. ' ' → logprob: -15.126971244812012
    7. ' num' → logprob: -15.501971244812012
    8. 'Nums' → logprob: -16.001970291137695
    9. ' (' → logprob: -16.251970291137695
    10. '_nums' → logprob: -16.751970291137695

Token 327: ' nombre' (ID: 9733)
  Prédit: ' nums'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' nums' → logprob: -0.5305981040000916
    2. 'nums' → logprob: -0.9055981040000916
    3. '(nums' → logprob: -5.155598163604736
    4. ' ' → logprob: -7.530598163604736
    5. '%' → logprob: -8.030597686767578
    6. ')' → logprob: -8.780597686767578
    7. 'num' → logprob: -9.030597686767578
    8. ' ' → logprob: -9.405597686767578
    9. 'space' → logprob: -9.655597686767578
    10. ' num' → logprob: -10.030597686767578

Token 328: ' modulo' (ID: 112372)
  Prédit: ' nums'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' nums' → logprob: -0.0469476543366909
    2. ' %' → logprob: -3.921947717666626
    3. 'nums' → logprob: -4.046947479248047
    4. '%' → logprob: -5.421947479248047
    5. '(nums' → logprob: -5.921947479248047
    6. ' ' → logprob: -6.796947479248047
    7. ' ' → logprob: -8.671947479248047
    8. '   ' → logprob: -10.171947479248047
    9. '[' → logprob: -10.296947479248047
    10. '[num' → logprob: -10.296947479248047

Token 329: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.42872822284698486
    2. ' ' → logprob: -1.0537282228469849
    3. 'nums' → logprob: -11.678728103637695
    4. ' nums' → logprob: -12.053728103637695
    5. '```' → logprob: -12.928728103637695
    6. '(nums' → logprob: -13.303728103637695
    7. '   ' → logprob: -13.428728103637695
    8. '10' → logprob: -13.803728103637695
    9. '1' → logprob: -14.053728103637695
    10. '(' → logprob: -14.178728103637695

Token 330: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00026288547087460756
    2. ' ' → logprob: -8.250263214111328
    3. '```' → logprob: -14.500263214111328
    4. '   ' → logprob: -14.750263214111328
    5. 'nums' → logprob: -15.125263214111328
    6. '==' → logprob: -16.250263214111328
    7. '  ' → logprob: -16.375263214111328
    8. '0' → logprob: -17.125263214111328
    9. '
' → logprob: -17.125263214111328
    10. '3' → logprob: -17.125263214111328

Token 331: ' est' (ID: 893)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.2290801703929901
    2. '==' → logprob: -1.6040802001953125
    3. ' ' → logprob: -6.3540802001953125
    4. '=' → logprob: -6.9790802001953125
    5. ')' → logprob: -7.4790802001953125
    6. ' !=' → logprob: -8.729080200195312
    7. ' =' → logprob: -9.479080200195312
    8. ')==' → logprob: -9.729080200195312
    9. '!=' → logprob: -10.104080200195312
    10. ' ' → logprob: -10.979080200195312

Token 332: ' égal' (ID: 15059)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.08554831147193909
    2. '0' → logprob: -2.8355484008789062
    3. ' ==' → logprob: -4.335548400878906
    4. '=' → logprob: -5.460548400878906
    5. '==' → logprob: -5.835548400878906
    6. ' =' → logprob: -5.835548400878906
    7. ' égal' → logprob: -10.210548400878906
    8. ' equal' → logprob: -10.585548400878906
    9. ' ' → logprob: -11.085548400878906
    10. '  ' → logprob: -11.835548400878906

Token 333: ' à' (ID: 1221)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5985034108161926
    2. '0' → logprob: -1.2235033512115479
    3. ' à' → logprob: -2.098503351211548
    4. '=' → logprob: -4.348503589630127
    5. ' ==' → logprob: -5.098503589630127
    6. '1' → logprob: -5.473503589630127
    7. ' a' → logprob: -5.848503589630127
    8. '==' → logprob: -5.973503589630127
    9. 'à' → logprob: -6.223503589630127
    10. ' =' → logprob: -6.848503589630127

Token 334: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.08894316852092743
    2. ' ' → logprob: -2.4639432430267334
    3. '1' → logprob: -13.588943481445312
    4. '=' → logprob: -14.213943481445312
    5. '==' → logprob: -14.713943481445312
    6. '```' → logprob: -14.713943481445312
    7. ' ' → logprob: -15.088943481445312
    8. '  ' → logprob: -15.213943481445312
    9. ' ==' → logprob: -16.088943481445312
    10. '   ' → logprob: -16.338943481445312

Token 335: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0019316127290949225
    2. ' ' → logprob: -6.251931667327881
    3. '=' → logprob: -13.376931190490723
    4. '==' → logprob: -14.126931190490723
    5. '```' → logprob: -14.876931190490723
    6. '1' → logprob: -15.751931190490723
    7. ' ==' → logprob: -16.62693214416504
    8. ' =' → logprob: -16.75193214416504
    9. ' ' → logprob: -17.00193214416504
    10. '   ' → logprob: -17.12693214416504

Token 336: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05537720397114754
    2. ' :' → logprob: -2.930377244949341
    3. ',' → logprob: -7.930377006530762
    4. ':
' → logprob: -9.680377006530762
    5. ' ,' → logprob: -10.680377006530762
    6. ' :
' → logprob: -11.055377006530762
    7. ' ' → logprob: -11.305377006530762
    8. '   ' → logprob: -11.555377006530762
    9. ' and' → logprob: -12.305377006530762
    10. ' ' → logprob: -13.430377006530762

Token 337: ' cela' (ID: 17542)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.37543347477912903
    2. ':' → logprob: -2.3754334449768066
    3. ' :' → logprob: -2.6254334449768066
    4. ' ' → logprob: -3.0004334449768066
    5. '    ' → logprob: -3.7504334449768066
    6. ' nums' → logprob: -3.8754334449768066
    7. '   ' → logprob: -4.500433444976807
    8. ' even' → logprob: -5.250433444976807
    9. 'nums' → logprob: -5.500433444976807
    10. '  ' → logprob: -5.625433444976807

Token 338: ' signifie' (ID: 81149)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.115346260368824
    2. ' ==' → logprob: -2.7403461933135986
    3. ' ' → logprob: -4.240346431732178
    4. ' signifie' → logprob: -4.740346431732178
    5. ' continue' → logprob: -4.865346431732178
    6. ' :' → logprob: -5.115346431732178
    7. '==' → logprob: -6.490346431732178
    8. ' est' → logprob: -7.115346431732178
    9. ' continues' → logprob: -7.365346431732178
    10. '   ' → logprob: -7.615346431732178

Token 339: ' que' (ID: 661)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1509123593568802
    2. ' que' → logprob: -2.525912284851074
    3. ' nums' → logprob: -3.150912284851074
    4. ' that' → logprob: -5.400912284851074
    5. '   ' → logprob: -5.900912284851074
    6. '  ' → logprob: -5.900912284851074
    7. 'nums' → logprob: -6.025912284851074
    8. ' qu' → logprob: -6.900912284851074
    9. '"' → logprob: -7.025912284851074
    10. ' ' → logprob: -8.025912284851074

Token 340: ' le' (ID: 505)
  Prédit: ' nums'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' nums' → logprob: -0.016088686883449554
    2. 'nums' → logprob: -4.141088485717773
    3. ' num' → logprob: -11.016088485717773
    4. '(nums' → logprob: -11.266088485717773
    5. ' ' → logprob: -11.391088485717773
    6. ' ' → logprob: -11.641088485717773
    7. 'num' → logprob: -13.016088485717773
    8. ' n' → logprob: -14.641088485717773
    9. ' numbers' → logprob: -14.891088485717773
    10. '_nums' → logprob: -15.141088485717773

Token 341: ' nombre' (ID: 9733)
  Prédit: 'nums'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nums' → logprob: -0.11733432859182358
    2. ' nums' → logprob: -2.2423343658447266
    3. 'num' → logprob: -5.867334365844727
    4. 'nombre' → logprob: -6.867334365844727
    5. ' nombre' → logprob: -8.492334365844727
    6. ' number' → logprob: -9.492334365844727
    7. 'number' → logprob: -9.617334365844727
    8. ' num' → logprob: -9.867334365844727
    9. ' nombres' → logprob: -9.867334365844727
    10. 'n' → logprob: -10.242334365844727

Token 342: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.1663735806941986
    2. ' is' → logprob: -2.9163734912872314
    3. ' nums' → logprob: -3.7913734912872314
    4. 'est' → logprob: -3.9163734912872314
    5. 's' → logprob: -4.1663737297058105
    6. ' ' → logprob: -4.2913737297058105
    7. 'nums' → logprob: -4.5413737297058105
    8. '%' → logprob: -4.9163737297058105
    9. ')' → logprob: -5.0413737297058105
    10. ' %' → logprob: -7.5413737297058105

Token 343: ' pair' (ID: 10610)
  Prédit: ' pair'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pair' → logprob: -0.35064178705215454
    2. 'pair' → logprob: -1.2256417274475098
    3. ' paire' → logprob: -7.10064172744751
    4. ' even' → logprob: -7.22564172744751
    5. 'even' → logprob: -7.85064172744751
    6. ' divisible' → logprob: -9.100642204284668
    7. '_pair' → logprob: -10.100642204284668
    8. ' ' → logprob: -10.225642204284668
    9. ' pairs' → logprob: -11.100642204284668
    10. 'pa' → logprob: -11.100642204284668

Token 344: '.
' (ID: 558)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01997624710202217
    2. '   ' → logprob: -4.0199761390686035
    3. ' :' → logprob: -6.7699761390686035
    4. ':
' → logprob: -7.7699761390686035
    5. '       ' → logprob: -8.644976615905762
    6. ',' → logprob: -10.269976615905762
    7. '):' → logprob: -10.894976615905762
    8. '.' → logprob: -12.019976615905762
    9. ' :
' → logprob: -12.394976615905762
    10. '    ' → logprob: -12.519976615905762

Token 345: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0010263776639476418
    2. ':' → logprob: -7.751026153564453
    3. 'if' → logprob: -8.126026153564453
    4. ' if' → logprob: -8.376026153564453
    5. '       ' → logprob: -9.751026153564453
    6. '   ' → logprob: -12.751026153564453
    7. '    
' → logprob: -12.876026153564453
    8. '    ' → logprob: -13.126026153564453
    9. '  ' → logprob: -13.501026153564453
    10. ' :' → logprob: -14.501026153564453

Token 346: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7871826887130737
    2. 'if' (adapté à ' if') → logprob: -0.7871826887130737
    3. ' if' → logprob: -2.4121828079223633
    4. '       ' → logprob: -10.162182807922363
    5. ':' → logprob: -10.787182807922363
    6. '	if' → logprob: -10.912182807922363
    7. '   ' → logprob: -11.162182807922363
    8. '    
' → logprob: -11.287182807922363
    9. '  ' → logprob: -11.787182807922363
    10. '    ' → logprob: -11.912182807922363

Token 347: ' nums' (ID: 18117)
  Prédit: ' nums'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nums' → logprob: -0.014197002165019512
    2. 'nums' → logprob: -4.264196872711182
    3. '(nums' → logprob: -10.38919734954834
    4. ' ' → logprob: -13.26419734954834
    5. ' num' → logprob: -14.51419734954834
    6. ' (' → logprob: -15.01419734954834
    7. 'num' → logprob: -15.76419734954834
    8. ' ' → logprob: -17.264196395874023
    9. '   ' → logprob: -17.764196395874023
    10. '_nums' → logprob: -18.889196395874023

Token 348: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -1.700132997939363e-05
    2. '[' → logprob: -11.125017166137695
    3. ' [' → logprob: -13.125017166137695
    4. '   ' → logprob: -16.000017166137695
    5. '[i' → logprob: -17.250017166137695
    6. ' ' → logprob: -18.125017166137695
    7. ')' → logprob: -18.750017166137695
    8. '[
' → logprob: -18.875017166137695
    9. ']' → logprob: -19.000017166137695
    10. '```' → logprob: -19.000017166137695

Token 349: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.08359593898057938
    2. ' %' → logprob: -2.8335959911346436
    3. ' ]' → logprob: -4.7085957527160645
    4. ' ' → logprob: -5.4585957527160645
    5. '%' → logprob: -5.4585957527160645
    6. ')' → logprob: -5.7085957527160645
    7. ']%' → logprob: -7.8335957527160645
    8. ' ' → logprob: -9.833596229553223
    9. ' )' → logprob: -9.958596229553223
    10. '   ' → logprob: -11.208596229553223

Token 350: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.006945891305804253
    2. '%' → logprob: -5.006946086883545
    3. ' ' → logprob: -8.381945610046387
    4. ' ' → logprob: -13.506945610046387
    5. ')' → logprob: -15.881945610046387
    6. '0' → logprob: -18.381946563720703
    7. ' %
' → logprob: -18.381946563720703
    8. '```' → logprob: -18.381946563720703
    9. '  ' → logprob: -18.506946563720703
    10. '   ' → logprob: -18.631946563720703

Token 351: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.17974531650543213
    2. '2' → logprob: -1.8047453165054321
    3. '```' → logprob: -15.4297456741333
    4. ' ' → logprob: -15.8047456741333
    5. '=' → logprob: -16.179744720458984
    6. '==' → logprob: -17.429744720458984
    7. '0' → logprob: -17.617244720458984
    8. '   ' → logprob: -17.679744720458984
    9. ' 
' → logprob: -17.867244720458984
    10. '1' → logprob: -17.867244720458984

Token 352: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.7120533811976202e-05
    2. ' ' → logprob: -11.000017166137695
    3. '```' → logprob: -15.250017166137695
    4. '0' → logprob: -16.625017166137695
    5. '   ' → logprob: -17.125017166137695
    6. '  ' → logprob: -19.250017166137695
    7. '
' → logprob: -19.250017166137695
    8. '1' → logprob: -19.375017166137695
    9. '==' → logprob: -19.562517166137695
    10. '`' → logprob: -20.000017166137695

Token 353: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.2523830235004425
    2. '==' → logprob: -1.5023829936981201
    3. '=' → logprob: -7.877383232116699
    4. '0' → logprob: -10.5023832321167
    5. ' ' → logprob: -10.6273832321167
    6. ' =' → logprob: -11.1273832321167
    7. ')' → logprob: -12.6273832321167
    8. ')==' → logprob: -13.5023832321167
    9. '==
' → logprob: -14.2523832321167
    10. ':' → logprob: -14.5023832321167

Token 354: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005233882926404476
    2. ' ' → logprob: -5.2552337646484375
    3. '   ' → logprob: -17.505233764648438
    4. ' ' → logprob: -18.192733764648438
    5. '=' → logprob: -18.567733764648438
    6. '
' → logprob: -18.692733764648438
    7. '```' → logprob: -18.755233764648438
    8. '۰' → logprob: -19.130233764648438
    9. '00' → logprob: -19.317733764648438
    10. '1' → logprob: -19.380233764648438

Token 355: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.0126840758603066e-05
    2. ' ' → logprob: -10.125040054321289
    3. '00' → logprob: -20.12504005432129
    4. '1' → logprob: -20.12504005432129
    5. '   ' → logprob: -20.50004005432129
    6. '۰' → logprob: -20.50004005432129
    7. '```' → logprob: -20.75004005432129
    8. '2' → logprob: -21.25004005432129
    9. '  ' → logprob: -21.50004005432129
    10. '=' → logprob: -21.50004005432129

Token 356: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0003382038848940283
    2. ':
' → logprob: -8.000338554382324
    3. ' :' → logprob: -13.250338554382324
    4. '   ' → logprob: -14.750338554382324
    5. '):' → logprob: -14.750338554382324
    6. '       ' → logprob: -16.375337600708008
    7. ' and' → logprob: -16.875337600708008
    8. ':
' → logprob: -17.000337600708008
    9. ':

' → logprob: -17.875337600708008
    10. 'and' → logprob: -18.125337600708008

Token 357: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.29223111271858215
    2. '       ' → logprob: -1.4172310829162598
    3. '   ' → logprob: -4.66723108291626
    4. ':
' → logprob: -7.16723108291626
    5. ' :' → logprob: -7.41723108291626
    6. 'even' → logprob: -8.917231559753418
    7. ' even' → logprob: -10.292231559753418
    8. '        
' → logprob: -11.167231559753418
    9. '           ' → logprob: -11.667231559753418
    10. '    ' → logprob: -11.667231559753418

Token 358: ' #' (ID: 1069)
  Prédit: 'even'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'even' → logprob: -0.05099967494606972
    2. '           ' → logprob: -3.925999641418457
    3. ' even' → logprob: -4.175999641418457
    4. '       ' → logprob: -4.425999641418457
    5. '   ' → logprob: -6.050999641418457
    6. '        
' → logprob: -9.800999641418457
    7. '
' → logprob: -9.800999641418457
    8. '            
' → logprob: -9.925999641418457
    9. '               ' → logprob: -10.800999641418457
    10. '```' → logprob: -10.925999641418457

Token 359: ' In' (ID: 730)
  Prédit: 'even'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'even' → logprob: -0.0005906827282160521
    2. ' even' → logprob: -7.500590801239014
    3. '   ' → logprob: -10.375590324401855
    4. '       ' → logprob: -13.375590324401855
    5. '           ' → logprob: -13.625590324401855
    6. 'e' → logprob: -14.125590324401855
    7. ' ' → logprob: -14.250590324401855
    8. 'if' → logprob: -14.375590324401855
    9. '
' → logprob: -15.000590324401855
    10. '  ' → logprob: -15.500590324401855

Token 360: 'cré' (ID: 125389)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6254360675811768
    2. 'even' → logprob: -1.3754360675811768
    3. '   ' → logprob: -1.6254360675811768
    4. 'crement' → logprob: -4.750435829162598
    5. '           ' → logprob: -6.250435829162598
    6. 'cre' → logprob: -6.750435829162598
    7. ' even' → logprob: -6.875435829162598
    8. '     ' → logprob: -6.875435829162598
    9. '      ' → logprob: -7.250435829162598
    10. 'e' → logprob: -8.250435829162598

Token 361: 'mente' (ID: 4186)
  Prédit: 'mente'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mente' → logprob: -0.18150176107883453
    2. 'ment' → logprob: -1.8065017461776733
    3. 'm' → logprob: -7.306501865386963
    4. 'ments' → logprob: -8.056501388549805
    5. 'mentation' → logprob: -8.806501388549805
    6. 'mental' → logprob: -9.431501388549805
    7. '       ' → logprob: -9.556501388549805
    8. '   ' → logprob: -9.681501388549805
    9. ' mente' → logprob: -9.806501388549805
    10. 'mentar' → logprob: -9.806501388549805

Token 362: ' le' (ID: 505)
  Prédit: ' even'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' even' → logprob: -0.693152129650116
    2. 'even' → logprob: -0.693152129650116
    3. ' ' → logprob: -12.69315242767334
    4. '_even' → logprob: -14.44315242767334
    5. 'e' → logprob: -14.94315242767334
    6. ' ' → logprob: -15.44315242767334
    7. '   ' → logprob: -15.69315242767334
    8. '1' → logprob: -16.068151473999023
    9. ' the' → logprob: -16.443151473999023
    10. '
' → logprob: -16.443151473999023

Token 363: ' compteur' (ID: 163344)
  Prédit: 'even'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'even' → logprob: -0.0008117707911878824
    2. ' even' → logprob: -7.125811576843262
    3. 'e' → logprob: -12.875811576843262
    4. 'eve' → logprob: -13.375811576843262
    5. ' ' → logprob: -13.875811576843262
    6. 'ev' → logprob: -14.500811576843262
    7. 'ever' → logprob: -15.125811576843262
    8. 'event' → logprob: -15.250811576843262
    9. 'evenodd' → logprob: -15.250811576843262
    10. '   ' → logprob: -15.625811576843262

Token 364: ' '' (ID: 461)
  Prédit: ' even'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' even' → logprob: -0.5759835243225098
    2. 'even' → logprob: -0.8259835243225098
    3. '_even' → logprob: -10.700983047485352
    4. ' ' → logprob: -12.075983047485352
    5. '   ' → logprob: -12.450983047485352
    6. ' ' → logprob: -12.575983047485352
    7. 's' → logprob: -13.325983047485352
    8. ' même' → logprob: -14.075983047485352
    9. ' pair' → logprob: -14.200983047485352
    10. ' de' → logprob: -14.200983047485352

Token 365: 'even' (ID: 28689)
  Prédit: 'even'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'even' → logprob: -0.00015860427811276168
    2. ' even' → logprob: -8.750158309936523
    3. '_even' → logprob: -17.625158309936523
    4. ' ' → logprob: -18.125158309936523
    5. 'evenodd' → logprob: -18.125158309936523
    6. 'e' → logprob: -18.250158309936523
    7. 'eve' → logprob: -18.750158309936523
    8. 'ever' → logprob: -19.125158309936523
    9. '   ' → logprob: -19.125158309936523
    10. 'Even' → logprob: -19.250158309936523

Token 366: ''' (ID: 6)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.14343734085559845
    2. '+=' → logprob: -2.018437385559082
    3. ')' → logprob: -7.518437385559082
    4. ']+=' → logprob: -9.393437385559082
    5. '+' → logprob: -9.893437385559082
    6. ' ' → logprob: -11.018437385559082
    7. '   ' → logprob: -11.268437385559082
    8. '=' → logprob: -11.643437385559082
    9. '```' → logprob: -11.768437385559082
    10. 'even' → logprob: -12.143437385559082

Token 367: ' d' (ID: 272)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.38709819316864014
    2. ' +=' → logprob: -1.1370981931686401
    3. '=' → logprob: -9.26209831237793
    4. 'even' → logprob: -9.76209831237793
    5. '+' → logprob: -10.13709831237793
    6. ' even' → logprob: -11.26209831237793
    7. '   ' → logprob: -12.51209831237793
    8. '       ' → logprob: -12.63709831237793
    9. ']+=' → logprob: -12.63709831237793
    10. ' =' → logprob: -12.63709831237793

Token 368: ''une' (ID: 13337)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000897289311978966
    2. ' ' → logprob: -7.250897407531738
    3. '+' → logprob: -9.000897407531738
    4. 'even' → logprob: -9.750897407531738
    5. ' even' → logprob: -13.250897407531738
    6. 'un' → logprob: -13.625897407531738
    7. '   ' → logprob: -13.875897407531738
    8. ' +' → logprob: -14.625897407531738
    9. '+=' → logprob: -15.125897407531738
    10. ' +=' → logprob: -15.500897407531738

Token 369: ' unité' (ID: 181741)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0361282080411911
    2. '+' → logprob: -3.661128282546997
    3. ' ' → logprob: -4.661128044128418
    4. ' +' → logprob: -9.161128044128418
    5. '<|end|>' → logprob: -9.536128044128418
    6. '=' → logprob: -10.036128044128418
    7. ' +=' → logprob: -10.536128044128418
    8. ' unité' → logprob: -11.161128044128418
    9. '+=' → logprob: -11.286128044128418
    10. ' unit' → logprob: -11.786128044128418

Token 370: ' car' (ID: 1669)
  Prédit: 'even'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'even' → logprob: -0.2610734701156616
    2. ' even' → logprob: -1.8860734701156616
    3. '       ' → logprob: -3.136073589324951
    4. '           ' → logprob: -4.136073589324951
    5. '_even' → logprob: -5.011073589324951
    6. '
' → logprob: -5.761073589324951
    7. '   ' → logprob: -6.136073589324951
    8. ' +=' → logprob: -6.136073589324951
    9. '+=' → logprob: -6.386073589324951
    10. '\n' → logprob: -7.761073589324951

Token 371: ' nums' (ID: 18117)
  Prédit: ' even'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' even' → logprob: -0.3565666377544403
    2. 'even' → logprob: -1.2315666675567627
    3. ' nums' → logprob: -5.356566429138184
    4. 'nums' → logprob: -6.731566429138184
    5. ' le' → logprob: -8.106566429138184
    6. ' ' → logprob: -8.231566429138184
    7. ' ' → logprob: -8.231566429138184
    8. ' on' → logprob: -8.356566429138184
    9. '       ' → logprob: -8.981566429138184
    10. '   ' → logprob: -9.356566429138184

Token 372: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.00035608073812909424
    2. '[' → logprob: -8.00035572052002
    3. ' [' → logprob: -11.62535572052002
    4. '   ' → logprob: -12.37535572052002
    5. 'even' → logprob: -13.62535572052002
    6. ')' → logprob: -13.87535572052002
    7. '[i' → logprob: -14.00035572052002
    8. '       ' → logprob: -14.62535572052002
    9. '(j' → logprob: -14.75035572052002
    10. 's' → logprob: -14.75035572052002

Token 373: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.11671248823404312
    2. ' est' → logprob: -3.4917125701904297
    3. ' is' → logprob: -3.7417125701904297
    4. ')' → logprob: -3.7417125701904297
    5. ' ]' → logprob: -4.24171257019043
    6. 'est' → logprob: -5.61671257019043
    7. ' a' → logprob: -5.74171257019043
    8. '%' → logprob: -5.99171257019043
    9. ' ' → logprob: -6.36671257019043
    10. ' )' → logprob: -6.99171257019043

Token 374: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -1.0932302474975586
    2. ' %' → logprob: -1.7182302474975586
    3. '%' → logprob: -1.8432302474975586
    4. ' +=' → logprob: -1.8432302474975586
    5. ' ' → logprob: -2.4682302474975586
    6. 'est' → logprob: -4.343230247497559
    7. '+=' → logprob: -4.343230247497559
    8. ' is' → logprob: -4.468230247497559
    9. ' a' → logprob: -4.718230247497559
    10. '   ' → logprob: -4.718230247497559

Token 375: ' pair' (ID: 10610)
  Prédit: ' pair'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pair' → logprob: -0.6482211947441101
    2. 'pair' → logprob: -0.7732211947441101
    3. 'even' → logprob: -4.898221015930176
    4. ' even' → logprob: -5.023221015930176
    5. ' paire' → logprob: -7.023221015930176
    6. ' un' → logprob: -8.273221015930176
    7. 'un' → logprob: -9.523221015930176
    8. ' ' → logprob: -9.648221015930176
    9. '_pair' → logprob: -10.023221015930176
    10. 'pa' → logprob: -10.273221015930176

Token 376: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1080625131726265
    2. 'even' → logprob: -2.983062505722046
    3. ' even' → logprob: -3.983062505722046
    4. '
' → logprob: -3.983062505722046
    5. '           ' → logprob: -4.858062744140625
    6. '   ' → logprob: -6.108062744140625
    7. '\n' → logprob: -6.483062744140625
    8. '        
' → logprob: -6.733062744140625
    9. '_even' → logprob: -8.108062744140625
    10. '        ' → logprob: -8.233062744140625

Token 377: '       ' (ID: 309)
  Prédit: 'even'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'even' → logprob: -0.8638761043548584
    2. '       ' → logprob: -0.9888761043548584
    3. ' even' → logprob: -1.6138761043548584
    4. '
' → logprob: -5.4888763427734375
    5. '        
' → logprob: -6.3638763427734375
    6. '   ' → logprob: -7.1138763427734375
    7. '           ' → logprob: -7.8638763427734375
    8. '    
' → logprob: -9.238876342773438
    9. ' 
' → logprob: -9.488876342773438
    10. '_even' → logprob: -10.363876342773438

Token 378: ' even' (ID: 1952)
  Prédit: 'even'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'even' (adapté à ' even') → logprob: -0.030489735305309296
    2. ' even' → logprob: -3.530489683151245
    3. '       ' → logprob: -7.405489921569824
    4. '           ' → logprob: -9.280489921569824
    5. '   ' → logprob: -10.780489921569824
    6. '
' → logprob: -11.405489921569824
    7. '        
' → logprob: -14.030489921569824
    8. '            
' → logprob: -14.280489921569824
    9. 'Even' → logprob: -14.280489921569824
    10. '               ' → logprob: -14.405489921569824

Token 379: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.6931675672531128
    2. '+=' → logprob: -0.6931675672531128
    3. '+' → logprob: -11.568167686462402
    4. '=' → logprob: -11.693167686462402
    5. '   ' → logprob: -13.443167686462402
    6. ' =' → logprob: -14.568167686462402
    7. ']+=' → logprob: -14.818167686462402
    8. '       ' → logprob: -16.318166732788086
    9. '           ' → logprob: -16.318166732788086
    10. '    ' → logprob: -17.068166732788086

Token 380: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004620241466909647
    2. ' ' → logprob: -5.37962007522583
    3. '   ' → logprob: -18.379619598388672
    4. ' ' → logprob: -19.504619598388672
    5. '```' → logprob: -20.004619598388672
    6. '  ' → logprob: -20.129619598388672
    7. '１' → logprob: -21.129619598388672
    8. '	' → logprob: -21.817119598388672
    9. '0' → logprob: -22.004619598388672
    10. '
' → logprob: -22.067119598388672

Token 381: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. '   ' → logprob: -19.625001907348633
    4. '```' → logprob: -20.500001907348633
    5. '  ' → logprob: -22.625001907348633
    6. '１' → logprob: -22.625001907348633
    7. '2' → logprob: -22.750001907348633
    8. '       ' → logprob: -23.312501907348633
    9. '۱' → logprob: -23.437501907348633
    10. '0' → logprob: -23.437501907348633

Token 382: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5332784652709961
    2. '       ' → logprob: -0.9082784652709961
    3. '        
' → logprob: -5.283278465270996
    4. '   ' → logprob: -6.783278465270996
    5. '  
' → logprob: -6.783278465270996
    6. '    
' → logprob: -6.783278465270996
    7. ' 
' → logprob: -7.533278465270996
    8. '
' → logprob: -8.033278465270996
    9. '\n' → logprob: -8.033278465270996
    10. '   
' → logprob: -8.533278465270996

Token 383: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008240550756454468
    2. '
' → logprob: -5.508240699768066
    3. '   ' → logprob: -6.758240699768066
    4. ' if' → logprob: -6.758240699768066
    5. 'if' → logprob: -7.008240699768066
    6. '        
' → logprob: -7.258240699768066
    7. '    
' → logprob: -9.383240699768066
    8. '  
' → logprob: -9.758240699768066
    9. ' 
' → logprob: -11.133240699768066
    10. ' ' → logprob: -11.633240699768066

Token 384: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22829023003578186
    2. 'if' → logprob: -1.9782902002334595
    3. ' if' → logprob: -2.728290319442749
    4. '   ' → logprob: -7.72829008102417
    5. ' ' → logprob: -11.103290557861328
    6. '        
' → logprob: -12.353290557861328
    7. '	if' → logprob: -12.978290557861328
    8. '      ' → logprob: -13.103290557861328
    9. '           ' → logprob: -13.478290557861328
    10. '  ' → logprob: -13.728290557861328

Token 385: ' À' (ID: 27643)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.018226973712444305
    2. ' if' → logprob: -4.0182271003723145
    3. '   ' → logprob: -9.643226623535156
    4. '       ' → logprob: -11.393226623535156
    5. ' ' → logprob: -14.518226623535156
    6. 'If' → logprob: -15.893226623535156
    7. '    ' → logprob: -16.018226623535156
    8. '           ' → logprob: -16.643226623535156
    9. '	if' → logprob: -17.143226623535156
    10. '  ' → logprob: -17.268226623535156

Token 386: ' l' (ID: 305)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.055579978972673416
    2. 'l' → logprob: -3.680579900741577
    3. '   ' → logprob: -4.430580139160156
    4. ' if' → logprob: -4.805580139160156
    5. 'la' → logprob: -6.055580139160156
    6. '       ' → logprob: -6.430580139160156
    7. '#' → logprob: -7.180580139160156
    8. 'contin' → logprob: -7.805580139160156
    9. '           ' → logprob: -8.055580139160156
    10. 'u' → logprob: -8.180580139160156

Token 387: ''intérieur' (ID: 102083)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.4263640344142914
    2. 'if' → logprob: -1.9263640642166138
    3. 'é' → logprob: -3.551363945007324
    4. 'elif' → logprob: -3.676363945007324
    5. '   ' → logprob: -3.676363945007324
    6. ''intérieur' → logprob: -4.176363945007324
    7. 'a' → logprob: -4.301363945007324
    8. 'u' → logprob: -4.426363945007324
    9. 'in' → logprob: -4.801363945007324
    10. '#' → logprob: -5.426363945007324

Token 388: ' de' (ID: 334)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.097072720527649
    2. '   ' → logprob: -1.472072720527649
    3. '       ' → logprob: -1.472072720527649
    4. 'if' → logprob: -1.847072720527649
    5. ' de' → logprob: -3.8470726013183594
    6. '    ' → logprob: -4.347072601318359
    7. '        ' → logprob: -5.097072601318359
    8. ' des' → logprob: -5.847072601318359
    9. '           ' → logprob: -6.097072601318359
    10. ' ' → logprob: -6.847072601318359

Token 389: ' la' (ID: 557)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.025058720260858536
    2. '   ' → logprob: -4.275058746337891
    3. ' if' → logprob: -4.900058746337891
    4. ' ' → logprob: -6.775058746337891
    5. 'l' → logprob: -7.400058746337891
    6. 'la' → logprob: -7.775058746337891
    7. '       ' → logprob: -8.27505874633789
    8. 'the' → logprob: -8.40005874633789
    9. 'nums' → logprob: -9.02505874633789
    10. 'even' → logprob: -9.15005874633789

Token 390: ' branche' (ID: 101958)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.016625670716166496
    2. ' if' → logprob: -4.141625881195068
    3. '   ' → logprob: -7.641625881195068
    4. 'condition' → logprob: -10.51662540435791
    5. 'nums' → logprob: -10.89162540435791
    6. ' ' → logprob: -11.39162540435791
    7. ':' → logprob: -11.64162540435791
    8. 'even' → logprob: -11.89162540435791
    9. 'block' → logprob: -12.51662540435791
    10. ' condition' → logprob: -12.64162540435791

Token 391: ' pair' (ID: 10610)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.14667442440986633
    2. 'if' → logprob: -2.271674394607544
    3. '   ' → logprob: -3.521674394607544
    4. '       ' → logprob: -6.396674633026123
    5. '    ' → logprob: -7.021674633026123
    6. '           ' → logprob: -7.021674633026123
    7. '        ' → logprob: -9.146674156188965
    8. ' suivante' → logprob: -10.146674156188965
    9. ' ' → logprob: -10.271674156188965
    10. ' de' → logprob: -10.771674156188965

Token 392: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4823979437351227
    2. ':' → logprob: -1.2323979139328003
    3. 'e' → logprob: -3.48239803314209
    4. 'if' → logprob: -3.60739803314209
    5. ' if' → logprob: -3.73239803314209
    6. '       ' → logprob: -5.60739803314209
    7. ',' → logprob: -5.98239803314209
    8. ':
' → logprob: -6.73239803314209
    9. ' :' → logprob: -6.98239803314209
    10. '           ' → logprob: -7.60739803314209

Token 393: ' vér' (ID: 42524)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7481898665428162
    2. ' if' → logprob: -0.8731898665428162
    3. 'if' → logprob: -2.248189926147461
    4. '   ' → logprob: -5.748189926147461
    5. ' ' → logprob: -9.248189926147461
    6. '           ' → logprob: -9.373189926147461
    7. '    ' → logprob: -9.748189926147461
    8. '        ' → logprob: -9.873189926147461
    9. ' ' → logprob: -10.123189926147461
    10. '	if' → logprob: -11.123189926147461

Token 394: 'ifie' (ID: 46409)
  Prédit: 'ifie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifie' → logprob: -0.0015117661096155643
    2. 'if' → logprob: -6.626511573791504
    3. 'ifies' → logprob: -9.001511573791504
    4. 'ify' → logprob: -10.751511573791504
    5. 'ife' → logprob: -11.001511573791504
    6. 'ifiez' → logprob: -11.501511573791504
    7. 'er' → logprob: -12.626511573791504
    8. ' if' → logprob: -12.876511573791504
    9. 'ifi' → logprob: -13.001511573791504
    10. '#' → logprob: -13.251511573791504

Token 395: ' une' (ID: 2463)
  Prédit: ' si'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' si' → logprob: -0.5957492589950562
    2. ' if' → logprob: -1.8457492589950562
    3. '   ' → logprob: -2.0957493782043457
    4. 'if' → logprob: -2.5957493782043457
    5. 'si' → logprob: -3.0957493782043457
    6. ' ' → logprob: -3.3457493782043457
    7. '       ' → logprob: -4.845749378204346
    8. ' ' → logprob: -6.220749378204346
    9. 's' → logprob: -7.095749378204346
    10. '  ' → logprob: -7.220749378204346

Token 396: ' condition' (ID: 7060)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9440783262252808
    2. ' if' → logprob: -1.1940783262252808
    3. 'if' → logprob: -1.5690783262252808
    4. '   ' → logprob: -3.6940784454345703
    5. 'space' → logprob: -4.44407844543457
    6. ' espace' → logprob: -4.44407844543457
    7. '    ' → logprob: -5.31907844543457
    8. 's' → logprob: -5.44407844543457
    9. '  ' → logprob: -5.44407844543457
    10. ' space' → logprob: -5.56907844543457

Token 397: ' supplémentaire' (ID: 111252)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.44086939096450806
    2. 'if' → logprob: -1.1908693313598633
    3. ':' → logprob: -3.1908693313598633
    4. '   ' → logprob: -5.440869331359863
    5. 'nums' → logprob: -6.190869331359863
    6. ' nums' → logprob: -6.815869331359863
    7. ' ' → logprob: -7.065869331359863
    8. ' si' → logprob: -7.065869331359863
    9. ' :' → logprob: -7.565869331359863
    10. ' supplémentaire' → logprob: -7.940869331359863

Token 398: ' :
' (ID: 10039)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2997872829437256
    2. '       ' → logprob: -1.6747872829437256
    3. ' if' → logprob: -3.7997872829437256
    4. 'if' → logprob: -3.7997872829437256
    5. ' :' → logprob: -4.299787521362305
    6. '   ' → logprob: -4.549787521362305
    7. '           ' → logprob: -6.674787521362305
    8. '    ' → logprob: -8.049787521362305
    9. '        ' → logprob: -8.299787521362305
    10. ':
' → logprob: -8.424787521362305

Token 399: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11884831637144089
    2. ' if' → logprob: -2.6188483238220215
    3. 'if' → logprob: -3.2438483238220215
    4. ' ' → logprob: -10.118847846984863
    5. '   ' → logprob: -10.243847846984863
    6. '	' → logprob: -10.368847846984863
    7. ' ' → logprob: -11.618847846984863
    8. '	if' → logprob: -11.868847846984863
    9. '    ' → logprob: -12.368847846984863
    10. '        ' → logprob: -12.493847846984863

Token 400: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.10064279288053513
    2. ' if' → logprob: -2.350642681121826
    3. '       ' → logprob: -7.850642681121826
    4. '   ' → logprob: -10.475643157958984
    5. '	if' → logprob: -11.850643157958984
    6. '           ' → logprob: -12.475643157958984
    7. 'si' → logprob: -12.975643157958984
    8. ' si' → logprob: -13.100643157958984
    9. ' ' → logprob: -13.475643157958984
    10. ' ' → logprob: -14.475643157958984

Token 401: ' Test' (ID: 4674)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.008703447878360748
    2. ' if' → logprob: -4.758703231811523
    3. '       ' → logprob: -9.383703231811523
    4. '   ' → logprob: -12.383703231811523
    5. '           ' → logprob: -14.883703231811523
    6. 'si' → logprob: -16.258703231811523
    7. ' si' → logprob: -16.633703231811523
    8. ' ' → logprob: -17.008703231811523
    9. '	if' → logprob: -17.008703231811523
    10. 'If' → logprob: -17.258703231811523

Token 402: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.185948371887207
    2. 'if' → logprob: -1.185948371887207
    3. ' if' → logprob: -1.685948371887207
    4. ' nums' → logprob: -2.560948371887207
    5. '   ' → logprob: -3.060948371887207
    6. 'nums' → logprob: -3.185948371887207
    7. 's' → logprob: -3.685948371887207
    8. '(nums' → logprob: -5.060948371887207
    9. '       ' → logprob: -5.810948371887207
    10. 'er' → logprob: -7.060948371887207

Token 403: ' si' (ID: 1784)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3137548267841339
    2. 'if' → logprob: -1.4387547969818115
    3. ' si' → logprob: -4.438755035400391
    4. ' nums' → logprob: -4.438755035400391
    5. 'nums' → logprob: -5.938755035400391
    6. '(nums' → logprob: -6.688755035400391
    7. 'e' → logprob: -6.813755035400391
    8. 's' → logprob: -6.938755035400391
    9. '   ' → logprob: -7.063755035400391
    10. ' ' → logprob: -7.688755035400391

Token 404: ' nums' (ID: 18117)
  Prédit: ' nums'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nums' → logprob: -0.12889520823955536
    2. 'nums' → logprob: -2.1288952827453613
    3. '(nums' → logprob: -6.253895282745361
    4. ' (' → logprob: -10.128894805908203
    5. '(' → logprob: -13.628894805908203
    6. 'num' → logprob: -14.753894805908203
    7. ' ' → logprob: -14.878894805908203
    8. ' ' → logprob: -15.503894805908203
    9. '_nums' → logprob: -15.878894805908203
    10. ' num' → logprob: -16.503894805908203

Token 405: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -2.1008713702030946e-06
    2. '[' → logprob: -13.250001907348633
    3. '[
' → logprob: -16.375001907348633
    4. ' [' → logprob: -16.750001907348633
    5. '[i' → logprob: -16.875001907348633
    6. '```' → logprob: -17.375001907348633
    7. '   ' → logprob: -17.625001907348633
    8. 'j' → logprob: -17.625001907348633
    9. '
' → logprob: -18.250001907348633
    10. '[js' → logprob: -19.250001907348633

Token 406: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.027086909860372543
    2. '%' → logprob: -4.0270867347717285
    3. ' %' → logprob: -5.1520867347717285
    4. ')' → logprob: -6.0270867347717285
    5. ' ]' → logprob: -8.402087211608887
    6. ']%' → logprob: -8.527087211608887
    7. ' ' → logprob: -9.402087211608887
    8. ' ' → logprob: -9.652087211608887
    9. '```' → logprob: -9.777087211608887
    10. '[' → logprob: -11.152087211608887

Token 407: ' n' (ID: 297)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.5760096311569214
    2. '%' → logprob: -0.8260096311569214
    3. ' ' → logprob: -9.701009750366211
    4. ' ' → logprob: -12.451009750366211
    5. '%s' → logprob: -13.701009750366211
    6. ')' → logprob: -14.201009750366211
    7. '%e' → logprob: -14.326009750366211
    8. '%d' → logprob: -14.701009750366211
    9. '<|end|>' → logprob: -14.826009750366211
    10. ' divisible' → logprob: -15.076009750366211

Token 408: ''est' (ID: 6616)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.0015722336247563362
    2. ''est' → logprob: -7.251572132110596
    3. 'um' → logprob: -8.001572608947754
    4. '%e' → logprob: -8.876572608947754
    5. 'e' → logprob: -10.001572608947754
    6. 'u' → logprob: -10.501572608947754
    7. ']%' → logprob: -10.751572608947754
    8. 'ull' → logprob: -10.751572608947754
    9. 'ombre' → logprob: -10.876572608947754
    10. ']' → logprob: -10.876572608947754

Token 409: ' pas' (ID: 2173)
  Prédit: ' divisible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' divisible' → logprob: -0.2240128517150879
    2. ' pas' → logprob: -2.474012851715088
    3. 'pas' → logprob: -2.599012851715088
    4. 'div' → logprob: -3.599012851715088
    5. '%' → logprob: -4.474012851715088
    6. '0' → logprob: -7.349012851715088
    7. 'u' → logprob: -7.349012851715088
    8. ' divis' → logprob: -7.599012851715088
    9. 'either' → logprob: -8.84901237487793
    10. '%d' → logprob: -9.09901237487793

Token 410: ' divisible' (ID: 167813)
  Prédit: ' divisible'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' divisible' → logprob: -0.01955408975481987
    2. '%' → logprob: -4.519554138183594
    3. ' ' → logprob: -5.519554138183594
    4. '0' → logprob: -6.269554138183594
    5. 'div' → logprob: -7.644554138183594
    6. ' %' → logprob: -8.269554138183594
    7. ' None' → logprob: -8.269554138183594
    8. '=' → logprob: -8.394554138183594
    9. ' divis' → logprob: -8.519554138183594
    10. '(' → logprob: -8.644554138183594

Token 411: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.43426093459129333
    2. 'par' → logprob: -1.0592609643936157
    3. ' pas' → logprob: -5.809260845184326
    4. 'pas' → logprob: -6.559260845184326
    5. '_par' → logprob: -7.684260845184326
    6. 'by' → logprob: -8.059261322021484
    7. '(par' → logprob: -8.684261322021484
    8. '%' → logprob: -9.809261322021484
    9. ' ' → logprob: -10.559261322021484
    10. 'de' → logprob: -11.184261322021484

Token 412: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.11364961415529251
    2. ' ' → logprob: -2.238649606704712
    3. '15' → logprob: -7.738649845123291
    4. '2' → logprob: -8.238649368286133
    5. '```' → logprob: -10.238649368286133
    6. '   ' → logprob: -10.988649368286133
    7. '(' → logprob: -11.113649368286133
    8. ' ' → logprob: -11.863649368286133
    9. '30' → logprob: -11.988649368286133
    10. ' trois' → logprob: -11.988649368286133

Token 413: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.020720787346363068
    2. '2' → logprob: -3.8957207202911377
    3. ' ' → logprob: -9.395720481872559
    4. '15' → logprob: -10.145720481872559
    5. '30' → logprob: -11.145720481872559
    6. '1' → logprob: -11.395720481872559
    7. '6' → logprob: -11.520720481872559
    8. '0' → logprob: -11.770720481872559
    9. '```' → logprob: -12.645720481872559
    10. '(' → logprob: -12.895720481872559

Token 414: ' ET' (ID: 23345)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.17811337113380432
    2. 'and' → logprob: -2.0531134605407715
    3. 'et' → logprob: -4.3031134605407715
    4. ' et' → logprob: -4.4281134605407715
    5. ' or' → logprob: -5.0531134605407715
    6. '       ' → logprob: -6.5531134605407715
    7. 'or' → logprob: -7.6781134605407715
    8. ')' → logprob: -8.053112983703613
    9. ' ou' → logprob: -8.178112983703613
    10. '   ' → logprob: -8.803112983703613

Token 415: ' n' (ID: 297)
  Prédit: ' nums'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nums' → logprob: -0.26449158787727356
    2. 'nums' → logprob: -1.8894915580749512
    3. ' not' → logprob: -2.889491558074951
    4. ' if' → logprob: -4.889491558074951
    5. 'not' → logprob: -5.389491558074951
    6. 'n' → logprob: -5.764491558074951
    7. ' n' → logprob: -5.764491558074951
    8. ' ' → logprob: -6.264491558074951
    9. '(nums' → logprob: -6.389491558074951
    10. 'if' → logprob: -7.139491558074951

Token 416: ''est' (ID: 6616)
  Prédit: ''est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''est' → logprob: -0.3560611307621002
    2. 'pas' → logprob: -1.7310611009597778
    3. 'or' → logprob: -2.4810612201690674
    4. 'est' → logprob: -4.356060981750488
    5. '%' → logprob: -4.856060981750488
    6. 'u' → logprob: -5.731060981750488
    7. ''' → logprob: -6.106060981750488
    8. 'e' → logprob: -6.231060981750488
    9. '’est' → logprob: -6.356060981750488
    10. 'es' → logprob: -7.231060981750488

Token 417: ' pas' (ID: 2173)
  Prédit: ' pas'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pas' → logprob: -0.4291885495185852
    2. 'pas' → logprob: -1.0541884899139404
    3. ' not' → logprob: -8.67918872833252
    4. '_pas' → logprob: -9.17918872833252
    5. 'not' → logprob: -9.42918872833252
    6. ' PAS' → logprob: -10.05418872833252
    7. ' ' → logprob: -10.67918872833252
    8. 'PAS' → logprob: -11.42918872833252
    9. '   ' → logprob: -11.80418872833252
    10. '0' → logprob: -12.05418872833252

Token 418: ' divisible' (ID: 167813)
  Prédit: ' divisible'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' divisible' → logprob: -0.00941474549472332
    2. 'div' → logprob: -4.8844146728515625
    3. ' ' → logprob: -7.0094146728515625
    4. ' divis' → logprob: -8.009414672851562
    5. '5' → logprob: -8.384414672851562
    6. '%' → logprob: -9.009414672851562
    7. '0' → logprob: -9.759414672851562
    8. ' div' → logprob: -10.259414672851562
    9. '7' → logprob: -11.259414672851562
    10. '   ' → logprob: -11.509414672851562

Token 419: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.2835664749145508
    2. 'par' → logprob: -1.4085664749145508
    3. 'by' → logprob: -6.783566474914551
    4. ' pas' → logprob: -8.15856647491455
    5. 'de' → logprob: -8.28356647491455
    6. 'pas' → logprob: -8.28356647491455
    7. ' by' → logprob: -8.65856647491455
    8. ' ' → logprob: -9.03356647491455
    9. ' de' → logprob: -10.03356647491455
    10. 'or' → logprob: -10.78356647491455

Token 420: ' ' (ID: 220)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.5231388807296753
    2. ' ' → logprob: -0.8981388807296753
    3. ' ' → logprob: -11.898138999938965
    4. '  ' → logprob: -12.898138999938965
    5. '   ' → logprob: -13.148138999938965
    6. '2' → logprob: -13.523138999938965
    7. '7' → logprob: -14.585638999938965
    8. 'or' → logprob: -14.773138999938965
    9. '	' → logprob: -15.585638999938965
    10. '3' → logprob: -15.585638999938965

Token 421: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.0701076090335846
    2. ' ' → logprob: -2.6951076984405518
    3. '2' → logprob: -8.820107460021973
    4. '7' → logprob: -12.320107460021973
    5. '15' → logprob: -12.507607460021973
    6. '  ' → logprob: -12.882607460021973
    7. 'or' → logprob: -13.007607460021973
    8. '   ' → logprob: -13.382607460021973
    9. '3' → logprob: -13.695107460021973
    10. '1' → logprob: -13.695107460021973

Token 422: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08104640245437622
    2. ' or' → logprob: -2.8310463428497314
    3. ':' → logprob: -4.9560465812683105
    4. ' if' → logprob: -5.5810465812683105
    5. ' and' → logprob: -5.7060465812683105
    6. '   ' → logprob: -6.7060465812683105
    7. 'if' → logprob: -6.8310465812683105
    8. '.' → logprob: -7.0810465812683105
    9. ',' → logprob: -7.8310465812683105
    10. '           ' → logprob: -8.081046104431152

Token 423: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013451728038489819
    2. ' if' → logprob: -4.63845157623291
    3. 'if' → logprob: -5.76345157623291
    4. '	' → logprob: -8.88845157623291
    5. '   ' → logprob: -9.01345157623291
    6. '           ' → logprob: -9.01345157623291
    7. ' or' → logprob: -10.01345157623291
    8. '	if' → logprob: -10.51345157623291
    9. '        
' → logprob: -11.38845157623291
    10. '      ' → logprob: -11.76345157623291

Token 424: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.27825379371643066
    2. ' if' → logprob: -1.5282537937164307
    3. '       ' → logprob: -3.6532537937164307
    4. '   ' → logprob: -10.153253555297852
    5. ' ' → logprob: -10.778253555297852
    6. '	if' → logprob: -12.028253555297852
    7. 'If' → logprob: -13.153253555297852
    8. '           ' → logprob: -13.528253555297852
    9. '```' → logprob: -14.028253555297852
    10. '  ' → logprob: -14.153253555297852

Token 425: ' Cela' (ID: 44403)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6874678134918213
    2. ' if' → logprob: -0.8124678134918213
    3. '       ' → logprob: -2.9374678134918213
    4. '   ' → logprob: -8.187467575073242
    5. ' ' → logprob: -10.437467575073242
    6. '	if' → logprob: -10.812467575073242
    7. 'If' → logprob: -11.187467575073242
    8. '           ' → logprob: -11.312467575073242
    9. ' continue' → logprob: -12.062467575073242
    10. 'continue' → logprob: -12.062467575073242

Token 426: ' signifie' (ID: 81149)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.34545257687568665
    2. 'continue' → logprob: -1.9704525470733643
    3. 'n' → logprob: -3.2204525470733643
    4. 'if' → logprob: -3.4704525470733643
    5. ' n' → logprob: -3.5954525470733643
    6. ' if' → logprob: -4.095452785491943
    7. ':' → logprob: -4.595452785491943
    8. 'est' → logprob: -5.470452785491943
    9. 'ne' → logprob: -5.470452785491943
    10. ' ne' → logprob: -5.470452785491943

Token 427: ' que' (ID: 661)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.3740527629852295
    2. ' que' → logprob: -1.4990527629852295
    3. ' if' → logprob: -1.6240527629852295
    4. 'if' → logprob: -1.9990527629852295
    5. ' not' → logprob: -2.7490527629852295
    6. '   ' → logprob: -2.9990527629852295
    7. 'not' → logprob: -3.1240527629852295
    8. '           ' → logprob: -4.249053001403809
    9. ' nums' → logprob: -5.874053001403809
    10. 'que' → logprob: -6.124053001403809

Token 428: ' si' (ID: 1784)
  Prédit: 'nums'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nums' → logprob: -0.816900372505188
    2. ' nums' → logprob: -1.191900372505188
    3. ' not' → logprob: -1.941900372505188
    4. '(nums' → logprob: -2.8169002532958984
    5. 'not' → logprob: -3.0669002532958984
    6. ' (' → logprob: -6.316900253295898
    7. '(not' → logprob: -6.566900253295898
    8. 'if' → logprob: -7.066900253295898
    9. '(' → logprob: -8.066900253295898
    10. ' if' → logprob: -8.566900253295898

Token 429: ' nums' (ID: 18117)
  Prédit: ' nums'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nums' → logprob: -0.3435782492160797
    2. 'nums' → logprob: -1.8435782194137573
    3. '(nums' → logprob: -2.593578338623047
    4. ' not' → logprob: -3.093578338623047
    5. ' (' → logprob: -4.843578338623047
    6. 'not' → logprob: -5.593578338623047
    7. '(' → logprob: -7.593578338623047
    8. '(not' → logprob: -8.218578338623047
    9. ' ' → logprob: -10.843578338623047
    10. 'num' → logprob: -11.718578338623047

Token 430: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -6.392202976712724e-06
    2. '[' → logprob: -12.750006675720215
    3. 'j' → logprob: -13.125006675720215
    4. '[
' → logprob: -14.250006675720215
    5. '
' → logprob: -16.0000057220459
    6. '[i' → logprob: -16.0000057220459
    7. '%' → logprob: -16.3750057220459
    8. '(j' → logprob: -16.5000057220459
    9. 'pas' → logprob: -16.7500057220459
    10. '   ' → logprob: -17.1250057220459

Token 431: ']' (ID: 60)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.2021075189113617
    2. '%' → logprob: -1.702107548713684
    3. ')' → logprob: -7.8271074295043945
    4. ' ' → logprob: -8.827107429504395
    5. ']' → logprob: -9.202107429504395
    6. '   ' → logprob: -11.702107429504395
    7. '%d' → logprob: -12.077107429504395
    8. ' ' → logprob: -12.452107429504395
    9. '%s' → logprob: -12.452107429504395
    10. '```' → logprob: -12.577107429504395

Token 432: ' modulo' (ID: 112372)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.5231884121894836
    2. ' %' → logprob: -0.8981884121894836
    3. '%d' → logprob: -10.523188591003418
    4. ' ' → logprob: -11.523188591003418
    5. '%s' → logprob: -11.898188591003418
    6. '%e' → logprob: -11.898188591003418
    7. '%n' → logprob: -12.523188591003418
    8. '%c' → logprob: -12.898188591003418
    9. '%i' → logprob: -13.023188591003418
    10. '%x' → logprob: -13.273188591003418

Token 433: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.10033811628818512
    2. ' ' → logprob: -2.3503382205963135
    3. '6' → logprob: -9.475337982177734
    4. '2' → logprob: -10.600337982177734
    5. '```' → logprob: -11.600337982177734
    6. '   ' → logprob: -12.662837982177734
    7. '(' → logprob: -13.100337982177734
    8. ' ' → logprob: -13.350337982177734
    9. '1' → logprob: -13.412837982177734
    10. '  ' → logprob: -13.850337982177734

Token 434: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0033782843966037035
    2. ' ' → logprob: -5.878378391265869
    3. '2' → logprob: -7.628378391265869
    4. '6' → logprob: -10.503377914428711
    5. '```' → logprob: -10.690877914428711
    6. '   ' → logprob: -11.440877914428711
    7. '1' → logprob: -12.628377914428711
    8. '(' → logprob: -12.878377914428711
    9. ' !=' → logprob: -13.503377914428711
    10. '!=' → logprob: -13.565877914428711

Token 435: ' n' (ID: 297)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.6416546702384949
    2. '!=' → logprob: -0.7666546702384949
    3. '==' → logprob: -4.8916544914245605
    4. ' ==' → logprob: -6.6416544914245605
    5. '```' → logprob: -8.891654968261719
    6. '()!=' → logprob: -11.016654968261719
    7. ' ' → logprob: -11.641654968261719
    8. '>' → logprob: -12.016654968261719
    9. ')!=' → logprob: -12.016654968261719
    10. '``' → logprob: -12.516654968261719

Token 436: ''est' (ID: 6616)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.10110145807266235
    2. ' !=' → logprob: -2.8511013984680176
    3. '==' → logprob: -3.3511013984680176
    4. '!==' → logprob: -6.726101398468018
    5. ' ==' → logprob: -7.351101398468018
    6. '=' → logprob: -7.976101398468018
    7. ''est' → logprob: -8.351101875305176
    8. '```' → logprob: -9.226101875305176
    9. '>' → logprob: -9.601101875305176
    10. '()!=' → logprob: -9.726101875305176

Token 437: ' PAS' (ID: 66794)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.6892709732055664
    2. '0' → logprob: -1.3142709732055664
    3. '!=' → logprob: -2.0642709732055664
    4. 'not' → logprob: -2.4392709732055664
    5. ' !=' → logprob: -5.439270973205566
    6. ' pas' → logprob: -5.564270973205566
    7. '=' → logprob: -5.814270973205566
    8. ' ' → logprob: -5.939270973205566
    9. 'pas' → logprob: -7.689270973205566
    10. '==' → logprob: -8.189270973205566

Token 438: ' égal' (ID: 15059)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.220924511551857
    2. '==' → logprob: -1.8459244966506958
    3. ' ' → logprob: -3.9709246158599854
    4. '=' → logprob: -4.095924377441406
    5. ' ==' → logprob: -5.970924377441406
    6. '!=' → logprob: -6.220924377441406
    7. ' !=' → logprob: -9.470924377441406
    8. '```' → logprob: -9.595924377441406
    9. ' =' → logprob: -10.095924377441406
    10. 'not' → logprob: -10.845924377441406

Token 439: ' à' (ID: 1221)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.83271723985672
    2. ' à' → logprob: -0.83271723985672
    3. '0' → logprob: -2.832717180252075
    4. '=' → logprob: -2.832717180252075
    5. 'to' → logprob: -5.207717418670654
    6. ' to' → logprob: -5.707717418670654
    7. ' ' → logprob: -7.082717418670654
    8. '   ' → logprob: -7.207717418670654
    9. ' =' → logprob: -7.332717418670654
    10. ''à' → logprob: -7.707717418670654

Token 440: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.57595294713974
    2. ' ' → logprob: -0.82595294713974
    3. '=' → logprob: -12.575952529907227
    4. '```' → logprob: -12.825952529907227
    5. '<|end|>' → logprob: -13.075952529907227
    6. '  ' → logprob: -13.325952529907227
    7. '1' → logprob: -13.888452529907227
    8. ' ' → logprob: -13.950952529907227
    9. ' =' → logprob: -15.263452529907227
    10. '   ' → logprob: -16.075952529907227

Token 441: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0011726059019565582
    2. ' ' → logprob: -6.7511725425720215
    3. '```' → logprob: -14.12617301940918
    4. '1' → logprob: -14.62617301940918
    5. '=' → logprob: -15.93867301940918
    6. '  ' → logprob: -16.06367301940918
    7. '2' → logprob: -16.37617301940918
    8. '   ' → logprob: -16.62617301940918
    9. '==' → logprob: -16.68867301940918
    10. '...' → logprob: -16.81367301940918

Token 442: ' ET' (ID: 23345)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.08058062940835953
    2. 'and' → logprob: -3.205580711364746
    3. ' or' → logprob: -3.330580711364746
    4. ' et' → logprob: -7.580580711364746
    5. '       ' → logprob: -8.330580711364746
    6. 'or' → logprob: -9.080580711364746
    7. 'et' → logprob: -9.205580711364746
    8. ' ' → logprob: -10.330580711364746
    9. ')' → logprob: -10.455580711364746
    10. '   ' → logprob: -10.580580711364746

Token 443: ' nums' (ID: 18117)
  Prédit: ' nums'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nums' → logprob: -0.20204488933086395
    2. 'nums' → logprob: -1.7020448446273804
    3. ' ' → logprob: -8.577044486999512
    4. '   ' → logprob: -9.452044486999512
    5. '(nums' → logprob: -9.577044486999512
    6. ' ' → logprob: -9.577044486999512
    7. ' if' → logprob: -10.202044486999512
    8. '       ' → logprob: -10.327044486999512
    9. ' not' → logprob: -10.952044486999512
    10. '  ' → logprob: -10.952044486999512

Token 444: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -4.4849443838757e-06
    2. 'j' → logprob: -13.125004768371582
    3. '[' → logprob: -13.250004768371582
    4. '[i' → logprob: -14.875004768371582
    5. '[
' → logprob: -16.250003814697266
    6. '```' → logprob: -16.875003814697266
    7. '[js' → logprob: -17.750003814697266
    8. '	j' → logprob: -17.750003814697266
    9. '
' → logprob: -17.875003814697266
    10. '[user' → logprob: -17.875003814697266

Token 445: ']' (ID: 60)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.5012884736061096
    2. ']' → logprob: -1.0012884140014648
    3. ' %' → logprob: -3.751288414001465
    4. ']%' → logprob: -6.501288414001465
    5. '[' → logprob: -6.751288414001465
    6. ')' → logprob: -8.501288414001465
    7. '[j' → logprob: -9.126288414001465
    8. ' ' → logprob: -9.376288414001465
    9. ' ]' → logprob: -9.626288414001465
    10. '#' → logprob: -9.876288414001465

Token 446: ' modulo' (ID: 112372)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.47413986921310425
    2. '%' → logprob: -0.9741398692131042
    3. ' ' → logprob: -10.349140167236328
    4. ' modulo' → logprob: -11.349140167236328
    5. ' ' → logprob: -12.349140167236328
    6. '%n' → logprob: -12.474140167236328
    7. ')' → logprob: -13.099140167236328
    8. '[' → logprob: -13.474140167236328
    9. '%%%' → logprob: -13.974140167236328
    10. '%e' → logprob: -14.661640167236328

Token 447: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6326816082000732
    2. '5' → logprob: -0.7576816082000732
    3. ' ' → logprob: -9.882681846618652
    4. '2' → logprob: -10.882681846618652
    5. '10' → logprob: -12.132681846618652
    6. '3' → logprob: -12.632681846618652
    7. '7' → logprob: -14.382681846618652
    8. '```' → logprob: -14.632681846618652
    9. '35' → logprob: -14.945181846618652
    10. '  ' → logprob: -15.007681846618652

Token 448: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.12698721885681152
    2. ' ' → logprob: -2.1269872188568115
    3. '2' → logprob: -11.37698745727539
    4. '```' → logprob: -11.62698745727539
    5. '   ' → logprob: -11.87698745727539
    6. '  ' → logprob: -12.00198745727539
    7. ' ' → logprob: -12.62698745727539
    8. '3' → logprob: -12.81448745727539
    9. '`' → logprob: -13.12698745727539
    10. '15' → logprob: -13.37698745727539

Token 449: ' n' (ID: 297)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.2293872833251953
    2. '!=' → logprob: -1.7293872833251953
    3. ' ==' → logprob: -4.229387283325195
    4. '==' → logprob: -4.354387283325195
    5. ' ' → logprob: -9.479387283325195
    6. ' n' → logprob: -10.979387283325195
    7. '()!=' → logprob: -11.604387283325195
    8. '!==' → logprob: -11.729387283325195
    9. ')!=' → logprob: -11.979387283325195
    10. ')' → logprob: -12.229387283325195

Token 450: ''est' (ID: 6616)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.18465813994407654
    2. '==' → logprob: -3.0596580505371094
    3. ''est' → logprob: -3.0596580505371094
    4. ' !=' → logprob: -3.0596580505371094
    5. ')' → logprob: -4.434658050537109
    6. '#' → logprob: -5.684658050537109
    7. '=' → logprob: -6.559658050537109
    8. ' ==' → logprob: -6.809658050537109
    9. ' n' → logprob: -7.059658050537109
    10. '<|end|>' → logprob: -7.059658050537109

Token 451: ' PAS' (ID: 66794)
  Prédit: ' pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pas' → logprob: -0.28140726685523987
    2. 'pas' → logprob: -1.7814072370529175
    3. '==' → logprob: -2.906407356262207
    4. '!=' → logprob: -4.531407356262207
    5. '_pas' → logprob: -5.281407356262207
    6. 'Pas' → logprob: -6.406407356262207
    7. ' ==' → logprob: -6.531407356262207
    8. '=' → logprob: -6.781407356262207
    9. '0' → logprob: -7.156407356262207
    10. ' !=' → logprob: -7.656407356262207

Token 452: ' égal' (ID: 15059)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.009100445546209812
    2. ' ==' → logprob: -4.759100437164307
    3. '=' → logprob: -7.884100437164307
    4. ' égal' → logprob: -10.009100914001465
    5. 'égal' → logprob: -11.009100914001465
    6. 'equal' → logprob: -11.509100914001465
    7. '0' → logprob: -12.009100914001465
    8. '===' → logprob: -12.259100914001465
    9. ' equal' → logprob: -12.509100914001465
    10. '```' → logprob: -12.634100914001465

Token 453: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.4421413242816925
    2. 'à' → logprob: -1.0671412944793701
    3. '=' → logprob: -5.192141532897949
    4. '0' → logprob: -6.067141532897949
    5. 'to' → logprob: -6.067141532897949
    6. '```' → logprob: -6.942141532897949
    7. ' ' → logprob: -7.067141532897949
    8. ' to' → logprob: -7.192141532897949
    9. '   ' → logprob: -8.56714153289795
    10. ' =' → logprob: -8.94214153289795

Token 454: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10021023452281952
    2. ' ' → logprob: -2.350210189819336
    3. '=' → logprob: -13.787710189819336
    4. '1' → logprob: -14.162710189819336
    5. ' ' → logprob: -14.912710189819336
    6. '  ' → logprob: -15.787710189819336
    7. '```' → logprob: -15.787710189819336
    8. '   ' → logprob: -15.912710189819336
    9. '<|end|>' → logprob: -16.100210189819336
    10. '==' → logprob: -16.225210189819336

Token 455: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00023178798437584192
    2. ' ' → logprob: -8.375231742858887
    3. '1' → logprob: -15.125231742858887
    4. '```' → logprob: -15.875231742858887
    5. '=' → logprob: -16.125232696533203
    6. ' ' → logprob: -16.187732696533203
    7. '5' → logprob: -16.500232696533203
    8. '3' → logprob: -16.875232696533203
    9. '   ' → logprob: -17.062732696533203
    10. '  ' → logprob: -17.187732696533203

Token 456: '.
' (ID: 558)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6158493161201477
    2. '       ' → logprob: -1.115849256515503
    3. ' or' → logprob: -2.615849256515503
    4. ' and' → logprob: -3.490849256515503
    5. ',' → logprob: -3.865849256515503
    6. '   ' → logprob: -6.490849494934082
    7. ' :' → logprob: -6.740849494934082
    8. ':
' → logprob: -6.865849494934082
    9. '           ' → logprob: -7.365849494934082
    10. 'and' → logprob: -7.365849494934082

Token 457: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0021673901937901974
    2. ' if' → logprob: -6.752167224884033
    3. 'if' → logprob: -7.627167224884033
    4. ' or' → logprob: -7.877167224884033
    5. ' and' → logprob: -9.877167701721191
    6. '	' → logprob: -10.627167701721191
    7. '   ' → logprob: -11.627167701721191
    8. 'and' → logprob: -11.627167701721191
    9. 'or' → logprob: -11.877167701721191
    10. '	if' → logprob: -12.502167701721191

Token 458: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.2258414626121521
    2. '       ' → logprob: -1.8508415222167969
    3. ' if' → logprob: -3.100841522216797
    4. '   ' → logprob: -10.725841522216797
    5. '	if' → logprob: -12.475841522216797
    6. 'not' → logprob: -12.725841522216797
    7. 'elif' → logprob: -12.975841522216797
    8. ' ' → logprob: -13.225841522216797
    9. '           ' → logprob: -13.350841522216797
    10. 'continue' → logprob: -13.600841522216797

Token 459: ' nums' (ID: 18117)
  Prédit: ' nums'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nums' → logprob: -0.13124027848243713
    2. 'nums' → logprob: -2.1312403678894043
    3. '(nums' → logprob: -5.756240367889404
    4. ' (' → logprob: -7.506240367889404
    5. ' not' → logprob: -7.631240367889404
    6. 'not' → logprob: -9.756239891052246
    7. '(' → logprob: -10.381239891052246
    8. ' ' → logprob: -11.881239891052246
    9. '   ' → logprob: -12.881239891052246
    10. 'num' → logprob: -13.006239891052246

Token 460: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -1.1472419600977446e-06
    2. '[' → logprob: -14.625000953674316
    3. 'j' → logprob: -15.125000953674316
    4. '[i' → logprob: -15.750000953674316
    5. '   ' → logprob: -16.875001907348633
    6. '
' → logprob: -17.500001907348633
    7. ' [' → logprob: -17.750001907348633
    8. '```' → logprob: -17.875001907348633
    9. '[
' → logprob: -18.375001907348633
    10. '#' → logprob: -18.875001907348633

Token 461: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.42667847871780396
    2. '%' → logprob: -1.4266784191131592
    3. ')' → logprob: -2.801678419113159
    4. ' %' → logprob: -3.176678419113159
    5. ']%' → logprob: -5.926678657531738
    6. ' ' → logprob: -6.801678657531738
    7. ' ]' → logprob: -7.926678657531738
    8. ')%' → logprob: -8.301678657531738
    9. ' )' → logprob: -8.676678657531738
    10. '```' → logprob: -9.426678657531738

Token 462: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.3133407235145569
    2. '%' → logprob: -1.313340663909912
    3. ' ' → logprob: -9.56334114074707
    4. ')' → logprob: -13.31334114074707
    5. '==' → logprob: -13.43834114074707
    6. ' ' → logprob: -13.68834114074707
    7. '```' → logprob: -13.68834114074707
    8. ' ==' → logprob: -14.43834114074707
    9. '%s' → logprob: -15.18834114074707
    10. '%d' → logprob: -15.31334114074707

Token 463: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.00218583014793694
    2. ' ' → logprob: -6.127185821533203
    3. '2' → logprob: -14.877185821533203
    4. '1' → logprob: -16.127185821533203
    5. 'not' → logprob: -16.752185821533203
    6. '```' → logprob: -16.814685821533203
    7. '6' → logprob: -16.877185821533203
    8. ' ' → logprob: -17.627185821533203
    9. '   ' → logprob: -17.627185821533203
    10. '33' → logprob: -17.939685821533203

Token 464: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -3.91732100979425e-05
    2. ' ' → logprob: -10.250039100646973
    3. '2' → logprob: -12.875039100646973
    4. '6' → logprob: -14.750039100646973
    5. '1' → logprob: -15.750039100646973
    6. '```' → logprob: -16.00004005432129
    7. '   ' → logprob: -16.43754005432129
    8. 'not' → logprob: -16.81254005432129
    9. '  ' → logprob: -17.31254005432129
    10. '!' → logprob: -17.68754005432129

Token 465: ' !=' (ID: 1666)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.973556399345398
    2. ' ==' → logprob: -0.973556399345398
    3. ' !=' → logprob: -1.723556399345398
    4. '!=' → logprob: -2.7235565185546875
    5. '0' → logprob: -8.848556518554688
    6. ' ' → logprob: -8.848556518554688
    7. '```' → logprob: -9.473556518554688
    8. '=' → logprob: -10.286056518554688
    9. '==
' → logprob: -12.098556518554688
    10. '!' → logprob: -12.348556518554688

Token 466: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6326107978820801
    2. ' ' → logprob: -0.7576107978820801
    3. '=' → logprob: -11.632610321044922
    4. '```' → logprob: -14.007610321044922
    5. ' ' → logprob: -15.320110321044922
    6. '<|end|>' → logprob: -15.320110321044922
    7. ' =' → logprob: -15.382610321044922
    8. '   ' → logprob: -15.695110321044922
    9. '  ' → logprob: -15.757610321044922
    10. '==' → logprob: -15.820110321044922

Token 467: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00010926496179308742
    2. ' ' → logprob: -9.125109672546387
    3. '=' → logprob: -16.00010871887207
    4. '```' → logprob: -16.62510871887207
    5. '   ' → logprob: -17.37510871887207
    6. '1' → logprob: -17.87510871887207
    7. '==' → logprob: -18.00010871887207
    8. '  ' → logprob: -18.43760871887207
    9. ' ' → logprob: -18.62510871887207
    10. '3' → logprob: -18.62510871887207

Token 468: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.4241259694099426
    2. 'and' → logprob: -1.1741259098052979
    3. ' or' → logprob: -3.424125909805298
    4. 'or' → logprob: -5.549126148223877
    5. '       ' → logprob: -10.049125671386719
    6. '           ' → logprob: -10.674125671386719
    7. ' ' → logprob: -11.549125671386719
    8. '   ' → logprob: -11.799125671386719
    9. '        ' → logprob: -11.924125671386719
    10. '    ' → logprob: -13.424125671386719

Token 469: ' nums' (ID: 18117)
  Prédit: ' nums'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nums' → logprob: -0.048610869795084
    2. 'nums' → logprob: -3.0486109256744385
    3. '(nums' → logprob: -11.54861068725586
    4. ' ' → logprob: -11.54861068725586
    5. ' ' → logprob: -13.79861068725586
    6. ' not' → logprob: -14.29861068725586
    7. '   ' → logprob: -14.54861068725586
    8. ' num' → logprob: -15.29861068725586
    9. 'Nums' → logprob: -15.29861068725586
    10. '  ' → logprob: -15.42361068725586

Token 470: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -6.277553620748222e-05
    2. 'j' → logprob: -10.375062942504883
    3. '[' → logprob: -10.500062942504883
    4. '[i' → logprob: -13.750062942504883
    5. '[
' → logprob: -14.375062942504883
    6. '{' → logprob: -14.500062942504883
    7. ' [' → logprob: -15.000062942504883
    8. '   ' → logprob: -15.375062942504883
    9. '```' → logprob: -15.625062942504883
    10. '
' → logprob: -15.625062942504883

Token 471: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.001079133595339954
    2. ']%' → logprob: -6.876079082489014
    3. '%' → logprob: -10.376079559326172
    4. '[' → logprob: -11.876079559326172
    5. 'j' → logprob: -12.751079559326172
    6. '[j' → logprob: -13.126079559326172
    7. ' ]' → logprob: -13.126079559326172
    8. '][' → logprob: -15.626079559326172
    9. '}' → logprob: -15.626079559326172
    10. '].' → logprob: -16.001079559326172

Token 472: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.2811802327632904
    2. '%' → logprob: -1.4061802625656128
    3. '5' → logprob: -11.156180381774902
    4. ' ' → logprob: -11.406180381774902
    5. '7' → logprob: -13.656180381774902
    6. ')' → logprob: -14.781180381774902
    7. ' ' → logprob: -15.031180381774902
    8. '25' → logprob: -15.281180381774902
    9. '1' → logprob: -15.531180381774902
    10. '`' → logprob: -15.531180381774902

Token 473: ' ' (ID: 220)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.2811639606952667
    2. ' ' → logprob: -1.4061639308929443
    3. '  ' → logprob: -12.843664169311523
    4. ' ' → logprob: -13.093664169311523
    5. '   ' → logprob: -13.156164169311523
    6. '```' → logprob: -13.156164169311523
    7. '	' → logprob: -14.843664169311523
    8. '<|end|>' → logprob: -15.031164169311523
    9. '10' → logprob: -15.093664169311523
    10. '1' → logprob: -15.093664169311523

Token 474: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.0003368926409166306
    2. ' ' → logprob: -8.000336647033691
    3. '   ' → logprob: -14.250336647033691
    4. '  ' → logprob: -14.875336647033691
    5. '```' → logprob: -15.937836647033691
    6. '    ' → logprob: -17.625337600708008
    7. '۵' → logprob: -17.750337600708008
    8. '５' → logprob: -17.750337600708008
    9. '       ' → logprob: -17.875337600708008
    10. '     ' → logprob: -18.125337600708008

Token 475: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.6951277256011963
    2. '!=' → logprob: -0.6951277256011963
    3. '==' → logprob: -6.445127487182617
    4. ' ==' → logprob: -7.945127487182617
    5. ')!=' → logprob: -11.195127487182617
    6. '()!=' → logprob: -12.195127487182617
    7. ']!=' → logprob: -12.320127487182617
    8. '=' → logprob: -12.445127487182617
    9. ' ' → logprob: -13.320127487182617
    10. '!=-' → logprob: -13.570127487182617

Token 476: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1797473132610321
    2. ' ' → logprob: -1.8047473430633545
    3. '   ' → logprob: -13.929747581481934
    4. ' ' → logprob: -14.804747581481934
    5. '  ' → logprob: -15.117247581481934
    6. '=' → logprob: -15.179747581481934
    7. '```' → logprob: -15.304747581481934
    8. '	' → logprob: -16.492246627807617
    9. '       ' → logprob: -16.867246627807617
    10. '1' → logprob: -17.117246627807617

Token 477: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0008051026379689574
    2. ' ' → logprob: -7.125804901123047
    3. '=' → logprob: -15.688304901123047
    4. '  ' → logprob: -16.875804901123047
    5. '   ' → logprob: -17.063304901123047
    6. '```' → logprob: -17.063304901123047
    7. '00' → logprob: -17.188304901123047
    8. '۰' → logprob: -17.250804901123047
    9. '5' → logprob: -17.625804901123047
    10. '<|end|>' → logprob: -18.250804901123047

Token 478: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002908773487433791
    2. ':
' → logprob: -5.877908706665039
    3. '           ' → logprob: -9.752908706665039
    4. ' :' → logprob: -10.877908706665039
    5. '       ' → logprob: -11.377908706665039
    6. ' continue' → logprob: -12.252908706665039
    7. '   ' → logprob: -13.002908706665039
    8. ':return' → logprob: -13.127908706665039
    9. 'continue' → logprob: -13.502908706665039
    10. '):' → logprob: -13.502908706665039

Token 479: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04174710810184479
    2. 'even' → logprob: -3.7917470932006836
    3. 'continue' → logprob: -4.416747093200684
    4. ' even' → logprob: -5.666747093200684
    5. ' continue' → logprob: -6.291747093200684
    6. '       ' → logprob: -7.916747093200684
    7. ':' → logprob: -8.166747093200684
    8. '   ' → logprob: -9.291747093200684
    9. '	       ' → logprob: -9.916747093200684
    10. '               ' → logprob: -10.416747093200684

Token 480: ' #' (ID: 1069)
  Prédit: 'even'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'even' → logprob: -0.2884870767593384
    2. 'continue' → logprob: -1.6634870767593384
    3. '           ' → logprob: -3.038486957550049
    4. 'odd' → logprob: -5.163486957550049
    5. 'pass' → logprob: -5.663486957550049
    6. '               ' → logprob: -5.913486957550049
    7. ' even' → logprob: -8.038487434387207
    8. ' continue' → logprob: -8.163487434387207
    9. '1' → logprob: -8.663487434387207
    10. '   ' → logprob: -9.288487434387207

Token 481: ' Si' (ID: 7832)
  Prédit: 'even'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'even' → logprob: -0.14771269261837006
    2. 'continue' → logprob: -2.0227127075195312
    3. 'pass' → logprob: -5.772712707519531
    4. 'odd' → logprob: -6.397712707519531
    5. ' even' → logprob: -10.147712707519531
    6. ' continue' → logprob: -10.522712707519531
    7. '           ' → logprob: -10.772712707519531
    8. '   ' → logprob: -10.772712707519531
    9. 'continu' → logprob: -10.772712707519531
    10. '1' → logprob: -11.147712707519531

Token 482: ' la' (ID: 557)
  Prédit: 'even'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'even' → logprob: -0.1578962355852127
    2. 'continue' → logprob: -2.0328962802886963
    3. '           ' → logprob: -5.157896041870117
    4. 'True' → logprob: -5.782896041870117
    5. 'nums' → logprob: -6.032896041870117
    6. 'odd' → logprob: -6.157896041870117
    7. ' even' → logprob: -7.782896041870117
    8. ' continue' → logprob: -8.407896041870117
    9. '1' → logprob: -8.532896041870117
    10. '               ' → logprob: -8.782896041870117

Token 483: ' condition' (ID: 7060)
  Prédit: 'even'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'even' → logprob: -0.4403502345085144
    2. 'continue' → logprob: -1.0653502941131592
    3. 'True' → logprob: -5.81535005569458
    4. 'pass' → logprob: -5.81535005569458
    5. 'contin' → logprob: -6.69035005569458
    6. ' even' → logprob: -7.19035005569458
    7. 'odd' → logprob: -7.31535005569458
    8. ' continue' → logprob: -7.56535005569458
    9. 'not' → logprob: -7.69035005569458
    10. 'continu' → logprob: -8.190350532531738

Token 484: ' précédente' (ID: 177319)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.1931629627943039
    2. ' continue' → logprob: -2.5681629180908203
    3. 'even' → logprob: -3.3181629180908203
    4. ':' → logprob: -3.6931629180908203
    5. '           ' → logprob: -3.8181629180908203
    6. 'n' → logprob: -5.31816291809082
    7. ' even' → logprob: -5.81816291809082
    8. ' continues' → logprob: -6.31816291809082
    9. 'pass' → logprob: -6.81816291809082
    10. 'contin' → logprob: -6.81816291809082

Token 485: ' est' (ID: 893)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.11242596805095673
    2. ' continue' → logprob: -2.4874260425567627
    3. '           ' → logprob: -4.237425804138184
    4. 'even' → logprob: -5.862425804138184
    5. 'contin' → logprob: -5.987425804138184
    6. '               ' → logprob: -6.237425804138184
    7. ' even' → logprob: -8.237425804138184
    8. ' continues' → logprob: -8.487425804138184
    9. 'cont' → logprob: -8.862425804138184
    10. ':' → logprob: -8.987425804138184

Token 486: ' vraie' (ID: 105841)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.10672016441822052
    2. 'True' → logprob: -2.481720209121704
    3. ' True' → logprob: -4.606719970703125
    4. 'true' → logprob: -5.481719970703125
    5. 'False' → logprob: -6.856719970703125
    6. 'f' → logprob: -6.981719970703125
    7. 'fa' → logprob: -7.481719970703125
    8. 'faite' → logprob: -8.356719970703125
    9. ' vraie' → logprob: -9.106719970703125
    10. 'false' → logprob: -9.356719970703125

Token 487: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5400198101997375
    2. 'even' → logprob: -1.6650197505950928
    3. ' even' → logprob: -2.1650197505950928
    4. 'continue' → logprob: -3.1650197505950928
    5. '               ' → logprob: -3.5400197505950928
    6. ' continue' → logprob: -3.6650197505950928
    7. ',' → logprob: -4.290019989013672
    8. ':' → logprob: -6.915019989013672
    9. '       ' → logprob: -8.040019989013672
    10. '   ' → logprob: -8.165019989013672

Token 488: ' on' (ID: 402)
  Prédit: 'even'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'even' → logprob: -0.6403905749320984
    2. 'continue' → logprob: -0.7653905749320984
    3. 'pass' → logprob: -5.515390396118164
    4. '           ' → logprob: -6.265390396118164
    5. 'odd' → logprob: -6.640390396118164
    6. ' continue' → logprob: -9.265390396118164
    7. '               ' → logprob: -9.390390396118164
    8. ' even' → logprob: -9.765390396118164
    9. 'continu' → logprob: -9.765390396118164
    10. '   ' → logprob: -10.140390396118164

Token 489: ' passe' (ID: 22210)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.6512818932533264
    2. ' continue' → logprob: -0.7762818932533264
    3. '           ' → logprob: -4.651281833648682
    4. 'even' → logprob: -6.276281833648682
    5. ' even' → logprob: -6.526281833648682
    6. '   ' → logprob: -6.526281833648682
    7. 'contin' → logprob: -6.776281833648682
    8. 'pass' → logprob: -6.901281833648682
    9. '       ' → logprob: -7.276281833648682
    10. ' pass' → logprob: -8.15128231048584

Token 490: ' à' (ID: 1221)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.4892198443412781
    2. '           ' → logprob: -0.9892198443412781
    3. 'contin' → logprob: -4.614219665527344
    4. '       ' → logprob: -5.739219665527344
    5. '               ' → logprob: -7.614219665527344
    6. 'à' → logprob: -7.739219665527344
    7. 'continu' → logprob: -9.239219665527344
    8. 'le' → logprob: -9.364219665527344
    9. 'la' → logprob: -9.364219665527344
    10. 'pass' → logprob: -9.739219665527344

Token 491: ' l' (ID: 305)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.41495370864868164
    2. '   ' → logprob: -2.7899537086486816
    3. 'even' → logprob: -2.9149537086486816
    4. 'la' → logprob: -3.0399537086486816
    5. 'next' → logprob: -3.0399537086486816
    6. 'contin' → logprob: -3.4149537086486816
    7. 'l' → logprob: -3.4149537086486816
    8. ' continue' → logprob: -4.289953708648682
    9. 'pass' → logprob: -4.414953708648682
    10. 'odd' → logprob: -5.164953708648682

Token 492: ''' (ID: 6)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.266092449426651
    2. 'u' → logprob: -3.016092538833618
    3. 'contin' → logprob: -3.266092538833618
    4. 'next' → logprob: -3.516092538833618
    5. 'continue' → logprob: -3.516092538833618
    6. 'even' → logprob: -4.141092300415039
    7. ' suivant' → logprob: -4.141092300415039
    8. 'n' → logprob: -4.891092300415039
    9. 'a' → logprob: -4.891092300415039
    10. 'on' → logprob: -5.766092300415039

Token 493: 'it' (ID: 278)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.2645907700061798
    2. 'next' → logprob: -2.2645907402038574
    3. 'pass' → logprob: -3.0145907402038574
    4. 'else' → logprob: -3.2645907402038574
    5. 'contin' → logprob: -3.8895907402038574
    6. 'su' → logprob: -4.639590740203857
    7. 'suite' → logprob: -5.764590740203857
    8. '```' → logprob: -6.639590740203857
    9. 'odd' → logprob: -7.014590740203857
    10. 'pas' → logprob: -7.389590740203857

Token 494: 'ération' (ID: 24977)
  Prédit: 'inue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inue' → logprob: -1.115150809288025
    2. 'te' → logprob: -1.865150809288025
    3. 'e' → logprob: -2.3651509284973145
    4. 'nte' → logprob: -2.4901509284973145
    5. 'é' → logprob: -2.7401509284973145
    6. 'continue' → logprob: -2.9901509284973145
    7. 'ère' → logprob: -3.7401509284973145
    8. 'ine' → logprob: -4.1151509284973145
    9. '   ' → logprob: -4.2401509284973145
    10. 'ter' → logprob: -4.4901509284973145

Token 495: ' suivante' (ID: 107439)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4666326940059662
    2. 'continue' → logprob: -1.4666327238082886
    3. '               ' → logprob: -1.9666327238082886
    4. ' continue' → logprob: -6.341632843017578
    5. 'contin' → logprob: -8.216632843017578
    6. '       ' → logprob: -9.716632843017578
    7. ' suivante' → logprob: -10.091632843017578
    8. '   ' → logprob: -10.091632843017578
    9. '_continue' → logprob: -10.466632843017578
    10. ' ' → logprob: -11.591632843017578

Token 496: ' de' (ID: 334)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.019228702411055565
    2. 'continue' → logprob: -4.019228935241699
    3. '
' → logprob: -7.644228935241699
    4. ' continue' → logprob: -8.1442289352417
    5. '               ' → logprob: -8.3942289352417
    6. '       ' → logprob: -10.0192289352417
    7. '            
' → logprob: -11.3942289352417
    8. '		' → logprob: -12.3942289352417
    9. '_continue' → logprob: -12.6442289352417
    10. 'contin' → logprob: -12.8942289352417

Token 497: ' la' (ID: 557)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.06135864555835724
    2. ' continue' → logprob: -3.311358690261841
    3. '   ' → logprob: -3.936358690261841
    4. 'for' → logprob: -6.811358451843262
    5. '	continue' → logprob: -7.311358451843262
    6. 'the' → logprob: -7.436358451843262
    7. 'la' → logprob: -7.811358451843262
    8. 'contin' → logprob: -8.186358451843262
    9. ' la' → logprob: -8.811358451843262
    10. '```' → logprob: -9.061358451843262

Token 498: ' boucle' (ID: 174211)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.4296667277812958
    2. 'for' → logprob: -1.1796667575836182
    3. 'loop' → logprob: -3.179666757583618
    4. ' loop' → logprob: -8.554666519165039
    5. 'contin' → logprob: -10.429666519165039
    6. ' continue' → logprob: -10.429666519165039
    7. ' boucle' → logprob: -11.179666519165039
    8. 'bou' → logprob: -11.804666519165039
    9. 'continu' → logprob: -12.054666519165039
    10. '```' → logprob: -12.179666519165039

Token 499: ' sans' (ID: 9828)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00043805985478684306
    2. 'continue' → logprob: -8.00043773651123
    3. '               ' → logprob: -9.75043773651123
    4. ' continue' → logprob: -10.37543773651123
    5. '       ' → logprob: -12.00043773651123
    6. '.' → logprob: -13.37543773651123
    7. '		' → logprob: -13.62543773651123
    8. '
' → logprob: -14.12543773651123
    9. 'n' → logprob: -14.25043773651123
    10. ',' → logprob: -14.37543773651123

Token 500: ' ex' (ID: 513)
  Prédit: 'contin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'contin' → logprob: -0.23600411415100098
    2. 'continue' → logprob: -1.611004114151001
    3. ' continuer' → logprob: -4.736003875732422
    4. 'continu' → logprob: -6.986003875732422
    5. ' continue' → logprob: -8.361003875732422
    6. 'cont' → logprob: -8.486003875732422
    7. 'pass' → logprob: -9.111003875732422
    8. '   ' → logprob: -9.486003875732422
    9. ' ' → logprob: -9.861003875732422
    10. '```' → logprob: -10.236003875732422

Token 501: 'éc' (ID: 5675)
  Prédit: 'ec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ec' → logprob: -1.2256776094436646
    2. 'ecute' → logprob: -1.3506776094436646
    3. 'ecut' → logprob: -1.3506776094436646
    4. 'cut' → logprob: -2.350677490234375
    5. 'continue' → logprob: -3.225677490234375
    6. 'éc' → logprob: -3.850677490234375
    7. 'cute' → logprob: -4.350677490234375
    8. 'ecution' → logprob: -4.725677490234375
    9. 'c' → logprob: -5.475677490234375
    10. 'contin' → logprob: -6.225677490234375

Token 502: 'uter' (ID: 23469)
  Prédit: 'cut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cut' → logprob: -0.4512612223625183
    2. 'éc' → logprob: -1.826261281967163
    3. 'ec' → logprob: -2.076261281967163
    4. 'ecut' → logprob: -2.826261281967163
    5. 'ecute' → logprob: -5.076261043548584
    6. 'continue' → logprob: -5.451261043548584
    7. 'ect' → logprob: -6.576261043548584
    8. 'c' → logprob: -6.701261043548584
    9. 'cute' → logprob: -6.951261043548584
    10. 'contin' → logprob: -7.201261043548584

Token 503: ' ce' (ID: 2357)
  Prédit: 'even'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'even' → logprob: -0.5810671448707581
    2. 'le' → logprob: -1.2060670852661133
    3. 'la' → logprob: -2.4560670852661133
    4. ' le' → logprob: -4.206067085266113
    5. ' even' → logprob: -4.831067085266113
    6. '           ' → logprob: -5.081067085266113
    7. 'continue' → logprob: -5.206067085266113
    8. 'odd' → logprob: -5.706067085266113
    9. 'contin' → logprob: -5.706067085266113
    10. ' la' → logprob: -5.831067085266113

Token 504: ' qui' (ID: 2780)
  Prédit: 'even'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'even' → logprob: -1.0941665172576904
    2. '           ' → logprob: -1.3441665172576904
    3. 'continue' → logprob: -1.3441665172576904
    4. '       ' → logprob: -2.8441665172576904
    5. '   ' → logprob: -3.3441665172576904
    6. '               ' → logprob: -4.0941667556762695
    7. '```' → logprob: -5.0941667556762695
    8. ' even' → logprob: -5.2191667556762695
    9. 'contin' → logprob: -5.2191667556762695
    10. '            
' → logprob: -5.3441667556762695

Token 505: ' suit' (ID: 15170)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.2380828857421875
    2. 'su' → logprob: -1.3630828857421875
    3. 'continue' → logprob: -1.3630828857421875
    4. 'even' → logprob: -2.4880828857421875
    5. 'contin' → logprob: -3.3630828857421875
    6. 'f' → logprob: -3.8630828857421875
    7. ' continue' → logprob: -4.1130828857421875
    8. ' even' → logprob: -4.8630828857421875
    9. ' suivant' → logprob: -5.4880828857421875
    10. '#' → logprob: -5.7380828857421875

Token 506: '.
' (ID: 558)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001741104875691235
    2. 'continue' → logprob: -6.8767409324646
    3. '               ' → logprob: -8.001741409301758
    4. ' continue' → logprob: -8.126741409301758
    5. ',' → logprob: -10.501741409301758
    6. '.' → logprob: -10.876741409301758
    7. '		' → logprob: -11.751741409301758
    8. '       ' → logprob: -11.876741409301758
    9. '```' → logprob: -12.626741409301758
    10. '	       ' → logprob: -13.501741409301758

Token 507: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.010608787648379803
    2. 'continue' → logprob: -4.760608673095703
    3. ' continue' → logprob: -6.260608673095703
    4. '               ' → logprob: -10.135608673095703
    5. '       ' → logprob: -10.635608673095703
    6. '		' → logprob: -12.135608673095703
    7. '```' → logprob: -12.260608673095703
    8. '	continue' → logprob: -12.885608673095703
    9. '   ' → logprob: -13.260608673095703
    10. '	       ' → logprob: -13.385608673095703

Token 508: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.28692275285720825
    2. '           ' → logprob: -1.7869226932525635
    3. ' continue' → logprob: -2.5369226932525635
    4. '               ' → logprob: -5.911922931671143
    5. '       ' → logprob: -10.036922454833984
    6. '   ' → logprob: -10.161922454833984
    7. '	continue' → logprob: -10.536922454833984
    8. '```' → logprob: -11.161922454833984
    9. '_continue' → logprob: -12.161922454833984
    10. 'continu' → logprob: -12.911922454833984

Token 509: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.022988272830843925
    2. 'even' → logprob: -3.8979883193969727
    3. '   ' → logprob: -6.647988319396973
    4. '           ' → logprob: -7.647988319396973
    5. 'else' → logprob: -7.772988319396973
    6. ' even' → logprob: -8.647988319396973
    7. '        
' → logprob: -10.772988319396973
    8. '```' → logprob: -11.522988319396973
    9. 'odd' → logprob: -11.647988319396973
    10. ' else' → logprob: -12.272988319396973

Token 510: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03926168009638786
    2. 'even' → logprob: -3.28926157951355
    3. '   ' → logprob: -7.914261817932129
    4. 'else' → logprob: -8.039261817932129
    5. '        
' → logprob: -8.414261817932129
    6. '           ' → logprob: -8.914261817932129
    7. ' even' → logprob: -9.414261817932129
    8. '```' → logprob: -10.664261817932129
    9. '
' → logprob: -10.914261817932129
    10. '            
' → logprob: -11.789261817932129

Token 511: ' L' (ID: 451)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.028528152033686638
    2. 'even' → logprob: -3.6535282135009766
    3. '   ' → logprob: -6.778528213500977
    4. 'else' → logprob: -7.278528213500977
    5. '           ' → logprob: -8.903528213500977
    6. ' even' → logprob: -9.028528213500977
    7. '#' → logprob: -9.903528213500977
    8. '        
' → logprob: -11.153528213500977
    9. '```' → logprob: -11.278528213500977
    10. '
' → logprob: -11.278528213500977

Token 512: ''in' (ID: 17942)
  Prédit: 'even'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'even' → logprob: -0.08843166381120682
    2. 'e' → logprob: -2.8384315967559814
    3. '#' → logprob: -4.8384318351745605
    4. 'else' → logprob: -5.7134318351745605
    5. 'ine' → logprob: -6.0884318351745605
    6. 'in' → logprob: -6.2134318351745605
    7. '```' → logprob: -6.5884318351745605
    8. '           ' → logprob: -6.8384318351745605
    9. 'inue' → logprob: -6.9634318351745605
    10. 'continue' → logprob: -7.0884318351745605

Token 513: 'struction' (ID: 5316)
  Prédit: 'even'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'even' → logprob: -0.16537024080753326
    2. 'crement' → logprob: -2.540370225906372
    3. 'continue' → logprob: -3.290370225906372
    4. 'struction' → logprob: -5.290370464324951
    5. '```' → logprob: -5.790370464324951
    6. '       ' → logprob: -5.915370464324951
    7. '           ' → logprob: -5.915370464324951
    8. 'cr' → logprob: -6.040370464324951
    9. 'cré' → logprob: -6.415370464324951
    10. 'cre' → logprob: -6.415370464324951

Token 514: ' continue' (ID: 4901)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.2338234186172485
    2. 'est' → logprob: -2.358823299407959
    3. 'su' → logprob: -2.483823299407959
    4. 's' → logprob: -2.608823299407959
    5. 'continue' → logprob: -2.608823299407959
    6. '       ' → logprob: -2.733823299407959
    7. 'per' → logprob: -2.733823299407959
    8. 'n' → logprob: -2.983823299407959
    9. '           ' → logprob: -3.233823299407959
    10. 'skip' → logprob: -3.733823299407959

Token 515: ' arr' (ID: 1724)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002451161155477166
    2. '        
' → logprob: -6.252450942993164
    3. '           ' → logprob: -8.627450942993164
    4. '
' → logprob: -9.002450942993164
    5. 'else' → logprob: -9.752450942993164
    6. '            
' → logprob: -10.127450942993164
    7. '#' → logprob: -10.752450942993164
    8. '       
' → logprob: -11.127450942993164
    9. '   ' → logprob: -11.627450942993164
    10. '        
' → logprob: -11.877450942993164

Token 516: 'ête' (ID: 16808)
  Prédit: 'ête'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ête' → logprob: -0.0007410150719806552
    2. 'êt' → logprob: -7.500741004943848
    3. 'ète' → logprob: -9.500741004943848
    4. 'ive' → logprob: -10.125741004943848
    5. 'êtes' → logprob: -10.375741004943848
    6. 'ete' → logprob: -11.000741004943848
    7. 'êts' → logprob: -11.500741004943848
    8. 'ê' → logprob: -12.000741004943848
    9. '#' → logprob: -13.000741004943848
    10. 'ivée' → logprob: -13.125741004943848

Token 517: ' cette' (ID: 7696)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.014940433204174042
    2. 'ici' → logprob: -4.51494026184082
    3. 'la' → logprob: -6.88994026184082
    4. ' ici' → logprob: -7.01494026184082
    5. 'c' → logprob: -7.38994026184082
    6. ' l' → logprob: -7.51494026184082
    7. 'le' → logprob: -8.26494026184082
    8. 'here' → logprob: -8.26494026184082
    9. 'd' → logprob: -10.13994026184082
    10. 'current' → logprob: -10.26494026184082

Token 518: ' it' (ID: 480)
  Prédit: 'it'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.12390037626028061
    2. 'iteration' → logprob: -2.3739004135131836
    3. ' it' → logprob: -3.8739004135131836
    4. ' boucle' → logprob: -7.248900413513184
    5. ' iteration' → logprob: -7.373900413513184
    6. 'for' → logprob: -8.623900413513184
    7. 'itera' → logprob: -8.873900413513184
    8. 'iter' → logprob: -8.998900413513184
    9. '```' → logprob: -8.998900413513184
    10. '   ' → logprob: -9.498900413513184

Token 519: 'ération' (ID: 24977)
  Prédit: 'ération'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ération' → logprob: -0.0002453662164043635
    2. 'er' → logprob: -8.750245094299316
    3. 'é' → logprob: -10.875245094299316
    4. 'étation' → logprob: -11.375245094299316
    5. 'ér' → logprob: -11.625245094299316
    6. '#' → logprob: -12.125245094299316
    7. 'ère' → logprob: -12.500245094299316
    8. 'ration' → logprob: -12.625245094299316
    9. 'érations' → logprob: -12.625245094299316
    10. 'ter' → logprob: -12.875245094299316

Token 520: ' et' (ID: 859)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3854651153087616
    2. '   ' → logprob: -2.260465145111084
    3. '           ' → logprob: -2.260465145111084
    4. ' et' → logprob: -2.760465145111084
    5. 'et' → logprob: -3.760465145111084
    6. '        
' → logprob: -4.385465145111084
    7. '            
' → logprob: -6.635465145111084
    8. ' de' → logprob: -6.760465145111084
    9. '    
' → logprob: -6.885465145111084
    10. ' and' → logprob: -6.885465145111084

Token 521: ' passe' (ID: 22210)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0013335748808458447
    2. 'pass' → logprob: -6.751333713531494
    3. ' passe' → logprob: -9.251333236694336
    4. '```' → logprob: -10.376333236694336
    5. 'passes' → logprob: -11.001333236694336
    6. 'Passe' → logprob: -12.626333236694336
    7. 'pro' → logprob: -13.126333236694336
    8. 'continue' → logprob: -13.376333236694336
    9. 'repr' → logprob: -13.626333236694336
    10. 'va' → logprob: -13.751333236694336

Token 522: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.5380550622940063
    2. 'à' → logprob: -1.5380550622940063
    3. ' au' → logprob: -2.163054943084717
    4. 'au' → logprob: -2.538054943084717
    5. '<|end|>' → logprob: -6.038054943084717
    6. ' to' → logprob: -6.413054943084717
    7. 'to' → logprob: -6.663054943084717
    8. ' ' → logprob: -7.163054943084717
    9. '```' → logprob: -8.038055419921875
    10. '   ' → logprob: -8.663055419921875

Token 523: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.006361720617860556
    2. ' la' → logprob: -5.131361484527588
    3. 'l' → logprob: -7.881361484527588
    4. 'the' → logprob: -10.131361961364746
    5. ' the' → logprob: -11.881361961364746
    6. '```' → logprob: -12.381361961364746
    7. 'j' → logprob: -13.881361961364746
    8. 'celle' → logprob: -14.131361961364746
    9. 'lap' → logprob: -14.631361961364746
    10. '#' → logprob: -14.881361961364746

Token 524: ' suivante' (ID: 107439)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -1.2717241048812866
    2. 'nou' → logprob: -1.5217241048812866
    3. 'su' → logprob: -1.7717241048812866
    4. 'next' → logprob: -2.021724224090576
    5. 'n' → logprob: -3.146724224090576
    6. '```' → logprob: -3.146724224090576
    7. ' suivante' → logprob: -3.521724224090576
    8. 'j' → logprob: -3.521724224090576
    9. 'newline' → logprob: -4.396724224090576
    10. 'b' → logprob: -4.896724224090576

Token 525: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002447946462780237
    2. '        
' → logprob: -6.377448081970215
    3. '
' → logprob: -7.502448081970215
    4. '           ' → logprob: -9.877448081970215
    5. '            
' → logprob: -10.377448081970215
    6. 'else' → logprob: -10.752448081970215
    7. 'even' → logprob: -10.752448081970215
    8. '       
' → logprob: -11.127448081970215
    9. '    
' → logprob: -11.127448081970215
    10. ' else' → logprob: -11.752448081970215

Token 526: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018348470330238342
    2. 'even' → logprob: -4.143348693847656
    3. 'else' → logprob: -6.518348693847656
    4. '   ' → logprob: -7.643348693847656
    5. '           ' → logprob: -8.518348693847656
    6. ' even' → logprob: -10.018348693847656
    7. '```' → logprob: -10.268348693847656
    8. '        
' → logprob: -10.393348693847656
    9. '
' → logprob: -11.268348693847656
    10. ' else' → logprob: -11.893348693847656

Token 527: ' else' (ID: 1203)
  Prédit: 'even'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'even' → logprob: -0.7364071011543274
    2. '       ' → logprob: -1.2364070415496826
    3. '   ' → logprob: -1.4864070415496826
    4. ' even' → logprob: -5.611407279968262
    5. 'else' (adapté à ' else') → logprob: -7.736407279968262
    6. '           ' → logprob: -8.986407279968262
    7. '    
' → logprob: -9.111407279968262
    8. '        
' → logprob: -9.236407279968262
    9. '
' → logprob: -10.611407279968262
    10. '#' → logprob: -11.361407279968262

Token 528: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16026079654693604
    2. ':
' → logprob: -1.910260796546936
    3. ':
' → logprob: -11.785261154174805
    4. '           ' → logprob: -11.910261154174805
    5. ' :' → logprob: -11.910261154174805
    6. ' :
' → logprob: -12.160261154174805
    7. '       ' → logprob: -12.535261154174805
    8. 'even' → logprob: -12.535261154174805
    9. ':

' → logprob: -14.160261154174805
    10. ',' → logprob: -14.285261154174805

Token 529: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05387057363986969
    2. 'even' → logprob: -3.178870677947998
    3. ' even' → logprob: -4.553870677947998
    4. '       ' → logprob: -9.05387020111084
    5. '   ' → logprob: -9.30387020111084
    6. '               ' → logprob: -9.92887020111084
    7. '_even' → logprob: -12.05387020111084
    8. 'odd' → logprob: -12.17887020111084
    9. '            
' → logprob: -12.92887020111084
    10. '	       ' → logprob: -13.05387020111084

Token 530: ' #' (ID: 1069)
  Prédit: 'even'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'even' → logprob: -0.04753677174448967
    2. ' even' → logprob: -3.422536849975586
    3. '           ' → logprob: -4.297536849975586
    4. '   ' → logprob: -9.172536849975586
    5. '               ' → logprob: -10.297536849975586
    6. '
' → logprob: -10.797536849975586
    7. '            
' → logprob: -11.547536849975586
    8. '       ' → logprob: -11.672536849975586
    9. '_even' → logprob: -12.422536849975586
    10. 'odd' → logprob: -12.797536849975586

Token 531: ' Si' (ID: 7832)
  Prédit: 'even'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'even' → logprob: -0.006696069147437811
    2. ' even' → logprob: -5.3816962242126465
    3. '           ' → logprob: -6.2566962242126465
    4. '   ' → logprob: -9.256695747375488
    5. '       ' → logprob: -10.506695747375488
    6. '               ' → logprob: -11.006695747375488
    7. 'odd' → logprob: -11.506695747375488
    8. '#' → logprob: -14.006695747375488
    9. '                   ' → logprob: -14.131695747375488
    10. '```' → logprob: -14.256695747375488

Token 532: ' nums' (ID: 18117)
  Prédit: 'even'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'even' → logprob: -0.5250115394592285
    2. ' even' → logprob: -0.9000115394592285
    3. '           ' → logprob: -6.5250115394592285
    4. 'nums' → logprob: -8.90001106262207
    5. '_even' → logprob: -9.40001106262207
    6. ' même' → logprob: -9.77501106262207
    7. ' nums' → logprob: -10.27501106262207
    8. ' odd' → logprob: -11.15001106262207
    9. '   ' → logprob: -11.15001106262207
    10. ' ' → logprob: -11.27501106262207

Token 533: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -4.842555426876061e-06
    2. '[' → logprob: -12.375004768371582
    3. 'j' → logprob: -15.375004768371582
    4. '[
' → logprob: -15.875004768371582
    5. '[i' → logprob: -16.3750057220459
    6. '35' → logprob: -17.7500057220459
    7. ' [' → logprob: -17.8750057220459
    8. '```' → logprob: -18.2500057220459
    9. '[js' → logprob: -18.3750057220459
    10. '[a' → logprob: -18.8750057220459

Token 534: ']' (ID: 60)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.28136512637138367
    2. '%' → logprob: -1.406365156173706
    3. ' ' → logprob: -8.906365394592285
    4. ' ' → logprob: -10.531365394592285
    5. ']' → logprob: -10.906365394592285
    6. ')' → logprob: -11.031365394592285
    7. '   ' → logprob: -12.531365394592285
    8. ' est' → logprob: -13.031365394592285
    9. '           ' → logprob: -13.156365394592285
    10. '```' → logprob: -13.406365394592285

Token 535: ' est' (ID: 893)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.2519700527191162
    2. ' %' → logprob: -1.5019700527191162
    3. ' est' → logprob: -10.751970291137695
    4. ' ' → logprob: -11.501970291137695
    5. '%d' → logprob: -13.001970291137695
    6. 'est' → logprob: -13.126970291137695
    7. ' ' → logprob: -13.751970291137695
    8. '%s' → logprob: -14.001970291137695
    9. ' divisible' → logprob: -14.626970291137695
    10. '%=' → logprob: -14.751970291137695

Token 536: ' divisible' (ID: 167813)
  Prédit: ' divisible'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' divisible' → logprob: -0.2817234396934509
    2. 'div' → logprob: -1.4067234992980957
    3. ' divis' → logprob: -8.281723022460938
    4. '%' → logprob: -9.406723022460938
    5. ' div' → logprob: -10.156723022460938
    6. 'pair' → logprob: -10.281723022460938
    7. 'even' → logprob: -10.656723022460938
    8. '           ' → logprob: -10.906723022460938
    9. 'multiple' → logprob: -10.906723022460938
    10. '   ' → logprob: -11.156723022460938

Token 537: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.07086072117090225
    2. 'par' → logprob: -2.8208606243133545
    3. '           ' → logprob: -4.820860862731934
    4. ' by' → logprob: -8.445860862731934
    5. '       ' → logprob: -8.820860862731934
    6. '            ' → logprob: -9.070860862731934
    7. 'by' → logprob: -9.320860862731934
    8. '               ' → logprob: -10.195860862731934
    9. ' ' → logprob: -10.320860862731934
    10. '_par' → logprob: -10.445860862731934

Token 538: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0019561098888516426
    2. ' ' → logprob: -6.251955986022949
    3. 'au' → logprob: -11.12695598602295
    4. '   ' → logprob: -12.50195598602295
    5. 'either' → logprob: -13.00195598602295
    6. ' au' → logprob: -14.00195598602295
    7. ' ' → logprob: -14.12695598602295
    8. ' either' → logprob: -14.25195598602295
    9. '           ' → logprob: -14.62695598602295
    10. '```' → logprob: -14.62695598602295

Token 539: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -7.465036105713807e-06
    2. ' ' → logprob: -12.000007629394531
    3. 'either' → logprob: -14.375007629394531
    4. '```' → logprob: -15.250007629394531
    5. '2' → logprob: -16.37500762939453
    6. '   ' → logprob: -16.50000762939453
    7. ' either' → logprob: -16.50000762939453
    8. 'au' → logprob: -17.00000762939453
    9. '#' → logprob: -17.62500762939453
    10. '.' → logprob: -17.62500762939453

Token 540: ' ou' (ID: 2031)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.1332552134990692
    2. 'or' → logprob: -2.3832552433013916
    3. ' ou' → logprob: -3.8832552433013916
    4. 'ou' → logprob: -4.7582550048828125
    5. '           ' → logprob: -6.1332550048828125
    6. ' ' → logprob: -7.1332550048828125
    7. ' ' → logprob: -9.633255004882812
    8. '	or' → logprob: -9.633255004882812
    9. '            ' → logprob: -9.883255004882812
    10. '          ' → logprob: -10.383255004882812

Token 541: ' par' (ID: 686)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.030218206346035004
    2. ' ' → logprob: -3.5302181243896484
    3. '#' → logprob: -8.530218124389648
    4. '           ' → logprob: -8.905218124389648
    5. ' par' → logprob: -9.655218124389648
    6. ' #' → logprob: -10.405218124389648
    7. 'by' → logprob: -11.655218124389648
    8. '       ' → logprob: -12.030218124389648
    9. 'ou' → logprob: -12.405218124389648
    10. 'par' → logprob: -12.530218124389648

Token 542: ' ' (ID: 220)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.009757505729794502
    2. ' ' → logprob: -4.6347575187683105
    3. '   ' → logprob: -14.509757041931152
    4. '  ' → logprob: -15.009757041931152
    5. ' ' → logprob: -15.134757041931152
    6. '```' → logprob: -15.634757041931152
    7. '7' → logprob: -17.13475799560547
    8. '       ' → logprob: -17.38475799560547
    9. '    ' → logprob: -17.38475799560547
    10. 'or' → logprob: -17.50975799560547

Token 543: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.0013270224444568157
    2. ' ' → logprob: -6.626327037811279
    3. '```' → logprob: -15.126326560974121
    4. '   ' → logprob: -15.501326560974121
    5. '  ' → logprob: -15.751326560974121
    6. '1' → logprob: -16.501327514648438
    7. ' ' → logprob: -16.751327514648438
    8. 'or' → logprob: -17.126327514648438
    9. ',' → logprob: -17.688827514648438
    10. '.' → logprob: -17.751327514648438

Token 544: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.25415992736816406
    2. '           ' → logprob: -2.254159927368164
    3. ':
' → logprob: -2.879159927368164
    4. '               ' → logprob: -3.004159927368164
    5. ',' → logprob: -4.879159927368164
    6. 'even' → logprob: -5.254159927368164
    7. ' even' → logprob: -7.754159927368164
    8. ' or' → logprob: -9.004159927368164
    9. ' :' → logprob: -9.129159927368164
    10. '       ' → logprob: -9.629159927368164

Token 545: 'ou' (ID: 283)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.9183324575424194
    2. '           ' → logprob: -1.6683324575424194
    3. '),' → logprob: -1.6683324575424194
    4. '               ' → logprob: -2.043332576751709
    5. 'even' → logprob: -2.793332576751709
    6. '):' → logprob: -4.168332576751709
    7. ' even' → logprob: -4.293332576751709
    8. ')' → logprob: -6.543332576751709
    9. ':' → logprob: -7.543332576751709
    10. ':
' → logprob: -8.29333209991455

Token 546: ' les' (ID: 1341)
  Prédit: 'both'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'both' → logprob: -0.6318449974060059
    2. ' les' → logprob: -1.5068449974060059
    3. ' both' → logprob: -1.6318449974060059
    4. 'les' → logprob: -3.131844997406006
    5. '#' → logprob: -5.756844997406006
    6. ')' → logprob: -6.756844997406006
    7. 'fois' → logprob: -7.381844997406006
    8. ' fois' → logprob: -7.506844997406006
    9. 'even' → logprob: -7.631844997406006
    10. 'des' → logprob: -8.506845474243164

Token 547: ' deux' (ID: 10301)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.05784003064036369
    2. ' deux' → logprob: -2.93284010887146
    3. '2' → logprob: -7.057839870452881
    4. ')' → logprob: -7.807839870452881
    5. '```' → logprob: -7.807839870452881
    6. ' ' → logprob: -8.307840347290039
    7. 'both' → logprob: -8.432840347290039
    8. 'aut' → logprob: -8.557840347290039
    9. 'two' → logprob: -8.932840347290039
    10. '#' → logprob: -9.432840347290039

Token 548: '),' (ID: 936)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.8967359066009521
    2. '):' → logprob: -1.1467359066009521
    3. '),' → logprob: -2.271735906600952
    4. '           ' → logprob: -2.521735906600952
    5. ',' → logprob: -2.771735906600952
    6. ':' → logprob: -3.771735906600952
    7. '):
' → logprob: -6.021736145019531
    8. '               ' → logprob: -6.896736145019531
    9. ':
' → logprob: -6.896736145019531
    10. ')' → logprob: -8.396736145019531

Token 549: ' incr' (ID: 52395)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.49373969435691833
    2. 'even' → logprob: -1.1187397241592407
    3. ' even' → logprob: -3.243739604949951
    4. '               ' → logprob: -3.743739604949951
    5. '   ' → logprob: -8.86874008178711
    6. '_even' → logprob: -10.49374008178711
    7. '            
' → logprob: -10.74374008178711
    8. '
' → logprob: -11.11874008178711
    9. '       ' → logprob: -11.11874008178711
    10. ' ' → logprob: -11.24374008178711

Token 550: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.05981313809752464
    2. 'ément' → logprob: -2.9348130226135254
    3. 'ém' → logprob: -5.684813022613525
    4. 'mente' → logprob: -7.184813022613525
    5. 'éments' → logprob: -7.684813022613525
    6. 'emente' → logprob: -8.434813499450684
    7. 'è' → logprob: -10.684813499450684
    8. 'ement' → logprob: -11.559813499450684
    9. 'mé' → logprob: -11.684813499450684
    10. 'em' → logprob: -11.684813499450684

Token 551: 'mente' (ID: 4186)
  Prédit: 'mente'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mente' → logprob: -0.009694235399365425
    2. 'ment' → logprob: -5.3846940994262695
    3. 'nte' → logprob: -6.3846940994262695
    4. 'm' → logprob: -6.5096940994262695
    5. 'me' → logprob: -7.1346940994262695
    6. 'mental' → logprob: -8.75969409942627
    7. 'mentation' → logprob: -9.13469409942627
    8. 'mé' → logprob: -9.13469409942627
    9. 'mented' → logprob: -9.50969409942627
    10. '#' → logprob: -9.63469409942627

Token 552: ' le' (ID: 505)
  Prédit: 'even'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'even' → logprob: -0.17979960143566132
    2. ' even' → logprob: -1.8047995567321777
    3. '           ' → logprob: -10.179800033569336
    4. '_even' → logprob: -11.679800033569336
    5. '   ' → logprob: -12.804800033569336
    6. 'odd' → logprob: -13.554800033569336
    7. ' ' → logprob: -14.054800033569336
    8. ' ' → logprob: -14.429800033569336
    9. '               ' → logprob: -14.679800033569336
    10. '1' → logprob: -14.929800033569336

Token 553: ' compteur' (ID: 163344)
  Prédit: 'even'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'even' → logprob: -0.00012368128227535635
    2. ' even' → logprob: -9.000123977661133
    3. 'odd' → logprob: -16.500123977661133
    4. 'counter' → logprob: -16.875123977661133
    5. '_even' → logprob: -17.250123977661133
    6. 'count' → logprob: -17.625123977661133
    7. 'evenodd' → logprob: -17.625123977661133
    8. 'Even' → logprob: -18.000123977661133
    9. '```' → logprob: -18.500123977661133
    10. '`' → logprob: -18.875123977661133

Token 554: ' '' (ID: 461)
  Prédit: 'even'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'even' → logprob: -0.14280392229557037
    2. ' even' → logprob: -2.017803907394409
    3. '_even' → logprob: -10.267804145812988
    4. '`' → logprob: -10.517804145812988
    5. '   ' → logprob: -10.767804145812988
    6. '```' → logprob: -11.392804145812988
    7. 'odd' → logprob: -12.017804145812988
    8. '           ' → logprob: -12.642804145812988
    9. ' ' → logprob: -13.017804145812988
    10. ' de' → logprob: -13.080304145812988

Token 555: 'even' (ID: 28689)
  Prédit: 'even'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'even' → logprob: -4.0126840758603066e-05
    2. ' even' → logprob: -10.125040054321289
    3. 'odd' → logprob: -18.37504005432129
    4. 'evenodd' → logprob: -18.50004005432129
    5. '_even' → logprob: -18.62504005432129
    6. 'Even' → logprob: -19.37504005432129
    7. 'eve' → logprob: -19.62504005432129
    8. 'e' → logprob: -19.87504005432129
    9. '   ' → logprob: -20.00004005432129
    10. 'ever' → logprob: -21.12504005432129

Token 556: '35' (ID: 2467)
  Prédit: '35'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '35' → logprob: -1.0280383548888494e-06
    2. '_' → logprob: -14.875000953674316
    3. '+=' → logprob: -15.750000953674316
    4. ' ' → logprob: -16.125001907348633
    5. '355' → logprob: -16.125001907348633
    6. '353' → logprob: -16.250001907348633
    7. ' +=' → logprob: -16.625001907348633
    8. '3' → logprob: -17.125001907348633
    9. '351' → logprob: -18.250001907348633
    10. '   ' → logprob: -18.750001907348633

Token 557: ''.
' (ID: 49980)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.10840550065040588
    2. '           ' → logprob: -2.983405590057373
    3. '+=' → logprob: -2.983405590057373
    4. '               ' → logprob: -6.858405590057373
    5. ')' → logprob: -9.233405113220215
    6. '+' → logprob: -9.358405113220215
    7. '   ' → logprob: -9.608405113220215
    8. '       ' → logprob: -9.733405113220215
    9. ']+=' → logprob: -10.108405113220215
    10. '```' → logprob: -10.483405113220215

Token 558: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.26544955372810364
    2. 'even' → logprob: -1.6404495239257812
    3. ' even' → logprob: -3.2654495239257812
    4. '               ' → logprob: -7.015449523925781
    5. '       ' → logprob: -9.015449523925781
    6. '   ' → logprob: -11.015449523925781
    7. '_even' → logprob: -11.265449523925781
    8. '            
' → logprob: -12.515449523925781
    9. '```' → logprob: -13.140449523925781
    10. '		' → logprob: -13.265449523925781

Token 559: ' even' (ID: 1952)
  Prédit: 'even'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'even' (adapté à ' even') → logprob: -0.026372525840997696
    2. ' even' → logprob: -3.9013724327087402
    3. '           ' → logprob: -5.15137243270874
    4. '               ' → logprob: -11.276372909545898
    5. '   ' → logprob: -12.276372909545898
    6. '       ' → logprob: -12.526372909545898
    7. '_even' → logprob: -15.526372909545898
    8. ' ' → logprob: -15.776372909545898
    9. '          ' → logprob: -16.1513729095459
    10. 'Even' → logprob: -16.2763729095459

Token 560: '35' (ID: 2467)
  Prédit: '35'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '35' → logprob: -0.00022952310973778367
    2. '+=' → logprob: -8.500229835510254
    3. ' +=' → logprob: -10.875229835510254
    4. '_' → logprob: -12.250229835510254
    5. '+' → logprob: -13.250229835510254
    6. ' ' → logprob: -14.625229835510254
    7. '=' → logprob: -17.000228881835938
    8. '3' → logprob: -17.250228881835938
    9. '355' → logprob: -17.500228881835938
    10. '   ' → logprob: -17.500228881835938

Token 561: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.25193077325820923
    2. ' +=' → logprob: -1.5019307136535645
    3. '+' → logprob: -14.001931190490723
    4. '=' → logprob: -14.501931190490723
    5. ']+=' → logprob: -15.376931190490723
    6. '+='' → logprob: -17.376930236816406
    7. '+="' → logprob: -17.501930236816406
    8. '++' → logprob: -17.751930236816406
    9. '+=(' → logprob: -18.626930236816406
    10. ' ' → logprob: -19.626930236816406

Token 562: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.438573680294212e-06
    2. ' ' → logprob: -12.125005722045898
    3. '１' → logprob: -21.2500057220459
    4. '   ' → logprob: -21.5000057220459
    5. '```' → logprob: -21.8750057220459
    6. '۱' → logprob: -22.1250057220459
    7. ' ' → logprob: -22.6875057220459
    8. '  ' → logprob: -22.8125057220459
    9. '+' → logprob: -23.0625057220459
    10. '	' → logprob: -23.1250057220459

Token 563: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.125
    3. '```' → logprob: -21.75
    4. '１' → logprob: -22.75
    5. '۱' → logprob: -23.25
    6. '   ' → logprob: -24.25
    7. '१' → logprob: -24.375
    8. '১' → logprob: -24.5625
    9. '0' → logprob: -24.5625
    10. '' → logprob: -24.9375

Token 564: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00020735491125378758
    2. 'else' → logprob: -8.50020694732666
    3. ' else' → logprob: -12.75020694732666
    4. '       ' → logprob: -14.37520694732666
    5. '```' → logprob: -15.75020694732666
    6. 'elif' → logprob: -16.500207901000977
    7. '    
' → logprob: -16.625207901000977
    8. '  ' → logprob: -17.250207901000977
    9. '	else' → logprob: -17.875207901000977
    10. '   ' → logprob: -18.000207901000977

Token 565: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009786427952349186
    2. 'else' → logprob: -4.634786605834961
    3. ' else' → logprob: -10.884786605834961
    4. 'elif' → logprob: -12.384786605834961
    5. '```' → logprob: -12.884786605834961
    6. '	else' → logprob: -13.009786605834961
    7. '       ' → logprob: -13.759786605834961
    8. '<|end|>' → logprob: -14.134786605834961
    9. '}' → logprob: -15.384786605834961
    10. 'continue' → logprob: -16.13478660583496

Token 566: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.5775241851806641
    2. '   ' → logprob: -0.8275241851806641
    3. ' else' → logprob: -6.452524185180664
    4. 'elif' → logprob: -12.327524185180664
    5. '	else' → logprob: -13.452524185180664
    6. '```' → logprob: -13.952524185180664
    7. '    
' → logprob: -17.077524185180664
    8. '  ' → logprob: -17.202524185180664
    9. '       ' → logprob: -17.327524185180664
    10. ':' → logprob: -17.702524185180664

Token 567: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.048682067543268204
    2. ':
' → logprob: -3.0486819744110107
    3. '   ' → logprob: -9.42368221282959
    4. ' :' → logprob: -11.92368221282959
    5. 'odd' → logprob: -12.92368221282959
    6. ' :
' → logprob: -13.42368221282959
    7. ':
' → logprob: -13.54868221282959
    8. ' odd' → logprob: -14.67368221282959
    9. '    ' → logprob: -15.04868221282959
    10. '       ' → logprob: -15.17368221282959

Token 568: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7104423642158508
    2. 'odd' → logprob: -0.9604423642158508
    3. '   ' → logprob: -2.085442304611206
    4. ' odd' → logprob: -6.460442543029785
    5. 'od' → logprob: -11.835442543029785
    6. '           ' → logprob: -12.085442543029785
    7. '```' → logprob: -12.585442543029785
    8. '	' → logprob: -12.835442543029785
    9. '   ' → logprob: -12.960442543029785
    10. ' ' → logprob: -13.085442543029785

Token 569: ' #' (ID: 1069)
  Prédit: 'odd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'odd' → logprob: -0.00024215869780164212
    2. '   ' → logprob: -8.500242233276367
    3. ' odd' → logprob: -10.250242233276367
    4. '       ' → logprob: -12.750242233276367
    5. 'od' → logprob: -16.125242233276367
    6. '    
' → logprob: -16.625242233276367
    7. '  ' → logprob: -17.500242233276367
    8. '           ' → logprob: -17.625242233276367
    9. '```' → logprob: -17.875242233276367
    10. '
' → logprob: -18.000242233276367

Token 570: ' Si' (ID: 7832)
  Prédit: 'odd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'odd' → logprob: -6.682846287731081e-05
    2. '   ' → logprob: -10.250066757202148
    3. ' odd' → logprob: -10.500066757202148
    4. '#' → logprob: -12.625066757202148
    5. '       ' → logprob: -15.000066757202148
    6. '  ' → logprob: -16.37506675720215
    7. ' ' → logprob: -16.62506675720215
    8. '           ' → logprob: -16.87506675720215
    9. 'even' → logprob: -17.62506675720215
    10. 'od' → logprob: -17.75006675720215

Token 571: ' nums' (ID: 18117)
  Prédit: 'nums'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nums' → logprob: -0.5308735966682434
    2. ' nums' → logprob: -0.9058735966682434
    3. ' odd' → logprob: -5.530873775482178
    4. 'odd' → logprob: -5.655873775482178
    5. '(nums' → logprob: -9.40587329864502
    6. ' ' → logprob: -9.65587329864502
    7. '_nums' → logprob: -9.78087329864502
    8. 'num' → logprob: -11.28087329864502
    9. ' ' → logprob: -11.28087329864502
    10. ':' → logprob: -11.78087329864502

Token 572: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -1.5048530030981055e-06
    2. '[' → logprob: -14.000001907348633
    3. 'j' → logprob: -15.625001907348633
    4. '[J' → logprob: -16.125001907348633
    5. '[i' → logprob: -16.750001907348633
    6. '   ' → logprob: -17.375001907348633
    7. '[
' → logprob: -17.500001907348633
    8. ' [' → logprob: -17.875001907348633
    9. '[js' → logprob: -18.000001907348633
    10. '%' → logprob: -18.125001907348633

Token 573: ']' (ID: 60)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.07891622185707092
    2. '%' → logprob: -2.578916311264038
    3. ' ' → logprob: -10.953916549682617
    4. ' ' → logprob: -12.078916549682617
    5. ')' → logprob: -13.328916549682617
    6. '   ' → logprob: -13.953916549682617
    7. 's' → logprob: -15.328916549682617
    8. ']' → logprob: -15.328916549682617
    9. '#' → logprob: -16.578916549682617
    10. '%s' → logprob: -17.578916549682617

Token 574: ' n' (ID: 297)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.2014189064502716
    2. ' %' → logprob: -1.7014188766479492
    3. ' ' → logprob: -12.32641887664795
    4. ' ' → logprob: -14.32641887664795
    5. 's' → logprob: -15.95141887664795
    6. '%d' → logprob: -16.326419830322266
    7. '#' → logprob: -16.576419830322266
    8. '   ' → logprob: -16.701419830322266
    9. '%s' → logprob: -17.076419830322266
    10. ' is' → logprob: -17.701419830322266

Token 575: ''est' (ID: 6616)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.003762786276638508
    2. ' %' → logprob: -5.628762722015381
    3. ' pas' → logprob: -9.753763198852539
    4. 's' → logprob: -10.753763198852539
    5. ' est' → logprob: -10.753763198852539
    6. ''est' → logprob: -11.003763198852539
    7. 'pas' → logprob: -11.253763198852539
    8. 'est' → logprob: -11.878763198852539
    9. ')' → logprob: -12.003763198852539
    10. 'e' → logprob: -12.253763198852539

Token 576: ' PAS' (ID: 66794)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.28722119331359863
    2. ' pas' → logprob: -1.4122211933135986
    3. '%' → logprob: -5.4122209548950195
    4. 'imp' → logprob: -7.4122209548950195
    5. ' impair' → logprob: -7.6622209548950195
    6. 'pair' → logprob: -8.41222095489502
    7. 'odd' → logprob: -9.41222095489502
    8. '_pas' → logprob: -9.78722095489502
    9. 'im' → logprob: -10.28722095489502
    10. ' impar' → logprob: -10.53722095489502

Token 577: ' pair' (ID: 10610)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.006969920825213194
    2. 'pair' → logprob: -5.131969928741455
    3. ' %' → logprob: -7.506969928741455
    4. 'imp' → logprob: -8.756969451904297
    5. '%d' → logprob: -9.631969451904297
    6. 'odd' → logprob: -9.756969451904297
    7. '1' → logprob: -9.881969451904297
    8. ' impair' → logprob: -10.006969451904297
    9. 'im' → logprob: -10.131969451904297
    10. ' pair' → logprob: -10.256969451904297

Token 578: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.20363955199718475
    2. ':
' → logprob: -1.7036395072937012
    3. '   ' → logprob: -6.703639507293701
    4. '       ' → logprob: -7.203639507293701
    5. 'odd' → logprob: -9.20363998413086
    6. ',' → logprob: -9.82863998413086
    7. ' odd' → logprob: -10.45363998413086
    8. '           ' → logprob: -10.57863998413086
    9. ':
' → logprob: -10.57863998413086
    10. ' :' → logprob: -11.82863998413086

Token 579: 'don' (ID: 22130)
  Prédit: 'odd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'odd' → logprob: -0.6340752243995667
    2. ' odd' → logprob: -1.1340751647949219
    3. '   ' → logprob: -2.009075164794922
    4. '       ' → logprob: -4.759075164794922
    5. '#' → logprob: -5.384075164794922
    6. '    ' → logprob: -9.134075164794922
    7. ')' → logprob: -9.259075164794922
    8. '  ' → logprob: -9.509075164794922
    9. ' ' → logprob: -9.634075164794922
    10. ' #' → logprob: -9.884075164794922

Token 580: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.4591997861862183
    2. 't' → logprob: -1.4591997861862183
    3. 'e' → logprob: -1.7091997861862183
    4. 'umbers' → logprob: -2.209199905395508
    5. 's' → logprob: -2.709199905395508
    6. 'u' → logprob: -3.334199905395508
    7. 'que' → logprob: -3.459199905395508
    8. 'q' → logprob: -3.834199905395508
    9. 'um' → logprob: -4.584199905395508
    10. 'us' → logprob: -4.584199905395508

Token 581: ' il' (ID: 1793)
  Prédit: 'imp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'imp' → logprob: -0.6695943474769592
    2. ' imp' → logprob: -1.9195942878723145
    3. 'im' → logprob: -2.5445942878723145
    4. 'odd' → logprob: -2.5445942878723145
    5. ' impair' → logprob: -2.7945942878723145
    6. ' c' → logprob: -3.4195942878723145
    7. 'nums' → logprob: -3.9195942878723145
    8. 'c' → logprob: -3.9195942878723145
    9. ' odd' → logprob: -4.1695942878723145
    10. ' impar' → logprob: -4.4195942878723145

Token 582: ' est' (ID: 893)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.005022651981562376
    2. 's' → logprob: -6.1300225257873535
    3. ' est' → logprob: -6.6300225257873535
    4. ' %' → logprob: -7.2550225257873535
    5. ')' → logprob: -8.130023002624512
    6. '#' → logprob: -8.255023002624512
    7. 'est' → logprob: -8.880023002624512
    8. ' is' → logprob: -10.255023002624512
    9. '   ' → logprob: -10.505023002624512
    10. ' ' → logprob: -11.505023002624512

Token 583: ' impair' (ID: 64113)
  Prédit: 'imp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imp' → logprob: -0.0008976469398476183
    2. ' impair' → logprob: -7.7508978843688965
    3. 'im' → logprob: -7.8758978843688965
    4. 'odd' → logprob: -9.750897407531738
    5. ' imp' → logprob: -10.500897407531738
    6. '_imp' → logprob: -14.125897407531738
    7. 'pair' → logprob: -16.000898361206055
    8. 'Im' → logprob: -16.250898361206055
    9. ' Imp' → logprob: -16.375898361206055
    10. ' impar' → logprob: -16.375898361206055

Token 584: '),' (ID: 936)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.14265479147434235
    2. '):' → logprob: -2.3926548957824707
    3. '       ' → logprob: -4.267654895782471
    4. ':' → logprob: -4.517654895782471
    5. '),' → logprob: -4.767654895782471
    6. ':
' → logprob: -5.267654895782471
    7. '   ' → logprob: -6.142654895782471
    8. '           ' → logprob: -7.642654895782471
    9. ',' → logprob: -8.642654418945312
    10. ')' → logprob: -10.142654418945312

Token 585: ' alors' (ID: 17971)
  Prédit: 'odd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'odd' → logprob: -0.34425947070121765
    2. ' odd' → logprob: -1.34425950050354
    3. '   ' → logprob: -3.96925950050354
    4. '       ' → logprob: -4.469259262084961
    5. '           ' → logprob: -10.219259262084961
    6. '        
' → logprob: -10.469259262084961
    7. 'od' → logprob: -10.719259262084961
    8. '    
' → logprob: -10.844259262084961
    9. '
' → logprob: -10.969259262084961
    10. ' ' → logprob: -11.094259262084961

Token 586: ' on' (ID: 402)
  Prédit: 'odd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'odd' → logprob: -0.0009581510093994439
    2. ' odd' → logprob: -7.00095796585083
    3. '       ' → logprob: -10.375958442687988
    4. '   ' → logprob: -11.125958442687988
    5. 'od' → logprob: -15.375958442687988
    6. '           ' → logprob: -15.625958442687988
    7. '```' → logprob: -15.875958442687988
    8. '
' → logprob: -16.375957489013672
    9. 'even' → logprob: -16.375957489013672
    10. ' ' → logprob: -17.000957489013672

Token 587: ' incr' (ID: 52395)
  Prédit: 'odd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'odd' → logprob: -0.00432745274156332
    2. ' odd' → logprob: -5.629327297210693
    3. '   ' → logprob: -7.754327297210693
    4. '       ' → logprob: -8.504327774047852
    5. 'in' → logprob: -10.504327774047852
    6. 'od' → logprob: -10.754327774047852
    7. '```' → logprob: -12.004327774047852
    8. '           ' → logprob: -12.254327774047852
    9. 'increment' → logprob: -12.254327774047852
    10. ' ' → logprob: -12.504327774047852

Token 588: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.01239356491714716
    2. 'ément' → logprob: -4.762393474578857
    3. 'mente' → logprob: -6.012393474578857
    4. 'ém' → logprob: -7.762393474578857
    5. 'éments' → logprob: -8.012393951416016
    6. 'emente' → logprob: -8.387393951416016
    7. '(' → logprob: -9.137393951416016
    8. 'è' → logprob: -10.137393951416016
    9. '&eacute' → logprob: -10.637393951416016
    10. '#' → logprob: -10.762393951416016

Token 589: 'mente' (ID: 4186)
  Prédit: 'mente'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mente' → logprob: -0.0014276175061240792
    2. 'nte' → logprob: -7.12642765045166
    3. 'ment' → logprob: -8.12642765045166
    4. 'm' → logprob: -9.75142765045166
    5. 'mental' → logprob: -9.87642765045166
    6. 'me' → logprob: -10.12642765045166
    7. '#' → logprob: -10.25142765045166
    8. '(' → logprob: -10.75142765045166
    9. 'mentation' → logprob: -11.37642765045166
    10. 'mé' → logprob: -11.50142765045166

Token 590: ' le' (ID: 505)
  Prédit: 'odd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'odd' → logprob: -0.023245826363563538
    2. ' odd' → logprob: -3.7732458114624023
    3. '   ' → logprob: -15.773245811462402
    4. '1' → logprob: -16.39824676513672
    5. '```' → logprob: -17.77324676513672
    6. 'l' → logprob: -17.77324676513672
    7. 'even' → logprob: -18.02324676513672
    8. 'od' → logprob: -18.14824676513672
    9. 'Odd' → logprob: -18.77324676513672
    10. ' ' → logprob: -19.14824676513672

Token 591: ' compteur' (ID: 163344)
  Prédit: 'odd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'odd' → logprob: -0.0007101670489646494
    2. ' odd' → logprob: -7.2507100105285645
    3. 'od' → logprob: -16.500709533691406
    4. '1' → logprob: -17.125709533691406
    5. 'even' → logprob: -17.250709533691406
    6. ' ' → logprob: -17.625709533691406
    7. 'counter' → logprob: -18.000709533691406
    8. 'old' → logprob: -19.500709533691406
    9. '```' → logprob: -19.500709533691406
    10. '   ' → logprob: -19.625709533691406

Token 592: ' '' (ID: 461)
  Prédit: 'odd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'odd' → logprob: -0.0024829115718603134
    2. ' odd' → logprob: -6.002482891082764
    3. '   ' → logprob: -13.002483367919922
    4. '`' → logprob: -13.502483367919922
    5. 'od' → logprob: -14.127483367919922
    6. '```' → logprob: -14.377483367919922
    7. '(' → logprob: -14.502483367919922
    8. '1' → logprob: -15.377483367919922
    9. '+=' → logprob: -15.502483367919922
    10. 'old' → logprob: -15.627483367919922

Token 593: 'odd' (ID: 18303)
  Prédit: 'odd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'odd' → logprob: -4.842555426876061e-06
    2. ' odd' → logprob: -12.250004768371582
    3. 'old' → logprob: -20.2500057220459
    4. 'od' → logprob: -20.3750057220459
    5. '1' → logprob: -21.1250057220459
    6. '```' → logprob: -21.1250057220459
    7. 'Odd' → logprob: -21.3750057220459
    8. '`' → logprob: -21.6250057220459
    9. 'even' → logprob: -21.7500057220459
    10. '
' → logprob: -22.3750057220459

Token 594: ''.
' (ID: 49980)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.4741169512271881
    2. '+=' → logprob: -0.9741169214248657
    3. ']+=' → logprob: -10.724117279052734
    4. '+' → logprob: -11.849117279052734
    5. '   ' → logprob: -12.599117279052734
    6. '=' → logprob: -13.349117279052734
    7. '+='' → logprob: -13.599117279052734
    8. ' ' → logprob: -13.724117279052734
    9. ' ' → logprob: -14.099117279052734
    10. ')' → logprob: -14.099117279052734

Token 595: '       ' (ID: 309)
  Prédit: 'odd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'odd' → logprob: -0.08899159729480743
    2. '       ' → logprob: -2.838991641998291
    3. ' odd' → logprob: -3.713991641998291
    4. '   ' → logprob: -6.088991641998291
    5. '
' → logprob: -12.588991165161133
    6. '```' → logprob: -12.713991165161133
    7. '        
' → logprob: -13.213991165161133
    8. '           ' → logprob: -13.338991165161133
    9. ' ' → logprob: -13.963991165161133
    10. ' ' → logprob: -14.463991165161133

Token 596: ' odd' (ID: 14210)
  Prédit: 'odd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'odd' (adapté à ' odd') → logprob: -0.00014525714504998177
    2. ' odd' → logprob: -9.125144958496094
    3. '   ' → logprob: -10.750144958496094
    4. '       ' → logprob: -11.125144958496094
    5. '  ' → logprob: -17.750144958496094
    6. '           ' → logprob: -18.125144958496094
    7. ' ' → logprob: -18.250144958496094
    8. 'od' → logprob: -18.500144958496094
    9. '```' → logprob: -18.750144958496094
    10. '    ' → logprob: -18.750144958496094

Token 597: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.16023612022399902
    2. ' +=' → logprob: -1.910236120223999
    3. '=' → logprob: -11.535236358642578
    4. '+' → logprob: -13.535236358642578
    5. ']+=' → logprob: -14.535236358642578
    6. '+="' → logprob: -16.035236358642578
    7. '+='' → logprob: -16.035236358642578
    8. ' ' → logprob: -16.910236358642578
    9. '```' → logprob: -17.660236358642578
    10. ' =' → logprob: -18.035236358642578

Token 598: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005928558763116598
    2. ' ' → logprob: -5.1309285163879395
    3. '<|end|>' → logprob: -19.50592803955078
    4. ' ' → logprob: -20.13092803955078
    5. '  ' → logprob: -20.50592803955078
    6. '   ' → logprob: -20.63092803955078
    7. '```' → logprob: -20.88092803955078
    8. '۱' → logprob: -20.88092803955078
    9. '１' → logprob: -21.06842803955078
    10. '0' → logprob: -21.50592803955078

Token 599: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.25
    3. '```' → logprob: -21.125
    4. '۱' → logprob: -22.75
    5. '１' → logprob: -22.75
    6. '   ' → logprob: -23.625
    7. '<|end|>' → logprob: -23.625
    8. '+' → logprob: -24.25
    9. '১' → logprob: -24.3125
    10. '१' → logprob: -24.5625

Token 600: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.021403523162007332
    2. '#' → logprob: -4.1464033126831055
    3. 'if' → logprob: -5.3964033126831055
    4. 'pass' → logprob: -9.021403312683105
    5. '#print' → logprob: -9.146403312683105
    6. 'average' → logprob: -9.146403312683105
    7. 'result' → logprob: -9.771403312683105
    8. '```' → logprob: -9.771403312683105
    9. 'total' → logprob: -9.896403312683105
    10. ')' → logprob: -10.021403312683105

Token 601: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0016897005261853337
    2. '#' → logprob: -6.751689910888672
    3. 'if' → logprob: -8.126689910888672
    4. 'for' → logprob: -9.251689910888672
    5. 'even' → logprob: -10.501689910888672
    6. '#print' → logprob: -10.876689910888672
    7. 'pr' → logprob: -11.001689910888672
    8. 'result' → logprob: -11.376689910888672
    9. 'odd' → logprob: -11.751689910888672
    10. 'total' → logprob: -11.751689910888672

Token 602: ' Après' (ID: 47562)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0008800194482319057
    2. 'if' → logprob: -7.125880241394043
    3. '#' → logprob: -10.750880241394043
    4. 'for' → logprob: -10.750880241394043
    5. 'result' → logprob: -11.625880241394043
    6. 'total' → logprob: -11.875880241394043
    7. ' print' → logprob: -12.500880241394043
    8. 'even' → logprob: -12.875880241394043
    9. '#print' → logprob: -13.000880241394043
    10. 'output' → logprob: -13.625880241394043

Token 603: ' la' (ID: 557)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2580861449241638
    2. '#' → logprob: -2.2580862045288086
    3. 'la' → logprob: -3.0080862045288086
    4. 'le' → logprob: -3.8830862045288086
    5. 'les' → logprob: -4.133086204528809
    6. 'l' → logprob: -4.258086204528809
    7. 'for' → logprob: -4.758086204528809
    8. 'the' → logprob: -5.008086204528809
    9. ' la' → logprob: -5.633086204528809
    10. 'if' → logprob: -6.758086204528809

Token 604: ' fin' (ID: 2131)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.020530449226498604
    2. '#' → logprob: -4.2705302238464355
    3. 'for' → logprob: -5.1455302238464355
    4. ' print' → logprob: -8.270530700683594
    5. 'if' → logprob: -9.645530700683594
    6. ' #' → logprob: -10.020530700683594
    7. 'pr' → logprob: -10.520530700683594
    8. ' for' → logprob: -10.645530700683594
    9. '#print' → logprob: -10.895530700683594
    10. 's' → logprob: -11.145530700683594

Token 605: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.9205268621444702
    2. '#' → logprob: -1.1705268621444702
    3. ' du' → logprob: -2.1705269813537598
    4. 'du' → logprob: -3.0455269813537598
    5. 'print' → logprob: -3.2955269813537598
    6. ' des' → logprob: -3.6705269813537598
    7. ' of' → logprob: -4.04552698135376
    8. 'de' → logprob: -4.04552698135376
    9. 'for' → logprob: -4.29552698135376
    10. 'des' → logprob: -4.92052698135376

Token 606: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.0051232269033789635
    2. ' la' → logprob: -5.880123138427734
    3. 'for' → logprob: -6.130123138427734
    4. 'l' → logprob: -9.380123138427734
    5. '#' → logprob: -10.255123138427734
    6. 't' → logprob: -12.380123138427734
    7. ' for' → logprob: -12.505123138427734
    8. 'bou' → logprob: -13.130123138427734
    9. 'le' → logprob: -13.380123138427734
    10. 'the' → logprob: -13.630123138427734

Token 607: ' boucle' (ID: 174211)
  Prédit: 'bou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bou' → logprob: -0.14783824980258942
    2. 'for' → logprob: -2.1478383541107178
    3. ' boucle' → logprob: -4.022838115692139
    4. 'loop' → logprob: -6.147838115692139
    5. '#' → logprob: -7.522838115692139
    6. 'print' → logprob: -10.022838592529297
    7. ' for' → logprob: -10.647838592529297
    8. ' bou' → logprob: -11.772838592529297
    9. 'Bou' → logprob: -11.897838592529297
    10. '```' → logprob: -12.272838592529297

Token 608: ',' (ID: 11)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.017827849835157394
    2. ' print' → logprob: -4.642827987670898
    3. ',' → logprob: -4.892827987670898
    4. '#' → logprob: -8.517827987670898
    5. '
' → logprob: -8.517827987670898
    6. ',
' → logprob: -9.517827987670898
    7. 'if' → logprob: -10.517827987670898
    8. ':
' → logprob: -11.267827987670898
    9. ' ,' → logprob: -11.767827987670898
    10. '#print' → logprob: -11.767827987670898

Token 609: ' tous' (ID: 10688)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -6.988221684878226e-06
    2. 'if' → logprob: -12.625006675720215
    3. ' print' → logprob: -13.000006675720215
    4. 'prin' → logprob: -15.000006675720215
    5. '#print' → logprob: -15.125006675720215
    6. 'pr' → logprob: -15.375006675720215
    7. 'for' → logprob: -15.500006675720215
    8. 'total' → logprob: -16.00000762939453
    9. 'even' → logprob: -16.62500762939453
    10. '#' → logprob: -17.00000762939453

Token 610: ' les' (ID: 1341)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.03365837410092354
    2. ' print' → logprob: -4.158658504486084
    3. '#' → logprob: -4.658658504486084
    4. '(' → logprob: -5.033658504486084
    5. '(print' → logprob: -8.158658027648926
    6. 'les' → logprob: -8.533658027648926
    7. ' trois' → logprob: -8.533658027648926
    8. ' ' → logprob: -9.033658027648926
    9. ' #' → logprob: -9.158658027648926
    10. '()' → logprob: -9.408658027648926

Token 611: ' éléments' (ID: 57375)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.5549600720405579
    2. 'print' → logprob: -0.9299600720405579
    3. 'com' → logprob: -4.179960250854492
    4. '#' → logprob: -4.554960250854492
    5. 'counts' → logprob: -6.679960250854492
    6. 'nombre' → logprob: -7.304960250854492
    7. 'count' → logprob: -7.304960250854492
    8. 'prints' → logprob: -7.804960250854492
    9. 'élé' → logprob: -7.804960250854492
    10. ' compte' → logprob: -7.804960250854492

Token 612: ' de' (ID: 334)
  Prédit: 'ont'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ont' → logprob: -0.2512078285217285
    2. ' ont' → logprob: -2.5012078285217285
    3. 'ayant' → logprob: -2.8762078285217285
    4. '#' → logprob: -3.6262078285217285
    5. 'de' → logprob: -4.0012078285217285
    6. 'have' → logprob: -4.3762078285217285
    7. ' have' → logprob: -5.0012078285217285
    8. 's' → logprob: -5.5012078285217285
    9. ' de' → logprob: -6.0012078285217285
    10. ''ont' → logprob: -6.2512078285217285

Token 613: ' la' (ID: 557)
  Prédit: 'nums'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nums' → logprob: -0.42942655086517334
    2. 'la' → logprob: -1.0544265508651733
    3. ' la' → logprob: -7.804426670074463
    4. 'the' → logprob: -9.679426193237305
    5. ' nums' → logprob: -9.929426193237305
    6. 'time' → logprob: -10.054426193237305
    7. '#' → logprob: -10.554426193237305
    8. 's' → logprob: -10.679426193237305
    9. '(nums' → logprob: -11.304426193237305
    10. 'temps' → logprob: -11.304426193237305

Token 614: ' liste' (ID: 31719)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.731119692325592
    2. 'nums' → logprob: -1.2311196327209473
    3. 'sequence' → logprob: -1.8561196327209473
    4. 'sé' → logprob: -3.4811196327209473
    5. 'list' → logprob: -4.481119632720947
    6. '#' → logprob: -4.731119632720947
    7. 's' → logprob: -5.231119632720947
    8. 'table' → logprob: -5.356119632720947
    9. 'num' → logprob: -6.481119632720947
    10. 'seq' → logprob: -6.856119632720947

Token 615: ' ont' (ID: 4930)
  Prédit: 'nums'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nums' → logprob: -0.4882032573223114
    2. ' ont' → logprob: -1.4882032871246338
    3. 'ont' → logprob: -2.738203287124634
    4. '#' → logprob: -3.238203287124634
    5. ' nums' → logprob: -3.613203287124634
    6. ' have' → logprob: -4.238203048706055
    7. 'have' → logprob: -5.113203048706055
    8. 's' → logprob: -6.113203048706055
    9. ''ont' → logprob: -6.363203048706055
    10. ' auront' → logprob: -7.363203048706055

Token 616: ' été' (ID: 9799)
  Prédit: 'été'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'été' → logprob: -0.022315604612231255
    2. ' été' → logprob: -4.147315502166748
    3. '#' → logprob: -5.522315502166748
    4. 'être' → logprob: -7.147315502166748
    5. 'been' → logprob: -7.147315502166748
    6. '<|end|>' → logprob: -8.772315979003906
    7. 'éta' → logprob: -9.272315979003906
    8. 'é' → logprob: -9.522315979003906
    9. '```' → logprob: -10.147315979003906
    10. 'ét' → logprob: -10.397315979003906

Token 617: ' examin' (ID: 149499)
  Prédit: 'trait'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'trait' → logprob: -0.004528150428086519
    2. 'anal' → logprob: -6.004528045654297
    3. 'par' → logprob: -7.129528045654297
    4. 'tr' → logprob: -8.254528045654297
    5. 'processed' → logprob: -8.254528045654297
    6. ' trait' → logprob: -8.504528045654297
    7. 'tra' → logprob: -8.754528045654297
    8. 'ex' → logprob: -9.754528045654297
    9. 'inspect' → logprob: -9.754528045654297
    10. ' analys' → logprob: -10.004528045654297

Token 618: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.0015320050297304988
    2. 'é' → logprob: -7.126532077789307
    3. 'es' → logprob: -7.751532077789307
    4. '#' → logprob: -8.376531600952148
    5. 's' → logprob: -10.001531600952148
    6. 'ès' → logprob: -11.876531600952148
    7. 'e' → logprob: -12.126531600952148
    8. 'ées' → logprob: -12.751531600952148
    9. 'is' → logprob: -13.251531600952148
    10. 'ée' → logprob: -13.876531600952148

Token 619: ' et' (ID: 859)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -8.7689099018462e-05
    2. '#' → logprob: -10.00008773803711
    3. '<|end|>' → logprob: -11.00008773803711
    4. '#print' → logprob: -11.50008773803711
    5. '
' → logprob: -11.87508773803711
    6. ' print' → logprob: -12.25008773803711
    7. 'if' → logprob: -13.50008773803711
    8. '```' → logprob: -13.87508773803711
    9. 'even' → logprob: -14.75008773803711
    10. 'for' → logprob: -15.25008773803711

Token 620: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -1.0287061929702759
    2. 'le' → logprob: -1.1537061929702759
    3. '#' → logprob: -1.9037061929702759
    4. 'print' → logprob: -2.4037060737609863
    5. 'trait' → logprob: -2.9037060737609863
    6. 'anal' → logprob: -5.153706073760986
    7. 'com' → logprob: -5.528706073760986
    8. 'l' → logprob: -6.028706073760986
    9. ' le' → logprob: -6.153706073760986
    10. ' les' → logprob: -6.278706073760986

Token 621: ' compte' (ID: 19657)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.03189435228705406
    2. '#' → logprob: -4.281894207000732
    3. 'rés' → logprob: -4.406894207000732
    4. 'result' → logprob: -5.906894207000732
    5. 'val' → logprob: -6.156894207000732
    6. 'comp' → logprob: -8.40689468383789
    7. 'nombre' → logprob: -9.90689468383789
    8. 'results' → logprob: -10.15689468383789
    9. 'counts' → logprob: -10.40689468383789
    10. '#print' → logprob: -10.40689468383789

Token 622: 'urs' (ID: 1628)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3622036278247833
    2. 'urs' → logprob: -1.237203598022461
    3. 'ur' → logprob: -4.487203598022461
    4. 's' → logprob: -6.487203598022461
    5. 'r' → logprob: -7.862203598022461
    6. ' print' → logprob: -9.237203598022461
    7. 'rs' → logprob: -9.487203598022461
    8. '#' → logprob: -9.487203598022461
    9. 'nts' → logprob: -9.737203598022461
    10. 'd' → logprob: -9.862203598022461

Token 623: ' ont' (ID: 4930)
  Prédit: 'ont'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ont' → logprob: -0.3886101245880127
    2. 's' → logprob: -2.3886101245880127
    3. 'print' → logprob: -2.3886101245880127
    4. ' ont' → logprob: -2.8886101245880127
    5. ' sont' → logprob: -4.138609886169434
    6. ' print' → logprob: -4.138609886169434
    7. '#' → logprob: -4.263609886169434
    8. ' have' → logprob: -4.388609886169434
    9. ' #' → logprob: -4.763609886169434
    10. '#print' → logprob: -5.263609886169434

Token 624: ' été' (ID: 9799)
  Prédit: 'été'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'été' → logprob: -0.008944496512413025
    2. ' été' → logprob: -5.258944511413574
    3. 'print' → logprob: -6.383944511413574
    4. '#' → logprob: -6.633944511413574
    5. 'ét' → logprob: -9.008944511413574
    6. 'étés' → logprob: -9.133944511413574
    7. 'been' → logprob: -9.133944511413574
    8. 'être' → logprob: -9.633944511413574
    9. 'dé' → logprob: -10.883944511413574
    10. 'aff' → logprob: -11.008944511413574

Token 625: ' mis' (ID: 4694)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.16717128455638885
    2. 'calcul' → logprob: -2.4171712398529053
    3. 'aff' → logprob: -2.9171712398529053
    4. 'im' → logprob: -5.667171478271484
    5. 'mis' → logprob: -6.042171478271484
    6. '#' → logprob: -6.542171478271484
    7. 'final' → logprob: -7.167171478271484
    8. 'dé' → logprob: -8.042171478271484
    9. ' print' → logprob: -8.167171478271484
    10. '#print' → logprob: -8.417171478271484

Token 626: ' à' (ID: 1221)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.0011939177056774497
    2. ' à' → logprob: -6.876194000244141
    3. 'a' → logprob: -10.12619400024414
    4. 'aj' → logprob: -10.25119400024414
    5. '#' → logprob: -10.37619400024414
    6. 'au' → logprob: -11.37619400024414
    7. ''à' → logprob: -11.50119400024414
    8. '-à' → logprob: -11.75119400024414
    9. '```' → logprob: -12.00119400024414
    10. 'À' → logprob: -12.12619400024414

Token 627: ' jour' (ID: 8379)
  Prédit: 'jour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jour' → logprob: -0.0030888281762599945
    2. 'jou' → logprob: -6.12808895111084
    3. 'jours' → logprob: -8.00308895111084
    4. '0' → logprob: -8.12808895111084
    5. '```' → logprob: -9.00308895111084
    6. '1' → logprob: -9.75308895111084
    7. ' ' → logprob: -10.87808895111084
    8. 'j' → logprob: -11.12808895111084
    9. ' jour' → logprob: -11.37808895111084
    10. '
' → logprob: -11.37808895111084

Token 628: '.
' (ID: 558)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00016063073417171836
    2. '
' → logprob: -9.125160217285156
    3. '#' → logprob: -10.500160217285156
    4. '<|end|>' → logprob: -11.750160217285156
    5. '#print' → logprob: -11.875160217285156
    6. ' print' → logprob: -12.125160217285156
    7. 'if' → logprob: -14.375160217285156
    8. 'pr' → logprob: -14.375160217285156
    9. '```' → logprob: -14.500160217285156
    10. 'p' → logprob: -14.875160217285156

Token 629: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -6.869017852295656e-06
    2. 'if' → logprob: -12.625006675720215
    3. 'for' → logprob: -13.250006675720215
    4. '```' → logprob: -14.625006675720215
    5. 'even' → logprob: -14.875006675720215
    6. 'pr' → logprob: -15.000006675720215
    7. 'prin' → logprob: -15.500006675720215
    8. '#' → logprob: -16.00000762939453
    9. '#print' → logprob: -16.00000762939453
    10. '
' → logprob: -16.75000762939453

Token 630: ' Vér' (ID: 159169)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.747814349073451e-05
    2. 'if' → logprob: -12.125017166137695
    3. 'for' → logprob: -12.250017166137695
    4. ' print' → logprob: -13.000017166137695
    5. 'pr' → logprob: -13.375017166137695
    6. '#' → logprob: -14.000017166137695
    7. '#print' → logprob: -14.375017166137695
    8. '```' → logprob: -14.375017166137695
    9. 'prin' → logprob: -14.625017166137695
    10. 'p' → logprob: -15.000017166137695

Token 631: 'ifie' (ID: 46409)
  Prédit: 'ifie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifie' → logprob: -0.22924862802028656
    2. 'if' → logprob: -2.229248523712158
    3. 'print' → logprob: -3.104248523712158
    4. '#' → logprob: -3.104248523712158
    5. 'aff' → logprob: -5.479248523712158
    6. 'rif' → logprob: -7.104248523712158
    7. '#print' → logprob: -7.354248523712158
    8. 'r' → logprob: -7.729248523712158
    9. 'af' → logprob: -8.229249000549316
    10. 'ifiez' → logprob: -8.479249000549316

Token 632: ' maintenant' (ID: 35735)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.09033042937517166
    2. 'if' → logprob: -2.9653303623199463
    3. ' if' → logprob: -4.090330600738525
    4. 'si' → logprob: -5.215330600738525
    5. ' (' → logprob: -5.340330600738525
    6. '(
' → logprob: -5.590330600738525
    7. ' si' → logprob: -6.965330600738525
    8. '("' → logprob: -7.090330600738525
    9. '('' → logprob: -7.715330600738525
    10. ' ' → logprob: -8.215330123901367

Token 633: ' si' (ID: 1784)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.17715661227703094
    2. 'si' → logprob: -2.802156686782837
    3. ' if' → logprob: -2.927156686782837
    4. 'print' → logprob: -3.677156686782837
    5. ' si' → logprob: -4.302156448364258
    6. ' ' → logprob: -5.802156448364258
    7. '(' → logprob: -6.427156448364258
    8. '#' → logprob: -6.677156448364258
    9. 'le' → logprob: -6.677156448364258
    10. 'l' → logprob: -7.677156448364258

Token 634: ' tous' (ID: 10688)
  Prédit: 'even'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'even' → logprob: -0.42578983306884766
    2. 'odd' → logprob: -1.3007898330688477
    3. ' even' → logprob: -3.3007898330688477
    4. ' odd' → logprob: -3.3007898330688477
    5. 'time' → logprob: -8.425789833068848
    6. ' time' → logprob: -9.800789833068848
    7. 'nums' → logprob: -10.175789833068848
    8. 'not' → logprob: -10.425789833068848
    9. ' ' → logprob: -10.425789833068848
    10. '__' → logprob: -10.488289833068848

Token 635: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.5515428185462952
    2. ' les' → logprob: -1.0515427589416504
    3. 'even' → logprob: -3.4265427589416504
    4. 'odd' → logprob: -4.30154275894165
    5. ' even' → logprob: -4.67654275894165
    6. '<|end|>' → logprob: -5.17654275894165
    7. 'the' → logprob: -5.30154275894165
    8. ' the' → logprob: -5.55154275894165
    9. ' odd' → logprob: -6.92654275894165
    10. '_even' → logprob: -7.05154275894165

Token 636: ' nombres' (ID: 76205)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.635739266872406
    2. 'nums' → logprob: -1.0107393264770508
    3. 'odd' → logprob: -3.510739326477051
    4. 'num' → logprob: -3.510739326477051
    5. ' nombres' → logprob: -4.385739326477051
    6. 'numbers' → logprob: -4.510739326477051
    7. 'even' → logprob: -4.635739326477051
    8. 'nombre' → logprob: -6.010739326477051
    9. 'pairs' → logprob: -6.010739326477051
    10. ' nums' → logprob: -6.385739326477051

Token 637: ' pairs' (ID: 24702)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5148834586143494
    2. 'pairs' → logprob: -1.3898835182189941
    3. 'de' → logprob: -2.639883518218994
    4. ' pairs' → logprob: -3.264883518218994
    5. 'pair' → logprob: -5.014883518218994
    6. 'im' → logprob: -5.014883518218994
    7. ' sont' → logprob: -5.139883518218994
    8. 'imp' → logprob: -5.139883518218994
    9. ' de' → logprob: -5.139883518218994
    10. 'so' → logprob: -6.514883518218994

Token 638: ' de' (ID: 334)
  Prédit: 'ont'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ont' → logprob: -0.496375173330307
    2. 's' → logprob: -1.6213752031326294
    3. ' ont' → logprob: -2.12137508392334
    4. ' sont' → logprob: -3.87137508392334
    5. ' ==' → logprob: -4.74637508392334
    6. 'except' → logprob: -4.74637508392334
    7. '==' → logprob: -4.99637508392334
    8. 'et' → logprob: -5.24637508392334
    9. 'even' → logprob: -5.74637508392334
    10. 'have' → logprob: -5.87137508392334

Token 639: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.15865035355091095
    2. 'nums' → logprob: -2.0336503982543945
    3. ' la' → logprob: -4.6586503982543945
    4. 'even' → logprob: -5.7836503982543945
    5. 's' → logprob: -7.2836503982543945
    6. 'the' → logprob: -7.7836503982543945
    7. ' nums' → logprob: -8.408650398254395
    8. 'vaient' → logprob: -8.533650398254395
    9. 'time' → logprob: -8.658650398254395
    10. 'l' → logprob: -8.783650398254395

Token 640: ' sé' (ID: 7462)
  Prédit: 'sé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sé' → logprob: -0.31558048725128174
    2. 'liste' → logprob: -1.5655804872512817
    3. 's' → logprob: -3.315580368041992
    4. 'sequence' → logprob: -3.940580368041992
    5. '#' → logprob: -6.065580368041992
    6. 'list' → logprob: -6.565580368041992
    7. 'suite' → logprob: -6.940580368041992
    8. ' sé' → logprob: -7.940580368041992
    9. 'seq' → logprob: -8.565580368041992
    10. ' liste' → logprob: -9.440580368041992

Token 641: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -4.453737710718997e-05
    2. 'quences' → logprob: -10.750044822692871
    3. 'rie' → logprob: -11.125044822692871
    4. 'q' → logprob: -13.000044822692871
    5. 'QUENCE' → logprob: -13.250044822692871
    6. 'qu' → logprob: -13.500044822692871
    7. '#' → logprob: -13.750044822692871
    8. '`' → logprob: -14.375044822692871
    9. 'que' → logprob: -14.875044822692871
    10. 'lection' → logprob: -15.250044822692871

Token 642: ' sont' (ID: 5242)
  Prédit: 'ont'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ont' → logprob: -0.27919724583625793
    2. 's' → logprob: -1.5291972160339355
    3. ' ont' → logprob: -3.7791972160339355
    4. ' sont' → logprob: -5.6541972160339355
    5. 'éta' → logprob: -8.279197692871094
    6. '#' → logprob: -9.904197692871094
    7. ''ont' → logprob: -9.904197692871094
    8. 'cor' → logprob: -10.279197692871094
    9. 'on' → logprob: -10.279197692871094
    10. 'except' → logprob: -10.654197692871094

Token 643: ' aussi' (ID: 9894)
  Prédit: 'égal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'égal' → logprob: -0.734597384929657
    2. 'ég' → logprob: -1.4845974445343018
    3. ' ég' → logprob: -1.8595974445343018
    4. 'div' → logprob: -2.4845974445343018
    5. 'pairs' → logprob: -3.6095974445343018
    6. 'correct' → logprob: -5.734597206115723
    7. 'eg' → logprob: -5.859597206115723
    8. 'imp' → logprob: -5.859597206115723
    9. 'strict' → logprob: -6.109597206115723
    10. ' divisible' → logprob: -6.109597206115723

Token 644: ' compt' (ID: 39238)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.5843175053596497
    2. 'pairs' → logprob: -1.7093174457550049
    3. 'imp' → logprob: -2.834317445755005
    4. ' divis' → logprob: -2.959317445755005
    5. 'des' → logprob: -3.209317445755005
    6. ' ég' → logprob: -4.084317684173584
    7. ' pairs' → logprob: -4.084317684173584
    8. 'ég' → logprob: -4.459317684173584
    9. ' présents' → logprob: -4.584317684173584
    10. '0' → logprob: -4.834317684173584

Token 645: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.015268259681761265
    2. 'abil' → logprob: -4.265268325805664
    3. 'es' → logprob: -7.015268325805664
    4. 'rés' → logprob: -9.890268325805664
    5. 'é' → logprob: -10.140268325805664
    6. 'nés' → logprob: -11.140268325805664
    7. 'ent' → logprob: -11.265268325805664
    8. 'isés' → logprob: -11.390268325805664
    9. 'abilis' → logprob: -11.390268325805664
    10. 'e' → logprob: -12.015268325805664

Token 646: ' dans' (ID: 2671)
  Prédit: 'dans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dans' → logprob: -0.3901362717151642
    2. ' dans' → logprob: -1.1401362419128418
    3. '#' → logprob: -7.265136241912842
    4. ' in' → logprob: -7.390136241912842
    5. ' ' → logprob: -7.890136241912842
    6. 'in' → logprob: -8.26513671875
    7. 'exact' → logprob: -8.64013671875
    8. '.' → logprob: -9.01513671875
    9. ' par' → logprob: -9.14013671875
    10. '=' → logprob: -9.39013671875

Token 647: ' '' (ID: 461)
  Prédit: 'even'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'even' → logprob: -0.003642595838755369
    2. ' even' → logprob: -5.878642559051514
    3. 'le' → logprob: -7.878642559051514
    4. 'the' → logprob: -8.253643035888672
    5. '`' → logprob: -9.753643035888672
    6. 'odd' → logprob: -10.503643035888672
    7. 'la' → logprob: -10.753643035888672
    8. ' the' → logprob: -10.878643035888672
    9. 'l' → logprob: -11.253643035888672
    10. ' le' → logprob: -11.503643035888672

Token 648: 'even' (ID: 28689)
  Prédit: 'even'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'even' → logprob: -0.0025969420094043016
    2. ' even' → logprob: -6.127596855163574
    3. 'odd' → logprob: -7.877596855163574
    4. '`' → logprob: -11.877596855163574
    5. 'evenodd' → logprob: -11.877596855163574
    6. 'the' → logprob: -12.877596855163574
    7. 'either' → logprob: -13.377596855163574
    8. ' odd' → logprob: -13.877596855163574
    9. '```' → logprob: -13.940096855163574
    10. ' ' → logprob: -14.065096855163574

Token 649: '35' (ID: 2467)
  Prédit: '35'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '35' → logprob: -0.03491523116827011
    2. ' et' → logprob: -4.034915447235107
    3. ' ' → logprob: -5.159915447235107
    4. ' and' → logprob: -5.659915447235107
    5. '==' → logprob: -6.409915447235107
    6. 's' → logprob: -6.659915447235107
    7. 'et' → logprob: -6.784915447235107
    8. '```' → logprob: -7.784915447235107
    9. '.' → logprob: -7.909915447235107
    10. ' ==' → logprob: -8.03491497039795

Token 650: ''.
' (ID: 49980)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09268909692764282
    2. 'if' → logprob: -2.967689037322998
    3. 'and' → logprob: -4.217689037322998
    4. ' and' → logprob: -4.342689037322998
    5. ' if' → logprob: -5.592689037322998
    6. '.' → logprob: -5.967689037322998
    7. ' :' → logprob: -6.842689037322998
    8. ':
' → logprob: -7.092689037322998
    9. '   ' → logprob: -7.967689037322998
    10. ',' → logprob: -7.967689037322998

Token 651: '#' (ID: 2)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0002799279463943094
    2. 'print' → logprob: -8.500280380249023
    3. ' if' → logprob: -9.875280380249023
    4. '
' → logprob: -11.000280380249023
    5. '```' → logprob: -12.750280380249023
    6. 'assert' → logprob: -13.000280380249023
    7. 'i' → logprob: -13.250280380249023
    8. '#' → logprob: -14.375280380249023
    9. 'for' → logprob: -14.500280380249023
    10. ' 
' → logprob: -15.625280380249023

Token 652: ' Cela' (ID: 44403)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00288772932253778
    2. 'print' → logprob: -5.877887725830078
    3. ' if' → logprob: -9.502887725830078
    4. 'i' → logprob: -12.252887725830078
    5. 'assert' → logprob: -13.377887725830078
    6. '#' → logprob: -13.877887725830078
    7. 'for' → logprob: -14.752887725830078
    8. '```' → logprob: -15.002887725830078
    9. ' print' → logprob: -16.127887725830078
    10. '#print' → logprob: -17.502887725830078

Token 653: ' revient' (ID: 95900)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.1362358182668686
    2. '#' → logprob: -3.1362357139587402
    3. ' if' → logprob: -3.2612357139587402
    4. ' signifie' → logprob: -3.7612357139587402
    5. 'print' → logprob: -4.76123571395874
    6. 'means' → logprob: -5.51123571395874
    7. ' means' → logprob: -6.01123571395874
    8. ':' → logprob: -6.13623571395874
    9. 'n' → logprob: -7.38623571395874
    10. ' n' → logprob: -7.38623571395874

Token 654: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.11544344574213028
    2. ' to' → logprob: -2.365443468093872
    3. 'à' → logprob: -4.990443229675293
    4. 'to' → logprob: -5.240443229675293
    5. ' a' → logprob: -6.990443229675293
    6. ' ' → logprob: -7.365443229675293
    7. 'if' → logprob: -7.365443229675293
    8. ' ' → logprob: -8.490443229675293
    9. '   ' → logprob: -8.865443229675293
    10. ' if' → logprob: -9.240443229675293

Token 655: ' tester' (ID: 51819)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.008523209020495415
    2. 'even' → logprob: -5.008522987365723
    3. ' print' → logprob: -6.758522987365723
    4. 'if' → logprob: -7.883522987365723
    5. 'assert' → logprob: -9.508522987365723
    6. ' even' → logprob: -9.883522987365723
    7. 'True' → logprob: -10.383522987365723
    8. '   ' → logprob: -10.883522987365723
    9. '(print' → logprob: -11.258522987365723
    10. 'aff' → logprob: -11.508522987365723

Token 656: ' si' (ID: 1784)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.43155184388160706
    2. ' if' → logprob: -1.1815518140792847
    3. 'even' → logprob: -3.431551933288574
    4. ' even' → logprob: -4.931551933288574
    5. ' ' → logprob: -6.181551933288574
    6. '(' → logprob: -7.556551933288574
    7. ':' → logprob: -7.806551933288574
    8. '(e' → logprob: -8.181551933288574
    9. '   ' → logprob: -8.181551933288574
    10. ' (' → logprob: -8.431551933288574

Token 657: ' tous' (ID: 10688)
  Prédit: 'even'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'even' → logprob: -0.005244783591479063
    2. ' even' → logprob: -5.255244731903076
    3. 'odd' → logprob: -12.130245208740234
    4. 'equal' → logprob: -13.380245208740234
    5. 'e' → logprob: -14.130245208740234
    6. ' ' → logprob: -14.255245208740234
    7. 'ev' → logprob: -14.755245208740234
    8. 'evenodd' → logprob: -15.005245208740234
    9. 'not' → logprob: -15.505245208740234
    10. '   ' → logprob: -15.630245208740234

Token 658: ' les' (ID: 1341)
  Prédit: ' even'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' even' → logprob: -0.8548361659049988
    2. 'even' → logprob: -1.2298362255096436
    3. ' les' → logprob: -1.6048362255096436
    4. 'les' → logprob: -2.6048362255096436
    5. ' the' → logprob: -5.8548359870910645
    6. ' l' → logprob: -6.6048359870910645
    7. ' le' → logprob: -6.6048359870910645
    8. 'l' → logprob: -7.7298359870910645
    9. ' ' → logprob: -7.8548359870910645
    10. 'le' → logprob: -8.479836463928223

Token 659: ' nombres' (ID: 76205)
  Prédit: 'even'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'even' → logprob: -0.012178780511021614
    2. ' even' → logprob: -4.637178897857666
    3. 'pairs' → logprob: -6.387178897857666
    4. 'nums' → logprob: -8.512178421020508
    5. 'n' → logprob: -9.262178421020508
    6. 'pair' → logprob: -9.512178421020508
    7. 'num' → logprob: -9.637178421020508
    8. 'ev' → logprob: -9.887178421020508
    9. 'numbers' → logprob: -9.887178421020508
    10. ' pairs' → logprob: -10.012178421020508

Token 660: ' pairs' (ID: 24702)
  Prédit: 'even'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'even' → logprob: -0.14714497327804565
    2. 'pairs' → logprob: -2.2721450328826904
    3. ' even' → logprob: -4.272144794464111
    4. 'pair' → logprob: -4.647144794464111
    5. ' pairs' → logprob: -5.772144794464111
    6. '35' → logprob: -6.272144794464111
    7. '==' → logprob: -7.522144794464111
    8. '45' → logprob: -7.647144794464111
    9. ' ' → logprob: -8.02214527130127
    10. ' pair' → logprob: -8.33464527130127

Token 661: ' sont' (ID: 5242)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.31306594610214233
    2. '==' → logprob: -1.563066005706787
    3. 'ont' → logprob: -3.063066005706787
    4. ' ==' → logprob: -5.063066005706787
    5. ' sont' → logprob: -5.188066005706787
    6. 'et' → logprob: -9.438065528869629
    7. 'comp' → logprob: -9.813065528869629
    8. 'are' → logprob: -9.813065528869629
    9. '```' → logprob: -9.938065528869629
    10. 'ég' → logprob: -10.063065528869629

Token 662: ' aussi' (ID: 9894)
  Prédit: 'égal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'égal' → logprob: -0.047840461134910583
    2. 'ég' → logprob: -3.6728403568267822
    3. 'com' → logprob: -4.672840595245361
    4. ' ég' → logprob: -5.422840595245361
    5. 'even' → logprob: -6.172840595245361
    6. 'a' → logprob: -6.297840595245361
    7. 'also' → logprob: -6.672840595245361
    8. 'eg' → logprob: -7.797840595245361
    9. '=' → logprob: -8.047840118408203
    10. '==' → logprob: -8.172840118408203

Token 663: ' divis' (ID: 37826)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.01413341797888279
    2. 'des' → logprob: -5.514133453369141
    3. 'dans' → logprob: -5.514133453369141
    4. ' divis' → logprob: -6.139133453369141
    5. 'com' → logprob: -7.139133453369141
    6. ' divisible' → logprob: -7.389133453369141
    7. 'multip' → logprob: -7.764133453369141
    8. 'even' → logprob: -8.51413345336914
    9. '```' → logprob: -8.63913345336914
    10. 'in' → logprob: -8.76413345336914

Token 664: 'ibles' (ID: 12234)
  Prédit: 'ibles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ibles' → logprob: -0.00071553117595613
    2. 'ible' → logprob: -7.375715732574463
    3. '```' → logprob: -10.500715255737305
    4. 'ibes' → logprob: -10.625715255737305
    5. 'bles' → logprob: -11.875715255737305
    6. 'iples' → logprob: -11.875715255737305
    7. 'ubles' → logprob: -12.375715255737305
    8. 'is' → logprob: -12.500715255737305
    9. 'ib' → logprob: -12.750715255737305
    10. '`' → logprob: -13.625715255737305

Token 665: ' par' (ID: 686)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.2015136182308197
    2. ' par' → logprob: -1.701513648033142
    3. '_par' → logprob: -10.576513290405273
    4. 'by' → logprob: -10.826513290405273
    5. '   ' → logprob: -11.451513290405273
    6. ' by' → logprob: -11.951513290405273
    7. '```' → logprob: -12.076513290405273
    8. ' ' → logprob: -12.326513290405273
    9. '	par' → logprob: -12.326513290405273
    10. 'pas' → logprob: -12.701513290405273

Token 666: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.00761869503185153
    2. ' ' → logprob: -4.8826189041137695
    3. '2' → logprob: -12.00761890411377
    4. ' ' → logprob: -13.25761890411377
    5. 'either' → logprob: -13.38261890411377
    6. '   ' → logprob: -14.50761890411377
    7. '```' → logprob: -14.50761890411377
    8. ' either' → logprob: -14.75761890411377
    9. '  ' → logprob: -15.50761890411377
    10. '1' → logprob: -15.50761890411377

Token 667: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0008123667794279754
    2. ' ' → logprob: -7.125812530517578
    3. ' either' → logprob: -13.000812530517578
    4. 'either' → logprob: -13.125812530517578
    5. '2' → logprob: -14.000812530517578
    6. ' ' → logprob: -14.625812530517578
    7. ' (' → logprob: -15.438312530517578
    8. '35' → logprob: -15.563312530517578
    9. '３' → logprob: -15.625812530517578
    10. ',' → logprob: -15.750812530517578

Token 668: ' ou' (ID: 2031)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.5215818881988525
    2. 'or' → logprob: -1.0215818881988525
    3. ' ou' → logprob: -3.6465818881988525
    4. 'ou' → logprob: -4.021581649780273
    5. 'and' → logprob: -6.521581649780273
    6. '#' → logprob: -7.646581649780273
    7. ' and' → logprob: -8.521581649780273
    8. ' #' → logprob: -9.521581649780273
    9. ' ' → logprob: -10.021581649780273
    10. 'et' → logprob: -10.896581649780273

Token 669: ' par' (ID: 686)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.020407697185873985
    2. 'par' → logprob: -4.020407676696777
    3. ' ' → logprob: -6.395407676696777
    4. ' par' → logprob: -8.395407676696777
    5. '#' → logprob: -9.270407676696777
    6. 'by' → logprob: -9.270407676696777
    7. 'ou' → logprob: -9.520407676696777
    8. 'or' → logprob: -10.270407676696777
    9. '   ' → logprob: -11.270407676696777
    10. '```' → logprob: -11.520407676696777

Token 670: ' ' (ID: 220)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -5.88418151892256e-05
    2. ' ' → logprob: -9.750059127807617
    3. '```' → logprob: -14.875059127807617
    4. '#' → logprob: -15.875059127807617
    5. ' ' → logprob: -17.562559127807617
    6. '4' → logprob: -17.937559127807617
    7. '2' → logprob: -18.125059127807617
    8. '５' → logprob: -18.187559127807617
    9. '٥' → logprob: -18.187559127807617
    10. '1' → logprob: -18.250059127807617

Token 671: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.0002370329457335174
    2. ' ' → logprob: -8.375237464904785
    3. '```' → logprob: -13.062737464904785
    4. '   ' → logprob: -14.812737464904785
    5. '2' → logprob: -14.937737464904785
    6. '1' → logprob: -15.187737464904785
    7. ' ' → logprob: -15.312737464904785
    8. '.' → logprob: -15.437737464904785
    9. '3' → logprob: -15.500237464904785
    10. '15' → logprob: -15.687737464904785

Token 672: '.
' (ID: 558)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0003909927327185869
    2. '
' → logprob: -8.625391006469727
    3. ' if' → logprob: -9.125391006469727
    4. 'print' → logprob: -9.250391006469727
    5. '#' → logprob: -12.625391006469727
    6. '.' → logprob: -13.500391006469727
    7. '.
' → logprob: -14.000391006469727
    8. '```' → logprob: -15.875391006469727
    9. '\n' → logprob: -16.000391006469727
    10. '   ' → logprob: -16.000391006469727

Token 673: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00042662365012802184
    2. '
' → logprob: -8.500426292419434
    3. ' if' → logprob: -8.500426292419434
    4. 'print' → logprob: -11.250426292419434
    5. '#' → logprob: -12.625426292419434
    6. '\n' → logprob: -13.125426292419434
    7. '\' → logprob: -15.125426292419434
    8. '```' → logprob: -15.500426292419434
    9. ':' → logprob: -15.750426292419434
    10. ':
' → logprob: -15.750426292419434

Token 674: ' even' (ID: 1952)
  Prédit: ' even'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' even' → logprob: -0.5231584906578064
    2. 'even' → logprob: -0.8981584906578064
    3. ' ' → logprob: -11.398158073425293
    4. ' ' → logprob: -11.648158073425293
    5. '   ' → logprob: -12.023158073425293
    6. ' not' → logprob: -12.523158073425293
    7. ' odd' → logprob: -13.523158073425293
    8. 'odd' → logprob: -13.648158073425293
    9. '  ' → logprob: -14.523158073425293
    10. 'equal' → logprob: -15.023158073425293

Token 675: '35' (ID: 2467)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.12715917825698853
    2. '==' → logprob: -2.1271591186523438
    3. '>' → logprob: -9.252159118652344
    4. ' >' → logprob: -9.877159118652344
    5. ' !=' → logprob: -10.002159118652344
    6. '=' → logprob: -11.002159118652344
    7. ' =' → logprob: -11.877159118652344
    8. '!=' → logprob: -12.252159118652344
    9. ' <=' → logprob: -12.252159118652344
    10. '<=' → logprob: -14.002159118652344

Token 676: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5760443806648254
    2. '==' → logprob: -0.8260443806648254
    3. ' !=' → logprob: -10.076044082641602
    4. '=' → logprob: -10.451044082641602
    5. '!=' → logprob: -10.576044082641602
    6. ' =' → logprob: -13.076044082641602
    7. ' ' → logprob: -13.451044082641602
    8. '==
' → logprob: -13.826044082641602
    9. ' ' → logprob: -13.951044082641602
    10. ' <' → logprob: -14.201044082641602

Token 677: ' even' (ID: 1952)
  Prédit: 'even'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'even' → logprob: -0.007613725494593382
    2. ' even' → logprob: -4.882613658905029
    3. '0' → logprob: -12.132614135742188
    4. ' ' → logprob: -14.382614135742188
    5. '   ' → logprob: -15.007614135742188
    6. 'e' → logprob: -15.132614135742188
    7. 'equal' → logprob: -15.382614135742188
    8. ' ' → logprob: -15.757614135742188
    9. 'ev' → logprob: -16.007614135742188
    10. '_even' → logprob: -16.132614135742188

Token 678: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.029778262600302696
    2. ':
' → logprob: -3.529778242111206
    3. ' :' → logprob: -11.279778480529785
    4. ' and' → logprob: -12.029778480529785
    5. ':
' → logprob: -12.529778480529785
    6. ':#' → logprob: -13.154778480529785
    7. ' :
' → logprob: -13.654778480529785
    8. '   ' → logprob: -13.779778480529785
    9. 'and' → logprob: -14.779778480529785
    10. 'print' → logprob: -15.029778480529785

Token 679: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14461423456668854
    2. 'print' → logprob: -2.0196142196655273
    3. ' print' → logprob: -6.269614219665527
    4. '	print' → logprob: -10.519614219665527
    5. '       ' → logprob: -12.269614219665527
    6. '   ' → logprob: -12.269614219665527
    7. '    ' → logprob: -13.394614219665527
    8. ' ' → logprob: -13.769614219665527
    9. '  ' → logprob: -13.894614219665527
    10. '```' → logprob: -14.269614219665527

Token 680: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.1017782986164093
    2. '   ' → logprob: -2.351778268814087
    3. ' print' → logprob: -6.476778507232666
    4. '	print' → logprob: -10.851778030395508
    5. ' ' → logprob: -13.101778030395508
    6. '#' (adapté à ' #') → logprob: -13.351778030395508
    7. '       ' → logprob: -13.601778030395508
    8. '    ' → logprob: -13.851778030395508
    9. 'pass' → logprob: -14.226778030395508
    10. 'for' → logprob: -14.226778030395508

Token 681: ' Si' (ID: 7832)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0005022776313126087
    2. '   ' → logprob: -8.000502586364746
    3. ' print' → logprob: -9.250502586364746
    4. '#' → logprob: -10.875502586364746
    5. 'if' → logprob: -11.125502586364746
    6. 'pass' → logprob: -11.500502586364746
    7. 'for' → logprob: -11.750502586364746
    8. 'result' → logprob: -12.875502586364746
    9. ' ' → logprob: -13.375502586364746
    10. 'prin' → logprob: -13.375502586364746

Token 682: ' c' (ID: 274)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.001357136876322329
    2. ' print' → logprob: -7.251357078552246
    3. '   ' → logprob: -7.376357078552246
    4. 'pr' → logprob: -12.376357078552246
    5. '#' → logprob: -12.626357078552246
    6. 'prin' → logprob: -12.751357078552246
    7. 'odd' → logprob: -13.501357078552246
    8. 'even' → logprob: -13.751357078552246
    9. '	print' → logprob: -13.876357078552246
    10. ' ' → logprob: -14.251357078552246

Token 683: ''est' (ID: 6616)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.3452031910419464
    2. '   ' → logprob: -2.720203161239624
    3. 'on' → logprob: -2.845203161239624
    4. 'print' → logprob: -2.970203161239624
    5. 'ont' → logprob: -3.595203161239624
    6. 'e' → logprob: -3.970203161239624
    7. ''est' → logprob: -4.095203399658203
    8. 'ode' → logprob: -4.220203399658203
    9. ''' → logprob: -4.220203399658203
    10. 'i' → logprob: -5.095203399658203

Token 684: ' le' (ID: 505)
  Prédit: ' True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.3504052758216858
    2. 'True' → logprob: -1.225405216217041
    3. '   ' → logprob: -6.725405216217041
    4. 'v' → logprob: -8.7254056930542
    5. ' true' → logprob: -8.9754056930542
    6. ' vrai' → logprob: -8.9754056930542
    7. 'print' → logprob: -9.1004056930542
    8. 'true' → logprob: -9.4754056930542
    9. ' ' → logprob: -10.3504056930542
    10. ' print' → logprob: -10.7254056930542

Token 685: ' cas' (ID: 2108)
  Prédit: 'cas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cas' → logprob: -1.1528420448303223
    2. 'print' → logprob: -1.5278420448303223
    3. ' cas' → logprob: -1.7778420448303223
    4. 'case' → logprob: -2.1528420448303223
    5. 'True' → logprob: -2.4028420448303223
    6. 'true' → logprob: -3.2778420448303223
    7. ' True' → logprob: -4.027842044830322
    8. 'v' → logprob: -4.277842044830322
    9. ' case' → logprob: -4.402842044830322
    10. 'r' → logprob: -5.777842044830322

Token 686: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08817705512046814
    2. 'print' → logprob: -2.838176965713501
    3. ' print' → logprob: -4.21317720413208
    4. ':' → logprob: -4.96317720413208
    5. ':
' → logprob: -6.33817720413208
    6. '
' → logprob: -6.96317720413208
    7. '       ' → logprob: -7.33817720413208
    8. ',' → logprob: -8.463176727294922
    9. '	print' → logprob: -9.088176727294922
    10. ' :' → logprob: -9.713176727294922

Token 687: 't' (ID: 83)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.05516130477190018
    2. '   ' → logprob: -3.055161237716675
    3. ' print' → logprob: -5.055161476135254
    4. '       ' → logprob: -9.680161476135254
    5. '#' → logprob: -11.180161476135254
    6. '	print' → logprob: -11.180161476135254
    7. '    ' → logprob: -11.555161476135254
    8. ' ' → logprob: -11.555161476135254
    9. 'pr' → logprob: -11.805161476135254
    10. 'True' → logprob: -12.055161476135254

Token 688: 'ous' (ID: 784)
  Prédit: 'ous'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ous' → logprob: -0.2944473624229431
    2. 'o' → logprob: -2.419447422027588
    3. 'r' → logprob: -2.419447422027588
    4. 'out' → logprob: -2.794447422027588
    5. 'outes' → logprob: -4.294447422027588
    6. 'oute' → logprob: -6.794447422027588
    7. 'ou' → logprob: -8.04444694519043
    8. 'u' → logprob: -8.79444694519043
    9. '```' → logprob: -8.91944694519043
    10. '#' → logprob: -9.16944694519043

Token 689: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.32921189069747925
    2. 'les' → logprob: -1.704211950302124
    3. ' pairs' → logprob: -3.079211950302124
    4. ' even' → logprob: -3.829211950302124
    5. 'even' → logprob: -4.329211711883545
    6. 'pairs' → logprob: -5.079211711883545
    7. ' ' → logprob: -6.204211711883545
    8. ')' → logprob: -6.579211711883545
    9. ' des' → logprob: -6.579211711883545
    10. 'nums' → logprob: -7.079211711883545

Token 690: ' nombres' (ID: 76205)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5461106896400452
    2. 'pairs' → logprob: -1.6711106300354004
    3. ' nombres' → logprob: -1.9211106300354004
    4. ' pairs' → logprob: -3.9211106300354004
    5. 'nombre' → logprob: -4.1711106300354
    6. 'nums' → logprob: -4.2961106300354
    7. 'numbers' → logprob: -4.7961106300354
    8. 'even' → logprob: -5.0461106300354
    9. ')' → logprob: -5.6711106300354
    10. 'pair' → logprob: -5.7961106300354

Token 691: ' pairs' (ID: 24702)
  Prédit: 'pairs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pairs' → logprob: -0.011801271699368954
    2. 's' → logprob: -5.136801242828369
    3. ' pairs' → logprob: -5.386801242828369
    4. 'pair' → logprob: -7.511801242828369
    5. 'p' → logprob: -8.636801719665527
    6. ')' → logprob: -9.511801719665527
    7. '_pairs' → logprob: -9.511801719665527
    8. '   ' → logprob: -9.636801719665527
    9. ' sont' → logprob: -9.636801719665527
    10. 'even' → logprob: -9.886801719665527

Token 692: ' dans' (ID: 2671)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.1630580425262451
    2. ' sont' → logprob: -1.1630580425262451
    3. 's' → logprob: -1.6630580425262451
    4. ' print' → logprob: -1.7880580425262451
    5. ' are' → logprob: -4.788058280944824
    6. 'ont' → logprob: -5.538058280944824
    7. '),' → logprob: -6.288058280944824
    8. '   ' → logprob: -6.913058280944824
    9. ' ont' → logprob: -7.288058280944824
    10. '#' → logprob: -7.538058280944824

Token 693: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.595794141292572
    2. 'nums' → logprob: -0.845794141292572
    3. ' la' → logprob: -5.220794200897217
    4. 'range' → logprob: -5.595794200897217
    5. 'even' → logprob: -5.595794200897217
    6. 'le' → logprob: -5.970794200897217
    7. ' nums' → logprob: -6.345794200897217
    8. 'the' → logprob: -7.845794200897217
    9. 'l' → logprob: -7.845794200897217
    10. 'time' → logprob: -8.595793724060059

Token 694: ' sé' (ID: 7462)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.634390115737915
    2. 'sequence' → logprob: -1.259390115737915
    3. 'sé' → logprob: -2.259390115737915
    4. 'code' → logprob: -4.259389877319336
    5. 'liste' → logprob: -4.384389877319336
    6. 's' → logprob: -4.759389877319336
    7. ' sequence' → logprob: -4.884389877319336
    8. 'if' → logprob: -5.009389877319336
    9. 'se' → logprob: -5.259389877319336
    10. 'programme' → logprob: -5.384389877319336

Token 695: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -8.180258191714529e-06
    2. '#' → logprob: -12.000008583068848
    3. 'QUENCE' → logprob: -14.250008583068848
    4. 'q' → logprob: -14.375008583068848
    5. 'quences' → logprob: -15.125008583068848
    6. 'rie' → logprob: -16.25000762939453
    7. '   ' → logprob: -17.00000762939453
    8. 'qu' → logprob: -17.12500762939453
    9. '`' → logprob: -17.25000762939453
    10. 'sequence' → logprob: -17.37500762939453

Token 696: ' sont' (ID: 5242)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.08374077826738358
    2. ' sont' → logprob: -2.583740711212158
    3. 'ont' → logprob: -5.833740711212158
    4. '),' → logprob: -6.958740711212158
    5. ')' → logprob: -7.833740711212158
    6. '#' → logprob: -8.208741188049316
    7. 'éta' → logprob: -9.708741188049316
    8. ' ont' → logprob: -10.333741188049316
    9. ' ' → logprob: -10.833741188049316
    10. 'so' → logprob: -10.833741188049316

Token 697: ' divis' (ID: 37826)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.1393240988254547
    2. 'a' → logprob: -2.764324188232422
    3. 'égal' → logprob: -2.764324188232422
    4. ' divis' → logprob: -6.639324188232422
    5. ' aussi' → logprob: -7.264324188232422
    6. 'also' → logprob: -7.514324188232422
    7. ' divisible' → logprob: -7.639324188232422
    8. 'don' → logprob: -8.889324188232422
    9. 'ég' → logprob: -9.139324188232422
    10. 'multip' → logprob: -9.639324188232422

Token 698: 'ibles' (ID: 12234)
  Prédit: 'ibles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ibles' → logprob: -0.024080242961645126
    2. 'ible' → logprob: -3.774080276489258
    3. 'is' → logprob: -7.524080276489258
    4. 'isible' → logprob: -9.149080276489258
    5. '```' → logprob: -9.774080276489258
    6. 'ables' → logprob: -10.274080276489258
    7. 'ib' → logprob: -10.524080276489258
    8. 'és' → logprob: -10.524080276489258
    9. '#' → logprob: -12.024080276489258
    10. 'bles' → logprob: -12.399080276489258

Token 699: ' par' (ID: 686)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.5238398313522339
    2. ' par' → logprob: -0.8988398313522339
    3. '   ' → logprob: -8.273839950561523
    4. ' ' → logprob: -8.398839950561523
    5. ')' → logprob: -9.773839950561523
    6. '_par' → logprob: -10.023839950561523
    7. '	par' → logprob: -10.523839950561523
    8. '#' → logprob: -10.523839950561523
    9. 'au' → logprob: -11.023839950561523
    10. ' ou' → logprob: -11.648839950561523

Token 700: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.42874234914779663
    2. ' ' → logprob: -1.0537424087524414
    3. ' ' → logprob: -11.178742408752441
    4. '0' → logprob: -12.303742408752441
    5. ')' → logprob: -12.678742408752441
    6. 'au' → logprob: -12.866242408752441
    7. ' trois' → logprob: -13.241242408752441
    8. '34' → logprob: -13.491242408752441
    9. '   ' → logprob: -13.928742408752441
    10. ' either' → logprob: -14.053742408752441

Token 701: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.00023286080977413803
    2. ' ' → logprob: -8.375232696533203
    3. '0' → logprob: -14.625232696533203
    4. '```' → logprob: -14.875232696533203
    5. '2' → logprob: -15.500232696533203
    6. 'either' → logprob: -15.812732696533203
    7. '1' → logprob: -15.937732696533203
    8. ' ' → logprob: -16.000232696533203
    9. '(' → logprob: -16.000232696533203
    10. '   ' → logprob: -16.750232696533203

Token 702: ' ou' (ID: 2031)
  Prédit: ' ou'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ou' → logprob: -0.3238295018672943
    2. 'ou' → logprob: -1.4488295316696167
    3. ' or' → logprob: -3.323829412460327
    4. ')' → logprob: -5.698829650878906
    5. 'or' → logprob: -6.073829650878906
    6. ' )' → logprob: -9.573829650878906
    7. '),' → logprob: -11.198829650878906
    8. '```' → logprob: -11.198829650878906
    9. '   ' → logprob: -12.698829650878906
    10. ' или' → logprob: -12.948829650878906

Token 703: ' ' (ID: 220)
  Prédit: ' par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.3515259027481079
    2. '5' → logprob: -2.1015257835388184
    3. ' ' → logprob: -2.1015257835388184
    4. 'par' → logprob: -2.9765257835388184
    5. ' ' → logprob: -8.351526260375977
    6. ' or' → logprob: -8.476526260375977
    7. ' ou' → logprob: -8.726526260375977
    8. '   ' → logprob: -8.851526260375977
    9. 'or' → logprob: -10.726526260375977
    10. ' by' → logprob: -10.976526260375977

Token 704: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.072941355407238
    2. 'par' → logprob: -3.322941303253174
    3. ' par' → logprob: -4.072941303253174
    4. ' ' → logprob: -4.072941303253174
    5. '```' → logprob: -10.072941780090332
    6. 'or' → logprob: -10.197941780090332
    7. ' ' → logprob: -10.447941780090332
    8. ' or' → logprob: -10.447941780090332
    9. ' ou' → logprob: -10.572941780090332
    10. 'ou' → logprob: -10.572941780090332

Token 705: '),' (ID: 936)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.7462736368179321
    2. '):' → logprob: -0.7462736368179321
    3. '),' → logprob: -3.2462735176086426
    4. ':' → logprob: -4.996273517608643
    5. '   ' → logprob: -5.996273517608643
    6. ':
' → logprob: -6.871273517608643
    7. 'print' → logprob: -6.996273517608643
    8. ',' → logprob: -7.996273517608643
    9. ')' → logprob: -7.996273517608643
    10. ' print' → logprob: -8.7462739944458

Token 706: ' affiche' (ID: 127479)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7003301978111267
    2. 'print' → logprob: -0.7003301978111267
    3. ' print' → logprob: -4.9503302574157715
    4. '	print' → logprob: -10.200329780578613
    5. '       ' → logprob: -11.075329780578613
    6. ' ' → logprob: -12.575329780578613
    7. 'pass' → logprob: -12.575329780578613
    8. '  ' → logprob: -12.950329780578613
    9. '    ' → logprob: -13.075329780578613
    10. '#' → logprob: -13.200329780578613

Token 707: ' '' (ID: 461)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0034480185713618994
    2. '(' → logprob: -6.003448009490967
    3. 'print' → logprob: -7.878448009490967
    4. '('' → logprob: -8.253448486328125
    5. '(True' → logprob: -8.753448486328125
    6. '"' → logprob: -9.628448486328125
    7. '(print' → logprob: -10.503448486328125
    8. '(":' → logprob: -10.753448486328125
    9. '("")' → logprob: -11.128448486328125
    10. '("#' → logprob: -11.628448486328125

Token 708: 'APP' (ID: 13444)
  Prédit: 'Yes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -0.7118679881095886
    2. 'YES' → logprob: -1.0868680477142334
    3. 'OK' → logprob: -3.2118680477142334
    4. 'Oui' → logprob: -3.3368680477142334
    5. 'O' → logprob: -3.7118680477142334
    6. 'True' → logprob: -3.8368680477142334
    7. '"' → logprob: -4.336867809295654
    8. 'Y' → logprob: -4.711867809295654
    9. 'All' → logprob: -5.211867809295654
    10. 'B' → logprob: -5.461867809295654

Token 709: 'RO' (ID: 2013)
  Prédit: 'RO'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'RO' → logprob: -0.04276005178689957
    2. 'ROB' → logprob: -4.542759895324707
    3. 'LY' → logprob: -5.292759895324707
    4. 'ARENT' → logprob: -5.417759895324707
    5. 'L' → logprob: -5.792759895324707
    6. 'UY' → logprob: -5.917759895324707
    7. 'ARE' → logprob: -6.167759895324707
    8. 'LE' → logprob: -6.292759895324707
    9. 'RE' → logprob: -6.542759895324707
    10. 'ROI' → logprob: -6.792759895324707

Token 710: 'VED' (ID: 85770)
  Prédit: 'U'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'U' → logprob: -0.75832200050354
    2. 'VED' → logprob: -1.50832200050354
    3. 'UV' → logprob: -1.63332200050354
    4. 'RO' → logprob: -3.00832200050354
    5. 'OVED' → logprob: -3.13332200050354
    6. 'VE' → logprob: -5.008321762084961
    7. 'PR' → logprob: -5.883321762084961
    8. 'PRI' → logprob: -6.258321762084961
    9. 'R' → logprob: -6.383321762084961
    10. 'B' → logprob: -6.633321762084961

Token 711: ''.
' (ID: 49980)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.027547532692551613
    2. ')' → logprob: -4.027547359466553
    3. '')' → logprob: -5.277547359466553
    4. '")' → logprob: -6.402547359466553
    5. ' print' → logprob: -6.527547359466553
    6. '   ' → logprob: -7.402547359466553
    7. ''' → logprob: -8.777547836303711
    8. ')
' → logprob: -9.902547836303711
    9. ':' → logprob: -10.152547836303711
    10. '"' → logprob: -10.152547836303711

Token 712: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0007210109033621848
    2. '   ' → logprob: -7.250720977783203
    3. ' print' → logprob: -11.625720977783203
    4. '```' → logprob: -13.125720977783203
    5. '	print' → logprob: -16.250720977783203
    6. '
' → logprob: -17.375720977783203
    7. '       ' → logprob: -19.125720977783203
    8. '``' → logprob: -19.375720977783203
    9. '    
' → logprob: -19.875720977783203
    10. ' ' → logprob: -20.000720977783203

Token 713: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -1.1472419600977446e-06
    2. '   ' → logprob: -14.250000953674316
    3. ' print' → logprob: -14.750000953674316
    4. '```' → logprob: -18.500001907348633
    5. '	print' → logprob: -20.750001907348633
    6. ' ' → logprob: -23.375001907348633
    7. '
' → logprob: -24.125001907348633
    8. '       ' → logprob: -24.750001907348633
    9. '#print' → logprob: -24.875001907348633
    10. 'Print' → logprob: -25.000001907348633

Token 714: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.101567342877388
    2. '('' → logprob: -2.351567268371582
    3. '(' → logprob: -6.601567268371582
    4. ' ("' → logprob: -14.476567268371582
    5. '()' → logprob: -14.601567268371582
    6. '("")' → logprob: -15.101567268371582
    7. '("("' → logprob: -16.3515682220459
    8. '"' → logprob: -17.1015682220459
    9. '(("' → logprob: -17.6015682220459
    10. ''' → logprob: -17.7265682220459

Token 715: 'APP' (ID: 13444)
  Prédit: 'APP'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'APP' → logprob: -1.9361264946837764e-07
    2. ' APPRO' → logprob: -16.625
    3. 'approved' → logprob: -20.125
    4. '"' → logprob: -20.25
    5. 'Approved' → logprob: -20.875
    6. '_APPRO' → logprob: -21.125
    7. '(APP' → logprob: -21.875
    8. 'AC' → logprob: -22.25
    9. 'AP' → logprob: -22.375
    10. 'A' → logprob: -22.5

Token 716: 'RO' (ID: 2013)
  Prédit: 'RO'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'RO' → logprob: -6.034592388459714e-06
    2. 'R' → logprob: -12.500005722045898
    3. 'OVED' → logprob: -13.500005722045898
    4. 'ROY' → logprob: -14.375005722045898
    5. 'ro' → logprob: -15.375005722045898
    6. '
' → logprob: -17.3750057220459
    7. 'РО' → logprob: -17.5000057220459
    8. '"' → logprob: -17.7500057220459
    9. 'ROI' → logprob: -17.8750057220459
    10. 'ROM' → logprob: -18.7500057220459

Token 717: 'VED' (ID: 85770)
  Prédit: 'VED'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'VED' → logprob: -2.45848218582978e-06
    2. 'OVED' → logprob: -13.50000286102295
    3. 'ved' → logprob: -14.00000286102295
    4. 'V' → logprob: -15.87500286102295
    5. 'Ved' → logprob: -16.750001907348633
    6. 'VE' → logprob: -17.125001907348633
    7. 'UV' → logprob: -17.500001907348633
    8. 'U' → logprob: -18.250001907348633
    9. '\' → logprob: -18.500001907348633
    10. 'AVED' → logprob: -18.750001907348633

Token 718: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -1.0683535037969705e-05
    2. '")
' → logprob: -11.87501049041748
    3. ')")' → logprob: -13.37501049041748
    4. ')' → logprob: -13.75001049041748
    5. '"' → logprob: -14.25001049041748
    6. ' ")' → logprob: -16.125011444091797
    7. '");' → logprob: -16.500011444091797
    8. '')' → logprob: -16.500011444091797
    9. '!")' → logprob: -16.750011444091797
    10. '")
' → logprob: -17.875011444091797

Token 719: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -4.274932143744081e-05
    2. ' else' → logprob: -10.125042915344238
    3. 'elif' → logprob: -12.875042915344238
    4. '#else' → logprob: -17.125041961669922
    5. '```' → logprob: -17.250041961669922
    6. 'print' → logprob: -17.625041961669922
    7. ')' → logprob: -18.750041961669922
    8. '}else' → logprob: -18.875041961669922
    9. '<|end|>' → logprob: -18.875041961669922
    10. 'elser' → logprob: -19.125041961669922

Token 720: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07926307618618011
    2. ':
' → logprob: -2.5792629718780518
    3. '   ' → logprob: -7.954263210296631
    4. ' :' → logprob: -11.579262733459473
    5. ' :
' → logprob: -11.579262733459473
    6. 'print' → logprob: -13.079262733459473
    7. ':
' → logprob: -14.829262733459473
    8. ' print' → logprob: -15.329262733459473
    9. ':

' → logprob: -15.329262733459473
    10. '():' → logprob: -15.829262733459473

Token 721: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26167652010917664
    2. 'print' → logprob: -1.511676549911499
    3. ' print' → logprob: -4.63667631149292
    4. '	print' → logprob: -11.636676788330078
    5. '   ' → logprob: -14.761676788330078
    6. '```' → logprob: -15.136676788330078
    7. '.print' → logprob: -15.261676788330078
    8. '       ' → logprob: -15.886676788330078
    9. '(print' → logprob: -16.261676788330078
    10. ' ' → logprob: -16.386676788330078

Token 722: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.007985254749655724
    2. ' print' → logprob: -4.8829851150512695
    3. '   ' → logprob: -7.8829851150512695
    4. '	print' → logprob: -13.38298511505127
    5. ' ' → logprob: -15.63298511505127
    6. '.print' → logprob: -16.382986068725586
    7. '```' → logprob: -17.132986068725586
    8. '  ' → logprob: -17.882986068725586
    9. '(print' → logprob: -17.882986068725586
    10. '    ' → logprob: -18.257986068725586

Token 723: ' Sinon' (ID: 154924)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.015274247154593468
    2. '   ' → logprob: -4.7652740478515625
    3. ' print' → logprob: -5.0152740478515625
    4. '	print' → logprob: -13.765274047851562
    5. ' ' → logprob: -14.890274047851562
    6. '  ' → logprob: -16.015274047851562
    7. '.print' → logprob: -16.640274047851562
    8. '```' → logprob: -16.890274047851562
    9. '    ' → logprob: -17.015274047851562
    10. 'Print' → logprob: -17.140274047851562

Token 724: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2043904960155487
    2. ' print' → logprob: -2.579390525817871
    3. 'print' → logprob: -2.704390525817871
    4. ':' → logprob: -3.329390525817871
    5. ':
' → logprob: -5.079390525817871
    6. ' :' → logprob: -10.704390525817871
    7. '    ' → logprob: -11.204390525817871
    8. ' :
' → logprob: -11.329390525817871
    9. '       ' → logprob: -11.579390525817871
    10. '	print' → logprob: -11.579390525817871

Token 725: 'il' (ID: 311)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18547873198986053
    2. 'print' → logprob: -1.810478687286377
    3. ' print' → logprob: -5.185478687286377
    4. ' ' → logprob: -9.685479164123535
    5. ')' → logprob: -11.060479164123535
    6. '    ' → logprob: -11.185479164123535
    7. '  ' → logprob: -11.435479164123535
    8. '"' → logprob: -11.685479164123535
    9. '	print' → logprob: -12.935479164123535
    10. ' ' → logprob: -13.060479164123535

Token 726: ' existe' (ID: 19498)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2714798152446747
    2. '   ' → logprob: -2.146479845046997
    3. ' print' → logprob: -2.521479845046997
    4. ' n' → logprob: -3.771479845046997
    5. 's' → logprob: -4.646479606628418
    6. 'n' → logprob: -5.646479606628418
    7. ' s' → logprob: -6.396479606628418
    8. ' faut' → logprob: -7.146479606628418
    9. ' ' → logprob: -7.646479606628418
    10. ')' → logprob: -8.021479606628418

Token 727: ' au' (ID: 2791)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.1216949075460434
    2. ' un' → logprob: -2.621694803237915
    3. ' au' → logprob: -3.371694803237915
    4. ')' → logprob: -6.246695041656494
    5. ' some' → logprob: -6.496695041656494
    6. 'des' → logprob: -6.496695041656494
    7. 'au' → logprob: -7.621695041656494
    8. ' ' → logprob: -7.621695041656494
    9. ' )' → logprob: -7.871695041656494
    10. ' une' → logprob: -8.246694564819336

Token 728: ' moins' (ID: 15924)
  Prédit: 'moins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'moins' → logprob: -0.00998249277472496
    2. 'm' → logprob: -4.759982585906982
    3. ' moins' → logprob: -7.134982585906982
    4. 'mo' → logprob: -8.134982109069824
    5. 'menos' → logprob: -9.259982109069824
    6. '```' → logprob: -10.634982109069824
    7. 'uns' → logprob: -10.759982109069824
    8. '#' → logprob: -10.759982109069824
    9. 'une' → logprob: -10.884982109069824
    10. '   ' → logprob: -11.384982109069824

Token 729: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.04937422275543213
    2. 'un' → logprob: -3.0493741035461426
    3. ' one' → logprob: -7.299374103546143
    4. ''un' → logprob: -10.2993745803833
    5. ' une' → logprob: -10.2993745803833
    6. 'une' → logprob: -10.5493745803833
    7. ' ' → logprob: -12.1743745803833
    8. 'one' → logprob: -12.1743745803833
    9. '	un' → logprob: -12.9243745803833
    10. ' unu' → logprob: -13.6743745803833

Token 730: ' nombre' (ID: 9733)
  Prédit: ' pair'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pair' → logprob: -0.39807215332984924
    2. 'pair' → logprob: -1.7730721235275269
    3. ' even' → logprob: -2.8980722427368164
    4. 'even' → logprob: -3.1480722427368164
    5. ' nombre' → logprob: -3.3980722427368164
    6. 'nombre' → logprob: -4.148072242736816
    7. ' number' → logprob: -5.273072242736816
    8. 'number' → logprob: -6.023072242736816
    9. ' paire' → logprob: -7.273072242736816
    10. 'n' → logprob: -7.273072242736816

Token 731: ' pair' (ID: 10610)
  Prédit: ' pair'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pair' → logprob: -0.04951673373579979
    2. 'pair' → logprob: -3.1745166778564453
    3. '_pair' → logprob: -6.549516677856445
    4. ' even' → logprob: -6.924516677856445
    5. ' ' → logprob: -7.049516677856445
    6. ')' → logprob: -7.674516677856445
    7. ' not' → logprob: -8.049516677856445
    8. ' non' → logprob: -8.299516677856445
    9. 'even' → logprob: -8.299516677856445
    10. '_' → logprob: -8.299516677856445

Token 732: ' qui' (ID: 2780)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.6517514586448669
    2. ' qui' → logprob: -0.9017514586448669
    3. ' non' → logprob: -3.6517515182495117
    4. '),' → logprob: -4.151751518249512
    5. ' that' → logprob: -4.526751518249512
    6. ')' → logprob: -5.151751518249512
    7. ' ),' → logprob: -6.151751518249512
    8. ' print' → logprob: -6.526751518249512
    9. ' dans' → logprob: -6.526751518249512
    10. ' que' → logprob: -6.526751518249512

Token 733: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.062484629452228546
    2. 'n' → logprob: -2.8124847412109375
    3. 'print' → logprob: -9.062484741210938
    4. 'est' → logprob: -9.187484741210938
    5. ' est' → logprob: -9.562484741210938
    6. 'ne' → logprob: -9.812484741210938
    7. ' print' → logprob: -10.187484741210938
    8. 'n't' → logprob: -10.312484741210938
    9. ' ne' → logprob: -10.562484741210938
    10. ')' → logprob: -11.187484741210938

Token 734: ''est' (ID: 6616)
  Prédit: ''est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''est' → logprob: -0.01674032397568226
    2. 'est' → logprob: -4.391740322113037
    3. ''' → logprob: -5.891740322113037
    4. 'e' → logprob: -8.141740798950195
    5. 'n' → logprob: -8.141740798950195
    6. '’est' → logprob: -8.141740798950195
    7. '#' → logprob: -8.891740798950195
    8. ''app' → logprob: -9.391740798950195
    9. ''''' → logprob: -9.516740798950195
    10. 'pas' → logprob: -10.141740798950195

Token 735: ' divisible' (ID: 167813)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.04365237057209015
    2. ' pas' → logprob: -3.793652296066284
    3. 'not' → logprob: -4.168652534484863
    4. '#' → logprob: -5.668652534484863
    5. 'div' → logprob: -8.043652534484863
    6. ' not' → logprob: -8.168652534484863
    7. ' divisible' → logprob: -8.168652534484863
    8. 'PAS' → logprob: -8.918652534484863
    9. '_pas' → logprob: -8.918652534484863
    10. '```' → logprob: -10.043652534484863

Token 736: ' ni' (ID: 2565)
  Prédit: ' pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pas' → logprob: -0.6428781151771545
    2. ' par' → logprob: -1.0178780555725098
    3. 'par' → logprob: -2.6428780555725098
    4. 'pas' → logprob: -3.3928780555725098
    5. ' by' → logprob: -5.51787805557251
    6. ' ' → logprob: -6.26787805557251
    7. 'by' → logprob: -6.51787805557251
    8. ' jamais' → logprob: -8.642878532409668
    9. '_pas' → logprob: -8.642878532409668
    10. ' ' → logprob: -8.767878532409668

Token 737: ' par' (ID: 686)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.039998769760131836
    2. ' par' → logprob: -3.414998769760132
    3. ' ni' → logprob: -5.789999008178711
    4. 'ni' → logprob: -6.414999008178711
    5. 'pas' → logprob: -6.789999008178711
    6. '```' → logprob: -7.914999008178711
    7. ' ' → logprob: -9.914999008178711
    8. ' ' → logprob: -10.039999008178711
    9. ' pas' → logprob: -10.664999008178711
    10. '#' → logprob: -11.914999008178711

Token 738: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.000387535837944597
    2. ' ' → logprob: -7.875387668609619
    3. '```' → logprob: -12.875387191772461
    4. '   ' → logprob: -13.125387191772461
    5. 'ni' → logprob: -14.000387191772461
    6. ' ' → logprob: -14.875387191772461
    7. '"' → logprob: -14.875387191772461
    8. '#' → logprob: -15.250387191772461
    9. ' ni' → logprob: -15.375387191772461
    10. ' trois' → logprob: -15.625387191772461

Token 739: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -5.800739018013701e-05
    2. ' ' → logprob: -9.8750581741333
    3. '"' → logprob: -12.7500581741333
    4. '```' → logprob: -13.8750581741333
    5. '2' → logprob: -14.5000581741333
    6. '   ' → logprob: -14.7500581741333
    7. ''' → logprob: -14.8750581741333
    8. '6' → logprob: -15.5625581741333
    9. ' trois' → logprob: -15.6875581741333
    10. '３' → logprob: -16.062557220458984

Token 740: ' ni' (ID: 2565)
  Prédit: ' ni'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ni' → logprob: -0.02092966064810753
    2. 'ni' → logprob: -4.27092981338501
    3. ',' → logprob: -5.02092981338501
    4. ' ' → logprob: -10.270929336547852
    5. ' nor' → logprob: -10.395929336547852
    6. '   ' → logprob: -10.395929336547852
    7. '```' → logprob: -10.895929336547852
    8. 'nor' → logprob: -11.520929336547852
    9. ' ни' → logprob: -12.270929336547852
    10. ' ,' → logprob: -12.520929336547852

Token 741: ' par' (ID: 686)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.017363907769322395
    2. '   ' → logprob: -4.892364025115967
    3. ' par' → logprob: -5.517364025115967
    4. 'à' → logprob: -5.767364025115967
    5. '#' → logprob: -6.517364025115967
    6. '           ' → logprob: -8.017363548278809
    7. 'pas' → logprob: -8.392363548278809
    8. '       ' → logprob: -8.517363548278809
    9. '```' → logprob: -8.517363548278809
    10. ' ' → logprob: -10.642363548278809

Token 742: ' ' (ID: 220)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.00012368128227535635
    2. ' ' → logprob: -9.000123977661133
    3. '   ' → logprob: -16.375123977661133
    4. '
' → logprob: -17.000123977661133
    5. '7' → logprob: -17.375123977661133
    6. '```' → logprob: -17.500123977661133
    7. ' ' → logprob: -17.500123977661133
    8. '  ' → logprob: -17.875123977661133
    9. '#' → logprob: -18.125123977661133
    10. '2' → logprob: -18.250123977661133

Token 743: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -6.015305552864447e-05
    2. ' ' → logprob: -9.875060081481934
    3. '```' → logprob: -11.875060081481934
    4. 'print' → logprob: -15.500060081481934
    5. ' ' → logprob: -15.562560081481934
    6. '``' → logprob: -15.687560081481934
    7. '   ' → logprob: -15.812560081481934
    8. '3' → logprob: -16.37506103515625
    9. '`' → logprob: -16.37506103515625
    10. '7' → logprob: -16.43756103515625

Token 744: '),' (ID: 936)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -1.0382897853851318
    2. ')' → logprob: -1.1632897853851318
    3. '):
' → logprob: -1.1632897853851318
    4. '"):
' → logprob: -5.163290023803711
    5. '")' → logprob: -5.538290023803711
    6. ':' → logprob: -5.663290023803711
    7. '   ' → logprob: -5.663290023803711
    8. '"):' → logprob: -6.038290023803711
    9. ':
' → logprob: -7.663290023803711
    10. ' ):
' → logprob: -8.163290023803711

Token 745: ' affiche' (ID: 127479)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.05029050260782242
    2. '   ' → logprob: -3.175290584564209
    3. ' print' → logprob: -4.925290584564209
    4. '	print' → logprob: -12.67529010772705
    5. '       ' → logprob: -14.80029010772705
    6. ' ' → logprob: -14.92529010772705
    7. '.print' → logprob: -16.175291061401367
    8. '```' → logprob: -16.300291061401367
    9. '  ' → logprob: -16.550291061401367
    10. '    ' → logprob: -17.050291061401367

Token 746: ' '' (ID: 461)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '("' → logprob: -0.003724065376445651
    2. '"' → logprob: -5.628724098205566
    3. '(' → logprob: -9.253724098205566
    4. ' "' → logprob: -11.378724098205566
    5. '('' → logprob: -11.878724098205566
    6. '"D' → logprob: -13.128724098205566
    7. ' ("' → logprob: -13.378724098205566
    8. '(
' → logprob: -13.628724098205566
    9. '"N' → logprob: -13.628724098205566
    10. 're' → logprob: -14.253724098205566

Token 747: 'DEN' (ID: 109767)
  Prédit: 'RE'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'RE' → logprob: -0.05000966042280197
    2. 'DEN' → logprob: -3.1750097274780273
    3. 'NOT' → logprob: -5.800009727478027
    4. '"' → logprob: -5.925009727478027
    5. 'DECL' → logprob: -7.675009727478027
    6. 'DIS' → logprob: -7.800009727478027
    7. 'REF' → logprob: -8.800009727478027
    8. 'FAILED' → logprob: -9.300009727478027
    9. 'FOR' → logprob: -10.050009727478027
    10. 'FAIL' → logprob: -10.550009727478027

Token 748: 'IED' (ID: 17589)
  Prédit: 'IED'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IED' → logprob: -3.464347173576243e-05
    2. 'I' → logprob: -10.62503433227539
    3. 'Y' → logprob: -12.25003433227539
    4. 'N' → logprob: -13.50003433227539
    5. 'ED' → logprob: -13.87503433227539
    6. 'ied' → logprob: -14.00003433227539
    7. '```' → logprob: -14.12503433227539
    8. '"' → logprob: -14.75003433227539
    9. 'IER' → logprob: -15.37503433227539
    10. '``' → logprob: -15.37503433227539

Token 749: ''.
' (ID: 49980)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.002879414474591613
    2. ')' → logprob: -6.877879619598389
    3. '()' → logprob: -7.002879619598389
    4. '("' → logprob: -7.002879619598389
    5. ')")' → logprob: -11.87787914276123
    6. '")
' → logprob: -12.12787914276123
    7. '("")' → logprob: -12.37787914276123
    8. '"' → logprob: -12.75287914276123
    9. 'print' → logprob: -12.87787914276123
    10. '')' → logprob: -13.37787914276123

Token 750: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0019569406285881996
    2. '   ' → logprob: -6.251956939697266
    3. ' print' → logprob: -10.501956939697266
    4. '```' → logprob: -14.376956939697266
    5. '	print' → logprob: -15.376956939697266
    6. '(print' → logprob: -18.626956939697266
    7. '    
' → logprob: -18.876956939697266
    8. '.print' → logprob: -19.001956939697266
    9. ' ' → logprob: -19.751956939697266
    10. 'pr' → logprob: -19.751956939697266

Token 751: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -5.512236498361744e-07
    2. ' print' → logprob: -14.500000953674316
    3. '   ' → logprob: -19.75
    4. '```' → logprob: -20.0
    5. 'pr' → logprob: -20.75
    6. '	print' → logprob: -22.375
    7. 'prin' → logprob: -22.875
    8. '(print' → logprob: -23.625
    9. '.print' → logprob: -24.125
    10. 'Print' → logprob: -24.5

Token 752: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -8.590104698669165e-05
    2. '(' → logprob: -9.375085830688477
    3. '('' → logprob: -14.625085830688477
    4. '("")' → logprob: -15.000085830688477
    5. '()' → logprob: -16.375085830688477
    6. '("("' → logprob: -17.125085830688477
    7. '("""' → logprob: -18.625085830688477
    8. ' ("' → logprob: -18.875085830688477
    9. '"' → logprob: -19.000085830688477
    10. '(
' → logprob: -19.375085830688477

Token 753: 'DEN' (ID: 109767)
  Prédit: 'DEN'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DEN' → logprob: -5.512236498361744e-07
    2. ' DEN' → logprob: -15.625000953674316
    3. '"D' → logprob: -16.0
    4. '"' → logprob: -16.125
    5. '_DEN' → logprob: -16.125
    6. '")' → logprob: -18.5
    7. ''D' → logprob: -19.125
    8. 'den' → logprob: -20.5
    9. '""' → logprob: -20.625
    10. 'D' → logprob: -21.5

Token 754: 'IED' (ID: 17589)
  Prédit: 'IED'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IED' → logprob: -0.0006407116306945682
    2. 'ED' → logprob: -7.375640869140625
    3. 'I' → logprob: -11.250640869140625
    4. '"' → logprob: -14.750640869140625
    5. 'ied' → logprob: -15.375640869140625
    6. 'N' → logprob: -16.250640869140625
    7. '```' → logprob: -16.250640869140625
    8. 'Y' → logprob: -16.625640869140625
    9. 'TED' → logprob: -17.125640869140625
    10. 'E' → logprob: -17.375640869140625

Token 755: '")' (ID: 1405)
  Prédit: '")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.0012985693756490946
    2. ')' → logprob: -6.751298427581787
    3. ')")' → logprob: -9.001298904418945
    4. '()' → logprob: -12.376298904418945
    5. '')' → logprob: -14.876298904418945
    6. '")
' → logprob: -15.251298904418945
    7. '}")' → logprob: -16.251298904418945
    8. ' ")' → logprob: -17.501298904418945
    9. '!")' → logprob: -18.001298904418945
    10. '```' → logprob: -18.376298904418945


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 753
Tokens correctement prédits (1ère position, stricte): 219
Tokens correctement prédits (1ère position, avec adaptation): 227
Tokens correctement prédits (top 10): 476
Précision stricte (1ère position): 29.08%
Précision adaptée (1ère position): 30.15%
Précision (top 10): 63.21%
================================================================================
