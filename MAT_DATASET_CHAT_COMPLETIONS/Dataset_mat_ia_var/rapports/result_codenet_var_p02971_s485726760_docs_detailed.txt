================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:51:25
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import copy

def get_integer_input(prompt):
    """
    Demande à l'utilisateur d'entrer un entier via l'invite 'prompt' et retourne la valeur entière.
    Args:
        prompt (str): Le texte affiché pour demander l'entrée de l'utilisateur.
    Returns:
        int: La valeur entière entrée par l'utilisateur.
    """
    return int(input(prompt))

def get_integer_list(size):
    """
    Demande à l'utilisateur de saisir 'size' entiers, un par un, et retourne la liste de ces entiers.
    Args:
        size (int): Le nombre d'entiers à saisir.
    Returns:
        list: Liste des entiers saisis.
    """
    numbers = []
    for i in range(size):
        number = get_integer_input("")
        numbers.append(number)
    return numbers

def print_substitute_max_values(values):
    """
    Pour chaque élément de la liste, affiche le plus grand des autres éléments de la liste.
    Si l'élément courant est le maximum de la liste, affiche le second maximum,
    sinon affiche le maximum.
    Args:
        values (list): Liste d'entiers.
    """
    import copy  # Ce module permet de créer une copie superficielle de la liste

    # Trouve la valeur maximale de la liste
    max_value = max(values)
    # Fait une copie de la liste d'origine pour la comparaison ultérieure
    original_values = copy.copy(values)
    # Supprime la première occurrence du maximum pour trouver le second maximum
    values.remove(max_value)
    second_max = max(values)
    # Parcourt la liste copiée pour afficher le résultat approprié pour chaque élément
    for val in original_values:
        if val == max_value:
            # Si l'élément est le maximum, affiche le second maximum
            print(second_max)
        else:
            # Sinon, affiche le maximum
            print(max_value)

def main():
    """
    Fonction principale du programme. Demande une longueur de liste et les entiers,
    puis affiche, pour chaque entier, le maximum parmi les autres éléments de la liste.
    """
    # Demande la taille de la liste à l'utilisateur
    N = get_integer_input("")
    # Récupère la liste des entiers saisis
    values_list = get_integer_list(N)
    # Affiche le résultat pour chaque élément comme décrit ci-dessus
    print_substitute_max_values(values_list)

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' copy' (ID: 5150)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.17077921330928802
    2. ' ' → logprob: -3.045779228210449
    3. 'd' → logprob: -4.045779228210449
    4. 'a' → logprob: -4.295779228210449
    5. '(' → logprob: -4.420779228210449
    6. '.deepcopy' → logprob: -4.420779228210449
    7. 'import' → logprob: -4.545779228210449
    8. 'c' → logprob: -4.670779228210449
    9. '\' → logprob: -4.795779228210449
    10. '_' → logprob: -5.295779228210449

Token 4: ' get' (ID: 717)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2947225272655487
    2. ' copy' → logprob: -1.544722557067871
    3. ' deepcopy' → logprob: -3.794722557067871
    4. '_copy' → logprob: -4.419722557067871
    5. 'copy' → logprob: -5.794722557067871
    6. '_' → logprob: -6.294722557067871
    7. '  ' → logprob: -7.669722557067871
    8. ' _' → logprob: -7.919722557067871
    9. ' deep' → logprob: -8.044722557067871
    10. ' process' → logprob: -8.669722557067871

Token 5: '_integer' (ID: 82911)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.06443658471107483
    2. '_copy' → logprob: -3.189436674118042
    3. ' _' → logprob: -4.439436435699463
    4. '_data' → logprob: -6.939436435699463
    5. '_item' → logprob: -6.939436435699463
    6. '_user' → logprob: -7.064436435699463
    7. '_attr' → logprob: -7.939436435699463
    8. '_sur' → logprob: -8.189436912536621
    9. '(' → logprob: -8.314436912536621
    10. '_layer' → logprob: -8.439436912536621

Token 6: '_input' (ID: 12507)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3998299837112427
    2. '_' → logprob: -1.6498299837112427
    3. '_value' → logprob: -3.149829864501953
    4. '_token' → logprob: -4.899829864501953
    5. '```' → logprob: -4.899829864501953
    6. '_part' → logprob: -5.149829864501953
    7. '_values' → logprob: -5.149829864501953
    8. '(_' → logprob: -5.274829864501953
    9. '_parent' → logprob: -5.649829864501953
    10. '_from' → logprob: -5.774829864501953

Token 7: '(prompt' (ID: 148306)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00044544681441038847
    2. '_' → logprob: -8.125445365905762
    3. '("("' → logprob: -10.625445365905762
    4. ' (' → logprob: -10.750445365905762
    5. '```' → logprob: -11.250445365905762
    6. '():' → logprob: -11.625445365905762
    7. '(_' → logprob: -11.625445365905762
    8. 's' → logprob: -11.625445365905762
    9. '(
' → logprob: -11.750445365905762
    10. '(prompt' → logprob: -12.125445365905762

Token 8: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0026649541687220335
    2. ')' → logprob: -6.002665042877197
    3. ':' → logprob: -9.377664566040039
    4. '):
' → logprob: -9.752664566040039
    5. '():' → logprob: -11.127664566040039
    6. '(' → logprob: -11.502664566040039
    7. ',' → logprob: -12.127664566040039
    8. '=' → logprob: -12.502664566040039
    9. ' ):' → logprob: -12.502664566040039
    10. '):

' → logprob: -13.877664566040039

Token 9: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5538477301597595
    2. ' ' → logprob: -1.6788477897644043
    3. ' return' → logprob: -2.4288477897644043
    4. '(' → logprob: -2.6788477897644043
    5. 'return' → logprob: -4.178847789764404
    6. 'input' → logprob: -4.428847789764404
    7. ' :' → logprob: -4.678847789764404
    8. '    ' → logprob: -4.678847789764404
    9. ' input' → logprob: -4.803847789764404
    10. ' )' → logprob: -4.928847789764404

Token 10: ' """
' (ID: 7037)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.8602635264396667
    2. ' user' → logprob: -1.4852635860443115
    3. ' input' → logprob: -2.1102635860443115
    4. '   ' → logprob: -2.4852635860443115
    5. ' try' → logprob: -3.2352635860443115
    6. ' ' → logprob: -3.6102635860443115
    7. 'input' → logprob: -3.9852635860443115
    8. 'user' → logprob: -4.110263347625732
    9. 'return' → logprob: -4.110263347625732
    10. ' value' → logprob: -4.235263347625732

Token 11: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0986204445362091
    2. '"""' → logprob: -2.9736204147338867
    3. ' """' → logprob: -4.223620414733887
    4. 'return' → logprob: -5.223620414733887
    5. ' ' → logprob: -5.473620414733887
    6. 'Enter' → logprob: -5.848620414733887
    7. '#' → logprob: -6.223620414733887
    8. 'user' → logprob: -6.473620414733887
    9. ')' → logprob: -6.973620414733887
    10. '    ' → logprob: -7.098620414733887

Token 12: ' Dem' (ID: 9458)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -1.0482432842254639
    2. '   ' → logprob: -1.5482432842254639
    3. 'user' → logprob: -1.5482432842254639
    4. 'value' → logprob: -2.173243284225464
    5. ' while' → logprob: -3.298243284225464
    6. 'try' → logprob: -3.298243284225464
    7. 'return' → logprob: -3.798243284225464
    8. '"""' → logprob: -5.173243522644043
    9. ' user' → logprob: -6.298243522644043
    10. ' value' → logprob: -6.423243522644043

Token 13: 'ande' (ID: 4102)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.2262497991323471
    2. 'ands' → logprob: -1.6012498140335083
    3. 'an' → logprob: -7.976249694824219
    4. '   ' → logprob: -8.476249694824219
    5. 'a' → logprob: -8.976249694824219
    6. 'onstr' → logprob: -9.726249694824219
    7. ' and' → logprob: -10.351249694824219
    8. 'andr' → logprob: -10.476249694824219
    9. '```' → logprob: -10.726249694824219
    10. 'anding' → logprob: -13.226249694824219

Token 14: ' à' (ID: 1221)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.05475318059325218
    2. '   ' → logprob: -3.929753065109253
    3. ' )' → logprob: -4.054753303527832
    4. ' a' → logprob: -5.679753303527832
    5. ')' → logprob: -5.804753303527832
    6. '  ' → logprob: -5.929753303527832
    7. ' un' → logprob: -6.054753303527832
    8. 's' → logprob: -6.929753303527832
    9. ' =' → logprob: -8.304753303527832
    10. ' "' → logprob: -8.304753303527832

Token 15: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.014880307018756866
    2. ' l' → logprob: -4.264880180358887
    3. 'user' → logprob: -8.014880180358887
    4. 'util' → logprob: -8.139880180358887
    5. ' ' → logprob: -10.514880180358887
    6. ' user' → logprob: -11.014880180358887
    7. '   ' → logprob: -11.264880180358887
    8. '	l' → logprob: -11.389880180358887
    9. ' utilisateur' → logprob: -11.389880180358887
    10. ''utilisateur' → logprob: -12.014880180358887

Token 16: ''utilisateur' (ID: 140803)
  Prédit: ''utilisateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''utilisateur' → logprob: -0.006940328981727362
    2. '’utilisateur' → logprob: -5.1319403648376465
    3. ' utilisateur' → logprob: -7.8819403648376465
    4. ''' → logprob: -8.131939888000488
    5. 'util' → logprob: -9.006939888000488
    6. 'a' → logprob: -9.131939888000488
    7. 'u' → logprob: -9.631939888000488
    8. '_util' → logprob: -11.506939888000488
    9. ''util' → logprob: -11.756939888000488
    10. '   ' → logprob: -12.006939888000488

Token 17: ' d' (ID: 272)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.321732521057129
    2. ' un' → logprob: -1.321732521057129
    3. ' de' → logprob: -1.821732521057129
    4. ' d' → logprob: -1.821732521057129
    5. ' ' → logprob: -3.071732521057129
    6. ' :' → logprob: -3.821732521057129
    7. ' une' → logprob: -3.946732521057129
    8. ':' → logprob: -4.946732521057129
    9. '    ' → logprob: -5.321732521057129
    10. ' to' → logprob: -5.446732521057129

Token 18: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.43583089113235474
    2. ''obtenir' → logprob: -1.31083083152771
    3. 'e' → logprob: -3.06083083152771
    4. ''un' → logprob: -4.935831069946289
    5. ''entrée' → logprob: -4.935831069946289
    6. 'entr' → logprob: -4.935831069946289
    7. ''ent' → logprob: -5.310831069946289
    8. 'un' → logprob: -6.060831069946289
    9. ''avoir' → logprob: -6.060831069946289
    10. 'entrée' → logprob: -6.560831069946289

Token 19: 'entr' (ID: 12792)
  Prédit: 'entr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'entr' → logprob: -0.013477831147611141
    2. 'ent' → logprob: -5.013477802276611
    3. 'entrée' → logprob: -6.013477802276611
    4. ' entrer' → logprob: -6.638477802276611
    5. 'e' → logprob: -7.263477802276611
    6. ''' → logprob: -7.388477802276611
    7. ' entr' → logprob: -8.13847827911377
    8. 'input' → logprob: -8.51347827911377
    9. 'enter' → logprob: -8.63847827911377
    10. ''entrée' → logprob: -8.63847827911377

Token 20: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -7.584239938296378e-06
    2. 'e' → logprob: -12.000007629394531
    3. 'eer' → logprob: -14.375007629394531
    4. 'ée' → logprob: -14.500007629394531
    5. 'erer' → logprob: -16.62500762939453
    6. 'éer' → logprob: -17.00000762939453
    7. 'erp' → logprob: -17.25000762939453
    8. '_er' → logprob: -17.62500762939453
    9. ''er' → logprob: -17.87500762939453
    10. 'yer' → logprob: -17.87500762939453

Token 21: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.4756031930446625
    2. ' ' → logprob: -1.2256032228469849
    3. ' a' → logprob: -2.9756031036376953
    4. '  ' → logprob: -4.975603103637695
    5. ' une' → logprob: -5.100603103637695
    6. 'a' → logprob: -5.225603103637695
    7. 'un' → logprob: -5.475603103637695
    8. ' an' → logprob: -5.850603103637695
    9. 's' → logprob: -6.350603103637695
    10. '_' → logprob: -6.600603103637695

Token 22: ' entier' (ID: 80473)
  Prédit: ' entier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' entier' → logprob: -0.024234311655163765
    2. 'ent' → logprob: -4.024234294891357
    3. ' integer' → logprob: -6.024234294891357
    4. ' nombre' → logprob: -6.149234294891357
    5. ' ent' → logprob: -7.524234294891357
    6. 'e' → logprob: -7.774234294891357
    7. 'integer' → logprob: -8.774234771728516
    8. ' ' → logprob: -9.149234771728516
    9. ' entière' → logprob: -9.149234771728516
    10. 'nombre' → logprob: -9.399234771728516

Token 23: ' via' (ID: 4493)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7753931283950806
    2. ' :' → logprob: -1.7753931283950806
    3. '   ' → logprob: -2.275393009185791
    4. ',' → logprob: -2.525393009185791
    5. ')' → logprob: -2.900393009185791
    6. ' ' → logprob: -3.150393009185791
    7. '.' → logprob: -3.650393009185791
    8. '):' → logprob: -4.400393009185791
    9. '(' → logprob: -4.775393009185791
    10. ' (' → logprob: -5.150393009185791

Token 24: ' l' (ID: 305)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.04949040710926056
    2. 'input' → logprob: -3.049490451812744
    3. ' une' → logprob: -8.299489974975586
    4. '=input' → logprob: -8.424489974975586
    5. ' l' → logprob: -9.299489974975586
    6. ' ' → logprob: -9.549489974975586
    7. ' un' → logprob: -9.549489974975586
    8. '   ' → logprob: -10.299489974975586
    9. ' le' → logprob: -10.549489974975586
    10. '(input' → logprob: -10.549489974975586

Token 25: ''in' (ID: 17942)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.9607049226760864
    2. 'e' → logprob: -1.3357049226760864
    3. 'a' → logprob: -1.9607049226760864
    4. ''entrée' → logprob: -2.210704803466797
    5. 'input' → logprob: -2.585704803466797
    6. ''utilisateur' → logprob: -4.335704803466797
    7. 'u' → logprob: -5.460704803466797
    8. '`' → logprob: -5.710704803466797
    9. ''a' → logprob: -6.585704803466797
    10. 'i' → logprob: -6.585704803466797

Token 26: 'vite' (ID: 140910)
  Prédit: 'put'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'put' → logprob: -0.00015276329941116273
    2. 'puts' → logprob: -9.000152587890625
    3. 'pu' → logprob: -11.500152587890625
    4. 'ut' → logprob: -11.750152587890625
    5. 'p' → logprob: -11.750152587890625
    6. 'pute' → logprob: -13.875152587890625
    7. '_put' → logprob: -14.000152587890625
    8. 'input' → logprob: -14.375152587890625
    9. 'v' → logprob: -15.000152587890625
    10. 't' → logprob: -15.625152587890625

Token 27: ' '' (ID: 461)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8356544375419617
    2. ')' → logprob: -1.4606544971466064
    3. ' )' → logprob: -1.9606544971466064
    4. ' :' → logprob: -2.4606544971466064
    5. '   ' → logprob: -3.3356544971466064
    6. ',' → logprob: -4.460654258728027
    7. ':' → logprob: -4.710654258728027
    8. ' de' → logprob: -4.960654258728027
    9. '"' → logprob: -5.085654258728027
    10. ' ):' → logprob: -5.085654258728027

Token 28: 'prompt' (ID: 82467)
  Prédit: 'prompt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prompt' → logprob: -0.027418339625000954
    2. ' prompt' → logprob: -4.52741813659668
    3. ''' → logprob: -4.65241813659668
    4. '(prompt' → logprob: -5.65241813659668
    5. ' '' → logprob: -5.90241813659668
    6. 'input' → logprob: -8.77741813659668
    7. 'rompt' → logprob: -9.40241813659668
    8. '')' → logprob: -10.02741813659668
    9. '   ' → logprob: -10.52741813659668
    10. ' ')' → logprob: -10.65241813659668

Token 29: ''' (ID: 6)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.33339160680770874
    2. ''' → logprob: -2.0833916664123535
    3. '')' → logprob: -2.4583916664123535
    4. '   ' → logprob: -3.3333916664123535
    5. '):' → logprob: -3.9583916664123535
    6. ':' → logprob: -4.9583916664123535
    7. '"""' → logprob: -6.0833916664123535
    8. ''''' → logprob: -6.3333916664123535
    9. '':' → logprob: -6.4583916664123535
    10. '"' → logprob: -6.4583916664123535

Token 30: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4824507236480713
    2. ':' → logprob: -1.1074507236480713
    3. ' :' → logprob: -3.6074507236480713
    4. ',' → logprob: -4.857450485229492
    5. ')' → logprob: -4.982450485229492
    6. '):' → logprob: -4.982450485229492
    7. '.' → logprob: -6.482450485229492
    8. ' ' → logprob: -7.857450485229492
    9. ':
' → logprob: -7.857450485229492
    10. ' )' → logprob: -8.357450485229492

Token 31: ' retourne' (ID: 178818)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.027763452380895615
    2. ' return' → logprob: -4.527763366699219
    3. ' retourne' → logprob: -4.527763366699219
    4. 'return' → logprob: -6.152763366699219
    5. ' while' → logprob: -7.277763366699219
    6. '```' → logprob: -7.402763366699219
    7. ' assure' → logprob: -7.902763366699219
    8. '    ' → logprob: -8.527763366699219
    9. ':return' → logprob: -8.527763366699219
    10. 'while' → logprob: -8.902763366699219

Token 32: ' la' (ID: 557)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7124402523040771
    2. ' l' → logprob: -0.9624402523040771
    3. ' un' → logprob: -3.462440252304077
    4. 'l' → logprob: -4.462440490722656
    5. ' la' → logprob: -4.462440490722656
    6. ' le' → logprob: -4.462440490722656
    7. ' ' → logprob: -4.712440490722656
    8. '<|end|>' → logprob: -4.712440490722656
    9. 's' → logprob: -4.837440490722656
    10. ' a' → logprob: -5.337440490722656

Token 33: ' valeur' (ID: 41664)
  Prédit: ' valeur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' valeur' → logprob: -1.2255383729934692
    2. ' value' → logprob: -1.4755383729934692
    3. ' integer' → logprob: -2.3505382537841797
    4. ' input' → logprob: -2.4755382537841797
    5. ' ' → logprob: -2.7255382537841797
    6. 'int' → logprob: -2.8505382537841797
    7. 'n' → logprob: -3.3505382537841797
    8. ' entered' → logprob: -3.7255382537841797
    9. ' int' → logprob: -3.9755382537841797
    10. 'ent' → logprob: -3.9755382537841797

Token 34: ' entière' (ID: 61583)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6045970320701599
    2. '   ' → logprob: -1.7295970916748047
    3. ' entr' → logprob: -1.8545970916748047
    4. '.' → logprob: -4.229597091674805
    5. 'entr' → logprob: -4.604597091674805
    6. '  ' → logprob: -4.604597091674805
    7. ' de' → logprob: -4.854597091674805
    8. ' valid' → logprob: -4.854597091674805
    9. ' entered' → logprob: -4.979597091674805
    10. 'entered' → logprob: -4.979597091674805

Token 35: '.
' (ID: 558)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.7475637793540955
    2. '   ' → logprob: -0.9975637793540955
    3. ':' → logprob: -2.9975638389587402
    4. ' :' → logprob: -2.9975638389587402
    5. ',' → logprob: -3.8725638389587402
    6. ' ' → logprob: -4.37256383895874
    7. '```' → logprob: -4.87256383895874
    8. ' .' → logprob: -5.62256383895874
    9. ' ,' → logprob: -6.12256383895874
    10. ' en' → logprob: -6.24756383895874

Token 36: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3297354578971863
    2. '"""' → logprob: -1.329735517501831
    3. '```' → logprob: -5.454735279083252
    4. '"' → logprob: -5.829735279083252
    5. '"""
' → logprob: -6.329735279083252
    6. ' """' → logprob: -6.454735279083252
    7. '""' → logprob: -6.454735279083252
    8. ''' → logprob: -6.704735279083252
    9. ')' → logprob: -6.954735279083252
    10. ''''' → logprob: -7.579735279083252

Token 37: ' Args' (ID: 39185)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.060829002410173416
    2. '"""' → logprob: -3.185828924179077
    3. ' """' → logprob: -4.810829162597656
    4. '```' → logprob: -5.810829162597656
    5. ')' → logprob: -6.685829162597656
    6. ' """
' → logprob: -6.810829162597656
    7. '"""
' → logprob: -6.935829162597656
    8. '""' → logprob: -7.185829162597656
    9. ' ' → logprob: -7.560829162597656
    10. '`' → logprob: -8.060829162597656

Token 38: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6309595108032227
    2. '):' → logprob: -1.5059595108032227
    3. '   ' → logprob: -2.2559595108032227
    4. ',' → logprob: -2.2559595108032227
    5. ')' → logprob: -3.7559595108032227
    6. ' :' → logprob: -5.255959510803223
    7. '[' → logprob: -5.630959510803223
    8. ' ):' → logprob: -6.630959510803223
    9. ' ' → logprob: -7.130959510803223
    10. '```' → logprob: -7.755959510803223

Token 39: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03277461603283882
    2. ' )' → logprob: -4.157774448394775
    3. ')' → logprob: -5.157774448394775
    4. ' input' → logprob: -5.782774448394775
    5. ' user' → logprob: -6.407774448394775
    6. ' return' → logprob: -6.407774448394775
    7. 'input' → logprob: -7.282774448394775
    8. ' ):' → logprob: -7.282774448394775
    9. 'user' → logprob: -7.532774448394775
    10. ' ' → logprob: -7.532774448394775

Token 40: ' prompt' (ID: 15226)
  Prédit: 'prompt'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prompt' (adapté à ' prompt') → logprob: -0.0015702145174145699
    2. ' prompt' → logprob: -7.251570224761963
    3. '   ' → logprob: -7.501570224761963
    4. 'self' → logprob: -8.126569747924805
    5. 'input' → logprob: -12.751569747924805
    6. 'user' → logprob: -12.751569747924805
    7. '(prompt' → logprob: -13.126569747924805
    8. 'str' → logprob: -13.876569747924805
    9. 'prom' → logprob: -14.001569747924805
    10. '       ' → logprob: -14.626569747924805

Token 41: ' (' (ID: 350)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.11710871011018753
    2. ':' → logprob: -2.8671088218688965
    3. '=' → logprob: -3.4921088218688965
    4. ')' → logprob: -4.1171088218688965
    5. ' :' → logprob: -5.7421088218688965
    6. ' ):' → logprob: -6.1171088218688965
    7. '   ' → logprob: -7.6171088218688965
    8. ',' → logprob: -7.7421088218688965
    9. ' ' → logprob: -8.617108345031738
    10. ' )' → logprob: -9.367108345031738

Token 42: 'str' (ID: 689)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4006006121635437
    2. 'str' → logprob: -1.2756006717681885
    3. '):' → logprob: -3.2756006717681885
    4. ' str' → logprob: -4.775600433349609
    5. 'prompt' → logprob: -6.400600433349609
    6. '   ' → logprob: -7.025600433349609
    7. 'string' → logprob: -7.150600433349609
    8. ':str' → logprob: -7.400600433349609
    9. '):
' → logprob: -9.02560043334961
    10. '(prompt' → logprob: -9.27560043334961

Token 43: '):' (ID: 3127)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.28116774559020996
    2. '):' → logprob: -1.40616774559021
    3. '   ' → logprob: -12.281167984008789
    4. '):
' → logprob: -12.531167984008789
    5. ' ):' → logprob: -12.781167984008789
    6. ' )' → logprob: -12.906167984008789
    7. '):

' → logprob: -14.156167984008789
    8. ':' → logprob: -14.406167984008789
    9. ' ' → logprob: -14.531167984008789
    10. '=' → logprob: -14.781167984008789

Token 44: ' Le' (ID: 2018)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6513434648513794
    2. ''' → logprob: -1.5263434648513794
    3. ' ' → logprob: -2.52634334564209
    4. ' )' → logprob: -2.52634334564209
    5. ')' → logprob: -2.77634334564209
    6. '"' → logprob: -4.27634334564209
    7. ' "' → logprob: -5.27634334564209
    8. '    ' → logprob: -5.27634334564209
    9. ' input' → logprob: -5.52634334564209
    10. ' return' → logprob: -6.15134334564209

Token 45: ' texte' (ID: 53492)
  Prédit: ' message'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' message' → logprob: -0.017774449661374092
    2. ' prompt' → logprob: -4.64277458190918
    3. 'message' → logprob: -5.26777458190918
    4. ' texte' → logprob: -6.01777458190918
    5. ' ' → logprob: -8.76777458190918
    6. 'prompt' → logprob: -9.14277458190918
    7. 'texte' → logprob: -9.76777458190918
    8. ' string' → logprob: -10.89277458190918
    9. ' text' → logprob: -11.76777458190918
    10. ' input' → logprob: -12.14277458190918

Token 46: ' affich' (ID: 90179)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4104706645011902
    2. ' à' → logprob: -2.035470724105835
    3. ')' → logprob: -2.535470724105835
    4. '   ' → logprob: -2.535470724105835
    5. ' )' → logprob: -3.535470724105835
    6. ' de' → logprob: -5.285470485687256
    7. ''' → logprob: -5.785470485687256
    8. '  ' → logprob: -6.285470485687256
    9. ' d' → logprob: -6.785470485687256
    10. ' a' → logprob: -6.910470485687256

Token 47: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -1.5048530030981055e-06
    2. 'ée' → logprob: -14.500001907348633
    3. 'e' → logprob: -15.250001907348633
    4. 'age' → logprob: -16.125001907348633
    5. 'ant' → logprob: -16.250001907348633
    6. '```' → logprob: -16.500001907348633
    7. ' é' → logprob: -16.875001907348633
    8. 'É' → logprob: -16.875001907348633
    9. 'ié' → logprob: -17.250001907348633
    10. 'ré' → logprob: -17.500001907348633

Token 48: ' pour' (ID: 1930)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.05632924288511276
    2. ' lors' → logprob: -3.5563292503356934
    3. ' ' → logprob: -4.181329250335693
    4. 'à' → logprob: -5.556329250335693
    5. ' aux' → logprob: -6.181329250335693
    6. ')' → logprob: -6.806329250335693
    7. ' au' → logprob: -7.056329250335693
    8. ' pour' → logprob: -7.056329250335693
    9. ' dans' → logprob: -7.431329250335693
    10. '   ' → logprob: -8.181328773498535

Token 49: ' demander' (ID: 60771)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.05824069678783417
    2. 'l' → logprob: -3.0582406520843506
    3. ' demander' → logprob: -5.43324089050293
    4. ' inviter' → logprob: -6.18324089050293
    5. ' input' → logprob: -6.80824089050293
    6. ' la' → logprob: -7.55824089050293
    7. ' solicitar' → logprob: -7.68324089050293
    8. 'input' → logprob: -8.30824089050293
    9. ' sollic' → logprob: -8.55824089050293
    10. ' lâ' → logprob: -8.68324089050293

Token 50: ' l' (ID: 305)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.5376846790313721
    2. ' l' → logprob: -1.037684679031372
    3. 'l' → logprob: -3.912684679031372
    4. ' une' → logprob: -3.912684679031372
    5. 'à' → logprob: -4.162684440612793
    6. ' la' → logprob: -6.287684440612793
    7. ' ' → logprob: -6.412684440612793
    8. ' de' → logprob: -8.037684440612793
    9. 'input' → logprob: -8.037684440612793
    10. ' input' → logprob: -8.037684440612793

Token 51: ''entrée' (ID: 115820)
  Prédit: ''utilisateur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''utilisateur' → logprob: -0.12091965973377228
    2. ''entrée' → logprob: -3.245919704437256
    3. ''' → logprob: -3.495919704437256
    4. 'a' → logprob: -3.870919704437256
    5. 'e' → logprob: -4.370919704437256
    6. '’utilisateur' → logprob: -5.370919704437256
    7. ''ent' → logprob: -6.495919704437256
    8. '   ' → logprob: -6.995919704437256
    9. ''un' → logprob: -7.120919704437256
    10. ''une' → logprob: -7.370919704437256

Token 52: ' de' (ID: 334)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08015073090791702
    2. ' )' → logprob: -2.580150842666626
    3. '   ' → logprob: -6.955150604248047
    4. '):' → logprob: -9.205150604248047
    5. ' ' → logprob: -9.330150604248047
    6. '')' → logprob: -10.205150604248047
    7. ' ):' → logprob: -10.955150604248047
    8. '`)' → logprob: -11.455150604248047
    9. ' ")' → logprob: -11.830150604248047
    10. '")' → logprob: -11.830150604248047

Token 53: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.6364986896514893
    2. 'l' → logprob: -0.7614986896514893
    3. ')' → logprob: -6.01149845123291
    4. ' )' → logprob: -7.38649845123291
    5. 's' → logprob: -8.76149845123291
    6. 'user' → logprob: -8.88649845123291
    7. ' ' → logprob: -9.13649845123291
    8. ' input' → logprob: -9.63649845123291
    9. '_l' → logprob: -9.63649845123291
    10. 'input' → logprob: -9.76149845123291

Token 54: ''utilisateur' (ID: 140803)
  Prédit: ''utilisateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''utilisateur' → logprob: -0.22085846960544586
    2. 'util' → logprob: -1.7208584547042847
    3. ' utilisateur' → logprob: -4.470858573913574
    4. '’utilisateur' → logprob: -5.095858573913574
    5. '_util' → logprob: -7.845858573913574
    6. 'ent' → logprob: -8.095858573913574
    7. ''ent' → logprob: -8.345858573913574
    8. ''util' → logprob: -8.595858573913574
    9. 'user' → logprob: -9.220858573913574
    10. ')' → logprob: -9.345858573913574

Token 55: '.
' (ID: 558)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03088168054819107
    2. '):' → logprob: -3.655881643295288
    3. '   ' → logprob: -5.655881881713867
    4. '):
' → logprob: -7.655881881713867
    5. ' )' → logprob: -7.780881881713867
    6. ')
' → logprob: -10.405881881713867
    7. '")' → logprob: -10.530881881713867
    8. ' ):' → logprob: -10.530881881713867
    9. '```' → logprob: -10.530881881713867
    10. '')' → logprob: -10.655881881713867

Token 56: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002817954868078232
    2. ')' → logprob: -7.1278181076049805
    3. '"""' → logprob: -7.2528181076049805
    4. '    
' → logprob: -7.8778181076049805
    5. '"""
' → logprob: -8.25281810760498
    6. '  
' → logprob: -8.75281810760498
    7. '\n' → logprob: -9.25281810760498
    8. '```' → logprob: -9.37781810760498
    9. '   
' → logprob: -9.75281810760498
    10. 'Returns' → logprob: -9.87781810760498

Token 57: ' Returns' (ID: 9609)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0998939797282219
    2. ')' → logprob: -2.4748940467834473
    3. '"""' → logprob: -5.099894046783447
    4. '):' → logprob: -6.099894046783447
    5. '```' → logprob: -7.474894046783447
    6. ' ' → logprob: -7.974894046783447
    7. '""' → logprob: -8.099893569946289
    8. '"""
' → logprob: -8.474893569946289
    9. '    ' → logprob: -8.474893569946289
    10. ' )' → logprob: -8.599893569946289

Token 58: ':
' (ID: 734)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.2271885871887207
    2. '<|end|>' → logprob: -1.2271885871887207
    3. ' int' → logprob: -1.3521885871887207
    4. ':' → logprob: -3.2271885871887207
    5. ':int' → logprob: -3.3521885871887207
    6. ' :' → logprob: -3.8521885871887207
    7. '<|end|>' → logprob: -4.352188587188721
    8. '   ' → logprob: -4.727188587188721
    9. '(int' → logprob: -4.852188587188721
    10. ')' → logprob: -4.977188587188721

Token 59: '       ' (ID: 309)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.08000746369361877
    2. 'int' → logprob: -2.580007553100586
    3. '   ' → logprob: -6.830007553100586
    4. '       ' → logprob: -10.455007553100586
    5. '    ' → logprob: -12.205007553100586
    6. '(int' → logprob: -14.080007553100586
    7. '```' → logprob: -14.955007553100586
    8. '	int' → logprob: -15.205007553100586
    9. ' ' → logprob: -15.580007553100586
    10. '        ' → logprob: -15.830007553100586

Token 60: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' (adapté à ' int') → logprob: -0.12692862749099731
    2. ' int' → logprob: -2.1269285678863525
    3. '   ' → logprob: -14.751928329467773
    4. '(int' → logprob: -16.626928329467773
    5. ' integer' → logprob: -17.876928329467773
    6. ':int' → logprob: -17.876928329467773
    7. '<int' → logprob: -18.001928329467773
    8. '	int' → logprob: -18.126928329467773
    9. 'integer' → logprob: -18.376928329467773
    10. '```' → logprob: -18.876928329467773

Token 61: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6144535541534424
    2. '<|end|>' → logprob: -1.3644535541534424
    3. ')' → logprob: -1.9894535541534424
    4. '):' → logprob: -3.3644535541534424
    5. '<|end|>' → logprob: -4.614453315734863
    6. ' :' → logprob: -4.864453315734863
    7. '   ' → logprob: -5.114453315734863
    8. ' )' → logprob: -6.364453315734863
    9. '```' → logprob: -6.739453315734863
    10. 'int' → logprob: -6.739453315734863

Token 62: ' La' (ID: 3038)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.6402608752250671
    2. ' L' → logprob: -1.265260934829712
    3. '   ' → logprob: -2.015260934829712
    4. 'L' → logprob: -3.765260934829712
    5. ' ' → logprob: -4.265260696411133
    6. '<|end|>' → logprob: -5.390260696411133
    7. 'l' → logprob: -5.890260696411133
    8. ' int' → logprob: -6.265260696411133
    9. 'int' → logprob: -6.265260696411133
    10. '    ' → logprob: -6.265260696411133

Token 63: ' valeur' (ID: 41664)
  Prédit: ' valeur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' valeur' → logprob: -0.008704867213964462
    2. 'val' → logprob: -5.008704662322998
    3. 'ent' → logprob: -6.883704662322998
    4. ' value' → logprob: -8.258705139160156
    5. 'entrée' → logprob: -8.508705139160156
    6. ' val' → logprob: -9.633705139160156
    7. ' ' → logprob: -9.633705139160156
    8. ' sais' → logprob: -9.758705139160156
    9. ' entier' → logprob: -9.883705139160156
    10. ' entière' → logprob: -10.008705139160156

Token 64: ' entière' (ID: 61583)
  Prédit: 'entrée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'entrée' → logprob: -0.7649672627449036
    2. ' entière' → logprob: -1.8899672031402588
    3. ' entrée' → logprob: -2.639967203140259
    4. ' sais' → logprob: -2.889967203140259
    5. ' ' → logprob: -3.014967203140259
    6. 'entr' → logprob: -3.014967203140259
    7. ' entr' → logprob: -3.014967203140259
    8. 'ent' → logprob: -3.264967203140259
    9. '   ' → logprob: -3.264967203140259
    10. 'int' → logprob: -4.389967441558838

Token 65: ' entrée' (ID: 95590)
  Prédit: ' entr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' entr' → logprob: -1.1229310035705566
    2. '   ' → logprob: -1.3729310035705566
    3. 'entr' → logprob: -1.8729310035705566
    4. ' ' → logprob: -2.2479310035705566
    5. 'entered' → logprob: -3.3729310035705566
    6. 'entrée' → logprob: -3.8729310035705566
    7. ' input' → logprob: -3.9979310035705566
    8. ' sais' → logprob: -4.247931003570557
    9. ' entered' → logprob: -4.372931003570557
    10. ' entrée' → logprob: -4.622931003570557

Token 66: ' par' (ID: 686)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.7764230966567993
    2. ' par' → logprob: -0.9014230966567993
    3. '<|end|>' → logprob: -2.4014229774475098
    4. ' by' → logprob: -3.9014229774475098
    5. '.' → logprob: -4.40142297744751
    6. 'by' → logprob: -6.52642297744751
    7. '```' → logprob: -6.77642297744751
    8. '_par' → logprob: -7.02642297744751
    9. ' ' → logprob: -7.15142297744751
    10. ',' → logprob: -7.15142297744751

Token 67: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.20213060081005096
    2. 'l' → logprob: -1.7021305561065674
    3. ' ' → logprob: -7.9521307945251465
    4. ' ' → logprob: -8.827130317687988
    5. '	l' → logprob: -8.952130317687988
    6. '   ' → logprob: -10.452130317687988
    7. '  ' → logprob: -11.452130317687988
    8. ''utilisateur' → logprob: -11.452130317687988
    9. ' utilisateur' → logprob: -12.077130317687988
    10. '_l' → logprob: -12.077130317687988

Token 68: ''utilisateur' (ID: 140803)
  Prédit: ''utilisateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''utilisateur' → logprob: -0.0010919966734945774
    2. '’utilisateur' → logprob: -7.126091957092285
    3. ''' → logprob: -8.876091957092285
    4. ''util' → logprob: -9.751091957092285
    5. 'u' → logprob: -10.501091957092285
    6. 'util' → logprob: -10.626091957092285
    7. ''us' → logprob: -11.001091957092285
    8. ' utilisateur' → logprob: -11.876091957092285
    9. ''user' → logprob: -11.876091957092285
    10. 'us' → logprob: -13.251091957092285

Token 69: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2961499094963074
    2. ')' → logprob: -1.5461499691009521
    3. '```' → logprob: -3.921149969100952
    4. '):' → logprob: -5.171149730682373
    5. '.' → logprob: -5.921149730682373
    6. '
' → logprob: -5.921149730682373
    7. '\n' → logprob: -6.296149730682373
    8. ')
' → logprob: -6.421149730682373
    9. 'def' → logprob: -6.671149730682373
    10. ':' → logprob: -7.046149730682373

Token 70: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09234534204006195
    2. '"""' → logprob: -2.5923452377319336
    3. '"""
' → logprob: -4.342345237731934
    4. '""' → logprob: -8.842345237731934
    5. ' """' → logprob: -9.342345237731934
    6. ' """
' → logprob: -9.592345237731934
    7. '```' → logprob: -10.842345237731934
    8. ')' → logprob: -10.967345237731934
    9. '    
' → logprob: -11.842345237731934
    10. '"' → logprob: -12.592345237731934

Token 71: ' """
' (ID: 7037)
  Prédit: ' """
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' """
' → logprob: -0.8864103555679321
    2. '"""' → logprob: -1.3864103555679321
    3. '"""
' (adapté à ' """
') → logprob: -1.7614103555679321
    4. ' """' → logprob: -2.2614102363586426
    5. '   ' → logprob: -2.8864102363586426
    6. '""' → logprob: -5.636410236358643
    7. ' ""' → logprob: -7.261410236358643
    8. '"' → logprob: -7.261410236358643
    9. ')' → logprob: -7.761410236358643
    10. ' 
' → logprob: -9.1364107131958

Token 72: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0017025562701746821
    2. ' return' → logprob: -7.126702785491943
    3. 'return' → logprob: -7.751702785491943
    4. ' while' → logprob: -9.376702308654785
    5. 'try' → logprob: -9.376702308654785
    6. 'user' → logprob: -9.626702308654785
    7. 'input' → logprob: -10.001702308654785
    8. ' user' → logprob: -10.001702308654785
    9. ' try' → logprob: -10.251702308654785
    10. 'while' → logprob: -10.376702308654785

Token 73: ' return' (ID: 622)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.18822070956230164
    2. 'return' (adapté à ' return') → logprob: -2.063220739364624
    3. 'user' → logprob: -3.938220739364624
    4. ' while' → logprob: -4.438220500946045
    5. 'try' → logprob: -4.938220500946045
    6. 'value' → logprob: -5.813220500946045
    7. ' return' → logprob: -6.188220500946045
    8. '   ' → logprob: -7.313220500946045
    9. ' user' → logprob: -8.438220977783203
    10. ' try' → logprob: -10.188220977783203

Token 74: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.00103352265432477
    2. 'int' → logprob: -6.876033306121826
    3. ' input' → logprob: -14.626033782958984
    4. ' ' → logprob: -15.876033782958984
    5. ' ' → logprob: -16.501033782958984
    6. '   ' → logprob: -17.751033782958984
    7. '(int' → logprob: -17.876033782958984
    8. '=int' → logprob: -17.876033782958984
    9. '	int' → logprob: -18.001033782958984
    10. '<int' → logprob: -18.126033782958984

Token 75: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.2519364058971405
    2. '(' → logprob: -1.501936435699463
    3. 'input' → logprob: -12.001935958862305
    4. ' (' → logprob: -14.501935958862305
    5. '(
' → logprob: -14.626935958862305
    6. ' input' → logprob: -16.376935958862305
    7. '(eval' → logprob: -17.126935958862305
    8. ' ' → logprob: -17.251935958862305
    9. '(

' → logprob: -17.501935958862305
    10. '=input' → logprob: -18.001935958862305

Token 76: '(prompt' (ID: 148306)
  Prédit: '(prompt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(prompt' → logprob: -0.38732969760894775
    2. '(' → logprob: -1.1373296976089478
    3. ')' → logprob: -8.637330055236816
    4. '()' → logprob: -9.137330055236816
    5. '('' → logprob: -9.262330055236816
    6. '(
' → logprob: -11.137330055236816
    7. '(prom' → logprob: -11.262330055236816
    8. '(f' → logprob: -11.262330055236816
    9. ' (' → logprob: -11.387330055236816
    10. '())' → logprob: -12.012330055236816

Token 77: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.01816246658563614
    2. ')' → logprob: -4.018162250518799
    3. '()))' → logprob: -12.018162727355957
    4. ')))' → logprob: -12.643162727355957
    5. ' ))' → logprob: -13.018162727355957
    6. '())' → logprob: -14.643162727355957
    7. '))
' → logprob: -15.143162727355957
    8. '()' → logprob: -15.893162727355957
    9. ' )' → logprob: -16.51816177368164
    10. ' ' → logprob: -17.14316177368164

Token 78: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.21574561297893524
    2. '
' → logprob: -1.8407455682754517
    3. '

' → logprob: -3.965745687484741
    4. '#' → logprob: -4.715745449066162
    5. '<|end|>' → logprob: -5.965745449066162
    6. '\' → logprob: -6.215745449066162
    7. '\n' → logprob: -7.715745449066162
    8. '```' → logprob: -8.09074592590332
    9. ' ' → logprob: -8.34074592590332
    10. '' → logprob: -8.46574592590332

Token 79: ' get' (ID: 717)
  Prédit: ' copy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' copy' → logprob: -0.36272895336151123
    2. ' deepcopy' → logprob: -2.112729072570801
    3. ' deep' → logprob: -2.487729072570801
    4. ' calculate' → logprob: -3.487729072570801
    5. '_copy' → logprob: -3.862729072570801
    6. ' get' → logprob: -3.987729072570801
    7. ' clone' → logprob: -4.487729072570801
    8. ' create' → logprob: -5.737729072570801
    9. ' duplicate' → logprob: -5.862729072570801
    10. ' add' → logprob: -6.612729072570801

Token 80: '_integer' (ID: 82911)
  Prédit: '_string'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_string' → logprob: -0.8890871405601501
    2. '_' → logprob: -1.514087200164795
    3. '_list' → logprob: -1.514087200164795
    4. '_copy' → logprob: -3.139087200164795
    5. '_integer' → logprob: -3.389087200164795
    6. '_float' → logprob: -3.389087200164795
    7. '_user' → logprob: -4.389087200164795
    8. ' _' → logprob: -5.514087200164795
    9. '_array' → logprob: -6.014087200164795
    10. '_boolean' → logprob: -6.639087200164795

Token 81: '_list' (ID: 4162)
  Prédit: '_input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.10521304607391357
    2. '_array' → logprob: -3.355213165283203
    3. '_range' → logprob: -3.730213165283203
    4. '_value' → logprob: -4.355213165283203
    5. '_list' → logprob: -4.480213165283203
    6. '_' → logprob: -5.605213165283203
    7. '_from' → logprob: -6.230213165283203
    8. '_s' → logprob: -6.480213165283203
    9. '_with' → logprob: -6.855213165283203
    10. '_in' → logprob: -6.855213165283203

Token 82: '(size' (ID: 15192)
  Prédit: '(prompt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(prompt' → logprob: -0.0023865913972258568
    2. '(' → logprob: -6.127386569976807
    3. '_prompt' → logprob: -9.252387046813965
    4. '_input' → logprob: -10.252387046813965
    5. ' (' → logprob: -10.377387046813965
    6. '(prom' → logprob: -11.627387046813965
    7. '```' → logprob: -11.752387046813965
    8. '_list' → logprob: -12.127387046813965
    9. '(prefix' → logprob: -12.502387046813965
    10. 'prompt' → logprob: -12.502387046813965

Token 83: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.015479443594813347
    2. ')' → logprob: -4.515479564666748
    3. ' ):' → logprob: -6.015479564666748
    4. ',' → logprob: -6.765479564666748
    5. '):
' → logprob: -8.51547908782959
    6. '(prompt' → logprob: -8.51547908782959
    7. '_prompt' → logprob: -9.01547908782959
    8. '   ' → logprob: -9.51547908782959
    9. '(' → logprob: -9.89047908782959
    10. ' (' → logprob: -10.76547908782959

Token 84: '   ' (ID: 271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.539823591709137
    2. '   ' → logprob: -0.914823591709137
    3. '(
' → logprob: -5.039823532104492
    4. '(list' → logprob: -6.039823532104492
    5. '(size' → logprob: -6.664823532104492
    6. '(n' → logprob: -6.664823532104492
    7. '(lst' → logprob: -6.664823532104492
    8. 'def' → logprob: -7.039823532104492
    9. ' (' → logprob: -7.664823532104492
    10. ':' → logprob: -7.789823532104492

Token 85: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0011793931480497122
    2. 'lst' → logprob: -7.376179218292236
    3. ' lst' → logprob: -8.876179695129395
    4. 'list' → logprob: -9.126179695129395
    5. 'def' → logprob: -9.876179695129395
    6. '    
' → logprob: -10.001179695129395
    7. ' integers' → logprob: -10.126179695129395
    8. ' integer' → logprob: -10.126179695129395
    9. ' list' → logprob: -10.251179695129395
    10. 'integer' → logprob: -10.751179695129395

Token 86: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5336965322494507
    2. '"""
' → logprob: -0.9086965322494507
    3. '"""' → logprob: -5.28369665145874
    4. '"' → logprob: -6.03369665145874
    5. ' """
' → logprob: -6.40869665145874
    6. 'def' → logprob: -7.65869665145874
    7. 'Liste' → logprob: -8.658696174621582
    8. '"
' → logprob: -8.783696174621582
    9. ''''
' → logprob: -9.033696174621582
    10. 'La' → logprob: -9.658696174621582

Token 87: ' Dem' (ID: 9458)
  Prédit: 'lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lst' → logprob: -0.7690119743347168
    2. '"""
' → logprob: -1.6440119743347168
    3. ' lst' → logprob: -2.144011974334717
    4. '   ' → logprob: -2.644011974334717
    5. ' """
' → logprob: -2.769011974334717
    6. 'result' → logprob: -3.519011974334717
    7. ' integers' → logprob: -4.144011974334717
    8. ' result' → logprob: -4.269011974334717
    9. 'def' → logprob: -4.769011974334717
    10. ' integer' → logprob: -5.019011974334717

Token 88: 'ande' (ID: 4102)
  Prédit: 'ande'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ande' → logprob: -0.0015979375457391143
    2. 'ade' → logprob: -7.001597881317139
    3. 'and' → logprob: -8.126598358154297
    4. 'a' → logprob: -9.251598358154297
    5. 'andez' → logprob: -9.876598358154297
    6. 'e' → logprob: -10.001598358154297
    7. 'ander' → logprob: -10.126598358154297
    8. 'andes' → logprob: -10.251598358154297
    9. 'an' → logprob: -10.876598358154297
    10. ' and' → logprob: -11.376598358154297

Token 89: ' à' (ID: 1221)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.9841241240501404
    2. ' à' → logprob: -0.9841241240501404
    3. '(
' → logprob: -1.9841241836547852
    4. ' une' → logprob: -3.859124183654785
    5. '(f' → logprob: -4.359124183654785
    6. ' a' → logprob: -4.359124183654785
    7. '   ' → logprob: -4.484124183654785
    8. '("' → logprob: -4.609124183654785
    9. 'à' → logprob: -4.859124183654785
    10. '  ' → logprob: -5.109124183654785

Token 90: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.5641313791275024
    2. 'l' → logprob: -1.1891313791275024
    3. 'user' → logprob: -2.439131259918213
    4. ''utilisateur' → logprob: -4.064131259918213
    5. ' user' → logprob: -5.064131259918213
    6. ' the' → logprob: -6.064131259918213
    7. ' ' → logprob: -6.314131259918213
    8. ' utilisateur' → logprob: -6.814131259918213
    9. 'the' → logprob: -7.064131259918213
    10. 'def' → logprob: -7.314131259918213

Token 91: ''utilisateur' (ID: 140803)
  Prédit: ''utilisateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''utilisateur' → logprob: -0.0015303362160921097
    2. '’utilisateur' → logprob: -6.751530170440674
    3. ''user' → logprob: -9.251530647277832
    4. ''' → logprob: -9.626530647277832
    5. 'user' → logprob: -9.751530647277832
    6. 'util' → logprob: -10.001530647277832
    7. ' utilisateur' → logprob: -10.376530647277832
    8. ''util' → logprob: -10.626530647277832
    9. '_util' → logprob: -11.626530647277832
    10. 'Utilisateur' → logprob: -12.501530647277832

Token 92: ' de' (ID: 334)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.7782534956932068
    2. ' de' → logprob: -1.6532535552978516
    3. ' ' → logprob: -1.9032535552978516
    4. '   ' → logprob: -2.0282535552978516
    5. '  ' → logprob: -3.9032535552978516
    6. '    ' → logprob: -4.153253555297852
    7. '_' → logprob: -4.778253555297852
    8. ' for' → logprob: -4.903253555297852
    9. 'def' → logprob: -6.028253555297852
    10. 'd' → logprob: -6.153253555297852

Token 93: ' saisir' (ID: 152120)
  Prédit: ' saisir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' saisir' → logprob: -0.12182419002056122
    2. ' entrer' → logprob: -2.871824264526367
    3. 's' → logprob: -3.746824264526367
    4. 'entr' → logprob: -4.246824264526367
    5. 'enter' → logprob: -4.371824264526367
    6. ' fournir' → logprob: -6.246824264526367
    7. ' enter' → logprob: -6.371824264526367
    8. ' rentrer' → logprob: -6.496824264526367
    9. ' ' → logprob: -7.621824264526367
    10. ' créer' → logprob: -8.121824264526367

Token 94: ' '' (ID: 461)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.1687740534543991
    2. ' ' → logprob: -2.668774127960205
    3. ' des' → logprob: -2.918774127960205
    4. ' un' → logprob: -4.293774127960205
    5. '  ' → logprob: -4.918774127960205
    6. ' a' → logprob: -5.043774127960205
    7. 'une' → logprob: -6.668774127960205
    8. ' la' → logprob: -7.293774127960205
    9. ' les' → logprob: -7.918774127960205
    10. ' "' → logprob: -8.168773651123047

Token 95: 'size' (ID: 4461)
  Prédit: 'size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.5924673080444336
    2. ' size' → logprob: -0.8424673080444336
    3. ' une' → logprob: -4.592467308044434
    4. 'une' → logprob: -6.342467308044434
    5. ' taille' → logprob: -6.842467308044434
    6. ' des' → logprob: -7.092467308044434
    7. ' un' → logprob: -7.342467308044434
    8. ''''' → logprob: -8.217467308044434
    9. ' ' → logprob: -8.342467308044434
    10. 'un' → logprob: -8.717467308044434

Token 96: ''' (ID: 6)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.35419923067092896
    2. ' )' → logprob: -1.4791991710662842
    3. ' ' → logprob: -3.354199171066284
    4. ' integers' → logprob: -3.604199171066284
    5. ' ')' → logprob: -6.354199409484863
    6. ' nombres' → logprob: -6.604199409484863
    7. ' '' → logprob: -6.854199409484863
    8. '')' → logprob: -7.729199409484863
    9. '_' → logprob: -7.729199409484863
    10. ' nombre' → logprob: -7.854199409484863

Token 97: ' ent' (ID: 1121)
  Prédit: ' ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ent' → logprob: -0.21282315254211426
    2. ' integers' → logprob: -2.4628231525421143
    3. 'ent' → logprob: -2.9628231525421143
    4. ' ' → logprob: -4.087822914123535
    5. ' des' → logprob: -4.337822914123535
    6. ' nombres' → logprob: -4.337822914123535
    7. ' entier' → logprob: -4.962822914123535
    8. ' valeurs' → logprob: -6.587822914123535
    9. ' éléments' → logprob: -6.837822914123535
    10. ' nombre' → logprob: -7.337822914123535

Token 98: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.030917279422283173
    2. 'ières' → logprob: -3.905917167663574
    3. 'ier' → logprob: -4.655917167663574
    4. 'ière' → logprob: -7.530917167663574
    5. '   ' → logprob: -9.155917167663574
    6. 'i' → logprob: -9.780917167663574
    7. 'ieres' → logprob: -10.405917167663574
    8. 'ers' → logprob: -11.280917167663574
    9. 'ires' → logprob: -11.530917167663574
    10. ' ' → logprob: -11.530917167663574

Token 99: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2940048277378082
    2. ' (' → logprob: -2.7940049171447754
    3. 's' → logprob: -3.0440049171447754
    4. ' ' → logprob: -3.2940049171447754
    5. '(' → logprob: -3.5440049171447754
    6. '   ' → logprob: -4.169004917144775
    7. ' ,' → logprob: -4.294004917144775
    8. ' via' → logprob: -5.044004917144775
    9. ' sépar' → logprob: -5.419004917144775
    10. ')' → logprob: -5.419004917144775

Token 100: ' un' (ID: 537)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.45141422748565674
    2. '    ' → logprob: -2.201414108276367
    3. ' puis' → logprob: -2.576414108276367
    4. ' ' → logprob: -3.451414108276367
    5. ' ' → logprob: -3.701414108276367
    6. ' et' → logprob: -4.326414108276367
    7. ' en' → logprob: -4.326414108276367
    8. ' list' → logprob: -4.451414108276367
    9. ' ligne' → logprob: -4.701414108276367
    10. ' line' → logprob: -4.701414108276367

Token 101: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.29337093234062195
    2. 'e' → logprob: -1.7933709621429443
    3. ' à' → logprob: -3.2933709621429443
    4. ' ' → logprob: -4.043370723724365
    5. 'par' → logprob: -4.043370723724365
    6. 'es' → logprob: -5.043370723724365
    7. ' a' → logprob: -5.668370723724365
    8. 'à' → logprob: -6.668370723724365
    9. 'a' → logprob: -6.918370723724365
    10. ' espace' → logprob: -6.918370723724365

Token 102: ' un' (ID: 537)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 103: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04756803438067436
    2. '   ' → logprob: -3.2975680828094482
    3. 'def' → logprob: -5.672567844390869
    4. ' ,' → logprob: -6.422567844390869
    5. '.' → logprob: -7.172567844390869
    6. ' et' → logprob: -7.297567844390869
    7. ' and' → logprob: -7.422567844390869
    8. ' for' → logprob: -7.547567844390869
    9. 's' → logprob: -8.047568321228027
    10. ' via' → logprob: -8.672568321228027

Token 104: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1289277970790863
    2. ' et' → logprob: -3.628927707672119
    3. ' def' → logprob: -3.628927707672119
    4. ' and' → logprob: -4.128927707672119
    5. 'def' → logprob: -4.253927707672119
    6. '    ' → logprob: -4.253927707672119
    7. ' list' → logprob: -4.628927707672119
    8. ' liste' → logprob: -5.753927707672119
    9. ' ' → logprob: -6.753927707672119
    10. ' ' → logprob: -7.003927707672119

Token 105: ' retourne' (ID: 178818)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.3273102343082428
    2. '   ' → logprob: -2.20231032371521
    3. ' retourne' → logprob: -2.45231032371521
    4. ' stock' → logprob: -3.32731032371521
    5. ' return' → logprob: -3.82731032371521
    6. ' ren' → logprob: -5.077310085296631
    7. 'return' → logprob: -5.452310085296631
    8. ' returns' → logprob: -5.702310085296631
    9. 'ret' → logprob: -6.327310085296631
    10. ' crée' → logprob: -6.327310085296631

Token 106: ' la' (ID: 557)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.09578190743923187
    2. ' [' → logprob: -2.8457818031311035
    3. '[' → logprob: -4.4707818031311035
    4. ' a' → logprob: -4.5957818031311035
    5. '[]' → logprob: -6.0957818031311035
    6. ' la' → logprob: -6.0957818031311035
    7. 'une' → logprob: -6.2207818031311035
    8. ' []' → logprob: -6.5957818031311035
    9. ' ' → logprob: -7.2207818031311035
    10. ' ' → logprob: -7.3457818031311035

Token 107: ' liste' (ID: 31719)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5007455348968506
    2. ' [' → logprob: -1.5007455348968506
    3. '[]' → logprob: -3.0007455348968506
    4. ' liste' → logprob: -3.1257455348968506
    5. ' list' → logprob: -3.7507455348968506
    6. '[
' → logprob: -4.00074577331543
    7. 'liste' → logprob: -4.25074577331543
    8. 's' → logprob: -4.75074577331543
    9. '[n' → logprob: -6.37574577331543
    10. ' code' → logprob: -6.62574577331543

Token 108: ' de' (ID: 334)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5456998348236084
    2. ' des' → logprob: -1.0456998348236084
    3. '[]' → logprob: -4.2957000732421875
    4. '   ' → logprob: -4.5457000732421875
    5. ' de' → logprob: -4.7957000732421875
    6. ' [' → logprob: -4.9207000732421875
    7. ' complète' → logprob: -5.4207000732421875
    8. ' of' → logprob: -5.9207000732421875
    9. 'des' → logprob: -5.9207000732421875
    10. '[
' → logprob: -6.0457000732421875

Token 109: ' ces' (ID: 10532)
  Prédit: ' ces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ces' → logprob: -1.6546680927276611
    2. '[' → logprob: -2.029668092727661
    3. ' integers' → logprob: -2.154668092727661
    4. ' [' → logprob: -2.529668092727661
    5. 's' → logprob: -2.529668092727661
    6. ' ent' → logprob: -2.654668092727661
    7. ' la' → logprob: -2.779668092727661
    8. ' leurs' → logprob: -2.779668092727661
    9. '[int' → logprob: -3.279668092727661
    10. ' ceux' → logprob: -3.654668092727661

Token 110: ' ent' (ID: 1121)
  Prédit: ' ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ent' → logprob: -0.06937225908041
    2. ' integers' → logprob: -2.9443721771240234
    3. 'ent' → logprob: -5.069372177124023
    4. ' valeurs' → logprob: -5.319372177124023
    5. ' ' → logprob: -6.819372177124023
    6. ' nombres' → logprob: -6.819372177124023
    7. ' entier' → logprob: -7.819372177124023
    8. '_ent' → logprob: -8.944372177124023
    9. ' éléments' → logprob: -9.194372177124023
    10. 'inte' → logprob: -9.319372177124023

Token 111: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -2.3199920178740285e-05
    2. 'i' → logprob: -10.750022888183594
    3. '```' → logprob: -14.375022888183594
    4. 'ier' → logprob: -14.750022888183594
    5. 'ières' → logprob: -15.000022888183594
    6. '   ' → logprob: -15.500022888183594
    7. 'ers' → logprob: -17.000022888183594
    8. 'riers' → logprob: -17.375022888183594
    9. ' i' → logprob: -17.375022888183594
    10. '_i' → logprob: -18.125022888183594

Token 112: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4573647379875183
    2. ':' → logprob: -1.707364797592163
    3. '.' → logprob: -2.082364797592163
    4. 'def' → logprob: -4.082364559173584
    5. ':
' → logprob: -4.707364559173584
    6. '[' → logprob: -4.957364559173584
    7. ',' → logprob: -5.082364559173584
    8. 's' → logprob: -5.457364559173584
    9. ' :' → logprob: -5.832364559173584
    10. '(' → logprob: -5.957364559173584

Token 113: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001877947011962533
    2. 'def' → logprob: -6.376877784729004
    3. '    
' → logprob: -9.126877784729004
    4. ' def' → logprob: -10.876877784729004
    5. ' list' → logprob: -11.251877784729004
    6. '
' → logprob: -12.001877784729004
    7. 'list' → logprob: -12.001877784729004
    8. '```' → logprob: -12.501877784729004
    9. '  
' → logprob: -12.751877784729004
    10. ' ' → logprob: -12.876877784729004

Token 114: ' Args' (ID: 39185)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004491007886826992
    2. ' list' → logprob: -6.629490852355957
    3. ' lst' → logprob: -7.254490852355957
    4. '    
' → logprob: -7.629490852355957
    5. 'list' → logprob: -7.629490852355957
    6. ' integers' → logprob: -7.879490852355957
    7. 'def' → logprob: -8.004490852355957
    8. 'lst' → logprob: -8.379490852355957
    9. '
' → logprob: -8.754490852355957
    10. ' result' → logprob: -9.629490852355957

Token 115: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06804273277521133
    2. '<|end|>' → logprob: -3.693042755126953
    3. ' (' → logprob: -4.193042755126953
    4. ':' → logprob: -4.693042755126953
    5. '(' → logprob: -5.568042755126953
    6. ',' → logprob: -5.693042755126953
    7. '<|end|>' → logprob: -5.943042755126953
    8. ')' → logprob: -6.318042755126953
    9. '):' → logprob: -6.443042755126953
    10. '[' → logprob: -7.318042755126953

Token 116: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2696407735347748
    2. '       ' → logprob: -1.5196408033370972
    3. ' (' → logprob: -4.644640922546387
    4. '(size' → logprob: -4.894640922546387
    5. '    ' → logprob: -8.644640922546387
    6. 'size' → logprob: -10.144640922546387
    7. '  ' → logprob: -10.394640922546387
    8. '```' → logprob: -10.519640922546387
    9. 'def' → logprob: -10.644640922546387
    10. '      ' → logprob: -10.769640922546387

Token 117: ' size' (ID: 2349)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' (adapté à ' size') → logprob: -0.575953483581543
    2. ' size' → logprob: -0.825953483581543
    3. 'self' → logprob: -11.700953483581543
    4. '   ' → logprob: -12.825953483581543
    5. ' taille' → logprob: -13.575953483581543
    6. ' self' → logprob: -13.950953483581543
    7. '	size' → logprob: -16.07595443725586
    8. 'def' → logprob: -16.20095443725586
    9. '(size' → logprob: -16.20095443725586
    10. 'list' → logprob: -16.45095443725586

Token 118: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.020600393414497375
    2. ':' → logprob: -4.395600318908691
    3. ')' → logprob: -5.770600318908691
    4. '):' → logprob: -6.770600318908691
    5. '(int' → logprob: -6.770600318908691
    6. ' :' → logprob: -6.895600318908691
    7. '   ' → logprob: -6.895600318908691
    8. ':int' → logprob: -8.145600318908691
    9. ' ' → logprob: -8.895600318908691
    10. ' )' → logprob: -9.895600318908691

Token 119: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00011164903844473884
    2. ' int' → logprob: -9.12511157989502
    3. ')' → logprob: -13.25011157989502
    4. '   ' → logprob: -14.37511157989502
    5. '(int' → logprob: -16.000112533569336
    6. '):' → logprob: -16.375112533569336
    7. ':int' → logprob: -16.875112533569336
    8. '=int' → logprob: -17.250112533569336
    9. '  ' → logprob: -18.000112533569336
    10. '[int' → logprob: -18.500112533569336

Token 120: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0006999264587648213
    2. ')' → logprob: -7.625699996948242
    3. ':' → logprob: -8.750699996948242
    4. '   ' → logprob: -10.750699996948242
    5. ' ):' → logprob: -10.750699996948242
    6. '):
' → logprob: -12.000699996948242
    7. ' :' → logprob: -13.000699996948242
    8. '):

' → logprob: -14.250699996948242
    9. '    ' → logprob: -14.375699996948242
    10. ':int' → logprob: -15.375699996948242

Token 121: ' Le' (ID: 2018)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 122: ' nombre' (ID: 9733)
  Prédit: ' nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.055470582097768784
    2. 'nombre' → logprob: -2.9304704666137695
    3. ' number' → logprob: -8.05547046661377
    4. 'n' → logprob: -9.18047046661377
    5. 'number' → logprob: -9.43047046661377
    6. ' ' → logprob: -10.05547046661377
    7. ' n' → logprob: -11.93047046661377
    8. ' nombres' → logprob: -11.93047046661377
    9. '   ' → logprob: -12.18047046661377
    10. ' size' → logprob: -12.43047046661377

Token 123: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.6364685893058777
    2. ')' → logprob: -1.5114686489105225
    3. ' ' → logprob: -2.7614686489105225
    4. '_' → logprob: -2.8864686489105225
    5. ' des' → logprob: -3.3864686489105225
    6. '<|end|>' → logprob: -3.7614686489105225
    7. '   ' → logprob: -4.136468410491943
    8. 'd' → logprob: -4.511468410491943
    9. '  ' → logprob: -4.511468410491943
    10. ' de' → logprob: -4.886468410491943

Token 124: ''ent' (ID: 53422)
  Prédit: ' ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ent' → logprob: -0.9553799033164978
    2. 'élé' → logprob: -1.5803799629211426
    3. 'ent' → logprob: -2.2053799629211426
    4. '_' → logprob: -2.2053799629211426
    5. ' éléments' → logprob: -2.8303799629211426
    6. '_ent' → logprob: -3.2053799629211426
    7. ' integers' → logprob: -3.4553799629211426
    8. ')' → logprob: -3.5803799629211426
    9. ' ' → logprob: -4.830379962921143
    10. '<|end|>' → logprob: -5.080379962921143

Token 125: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -8.780830830801278e-05
    2. 'ières' → logprob: -10.37508773803711
    3. 't' → logprob: -10.75008773803711
    4. 'riers' → logprob: -11.50008773803711
    5. 'i' → logprob: -11.87508773803711
    6. 'ers' → logprob: -12.25008773803711
    7. 'tiers' → logprob: -12.87508773803711
    8. 'tries' → logprob: -13.12508773803711
    9. 'r' → logprob: -13.12508773803711
    10. 'ries' → logprob: -13.50008773803711

Token 126: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.1934516578912735
    2. 'à' → logprob: -2.1934516429901123
    3. ')' → logprob: -3.4434516429901123
    4. ' ' → logprob: -4.193451881408691
    5. 's' → logprob: -5.568451881408691
    6. '<|end|>' → logprob: -5.568451881408691
    7. '   ' → logprob: -5.693451881408691
    8. 'def' → logprob: -7.193451881408691
    9. ''à' → logprob: -7.568451881408691
    10. ' attendu' → logprob: -7.693451881408691

Token 127: ' saisir' (ID: 152120)
  Prédit: ' demander'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' demander' → logprob: -0.31149134039878845
    2. 'dem' → logprob: -1.5614913702011108
    3. 's' → logprob: -3.4364912509918213
    4. 'entr' → logprob: -4.3114914894104
    5. ' saisir' → logprob: -4.8114914894104
    6. ' obtenir' → logprob: -7.0614914894104
    7. ' lire' → logprob: -7.8114914894104
    8. ' entr' → logprob: -7.8114914894104
    9. ' dem' → logprob: -8.061491012573242
    10. '_dem' → logprob: -8.436491012573242

Token 128: '.
' (ID: 558)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.7548445463180542
    2. '):
' → logprob: -1.1298445463180542
    3. ')' → logprob: -1.6298445463180542
    4. '   ' → logprob: -4.754844665527344
    5. ')
' → logprob: -6.504844665527344
    6. 'def' → logprob: -8.004844665527344
    7. '):
' → logprob: -8.004844665527344
    8. '):

' → logprob: -11.254844665527344
    9. ' à' → logprob: -11.504844665527344
    10. '.' → logprob: -11.629844665527344

Token 129: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.044153209775686264
    2. '    
' → logprob: -3.7941532135009766
    3. '
' → logprob: -3.9191532135009766
    4. '  
' → logprob: -7.794153213500977
    5. 'def' → logprob: -9.044153213500977
    6. '```' → logprob: -9.294153213500977
    7. '   
' → logprob: -9.669153213500977
    8. ')' → logprob: -10.044153213500977
    9. ')
' → logprob: -10.169153213500977
    10. ' 
' → logprob: -10.794153213500977

Token 130: ' Returns' (ID: 9609)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08944352716207504
    2. 'Returns' (adapté à ' Returns') → logprob: -2.5894434452056885
    3. '
' → logprob: -5.589443683624268
    4. 'def' → logprob: -6.339443683624268
    5. '"""
' → logprob: -6.339443683624268
    6. ' Returns' → logprob: -6.589443683624268
    7. '```' → logprob: -7.714443683624268
    8. 'returns' → logprob: -8.58944320678711
    9. ' returns' → logprob: -8.58944320678711
    10. 'return' → logprob: -8.58944320678711

Token 131: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.3915750980377197
    2. 'List' → logprob: -1.3915750980377197
    3. ' List' → logprob: -1.6415750980377197
    4. ' list' → logprob: -1.8915750980377197
    5. 'list' → logprob: -2.7665750980377197
    6. '   ' → logprob: -3.3915750980377197
    7. '[List' → logprob: -3.8915750980377197
    8. ':list' → logprob: -4.391574859619141
    9. '_list' → logprob: -4.891574859619141
    10. 'def' → logprob: -5.141574859619141

Token 132: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.850393533706665
    2. ' list' → logprob: -0.850393533706665
    3. ' List' → logprob: -2.225393533706665
    4. 'List' → logprob: -3.725393533706665
    5. 'list' → logprob: -4.475393295288086
    6. ' [' → logprob: -6.725393295288086
    7. '[List' → logprob: -8.225393295288086
    8. '       ' → logprob: -8.475393295288086
    9. '    ' → logprob: -9.100393295288086
    10. '```' → logprob: -9.725393295288086

Token 133: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' (adapté à ' list') → logprob: -0.02005956880748272
    2. ' list' → logprob: -4.020059585571289
    3. 'List' → logprob: -6.270059585571289
    4. ' List' → logprob: -11.395059585571289
    5. '   ' → logprob: -12.645059585571289
    6. '[list' → logprob: -14.395059585571289
    7. '[List' → logprob: -14.895059585571289
    8. '_list' → logprob: -16.27005958557129
    9. 'lst' → logprob: -16.39505958557129
    10. '[' → logprob: -17.14505958557129

Token 134: ':' (ID: 25)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.0023329516407102346
    2. ' of' → logprob: -6.877333164215088
    3. '<int' → logprob: -7.502333164215088
    4. '(int' → logprob: -7.752333164215088
    5. '[' → logprob: -9.37733268737793
    6. ':' → logprob: -9.62733268737793
    7. '```' → logprob: -9.75233268737793
    8. ')' → logprob: -10.62733268737793
    9. ' =' → logprob: -11.00233268737793
    10. '(' → logprob: -11.12733268737793

Token 135: ' Liste' (ID: 61030)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.06465529650449753
    2. ' [' → logprob: -3.064655303955078
    3. ' []' → logprob: -4.564655303955078
    4. '[]' → logprob: -5.564655303955078
    5. '[' → logprob: -6.564655303955078
    6. '[List' → logprob: -9.314655303955078
    7. '[list' → logprob: -9.314655303955078
    8. '[Int' → logprob: -10.189655303955078
    9. '[num' → logprob: -11.189655303955078
    10. '[str' → logprob: -11.189655303955078

Token 136: ' des' (ID: 731)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.043202657252550125
    2. ' des' → logprob: -3.5432026386260986
    3. '[' → logprob: -4.918202877044678
    4. ' of' → logprob: -6.168202877044678
    5. '<int' → logprob: -6.418202877044678
    6. ' d' → logprob: -7.168202877044678
    7. '<|end|>' → logprob: -7.918202877044678
    8. 'des' → logprob: -8.29320240020752
    9. ' de' → logprob: -8.41820240020752
    10. '   ' → logprob: -8.79320240020752

Token 137: ' ent' (ID: 1121)
  Prédit: ' ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ent' → logprob: -0.026161527261137962
    2. 'ent' → logprob: -4.2761616706848145
    3. ' integers' → logprob: -4.5261616706848145
    4. ' int' → logprob: -7.2761616706848145
    5. '_ent' → logprob: -9.026161193847656
    6. 'int' → logprob: -9.276161193847656
    7. ' entier' → logprob: -9.401161193847656
    8. '[int' → logprob: -9.651161193847656
    9. 'inte' → logprob: -10.776161193847656
    10. ' ints' → logprob: -11.651161193847656

Token 138: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -2.816093228830141e-06
    2. 'i' → logprob: -13.12500286102295
    3. 'ier' → logprob: -15.25000286102295
    4. 'ières' → logprob: -15.25000286102295
    5. 'ires' → logprob: -16.875001907348633
    6. 'ers' → logprob: -17.625001907348633
    7. '```' → logprob: -17.625001907348633
    8. 'riers' → logprob: -17.750001907348633
    9. '   ' → logprob: -18.250001907348633
    10. 'eurs' → logprob: -18.375001907348633

Token 139: ' sa' (ID: 880)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.7619228363037109
    2. ' des' → logprob: -1.011922836303711
    3. '   ' → logprob: -3.011922836303711
    4. '<|end|>' → logprob: -3.386922836303711
    5. '[' → logprob: -4.386922836303711
    6. ' d' → logprob: -4.511922836303711
    7. '<int' → logprob: -4.511922836303711
    8. '[]' → logprob: -5.011922836303711
    9. 'ent' → logprob: -5.386922836303711
    10. 'd' → logprob: -5.636922836303711

Token 140: 'isis' (ID: 11352)
  Prédit: 'isis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isis' → logprob: -0.0018869919003918767
    2. 'is' → logprob: -7.12688684463501
    3. 'isie' → logprob: -7.87688684463501
    4. 'ïs' → logprob: -8.376887321472168
    5. 'nis' → logprob: -9.126887321472168
    6. 'sis' → logprob: -9.501887321472168
    7. 'isi' → logprob: -9.751887321472168
    8. 'tis' → logprob: -10.126887321472168
    9. 'ise' → logprob: -10.251887321472168
    10. 'ls' → logprob: -10.251887321472168

Token 141: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.032635245472192764
    2. 'def' → logprob: -4.78263521194458
    3. '[int' → logprob: -4.78263521194458
    4. '[' → logprob: -5.78263521194458
    5. '(int' → logprob: -6.03263521194458
    6. ')' → logprob: -6.15763521194458
    7. '()' → logprob: -6.15763521194458
    8. ']' → logprob: -6.78263521194458
    9. '[]' → logprob: -7.03263521194458
    10. '```' → logprob: -7.65763521194458

Token 142: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007709132041782141
    2. '    
' → logprob: -7.5007710456848145
    3. '
' → logprob: -9.250770568847656
    4. ':
' → logprob: -10.750770568847656
    5. ':' → logprob: -11.000770568847656
    6. 'def' → logprob: -11.125770568847656
    7. ' list' → logprob: -11.375770568847656
    8. '):
' → logprob: -11.375770568847656
    9. '  
' → logprob: -11.375770568847656
    10. ')' → logprob: -11.625770568847656

Token 143: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0031981545034796
    2. '
' → logprob: -6.253198146820068
    3. 'def' → logprob: -7.878198146820068
    4. ')' → logprob: -8.128198623657227
    5. '    
' → logprob: -8.128198623657227
    6. ')
' → logprob: -9.628198623657227
    7. '```' → logprob: -9.628198623657227
    8. '):
' → logprob: -9.753198623657227
    9. ':
' → logprob: -10.878198623657227
    10. '  
' → logprob: -11.128198623657227

Token 144: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0015472410013899207
    2. 'result' → logprob: -7.876547336578369
    3. 'list' → logprob: -8.001546859741211
    4. 'lst' → logprob: -8.376546859741211
    5. '    
' → logprob: -8.876546859741211
    6. ' list' → logprob: -8.876546859741211
    7. 'def' → logprob: -9.376546859741211
    8. ' lst' → logprob: -9.376546859741211
    9. ' result' → logprob: -9.626546859741211
    10. ' integers' → logprob: -10.501546859741211

Token 145: ' numbers' (ID: 8663)
  Prédit: 'lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lst' → logprob: -0.42936480045318604
    2. 'result' → logprob: -1.429364800453186
    3. 'ent' → logprob: -3.5543646812438965
    4. 'inte' → logprob: -3.8043646812438965
    5. 'int' → logprob: -4.1793646812438965
    6. 'ints' → logprob: -4.3043646812438965
    7. 'numbers' (adapté à ' numbers') → logprob: -4.5543646812438965
    8. 'integer' → logprob: -4.9293646812438965
    9. 'values' → logprob: -5.6793646812438965
    10. 'liste' → logprob: -5.8043646812438965

Token 146: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.043106868863105774
    2. '=' → logprob: -3.1681067943573
    3. '=[]' → logprob: -9.168107032775879
    4. '=[]
' → logprob: -13.168107032775879
    5. '=[]
' → logprob: -14.793107032775879
    6. ' ' → logprob: -15.293107032775879
    7. '[]' → logprob: -15.543107032775879
    8. '_list' → logprob: -15.918107032775879
    9. 's' → logprob: -16.168106079101562
    10. '   ' → logprob: -16.293106079101562

Token 147: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.2519322335720062
    2. ' []' → logprob: -1.5019322633743286
    3. '[' → logprob: -13.001932144165039
    4. ' [' → logprob: -14.251932144165039
    5. '[]
' → logprob: -16.00193214416504
    6. ' []
' → logprob: -16.87693214416504
    7. '[]}' → logprob: -17.12693214416504
    8. '[]"' → logprob: -17.37693214416504
    9. '[]>' → logprob: -17.62693214416504
    10. '[]

' → logprob: -18.00193214416504

Token 148: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00566141027957201
    2. ' for' → logprob: -5.630661487579346
    3. 'for' → logprob: -6.630661487579346
    4. '
' → logprob: -7.505661487579346
    5. '    
' → logprob: -8.755661010742188
    6. '	for' → logprob: -10.505661010742188
    7. ' 
' → logprob: -13.255661010742188
    8. '  
' → logprob: -13.630661010742188
    9. '	
' → logprob: -14.505661010742188
    10. '   ' → logprob: -15.130661010742188

Token 149: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.032836563885211945
    2. '   ' → logprob: -3.532836675643921
    3. ' for' → logprob: -5.782836437225342
    4. '
' → logprob: -14.0328369140625
    5. 'while' → logprob: -15.1578369140625
    6. '    
' → logprob: -15.4078369140625
    7. '	for' → logprob: -15.6578369140625
    8. ' ' → logprob: -18.0328369140625
    9. '  ' → logprob: -18.1578369140625
    10. 'i' → logprob: -18.7828369140625

Token 150: ' i' (ID: 575)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.06701339036226273
    2. ' i' → logprob: -2.8170135021209717
    3. '_' → logprob: -5.317013263702393
    4. ' ' → logprob: -9.06701374053955
    5. 'i' → logprob: -12.06701374053955
    6. ' ' → logprob: -12.44201374053955
    7. '_i' → logprob: -15.06701374053955
    8. ' in' → logprob: -15.94201374053955
    9. ' range' → logprob: -16.942012786865234
    10. ' ‌' → logprob: -17.317012786865234

Token 151: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0036355883348733187
    2. 'in' → logprob: -5.628635406494141
    3. ' ' → logprob: -10.37863540649414
    4. '_' → logprob: -12.75363540649414
    5. 'n' → logprob: -14.87863540649414
    6. ' i' → logprob: -15.37863540649414
    7. ' ' → logprob: -15.62863540649414
    8. 'range' → logprob: -15.75363540649414
    9. '  ' → logprob: -16.00363540649414
    10. ',' → logprob: -16.25363540649414

Token 152: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.10020732134580612
    2. ' range' → logprob: -2.3502073287963867
    3. '	range' → logprob: -14.850207328796387
    4. '(range' → logprob: -16.60020637512207
    5. 'rang' → logprob: -16.60020637512207
    6. ' ' → logprob: -17.35020637512207
    7. '   ' → logprob: -17.47520637512207
    8. '_range' → logprob: -17.85020637512207
    9. 'in' → logprob: -18.72520637512207
    10. 'Range' → logprob: -18.72520637512207

Token 153: '(size' (ID: 15192)
  Prédit: '(size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(size' → logprob: -0.00247981958091259
    2. '(' → logprob: -6.0024800300598145
    3. ' (' → logprob: -12.502479553222656
    4. ' size' → logprob: -15.002479553222656
    5. '(s' → logprob: -16.377479553222656
    6. 'size' → logprob: -16.627479553222656
    7. '(space' → logprob: -17.877479553222656
    8. '<size' → logprob: -18.002479553222656
    9. '(sz' → logprob: -19.752479553222656
    10. '(len' → logprob: -20.002479553222656

Token 154: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.10041435062885284
    2. '):
' → logprob: -2.350414276123047
    3. ' ):' → logprob: -8.975414276123047
    4. ')' → logprob: -9.975414276123047
    5. '):
' → logprob: -10.850414276123047
    6. ' ):
' → logprob: -11.975414276123047
    7. '   ' → logprob: -12.225414276123047
    8. ':' → logprob: -12.975414276123047
    9. '+' → logprob: -13.850414276123047
    10. ' ' → logprob: -15.350414276123047

Token 155: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005319850519299507
    2. ' numbers' → logprob: -5.255320072174072
    3. '   ' → logprob: -10.255319595336914
    4. 'numbers' → logprob: -10.755319595336914
    5. '(numbers' → logprob: -11.630319595336914
    6. '        
' → logprob: -12.255319595336914
    7. '    ' → logprob: -12.505319595336914
    8. ' 
' → logprob: -12.755319595336914
    9. '    ' → logprob: -13.505319595336914
    10. '           ' → logprob: -13.630319595336914

Token 156: ' number' (ID: 2086)
  Prédit: ' number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' number' → logprob: -0.7556963562965393
    2. '       ' → logprob: -1.3806962966918945
    3. ' numbers' → logprob: -1.8806962966918945
    4. 'num' → logprob: -3.0056962966918945
    5. 'number' (adapté à ' number') → logprob: -3.5056962966918945
    6. ' num' → logprob: -3.5056962966918945
    7. 'numbers' → logprob: -4.2556962966918945
    8. 'n' → logprob: -7.2556962966918945
    9. '   ' → logprob: -7.5056962966918945
    10. 'prompt' → logprob: -7.8806962966918945

Token 157: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03819664195179939
    2. '=' → logprob: -3.288196563720703
    3. 's' → logprob: -8.788196563720703
    4. '   ' → logprob: -13.913196563720703
    5. ')' → logprob: -14.038196563720703
    6. '_' → logprob: -14.538196563720703
    7. '    ' → logprob: -16.288196563720703
    8. ' ' → logprob: -16.288196563720703
    9. '  ' → logprob: -16.288196563720703
    10. '(' → logprob: -17.038196563720703

Token 158: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.575940728187561
    2. ' get' → logprob: -0.825940728187561
    3. '	get' → logprob: -14.57594108581543
    4. '   ' → logprob: -15.07594108581543
    5. 'int' → logprob: -15.70094108581543
    6. ' ' → logprob: -15.95094108581543
    7. ' int' → logprob: -16.70094108581543
    8. '  ' → logprob: -16.95094108581543
    9. '(get' → logprob: -17.32594108581543
    10. '.get' → logprob: -17.70094108581543

Token 159: '_integer' (ID: 82911)
  Prédit: '_integer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_integer' → logprob: -2.45848218582978e-06
    2. '_' → logprob: -13.75000286102295
    3. ' _' → logprob: -14.50000286102295
    4. '_INTEGER' → logprob: -14.75000286102295
    5. '_number' → logprob: -16.125001907348633
    6. '_Integer' → logprob: -16.500001907348633
    7. ' integer' → logprob: -16.750001907348633
    8. 'Integer' → logprob: -17.500001907348633
    9. ' ' → logprob: -17.625001907348633
    10. 'integer' → logprob: -17.875001907348633

Token 160: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -9.729906196298543e-06
    2. '_' → logprob: -11.625009536743164
    3. '_output' → logprob: -15.125009536743164
    4. ' _' → logprob: -15.875009536743164
    5. '_inputs' → logprob: -16.250009536743164
    6. '_value' → logprob: -16.875009536743164
    7. '_Input' → logprob: -16.875009536743164
    8. '_INPUT' → logprob: -17.250009536743164
    9. '_user' → logprob: -17.750009536743164
    10. 'Input' → logprob: -18.250009536743164

Token 161: '("")
' (ID: 66729)
  Prédit: '(f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.5857774019241333
    2. '("' → logprob: -0.8357774019241333
    3. '(' → logprob: -4.710777282714844
    4. '('' → logprob: -7.460777282714844
    5. '("("' → logprob: -9.335777282714844
    6. '(">' → logprob: -9.835777282714844
    7. '("(' → logprob: -10.085777282714844
    8. '("")' → logprob: -11.210777282714844
    9. '(":' → logprob: -12.210777282714844
    10. 'f' → logprob: -12.585777282714844

Token 162: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07401815801858902
    2. 'numbers' → logprob: -2.8240182399749756
    3. ' numbers' → logprob: -4.8240180015563965
    4. '(numbers' → logprob: -5.6990180015563965
    5. '        
' → logprob: -7.6990180015563965
    6. '   ' → logprob: -9.574018478393555
    7. ')' → logprob: -11.074018478393555
    8. '           ' → logprob: -11.324018478393555
    9. '_numbers' → logprob: -11.824018478393555
    10. 'append' → logprob: -12.574018478393555

Token 163: ' numbers' (ID: 8663)
  Prédit: 'numbers'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'numbers' (adapté à ' numbers') → logprob: -0.07263365387916565
    2. ' numbers' → logprob: -2.822633743286133
    3. '   ' → logprob: -4.572633743286133
    4. '       ' → logprob: -8.197633743286133
    5. '(numbers' → logprob: -13.447633743286133
    6. ' ' → logprob: -14.822633743286133
    7. '  ' → logprob: -14.947633743286133
    8. 'number' → logprob: -15.322633743286133
    9. '           ' → logprob: -15.572633743286133
    10. '_numbers' → logprob: -15.697633743286133

Token 164: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00026181264547631145
    2. '.' → logprob: -8.250262260437012
    3. ' .' → logprob: -15.750262260437012
    4. 'append' → logprob: -15.875262260437012
    5. '.extend' → logprob: -16.000261306762695
    6. '.Append' → logprob: -17.750261306762695
    7. '.add' → logprob: -17.750261306762695
    8. '_append' → logprob: -18.375261306762695
    9. '.push' → logprob: -18.500261306762695
    10. '.app' → logprob: -19.000261306762695

Token 165: '(number' (ID: 32955)
  Prédit: '(number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(number' → logprob: -0.0005539863486774266
    2. '(' → logprob: -7.500554084777832
    3. 'number' → logprob: -14.625554084777832
    4. '(
' → logprob: -15.000554084777832
    5. ' (' → logprob: -16.125553131103516
    6. '(copy' → logprob: -17.625553131103516
    7. '(numbers' → logprob: -18.000553131103516
    8. '(numero' → logprob: -18.250553131103516
    9. '(Number' → logprob: -19.000553131103516
    10. '(

' → logprob: -19.250553131103516

Token 166: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00010700009443098679
    2. ')
' → logprob: -9.250106811523438
    3. '   ' → logprob: -11.750106811523438
    4. ' )' → logprob: -13.250106811523438
    5. ')return' → logprob: -13.875106811523438
    6. ' ' → logprob: -16.250106811523438
    7. ')

' → logprob: -17.375106811523438
    8. 'return' → logprob: -18.000106811523438
    9. ')
' → logprob: -18.125106811523438
    10. '       ' → logprob: -18.250106811523438

Token 167: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005475651938468218
    2. 'return' → logprob: -5.2554755210876465
    3. ' return' → logprob: -8.880475997924805
    4. '
' → logprob: -9.380475997924805
    5. '    
' → logprob: -11.005475997924805
    6. '   ' → logprob: -14.380475997924805
    7. '	return' → logprob: -14.505475997924805
    8. '```' → logprob: -15.630475997924805
    9. '  
' → logprob: -15.755475997924805
    10. '       ' → logprob: -16.130475997924805

Token 168: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.4979262948036194
    2. '   ' → logprob: -0.9979262948036194
    3. ' return' → logprob: -3.7479262351989746
    4. '
' → logprob: -15.247926712036133
    5. '	return' → logprob: -15.997926712036133
    6. '    
' → logprob: -16.497926712036133
    7. '       ' → logprob: -16.997926712036133
    8. ' ' → logprob: -16.997926712036133
    9. '   ' → logprob: -17.872926712036133
    10. '```' → logprob: -17.997926712036133

Token 169: ' numbers' (ID: 8663)
  Prédit: 'numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'numbers' → logprob: -0.014171270653605461
    2. ' numbers' → logprob: -4.264171123504639
    3. 'copy' → logprob: -12.139171600341797
    4. '(numbers' → logprob: -13.014171600341797
    5. 'number' → logprob: -15.389171600341797
    6. ' copy' → logprob: -17.014171600341797
    7. 'list' → logprob: -18.389171600341797
    8. '_numbers' → logprob: -18.764171600341797
    9. 'names' → logprob: -18.764171600341797
    10. 'Copy' → logprob: -19.264171600341797

Token 170: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.14002397656440735
    2. '<|end|>' → logprob: -2.265023946762085
    3. '
' → logprob: -4.265024185180664
    4. '

' → logprob: -4.390024185180664
    5. '<|end|>' → logprob: -8.765024185180664
    6. '[' → logprob: -9.390024185180664
    7. '```' → logprob: -9.765024185180664
    8. '#' → logprob: -10.765024185180664
    9. '\n' → logprob: -11.140024185180664
    10. ' def' → logprob: -11.765024185180664

Token 171: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00010032468708232045
    2. '
' → logprob: -10.250100135803223
    3. '```' → logprob: -10.750100135803223
    4. 'class' → logprob: -11.375100135803223
    5. '

' → logprob: -11.375100135803223
    6. 'import' → logprob: -12.125100135803223
    7. ' def' → logprob: -12.500100135803223
    8. '\' → logprob: -12.500100135803223
    9. '<|end|>' → logprob: -13.000100135803223
    10. '#' → logprob: -13.375100135803223

Token 172: ' print' (ID: 2123)
  Prédit: ' find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' find' → logprob: -1.6730430126190186
    2. ' copy' → logprob: -2.0480430126190186
    3. ' main' → logprob: -2.2980430126190186
    4. ' deep' → logprob: -2.6730430126190186
    5. ' count' → logprob: -2.7980430126190186
    6. ' create' → logprob: -3.0480430126190186
    7. ' calculate' → logprob: -3.1730430126190186
    8. ' is' → logprob: -3.6730430126190186
    9. ' merge' → logprob: -3.6730430126190186
    10. ' bubble' → logprob: -3.9230430126190186

Token 173: '_sub' (ID: 11572)
  Prédit: '_list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.9793106913566589
    2. '_' → logprob: -1.4793107509613037
    3. '(' → logprob: -1.8543107509613037
    4. '_array' → logprob: -1.8543107509613037
    5. '_matrix' → logprob: -3.2293107509613037
    6. '_board' → logprob: -4.604310512542725
    7. '_numbers' → logprob: -5.229310512542725
    8. '_sorted' → logprob: -5.229310512542725
    9. '_lists' → logprob: -5.979310512542725
    10. '_values' → logprob: -6.354310512542725

Token 174: 'stitute' (ID: 68516)
  Prédit: 'array'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'array' → logprob: -0.6155617833137512
    2. 'list' → logprob: -1.4905617237091064
    3. 'sequence' → logprob: -2.2405617237091064
    4. '_array' → logprob: -3.1155617237091064
    5. 'set' → logprob: -3.2405617237091064
    6. 'arrays' → logprob: -4.4905619621276855
    7. 'string' → logprob: -5.1155619621276855
    8. 'matrix' → logprob: -5.1155619621276855
    9. '_list' → logprob: -5.2405619621276855
    10. 'sets' → logprob: -5.6155619621276855

Token 175: '_max' (ID: 13731)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.09769639372825623
    2. '_list' → logprob: -3.347696304321289
    3. 's' → logprob: -3.972696304321289
    4. '_' → logprob: -4.597696304321289
    5. '_string' → logprob: -5.222696304321289
    6. '_text' → logprob: -5.597696304321289
    7. '(s' → logprob: -5.722696304321289
    8. '_strings' → logprob: -6.472696304321289
    9. '_array' → logprob: -6.597696304321289
    10. '_numbers' → logprob: -6.597696304321289

Token 176: '_values' (ID: 20393)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.12198007106781
    2. '_value' → logprob: -2.2469801902770996
    3. '(numbers' → logprob: -2.6219801902770996
    4. '_element' → logprob: -2.7469801902770996
    5. '(lst' → logprob: -3.3719801902770996
    6. '(nums' → logprob: -3.4969801902770996
    7. '_elements' → logprob: -3.4969801902770996
    8. '_number' → logprob: -3.4969801902770996
    9. '(arr' → logprob: -3.6219801902770996
    10. '(l' → logprob: -3.6219801902770996

Token 177: '(values' (ID: 40883)
  Prédit: '(lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lst' → logprob: -1.0260926485061646
    2. '(array' → logprob: -1.4010926485061646
    3. '(arr' → logprob: -1.9010926485061646
    4. '(numbers' → logprob: -2.401092529296875
    5. '(matrix' → logprob: -3.776092529296875
    6. '(nums' → logprob: -3.901092529296875
    7. '(values' → logprob: -4.026092529296875
    8. '(' → logprob: -4.026092529296875
    9. '(list' → logprob: -4.151092529296875
    10. '(size' → logprob: -4.401092529296875

Token 178: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.09018208086490631
    2. ',' → logprob: -2.465182065963745
    3. '):
' → logprob: -7.215182304382324
    4. ')' → logprob: -8.715182304382324
    5. ':' → logprob: -9.215182304382324
    6. '(values' → logprob: -9.715182304382324
    7. '_list' → logprob: -9.965182304382324
    8. '   ' → logprob: -10.215182304382324
    9. ' ):' → logprob: -10.965182304382324
    10. '):
' → logprob: -11.215182304382324

Token 179: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04972102865576744
    2. '(values' → logprob: -3.1747210025787354
    3. '(max' → logprob: -5.4247212409973145
    4. ':' → logprob: -6.4247212409973145
    5. '(' → logprob: -8.299720764160156
    6. '(numbers' → logprob: -9.549720764160156
    7. ':
' → logprob: -9.549720764160156
    8. 'max' → logprob: -9.924720764160156
    9. '(sub' → logprob: -9.924720764160156
    10. '(vals' → logprob: -10.549720764160156

Token 180: ' """
' (ID: 7037)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.9288434386253357
    2. 'max' → logprob: -0.9288434386253357
    3. '   ' → logprob: -1.6788434982299805
    4. '"""
' (adapté à ' """
') → logprob: -4.1788434982299805
    5. ' if' → logprob: -6.0538434982299805
    6. ' """
' → logprob: -7.0538434982299805
    7. 'sub' → logprob: -7.1788434982299805
    8. 'def' → logprob: -7.5538434982299805
    9. 'if' → logprob: -7.6788434982299805
    10. '
' → logprob: -7.6788434982299805

Token 181: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18146587908267975
    2. '"""
' → logprob: -1.9314658641815186
    3. '"""' → logprob: -4.806466102600098
    4. '"' → logprob: -5.556466102600098
    5. ' """
' → logprob: -5.556466102600098
    6. 'def' → logprob: -6.056466102600098
    7. 'for' → logprob: -6.806466102600098
    8. 'max' → logprob: -8.181466102600098
    9. ' for' → logprob: -8.181466102600098
    10. ' """' → logprob: -8.806466102600098

Token 182: ' Pour' (ID: 13931)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.19295501708984375
    2. ' max' → logprob: -2.1929550170898438
    3. '"""
' → logprob: -3.5679550170898438
    4. '   ' → logprob: -3.9429550170898438
    5. ' """
' → logprob: -5.567955017089844
    6. '#' → logprob: -5.942955017089844
    7. 'sub' → logprob: -6.192955017089844
    8. 'def' → logprob: -6.317955017089844
    9. 'min' → logprob: -6.817955017089844
    10. 'for' → logprob: -7.567955017089844

Token 183: ' chaque' (ID: 21194)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0228577833622694
    2. ' value' → logprob: -4.147857666015625
    3. ' val' → logprob: -5.897857666015625
    4. 'i' → logprob: -6.772857666015625
    5. ' valeur' → logprob: -7.147857666015625
    6. ' remplacer' → logprob: -7.272857666015625
    7. ' index' → logprob: -7.522857666015625
    8. ' chaque' → logprob: -8.022857666015625
    9. ' idx' → logprob: -8.522857666015625
    10. 'val' → logprob: -9.147857666015625

Token 184: ' élément' (ID: 99627)
  Prédit: ' value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' value' → logprob: -0.7567365169525146
    2. ' valeur' → logprob: -1.0067365169525146
    3. 'val' → logprob: -3.1317365169525146
    4. ' val' → logprob: -3.2567365169525146
    5. 'value' → logprob: -3.5067365169525146
    6. ' i' → logprob: -3.6317365169525146
    7. ' index' → logprob: -4.381736755371094
    8. ' element' → logprob: -6.006736755371094
    9. ' ' → logprob: -6.131736755371094
    10. ' élément' → logprob: -6.381736755371094

Token 185: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.20423772931098938
    2. ' dans' → logprob: -1.829237699508667
    3. ' in' → logprob: -4.204237937927246
    4. 'de' → logprob: -6.204237937927246
    5. 'dans' → logprob: -6.329237937927246
    6. ' du' → logprob: -6.579237937927246
    7. ' value' → logprob: -7.329237937927246
    8. 's' → logprob: -7.454237937927246
    9. ',' → logprob: -7.579237937927246
    10. ' à' → logprob: -7.704237937927246

Token 186: ' la' (ID: 557)
  Prédit: 'values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'values' → logprob: -0.010023326613008976
    2. ' values' → logprob: -4.63502311706543
    3. ' la' → logprob: -8.63502311706543
    4. 'la' → logprob: -9.88502311706543
    5. 'range' → logprob: -10.88502311706543
    6. 'val' → logprob: -12.51002311706543
    7. '(values' → logprob: -12.76002311706543
    8. ' valeurs' → logprob: -12.76002311706543
    9. 'l' → logprob: -12.88502311706543
    10. '	values' → logprob: -13.13502311706543

Token 187: ' liste' (ID: 31719)
  Prédit: 'values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'values' → logprob: -0.42786094546318054
    2. 'liste' → logprob: -1.677860975265503
    3. ' liste' → logprob: -2.177860975265503
    4. 'list' → logprob: -3.802860975265503
    5. 'val' → logprob: -3.927860975265503
    6. ' values' → logprob: -5.802860736846924
    7. ' list' → logprob: -6.302860736846924
    8. 'vals' → logprob: -8.427861213684082
    9. ' valeurs' → logprob: -8.427861213684082
    10. 'lists' → logprob: -8.677861213684082

Token 188: ',' (ID: 11)
  Prédit: ' values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' values' → logprob: -0.2283334881067276
    2. 'values' → logprob: -2.4783334732055664
    3. ',' → logprob: -2.7283334732055664
    4. '(values' → logprob: -3.3533334732055664
    5. ' ,' → logprob: -4.728333473205566
    6. ' (' → logprob: -5.228333473205566
    7. ' de' → logprob: -6.478333473205566
    8. ' des' → logprob: -7.228333473205566
    9. ' valeurs' → logprob: -7.228333473205566
    10. '_' → logprob: -7.228333473205566

Token 189: ' affiche' (ID: 127479)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10733561217784882
    2. ' print' → logprob: -3.9823355674743652
    3. 'def' → logprob: -4.232335567474365
    4. ' rem' → logprob: -4.357335567474365
    5. ' substitute' → logprob: -4.732335567474365
    6. ' substitutes' → logprob: -4.732335567474365
    7. 'sub' → logprob: -4.982335567474365
    8. 'print' → logprob: -4.982335567474365
    9. ' def' → logprob: -5.982335567474365
    10. 'rem' → logprob: -5.982335567474365

Token 190: ' le' (ID: 505)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '("' → logprob: -1.2127782106399536
    2. '(len' → logprob: -1.4627782106399536
    3. '(' → logprob: -1.8377782106399536
    4. '(values' → logprob: -2.212778091430664
    5. ' la' → logprob: -2.712778091430664
    6. ' une' → logprob: -3.837778091430664
    7. '"' → logprob: -4.087778091430664
    8. 's' → logprob: -4.462778091430664
    9. '('' → logprob: -4.587778091430664
    10. ' les' → logprob: -4.712778091430664

Token 191: ' plus' (ID: 2932)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.1829261779785156
    2. ' maximum' → logprob: -1.5579261779785156
    3. 'maximum' → logprob: -1.8079261779785156
    4. ' max' → logprob: -2.6829261779785156
    5. 'val' → logprob: -2.8079261779785156
    6. 'plus' → logprob: -2.9329261779785156
    7. ' plus' → logprob: -2.9329261779785156
    8. '"' → logprob: -3.8079261779785156
    9. 'nombre' → logprob: -3.9329261779785156
    10. ' nombre' → logprob: -4.182926177978516

Token 192: ' grand' (ID: 6363)
  Prédit: ' grand'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' grand' → logprob: -0.18596938252449036
    2. 'grand' → logprob: -1.810969352722168
    3. '_' → logprob: -5.685969352722168
    4. '_gr' → logprob: -7.060969352722168
    5. '```' → logprob: -7.560969352722168
    6. '_s' → logprob: -8.060969352722168
    7. ' élevé' → logprob: -8.310969352722168
    8. ' grande' → logprob: -8.810969352722168
    9. 'é' → logprob: -9.560969352722168
    10. '-grand' → logprob: -9.560969352722168

Token 193: ' des' (ID: 731)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8519813418388367
    2. ' élément' → logprob: -1.1019814014434814
    3. 'élé' → logprob: -2.7269814014434814
    4. 'val' → logprob: -2.9769814014434814
    5. 'element' → logprob: -3.8519814014434814
    6. ' des' → logprob: -4.101981163024902
    7. ' _' → logprob: -4.226981163024902
    8. ' element' → logprob: -4.351981163024902
    9. ' valeur' → logprob: -4.726981163024902
    10. '_val' → logprob: -5.226981163024902

Token 194: ' autres' (ID: 18701)
  Prédit: ' valeurs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' valeurs' → logprob: -1.4540117979049683
    2. 'élé' → logprob: -1.8290117979049683
    3. ' éléments' → logprob: -1.8290117979049683
    4. 'les' → logprob: -2.204011917114258
    5. ' les' → logprob: -2.204011917114258
    6. 'val' → logprob: -2.829011917114258
    7. 'elements' → logprob: -3.704011917114258
    8. ' elements' → logprob: -3.829011917114258
    9. ' ses' → logprob: -3.829011917114258
    10. 'values' → logprob: -4.079011917114258

Token 195: ' éléments' (ID: 57375)
  Prédit: ' éléments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' éléments' → logprob: -0.24532799422740936
    2. ' elements' → logprob: -2.620327949523926
    3. ' valeurs' → logprob: -2.620327949523926
    4. '_' → logprob: -2.995327949523926
    5. ' _' → logprob: -4.995327949523926
    6. ' values' → logprob: -5.245327949523926
    7. 'elements' → logprob: -5.870327949523926
    8. 'élé' → logprob: -5.995327949523926
    9. '_elements' → logprob: -6.370327949523926
    10. 'values' → logprob: -7.870327949523926

Token 196: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.27955397963523865
    2. ' (' → logprob: -2.6545538902282715
    3. ',' → logprob: -2.7795538902282715
    4. '.' → logprob: -3.4045538902282715
    5. ' présents' → logprob: -3.7795538902282715
    6. '   ' → logprob: -4.6545538902282715
    7. 'def' → logprob: -4.7795538902282715
    8. ' plus' → logprob: -5.1545538902282715
    9. 'de' → logprob: -5.1545538902282715
    10. ' avec' → logprob: -5.7795538902282715

Token 197: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.2844855487346649
    2. 'la' → logprob: -1.4094855785369873
    3. 'values' → logprob: -6.284485340118408
    4. ' values' → logprob: -7.659485340118408
    5. 'l' → logprob: -8.284485816955566
    6. ' valeurs' → logprob: -8.909485816955566
    7. 'val' → logprob: -9.159485816955566
    8. '```' → logprob: -9.659485816955566
    9. 'list' → logprob: -9.784485816955566
    10. 'liste' → logprob: -10.159485816955566

Token 198: ' liste' (ID: 31719)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.6870578527450562
    2. ' liste' → logprob: -1.4370578527450562
    3. ' list' → logprob: -2.1870579719543457
    4. 'list' → logprob: -2.1870579719543457
    5. 'val' → logprob: -4.312057971954346
    6. 'values' → logprob: -5.312057971954346
    7. ' la' → logprob: -5.312057971954346
    8. 'la' → logprob: -6.187057971954346
    9. ' valeurs' → logprob: -6.437057971954346
    10. '```' → logprob: -6.687057971954346

Token 199: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0108234882354736
    2. ' (' → logprob: -1.1358234882354736
    3. ',' → logprob: -1.8858234882354736
    4. '.' → logprob: -2.5108234882354736
    5. ' avec' → logprob: -4.3858232498168945
    6. 'def' → logprob: -4.6358232498168945
    7. ':' → logprob: -5.2608232498168945
    8. '(' → logprob: -5.3858232498168945
    9. ' après' → logprob: -5.3858232498168945
    10. ' def' → logprob: -5.5108232498168945

Token 200: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10314711928367615
    2. 'def' → logprob: -2.353147029876709
    3. '"""
' → logprob: -6.603147029876709
    4. ' def' → logprob: -6.728147029876709
    5. '
' → logprob: -8.728147506713867
    6. '\' → logprob: -10.103147506713867
    7. '(' → logprob: -10.228147506713867
    8. '"""' → logprob: -10.603147506713867
    9. ')' → logprob: -10.978147506713867
    10. '```' → logprob: -10.978147506713867

Token 201: ' Si' (ID: 7832)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0668536126613617
    2. 'def' → logprob: -2.8168535232543945
    3. '"""
' → logprob: -6.1918535232543945
    4. '
' → logprob: -6.3168535232543945
    5. ' def' → logprob: -7.4418535232543945
    6. '\' → logprob: -9.066853523254395
    7. '\n' → logprob: -9.316853523254395
    8. '    
' → logprob: -9.691853523254395
    9. '"""' → logprob: -10.441853523254395
    10. '       ' → logprob: -11.316853523254395

Token 202: ' l' (ID: 305)
  Prédit: ' len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.1859736442565918
    2. 'len' → logprob: -2.685973644256592
    3. ' values' → logprob: -2.810973644256592
    4. 'values' → logprob: -4.185973644256592
    5. ' l' → logprob: -4.560973644256592
    6. ' la' → logprob: -4.810973644256592
    7. 'val' → logprob: -6.310973644256592
    8. 'l' → logprob: -6.560973644256592
    9. ' val' → logprob: -7.185973644256592
    10. ' le' → logprob: -7.185973644256592

Token 203: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -1.02646005153656
    2. ' len' → logprob: -1.15146005153656
    3. 'en' → logprob: -1.65146005153656
    4. 'len' → logprob: -2.9014601707458496
    5. 'e' → logprob: -3.9014601707458496
    6. 'i' → logprob: -4.52646017074585
    7. '(len' → logprob: -4.77646017074585
    8. 'a' → logprob: -4.90146017074585
    9. 'ength' → logprob: -5.15146017074585
    10. ''en' → logprob: -6.15146017074585

Token 204: 'élé' (ID: 15228)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.09946518391370773
    2. 'élé' → logprob: -3.4744651317596436
    3. 'element' → logprob: -3.8494651317596436
    4. ' len' → logprob: -3.9744651317596436
    5. 'val' → logprob: -4.349465370178223
    6. 'elem' → logprob: -5.724465370178223
    7. 'value' → logprob: -6.224465370178223
    8. 'values' → logprob: -6.849465370178223
    9. ' element' → logprob: -6.974465370178223
    10. ' élément' → logprob: -7.349465370178223

Token 205: 'ment' (ID: 508)
  Prédit: 'ément'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ément' → logprob: -0.14025650918483734
    2. 'é' → logprob: -3.140256404876709
    3. 'ement' → logprob: -3.140256404876709
    4. 'ment' → logprob: -3.265256404876709
    5. 'ém' → logprob: -6.265256404876709
    6. 'em' → logprob: -6.515256404876709
    7. 'e' → logprob: -7.640256404876709
    8. '#' → logprob: -7.640256404876709
    9. '```' → logprob: -7.765256404876709
    10. 'è' → logprob: -8.015256881713867

Token 206: ' courant' (ID: 74694)
  Prédit: ' est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.5347616672515869
    2. 'est' → logprob: -1.034761667251587
    3. 's' → logprob: -3.284761667251587
    4. ' is' → logprob: -4.159761428833008
    5. ' vaut' → logprob: -5.909761428833008
    6. ' ==' → logprob: -6.909761428833008
    7. ' n' → logprob: -7.659761428833008
    8. '==' → logprob: -8.159761428833008
    9. 'is' → logprob: -8.284761428833008
    10. ' ' → logprob: -9.159761428833008

Token 207: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.002059499965980649
    2. ' n' → logprob: -6.877059459686279
    3. ' is' → logprob: -8.127059936523438
    4. ' vaut' → logprob: -8.252059936523438
    5. ' ==' → logprob: -8.377059936523438
    6. 'est' → logprob: -9.127059936523438
    7. ' ' → logprob: -9.502059936523438
    8. ' =' → logprob: -11.127059936523438
    9. ' a' → logprob: -11.502059936523438
    10. '=' → logprob: -11.752059936523438

Token 208: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.5142374038696289
    2. 'le' → logprob: -1.014237403869629
    3. ' égal' → logprob: -3.764237403869629
    4. 'égal' → logprob: -4.389237403869629
    5. 'max' → logprob: -7.639237403869629
    6. ' la' → logprob: -8.139237403869629
    7. ' ég' → logprob: -8.264237403869629
    8. 'la' → logprob: -8.264237403869629
    9. 'equal' → logprob: -8.389237403869629
    10. 'l' → logprob: -8.389237403869629

Token 209: ' maximum' (ID: 10562)
  Prédit: ' maximum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' maximum' → logprob: -0.2624071538448334
    2. 'maximum' → logprob: -2.137407064437866
    3. ' plus' → logprob: -3.012407064437866
    4. 'max' → logprob: -3.262407064437866
    5. ' max' → logprob: -4.137407302856445
    6. 'plus' → logprob: -4.887407302856445
    7. ' maximal' → logprob: -7.387407302856445
    8. ' seul' → logprob: -7.887407302856445
    9. 'val' → logprob: -8.512407302856445
    10. '```' → logprob: -9.012407302856445

Token 210: ' de' (ID: 334)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6597728729248047
    2. ' de' → logprob: -0.7847728729248047
    3. 'de' → logprob: -3.7847728729248047
    4. ' ,' → logprob: -6.034772872924805
    5. ',
' → logprob: -7.909772872924805
    6. '   ' → logprob: -8.159772872924805
    7. 'strict' → logprob: -8.909772872924805
    8. ' unique' → logprob: -9.409772872924805
    9. ':' → logprob: -9.409772872924805
    10. ' ' → logprob: -9.659772872924805

Token 211: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.03142672777175903
    2. 'la' → logprob: -3.5314266681671143
    3. 'l' → logprob: -7.531426906585693
    4. 'values' → logprob: -7.656426906585693
    5. 's' → logprob: -8.906426429748535
    6. '(values' → logprob: -8.906426429748535
    7. ' values' → logprob: -9.031426429748535
    8. 'liste' → logprob: -9.531426429748535
    9. 'a' → logprob: -9.781426429748535
    10. 'list' → logprob: -10.531426429748535

Token 212: ' liste' (ID: 31719)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.5291358232498169
    2. ' liste' → logprob: -0.9041358232498169
    3. 'list' → logprob: -5.279135704040527
    4. ' list' → logprob: -7.404135704040527
    5. '   ' → logprob: -9.404135704040527
    6. 'Liste' → logprob: -9.904135704040527
    7. 's' → logprob: -10.029135704040527
    8. ' ' → logprob: -10.779135704040527
    9. 'lista' → logprob: -10.904135704040527
    10. 'l' → logprob: -11.029135704040527

Token 213: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011108051985502243
    2. ' ,' → logprob: -7.126111030578613
    3. ',
' → logprob: -8.251111030578613
    4. ':' → logprob: -11.251111030578613
    5. '   ' → logprob: -12.251111030578613
    6. ' (' → logprob: -12.751111030578613
    7. ',

' → logprob: -12.876111030578613
    8. '.' → logprob: -13.501111030578613
    9. ' et' → logprob: -13.501111030578613
    10. 'def' → logprob: -13.626111030578613

Token 214: ' affiche' (ID: 127479)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21868537366390228
    2. ' print' → logprob: -2.0936853885650635
    3. ' on' → logprob: -3.4686853885650635
    4. ' affiche' → logprob: -4.218685150146484
    5. ' afficher' → logprob: -5.218685150146484
    6. 'print' → logprob: -5.468685150146484
    7. ' la' → logprob: -6.093685150146484
    8. ' il' → logprob: -6.218685150146484
    9. ' ' → logprob: -6.468685150146484
    10. '    ' → logprob: -6.593685150146484

Token 215: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.25916963815689087
    2. ' la' → logprob: -2.259169578552246
    3. ' l' → logprob: -3.759169578552246
    4. 'max' → logprob: -4.009169578552246
    5. '(max' → logprob: -4.009169578552246
    6. ' max' → logprob: -4.259169578552246
    7. ' the' → logprob: -4.384169578552246
    8. ' ' → logprob: -4.759169578552246
    9. ' (' → logprob: -5.134169578552246
    10. ' maximum' → logprob: -5.634169578552246

Token 216: ' second' (ID: 3099)
  Prédit: 'maximum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'maximum' → logprob: -1.4258359670639038
    2. ' maximum' → logprob: -1.5508359670639038
    3. ' second' → logprob: -1.6758359670639038
    4. ' deuxième' → logprob: -2.1758360862731934
    5. 'max' → logprob: -2.5508360862731934
    6. 'second' → logprob: -2.5508360862731934
    7. 'plus' → logprob: -3.1758360862731934
    8. ' plus' → logprob: -3.4258360862731934
    9. ' max' → logprob: -4.925836086273193
    10. '2' → logprob: -6.050836086273193

Token 217: ' maximum' (ID: 10562)
  Prédit: '_max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.2068178653717041
    2. '_' → logprob: -2.331817865371704
    3. 'max' → logprob: -3.456817865371704
    4. ' maximum' → logprob: -3.581817865371704
    5. ' max' → logprob: -3.831817865371704
    6. 'maximum' → logprob: -5.331817626953125
    7. ' _' → logprob: -5.831817626953125
    8. ' maximal' → logprob: -7.581817626953125
    9. ' maximale' → logprob: -9.831817626953125
    10. '_l' → logprob: -10.081817626953125

Token 218: ',
' (ID: 412)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0581376738846302
    2. '
' → logprob: -3.9331376552581787
    3. '.' → logprob: -4.433137893676758
    4. 'def' → logprob: -5.308137893676758
    5. '(values' → logprob: -5.558137893676758
    6. '.
' → logprob: -5.808137893676758
    7. ',' → logprob: -5.933137893676758
    8. ':
' → logprob: -6.683137893676758
    9. ' (' → logprob: -6.683137893676758
    10. '  ' → logprob: -6.808137893676758

Token 219: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08551099896430969
    2. ' sinon' → logprob: -2.5855109691619873
    3. '    ' → logprob: -6.460511207580566
    4. 's' → logprob: -6.960511207580566
    5. '       ' → logprob: -7.210511207580566
    6. '
' → logprob: -7.210511207580566
    7. 'def' → logprob: -7.460511207580566
    8. ' autrement' → logprob: -7.585511207580566
    9. 'car' → logprob: -8.585511207580566
    10. 'import' → logprob: -8.710511207580566

Token 220: ' sinon' (ID: 52915)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.44503435492515564
    2. ' sinon' → logprob: -1.070034384727478
    3. ' car' → logprob: -5.570034503936768
    4. '
' → logprob: -5.820034503936768
    5. ' autrement' → logprob: -6.570034503936768
    6. 'def' → logprob: -6.570034503936768
    7. ' et' → logprob: -6.695034503936768
    8. 'sin' → logprob: -7.070034503936768
    9. 'car' → logprob: -7.195034503936768
    10. '    ' → logprob: -7.445034503936768

Token 221: ' affiche' (ID: 127479)
  Prédit: ' affiche'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' affiche' → logprob: -0.24713000655174255
    2. '   ' → logprob: -1.747130036354065
    3. ' print' → logprob: -4.622129917144775
    4. ':' → logprob: -4.997129917144775
    5. ' affich' → logprob: -4.997129917144775
    6. 'aff' → logprob: -5.247129917144775
    7. '    ' → logprob: -5.497129917144775
    8. ',' → logprob: -5.622129917144775
    9. ' afficher' → logprob: -6.622129917144775
    10. ' le' → logprob: -6.747129917144775

Token 222: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.5590113401412964
    2. ' l' → logprob: -1.6840113401412964
    3. ' ' → logprob: -2.934011459350586
    4. 'the' → logprob: -3.434011459350586
    5. '"' → logprob: -3.559011459350586
    6. ' the' → logprob: -3.559011459350586
    7. 'le' → logprob: -3.684011459350586
    8. 'l' → logprob: -3.684011459350586
    9. 'max' → logprob: -4.309011459350586
    10. ' ' → logprob: -4.559011459350586

Token 223: ' maximum' (ID: 10562)
  Prédit: ' maximum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' maximum' → logprob: -0.4806005656719208
    2. 'maximum' → logprob: -0.9806005954742432
    3. 'max' → logprob: -5.105600357055664
    4. ' max' → logprob: -8.355600357055664
    5. 'plus' → logprob: -9.105600357055664
    6. ' plus' → logprob: -9.480600357055664
    7. ' maximal' → logprob: -11.480600357055664
    8. 'val' → logprob: -13.105600357055664
    9. '最大' → logprob: -13.730600357055664
    10. '```' → logprob: -14.605600357055664

Token 224: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5547422766685486
    2. '.' → logprob: -1.4297423362731934
    3. ' de' → logprob: -1.9297423362731934
    4. ')' → logprob: -4.304742336273193
    5. ' complet' → logprob: -5.054742336273193
    6. '    
' → logprob: -5.179742336273193
    7. '<|end|>' → logprob: -5.429742336273193
    8. '```' → logprob: -6.304742336273193
    9. '.
' → logprob: -7.054742336273193
    10. ',' → logprob: -7.054742336273193

Token 225: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003886057762429118
    2. 'def' → logprob: -5.7538862228393555
    3. '"""
' → logprob: -7.5038862228393555
    4. ' def' → logprob: -9.253886222839355
    5. '
' → logprob: -10.628886222839355
    6. '"""' → logprob: -11.003886222839355
    7. '    
' → logprob: -12.253886222839355
    8. ' """
' → logprob: -12.628886222839355
    9. '```' → logprob: -12.628886222839355
    10. '       ' → logprob: -12.753886222839355

Token 226: ' Args' (ID: 39185)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023655839264392853
    2. '"""
' → logprob: -4.148655891418457
    3. 'def' → logprob: -5.023655891418457
    4. '
' → logprob: -7.273655891418457
    5. '"""' → logprob: -9.148655891418457
    6. ' def' → logprob: -9.773655891418457
    7. '"
' → logprob: -10.023655891418457
    8. '\n' → logprob: -10.898655891418457
    9. '    
' → logprob: -11.023655891418457
    10. '\' → logprob: -11.273655891418457

Token 227: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3365956246852875
    2. '):
' → logprob: -1.9615956544876099
    3. ':' → logprob: -2.7115955352783203
    4. ' (' → logprob: -3.4615955352783203
    5. ':
' → logprob: -3.9615955352783203
    6. '):' → logprob: -4.58659553527832
    7. ' :' → logprob: -4.96159553527832
    8. '       ' → logprob: -5.21159553527832
    9. ' :
' → logprob: -6.46159553527832
    10. ')' → logprob: -7.08659553527832

Token 228: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009794695302844048
    2. '       ' → logprob: -4.63479471206665
    3. 'values' → logprob: -10.634794235229492
    4. ' values' → logprob: -11.259794235229492
    5. '	values' → logprob: -14.259794235229492
    6. '```' → logprob: -14.884794235229492
    7. '
' → logprob: -15.134794235229492
    8. '    
' → logprob: -16.509794235229492
    9. 'def' → logprob: -16.509794235229492
    10. '    ' → logprob: -16.509794235229492

Token 229: ' values' (ID: 4824)
  Prédit: 'values'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'values' (adapté à ' values') → logprob: -0.0014016677159816027
    2. ' values' → logprob: -6.626401901245117
    3. '   ' → logprob: -9.501401901245117
    4. '	values' → logprob: -14.751401901245117
    5. 'value' → logprob: -15.626401901245117
    6. 'list' → logprob: -16.501401901245117
    7. '       ' → logprob: -16.751401901245117
    8. 'def' → logprob: -17.001401901245117
    9. '(values' → logprob: -17.251401901245117
    10. ' ' → logprob: -17.501401901245117

Token 230: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.021827593445777893
    2. '):' → logprob: -4.396827697753906
    3. ')' → logprob: -5.146827697753906
    4. '):
' → logprob: -6.271827697753906
    5. ':' → logprob: -7.396827697753906
    6. ' ):' → logprob: -7.771827697753906
    7. '```' → logprob: -9.146827697753906
    8. ' :' → logprob: -9.521827697753906
    9. '(list' → logprob: -9.646827697753906
    10. '):

' → logprob: -9.646827697753906

Token 231: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -9.968312951968983e-06
    2. ' list' → logprob: -11.625009536743164
    3. ')' → logprob: -14.625009536743164
    4. '   ' → logprob: -14.875009536743164
    5. 'List' → logprob: -16.625009536743164
    6. '(list' → logprob: -17.125009536743164
    7. '):' → logprob: -17.250009536743164
    8. ':list' → logprob: -18.000009536743164
    9. '       ' → logprob: -19.000009536743164
    10. '):
' → logprob: -19.125009536743164

Token 232: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.02653447911143303
    2. '):
' → logprob: -3.6515345573425293
    3. ')' → logprob: -9.026534080505371
    4. '):

' → logprob: -10.151534080505371
    5. '[int' → logprob: -10.901534080505371
    6. '   ' → logprob: -11.026534080505371
    7. ':' → logprob: -11.026534080505371
    8. '**' → logprob: -11.651534080505371
    9. '):
' → logprob: -12.526534080505371
    10. ' ):' → logprob: -12.651534080505371

Token 233: ' Liste' (ID: 61030)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.6696977019309998
    2. '   ' → logprob: -0.9196977019309998
    3. 'list' → logprob: -2.4196977615356445
    4. '       ' → logprob: -8.169697761535645
    5. 'List' → logprob: -8.794697761535645
    6. 'int' → logprob: -10.419697761535645
    7. '```' → logprob: -10.919697761535645
    8. ' ' → logprob: -11.044697761535645
    9. '  ' → logprob: -11.544697761535645
    10. ')' → logprob: -11.669697761535645

Token 234: ' d' (ID: 272)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.47270074486732483
    2. ' des' → logprob: -1.2227007150650024
    3. '   ' → logprob: -3.097700834274292
    4. 'des' → logprob: -4.472700595855713
    5. ' of' → logprob: -4.847700595855713
    6. ' de' → logprob: -5.347700595855713
    7. ':' → logprob: -5.847700595855713
    8. '<int' → logprob: -5.972700595855713
    9. ')' → logprob: -6.097700595855713
    10. 'd' → logprob: -6.847700595855713

Token 235: ''ent' (ID: 53422)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.27798572182655334
    2. ''ent' → logprob: -1.902985692024231
    3. '[int' → logprob: -3.6529858112335205
    4. '<int' → logprob: -3.6529858112335205
    5. 'ent' → logprob: -3.9029858112335205
    6. 'ints' → logprob: -4.777985572814941
    7. ''int' → logprob: -5.152985572814941
    8. ' int' → logprob: -5.777985572814941
    9. '(int' → logprob: -6.777985572814941
    10. ' ent' → logprob: -7.027985572814941

Token 236: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -4.632542913896032e-05
    2. 'ières' → logprob: -10.500046730041504
    3. 'i' → logprob: -11.625046730041504
    4. 'ers' → logprob: -12.500046730041504
    5. '```' → logprob: -12.875046730041504
    6. 'ier' → logprob: -12.875046730041504
    7. '   ' → logprob: -14.750046730041504
    8. 'eurs' → logprob: -16.875045776367188
    9. 'I' → logprob: -17.125045776367188
    10. 'ière' → logprob: -17.375045776367188

Token 237: '.
' (ID: 558)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4636797606945038
    2. '   ' → logprob: -1.7136797904968262
    3. '):
' → logprob: -1.7136797904968262
    4. '[int' → logprob: -5.213679790496826
    5. ')' → logprob: -5.338679790496826
    6. ' ):' → logprob: -9.088679313659668
    7. '):
' → logprob: -9.338679313659668
    8. ' ):
' → logprob: -9.963679313659668
    9. '):

' → logprob: -10.588679313659668
    10. '<int' → logprob: -10.838679313659668

Token 238: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -9.043078898685053e-05
    2. '"""' → logprob: -10.125090599060059
    3. ')' → logprob: -10.375090599060059
    4. '"""
' → logprob: -11.750090599060059
    5. '       ' → logprob: -12.000090599060059
    6. '```' → logprob: -12.625090599060059
    7. '
' → logprob: -14.500090599060059
    8. '):
' → logprob: -14.750090599060059
    9. ')
' → logprob: -15.125090599060059
    10. '")' → logprob: -16.375089645385742

Token 239: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005164555623196065
    2. '"""' → logprob: -7.750516414642334
    3. '       ' → logprob: -10.375516891479492
    4. ' """' → logprob: -10.625516891479492
    5. '"""
' (adapté à ' """
') → logprob: -11.000516891479492
    6. ')' → logprob: -11.625516891479492
    7. ' """
' → logprob: -12.750516891479492
    8. '```' → logprob: -14.250516891479492
    9. 'def' → logprob: -15.000516891479492
    10. 'Returns' → logprob: -15.500516891479492

Token 240: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014475388452410698
    2. 'max' → logprob: -4.264475345611572
    3. 'if' → logprob: -8.26447582244873
    4. ' max' → logprob: -11.01447582244873
    5. 'n' → logprob: -11.26447582244873
    6. ' if' → logprob: -11.63947582244873
    7. 'def' → logprob: -12.38947582244873
    8. '    
' → logprob: -12.51447582244873
    9. 'maximum' → logprob: -12.76447582244873
    10. '#' → logprob: -13.38947582244873

Token 241: ' import' (ID: 1588)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.15398873388767242
    2. 'if' → logprob: -2.028988838195801
    3. 'n' → logprob: -5.528988838195801
    4. '#' → logprob: -6.403988838195801
    5. 'maximum' → logprob: -6.528988838195801
    6. '   ' → logprob: -6.778988838195801
    7. 'sorted' → logprob: -6.778988838195801
    8. 'values' → logprob: -7.278988838195801
    9. 'temp' → logprob: -7.903988838195801
    10. 'copy' → logprob: -8.0289888381958

Token 242: ' copy' (ID: 5150)
  Prédit: 'copy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'copy' → logprob: -0.040617525577545166
    2. ' copy' → logprob: -3.2906174659729004
    3. 'collections' → logprob: -6.5406174659729
    4. 'heap' → logprob: -6.9156174659729
    5. ' heap' → logprob: -10.040617942810059
    6. 'bis' → logprob: -10.540617942810059
    7. 'math' → logprob: -10.790617942810059
    8. 'statistics' → logprob: -10.915617942810059
    9. 'sys' → logprob: -11.540617942810059
    10. '_copy' → logprob: -11.540617942810059

Token 243: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3643667697906494
    2. '   ' → logprob: -1.2393667697906494
    3. 'values' → logprob: -4.98936653137207
    4. 'max' → logprob: -5.36436653137207
    5. '    
' → logprob: -5.98936653137207
    6. '
' → logprob: -7.61436653137207
    7. ' values' → logprob: -7.98936653137207
    8. ' max' → logprob: -8.61436653137207
    9. '  
' → logprob: -8.73936653137207
    10. '

' → logprob: -9.11436653137207

Token 244: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9143102765083313
    2. 'values' → logprob: -1.2893102169036865
    3. '
' → logprob: -1.4143102169036865
    4. 'max' → logprob: -2.6643102169036865
    5. '    
' → logprob: -5.039310455322266
    6. '#' → logprob: -6.289310455322266
    7. 'vals' → logprob: -7.414310455322266
    8. 'n' → logprob: -7.789310455322266
    9. 'sorted' → logprob: -8.664310455322266
    10. ' values' → logprob: -8.664310455322266

Token 245: ' Ce' (ID: 14228)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.7646307945251465
    2. 'values' → logprob: -1.2646307945251465
    3. '#' → logprob: -1.8896307945251465
    4. '   ' → logprob: -2.7646307945251465
    5. 'temp' → logprob: -4.2646307945251465
    6. 'copy' → logprob: -5.1396307945251465
    7. ' values' → logprob: -5.8896307945251465
    8. 'sorted' → logprob: -6.3896307945251465
    9. 'cop' → logprob: -6.5146307945251465
    10. ' max' → logprob: -6.5146307945251465

Token 246: ' module' (ID: 8827)
  Prédit: ' copy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' copy' → logprob: -0.3426339328289032
    2. ' line' → logprob: -2.5926339626312256
    3. ' est' → logprob: -2.7176339626312256
    4. ' import' → logprob: -3.5926339626312256
    5. 'import' → logprob: -4.2176337242126465
    6. ' is' → logprob: -4.2176337242126465
    7. ' deepcopy' → logprob: -4.2176337242126465
    8. ' unnecessary' → logprob: -4.3426337242126465
    9. 'copy' → logprob: -4.3426337242126465
    10. ' n' → logprob: -4.7176337242126465

Token 247: ' permet' (ID: 11798)
  Prédit: ' est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.06026138737797737
    2. 'est' → logprob: -3.0602614879608154
    3. ' already' → logprob: -5.935261249542236
    4. ' is' → logprob: -6.185261249542236
    5. 'already' → logprob: -6.310261249542236
    6. ' déjà' → logprob: -7.435261249542236
    7. 'import' → logprob: -7.560261249542236
    8. ' a' → logprob: -7.685261249542236
    9. ' n' → logprob: -7.685261249542236
    10. 'n' → logprob: -7.935261249542236

Token 248: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.5809808969497681
    2. ' de' → logprob: -1.080980896949768
    3. 'd' → logprob: -2.4559807777404785
    4. 'deep' → logprob: -5.5809807777404785
    5. 'une' → logprob: -5.9559807777404785
    6. ' d' → logprob: -5.9559807777404785
    7. 'copy' → logprob: -6.0809807777404785
    8. 'la' → logprob: -6.8309807777404785
    9. 'cop' → logprob: -7.5809807777404785
    10. ' la' → logprob: -7.5809807777404785

Token 249: ' créer' (ID: 40938)
  Prédit: 'copy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'copy' → logprob: -0.8086187839508057
    2. 'deep' → logprob: -1.3086187839508057
    3. 'cop' → logprob: -1.9336187839508057
    4. ' deepcopy' → logprob: -2.1836187839508057
    5. '.deepcopy' → logprob: -4.808618545532227
    6. ' deep' → logprob: -5.183618545532227
    7. ' copy' → logprob: -5.683618545532227
    8. 'make' → logprob: -5.808618545532227
    9. 'faire' → logprob: -6.433618545532227
    10. ' copier' → logprob: -7.058618545532227

Token 250: ' une' (ID: 2463)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'une' → logprob: -0.4146510362625122
    2. ' des' → logprob: -2.0396509170532227
    3. 'des' → logprob: -2.1646509170532227
    4. ' une' → logprob: -2.4146509170532227
    5. '.deepcopy' → logprob: -6.289650917053223
    6. ' deepcopy' → logprob: -6.789650917053223
    7. 'deep' → logprob: -7.039650917053223
    8. 'copies' → logprob: -7.789650917053223
    9. 'cop' → logprob: -8.289650917053223
    10. ' copies' → logprob: -9.039650917053223

Token 251: ' copie' (ID: 134141)
  Prédit: 'deep'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deep' → logprob: -0.37534794211387634
    2. 'cop' → logprob: -2.250347852706909
    3. ' copie' → logprob: -2.500347852706909
    4. ' deep' → logprob: -3.000347852706909
    5. ' deepcopy' → logprob: -3.375347852706909
    6. 'copy' → logprob: -3.875347852706909
    7. 'liste' → logprob: -4.125348091125488
    8. '.deepcopy' → logprob: -6.750348091125488
    9. ' copy' → logprob: -6.875348091125488
    10. ' liste' → logprob: -7.250348091125488

Token 252: ' superfic' (ID: 36018)
  Prédit: '.deepcopy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.deepcopy' → logprob: -0.3219814598560333
    2. 'deep' → logprob: -2.196981430053711
    3. ' profonde' → logprob: -2.321981430053711
    4. ' complète' → logprob: -3.446981430053711
    5. 'prof' → logprob: -3.821981430053711
    6. ' deepcopy' → logprob: -5.571981430053711
    7. '   ' → logprob: -6.571981430053711
    8. 'de' → logprob: -6.946981430053711
    9. ' prof' → logprob: -7.196981430053711
    10. ' profond' → logprob: -7.321981430053711

Token 253: 'ielle' (ID: 22380)
  Prédit: 'ic'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ic' → logprob: -0.6108089685440063
    2. 'ielle' → logprob: -0.8608089685440063
    3. 'ique' → logprob: -5.110808849334717
    4. 'ie' → logprob: -5.110808849334717
    5. 'iale' → logprob: -5.235808849334717
    6. '   ' → logprob: -5.735808849334717
    7. 'copy' → logprob: -5.985808849334717
    8. 'i' → logprob: -6.235808849334717
    9. 'icie' → logprob: -6.735808849334717
    10. 'ière' → logprob: -7.110808849334717

Token 254: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19457560777664185
    2. ' de' → logprob: -2.819575548171997
    3. '.deepcopy' → logprob: -2.944575548171997
    4. 'values' → logprob: -3.444575548171997
    5. 'de' → logprob: -4.944575786590576
    6. ' des' → logprob: -5.069575786590576
    7. '(values' → logprob: -5.319575786590576
    8. 'deep' → logprob: -5.944575786590576
    9. ' deepcopy' → logprob: -5.944575786590576
    10. ' of' → logprob: -6.319575786590576

Token 255: ' la' (ID: 557)
  Prédit: 'values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'values' → logprob: -0.06197351589798927
    2. ' values' → logprob: -2.8119735717773438
    3. '(values' → logprob: -12.311973571777344
    4. '	values' → logprob: -13.811973571777344
    5. '.values' → logprob: -15.436973571777344
    6. ' valeurs' → logprob: -16.811973571777344
    7. 'list' → logprob: -17.186973571777344
    8. '_values' → logprob: -17.311973571777344
    9. 'vals' → logprob: -18.061973571777344
    10. '-values' → logprob: -18.186973571777344

Token 256: ' liste' (ID: 31719)
  Prédit: 'values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'values' → logprob: -0.5330389142036438
    2. ' values' → logprob: -0.9080389142036438
    3. ' list' → logprob: -5.158039093017578
    4. 'list' → logprob: -5.658039093017578
    5. ' liste' → logprob: -8.408039093017578
    6. 'liste' → logprob: -8.658039093017578
    7. ' valeurs' → logprob: -9.283039093017578
    8. 'val' → logprob: -9.533039093017578
    9. 'vals' → logprob: -11.908039093017578
    10. 'lists' → logprob: -12.033039093017578

Token 257: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19438669085502625
    2. '
' → logprob: -1.9443867206573486
    3. '    
' → logprob: -3.5693867206573486
    4. 'values' → logprob: -5.6943864822387695
    5. '<|end|>' → logprob: -7.8193864822387695
    6. '

' → logprob: -7.9443864822387695
    7. '
' → logprob: -8.81938648223877
    8. '  
' → logprob: -8.94438648223877
    9. ',' → logprob: -9.19438648223877
    10. '
    
' → logprob: -9.31938648223877

Token 258: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.35922712087631226
    2. 'max' → logprob: -1.984227180480957
    3. '
' → logprob: -2.109227180480957
    4. '    
' → logprob: -4.109227180480957
    5. 'values' → logprob: -4.234227180480957
    6. ' max' → logprob: -4.734227180480957
    7. ' values' → logprob: -6.609227180480957
    8. '#' → logprob: -7.609227180480957
    9. 'n' → logprob: -8.734227180480957
    10. 'sorted' → logprob: -8.859227180480957

Token 259: ' #' (ID: 1069)
  Prédit: 'values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'values' → logprob: -0.38950997591018677
    2. 'max' → logprob: -1.514509916305542
    3. 'temp' → logprob: -3.014509916305542
    4. 'cop' → logprob: -3.764509916305542
    5. 'copy' → logprob: -5.264510154724121
    6. 'n' → logprob: -5.389510154724121
    7. 'vals' → logprob: -5.389510154724121
    8. '#' (adapté à ' #') → logprob: -5.514510154724121
    9. '   ' → logprob: -5.639510154724121
    10. 'val' → logprob: -6.264510154724121

Token 260: ' Trou' (ID: 58947)
  Prédit: 'values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'values' → logprob: -0.46045157313346863
    2. 'max' → logprob: -2.085451602935791
    3. 'temp' → logprob: -2.585451602935791
    4. 'if' → logprob: -2.835451602935791
    5. 'cop' → logprob: -2.835451602935791
    6. '   ' → logprob: -4.710451602935791
    7. '#' → logprob: -4.835451602935791
    8. 'copy' → logprob: -4.960451602935791
    9. ' values' → logprob: -5.085451602935791
    10. 'vals' → logprob: -5.210451602935791

Token 261: 've' (ID: 737)
  Prédit: 'ver'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ver' → logprob: -0.102904312312603
    2. 've' → logprob: -2.4779043197631836
    3. 'vez' → logprob: -4.727904319763184
    4. 'v' → logprob: -5.602904319763184
    5. '   ' → logprob: -7.102904319763184
    6. 'vé' → logprob: -8.352904319763184
    7. 'ves' → logprob: -9.102904319763184
    8. '#' → logprob: -9.852904319763184
    9. 'er' → logprob: -10.352904319763184
    10. 'cher' → logprob: -10.852904319763184

Token 262: ' la' (ID: 557)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.4812116324901581
    2. ' le' → logprob: -1.1062116622924805
    3. ' la' → logprob: -3.3562116622924805
    4. 'max' → logprob: -4.9812116622924805
    5. '   ' → logprob: -5.8562116622924805
    6. ' the' → logprob: -6.2312116622924805
    7. ' maximum' → logprob: -6.3562116622924805
    8. ' l' → logprob: -6.6062116622924805
    9. 'le' → logprob: -7.6062116622924805
    10. ' ' → logprob: -8.48121166229248

Token 263: ' valeur' (ID: 41664)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.03709127753973007
    2. 'maximum' → logprob: -3.4120912551879883
    3. 'val' → logprob: -6.037091255187988
    4. 'cop' → logprob: -8.162091255187988
    5. 'copy' → logprob: -8.287091255187988
    6. ' max' → logprob: -9.037091255187988
    7. 'liste' → logprob: -9.162091255187988
    8. 'largest' → logprob: -9.787091255187988
    9. 'temp' → logprob: -10.037091255187988
    10. 'values' → logprob: -10.162091255187988

Token 264: ' maximale' (ID: 76380)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.12057957053184509
    2. '_max' → logprob: -2.870579481124878
    3. ' max' → logprob: -3.370579481124878
    4. ' maximale' → logprob: -4.120579719543457
    5. ' maximum' → logprob: -5.870579719543457
    6. 'maximum' → logprob: -6.120579719543457
    7. '_' → logprob: -7.745579719543457
    8. '   ' → logprob: -7.870579719543457
    9. ' maximal' → logprob: -8.370579719543457
    10. '	max' → logprob: -9.370579719543457

Token 265: ' de' (ID: 334)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.6500276923179626
    2. ' =' → logprob: -1.2750277519226074
    3. '   ' → logprob: -2.1500277519226074
    4. ' max' → logprob: -3.5250277519226074
    5. 'values' → logprob: -3.6500277519226074
    6. '_max' → logprob: -4.150027751922607
    7. '_values' → logprob: -6.025027751922607
    8. '=' → logprob: -6.275027751922607
    9. ' values' → logprob: -6.775027751922607
    10. 'val' → logprob: -6.900027751922607

Token 266: ' la' (ID: 557)
  Prédit: ' values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' values' → logprob: -0.5278013348579407
    2. 'values' → logprob: -1.027801275253296
    3. ' la' → logprob: -3.027801275253296
    4. '(values' → logprob: -6.402801513671875
    5. ' valeurs' → logprob: -6.902801513671875
    6. 'val' → logprob: -8.027801513671875
    7. 'la' → logprob: -8.152801513671875
    8. ' the' → logprob: -8.402801513671875
    9. '	values' → logprob: -9.027801513671875
    10. ' val' → logprob: -10.402801513671875

Token 267: ' liste' (ID: 31719)
  Prédit: 'values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'values' → logprob: -0.09102669358253479
    2. ' values' → logprob: -2.466026782989502
    3. 'list' → logprob: -6.841026782989502
    4. 'val' → logprob: -7.716026782989502
    5. ' list' → logprob: -8.966026306152344
    6. ' valeurs' → logprob: -9.091026306152344
    7. 'liste' → logprob: -9.091026306152344
    8. 'copy' → logprob: -9.966026306152344
    9. 'vals' → logprob: -10.091026306152344
    10. 'max' → logprob: -10.591026306152344

Token 268: '
' (ID: 198)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.26863861083984375
    2. '   ' → logprob: -1.7686386108398438
    3. ' max' → logprob: -2.8936386108398438
    4. 'maximum' → logprob: -5.643638610839844
    5. ' maximum' → logprob: -6.143638610839844
    6. '    
' → logprob: -6.893638610839844
    7. ' =' → logprob: -7.018638610839844
    8. '
' → logprob: -7.268638610839844
    9. '_max' → logprob: -8.018638610839844
    10. '	max' → logprob: -8.268638610839844

Token 269: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6763634085655212
    2. 'max' → logprob: -0.8013634085655212
    3. ' max' → logprob: -3.176363468170166
    4. 'maximum' → logprob: -7.301363468170166
    5. ' maximum' → logprob: -8.051362991333008
    6. '	max' → logprob: -10.551362991333008
    7. '```' → logprob: -11.301362991333008
    8. '_max' → logprob: -11.926362991333008
    9. '  ' → logprob: -11.926362991333008
    10. '    
' → logprob: -12.176362991333008

Token 270: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -0.0034235394559800625
    2. ' max' → logprob: -6.128423690795898
    3. 'maximum' → logprob: -6.753423690795898
    4. '   ' → logprob: -9.878423690795898
    5. ' maximum' → logprob: -11.128423690795898
    6. 'current' → logprob: -13.503423690795898
    7. '	max' → logprob: -14.253423690795898
    8. 'values' → logprob: -14.503423690795898
    9. '_max' → logprob: -14.628423690795898
    10. 'ma' → logprob: -15.378423690795898

Token 271: '_value' (ID: 6734)
  Prédit: '_val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -0.39094921946525574
    2. '_value' → logprob: -1.1409492492675781
    3. '_' → logprob: -5.640949249267578
    4. '_values' → logprob: -7.640949249267578
    5. 'val' → logprob: -10.390949249267578
    6. '_v' → logprob: -13.515949249267578
    7. '_vals' → logprob: -13.515949249267578
    8. 'Vale' → logprob: -13.765949249267578
    9. 'Val' → logprob: -13.890949249267578
    10. 'imum' → logprob: -14.015949249267578

Token 272: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10021001845598221
    2. '=' → logprob: -2.350209951400757
    3. '   ' → logprob: -12.850210189819336
    4. '=max' → logprob: -15.350210189819336
    5. 's' → logprob: -15.475210189819336
    6. ')' → logprob: -16.100210189819336
    7. ',' → logprob: -16.475210189819336
    8. ' ' → logprob: -16.600210189819336
    9. 'values' → logprob: -16.725210189819336
    10. '_' → logprob: -16.850210189819336

Token 273: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.061983149498701096
    2. 'max' → logprob: -2.811983108520508
    3. ' copy' → logprob: -11.561983108520508
    4. 'copy' → logprob: -12.311983108520508
    5. '   ' → logprob: -14.061983108520508
    6. '(max' → logprob: -15.061983108520508
    7. '	max' → logprob: -16.061983108520508
    8. ' maximum' → logprob: -16.561983108520508
    9. ' ' → logprob: -17.186983108520508
    10. '_max' → logprob: -17.811983108520508

Token 274: '(values' (ID: 40883)
  Prédit: '(values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(values' → logprob: -0.00034750174381770194
    2. '(' → logprob: -8.750347137451172
    3. 'values' → logprob: -8.750347137451172
    4. ' values' → logprob: -11.125347137451172
    5. '(copy' → logprob: -11.375347137451172
    6. ' (' → logprob: -12.750347137451172
    7. '(value' → logprob: -14.250347137451172
    8. 'copy' → logprob: -15.375347137451172
    9. '	values' → logprob: -15.750347137451172
    10. '.values' → logprob: -16.000347137451172

Token 275: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009567205561324954
    2. ')
' → logprob: -7.0009565353393555
    3. '   ' → logprob: -10.375956535339355
    4. ' )' → logprob: -11.500956535339355
    5. ')

' → logprob: -12.875956535339355
    6. ')
' → logprob: -14.500956535339355
    7. ' ' → logprob: -15.500956535339355
    8. ',' → logprob: -16.250957489013672
    9. ' )
' → logprob: -16.250957489013672
    10. '))' → logprob: -16.250957489013672

Token 276: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.40119388699531555
    2. '   ' → logprob: -1.1511938571929932
    3. '    
' → logprob: -4.276194095611572
    4. '  
' → logprob: -9.526193618774414
    5. '#' → logprob: -9.901193618774414
    6. ' 
' → logprob: -10.151193618774414
    7. '
' → logprob: -10.151193618774414
    8. '\n' → logprob: -10.651193618774414
    9. '   
' → logprob: -11.151193618774414
    10. '

' → logprob: -11.401193618774414

Token 277: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06302975863218307
    2. 'second' → logprob: -3.1880297660827637
    3. 'values' → logprob: -5.313029766082764
    4. '#' (adapté à ' #') → logprob: -5.563029766082764
    5. 'max' → logprob: -5.688029766082764
    6. '    
' → logprob: -6.063029766082764
    7. 'temp' → logprob: -6.313029766082764
    8. 'copy' → logprob: -7.063029766082764
    9. ' second' → logprob: -7.688029766082764
    10. 'for' → logprob: -7.813029766082764

Token 278: ' F' (ID: 454)
  Prédit: 'second'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'second' → logprob: -1.0586585998535156
    2. '#' → logprob: -1.4336585998535156
    3. 'values' → logprob: -2.3086585998535156
    4. ' second' → logprob: -2.4336585998535156
    5. 'temp' → logprob: -3.1836585998535156
    6. ' values' → logprob: -3.3086585998535156
    7. 'max' → logprob: -3.5586585998535156
    8. ' temp' → logprob: -3.8086585998535156
    9. 'copy' → logprob: -4.058658599853516
    10. ' copy' → logprob: -4.183658599853516

Token 279: 'ait' (ID: 1271)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.11895744502544403
    2. 'values' → logprob: -3.24395751953125
    3. '#' → logprob: -3.74395751953125
    4. 'irst' → logprob: -3.99395751953125
    5. 'second' → logprob: -5.11895751953125
    6. 'rom' → logprob: -5.24395751953125
    7. 'aux' → logprob: -5.86895751953125
    8. '   ' → logprob: -5.86895751953125
    9. 'ilter' → logprob: -6.24395751953125
    10. 'for' → logprob: -6.24395751953125

Token 280: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.5795774459838867
    2. ' copy' → logprob: -1.9545774459838867
    3. ' copie' → logprob: -1.9545774459838867
    4. ' a' → logprob: -2.5795774459838867
    5. '_copy' → logprob: -3.7045774459838867
    6. 'copy' → logprob: -4.204577445983887
    7. 'a' → logprob: -5.079577445983887
    8. '_values' → logprob: -5.079577445983887
    9. ' values' → logprob: -5.079577445983887
    10. 'cop' → logprob: -5.329577445983887

Token 281: ' copie' (ID: 134141)
  Prédit: ' copy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' copy' → logprob: -0.19916900992393494
    2. 'copy' → logprob: -2.1991689205169678
    3. ' copie' → logprob: -2.8241689205169678
    4. 'cop' → logprob: -5.199169158935547
    5. ' values' → logprob: -6.324169158935547
    6. 'values' → logprob: -6.574169158935547
    7. '_copy' → logprob: -7.949169158935547
    8. ' shallow' → logprob: -7.949169158935547
    9. ' copied' → logprob: -8.199169158935547
    10. ' copia' → logprob: -8.949169158935547

Token 282: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.5082759857177734
    2. 'cop' → logprob: -2.2582759857177734
    3. ' superficial' → logprob: -2.3832759857177734
    4. ' copie' → logprob: -2.6332759857177734
    5. ' copy' → logprob: -2.7582759857177734
    6. 'values' → logprob: -2.7582759857177734
    7. ' values' → logprob: -2.8832759857177734
    8. '_values' → logprob: -2.8832759857177734
    9. ' superfic' → logprob: -3.1332759857177734
    10. '.deepcopy' → logprob: -3.2582759857177734

Token 283: ' la' (ID: 557)
  Prédit: 'values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'values' → logprob: -0.013086585327982903
    2. ' values' → logprob: -4.388086795806885
    3. '(values' → logprob: -7.513086795806885
    4. 'copy' → logprob: -10.638086318969727
    5. 'val' → logprob: -13.638086318969727
    6. ' copy' → logprob: -13.888086318969727
    7. 'the' → logprob: -14.013086318969727
    8. 'vals' → logprob: -14.138086318969727
    9. '	values' → logprob: -14.138086318969727
    10. '.values' → logprob: -14.638086318969727

Token 284: ' liste' (ID: 31719)
  Prédit: 'values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'values' → logprob: -0.08902453631162643
    2. ' values' → logprob: -2.464024543762207
    3. 'list' → logprob: -10.464024543762207
    4. 'copy' → logprob: -10.714024543762207
    5. 'val' → logprob: -11.839024543762207
    6. ' list' → logprob: -11.964024543762207
    7. ' valeurs' → logprob: -12.214024543762207
    8. ' copy' → logprob: -12.714024543762207
    9. 'value' → logprob: -13.089024543762207
    10. '	values' → logprob: -13.214024543762207

Token 285: ' d' (ID: 272)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13593627512454987
    2. ' values' → logprob: -3.0109362602233887
    3. ' temp' → logprob: -3.3859362602233887
    4. 'values' → logprob: -3.8859362602233887
    5. 'temp' → logprob: -4.885936260223389
    6. 'sub' → logprob: -5.635936260223389
    7. ' copied' → logprob: -5.885936260223389
    8. ' copie' → logprob: -6.010936260223389
    9. ' copy' → logprob: -6.260936260223389
    10. ' sub' → logprob: -7.135936260223389

Token 286: ''origine' (ID: 89355)
  Prédit: 'values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'values' → logprob: -0.029752686619758606
    2. ' values' → logprob: -4.029752731323242
    3. 'e' → logprob: -5.279752731323242
    4. '(values' → logprob: -5.404752731323242
    5. '_values' → logprob: -7.154752731323242
    6. '	values' → logprob: -8.154752731323242
    7. 'es' → logprob: -8.529752731323242
    8. ' valeurs' → logprob: -9.279752731323242
    9. 'uplic' → logprob: -9.529752731323242
    10. 'eep' → logprob: -9.654752731323242

Token 287: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09353538602590561
    2. ' values' → logprob: -3.4685354232788086
    3. 'values' → logprob: -4.593535423278809
    4. 'sub' → logprob: -4.718535423278809
    5. ' temp' → logprob: -4.718535423278809
    6. ' copied' → logprob: -4.718535423278809
    7. ' copy' → logprob: -5.343535423278809
    8. ' other' → logprob: -5.968535423278809
    9. 'temp' → logprob: -6.093535423278809
    10. ' sub' → logprob: -6.468535423278809

Token 288: ' la' (ID: 557)
  Prédit: 'modifier'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'modifier' → logprob: -0.8288302421569824
    2. ' manip' → logprob: -1.5788302421569824
    3. 'man' → logprob: -1.9538302421569824
    4. ' éviter' → logprob: -2.9538302421569824
    5. ' modifier' → logprob: -3.2038302421569824
    6. ' pouvoir' → logprob: -3.5788302421569824
    7. ' manipulation' → logprob: -4.578830242156982
    8. 'y' → logprob: -4.703830242156982
    9. 'mod' → logprob: -4.828830242156982
    10. 'tr' → logprob: -4.828830242156982

Token 289: ' comparaison' (ID: 170508)
  Prédit: 'man'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'man' → logprob: -1.7811903953552246
    2. 'trait' → logprob: -1.9061903953552246
    3. 'modifier' → logprob: -2.2811903953552246
    4. 'copy' → logprob: -2.4061903953552246
    5. 'for' → logprob: -2.6561903953552246
    6. ' traiter' → logprob: -2.7811903953552246
    7. ' manipulation' → logprob: -2.7811903953552246
    8. ' parcour' → logprob: -3.2811903953552246
    9. 'mod' → logprob: -3.4061903953552246
    10. 'each' → logprob: -3.5311903953552246

Token 290: ' ult' (ID: 11619)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2852824926376343
    2. ' temp' → logprob: -2.535282611846924
    3. ' values' → logprob: -2.660282611846924
    4. 'values' → logprob: -3.660282611846924
    5. ' max' → logprob: -4.035282611846924
    6. 'sub' → logprob: -4.285282611846924
    7. 'temp' → logprob: -4.785282611846924
    8. ' copy' → logprob: -4.910282611846924
    9. 'max' → logprob: -5.535282611846924
    10. ' copied' → logprob: -5.535282611846924

Token 291: 'érieure' (ID: 45836)
  Prédit: 'érieure'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érieure' → logprob: -0.0002465582510922104
    2. 'érieur' → logprob: -8.37524700164795
    3. '   ' → logprob: -12.37524700164795
    4. 'é' → logprob: -12.37524700164795
    5. 'er' → logprob: -12.87524700164795
    6. 'érie' → logprob: -13.12524700164795
    7. 'éri' → logprob: -13.75024700164795
    8. 'è' → logprob: -14.12524700164795
    9. 'érieures' → logprob: -14.75024700164795
    10. '       ' → logprob: -15.62524700164795

Token 292: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10337655246257782
    2. ' values' → logprob: -3.228376626968384
    3. ' temp' → logprob: -4.103376388549805
    4. 'values' → logprob: -4.603376388549805
    5. 'sub' → logprob: -4.978376388549805
    6. ' copied' → logprob: -5.603376388549805
    7. 'temp' → logprob: -5.853376388549805
    8. ' max' → logprob: -5.853376388549805
    9. ' copy' → logprob: -5.978376388549805
    10. ' sub' → logprob: -6.228376388549805

Token 293: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31727319955825806
    2. ' values' → logprob: -2.3172731399536133
    3. ' temp' → logprob: -2.8172731399536133
    4. 'values' → logprob: -3.4422731399536133
    5. ' copied' → logprob: -3.9422731399536133
    6. ' max' → logprob: -4.442273139953613
    7. ' for' → logprob: -4.442273139953613
    8. 'temp' → logprob: -4.692273139953613
    9. ' copy' → logprob: -4.692273139953613
    10. ' original' → logprob: -5.692273139953613

Token 294: ' original' (ID: 4756)
  Prédit: 'values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'values' → logprob: -0.29786261916160583
    2. 'temp' → logprob: -1.5478626489639282
    3. 'cop' → logprob: -3.9228625297546387
    4. 'copy' → logprob: -4.547862529754639
    5. ' temp' → logprob: -5.172862529754639
    6. ' values' → logprob: -5.422862529754639
    7. 'max' → logprob: -6.672862529754639
    8. 'sub' → logprob: -7.047862529754639
    9. '   ' → logprob: -7.172862529754639
    10. 'tmp' → logprob: -7.672862529754639

Token 295: '_values' (ID: 20393)
  Prédit: '_values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_values' → logprob: -0.0025304758455604315
    2. '_list' → logprob: -6.002530574798584
    3. 'values' → logprob: -10.877530097961426
    4. '_' → logprob: -10.877530097961426
    5. '_copy' → logprob: -11.877530097961426
    6. '_vals' → logprob: -12.627530097961426
    7. ' =' → logprob: -13.252530097961426
    8. 's' → logprob: -13.252530097961426
    9. 'Values' → logprob: -13.627530097961426
    10. '_value' → logprob: -14.252530097961426

Token 296: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023246755823493004
    2. '=' → logprob: -3.7732467651367188
    3. ' ' → logprob: -14.648246765136719
    4. 's' → logprob: -15.273246765136719
    5. '_copy' → logprob: -16.39824676513672
    6. '[:]' → logprob: -16.39824676513672
    7. ',' → logprob: -16.52324676513672
    8. 'copy' → logprob: -16.64824676513672
    9. ')' → logprob: -17.02324676513672
    10. '.copy' → logprob: -17.27324676513672

Token 297: ' copy' (ID: 5150)
  Prédit: 'copy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'copy' → logprob: -0.2529512643814087
    2. ' copy' → logprob: -1.5029512643814087
    3. 'values' → logprob: -7.002951145172119
    4. ' values' → logprob: -9.127951622009277
    5. '   ' → logprob: -13.877951622009277
    6. '	copy' → logprob: -14.002951622009277
    7. 'Copy' → logprob: -14.627951622009277
    8. 'copies' → logprob: -15.127951622009277
    9. ' copies' → logprob: -15.252951622009277
    10. '.copy' → logprob: -15.252951622009277

Token 298: '.copy' (ID: 22925)
  Prédit: '.deepcopy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.deepcopy' → logprob: -0.3153762221336365
    2. '.copy' → logprob: -1.3153762817382812
    3. '.' → logprob: -6.565376281738281
    4. '.values' → logprob: -7.440376281738281
    5. '(values' → logprob: -9.065376281738281
    6. '(' → logprob: -14.940376281738281
    7. '[:]' → logprob: -15.315376281738281
    8. ' .' → logprob: -15.440376281738281
    9. 'values' → logprob: -15.565376281738281
    10. '(copy' → logprob: -16.19037628173828

Token 299: '(values' (ID: 40883)
  Prédit: '(values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(values' → logprob: -8.65707261255011e-06
    2. 'values' → logprob: -11.875008583068848
    3. ' (' → logprob: -13.625008583068848
    4. '(' → logprob: -15.125008583068848
    5. ' values' → logprob: -16.625009536743164
    6. '.values' → logprob: -17.250009536743164
    7. ')' → logprob: -18.000009536743164
    8. '(vals' → logprob: -18.000009536743164
    9. '	values' → logprob: -18.500009536743164
    10. '(numbers' → logprob: -18.875009536743164

Token 300: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0021397899836301804
    2. ')
' → logprob: -6.252139568328857
    3. '   ' → logprob: -8.502140045166016
    4. ')

' → logprob: -12.127140045166016
    5. ')
' → logprob: -13.502140045166016
    6. ' )' → logprob: -14.627140045166016
    7. '))' → logprob: -15.002140045166016
    8. '),' → logprob: -16.502140045166016
    9. ').' → logprob: -16.627140045166016
    10. '")' → logprob: -16.752140045166016

Token 301: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021054573357105255
    2. '
' → logprob: -4.271054744720459
    3. '    
' → logprob: -5.646054744720459
    4. 'for' → logprob: -5.896054744720459
    5. ' for' → logprob: -7.521054744720459
    6. '  
' → logprob: -11.7710542678833
    7. '   
' → logprob: -12.1460542678833
    8. '```' → logprob: -12.2710542678833
    9. 'values' → logprob: -12.3960542678833
    10. ' 
' → logprob: -12.7710542678833

Token 302: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.035121504217386246
    2. 'for' → logprob: -3.910121440887451
    3. ' for' → logprob: -4.910121440887451
    4. '    
' → logprob: -5.160121440887451
    5. '
' → logprob: -6.660121440887451
    6. '   
' → logprob: -11.16012191772461
    7. '  
' → logprob: -11.41012191772461
    8. '#' (adapté à ' #') → logprob: -12.03512191772461
    9. 'n' → logprob: -12.16012191772461
    10. 'max' → logprob: -12.28512191772461

Token 303: ' Sup' (ID: 13606)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.015737304463982582
    2. 'sub' → logprob: -4.640737533569336
    3. 'result' → logprob: -5.890737533569336
    4. '   ' → logprob: -6.265737533569336
    5. 'second' → logprob: -7.265737533569336
    6. 'max' → logprob: -8.765737533569336
    7. 'results' → logprob: -9.140737533569336
    8. ' for' → logprob: -9.765737533569336
    9. 'output' → logprob: -9.765737533569336
    10. 'modified' → logprob: -10.015737533569336

Token 304: 'prime' (ID: 46441)
  Prédit: 'prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prime' → logprob: -0.02127760648727417
    2. 'pr' → logprob: -4.52127742767334
    3. 'primer' → logprob: -5.02127742767334
    4. 'prim' → logprob: -6.52127742767334
    5. 'press' → logprob: -7.39627742767334
    6. 'prima' → logprob: -7.89627742767334
    7. 'r' → logprob: -8.39627742767334
    8. '   ' → logprob: -8.52127742767334
    9. '_prime' → logprob: -8.52127742767334
    10. '_values' → logprob: -9.39627742767334

Token 305: ' la' (ID: 557)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.29204586148262024
    2. '(max' → logprob: -1.5420458316802979
    3. ' max' → logprob: -3.292045831680298
    4. 'the' → logprob: -7.167046070098877
    5. 'all' → logprob: -7.917046070098877
    6. '   ' → logprob: -7.917046070098877
    7. ' the' → logprob: -8.792045593261719
    8. 'values' → logprob: -9.042045593261719
    9. 'original' → logprob: -9.667045593261719
    10. '[max' → logprob: -9.792045593261719

Token 306: ' première' (ID: 23423)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.02097134292125702
    2. ' max' → logprob: -3.8959712982177734
    3. 'maximum' → logprob: -8.895971298217773
    4. 'val' → logprob: -9.020971298217773
    5. 'original' → logprob: -9.770971298217773
    6. '[max' → logprob: -10.895971298217773
    7. ' original' → logprob: -11.145971298217773
    8. 'first' → logprob: -11.270971298217773
    9. ' maximum' → logprob: -11.395971298217773
    10. 'for' → logprob: -11.895971298217773

Token 307: ' occurrence' (ID: 55807)
  Prédit: 'occ'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'occ' → logprob: -0.7167918682098389
    2. ' occurrence' → logprob: -1.3417918682098389
    3. 'max' → logprob: -2.591791868209839
    4. 'occur' → logprob: -2.841791868209839
    5. '_occ' → logprob: -3.466791868209839
    6. '(max' → logprob: -3.591791868209839
    7. '_' → logprob: -4.466792106628418
    8. ' max' → logprob: -4.841792106628418
    9. '_values' → logprob: -5.466792106628418
    10. ' occur' → logprob: -5.466792106628418

Token 308: ' du' (ID: 1462)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.3240276575088501
    2. ' (' → logprob: -2.8240275382995605
    3. 'de' → logprob: -3.0740275382995605
    4. 'max' → logprob: -3.0740275382995605
    5. '(' → logprob: -3.4490275382995605
    6. ' max' → logprob: -3.8240275382995605
    7. ' of' → logprob: -4.0740275382995605
    8. '   ' → logprob: -4.1990275382995605
    9. ' du' → logprob: -4.8240275382995605
    10. '(max' → logprob: -4.8240275382995605

Token 309: ' maximum' (ID: 10562)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.02324768900871277
    2. ' max' → logprob: -3.773247718811035
    3. 'maximum' → logprob: -14.523247718811035
    4. '	max' → logprob: -14.648247718811035
    5. '(max' → logprob: -15.523247718811035
    6. 'value' → logprob: -15.523247718811035
    7. 'val' → logprob: -15.648247718811035
    8. '_max' → logprob: -15.648247718811035
    9. 'values' → logprob: -16.02324676513672
    10. 'min' → logprob: -16.02324676513672

Token 310: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08633549511432648
    2. ' values' → logprob: -3.5863354206085205
    3. 'values' → logprob: -4.0863356590271
    4. ' from' → logprob: -4.5863356590271
    5. ' max' → logprob: -5.2113356590271
    6. ' de' → logprob: -5.4613356590271
    7. 'max' → logprob: -5.7113356590271
    8. '    
' → logprob: -5.8363356590271
    9. ' dans' → logprob: -6.2113356590271
    10. ' original' → logprob: -6.2113356590271

Token 311: ' trouver' (ID: 23195)
  Prédit: 'calcul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calcul' → logprob: -1.4433910846710205
    2. ' pouvoir' → logprob: -1.6933910846710205
    3. ' traiter' → logprob: -1.9433910846710205
    4. 'trait' → logprob: -2.8183910846710205
    5. 'tr' → logprob: -2.9433910846710205
    6. ' permettre' → logprob: -3.0683910846710205
    7. ' trouver' → logprob: -3.4433910846710205
    8. 'values' → logprob: -3.5683910846710205
    9. ' calcul' → logprob: -3.5683910846710205
    10. ' éviter' → logprob: -3.6933910846710205

Token 312: ' le' (ID: 505)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.1553590297698975
    2. ' le' → logprob: -1.2803590297698975
    3. ' la' → logprob: -1.6553590297698975
    4. 'le' → logprob: -2.1553590297698975
    5. ' second' → logprob: -3.4053590297698975
    6. 'second' → logprob: -3.9053590297698975
    7. 'the' → logprob: -4.030359268188477
    8. 'la' → logprob: -4.405359268188477
    9. ' max' → logprob: -5.155359268188477
    10. 'max' → logprob: -5.280359268188477

Token 313: ' second' (ID: 3099)
  Prédit: 'second'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'second' → logprob: -0.034822434186935425
    2. ' second' → logprob: -3.409822463989258
    3. 'max' → logprob: -7.909822463989258
    4. 'se' → logprob: -8.909822463989258
    5. 'de' → logprob: -9.034822463989258
    6. '	second' → logprob: -9.159822463989258
    7. 'maximum' → logprob: -9.534822463989258
    8. 's' → logprob: -9.784822463989258
    9. ' deuxième' → logprob: -9.909822463989258
    10. '_second' → logprob: -10.159822463989258

Token 314: ' maximum' (ID: 10562)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.37592920660972595
    2. ' max' → logprob: -1.5009292364120483
    3. '_max' → logprob: -3.125929117202759
    4. 'maximum' → logprob: -3.625929117202759
    5. ' maximum' → logprob: -4.000929355621338
    6. ' maximal' → logprob: -7.750929355621338
    7. '	max' → logprob: -8.12592887878418
    8. '_' → logprob: -8.62592887878418
    9. '_value' → logprob: -9.00092887878418
    10. '   ' → logprob: -9.12592887878418

Token 315: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19225749373435974
    2. 'original' → logprob: -2.8172574043273926
    3. 'values' → logprob: -3.0672574043273926
    4. ' original' → logprob: -3.3172574043273926
    5. ' values' → logprob: -4.442257404327393
    6. 'max' → logprob: -4.692257404327393
    7. '    
' → logprob: -5.067257404327393
    8. ' max' → logprob: -6.442257404327393
    9. '
' → logprob: -6.567257404327393
    10. 'index' → logprob: -7.817257404327393

Token 316: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1338401436805725
    2. 'original' → logprob: -3.0088400840759277
    3. 'values' → logprob: -3.3838400840759277
    4. ' original' → logprob: -3.6338400840759277
    5. ' values' → logprob: -4.383840084075928
    6. 'second' → logprob: -7.008840084075928
    7. 'max' → logprob: -7.633840084075928
    8. '    
' → logprob: -8.008840560913086
    9. ' second' → logprob: -8.633840560913086
    10. 'copy' → logprob: -8.758840560913086

Token 317: ' values' (ID: 4824)
  Prédit: 'original'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'original' → logprob: -0.04358469694852829
    2. '   ' → logprob: -3.7935845851898193
    3. ' original' → logprob: -3.9185845851898193
    4. 'values' (adapté à ' values') → logprob: -8.543584823608398
    5. '    
' → logprob: -11.293584823608398
    6. 'max' → logprob: -11.418584823608398
    7. 'index' → logprob: -11.668584823608398
    8. ' values' → logprob: -12.168584823608398
    9. 'removed' → logprob: -12.668584823608398
    10. 'if' → logprob: -12.668584823608398

Token 318: '.remove' (ID: 7986)
  Prédit: '.remove'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.remove' → logprob: -0.00027087211492471397
    2. '.' → logprob: -8.25027084350586
    3. 'remove' → logprob: -11.62527084350586
    4. '.values' → logprob: -14.87527084350586
    5. 'values' → logprob: -15.62527084350586
    6. '.Remove' → logprob: -17.00027084350586
    7. ' .' → logprob: -17.00027084350586
    8. '.pop' → logprob: -17.12527084350586
    9. ' remove' → logprob: -17.37527084350586
    10. '   ' → logprob: -17.87527084350586

Token 319: '(max' (ID: 17178)
  Prédit: '(max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.029781844466924667
    2. 'max' → logprob: -3.5297818183898926
    3. ' max' → logprob: -10.77978229522705
    4. '(' → logprob: -11.52978229522705
    5. ',max' → logprob: -15.65478229522705
    6. '	max' → logprob: -15.65478229522705
    7. ' (' → logprob: -16.279781341552734
    8. '_max' → logprob: -16.404781341552734
    9. '[max' → logprob: -16.779781341552734
    10. '=max' → logprob: -17.154781341552734

Token 320: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -9.186122770188376e-05
    2. 'value' → logprob: -10.250091552734375
    3. '_values' → logprob: -10.500091552734375
    4. 'max' → logprob: -11.625091552734375
    5. '(max' → logprob: -12.125091552734375
    6. ')' → logprob: -12.250091552734375
    7. ')_' → logprob: -12.625091552734375
    8. '_' → logprob: -13.125091552734375
    9. '_max' → logprob: -13.375091552734375
    10. '(values' → logprob: -14.250091552734375

Token 321: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.47945886850357056
    2. ')
' → logprob: -0.9794588685035706
    3. '   ' → logprob: -5.229458808898926
    4. ')
' → logprob: -12.229458808898926
    5. ')

' → logprob: -12.979458808898926
    6. ' )
' → logprob: -13.604458808898926
    7. ' )' → logprob: -13.979458808898926
    8. '))' → logprob: -14.479458808898926
    9. 'max' → logprob: -14.729458808898926
    10. '")' → logprob: -16.104459762573242

Token 322: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07082096487283707
    2. 'second' → logprob: -2.6958210468292236
    3. ' second' → logprob: -7.1958208084106445
    4. '	second' → logprob: -10.070820808410645
    5. '    
' → logprob: -10.320820808410645
    6. 'if' → logprob: -10.695820808410645
    7. '
' → logprob: -11.320820808410645
    8. 'secondary' → logprob: -11.445820808410645
    9. 'sec' → logprob: -13.195820808410645
    10. 'se' → logprob: -13.195820808410645

Token 323: ' second' (ID: 3099)
  Prédit: 'second'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'second' (adapté à ' second') → logprob: -0.0029078235384076834
    2. ' second' → logprob: -6.127907752990723
    3. 'if' → logprob: -7.752907752990723
    4. '   ' → logprob: -8.252907752990723
    5. ' if' → logprob: -11.127907752990723
    6. 'sec' → logprob: -12.002907752990723
    7. 'max' → logprob: -12.252907752990723
    8. '#' → logprob: -12.627907752990723
    9. '    
' → logprob: -13.752907752990723
    10. '	second' → logprob: -13.877907752990723

Token 324: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.0005653033731505275
    2. '_value' → logprob: -7.625565528869629
    3. '_' → logprob: -10.000565528869629
    4. 'max' → logprob: -10.500565528869629
    5. ' _' → logprob: -13.250565528869629
    6. '_values' → logprob: -14.625565528869629
    7. '_val' → logprob: -14.750565528869629
    8. '_best' → logprob: -15.125565528869629
    9. '_min' → logprob: -15.250565528869629
    10. '_m' → logprob: -15.500565528869629

Token 325: ' =' (ID: 314)
  Prédit: '_value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.0007014761795289814
    2. '=' → logprob: -8.375701904296875
    3. ' =' → logprob: -8.500701904296875
    4. '_' → logprob: -8.750701904296875
    5. '_val' → logprob: -9.875701904296875
    6. '_values' → logprob: -10.500701904296875
    7. '=_' → logprob: -10.750701904296875
    8. ' _' → logprob: -12.375701904296875
    9. '_max' → logprob: -12.750701904296875
    10. 'value' → logprob: -14.250701904296875

Token 326: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.009757624007761478
    2. ' max' → logprob: -4.6347575187683105
    3. '   ' → logprob: -13.884757995605469
    4. '(max' → logprob: -14.759757995605469
    5. '	max' → logprob: -15.509757995605469
    6. ' ' → logprob: -16.88475799560547
    7. '0' → logprob: -17.00975799560547
    8. 'None' → logprob: -17.25975799560547
    9. '  ' → logprob: -17.38475799560547
    10. '[max' → logprob: -17.75975799560547

Token 327: '(values' (ID: 40883)
  Prédit: '(values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(values' → logprob: -0.0003372502396814525
    2. 'values' → logprob: -8.000337600708008
    3. '(' → logprob: -14.250337600708008
    4. '(value' → logprob: -14.875337600708008
    5. ' values' → logprob: -15.000337600708008
    6. '_values' → logprob: -15.500337600708008
    7. 'value' → logprob: -15.875337600708008
    8. '_value' → logprob: -17.125337600708008
    9. '.values' → logprob: -17.500337600708008
    10. '	values' → logprob: -17.750337600708008

Token 328: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00011713240382960066
    2. ' )' → logprob: -9.125117301940918
    3. ')
' → logprob: -11.875117301940918
    4. '   ' → logprob: -14.250117301940918
    5. '<|end|>' → logprob: -15.500117301940918
    6. '))' → logprob: -16.1251163482666
    7. '")' → logprob: -16.6251163482666
    8. ' ' → logprob: -17.2501163482666
    9. ')

' → logprob: -17.6251163482666
    10. ')#' → logprob: -17.7501163482666

Token 329: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.323320597410202
    2. '   ' → logprob: -1.3233206272125244
    3. ' for' → logprob: -4.948320388793945
    4. '    
' → logprob: -7.073320388793945
    5. 'print' → logprob: -7.073320388793945
    6. '
' → logprob: -7.448320388793945
    7. 'values' → logprob: -7.698320388793945
    8. '	for' → logprob: -8.823320388793945
    9. '  
' → logprob: -11.573320388793945
    10. '```' → logprob: -11.948320388793945

Token 330: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.029086539521813393
    2. '   ' → logprob: -4.154086589813232
    3. ' for' → logprob: -4.529086589813232
    4. 'print' → logprob: -6.654086589813232
    5. 'values' → logprob: -8.154086112976074
    6. '
' → logprob: -8.279086112976074
    7. '    
' → logprob: -8.654086112976074
    8. '	for' → logprob: -8.904086112976074
    9. '```' → logprob: -11.529086112976074
    10. '  
' → logprob: -11.654086112976074

Token 331: ' Parc' (ID: 68618)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -7.898723561083898e-05
    2. '   ' → logprob: -9.750079154968262
    3. ' for' → logprob: -10.875079154968262
    4. '
' → logprob: -13.750079154968262
    5. '    
' → logprob: -15.375079154968262
    6. 'values' → logprob: -15.500079154968262
    7. '	for' → logprob: -15.875079154968262
    8. 'original' → logprob: -16.750078201293945
    9. '#' → logprob: -17.125078201293945
    10. 'result' → logprob: -17.750078201293945

Token 332: 'ourt' (ID: 38600)
  Prédit: 'ours'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ours' → logprob: -0.34648245573043823
    2. 'ourt' → logprob: -1.471482515335083
    3. 'oure' → logprob: -2.846482515335083
    4. 'our' → logprob: -5.971482276916504
    5. 'ourse' → logprob: -6.346482276916504
    6. 'ou' → logprob: -8.096482276916504
    7. '_' → logprob: -8.346482276916504
    8. 'c' → logprob: -9.221482276916504
    9. 'court' → logprob: -9.846482276916504
    10. '#' → logprob: -10.346482276916504

Token 333: ' la' (ID: 557)
  Prédit: ' original'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' original' → logprob: -0.013650591485202312
    2. ' range' → logprob: -4.513650417327881
    3. ' for' → logprob: -6.638650417327881
    4. 'original' → logprob: -7.013650417327881
    5. ' values' → logprob: -8.388650894165039
    6. 'range' → logprob: -9.638650894165039
    7. 'for' → logprob: -10.263650894165039
    8. '(original' → logprob: -10.888650894165039
    9. ' the' → logprob: -11.763650894165039
    10. '   ' → logprob: -11.888650894165039

Token 334: ' liste' (ID: 31719)
  Prédit: 'original'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'original' → logprob: -0.20868952572345734
    2. ' original' → logprob: -1.833689570426941
    3. 'for' → logprob: -4.2086896896362305
    4. 'range' → logprob: -4.5836896896362305
    5. ' range' → logprob: -6.7086896896362305
    6. 'values' → logprob: -6.7086896896362305
    7. ' for' → logprob: -6.9586896896362305
    8. ' values' → logprob: -10.45868968963623
    9. 'orig' → logprob: -11.83368968963623
    10. 'origin' → logprob: -12.20868968963623

Token 335: ' copi' (ID: 182741)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.01451580785214901
    2. '   ' → logprob: -4.3895158767700195
    3. 'for' → logprob: -6.3895158767700195
    4. ' original' → logprob: -8.26451587677002
    5. '	for' → logprob: -11.01451587677002
    6. ' pour' → logprob: -11.51451587677002
    7. ',' → logprob: -11.76451587677002
    8. ' to' → logprob: -11.88951587677002
    9. ' originale' → logprob: -12.51451587677002
    10. ':' → logprob: -12.63951587677002

Token 336: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.36098864674568176
    2. 'née' → logprob: -2.2359886169433594
    3. 'e' → logprob: -2.6109886169433594
    4. 'de' → logprob: -2.7359886169433594
    5. 'd' → logprob: -3.9859886169433594
    6. 'rée' → logprob: -4.735988616943359
    7. 'lée' → logprob: -5.110988616943359
    8. 'ue' → logprob: -5.235988616943359
    9. 'é' → logprob: -5.610988616943359
    10. '   ' → logprob: -5.860988616943359

Token 337: ' pour' (ID: 1930)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.567067563533783
    2. '   ' → logprob: -1.0670676231384277
    3. 'for' → logprob: -2.4420676231384277
    4. ',' → logprob: -7.067067623138428
    5. ':' → logprob: -8.06706714630127
    6. ' pour' → logprob: -8.19206714630127
    7. '<|end|>' → logprob: -9.31706714630127
    8. '.' → logprob: -9.44206714630127
    9. '    
' → logprob: -9.81706714630127
    10. '	for' → logprob: -10.69206714630127

Token 338: ' afficher' (ID: 146524)
  Prédit: ' value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' value' → logprob: -0.5022644400596619
    2. ' i' → logprob: -1.6272644996643066
    3. ' val' → logprob: -2.6272644996643066
    4. ' for' → logprob: -3.2522644996643066
    5. ' valeur' → logprob: -3.6272644996643066
    6. ' item' → logprob: -4.127264499664307
    7. ' element' → logprob: -4.502264499664307
    8. ' elem' → logprob: -4.877264499664307
    9. ' idx' → logprob: -5.002264499664307
    10. ' afficher' → logprob: -5.252264499664307

Token 339: ' le' (ID: 505)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.9911171197891235
    2. 'for' → logprob: -1.9911171197891235
    3. '   ' → logprob: -2.116117000579834
    4. '(
' → logprob: -2.366117000579834
    5. 'original' → logprob: -2.366117000579834
    6. ' for' → logprob: -2.991117000579834
    7. 'val' → logprob: -3.116117000579834
    8. '(len' → logprob: -3.241117000579834
    9. 'len' → logprob: -3.241117000579834
    10. ' original' → logprob: -3.491117000579834

Token 340: ' résultat' (ID: 62556)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0775180533528328
    2. ' for' → logprob: -3.0775179862976074
    3. 'max' → logprob: -4.327517986297607
    4. 'val' → logprob: -5.452517986297607
    5. 'value' → logprob: -5.952517986297607
    6. 'sub' → logprob: -6.077517986297607
    7. 'i' → logprob: -6.202517986297607
    8. 'result' → logprob: -6.327517986297607
    9. ' max' → logprob: -7.952517986297607
    10. '   ' → logprob: -8.202518463134766

Token 341: ' appropri' (ID: 71769)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.030340908095240593
    2. ' for' → logprob: -3.9053409099578857
    3. '
' → logprob: -5.155340671539307
    4. 'for' → logprob: -5.655340671539307
    5. '    
' → logprob: -8.030341148376465
    6. '```' → logprob: -10.030341148376465
    7. '\n' → logprob: -10.280341148376465
    8. '<|end|>' → logprob: -10.780341148376465
    9. '  
' → logprob: -11.030341148376465
    10. '	for' → logprob: -11.155341148376465

Token 342: 'é' (ID: 377)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.9314727783203125
    2. '   ' → logprob: -0.9314727783203125
    3. 'é' → logprob: -2.4314727783203125
    4. 'for' → logprob: -2.6814727783203125
    5. ' for' → logprob: -3.0564727783203125
    6. ' à' → logprob: -6.0564727783203125
    7. ' pour' → logprob: -6.5564727783203125
    8. 'ation' → logprob: -6.8064727783203125
    9. '       ' → logprob: -7.1814727783203125
    10. ' ' → logprob: -7.1814727783203125

Token 343: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010610903613269329
    2. ' for' → logprob: -4.635611057281494
    3. 'for' → logprob: -7.385611057281494
    4. '
' → logprob: -8.760610580444336
    5. '    
' → logprob: -9.885610580444336
    6. '<|end|>' → logprob: -11.510610580444336
    7. '	for' → logprob: -12.010610580444336
    8. ',' → logprob: -12.635610580444336
    9. '```' → logprob: -13.010610580444336
    10. '<|end|>' → logprob: -13.760610580444336

Token 344: ' chaque' (ID: 21194)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.7153849601745605
    2. 'value' → logprob: -0.8403849601745605
    3. ' value' → logprob: -3.0903849601745605
    4. ' val' → logprob: -4.5903849601745605
    5. 'v' → logprob: -4.7153849601745605
    6. 'each' → logprob: -5.5903849601745605
    7. 'element' → logprob: -5.7153849601745605
    8. 'elem' → logprob: -6.2153849601745605
    9. ' valeur' → logprob: -6.5903849601745605
    10. ' element' → logprob: -7.2153849601745605

Token 345: ' élément' (ID: 99627)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.7926107048988342
    2. 'val' → logprob: -1.0426106452941895
    3. ' value' → logprob: -2.2926106452941895
    4. 'element' → logprob: -3.1676106452941895
    5. ' element' → logprob: -3.7926106452941895
    6. ' val' → logprob: -4.0426106452941895
    7. 'item' → logprob: -6.0426106452941895
    8. 'elem' → logprob: -6.0426106452941895
    9. ' valeur' → logprob: -6.5426106452941895
    10. 'v' → logprob: -6.9176106452941895

Token 346: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002227452350780368
    2. ' for' → logprob: -6.752227306365967
    3. '
' → logprob: -7.127227306365967
    4. 'for' → logprob: -8.627227783203125
    5. '    
' → logprob: -9.752227783203125
    6. ',' → logprob: -12.252227783203125
    7. '<|end|>' → logprob: -12.252227783203125
    8. '```' → logprob: -13.627227783203125
    9. '  
' → logprob: -13.752227783203125
    10. '	for' → logprob: -13.877227783203125

Token 347: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010793719440698624
    2. 'for' → logprob: -4.885793685913086
    3. ' for' → logprob: -5.760793685913086
    4. '
' → logprob: -10.760793685913086
    5. '    
' → logprob: -12.010793685913086
    6. '	for' → logprob: -12.385793685913086
    7. '```' → logprob: -14.135793685913086
    8. '       ' → logprob: -14.635793685913086
    9. ':' → logprob: -15.385793685913086
    10. ',' → logprob: -15.635793685913086

Token 348: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.31590110063552856
    2. ' for' → logprob: -1.3159010410308838
    3. '   ' → logprob: -5.940901279449463
    4. '```' → logprob: -12.815900802612305
    5. '	for' → logprob: -12.940900802612305
    6. '    
' → logprob: -14.440900802612305
    7. '
' → logprob: -14.940900802612305
    8. '``' → logprob: -16.690900802612305
    9. '_for' → logprob: -16.940900802612305
    10. ' ' → logprob: -17.065900802612305

Token 349: ' val' (ID: 1459)
  Prédit: ' value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' value' → logprob: -0.38279905915260315
    2. 'value' → logprob: -1.3827990293502808
    3. ' val' → logprob: -3.1327991485595703
    4. 'val' → logprob: -4.25779914855957
    5. ' i' → logprob: -6.38279914855957
    6. ' element' → logprob: -6.38279914855957
    7. 'i' → logprob: -6.63279914855957
    8. 'item' → logprob: -7.38279914855957
    9. 'element' → logprob: -7.38279914855957
    10. 'num' → logprob: -7.38279914855957

Token 350: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.007143110036849976
    2. 'ue' → logprob: -5.132143020629883
    3. 'in' → logprob: -7.132143020629883
    4. 'u' → logprob: -8.382143020629883
    5. ' ' → logprob: -9.382143020629883
    6. 'uer' → logprob: -10.382143020629883
    7. '   ' → logprob: -10.632143020629883
    8. 'ues' → logprob: -11.132143020629883
    9. '  ' → logprob: -11.757143020629883
    10. 'o' → logprob: -12.507143020629883

Token 351: ' original' (ID: 4756)
  Prédit: 'original'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'original' → logprob: -0.029750604182481766
    2. ' original' → logprob: -3.5297505855560303
    3. '(original' → logprob: -15.90475082397461
    4. '_original' → logprob: -18.77975082397461
    5. 'Original' → logprob: -19.27975082397461
    6. '.original' → logprob: -20.52975082397461
    7. '   ' → logprob: -20.77975082397461
    8. ' оригин' → logprob: -21.27975082397461
    9. ' ' → logprob: -21.65475082397461
    10. 'origin' → logprob: -21.90475082397461

Token 352: '_values' (ID: 20393)
  Prédit: '_values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_values' → logprob: -7.3458322731312364e-06
    2. 'values' → logprob: -12.250007629394531
    3. '_' → logprob: -13.250007629394531
    4. '_value' → logprob: -14.625007629394531
    5. '_val' → logprob: -16.12500762939453
    6. '_vals' → logprob: -16.12500762939453
    7. '_VALUES' → logprob: -17.12500762939453
    8. 's' → logprob: -18.62500762939453
    9. '(values' → logprob: -18.62500762939453
    10. ' _' → logprob: -18.87500762939453

Token 353: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.018200397491455078
    2. ':
' → logprob: -4.018200397491455
    3. ' :' → logprob: -10.643199920654297
    4. '   ' → logprob: -11.143199920654297
    5. ' :
' → logprob: -12.518199920654297
    6. '):
' → logprob: -12.643199920654297
    7. ',' → logprob: -13.768199920654297
    8. ':

' → logprob: -13.768199920654297
    9. ':
' → logprob: -13.893199920654297
    10. '):' → logprob: -14.143199920654297

Token 354: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0032584001310169697
    2. ' if' → logprob: -6.128258228302002
    3. '   ' → logprob: -7.128258228302002
    4. '<|end|>' → logprob: -8.87825870513916
    5. ':' → logprob: -10.50325870513916
    6. '        
' → logprob: -11.00325870513916
    7. '    ' → logprob: -11.12825870513916
    8. 'if' → logprob: -11.25325870513916
    9. ',' → logprob: -11.75325870513916
    10. '):
' → logprob: -11.75325870513916

Token 355: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5104488134384155
    2. '       ' → logprob: -1.0104488134384155
    3. 'if' (adapté à ' if') → logprob: -3.385448932647705
    4. ' print' → logprob: -7.260448932647705
    5. '   ' → logprob: -7.385448932647705
    6. 'print' → logprob: -7.635448932647705
    7. '    ' → logprob: -10.635448455810547
    8. '        ' → logprob: -11.510448455810547
    9. '           ' → logprob: -12.510448455810547
    10. '	if' → logprob: -12.885448455810547

Token 356: ' val' (ID: 1459)
  Prédit: ' val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.06196768581867218
    2. 'val' → logprob: -2.811967611312866
    3. '	val' → logprob: -17.061967849731445
    4. '(val' → logprob: -18.186967849731445
    5. '    ' → logprob: -18.561967849731445
    6. '[val' → logprob: -18.936967849731445
    7. '       ' → logprob: -19.561967849731445
    8. '   ' → logprob: -19.686967849731445
    9. '_val' → logprob: -19.811967849731445
    10. ',val' → logprob: -20.561967849731445

Token 357: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.17976832389831543
    2. '==' → logprob: -1.8047683238983154
    3. ' ' → logprob: -11.179768562316895
    4. ' <' → logprob: -12.804768562316895
    5. '   ' → logprob: -13.054768562316895
    6. '=' → logprob: -13.429768562316895
    7. '<' → logprob: -14.304768562316895
    8. ' !=' → logprob: -14.554768562316895
    9. ')==' → logprob: -14.554768562316895
    10. '==
' → logprob: -14.929768562316895

Token 358: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0007099286303855479
    2. ' max' → logprob: -7.2507100105285645
    3. '   ' → logprob: -19.250709533691406
    4. ' ' → logprob: -19.750709533691406
    5. '	max' → logprob: -19.750709533691406
    6. '_max' → logprob: -20.125709533691406
    7. '[max' → logprob: -20.375709533691406
    8. '(max' → logprob: -20.625709533691406
    9. 'maximum' → logprob: -21.125709533691406
    10. '
' → logprob: -21.500709533691406

Token 359: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -1.7432603272027336e-06
    2. '_val' → logprob: -13.625001907348633
    3. '_' → logprob: -14.750001907348633
    4. 'value' → logprob: -17.875001907348633
    5. '_values' → logprob: -17.875001907348633
    6. ')' → logprob: -18.500001907348633
    7. '_max' → logprob: -18.625001907348633
    8. ' _' → logprob: -18.625001907348633
    9. ')_' → logprob: -18.625001907348633
    10. '_VALUE' → logprob: -19.375001907348633

Token 360: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12740375101566315
    2. ':
' → logprob: -2.127403736114502
    3. '       ' → logprob: -8.25240421295166
    4. ' :' → logprob: -9.12740421295166
    5. ' :
' → logprob: -9.87740421295166
    6. '           ' → logprob: -11.00240421295166
    7. ':
' → logprob: -11.25240421295166
    8. '   ' → logprob: -12.00240421295166
    9. ',' → logprob: -12.00240421295166
    10. '):
' → logprob: -12.62740421295166

Token 361: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06972509622573853
    2. '       ' → logprob: -3.1947250366210938
    3. ' print' → logprob: -3.6947250366210938
    4. ':' → logprob: -7.194725036621094
    5. 'print' → logprob: -8.319725036621094
    6. ':
' → logprob: -9.319725036621094
    7. '               ' → logprob: -9.444725036621094
    8. '
' → logprob: -9.569725036621094
    9. ' :' → logprob: -9.944725036621094
    10. '        
' → logprob: -10.069725036621094

Token 362: ' #' (ID: 1069)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.04421833157539368
    2. '       ' → logprob: -3.9192183017730713
    3. 'print' → logprob: -3.9192183017730713
    4. '           ' → logprob: -5.66921854019165
    5. '   ' → logprob: -10.044218063354492
    6. ' ' → logprob: -10.794218063354492
    7. '               ' → logprob: -11.044218063354492
    8. '	print' → logprob: -12.169218063354492
    9. '```' → logprob: -13.669218063354492
    10. '
' → logprob: -13.794218063354492

Token 363: ' Si' (ID: 7832)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0028640811797231436
    2. ' print' → logprob: -6.002863883972168
    3. '           ' → logprob: -8.002863883972168
    4. '       ' → logprob: -9.877863883972168
    5. '   ' → logprob: -13.002863883972168
    6. '               ' → logprob: -16.127864837646484
    7. '	print' → logprob: -17.627864837646484
    8. '
' → logprob: -18.002864837646484
    9. ' ' → logprob: -18.627864837646484
    10. ' ' → logprob: -18.752864837646484

Token 364: ' l' (ID: 305)
  Prédit: ' second'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' second' → logprob: -0.16800615191459656
    2. ' val' → logprob: -1.918006181716919
    3. 'val' → logprob: -5.29300594329834
    4. 'second' → logprob: -5.91800594329834
    5. ' ' → logprob: -11.29300594329834
    6. ' ' → logprob: -11.66800594329834
    7. '(second' → logprob: -13.04300594329834
    8. '	second' → logprob: -13.04300594329834
    9. '_second' → logprob: -13.41800594329834
    10. ' max' → logprob: -13.79300594329834

Token 365: ''' (ID: 6)
  Prédit: ' val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.012718478217720985
    2. 'val' → logprob: -4.387718677520752
    3. ' ' → logprob: -9.387718200683594
    4. '_val' → logprob: -9.762718200683594
    5. ' second' → logprob: -11.137718200683594
    6. ' ' → logprob: -11.137718200683594
    7. ' max' → logprob: -11.137718200683594
    8. ' vaut' → logprob: -12.137718200683594
    9. '	val' → logprob: -12.387718200683594
    10. '(val' → logprob: -12.762718200683594

Token 366: 'élé' (ID: 15228)
  Prédit: 'second'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'second' → logprob: -0.37234601378440857
    2. 'val' → logprob: -1.247346043586731
    3. ' second' → logprob: -4.122345924377441
    4. 'max' → logprob: -5.497345924377441
    5. ' val' → logprob: -6.747345924377441
    6. 'original' → logprob: -7.497345924377441
    7. 'values' → logprob: -8.122345924377441
    8. 'value' → logprob: -8.247345924377441
    9. 'sub' → logprob: -9.247345924377441
    10. 'print' → logprob: -9.372345924377441

Token 367: 'ment' (ID: 508)
  Prédit: 'ement'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ement' → logprob: -0.6619522571563721
    2. 'ment' → logprob: -1.411952257156372
    3. 'ément' → logprob: -1.536952257156372
    4. 'val' → logprob: -4.161952018737793
    5. 'em' → logprob: -4.911952018737793
    6. 'é' → logprob: -7.536952018737793
    7. 'ém' → logprob: -7.786952018737793
    8. 'ent' → logprob: -8.411952018737793
    9. 'emment' → logprob: -8.786952018737793
    10. '_val' → logprob: -8.786952018737793

Token 368: ' est' (ID: 893)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.43146854639053345
    2. '==' → logprob: -1.0564684867858887
    3. ' is' → logprob: -6.806468486785889
    4. ' est' → logprob: -6.931468486785889
    5. '=' → logprob: -8.306468963623047
    6. ' vaut' → logprob: -8.806468963623047
    7. 'val' → logprob: -9.431468963623047
    8. ' =' → logprob: -9.806468963623047
    9. 's' → logprob: -10.181468963623047
    10. 'est' → logprob: -10.681468963623047

Token 369: ' le' (ID: 505)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.02908746525645256
    2. ' max' → logprob: -4.029087543487549
    3. 'val' → logprob: -4.529087543487549
    4. ' val' → logprob: -9.52908706665039
    5. '=max' → logprob: -12.15408706665039
    6. '==' → logprob: -13.02908706665039
    7. 'maximum' → logprob: -13.40408706665039
    8. ' maximum' → logprob: -13.65408706665039
    9. ' maximal' → logprob: -13.90408706665039
    10. 'equal' → logprob: -14.15408706665039

Token 370: ' maximum' (ID: 10562)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.2578447461128235
    2. 'maximum' → logprob: -1.5078446865081787
    3. ' maximum' → logprob: -5.882844924926758
    4. ' max' → logprob: -6.007844924926758
    5. 'second' → logprob: -7.382844924926758
    6. ' second' → logprob: -11.632844924926758
    7. 'val' → logprob: -12.132844924926758
    8. '   ' → logprob: -12.257844924926758
    9. 'plus' → logprob: -12.757844924926758
    10. ' ' → logprob: -13.132844924926758

Token 371: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.17808593809604645
    2. '           ' → logprob: -2.428086042404175
    3. '               ' → logprob: -3.303086042404175
    4. ':' → logprob: -4.178085803985596
    5. '       ' → logprob: -5.178085803985596
    6. ' ,' → logprob: -5.178085803985596
    7. ':
' → logprob: -5.178085803985596
    8. ' print' → logprob: -5.553085803985596
    9. 'print' → logprob: -6.678085803985596
    10. ' :' → logprob: -8.428086280822754

Token 372: ' affiche' (ID: 127479)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5405692458152771
    2. 'print' → logprob: -1.1655693054199219
    3. ' print' → logprob: -2.290569305419922
    4. '               ' → logprob: -5.915569305419922
    5. '       ' → logprob: -6.415569305419922
    6. '   ' → logprob: -9.165569305419922
    7. '	print' → logprob: -9.540569305419922
    8. '	       ' → logprob: -10.415569305419922
    9. ' ' → logprob: -10.915569305419922
    10. '            
' → logprob: -11.165569305419922

Token 373: ' le' (ID: 505)
  Prédit: 'second'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'second' → logprob: -0.3697155714035034
    2. ' second' → logprob: -1.2447155714035034
    3. '(second' → logprob: -3.869715690612793
    4. '(' → logprob: -8.994715690612793
    5. '	second' → logprob: -10.494715690612793
    6. '   ' → logprob: -11.869715690612793
    7. ' ' → logprob: -12.119715690612793
    8. '(f' → logprob: -12.744715690612793
    9. ' ' → logprob: -12.869715690612793
    10. ' (' → logprob: -13.119715690612793

Token 374: ' second' (ID: 3099)
  Prédit: 'second'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'second' → logprob: -0.018151700496673584
    2. ' second' → logprob: -4.018151760101318
    3. '(second' → logprob: -13.51815128326416
    4. '"' → logprob: -15.51815128326416
    5. '	second' → logprob: -16.268152236938477
    6. ' ' → logprob: -17.268152236938477
    7. 'space' → logprob: -17.643152236938477
    8. '   ' → logprob: -17.893152236938477
    9. 'str' → logprob: -18.518152236938477
    10. '{' → logprob: -18.768152236938477

Token 375: ' maximum' (ID: 10562)
  Prédit: '_max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.0016962457448244095
    2. ' max' → logprob: -7.1266961097717285
    3. 'max' → logprob: -7.3766961097717285
    4. ' _' → logprob: -8.876696586608887
    5. ' maximum' → logprob: -9.126696586608887
    6. ' maximal' → logprob: -12.001696586608887
    7. '_' → logprob: -12.376696586608887
    8. 'maximum' → logprob: -12.751696586608887
    9. '_MAX' → logprob: -13.751696586608887
    10. 'Max' → logprob: -13.751696586608887

Token 376: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.013683986850082874
    2. ',' → logprob: -5.013683795928955
    3. ' print' → logprob: -5.388683795928955
    4. 'print' → logprob: -6.513683795928955
    5. '               ' → logprob: -8.388684272766113
    6. ' ,' → logprob: -8.388684272766113
    7. '       ' → logprob: -8.388684272766113
    8. ':' → logprob: -9.138684272766113
    9. '{' → logprob: -11.013684272766113
    10. '   ' → logprob: -11.263684272766113

Token 377: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0007064753444865346
    2. ' print' → logprob: -7.750706672668457
    3. 'print' → logprob: -8.625706672668457
    4. '       ' → logprob: -10.250706672668457
    5. ',' → logprob: -10.625706672668457
    6. '               ' → logprob: -10.750706672668457
    7. '```' → logprob: -12.000706672668457
    8. ':' → logprob: -12.500706672668457
    9. ' ,' → logprob: -13.250706672668457
    10. '		' → logprob: -14.375706672668457

Token 378: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.18310891091823578
    2. '           ' → logprob: -1.933108925819397
    3. 'print' (adapté à ' print') → logprob: -3.8081088066101074
    4. '               ' → logprob: -8.433109283447266
    5. '       ' → logprob: -8.683109283447266
    6. '   ' → logprob: -10.183109283447266
    7. ' ' → logprob: -12.433109283447266
    8. '          ' → logprob: -13.433109283447266
    9. '```' → logprob: -13.933109283447266
    10. '         ' → logprob: -14.183109283447266

Token 379: '(second' (ID: 78627)
  Prédit: '(second'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(second' → logprob: -0.02640746906399727
    2. '(' → logprob: -3.776407480239868
    3. '("' → logprob: -6.026407241821289
    4. '(f' → logprob: -7.276407241821289
    5. '('' → logprob: -10.151407241821289
    6. ' (' → logprob: -12.401407241821289
    7. '("",' → logprob: -13.026407241821289
    8. 'second' → logprob: -13.526407241821289
    9. '(",' → logprob: -13.901407241821289
    10. '(""' → logprob: -14.401407241821289

Token 380: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -8.65707261255011e-06
    2. ' _' → logprob: -12.375008583068848
    3. 'max' → logprob: -13.125008583068848
    4. '_' → logprob: -13.250008583068848
    5. ' max' → logprob: -15.250008583068848
    6. '_MAX' → logprob: -15.375008583068848
    7. '_value' → logprob: -17.250009536743164
    8. '_Max' → logprob: -17.375009536743164
    9. '_min' → logprob: -17.750009536743164
    10. ')' → logprob: -18.125009536743164

Token 381: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04866446554660797
    2. ')
' → logprob: -3.0486645698547363
    3. ',' → logprob: -10.173664093017578
    4. ' )' → logprob: -10.673664093017578
    5. '   ' → logprob: -12.173664093017578
    6. '       ' → logprob: -12.673664093017578
    7. ' )
' → logprob: -12.798664093017578
    8. ',end' → logprob: -13.298664093017578
    9. ')

' → logprob: -14.173664093017578
    10. '),' → logprob: -14.423664093017578

Token 382: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006347865331918001
    2. 'else' → logprob: -5.75634765625
    3. ' else' → logprob: -5.75634765625
    4. '   ' → logprob: -13.75634765625
    5. '```' → logprob: -13.88134765625
    6. '	else' → logprob: -15.88134765625
    7. '	' → logprob: -16.13134765625
    8. '           ' → logprob: -16.63134765625
    9. '​' → logprob: -17.75634765625
    10. '<|end|>' → logprob: -18.00634765625

Token 383: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.862004280090332
    2. ' else' → logprob: -0.862004280090332
    3. 'else' (adapté à ' else') → logprob: -1.862004280090332
    4. '   ' → logprob: -11.737004280090332
    5. '	else' → logprob: -13.737004280090332
    6. '     ' → logprob: -16.737003326416016
    7. '      ' → logprob: -16.737003326416016
    8. '           ' → logprob: -17.362003326416016
    9. ' ' → logprob: -17.487003326416016
    10. '    ' → logprob: -17.487003326416016

Token 384: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.4380665123462677
    2. ':' → logprob: -1.3130664825439453
    3. '           ' → logprob: -2.5630664825439453
    4. ' :
' → logprob: -5.313066482543945
    5. '       ' → logprob: -5.938066482543945
    6. ' print' → logprob: -8.188066482543945
    7. ' :' → logprob: -8.688066482543945
    8. '   ' → logprob: -9.063066482543945
    9. 'print' → logprob: -9.063066482543945
    10. ',' → logprob: -9.063066482543945

Token 385: '           ' (ID: 352)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.22825796902179718
    2. '           ' → logprob: -1.9782580137252808
    3. ' print' → logprob: -2.728257894515991
    4. '       ' → logprob: -7.85325813293457
    5. '   ' → logprob: -9.97825813293457
    6. '```' → logprob: -13.35325813293457
    7. '	print' → logprob: -14.35325813293457
    8. '               ' → logprob: -15.35325813293457
    9. '{' → logprob: -15.60325813293457
    10. ' ' → logprob: -15.72825813293457

Token 386: ' #' (ID: 1069)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.0297523383051157
    2. 'print' → logprob: -3.529752254486084
    3. '           ' → logprob: -13.529752731323242
    4. '            ' → logprob: -15.279752731323242
    5. ' max' → logprob: -15.404752731323242
    6. ' ' → logprob: -17.279752731323242
    7. '    ' → logprob: -17.404752731323242
    8. '(print' → logprob: -17.654752731323242
    9. 'max' → logprob: -18.154752731323242
    10. '.print' → logprob: -18.279752731323242

Token 387: ' Sinon' (ID: 154924)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.12698322534561157
    2. ' print' → logprob: -2.126983165740967
    3. '           ' → logprob: -9.876983642578125
    4. '   ' → logprob: -12.876983642578125
    5. '       ' → logprob: -14.126983642578125
    6. '            ' → logprob: -16.126983642578125
    7. '    ' → logprob: -16.251983642578125
    8. '          ' → logprob: -16.251983642578125
    9. '	print' → logprob: -16.876983642578125
    10. ' ' → logprob: -17.126983642578125

Token 388: ',' (ID: 11)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.003856489434838295
    2. 'print' → logprob: -5.628856658935547
    3. ':' → logprob: -8.753856658935547
    4. ',' → logprob: -10.128856658935547
    5. '   ' → logprob: -10.628856658935547
    6. '           ' → logprob: -11.628856658935547
    7. ' ,' → logprob: -12.003856658935547
    8. ' ' → logprob: -12.128856658935547
    9. '(print' → logprob: -12.378856658935547
    10. '    ' → logprob: -13.003856658935547

Token 389: ' affiche' (ID: 127479)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.2014336884021759
    2. 'print' → logprob: -1.7014336585998535
    3. '           ' → logprob: -10.826434135437012
    4. '            ' → logprob: -15.326434135437012
    5. '       ' → logprob: -16.576433181762695
    6. '	print' → logprob: -16.701433181762695
    7. '   ' → logprob: -17.576433181762695
    8. '.print' → logprob: -17.701433181762695
    9. '          ' → logprob: -17.826433181762695
    10. '        ' → logprob: -17.951433181762695

Token 390: ' le' (ID: 505)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.13470357656478882
    2. '(max' → logprob: -2.3847036361694336
    3. ' max' → logprob: -3.3847036361694336
    4. '(' → logprob: -10.884703636169434
    5. ',max' → logprob: -13.884703636169434
    6. ' (' → logprob: -14.009703636169434
    7. '	max' → logprob: -15.259703636169434
    8. '=max' → logprob: -15.884703636169434
    9. '_max' → logprob: -16.009702682495117
    10. '[max' → logprob: -16.509702682495117

Token 391: ' maximum' (ID: 10562)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -7.941850526549388e-06
    2. ' max' → logprob: -11.750007629394531
    3. '(max' → logprob: -20.00000762939453
    4. 'maximum' → logprob: -20.75000762939453
    5. '[max' → logprob: -21.00000762939453
    6. ',max' → logprob: -22.50000762939453
    7. '	max' → logprob: -22.75000762939453
    8. '_max' → logprob: -23.50000762939453
    9. '=max' → logprob: -23.50000762939453
    10. 'print' → logprob: -23.62500762939453

Token 392: '
' (ID: 198)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.8002732396125793
    2. ',' → logprob: -0.9252732396125793
    3. ',max' → logprob: -2.3002731800079346
    4. 'max' → logprob: -3.6752731800079346
    5. ' ,' → logprob: -3.9252731800079346
    6. '(max' → logprob: -4.925273418426514
    7. '           ' → logprob: -6.800273418426514
    8. ' print' → logprob: -8.550272941589355
    9. 'print' → logprob: -8.675272941589355
    10. '=max' → logprob: -9.175272941589355

Token 393: '           ' (ID: 352)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.3115255832672119
    2. '(max' → logprob: -1.686525583267212
    3. ' print' → logprob: -2.561525583267212
    4. ',max' → logprob: -6.561525344848633
    5. 'print' → logprob: -7.061525344848633
    6. 'max' → logprob: -7.061525344848633
    7. ' (' → logprob: -7.186525344848633
    8. '           ' → logprob: -7.436525344848633
    9. ' ,' → logprob: -8.686525344848633
    10. ',' → logprob: -8.811525344848633

Token 394: ' print' (ID: 2123)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.06204723194241524
    2. 'max' → logprob: -2.812047243118286
    3. ' print' → logprob: -9.812047004699707
    4. 'print' (adapté à ' print') → logprob: -10.937047004699707
    5. '(max' → logprob: -11.937047004699707
    6. ',max' → logprob: -15.437047004699707
    7. ' maximum' → logprob: -15.937047004699707
    8. ' ' → logprob: -16.687047958374023
    9. ' ' → logprob: -16.687047958374023
    10. '=max' → logprob: -17.937047958374023

Token 395: '(max' (ID: 17178)
  Prédit: '(max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.0007400614558719099
    2. '(' → logprob: -7.250740051269531
    3. 'max' → logprob: -10.625740051269531
    4. ' (' → logprob: -12.375740051269531
    5. ' max' → logprob: -13.625740051269531
    6. '(Max' → logprob: -16.37574005126953
    7. ',max' → logprob: -16.87574005126953
    8. '_max' → logprob: -17.25074005126953
    9. '=max' → logprob: -17.62574005126953
    10. '(MAX' → logprob: -17.87574005126953

Token 396: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -9.849109119386412e-06
    2. '_' → logprob: -12.375009536743164
    3. ')_' → logprob: -13.125009536743164
    4. ')' → logprob: -13.750009536743164
    5. '_max' → logprob: -14.250009536743164
    6. '(_' → logprob: -14.375009536743164
    7. ' _' → logprob: -14.750009536743164
    8. '_values' → logprob: -14.750009536743164
    9. '(' → logprob: -15.625009536743164
    10. '_)' → logprob: -16.125009536743164

Token 397: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.981667537620524e-06
    2. ')
' → logprob: -13.875001907348633
    3. ' )' → logprob: -14.000001907348633
    4. '<|end|>' → logprob: -16.625001907348633
    5. '       ' → logprob: -17.500001907348633
    6. '   ' → logprob: -18.000001907348633
    7. '))' → logprob: -18.250001907348633
    8. '')' → logprob: -18.750001907348633
    9. '),' → logprob: -18.750001907348633
    10. '")' → logprob: -19.250001907348633

Token 398: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 399: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.04109438508749008
    2. ' get' → logprob: -4.1660943031311035
    3. ' calculate' → logprob: -5.1660943031311035
    4. ' find' → logprob: -5.2910943031311035
    5. ' reverse' → logprob: -5.4160943031311035
    6. ' max' → logprob: -6.4160943031311035
    7. ' sum' → logprob: -6.6660943031311035
    8. ' factorial' → logprob: -6.7910943031311035
    9. ' is' → logprob: -6.9160943031311035
    10. ' check' → logprob: -7.4160943031311035

Token 400: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00011856284982059151
    2. '()' → logprob: -10.500118255615234
    3. ' ():' → logprob: -10.500118255615234
    4. '():
' → logprob: -10.750118255615234
    5. '(' → logprob: -10.875118255615234
    6. '_' → logprob: -11.000118255615234
    7. '()>' → logprob: -12.375118255615234
    8. '():
' → logprob: -14.375118255615234
    9. '()">' → logprob: -15.000118255615234
    10. '():

' → logprob: -15.500118255615234

Token 401: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008635961450636387
    2. 'size' → logprob: -4.883635997772217
    3. ' size' → logprob: -7.008635997772217
    4. 'n' → logprob: -9.133635520935059
    5. '(size' → logprob: -12.008635520935059
    6. ' n' → logprob: -12.883635520935059
    7. '    
' → logprob: -13.133635520935059
    8. '```' → logprob: -13.258635520935059
    9. '	size' → logprob: -13.633635520935059
    10. '_size' → logprob: -14.258635520935059

Token 402: ' """
' (ID: 7037)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.23593877255916595
    2. '   ' → logprob: -1.8609387874603271
    3. ' size' → logprob: -3.485938787460327
    4. 'n' → logprob: -3.860938787460327
    5. ' n' → logprob: -5.985938549041748
    6. 'num' → logprob: -8.985939025878906
    7. '#' → logprob: -9.235939025878906
    8. 'list' → logprob: -9.485939025878906
    9. '    
' → logprob: -10.235939025878906
    10. ' taille' → logprob: -10.735939025878906

Token 403: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09946605563163757
    2. 'size' → logprob: -2.59946608543396
    3. ' size' → logprob: -3.97446608543396
    4. 'n' → logprob: -6.974465847015381
    5. ' n' → logprob: -8.099466323852539
    6. '"""' → logprob: -9.599466323852539
    7. '    
' → logprob: -9.724466323852539
    8. ' taille' → logprob: -9.974466323852539
    9. 'tail' → logprob: -10.599466323852539
    10. 'prompt' → logprob: -10.724466323852539

Token 404: ' Fonction' (ID: 189149)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5505409240722656
    2. ' size' → logprob: -0.9255409240722656
    3. 'size' → logprob: -4.425540924072266
    4. ' n' → logprob: -4.550540924072266
    5. '#' → logprob: -6.550540924072266
    6. ' taille' → logprob: -6.800540924072266
    7. ' La' → logprob: -7.675540924072266
    8. 'n' → logprob: -8.050540924072266
    9. ' #' → logprob: -8.800540924072266
    10. ' user' → logprob: -9.050540924072266

Token 405: ' principale' (ID: 68926)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6609110832214355
    2. 'def' → logprob: -1.5359110832214355
    3. ' principale' → logprob: -1.5359110832214355
    4. ' de' → logprob: -3.9109110832214355
    5. '():
' → logprob: -4.5359110832214355
    6. ' main' → logprob: -4.9109110832214355
    7. 'de' → logprob: -5.1609110832214355
    8. '()' → logprob: -6.0359110832214355
    9. ' principal' → logprob: -6.1609110832214355
    10. ' def' → logprob: -6.4109110832214355

Token 406: ' du' (ID: 1462)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.6180205941200256
    2. '():
' → logprob: -1.1180205345153809
    3. '   ' → logprob: -2.243020534515381
    4. ':' → logprob: -3.993020534515381
    5. 'def' → logprob: -5.368020534515381
    6. ':
' → logprob: -6.118020534515381
    7. '()' → logprob: -6.243020534515381
    8. ' :' → logprob: -8.368021011352539
    9. '):
' → logprob: -8.868021011352539
    10. '):' → logprob: -9.743021011352539

Token 407: ' programme' (ID: 18190)
  Prédit: 'programme'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'programme' → logprob: -0.02220018580555916
    2. ' programme' → logprob: -4.022200107574463
    3. 'program' → logprob: -5.522200107574463
    4. 'script' → logprob: -10.647200584411621
    5. ' program' → logprob: -11.272200584411621
    6. 'programma' → logprob: -13.022200584411621
    7. '```' → logprob: -13.522200584411621
    8. 'programm' → logprob: -13.522200584411621
    9. ' script' → logprob: -13.897200584411621
    10. 'Programme' → logprob: -14.022200584411621

Token 408: '.' (ID: 13)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05650218576192856
    2. '():' → logprob: -3.681502103805542
    3. ':' → logprob: -4.806502342224121
    4. '():
' → logprob: -4.931502342224121
    5. 'def' → logprob: -5.181502342224121
    6. '
' → logprob: -5.556502342224121
    7. '()' → logprob: -6.431502342224121
    8. ':
' → logprob: -7.306502342224121
    9. '<|end|>' → logprob: -7.306502342224121
    10. '```' → logprob: -7.681502342224121

Token 409: ' Dem' (ID: 9458)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00011164903844473884
    2. '    
' → logprob: -9.75011157989502
    3. ' size' → logprob: -10.37511157989502
    4. 'size' → logprob: -11.87511157989502
    5. '
' → logprob: -12.37511157989502
    6. 'def' → logprob: -13.12511157989502
    7. ')' → logprob: -13.37511157989502
    8. '    ' → logprob: -13.50011157989502
    9. 'n' → logprob: -13.75011157989502
    10. '#' → logprob: -13.87511157989502

Token 410: 'ande' (ID: 4102)
  Prédit: 'ande'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ande' → logprob: -0.00017708084487821907
    2. 'a' → logprob: -9.250177383422852
    3. 'ander' → logprob: -11.125177383422852
    4. '   ' → logprob: -11.250177383422852
    5. 'an' → logprob: -11.625177383422852
    6. 'ade' → logprob: -12.125177383422852
    7. 'and' → logprob: -12.125177383422852
    8. '\' → logprob: -12.250177383422852
    9. '_' → logprob: -12.625177383422852
    10. 'andez' → logprob: -12.750177383422852

Token 411: ' une' (ID: 2463)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004147376399487257
    2. ' la' → logprob: -5.879147529602051
    3. 'def' → logprob: -7.879147529602051
    4. '()' → logprob: -8.12914752960205
    5. ' le' → logprob: -8.87914752960205
    6. '  ' → logprob: -9.00414752960205
    7. '    
' → logprob: -9.87914752960205
    8. '    ' → logprob: -10.12914752960205
    9. 'à' → logprob: -10.12914752960205
    10. 'size' → logprob: -10.12914752960205

Token 412: ' longueur' (ID: 104613)
  Prédit: 'tail'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tail' → logprob: -0.015716763213276863
    2. ' taille' → logprob: -5.140716552734375
    3. 'size' → logprob: -5.640716552734375
    4. '   ' → logprob: -5.890716552734375
    5. 'nombre' → logprob: -6.890716552734375
    6. 'n' → logprob: -7.515716552734375
    7. 'ta' → logprob: -7.765716552734375
    8. 'ent' → logprob: -8.140716552734375
    9. 'integer' → logprob: -8.515716552734375
    10. ' integer' → logprob: -8.765716552734375

Token 413: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023643162101507187
    2. '()' → logprob: -4.3986430168151855
    3. 'de' → logprob: -5.6486430168151855
    4. 'def' → logprob: -6.2736430168151855
    5. ' de' → logprob: -6.7736430168151855
    6. 'n' → logprob: -7.0236430168151855
    7. ' =' → logprob: -7.5236430168151855
    8. ')' → logprob: -7.6486430168151855
    9. ':' → logprob: -7.6486430168151855
    10. ',' → logprob: -8.023643493652344

Token 414: ' liste' (ID: 31719)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.30657705664634705
    2. 'la' → logprob: -1.4315770864486694
    3. ' la' → logprob: -4.306577205657959
    4. ' liste' → logprob: -5.431577205657959
    5. 'list' → logprob: -5.681577205657959
    6. ' ' → logprob: -6.556577205657959
    7. 'entrée' → logprob: -7.556577205657959
    8. 'l' → logprob: -7.556577205657959
    9. 'chaine' → logprob: -7.681577205657959
    10. 'lista' → logprob: -8.4315767288208

Token 415: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03156660869717598
    2. ',' → logprob: -3.531566619873047
    3. ':' → logprob: -7.656566619873047
    4. ' et' → logprob: -8.156566619873047
    5. ' =' → logprob: -8.406566619873047
    6. ' puis' → logprob: -9.031566619873047
    7. '.' → logprob: -9.406566619873047
    8. '()' → logprob: -9.406566619873047
    9. '=' → logprob: -9.781566619873047
    10. 'def' → logprob: -9.781566619873047

Token 416: ' les' (ID: 1341)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06087207421660423
    2. 'values' → logprob: -3.0608720779418945
    3. ' values' → logprob: -5.8108720779418945
    4. ' la' → logprob: -6.4358720779418945
    5. 'liste' → logprob: -6.4358720779418945
    6. '<|end|>' → logprob: -6.8108720779418945
    7. '	values' → logprob: -7.0608720779418945
    8. 'numbers' → logprob: -7.6858720779418945
    9. 'list' → logprob: -7.9358720779418945
    10. 'n' → logprob: -7.9358720779418945

Token 417: ' ent' (ID: 1121)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.5113950967788696
    2. ' valeurs' → logprob: -1.3863950967788696
    3. 'values' → logprob: -2.38639497756958
    4. ' values' → logprob: -3.63639497756958
    5. 'ent' → logprob: -4.88639497756958
    6. ' val' → logprob: -5.01139497756958
    7. ' ent' → logprob: -5.26139497756958
    8. 'élé' → logprob: -6.26139497756958
    9. ' nombres' → logprob: -6.38639497756958
    10. 'n' → logprob: -6.63639497756958

Token 418: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.009797057136893272
    2. 'ières' → logprob: -5.384797096252441
    3. 'ier' → logprob: -5.509797096252441
    4. '   ' → logprob: -7.759797096252441
    5. 'i' → logprob: -7.884797096252441
    6. 'ieres' → logprob: -9.134797096252441
    7. 'r' → logprob: -9.634797096252441
    8. 't' → logprob: -10.134797096252441
    9. 'ière' → logprob: -10.134797096252441
    10. 'rée' → logprob: -11.259797096252441

Token 419: ',
' (ID: 412)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2046578824520111
    2. ' à' → logprob: -1.7046579122543335
    3. ',' → logprob: -6.704658031463623
    4. '    ' → logprob: -7.829658031463623
    5. 'à' → logprob: -7.829658031463623
    6. ' ' → logprob: -7.829658031463623
    7. ' puis' → logprob: -9.329657554626465
    8. '  ' → logprob: -9.454657554626465
    9. '    
' → logprob: -9.704657554626465
    10. 'n' → logprob: -9.829657554626465

Token 420: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006731711328029633
    2. ' puis' → logprob: -5.0067315101623535
    3. 'p' → logprob: -13.131731986999512
    4. 'et' → logprob: -13.256731986999512
    5. '#' → logprob: -13.506731986999512
    6. '    ' → logprob: -13.631731986999512
    7. '    
' → logprob: -13.631731986999512
    8. ' then' → logprob: -13.756731986999512
    9. 'ens' → logprob: -13.756731986999512
    10. 'Puis' → logprob: -13.756731986999512

Token 421: ' puis' (ID: 18766)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0060219415463507175
    2. ' puis' → logprob: -5.131021976470947
    3. 'p' → logprob: -10.131021499633789
    4. '#' → logprob: -11.131021499633789
    5. '    ' → logprob: -12.006021499633789
    6. '   ' → logprob: -12.131021499633789
    7. ' then' → logprob: -12.256021499633789
    8. '    
' → logprob: -12.256021499633789
    9. 'Puis' → logprob: -12.256021499633789
    10. ' ensuite' → logprob: -12.756021499633789

Token 422: ' affiche' (ID: 127479)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4223012924194336
    2. ' print' → logprob: -1.7973012924194336
    3. ' appelle' → logprob: -2.1723012924194336
    4. 'print' → logprob: -2.7973012924194336
    5. ' affiche' → logprob: -5.922301292419434
    6. 'aff' → logprob: -8.297301292419434
    7. ' imprime' → logprob: -8.672301292419434
    8. 'app' → logprob: -8.922301292419434
    9. '    
' → logprob: -9.172301292419434
    10. ' appel' → logprob: -9.297301292419434

Token 423: ',' (ID: 11)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.15048734843730927
    2. ' la' → logprob: -3.1504874229431152
    3. '_' → logprob: -3.5254874229431152
    4. '   ' → logprob: -3.5254874229431152
    5. ' le' → logprob: -4.400487422943115
    6. '_sub' → logprob: -4.900487422943115
    7. ' l' → logprob: -5.275487422943115
    8. '()' → logprob: -5.900487422943115
    9. ' ' → logprob: -6.400487422943115
    10. 'sub' → logprob: -6.525487422943115

Token 424: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010596864856779575
    2. ' la' → logprob: -5.010596752166748
    3. ' les' → logprob: -6.010596752166748
    4. '"' → logprob: -7.885596752166748
    5. '    
' → logprob: -8.385597229003906
    6. '    ' → logprob: -9.135597229003906
    7. ' le' → logprob: -9.385597229003906
    8. '  ' → logprob: -9.510597229003906
    9. ')' → logprob: -9.635597229003906
    10. ' leurs' → logprob: -9.635597229003906

Token 425: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.02543729543685913
    2. ' i' → logprob: -4.525437355041504
    3. ' each' → logprob: -4.900437355041504
    4. ' chacun' → logprob: -5.650437355041504
    5. '   ' → logprob: -6.400437355041504
    6. 'each' → logprob: -7.775437355041504
    7. 'i' → logprob: -8.025437355041504
    8. ' chacune' → logprob: -8.150437355041504
    9. 'Chaque' → logprob: -9.025437355041504
    10. ' ' → logprob: -9.150437355041504

Token 426: ' entier' (ID: 80473)
  Prédit: ' élément'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' élément' → logprob: -0.11599601805210114
    2. ' valeur' → logprob: -2.7409961223602295
    3. 'élé' → logprob: -3.7409961223602295
    4. ' element' → logprob: -4.49099588394165
    5. ' entier' → logprob: -4.86599588394165
    6. ' ' → logprob: -7.36599588394165
    7. ' nombre' → logprob: -7.36599588394165
    8. ' val' → logprob: -7.86599588394165
    9. 'val' → logprob: -8.740996360778809
    10. 'element' → logprob: -8.865996360778809

Token 427: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03939084708690643
    2. ' ,' → logprob: -3.789390802383423
    3. ' de' → logprob: -4.164391040802002
    4. ' la' → logprob: -8.664390563964844
    5. 'de' → logprob: -8.914390563964844
    6. '   ' → logprob: -9.914390563964844
    7. 's' → logprob: -10.164390563964844
    8. ',
' → logprob: -11.164390563964844
    9. ' dans' → logprob: -11.289390563964844
    10. ')' → logprob: -11.539390563964844

Token 428: ' le' (ID: 505)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.4216839671134949
    2. ' l' → logprob: -1.7966840267181396
    3. ' le' → logprob: -1.9216840267181396
    4. 'le' → logprob: -5.0466837882995605
    5. ' un' → logprob: -5.0466837882995605
    6. ' "' → logprob: -5.2966837882995605
    7. '   ' → logprob: -5.6716837882995605
    8. '"' → logprob: -6.0466837882995605
    9. ' leur' → logprob: -6.2966837882995605
    10. ' une' → logprob: -6.5466837882995605

Token 429: ' maximum' (ID: 10562)
  Prédit: ' plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' plus' → logprob: -0.17663352191448212
    2. ' maximum' → logprob: -2.551633596420288
    3. 'plus' → logprob: -3.301633596420288
    4. 'sub' → logprob: -3.551633596420288
    5. ' max' → logprob: -5.676633358001709
    6. 'maximum' → logprob: -5.801633358001709
    7. ' maximal' → logprob: -6.051633358001709
    8. ' sub' → logprob: -6.301633358001709
    9. 'max' → logprob: -6.551633358001709
    10. 's' → logprob: -6.551633358001709

Token 430: ' parmi' (ID: 51713)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.026355106383562088
    2. ' parmi' → logprob: -4.401355266571045
    3. '   ' → logprob: -5.276355266571045
    4. ' de' → logprob: -5.901355266571045
    5. ' possible' → logprob: -6.151355266571045
    6. ' restant' → logprob: -7.401355266571045
    7. 'des' → logprob: -7.526355266571045
    8. ' alternatif' → logprob: -7.776355266571045
    9. 'sub' → logprob: -8.276354789733887
    10. ' substit' → logprob: -8.526354789733887

Token 431: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.14772801101207733
    2. 'les' → logprob: -2.1477279663085938
    3. ' tous' → logprob: -4.272727966308594
    4. 't' → logprob: -6.022727966308594
    5. ' la' → logprob: -6.897727966308594
    6. 's' → logprob: -7.022727966308594
    7. 'l' → logprob: -7.522727966308594
    8. 'la' → logprob: -7.772727966308594
    9. '   ' → logprob: -8.022727966308594
    10. 'tout' → logprob: -9.022727966308594

Token 432: ' autres' (ID: 18701)
  Prédit: 'aut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aut' → logprob: -0.10051536560058594
    2. ' autres' → logprob: -2.350515365600586
    3. 'other' → logprob: -9.475515365600586
    4. ' valeurs' → logprob: -9.475515365600586
    5. ' autre' → logprob: -10.225515365600586
    6. 'val' → logprob: -11.225515365600586
    7. ' aut' → logprob: -11.350515365600586
    8. ' other' → logprob: -11.725515365600586
    9. 'auts' → logprob: -11.725515365600586
    10. 'élé' → logprob: -11.850515365600586

Token 433: ' éléments' (ID: 57375)
  Prédit: ' éléments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' éléments' → logprob: -0.22225205600261688
    2. ' elements' → logprob: -2.722252130508423
    3. ' valeurs' → logprob: -2.722252130508423
    4. 'élé' → logprob: -3.597252130508423
    5. '_' → logprob: -4.347251892089844
    6. '   ' → logprob: -4.597251892089844
    7. 'elements' → logprob: -5.222251892089844
    8. ' ent' → logprob: -5.847251892089844
    9. 'ent' → logprob: -6.347251892089844
    10. ' values' → logprob: -6.472251892089844

Token 434: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.07207212597131729
    2. '   ' → logprob: -2.6970720291137695
    3. 'de' → logprob: -6.4470720291137695
    4. '.' → logprob: -8.19707202911377
    5. '    ' → logprob: -9.69707202911377
    6. ',' → logprob: -9.94707202911377
    7. 's' → logprob: -10.44707202911377
    8. '(s' → logprob: -10.69707202911377
    9. ' def' → logprob: -10.94707202911377
    10. ' of' → logprob: -10.94707202911377

Token 435: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.1805804818868637
    2. ' la' → logprob: -1.805580496788025
    3. 'l' → logprob: -7.5555806159973145
    4. '   ' → logprob: -8.680580139160156
    5. 'liste' → logprob: -9.430580139160156
    6. 'list' → logprob: -11.180580139160156
    7. '```' → logprob: -11.430580139160156
    8. 's' → logprob: -11.680580139160156
    9. 'a' → logprob: -12.430580139160156
    10. ' ' → logprob: -12.805580139160156

Token 436: ' liste' (ID: 31719)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.018806928768754005
    2. ' liste' → logprob: -4.2688069343566895
    3. 'list' → logprob: -5.3938069343566895
    4. '   ' → logprob: -9.893806457519531
    5. ' list' → logprob: -10.518806457519531
    6. 'l' → logprob: -13.018806457519531
    7. 'lis' → logprob: -13.518806457519531
    8. 'lista' → logprob: -13.643806457519531
    9. 'Liste' → logprob: -13.768806457519531
    10. '```' → logprob: -13.768806457519531

Token 437: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007613963447511196
    2. '.' → logprob: -5.0076141357421875
    3. ',' → logprob: -7.1326141357421875
    4. ':' → logprob: -9.632614135742188
    5. 'def' → logprob: -11.257614135742188
    6. ')' → logprob: -11.507614135742188
    7. '.
' → logprob: -13.632614135742188
    8. '    
' → logprob: -13.757614135742188
    9. ' de' → logprob: -14.132614135742188
    10. ').' → logprob: -14.382614135742188

Token 438: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1398757123970427e-05
    2. '```' → logprob: -12.375011444091797
    3. '
' → logprob: -12.500011444091797
    4. '    
' → logprob: -13.500011444091797
    5. 'def' → logprob: -14.250011444091797
    6. ':' → logprob: -15.375011444091797
    7. ')' → logprob: -15.500011444091797
    8. '       ' → logprob: -15.750011444091797
    9. '#' → logprob: -15.750011444091797
    10. 'import' → logprob: -16.125011444091797

Token 439: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0003099599271081388
    2. '
' → logprob: -8.500309944152832
    3. '    
' → logprob: -9.500309944152832
    4. '```' → logprob: -11.000309944152832
    5. 'def' → logprob: -12.125309944152832
    6. '#' → logprob: -13.750309944152832
    7. '  
' → logprob: -14.000309944152832
    8. '    ' → logprob: -14.125309944152832
    9. '   
' → logprob: -14.125309944152832
    10. '  ' → logprob: -14.250309944152832

Token 440: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.026906704530119896
    2. 'size' → logprob: -3.651906728744507
    3. ' size' → logprob: -8.276906967163086
    4. 'n' → logprob: -8.276906967163086
    5. 'length' → logprob: -9.401906967163086
    6. '```' → logprob: -12.526906967163086
    7. ' n' → logprob: -12.776906967163086
    8. 'num' → logprob: -13.151906967163086
    9. '    
' → logprob: -13.401906967163086
    10. 'tail' → logprob: -14.151906967163086

Token 441: ' #' (ID: 1069)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.18857133388519287
    2. '   ' → logprob: -2.4385714530944824
    3. 'list' → logprob: -2.8135714530944824
    4. 'n' → logprob: -4.188571453094482
    5. 'length' → logprob: -5.063571453094482
    6. ' size' → logprob: -5.938571453094482
    7. ' list' → logprob: -8.313570976257324
    8. ' n' → logprob: -8.813570976257324
    9. ' length' → logprob: -11.188570976257324
    10. 'tail' → logprob: -11.563570976257324

Token 442: ' Dem' (ID: 9458)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.05913819000124931
    2. 'list' → logprob: -3.559138298034668
    3. 'n' → logprob: -4.559138298034668
    4. '   ' → logprob: -4.934138298034668
    5. ' size' → logprob: -5.309138298034668
    6. 'length' → logprob: -5.434138298034668
    7. 'tail' → logprob: -6.559138298034668
    8. ' n' → logprob: -8.434138298034668
    9. ' list' → logprob: -8.684138298034668
    10. ' taille' → logprob: -9.934138298034668

Token 443: 'ande' (ID: 4102)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3360028564929962
    2. 'size' → logprob: -2.086002826690674
    3. 'ande' → logprob: -2.336002826690674
    4. 'tail' → logprob: -4.086002826690674
    5. 'ander' → logprob: -4.461002826690674
    6. 'iere' → logprob: -5.086002826690674
    7. '_size' → logprob: -5.461002826690674
    8. 'e' → logprob: -5.586002826690674
    9. 'int' → logprob: -6.086002826690674
    10. 'ière' → logprob: -6.086002826690674

Token 444: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.07693972438573837
    2. '   ' → logprob: -3.201939821243286
    3. 'length' → logprob: -4.201939582824707
    4. '("' → logprob: -4.701939582824707
    5. 'size' → logprob: -6.201939582824707
    6. 'la' → logprob: -6.201939582824707
    7. ' length' → logprob: -6.826939582824707
    8. ' size' → logprob: -6.951939582824707
    9. ' une' → logprob: -7.076939582824707
    10. ' de' → logprob: -7.951939582824707

Token 445: ' taille' (ID: 41644)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.2251000851392746
    2. 'list' → logprob: -2.100100040435791
    3. 'tail' → logprob: -3.350100040435791
    4. 'length' → logprob: -3.475100040435791
    5. 'n' → logprob: -4.600100040435791
    6. 'liste' → logprob: -6.725100040435791
    7. ' size' → logprob: -7.350100040435791
    8. 'long' → logprob: -7.725100040435791
    9. '   ' → logprob: -7.850100040435791
    10. 't' → logprob: -9.60010051727295

Token 446: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10183007270097733
    2. ' =' → logprob: -2.976830005645752
    3. ' de' → logprob: -3.351830005645752
    4. 'size' → logprob: -5.226830005645752
    5. 'de' → logprob: -6.351830005645752
    6. ' size' → logprob: -6.601830005645752
    7. '=' → logprob: -6.851830005645752
    8. '=size' → logprob: -7.851830005645752
    9. '(size' → logprob: -8.35183048248291
    10. ':' → logprob: -8.60183048248291

Token 447: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.4791317582130432
    2. ' la' → logprob: -0.9791317582130432
    3. 'l' → logprob: -5.729131698608398
    4. 'liste' → logprob: -6.604131698608398
    5. 'list' → logprob: -8.604131698608398
    6. ' ' → logprob: -9.729131698608398
    7. ' liste' → logprob: -10.104131698608398
    8. ' l' → logprob: -10.354131698608398
    9. 'lst' → logprob: -10.479131698608398
    10. 'the' → logprob: -10.479131698608398

Token 448: ' liste' (ID: 31719)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.021295463666319847
    2. 'list' → logprob: -3.8962955474853516
    3. ' liste' → logprob: -7.521295547485352
    4. 'lista' → logprob: -8.646295547485352
    5. 'lst' → logprob: -11.896295547485352
    6. 'integer' → logprob: -12.271295547485352
    7. ' list' → logprob: -12.646295547485352
    8. 'l' → logprob: -12.771295547485352
    9. 'table' → logprob: -12.896295547485352
    10. 'array' → logprob: -13.021295547485352

Token 449: ' à' (ID: 1221)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7306978106498718
    2. 'size' → logprob: -0.9806978106498718
    3. ' size' → logprob: -2.2306978702545166
    4. 'n' → logprob: -3.4806978702545166
    5. ' n' → logprob: -5.4806976318359375
    6. 'length' → logprob: -7.7306976318359375
    7. 'list' → logprob: -8.230697631835938
    8. ' list' → logprob: -9.230697631835938
    9. ' length' → logprob: -9.730697631835938
    10. '(size' → logprob: -10.605697631835938

Token 450: ' l' (ID: 305)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.024167748168110847
    2. ' get' → logprob: -3.774167776107788
    3. 'l' → logprob: -7.149167537689209
    4. ' l' → logprob: -10.024168014526367
    5. 'int' → logprob: -10.774168014526367
    6. 'user' → logprob: -10.774168014526367
    7. '   ' → logprob: -11.149168014526367
    8. ' saisir' → logprob: -11.899168014526367
    9. ' ' → logprob: -12.274168014526367
    10. 'input' → logprob: -12.524168014526367

Token 451: ''utilisateur' (ID: 140803)
  Prédit: ''utilisateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''utilisateur' → logprob: -0.16869208216667175
    2. 'get' → logprob: -2.793692111968994
    3. 'user' → logprob: -3.043692111968994
    4. 'util' → logprob: -3.668692111968994
    5. '’utilisateur' → logprob: -5.293692111968994
    6. 'input' → logprob: -5.793692111968994
    7. ' user' → logprob: -5.918692111968994
    8. ' utilisateur' → logprob: -6.168692111968994
    9. 'a' → logprob: -6.543692111968994
    10. '_util' → logprob: -6.918692111968994

Token 452: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12027594447135925
    2. ' size' → logprob: -2.8702759742736816
    3. 'size' → logprob: -2.9952759742736816
    4. 'n' → logprob: -5.370275974273682
    5. ' n' → logprob: -6.495275974273682
    6. 'length' → logprob: -8.370275497436523
    7. ' length' → logprob: -9.245275497436523
    8. ' taille' → logprob: -10.120275497436523
    9. 'list' → logprob: -10.370275497436523
    10. ' list' → logprob: -10.745275497436523

Token 453: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0389539934694767
    2. ' size' → logprob: -3.663954019546509
    3. 'size' → logprob: -4.41395378112793
    4. 'n' → logprob: -8.41395378112793
    5. ' n' → logprob: -8.91395378112793
    6. 'length' → logprob: -10.16395378112793
    7. ' length' → logprob: -10.16395378112793
    8. ' taille' → logprob: -10.91395378112793
    9. 'list' → logprob: -12.66395378112793
    10. ' list' → logprob: -12.66395378112793

Token 454: ' N' (ID: 478)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.04642294719815254
    2. '   ' → logprob: -3.9214229583740234
    3. ' size' → logprob: -4.046422958374023
    4. 'list' → logprob: -5.171422958374023
    5. 'n' → logprob: -6.171422958374023
    6. 'length' → logprob: -8.796422958374023
    7. ' list' → logprob: -9.421422958374023
    8. ' n' → logprob: -9.921422958374023
    9. ' taille' → logprob: -12.546422958374023
    10. 'num' → logprob: -13.046422958374023

Token 455: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1002078503370285
    2. '=' → logprob: -2.350207805633545
    3. '=int' → logprob: -14.350208282470703
    4. ')' → logprob: -15.600208282470703
    5. ' ' → logprob: -16.100208282470703
    6. '   ' → logprob: -16.600208282470703
    7. '=input' → logprob: -16.600208282470703
    8. '_' → logprob: -16.975208282470703
    9. 'space' → logprob: -17.100208282470703
    10. '=get' → logprob: -17.350208282470703

Token 456: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.4740770161151886
    2. ' get' → logprob: -0.9740769863128662
    3. 'int' → logprob: -19.599077224731445
    4. '(get' → logprob: -19.974077224731445
    5. '	get' → logprob: -20.224077224731445
    6. ' int' → logprob: -20.599077224731445
    7. '_get' → logprob: -20.849077224731445
    8. '.get' → logprob: -21.099077224731445
    9. '=get' → logprob: -22.099077224731445
    10. ')get' → logprob: -22.474077224731445

Token 457: '_integer' (ID: 82911)
  Prédit: '_integer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_integer' → logprob: -5.200166469876422e-06
    2. '_INTEGER' → logprob: -12.875004768371582
    3. 'Integer' → logprob: -13.000004768371582
    4. 'integer' → logprob: -15.625004768371582
    5. '_' → logprob: -16.5000057220459
    6. '_Integer' → logprob: -17.3750057220459
    7. ' integer' → logprob: -17.5000057220459
    8. '_int' → logprob: -17.6250057220459
    9. '<Integer' → logprob: -17.7500057220459
    10. '_in' → logprob: -17.8750057220459

Token 458: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.002819612855091691
    2. '("_' → logprob: -6.002819538116455
    3. 'input' → logprob: -8.127820014953613
    4. '("' → logprob: -11.127820014953613
    5. 'Input' → logprob: -11.127820014953613
    6. '_' → logprob: -11.252820014953613
    7. '"_' → logprob: -13.002820014953613
    8. '(' → logprob: -13.502820014953613
    9. ' input' → logprob: -14.752820014953613
    10. '_INPUT' → logprob: -14.877820014953613

Token 459: '("")
' (ID: 66729)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '("' → logprob: -0.013423854485154152
    2. '("("' → logprob: -4.513423919677734
    3. '("")' → logprob: -6.513423919677734
    4. '(' → logprob: -7.888423919677734
    5. '(">' → logprob: -8.513423919677734
    6. '("(' → logprob: -8.638423919677734
    7. '(":' → logprob: -9.013423919677734
    8. '('' → logprob: -12.138423919677734
    9. '(""' → logprob: -12.888423919677734
    10. '("?' → logprob: -13.513423919677734

Token 460: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03918156027793884
    2. 'values' → logprob: -3.4141814708709717
    3. 'numbers' → logprob: -5.289181709289551
    4. ' values' → logprob: -8.91418170928955
    5. 'list' → logprob: -9.41418170928955
    6. '	values' → logprob: -9.53918170928955
    7. ' numbers' → logprob: -10.03918170928955
    8. '```' → logprob: -10.53918170928955
    9. '    
' → logprob: -10.66418170928955
    10. 'n' → logprob: -10.78918170928955

Token 461: ' #' (ID: 1069)
  Prédit: 'values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'values' → logprob: -0.16783058643341064
    2. '   ' → logprob: -2.042830467224121
    3. 'numbers' → logprob: -4.042830467224121
    4. ' values' → logprob: -5.042830467224121
    5. '	values' → logprob: -8.042830467224121
    6. 'lst' → logprob: -8.542830467224121
    7. ' numbers' → logprob: -8.792830467224121
    8. 'nums' → logprob: -10.542830467224121
    9. 'vals' → logprob: -10.667830467224121
    10. 'list' → logprob: -10.792830467224121

Token 462: ' R' (ID: 460)
  Prédit: 'values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'values' → logprob: -0.025846533477306366
    2. 'numbers' → logprob: -3.775846481323242
    3. ' values' → logprob: -6.025846481323242
    4. ' numbers' → logprob: -9.150846481323242
    5. 'lst' → logprob: -10.525846481323242
    6. 'nums' → logprob: -10.900846481323242
    7. 'vals' → logprob: -12.025846481323242
    8. 'arr' → logprob: -12.150846481323242
    9. 'value' → logprob: -12.275846481323242
    10. '   ' → logprob: -13.025846481323242

Token 463: 'éc' (ID: 5675)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -1.0939418077468872
    2. 'numbers' → logprob: -1.3439418077468872
    3. 'es' → logprob: -1.5939418077468872
    4. 'eturn' → logprob: -2.9689416885375977
    5. 'values' → logprob: -3.3439416885375977
    6. 'em' → logprob: -3.8439416885375977
    7. 'ec' → logprob: -4.093941688537598
    8. 'e' → logprob: -4.843941688537598
    9. '_numbers' → logprob: -4.968941688537598
    10. 'ead' → logprob: -5.093941688537598

Token 464: 'up' (ID: 817)
  Prédit: 'up'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'up' → logprob: -0.0011333089787513018
    2. 'uper' → logprob: -7.376133441925049
    3. 'cup' → logprob: -8.25113296508789
    4. 'éc' → logprob: -9.25113296508789
    5. 'u' → logprob: -10.12613296508789
    6. 'upe' → logprob: -10.87613296508789
    7. 'c' → logprob: -11.00113296508789
    8. 'cupe' → logprob: -11.12613296508789
    9. 'upr' → logprob: -11.12613296508789
    10. 'cu' → logprob: -11.50113296508789

Token 465: 'ère' (ID: 4346)
  Prédit: 'up'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'up' → logprob: -0.6403403282165527
    2. 'ère' → logprob: -0.8903403282165527
    3. 'er' → logprob: -3.5153403282165527
    4. 'ere' → logprob: -4.015340328216553
    5. '   ' → logprob: -4.640340328216553
    6. 'érer' → logprob: -6.015340328216553
    7. 'N' → logprob: -7.640340328216553
    8. '=' → logprob: -8.140340805053711
    9. 'ére' → logprob: -8.140340805053711
    10. '#' → logprob: -8.515340805053711

Token 466: ' la' (ID: 557)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.08130449056625366
    2. ' get' → logprob: -2.5813045501708984
    3. '(get' → logprob: -6.706304550170898
    4. 'values' → logprob: -7.581304550170898
    5. 'numbers' → logprob: -8.581304550170898
    6. '   ' → logprob: -9.081304550170898
    7. 'the' → logprob: -9.206304550170898
    8. ' the' → logprob: -9.331304550170898
    9. ' values' → logprob: -9.706304550170898
    10. ' numbers' → logprob: -9.706304550170898

Token 467: ' liste' (ID: 31719)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.9302194714546204
    2. 'values' → logprob: -0.9302194714546204
    3. 'numbers' → logprob: -1.8052194118499756
    4. 'integer' → logprob: -3.5552194118499756
    5. ' get' → logprob: -5.180219650268555
    6. ' values' → logprob: -5.805219650268555
    7. 'lst' → logprob: -5.930219650268555
    8. ' numbers' → logprob: -6.430219650268555
    9. 'inte' → logprob: -6.680219650268555
    10. 'list' → logprob: -6.930219650268555

Token 468: ' des' (ID: 731)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5552927255630493
    2. 'values' → logprob: -1.3052927255630493
    3. 'numbers' → logprob: -2.9302926063537598
    4. '=' → logprob: -3.4302926063537598
    5. '   ' → logprob: -3.8052926063537598
    6. ' values' → logprob: -4.80529260635376
    7. 'de' → logprob: -4.93029260635376
    8. ' numbers' → logprob: -5.43029260635376
    9. ' des' → logprob: -5.43029260635376
    10. 'd' → logprob: -5.68029260635376

Token 469: ' ent' (ID: 1121)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.8344926238059998
    2. 'numbers' → logprob: -1.8344926834106445
    3. ' integers' → logprob: -1.9594926834106445
    4. 'values' → logprob: -2.4594926834106445
    5. 'inte' → logprob: -2.8344926834106445
    6. ' get' → logprob: -2.8344926834106445
    7. 'ent' → logprob: -3.3344926834106445
    8. ' numbers' → logprob: -3.9594926834106445
    9. 'integer' → logprob: -5.8344926834106445
    10. ' values' → logprob: -5.9594926834106445

Token 470: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.10364385694265366
    2. 't' → logprob: -2.3536438941955566
    3. 'tiers' → logprob: -6.103643894195557
    4. 'ters' → logprob: -7.353643894195557
    5. 'ti' → logprob: -7.978643894195557
    6. 'ier' → logprob: -9.728643417358398
    7. 'tiens' → logprob: -10.478643417358398
    8. 'ter' → logprob: -10.603643417358398
    9. 'ières' → logprob: -11.353643417358398
    10. 'ents' → logprob: -11.353643417358398

Token 471: ' sa' (ID: 880)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.237582728266716
    2. ' =' → logprob: -2.8625826835632324
    3. 'N' → logprob: -3.2375826835632324
    4. 'values' → logprob: -3.6125826835632324
    5. ' N' → logprob: -3.9875826835632324
    6. '(N' → logprob: -4.237582683563232
    7. 'numbers' → logprob: -4.487582683563232
    8. ' values' → logprob: -4.612582683563232
    9. '(numbers' → logprob: -4.737582683563232
    10. '[N' → logprob: -4.862582683563232

Token 472: 'isis' (ID: 11352)
  Prédit: 'isis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isis' → logprob: -0.17650003731250763
    2. 'is' → logprob: -2.426500082015991
    3. 'nis' → logprob: -3.051500082015991
    4. 'ints' → logprob: -5.176499843597412
    5. 'ns' → logprob: -5.551499843597412
    6. 'nts' → logprob: -5.801499843597412
    7. 'ïs' → logprob: -5.801499843597412
    8. 'n' → logprob: -6.051499843597412
    9. 'sis' → logprob: -6.676499843597412
    10. 'ise' → logprob: -6.801499843597412

Token 473: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7924454808235168
    2. 'numbers' → logprob: -1.042445421218872
    3. 'values' → logprob: -1.792445421218872
    4. ' numbers' → logprob: -4.667445659637451
    5. '(numbers' → logprob: -5.167445659637451
    6. ' values' → logprob: -5.417445659637451
    7. 'lst' → logprob: -5.792445659637451
    8. 'nums' → logprob: -6.917445659637451
    9. '(values' → logprob: -7.167445659637451
    10. 'arr' → logprob: -7.792445659637451

Token 474: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6305693984031677
    2. 'numbers' → logprob: -1.3805694580078125
    3. ' numbers' → logprob: -2.3805694580078125
    4. 'values' → logprob: -2.5055694580078125
    5. ' values' → logprob: -3.5055694580078125
    6. ' integers' → logprob: -5.6305694580078125
    7. 'lst' → logprob: -6.1305694580078125
    8. ' lst' → logprob: -6.2555694580078125
    9. 'my' → logprob: -6.8805694580078125
    10. '(numbers' → logprob: -7.2555694580078125

Token 475: ' values' (ID: 4824)
  Prédit: 'values'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'values' (adapté à ' values') → logprob: -0.3395962119102478
    2. 'numbers' → logprob: -1.7145962715148926
    3. ' values' → logprob: -2.5895962715148926
    4. ' numbers' → logprob: -3.4645962715148926
    5. 'lst' → logprob: -7.589596271514893
    6. ' integers' → logprob: -8.214595794677734
    7. 'arr' → logprob: -8.589595794677734
    8. 'integer' → logprob: -8.839595794677734
    9. 'nums' → logprob: -9.214595794677734
    10. ' lst' → logprob: -9.714595794677734

Token 476: '_list' (ID: 4162)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868713676929474
    2. '=' → logprob: -1.136871337890625
    3. '=get' → logprob: -15.261871337890625
    4. ' ' → logprob: -17.761871337890625
    5. '   ' → logprob: -18.261871337890625
    6. ')' → logprob: -18.261871337890625
    7. '=create' → logprob: -18.636871337890625
    8. '＝' → logprob: -19.011871337890625
    9. ',' → logprob: -19.261871337890625
    10. '=list' → logprob: -19.511871337890625

Token 477: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10020678490400314
    2. '=' → logprob: -2.3502068519592285
    3. ')' → logprob: -16.72520637512207
    4. ' ' → logprob: -17.22520637512207
    5. '(' → logprob: -17.35020637512207
    6. '   ' → logprob: -18.35020637512207
    7. ' ' → logprob: -18.60020637512207
    8. '=get' → logprob: -18.72520637512207
    9. ',' → logprob: -19.10020637512207
    10. '  ' → logprob: -19.22520637512207

Token 478: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.06196824833750725
    2. ' get' → logprob: -2.8119683265686035
    3. 'copy' → logprob: -14.686967849731445
    4. '(get' → logprob: -16.311967849731445
    5. ' copy' → logprob: -17.061967849731445
    6. '=get' → logprob: -17.061967849731445
    7. '[get' → logprob: -17.561967849731445
    8. '.get' → logprob: -17.936967849731445
    9. '	get' → logprob: -18.186967849731445
    10. '_get' → logprob: -18.936967849731445

Token 479: '_integer' (ID: 82911)
  Prédit: '_integer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_integer' → logprob: -2.339278580620885e-06
    2. 'integer' → logprob: -13.250001907348633
    3. '_INTEGER' → logprob: -14.875001907348633
    4. 'Integer' → logprob: -15.875001907348633
    5. '_list' → logprob: -18.250001907348633
    6. 'int' → logprob: -18.875001907348633
    7. '_int' → logprob: -19.000001907348633
    8. '_' → logprob: -19.250001907348633
    9. ' integer' → logprob: -19.250001907348633
    10. '```' → logprob: -19.375001907348633

Token 480: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -7.896309739408025e-07
    2. 'list' → logprob: -14.625000953674316
    3. '_input' → logprob: -16.625
    4. 'List' → logprob: -16.75
    5. '_lists' → logprob: -17.5
    6. '```' → logprob: -19.125
    7. 's' → logprob: -19.875
    8. '_LIST' → logprob: -20.5
    9. '_' → logprob: -20.75
    10. ' list' → logprob: -21.375

Token 481: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -8.895480277715251e-06
    2. '(' → logprob: -11.875008583068848
    3. 'N' → logprob: -13.750008583068848
    4. ' (' → logprob: -14.250008583068848
    5. '(int' → logprob: -17.125009536743164
    6. '(n' → logprob: -18.000009536743164
    7. ' N' → logprob: -18.250009536743164
    8. '(
' → logprob: -18.250009536743164
    9. '```' → logprob: -19.125009536743164
    10. '(size' → logprob: -19.250009536743164

Token 482: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.596781946020201e-05
    2. '(""))' → logprob: -11.000045776367188
    3. '(' → logprob: -11.250045776367188
    4. ' )' → logprob: -12.125045776367188
    5. '))' → logprob: -12.625045776367188
    6. ')
' → logprob: -13.250045776367188
    7. '(N' → logprob: -13.375045776367188
    8. '")' → logprob: -14.000045776367188
    9. '("' → logprob: -14.250045776367188
    10. '   ' → logprob: -14.500045776367188

Token 483: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0015481874579563737
    2. 'print' → logprob: -6.8765482902526855
    3. '
' → logprob: -7.7515482902526855
    4. '```' → logprob: -9.876547813415527
    5. '    
' → logprob: -10.376547813415527
    6. ' print' → logprob: -13.376547813415527
    7. '	print' → logprob: -14.876547813415527
    8. '``' → logprob: -14.876547813415527
    9. '(print' → logprob: -16.501548767089844
    10. '       ' → logprob: -16.626548767089844

Token 484: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008657712489366531
    2. 'print' → logprob: -4.758657932281494
    3. '
' → logprob: -10.633657455444336
    4. ' print' → logprob: -11.133657455444336
    5. '```' → logprob: -12.508657455444336
    6. '    
' → logprob: -14.758657455444336
    7. '	print' → logprob: -15.008657455444336
    8. '``' → logprob: -16.883657455444336
    9. '(print' → logprob: -17.633657455444336
    10. '#print' → logprob: -18.258657455444336

Token 485: ' Aff' (ID: 13741)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.029832987114787102
    2. ' print' → logprob: -3.5298330783843994
    3. '   ' → logprob: -9.40483283996582
    4. '	print' → logprob: -16.77983283996582
    5. '.print' → logprob: -17.77983283996582
    6. ' ' → logprob: -17.90483283996582
    7. '  ' → logprob: -18.02983283996582
    8. '(print' → logprob: -18.15483283996582
    9. 'Print' → logprob: -18.27983283996582
    10. '#print' → logprob: -18.52983283996582

Token 486: 'iche' (ID: 7509)
  Prédit: 'iche'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iche' → logprob: -9.849109119386412e-06
    2. 'ic' → logprob: -11.875009536743164
    3. '   ' → logprob: -14.375009536743164
    4. 'icher' → logprob: -14.500009536743164
    5. 'fic' → logprob: -14.625009536743164
    6. 'ich' → logprob: -14.875009536743164
    7. 'ichage' → logprob: -15.250009536743164
    8. '_' → logprob: -15.375009536743164
    9. 'f' → logprob: -15.375009536743164
    10. 'che' → logprob: -16.250009536743164

Token 487: ' le' (ID: 505)
  Prédit: '_sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_sub' → logprob: -0.011279234662652016
    2. '_' → logprob: -5.261279106140137
    3. 'print' → logprob: -5.511279106140137
    4. 'sub' → logprob: -7.136279106140137
    5. '(print' → logprob: -7.886279106140137
    6. '(' → logprob: -8.261279106140137
    7. '   ' → logprob: -8.886279106140137
    8. '("' → logprob: -8.886279106140137
    9. ' print' → logprob: -9.886279106140137
    10. '_print' → logprob: -9.886279106140137

Token 488: ' résultat' (ID: 62556)
  Prédit: '_sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_sub' → logprob: -0.0009521945030428469
    2. 'sub' → logprob: -7.000952243804932
    3. '_' → logprob: -10.375951766967773
    4. 'print' → logprob: -12.000951766967773
    5. '_
' → logprob: -13.250951766967773
    6. 'Sub' → logprob: -14.625951766967773
    7. 's' → logprob: -15.375951766967773
    8. '"' → logprob: -15.750951766967773
    9. '
' → logprob: -15.750951766967773
    10. '_s' → logprob: -16.250951766967773

Token 489: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3146840035915375
    2. 'print' → logprob: -1.3146840333938599
    3. ' print' → logprob: -7.06468391418457
    4. '(print' → logprob: -7.56468391418457
    5. '(' → logprob: -10.93968391418457
    6. '	print' → logprob: -11.81468391418457
    7. '.print' → logprob: -12.18968391418457
    8. '  ' → logprob: -12.43968391418457
    9. '```' → logprob: -13.06468391418457
    10. ' ' → logprob: -13.43968391418457

Token 490: ' chaque' (ID: 21194)
  Prédit: 'values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'values' → logprob: -0.6084839105606079
    2. 'print' → logprob: -0.8584839105606079
    3. ' values' → logprob: -3.6084837913513184
    4. ' print' → logprob: -5.858483791351318
    5. 'sub' → logprob: -6.858483791351318
    6. '_sub' → logprob: -7.608483791351318
    7. '   ' → logprob: -8.483484268188477
    8. '(values' → logprob: -8.858484268188477
    9. '_' → logprob: -9.983484268188477
    10. '_values' → logprob: -10.108484268188477

Token 491: ' élément' (ID: 99627)
  Prédit: 'values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'values' → logprob: -0.5150005221366882
    2. 'val' → logprob: -2.015000581741333
    3. '_sub' → logprob: -2.140000581741333
    4. 'value' → logprob: -2.515000581741333
    5. '_' → logprob: -3.640000581741333
    6. ' values' → logprob: -3.890000581741333
    7. 'element' → logprob: -4.765000343322754
    8. 'sub' → logprob: -5.515000343322754
    9. ' valeur' → logprob: -6.015000343322754
    10. ' value' → logprob: -6.265000343322754

Token 492: ' comme' (ID: 7971)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4865722060203552
    2. 'print' → logprob: -0.9865722060203552
    3. ' print' → logprob: -5.361572265625
    4. '(print' → logprob: -5.361572265625
    5. '(values' → logprob: -6.111572265625
    6. '(' → logprob: -8.111572265625
    7. 'values' → logprob: -8.111572265625
    8. ' values' → logprob: -9.361572265625
    9. ' (' → logprob: -9.861572265625
    10. '```' → logprob: -10.861572265625

Token 493: ' décrit' (ID: 169431)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07684965431690216
    2. '_sub' → logprob: -2.7018496990203857
    3. 'sub' → logprob: -6.826849460601807
    4. '```' → logprob: -6.826849460601807
    5. ' print' → logprob: -7.201849460601807
    6. ' la' → logprob: -7.201849460601807
    7. '    ' → logprob: -7.826849460601807
    8. 'print' → logprob: -7.826849460601807
    9. '  ' → logprob: -8.076849937438965
    10. '    
' → logprob: -8.201849937438965

Token 494: ' ci' (ID: 7405)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09469083696603775
    2. '_sub' → logprob: -2.9696907997131348
    3. '(values' → logprob: -4.219690799713135
    4. ' dans' → logprob: -4.844690799713135
    5. '_' → logprob: -5.344690799713135
    6. '(' → logprob: -5.469690799713135
    7. '(
' → logprob: -6.844690799713135
    8. ' ' → logprob: -6.969690799713135
    9. 'dans' → logprob: -7.094690799713135
    10. '_values' → logprob: -7.344690799713135

Token 495: '-dessus' (ID: 74812)
  Prédit: '-dessous'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-dessous' → logprob: -0.44703683257102966
    2. '-dessus' → logprob: -1.197036862373352
    3. 'dess' → logprob: -3.3220367431640625
    4. '   ' → logprob: -4.1970367431640625
    5. 'ap' → logprob: -5.1970367431640625
    6. '       ' → logprob: -7.8220367431640625
    7. ' dessous' → logprob: -8.072036743164062
    8. '-ap' → logprob: -8.072036743164062
    9. '-' → logprob: -8.822036743164062
    10. 'dans' → logprob: -9.322036743164062

Token 496: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2851606011390686
    2. 'print' → logprob: -1.4101605415344238
    3. ' print' → logprob: -6.035160541534424
    4. '(print' → logprob: -7.035160541534424
    5. '
' → logprob: -7.660160541534424
    6. '(' → logprob: -9.660161018371582
    7. '    
' → logprob: -10.035161018371582
    8. '```' → logprob: -10.535161018371582
    9. '	print' → logprob: -10.660161018371582
    10. '.print' → logprob: -10.660161018371582

Token 497: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002494683489203453
    2. 'print' → logprob: -6.002494812011719
    3. ' print' → logprob: -11.002494812011719
    4. '
' → logprob: -13.752494812011719
    5. '	print' → logprob: -14.752494812011719
    6. '(print' → logprob: -14.752494812011719
    7. '    
' → logprob: -15.002494812011719
    8. '```' → logprob: -15.877494812011719
    9. '   ' → logprob: -17.12749481201172
    10. '       ' → logprob: -17.12749481201172

Token 498: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.03000560775399208
    2. ' print' → logprob: -3.530005693435669
    3. '   ' → logprob: -8.28000545501709
    4. '
' → logprob: -14.90500545501709
    5. '.print' → logprob: -15.03000545501709
    6. '	print' → logprob: -15.28000545501709
    7. '(print' → logprob: -15.40500545501709
    8. '```' → logprob: -15.65500545501709
    9. '    
' → logprob: -15.78000545501709
    10. '_print' → logprob: -16.530006408691406

Token 499: '_sub' (ID: 11572)
  Prédit: '_sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sub' → logprob: -5.438573680294212e-06
    2. '_' → logprob: -12.500005722045898
    3. '("_' → logprob: -14.625005722045898
    4. '(' → logprob: -15.125005722045898
    5. '"_' → logprob: -15.250005722045898
    6. 'sub' → logprob: -15.375005722045898
    7. '(_' → logprob: -15.375005722045898
    8. '('_' → logprob: -16.0000057220459
    9. 'Sub' → logprob: -17.0000057220459
    10. 's' → logprob: -17.3750057220459

Token 500: 'stitute' (ID: 68516)
  Prédit: 'stitute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stitute' → logprob: -0.03324485197663307
    2. '_sub' → logprob: -3.5332448482513428
    3. '_' → logprob: -6.158245086669922
    4. 'stit' → logprob: -6.908245086669922
    5. 'st' → logprob: -9.283245086669922
    6. '_st' → logprob: -9.408245086669922
    7. '_replace' → logprob: -9.533245086669922
    8. 'sti' → logprob: -10.033245086669922
    9. 'tit' → logprob: -11.033245086669922
    10. '_s' → logprob: -11.158245086669922

Token 501: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.0001617035741219297
    2. 'max' → logprob: -8.750162124633789
    3. '_' → logprob: -13.000162124633789
    4. 'Max' → logprob: -14.750162124633789
    5. '_MAX' → logprob: -15.625162124633789
    6. '(max' → logprob: -15.750162124633789
    7. ' max' → logprob: -16.50016212463379
    8. '_values' → logprob: -16.62516212463379
    9. ' _' → logprob: -17.25016212463379
    10. ')_' → logprob: -17.37516212463379

Token 502: '_values' (ID: 20393)
  Prédit: '_values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_values' → logprob: -8.673547563375905e-05
    2. '_max' → logprob: -9.750086784362793
    3. '_value' → logprob: -11.000086784362793
    4. '_' → logprob: -12.125086784362793
    5. '_val' → logprob: -13.250086784362793
    6. '_vals' → logprob: -13.625086784362793
    7. ')_' → logprob: -14.000086784362793
    8. ' _' → logprob: -14.625086784362793
    9. 'values' → logprob: -14.750086784362793
    10. 's' → logprob: -14.875086784362793

Token 503: '(values' (ID: 40883)
  Prédit: '(values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(values' → logprob: -7.896309739408025e-07
    2. 'values' → logprob: -14.750000953674316
    3. '(' → logprob: -16.125
    4. ' (' → logprob: -16.625
    5. '(results' → logprob: -17.5
    6. '(numbers' → logprob: -18.375
    7. '(vals' → logprob: -18.5
    8. ' values' → logprob: -19.0
    9. '```' → logprob: -19.0
    10. '(points' → logprob: -20.0

Token 504: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -7.5649528298527e-05
    2. ')' → logprob: -9.750075340270996
    3. '_values' → logprob: -11.625075340270996
    4. ')_' → logprob: -12.750075340270996
    5. '_lists' → logprob: -13.125075340270996
    6. '_)' → logprob: -13.750075340270996
    7. 'list' → logprob: -13.750075340270996
    8. 's' → logprob: -14.875075340270996
    9. '_' → logprob: -15.250075340270996
    10. 'List' → logprob: -15.500075340270996

Token 505: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.3199920178740285e-05
    2. '())' → logprob: -10.875022888183594
    3. ')
' → logprob: -13.250022888183594
    4. '()' → logprob: -13.625022888183594
    5. ')`' → logprob: -15.000022888183594
    6. '(' → logprob: -15.125022888183594
    7. '))' → logprob: -15.375022888183594
    8. '   ' → logprob: -15.500022888183594
    9. ' )' → logprob: -15.875022888183594
    10. '(values' → logprob: -16.250022888183594

Token 506: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.31355011463165283
    2. '
' → logprob: -1.3135501146316528
    3. '\n' → logprob: -8.938549995422363
    4. '

' → logprob: -9.813549995422363
    5. ' if' → logprob: -10.063549995422363
    6. '```' → logprob: -10.813549995422363
    7. '
' → logprob: -11.313549995422363
    8. 'main' → logprob: -11.813549995422363
    9. '  
' → logprob: -11.938549995422363
    10. 'print' → logprob: -12.938549995422363

Token 507: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.3874754011631012
    2. '__' → logprob: -1.1374753713607788
    3. ' ' → logprob: -8.26247501373291
    4. '_' → logprob: -8.26247501373291
    5. 'name' → logprob: -10.51247501373291
    6. '___' → logprob: -10.76247501373291
    7. '_name' → logprob: -11.01247501373291
    8. ' ' → logprob: -12.51247501373291
    9. '﻿' → logprob: -12.88747501373291
    10. ' ' → logprob: -13.01247501373291

Token 508: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.5581011772155762
    2. ' ==' → logprob: -1.4331011772155762
    3. '==' → logprob: -1.6831011772155762
    4. '=="' → logprob: -6.058101177215576
    5. 'name' → logprob: -7.808101177215576
    6. ' __' → logprob: -8.058101654052734
    7. '=='' → logprob: -8.683101654052734
    8. '.__' → logprob: -9.808101654052734
    9. '__.__' → logprob: -11.433101654052734
    10. 'main' → logprob: -11.558101654052734

Token 509: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -5.2524021157296374e-05
    2. '==' → logprob: -10.000052452087402
    3. '__.__' → logprob: -12.625052452087402
    4. '=="' → logprob: -13.125052452087402
    5. ' ==' → logprob: -13.500052452087402
    6. '___' → logprob: -16.25005340576172
    7. '__["' → logprob: -16.37505340576172
    8. '____' → logprob: -16.75005340576172
    9. '_' → logprob: -17.25005340576172
    10. '"' → logprob: -17.37505340576172

Token 510: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.015117046423256397
    2. '==' → logprob: -4.265117168426514
    3. ' ==' → logprob: -7.265117168426514
    4. '=="' → logprob: -8.390116691589355
    5. '__.__' → logprob: -11.640116691589355
    6. '=='' → logprob: -12.015116691589355
    7. '_' → logprob: -12.390116691589355
    8. '=' → logprob: -12.515116691589355
    9. '___' → logprob: -14.140116691589355
    10. '.__' → logprob: -14.765116691589355

Token 511: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0009589854744262993
    2. ''' → logprob: -7.0009589195251465
    3. ' "__' → logprob: -10.000959396362305
    4. '__' → logprob: -13.250959396362305
    5. '"user' → logprob: -15.625959396362305
    6. '"name' → logprob: -16.125959396362305
    7. ' '__' → logprob: -16.375959396362305
    8. '("__' → logprob: -17.500959396362305
    9. '"class' → logprob: -18.000959396362305
    10. '"_' → logprob: -18.500959396362305

Token 512: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -3.128163257315464e-07
    2. 'name' → logprob: -15.875
    3. ' main' → logprob: -16.75
    4. 'm' → logprob: -18.5
    5. '_main' → logprob: -18.5
    6. 'maine' → logprob: -19.0
    7. '	main' → logprob: -19.625
    8. 'g' → logprob: -20.0
    9. '__' → logprob: -20.125
    10. 'ma' → logprob: -20.125

Token 513: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.16024057567119598
    2. '__' → logprob: -1.9102405309677124
    3. '__':
' → logprob: -11.160240173339844
    4. '__["' → logprob: -13.785240173339844
    5. '"' → logprob: -15.035240173339844
    6. '__("' → logprob: -15.035240173339844
    7. '```' → logprob: -15.785240173339844
    8. '__",' → logprob: -16.410240173339844
    9. '__:' → logprob: -16.660240173339844
    10. '__.__' → logprob: -16.660240173339844

Token 514: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.2558158040046692
    2. ' main' → logprob: -1.5058157444000244
    3. '   ' → logprob: -5.7558159828186035
    4. '	main' → logprob: -7.5058159828186035
    5. '__' → logprob: -8.880815505981445
    6. '_main' → logprob: -11.380815505981445
    7. ' __' → logprob: -11.630815505981445
    8. '    
' → logprob: -13.630815505981445
    9. ' ' → logprob: -13.880815505981445
    10. ' ' → logprob: -14.005815505981445

Token 515: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -0.00043281487887725234
    2. ' main' → logprob: -7.750432968139648
    3. '   ' → logprob: -13.750432968139648
    4. '	main' → logprob: -13.750432968139648
    5. '_main' → logprob: -20.12543296813965
    6. '(main' → logprob: -21.75043296813965
    7. '.main' → logprob: -21.75043296813965
    8. 'Main' → logprob: -23.37543296813965
    9. ' ' → logprob: -23.50043296813965
    10. '  ' → logprob: -23.75043296813965

Token 516: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.058371372520923615
    2. '<|end|>' → logprob: -3.0583713054656982
    3. '(' → logprob: -5.433371543884277
    4. '
' → logprob: -6.058371543884277
    5. '#' → logprob: -6.933371543884277
    6. ')' → logprob: -7.433371543884277
    7. '()
' → logprob: -7.683371543884277
    8. '```' → logprob: -7.808371543884277
    9. '(
' → logprob: -8.933371543884277
    10. '<|end|>' → logprob: -8.933371543884277


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 514
Tokens correctement prédits (1ère position, stricte): 176
Tokens correctement prédits (1ère position, avec adaptation): 190
Tokens correctement prédits (top 10): 352
Précision stricte (1ère position): 34.24%
Précision adaptée (1ère position): 36.96%
Précision (top 10): 68.48%
================================================================================
