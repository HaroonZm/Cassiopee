================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:59:27
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n = int(input())
rs = []
for i in range(n):
    s, p = input().split()
    p = int(p)
    rs.append([[s, -p], i+1])
for r in sorted(rs):
    print(r[1])
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0004278083215467632
    2. ''' → logprob: -8.625428199768066
    3. '('' → logprob: -9.375428199768066
    4. '(n' → logprob: -9.875428199768066
    5. '```' → logprob: -10.375428199768066
    6. '`' → logprob: -10.750428199768066
    7. '("("' → logprob: -11.125428199768066
    8. '(
' → logprob: -11.125428199768066
    9. ')' → logprob: -11.750428199768066
    10. '()' → logprob: -12.250428199768066

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.13287097215652466
    2. ')' → logprob: -2.13287091255188
    3. '()' → logprob: -5.382871150970459
    4. '())' → logprob: -7.382871150970459
    5. '(
' → logprob: -8.1328706741333
    6. '```' → logprob: -9.8828706741333
    7. '(

' → logprob: -10.2578706741333
    8. '('' → logprob: -10.3828706741333
    9. ''' → logprob: -10.6328706741333
    10. '(n' → logprob: -10.7578706741333

Token 5: 'rs' (ID: 6435)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7043631672859192
    2. 'if' → logprob: -1.4543631076812744
    3. 'for' → logprob: -2.3293631076812744
    4. 's' → logprob: -2.4543631076812744
    5. 'f' → logprob: -4.3293633460998535
    6. ' ' → logprob: -4.4543633460998535
    7. 'x' → logprob: -4.8293633460998535
    8. ')' → logprob: -4.9543633460998535
    9. 'a' → logprob: -4.9543633460998535
    10. ''' → logprob: -5.0793633460998535

Token 6: ' =' (ID: 314)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.45474663376808167
    2. 'u' → logprob: -1.8297466039657593
    3. '.' → logprob: -2.829746723175049
    4. '=' → logprob: -3.204746723175049
    5. 'um' → logprob: -3.829746723175049
    6. 'q' → logprob: -4.079746723175049
    7. 'quare' → logprob: -4.079746723175049
    8. ' =' → logprob: -4.329746723175049
    9. 'r' → logprob: -4.579746723175049
    10. 'e' → logprob: -5.329746723175049

Token 7: ' []
' (ID: 8911)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' []' → logprob: -1.5373339653015137
    2. '0' → logprob: -1.6623339653015137
    3. ' n' → logprob: -2.1623339653015137
    4. 'n' → logprob: -2.1623339653015137
    5. ' ' → logprob: -2.2873339653015137
    6. 'input' → logprob: -2.7873339653015137
    7. '"' → logprob: -2.9123339653015137
    8. ' input' → logprob: -3.0373339653015137
    9. '[]' → logprob: -3.1623339653015137
    10. 'sum' → logprob: -4.287333965301514

Token 8: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00171278219204396
    2. ' for' → logprob: -6.501712799072266
    3. '```' → logprob: -8.751712799072266
    4. 'f' → logprob: -10.626712799072266
    5. '`' → logprob: -11.501712799072266
    6. 'r' → logprob: -11.626712799072266
    7. 'i' → logprob: -13.501712799072266
    8. 'fo' → logprob: -13.876712799072266
    9. '_' → logprob: -13.876712799072266
    10. '\n' → logprob: -14.001712799072266

Token 9: ' i' (ID: 575)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.04354669898748398
    2. ' i' → logprob: -3.293546676635742
    3. '  ' → logprob: -5.293546676635742
    4. ' n' → logprob: -8.668546676635742
    5. ' ‌' → logprob: -8.668546676635742
    6. 'i' → logprob: -10.043546676635742
    7. ' ' → logprob: -11.043546676635742
    8. ' _' → logprob: -11.168546676635742
    9. ' )' → logprob: -11.918546676635742
    10. '_' → logprob: -12.168546676635742

Token 10: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4757847785949707
    2. 'n' → logprob: -1.2257847785949707
    3. 'in' → logprob: -3.1007847785949707
    4. ' ' → logprob: -3.7257847785949707
    5. ' n' → logprob: -4.225784778594971
    6. '  ' → logprob: -7.475784778594971
    7. '_' → logprob: -8.850784301757812
    8. ')' → logprob: -8.975784301757812
    9. 'nt' → logprob: -9.225784301757812
    10. 'space' → logprob: -9.725784301757812

Token 11: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.1805235743522644
    2. 'range' → logprob: -1.8055236339569092
    3. ' ' → logprob: -7.30552339553833
    4. ' n' → logprob: -10.180523872375488
    5. ' in' → logprob: -10.555523872375488
    6. 'n' → logprob: -11.055523872375488
    7. '	range' → logprob: -11.555523872375488
    8. 'in' → logprob: -12.055523872375488
    9. ' xrange' → logprob: -12.680523872375488
    10. '(range' → logprob: -13.180523872375488

Token 12: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01257074810564518
    2. '(n' → logprob: -4.387570858001709
    3. ' (' → logprob: -10.01257038116455
    4. '(range' → logprob: -11.76257038116455
    5. '(
' → logprob: -12.63757038116455
    6. '(len' → logprob: -13.63757038116455
    7. '(i' → logprob: -13.88757038116455
    8. '(space' → logprob: -14.51257038116455
    9. '(

' → logprob: -14.51257038116455
    10. '()' → logprob: -15.01257038116455

Token 13: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.005790493451058865
    2. ')' → logprob: -5.255790710449219
    3. '+' → logprob: -7.630790710449219
    4. ' ):' → logprob: -10.005790710449219
    5. '):
' → logprob: -11.255790710449219
    6. ':' → logprob: -11.880790710449219
    7. '+:' → logprob: -14.505790710449219
    8. 'in' → logprob: -14.505790710449219
    9. ' ' → logprob: -14.630790710449219
    10. '),' → logprob: -14.755790710449219

Token 14: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8651756048202515
    2. '    ' → logprob: -0.9901756048202515
    3. ' ' → logprob: -1.7401756048202515
    4. ' rs' → logprob: -3.990175724029541
    5. ' input' → logprob: -6.115175724029541
    6. '     
' → logprob: -6.365175724029541
    7. ' ```' → logprob: -6.490175724029541
    8. 'rs' → logprob: -6.740175724029541
    9. 'r' → logprob: -6.740175724029541
    10. '```' → logprob: -6.865175724029541

Token 15: ' s' (ID: 265)
  Prédit: ' rs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rs' → logprob: -0.21352235972881317
    2. '   ' → logprob: -2.963522434234619
    3. ' line' → logprob: -3.088522434234619
    4. 'rs' → logprob: -3.338522434234619
    5. '    ' → logprob: -4.588522434234619
    6. ' r' → logprob: -4.838522434234619
    7. ' x' → logprob: -4.963522434234619
    8. ' s' → logprob: -5.213522434234619
    9. ' data' → logprob: -5.588522434234619
    10. 'r' → logprob: -5.838522434234619

Token 16: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0676141008734703
    2. 'tr' → logprob: -3.1926140785217285
    3. '=' → logprob: -4.0676140785217285
    4. '=input' → logprob: -5.1926140785217285
    5. ' ' → logprob: -7.3176140785217285
    6. '.append' → logprob: -8.442614555358887
    7. 'tring' → logprob: -8.442614555358887
    8. '   ' → logprob: -8.942614555358887
    9. 't' → logprob: -9.192614555358887
    10. 'input' → logprob: -9.317614555358887

Token 17: ' p' (ID: 275)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.7634007334709167
    2. '=' → logprob: -1.6384007930755615
    3. ' t' → logprob: -2.1384007930755615
    4. ' =' → logprob: -2.6384007930755615
    5. 'r' → logprob: -2.8884007930755615
    6. 'd' → logprob: -3.8884007930755615
    7. ' ' → logprob: -4.013400554656982
    8. 'rs' → logprob: -4.638400554656982
    9. 'input' → logprob: -5.013400554656982
    10. 'a' → logprob: -5.263400554656982

Token 18: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.22574198246002197
    2. ' =' → logprob: -1.600741982460022
    3. ',' → logprob: -8.47574234008789
    4. ')' → logprob: -9.35074234008789
    5. ' ' → logprob: -12.72574234008789
    6. 's' → logprob: -12.85074234008789
    7. '_' → logprob: -12.85074234008789
    8. '=input' → logprob: -13.10074234008789
    9. 'p' → logprob: -13.35074234008789
    10. 'iece' → logprob: -13.47574234008789

Token 19: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.30775755643844604
    2. 'input' → logprob: -1.5577576160430908
    3. ' map' → logprob: -3.057757616043091
    4. 'map' → logprob: -4.932757377624512
    5. ' ' → logprob: -10.557757377624512
    6. ' list' → logprob: -10.932757377624512
    7. 'list' → logprob: -11.557757377624512
    8. ' [' → logprob: -11.807757377624512
    9. '[input' → logprob: -11.932757377624512
    10. '(input' → logprob: -12.057757377624512

Token 20: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.009944136254489422
    2. '()' → logprob: -4.634943962097168
    3. '('' → logprob: -9.509943962097168
    4. '(' → logprob: -9.759943962097168
    5. '("' → logprob: -10.009943962097168
    6. ')' → logprob: -12.884943962097168
    7. '.split' → logprob: -13.259943962097168
    8. '("("' → logprob: -13.259943962097168
    9. '())' → logprob: -13.384943962097168
    10. '()
' → logprob: -13.634943962097168

Token 21: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -9.233804303221405e-05
    2. 'rs' → logprob: -9.500092506408691
    3. 'strip' → logprob: -11.750092506408691
    4. 'rstrip' → logprob: -11.750092506408691
    5. ' split' → logprob: -13.500092506408691
    6. 'spl' → logprob: -15.500092506408691
    7. '(split' → logprob: -17.250091552734375
    8. '```' → logprob: -17.250091552734375
    9. '.split' → logprob: -18.000091552734375
    10. ' ' → logprob: -18.750091552734375

Token 22: '()
' (ID: 1234)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('' → logprob: -0.3160514533519745
    2. '(' → logprob: -1.6910514831542969
    3. '()' → logprob: -2.566051483154297
    4. '("("' → logprob: -4.941051483154297
    5. '("' → logprob: -6.066051483154297
    6. '(
' → logprob: -9.066051483154297
    7. '(',' → logprob: -9.691051483154297
    8. '(`' → logprob: -10.316051483154297
    9. '(

' → logprob: -11.191051483154297
    10. '('.')' → logprob: -11.191051483154297

Token 23: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11032119393348694
    2. 'rs' → logprob: -3.485321283340454
    3. ' p' → logprob: -3.735321283340454
    4. ' rs' → logprob: -4.360321044921875
    5. 'p' → logprob: -4.485321044921875
    6. '<|end|>' → logprob: -4.485321044921875
    7. ',' → logprob: -5.610321044921875
    8. '    
' → logprob: -6.110321044921875
    9. '	rs' → logprob: -6.235321044921875
    10. ' ' → logprob: -6.735321044921875

Token 24: ' p' (ID: 275)
  Prédit: ' rs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rs' → logprob: -0.9089915156364441
    2. 'rs' → logprob: -1.1589915752410889
    3. ' p' → logprob: -1.4089915752410889
    4. 'p' (adapté à ' p') → logprob: -3.283991575241089
    5. 's' → logprob: -7.53399133682251
    6. ' s' → logprob: -8.283991813659668
    7. '   ' → logprob: -8.908991813659668
    8. '	rs' → logprob: -9.283991813659668
    9. 'r' → logprob: -9.408991813659668
    10. '```' → logprob: -9.533991813659668

Token 25: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5764755606651306
    2. ' =' → logprob: -0.8264755606651306
    3. '=int' → logprob: -7.701475620269775
    4. ')' → logprob: -9.826475143432617
    5. '<|end|>' → logprob: -11.201475143432617
    6. ',' → logprob: -11.826475143432617
    7. 'int' → logprob: -13.326475143432617
    8. ' ' → logprob: -13.576475143432617
    9. '<|end|>' → logprob: -13.576475143432617
    10. ')=' → logprob: -14.576475143432617

Token 26: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.4741032123565674
    2. 'int' → logprob: -0.9741032123565674
    3. ' float' → logprob: -10.849102973937988
    4. 'float' → logprob: -12.849102973937988
    5. ' ' → logprob: -13.349102973937988
    6. '[int' → logprob: -14.099102973937988
    7. '=int' → logprob: -14.099102973937988
    8. '<int' → logprob: -15.099102973937988
    9. '(int' → logprob: -15.599102973937988
    10. ']int' → logprob: -15.724102973937988

Token 27: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.4744955003261566
    2. '(' → logprob: -0.974495530128479
    3. '()' → logprob: -7.9744954109191895
    4. ' (' → logprob: -10.224495887756348
    5. '('' → logprob: -11.349495887756348
    6. ' ' → logprob: -12.099495887756348
    7. ')' → logprob: -12.224495887756348
    8. '(
' → logprob: -12.599495887756348
    9. '(s' → logprob: -12.849495887756348
    10. '(

' → logprob: -13.724495887756348

Token 28: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.23917081207037e-05
    2. ')
' → logprob: -10.375041961669922
    3. ' )' → logprob: -12.250041961669922
    4. '   ' → logprob: -12.500041961669922
    5. '))' → logprob: -14.625041961669922
    6. '`)' → logprob: -15.125041961669922
    7. '')' → logprob: -15.375041961669922
    8. ')p' → logprob: -15.500041961669922
    9. ')`' → logprob: -15.750041961669922
    10. ')
' → logprob: -15.750041961669922

Token 29: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00326077314093709
    2. 'rs' → logprob: -6.003260612487793
    3. '<|end|>' → logprob: -8.503260612487793
    4. 'if' → logprob: -9.003260612487793
    5. '```' → logprob: -9.128260612487793
    6. ' if' → logprob: -9.128260612487793
    7. '    
' → logprob: -9.628260612487793
    8. '	rs' → logprob: -10.128260612487793
    9. '  ' → logprob: -10.628260612487793
    10. ')' → logprob: -11.003260612487793

Token 30: ' rs' (ID: 15181)
  Prédit: 'rs'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rs' (adapté à ' rs') → logprob: -0.05599892511963844
    2. ' rs' → logprob: -2.9309990406036377
    3. '   ' → logprob: -7.055998802185059
    4. '	rs' → logprob: -8.805998802185059
    5. ' if' → logprob: -10.555998802185059
    6. '_rs' → logprob: -10.930998802185059
    7. 'if' → logprob: -11.180998802185059
    8. 's' → logprob: -11.305998802185059
    9. 'r' → logprob: -11.680998802185059
    10. '(rs' → logprob: -12.305998802185059

Token 31: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.06999712437391281
    2. '.' → logprob: -2.6949970722198486
    3. '.extend' → logprob: -10.56999683380127
    4. '.setdefault' → logprob: -11.44499683380127
    5. '.app' → logprob: -11.94499683380127
    6. '.push' → logprob: -12.19499683380127
    7. '.add' → logprob: -13.06999683380127
    8. 'append' → logprob: -13.19499683380127
    9. ' .' → logprob: -13.44499683380127
    10. '.sort' → logprob: -13.81999683380127

Token 32: '([[' (ID: 60239)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '((' → logprob: -0.00020985817536711693
    2. '(' → logprob: -8.50020980834961
    3. '(('' → logprob: -13.00020980834961
    4. '(s' → logprob: -13.25020980834961
    5. '(p' → logprob: -13.75020980834961
    6. '([' → logprob: -13.87520980834961
    7. '(("' → logprob: -16.37520980834961
    8. ' ((' → logprob: -16.62520980834961
    9. '((-' → logprob: -17.50020980834961
    10. '({'' → logprob: -17.87520980834961

Token 33: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2033350169658661
    2. 'p' → logprob: -1.8283350467681885
    3. ' s' → logprob: -4.328334808349609
    4. ' p' → logprob: -4.828334808349609
    5. 'i' → logprob: -7.203334808349609
    6. '-s' → logprob: -8.20333480834961
    7. '-' → logprob: -8.45333480834961
    8. ''s' → logprob: -8.45333480834961
    9. '   ' → logprob: -8.82833480834961
    10. ' -' → logprob: -9.32833480834961

Token 34: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005732771474868059
    2. ',p' → logprob: -5.380732536315918
    3. ' ,' → logprob: -6.880732536315918
    4. '),' → logprob: -10.755732536315918
    5. '],' → logprob: -10.880732536315918
    6. '',' → logprob: -11.380732536315918
    7. ',
' → logprob: -12.380732536315918
    8. 'p' → logprob: -12.755732536315918
    9. ',i' → logprob: -12.880732536315918
    10. '",' → logprob: -13.005732536315918

Token 35: ' -' (ID: 533)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.6931653618812561
    2. ' p' → logprob: -0.6931653618812561
    3. ' ' → logprob: -11.56816577911377
    4. '    ' → logprob: -13.06816577911377
    5. ' ' → logprob: -13.19316577911377
    6. '   ' → logprob: -13.56816577911377
    7. '(p' → logprob: -14.81816577911377
    8. ''p' → logprob: -14.88066577911377
    9. ',' → logprob: -14.94316577911377
    10. '  ' → logprob: -15.31816577911377

Token 36: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0019289902411401272
    2. ' p' → logprob: -6.251928806304932
    3. '1' → logprob: -14.87692928314209
    4. ' ' → logprob: -17.001928329467773
    5. '   ' → logprob: -18.251928329467773
    6. '	p' → logprob: -18.751928329467773
    7. ')p' → logprob: -19.626928329467773
    8. '  ' → logprob: -19.876928329467773
    9. '(p' → logprob: -20.001928329467773
    10. ',' → logprob: -20.001928329467773

Token 37: '],' (ID: 2155)
  Prédit: ']])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']])' → logprob: -0.01981019228696823
    2. '],' → logprob: -4.144810199737549
    3. ']' → logprob: -6.269810199737549
    4. '])' → logprob: -6.519810199737549
    5. ')])' → logprob: -8.39480972290039
    6. ']]' → logprob: -9.51980972290039
    7. ']])
' → logprob: -10.01980972290039
    8. ']],' → logprob: -10.39480972290039
    9. ']])

' → logprob: -11.76980972290039
    10. ']))' → logprob: -12.14480972290039

Token 38: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5320895314216614
    2. ' i' → logprob: -0.9070895314216614
    3. ' rs' → logprob: -6.032089710235596
    4. ' s' → logprob: -6.657089710235596
    5. 's' → logprob: -6.782089710235596
    6. 'rs' → logprob: -6.907089710235596
    7. ' p' → logprob: -7.782089710235596
    8. ' [' → logprob: -7.907089710235596
    9. '[i' → logprob: -8.032089233398438
    10. '0' → logprob: -8.032089233398438

Token 39: '+' (ID: 10)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.03473309054970741
    2. ')' → logprob: -3.5347330570220947
    3. ')])' → logprob: -5.534733295440674
    4. ')]' → logprob: -7.409733295440674
    5. ']' → logprob: -7.909733295440674
    6. ']])' → logprob: -10.909732818603516
    7. '])]' → logprob: -11.659732818603516
    8. '))' → logprob: -11.784732818603516
    9. ' ])' → logprob: -12.284732818603516
    10. '])
' → logprob: -12.534732818603516

Token 40: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2007883671903983e-05
    2. '])' → logprob: -11.375021934509277
    3. ')' → logprob: -12.375021934509277
    4. ' ' → logprob: -12.500021934509277
    5. ']' → logprob: -13.375021934509277
    6. ')]' → logprob: -14.875021934509277
    7. ')])' → logprob: -16.000022888183594
    8. '`)' → logprob: -16.500022888183594
    9. ']])' → logprob: -16.625022888183594
    10. '])]' → logprob: -16.750022888183594

Token 41: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.009969505481421947
    2. ')' → logprob: -4.759969711303711
    3. ')])' → logprob: -7.009969711303711
    4. ']' → logprob: -8.259969711303711
    5. ')]' → logprob: -9.009969711303711
    6. ']])' → logprob: -10.509969711303711
    7. '])
' → logprob: -11.134969711303711
    8. '])]' → logprob: -11.634969711303711
    9. ' ])' → logprob: -12.384969711303711
    10. '))' → logprob: -12.634969711303711

Token 42: 'for' (ID: 1938)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9733490347862244
    2. '
' → logprob: -1.4733490943908691
    3. 'rs' → logprob: -1.7233490943908691
    4. '\n' → logprob: -2.348349094390869
    5. 'for' → logprob: -3.223349094390869
    6. '<|end|>' → logprob: -3.723349094390869
    7. ')
' → logprob: -4.473349094390869
    8. ']' → logprob: -4.973349094390869
    9. 'sorted' → logprob: -5.098349094390869
    10. 's' → logprob: -5.223349094390869

Token 43: ' r' (ID: 428)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.6337159872055054
    2. ' rs' → logprob: -2.133716106414795
    3. ' item' → logprob: -2.258716106414795
    4. ' r' → logprob: -2.633716106414795
    5. 'i' → logprob: -3.133716106414795
    6. ' x' → logprob: -3.508716106414795
    7. 'r' → logprob: -3.758716106414795
    8. 'item' → logprob: -4.258716106414795
    9. ' _' → logprob: -4.758716106414795
    10. ' ' → logprob: -4.758716106414795

Token 44: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.024492356926202774
    2. 'in' → logprob: -3.7744922637939453
    3. ',' → logprob: -7.649492263793945
    4. ' ' → logprob: -8.149492263793945
    5. 's' → logprob: -8.274492263793945
    6. '[' → logprob: -9.274492263793945
    7. 'e' → logprob: -11.024492263793945
    8. ' ,' → logprob: -11.024492263793945
    9. 'ange' → logprob: -11.274492263793945
    10. 'o' → logprob: -11.774492263793945

Token 45: ' sorted' (ID: 20099)
  Prédit: 'rs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rs' → logprob: -0.1553722321987152
    2. 'sorted' → logprob: -2.030372142791748
    3. 'range' → logprob: -4.530372142791748
    4. ' rs' → logprob: -6.530372142791748
    5. ' sorted' → logprob: -8.030372619628906
    6. ' range' → logprob: -10.280372619628906
    7. 're' → logprob: -12.030372619628906
    8. 'sort' → logprob: -13.280372619628906
    9. '(rs' → logprob: -13.280372619628906
    10. '(sorted' → logprob: -13.530372619628906

Token 46: '(rs' (ID: 25887)
  Prédit: '(rs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(rs' → logprob: -1.700132997939363e-05
    2. '(' → logprob: -11.000017166137695
    3. 'rs' → logprob: -16.875017166137695
    4. ' rs' → logprob: -16.875017166137695
    5. '(r' → logprob: -17.125017166137695
    6. ' (' → logprob: -17.125017166137695
    7. '	rs' → logprob: -17.375017166137695
    8. '$rs' → logprob: -17.500017166137695
    9. '(
' → logprob: -17.750017166137695
    10. '(ls' → logprob: -19.125017166137695

Token 47: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3792504370212555
    2. '):' → logprob: -1.504250407218933
    3. '(),' → logprob: -2.7542505264282227
    4. ',key' → logprob: -4.254250526428223
    5. ']):' → logprob: -4.879250526428223
    6. '()' → logprob: -5.754250526428223
    7. ')' → logprob: -6.254250526428223
    8. '):
' → logprob: -6.629250526428223
    9. '(key' → logprob: -7.879250526428223
    10. '()):
' → logprob: -7.879250526428223

Token 48: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.4348580837249756
    2. '   ' → logprob: -1.4348580837249756
    3. ' print' → logprob: -2.1848580837249756
    4. '    
' → logprob: -7.309858322143555
    5. '[' → logprob: -8.309858322143555
    6. '```' → logprob: -8.309858322143555
    7. '<|end|>' → logprob: -8.434858322143555
    8. '	print' → logprob: -8.684858322143555
    9. '    ' → logprob: -8.809858322143555
    10. '.print' → logprob: -9.684858322143555

Token 49: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.018778497353196144
    2. '   ' → logprob: -4.268778324127197
    3. ' print' → logprob: -5.393778324127197
    4. '```' → logprob: -9.893778800964355
    5. '	print' → logprob: -12.018778800964355
    6. '``' → logprob: -14.143778800964355
    7. '    
' → logprob: -14.268778800964355
    8. ' ' → logprob: -14.643778800964355
    9. '`' → logprob: -14.893778800964355
    10. '[' → logprob: -15.768778800964355

Token 50: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.005259372293949127
    2. '(' → logprob: -5.2552595138549805
    3. '(*' → logprob: -11.88025951385498
    4. ' (' → logprob: -11.88025951385498
    5. '(rs' → logprob: -12.50525951385498
    6. 'r' → logprob: -12.63025951385498
    7. '((' → logprob: -12.75525951385498
    8. '(f' → logprob: -14.13025951385498
    9. '('' → logprob: -15.25525951385498
    10. '(
' → logprob: -15.50525951385498

Token 51: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00039289999403990805
    2. '][' → logprob: -8.00039291381836
    3. ')[' → logprob: -11.12539291381836
    4. ']' → logprob: -11.25039291381836
    5. ' [' → logprob: -11.62539291381836
    6. '[-' → logprob: -11.62539291381836
    7. ')' → logprob: -12.37539291381836
    8. '   ' → logprob: -13.37539291381836
    9. '\[' → logprob: -13.87539291381836
    10. '1' → logprob: -14.00039291381836

Token 52: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0683535037969705e-05
    2. '-' → logprob: -12.12501049041748
    3. ' ' → logprob: -12.62501049041748
    4. '0' → logprob: -14.12501049041748
    5. '[' → logprob: -14.93751049041748
    6. ']' → logprob: -15.81251049041748
    7. ' -' → logprob: -15.87501049041748
    8. '   ' → logprob: -16.062511444091797
    9. '```' → logprob: -16.312511444091797
    10. '][' → logprob: -16.875011444091797

Token 53: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00045962471631355584
    2. '])' → logprob: -7.750459671020508
    3. '))' → logprob: -11.250459671020508
    4. '})' → logprob: -11.625459671020508
    5. ' )' → logprob: -13.000459671020508
    6. '`)' → logprob: -13.625459671020508
    7. ')`' → logprob: -14.250459671020508
    8. ')])' → logprob: -14.375459671020508
    9. ')
' → logprob: -14.500459671020508
    10. ')")' → logprob: -14.750459671020508


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 51
Tokens correctement prédits (1ère position, stricte): 21
Tokens correctement prédits (1ère position, avec adaptation): 23
Tokens correctement prédits (top 10): 41
Précision stricte (1ère position): 41.18%
Précision adaptée (1ère position): 45.10%
Précision (top 10): 80.39%
================================================================================
