================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:19:16
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import os

def get_input_function():
    return lambda: list(map(int, input().split()))

def redirect_input_if_local():
    if 'local' in os.environ:
        sys.stdin = open('./input.txt', 'r')

def initialize_array(size):
    return [0] * size

def set_one_for_index(a, idx):
    a[idx] = 1

def get_starting_value():
    return get_input_function()[0]()

def mark_power_indices(a, limit):
    for i in range(2, 1000):
        if i * i <= limit:
            mark_squares_and_powers(a, i, limit)
        else:
            break

def mark_squares_and_powers(a, i, limit):
    set_one_for_index(a, i * i)
    mark_higher_powers(a, i, limit)

def mark_higher_powers(a, i, limit):
    k = 3
    while pow_below_limit(i, k, limit):
        set_one_for_index(a, i ** k)
        k += 1

def pow_below_limit(i, k, limit):
    return i ** k <= limit

def find_and_print_max_marked(a, x):
    for i in range(x, 0, -1):
        if is_marked(a, i):
            print_value(i)
            break

def is_marked(a, i):
    return a[i] == 1

def print_value(val):
    print(val)

def main_solve():
    redirect_input_if_local()
    x = get_starting_value()
    size = 10001
    limit = 1000
    a = initialize_array(size)
    set_one_for_index(a, 1)
    mark_power_indices(a, limit)
    find_and_print_max_marked(a, x)

main_solve()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.29731935262680054
    2. '\n' → logprob: -1.5473194122314453
    3. '<|end|>' → logprob: -3.7973194122314453
    4. '\' → logprob: -4.922319412231445
    5. 'newline' → logprob: -5.672319412231445
    6. 'import' → logprob: -5.672319412231445
    7. '<|end|>' → logprob: -6.047319412231445
    8. '
' → logprob: -6.922319412231445
    9. '```' → logprob: -6.922319412231445
    10. '' → logprob: -7.672319412231445

Token 4: ' os' (ID: 1994)
  Prédit: ' os'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.00012535012501757592
    2. 'os' → logprob: -9.00012493133545
    3. ' math' → logprob: -13.87512493133545
    4. '"os' → logprob: -15.12512493133545
    5. ' re' → logprob: -15.50012493133545
    6. ' o' → logprob: -15.87512493133545
    7. ' ' → logprob: -16.125125885009766
    8. ' json' → logprob: -16.250125885009766
    9. '	os' → logprob: -16.375125885009766
    10. '_os' → logprob: -16.875125885009766

Token 5: '

' (ID: 279)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.2289513349533081
    2. 'import' → logprob: -2.2289514541625977
    3. '
' → logprob: -2.8539514541625977
    4. '<|end|>' → logprob: -3.8539514541625977
    5. '

' → logprob: -5.103951454162598
    6. '\' → logprob: -5.853951454162598
    7. '```' → logprob: -5.978951454162598
    8. 'newline' → logprob: -6.228951454162598
    9. '.' → logprob: -6.478951454162598
    10. '<|end|>' → logprob: -6.978951454162598

Token 6: 'def' (ID: 1314)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.16435174643993378
    2. 'import' → logprob: -2.78935170173645
    3. '#' → logprob: -3.41435170173645
    4. '\' → logprob: -3.53935170173645
    5. '.' → logprob: -4.664351940155029
    6. '```' → logprob: -4.914351940155029
    7. '
' → logprob: -6.289351940155029
    8. '

' → logprob: -6.289351940155029
    9. 'from' → logprob: -6.789351940155029
    10. '' → logprob: -7.039351940155029

Token 7: ' get' (ID: 717)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.016549577936530113
    2. '_' → logprob: -4.266549587249756
    3. ' main' → logprob: -6.766549587249756
    4. ' space' → logprob: -7.516549587249756
    5. ' my' → logprob: -8.766549110412598
    6. ' _' → logprob: -9.641549110412598
    7. ' process' → logprob: -9.766549110412598
    8. ' read' → logprob: -9.891549110412598
    9. '_space' → logprob: -10.266549110412598
    10. ' os' → logprob: -10.391549110412598

Token 8: '_input' (ID: 12507)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.38746964931488037
    2. '_' → logprob: -1.2624696493148804
    3. '_file' → logprob: -4.01246976852417
    4. '_path' → logprob: -5.13746976852417
    5. '_user' → logprob: -5.63746976852417
    6. '_filepath' → logprob: -5.88746976852417
    7. '_data' → logprob: -6.51246976852417
    8. '_env' → logprob: -7.01246976852417
    9. '_filename' → logprob: -7.38746976852417
    10. '_directory' → logprob: -7.38746976852417

Token 9: '_function' (ID: 21094)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.05022067576646805
    2. '_' → logprob: -3.0502207279205322
    3. '(_' → logprob: -7.550220489501953
    4. '```' → logprob: -8.300220489501953
    5. '_parent' → logprob: -8.425220489501953
    6. '("("' → logprob: -9.425220489501953
    7. '_data' → logprob: -9.675220489501953
    8. '_(' → logprob: -10.050220489501953
    9. 's' → logprob: -10.300220489501953
    10. '(_)' → logprob: -10.425220489501953

Token 10: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.18784664571285248
    2. '():' → logprob: -1.8128466606140137
    3. '_' → logprob: -5.062846660614014
    4. '(:' → logprob: -7.312846660614014
    5. ' (' → logprob: -8.812846183776855
    6. ':' → logprob: -8.937846183776855
    7. '):' → logprob: -9.062846183776855
    8. '(_:' → logprob: -9.062846183776855
    9. '(_' → logprob: -9.437846183776855
    10. '_:' → logprob: -9.937846183776855

Token 11: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18388263881206512
    2. '    ' → logprob: -3.058882713317871
    3. '\' → logprob: -3.183882713317871
    4. '```' → logprob: -3.683882713317871
    5. ' ' → logprob: -4.308882713317871
    6. '\n' → logprob: -4.558882713317871
    7. ' return' → logprob: -4.808882713317871
    8. '    
' → logprob: -5.058882713317871
    9. '(' → logprob: -5.683882713317871
    10. ' 
' → logprob: -5.808882713317871

Token 12: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8082467317581177
    2. '    ' → logprob: -1.0582467317581177
    3. ' def' → logprob: -2.183246612548828
    4. 'def' → logprob: -3.308246612548828
    5. ' return' → logprob: -3.683246612548828
    6. ' ' → logprob: -4.308246612548828
    7. ' 
' → logprob: -5.308246612548828
    8. '    
' → logprob: -5.933246612548828
    9. '     
' → logprob: -5.933246612548828
    10. '```' → logprob: -6.183246612548828

Token 13: ' lambda' (ID: 27871)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.033605482429265976
    2. 'input' → logprob: -3.5336055755615234
    3. ' sys' → logprob: -5.783605575561523
    4. ' ' → logprob: -7.783605575561523
    5. ' lambda' → logprob: -8.658605575561523
    6. 'sys' → logprob: -9.283605575561523
    7. ' raw' → logprob: -10.783605575561523
    8. ' int' → logprob: -11.283605575561523
    9. '(input' → logprob: -11.283605575561523
    10. 'lambda' → logprob: -11.533605575561523

Token 14: ':' (ID: 25)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.026711612939834595
    2. 'input' → logprob: -4.026711463928223
    3. ' ' → logprob: -5.526711463928223
    4. ':' → logprob: -5.776711463928223
    5. ' x' → logprob: -7.651711463928223
    6. ' ()' → logprob: -8.651711463928223
    7. ' raw' → logprob: -9.151711463928223
    8. '_input' → logprob: -9.151711463928223
    9. ' s' → logprob: -9.526711463928223
    10. '_' → logprob: -9.651711463928223

Token 15: ' list' (ID: 1562)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.1162547692656517
    2. 'input' → logprob: -2.3662548065185547
    3. ' sys' → logprob: -4.241254806518555
    4. 'sys' → logprob: -6.491254806518555
    5. ' ' → logprob: -11.741254806518555
    6. 'int' → logprob: -14.241254806518555
    7. ' os' → logprob: -14.366254806518555
    8. '(input' → logprob: -14.491254806518555
    9. ' ' → logprob: -14.491254806518555
    10. ' int' → logprob: -14.616254806518555

Token 16: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06372905522584915
    2. '(input' → logprob: -3.4387290477752686
    3. '(map' → logprob: -3.5637290477752686
    4. '(int' → logprob: -7.438729286193848
    5. '(sys' → logprob: -7.688729286193848
    6. '(eval' → logprob: -9.438729286193848
    7. '()' → logprob: -10.438729286193848
    8. '(
' → logprob: -10.563729286193848
    9. '(open' → logprob: -10.688729286193848
    10. '(str' → logprob: -10.938729286193848

Token 17: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.015472282655537128
    2. '(' → logprob: -4.765472412109375
    3. '(str' → logprob: -5.140472412109375
    4. 'int' → logprob: -7.765472412109375
    5. '(input' → logprob: -7.890472412109375
    6. 'str' → logprob: -9.515472412109375
    7. '(lambda' → logprob: -10.265472412109375
    8. 'input' → logprob: -10.765472412109375
    9. '(float' → logprob: -11.515472412109375
    10. '<int' → logprob: -11.890472412109375

Token 18: ',' (ID: 11)
  Prédit: '(sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.2000037282705307
    2. '(input' → logprob: -2.0750036239624023
    3. '(' → logprob: -2.9500036239624023
    4. 'sys' → logprob: -6.325003623962402
    5. 'input' → logprob: -6.950003623962402
    6. ' (' → logprob: -8.450003623962402
    7. '))' → logprob: -9.325003623962402
    8. ')' → logprob: -9.700003623962402
    9. '(
' → logprob: -9.825003623962402
    10. ' sys' → logprob: -10.325003623962402

Token 19: ' input' (ID: 3422)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.36349576711654663
    2. ' sys' → logprob: -1.7384958267211914
    3. 'input' → logprob: -2.2384958267211914
    4. ' input' → logprob: -4.113495826721191
    5. '(sys' → logprob: -5.238495826721191
    6. ')' → logprob: -7.863495826721191
    7. '=sys' → logprob: -9.238495826721191
    8. '	sys' → logprob: -9.613495826721191
    9. '(input' → logprob: -10.613495826721191
    10. ' ' → logprob: -10.738495826721191

Token 20: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.011277345940470695
    2. '()))' → logprob: -4.761277198791504
    3. '()' → logprob: -6.511277198791504
    4. '())' → logprob: -7.261277198791504
    5. '())))' → logprob: -8.511277198791504
    6. '()));' → logprob: -8.511277198791504
    7. '(' → logprob: -11.136277198791504
    8. '());' → logprob: -11.386277198791504
    9. '(()' → logprob: -11.761277198791504
    10. '('').' → logprob: -11.761277198791504

Token 21: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.20151498913764954
    2. 'strip' → logprob: -1.7015149593353271
    3. 'rstrip' → logprob: -9.201515197753906
    4. 'read' → logprob: -14.201515197753906
    5. ' split' → logprob: -16.201515197753906
    6. ' strip' → logprob: -17.076515197753906
    7. '(split' → logprob: -17.201515197753906
    8. 'spl' → logprob: -18.576515197753906
    9. '.split' → logprob: -18.951515197753906
    10. ')' → logprob: -19.326515197753906

Token 22: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.07666251808404922
    2. '())))' → logprob: -3.326662540435791
    3. '()' → logprob: -4.201662540435791
    4. '())' → logprob: -4.326662540435791
    5. '(' → logprob: -5.451662540435791
    6. '))' → logprob: -5.826662540435791
    7. ')))' → logprob: -6.076662540435791
    8. ')' → logprob: -9.826662063598633
    9. '()))
' → logprob: -10.201662063598633
    10. '())))
' → logprob: -10.451662063598633

Token 23: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4503985345363617
    2. 'def' → logprob: -1.450398564338684
    3. '

' → logprob: -2.2003984451293945
    4. '#' → logprob: -5.3253984451293945
    5. '' → logprob: -6.0753984451293945
    6. '\n' → logprob: -6.3253984451293945
    7. '\' → logprob: -6.8253984451293945
    8. 'n' → logprob: -6.9503984451293945
    9. '<|end|>' → logprob: -6.9503984451293945
    10. 'x' → logprob: -7.5753984451293945

Token 24: ' redirect' (ID: 13200)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.04534280300140381
    2. ' get' → logprob: -4.045342922210693
    3. ' solve' → logprob: -4.045342922210693
    4. ' process' → logprob: -5.295342922210693
    5. ' read' → logprob: -7.295342922210693
    6. ' calculate' → logprob: -7.295342922210693
    7. ' compute' → logprob: -7.920342922210693
    8. ' test' → logprob: -7.920342922210693
    9. ' print' → logprob: -8.170342445373535
    10. ' write' → logprob: -8.295342445373535

Token 25: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.0470878928899765
    2. '_st' → logprob: -4.172087669372559
    3. '_output' → logprob: -4.422087669372559
    4. '_io' → logprob: -4.797087669372559
    5. '_stdout' → logprob: -4.922087669372559
    6. '_stdio' → logprob: -6.172087669372559
    7. '_' → logprob: -8.297087669372559
    8. '_standard' → logprob: -8.297087669372559
    9. '_std' → logprob: -8.297087669372559
    10. 'input' → logprob: -10.047087669372559

Token 26: '_if' (ID: 25821)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03606795519590378
    2. '():' → logprob: -4.661067962646484
    3. '("("' → logprob: -4.661067962646484
    4. '(_' → logprob: -5.911067962646484
    5. '('' → logprob: -6.036067962646484
    6. '('_' → logprob: -6.161067962646484
    7. '(path' → logprob: -6.411067962646484
    8. '("_' → logprob: -6.536067962646484
    9. '(filename' → logprob: -6.911067962646484
    10. '(file' → logprob: -7.411067962646484

Token 27: '_local' (ID: 29253)
  Prédit: '_needed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_needed' → logprob: -0.550771176815033
    2. '_present' → logprob: -1.5507712364196777
    3. '_pro' → logprob: -1.9257712364196777
    4. '_available' → logprob: -3.8007712364196777
    5. '_requested' → logprob: -4.425771236419678
    6. '_exists' → logprob: -4.675771236419678
    7. '_possible' → logprob: -4.925771236419678
    8. '_file' → logprob: -4.925771236419678
    9. '_' → logprob: -6.175771236419678
    10. '_exist' → logprob: -6.800771236419678

Token 28: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0005072805215604603
    2. '(' → logprob: -8.750507354736328
    3. '():
' → logprob: -8.750507354736328
    4. '()' → logprob: -9.000507354736328
    5. ' ():' → logprob: -10.250507354736328
    6. '_' → logprob: -12.000507354736328
    7. ':' → logprob: -12.500507354736328
    8. '():
' → logprob: -12.875507354736328
    9. '(_' → logprob: -13.000507354736328
    10. '(":' → logprob: -13.375507354736328

Token 29: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001859272480942309
    2. ' if' → logprob: -7.501859188079834
    3. 'import' → logprob: -7.751859188079834
    4. ' os' → logprob: -8.251859664916992
    5. 'if' → logprob: -8.251859664916992
    6. '    
' → logprob: -9.376859664916992
    7. ' try' → logprob: -9.626859664916992
    8. ' import' → logprob: -9.751859664916992
    9. 'try' → logprob: -10.376859664916992
    10. 'os' → logprob: -10.626859664916992

Token 30: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6466444730758667
    2. 'if' (adapté à ' if') → logprob: -1.1466444730758667
    3. '   ' → logprob: -2.2716445922851562
    4. ' try' → logprob: -3.8966445922851562
    5. 'import' → logprob: -4.021644592285156
    6. 'try' → logprob: -4.396644592285156
    7. ' import' → logprob: -5.396644592285156
    8. '```' → logprob: -9.396644592285156
    9. ' ' → logprob: -9.771644592285156
    10. ' filename' → logprob: -10.771644592285156

Token 31: ' '' (ID: 461)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.010290263220667839
    2. ' not' → logprob: -5.510290145874023
    3. ''' → logprob: -5.760290145874023
    4. ' '' → logprob: -6.010290145874023
    5. ' "' → logprob: -8.510290145874023
    6. '"' → logprob: -9.010290145874023
    7. 'os' → logprob: -9.635290145874023
    8. ' ' → logprob: -9.635290145874023
    9. '(os' → logprob: -10.260290145874023
    10. '"os' → logprob: -10.260290145874023

Token 32: 'local' (ID: 5818)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.8367003798484802
    2. ''' → logprob: -1.586700439453125
    3. 'PY' → logprob: -2.211700439453125
    4. 'LOCAL' → logprob: -2.461700439453125
    5. 'HOME' → logprob: -3.086700439453125
    6. 'sys' → logprob: -3.211700439453125
    7. ''s' → logprob: -4.711700439453125
    8. 'local' → logprob: -4.836700439453125
    9. '"' → logprob: -5.086700439453125
    10. 'os' → logprob: -5.211700439453125

Token 33: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.006784050725400448
    2. '_'' → logprob: -5.506783962249756
    3. ''in' → logprob: -6.881783962249756
    4. 'host' → logprob: -7.381783962249756
    5. '"'' → logprob: -8.006784439086914
    6. '.py' → logprob: -8.881784439086914
    7. ''s' → logprob: -9.631784439086914
    8. '_env' → logprob: -9.631784439086914
    9. '"' → logprob: -9.756784439086914
    10. 'file' → logprob: -9.881784439086914

Token 34: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.017911570146679878
    2. 'in' → logprob: -4.392911434173584
    3. '_' → logprob: -6.392911434173584
    4. ' ' → logprob: -7.267911434173584
    5. '   ' → logprob: -7.767911434173584
    6. ''in' → logprob: -8.017911911010742
    7. '()' → logprob: -8.142911911010742
    8. '_in' → logprob: -8.142911911010742
    9. ''' → logprob: -8.392911911010742
    10. '.' → logprob: -8.517911911010742

Token 35: ' os' (ID: 1994)
  Prédit: ' os'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.6555177569389343
    2. ' sys' → logprob: -0.7805177569389343
    3. ' __' → logprob: -4.280517578125
    4. 'os' → logprob: -5.780517578125
    5. 'sys' → logprob: -6.030517578125
    6. '__' → logprob: -6.280517578125
    7. ' ' → logprob: -7.905517578125
    8. ' globals' → logprob: -8.280517578125
    9. '(os' → logprob: -8.530517578125
    10. '(sys' → logprob: -8.655517578125

Token 36: '.environ' (ID: 52020)
  Prédit: '.environ'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.environ' → logprob: -0.2083180993795395
    2. '.getenv' → logprob: -1.9583181142807007
    3. '.getcwd' → logprob: -3.458317995071411
    4. '.name' → logprob: -5.20831823348999
    5. '.' → logprob: -5.33331823348999
    6. ' .' → logprob: -6.08331823348999
    7. '.listdir' → logprob: -6.95831823348999
    8. '.env' → logprob: -7.45831823348999
    9. '.path' → logprob: -7.70831823348999
    10. '.argv' → logprob: -7.95831823348999

Token 37: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10931769013404846
    2. ' :' → logprob: -2.3593177795410156
    3. ' and' → logprob: -5.359317779541016
    4. ':
' → logprob: -5.859317779541016
    5. ' :
' → logprob: -7.359317779541016
    6. '.get' → logprob: -8.734317779541016
    7. ' ' → logprob: -9.234317779541016
    8. '    ' → logprob: -9.234317779541016
    9. ':

' → logprob: -9.609317779541016
    10. '['' → logprob: -9.609317779541016

Token 38: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02006739005446434
    2. ':' → logprob: -4.39506721496582
    3. '        ' → logprob: -6.64506721496582
    4. ' os' → logprob: -6.77006721496582
    5. ' and' → logprob: -6.89506721496582
    6. '    ' → logprob: -6.89506721496582
    7. '   ' → logprob: -7.27006721496582
    8. '           ' → logprob: -8.14506721496582
    9. '      ' → logprob: -8.14506721496582
    10. ' :' → logprob: -8.27006721496582

Token 39: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.03983519971370697
    2. 'sys' (adapté à ' sys') → logprob: -4.164834976196289
    3. '       ' → logprob: -4.414834976196289
    4. '        ' → logprob: -4.914834976196289
    5. '           ' → logprob: -6.414834976196289
    6. '    ' → logprob: -7.039834976196289
    7. '	sys' → logprob: -8.039834976196289
    8. ' with' → logprob: -8.039834976196289
    9. ' ' → logprob: -8.414834976196289
    10. '   ' → logprob: -8.539834976196289

Token 40: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0004981054808013141
    2. '.stdout' → logprob: -7.750498294830322
    3. '.' → logprob: -10.250497817993164
    4. ' .' → logprob: -10.500497817993164
    5. '.stderr' → logprob: -13.125497817993164
    6. '.argv' → logprob: -14.000497817993164
    7. '.setdefault' → logprob: -14.625497817993164
    8. '.st' → logprob: -15.000497817993164
    9. '.std' → logprob: -15.500497817993164
    10. 'stdin' → logprob: -15.500497817993164

Token 41: ' =' (ID: 314)
  Prédit: '=open'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=open' → logprob: -0.36515215039253235
    2. '=' → logprob: -1.36515212059021
    3. ' =' → logprob: -2.99015212059021
    4. '=sys' → logprob: -8.740152359008789
    5. '.readline' → logprob: -9.615152359008789
    6. 'open' → logprob: -10.740152359008789
    7. '=subprocess' → logprob: -11.240152359008789
    8. '=os' → logprob: -12.365152359008789
    9. '.open' → logprob: -12.365152359008789
    10. '=file' → logprob: -12.740152359008789

Token 42: ' open' (ID: 2494)
  Prédit: ' open'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' open' → logprob: -0.12693136930465698
    2. 'open' → logprob: -2.1269314289093018
    3. '=open' → logprob: -13.251931190490723
    4. '	open' → logprob: -13.376931190490723
    5. ' ' → logprob: -16.87693214416504
    6. '(open' → logprob: -17.00193214416504
    7. '   ' → logprob: -17.25193214416504
    8. '```' → logprob: -18.50193214416504
    9. 'io' → logprob: -19.25193214416504
    10. '    ' → logprob: -19.37693214416504

Token 43: '('./' (ID: 15493)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.013306581415235996
    2. '(' → logprob: -4.388306617736816
    3. '("' → logprob: -7.263306617736816
    4. ' ('' → logprob: -10.013306617736816
    5. '('./' → logprob: -11.138306617736816
    6. '(os' → logprob: -11.263306617736816
    7. '('/' → logprob: -11.388306617736816
    8. '(('' → logprob: -12.513306617736816
    9. '('../' → logprob: -13.013306617736816
    10. ' (' → logprob: -13.638306617736816

Token 44: 'input' (ID: 2586)
  Prédit: 'input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.03326386958360672
    2. 'test' → logprob: -4.658263683319092
    3. 'in' → logprob: -5.033263683319092
    4. 'tests' → logprob: -5.033263683319092
    5. 'local' → logprob: -5.658263683319092
    6. 'data' → logprob: -6.408263683319092
    7. 'inputs' → logprob: -6.658263683319092
    8. 'sample' → logprob: -6.908263683319092
    9. ' input' → logprob: -7.158263683319092
    10. 'stdin' → logprob: -8.90826416015625

Token 45: '.txt' (ID: 7186)
  Prédit: '.txt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.txt' → logprob: -0.003399313660338521
    2. '.' → logprob: -5.75339937210083
    3. '')' → logprob: -8.503398895263672
    4. ' .' → logprob: -11.628398895263672
    5. '.tx' → logprob: -12.878398895263672
    6. '_test' → logprob: -13.628398895263672
    7. '1' → logprob: -14.003398895263672
    8. '.')' → logprob: -14.128398895263672
    9. '.py' → logprob: -14.503398895263672
    10. 'txt' → logprob: -14.503398895263672

Token 46: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.02086452580988407
    2. '')' → logprob: -4.020864486694336
    3. ''' → logprob: -6.270864486694336
    4. '','' → logprob: -7.145864486694336
    5. ')' → logprob: -10.520864486694336
    6. ')',' → logprob: -13.645864486694336
    7. '",' → logprob: -13.770864486694336
    8. '',"' → logprob: -14.270864486694336
    9. ',' → logprob: -14.520864486694336
    10. ''',' → logprob: -14.770864486694336

Token 47: ' '' (ID: 461)
  Prédit: ''r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''r' → logprob: -0.02451550029218197
    2. ' '' → logprob: -3.774515390396118
    3. ''' → logprob: -7.399515628814697
    4. ''m' → logprob: -7.899515628814697
    5. 'r' → logprob: -8.399515151977539
    6. ''t' → logprob: -10.649515151977539
    7. ''w' → logprob: -11.524515151977539
    8. ' r' → logprob: -12.274515151977539
    9. ''a' → logprob: -12.774515151977539
    10. ''re' → logprob: -12.899515151977539

Token 48: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -2.3795937522663735e-05
    2. 'rt' → logprob: -11.25002384185791
    3. ''r' → logprob: -11.50002384185791
    4. ''' → logprob: -14.50002384185791
    5. ' r' → logprob: -16.875022888183594
    6. ')' → logprob: -17.750022888183594
    7. 'read' → logprob: -17.875022888183594
    8. ''t' → logprob: -18.000022888183594
    9. '```' → logprob: -18.125022888183594
    10. 'w' → logprob: -18.500022888183594

Token 49: '')

' (ID: 9735)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '')' → logprob: -0.012514126487076283
    2. ')' → logprob: -4.387514114379883
    3. '')
' → logprob: -13.387514114379883
    4. '")' → logprob: -13.387514114379883
    5. '',' → logprob: -14.637514114379883
    6. ''))' → logprob: -15.262514114379883
    7. ''' → logprob: -15.512514114379883
    8. ' )' → logprob: -16.137514114379883
    9. '+')' → logprob: -16.387514114379883
    10. ' ')' → logprob: -16.762514114379883

Token 50: 'def' (ID: 1314)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.0362251996994019
    2. '<|end|>' → logprob: -1.5362251996994019
    3. '\n' → logprob: -1.7862251996994019
    4. 'def' → logprob: -2.5362253189086914
    5. '```' → logprob: -3.0362253189086914
    6. '
' → logprob: -3.2862253189086914
    7. '\' → logprob: -3.9112253189086914
    8. 'redirect' → logprob: -4.036225318908691
    9. 'import' → logprob: -4.411225318908691
    10. '#' → logprob: -4.536225318908691

Token 51: ' initialize' (ID: 18400)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.000820230518002063
    2. 'main' → logprob: -7.750820159912109
    3. ' get' → logprob: -8.50082015991211
    4. '_main' → logprob: -8.87582015991211
    5. ' run' → logprob: -10.75082015991211
    6. ' solve' → logprob: -12.00082015991211
    7. ' setup' → logprob: -12.50082015991211
    8. ' def' → logprob: -12.87582015991211
    9. ' _' → logprob: -13.00082015991211
    10. '_' → logprob: -13.00082015991211

Token 52: '_array' (ID: 8766)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.37524670362472534
    2. '_input' → logprob: -1.3752467632293701
    3. '()' → logprob: -3.62524676322937
    4. '_data' → logprob: -4.375246524810791
    5. '():
' → logprob: -4.750246524810791
    6. '_output' → logprob: -5.375246524810791
    7. '_' → logprob: -5.625246524810791
    8. '_parameters' → logprob: -7.125246524810791
    9. '_optimizer' → logprob: -8.37524700164795
    10. '_params' → logprob: -8.50024700164795

Token 53: '(size' (ID: 15192)
  Prédit: '(size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(size' → logprob: -0.13256676495075226
    2. '(n' → logprob: -2.7575666904449463
    3. '():' → logprob: -3.3825666904449463
    4. '(' → logprob: -3.7575666904449463
    5. '(length' → logprob: -6.382566928863525
    6. '()' → logprob: -7.132566928863525
    7. ' (' → logprob: -8.257566452026367
    8. '():
' → logprob: -8.382566452026367
    9. '(N' → logprob: -9.382566452026367
    10. ' ():' → logprob: -9.382566452026367

Token 54: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0061554741114377975
    2. ',' → logprob: -5.256155490875244
    3. ')' → logprob: -7.881155490875244
    4. ' ):' → logprob: -8.006155014038086
    5. ':' → logprob: -9.256155014038086
    6. '):
' → logprob: -9.506155014038086
    7. '_' → logprob: -11.006155014038086
    8. '=' → logprob: -11.631155014038086
    9. '   ' → logprob: -12.881155014038086
    10. ' ,' → logprob: -13.881155014038086

Token 55: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0013597593642771244
    2. '    
' → logprob: -7.876359939575195
    3. ' return' → logprob: -8.251359939575195
    4. 'return' → logprob: -8.376359939575195
    5. '
' → logprob: -8.501359939575195
    6. '	return' → logprob: -9.501359939575195
    7. '[' → logprob: -9.751359939575195
    8. '```' → logprob: -10.001359939575195
    9. '[]' → logprob: -10.626359939575195
    10. '[
' → logprob: -11.001359939575195

Token 56: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.48055899143218994
    2. 'return' (adapté à ' return') → logprob: -1.35555899143219
    3. ' return' → logprob: -2.4805588722229004
    4. '[' → logprob: -3.3555588722229004
    5. ' [' → logprob: -5.3555588722229
    6. '[]' → logprob: -9.105559349060059
    7. '[
' → logprob: -10.105559349060059
    8. '[array' → logprob: -10.105559349060059
    9. '[size' → logprob: -10.355559349060059
    10. ' ' → logprob: -10.480559349060059

Token 57: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.28123098611831665
    2. '[' → logprob: -1.4062309265136719
    3. '[int' → logprob: -11.031230926513672
    4. '[n' → logprob: -11.281230926513672
    5. '[size' → logprob: -12.031230926513672
    6. '[array' → logprob: -12.031230926513672
    7. '   ' → logprob: -12.281230926513672
    8. '[s' → logprob: -12.531230926513672
    9. ' ' → logprob: -12.531230926513672
    10. '[a' → logprob: -12.906230926513672

Token 58: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00038479414070025086
    2. ' ' → logprob: -7.87538480758667
    3. '   ' → logprob: -13.125384330749512
    4. '-' → logprob: -15.062884330749512
    5. ')' → logprob: -15.500384330749512
    6. '1' → logprob: -15.500384330749512
    7. 'False' → logprob: -15.500384330749512
    8. 'int' → logprob: -15.562884330749512
    9. '  ' → logprob: -15.625384330749512
    10. 'None' → logprob: -15.687884330749512

Token 59: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00621092040091753
    2. ']*' → logprob: -5.756210803985596
    3. ' for' → logprob: -6.131210803985596
    4. ' ]' → logprob: -7.131210803985596
    5. ')' → logprob: -10.756211280822754
    6. 'for' → logprob: -10.881211280822754
    7. '   ' → logprob: -11.881211280822754
    8. ',' → logprob: -12.881211280822754
    9. ')]' → logprob: -13.631211280822754
    10. '}' → logprob: -14.006211280822754

Token 60: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.06127702817320824
    2. ' *' → logprob: -2.936276912689209
    3. ' for' → logprob: -5.811276912689209
    4. ' ' → logprob: -6.436276912689209
    5. ']' → logprob: -7.186276912689209
    6. 'for' → logprob: -7.936276912689209
    7. ']*' → logprob: -8.311277389526367
    8. ',' → logprob: -9.561277389526367
    9. ')' → logprob: -9.686277389526367
    10. ' ]' → logprob: -10.061277389526367

Token 61: ' size' (ID: 2349)
  Prédit: ' size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' size' → logprob: -0.4740844964981079
    2. 'size' → logprob: -0.9740844964981079
    3. '(size' → logprob: -11.849084854125977
    4. '	size' → logprob: -16.224084854125977
    5. ' ' → logprob: -16.349084854125977
    6. ' (' → logprob: -17.599084854125977
    7. 'int' → logprob: -17.599084854125977
    8. '<size' → logprob: -17.974084854125977
    9. ',size' → logprob: -18.349084854125977
    10. '   ' → logprob: -18.474084854125977

Token 62: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 63: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.11206720024347305
    2. '<|end|>' → logprob: -2.737067222595215
    3. '
' → logprob: -3.862067222595215
    4. '<|end|>' → logprob: -4.862067222595215
    5. '#' → logprob: -5.237067222595215
    6. '

' → logprob: -5.487067222595215
    7. '```' → logprob: -6.862067222595215
    8. '\' → logprob: -7.612067222595215
    9. '\n' → logprob: -8.612067222595215
    10. 'import' → logprob: -8.612067222595215

Token 64: ' set' (ID: 920)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.016601985320448875
    2. ' process' → logprob: -4.891602039337158
    3. ' solve' → logprob: -5.766602039337158
    4. ' compute' → logprob: -6.016602039337158
    5. ' calculate' → logprob: -6.141602039337158
    6. ' factorial' → logprob: -8.2666015625
    7. 'main' → logprob: -8.3916015625
    8. ' sum' → logprob: -9.0166015625
    9. ' initialize' → logprob: -9.1416015625
    10. ' read' → logprob: -9.3916015625

Token 65: '_one' (ID: 26979)
  Prédit: '_array'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_array' → logprob: -0.29650214314460754
    2. '_value' → logprob: -1.6715021133422852
    3. '_' → logprob: -2.921502113342285
    4. '_values' → logprob: -4.921502113342285
    5. '_element' → logprob: -6.171502113342285
    6. '_size' → logprob: -6.296502113342285
    7. '_item' → logprob: -6.546502113342285
    8. '_up' → logprob: -8.296502113342285
    9. '_max' → logprob: -9.046502113342285
    10. '_data' → logprob: -9.171502113342285

Token 66: '_for' (ID: 11903)
  Prédit: '_at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_at' → logprob: -0.5658099055290222
    2. '_based' → logprob: -1.690809965133667
    3. '_array' → logprob: -2.690809965133667
    4. '_value' → logprob: -3.190809965133667
    5. 's' → logprob: -3.315809965133667
    6. '_index' → logprob: -3.690809965133667
    7. '_element' → logprob: -4.190809726715088
    8. '_bit' → logprob: -4.315809726715088
    9. '_hot' → logprob: -4.440809726715088
    10. '(' → logprob: -5.440809726715088

Token 67: '_index' (ID: 7748)
  Prédit: '_indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_indices' → logprob: -0.6313144564628601
    2. '_array' → logprob: -2.381314516067505
    3. '_elements' → logprob: -2.506314516067505
    4. '_index' → logprob: -3.256314516067505
    5. 'indices' → logprob: -3.506314516067505
    6. '_non' → logprob: -3.631314516067505
    7. 'array' → logprob: -3.631314516067505
    8. '_indexes' → logprob: -3.631314516067505
    9. '_' → logprob: -3.881314516067505
    10. '_one' → logprob: -4.131314277648926

Token 68: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.32451802492141724
    2. '(array' → logprob: -1.5745179653167725
    3. '(arr' → logprob: -3.0745179653167725
    4. 's' → logprob: -4.449518203735352
    5. '(s' → logprob: -4.949518203735352
    6. '```' → logprob: -6.824518203735352
    7. '_at' → logprob: -6.949518203735352
    8. '(a' → logprob: -7.449518203735352
    9. '(indices' → logprob: -7.824518203735352
    10. '(size' → logprob: -8.199518203735352

Token 69: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10847020149230957
    2. '[' → logprob: -2.7334702014923096
    3. '[a' → logprob: -4.9834699630737305
    4. 's' → logprob: -5.1084699630737305
    5. 'rray' → logprob: -5.3584699630737305
    6. ')' → logprob: -5.9834699630737305
    7. 'a' → logprob: -5.9834699630737305
    8. ' ,' → logprob: -6.1084699630737305
    9. ',[' → logprob: -6.2334699630737305
    10. '[],' → logprob: -6.3584699630737305

Token 70: ' idx' (ID: 14016)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.4783988893032074
    2. ' index' → logprob: -1.2283989191055298
    3. 'i' → logprob: -3.4783987998962402
    4. 'idx' → logprob: -3.7283987998962402
    5. ' idx' → logprob: -3.7283987998962402
    6. ' i' → logprob: -4.85339879989624
    7. ' ' → logprob: -8.478399276733398
    8. '   ' → logprob: -9.103399276733398
    9. 'n' → logprob: -9.603399276733398
    10. 'a' → logprob: -9.978399276733398

Token 71: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.14959555864334106
    2. 's' → logprob: -2.3995954990386963
    3. 'ex' → logprob: -4.149595737457275
    4. ')' → logprob: -4.399595737457275
    5. ',' → logprob: -4.774595737457275
    6. 'u' → logprob: -5.149595737457275
    7. '):
' → logprob: -5.899595737457275
    8. ']:' → logprob: -6.524595737457275
    9. ']' → logprob: -7.274595737457275
    10. 'es' → logprob: -8.524595260620117

Token 72: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17600789666175842
    2. 'a' → logprob: -1.926007866859436
    3. '[a' → logprob: -5.0510077476501465
    4. ' a' → logprob: -5.6760077476501465
    5. '[' → logprob: -6.0510077476501465
    6. '(a' → logprob: -6.5510077476501465
    7. ':' → logprob: -7.5510077476501465
    8. ' ' → logprob: -7.9260077476501465
    9. '```' → logprob: -8.426008224487305
    10. '<|end|>' → logprob: -8.551008224487305

Token 73: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.05910515785217285
    2. '   ' → logprob: -3.434105157852173
    3. ' a' → logprob: -3.684105157852173
    4. ' ' → logprob: -11.309104919433594
    5. '  ' → logprob: -12.809104919433594
    6. '    ' → logprob: -13.684104919433594
    7. '	a' → logprob: -13.809104919433594
    8. '```' → logprob: -14.684104919433594
    9. '       ' → logprob: -15.559104919433594
    10. '
' → logprob: -15.809104919433594

Token 74: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.008690099231898785
    2. '[' → logprob: -4.758689880371094
    3. '```' → logprob: -10.258689880371094
    4. ' [' → logprob: -11.758689880371094
    5. '[int' → logprob: -11.883689880371094
    6. '[index' → logprob: -11.883689880371094
    7. '[a' → logprob: -12.633689880371094
    8. '\[' → logprob: -12.883689880371094
    9. '[id' → logprob: -13.258689880371094
    10. '[i' → logprob: -13.633689880371094

Token 75: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00020652047533076257
    2. ']=' → logprob: -9.25020694732666
    3. ' ]' → logprob: -9.25020694732666
    4. ')' → logprob: -11.50020694732666
    5. '=' → logprob: -13.87520694732666
    6. '   ' → logprob: -14.12520694732666
    7. '']' → logprob: -14.75020694732666
    8. ']
' → logprob: -14.87520694732666
    9. ' ' → logprob: -15.12520694732666
    10. ')]' → logprob: -15.25020694732666

Token 76: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759470462799072
    2. '=' → logprob: -0.8259470462799072
    3. ' ' → logprob: -12.200946807861328
    4. ' |=' → logprob: -14.325946807861328
    5. ' +=' → logprob: -14.575946807861328
    6. '[' → logprob: -15.075946807861328
    7. '   ' → logprob: -15.825946807861328
    8. ' =)' → logprob: -15.825946807861328
    9. ' =
' → logprob: -15.950946807861328
    10. '  ' → logprob: -16.075946807861328

Token 77: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.008614926598966122
    2. ' ' → logprob: -4.758615016937256
    3. '   ' → logprob: -15.008614540100098
    4. '  ' → logprob: -17.883615493774414
    5. '0' → logprob: -18.258615493774414
    6. '```' → logprob: -18.258615493774414
    7. ' ' → logprob: -18.821115493774414
    8. '=' → logprob: -19.571115493774414
    9. '`' → logprob: -19.571115493774414
    10. ' one' → logprob: -20.008615493774414

Token 78: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0206720617134124e-05
    2. ' ' → logprob: -11.50001049041748
    3. '   ' → logprob: -17.625009536743164
    4. '```' → logprob: -18.375009536743164
    5. '`' → logprob: -18.875009536743164
    6. '  ' → logprob: -19.375009536743164
    7. '0' → logprob: -19.625009536743164
    8. '[' → logprob: -20.312509536743164
    9. '=' → logprob: -20.437509536743164
    10. '' → logprob: -20.500009536743164

Token 79: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.762483537197113
    2. '<|end|>' → logprob: -1.1374835968017578
    3. '\n' → logprob: -1.7624835968017578
    4. '```' → logprob: -3.887483596801758
    5. 'def' → logprob: -4.762483596801758
    6. 'newline' → logprob: -6.137483596801758
    7. '\' → logprob: -6.387483596801758
    8. '#' → logprob: -6.387483596801758
    9. '

' → logprob: -6.512483596801758
    10. '(' → logprob: -6.637483596801758

Token 80: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.05817805975675583
    2. '#' → logprob: -3.808177947998047
    3. '<|end|>' → logprob: -3.933177947998047
    4. '
' → logprob: -4.683177947998047
    5. '\' → logprob: -5.808177947998047
    6. '\n' → logprob: -7.183177947998047
    7. '```' → logprob: -7.558177947998047
    8. 'a' → logprob: -8.308177947998047
    9. ' ' → logprob: -8.808177947998047
    10. '_' → logprob: -8.808177947998047

Token 81: ' get' (ID: 717)
  Prédit: ' set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' set' → logprob: -0.7909336090087891
    2. ' check' → logprob: -1.665933609008789
    3. ' get' → logprob: -1.915933609008789
    4. ' main' → logprob: -2.165933609008789
    5. ' is' → logprob: -3.665933609008789
    6. ' reset' → logprob: -3.790933609008789
    7. ' count' → logprob: -5.415933609008789
    8. ' find' → logprob: -5.790933609008789
    9. ' add' → logprob: -5.790933609008789
    10. ' initialize' → logprob: -5.790933609008789

Token 82: '_start' (ID: 10949)
  Prédit: '_array'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_array' → logprob: -0.86916184425354
    2. '_one' → logprob: -1.36916184425354
    3. '_value' → logprob: -1.86916184425354
    4. '_a' → logprob: -2.74416184425354
    5. '_' → logprob: -3.36916184425354
    6. '_sum' → logprob: -3.74416184425354
    7. '_max' → logprob: -4.494161605834961
    8. '_size' → logprob: -4.994161605834961
    9. '_element' → logprob: -5.119161605834961
    10. '_for' → logprob: -5.369161605834961

Token 83: 'ing' (ID: 289)
  Prédit: '_index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.06235550716519356
    2. 'ing' → logprob: -3.3123555183410645
    3. '_indices' → logprob: -4.8123555183410645
    4. '_' → logprob: -5.0623555183410645
    5. '_end' → logprob: -6.1873555183410645
    6. '_and' → logprob: -6.4373555183410645
    7. '_array' → logprob: -6.5623555183410645
    8. '_of' → logprob: -6.8123555183410645
    9. '_idx' → logprob: -7.3123555183410645
    10. '_position' → logprob: -8.062355041503906

Token 84: '_value' (ID: 6734)
  Prédit: '_index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.024304814636707306
    2. '_indices' → logprob: -4.3993048667907715
    3. '_point' → logprob: -5.8993048667907715
    4. '_' → logprob: -6.2743048667907715
    5. '_value' → logprob: -6.3993048667907715
    6. '_position' → logprob: -6.5243048667907715
    7. '_array' → logprob: -6.7743048667907715
    8. 'ing' → logprob: -7.2743048667907715
    9. '_indexes' → logprob: -8.024304389953613
    10. '_and' → logprob: -8.399304389953613

Token 85: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0021202845964580774
    2. '(a' → logprob: -6.627120494842529
    3. ' ():' → logprob: -8.002120018005371
    4. '(' → logprob: -8.127120018005371
    5. '()' → logprob: -9.002120018005371
    6. '(size' → logprob: -11.877120018005371
    7. '()(' → logprob: -11.877120018005371
    8. '():
' → logprob: -12.002120018005371
    9. ' ()' → logprob: -12.627120018005371
    10. '```' → logprob: -13.127120018005371

Token 86: '   ' (ID: 271)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6712663769721985
    2. '   ' → logprob: -0.9212663769721985
    3. 'return' → logprob: -3.1712663173675537
    4. '1' → logprob: -3.4212663173675537
    5. '42' → logprob: -5.546266555786133
    6. '100' → logprob: -5.796266555786133
    7. '10' → logprob: -5.921266555786133
    8. '2' → logprob: -6.546266555786133
    9. ' return' → logprob: -7.421266555786133
    10. '20' → logprob: -7.421266555786133

Token 87: ' return' (ID: 622)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3854861855506897
    2. '1' → logprob: -1.510486125946045
    3. 'return' (adapté à ' return') → logprob: -3.635486125946045
    4. '2' → logprob: -4.635486125946045
    5. '-' → logprob: -4.635486125946045
    6. '10' → logprob: -4.760486125946045
    7. '100' → logprob: -4.760486125946045
    8. 'int' → logprob: -5.135486125946045
    9. '3' → logprob: -5.385486125946045
    10. '42' → logprob: -5.385486125946045

Token 88: ' get' (ID: 717)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.35840925574302673
    2. ' ' → logprob: -1.6084092855453491
    3. '1' → logprob: -2.3584091663360596
    4. '10' → logprob: -6.858409404754639
    5. '42' → logprob: -6.858409404754639
    6. '-' → logprob: -6.983409404754639
    7. '100' → logprob: -7.233409404754639
    8. '2' → logprob: -8.23340892791748
    9. 'int' → logprob: -8.35840892791748
    10. ' int' → logprob: -8.35840892791748

Token 89: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -6.301394023466855e-05
    2. '_start' → logprob: -10.625062942504883
    3. '_' → logprob: -11.875062942504883
    4. '_output' → logprob: -11.875062942504883
    5. '_in' → logprob: -12.250062942504883
    6. '_value' → logprob: -13.250062942504883
    7. '_initial' → logprob: -13.250062942504883
    8. '_import' → logprob: -13.500062942504883
    9. '_a' → logprob: -13.625062942504883
    10. '_int' → logprob: -13.875062942504883

Token 90: '_function' (ID: 21094)
  Prédit: '_function'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_function' → logprob: -0.05080209672451019
    2. '()' → logprob: -3.050801992416382
    3. '_func' → logprob: -7.175802230834961
    4. '_fun' → logprob: -7.425802230834961
    5. '_value' → logprob: -8.050802230834961
    6. '_' → logprob: -8.175802230834961
    7. '_line' → logprob: -9.550802230834961
    8. '_f' → logprob: -9.800802230834961
    9. ' _' → logprob: -10.675802230834961
    10. '_fn' → logprob: -10.925802230834961

Token 91: '()[' (ID: 20778)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -4.961759259458631e-06
    2. '()(' → logprob: -13.500004768371582
    3. ' ()' → logprob: -13.875004768371582
    4. '()
' → logprob: -14.375004768371582
    5. '(' → logprob: -14.875004768371582
    6. '()<' → logprob: -15.250004768371582
    7. '()]' → logprob: -15.250004768371582
    8. '();' → logprob: -15.625004768371582
    9. '()`' → logprob: -15.750004768371582
    10. '`()' → logprob: -15.750004768371582

Token 92: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01126803644001484
    2. '()]' → logprob: -5.011268138885498
    3. ']()' → logprob: -5.636268138885498
    4. ']' → logprob: -7.386268138885498
    5. '()' → logprob: -8.51126766204834
    6. ' ' → logprob: -9.51126766204834
    7. '(' → logprob: -10.01126766204834
    8. ']()
' → logprob: -11.88626766204834
    9. '1' → logprob: -12.26126766204834
    10. '](' → logprob: -12.51126766204834

Token 93: ']' (ID: 60)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.080957293510437
    2. '()' → logprob: -1.205957293510437
    3. '()]' → logprob: -1.580957293510437
    4. ']' → logprob: -2.0809574127197266
    5. '())' → logprob: -3.9559574127197266
    6. '(' → logprob: -5.080957412719727
    7. ']()' → logprob: -5.580957412719727
    8. ')]' → logprob: -7.580957412719727
    9. '])' → logprob: -7.830957412719727
    10. ' )' → logprob: -8.330957412719727

Token 94: '()

' (ID: 5874)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.05269737169146538
    2. '.' → logprob: -3.1776974201202393
    3. '()' → logprob: -4.80269718170166
    4. '(
' → logprob: -7.30269718170166
    5. '[' → logprob: -7.67769718170166
    6. '().' → logprob: -9.42769718170166
    7. ')' → logprob: -9.80269718170166
    8. ',' → logprob: -10.55269718170166
    9. '(

' → logprob: -10.55269718170166
    10. '\' → logprob: -10.92769718170166

Token 95: 'def' (ID: 1314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.021741271018981934
    2. '()' → logprob: -4.1467413902282715
    3. '(
' → logprob: -5.6467413902282715
    4. ')' → logprob: -6.2717413902282715
    5. '[' → logprob: -9.396740913391113
    6. '<|end|>' → logprob: -9.521740913391113
    7. '()
' → logprob: -10.646740913391113
    8. '(

' → logprob: -11.021740913391113
    9. 'newline' → logprob: -11.271740913391113
    10. ',' → logprob: -11.646740913391113

Token 96: ' mark' (ID: 1983)
  Prédit: ' get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.12645161151885986
    2. ' main' → logprob: -2.6264514923095703
    3. '_' → logprob: -4.12645149230957
    4. 'get' → logprob: -4.62645149230957
    5. ' ' → logprob: -5.50145149230957
    6. ' set' → logprob: -5.62645149230957
    7. ' _' → logprob: -5.75145149230957
    8. ' initialize' → logprob: -5.87645149230957
    9. '_get' → logprob: -7.50145149230957
    10. ' calculate' → logprob: -7.75145149230957

Token 97: '_power' (ID: 51623)
  Prédit: '_one'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_one' → logprob: -0.0031773564405739307
    2. '_array' → logprob: -6.628177165985107
    3. '_a' → logprob: -8.003177642822266
    4. '_' → logprob: -8.128177642822266
    5. '_as' → logprob: -8.503177642822266
    6. '_all' → logprob: -8.628177642822266
    7. '_for' → logprob: -8.753177642822266
    8. '_once' → logprob: -9.628177642822266
    9. '_two' → logprob: -9.628177642822266
    10. '_indices' → logprob: -9.878177642822266

Token 98: '_indices' (ID: 43508)
  Prédit: '_of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -0.2797532379627228
    2. '_set' → logprob: -2.0297532081604004
    3. 's' → logprob: -2.6547532081604004
    4. '(' → logprob: -4.0297532081604
    5. '_indices' → logprob: -5.2797532081604
    6. '_s' → logprob: -5.6547532081604
    7. '_index' → logprob: -6.1547532081604
    8. '_at' → logprob: -6.2797532081604
    9. '_' → logprob: -6.4047532081604
    10. '_array' → logprob: -6.5297532081604

Token 99: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.00865109171718359
    2. '(' → logprob: -4.758651256561279
    3. ' (' → logprob: -10.258650779724121
    4. '(ai' → logprob: -15.133650779724121
    5. 'def' → logprob: -15.258650779724121
    6. '(array' → logprob: -15.383650779724121
    7. '(def' → logprob: -15.508650779724121
    8. '(arr' → logprob: -16.258651733398438
    9. '   ' → logprob: -16.633651733398438
    10. '```' → logprob: -16.883651733398438

Token 100: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009587471140548587
    2. ' ,' → logprob: -7.5009589195251465
    3. ',a' → logprob: -7.8759589195251465
    4. ')' → logprob: -11.250958442687988
    5. '(a' → logprob: -12.750958442687988
    6. 'a' → logprob: -13.000958442687988
    7. '):' → logprob: -13.625958442687988
    8. ',
' → logprob: -13.625958442687988
    9. '),' → logprob: -14.000958442687988
    10. ',n' → logprob: -14.250958442687988

Token 101: ' limit' (ID: 5967)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -1.27527916431427
    2. ' p' → logprob: -1.77527916431427
    3. ' base' → logprob: -2.0252790451049805
    4. ' power' → logprob: -2.1502790451049805
    5. 'n' → logprob: -2.6502790451049805
    6. 'p' → logprob: -3.1502790451049805
    7. ' x' → logprob: -3.7752790451049805
    8. 'power' → logprob: -3.9002790451049805
    9. ' value' → logprob: -4.1502790451049805
    10. ' a' → logprob: -4.1502790451049805

Token 102: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03929778188467026
    2. ',' → logprob: -3.4142978191375732
    3. '):
' → logprob: -5.664297580718994
    4. ')' → logprob: -6.289297580718994
    5. ' ):' → logprob: -8.664298057556152
    6. '=' → logprob: -9.914298057556152
    7. '   ' → logprob: -10.789298057556152
    8. ' ,' → logprob: -11.039298057556152
    9. '):
' → logprob: -11.789298057556152
    10. ',a' → logprob: -12.039298057556152

Token 103: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005182524211704731
    2. ' for' → logprob: -5.38018274307251
    3. 'for' → logprob: -7.88018274307251
    4. '    
' → logprob: -10.255182266235352
    5. '```' → logprob: -10.255182266235352
    6. '
' → logprob: -10.755182266235352
    7. 'n' → logprob: -10.880182266235352
    8. ' ' → logprob: -11.005182266235352
    9. '  ' → logprob: -11.755182266235352
    10. ',' → logprob: -11.755182266235352

Token 104: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.7503122091293335
    2. '   ' → logprob: -0.8753122091293335
    3. 'i' → logprob: -2.625312328338623
    4. 'def' → logprob: -4.625312328338623
    5. ' for' → logprob: -4.750312328338623
    6. 'power' → logprob: -4.750312328338623
    7. 'p' → logprob: -5.875312328338623
    8. 'value' → logprob: -6.875312328338623
    9. 'step' → logprob: -6.875312328338623
    10. ' i' → logprob: -6.875312328338623

Token 105: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.012062657624483109
    2. 'i' → logprob: -4.5120625495910645
    3. ' power' → logprob: -8.012063026428223
    4. ' idx' → logprob: -8.637063026428223
    5. ' p' → logprob: -9.137063026428223
    6. ' ' → logprob: -9.387063026428223
    7. '   ' → logprob: -9.387063026428223
    8. ' pow' → logprob: -9.762063026428223
    9. 'pow' → logprob: -10.512063026428223
    10. '```' → logprob: -11.262063026428223

Token 106: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.016288312152028084
    2. 'in' → logprob: -4.2662882804870605
    3. ' ' → logprob: -6.2662882804870605
    4. ',' → logprob: -9.766288757324219
    5. '   ' → logprob: -9.766288757324219
    6. '  ' → logprob: -10.266288757324219
    7. '1' → logprob: -11.391288757324219
    8. '```' → logprob: -11.766288757324219
    9. 'n' → logprob: -12.266288757324219
    10. '    ' → logprob: -12.328788757324219

Token 107: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.28415989875793457
    2. 'range' → logprob: -1.4091598987579346
    3. '(range' → logprob: -6.1591596603393555
    4. '[' → logprob: -8.034159660339355
    5. '(' → logprob: -8.159159660339355
    6. ' ' → logprob: -9.409159660339355
    7. '2' → logprob: -9.659159660339355
    8. '   ' → logprob: -10.159159660339355
    9. '	range' → logprob: -10.659159660339355
    10. 'pow' → logprob: -11.534159660339355

Token 108: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.012717771343886852
    2. '(limit' → logprob: -4.3877177238464355
    3. '(len' → logprob: -8.637718200683594
    4. ' (' → logprob: -11.887718200683594
    5. ' ' → logprob: -12.137718200683594
    6. '2' → logprob: -12.512718200683594
    7. '(power' → logprob: -12.887718200683594
    8. '((' → logprob: -13.137718200683594
    9. '1' → logprob: -13.137718200683594
    10. 'limit' → logprob: -13.262718200683594

Token 109: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.8529574275016785
    2. 'limit' → logprob: -0.8529574275016785
    3. '1' → logprob: -1.9779574871063232
    4. ' limit' → logprob: -5.977957248687744
    5. '10' → logprob: -6.477957248687744
    6. ' ' → logprob: -6.602957248687744
    7. 'len' → logprob: -7.477957248687744
    8. '3' → logprob: -7.602957248687744
    9. '0' → logprob: -7.727957248687744
    10. 'int' → logprob: -7.852957248687744

Token 110: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05075155943632126
    2. ' ,' → logprob: -3.0507514476776123
    3. '**' → logprob: -6.550751686096191
    4. ' **' → logprob: -7.550751686096191
    5. '*' → logprob: -10.050751686096191
    6. ' ' → logprob: -10.175751686096191
    7. '**,' → logprob: -10.175751686096191
    8. ' *' → logprob: -10.425751686096191
    9. ',len' → logprob: -10.550751686096191
    10. '1' → logprob: -12.300751686096191

Token 111: ' ' (ID: 220)
  Prédit: ' limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' limit' → logprob: -0.5768492817878723
    2. 'limit' → logprob: -0.8268492817878723
    3. ' int' → logprob: -7.576849460601807
    4. 'int' → logprob: -7.951849460601807
    5. '(limit' → logprob: -10.826848983764648
    6. ' ' → logprob: -11.451848983764648
    7. '20' → logprob: -12.826848983764648
    8. '17' → logprob: -13.576848983764648
    9. '  ' → logprob: -13.826848983764648
    10. ' len' → logprob: -13.951848983764648

Token 112: '100' (ID: 1353)
  Prédit: 'limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.003336218185722828
    2. 'int' → logprob: -6.253336429595947
    3. ' limit' → logprob: -6.628336429595947
    4. '(limit' → logprob: -11.253335952758789
    5. '20' → logprob: -11.378335952758789
    6. ' int' → logprob: -11.503335952758789
    7. '21' → logprob: -11.878335952758789
    8. '31' → logprob: -11.878335952758789
    9. '17' → logprob: -12.378335952758789
    10. 'len' → logprob: -12.628335952758789

Token 113: '0' (ID: 15)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07071289420127869
    2. '000' → logprob: -3.6957128047943115
    3. '00' → logprob: -4.070713043212891
    4. '):
' → logprob: -4.695713043212891
    5. '0' → logprob: -4.820713043212891
    6. '01' → logprob: -5.570713043212891
    7. '1' → logprob: -6.195713043212891
    8. '**' → logprob: -6.820713043212891
    9. '001' → logprob: -7.070713043212891
    10. ')' → logprob: -7.195713043212891

Token 114: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6240076422691345
    2. '**' → logprob: -1.2490077018737793
    3. '):
' → logprob: -1.7490077018737793
    4. ' **' → logprob: -6.874007701873779
    5. '*' → logprob: -7.124007701873779
    6. '0' → logprob: -7.499007701873779
    7. '00' → logprob: -8.249007225036621
    8. ',' → logprob: -8.499007225036621
    9. ')' → logprob: -8.499007225036621
    10. ' ):' → logprob: -9.124007225036621

Token 115: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01110229454934597
    2. ' if' → logprob: -4.886102199554443
    3. '<|end|>' → logprob: -6.386102199554443
    4. 'if' → logprob: -6.511102199554443
    5. '   ' → logprob: -9.761102676391602
    6. 'pow' → logprob: -10.011102676391602
    7. '        
' → logprob: -10.261102676391602
    8. ' ' → logprob: -10.886102676391602
    9. '<|end|>' → logprob: -11.011102676391602
    10. '1' → logprob: -11.386102676391602

Token 116: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.3245199918746948
    2. '       ' → logprob: -1.6995199918746948
    3. 'if' (adapté à ' if') → logprob: -2.0745201110839844
    4. 'pow' → logprob: -2.0745201110839844
    5. 'p' → logprob: -2.5745201110839844
    6. ' p' → logprob: -2.9495201110839844
    7. ' val' → logprob: -3.4495201110839844
    8. ' power' → logprob: -3.5745201110839844
    9. 'power' → logprob: -3.8245201110839844
    10. ' pow' → logprob: -3.9495201110839844

Token 117: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4370158016681671
    2. ' i' → logprob: -1.0620157718658447
    3. 'pow' → logprob: -6.062016010284424
    4. 'a' → logprob: -6.437016010284424
    5. '2' → logprob: -7.187016010284424
    6. ' a' → logprob: -7.187016010284424
    7. ' pow' → logprob: -7.187016010284424
    8. '(i' → logprob: -7.437016010284424
    9. ' (' → logprob: -8.062015533447266
    10. '   ' → logprob: -8.187015533447266

Token 118: ' *' (ID: 425)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.04142165929079056
    2. ' **' → logprob: -3.54142165184021
    3. '*i' → logprob: -4.916421890258789
    4. '*' → logprob: -5.541421890258789
    5. ' *' → logprob: -8.416421890258789
    6. ' ' → logprob: -10.166421890258789
    7. '***' → logprob: -10.416421890258789
    8. 'i' → logprob: -11.166421890258789
    9. ' i' → logprob: -11.416421890258789
    10. ' <=' → logprob: -11.416421890258789

Token 119: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0004827465454582125
    2. ' i' → logprob: -7.875482559204102
    3. '2' → logprob: -9.500482559204102
    4. '*i' → logprob: -11.000482559204102
    5. ' ' → logprob: -12.250482559204102
    6. '1' → logprob: -13.750482559204102
    7. '*' → logprob: -14.000482559204102
    8. '  ' → logprob: -14.000482559204102
    9. '	i' → logprob: -14.250482559204102
    10. '   ' → logprob: -15.000482559204102

Token 120: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.13227784633636475
    2. '<=' → logprob: -2.1322779655456543
    3. ' <' → logprob: -5.632277965545654
    4. '<' → logprob: -7.257277965545654
    5. ' >' → logprob: -7.632277965545654
    6. ' ' → logprob: -8.257277488708496
    7. '>' → logprob: -8.757277488708496
    8. ' >=' → logprob: -10.257277488708496
    9. '*' → logprob: -10.507277488708496
    10. '>=' → logprob: -11.382277488708496

Token 121: ' limit' (ID: 5967)
  Prédit: 'limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.07908795773983002
    2. ' limit' → logprob: -2.579087972640991
    3. '100' → logprob: -8.57908821105957
    4. '(limit' → logprob: -12.07908821105957
    5. '   ' → logprob: -13.32908821105957
    6. ' ' → logprob: -13.45408821105957
    7. 'lim' → logprob: -14.32908821105957
    8. '  ' → logprob: -15.20408821105957
    9. '```' → logprob: -15.82908821105957
    10. '
' → logprob: -16.32908821105957

Token 122: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03926396742463112
    2. ' and' → logprob: -3.664263963699341
    3. ':
' → logprob: -4.41426420211792
    4. '):' → logprob: -8.164263725280762
    5. 'and' → logprob: -8.289263725280762
    6. ' :' → logprob: -8.664263725280762
    7. '       ' → logprob: -11.039263725280762
    8. '):
' → logprob: -11.289263725280762
    9. '   ' → logprob: -11.789263725280762
    10. ' :
' → logprob: -11.914263725280762

Token 123: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1339949667453766
    2. ':' → logprob: -2.7589950561523438
    3. '<|end|>' → logprob: -3.0089950561523438
    4. '       ' → logprob: -5.258995056152344
    5. '<|end|>' → logprob: -6.258995056152344
    6. ' and' → logprob: -6.508995056152344
    7. ':
' → logprob: -6.633995056152344
    8. ',' → logprob: -7.383995056152344
    9. '          ' → logprob: -8.008995056152344
    10. '            
' → logprob: -8.133995056152344

Token 124: ' mark' (ID: 1983)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.23213587701320648
    2. ' a' → logprob: -1.9821358919143677
    3. '           ' → logprob: -3.357135772705078
    4. 'for' → logprob: -4.357135772705078
    5. ' for' → logprob: -4.857135772705078
    6. 'set' → logprob: -4.982135772705078
    7. ' set' → logprob: -6.107135772705078
    8. '               ' → logprob: -6.982135772705078
    9. 'if' → logprob: -7.232135772705078
    10. 'j' → logprob: -7.482135772705078

Token 125: '_s' (ID: 1278)
  Prédit: '_power'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_power' → logprob: -4.310693111619912e-05
    2. '_one' → logprob: -11.250042915344238
    3. '_' → logprob: -11.750042915344238
    4. '_pow' → logprob: -11.750042915344238
    5. 'power' → logprob: -12.375042915344238
    6. '_p' → logprob: -12.375042915344238
    7. 'pow' → logprob: -13.750042915344238
    8. '_POWER' → logprob: -14.500042915344238
    9. '_for' → logprob: -14.625042915344238
    10. 'ing' → logprob: -14.750042915344238

Token 126: 'quares' (ID: 110764)
  Prédit: 'et'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'et' → logprob: -0.4210633635520935
    2. 'power' → logprob: -2.0460634231567383
    3. '_power' → logprob: -2.2960634231567383
    4. 'quare' → logprob: -2.6710634231567383
    5. 'quares' → logprob: -4.171063423156738
    6. 'powers' → logprob: -5.421063423156738
    7. 'quared' → logprob: -5.921063423156738
    8. 'pow' → logprob: -6.296063423156738
    9. 'for' → logprob: -6.296063423156738
    10. 'ets' → logprob: -6.296063423156738

Token 127: '_and' (ID: 18645)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0011281942715868354
    2. '_in' → logprob: -8.376128196716309
    3. '(i' → logprob: -8.376128196716309
    4. '(' → logprob: -8.501128196716309
    5. '_for' → logprob: -9.001128196716309
    6. 'for' → logprob: -9.126128196716309
    7. '_indices' → logprob: -9.876128196716309
    8. 'in' → logprob: -9.876128196716309
    9. ' (' → logprob: -10.251128196716309
    10. '   ' → logprob: -10.876128196716309

Token 128: '_p' (ID: 1359)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.14843857288360596
    2. 'powers' → logprob: -2.0234384536743164
    3. 'multip' → logprob: -6.398438453674316
    4. ' cubes' → logprob: -6.523438453674316
    5. 'power' → logprob: -7.898438453674316
    6. 'higher' → logprob: -7.898438453674316
    7. 'mark' → logprob: -8.398438453674316
    8. ' powers' → logprob: -8.523438453674316
    9. 'continue' → logprob: -8.523438453674316
    10. 'p' → logprob: -8.898438453674316

Token 129: 'owers' (ID: 23882)
  Prédit: 'owers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'owers' → logprob: -0.06824017316102982
    2. 'r' → logprob: -2.818240165710449
    3. 'ower' → logprob: -6.068240165710449
    4. 'ow' → logprob: -6.193240165710449
    5. 'roots' → logprob: -7.818240165710449
    6. 'ows' → logprob: -8.06824016571045
    7. 'er' → logprob: -8.56824016571045
    8. 'oints' → logprob: -8.81824016571045
    9. 'rans' → logprob: -9.06824016571045
    10. 're' → logprob: -9.81824016571045

Token 130: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.004905446898192167
    2. '(i' → logprob: -5.6299052238464355
    3. ' (' → logprob: -7.3799052238464355
    4. '(' → logprob: -7.5049052238464355
    5. '           ' → logprob: -9.504905700683594
    6. '   ' → logprob: -10.629905700683594
    7. 's' → logprob: -11.504905700683594
    8. '```' → logprob: -12.254905700683594
    9. '(ai' → logprob: -13.004905700683594
    10. '          ' → logprob: -13.379905700683594

Token 131: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5125858783721924
    2. '(i' → logprob: -1.0125858783721924
    3. ',i' → logprob: -3.7625858783721924
    4. ' ,' → logprob: -4.512585639953613
    5. '           ' → logprob: -6.887585639953613
    6. ' (' → logprob: -7.137585639953613
    7. '(' → logprob: -7.137585639953613
    8. ')' → logprob: -8.387585639953613
    9. '[i' → logprob: -8.387585639953613
    10. '               ' → logprob: -9.012585639953613

Token 132: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7364200353622437
    2. 'limit' → logprob: -1.3614200353622437
    3. ' limit' → logprob: -1.8614200353622437
    4. ' i' → logprob: -2.236420154571533
    5. '100' → logprob: -6.611420154571533
    6. '           ' → logprob: -7.361420154571533
    7. '   ' → logprob: -8.611419677734375
    8. ' ' → logprob: -8.986419677734375
    9. '(limit' → logprob: -10.111419677734375
    10. '    ' → logprob: -10.236419677734375

Token 133: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3520541489124298
    2. ')' → logprob: -1.2270541191101074
    3. ' ,' → logprob: -6.977054119110107
    4. ',i' → logprob: -7.227054119110107
    5. '           ' → logprob: -7.602054119110107
    6. '**' → logprob: -8.227054595947266
    7. ' )' → logprob: -8.477054595947266
    8. '               ' → logprob: -8.477054595947266
    9. '   ' → logprob: -8.977054595947266
    10. '       ' → logprob: -9.102054595947266

Token 134: ' limit' (ID: 5967)
  Prédit: 'limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.0186651311814785
    2. ' limit' → logprob: -4.018665313720703
    3. '100' → logprob: -7.768665313720703
    4. 'i' → logprob: -9.643665313720703
    5. ' i' → logprob: -11.143665313720703
    6. 'lim' → logprob: -11.768665313720703
    7. ' ' → logprob: -13.643665313720703
    8. '(limit' → logprob: -13.643665313720703
    9. '  ' → logprob: -14.518665313720703
    10. '    ' → logprob: -14.643665313720703

Token 135: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007796077989041805
    2. ',' → logprob: -7.750779628753662
    3. ')
' → logprob: -8.500779151916504
    4. '           ' → logprob: -9.875779151916504
    5. '       ' → logprob: -10.375779151916504
    6. '               ' → logprob: -11.000779151916504
    7. ' )' → logprob: -11.000779151916504
    8. '):' → logprob: -11.625779151916504
    9. '   ' → logprob: -12.125779151916504
    10. ');' → logprob: -12.750779151916504

Token 136: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 137: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6576899290084839
    2. 'else' (adapté à ' else') → logprob: -1.2826899290084839
    3. ' else' → logprob: -1.6576899290084839
    4. '<|end|>' → logprob: -4.782690048217773
    5. '   ' → logprob: -5.782690048217773
    6. '	else' → logprob: -6.407690048217773
    7. '<|end|>' → logprob: -8.157690048217773
    8. '    ' → logprob: -9.032690048217773
    9. '        ' → logprob: -9.032690048217773
    10. 'elif' → logprob: -9.157690048217773

Token 138: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.033972885459661484
    2. ':' → logprob: -3.408972978591919
    3. '       ' → logprob: -9.15897274017334
    4. 'break' → logprob: -9.28397274017334
    5. ':
' → logprob: -10.03397274017334
    6. ' break' → logprob: -10.03397274017334
    7. '   ' → logprob: -11.28397274017334
    8. '          ' → logprob: -11.53397274017334
    9. '               ' → logprob: -12.40897274017334
    10. '	break' → logprob: -12.65897274017334

Token 139: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.023671792820096016
    2. 'break' → logprob: -3.773671865463257
    3. ' break' → logprob: -7.898671627044678
    4. 'return' → logprob: -10.523672103881836
    5. '               ' → logprob: -11.648672103881836
    6. '       ' → logprob: -11.648672103881836
    7. '	break' → logprob: -12.273672103881836
    8. '		' → logprob: -12.773672103881836
    9. ' ' → logprob: -13.523672103881836
    10. '   ' → logprob: -14.398672103881836

Token 140: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.002736639464274049
    2. ' break' → logprob: -6.002736568450928
    3. '           ' → logprob: -8.752737045288086
    4. '       ' → logprob: -9.877737045288086
    5. 'return' → logprob: -10.377737045288086
    6. '	break' → logprob: -10.877737045288086
    7. '               ' → logprob: -13.627737045288086
    8. '   ' → logprob: -15.877737045288086
    9. '_break' → logprob: -16.502737045288086
    10. '```' → logprob: -16.877737045288086

Token 141: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5808849334716797
    2. ':' → logprob: -1.0808849334716797
    3. '\n' → logprob: -3.4558849334716797
    4. '<|end|>' → logprob: -3.7058849334716797
    5. 'def' → logprob: -3.9558849334716797
    6. '\' → logprob: -5.70588493347168
    7. ':
' → logprob: -5.70588493347168
    8. '   ' → logprob: -5.83088493347168
    9. '```' → logprob: -5.95588493347168
    10. ':def' → logprob: -6.20588493347168

Token 142: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.06518293172121048
    2. '<|end|>' → logprob: -2.81518292427063
    3. '#' → logprob: -7.065183162689209
    4. ':' → logprob: -7.690183162689209
    5. '<|end|>' → logprob: -7.690183162689209
    6. '
' → logprob: -8.31518268585205
    7. ' def' → logprob: -8.44018268585205
    8. '   ' → logprob: -8.44018268585205
    9. '[' → logprob: -8.69018268585205
    10. '\' → logprob: -8.81518268585205

Token 143: ' mark' (ID: 1983)
  Prédit: ' mark'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mark' → logprob: -0.08436626195907593
    2. 'mark' → logprob: -2.5843663215637207
    3. ' main' → logprob: -5.584366321563721
    4. ' get' → logprob: -8.209365844726562
    5. ' process' → logprob: -8.334365844726562
    6. 'main' → logprob: -8.459365844726562
    7. ' is' → logprob: -8.584365844726562
    8. ' check' → logprob: -8.959365844726562
    9. ' def' → logprob: -9.209365844726562
    10. ' find' → logprob: -9.584365844726562

Token 144: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.0004601015243679285
    2. '_p' → logprob: -8.375459671020508
    3. '_power' → logprob: -8.625459671020508
    4. '_' → logprob: -10.125459671020508
    5. '_square' → logprob: -12.250459671020508
    6. '_pow' → logprob: -13.625459671020508
    7. '_one' → logprob: -13.875459671020508
    8. '_squared' → logprob: -14.000459671020508
    9. '_indices' → logprob: -15.000459671020508
    10. '_sub' → logprob: -15.500459671020508

Token 145: 'quares' (ID: 110764)
  Prédit: 'quares'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quares' → logprob: -4.668304245569743e-05
    2. 'quare' → logprob: -10.375046730041504
    3. '_' → logprob: -12.125046730041504
    4. 'quared' → logprob: -12.500046730041504
    5. 'qu' → logprob: -13.500046730041504
    6. 'q' → logprob: -13.625046730041504
    7. '```' → logprob: -14.250046730041504
    8. 'qrt' → logprob: -14.750046730041504
    9. '``' → logprob: -15.000046730041504
    10. 'qua' → logprob: -15.125046730041504

Token 146: '_and' (ID: 18645)
  Prédit: '_and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_and' → logprob: -1.5213274309644476e-05
    2. 'and' → logprob: -11.500015258789062
    3. '_' → logprob: -13.000015258789062
    4. '(a' → logprob: -14.125015258789062
    5. '_a' → logprob: -14.375015258789062
    6. '_for' → logprob: -14.750015258789062
    7. ' and' → logprob: -15.000015258789062
    8. '   ' → logprob: -15.750015258789062
    9. '```' → logprob: -16.000015258789062
    10. '_(' → logprob: -16.250015258789062

Token 147: '_p' (ID: 1359)
  Prédit: '_p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -0.20146237313747406
    2. 'powers' → logprob: -1.7014623880386353
    3. '_power' → logprob: -10.576462745666504
    4. 'pow' → logprob: -11.701462745666504
    5. ' powers' → logprob: -12.326462745666504
    6. 'power' → logprob: -12.451462745666504
    7. '_pow' → logprob: -12.826462745666504
    8. '_' → logprob: -13.826462745666504
    9. 'a' → logprob: -14.076462745666504
    10. 'p' → logprob: -14.201462745666504

Token 148: 'owers' (ID: 23882)
  Prédit: 'owers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'owers' → logprob: -0.00030841029365547
    2. 'powers' → logprob: -8.6253080368042
    3. 'ower' → logprob: -9.1253080368042
    4. 'ow' → logprob: -11.0003080368042
    5. 'owe' → logprob: -14.3753080368042
    6. 'owels' → logprob: -14.5003080368042
    7. 'wers' → logprob: -15.0003080368042
    8. 'ows' → logprob: -15.1253080368042
    9. '```' → logprob: -15.3753080368042
    10. 'power' → logprob: -15.8753080368042

Token 149: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -1.9027791495318525e-05
    2. '(' → logprob: -10.875019073486328
    3. ' (' → logprob: -16.750019073486328
    4. '(
' → logprob: -19.500019073486328
    5. 'a' → logprob: -20.875019073486328
    6. '   ' → logprob: -21.125019073486328
    7. '(array' → logprob: -21.375019073486328
    8. '(

' → logprob: -22.000019073486328
    9. '(arr' → logprob: -22.125019073486328
    10. '(ai' → logprob: -22.250019073486328

Token 150: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.484132169745862e-05
    2. ' ,' → logprob: -9.750094413757324
    3. ',a' → logprob: -10.250094413757324
    4. 'a' → logprob: -14.500094413757324
    5. '   ' → logprob: -14.625094413757324
    6. ',i' → logprob: -17.00009536743164
    7. '_,' → logprob: -17.62509536743164
    8. ' a' → logprob: -17.87509536743164
    9. ',p' → logprob: -18.00009536743164
    10. ',
' → logprob: -18.12509536743164

Token 151: ' i' (ID: 575)
  Prédit: 'limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.7672451138496399
    2. 'i' → logprob: -1.1422450542449951
    3. ' limit' → logprob: -1.8922450542449951
    4. ' i' → logprob: -2.767245054244995
    5. '100' → logprob: -7.267245292663574
    6. 'idx' → logprob: -7.892245292663574
    7. 'a' → logprob: -8.017245292663574
    8. '   ' → logprob: -8.142245292663574
    9. ' idx' → logprob: -8.142245292663574
    10. ')' → logprob: -9.017245292663574

Token 152: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006844374001957476
    2. ' ,' → logprob: -7.3756842613220215
    3. '   ' → logprob: -10.00068473815918
    4. '):' → logprob: -12.62568473815918
    5. '_,' → logprob: -13.87568473815918
    6. ',n' → logprob: -14.25068473815918
    7. '),' → logprob: -14.25068473815918
    8. ',int' → logprob: -14.50068473815918
    9. ',index' → logprob: -14.50068473815918
    10. ',
' → logprob: -14.62568473815918

Token 153: ' limit' (ID: 5967)
  Prédit: 'limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.11299480497837067
    2. ' limit' → logprob: -2.237994909286499
    3. '100' → logprob: -8.987995147705078
    4. 'lim' → logprob: -11.487995147705078
    5. '   ' → logprob: -11.612995147705078
    6. 'i' → logprob: -11.862995147705078
    7. ' ' → logprob: -11.987995147705078
    8. '(limit' → logprob: -12.487995147705078
    9. ' i' → logprob: -12.737995147705078
    10. '    ' → logprob: -12.987995147705078

Token 154: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.05642275884747505
    2. ',' → logprob: -2.931422710418701
    3. '):
' → logprob: -7.056422710418701
    4. '   ' → logprob: -7.431422710418701
    5. ':' → logprob: -9.80642318725586
    6. ')' → logprob: -11.05642318725586
    7. '):
' → logprob: -12.80642318725586
    8. ' ):' → logprob: -12.80642318725586
    9. ' ,' → logprob: -12.93142318725586
    10. '}:' → logprob: -13.68142318725586

Token 155: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10097592324018478
    2. 'power' → logprob: -2.60097599029541
    3. 'p' → logprob: -4.47597599029541
    4. ' power' → logprob: -6.10097599029541
    5. 'pow' → logprob: -6.22597599029541
    6. 'val' → logprob: -6.35097599029541
    7. 'x' → logprob: -6.72597599029541
    8. 'current' → logprob: -7.10097599029541
    9. 'j' → logprob: -7.60097599029541
    10. 'base' → logprob: -7.85097599029541

Token 156: ' set' (ID: 920)
  Prédit: 'power'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'power' → logprob: -0.36613473296165466
    2. 'val' → logprob: -2.2411346435546875
    3. '   ' → logprob: -2.8661346435546875
    4. 'value' → logprob: -3.3661346435546875
    5. 'x' → logprob: -3.4911346435546875
    6. 'p' → logprob: -3.4911346435546875
    7. 'current' → logprob: -4.4911346435546875
    8. 'j' → logprob: -4.7411346435546875
    9. 'pow' → logprob: -4.7411346435546875
    10. 'base' → logprob: -5.1161346435546875

Token 157: '_one' (ID: 26979)
  Prédit: '_one'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_one' → logprob: -0.0002836232597474009
    2. 'def' → logprob: -9.500283241271973
    3. '_' → logprob: -10.125283241271973
    4. '_square' → logprob: -10.500283241271973
    5. '_power' → logprob: -10.625283241271973
    6. '_s' → logprob: -10.875283241271973
    7. '_two' → logprob: -11.500283241271973
    8. '   ' → logprob: -11.875283241271973
    9. '_for' → logprob: -12.125283241271973
    10. 'One' → logprob: -12.125283241271973

Token 158: '_for' (ID: 11903)
  Prédit: '_for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_for' → logprob: -0.0816657766699791
    2. '(a' → logprob: -2.7066657543182373
    3. 'for' → logprob: -4.581665992736816
    4. 'For' → logprob: -7.456665992736816
    5. '(' → logprob: -7.581665992736816
    6. '```' → logprob: -9.331665992736816
    7. ' for' → logprob: -9.831665992736816
    8. ')' → logprob: -9.831665992736816
    9. '   ' → logprob: -9.956665992736816
    10. 'a' → logprob: -11.081665992736816

Token 159: '_index' (ID: 7748)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.11215096712112427
    2. '_index' → logprob: -2.9871509075164795
    3. '(a' → logprob: -3.2371509075164795
    4. 'array' → logprob: -5.362151145935059
    5. '_array' → logprob: -5.737151145935059
    6. 'index' → logprob: -5.737151145935059
    7. ' a' → logprob: -6.612151145935059
    8. '```' → logprob: -7.112151145935059
    9. '_' → logprob: -7.237151145935059
    10. 'i' → logprob: -7.362151145935059

Token 160: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.00022070204431656748
    2. '(' → logprob: -8.50022029876709
    3. '(
' → logprob: -11.75022029876709
    4. 'a' → logprob: -12.25022029876709
    5. ' (' → logprob: -12.87522029876709
    6. '(i' → logprob: -14.50022029876709
    7. '```' → logprob: -14.62522029876709
    8. 'def' → logprob: -15.12522029876709
    9. '(ai' → logprob: -15.75022029876709
    10. '   ' → logprob: -16.500221252441406

Token 161: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02431877888739109
    2. ' ,' → logprob: -3.7743186950683594
    3. ',i' → logprob: -7.774318695068359
    4. '   ' → logprob: -8.14931869506836
    5. '(i' → logprob: -9.39931869506836
    6. ' i' → logprob: -10.02431869506836
    7. '[' → logprob: -10.14931869506836
    8. '[i' → logprob: -10.27431869506836
    9. '(' → logprob: -10.39931869506836
    10. 'a' → logprob: -10.39931869506836

Token 162: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.008712195791304111
    2. ' i' → logprob: -4.758712291717529
    3. '   ' → logprob: -10.383711814880371
    4. ')' → logprob: -10.508711814880371
    5. ' ' → logprob: -10.508711814880371
    6. '0' → logprob: -12.133711814880371
    7. '  ' → logprob: -13.383711814880371
    8. '1' → logprob: -13.508711814880371
    9. '2' → logprob: -14.133711814880371
    10. ')i' → logprob: -14.258711814880371

Token 163: ' *' (ID: 425)
  Prédit: '*i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*i' → logprob: -0.2727714776992798
    2. ' *' → logprob: -1.5227714776992798
    3. '*' → logprob: -3.8977713584899902
    4. ')' → logprob: -8.647771835327148
    5. ' ' → logprob: -9.647771835327148
    6. '**' → logprob: -10.272771835327148
    7. '   ' → logprob: -10.272771835327148
    8. '*j' → logprob: -12.147771835327148
    9. 'i' → logprob: -12.522771835327148
    10. ')
' → logprob: -12.647771835327148

Token 164: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -2.8802491215174086e-05
    2. ' i' → logprob: -10.500028610229492
    3. '2' → logprob: -14.000028610229492
    4. '	i' → logprob: -16.000028610229492
    5. ' ' → logprob: -16.375028610229492
    6. '   ' → logprob: -16.875028610229492
    7. 'a' → logprob: -17.000028610229492
    8. '```' → logprob: -18.750028610229492
    9. '  ' → logprob: -19.000028610229492
    10. '*i' → logprob: -19.125028610229492

Token 165: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.016233421862125397
    2. ')
' → logprob: -4.266233444213867
    3. ' )' → logprob: -6.266233444213867
    4. ' )
' → logprob: -9.516233444213867
    5. '   ' → logprob: -10.016233444213867
    6. ')
' → logprob: -11.266233444213867
    7. ')

' → logprob: -11.516233444213867
    8. '+' → logprob: -11.516233444213867
    9. ')`' → logprob: -12.766233444213867
    10. ' +' → logprob: -12.891233444213867

Token 166: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21164633333683014
    2. '```' → logprob: -3.336646318435669
    3. ' for' → logprob: -3.586646318435669
    4. '+' → logprob: -3.586646318435669
    5. 'for' → logprob: -3.961646318435669
    6. '    
' → logprob: -4.211646556854248
    7. ',' → logprob: -4.961646556854248
    8. ' i' → logprob: -4.961646556854248
    9. 'i' → logprob: -5.086646556854248
    10. '**' → logprob: -5.211646556854248

Token 167: ' mark' (ID: 1983)
  Prédit: 'power'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'power' → logprob: -0.022107942029833794
    2. 'p' → logprob: -4.64710807800293
    3. '   ' → logprob: -5.27210807800293
    4. 'pow' → logprob: -5.89710807800293
    5. 'current' → logprob: -6.64710807800293
    6. 'val' → logprob: -7.02210807800293
    7. 'x' → logprob: -7.77210807800293
    8. 'j' → logprob: -8.02210807800293
    9. 'for' → logprob: -8.14710807800293
    10. 'exp' → logprob: -8.14710807800293

Token 168: '_h' (ID: 3434)
  Prédit: '_p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_p' → logprob: -0.2039887011051178
    2. '_s' → logprob: -2.328988790512085
    3. '_power' → logprob: -2.453988790512085
    4. '_for' → logprob: -8.078989028930664
    5. '_pow' → logprob: -8.453989028930664
    6. '_remaining' → logprob: -9.203989028930664
    7. '_' → logprob: -9.203989028930664
    8. '_square' → logprob: -9.578989028930664
    9. 'powers' → logprob: -9.953989028930664
    10. '_all' → logprob: -10.453989028930664

Token 169: 'igher' (ID: 6708)
  Prédit: 'igh'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'igh' → logprob: -0.45004570484161377
    2. 'igher' → logprob: -1.2000457048416138
    3. 'e' → logprob: -3.575045585632324
    4. 'eight' → logprob: -4.200045585632324
    5. 'elper' → logprob: -4.950045585632324
    6. 'i' → logprob: -5.450045585632324
    7. 'elp' → logprob: -6.200045585632324
    8. 'ex' → logprob: -7.075045585632324
    9. 'ead' → logprob: -7.575045585632324
    10. 'eat' → logprob: -7.825045585632324

Token 170: '_p' (ID: 1359)
  Prédit: '_p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -0.0004727371269837022
    2. '_power' → logprob: -8.000473022460938
    3. '_and' → logprob: -10.500473022460938
    4. '_pow' → logprob: -10.750473022460938
    5. '_for' → logprob: -10.875473022460938
    6. 's' → logprob: -11.000473022460938
    7. 'powers' → logprob: -11.250473022460938
    8. '_s' → logprob: -11.625473022460938
    9. '_' → logprob: -11.625473022460938
    10. '_orders' → logprob: -12.250473022460938

Token 171: 'owers' (ID: 23882)
  Prédit: 'owers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'owers' → logprob: -0.00044032474397681653
    2. 'ower' → logprob: -8.00044059753418
    3. 'ow' → logprob: -9.37544059753418
    4. 'ows' → logprob: -11.62544059753418
    5. 'powers' → logprob: -12.25044059753418
    6. 'owered' → logprob: -13.62544059753418
    7. '```' → logprob: -14.12544059753418
    8. '   ' → logprob: -14.25044059753418
    9. 'owels' → logprob: -14.25044059753418
    10. '(' → logprob: -15.25044059753418

Token 172: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -3.0948158382670954e-05
    2. '(' → logprob: -10.500030517578125
    3. ' (' → logprob: -12.875030517578125
    4. '(
' → logprob: -15.500030517578125
    5. 's' → logprob: -15.875030517578125
    6. '_for' → logprob: -16.125030517578125
    7. '```' → logprob: -16.750030517578125
    8. 'for' → logprob: -16.875030517578125
    9. '(s' → logprob: -17.375030517578125
    10. 'For' → logprob: -17.500030517578125

Token 173: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003764535649679601
    2. '(a' → logprob: -8.25037670135498
    3. ',a' → logprob: -9.50037670135498
    4. ' ,' → logprob: -10.37537670135498
    5. 'a' → logprob: -12.87537670135498
    6. '(' → logprob: -12.87537670135498
    7. ')' → logprob: -13.50037670135498
    8. '   ' → logprob: -13.75037670135498
    9. ',
' → logprob: -14.75037670135498
    10. ' a' → logprob: -15.00037670135498

Token 174: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.34894973039627075
    2. 'i' → logprob: -1.223949670791626
    3. '   ' → logprob: -8.848949432373047
    4. '  ' → logprob: -9.848949432373047
    5. '    ' → logprob: -9.848949432373047
    6. ' ' → logprob: -9.848949432373047
    7. 'limit' → logprob: -9.973949432373047
    8. '100' → logprob: -10.348949432373047
    9. ' limit' → logprob: -10.598949432373047
    10. 'a' → logprob: -10.973949432373047

Token 175: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005974736995995045
    2. ' ,' → logprob: -7.7505974769592285
    3. ',i' → logprob: -9.87559700012207
    4. '   ' → logprob: -9.87559700012207
    5. '*' → logprob: -10.75059700012207
    6. ' *' → logprob: -11.25059700012207
    7. ')' → logprob: -11.50059700012207
    8. '*i' → logprob: -12.62559700012207
    9. '*,' → logprob: -13.12559700012207
    10. '+' → logprob: -13.50059700012207

Token 176: ' limit' (ID: 5967)
  Prédit: 'limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.5446609258651733
    2. ' limit' → logprob: -1.1696609258651733
    3. ' i' → logprob: -2.669661045074463
    4. 'i' → logprob: -3.294661045074463
    5. '100' → logprob: -6.669661045074463
    6. '   ' → logprob: -7.419661045074463
    7. '    ' → logprob: -8.169660568237305
    8. ' ' → logprob: -8.544660568237305
    9. '  ' → logprob: -8.669660568237305
    10. '(limit' → logprob: -9.169660568237305

Token 177: ')

' (ID: 1029)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004883738700300455
    2. ')' → logprob: -5.504883766174316
    3. ' ,' → logprob: -7.504883766174316
    4. '   ' → logprob: -9.004883766174316
    5. ',i' → logprob: -9.129883766174316
    6. ' )' → logprob: -11.754883766174316
    7. 'import' → logprob: -12.754883766174316
    8. 'def' → logprob: -12.879883766174316
    9. ',)' → logprob: -13.004883766174316
    10. ',n' → logprob: -14.254883766174316

Token 178: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3586050868034363
    2. '   ' → logprob: -1.233605146408081
    3. ' def' → logprob: -5.483604907989502
    4. '
' → logprob: -6.233604907989502
    5. '<|end|>' → logprob: -6.233604907989502
    6. ' ' → logprob: -6.983604907989502
    7. '    
' → logprob: -8.10860538482666
    8. '  ' → logprob: -8.23360538482666
    9. ')' → logprob: -9.10860538482666
    10. '    ' → logprob: -9.23360538482666

Token 179: ' mark' (ID: 1983)
  Prédit: ' mark'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mark' → logprob: -0.08922243118286133
    2. 'mark' → logprob: -2.4642224311828613
    3. ' def' → logprob: -8.839221954345703
    4. 'def' → logprob: -9.089221954345703
    5. ' ' → logprob: -12.464221954345703
    6. '_mark' → logprob: -12.464221954345703
    7. ' set' → logprob: -12.589221954345703
    8. '(mark' → logprob: -12.714221954345703
    9. ' ' → logprob: -12.964221954345703
    10. ' continue' → logprob: -13.964221954345703

Token 180: '_h' (ID: 3434)
  Prédit: '_h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_h' → logprob: -0.0002467966405674815
    2. 'higher' → logprob: -9.00024700164795
    3. '_s' → logprob: -9.12524700164795
    4. '_p' → logprob: -11.87524700164795
    5. '_power' → logprob: -13.00024700164795
    6. '_high' → logprob: -13.25024700164795
    7. '_' → logprob: -14.00024700164795
    8. ' higher' → logprob: -14.87524700164795
    9. '(h' → logprob: -15.00024700164795
    10. '_for' → logprob: -15.37524700164795

Token 181: 'igher' (ID: 6708)
  Prédit: 'igher'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'igher' → logprob: -0.0005686411168426275
    2. 'higher' → logprob: -7.875568866729736
    3. 'igh' → logprob: -8.625568389892578
    4. 'iger' → logprob: -13.000568389892578
    5. 'gher' → logprob: -13.125568389892578
    6. '_' → logprob: -13.250568389892578
    7. 'ighe' → logprob: -14.500568389892578
    8. '(' → logprob: -15.375568389892578
    9. 'i' → logprob: -15.375568389892578
    10. 'ighter' → logprob: -15.375568389892578

Token 182: '_p' (ID: 1359)
  Prédit: '_p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -2.5776860184123507e-06
    2. 'powers' → logprob: -13.25000286102295
    3. '_power' → logprob: -15.25000286102295
    4. '_' → logprob: -15.62500286102295
    5. '_s' → logprob: -16.000001907348633
    6. '```' → logprob: -16.875001907348633
    7. '_for' → logprob: -17.250001907348633
    8. 's' → logprob: -17.500001907348633
    9. '_pow' → logprob: -17.750001907348633
    10. ' powers' → logprob: -18.000001907348633

Token 183: 'owers' (ID: 23882)
  Prédit: 'owers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'owers' → logprob: -4.8828707804204896e-05
    2. 'powers' → logprob: -10.000048637390137
    3. 'ower' → logprob: -13.125048637390137
    4. 'ow' → logprob: -13.750048637390137
    5. 'ows' → logprob: -16.000049591064453
    6. '   ' → logprob: -16.625049591064453
    7. '```' → logprob: -16.625049591064453
    8. 'owels' → logprob: -16.750049591064453
    9. 'wers' → logprob: -18.125049591064453
    10. ' powers' → logprob: -18.375049591064453

Token 184: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -6.704273118884885e-07
    2. '(' → logprob: -14.625000953674316
    3. '   ' → logprob: -16.875
    4. '(
' → logprob: -17.125
    5. ' (' → logprob: -17.75
    6. '```' → logprob: -17.75
    7. '(ai' → logprob: -18.5
    8. '[a' → logprob: -18.5
    9. 'a' → logprob: -18.625
    10. ',' → logprob: -18.75

Token 185: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.314625690924004e-05
    2. ' ,' → logprob: -10.125073432922363
    3. '   ' → logprob: -11.250073432922363
    4. ',a' → logprob: -11.250073432922363
    5. 'a' → logprob: -12.250073432922363
    6. ',i' → logprob: -13.875073432922363
    7. ')' → logprob: -15.000073432922363
    8. ',
' → logprob: -15.500073432922363
    9. ' a' → logprob: -15.875073432922363
    10. ' ' → logprob: -16.375072479248047

Token 186: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.20284152030944824
    2. 'i' → logprob: -1.7028415203094482
    3. ' lambda' → logprob: -7.952841758728027
    4. 'lambda' → logprob: -8.202841758728027
    5. 'limit' → logprob: -8.452841758728027
    6. '   ' → logprob: -9.077841758728027
    7. ' limit' → logprob: -9.077841758728027
    8. ')' → logprob: -9.452841758728027
    9. ' ' → logprob: -9.827841758728027
    10. '100' → logprob: -10.202841758728027

Token 187: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002426790539175272
    2. ' ,' → logprob: -6.127426624298096
    3. '   ' → logprob: -9.127427101135254
    4. '*' → logprob: -9.877427101135254
    5. ' *' → logprob: -10.627427101135254
    6. '*,' → logprob: -11.127427101135254
    7. ',i' → logprob: -11.877427101135254
    8. ' ' → logprob: -12.252427101135254
    9. ',
' → logprob: -12.752427101135254
    10. ')' → logprob: -13.002427101135254

Token 188: ' limit' (ID: 5967)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.20610745251178741
    2. ' i' → logprob: -2.0811073780059814
    3. 'limit' → logprob: -3.7061073780059814
    4. '100' → logprob: -4.2061076164245605
    5. ')' → logprob: -4.4561076164245605
    6. ' limit' → logprob: -5.4561076164245605
    7. '2' → logprob: -6.7061076164245605
    8. ' ' → logprob: -6.7061076164245605
    9. '(i' → logprob: -7.2061076164245605
    10. '(' → logprob: -7.5811076164245605

Token 189: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011005725711584091
    2. '   ' → logprob: -4.886005878448486
    3. '):' → logprob: -6.511005878448486
    4. '):
' → logprob: -6.761005878448486
    5. ' ,' → logprob: -7.386005878448486
    6. ',i' → logprob: -9.636005401611328
    7. '       ' → logprob: -11.261005401611328
    8. ',n' → logprob: -12.261005401611328
    9. '  ' → logprob: -12.261005401611328
    10. '    ' → logprob: -12.511005401611328

Token 190: '   ' (ID: 271)
  Prédit: 'power'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'power' → logprob: -0.5937232375144958
    2. '   ' → logprob: -0.8437232375144958
    3. 'p' → logprob: -5.093723297119141
    4. 'current' → logprob: -5.968723297119141
    5. 'base' → logprob: -5.968723297119141
    6. ' power' → logprob: -6.093723297119141
    7. 'pow' → logprob: -6.468723297119141
    8. 'exp' → logprob: -7.218723297119141
    9. 'ex' → logprob: -7.593723297119141
    10. 'for' → logprob: -7.718723297119141

Token 191: ' k' (ID: 372)
  Prédit: 'power'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'power' → logprob: -0.031445905566215515
    2. 'exp' → logprob: -4.4064459800720215
    3. 'pow' → logprob: -4.9064459800720215
    4. 'current' → logprob: -5.7814459800720215
    5. '   ' → logprob: -5.9064459800720215
    6. 'p' → logprob: -6.1564459800720215
    7. 'ex' → logprob: -7.2814459800720215
    8. 'curr' → logprob: -7.6564459800720215
    9. 'base' → logprob: -7.7814459800720215
    10. 'val' → logprob: -7.7814459800720215

Token 192: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10024603456258774
    2. '=' → logprob: -2.350245952606201
    3. ',' → logprob: -11.47524642944336
    4. ' ' → logprob: -11.60024642944336
    5. '   ' → logprob: -11.72524642944336
    6. '=i' → logprob: -12.10024642944336
    7. '=k' → logprob: -13.60024642944336
    8. '  ' → logprob: -14.35024642944336
    9. 'x' → logprob: -14.47524642944336
    10. '=int' → logprob: -14.47524642944336

Token 193: ' ' (ID: 220)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.04074125364422798
    2. ' i' → logprob: -3.915741205215454
    3. '3' → logprob: -4.040741443634033
    4. '(i' → logprob: -6.915741443634033
    5. ' ' → logprob: -7.415741443634033
    6. ' (' → logprob: -7.665741443634033
    7. '1' → logprob: -9.290740966796875
    8. '2' → logprob: -9.665740966796875
    9. '  ' → logprob: -9.665740966796875
    10. '   ' → logprob: -9.790740966796875

Token 194: '3' (ID: 18)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.02127748914062977
    2. '3' → logprob: -3.89627742767334
    3. '(i' → logprob: -7.64627742767334
    4. ' i' → logprob: -9.27127742767334
    5. '2' → logprob: -9.52127742767334
    6. '1' → logprob: -10.27127742767334
    7. '(' → logprob: -11.14627742767334
    8. ' ' → logprob: -11.27127742767334
    9. '   ' → logprob: -12.02127742767334
    10. '0' → logprob: -12.39627742767334

Token 195: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.01024660188704729
    2. '   ' → logprob: -5.385246753692627
    3. '    
' → logprob: -6.260246753692627
    4. 'while' → logprob: -6.510246753692627
    5. ' 
' → logprob: -6.510246753692627
    6. '  
' → logprob: -8.135246276855469
    7. ' while' → logprob: -8.135246276855469
    8. '
' → logprob: -10.010246276855469
    9. '   
' → logprob: -10.260246276855469
    10. '	while' → logprob: -11.010246276855469

Token 196: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007436008658260107
    2. 'while' → logprob: -5.1324357986450195
    3. ' while' → logprob: -6.5074357986450195
    4. '	while' → logprob: -12.63243579864502
    5. '<|end|>' → logprob: -12.63243579864502
    6. '  ' → logprob: -13.25743579864502
    7. '```' → logprob: -13.50743579864502
    8. '       ' → logprob: -13.75743579864502
    9. ' ' → logprob: -13.75743579864502
    10. ',' → logprob: -14.50743579864502

Token 197: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.001647803233936429
    2. ' while' → logprob: -6.75164794921875
    3. '   ' → logprob: -7.75164794921875
    4. 'power' → logprob: -10.75164794921875
    5. 'pow' → logprob: -11.50164794921875
    6. 'val' → logprob: -11.87664794921875
    7. 'current' → logprob: -12.50164794921875
    8. 'value' → logprob: -12.75164794921875
    9. '
' → logprob: -14.25164794921875
    10. '	while' → logprob: -14.50164794921875

Token 198: ' pow' (ID: 9779)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.07666926085948944
    2. 'True' → logprob: -3.576669216156006
    3. ' i' → logprob: -3.576669216156006
    4. ' True' → logprob: -4.326669216156006
    5. '   ' → logprob: -5.951669216156006
    6. '(i' → logprob: -6.701669216156006
    7. ' (' → logprob: -7.826669216156006
    8. '(True' → logprob: -8.451669692993164
    9. ' ' → logprob: -9.201669692993164
    10. 'pow' → logprob: -9.826669692993164

Token 199: '_b' (ID: 1535)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.002239708323031664
    2. '(a' → logprob: -6.75223970413208
    3. '(' → logprob: -7.00223970413208
    4. 'i' → logprob: -8.877240180969238
    5. 'a' → logprob: -11.002240180969238
    6. ' (' → logprob: -14.127240180969238
    7. ',i' → logprob: -14.877240180969238
    8. ' i' → logprob: -15.002240180969238
    9. '(
' → logprob: -15.127240180969238
    10. ' ' → logprob: -15.377240180969238

Token 200: 'elow' (ID: 119405)
  Prédit: 'ase'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ase' → logprob: -0.7673967480659485
    2. '(i' → logprob: -0.8923967480659485
    3. '(a' → logprob: -2.1423966884613037
    4. 'i' → logprob: -5.267396926879883
    5. 'y' → logprob: -6.142396926879883
    6. 'a' → logprob: -7.517396926879883
    7. '```' → logprob: -9.017396926879883
    8. '(' → logprob: -9.142396926879883
    9. 'ack' → logprob: -9.642396926879883
    10. 'ased' → logprob: -9.892396926879883

Token 201: '_limit' (ID: 34361)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.15516003966331482
    2. 'limit' → logprob: -2.5301599502563477
    3. '(i' → logprob: -2.9051599502563477
    4. '_limit' → logprob: -5.155159950256348
    5. 'pow' → logprob: -7.155159950256348
    6. '(limit' → logprob: -7.655159950256348
    7. 'a' → logprob: -7.905159950256348
    8. '(' → logprob: -8.280159950256348
    9. '(pow' → logprob: -8.280159950256348
    10. ' =' → logprob: -8.405159950256348

Token 202: '(i' (ID: 3649)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.002152523025870323
    2. ' (' → logprob: -6.877152442932129
    3. '(i' → logprob: -7.127152442932129
    4. '(' → logprob: -9.127152442932129
    5. ' =' → logprob: -9.377152442932129
    6. '=' → logprob: -10.127152442932129
    7. 'pow' → logprob: -11.002152442932129
    8. ' ' → logprob: -11.752152442932129
    9. '   ' → logprob: -11.752152442932129
    10. '=a' → logprob: -12.252152442932129

Token 203: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.039843104779720306
    2. ' ,' → logprob: -3.2898430824279785
    3. ',i' → logprob: -7.4148430824279785
    4. '**' → logprob: -7.5398430824279785
    5. ',k' → logprob: -7.9148430824279785
    6. 'k' → logprob: -9.664843559265137
    7. '   ' → logprob: -10.164843559265137
    8. ' **' → logprob: -10.539843559265137
    9. '**,' → logprob: -10.789843559265137
    10. ')' → logprob: -10.789843559265137

Token 204: ' k' (ID: 372)
  Prédit: 'limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.6239467263221741
    2. 'i' → logprob: -1.8739466667175293
    3. 'a' → logprob: -1.9989466667175293
    4. 'k' → logprob: -2.3739466667175293
    5. ' limit' → logprob: -3.6239466667175293
    6. ' i' → logprob: -3.9989466667175293
    7. ' k' → logprob: -4.373946666717529
    8. ' a' → logprob: -4.623946666717529
    9. 'pow' → logprob: -5.373946666717529
    10. '100' → logprob: -5.498946666717529

Token 205: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005602853838354349
    2. ' ,' → logprob: -5.380602836608887
    3. ',a' → logprob: -8.005602836608887
    4. '   ' → logprob: -8.380602836608887
    5. 'a' → logprob: -9.130602836608887
    6. ')' → logprob: -9.255602836608887
    7. ',i' → logprob: -9.380602836608887
    8. '(a' → logprob: -10.380602836608887
    9. '(i' → logprob: -11.380602836608887
    10. '       ' → logprob: -11.630602836608887

Token 206: ' limit' (ID: 5967)
  Prédit: 'limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.11557704210281372
    2. ' limit' → logprob: -2.240576982498169
    3. 'a' → logprob: -6.115577220916748
    4. ' a' → logprob: -7.990577220916748
    5. '   ' → logprob: -8.99057674407959
    6. ')' → logprob: -10.99057674407959
    7. '    ' → logprob: -11.49057674407959
    8. '(limit' → logprob: -11.61557674407959
    9. 'lim' → logprob: -11.74057674407959
    10. ' ' → logprob: -12.17807674407959

Token 207: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03130657598376274
    2. '):
' → logprob: -3.531306505203247
    3. ')' → logprob: -6.656306743621826
    4. ',' → logprob: -9.156306266784668
    5. ' ):' → logprob: -9.281306266784668
    6. '   ' → logprob: -10.281306266784668
    7. '):

' → logprob: -11.531306266784668
    8. ':' → logprob: -11.781306266784668
    9. ' ):
' → logprob: -12.656306266784668
    10. 'a' → logprob: -12.906306266784668

Token 208: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004363182932138443
    2. ':' → logprob: -7.004363059997559
    3. ' a' → logprob: -7.254363059997559
    4. 'a' → logprob: -7.504363059997559
    5. '   ' → logprob: -8.004363059997559
    6. ',' → logprob: -8.129363059997559
    7. ':
' → logprob: -8.129363059997559
    8. '):
' → logprob: -8.629363059997559
    9. ' and' → logprob: -8.879363059997559
    10. '(a' → logprob: -9.504363059997559

Token 209: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' (adapté à ' set') → logprob: -0.09749484807252884
    2. '       ' → logprob: -2.8474948406219482
    3. ' set' → logprob: -3.5974948406219482
    4. 'pow' → logprob: -5.597495079040527
    5. '           ' → logprob: -6.722495079040527
    6. 'a' → logprob: -6.722495079040527
    7. '   ' → logprob: -7.972495079040527
    8. 'index' → logprob: -8.097495079040527
    9. 'value' → logprob: -9.222495079040527
    10. 'x' → logprob: -9.597495079040527

Token 210: '_one' (ID: 26979)
  Prédit: '_one'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_one' → logprob: -1.6240566083070007e-06
    2. 'one' → logprob: -15.000001907348633
    3. '_on' → logprob: -15.375001907348633
    4. '```' → logprob: -15.375001907348633
    5. 'One' → logprob: -15.500001907348633
    6. '_for' → logprob: -16.000001907348633
    7. '_' → logprob: -16.125001907348633
    8. '_ONE' → logprob: -16.625001907348633
    9. '_once' → logprob: -16.625001907348633
    10. '1' → logprob: -16.750001907348633

Token 211: '_for' (ID: 11903)
  Prédit: '_for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_for' → logprob: -3.7697225252486533e-06
    2. 'for' → logprob: -12.750003814697266
    3. '_' → logprob: -15.375003814697266
    4. 'For' → logprob: -15.500003814697266
    5. '```' → logprob: -15.500003814697266
    6. ' for' → logprob: -16.375003814697266
    7. '_FOR' → logprob: -16.875003814697266
    8. ' _' → logprob: -18.125003814697266
    9. '[' → logprob: -18.250003814697266
    10. '(' → logprob: -18.875003814697266

Token 212: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.12948855757713318
    2. 'index' → logprob: -2.129488468170166
    3. 'Index' → logprob: -6.004488468170166
    4. 'a' → logprob: -10.004488945007324
    5. 'dex' → logprob: -10.504488945007324
    6. '(a' → logprob: -12.879488945007324
    7. 'nd' → logprob: -13.504488945007324
    8. 'd' → logprob: -13.629488945007324
    9. 'INDEX' → logprob: -13.629488945007324
    10. 'ind' → logprob: -13.754488945007324

Token 213: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.00011021859245374799
    2. '<|end|>' → logprob: -9.750110626220703
    3. 'a' → logprob: -10.500110626220703
    4. '(' → logprob: -10.750110626220703
    5. '```' → logprob: -13.875110626220703
    6. '(
' → logprob: -14.750110626220703
    7. ' a' → logprob: -14.875110626220703
    8. '(ai' → logprob: -15.375110626220703
    9. ' (' → logprob: -15.375110626220703
    10. '[a' → logprob: -16.375110626220703

Token 214: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001884015218820423
    2. ' ,' → logprob: -9.125188827514648
    3. ',a' → logprob: -10.000188827514648
    4. 'a' → logprob: -11.250188827514648
    5. ',
' → logprob: -11.625188827514648
    6. '(a' → logprob: -12.375188827514648
    7. '(' → logprob: -13.125188827514648
    8. ',i' → logprob: -13.250188827514648
    9. ' a' → logprob: -14.125188827514648
    10. '```' → logprob: -14.375188827514648

Token 215: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3646988570690155
    2. ' i' → logprob: -1.364698886871338
    3. 'a' → logprob: -3.239698886871338
    4. ' a' → logprob: -5.114698886871338
    5. 'pow' → logprob: -5.989698886871338
    6. '   ' → logprob: -7.739698886871338
    7. '[' → logprob: -7.864698886871338
    8. ' [' → logprob: -7.864698886871338
    9. 'int' → logprob: -8.23969841003418
    10. ' pow' → logprob: -8.61469841003418

Token 216: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.048456087708473206
    2. ' **' → logprob: -3.1734561920166016
    3. 'pow' → logprob: -5.548456192016602
    4. ' pow' → logprob: -7.298456192016602
    5. ' k' → logprob: -8.423456192016602
    6. '*k' → logprob: -8.423456192016602
    7. 'k' → logprob: -9.048456192016602
    8. '*' → logprob: -9.548456192016602
    9. '```' → logprob: -9.673456192016602
    10. ' ' → logprob: -9.923456192016602

Token 217: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -3.128163257315464e-07
    2. ' k' → logprob: -15.875
    3. '(' → logprob: -16.25
    4. ' ' → logprob: -18.375
    5. '   ' → logprob: -18.625
    6. '  ' → logprob: -19.75
    7. '(k' → logprob: -20.25
    8. '```' → logprob: -20.25
    9. '
' → logprob: -20.5
    10. '	k' → logprob: -21.0

Token 218: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.38702014088630676
    2. ')' → logprob: -1.1370201110839844
    3. ')
' → logprob: -9.512020111083984
    4. ')

' → logprob: -10.762020111083984
    5. '       ' → logprob: -11.012020111083984
    6. ' )
' → logprob: -11.012020111083984
    7. '   ' → logprob: -12.387020111083984
    8. ',' → logprob: -12.387020111083984
    9. ')`
' → logprob: -12.387020111083984
    10. ' )' → logprob: -12.512020111083984

Token 219: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001431905198842287
    2. 'k' → logprob: -6.626431941986084
    3. ' k' → logprob: -10.376431465148926
    4. '   ' → logprob: -10.751431465148926
    5. '        
' → logprob: -11.501431465148926
    6. '
' → logprob: -11.501431465148926
    7. '<|end|>' → logprob: -11.626431465148926
    8. '	k' → logprob: -12.001431465148926
    9. '	' → logprob: -12.626431465148926
    10. ',' → logprob: -12.626431465148926

Token 220: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' (adapté à ' k') → logprob: -9.372294698550832e-06
    2. '       ' → logprob: -11.875009536743164
    3. '   ' → logprob: -13.500009536743164
    4. ' k' → logprob: -14.000009536743164
    5. '	k' → logprob: -16.125009536743164
    6. '           ' → logprob: -16.750009536743164
    7. '
' → logprob: -19.875009536743164
    8. '  ' → logprob: -19.875009536743164
    9. ' ' → logprob: -20.000009536743164
    10. '```' → logprob: -20.625009536743164

Token 221: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.003357251174747944
    2. ' +=' → logprob: -5.753357410430908
    3. '=' → logprob: -8.87835693359375
    4. '+' → logprob: -10.12835693359375
    5. ']+=' → logprob: -16.75335693359375
    6. '+="' → logprob: -17.12835693359375
    7. '+='' → logprob: -17.25335693359375
    8. ' =' → logprob: -18.62835693359375
    9. 'plus' → logprob: -18.62835693359375
    10. '+
' → logprob: -18.87835693359375

Token 222: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.250004768371582
    3. '   ' → logprob: -18.7500057220459
    4. '```' → logprob: -19.3750057220459
    5. '
' → logprob: -19.8750057220459
    6. '  ' → logprob: -19.8750057220459
    7. '<|end|>' → logprob: -20.2500057220459
    8. '2' → logprob: -20.3750057220459
    9. '１' → logprob: -21.6250057220459
    10. '۱' → logprob: -22.0000057220459

Token 223: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.75
    3. '2' → logprob: -20.125
    4. '```' → logprob: -20.5
    5. '   ' → logprob: -21.25
    6. '１' → logprob: -21.25
    7. '
' → logprob: -21.75
    8. '  ' → logprob: -22.0
    9. '۱' → logprob: -22.75
    10. '१' → logprob: -23.0625

Token 224: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.01280922256410122
    2. ' def' → logprob: -5.2628092765808105
    3. '<|end|>' → logprob: -5.6378092765808105
    4. '
' → logprob: -6.8878092765808105
    5. ' 
' → logprob: -7.1378092765808105
    6. ' ' → logprob: -7.3878092765808105
    7. ')' → logprob: -7.7628092765808105
    8. '[' → logprob: -8.012808799743652
    9. '   ' → logprob: -9.137808799743652
    10. '(' → logprob: -9.387808799743652

Token 225: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00017028623551595956
    2. ' def' → logprob: -8.750170707702637
    3. ')' → logprob: -12.625170707702637
    4. '
' → logprob: -13.000170707702637
    5. ' 
' → logprob: -13.375170707702637
    6. '  
' → logprob: -13.625170707702637
    7. '   ' → logprob: -13.750170707702637
    8. '    
' → logprob: -14.375170707702637
    9. '```' → logprob: -14.750170707702637
    10. 'd' → logprob: -15.000170707702637

Token 226: ' pow' (ID: 9779)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.04879220202565193
    2. ' pow' → logprob: -3.0487921237945557
    3. 'def' → logprob: -9.048791885375977
    4. 'is' → logprob: -10.423791885375977
    5. ' is' → logprob: -11.173791885375977
    6. 'get' → logprob: -11.923791885375977
    7. ' def' → logprob: -12.173791885375977
    8. 'set' → logprob: -12.673791885375977
    9. ' ' → logprob: -12.861291885375977
    10. '   ' → logprob: -13.423791885375977

Token 227: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -2.4153549020411447e-05
    2. '_' → logprob: -11.00002384185791
    3. '(' → logprob: -12.62502384185791
    4. '(b' → logprob: -13.87502384185791
    5. '_a' → logprob: -13.87502384185791
    6. ' _' → logprob: -14.37502384185791
    7. '(_' → logprob: -14.62502384185791
    8. '<|end|>' → logprob: -15.25002384185791
    9. 'b' → logprob: -15.62502384185791
    10. '_ab' → logprob: -16.000024795532227

Token 228: 'elow' (ID: 119405)
  Prédit: 'elow'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elow' → logprob: -3.173704271830502e-06
    2. 'el' → logprob: -13.50000286102295
    3. 'below' → logprob: -14.00000286102295
    4. '```' → logprob: -15.25000286102295
    5. 'e' → logprob: -15.50000286102295
    6. 'elo' → logprob: -15.62500286102295
    7. 'ellow' → logprob: -15.75000286102295
    8. 'elif' → logprob: -16.125003814697266
    9. 'else' → logprob: -18.375003814697266
    10. 'Below' → logprob: -18.500003814697266

Token 229: '_limit' (ID: 34361)
  Prédit: '_limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limit' → logprob: -0.00020497082732617855
    2. 'limit' → logprob: -8.500205039978027
    3. '(limit' → logprob: -14.125205039978027
    4. '(i' → logprob: -14.750205039978027
    5. '_limits' → logprob: -15.375205039978027
    6. ' limit' → logprob: -16.37520408630371
    7. '_LIMIT' → logprob: -16.87520408630371
    8. 'Limit' → logprob: -17.75020408630371
    9. '_lim' → logprob: -18.00020408630371
    10. '```' → logprob: -18.25020408630371

Token 230: '(i' (ID: 3649)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.6544213891029358
    2. '(i' → logprob: -0.9044213891029358
    3. '(base' → logprob: -2.654421329498291
    4. '(' → logprob: -5.654421329498291
    5. '(b' → logprob: -6.529421329498291
    6. '(x' → logprob: -9.02942180633545
    7. '(value' → logprob: -10.52942180633545
    8. '(n' → logprob: -11.27942180633545
    9. '(num' → logprob: -12.02942180633545
    10. ' (' → logprob: -12.52942180633545

Token 231: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005945033393800259
    2. ' ,' → logprob: -5.130945205688477
    3. ',k' → logprob: -11.880945205688477
    4. ',i' → logprob: -12.130945205688477
    5. ',int' → logprob: -14.005945205688477
    6. '   ' → logprob: -14.130945205688477
    7. ',n' → logprob: -14.755945205688477
    8. '_,' → logprob: -15.255945205688477
    9. ',a' → logprob: -15.505945205688477
    10. ' ' → logprob: -15.630945205688477

Token 232: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.00042983482126146555
    2. ' k' → logprob: -7.875429630279541
    3. '3' → logprob: -10.3754301071167
    4. ' ' → logprob: -11.8754301071167
    5. 'pow' → logprob: -13.0004301071167
    6. 'i' → logprob: -13.1254301071167
    7. 'def' → logprob: -13.2504301071167
    8. '2' → logprob: -13.6254301071167
    9. '   ' → logprob: -13.7504301071167
    10. '```' → logprob: -14.2504301071167

Token 233: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013300024438649416
    2. ' ,' → logprob: -6.6263298988342285
    3. ',i' → logprob: -12.876330375671387
    4. ',int' → logprob: -14.626330375671387
    5. '   ' → logprob: -14.751330375671387
    6. ',a' → logprob: -16.50132942199707
    7. ',n' → logprob: -16.50132942199707
    8. '_,' → logprob: -16.62632942199707
    9. 'int' → logprob: -17.12632942199707
    10. ',size' → logprob: -17.25132942199707

Token 234: ' limit' (ID: 5967)
  Prédit: 'limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.012520721182227135
    2. ' limit' → logprob: -4.387520790100098
    3. 'lim' → logprob: -12.387520790100098
    4. '(limit' → logprob: -13.012520790100098
    5. 'l' → logprob: -13.637520790100098
    6. '   ' → logprob: -14.012520790100098
    7. ' ' → logprob: -14.387520790100098
    8. '100' → logprob: -15.012520790100098
    9. 'lambda' → logprob: -15.137520790100098
    10. 'a' → logprob: -15.137520790100098

Token 235: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.007820967584848404
    2. '):
' → logprob: -5.132821083068848
    3. ',' → logprob: -6.382821083068848
    4. ')' → logprob: -9.132821083068848
    5. ' ):' → logprob: -10.132821083068848
    6. '):
' → logprob: -10.882821083068848
    7. ':' → logprob: -11.007821083068848
    8. '   ' → logprob: -11.257821083068848
    9. '):

' → logprob: -14.007821083068848
    10. '=' → logprob: -14.132821083068848

Token 236: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3285791277885437
    2. 'return' → logprob: -1.3285791873931885
    3. ' return' → logprob: -4.203578948974609
    4. 'i' → logprob: -9.45357894897461
    5. '	return' → logprob: -9.45357894897461
    6. 'if' → logprob: -9.95357894897461
    7. ' i' → logprob: -11.07857894897461
    8. 'def' → logprob: -12.20357894897461
    9. 'try' → logprob: -12.32857894897461
    10. '```' → logprob: -12.32857894897461

Token 237: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.023159420117735863
    2. '   ' → logprob: -4.148159503936768
    3. 'result' → logprob: -5.523159503936768
    4. 'try' → logprob: -6.523159503936768
    5. ' return' → logprob: -7.023159503936768
    6. 'i' → logprob: -7.773159503936768
    7. 'res' → logprob: -8.89815902709961
    8. 'if' → logprob: -9.64815902709961
    9. 'def' → logprob: -9.89815902709961
    10. 'value' → logprob: -10.64815902709961

Token 238: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.06228102743625641
    2. ' i' → logprob: -2.8122811317443848
    3. '   ' → logprob: -9.187280654907227
    4. '(i' → logprob: -9.312280654907227
    5. 'pow' → logprob: -9.312280654907227
    6. ' (' → logprob: -10.812280654907227
    7. ' pow' → logprob: -12.062280654907227
    8. ' ' → logprob: -13.062280654907227
    9. '	i' → logprob: -14.062280654907227
    10. '  ' → logprob: -14.062280654907227

Token 239: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.03804929554462433
    2. ' **' → logprob: -3.2880492210388184
    3. '*' → logprob: -12.288049697875977
    4. ' ' → logprob: -13.663049697875977
    5. '```' → logprob: -14.538049697875977
    6. ' i' → logprob: -14.788049697875977
    7. '*i' → logprob: -14.913049697875977
    8. ' *' → logprob: -15.538049697875977
    9. '**
' → logprob: -16.288049697875977
    10. ' pow' → logprob: -16.663049697875977

Token 240: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -4.842555426876061e-06
    2. ' k' → logprob: -12.250004768371582
    3. ' ' → logprob: -17.2500057220459
    4. '```' → logprob: -17.7500057220459
    5. '2' → logprob: -18.7500057220459
    6. '   ' → logprob: -18.8750057220459
    7. '
' → logprob: -19.0000057220459
    8. '  ' → logprob: -19.1250057220459
    9. '(' → logprob: -19.7500057220459
    10. '	k' → logprob: -20.3750057220459

Token 241: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.17997197806835175
    2. '<=' → logprob: -1.8049719333648682
    3. ' <' → logprob: -9.054971694946289
    4. '<' → logprob: -9.179971694946289
    5. ' ' → logprob: -12.179971694946289
    6. ')<=' → logprob: -15.054971694946289
    7. '```' → logprob: -15.304971694946289
    8. ' ≤' → logprob: -15.304971694946289
    9. '[' → logprob: -15.554971694946289
    10. '<|end|>' → logprob: -15.804971694946289

Token 242: ' limit' (ID: 5967)
  Prédit: 'limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.006715370807796717
    2. ' limit' → logprob: -5.006715297698975
    3. '(limit' → logprob: -18.756715774536133
    4. 'lim' → logprob: -19.006715774536133
    5. '   ' → logprob: -19.881715774536133
    6. ' ' → logprob: -20.506715774536133
    7. '_limit' → logprob: -20.631715774536133
    8. '.limit' → logprob: -21.381715774536133
    9. '    ' → logprob: -21.756715774536133
    10. 'int' → logprob: -21.756715774536133

Token 243: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 244: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.05100817605853081
    2. 'print' → logprob: -3.8010082244873047
    3. 'a' → logprob: -4.926008224487305
    4. 'get' → logprob: -5.676008224487305
    5. 'if' → logprob: -5.801008224487305
    6. 'for' → logprob: -5.801008224487305
    7. '#' → logprob: -6.051008224487305
    8. '<|end|>' → logprob: -6.051008224487305
    9. 'index' → logprob: -6.176008224487305
    10. 'input' → logprob: -7.551008224487305

Token 245: ' find' (ID: 1646)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0005543439765460789
    2. 'def' → logprob: -7.87555456161499
    3. ' main' → logprob: -8.875554084777832
    4. 'get' → logprob: -10.875554084777832
    5. '_main' → logprob: -12.250554084777832
    6. '__' → logprob: -12.625554084777832
    7. 'solve' → logprob: -12.875554084777832
    8. 'process' → logprob: -13.250554084777832
    9. 'if' → logprob: -13.875554084777832
    10. '
' → logprob: -14.500554084777832

Token 246: '_and' (ID: 18645)
  Prédit: '_first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_first' → logprob: -1.5708050727844238
    2. '_unique' → logprob: -1.5708050727844238
    3. '_max' → logprob: -2.320805072784424
    4. '_next' → logprob: -2.320805072784424
    5. '_' → logprob: -2.695805072784424
    6. '_prime' → logprob: -2.695805072784424
    7. '_high' → logprob: -3.195805072784424
    8. '_power' → logprob: -3.445805072784424
    9. '_small' → logprob: -3.945805072784424
    10. '_pr' → logprob: -4.070805072784424

Token 247: '_print' (ID: 31509)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6042969226837158
    2. 'mark' → logprob: -1.1042969226837158
    3. 'count' → logprob: -2.729296922683716
    4. 'output' → logprob: -4.104296684265137
    5. 'process' → logprob: -4.229296684265137
    6. 'update' → logprob: -5.229296684265137
    7. 'remove' → logprob: -5.354296684265137
    8. 'replace' → logprob: -5.479296684265137
    9. 'set' → logprob: -6.229296684265137
    10. 'sum' → logprob: -6.854296684265137

Token 248: '_max' (ID: 13731)
  Prédit: '_p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -1.6634372472763062
    2. '()' → logprob: -2.1634373664855957
    3. '_numbers' → logprob: -2.1634373664855957
    4. '_unique' → logprob: -2.4134373664855957
    5. '_non' → logprob: -2.5384373664855957
    6. '_max' → logprob: -2.9134373664855957
    7. '_special' → logprob: -3.0384373664855957
    8. '_power' → logprob: -3.4134373664855957
    9. '_' → logprob: -3.4134373664855957
    10. '_pr' → logprob: -3.6634373664855957

Token 249: '_mark' (ID: 42901)
  Prédit: '_power'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_power' → logprob: -1.0673528909683228
    2. '()' → logprob: -1.4423528909683228
    3. '_value' → logprob: -1.4423528909683228
    4. '_ex' → logprob: -3.192352771759033
    5. '_div' → logprob: -3.692352771759033
    6. '_subset' → logprob: -3.817352771759033
    7. '_unique' → logprob: -4.192352771759033
    8. '_element' → logprob: -4.442352771759033
    9. '_non' → logprob: -4.567352771759033
    10. '_index' → logprob: -4.567352771759033

Token 250: 'ed' (ID: 295)
  Prédit: 'ed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -1.1041145626222715e-05
    2. '_index' → logprob: -12.625011444091797
    3. 'def' → logprob: -13.375011444091797
    4. '(a' → logprob: -13.375011444091797
    5. 's' → logprob: -13.875011444091797
    6. 'eded' → logprob: -13.875011444091797
    7. '()
' → logprob: -14.750011444091797
    8. '_indices' → logprob: -14.750011444091797
    9. '()' → logprob: -15.125011444091797
    10. '():
' → logprob: -15.375011444091797

Token 251: '(a' (ID: 6271)
  Prédit: '_index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.5783523321151733
    2. '_value' → logprob: -1.9533523321151733
    3. '():' → logprob: -1.9533523321151733
    4. '(a' → logprob: -2.953352451324463
    5. 'ed' → logprob: -3.453352451324463
    6. '_indices' → logprob: -3.453352451324463
    7. '_number' → logprob: -3.953352451324463
    8. '():
' → logprob: -4.578352451324463
    9. '_count' → logprob: -5.828352451324463
    10. '()' → logprob: -6.578352451324463

Token 252: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.23886875808238983
    2. '):
' → logprob: -1.6138687133789062
    3. ',' → logprob: -4.363868713378906
    4. ' ):' → logprob: -8.113868713378906
    5. '):
' → logprob: -9.238868713378906
    6. '   ' → logprob: -9.613868713378906
    7. ' ):
' → logprob: -9.988868713378906
    8. ')' → logprob: -10.238868713378906
    9. '):

' → logprob: -10.738868713378906
    10. ' ,' → logprob: -11.738868713378906

Token 253: ' x' (ID: 1215)
  Prédit: 'limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.08164787292480469
    2. ' limit' → logprob: -3.0816478729248047
    3. 'len' → logprob: -3.5816478729248047
    4. ' len' → logprob: -6.081647872924805
    5. 'size' → logprob: -6.831647872924805
    6. ')' → logprob: -8.456647872924805
    7. 'max' → logprob: -8.456647872924805
    8. ' size' → logprob: -8.706647872924805
    9. 'start' → logprob: -8.956647872924805
    10. 'n' → logprob: -9.081647872924805

Token 254: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.7089093327522278
    2. '):' → logprob: -0.7089093327522278
    3. ',' → logprob: -4.208909511566162
    4. '):
' → logprob: -8.833909034729004
    5. ')' → logprob: -8.958909034729004
    6. '   ' → logprob: -9.208909034729004
    7. ' ):' → logprob: -9.333909034729004
    8. '):

' → logprob: -9.458909034729004
    9. ' ):
' → logprob: -10.208909034729004
    10. 'x' → logprob: -10.333909034729004

Token 255: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006287694908678532
    2. 'max' → logprob: -5.131287574768066
    3. ' max' → logprob: -8.881287574768066
    4. '```' → logprob: -9.006287574768066
    5. 'for' → logprob: -10.006287574768066
    6. 'def' → logprob: -11.006287574768066
    7. ' for' → logprob: -11.631287574768066
    8. '
' → logprob: -12.131287574768066
    9. '    
' → logprob: -12.131287574768066
    10. '_max' → logprob: -12.881287574768066

Token 256: ' for' (ID: 395)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.5834517478942871
    2. 'for' (adapté à ' for') → logprob: -0.8334517478942871
    3. 'print' → logprob: -5.333451747894287
    4. 'result' → logprob: -7.083451747894287
    5. 'res' → logprob: -7.333451747894287
    6. '   ' → logprob: -7.583451747894287
    7. 'ans' → logprob: -7.833451747894287
    8. 'best' → logprob: -9.458452224731445
    9. 'maximum' → logprob: -9.958452224731445
    10. 'mx' → logprob: -10.458452224731445

Token 257: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.017507871612906456
    2. 'val' → logprob: -5.267508029937744
    3. 'idx' → logprob: -5.392508029937744
    4. 'num' → logprob: -5.892508029937744
    5. 'value' → logprob: -6.517508029937744
    6. 'x' → logprob: -6.642508029937744
    7. ' i' → logprob: -6.642508029937744
    8. 'v' → logprob: -8.142507553100586
    9. 'index' → logprob: -9.017507553100586
    10. 'j' → logprob: -9.017507553100586

Token 258: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.026537146419286728
    2. 'in' → logprob: -3.6515371799468994
    3. ',' → logprob: -9.27653694152832
    4. 'x' → logprob: -9.40153694152832
    5. '(x' → logprob: -10.65153694152832
    6. '   ' → logprob: -12.15153694152832
    7. 'range' → logprob: -12.40153694152832
    8. ' ' → logprob: -12.40153694152832
    9. 'from' → logprob: -12.52653694152832
    10. '```' → logprob: -12.65153694152832

Token 259: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0009178895270451903
    2. 're' → logprob: -7.750917911529541
    3. ' range' → logprob: -7.875917911529541
    4. 'x' → logprob: -9.750917434692383
    5. 'reverse' → logprob: -10.125917434692383
    6. ' reversed' → logprob: -11.875917434692383
    7. 'a' → logprob: -14.375917434692383
    8. 'sorted' → logprob: -14.625917434692383
    9. '   ' → logprob: -15.375917434692383
    10. 'len' → logprob: -15.500917434692383

Token 260: '(x' (ID: 4061)
  Prédit: '(len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.18416418135166168
    2. '(x' → logprob: -1.8091641664505005
    3. '(' → logprob: -6.184164047241211
    4. 'len' → logprob: -6.434164047241211
    5. 'x' → logprob: -7.309164047241211
    6. ' len' → logprob: -10.434164047241211
    7. '(-' → logprob: -11.684164047241211
    8. ' (' → logprob: -11.934164047241211
    9. ' x' → logprob: -12.059164047241211
    10. '(a' → logprob: -12.684164047241211

Token 261: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06362324208021164
    2. '-' → logprob: -3.0636231899261475
    3. ' -' → logprob: -4.313623428344727
    4. '+' → logprob: -7.563623428344727
    5. ' ,' → logprob: -7.688623428344727
    6. '   ' → logprob: -8.188623428344727
    7. ' +' → logprob: -8.813623428344727
    8. '[' → logprob: -10.438623428344727
    9. ' ' → logprob: -11.313623428344727
    10. '0' → logprob: -11.313623428344727

Token 262: ' ' (ID: 220)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.4863879978656769
    2. '0' → logprob: -1.6113879680633545
    3. ' -' → logprob: -2.1113879680633545
    4. 'len' → logprob: -2.9863879680633545
    5. ' ' → logprob: -4.736388206481934
    6. ' len' → logprob: -5.611388206481934
    7. '   ' → logprob: -7.111388206481934
    8. '1' → logprob: -8.236388206481934
    9. '  ' → logprob: -9.111388206481934
    10. '    ' → logprob: -9.236388206481934

Token 263: '0' (ID: 15)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.13745178282260895
    2. '0' → logprob: -2.6374518871307373
    3. '-' → logprob: -3.1374518871307373
    4. '1' → logprob: -4.762451648712158
    5. '100' → logprob: -5.887451648712158
    6. ' len' → logprob: -7.387451648712158
    7. '2' → logprob: -7.387451648712158
    8. '999' → logprob: -7.637451648712158
    9. '(len' → logprob: -9.012452125549316
    10. ' -' → logprob: -9.762452125549316

Token 264: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.13009099662303925
    2. '-' → logprob: -2.1300909519195557
    3. ' -' → logprob: -6.130091190338135
    4. '   ' → logprob: -7.380091190338135
    5. ',-' → logprob: -8.130090713500977
    6. ' ,' → logprob: -9.880090713500977
    7. '  ' → logprob: -12.755090713500977
    8. '```' → logprob: -13.005090713500977
    9. '-,' → logprob: -13.505090713500977
    10. '	' → logprob: -13.630090713500977

Token 265: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.049923818558454514
    2. ' -' → logprob: -3.049923896789551
    3. '  ' → logprob: -7.049923896789551
    4. '   ' → logprob: -7.799923896789551
    5. ' ' → logprob: -10.04992389678955
    6. '```' → logprob: -12.42492389678955
    7. '    ' → logprob: -13.04992389678955
    8. ',-' → logprob: -13.42492389678955
    9. '1' → logprob: -13.67492389678955
    10. '       ' → logprob: -14.17492389678955

Token 266: '1' (ID: 16)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0019261365523561835
    2. ' -' → logprob: -6.376925945281982
    3. '1' → logprob: -8.50192642211914
    4. '   ' → logprob: -11.62692642211914
    5. '):
' → logprob: -11.87692642211914
    6. ')' → logprob: -13.25192642211914
    7. ' ' → logprob: -13.62692642211914
    8. '  ' → logprob: -14.25192642211914
    9. '```' → logprob: -15.12692642211914
    10. '):' → logprob: -15.37692642211914

Token 267: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.0400097593665123
    2. '):' → logprob: -3.2900097370147705
    3. '-' → logprob: -6.66500997543335
    4. '   ' → logprob: -7.91500997543335
    5. '):
' → logprob: -8.790009498596191
    6. ' -' → logprob: -9.665009498596191
    7. ' ):
' → logprob: -10.290009498596191
    8. ',' → logprob: -10.540009498596191
    9. ',-' → logprob: -10.540009498596191
    10. '       ' → logprob: -11.540009498596191

Token 268: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010394557379186153
    2. ':' → logprob: -4.88539457321167
    3. '<|end|>' → logprob: -6.51039457321167
    4. '   ' → logprob: -7.51039457321167
    5. ' if' → logprob: -8.385394096374512
    6. ':
' → logprob: -8.510394096374512
    7. ',' → logprob: -8.885394096374512
    8. '):
' → logprob: -10.385394096374512
    9. '<|end|>' → logprob: -11.010394096374512
    10. '      ' → logprob: -11.135394096374512

Token 269: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0740923210978508
    2. '       ' → logprob: -3.074092388153076
    3. ' if' → logprob: -3.699092388153076
    4. '   ' → logprob: -7.824092388153076
    5. '	if' → logprob: -10.824091911315918
    6. '
' → logprob: -11.574091911315918
    7. '           ' → logprob: -13.449091911315918
    8. ' ' → logprob: -13.699091911315918
    9. '        
' → logprob: -14.324091911315918
    10. '```' → logprob: -14.324091911315918

Token 270: ' is' (ID: 382)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.061970487236976624
    2. ' a' → logprob: -2.8119704723358154
    3. '   ' → logprob: -13.186970710754395
    4. '	a' → logprob: -14.811970710754395
    5. '(a' → logprob: -14.811970710754395
    6. '[a' → logprob: -15.311970710754395
    7. '    ' → logprob: -16.936969757080078
    8. ' ' → logprob: -17.936969757080078
    9. '_a' → logprob: -18.311969757080078
    10. '>a' → logprob: -18.436969757080078

Token 271: '_mark' (ID: 42901)
  Prédit: '_mark'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mark' → logprob: -0.3369929790496826
    2. 'marked' → logprob: -1.9619929790496826
    3. '_one' → logprob: -3.0869929790496826
    4. '[a' → logprob: -3.4619929790496826
    5. '(a' → logprob: -3.5869929790496826
    6. ' a' → logprob: -4.711993217468262
    7. 'Marked' → logprob: -5.336993217468262
    8. '   ' → logprob: -5.461993217468262
    9. '_' → logprob: -5.461993217468262
    10. 'a' → logprob: -5.711993217468262

Token 272: 'ed' (ID: 295)
  Prédit: 'ed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -3.054500666621607e-06
    2. '[' → logprob: -13.62500286102295
    3. 'edin' → logprob: -14.75000286102295
    4. 'eded' → logprob: -15.37500286102295
    5. '_ed' → logprob: -15.50000286102295
    6. 'edf' → logprob: -15.75000286102295
    7. 'ED' → logprob: -15.75000286102295
    8. 'edd' → logprob: -15.87500286102295
    9. 'edas' → logprob: -16.125003814697266
    10. 'e' → logprob: -16.125003814697266

Token 273: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0011149736819788814
    2. '[a' → logprob: -7.126114845275879
    3. 'a' → logprob: -8.251114845275879
    4. ' (' → logprob: -10.626114845275879
    5. '(i' → logprob: -12.001114845275879
    6. '```' → logprob: -12.126114845275879
    7. '(' → logprob: -12.126114845275879
    8. '   ' → logprob: -12.501114845275879
    9. ' a' → logprob: -13.251114845275879
    10. '[' → logprob: -14.001114845275879

Token 274: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.019209761172533035
    2. '[i' → logprob: -4.769209861755371
    3. ' ,' → logprob: -5.269209861755371
    4. ',i' → logprob: -5.394209861755371
    5. '[' → logprob: -8.019209861755371
    6. ')' → logprob: -8.769209861755371
    7. 'a' → logprob: -9.269209861755371
    8. '   ' → logprob: -9.894209861755371
    9. '(i' → logprob: -10.394209861755371
    10. ',
' → logprob: -10.644209861755371

Token 275: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0002762326330412179
    2. ' i' → logprob: -8.250276565551758
    3. ')' → logprob: -11.500276565551758
    4. '[i' → logprob: -12.750276565551758
    5. ')i' → logprob: -14.125276565551758
    6. '   ' → logprob: -14.250276565551758
    7. '[' → logprob: -15.750276565551758
    8. '
' → logprob: -15.875276565551758
    9. '(i' → logprob: -16.625276565551758
    10. '       ' → logprob: -16.750276565551758

Token 276: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.10024581849575043
    2. '):
' → logprob: -2.350245714187622
    3. ')' → logprob: -10.725245475769043
    4. '):
' → logprob: -12.600245475769043
    5. '   ' → logprob: -12.725245475769043
    6. ' ):' → logprob: -12.725245475769043
    7. '):

' → logprob: -13.350245475769043
    8. ':' → logprob: -13.475245475769043
    9. '[]):' → logprob: -13.725245475769043
    10. '       ' → logprob: -13.725245475769043

Token 277: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00010282796574756503
    2. ' return' → logprob: -10.375102996826172
    3. '```' → logprob: -11.000102996826172
    4. 'print' → logprob: -11.750102996826172
    5. ' print' → logprob: -11.875102996826172
    6. '          ' → logprob: -11.875102996826172
    7. '            
' → logprob: -11.875102996826172
    8. '       ' → logprob: -12.000102996826172
    9. '               ' → logprob: -13.000102996826172
    10. '   ' → logprob: -13.000102996826172

Token 278: ' print' (ID: 2123)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.31991004943847656
    2. ' print' → logprob: -1.8199100494384766
    3. 'print' (adapté à ' print') → logprob: -2.1949100494384766
    4. '               ' → logprob: -9.069910049438477
    5. '
' → logprob: -9.319910049438477
    6. ' return' → logprob: -9.444910049438477
    7. '```' → logprob: -9.944910049438477
    8. ' ' → logprob: -11.819910049438477
    9. '       ' → logprob: -11.944910049438477
    10. 'return' → logprob: -12.069910049438477

Token 279: '_value' (ID: 6734)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -2.451116051815916e-05
    2. '(' → logprob: -10.625024795532227
    3. ' (' → logprob: -15.875024795532227
    4. '   ' → logprob: -18.125024795532227
    5. 'i' → logprob: -18.625024795532227
    6. '(
' → logprob: -18.750024795532227
    7. '```' → logprob: -19.250024795532227
    8. '()' → logprob: -20.125024795532227
    9. ' i' → logprob: -20.875024795532227
    10. '       ' → logprob: -21.000024795532227

Token 280: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.011170309036970139
    2. '(' → logprob: -5.136170387268066
    3. '(a' → logprob: -5.261170387268066
    4. 'a' → logprob: -11.386170387268066
    5. '   ' → logprob: -11.511170387268066
    6. ' (' → logprob: -12.386170387268066
    7. 's' → logprob: -13.136170387268066
    8. '(x' → logprob: -13.261170387268066
    9. '(
' → logprob: -13.511170387268066
    10. '=' → logprob: -13.761170387268066

Token 281: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009762344881892204
    2. ')
' → logprob: -4.634762287139893
    3. ')
' → logprob: -13.50976276397705
    4. ' )' → logprob: -13.63476276397705
    5. '           ' → logprob: -14.00976276397705
    6. '       ' → logprob: -14.38476276397705
    7. '))' → logprob: -14.50976276397705
    8. '   ' → logprob: -14.88476276397705
    9. ')return' → logprob: -15.00976276397705
    10. ')

' → logprob: -15.13476276397705

Token 282: '           ' (ID: 352)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.03268612176179886
    2. '<|end|>' → logprob: -4.282686233520508
    3. '_' → logprob: -5.157686233520508
    4. '   ' → logprob: -5.282686233520508
    5. '[' → logprob: -6.782686233520508
    6. '    
' → logprob: -6.907686233520508
    7. '
' → logprob: -7.032686233520508
    8. ' def' → logprob: -7.282686233520508
    9. '(' → logprob: -7.407686233520508
    10. ' ' → logprob: -7.782686233520508

Token 283: ' break' (ID: 2338)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -3.404745439183898e-05
    2. 'def' → logprob: -11.00003433227539
    3. '<|end|>' → logprob: -11.50003433227539
    4. 'return' → logprob: -13.00003433227539
    5. 'break' (adapté à ' break') → logprob: -13.75003433227539
    6. '		' → logprob: -14.12503433227539
    7. '```' → logprob: -14.25003433227539
    8. ' break' → logprob: -14.50003433227539
    9. ' return' → logprob: -15.00003433227539
    10. ',' → logprob: -15.00003433227539

Token 284: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.020722193643450737
    2. '
' → logprob: -3.8957221508026123
    3. '

' → logprob: -10.020722389221191
    4. '    
' → logprob: -10.145722389221191
    5. '<|end|>' → logprob: -10.145722389221191
    6. ' def' → logprob: -11.145722389221191
    7. '  
' → logprob: -11.520722389221191
    8. '_def' → logprob: -11.770722389221191
    9. '```' → logprob: -11.895722389221191
    10. '        
' → logprob: -12.645722389221191

Token 285: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.03457752242684364
    2. 'a' → logprob: -4.034577369689941
    3. '```' → logprob: -5.034577369689941
    4. 'd' → logprob: -5.534577369689941
    5. '_' → logprob: -5.659577369689941
    6. '    
' → logprob: -7.784577369689941
    7. '   ' → logprob: -8.159577369689941
    8. ' 
' → logprob: -8.284577369689941
    9. '<|end|>' → logprob: -8.284577369689941
    10. '(' → logprob: -8.534577369689941

Token 286: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.00442774360999465
    2. ' is' → logprob: -5.504427909851074
    3. 'print' → logprob: -8.004427909851074
    4. 'find' → logprob: -12.129427909851074
    5. 'def' → logprob: -12.379427909851074
    6. ' print' → logprob: -13.629427909851074
    7. 'import' → logprob: -14.254427909851074
    8. ' ' → logprob: -14.254427909851074
    9. 'get' → logprob: -14.254427909851074
    10. 'mark' → logprob: -15.504427909851074

Token 287: '_mark' (ID: 42901)
  Prédit: '_mark'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mark' → logprob: -3.054500666621607e-06
    2. 'marked' → logprob: -12.75000286102295
    3. ' marked' → logprob: -16.000003814697266
    4. 'Marked' → logprob: -18.000003814697266
    5. '_marker' → logprob: -18.750003814697266
    6. '_' → logprob: -19.625003814697266
    7. '-mark' → logprob: -21.000003814697266
    8. '_MARK' → logprob: -21.375003814697266
    9. '_marks' → logprob: -22.250003814697266
    10. '_not' → logprob: -22.750003814697266

Token 288: 'ed' (ID: 295)
  Prédit: 'ed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.006717147771269083
    2. '_mark' → logprob: -5.006717205047607
    3. '_ed' → logprob: -14.13171672821045
    4. '_' → logprob: -15.38171672821045
    5. 'eded' → logprob: -15.88171672821045
    6. 'marked' → logprob: -16.256717681884766
    7. 'arked' → logprob: -16.381717681884766
    8. '_one' → logprob: -16.881717681884766
    9. '_marker' → logprob: -17.006717681884766
    10. 'edas' → logprob: -17.131717681884766

Token 289: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -7.107425062713446e-06
    2. '(' → logprob: -11.875006675720215
    3. 'a' → logprob: -16.50000762939453
    4. '(
' → logprob: -16.87500762939453
    5. '[a' → logprob: -17.87500762939453
    6. ' (' → logprob: -18.00000762939453
    7. '   ' → logprob: -19.75000762939453
    8. '(array' → logprob: -20.87500762939453
    9. 'def' → logprob: -21.25000762939453
    10. '((' → logprob: -21.50000762939453

Token 290: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.968312951968983e-06
    2. ',a' → logprob: -12.375009536743164
    3. 'a' → logprob: -12.750009536743164
    4. ' ,' → logprob: -13.125009536743164
    5. ',
' → logprob: -15.625009536743164
    6. ',index' → logprob: -15.750009536743164
    7. '```' → logprob: -15.875009536743164
    8. '[],' → logprob: -16.000009536743164
    9. '   ' → logprob: -16.750009536743164
    10. '[a' → logprob: -17.125009536743164

Token 291: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6847555041313171
    2. 'index' → logprob: -1.559755563735962
    3. 'a' → logprob: -2.684755563735962
    4. 'idx' → logprob: -2.934755563735962
    5. ' i' → logprob: -3.059755563735962
    6. ' idx' → logprob: -3.184755563735962
    7. ' index' → logprob: -3.434755563735962
    8. 'x' → logprob: -3.809755563735962
    9. ' a' → logprob: -5.059755325317383
    10. 'lambda' → logprob: -5.184755325317383

Token 292: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.006300603970885277
    2. '):
' → logprob: -5.131300449371338
    3. ')' → logprob: -8.006300926208496
    4. '[' → logprob: -11.631300926208496
    5. '   ' → logprob: -11.881300926208496
    6. '[i' → logprob: -12.381300926208496
    7. '[a' → logprob: -12.631300926208496
    8. ']:' → logprob: -12.881300926208496
    9. '):

' → logprob: -13.006300926208496
    10. '[]):' → logprob: -13.006300926208496

Token 293: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.172310471534729
    2. 'return' → logprob: -1.922310471534729
    3. ' return' → logprob: -4.4223103523254395
    4. '	return' → logprob: -12.422310829162598
    5. 'a' → logprob: -12.922310829162598
    6. '```' → logprob: -15.422310829162598
    7. '   ' → logprob: -16.04730987548828
    8. '  ' → logprob: -16.54730987548828
    9. ' ' → logprob: -16.67230987548828
    10. 'def' → logprob: -16.79730987548828

Token 294: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.023797521367669106
    2. ' return' → logprob: -3.7737975120544434
    3. '   ' → logprob: -7.523797512054443
    4. 'a' → logprob: -11.398797988891602
    5. '	return' → logprob: -15.148797988891602
    6. 'def' → logprob: -15.398797988891602
    7. ' a' → logprob: -17.6487979888916
    8. ' ' → logprob: -17.7737979888916
    9. '```' → logprob: -17.7737979888916
    10. '
' → logprob: -19.1487979888916

Token 295: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.018150877207517624
    2. ' a' → logprob: -4.018150806427002
    3. '   ' → logprob: -14.51815128326416
    4. ' ' → logprob: -15.51815128326416
    5. 'bool' → logprob: -15.89315128326416
    6. '	a' → logprob: -16.018150329589844
    7. ' ' → logprob: -16.768150329589844
    8. 'i' → logprob: -17.393150329589844
    9. '(a' → logprob: -17.518150329589844
    10. ' bool' → logprob: -17.768150329589844

Token 296: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -8.244413766078651e-05
    2. '[' → logprob: -10.000082015991211
    3. '[a' → logprob: -10.375082015991211
    4. '[int' → logprob: -12.250082015991211
    5. 'a' → logprob: -15.125082015991211
    6. ' [' → logprob: -15.625082015991211
    7. 'i' → logprob: -15.750082015991211
    8. '```' → logprob: -16.25008201599121
    9. '[index' → logprob: -16.87508201599121
    10. '[
' → logprob: -16.87508201599121

Token 297: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01417032815515995
    2. ']==' → logprob: -4.264170169830322
    3. '==' → logprob: -12.13917064666748
    4. ' ]' → logprob: -13.76417064666748
    5. ']!=' → logprob: -15.63917064666748
    6. ']
' → logprob: -16.514169692993164
    7. ']=='' → logprob: -16.639169692993164
    8. '[' → logprob: -17.014169692993164
    9. '']' → logprob: -17.389169692993164
    10. '']==' → logprob: -17.639169692993164

Token 298: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.2519773542881012
    2. ' ==' → logprob: -1.5019773244857788
    3. '<|end|>' → logprob: -10.37697696685791
    4. '=' → logprob: -12.00197696685791
    5. '!=' → logprob: -12.37697696685791
    6. ' !=' → logprob: -13.25197696685791
    7. ' ' → logprob: -13.50197696685791
    8. ' ' → logprob: -13.87697696685791
    9. ']==' → logprob: -14.37697696685791
    10. '[' → logprob: -14.50197696685791

Token 299: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9027791495318525e-05
    2. ' ' → logprob: -10.875019073486328
    3. '   ' → logprob: -19.250019073486328
    4. '```' → logprob: -21.625019073486328
    5. '0' → logprob: -21.875019073486328
    6. '  ' → logprob: -22.000019073486328
    7. '' → logprob: -22.125019073486328
    8. '۱' → logprob: -23.125019073486328
    9. '<|end|>' → logprob: -23.125019073486328
    10. '=' → logprob: -23.250019073486328

Token 300: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.125000953674316
    3. '```' → logprob: -21.25
    4. '0' → logprob: -21.375
    5. '<|end|>' → logprob: -21.375
    6. '   ' → logprob: -22.5
    7. '=' → logprob: -22.875
    8. '[' → logprob: -23.0
    9. '' → logprob: -23.125
    10. '۱' → logprob: -23.125

Token 301: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.01361248642206192
    2. '
' → logprob: -4.638612270355225
    3. '<|end|>' → logprob: -5.888612270355225
    4. '    
' → logprob: -8.263612747192383
    5. '```' → logprob: -8.263612747192383
    6. 'print' → logprob: -8.513612747192383
    7. '  
' → logprob: -8.888612747192383
    8. ' def' → logprob: -9.638612747192383
    9. ')' → logprob: -9.763612747192383
    10. ' 
' → logprob: -10.513612747192383

Token 302: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6936647891998291
    2. 'print' → logprob: -0.6936647891998291
    3. '<|end|>' → logprob: -7.94366455078125
    4. 'get' → logprob: -9.56866455078125
    5. '```' → logprob: -10.56866455078125
    6. '#print' → logprob: -10.94366455078125
    7. 'import' → logprob: -11.31866455078125
    8. 'pr' → logprob: -12.06866455078125
    9. '#' → logprob: -12.06866455078125
    10. '[' → logprob: -12.06866455078125

Token 303: ' print' (ID: 2123)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0019404153572395444
    2. ' main' → logprob: -6.8769402503967285
    3. '__' → logprob: -7.7519402503967285
    4. 'print' → logprob: -8.126940727233887
    5. 'if' → logprob: -9.376940727233887
    6. 'get' → logprob: -9.626940727233887
    7. 'def' → logprob: -10.626940727233887
    8. '_main' → logprob: -13.251940727233887
    9. 'process' → logprob: -14.126940727233887
    10. 'set' → logprob: -14.251940727233887

Token 304: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.000649529043585062
    2. '(' → logprob: -7.625649452209473
    3. 'value' → logprob: -9.750649452209473
    4. 'Value' → logprob: -10.125649452209473
    5. '(value' → logprob: -10.625649452209473
    6. '_' → logprob: -10.750649452209473
    7. '_VALUE' → logprob: -12.625649452209473
    8. '(_' → logprob: -12.750649452209473
    9. '_Value' → logprob: -13.125649452209473
    10. '_(' → logprob: -13.250649452209473

Token 305: '(val' (ID: 17391)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.07539930194616318
    2. '(value' → logprob: -2.825399398803711
    3. '(' → logprob: -5.200399398803711
    4. '(a' → logprob: -5.450399398803711
    5. '(x' → logprob: -5.825399398803711
    6. '(val' → logprob: -8.200399398803711
    7. '(v' → logprob: -8.325399398803711
    8. '(n' → logprob: -9.950399398803711
    9. ' (' → logprob: -12.450399398803711
    10. '(num' → logprob: -13.075399398803711

Token 306: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.48055940866470337
    2. '):
' → logprob: -0.9805594086647034
    3. ')' → logprob: -5.105559349060059
    4. '(val' → logprob: -8.355559349060059
    5. '):
' → logprob: -10.105559349060059
    6. '(' → logprob: -10.230559349060059
    7. ')
' → logprob: -10.355559349060059
    8. '():
' → logprob: -10.605559349060059
    9. '   ' → logprob: -11.730559349060059
    10. '()' → logprob: -12.355559349060059

Token 307: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018707603216171265
    2. 'print' → logprob: -4.018707752227783
    3. ' print' → logprob: -7.518707752227783
    4. '```' → logprob: -11.143707275390625
    5. '	print' → logprob: -16.518707275390625
    6. '       ' → logprob: -17.143707275390625
    7. '   ' → logprob: -17.143707275390625
    8. '`' → logprob: -17.393707275390625
    9. '``' → logprob: -18.018707275390625
    10. ' ' → logprob: -20.018707275390625

Token 308: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -1.2664456789934775e-06
    2. ' print' → logprob: -13.750000953674316
    3. '   ' → logprob: -16.750001907348633
    4. '```' → logprob: -18.750001907348633
    5. 'printf' → logprob: -23.750001907348633
    6. 'pr' → logprob: -23.750001907348633
    7. '	print' → logprob: -24.750001907348633
    8. '`' → logprob: -24.875001907348633
    9. 'println' → logprob: -24.875001907348633
    10. 'prin' → logprob: -24.875001907348633

Token 309: '(val' (ID: 17391)
  Prédit: '(val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(val' → logprob: -0.0003809833142440766
    2. 'val' → logprob: -8.000380516052246
    3. '(' → logprob: -10.000380516052246
    4. ' val' → logprob: -16.000381469726562
    5. '[val' → logprob: -17.625381469726562
    6. ',val' → logprob: -17.875381469726562
    7. '()' → logprob: -18.375381469726562
    8. ' (' → logprob: -18.500381469726562
    9. '(f' → logprob: -18.625381469726562
    10. '(value' → logprob: -19.125381469726562

Token 310: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.320199877838604e-07
    2. ')
' → logprob: -15.25
    3. ' )' → logprob: -16.0
    4. ')`' → logprob: -17.5
    5. '))' → logprob: -18.125
    6. '')' → logprob: -18.75
    7. ')#' → logprob: -19.625
    8. ')}' → logprob: -20.125
    9. '()' → logprob: -20.125
    10. '),' → logprob: -20.25

Token 311: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.06803137063980103
    2. 'get' → logprob: -3.4430313110351562
    3. '<|end|>' → logprob: -3.5680313110351562
    4. '#' → logprob: -6.568031311035156
    5. 'x' → logprob: -6.818031311035156
    6. '[' → logprob: -6.943031311035156
    7. 'print' → logprob: -7.943031311035156
    8. 'a' → logprob: -8.193031311035156
    9. ')' → logprob: -8.568031311035156
    10. '()' → logprob: -8.568031311035156

Token 312: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.00023286080977413803
    2. ' main' → logprob: -8.375232696533203
    3. 'def' → logprob: -13.750232696533203
    4. '__' → logprob: -14.250232696533203
    5. 'solve' → logprob: -15.250232696533203
    6. '	main' → logprob: -16.750232696533203
    7. 'if' → logprob: -16.875232696533203
    8. '_main' → logprob: -17.250232696533203
    9. 'run' → logprob: -17.250232696533203
    10. 'get' → logprob: -17.375232696533203

Token 313: '_s' (ID: 1278)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -7.584239938296378e-06
    2. ' ():' → logprob: -12.250007629394531
    3. '():
' → logprob: -12.875007629394531
    4. '()' → logprob: -15.750007629394531
    5. '(' → logprob: -16.75000762939453
    6. '():
' → logprob: -17.62500762939453
    7. '()>' → logprob: -19.37500762939453
    8. '_' → logprob: -19.62500762939453
    9. '(":' → logprob: -19.75000762939453
    10. '():

' → logprob: -19.87500762939453

Token 314: 'olve' (ID: 11460)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.022507237270474434
    2. 'olve' → logprob: -4.772507190704346
    3. 'olution' → logprob: -5.522507190704346
    4. 'ource' → logprob: -5.897507190704346
    5. '():
' → logprob: -6.397507190704346
    6. 'td' → logprob: -6.647507190704346
    7. 'tring' → logprob: -6.772507190704346
    8. 'cript' → logprob: -6.772507190704346
    9. 'def' → logprob: -7.397507190704346
    10. '():' → logprob: -8.397507667541504

Token 315: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -4.8351892473874614e-05
    2. '():
' → logprob: -10.000048637390137
    3. ' ():' → logprob: -13.000048637390137
    4. '()' → logprob: -15.125048637390137
    5. '():
' → logprob: -15.500048637390137
    6. '(' → logprob: -16.37504768371582
    7. '():

' → logprob: -17.25004768371582
    8. '_' → logprob: -18.87504768371582
    9. 'def' → logprob: -20.37504768371582
    10. '().' → logprob: -20.50004768371582

Token 316: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00161067396402359
    2. 'redirect' → logprob: -7.00161075592041
    3. ' redirect' → logprob: -7.50161075592041
    4. 'x' → logprob: -10.00161075592041
    5. '
' → logprob: -10.62661075592041
    6. '    
' → logprob: -11.12661075592041
    7. 'input' → logprob: -11.25161075592041
    8. 'n' → logprob: -11.50161075592041
    9. 'import' → logprob: -11.87661075592041
    10. ' input' → logprob: -12.37661075592041

Token 317: ' redirect' (ID: 13200)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.2054998129606247
    2. '   ' → logprob: -2.0804998874664307
    3. 'n' → logprob: -3.3304998874664307
    4. 'limit' → logprob: -4.205499649047852
    5. ' x' → logprob: -5.455499649047852
    6. 'get' → logprob: -6.455499649047852
    7. 'import' → logprob: -7.205499649047852
    8. 'N' → logprob: -7.330499649047852
    9. 'input' → logprob: -7.330499649047852
    10. ' n' → logprob: -7.705499649047852

Token 318: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -3.8889261304575484e-06
    2. '_' → logprob: -13.000003814697266
    3. '_inputs' → logprob: -14.125003814697266
    4. '_output' → logprob: -14.375003814697266
    5. '```' → logprob: -16.125003814697266
    6. '_code' → logprob: -17.625003814697266
    7. '_st' → logprob: -17.875003814697266
    8. '_user' → logprob: -18.125003814697266
    9. '_Input' → logprob: -18.125003814697266
    10. '_in' → logprob: -18.125003814697266

Token 319: '_if' (ID: 25821)
  Prédit: '_if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_if' → logprob: -0.011075885966420174
    2. '_input' → logprob: -4.511075973510742
    3. 'if' → logprob: -11.511075973510742
    4. '```' → logprob: -12.636075973510742
    5. '(_' → logprob: -12.761075973510742
    6. '_for' → logprob: -13.386075973510742
    7. '_file' → logprob: -13.886075973510742
    8. '   ' → logprob: -14.136075973510742
    9. '(if' → logprob: -14.261075973510742
    10. '_in' → logprob: -14.386075973510742

Token 320: '_local' (ID: 29253)
  Prédit: '_local'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_local' → logprob: -0.006716079078614712
    2. 'local' → logprob: -5.006716251373291
    3. ' local' → logprob: -15.756715774536133
    4. 'sys' → logprob: -16.506715774536133
    5. 'ocal' → logprob: -16.756715774536133
    6. '_' → logprob: -16.881715774536133
    7. '_LOCAL' → logprob: -17.006715774536133
    8. 'locals' → logprob: -17.006715774536133
    9. '```' → logprob: -17.256715774536133
    10. '   ' → logprob: -17.756715774536133

Token 321: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.2519606053829193
    2. '()' → logprob: -1.5019606351852417
    3. '()

' → logprob: -11.126960754394531
    4. '()
' → logprob: -11.126960754394531
    5. 'def' → logprob: -14.126960754394531
    6. '()`' → logprob: -14.501960754394531
    7. '()\' → logprob: -14.751960754394531
    8. ' ()' → logprob: -16.25196075439453
    9. ' ()
' → logprob: -16.37696075439453
    10. '   ' → logprob: -16.75196075439453

Token 322: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013181055895984173
    2. 'x' → logprob: -4.388181209564209
    3. ' x' → logprob: -7.638181209564209
    4. 'n' → logprob: -9.88818073272705
    5. '    
' → logprob: -9.88818073272705
    6. '
' → logprob: -10.63818073272705
    7. 'input' → logprob: -10.88818073272705
    8. 'a' → logprob: -11.26318073272705
    9. ' input' → logprob: -12.13818073272705
    10. 'size' → logprob: -12.51318073272705

Token 323: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.013312933966517448
    2. 'n' → logprob: -4.763312816619873
    3. '   ' → logprob: -6.388312816619873
    4. 'limit' → logprob: -7.388312816619873
    5. 'N' → logprob: -7.763312816619873
    6. 'arr' → logprob: -7.888312816619873
    7. 'input' → logprob: -8.013313293457031
    8. 'a' → logprob: -8.013313293457031
    9. 'data' → logprob: -8.638313293457031
    10. 'start' → logprob: -9.013313293457031

Token 324: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011061146855354309
    2. '=' → logprob: -4.511061191558838
    3. ',' → logprob: -11.88606071472168
    4. '   ' → logprob: -12.26106071472168
    5. ' ' → logprob: -14.13606071472168
    6. ' ' → logprob: -14.88606071472168
    7. '=int' → logprob: -15.13606071472168
    8. ' ,' → logprob: -15.88606071472168
    9. '  ' → logprob: -16.38606071472168
    10. '    ' → logprob: -16.51106071472168

Token 325: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.11319602280855179
    2. ' get' → logprob: -2.2381961345672607
    3. 'int' → logprob: -8.11319637298584
    4. ' int' → logprob: -9.98819637298584
    5. '   ' → logprob: -11.86319637298584
    6. '(get' → logprob: -11.98819637298584
    7. ' ' → logprob: -11.98819637298584
    8. '  ' → logprob: -12.11319637298584
    9. '	get' → logprob: -13.61319637298584
    10. '[get' → logprob: -14.36319637298584

Token 326: '_start' (ID: 10949)
  Prédit: '_start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -0.00838136114180088
    2. '_input' → logprob: -5.133381366729736
    3. 'starting' → logprob: -6.133381366729736
    4. 'start' → logprob: -8.258380889892578
    5. 'get' → logprob: -11.383380889892578
    6. 'input' → logprob: -12.508380889892578
    7. '_get' → logprob: -12.758380889892578
    8. ' starting' → logprob: -14.258380889892578
    9. '_started' → logprob: -14.383380889892578
    10. 'Starting' → logprob: -14.758380889892578

Token 327: 'ing' (ID: 289)
  Prédit: 'ing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ing' → logprob: -0.048959869891405106
    2. '_value' → logprob: -3.048959970474243
    3. '_input' → logprob: -7.923959732055664
    4. 'ed' → logprob: -12.423959732055664
    5. '   ' → logprob: -13.423959732055664
    6. '()' → logprob: -13.923959732055664
    7. '(' → logprob: -14.423959732055664
    8. 'ING' → logprob: -14.673959732055664
    9. '[' → logprob: -14.923959732055664
    10. '_val' → logprob: -14.923959732055664

Token 328: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.0009214656893163919
    2. 'value' → logprob: -7.125921249389648
    3. '_function' → logprob: -9.125921249389648
    4. 'val' → logprob: -12.875921249389648
    5. '_input' → logprob: -13.125921249389648
    6. 'function' → logprob: -13.375921249389648
    7. '()' → logprob: -14.125921249389648
    8. 'Value' → logprob: -15.375921249389648
    9. '_val' → logprob: -15.500921249389648
    10. 'valu' → logprob: -15.625921249389648

Token 329: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3561536371707916
    2. '()' → logprob: -1.8561536073684692
    3. '()
' → logprob: -1.9811536073684692
    4. 'a' → logprob: -5.73115348815918
    5. '
' → logprob: -6.60615348815918
    6. 'def' → logprob: -7.85615348815918
    7. '    
' → logprob: -9.10615348815918
    8. '(' → logprob: -9.98115348815918
    9. '```' → logprob: -10.23115348815918
    10. ')' → logprob: -10.48115348815918

Token 330: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003224890911951661
    2. 'a' → logprob: -5.753224849700928
    3. '    
' → logprob: -10.378225326538086
    4. '```' → logprob: -11.878225326538086
    5. ' a' → logprob: -12.878225326538086
    6. '
' → logprob: -13.503225326538086
    7. '  ' → logprob: -13.753225326538086
    8. '   ' → logprob: -14.378225326538086
    9. '   
' → logprob: -14.628225326538086
    10. '       ' → logprob: -14.753225326538086

Token 331: ' size' (ID: 2349)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.005913154222071171
    2. '   ' → logprob: -5.630913257598877
    3. ' a' → logprob: -6.130913257598877
    4. 'arr' → logprob: -9.255912780761719
    5. 'max' → logprob: -10.880912780761719
    6. 'limit' → logprob: -11.630912780761719
    7. 'array' → logprob: -12.505912780761719
    8. ' max' → logprob: -13.130912780761719
    9. ' arr' → logprob: -13.630912780761719
    10. 'size' (adapté à ' size') → logprob: -13.755912780761719

Token 332: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.020546678453683853
    2. '=' → logprob: -3.8955466747283936
    3. ' ' → logprob: -13.270546913146973
    4. 'x' → logprob: -13.895546913146973
    5. ',' → logprob: -14.270546913146973
    6. 's' → logprob: -14.645546913146973
    7. '_' → logprob: -15.395546913146973
    8. '   ' → logprob: -15.770546913146973
    9. ')' → logprob: -16.020545959472656
    10. ' =
' → logprob: -16.145545959472656

Token 333: ' ' (ID: 220)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.011358912102878094
    2. '100' → logprob: -5.136358737945557
    3. '10' → logprob: -5.261358737945557
    4. ' x' → logprob: -9.011359214782715
    5. 'max' → logprob: -10.636359214782715
    6. ' ' → logprob: -10.636359214782715
    7. '(x' → logprob: -11.136359214782715
    8. '2' → logprob: -11.386359214782715
    9. '500' → logprob: -11.886359214782715
    10. '   ' → logprob: -12.136359214782715

Token 334: '100' (ID: 1353)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.030643973499536514
    2. '100' → logprob: -3.655643939971924
    3. '10' → logprob: -5.530643939971924
    4. 'max' → logprob: -8.655644416809082
    5. 'int' → logprob: -9.530644416809082
    6. '(x' → logprob: -10.280644416809082
    7. '500' → logprob: -11.030644416809082
    8. ' x' → logprob: -11.280644416809082
    9. '=' → logprob: -11.530644416809082
    10. '(' → logprob: -11.655644416809082

Token 335: '01' (ID: 2290)
  Prédit: '000'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.08272219449281693
    2. '001' → logprob: -2.5827221870422363
    3. '_' → logprob: -6.707722187042236
    4. '1' → logprob: -6.957722187042236
    5. '01' → logprob: -7.457722187042236
    6. '00' → logprob: -8.207722663879395
    7. '002' → logprob: -8.332722663879395
    8. '005' → logprob: -8.457722663879395
    9. '   ' → logprob: -9.332722663879395
    10. '003' → logprob: -9.582722663879395

Token 336: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.17160482704639435
    2. '   ' → logprob: -2.046604871749878
    3. 'a' → logprob: -3.921604871749878
    4. '    
' → logprob: -4.921604633331299
    5. '<|end|>' → logprob: -7.921604633331299
    6. '  
' → logprob: -8.296605110168457
    7. ')
' → logprob: -8.546605110168457
    8. ')' → logprob: -8.796605110168457
    9. '
' → logprob: -9.421605110168457
    10. ' 
' → logprob: -9.796605110168457

Token 337: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.34887346625328064
    2. 'a' → logprob: -1.223873496055603
    3. ' a' → logprob: -7.848873615264893
    4. '    
' → logprob: -10.848873138427734
    5. '```' → logprob: -11.473873138427734
    6. '	a' → logprob: -12.598873138427734
    7. '
' → logprob: -13.848873138427734
    8. ' ' → logprob: -14.098873138427734
    9. '  ' → logprob: -14.223873138427734
    10. '<|end|>' → logprob: -14.598873138427734

Token 338: ' limit' (ID: 5967)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0012571377446874976
    2. '   ' → logprob: -6.751256942749023
    3. 'arr' → logprob: -9.876256942749023
    4. ' a' → logprob: -10.376256942749023
    5. 'array' → logprob: -12.626256942749023
    6. '	a' → logprob: -15.126256942749023
    7. '```' → logprob: -15.126256942749023
    8. '    
' → logprob: -15.626256942749023
    9. 'def' → logprob: -15.751256942749023
    10. '  ' → logprob: -16.001256942749023

Token 339: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1269298940896988
    2. '=' → logprob: -2.126929998397827
    3. ',' → logprob: -14.376930236816406
    4. '   ' → logprob: -14.501930236816406
    5. ' =
' → logprob: -14.626930236816406
    6. '_' → logprob: -16.251930236816406
    7. ' ' → logprob: -16.376930236816406
    8. ')' → logprob: -16.751930236816406
    9. '  ' → logprob: -17.001930236816406
    10. ' =
' → logprob: -17.126930236816406

Token 340: ' ' (ID: 220)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.004973070230334997
    2. ' x' → logprob: -5.3799729347229
    3. '100' → logprob: -8.254973411560059
    4. 'size' → logprob: -10.004973411560059
    5. ' ' → logprob: -11.254973411560059
    6. 'int' → logprob: -11.379973411560059
    7. '10' → logprob: -11.629973411560059
    8. '   ' → logprob: -12.254973411560059
    9. 'get' → logprob: -12.504973411560059
    10. ' size' → logprob: -13.879973411560059

Token 341: '100' (ID: 1353)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0037830930668860674
    2. '100' → logprob: -5.628783226013184
    3. '10' → logprob: -9.628783226013184
    4. 'size' → logprob: -9.753783226013184
    5. ' x' → logprob: -10.003783226013184
    6. 'int' → logprob: -12.128783226013184
    7. ' ' → logprob: -12.378783226013184
    8. '   ' → logprob: -13.128783226013184
    9. 'print' → logprob: -14.753783226013184
    10. '999' → logprob: -15.003783226013184

Token 342: '0' (ID: 15)
  Prédit: '00'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '00' → logprob: -0.2562094032764435
    2. '01' → logprob: -1.506209373474121
    3. 'x' → logprob: -6.006209373474121
    4. '000' → logprob: -7.381209373474121
    5. '0' → logprob: -7.631209373474121
    6. '   ' → logprob: -8.256209373474121
    7. '001' → logprob: -8.506209373474121
    8. '1' → logprob: -9.256209373474121
    9. '```' → logprob: -9.756209373474121
    10. 'size' → logprob: -10.256209373474121

Token 343: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.027483856305480003
    2. '
' → logprob: -4.152483940124512
    3. 'a' → logprob: -4.777483940124512
    4. '    
' → logprob: -5.902483940124512
    5. '<|end|>' → logprob: -9.277483940124512
    6. ' a' → logprob: -10.527483940124512
    7. 'def' → logprob: -11.152483940124512
    8. ')' → logprob: -11.402483940124512
    9. ' 
' → logprob: -11.527483940124512
    10. '  
' → logprob: -11.527483940124512

Token 344: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16124802827835083
    2. 'a' → logprob: -1.911247968673706
    3. ' a' → logprob: -7.411248207092285
    4. '    
' → logprob: -8.536248207092285
    5. '```' → logprob: -9.036248207092285
    6. '
' → logprob: -10.286248207092285
    7. '	a' → logprob: -10.786248207092285
    8. '<|end|>' → logprob: -11.411248207092285
    9. 'def' → logprob: -11.911248207092285
    10. '   ' → logprob: -12.286248207092285

Token 345: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.0628603994846344
    2. '   ' → logprob: -2.8128604888916016
    3. ' a' → logprob: -7.062860488891602
    4. 'arr' → logprob: -10.812860488891602
    5. 'array' → logprob: -12.187860488891602
    6. '	a' → logprob: -13.062860488891602
    7. '  ' → logprob: -13.062860488891602
    8. '```' → logprob: -13.187860488891602
    9. ' ' → logprob: -13.312860488891602
    10. '    
' → logprob: -13.437860488891602

Token 346: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868715465068817
    2. '=' → logprob: -1.136871576309204
    3. ',' → logprob: -15.261871337890625
    4. '[' → logprob: -16.011871337890625
    5. 'a' → logprob: -17.261871337890625
    6. ' ' → logprob: -17.386871337890625
    7. ')' → logprob: -17.511871337890625
    8. '＝' → logprob: -17.761871337890625
    9. '=create' → logprob: -18.261871337890625
    10. '.' → logprob: -18.511871337890625

Token 347: ' initialize' (ID: 18400)
  Prédit: 'initialize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'initialize' → logprob: -0.002606452675536275
    2. ' initialize' → logprob: -6.002606391906738
    3. '[' → logprob: -9.002606391906738
    4. ' [' → logprob: -11.877606391906738
    5. '	initialize' → logprob: -14.627606391906738
    6. '.initialize' → logprob: -15.877606391906738
    7. '_initialize' → logprob: -16.627607345581055
    8. 'Initialize' → logprob: -17.377607345581055
    9. 'initialized' → logprob: -17.627607345581055
    10. '[in' → logprob: -18.252607345581055

Token 348: '_array' (ID: 8766)
  Prédit: '_array'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_array' → logprob: -0.14052802324295044
    2. '(size' → logprob: -2.1405279636383057
    3. 'array' → logprob: -5.390528202056885
    4. 'a' → logprob: -5.515528202056885
    5. '(a' → logprob: -6.015528202056885
    6. '_a' → logprob: -6.765528202056885
    7. '[size' → logprob: -7.515528202056885
    8. 'Array' → logprob: -8.015527725219727
    9. 'size' → logprob: -8.890527725219727
    10. ' (' → logprob: -9.140527725219727

Token 349: '(size' (ID: 15192)
  Prédit: '(size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(size' → logprob: -6.511406809295295e-06
    2. '(' → logprob: -12.000006675720215
    3. '[size' → logprob: -15.875006675720215
    4. 'size' → logprob: -16.5000057220459
    5. ' (' → logprob: -17.1250057220459
    6. '=size' → logprob: -18.8750057220459
    7. '<size' → logprob: -19.2500057220459
    8. '(score' → logprob: -19.8750057220459
    9. '(length' → logprob: -19.8750057220459
    10. '(
' → logprob: -20.1250057220459

Token 350: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.048599183559417725
    2. ')
' → logprob: -3.0485992431640625
    3. ')

' → logprob: -11.923599243164062
    4. '   ' → logprob: -13.048599243164062
    5. ')
' → logprob: -13.298599243164062
    6. ' )' → logprob: -14.298599243164062
    7. ' )
' → logprob: -16.173599243164062
    8. ' ' → logprob: -16.423599243164062
    9. ')a' → logprob: -16.423599243164062
    10. ')\
' → logprob: -16.548599243164062

Token 351: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04692501947283745
    2. 'mark' → logprob: -3.1719250679016113
    3. ' mark' → logprob: -5.546925067901611
    4. '```' → logprob: -11.921924591064453
    5. '(mark' → logprob: -12.546924591064453
    6. '    
' → logprob: -13.546924591064453
    7. '   ' → logprob: -13.546924591064453
    8. '  ' → logprob: -13.671924591064453
    9. '
' → logprob: -14.171924591064453
    10. '_mark' → logprob: -14.546924591064453

Token 352: ' set' (ID: 920)
  Prédit: 'mark'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mark' → logprob: -0.0002514455991331488
    2. '   ' → logprob: -8.500251770019531
    3. ' mark' → logprob: -10.000251770019531
    4. '
' → logprob: -14.125251770019531
    5. '```' → logprob: -14.750251770019531
    6. 'marker' → logprob: -14.875251770019531
    7. '(mark' → logprob: -15.250251770019531
    8. '    
' → logprob: -15.625251770019531
    9. 'marked' → logprob: -15.625251770019531
    10. '_mark' → logprob: -16.37525177001953

Token 353: '_one' (ID: 26979)
  Prédit: '_one'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_one' → logprob: -2.47495681833243e-05
    2. '_for' → logprob: -11.875024795532227
    3. '_a' → logprob: -12.125024795532227
    4. 'one' → logprob: -13.125024795532227
    5. '```' → logprob: -13.500024795532227
    6. '_once' → logprob: -13.750024795532227
    7. '_on' → logprob: -14.000024795532227
    8. '_' → logprob: -14.000024795532227
    9. 'One' → logprob: -14.000024795532227
    10. 'a' → logprob: -14.125024795532227

Token 354: '_for' (ID: 11903)
  Prédit: '_for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_for' → logprob: -5.512236498361744e-07
    2. '```' → logprob: -15.625000953674316
    3. 'For' → logprob: -16.375
    4. '_' → logprob: -16.375
    5. ' _' → logprob: -17.25
    6. 'for' → logprob: -17.25
    7. '_FOR' → logprob: -17.375
    8. 'a' → logprob: -17.5
    9. '(a' → logprob: -18.0
    10. ')_' → logprob: -18.25

Token 355: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.007769528776407242
    2. 'index' → logprob: -4.882769584655762
    3. 'dex' → logprob: -9.507769584655762
    4. 'Index' → logprob: -10.007769584655762
    5. 'ex' → logprob: -10.632769584655762
    6. 'nd' → logprob: -11.757769584655762
    7. 'x' → logprob: -13.257769584655762
    8. 'a' → logprob: -13.382769584655762
    9. '_array' → logprob: -13.507769584655762
    10. '(a' → logprob: -13.882769584655762

Token 356: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -2.5776860184123507e-06
    2. 'a' → logprob: -13.62500286102295
    3. '```' → logprob: -14.62500286102295
    4. ' (' → logprob: -15.25000286102295
    5. '<|end|>' → logprob: -15.25000286102295
    6. '(
' → logprob: -16.375001907348633
    7. '[a' → logprob: -16.750001907348633
    8. '(' → logprob: -17.000001907348633
    9. '(ai' → logprob: -17.375001907348633
    10. ')' → logprob: -17.500001907348633

Token 357: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0021190927363932133
    2. '(' → logprob: -6.377119064331055
    3. ' ,' → logprob: -8.502119064331055
    4. ')' → logprob: -9.502119064331055
    5. 'a' → logprob: -9.877119064331055
    6. ',a' → logprob: -10.877119064331055
    7. '0' → logprob: -11.127119064331055
    8. ',
' → logprob: -11.377119064331055
    9. '(a' → logprob: -12.002119064331055
    10. ' (' → logprob: -12.127119064331055

Token 358: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004793703090399504
    2. '0' → logprob: -5.504793643951416
    3. ' ' → logprob: -7.254793643951416
    4. '2' → logprob: -13.129794120788574
    5. '4' → logprob: -13.754794120788574
    6. '   ' → logprob: -13.879794120788574
    7. '100' → logprob: -14.254794120788574
    8. ')' → logprob: -14.379794120788574
    9. 'x' → logprob: -14.442294120788574
    10. '[' → logprob: -14.504794120788574

Token 359: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1128411516547203
    2. '0' → logprob: -2.2378411293029785
    3. '4' → logprob: -11.987841606140137
    4. '2' → logprob: -12.112841606140137
    5. 'x' → logprob: -13.237841606140137
    6. '-' → logprob: -13.737841606140137
    7. '3' → logprob: -14.112841606140137
    8. 'i' → logprob: -14.612841606140137
    9. '100' → logprob: -14.737841606140137
    10. ' ' → logprob: -14.862841606140137

Token 360: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005841302336193621
    2. ')
' → logprob: -7.500584125518799
    3. ' )' → logprob: -10.625584602355957
    4. ')

' → logprob: -13.000584602355957
    5. ')
' → logprob: -13.500584602355957
    6. '+' → logprob: -14.750584602355957
    7. '   ' → logprob: -14.875584602355957
    8. ',' → logprob: -15.250584602355957
    9. ')`' → logprob: -15.250584602355957
    10. '0' → logprob: -15.500584602355957

Token 361: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0624476857483387
    2. 'mark' → logprob: -2.8124477863311768
    3. ' mark' → logprob: -7.687447547912598
    4. '```' → logprob: -11.937447547912598
    5. '    
' → logprob: -12.687447547912598
    6. '(mark' → logprob: -12.812447547912598
    7. '
' → logprob: -13.312447547912598
    8. '  ' → logprob: -13.687447547912598
    9. '   ' → logprob: -13.687447547912598
    10. ' ' → logprob: -14.437447547912598

Token 362: ' mark' (ID: 1983)
  Prédit: 'mark'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mark' (adapté à ' mark') → logprob: -0.04803522676229477
    2. '   ' → logprob: -3.173035144805908
    3. ' mark' → logprob: -5.298035144805908
    4. '
' → logprob: -12.798035621643066
    5. '  ' → logprob: -12.798035621643066
    6. 'marker' → logprob: -12.798035621643066
    7. '(mark' → logprob: -12.798035621643066
    8. '```' → logprob: -12.798035621643066
    9. ' ' → logprob: -13.298035621643066
    10. '.mark' → logprob: -13.923035621643066

Token 363: '_power' (ID: 51623)
  Prédit: '_power'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_power' → logprob: -0.003302358789369464
    2. 'power' → logprob: -5.753302574157715
    3. '_pow' → logprob: -10.003302574157715
    4. '_s' → logprob: -10.378302574157715
    5. 'pow' → logprob: -11.128302574157715
    6. '_' → logprob: -11.128302574157715
    7. '_square' → logprob: -12.003302574157715
    8. '_p' → logprob: -12.253302574157715
    9. '_mark' → logprob: -12.753302574157715
    10. '```' → logprob: -14.378302574157715

Token 364: '_indices' (ID: 43508)
  Prédit: '_indices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_indices' → logprob: -0.008894636295735836
    2. 's' → logprob: -4.758894443511963
    3. '_s' → logprob: -8.258894920349121
    4. '_' → logprob: -12.008894920349121
    5. 'indices' → logprob: -12.008894920349121
    6. '_inds' → logprob: -13.258894920349121
    7. '_ind' → logprob: -13.508894920349121
    8. '_in' → logprob: -13.758894920349121
    9. '_mark' → logprob: -14.133894920349121
    10. ' _' → logprob: -14.508894920349121

Token 365: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -1.5048530030981055e-06
    2. ' (' → logprob: -13.750001907348633
    3. '(' → logprob: -15.625001907348633
    4. '```' → logprob: -15.875001907348633
    5. '(
' → logprob: -17.125001907348633
    6. '   ' → logprob: -17.375001907348633
    7. '(ai' → logprob: -17.875001907348633
    8. 'a' → logprob: -18.375001907348633
    9. ' ' → logprob: -19.125001907348633
    10. '
' → logprob: -20.500001907348633

Token 366: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.023514846339821815
    2. '(a' → logprob: -4.148514747619629
    3. ',a' → logprob: -5.023514747619629
    4. 'a' → logprob: -7.648514747619629
    5. ' ,' → logprob: -8.648514747619629
    6. '(' → logprob: -8.648514747619629
    7. ')' → logprob: -11.273514747619629
    8. '   ' → logprob: -11.648514747619629
    9. ',
' → logprob: -11.648514747619629
    10. ' a' → logprob: -12.398514747619629

Token 367: ' limit' (ID: 5967)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0029085350688546896
    2. ' x' → logprob: -6.252908706665039
    3. 'limit' → logprob: -7.252908706665039
    4. '100' → logprob: -8.502908706665039
    5. 'size' → logprob: -10.502908706665039
    6. '   ' → logprob: -10.752908706665039
    7. ' limit' → logprob: -11.752908706665039
    8. ')' → logprob: -12.377908706665039
    9. '	x' → logprob: -13.627908706665039
    10. ' ' → logprob: -14.127908706665039

Token 368: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005725711234845221
    2. ')
' → logprob: -7.750572681427002
    3. '+' → logprob: -9.500572204589844
    4. '   ' → logprob: -10.000572204589844
    5. ' )' → logprob: -11.875572204589844
    6. ',' → logprob: -12.125572204589844
    7. ' +' → logprob: -13.375572204589844
    8. '-' → logprob: -13.625572204589844
    9. '*' → logprob: -13.625572204589844
    10. ')`' → logprob: -13.750572204589844

Token 369: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016500327736139297
    2. 'find' → logprob: -4.141500473022461
    3. ' find' → logprob: -7.766500473022461
    4. '
' → logprob: -10.641500473022461
    5. '	find' → logprob: -12.141500473022461
    6. '    
' → logprob: -12.391500473022461
    7. '```' → logprob: -12.641500473022461
    8. '(find' → logprob: -13.141500473022461
    9. '   ' → logprob: -14.141500473022461
    10. 'get' → logprob: -14.516500473022461

Token 370: ' find' (ID: 1646)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' (adapté à ' find') → logprob: -0.001194990472868085
    2. '   ' → logprob: -6.751194953918457
    3. ' find' → logprob: -11.126194953918457
    4. '
' → logprob: -11.626194953918457
    5. '	find' → logprob: -14.501194953918457
    6. '(find' → logprob: -16.126195907592773
    7. '```' → logprob: -16.376195907592773
    8. '    
' → logprob: -16.751195907592773
    9. '=find' → logprob: -16.876195907592773
    10. '  ' → logprob: -17.001195907592773

Token 371: '_and' (ID: 18645)
  Prédit: '_and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_and' → logprob: -2.816093228830141e-06
    2. '_' → logprob: -13.62500286102295
    3. 'and' → logprob: -14.87500286102295
    4. '_max' → logprob: -15.25000286102295
    5. '_a' → logprob: -15.75000286102295
    6. '_for' → logprob: -15.87500286102295
    7. '_an' → logprob: -16.250001907348633
    8. '```' → logprob: -16.250001907348633
    9. ' _' → logprob: -16.375001907348633
    10. '_value' → logprob: -17.125001907348633

Token 372: '_print' (ID: 31509)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.07889077812433243
    2. '_print' → logprob: -2.578890800476074
    3. ' print' → logprob: -14.203890800476074
    4. '```' → logprob: -16.203889846801758
    5. '(print' → logprob: -16.953889846801758
    6. '#print' → logprob: -17.828889846801758
    7. 'println' → logprob: -18.078889846801758
    8. 'Print' → logprob: -18.203889846801758
    9. 'printed' → logprob: -18.203889846801758
    10. '	print' → logprob: -18.328889846801758

Token 373: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.00015860427811276168
    2. 'max' → logprob: -8.750158309936523
    3. 'a' → logprob: -17.000158309936523
    4. '(max' → logprob: -17.375158309936523
    5. '```' → logprob: -17.625158309936523
    6. 'Max' → logprob: -18.625158309936523
    7. '_MAX' → logprob: -19.500158309936523
    8. 'maximum' → logprob: -20.125158309936523
    9. '`' → logprob: -20.250158309936523
    10. '_min' → logprob: -20.500158309936523

Token 374: '_mark' (ID: 42901)
  Prédit: '_mark'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mark' → logprob: -0.00023810577113181353
    2. 'marked' → logprob: -8.375238418579102
    3. 'ed' → logprob: -12.750238418579102
    4. '(mark' → logprob: -13.375238418579102
    5. '_marker' → logprob: -14.375238418579102
    6. '_max' → logprob: -14.375238418579102
    7. '(a' → logprob: -14.625238418579102
    8. 'arked' → logprob: -14.625238418579102
    9. '```' → logprob: -15.125238418579102
    10. 'Marked' → logprob: -15.375238418579102

Token 375: 'ed' (ID: 295)
  Prédit: 'ed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -1.3856492842023727e-06
    2. 'ked' → logprob: -14.125000953674316
    3. 'arked' → logprob: -14.500000953674316
    4. 'ед' → logprob: -17.375001907348633
    5. '[' → logprob: -17.625001907348633
    6. 'edf' → logprob: -18.250001907348633
    7. 'eded' → logprob: -18.625001907348633
    8. '_ed' → logprob: -18.875001907348633
    9. 'ED' → logprob: -18.875001907348633
    10. '(' → logprob: -19.125001907348633

Token 376: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -3.650518920039758e-06
    2. '```' → logprob: -12.625003814697266
    3. 'a' → logprob: -15.750003814697266
    4. '(' → logprob: -16.250003814697266
    5. ' (' → logprob: -17.000003814697266
    6. '   ' → logprob: -18.125003814697266
    7. '(
' → logprob: -18.625003814697266
    8. '(ai' → logprob: -18.750003814697266
    9. '`' → logprob: -19.875003814697266
    10. '\(' → logprob: -19.875003814697266

Token 377: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003521556267514825
    2. ',a' → logprob: -6.25352144241333
    3. '(a' → logprob: -6.50352144241333
    4. '(' → logprob: -10.128521919250488
    5. 'a' → logprob: -10.503521919250488
    6. ' ,' → logprob: -11.128521919250488
    7. '   ' → logprob: -11.753521919250488
    8. '```' → logprob: -13.878521919250488
    9. ',
' → logprob: -14.003521919250488
    10. ')' → logprob: -14.253521919250488

Token 378: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.023246178403496742
    2. ' x' → logprob: -3.7732462882995605
    3. '   ' → logprob: -14.523245811462402
    4. '	x' → logprob: -15.523245811462402
    5. ')' → logprob: -17.02324676513672
    6. ')x' → logprob: -17.77324676513672
    7. ' ' → logprob: -18.52324676513672
    8. '(x' → logprob: -19.27324676513672
    9. '
' → logprob: -19.89824676513672
    10. '{x' → logprob: -20.02324676513672

Token 379: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.3676733690081164e-05
    2. ')
' → logprob: -10.75002384185791
    3. ' )' → logprob: -13.50002384185791
    4. '))' → logprob: -15.37502384185791
    5. ')#' → logprob: -15.87502384185791
    6. '   ' → logprob: -16.125022888183594
    7. ')

' → logprob: -16.250022888183594
    8. ')`' → logprob: -17.000022888183594
    9. '())' → logprob: -17.375022888183594
    10. ')return' → logprob: -17.375022888183594

Token 380: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.12694647908210754
    2. 'if' → logprob: -2.126946449279785
    3. '(main' → logprob: -11.626946449279785
    4. ' main' → logprob: -12.501946449279785
    5. 'get' → logprob: -13.126946449279785
    6. '#' → logprob: -14.001946449279785
    7. ' if' → logprob: -14.001946449279785
    8. '```' → logprob: -14.251946449279785
    9. '<|end|>' → logprob: -14.876946449279785
    10. '	main' → logprob: -15.001946449279785

Token 381: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.07059093564748764
    2. '_' → logprob: -2.6955909729003906
    3. '()' → logprob: -7.570590972900391
    4. '__' → logprob: -9.82059097290039
    5. '(' → logprob: -10.69559097290039
    6. '_solver' → logprob: -11.32059097290039
    7. ' _' → logprob: -11.94559097290039
    8. '_main' → logprob: -12.07059097290039
    9. 'solve' → logprob: -12.07059097290039
    10. '(_)' → logprob: -12.44559097290039

Token 382: 'olve' (ID: 11460)
  Prédit: 'olve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'olve' → logprob: -0.00523612555116415
    2. 'solve' → logprob: -5.2552361488342285
    3. 'main' → logprob: -13.38023567199707
    4. 'ol' → logprob: -15.63023567199707
    5. 'o' → logprob: -16.00523567199707
    6. 'olv' → logprob: -16.38023567199707
    7. 'ove' → logprob: -16.63023567199707
    8. '_' → logprob: -16.63023567199707
    9. 'olver' → logprob: -16.63023567199707
    10. 'OLVE' → logprob: -16.88023567199707

Token 383: '()' (ID: 416)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.26965561509132385
    2. '<|end|>' → logprob: -2.269655704498291
    3. '```' → logprob: -3.019655704498291
    4. '#' → logprob: -3.644655704498291
    5. '()' → logprob: -4.144655704498291
    6. '
' → logprob: -4.644655704498291
    7. ':' → logprob: -4.894655704498291
    8. '<|end|>' → logprob: -5.019655704498291
    9. '[' → logprob: -5.269655704498291
    10. '(' → logprob: -5.519655704498291


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 381
Tokens correctement prédits (1ère position, stricte): 179
Tokens correctement prédits (1ère position, avec adaptation): 193
Tokens correctement prédits (top 10): 323
Précision stricte (1ère position): 46.98%
Précision adaptée (1ère position): 50.66%
Précision (top 10): 84.78%
================================================================================
