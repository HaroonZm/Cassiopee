================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:39:24
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n = int(input())
result = n // 2
if n % 2 != 0:
    result += 1
result = result - 1
print(result)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00010807292710524052
    2. '(n' → logprob: -10.250107765197754
    3. ''' → logprob: -10.625107765197754
    4. '('' → logprob: -11.375107765197754
    5. '```' → logprob: -11.625107765197754
    6. '(
' → logprob: -12.000107765197754
    7. '("("' → logprob: -12.375107765197754
    8. '()' → logprob: -12.375107765197754
    9. '`' → logprob: -12.500107765197754
    10. ')' → logprob: -13.125107765197754

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0733630508184433
    2. ')' → logprob: -2.8233630657196045
    3. '()' → logprob: -4.698362827301025
    4. '())' → logprob: -6.948362827301025
    5. '```' → logprob: -8.198363304138184
    6. '(
' → logprob: -8.448363304138184
    7. '('' → logprob: -8.948363304138184
    8. '(()' → logprob: -9.073363304138184
    9. '`' → logprob: -9.198363304138184
    10. '("("' → logprob: -9.698363304138184

Token 5: 'result' (ID: 2521)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.0521364212036133
    2. 'for' → logprob: -1.3021364212036133
    3. 'if' → logprob: -1.4271364212036133
    4. 's' → logprob: -3.1771364212036133
    5. 'f' → logprob: -4.177136421203613
    6. 'x' → logprob: -4.177136421203613
    7. 'a' → logprob: -4.552136421203613
    8. ')' → logprob: -4.677136421203613
    9. ' ' → logprob: -4.677136421203613
    10. '*' → logprob: -4.927136421203613

Token 6: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.1517013311386108
    2. '[' → logprob: -1.1517013311386108
    3. ' =' → logprob: -1.9017013311386108
    4. '+' → logprob: -2.1517014503479004
    5. '(' → logprob: -3.1517014503479004
    6. ')' → logprob: -4.2767014503479
    7. ' +=' → logprob: -4.4017014503479
    8. '_' → logprob: -4.7767014503479
    9. ' ' → logprob: -4.9017014503479
    10. '.' → logprob: -5.2767014503479

Token 7: ' n' (ID: 297)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4454847574234009
    2. '0' → logprob: -1.4454847574234009
    3. ' n' → logprob: -2.4454846382141113
    4. 'n' → logprob: -3.9454846382141113
    5. ' []' → logprob: -4.945484638214111
    6. '"' → logprob: -5.195484638214111
    7. '1' → logprob: -6.695484638214111
    8. ''' → logprob: -6.945484638214111
    9. ' "' → logprob: -6.945484638214111
    10. '[]' → logprob: -7.570484638214111

Token 8: ' //' (ID: 602)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.10990859568119049
    2. '*' → logprob: -2.6099085807800293
    3. '**' → logprob: -4.109908580780029
    4. ' +' → logprob: -5.359908580780029
    5. '%' → logprob: -6.109908580780029
    6. '_' → logprob: -6.484908580780029
    7. '#' → logprob: -6.984908580780029
    8. ' ' → logprob: -7.234908580780029
    9. '<|end|>' → logprob: -7.234908580780029
    10. ')' → logprob: -7.359908580780029

Token 9: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.021456614136695862
    2. '10' → logprob: -4.396456718444824
    3. '3' → logprob: -5.396456718444824
    4. '100' → logprob: -6.146456718444824
    5. ' ' → logprob: -6.896456718444824
    6. '5' → logprob: -7.021456718444824
    7. '4' → logprob: -9.146456718444824
    8. '1' → logprob: -9.271456718444824
    9. '7' → logprob: -9.396456718444824
    10. '60' → logprob: -11.896456718444824

Token 10: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.16470113396644592
    2. '10' → logprob: -2.039701223373413
    3. '3' → logprob: -4.289700984954834
    4. '5' → logprob: -5.164700984954834
    5. '100' → logprob: -7.039700984954834
    6. '7' → logprob: -7.289700984954834
    7. '1' → logprob: -8.164701461791992
    8. '4' → logprob: -8.164701461791992
    9. '12' → logprob: -10.039701461791992
    10. '6' → logprob: -10.289701461791992

Token 11: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00727803772315383
    2. 'if' → logprob: -5.882277965545654
    3. '*' → logprob: -6.382277965545654
    4. '+
' → logprob: -6.757277965545654
    5. ' if' → logprob: -7.257277965545654
    6. '%' → logprob: -7.882277965545654
    7. ' +' → logprob: -8.382278442382812
    8. '
' → logprob: -9.757278442382812
    9. 'print' → logprob: -10.132278442382812
    10. '\' → logprob: -10.382278442382812

Token 12: 'if' (ID: 366)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.055805593729019165
    2. 'print' → logprob: -3.6808056831359863
    3. 'if' → logprob: -3.9308056831359863
    4. '%' → logprob: -5.555805683135986
    5. ' if' → logprob: -6.055805683135986
    6. '+
' → logprob: -6.430805683135986
    7. '*' → logprob: -7.055805683135986
    8. '#' → logprob: -8.305805206298828
    9. '
' → logprob: -9.180805206298828
    10. '\n' → logprob: -9.430805206298828

Token 13: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.5826497673988342
    2. ' result' → logprob: -0.8326497673988342
    3. ' ' → logprob: -5.0826497077941895
    4. 'n' → logprob: -8.332650184631348
    5. 'result' → logprob: -8.707650184631348
    6. ' ' → logprob: -10.082650184631348
    7. ' not' → logprob: -10.332650184631348
    8. ' results' → logprob: -13.832650184631348
    9. ' (' → logprob: -14.082650184631348
    10. '(result' → logprob: -14.332650184631348

Token 14: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.08873921632766724
    2. '%' → logprob: -3.0887391567230225
    3. ' ' → logprob: -3.7137391567230225
    4. ' >' → logprob: -4.713739395141602
    5. '>' → logprob: -5.338739395141602
    6. ' >=' → logprob: -7.338739395141602
    7. ' ==' → logprob: -8.338739395141602
    8. ' <' → logprob: -9.088739395141602
    9. ' <=' → logprob: -9.963739395141602
    10. '==' → logprob: -10.463739395141602

Token 15: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.5231252312660217
    2. ' ' → logprob: -0.8981252312660217
    3. '```' → logprob: -14.148125648498535
    4. ' ' → logprob: -15.148125648498535
    5. '3' → logprob: -15.273125648498535
    6. '4' → logprob: -15.773125648498535
    7. '1' → logprob: -16.02312469482422
    8. '  ' → logprob: -16.14812469482422
    9. '<|end|>' → logprob: -16.39812469482422
    10. ')' → logprob: -17.14812469482422

Token 16: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.2020991056924686e-05
    2. ' ' → logprob: -10.375032424926758
    3. '3' → logprob: -14.875032424926758
    4. '```' → logprob: -15.500032424926758
    5. '1' → logprob: -16.625032424926758
    6. '4' → logprob: -17.000032424926758
    7. '  ' → logprob: -18.812532424926758
    8. '0' → logprob: -19.125032424926758
    9. '>' → logprob: -19.312532424926758
    10. '۲' → logprob: -19.437532424926758

Token 17: ' !=' (ID: 1666)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.08872994035482407
    2. '==' → logprob: -2.7137298583984375
    3. ' !=' → logprob: -4.0887298583984375
    4. '!=' → logprob: -7.3387298583984375
    5. ' ' → logprob: -8.088729858398438
    6. ':' → logprob: -8.213729858398438
    7. '=' → logprob: -8.463729858398438
    8. '>' → logprob: -8.463729858398438
    9. ' =' → logprob: -9.088729858398438
    10. ' >' → logprob: -10.338729858398438

Token 18: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4740999937057495
    2. '0' → logprob: -0.9740999937057495
    3. '=' → logprob: -10.724100112915039
    4. ' ' → logprob: -14.224100112915039
    5. '1' → logprob: -16.47410011291504
    6. '```' → logprob: -16.47410011291504
    7. '  ' → logprob: -17.09910011291504
    8. '2' → logprob: -17.22410011291504
    9. ' =' → logprob: -17.47410011291504
    10. ' ' → logprob: -18.09910011291504

Token 19: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.029834488406777382
    2. ' ' → logprob: -3.529834508895874
    3. '2' → logprob: -9.404834747314453
    4. '=' → logprob: -14.404834747314453
    5. '1' → logprob: -14.904834747314453
    6. '   ' → logprob: -15.779834747314453
    7. '```' → logprob: -16.029834747314453
    8. '  ' → logprob: -16.092334747314453
    9. ' ' → logprob: -16.092334747314453
    10. '==' → logprob: -17.467334747314453

Token 20: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.4021237802808173e-05
    2. ' :' → logprob: -11.625014305114746
    3. ':
' → logprob: -12.750014305114746
    4. '):' → logprob: -13.750014305114746
    5. ':**' → logprob: -14.250014305114746
    6. '>:' → logprob: -16.25001335144043
    7. '':' → logprob: -16.50001335144043
    8. '':'' → logprob: -17.75001335144043
    9. ':return' → logprob: -17.87501335144043
    10. ':\' → logprob: -18.00001335144043

Token 21: '   ' (ID: 271)
  Prédit: ' result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' result' → logprob: -1.1968709230422974
    2. ' ' → logprob: -1.5718709230422974
    3. 'result' → logprob: -1.6968709230422974
    4. ' 
' → logprob: -2.446870803833008
    5. '    ' → logprob: -3.071870803833008
    6. '```' → logprob: -3.071870803833008
    7. '+' → logprob: -3.196870803833008
    8. '\' → logprob: -3.446870803833008
    9. '     
' → logprob: -4.321870803833008
    10. '\n' → logprob: -5.196870803833008

Token 22: ' result' (ID: 1534)
  Prédit: ' result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' result' → logprob: -0.22099217772483826
    2. 'result' (adapté à ' result') → logprob: -2.220992088317871
    3. ' 
' → logprob: -3.095992088317871
    4. '   ' → logprob: -3.595992088317871
    5. ' ' → logprob: -5.095992088317871
    6. '    ' → logprob: -6.470992088317871
    7. '    
' → logprob: -6.720992088317871
    8. '1' → logprob: -6.845992088317871
    9. ' \' → logprob: -6.845992088317871
    10. '\' → logprob: -6.845992088317871

Token 23: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.008411381393671036
    2. '+=' → logprob: -4.883411407470703
    3. '+' → logprob: -8.508411407470703
    4. ' =' → logprob: -8.633411407470703
    5. ' -=' → logprob: -9.008411407470703
    6. '```' → logprob: -9.133411407470703
    7. '    ' → logprob: -9.758411407470703
    8. ' *=' → logprob: -10.133411407470703
    9. ' ' → logprob: -10.133411407470703
    10. '=' → logprob: -10.758411407470703

Token 24: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.20172126591205597
    2. '1' → logprob: -1.7017213106155396
    3. ' n' → logprob: -8.20172119140625
    4. ' (' → logprob: -10.95172119140625
    5. 'n' → logprob: -11.70172119140625
    6. '  ' → logprob: -13.82672119140625
    7. '2' → logprob: -14.07672119140625
    8. ' ' → logprob: -14.07672119140625
    9. '(' → logprob: -14.26422119140625
    10. '0' → logprob: -14.32672119140625

Token 25: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0019691966008394957
    2. 'n' → logprob: -7.001969337463379
    3. ' ' → logprob: -7.126969337463379
    4. '(n' → logprob: -9.126969337463379
    5. '2' → logprob: -10.126969337463379
    6. '-' → logprob: -10.251969337463379
    7. '3' → logprob: -11.001969337463379
    8. ' n' → logprob: -11.126969337463379
    9. '(' → logprob: -11.251969337463379
    10. '5' → logprob: -12.376969337463379

Token 26: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0355052724480629
    2. '
' → logprob: -3.9105052947998047
    3. '\n' → logprob: -5.660505294799805
    4. ')' → logprob: -5.910505294799805
    5. '#' → logprob: -6.035505294799805
    6. '\' → logprob: -6.410505294799805
    7. ' print' → logprob: -6.660505294799805
    8. '```' → logprob: -6.910505294799805
    9. '<|end|>' → logprob: -7.160505294799805
    10. ' ' → logprob: -8.035505294799805

Token 27: 'result' (ID: 2521)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.8082168698310852
    2. '
' → logprob: -1.5582168102264404
    3. 'print' → logprob: -2.0582168102264404
    4. '\' → logprob: -2.6832168102264404
    5. '<|end|>' → logprob: -3.0582168102264404
    6. '#' → logprob: -3.5582168102264404
    7. '```' → logprob: -3.6832168102264404
    8. ')' → logprob: -3.8082168102264404
    9. 'result' → logprob: -5.0582170486450195
    10. ' ' → logprob: -5.4332170486450195

Token 28: ' =' (ID: 314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 29: ' result' (ID: 1534)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.21490968763828278
    2. ' ' → logprob: -2.214909791946411
    3. 'n' → logprob: -3.214909791946411
    4. '0' → logprob: -4.714909553527832
    5. ' max' → logprob: -4.839909553527832
    6. ' "' → logprob: -5.089909553527832
    7. ' '' → logprob: -5.589909553527832
    8. ' result' → logprob: -5.589909553527832
    9. '"' → logprob: -5.839909553527832
    10. ' min' → logprob: -5.964909553527832

Token 30: ' -' (ID: 533)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.010790417902171612
    2. '<|end|>' → logprob: -5.2607903480529785
    3. '*' → logprob: -5.8857903480529785
    4. ' %' → logprob: -6.8857903480529785
    5. '```' → logprob: -7.8857903480529785
    6. '#' → logprob: -8.260790824890137
    7. ' ' → logprob: -8.260790824890137
    8. '
' → logprob: -8.385790824890137
    9. ')' → logprob: -8.760790824890137
    10. '+' → logprob: -8.885790824890137

Token 31: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5232909321784973
    2. ' ' → logprob: -0.8982909321784973
    3. ' n' → logprob: -9.273290634155273
    4. '2' → logprob: -10.398290634155273
    5. ' (' → logprob: -10.648290634155273
    6. '(' → logprob: -12.148290634155273
    7. 'n' → logprob: -12.648290634155273
    8. '0' → logprob: -12.773290634155273
    9. '-' → logprob: -13.398290634155273
    10. '(n' → logprob: -13.398290634155273

Token 32: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0014936764491721988
    2. ' ' → logprob: -7.001493453979492
    3. 'n' → logprob: -8.376493453979492
    4. '2' → logprob: -8.626493453979492
    5. '(n' → logprob: -9.751493453979492
    6. '(' → logprob: -10.376493453979492
    7. '0' → logprob: -10.751493453979492
    8. 'result' → logprob: -11.126493453979492
    9. '3' → logprob: -11.251493453979492
    10. ' n' → logprob: -11.376493453979492

Token 33: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.16434557735919952
    2. '<|end|>' → logprob: -2.6643455028533936
    3. '\n' → logprob: -3.1643455028533936
    4. '+' → logprob: -4.164345741271973
    5. '*' → logprob: -4.539345741271973
    6. '```' → logprob: -5.914345741271973
    7. '#' → logprob: -6.164345741271973
    8. ' ' → logprob: -6.539345741271973
    9. '\' → logprob: -6.539345741271973
    10. ')' → logprob: -6.539345741271973

Token 34: 'print' (ID: 1598)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.20109906792640686
    2. 'print' → logprob: -2.826099157333374
    3. '\n' → logprob: -2.951099157333374
    4. '<|end|>' → logprob: -3.576099157333374
    5. '\' → logprob: -4.701098918914795
    6. '*' → logprob: -4.826098918914795
    7. '+' → logprob: -5.076098918914795
    8. ' ' → logprob: -5.701098918914795
    9. '%' → logprob: -5.701098918914795
    10. '```' → logprob: -5.701098918914795

Token 35: '(result' (ID: 8111)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0005557744298130274
    2. '(result' → logprob: -7.500555992126465
    3. '()' → logprob: -13.875555992126465
    4. '("("' → logprob: -14.500555992126465
    5. '('' → logprob: -15.000555992126465
    6. '(
' → logprob: -15.375555992126465
    7. '(

' → logprob: -15.375555992126465
    8. ' (' → logprob: -15.750555992126465
    9. '((' → logprob: -16.37555503845215
    10. '(res' → logprob: -16.75055503845215

Token 36: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.128163257315464e-07
    2. ' )' → logprob: -15.875
    3. '))' → logprob: -16.25
    4. ')
' → logprob: -18.375
    5. ')`' → logprob: -18.625
    6. '')' → logprob: -20.125
    7. ')))' → logprob: -20.875
    8. '(' → logprob: -21.125
    9. '`)' → logprob: -21.25
    10. '}' → logprob: -21.25


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 34
Tokens correctement prédits (1ère position, stricte): 13
Tokens correctement prédits (1ère position, avec adaptation): 13
Tokens correctement prédits (top 10): 27
Précision stricte (1ère position): 38.24%
Précision adaptée (1ère position): 38.24%
Précision (top 10): 79.41%
================================================================================
