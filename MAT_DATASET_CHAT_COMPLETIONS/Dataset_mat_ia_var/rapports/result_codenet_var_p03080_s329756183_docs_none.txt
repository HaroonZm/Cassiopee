================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:04:16
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
N = int(input())
S = input()
R = 0
B = 0
for i in S:
    if i == "R":
        R += 1
    else:
        B += 1
if R > B:
    print("Yes")
else:
    print("No")
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'N' (ID: 45)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0001940040965564549
    2. '```' → logprob: -9.50019359588623
    3. '(N' → logprob: -10.50019359588623
    4. '`' → logprob: -10.87519359588623
    5. '(
' → logprob: -11.00019359588623
    6. ')' → logprob: -11.62519359588623
    7. '("("' → logprob: -11.62519359588623
    8. ''' → logprob: -11.62519359588623
    9. '()' → logprob: -11.75019359588623
    10. '('' → logprob: -12.25019359588623

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4827296733856201
    2. ')' → logprob: -0.9827296733856201
    3. '()' → logprob: -5.107729911804199
    4. '())' → logprob: -6.732729911804199
    5. '(
' → logprob: -7.732729911804199
    6. '```' → logprob: -8.7327299118042
    7. '))' → logprob: -9.1077299118042
    8. '")' → logprob: -9.3577299118042
    9. '')' → logprob: -9.4827299118042
    10. '(

' → logprob: -9.9827299118042

Token 5: 'S' (ID: 50)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2070285826921463
    2. 'if' → logprob: -2.95702862739563
    3. 's' → logprob: -3.33202862739563
    4. 'a' → logprob: -3.58202862739563
    5. ' for' → logprob: -4.582028388977051
    6. 'x' → logprob: -4.582028388977051
    7. '`' → logprob: -4.957028388977051
    8. 'result' → logprob: -5.207028388977051
    9. 'sum' → logprob: -5.457028388977051
    10. 'data' → logprob: -5.707028388977051

Token 6: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.1114034578204155
    2. '=' → logprob: -2.861403465270996
    3. '[' → logprob: -3.236403465270996
    4. ' =' → logprob: -4.861403465270996
    5. ')' → logprob: -8.236403465270996
    6. '_' → logprob: -8.486403465270996
    7. 'u' → logprob: -9.861403465270996
    8. '.=' → logprob: -9.861403465270996
    9. '[:]' → logprob: -9.986403465270996
    10. ':' → logprob: -9.986403465270996

Token 7: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.14295634627342224
    2. ' input' → logprob: -2.017956256866455
    3. '""' → logprob: -9.267956733703613
    4. ' ' → logprob: -9.892956733703613
    5. '"' → logprob: -10.267956733703613
    6. '=input' → logprob: -11.392956733703613
    7. '''' → logprob: -11.517956733703613
    8. '(input' → logprob: -11.642956733703613
    9. '[input' → logprob: -11.642956733703613
    10. ''' → logprob: -11.642956733703613

Token 8: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0845610573887825
    2. '()' → logprob: -2.5845611095428467
    3. ')' → logprob: -5.459560871124268
    4. ''' → logprob: -8.209561347961426
    5. '('' → logprob: -8.209561347961426
    6. '(
' → logprob: -8.834561347961426
    7. '```' → logprob: -8.959561347961426
    8. ' (' → logprob: -9.084561347961426
    9. '(

' → logprob: -9.334561347961426
    10. '`' → logprob: -9.584561347961426

Token 9: 'R' (ID: 49)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5592791438102722
    2. 'if' → logprob: -1.309279203414917
    3. 'count' → logprob: -2.809279203414917
    4. 'i' → logprob: -3.309279203414917
    5. 'f' → logprob: -3.934279203414917
    6. 'result' → logprob: -4.309278964996338
    7. 'c' → logprob: -5.059278964996338
    8. 'sum' → logprob: -5.434278964996338
    9. 'd' → logprob: -5.934278964996338
    10. 's' → logprob: -6.059278964996338

Token 10: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.32812413573265076
    2. '=' → logprob: -1.3281241655349731
    3. '[' → logprob: -4.703124046325684
    4. '.' → logprob: -6.078124046325684
    5. 'E' → logprob: -6.828124046325684
    6. '(' → logprob: -7.703124046325684
    7. 'e' → logprob: -8.078124046325684
    8. '.=' → logprob: -8.703124046325684
    9. '[:]' → logprob: -8.953124046325684
    10. '=[' → logprob: -9.203124046325684

Token 11: ' ' (ID: 220)
  Prédit: '""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '""' → logprob: -0.15353640913963318
    2. '''' → logprob: -2.153536319732666
    3. '"' → logprob: -5.028536319732666
    4. '[]' → logprob: -5.028536319732666
    5. ' ""' → logprob: -5.278536319732666
    6. 'S' → logprob: -6.278536319732666
    7. ''' → logprob: -6.653536319732666
    8. ' ''' → logprob: -6.778536319732666
    9. ' []' → logprob: -6.903536319732666
    10. ''S' → logprob: -7.278536319732666

Token 12: '0' (ID: 15)
  Prédit: '""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '""' → logprob: -0.12993104755878448
    2. '''' → logprob: -2.3799309730529785
    3. '[]' → logprob: -3.7549309730529785
    4. 'S' → logprob: -5.6299309730529785
    5. '"' → logprob: -7.1299309730529785
    6. '0' → logprob: -7.6299309730529785
    7. '[' → logprob: -8.004931449890137
    8. ''S' → logprob: -8.504931449890137
    9. ''' → logprob: -9.379931449890137
    10. '["' → logprob: -9.629931449890137

Token 13: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.23400834202766418
    2. ' for' → logprob: -2.109008312225342
    3. ' ' → logprob: -3.359008312225342
    4. 'f' → logprob: -3.609008312225342
    5. '+' → logprob: -4.609008312225342
    6. 'i' → logprob: -5.359008312225342
    7. '<|end|>' → logprob: -5.859008312225342
    8. '
' → logprob: -6.109008312225342
    9. ' 
' → logprob: -6.734008312225342
    10. 'F' → logprob: -7.359008312225342

Token 14: 'B' (ID: 33)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0006999264587648213
    2. ' for' → logprob: -8.125699996948242
    3. 'f' → logprob: -8.625699996948242
    4. 'i' → logprob: -8.625699996948242
    5. 'r' → logprob: -11.250699996948242
    6. '```' → logprob: -11.250699996948242
    7. 'F' → logprob: -12.000699996948242
    8. '
' → logprob: -12.125699996948242
    9. ' ' → logprob: -13.250699996948242
    10. '`' → logprob: -14.125699996948242

Token 15: ' =' (ID: 314)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.9101871848106384
    2. '=' → logprob: -0.9101871848106384
    3. ' =' → logprob: -2.285187244415283
    4. '+=' → logprob: -3.410187244415283
    5. ' +=' → logprob: -3.535187244415283
    6. ' ' → logprob: -3.785187244415283
    7. '_' → logprob: -5.660187244415283
    8. 'u' → logprob: -6.910187244415283
    9. 'r' → logprob: -7.410187244415283
    10. ',' → logprob: -7.535187244415283

Token 16: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.22550567984580994
    2. ' ' → logprob: -1.6005057096481323
    3. ''' → logprob: -10.975505828857422
    4. '1' → logprob: -11.475505828857422
    5. '"' → logprob: -11.600505828857422
    6. '''' → logprob: -11.850505828857422
    7. '[]' → logprob: -11.850505828857422
    8. ' []' → logprob: -12.100505828857422
    9. '""' → logprob: -12.350505828857422
    10. 'S' → logprob: -12.725505828857422

Token 17: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006220113136805594
    2. '[]' → logprob: -8.875621795654297
    3. '''' → logprob: -9.250621795654297
    4. 'R' → logprob: -9.250621795654297
    5. ' ' → logprob: -9.250621795654297
    6. 'S' → logprob: -10.125621795654297
    7. '1' → logprob: -10.250621795654297
    8. 'N' → logprob: -10.375621795654297
    9. '[' → logprob: -11.125621795654297
    10. '{}' → logprob: -11.250621795654297

Token 18: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.056477755308151245
    2. ' for' → logprob: -3.1814777851104736
    3. '
' → logprob: -4.4314775466918945
    4. '\n' → logprob: -6.9314775466918945
    5. '```' → logprob: -8.556477546691895
    6. '<|end|>' → logprob: -9.306477546691895
    7. '' → logprob: -9.681477546691895
    8. ' ' → logprob: -10.431477546691895
    9. ' 
' → logprob: -10.556477546691895
    10. 'r' → logprob: -10.806477546691895

Token 19: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.012562740594148636
    2. ' for' → logprob: -5.1375627517700195
    3. '
' → logprob: -5.1375627517700195
    4. '<|end|>' → logprob: -8.88756275177002
    5. 'r' → logprob: -9.13756275177002
    6. '\n' → logprob: -9.38756275177002
    7. 'i' → logprob: -9.51256275177002
    8. '' → logprob: -9.76256275177002
    9. 't' → logprob: -9.76256275177002
    10. '```' → logprob: -9.76256275177002

Token 20: ' i' (ID: 575)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.12815888226032257
    2. ' i' → logprob: -2.1281588077545166
    3. 'i' → logprob: -7.253159046173096
    4. '  ' → logprob: -8.128158569335938
    5. ' _' → logprob: -9.128158569335938
    6. '_' → logprob: -10.378158569335938
    7. ' ‌' → logprob: -10.753158569335938
    8. ' ' → logprob: -11.128158569335938
    9. ' )' → logprob: -11.378158569335938
    10. ' c' → logprob: -11.628158569335938

Token 21: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06410904228687286
    2. ' ' → logprob: -3.3141090869903564
    3. 'in' → logprob: -3.6891090869903564
    4. '  ' → logprob: -7.689108848571777
    5. '<|end|>' → logprob: -9.439108848571777
    6. '[' → logprob: -9.939108848571777
    7. ' i' → logprob: -10.064108848571777
    8. '_' → logprob: -10.814108848571777
    9. ')' → logprob: -11.564108848571777
    10. 's' → logprob: -12.001608848571777

Token 22: ' S' (ID: 336)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.012589586898684502
    2. 'range' → logprob: -4.387589454650879
    3. ' ' → logprob: -9.887589454650879
    4. ' S' → logprob: -10.762589454650879
    5. '(range' → logprob: -13.012589454650879
    6. ' xrange' → logprob: -13.512589454650879
    7. '	range' → logprob: -13.637589454650879
    8. ')' → logprob: -14.262589454650879
    9. '  ' → logprob: -14.387589454650879
    10. '_range' → logprob: -14.887589454650879

Token 23: ':
' (ID: 734)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.03956778347492218
    2. ':' → logprob: -3.539567708969116
    3. '[i' → logprob: -5.414567947387695
    4. '[:' → logprob: -6.039567947387695
    5. '[:]' → logprob: -7.039567947387695
    6. 'in' → logprob: -7.664567947387695
    7. '[]' → logprob: -8.039567947387695
    8. ' in' → logprob: -8.664567947387695
    9. '[in' → logprob: -8.664567947387695
    10. '[len' → logprob: -8.914567947387695

Token 24: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3913770020008087
    2. '   ' → logprob: -1.3913769721984863
    3. ':' → logprob: -3.2663769721984863
    4. '```' → logprob: -4.391376972198486
    5. ' if' → logprob: -4.516376972198486
    6. '    ' → logprob: -5.516376972198486
    7. ''' → logprob: -6.141376972198486
    8. ' ```' → logprob: -6.641376972198486
    9. 'if' → logprob: -6.766376972198486
    10. '  ' → logprob: -6.891376972198486

Token 25: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.6575046181678772
    2. ' if' → logprob: -1.0325045585632324
    3. ' ' → logprob: -2.2825045585632324
    4. '    ' → logprob: -4.532504558563232
    5. '   ' → logprob: -4.907504558563232
    6. 'i' → logprob: -5.782504558563232
    7. ' i' → logprob: -6.782504558563232
    8. '  ' → logprob: -7.907504558563232
    9. 's' → logprob: -7.907504558563232
    10. '```' → logprob: -9.28250503540039

Token 26: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.03445165604352951
    2. 'i' → logprob: -3.409451723098755
    3. ' ' → logprob: -7.159451484680176
    4. '  ' → logprob: -11.034451484680176
    5. ' ' → logprob: -11.909451484680176
    6. '	i' → logprob: -13.034451484680176
    7. '(i' → logprob: -13.784451484680176
    8. ' ‌' → logprob: -14.409451484680176
    9. '   ' → logprob: -15.409451484680176
    10. '[i' → logprob: -15.659451484680176

Token 27: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.3156196177005768
    2. '==' → logprob: -1.3156195878982544
    3. '=' → logprob: -6.815619468688965
    4. ' ' → logprob: -7.315619468688965
    5. ''' → logprob: -8.565619468688965
    6. ' in' → logprob: -9.440619468688965
    7. '=='' → logprob: -9.440619468688965
    8. ' =='' → logprob: -9.565619468688965
    9. ' =' → logprob: -10.065619468688965
    10. '[' → logprob: -10.565619468688965

Token 28: ' "' (ID: 392)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.004099416080862284
    2. '"' → logprob: -5.629099369049072
    3. ' '' → logprob: -8.37909984588623
    4. ' ' → logprob: -8.50409984588623
    5. ''A' → logprob: -11.12909984588623
    6. ''S' → logprob: -11.37909984588623
    7. 'R' → logprob: -11.75409984588623
    8. '`' → logprob: -12.00409984588623
    9. ''O' → logprob: -12.12909984588623
    10. ''r' → logprob: -12.37909984588623

Token 29: 'R' (ID: 49)
  Prédit: 'R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.021105000749230385
    2. ''' → logprob: -4.14610481262207
    3. 'B' → logprob: -5.52110481262207
    4. '"' → logprob: -7.02110481262207
    5. '0' → logprob: -10.39610481262207
    6. 'A' → logprob: -10.64610481262207
    7. '?' → logprob: -11.52110481262207
    8. '_R' → logprob: -11.64610481262207
    9. 'N' → logprob: -11.77110481262207
    10. 'W' → logprob: -11.95860481262207

Token 30: '":
' (ID: 9213)
  Prédit: '":'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '":' → logprob: -0.07008515298366547
    2. '"' → logprob: -2.695085048675537
    3. ' ":' → logprob: -9.945085525512695
    4. '"):' → logprob: -10.070085525512695
    5. ':' → logprob: -10.570085525512695
    6. ' "' → logprob: -11.320085525512695
    7. '":
' → logprob: -11.945085525512695
    8. '">' → logprob: -12.570085525512695
    9. '":
' → logprob: -13.070085525512695
    10. '"]:' → logprob: -13.070085525512695

Token 31: '       ' (ID: 309)
  Prédit: ' R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' R' → logprob: -0.46983814239501953
    2. '       ' → logprob: -1.0948381423950195
    3. 'R' → logprob: -4.4698381423950195
    4. ':' → logprob: -4.8448381423950195
    5. '   ' → logprob: -4.9698381423950195
    6. ' ' → logprob: -4.9698381423950195
    7. '    ' → logprob: -5.7198381423950195
    8. '<|end|>' → logprob: -6.4698381423950195
    9. '	R' → logprob: -7.3448381423950195
    10. '      ' → logprob: -8.34483814239502

Token 32: ' R' (ID: 460)
  Prédit: ' R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' R' → logprob: -0.014325924217700958
    2. 'R' (adapté à ' R') → logprob: -4.264326095581055
    3. '   ' → logprob: -9.639326095581055
    4. ' ' → logprob: -9.889326095581055
    5. '    ' → logprob: -10.514326095581055
    6. '           ' → logprob: -12.264326095581055
    7. '       ' → logprob: -12.764326095581055
    8. '	R' → logprob: -12.764326095581055
    9. ' ' → logprob: -13.514326095581055
    10. ' 
' → logprob: -13.639326095581055

Token 33: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.3136347234249115
    2. ' +=' → logprob: -1.3136347532272339
    3. '+' → logprob: -7.938634872436523
    4. '=' → logprob: -11.313634872436523
    5. ' +' → logprob: -13.188634872436523
    6. ' =' → logprob: -14.188634872436523
    7. ']+=' → logprob: -14.313634872436523
    8. '+='' → logprob: -14.813634872436523
    9. '+="' → logprob: -15.063634872436523
    10. ' ' → logprob: -16.313634872436523

Token 34: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.054882392287254333
    2. ' ' → logprob: -2.929882287979126
    3. '   ' → logprob: -16.554882049560547
    4. '  ' → logprob: -17.492382049560547
    5. '<|end|>' → logprob: -17.867382049560547
    6. ' ' → logprob: -17.992382049560547
    7. '１' → logprob: -17.992382049560547
    8. '+' → logprob: -18.179882049560547
    9. '۱' → logprob: -18.179882049560547
    10. '```' → logprob: -18.367382049560547

Token 35: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005530327325686812
    2. ' ' → logprob: -7.500553131103516
    3. '   ' → logprob: -17.500553131103516
    4. '１' → logprob: -17.563053131103516
    5. '  ' → logprob: -18.438053131103516
    6. '+' → logprob: -18.500553131103516
    7. '۱' → logprob: -18.750553131103516
    8. '2' → logprob: -18.938053131103516
    9. '```' → logprob: -19.063053131103516
    10. '0' → logprob: -19.250553131103516

Token 36: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26311376690864563
    2. '<|end|>' → logprob: -2.1381137371063232
    3. ' else' → logprob: -2.6381137371063232
    4. 'else' → logprob: -4.388113975524902
    5. ' elif' → logprob: -4.513113975524902
    6. ' ' → logprob: -4.763113975524902
    7. 'elif' → logprob: -5.388113975524902
    8. '
' → logprob: -6.263113975524902
    9. '<|end|>' → logprob: -7.388113975524902
    10. '	elif' → logprob: -7.513113975524902

Token 37: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7302737832069397
    2. ' else' → logprob: -1.230273723602295
    3. ' elif' → logprob: -1.855273723602295
    4. 'elif' → logprob: -3.355273723602295
    5. 'else' → logprob: -3.855273723602295
    6. ' ' → logprob: -4.730273723602295
    7. '<|end|>' → logprob: -6.105273723602295
    8. '    ' → logprob: -7.230273723602295
    9. '	elif' → logprob: -7.230273723602295
    10. '  ' → logprob: -7.855273723602295

Token 38: ' else' (ID: 1203)
  Prédit: ' elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' elif' → logprob: -0.4871886372566223
    2. ' else' → logprob: -1.4871885776519775
    3. 'elif' → logprob: -2.1121885776519775
    4. 'else' (adapté à ' else') → logprob: -3.4871885776519775
    5. '   ' → logprob: -5.112188816070557
    6. ' ' → logprob: -6.487188816070557
    7. '	elif' → logprob: -8.237188339233398
    8. '    ' → logprob: -9.237188339233398
    9. 'e' → logprob: -9.862188339233398
    10. '```' → logprob: -10.237188339233398

Token 39: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008602043613791466
    2. ':
' → logprob: -5.258602142333984
    3. ' B' → logprob: -6.008602142333984
    4. 'B' → logprob: -8.133602142333984
    5. '       ' → logprob: -8.383602142333984
    6. '   ' → logprob: -8.758602142333984
    7. ':B' → logprob: -9.258602142333984
    8. '    ' → logprob: -9.758602142333984
    9. ' :' → logprob: -10.883602142333984
    10. ':

' → logprob: -11.883602142333984

Token 40: '       ' (ID: 309)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.11297521740198135
    2. ' B' → logprob: -2.2379751205444336
    3. '   ' → logprob: -9.362975120544434
    4. '    ' → logprob: -10.237975120544434
    5. '       ' → logprob: -11.737975120544434
    6. '```' → logprob: -11.737975120544434
    7. ' ' → logprob: -12.112975120544434
    8. '`' → logprob: -13.112975120544434
    9. '           ' → logprob: -13.612975120544434
    10. '        ' → logprob: -13.737975120544434

Token 41: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' (adapté à ' B') → logprob: -0.3869438171386719
    2. ' B' → logprob: -1.1369438171386719
    3. '   ' → logprob: -10.386943817138672
    4. '    ' → logprob: -11.136943817138672
    5. ' ' → logprob: -11.511943817138672
    6. ' ' → logprob: -12.261943817138672
    7. '```' → logprob: -12.511943817138672
    8. '`' → logprob: -12.636943817138672
    9. '       ' → logprob: -13.886943817138672
    10. '  ' → logprob: -14.636943817138672

Token 42: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.062211353331804276
    2. ' +=' → logprob: -2.812211275100708
    3. '+' → logprob: -8.437211036682129
    4. '=' → logprob: -10.687211036682129
    5. ']+=' → logprob: -13.187211036682129
    6. '+="' → logprob: -14.812211036682129
    7. '++' → logprob: -14.812211036682129
    8. '+='' → logprob: -14.812211036682129
    9. ' +' → logprob: -15.187211036682129
    10. ' ' → logprob: -15.187211036682129

Token 43: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01603436842560768
    2. ' ' → logprob: -4.1410346031188965
    3. '   ' → logprob: -16.641035079956055
    4. '<|end|>' → logprob: -17.141035079956055
    5. '１' → logprob: -18.266035079956055
    6. '  ' → logprob: -18.266035079956055
    7. '```' → logprob: -18.391035079956055
    8. ' ' → logprob: -18.391035079956055
    9. '0' → logprob: -19.203535079956055
    10. '_' → logprob: -19.641035079956055

Token 44: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.15310683415737e-05
    2. ' ' → logprob: -10.750021934509277
    3. '```' → logprob: -18.62502098083496
    4. '１' → logprob: -19.25002098083496
    5. '-' → logprob: -19.25002098083496
    6. '<|end|>' → logprob: -19.75002098083496
    7. '   ' → logprob: -19.87502098083496
    8. '۱' → logprob: -19.93752098083496
    9. '१' → logprob: -20.50002098083496
    10. '  ' → logprob: -20.75002098083496

Token 45: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.1615564823150635
    2. 'if' → logprob: -1.1615564823150635
    3. 'print' → logprob: -1.6615564823150635
    4. '<|end|>' → logprob: -2.7865564823150635
    5. '```' → logprob: -3.4115564823150635
    6. 'i' → logprob: -4.286556243896484
    7. 'n' → logprob: -4.536556243896484
    8. '#' → logprob: -4.536556243896484
    9. '\n' → logprob: -4.911556243896484
    10. 'R' → logprob: -5.036556243896484

Token 46: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2016746997833252
    2. 'print' → logprob: -2.576674699783325
    3. 'i' → logprob: -3.326674699783325
    4. 'max' → logprob: -3.326674699783325
    5. 'r' → logprob: -4.576674461364746
    6. 'R' → logprob: -5.201674461364746
    7. 'for' → logprob: -5.701674461364746
    8. 'p' → logprob: -5.826674461364746
    9. '```' → logprob: -6.576674461364746
    10. 'count' → logprob: -6.701674461364746

Token 47: ' R' (ID: 460)
  Prédit: ' R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' R' → logprob: -0.0022851452231407166
    2. 'R' → logprob: -6.377285003662109
    3. ' B' → logprob: -8.25228500366211
    4. ' ' → logprob: -8.50228500366211
    5. ' ' → logprob: -9.25228500366211
    6. ' S' → logprob: -11.87728500366211
    7. ' max' → logprob: -12.62728500366211
    8. ' abs' → logprob: -12.87728500366211
    9. 'B' → logprob: -13.00228500366211
    10. '  ' → logprob: -13.25228500366211

Token 48: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.6327831149101257
    2. '>' → logprob: -0.7577831149101257
    3. ' >=' → logprob: -10.257782936096191
    4. '>=' → logprob: -10.507782936096191
    5. ' ' → logprob: -10.632782936096191
    6. '==' → logprob: -10.882782936096191
    7. ' ==' → logprob: -11.007782936096191
    8. '<' → logprob: -11.132782936096191
    9. ' <' → logprob: -11.132782936096191
    10. '>B' → logprob: -11.632782936096191

Token 49: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.04859986528754234
    2. ' B' → logprob: -3.0485999584198
    3. ' ' → logprob: -11.548600196838379
    4. '0' → logprob: -13.048600196838379
    5. '>B' → logprob: -15.423600196838379
    6. '<|end|>' → logprob: -15.548600196838379
    7. '  ' → logprob: -16.298599243164062
    8. '	B' → logprob: -16.548599243164062
    9. '=B' → logprob: -16.923599243164062
    10. 'b' → logprob: -16.923599243164062

Token 50: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00023750975378789008
    2. ':
' → logprob: -8.375237464904785
    3. ' :' → logprob: -13.125237464904785
    4. 'print' → logprob: -13.750237464904785
    5. '   ' → logprob: -13.875237464904785
    6. '>' → logprob: -14.000237464904785
    7. '):' → logprob: -15.000237464904785
    8. '.' → logprob: -15.000237464904785
    9. ':**' → logprob: -15.125237464904785
    10. ' print' → logprob: -15.500237464904785

Token 51: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2821371555328369
    2. ' print' → logprob: -1.407137155532837
    3. '\n' → logprob: -7.782136917114258
    4. '   ' → logprob: -8.907136917114258
    5. '```' → logprob: -9.032136917114258
    6. ' R' → logprob: -9.657136917114258
    7. ' 
' → logprob: -9.907136917114258
    8. '"' → logprob: -10.157136917114258
    9. '`' → logprob: -10.782136917114258
    10. '\' → logprob: -10.782136917114258

Token 52: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.25196847319602966
    2. ' print' → logprob: -1.501968502998352
    3. '   ' → logprob: -10.251968383789062
    4. '	print' → logprob: -14.001968383789062
    5. 'pr' → logprob: -14.126968383789062
    6. ' prin' → logprob: -14.251968383789062
    7. ' 
' → logprob: -14.751968383789062
    8. '```' → logprob: -14.751968383789062
    9. '\n' → logprob: -15.876968383789062
    10. ' ' → logprob: -16.126968383789062

Token 53: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.31346431374549866
    2. '(' → logprob: -1.3134642839431763
    3. '('' → logprob: -9.188464164733887
    4. '(R' → logprob: -9.313464164733887
    5. '"' → logprob: -12.188464164733887
    6. '("("' → logprob: -13.313464164733887
    7. '()' → logprob: -13.563464164733887
    8. '(
' → logprob: -14.563464164733887
    9. 'R' → logprob: -14.938464164733887
    10. '(S' → logprob: -15.563464164733887

Token 54: 'Yes' (ID: 13022)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.06962703913450241
    2. '"' → logprob: -2.944627046585083
    3. 'Yes' → logprob: -5.194626808166504
    4. 'Red' → logprob: -5.944626808166504
    5. 'RED' → logprob: -6.694626808166504
    6. 'TA' → logprob: -6.944626808166504
    7. '0' → logprob: -7.194626808166504
    8. '_R' → logprob: -7.694626808166504
    9. 'RR' → logprob: -7.819626808166504
    10. '```' → logprob: -7.944626808166504

Token 55: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.010863174684345722
    2. '")
' → logprob: -4.760863304138184
    3. ')' → logprob: -6.135863304138184
    4. ')")' → logprob: -10.260863304138184
    5. '")
' → logprob: -10.510863304138184
    6. ')
' → logprob: -11.010863304138184
    7. ')")
' → logprob: -13.635863304138184
    8. '"' → logprob: -13.885863304138184
    9. '")

' → logprob: -14.510863304138184
    10. ' ")' → logprob: -14.885863304138184

Token 56: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.002955358475446701
    2. ' else' → logprob: -5.877955436706543
    3. 'elif' → logprob: -8.877955436706543
    4. 'el' → logprob: -12.377955436706543
    5. 'e' → logprob: -12.877955436706543
    6. '```' → logprob: -13.252955436706543
    7. '_else' → logprob: -14.502955436706543
    8. ')' → logprob: -14.877955436706543
    9. 'elser' → logprob: -14.877955436706543
    10. 'els' → logprob: -15.002955436706543

Token 57: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00031413204851560295
    2. ':
' → logprob: -8.250313758850098
    3. '   ' → logprob: -10.000313758850098
    4. ' :' → logprob: -12.875313758850098
    5. '):' → logprob: -13.250313758850098
    6. ')' → logprob: -14.250313758850098
    7. '<|end|>' → logprob: -14.250313758850098
    8. '():' → logprob: -15.000313758850098
    9. '```' → logprob: -15.125313758850098
    10. 'print' → logprob: -15.250313758850098

Token 58: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18922674655914307
    2. 'print' → logprob: -1.939226746559143
    3. ' print' → logprob: -3.5642266273498535
    4. '```' → logprob: -9.314227104187012
    5. '    ' → logprob: -9.814227104187012
    6. '	print' → logprob: -10.064227104187012
    7. ' ' → logprob: -11.064227104187012
    8. '(print' → logprob: -11.439227104187012
    9. '    
' → logprob: -11.689227104187012
    10. '  ' → logprob: -11.689227104187012

Token 59: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.31486964225769043
    2. ' print' → logprob: -1.3148696422576904
    3. '   ' → logprob: -6.4398698806762695
    4. '	print' → logprob: -11.93986988067627
    5. ' ' → logprob: -13.93986988067627
    6. '    ' → logprob: -14.31486988067627
    7. '.print' → logprob: -14.56486988067627
    8. '```' → logprob: -14.56486988067627
    9. '(print' → logprob: -14.81486988067627
    10. 'Print' → logprob: -15.68986988067627

Token 60: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.3133451044559479
    2. '(' → logprob: -1.3133450746536255
    3. '()' → logprob: -10.313344955444336
    4. '("")' → logprob: -10.313344955444336
    5. '('' → logprob: -11.938344955444336
    6. '(""' → logprob: -12.313344955444336
    7. '("("' → logprob: -12.813344955444336
    8. '("""' → logprob: -13.688344955444336
    9. '(
' → logprob: -15.063344955444336
    10. '(False' → logprob: -15.188344955444336

Token 61: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -0.0011821311200037599
    2. '"No' → logprob: -6.7511820793151855
    3. '"' → logprob: -11.876182556152344
    4. ' No' → logprob: -12.251182556152344
    5. '_No' → logprob: -16.376182556152344
    6. '>No' → logprob: -17.751182556152344
    7. '“No' → logprob: -18.126182556152344
    8. '")' → logprob: -18.126182556152344
    9. 'NO' → logprob: -18.376182556152344
    10. '(No' → logprob: -18.501182556152344

Token 62: '")' (ID: 1405)
  Prédit: '")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.00010139751975657418
    2. ')' → logprob: -9.250101089477539
    3. ')")' → logprob: -12.250101089477539
    4. '")
' → logprob: -15.000101089477539
    5. '"' → logprob: -18.87510108947754
    6. '")

' → logprob: -19.37510108947754
    7. '}")' → logprob: -19.75010108947754
    8. '')' → logprob: -20.12510108947754
    9. '”)' → logprob: -20.12510108947754
    10. '`)' → logprob: -20.50010108947754


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 60
Tokens correctement prédits (1ère position, stricte): 21
Tokens correctement prédits (1ère position, avec adaptation): 25
Tokens correctement prédits (top 10): 51
Précision stricte (1ère position): 35.00%
Précision adaptée (1ère position): 41.67%
Précision (top 10): 85.00%
================================================================================
