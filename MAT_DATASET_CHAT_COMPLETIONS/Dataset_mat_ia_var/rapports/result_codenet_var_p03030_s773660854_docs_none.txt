================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:59:28
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n = int(input())
l = []
for i in range(n):
    ss, pp = map(str, input().split())
    l.append([ss, int(pp), i])
l.sort(key=lambda x: x[1], reverse=True)
l.sort(key=lambda x: x[0])
for v in l:
    print(v[2]+1)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00042768914136104286
    2. ''' → logprob: -8.62542724609375
    3. '('' → logprob: -9.37542724609375
    4. '(n' → logprob: -9.87542724609375
    5. '```' → logprob: -10.37542724609375
    6. '`' → logprob: -10.75042724609375
    7. '("("' → logprob: -11.12542724609375
    8. '(
' → logprob: -11.12542724609375
    9. ')' → logprob: -11.75042724609375
    10. '()' → logprob: -12.25042724609375

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11869344860315323
    2. ')' → logprob: -2.2436933517456055
    3. '()' → logprob: -5.3686933517456055
    4. '())' → logprob: -7.4936933517456055
    5. '(
' → logprob: -8.243693351745605
    6. '```' → logprob: -9.993693351745605
    7. '(

' → logprob: -10.368693351745605
    8. '('' → logprob: -10.493693351745605
    9. ''' → logprob: -10.618693351745605
    10. '(n' → logprob: -10.868693351745605

Token 5: 'l' (ID: 75)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.1056056022644043
    2. 'i' → logprob: -1.2306056022644043
    3. 'for' → logprob: -1.7306056022644043
    4. 's' → logprob: -2.4806056022644043
    5. 'x' → logprob: -3.8556056022644043
    6. ' ' → logprob: -3.8556056022644043
    7. 'a' → logprob: -4.605605602264404
    8. ''' → logprob: -4.855605602264404
    9. '#' → logprob: -4.980605602264404
    10. ')' → logprob: -4.980605602264404

Token 6: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.32522544264793396
    2. 'ist' → logprob: -2.450225353240967
    3. 'i' → logprob: -2.575225353240967
    4. 's' → logprob: -2.950225353240967
    5. 'e' → logprob: -3.950225353240967
    6. '.' → logprob: -4.200225353240967
    7. '[i' → logprob: -4.950225353240967
    8. 'is' → logprob: -5.200225353240967
    9. '=' → logprob: -5.700225353240967
    10. 'en' → logprob: -5.950225353240967

Token 7: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.32259905338287354
    2. ' []' → logprob: -1.3225990533828735
    3. 'list' → logprob: -5.197598934173584
    4. '[input' → logprob: -6.572598934173584
    5. ' list' → logprob: -7.447598934173584
    6. '[int' → logprob: -7.572598934173584
    7. '[' → logprob: -7.822598934173584
    8. ' [' → logprob: -7.947598934173584
    9. 'input' → logprob: -8.072599411010742
    10. '[list' → logprob: -9.322599411010742

Token 8: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.001958251930773258
    2. ' for' → logprob: -6.25195837020874
    3. 'f' → logprob: -11.001957893371582
    4. '```' → logprob: -12.751957893371582
    5. '
' → logprob: -12.876957893371582
    6. 'i' → logprob: -13.001957893371582
    7. ' 
' → logprob: -13.376957893371582
    8. ' ' → logprob: -14.001957893371582
    9. '' → logprob: -14.126957893371582
    10. 'n' → logprob: -14.626957893371582

Token 9: ' i' (ID: 575)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.06090931221842766
    2. ' i' → logprob: -3.0609092712402344
    3. '  ' → logprob: -4.435909271240234
    4. 'i' → logprob: -8.310909271240234
    5. ' n' → logprob: -9.310909271240234
    6. ' l' → logprob: -10.435909271240234
    7. ' ‌' → logprob: -12.185909271240234
    8. ' )' → logprob: -12.185909271240234
    9. '```' → logprob: -12.435909271240234
    10. ''' → logprob: -12.685909271240234

Token 10: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07989631593227386
    2. 'in' → logprob: -2.7048962116241455
    3. ' ' → logprob: -5.079896450042725
    4. 'n' → logprob: -6.329896450042725
    5. ' n' → logprob: -7.079896450042725
    6. '  ' → logprob: -7.079896450042725
    7. '_' → logprob: -10.079895973205566
    8. 'space' → logprob: -10.079895973205566
    9. ' i' → logprob: -10.579895973205566
    10. 'range' → logprob: -11.079895973205566

Token 11: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.07008492946624756
    2. 'range' → logprob: -2.695085048675537
    3. ' ' → logprob: -8.945084571838379
    4. ' in' → logprob: -11.445084571838379
    5. '	range' → logprob: -12.570084571838379
    6. ' n' → logprob: -14.195084571838379
    7. 'in' → logprob: -14.320084571838379
    8. 'n' → logprob: -14.570084571838379
    9. '_range' → logprob: -14.695084571838379
    10. ' xrange' → logprob: -14.945084571838379

Token 12: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.006196234375238419
    2. '(n' → logprob: -5.131196022033691
    3. ' (' → logprob: -8.256196022033691
    4. '(
' → logprob: -12.506196022033691
    5. '(range' → logprob: -13.631196022033691
    6. '(len' → logprob: -13.881196022033691
    7. '(i' → logprob: -14.631196022033691
    8. '(space' → logprob: -14.881196022033691
    9. '(

' → logprob: -15.006196022033691
    10. ' ' → logprob: -15.256196022033691

Token 13: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.14295510947704315
    2. ')' → logprob: -2.0179550647735596
    3. ':' → logprob: -8.39295482635498
    4. '+' → logprob: -10.76795482635498
    5. ' ):' → logprob: -11.26795482635498
    6. '):
' → logprob: -11.76795482635498
    7. ' )' → logprob: -13.26795482635498
    8. ':)' → logprob: -13.39295482635498
    9. ' ' → logprob: -13.76795482635498
    10. ',' → logprob: -13.89295482635498

Token 14: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5607958436012268
    2. '   ' → logprob: -1.810795783996582
    3. ' l' → logprob: -1.935795783996582
    4. '    ' → logprob: -2.310795783996582
    5. ' input' → logprob: -4.935795783996582
    6. '     
' → logprob: -5.685795783996582
    7. '```' → logprob: -6.060795783996582
    8. 'l' → logprob: -6.185795783996582
    9. ' 
' → logprob: -6.310795783996582
    10. '    
' → logprob: -6.810795783996582

Token 15: ' ss' (ID: 20928)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.003898537252098322
    2. 'l' → logprob: -6.128898620605469
    3. ' line' → logprob: -7.753898620605469
    4. ' ' → logprob: -7.753898620605469
    5. '    ' → logprob: -8.628898620605469
    6. ' s' → logprob: -8.628898620605469
    7. 's' → logprob: -9.378898620605469
    8. '   ' → logprob: -10.003898620605469
    9. ' input' → logprob: -10.128898620605469
    10. ' ```' → logprob: -10.128898620605469

Token 16: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.027533847838640213
    2. '=' → logprob: -4.527534008026123
    3. ' ' → logprob: -5.402534008026123
    4. '   ' → logprob: -5.527534008026123
    5. 'tr' → logprob: -5.652534008026123
    6. '.append' → logprob: -6.402534008026123
    7. 's' → logprob: -6.652534008026123
    8. '.' → logprob: -7.527534008026123
    9. 't' → logprob: -7.777534008026123
    10. '=input' → logprob: -8.902533531188965

Token 17: ' pp' (ID: 25476)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.5602185130119324
    2. 's' → logprob: -2.560218572616577
    3. ' =' → logprob: -2.685218572616577
    4. 'count' → logprob: -2.810218572616577
    5. '_' → logprob: -3.310218572616577
    6. ' input' → logprob: -3.810218572616577
    7. '"' → logprob: -4.060218334197998
    8. ' s' → logprob: -4.310218334197998
    9. 't' → logprob: -4.560218334197998
    10. 'num' → logprob: -4.560218334197998

Token 18: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2519416809082031
    2. ' =' → logprob: -1.5019416809082031
    3. '=input' → logprob: -12.126941680908203
    4. ',' → logprob: -12.626941680908203
    5. ' ' → logprob: -13.251941680908203
    6. ')' → logprob: -13.751941680908203
    7. '=int' → logprob: -15.376941680908203
    8. 'p' → logprob: -15.751941680908203
    9. '＝' → logprob: -16.376941680908203
    10. ')=' → logprob: -16.626941680908203

Token 19: ' map' (ID: 4014)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.1613975614309311
    2. 'input' → logprob: -1.9113975763320923
    3. ' map' → logprob: -6.911397457122803
    4. 'map' → logprob: -8.786397933959961
    5. ' ' → logprob: -11.286397933959961
    6. '   ' → logprob: -12.786397933959961
    7. '=input' → logprob: -13.161397933959961
    8. '(input' → logprob: -13.411397933959961
    9. '	input' → logprob: -13.911397933959961
    10. '[input' → logprob: -14.161397933959961

Token 20: '(str' (ID: 7946)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.20213109254837036
    2. '(str' → logprob: -1.7021310329437256
    3. '(' → logprob: -7.577131271362305
    4. '(input' → logprob: -9.202131271362305
    5. '(lambda' → logprob: -9.577131271362305
    6. 'str' → logprob: -11.077131271362305
    7. 'int' → logprob: -11.202131271362305
    8. '(list' → logprob: -13.327131271362305
    9. '```' → logprob: -13.577131271362305
    10. '<int' → logprob: -14.202131271362305

Token 21: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.38852909207344055
    2. ',' → logprob: -1.1385290622711182
    3. '(input' → logprob: -6.763529300689697
    4. 'input' → logprob: -7.638529300689697
    5. ',int' → logprob: -11.888528823852539
    6. ' input' → logprob: -13.013528823852539
    7. '```' → logprob: -13.388528823852539
    8. ' ,' → logprob: -13.388528823852539
    9. ')' → logprob: -13.513528823852539
    10. '(' → logprob: -13.763528823852539

Token 22: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.04859725013375282
    2. ' input' → logprob: -3.0485973358154297
    3. ')' → logprob: -12.04859733581543
    4. '(input' → logprob: -13.42359733581543
    5. '   ' → logprob: -14.29859733581543
    6. ' ' → logprob: -14.54859733581543
    7. '=input' → logprob: -14.79859733581543
    8. '<input' → logprob: -15.04859733581543
    9. ',input' → logprob: -15.04859733581543
    10. '	input' → logprob: -15.04859733581543

Token 23: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.339278580620885e-06
    2. '()' → logprob: -13.375001907348633
    3. '())' → logprob: -14.250001907348633
    4. ' ().' → logprob: -17.000001907348633
    5. ')' → logprob: -17.125001907348633
    6. '()
' → logprob: -17.375001907348633
    7. '(' → logprob: -17.750001907348633
    8. '().
' → logprob: -19.500001907348633
    9. '('').' → logprob: -20.125001907348633
    10. '.split' → logprob: -20.875001907348633

Token 24: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0015674727037549019
    2. 'strip' → logprob: -6.626567363739014
    3. 'rstrip' → logprob: -8.501567840576172
    4. ' split' → logprob: -10.251567840576172
    5. 'rs' → logprob: -13.626567840576172
    6. ')' → logprob: -14.251567840576172
    7. '(split' → logprob: -14.376567840576172
    8. ' ' → logprob: -15.001567840576172
    9. 'spl' → logprob: -16.251567840576172
    10. '```' → logprob: -16.376567840576172

Token 25: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.008933390490710735
    2. '()))' → logprob: -5.0089335441589355
    3. '()' → logprob: -6.6339335441589355
    4. ')' → logprob: -7.3839335441589355
    5. '))' → logprob: -9.133933067321777
    6. '('' → logprob: -9.508933067321777
    7. '())
' → logprob: -9.508933067321777
    8. '(' → logprob: -11.883933067321777
    9. '()))
' → logprob: -12.008933067321777
    10. ' ())' → logprob: -13.258933067321777

Token 26: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.020574938505887985
    2. 'l' → logprob: -4.270575046539307
    3. ')' → logprob: -5.895575046539307
    4. ' l' → logprob: -6.395575046539307
    5. '    
' → logprob: -7.520575046539307
    6. '
' → logprob: -8.270574569702148
    7. ',' → logprob: -8.395574569702148
    8. '```' → logprob: -8.395574569702148
    9. '       ' → logprob: -8.895574569702148
    10. ',l' → logprob: -9.145574569702148

Token 27: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' (adapté à ' l') → logprob: -0.11376675218343735
    2. '   ' → logprob: -2.613766670227051
    3. ' l' → logprob: -3.613766670227051
    4. 'p' → logprob: -5.488766670227051
    5. 'pp' → logprob: -6.113766670227051
    6. ' p' → logprob: -8.48876667022705
    7. ' ' → logprob: -8.48876667022705
    8. ' pp' → logprob: -8.73876667022705
    9. 'll' → logprob: -9.61376667022705
    10. '  ' → logprob: -10.11376667022705

Token 28: '.append' (ID: 3709)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6932079792022705
    2. '.append' → logprob: -0.6932079792022705
    3. '.app' → logprob: -10.568207740783691
    4. ' .' → logprob: -11.693207740783691
    5. '.add' → logprob: -12.568207740783691
    6. '.Append' → logprob: -12.568207740783691
    7. '.ap' → logprob: -12.818207740783691
    8. '.setdefault' → logprob: -12.818207740783691
    9. 'append' → logprob: -12.943207740783691
    10. '.extend' → logprob: -13.068207740783691

Token 29: '([' (ID: 5194)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.004820038098841906
    2. '(ss' → logprob: -5.629819869995117
    3. '(' → logprob: -6.754819869995117
    4. '(pp' → logprob: -10.504819869995117
    5. '(('' → logprob: -11.129819869995117
    6. '(tuple' → logprob: -12.879819869995117
    7. '([' → logprob: -13.004819869995117
    8. '(s' → logprob: -13.129819869995117
    9. '(((' → logprob: -14.004819869995117
    10. '(
' → logprob: -14.004819869995117

Token 30: 'ss' (ID: 1087)
  Prédit: 'ss'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ss' → logprob: -0.0003391574718989432
    2. ' ss' → logprob: -8.37533950805664
    3. '   ' → logprob: -10.25033950805664
    4. 'pp' → logprob: -10.75033950805664
    5. '(ss' → logprob: -11.37533950805664
    6. 'sss' → logprob: -11.50033950805664
    7. 'str' → logprob: -12.25033950805664
    8. '	ss' → logprob: -12.25033950805664
    9. ' ' → logprob: -12.75033950805664
    10. 'int' → logprob: -12.87533950805664

Token 31: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.7292167184641585e-05
    2. ' ,' → logprob: -10.500057220458984
    3. ',p' → logprob: -10.750057220458984
    4. ',int' → logprob: -12.250057220458984
    5. ',
' → logprob: -14.125057220458984
    6. ',ll' → logprob: -14.375057220458984
    7. ')' → logprob: -14.750057220458984
    8. ',,' → logprob: -15.250057220458984
    9. ',float' → logprob: -15.625057220458984
    10. '),' → logprob: -15.625057220458984

Token 32: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.4571664333343506
    2. 'pp' → logprob: -1.2071664333343506
    3. ' int' → logprob: -2.9571664333343506
    4. ' pp' → logprob: -4.20716667175293
    5. 'float' → logprob: -7.08216667175293
    6. ' float' → logprob: -9.20716667175293
    7. '   ' → logprob: -10.83216667175293
    8. ' ' → logprob: -11.20716667175293
    9. '(int' → logprob: -11.20716667175293
    10. '(pp' → logprob: -11.95716667175293

Token 33: '(pp' (ID: 103668)
  Prédit: '(pp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pp' → logprob: -0.0144239142537117
    2. '(' → logprob: -4.264423847198486
    3. 'pp' → logprob: -9.264424324035645
    4. ' pp' → logprob: -9.889424324035645
    5. ' (' → logprob: -10.389424324035645
    6. '(
' → logprob: -10.889424324035645
    7. '	pp' → logprob: -10.889424324035645
    8. '(p' → logprob: -11.764424324035645
    9. ' ' → logprob: -12.014424324035645
    10. '(

' → logprob: -12.389424324035645

Token 34: '),' (ID: 936)
  Prédit: ')])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')])' → logprob: -0.0010841365437954664
    2. ')' → logprob: -7.751084327697754
    3. '])' → logprob: -7.876084327697754
    4. ')]' → logprob: -8.376084327697754
    5. ')])
' → logprob: -10.501084327697754
    6. '))' → logprob: -12.501084327697754
    7. ')])

' → logprob: -12.501084327697754
    8. ']])' → logprob: -13.251084327697754
    9. '])]' → logprob: -13.251084327697754
    10. ']))' → logprob: -13.501084327697754

Token 35: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.006575038656592369
    2. ' i' → logprob: -5.256575107574463
    3. '0' → logprob: -7.006575107574463
    4. ' ' → logprob: -9.506574630737305
    5. 'True' → logprob: -9.631574630737305
    6. 'len' → logprob: -10.131574630737305
    7. 'False' → logprob: -10.131574630737305
    8. 'ss' → logprob: -10.256574630737305
    9. '])' → logprob: -10.381574630737305
    10. '   ' → logprob: -10.631574630737305

Token 36: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.00475620711222291
    2. ')])' → logprob: -5.754755973815918
    3. ')' → logprob: -6.504755973815918
    4. ')]' → logprob: -10.754755973815918
    5. ']' → logprob: -10.879755973815918
    6. ']])' → logprob: -11.004755973815918
    7. ' ])' → logprob: -11.629755973815918
    8. '])]' → logprob: -11.879755973815918
    9. '])
' → logprob: -12.754755973815918
    10. ']))' → logprob: -13.504755973815918

Token 37: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.006649176124483347
    2. 'sorted' → logprob: -6.256649017333984
    3. 'for' → logprob: -6.506649017333984
    4. 'n' → logprob: -7.256649017333984
    5. 's' → logprob: -7.381649017333984
    6. ' l' → logprob: -8.256649017333984
    7. 'sort' → logprob: -8.256649017333984
    8. ')' → logprob: -8.256649017333984
    9. '```' → logprob: -8.256649017333984
    10. 'if' → logprob: -9.256649017333984

Token 38: '.sort' (ID: 19551)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 39: '(key' (ID: 8932)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.728590726852417
    2. '(key' → logprob: -0.853590726852417
    3. '()' → logprob: -2.478590726852417
    4. '((' → logprob: -5.603590965270996
    5. '(reverse' → logprob: -6.103590965270996
    6. '(lambda' → logprob: -6.978590965270996
    7. '(()' → logprob: -7.728590965270996
    8. 'key' → logprob: -8.728590965270996
    9. '```' → logprob: -9.603590965270996
    10. '(
' → logprob: -10.853590965270996

Token 40: '=lambda' (ID: 64865)
  Prédit: '=lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -0.03804194927215576
    2. '=' → logprob: -3.2880420684814453
    3. '=

' → logprob: -15.913042068481445
    4. '=
' → logprob: -16.163042068481445
    5. '=len' → logprob: -16.538042068481445
    6. '=item' → logprob: -16.788042068481445
    7. ' =' → logprob: -17.413042068481445
    8. '=}' → logprob: -18.038042068481445
    9. '=str' → logprob: -18.163042068481445
    10. '=l' → logprob: -18.163042068481445

Token 41: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.4287409484386444
    2. 'x' → logprob: -1.0537409782409668
    3. 'a' → logprob: -11.428740501403809
    4. ' a' → logprob: -11.553740501403809
    5. ' s' → logprob: -12.428740501403809
    6. 's' → logprob: -12.553740501403809
    7. 'e' → logprob: -12.553740501403809
    8. ' ' → logprob: -13.803740501403809
    9. ' e' → logprob: -14.053740501403809
    10. 'k' → logprob: -14.053740501403809

Token 42: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00026300468016415834
    2. ':x' → logprob: -8.375263214111328
    3. ' :' → logprob: -10.375263214111328
    4. 'x' → logprob: -14.625263214111328
    5. ':
' → logprob: -14.750263214111328
    6. '[' → logprob: -16.000263214111328
    7. ':(' → logprob: -16.375263214111328
    8. '=' → logprob: -17.250263214111328
    9. '：' → logprob: -17.375263214111328
    10. ':

' → logprob: -17.375263214111328

Token 43: ' x' (ID: 1215)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.6466067433357239
    2. 'x' → logprob: -0.8966067433357239
    3. ' (' → logprob: -3.271606683731079
    4. '(' → logprob: -3.896606683731079
    5. ' x' → logprob: -4.646606922149658
    6. '(lambda' → logprob: -8.8966064453125
    7. '(int' → logprob: -9.1466064453125
    8. '(
' → logprob: -10.0216064453125
    9. '(-' → logprob: -10.7716064453125
    10. ')' → logprob: -11.5216064453125

Token 44: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.759734732331708e-05
    2. ':' → logprob: -11.875017166137695
    3. ' [' → logprob: -12.375017166137695
    4. '1' → logprob: -13.625017166137695
    5. '][' → logprob: -13.750017166137695
    6. ')' → logprob: -14.000017166137695
    7. ')[' → logprob: -14.250017166137695
    8. '[:' → logprob: -14.375017166137695
    9. ':[' → logprob: -15.250017166137695
    10. '\[' → logprob: -15.250017166137695

Token 45: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005441262852400541
    2. '2' → logprob: -5.255441188812256
    3. '0' → logprob: -8.630441665649414
    4. ' ' → logprob: -11.255441665649414
    5. '`' → logprob: -12.817941665649414
    6. '[' → logprob: -13.192941665649414
    7. '"' → logprob: -13.317941665649414
    8. '```' → logprob: -13.567941665649414
    9. '-' → logprob: -13.630441665649414
    10. '   ' → logprob: -14.067941665649414

Token 46: '],' (ID: 2155)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0035235751420259476
    2. ',' → logprob: -6.253523349761963
    3. '])' → logprob: -7.253523349761963
    4. '})' → logprob: -8.128523826599121
    5. '))' → logprob: -8.503523826599121
    6. '),' → logprob: -8.503523826599121
    7. ' )' → logprob: -9.003523826599121
    8. ',)' → logprob: -10.628523826599121
    9. ')])' → logprob: -11.128523826599121
    10. ' })' → logprob: -12.003523826599121

Token 47: ' reverse' (ID: 18199)
  Prédit: ' lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -0.8041398525238037
    2. ' True' → logprob: -1.5541398525238037
    3. 'lambda' → logprob: -1.8041398525238037
    4. ' ' → logprob: -2.8041398525238037
    5. 'True' → logprob: -3.4291398525238037
    6. ' x' → logprob: -3.8041398525238037
    7. 'x' → logprob: -3.9291398525238037
    8. '<|end|>' → logprob: -4.179140090942383
    9. ' False' → logprob: -5.054140090942383
    10. 'False' → logprob: -5.304140090942383

Token 48: '=True' (ID: 7827)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.28158095479011536
    2. '=True' → logprob: -1.406580924987793
    3. ')' → logprob: -8.156580924987793
    4. '=False' → logprob: -9.656580924987793
    5. ')=' → logprob: -9.656580924987793
    6. '=

' → logprob: -11.781580924987793
    7. '=T' → logprob: -13.156580924987793
    8. '=
' → logprob: -13.156580924987793
    9. '==' → logprob: -13.656580924987793
    10. '_=' → logprob: -14.531580924987793

Token 49: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.650518920039758e-06
    2. '))' → logprob: -12.625003814697266
    3. ')
' → logprob: -16.000003814697266
    4. ' )' → logprob: -16.250003814697266
    5. '),' → logprob: -17.000003814697266
    6. ')`' → logprob: -17.875003814697266
    7. ')))' → logprob: -19.000003814697266
    8. ')#' → logprob: -19.500003814697266
    9. ')

' → logprob: -19.500003814697266
    10. '）' → logprob: -19.750003814697266

Token 50: 'l' (ID: 75)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00035143180866725743
    2. 'print' → logprob: -8.500351905822754
    3. ')' → logprob: -9.875351905822754
    4. ' for' → logprob: -10.250351905822754
    5. '```' → logprob: -10.875351905822754
    6. ')
' → logprob: -11.375351905822754
    7. '
' → logprob: -11.375351905822754
    8. 'n' → logprob: -12.250351905822754
    9. 'f' → logprob: -12.375351905822754
    10. '[' → logprob: -12.875351905822754

Token 51: '.sort' (ID: 19551)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0719786211848259
    2. '<|end|>' → logprob: -3.0719785690307617
    3. '.' → logprob: -4.321978569030762
    4. '\[' → logprob: -5.946978569030762
    5. '[
' → logprob: -6.196978569030762
    6. '```' → logprob: -6.321978569030762
    7. '[user' → logprob: -6.946978569030762
    8. '[len' → logprob: -7.946978569030762
    9. '<|end|>' → logprob: -7.946978569030762
    10. '
' → logprob: -8.321978569030762

Token 52: '(key' (ID: 8932)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02204124815762043
    2. '(key' → logprob: -3.8970413208007812
    3. '(lambda' → logprob: -7.147041320800781
    4. '((' → logprob: -8.397041320800781
    5. '()' → logprob: -9.272041320800781
    6. '([' → logprob: -9.647041320800781
    7. '(
' → logprob: -9.897041320800781
    8. ' (' → logprob: -10.272041320800781
    9. '[(' → logprob: -10.272041320800781
    10. '```' → logprob: -10.272041320800781

Token 53: '=lambda' (ID: 64865)
  Prédit: '=lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -0.10021087527275085
    2. '=' → logprob: -2.3502109050750732
    3. 'lambda' → logprob: -13.725211143493652
    4. '=

' → logprob: -14.100211143493652
    5. '=
' → logprob: -14.225211143493652
    6. '=len' → logprob: -15.225211143493652
    7. '(lambda' → logprob: -15.350211143493652
    8. '="' → logprob: -15.350211143493652
    9. '=}' → logprob: -15.850211143493652
    10. '=None' → logprob: -16.100210189819336

Token 54: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.000264315924141556
    2. 'x' → logprob: -8.250264167785645
    3. ' ' → logprob: -14.000264167785645
    4. '<|end|>' → logprob: -14.500264167785645
    5. '	x' → logprob: -14.625264167785645
    6. ' lambda' → logprob: -14.750264167785645
    7. 'lambda' → logprob: -15.250264167785645
    8. ')x' → logprob: -16.12526512145996
    9. ' ' → logprob: -16.50026512145996
    10. '=lambda' → logprob: -16.62526512145996

Token 55: ':' (ID: 25)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.05165763944387436
    2. ':' → logprob: -3.0516576766967773
    3. ' :' → logprob: -6.551657676696777
    4. ')' → logprob: -7.426657676696777
    5. ' ' → logprob: -7.801657676696777
    6. ' [' → logprob: -8.801657676696777
    7. ' x' → logprob: -8.926657676696777
    8. '```' → logprob: -9.051657676696777
    9. '<|end|>' → logprob: -10.301657676696777
    10. '   ' → logprob: -10.551657676696777

Token 56: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.12702082097530365
    2. ' x' → logprob: -2.127020835876465
    3. ' ' → logprob: -10.502020835876465
    4. '   ' → logprob: -11.127020835876465
    5. ')x' → logprob: -11.252020835876465
    6. 'lambda' → logprob: -11.502020835876465
    7. '0' → logprob: -12.127020835876465
    8. '	x' → logprob: -12.252020835876465
    9. ' lambda' → logprob: -12.627020835876465
    10. '(x' → logprob: -13.127020835876465

Token 57: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.005325546953827143
    2. ':' → logprob: -5.5053253173828125
    3. ' [' → logprob: -7.5053253173828125
    4. ')' → logprob: -8.630325317382812
    5. ' :' → logprob: -9.380325317382812
    6. ' ' → logprob: -9.380325317382812
    7. '0' → logprob: -9.880325317382812
    8. '   ' → logprob: -10.005325317382812
    9. '1' → logprob: -10.255325317382812
    10. '	' → logprob: -10.567825317382812

Token 58: '0' (ID: 15)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.25244805216789246
    2. '0' → logprob: -1.5024480819702148
    3. ' ' → logprob: -8.127448081970215
    4. '1' → logprob: -8.877448081970215
    5. '
' → logprob: -10.002448081970215
    6. '```' → logprob: -11.564948081970215
    7. '   ' → logprob: -12.502448081970215
    8. '

' → logprob: -12.752448081970215
    9. ':' → logprob: -12.752448081970215
    10. '-' → logprob: -12.814948081970215

Token 59: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.11927352845668793
    2. ')' → logprob: -2.2442734241485596
    3. '[' → logprob: -5.494273662567139
    4. ',' → logprob: -6.744273662567139
    5. '],' → logprob: -7.869273662567139
    6. ']' → logprob: -7.994273662567139
    7. ')])' → logprob: -9.61927318572998
    8. ')]' → logprob: -9.86927318572998
    9. ' )' → logprob: -9.99427318572998
    10. '),' → logprob: -10.24427318572998

Token 60: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00017588881019037217
    2. ' for' → logprob: -9.125175476074219
    3. '<|end|>' → logprob: -11.125175476074219
    4. '```' → logprob: -11.250175476074219
    5. ')' → logprob: -11.375175476074219
    6. 'n' → logprob: -11.750175476074219
    7. 'f' → logprob: -12.250175476074219
    8. 'print' → logprob: -12.750175476074219
    9. '
' → logprob: -13.125175476074219
    10. '[' → logprob: -13.125175476074219

Token 61: ' v' (ID: 323)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.36575084924697876
    2. ' ' → logprob: -1.615750789642334
    3. ' item' → logprob: -3.240750789642334
    4. ' x' → logprob: -3.240750789642334
    5. ' _' → logprob: -4.615750789642334
    6. ' s' → logprob: -4.865750789642334
    7. ' e' → logprob: -5.115750789642334
    8. 'item' → logprob: -6.490750789642334
    9. ' l' → logprob: -6.990750789642334
    10. 'i' → logprob: -7.240750789642334

Token 62: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.18020206689834595
    2. 'in' → logprob: -1.8052020072937012
    3. ' ' → logprob: -7.930202007293701
    4. 'n' → logprob: -10.43020248413086
    5. '	in' → logprob: -10.80520248413086
    6. '  ' → logprob: -11.55520248413086
    7. 'v' → logprob: -11.55520248413086
    8. ' i' → logprob: -11.93020248413086
    9. 's' → logprob: -12.55520248413086
    10. 'i' → logprob: -12.80520248413086

Token 63: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.001170460251159966
    2. ' l' → logprob: -6.751170635223389
    3. '	l' → logprob: -16.501171112060547
    4. 'range' → logprob: -16.751171112060547
    5. ' ' → logprob: -17.626171112060547
    6. '   ' → logprob: -18.001171112060547
    7. '    ' → logprob: -19.001171112060547
    8. ' range' → logprob: -19.126171112060547
    9. '(l' → logprob: -19.501171112060547
    10. 'sorted' → logprob: -20.001171112060547

Token 64: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.20379601418972015
    2. '[' → logprob: -1.7037960290908813
    3. '[:]' → logprob: -7.078795909881592
    4. 'print' → logprob: -7.328795909881592
    5. ',' → logprob: -8.20379638671875
    6. ' :' → logprob: -8.57879638671875
    7. '[:' → logprob: -9.57879638671875
    8. '[]' → logprob: -9.57879638671875
    9. ')' → logprob: -9.82879638671875
    10. '{' → logprob: -10.32879638671875

Token 65: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13804103434085846
    2. ' print' → logprob: -2.1380410194396973
    3. 'print' → logprob: -4.513041019439697
    4. '	print' → logprob: -10.138041496276855
    5. '```' → logprob: -10.138041496276855
    6. '    
' → logprob: -12.638041496276855
    7. '   ' → logprob: -13.388041496276855
    8. '    ' → logprob: -14.638041496276855
    9. '`' → logprob: -15.013041496276855
    10. '.print' → logprob: -15.263041496276855

Token 66: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -6.392202976712724e-06
    2. ' print' → logprob: -12.000006675720215
    3. '   ' → logprob: -16.3750057220459
    4. 'pr' → logprob: -17.5000057220459
    5. '```' → logprob: -17.6250057220459
    6. 'prit' → logprob: -19.1250057220459
    7. 'prin' → logprob: -20.2500057220459
    8. '#print' → logprob: -20.3750057220459
    9. '	print' → logprob: -20.3750057220459
    10. '-print' → logprob: -20.7500057220459

Token 67: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.062176402658224106
    2. '(' → logprob: -2.812176465988159
    3. '(f' → logprob: -8.812176704406738
    4. '(*' → logprob: -10.312176704406738
    5. '((' → logprob: -11.062176704406738
    6. '("("' → logprob: -12.562176704406738
    7. '('' → logprob: -12.687176704406738
    8. 'v' → logprob: -13.437176704406738
    9. '(
' → logprob: -14.062176704406738
    10. '("' → logprob: -15.062176704406738

Token 68: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.006773988250643015
    2. ')' → logprob: -5.006773948669434
    3. ')[' → logprob: -10.756773948669434
    4. '[])' → logprob: -10.756773948669434
    5. '[]' → logprob: -12.006773948669434
    6. '[
' → logprob: -12.381773948669434
    7. ']' → logprob: -14.506773948669434
    8. ' [' → logprob: -14.506773948669434
    9. ' )' → logprob: -14.506773948669434
    10. '])' → logprob: -14.631773948669434

Token 69: '2' (ID: 17)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00044902291847392917
    2. '1' → logprob: -8.250449180603027
    3. '2' → logprob: -8.625449180603027
    4. ' ' → logprob: -12.125449180603027
    5. ']' → logprob: -14.187949180603027
    6. ':' → logprob: -15.437949180603027
    7. '-' → logprob: -15.500449180603027
    8. 'ss' → logprob: -15.687949180603027
    9. '])' → logprob: -15.937949180603027
    10. '   ' → logprob: -16.18794822692871

Token 70: ']+' (ID: 15344)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.5774950981140137
    2. ')' → logprob: -0.8274950981140137
    3. ']' → logprob: -6.577495098114014
    4. ')]' → logprob: -9.702495574951172
    5. ')])' → logprob: -10.202495574951172
    6. '))' → logprob: -10.827495574951172
    7. ' ])' → logprob: -11.202495574951172
    8. ' )' → logprob: -11.952495574951172
    9. '})' → logprob: -12.077495574951172
    10. ''])' → logprob: -12.327495574951172

Token 71: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9743012671824545e-05
    2. ' ' → logprob: -10.875020027160645
    3. ')' → logprob: -14.625020027160645
    4. '+' → logprob: -15.625020027160645
    5. '<|end|>' → logprob: -16.000019073486328
    6. '   ' → logprob: -17.500019073486328
    7. '2' → logprob: -18.375019073486328
    8. '  ' → logprob: -18.875019073486328
    9. '１' → logprob: -19.375019073486328
    10. '۱' → logprob: -19.375019073486328

Token 72: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.339278580620885e-06
    2. ' )' → logprob: -13.500001907348633
    3. '))' → logprob: -14.750001907348633
    4. ')
' → logprob: -15.500001907348633
    5. ')`' → logprob: -15.750001907348633
    6. '`)' → logprob: -17.125001907348633
    7. ')}' → logprob: -18.000001907348633
    8. ')v' → logprob: -18.125001907348633
    9. '),' → logprob: -18.250001907348633
    10. ')}}' → logprob: -18.375001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 70
Tokens correctement prédits (1ère position, stricte): 25
Tokens correctement prédits (1ère position, avec adaptation): 27
Tokens correctement prédits (top 10): 52
Précision stricte (1ère position): 35.71%
Précision adaptée (1ère position): 38.57%
Précision (top 10): 74.29%
================================================================================
