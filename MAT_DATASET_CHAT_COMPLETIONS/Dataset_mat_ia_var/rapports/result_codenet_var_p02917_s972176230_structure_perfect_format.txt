================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:45:57
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
input = sys.stdin.readline

def main():
    N = int(input())
    B = list(map(int, input().split()))
    ans = [0] * N
    ans[0] = B[0]
    for i in range(N - 1):
        ans[i] = min(ans[i], B[i])
        ans[i + 1] = B[i]
    print(sum(ans))

main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'input' (ID: 2586)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.5435490608215332
    2. '.' → logprob: -1.0435490608215332
    3. '<|end|>' → logprob: -3.918549060821533
    4. '\' → logprob: -4.043549060821533
    5. 'import' → logprob: -4.418549060821533
    6. 'newline' → logprob: -5.293549060821533
    7. '' → logprob: -6.043549060821533
    8. '\r' → logprob: -6.168549060821533
    9. '
' → logprob: -6.293549060821533
    10. '<|end|>' → logprob: -6.418549060821533

Token 4: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.009539559483528137
    2. '.' → logprob: -4.759539604187012
    3. ''' → logprob: -8.259539604187012
    4. '```' → logprob: -8.884539604187012
    5. ')' → logprob: -9.009539604187012
    6. ' (' → logprob: -9.634539604187012
    7. '(
' → logprob: -9.634539604187012
    8. '"' → logprob: -9.759539604187012
    9. ''s' → logprob: -10.259539604187012
    10. '()' → logprob: -10.259539604187012

Token 5: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.06210717186331749
    2. 'sys' → logprob: -2.8121070861816406
    3. ' input' → logprob: -9.31210708618164
    4. 'input' → logprob: -10.06210708618164
    5. '	sys' → logprob: -12.93710708618164
    6. '=sys' → logprob: -13.18710708618164
    7. ' ' → logprob: -13.68710708618164
    8. '(sys' → logprob: -13.93710708618164
    9. ' system' → logprob: -16.18710708618164
    10. ' lambda' → logprob: -16.68710708618164

Token 6: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00013500562636181712
    2. ' .' → logprob: -10.25013542175293
    3. '.import' → logprob: -10.62513542175293
    4. '.stdin' → logprob: -11.12513542175293
    5. '.readline' → logprob: -11.12513542175293
    6. '.
' → logprob: -11.37513542175293
    7. '.`' → logprob: -11.87513542175293
    8. '[' → logprob: -12.37513542175293
    9. '.argv' → logprob: -13.00013542175293
    10. 'import' → logprob: -13.25013542175293

Token 7: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.04071744531393051
    2. '.' → logprob: -3.915717363357544
    3. '.read' → logprob: -3.915717363357544
    4. '.readlines' → logprob: -10.665717124938965
    5. 'read' → logprob: -11.040717124938965
    6. '.Read' → logprob: -12.665717124938965
    7. ' readline' → logprob: -13.915717124938965
    8. '.buffer' → logprob: -14.165717124938965
    9. '```' → logprob: -14.415717124938965
    10. '<|end|>' → logprob: -14.415717124938965

Token 8: '

' (ID: 279)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.056260839104652405
    2. '(' → logprob: -3.056260824203491
    3. '()
' → logprob: -5.68126106262207
    4. '(
' → logprob: -6.80626106262207
    5. '().' → logprob: -7.05626106262207
    6. '
' → logprob: -7.43126106262207
    7. '()\' → logprob: -7.43126106262207
    8. '\n' → logprob: -7.55626106262207
    9. '\' → logprob: -8.43126106262207
    10. '()

' → logprob: -9.05626106262207

Token 9: 'def' (ID: 1314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.34941479563713074
    2. '(' → logprob: -1.2244148254394531
    3. '().' → logprob: -7.849414825439453
    4. '(
' → logprob: -8.599414825439453
    5. '()
' → logprob: -8.724414825439453
    6. '()

' → logprob: -10.474414825439453
    7. 'a' → logprob: -10.599414825439453
    8. ')' → logprob: -10.849414825439453
    9. '.' → logprob: -10.849414825439453
    10. '#' → logprob: -11.224414825439453

Token 10: ' main' (ID: 2758)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.004313803277909756
    2. ' space' → logprob: -6.879313945770264
    3. ' process' → logprob: -7.004313945770264
    4. ' calculate' → logprob: -7.754313945770264
    5. '_' → logprob: -7.879313945770264
    6. ' read' → logprob: -8.379313468933105
    7. ' my' → logprob: -8.754313468933105
    8. ' ' → logprob: -8.754313468933105
    9. ' main' → logprob: -8.754313468933105
    10. ' func' → logprob: -9.004313468933105

Token 11: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1441611647605896
    2. '():' → logprob: -2.0191612243652344
    3. '(:' → logprob: -6.894161224365234
    4. ':' → logprob: -8.019161224365234
    5. '()' → logprob: -9.769161224365234
    6. '(
' → logprob: -11.019161224365234
    7. ' (' → logprob: -11.394161224365234
    8. '(`' → logprob: -11.394161224365234
    9. '(":' → logprob: -11.519161224365234
    10. '):' → logprob: -12.144161224365234

Token 12: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01652647741138935
    2. '    ' → logprob: -4.891526699066162
    3. '(' → logprob: -5.266526699066162
    4. '    
' → logprob: -7.016526699066162
    5. 'n' → logprob: -7.266526699066162
    6. ' ' → logprob: -7.641526699066162
    7. '(n' → logprob: -8.391526222229004
    8. 'a' → logprob: -8.641526222229004
    9. 'print' → logprob: -8.766526222229004
    10. ')' → logprob: -9.016526222229004

Token 13: ' N' (ID: 478)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6427541971206665
    2. '   ' → logprob: -1.3927541971206665
    3. ' n' → logprob: -1.8927541971206665
    4. 'print' → logprob: -4.392754077911377
    5. 'user' → logprob: -4.392754077911377
    6. ' ' → logprob: -4.767754077911377
    7. '    ' → logprob: -4.892754077911377
    8. 'a' → logprob: -5.142754077911377
    9. 'data' → logprob: -5.267754077911377
    10. 'x' → logprob: -5.642754077911377

Token 14: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3231598436832428
    2. ' ' → logprob: -1.8231598138809204
    3. '=' → logprob: -2.57315993309021
    4. '<|end|>' → logprob: -4.573159694671631
    5. ',' → logprob: -4.698159694671631
    6. '  ' → logprob: -5.573159694671631
    7. ' ,' → logprob: -5.823159694671631
    8. ')' → logprob: -5.823159694671631
    9. ' >' → logprob: -6.573159694671631
    10. '   ' → logprob: -6.698159694671631

Token 15: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.029763683676719666
    2. 'int' → logprob: -3.529763698577881
    3. ' ' → logprob: -11.279763221740723
    4. ' input' → logprob: -15.154763221740723
    5. '  ' → logprob: -16.02976417541504
    6. '=int' → logprob: -16.52976417541504
    7. ' map' → logprob: -16.77976417541504
    8. '10' → logprob: -16.90476417541504
    9. 'input' → logprob: -17.27976417541504
    10. '	int' → logprob: -17.27976417541504

Token 16: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.016093259677290916
    2. '(input' → logprob: -4.1410932540893555
    3. '('' → logprob: -10.641093254089355
    4. '(
' → logprob: -11.641093254089355
    5. '(sys' → logprob: -12.016093254089355
    6. 'input' → logprob: -12.141093254089355
    7. '()' → logprob: -12.266093254089355
    8. '(N' → logprob: -13.391093254089355
    9. '(user' → logprob: -13.766093254089355
    10. ' (' → logprob: -13.766093254089355

Token 17: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.00466093048453331
    2. '()' → logprob: -5.6296610832214355
    3. ')' → logprob: -6.8796610832214355
    4. '(' → logprob: -11.004660606384277
    5. ' ())' → logprob: -11.504660606384277
    6. '()))' → logprob: -13.379660606384277
    7. '().' → logprob: -13.379660606384277
    8. '())
' → logprob: -13.879660606384277
    9. '();)' → logprob: -15.379660606384277
    10. '())

' → logprob: -15.879660606384277

Token 18: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05080130323767662
    2. '    
' → logprob: -3.6758012771606445
    3. '    ' → logprob: -4.9258012771606445
    4. ' ' → logprob: -5.4258012771606445
    5. '\' → logprob: -5.8008012771606445
    6. '\n' → logprob: -5.8008012771606445
    7. ')' → logprob: -6.1758012771606445
    8. '
' → logprob: -6.8008012771606445
    9. ' 
' → logprob: -6.8008012771606445
    10. '  ' → logprob: -7.4258012771606445

Token 19: ' B' (ID: 418)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9544869661331177
    2. ' ' → logprob: -1.0794869661331177
    3. 'for' → logprob: -2.454486846923828
    4. ' for' → logprob: -2.954486846923828
    5. '    ' → logprob: -3.079486846923828
    6. 'data' → logprob: -4.454486846923828
    7. 'd' → logprob: -4.579486846923828
    8. ')' → logprob: -4.579486846923828
    9. 'a' → logprob: -4.704486846923828
    10. 's' → logprob: -5.329486846923828

Token 20: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12875688076019287
    2. '[' → logprob: -3.0037569999694824
    3. '[i' → logprob: -3.3787569999694824
    4. '[]' → logprob: -4.378756999969482
    5. '=' → logprob: -4.878756999969482
    6. '_' → logprob: -5.503756999969482
    7. '[:]' → logprob: -6.003756999969482
    8. '   ' → logprob: -6.253756999969482
    9. ' ' → logprob: -6.878756999969482
    10. '.append' → logprob: -6.878756999969482

Token 21: ' list' (ID: 1562)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.6598081588745117
    2. ' list' → logprob: -1.4098081588745117
    3. 'list' → logprob: -1.9098081588745117
    4. '[' → logprob: -3.4098081588745117
    5. '[list' → logprob: -3.5348081588745117
    6. '[int' → logprob: -4.409808158874512
    7. '[input' → logprob: -5.034808158874512
    8. ' []' → logprob: -5.284808158874512
    9. '[]' → logprob: -5.909808158874512
    10. '[N' → logprob: -7.409808158874512

Token 22: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6996666789054871
    2. '(map' → logprob: -0.6996666789054871
    3. '(input' → logprob: -5.824666500091553
    4. '(int' → logprob: -5.949666500091553
    5. '()' → logprob: -7.324666500091553
    6. '(range' → logprob: -8.699666976928711
    7. '(eval' → logprob: -10.699666976928711
    8. '(filter' → logprob: -11.449666976928711
    9. '(B' → logprob: -11.574666976928711
    10. '(data' → logprob: -11.824666976928711

Token 23: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0011299749603495002
    2. '(' → logprob: -6.876130104064941
    3. '(lambda' → logprob: -10.251130104064941
    4. 'int' → logprob: -10.376130104064941
    5. '(str' → logprob: -10.501130104064941
    6. ' (' → logprob: -14.251130104064941
    7. '```' → logprob: -14.626130104064941
    8. ' int' → logprob: -14.626130104064941
    9. '<int' → logprob: -15.251130104064941
    10. ')' → logprob: -15.376130104064941

Token 24: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.17941740155220032
    2. ',input' → logprob: -2.054417371749878
    3. '(' → logprob: -3.679417371749878
    4. ',' → logprob: -4.554417610168457
    5. ' ,' → logprob: -9.054417610168457
    6. ' (' → logprob: -9.929417610168457
    7. ')' → logprob: -10.054417610168457
    8. 'input' → logprob: -10.304417610168457
    9. ' input' → logprob: -11.679417610168457
    10. '),' → logprob: -11.929417610168457

Token 25: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.3132663369178772
    2. ' input' → logprob: -1.3132662773132324
    3. ',input' → logprob: -13.43826675415039
    4. '(input' → logprob: -13.93826675415039
    5. ' ' → logprob: -14.43826675415039
    6. 'lambda' → logprob: -14.68826675415039
    7. '	input' → logprob: -14.81326675415039
    8. '=input' → logprob: -15.43826675415039
    9. '<input' → logprob: -15.68826675415039
    10. '   ' → logprob: -16.31326675415039

Token 26: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -8.061054359131958e-06
    2. '()' → logprob: -12.250007629394531
    3. '()))' → logprob: -12.750007629394531
    4. '())' → logprob: -16.25000762939453
    5. ' ().' → logprob: -16.75000762939453
    6. '()));' → logprob: -17.12500762939453
    7. '(' → logprob: -17.37500762939453
    8. '())))' → logprob: -17.62500762939453
    9. 'split' → logprob: -18.75000762939453
    10. '()
' → logprob: -19.50000762939453

Token 27: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.08266041427850723
    2. 'strip' → logprob: -2.582660436630249
    3. 'rstrip' → logprob: -5.58266019821167
    4. ' split' → logprob: -15.082660675048828
    5. 'read' → logprob: -15.207660675048828
    6. '(split' → logprob: -15.332660675048828
    7. 'rs' → logprob: -16.207660675048828
    8. ')' → logprob: -17.082660675048828
    9. 'replace' → logprob: -17.457660675048828
    10. ' strip' → logprob: -17.457660675048828

Token 28: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.015361127443611622
    2. '))' → logprob: -4.515361309051514
    3. '())' → logprob: -5.890361309051514
    4. '()' → logprob: -6.640361309051514
    5. '()))
' → logprob: -8.765360832214355
    6. ')' → logprob: -9.890360832214355
    7. '(' → logprob: -10.890360832214355
    8. '()))

' → logprob: -13.515360832214355
    9. '()));' → logprob: -13.765360832214355
    10. '())
' → logprob: -14.265360832214355

Token 29: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02132510393857956
    2. '    
' → logprob: -4.14632511138916
    3. '
' → logprob: -5.52132511138916
    4. 'n' → logprob: -7.77132511138916
    5. '<|end|>' → logprob: -8.02132511138916
    6. '```' → logprob: -9.64632511138916
    7. ')' → logprob: -9.89632511138916
    8. '    ' → logprob: -9.89632511138916
    9. 'A' → logprob: -10.14632511138916
    10. ' 
' → logprob: -10.64632511138916

Token 30: ' ans' (ID: 3345)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.35047826170921326
    2. '   ' → logprob: -1.6004782915115356
    3. ' A' → logprob: -2.475478172302246
    4. ' ans' → logprob: -6.600478172302246
    5. 'a' → logprob: -7.100478172302246
    6. 'dp' → logprob: -7.225478172302246
    7. '    
' → logprob: -7.475478172302246
    8. ' for' → logprob: -7.475478172302246
    9. '```' → logprob: -7.475478172302246
    10. 'result' → logprob: -7.600478172302246

Token 31: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004754072520881891
    2. '=' → logprob: -5.379754066467285
    3. '_' → logprob: -9.879754066467285
    4. ' ' → logprob: -10.004754066467285
    5. '[' → logprob: -11.379754066467285
    6. '=[]' → logprob: -11.879754066467285
    7. '[]' → logprob: -12.379754066467285
    8. ' =[' → logprob: -12.379754066467285
    9. 's' → logprob: -12.629754066467285
    10. '[:]' → logprob: -12.629754066467285

Token 32: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5687559247016907
    2. '[]' → logprob: -0.9437559247016907
    3. '0' → logprob: -4.318756103515625
    4. ' [' → logprob: -4.443756103515625
    5. ' []' → logprob: -4.443756103515625
    6. '[B' → logprob: -5.693756103515625
    7. '[-' → logprob: -6.193756103515625
    8. '[len' → logprob: -7.193756103515625
    9. '[N' → logprob: -7.318756103515625
    10. ' ' → logprob: -7.818756103515625

Token 33: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0039005307480692863
    2. '-' → logprob: -6.878900527954102
    3. ' ' → logprob: -6.878900527954102
    4. 'B' → logprob: -7.003900527954102
    5. ']' → logprob: -7.753900527954102
    6. 'None' → logprob: -8.503900527954102
    7. ')' → logprob: -9.628900527954102
    8. '])' → logprob: -9.628900527954102
    9. ' -' → logprob: -9.753900527954102
    10. '1' → logprob: -10.128900527954102

Token 34: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.005935790482908487
    2. ']*' → logprob: -5.5059356689453125
    3. ' ]' → logprob: -7.0059356689453125
    4. ']*(' → logprob: -7.7559356689453125
    5. ',' → logprob: -8.380935668945312
    6. ')]' → logprob: -9.255935668945312
    7. ')' → logprob: -9.380935668945312
    8. ' for' → logprob: -9.630935668945312
    9. '])' → logprob: -10.880935668945312
    10. 'for' → logprob: -11.130935668945312

Token 35: ' *' (ID: 425)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.20967139303684235
    2. ' 
' → logprob: -2.7096714973449707
    3. ' *' → logprob: -3.7096714973449707
    4. '0' → logprob: -3.8346714973449707
    5. '*' → logprob: -4.084671497344971
    6. '[' → logprob: -4.209671497344971
    7. ' for' → logprob: -4.459671497344971
    8. ' ]' → logprob: -5.084671497344971
    9. 'for' → logprob: -5.459671497344971
    10. ',' → logprob: -6.084671497344971

Token 36: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.015309343114495277
    2. '(N' → logprob: -4.2653093338012695
    3. ' N' → logprob: -7.2653093338012695
    4. '(' → logprob: -7.8903093338012695
    5. ' (' → logprob: -9.89030933380127
    6. ' ' → logprob: -11.89030933380127
    7. '	N' → logprob: -13.01530933380127
    8. 'len' → logprob: -13.26530933380127
    9. '_N' → logprob: -13.70280933380127
    10. '   ' → logprob: -13.76530933380127

Token 37: '
' (ID: 198)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.18119758367538452
    2. 'for' → logprob: -2.3061976432800293
    3. '
' → logprob: -3.3061976432800293
    4. '   ' → logprob: -4.306197643280029
    5. '\n' → logprob: -5.056197643280029
    6. ' 
' → logprob: -5.431197643280029
    7. '    
' → logprob: -5.806197643280029
    8. '  
' → logprob: -7.181197643280029
    9. '```' → logprob: -7.931197643280029
    10. '   
' → logprob: -8.306197166442871

Token 38: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4700288772583008
    2. 'for' → logprob: -1.0950288772583008
    3. '   ' → logprob: -3.220028877258301
    4. ' ' → logprob: -8.8450288772583
    5. '    
' → logprob: -9.2200288772583
    6. '	for' → logprob: -9.5950288772583
    7. ' 
' → logprob: -10.2200288772583
    8. '    ' → logprob: -10.3450288772583
    9. ')' → logprob: -10.5950288772583
    10. '```' → logprob: -10.7200288772583

Token 39: ' ans' (ID: 3345)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.020923476666212082
    2. ' for' → logprob: -3.895923376083374
    3. 'i' → logprob: -8.395923614501953
    4. '   ' → logprob: -9.020923614501953
    5. 'b' → logprob: -12.020923614501953
    6. 'idx' → logprob: -12.395923614501953
    7. '```' → logprob: -12.770923614501953
    8. 'j' → logprob: -12.895923614501953
    9. ')' → logprob: -13.270923614501953
    10. 'index' → logprob: -13.270923614501953

Token 40: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5007204413414001
    2. '[-' → logprob: -1.250720500946045
    3. '.' → logprob: -2.750720500946045
    4. ' =' → logprob: -3.875720500946045
    5. '[:]' → logprob: -4.375720500946045
    6. '=' → logprob: -5.500720500946045
    7. '[N' → logprob: -5.750720500946045
    8. '[::-' → logprob: -7.375720500946045
    9. ' ' → logprob: -7.875720500946045
    10. '.append' → logprob: -8.125720024108887

Token 41: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5959701538085938
    2. '-' → logprob: -0.8459701538085938
    3. 'N' → logprob: -3.9709701538085938
    4. ' -' → logprob: -7.470970153808594
    5. '-N' → logprob: -8.470970153808594
    6. '1' → logprob: -9.720970153808594
    7. ']' → logprob: -10.220970153808594
    8. ' ' → logprob: -10.345970153808594
    9. ' N' → logprob: -10.970970153808594
    10. ':' → logprob: -12.095970153808594

Token 42: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.002653655596077442
    2. ' ]' → logprob: -6.1276535987854
    3. ']=' → logprob: -8.502654075622559
    4. '=' → logprob: -8.752654075622559
    5. ' =' → logprob: -9.252654075622559
    6. ',' → logprob: -12.002654075622559
    7. '],' → logprob: -13.127654075622559
    8. '[' → logprob: -14.377654075622559
    9. ')' → logprob: -14.502654075622559
    10. ' ' → logprob: -14.627654075622559

Token 43: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.033687885850667953
    2. '=' → logprob: -3.4086878299713135
    3. ' +=' → logprob: -10.158687591552734
    4. ' ' → logprob: -13.783687591552734
    5. '+=' → logprob: -13.783687591552734
    6. '＝' → logprob: -14.658687591552734
    7. '=B' → logprob: -15.408687591552734
    8. ',' → logprob: -15.783687591552734
    9. ' |=' → logprob: -16.033687591552734
    10. '=int' → logprob: -16.158687591552734

Token 44: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.004120192490518093
    2. '0' → logprob: -5.879120349884033
    3. ' B' → logprob: -6.879120349884033
    4. '1' → logprob: -8.879119873046875
    5. ' ' → logprob: -9.754119873046875
    6. '100' → logprob: -10.754119873046875
    7. '-' → logprob: -11.004119873046875
    8. '10' → logprob: -11.254119873046875
    9. '2' → logprob: -12.004119873046875
    10. 'N' → logprob: -12.629119873046875

Token 45: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -8.64970643306151e-05
    2. '0' → logprob: -9.625086784362793
    3. '[-' → logprob: -11.125086784362793
    4. '[N' → logprob: -12.875086784362793
    5. ' [' → logprob: -13.375086784362793
    6. ' ' → logprob: -14.500086784362793
    7. '<|end|>' → logprob: -15.625086784362793
    8. '.' → logprob: -15.750086784362793
    9. '(' → logprob: -15.750086784362793
    10. '1' → logprob: -16.250085830688477

Token 46: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004108924185857177
    2. '-' → logprob: -7.875411033630371
    3. ' ' → logprob: -10.875411033630371
    4. '1' → logprob: -12.250411033630371
    5. '[' → logprob: -13.312911033630371
    6. ' -' → logprob: -13.625411033630371
    7. '9' → logprob: -14.125411033630371
    8. 'N' → logprob: -14.250411033630371
    9. ']' → logprob: -14.562911033630371
    10. '2' → logprob: -15.125411033630371

Token 47: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5590730905532837
    2. ')' → logprob: -0.9340730905532837
    3. ' ]' → logprob: -4.684072971343994
    4. '<|end|>' → logprob: -4.809072971343994
    5. ' )' → logprob: -5.309072971343994
    6. ' ' → logprob: -5.684072971343994
    7. '//' → logprob: -6.684072971343994
    8. '+' → logprob: -6.809072971343994
    9. '<|end|>' → logprob: -6.809072971343994
    10. ' //' → logprob: -6.934072971343994

Token 48: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6224327087402344
    2. '   ' → logprob: -1.2474327087402344
    3. 'for' → logprob: -2.7474327087402344
    4. '+' → logprob: -3.1224327087402344
    5. ' 
' → logprob: -4.122432708740234
    6. '<|end|>' → logprob: -4.247432708740234
    7. ' ' → logprob: -4.372432708740234
    8. '    
' → logprob: -5.247432708740234
    9. '
' → logprob: -5.372432708740234
    10. '	for' → logprob: -5.872432708740234

Token 49: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.254042387008667
    2. 'for' (adapté à ' for') → logprob: -1.504042387008667
    3. '+' → logprob: -6.754042625427246
    4. '   ' → logprob: -7.379042625427246
    5. ' ' → logprob: -9.004042625427246
    6. ' +' → logprob: -9.879042625427246
    7. ' 
' → logprob: -10.754042625427246
    8. '    ' → logprob: -11.254042625427246
    9. '\n' → logprob: -11.254042625427246
    10. '.' → logprob: -11.504042625427246

Token 50: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.004182517994195223
    2. ' ' → logprob: -5.5041823387146
    3. 'i' → logprob: -9.254182815551758
    4. ' ' → logprob: -12.754182815551758
    5. ' _' → logprob: -13.254182815551758
    6. '	i' → logprob: -13.379182815551758
    7. ' I' → logprob: -13.629182815551758
    8. '  ' → logprob: -15.004182815551758
    9. 'I' → logprob: -15.379182815551758
    10. '_' → logprob: -15.754182815551758

Token 51: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0030477007385343313
    2. 'in' → logprob: -5.878047466278076
    3. ' ' → logprob: -8.378047943115234
    4. 'range' → logprob: -12.003047943115234
    5. '  ' → logprob: -12.878047943115234
    6. '   ' → logprob: -13.503047943115234
    7. ' range' → logprob: -14.003047943115234
    8. ' i' → logprob: -14.878047943115234
    9. '	in' → logprob: -15.003047943115234
    10. '1' → logprob: -15.378047943115234

Token 52: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.38688158988952637
    2. 'range' → logprob: -1.1368815898895264
    3. ' ' → logprob: -11.636881828308105
    4. '	range' → logprob: -14.261881828308105
    5. '  ' → logprob: -15.136881828308105
    6. '(range' → logprob: -15.386881828308105
    7. ' xrange' → logprob: -15.386881828308105
    8. '1' → logprob: -16.13688087463379
    9. ' in' → logprob: -16.13688087463379
    10. '   ' → logprob: -16.88688087463379

Token 53: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0206720617134124e-05
    2. '1' → logprob: -12.00001049041748
    3. ' (' → logprob: -12.50001049041748
    4. ' ' → logprob: -15.12501049041748
    5. '(
' → logprob: -19.500009536743164
    6. '2' → logprob: -19.875009536743164
    7. '[' → logprob: -19.875009536743164
    8. '   ' → logprob: -20.000009536743164
    9. '(i' → logprob: -20.000009536743164
    10. '()' → logprob: -20.875009536743164

Token 54: ' -' (ID: 533)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4529969096183777
    2. '):
' → logprob: -1.7029969692230225
    3. '-' → logprob: -2.2029969692230225
    4. ' -' → logprob: -3.2029969692230225
    5. '1' → logprob: -3.8279969692230225
    6. ' ):' → logprob: -5.577996730804443
    7. ' ' → logprob: -6.327996730804443
    8. '2' → logprob: -6.452996730804443
    9. ')' → logprob: -7.452996730804443
    10. '   ' → logprob: -7.827996730804443

Token 55: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03379196301102638
    2. ' ' → logprob: -3.408792018890381
    3. '2' → logprob: -9.158791542053223
    4. '   ' → logprob: -10.408791542053223
    5. '  ' → logprob: -12.908791542053223
    6. ' i' → logprob: -13.658791542053223
    7. 'i' → logprob: -13.971291542053223
    8. '<|end|>' → logprob: -14.033791542053223
    9. '3' → logprob: -14.096291542053223
    10. '    ' → logprob: -14.283791542053223

Token 56: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00010700009443098679
    2. '2' → logprob: -9.500106811523438
    3. ' ' → logprob: -10.375106811523438
    4. '   ' → logprob: -14.750106811523438
    5. '3' → logprob: -16.375106811523438
    6. '  ' → logprob: -16.375106811523438
    7. '１' → logprob: -16.500106811523438
    8. 'i' → logprob: -16.812606811523438
    9. '```' → logprob: -17.125106811523438
    10. '-' → logprob: -18.375106811523438

Token 57: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.525543212890625
    2. '):
' → logprob: -0.900543212890625
    3. ')' → logprob: -6.650543212890625
    4. ':' → logprob: -7.650543212890625
    5. '):
' → logprob: -7.775543212890625
    6. ' ):' → logprob: -8.900543212890625
    7. ' ):
' → logprob: -9.525543212890625
    8. ',' → logprob: -12.275543212890625
    9. '):

' → logprob: -12.775543212890625
    10. ':
' → logprob: -12.900543212890625

Token 58: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014286909252405167
    2. '       ' → logprob: -5.764286994934082
    3. '    
' → logprob: -6.139286994934082
    4. ' ans' → logprob: -6.139286994934082
    5. '+' → logprob: -6.389286994934082
    6. ' 
' → logprob: -6.389286994934082
    7. ' ' → logprob: -7.264286994934082
    8. '
' → logprob: -7.764286994934082
    9. '	ans' → logprob: -7.764286994934082
    10. ' +' → logprob: -8.014286994934082

Token 59: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.5090467929840088
    2. ' ans' → logprob: -1.0090467929840088
    3. '   ' → logprob: -3.509046792984009
    4. '	ans' → logprob: -5.50904655456543
    5. ' ' → logprob: -8.75904655456543
    6. '(ans' → logprob: -9.50904655456543
    7. ' if' → logprob: -10.13404655456543
    8. 'if' → logprob: -10.63404655456543
    9. '```' → logprob: -10.63404655456543
    10. '_ans' → logprob: -10.75904655456543

Token 60: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.07905469834804535
    2. '[' → logprob: -2.579054594039917
    3. '[I' → logprob: -9.079054832458496
    4. ' [' → logprob: -10.829054832458496
    5. '[j' → logprob: -12.204054832458496
    6. '\[' → logprob: -12.329054832458496
    7. '[N' → logprob: -12.954054832458496
    8. '[...]' → logprob: -13.079054832458496
    9. '```' → logprob: -13.454054832458496
    10. '[n' → logprob: -13.579054832458496

Token 61: ']' (ID: 60)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.13076166808605194
    2. ' +' → logprob: -2.1307616233825684
    3. ']' → logprob: -5.630761623382568
    4. '+]' → logprob: -8.505762100219727
    5. '1' → logprob: -10.755762100219727
    6. '   ' → logprob: -12.380762100219727
    7. ' ]' → logprob: -12.630762100219727
    8. '＋' → logprob: -13.255762100219727
    9. ' ' → logprob: -13.505762100219727
    10. ']+' → logprob: -13.630762100219727

Token 62: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.45154279470443726
    2. '+' → logprob: -1.576542854309082
    3. '=' → logprob: -1.951542854309082
    4. '1' → logprob: -4.576542854309082
    5. '+=' → logprob: -5.951542854309082
    6. ' +=' → logprob: -7.201542854309082
    7. ' ' → logprob: -8.451542854309082
    8. '=max' → logprob: -8.576542854309082
    9. '=min' → logprob: -9.326542854309082
    10. ']' → logprob: -9.451542854309082

Token 63: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.034446243196725845
    2. 'max' → logprob: -3.6594462394714355
    3. ' min' → logprob: -5.1594462394714355
    4. 'B' → logprob: -6.1594462394714355
    5. ' max' → logprob: -8.534446716308594
    6. ' B' → logprob: -10.659446716308594
    7. 'm' → logprob: -11.409446716308594
    8. 'ans' → logprob: -11.659446716308594
    9. '(min' → logprob: -13.034446716308594
    10. ' ' → logprob: -13.284446716308594

Token 64: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.0005669722449965775
    2. '(B' → logprob: -7.5005669593811035
    3. '(' → logprob: -11.250567436218262
    4. 'ans' → logprob: -15.250567436218262
    5. '(A' → logprob: -15.625567436218262
    6. '(a' → logprob: -15.625567436218262
    7. '(answer' → logprob: -16.000566482543945
    8. '(an' → logprob: -16.000566482543945
    9. '(b' → logprob: -16.875566482543945
    10. '(min' → logprob: -17.000566482543945

Token 65: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.2352385965641588e-05
    2. '[' → logprob: -11.375012397766113
    3. ' [' → logprob: -15.375012397766113
    4. '[j' → logprob: -16.000011444091797
    5. '[
' → logprob: -16.375011444091797
    6. ' ' → logprob: -16.625011444091797
    7. '(i' → logprob: -16.750011444091797
    8. 'i' → logprob: -16.875011444091797
    9. '[I' → logprob: -17.500011444091797
    10. '   ' → logprob: -17.625011444091797

Token 66: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.01301951240748167
    2. '[i' → logprob: -4.513019561767578
    3. ']' → logprob: -6.388019561767578
    4. ' ],' → logprob: -9.513019561767578
    5. '][' → logprob: -9.638019561767578
    6. '],[' → logprob: -9.763019561767578
    7. '+' → logprob: -10.263019561767578
    8. '   ' → logprob: -10.888019561767578
    9. '[' → logprob: -11.263019561767578
    10. '],
' → logprob: -12.138019561767578

Token 67: ' B' (ID: 418)
  Prédit: ' B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.5233287811279297
    2. 'B' → logprob: -0.8983287811279297
    3. '   ' → logprob: -9.27332878112793
    4. ' ans' → logprob: -9.64832878112793
    5. ' ' → logprob: -10.64832878112793
    6. 'b' → logprob: -12.02332878112793
    7. 'ans' → logprob: -12.14832878112793
    8. '	B' → logprob: -12.39832878112793
    9. '  ' → logprob: -12.64832878112793
    10. ')' → logprob: -14.02332878112793

Token 68: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.8074162653647363e-05
    2. '[' → logprob: -11.125018119812012
    3. 'i' → logprob: -13.125018119812012
    4. '   ' → logprob: -15.125018119812012
    5. ' i' → logprob: -15.125018119812012
    6. ')' → logprob: -15.500018119812012
    7. '[I' → logprob: -15.875018119812012
    8. ' [' → logprob: -16.500017166137695
    9. '[
' → logprob: -16.750017166137695
    10. '[j' → logprob: -17.000017166137695

Token 69: '])
' (ID: 5169)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1701643019914627
    2. '])' → logprob: -1.9201643466949463
    3. '])
' → logprob: -5.670164108276367
    4. ')' → logprob: -5.670164108276367
    5. ' +' → logprob: -6.295164108276367
    6. ']' → logprob: -7.920164108276367
    7. ')
' → logprob: -8.545164108276367
    8. '1' → logprob: -9.170164108276367
    9. '   ' → logprob: -9.420164108276367
    10. '[i' → logprob: -9.545164108276367

Token 70: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.41465678811073303
    2. '+' → logprob: -2.1646568775177
    3. '
' → logprob: -2.2896568775177
    4. '[i' → logprob: -2.6646568775177
    5. '[' → logprob: -4.039656639099121
    6. ')' → logprob: -4.289656639099121
    7. '       ' → logprob: -6.039656639099121
    8. '+
' → logprob: -6.039656639099121
    9. '    
' → logprob: -6.164656639099121
    10. ' 
' → logprob: -6.289656639099121

Token 71: ' ans' (ID: 3345)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5462461113929749
    2. ' ans' → logprob: -1.54624605178833
    3. 'ans' (adapté à ' ans') → logprob: -1.67124605178833
    4. '       ' → logprob: -4.67124605178833
    5. ' ' → logprob: -5.79624605178833
    6. '+' → logprob: -6.29624605178833
    7. ' i' → logprob: -6.54624605178833
    8. 'i' → logprob: -7.29624605178833
    9. '  ' → logprob: -7.42124605178833
    10. '	ans' → logprob: -7.42124605178833

Token 72: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.069664333248511e-05
    2. '[' → logprob: -10.875020980834961
    3. '[I' → logprob: -14.750020980834961
    4. ' [' → logprob: -15.375020980834961
    5. '   ' → logprob: -15.500020980834961
    6. '[j' → logprob: -15.625020980834961
    7. '[++' → logprob: -16.00002098083496
    8. '```' → logprob: -16.12502098083496
    9. ' ' → logprob: -16.37502098083496
    10. 'i' → logprob: -16.50002098083496

Token 73: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.06997056305408478
    2. ' +' → logprob: -2.6949706077575684
    3. ']' → logprob: -10.56997013092041
    4. '+]' → logprob: -13.06997013092041
    5. '+i' → logprob: -13.56997013092041
    6. '1' → logprob: -13.69497013092041
    7. '＋' → logprob: -13.81997013092041
    8. '-' → logprob: -13.94497013092041
    9. ' ' → logprob: -14.31997013092041
    10. '   ' → logprob: -14.94497013092041

Token 74: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004970458801835775
    2. ' ' → logprob: -5.879970550537109
    3. ']' → logprob: -6.754970550537109
    4. ')' → logprob: -7.254970550537109
    5. 'i' → logprob: -8.62997055053711
    6. '   ' → logprob: -10.00497055053711
    7. '])' → logprob: -11.37997055053711
    8. '0' → logprob: -11.62997055053711
    9. ' i' → logprob: -11.62997055053711
    10. '+' → logprob: -11.75497055053711

Token 75: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.014334852807223797
    2. 'i' → logprob: -4.264334678649902
    3. ' ' → logprob: -9.389334678649902
    4. ']' → logprob: -10.639334678649902
    5. ')' → logprob: -10.764334678649902
    6. 'min' → logprob: -11.639334678649902
    7. ' i' → logprob: -11.764334678649902
    8. '0' → logprob: -12.139334678649902
    9. '   ' → logprob: -12.514334678649902
    10. '[i' → logprob: -12.889334678649902

Token 76: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03683267533779144
    2. ' =' → logprob: -3.911832571029663
    3. '=' → logprob: -5.161832809448242
    4. ')' → logprob: -5.286832809448242
    5. ' ]' → logprob: -5.286832809448242
    6. ']=' → logprob: -8.786832809448242
    7. ' )' → logprob: -9.411832809448242
    8. ' ' → logprob: -9.786832809448242
    9. ',' → logprob: -12.036832809448242
    10. '   ' → logprob: -12.661832809448242

Token 77: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3132636249065399
    2. '=' → logprob: -1.3132636547088623
    3. '=min' → logprob: -13.938263893127441
    4. ' ' → logprob: -14.563263893127441
    5. ')' → logprob: -15.688263893127441
    6. 'min' → logprob: -16.188262939453125
    7. '＝' → logprob: -16.313262939453125
    8. ' +=' → logprob: -16.813262939453125
    9. '+=' → logprob: -17.188262939453125
    10. ',' → logprob: -17.563262939453125

Token 78: ' B' (ID: 418)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.0652942806482315
    2. ' min' → logprob: -2.8152942657470703
    3. 'B' → logprob: -5.81529426574707
    4. ' B' → logprob: -8.31529426574707
    5. 'max' → logprob: -9.94029426574707
    6. 'm' → logprob: -11.19029426574707
    7. '   ' → logprob: -11.81529426574707
    8. ' ' → logprob: -12.31529426574707
    9. 'b' → logprob: -12.44029426574707
    10. 'mi' → logprob: -12.69029426574707

Token 79: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.4021237802808173e-05
    2. '[' → logprob: -11.250014305114746
    3. '[I' → logprob: -14.375014305114746
    4. ' [' → logprob: -16.12501335144043
    5. 'i' → logprob: -17.12501335144043
    6. '   ' → logprob: -17.62501335144043
    7. '[j' → logprob: -17.75001335144043
    8. '[min' → logprob: -18.12501335144043
    9. ' i' → logprob: -18.37501335144043
    10. '	i' → logprob: -18.37501335144043

Token 80: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002634991891682148
    2. ' if' → logprob: -7.2526350021362305
    3. ' )' → logprob: -7.3776350021362305
    4. '[i' → logprob: -7.5026350021362305
    5. ')
' → logprob: -8.12763500213623
    6. '[' → logprob: -9.37763500213623
    7. ']' → logprob: -9.87763500213623
    8. ')i' → logprob: -9.87763500213623
    9. 'if' → logprob: -10.00263500213623
    10. ',' → logprob: -10.37763500213623

Token 81: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 82: ' print' (ID: 2123)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 83: '(sum' (ID: 45528)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2607736587524414
    2. '(*' → logprob: -1.6357736587524414
    3. '('' → logprob: -3.7607736587524414
    4. '(ans' → logprob: -5.135773658752441
    5. '("' → logprob: -5.510773658752441
    6. '(sum' → logprob: -7.385773658752441
    7. '()' → logprob: -8.260773658752441
    8. '(len' → logprob: -8.635773658752441
    9. '(max' → logprob: -9.010773658752441
    10. '(min' → logprob: -9.010773658752441

Token 84: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -6.73052782076411e-05
    2. '(' → logprob: -9.625067710876465
    3. '(answer' → logprob: -14.625067710876465
    4. ')' → logprob: -14.625067710876465
    5. '(an' → logprob: -15.750067710876465
    6. '(a' → logprob: -16.50006675720215
    7. ' (' → logprob: -16.87506675720215
    8. 'ans' → logprob: -17.00006675720215
    9. '(abs' → logprob: -17.50006675720215
    10. '(
' → logprob: -18.25006675720215

Token 85: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.008643882349133492
    2. ')' → logprob: -4.758644104003906
    3. '))
' → logprob: -11.008644104003906
    4. ')))' → logprob: -12.008644104003906
    5. ' ))' → logprob: -12.633644104003906
    6. ')
' → logprob: -13.883644104003906
    7. ' )' → logprob: -14.758644104003906
    8. ' ' → logprob: -15.008644104003906
    9. '])' → logprob: -15.258644104003906
    10. '()))' → logprob: -15.258644104003906

Token 86: 'main' (ID: 7731)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2332863062620163
    2. '<|end|>' → logprob: -1.8582862615585327
    3. 'if' → logprob: -3.7332863807678223
    4. '
' → logprob: -4.858286380767822
    5. '```' → logprob: -5.358286380767822
    6. ' ' → logprob: -5.733286380767822
    7. '#' → logprob: -6.358286380767822
    8. ' if' → logprob: -6.358286380767822
    9. ':' → logprob: -6.483286380767822
    10. '[' → logprob: -6.483286380767822

Token 87: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.03864677995443344
    2. '(' → logprob: -3.288646697998047
    3. '()
' → logprob: -7.663646697998047
    4. '(
' → logprob: -9.538646697998047
    5. '()

' → logprob: -10.788646697998047
    6. '()`' → logprob: -11.413646697998047
    7. ' ()' → logprob: -12.413646697998047
    8. '```' → logprob: -12.413646697998047
    9. '()\' → logprob: -12.538646697998047
    10. '(

' → logprob: -12.663646697998047


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 85
Tokens correctement prédits (1ère position, stricte): 39
Tokens correctement prédits (1ère position, avec adaptation): 40
Tokens correctement prédits (top 10): 70
Précision stricte (1ère position): 45.88%
Précision adaptée (1ère position): 47.06%
Précision (top 10): 82.35%
================================================================================
