================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:16:02
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from sys import stdin, exit

read = stdin.readline

n, a, b, c = [int(x) for x in read().split()]
slist=[]
[dummy := slist.append(read().strip()) for _ in range(n)]

answer = list()

def pushA():
    global a, b
    a += 1; b -= 1
    answer.append("A")

def pushB():
    global a, b
    b += 1; a -= 1
    answer.append("B")

def pushC():
    global c, b
    c += 1; b -= 1
    answer.append("C")

i = 0
while i < n:
    ss = slist[i]
    # object for side effects
    class Ctx: pass

    if ss == "AB":
        if a == b and b == 1 and i < n - 1:
            if slist[i+1] == "AC":
                A, B = a+1, b-1
                a, b = A, B
                answer.append('A')
            else:
                B, A = b+1, a-1
                b, a = B, A
                answer.append("B")
        else:
            obj = Ctx()
            (setattr(obj,'m',min(a,b)))
            if obj.m == a:
                a += 1; b -= 1
                answer.append('A')
            else:
                b += 1; a -=1
                answer.append('B')
    elif ss == "BC":
        if b == c and c == 1 and i < n - 1:
            if slist[i+1] == "AC":
                c+=1; b-=1
                answer.append("C")
            else:
                b+=1; c-=1
                answer.append("B")
        else:
            xs = [b, c]
            if min(xs) == b:
                b += 1; c -= 1
                answer.append('B')
            else:
                c += 1; b -=1
                answer.append('C')
    else:
        if a == c and c == 1 and i < n - 1:
            if slist[i+1] == "AB":
                a+=1; c-=1
                answer.append('A')
            else:
                c+=1; a-=1
                answer.append('C')
        else:
            switch = {True: lambda: (a+1, c-1, 'A'),
                      False: lambda: (c+1, a-1, 'C')}
            res = switch[min(a,c)==a]()
            (a if res[2]=='A' else c), (c if res[2]=='A' else a) = res[0], res[1]
            answer.append(res[2])
    if min(a,b,c)<0:
        print("No")
        exit()
    i+=1

print("Yes")
for x in answer: print(x)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' stdin' (ID: 75143)
  Prédit: 'argv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'argv' → logprob: -0.401660680770874
    2. 'exit' → logprob: -1.776660680770874
    3. ' exit' → logprob: -2.401660680770874
    4. ' argv' → logprob: -2.901660680770874
    5. 'import' → logprob: -4.526660919189453
    6. 'stdout' → logprob: -5.901660919189453
    7. 'path' → logprob: -7.026660919189453
    8. ' import' → logprob: -7.401660919189453
    9. 'stdin' → logprob: -7.776660919189453
    10. 'version' → logprob: -8.526660919189453

Token 4: ',' (ID: 11)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.011413240805268288
    2. '.readline' → logprob: -4.886413097381592
    3. '\n' → logprob: -6.386413097381592
    4. '.read' → logprob: -7.636413097381592
    5. 'import' → logprob: -8.01141357421875
    6. '
' → logprob: -8.26141357421875
    7. '```' → logprob: -8.51141357421875
    8. ',' → logprob: -8.76141357421875
    9. 'newline' → logprob: -8.76141357421875
    10. '.
' → logprob: -9.01141357421875

Token 5: ' exit' (ID: 10654)
  Prédit: 'stdout'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stdout' → logprob: -0.006219097413122654
    2. ' stdout' → logprob: -5.131218910217285
    3. 'stderr' → logprob: -8.256218910217285
    4. 'argv' → logprob: -10.756218910217285
    5. '.stdout' → logprob: -13.131218910217285
    6. 'set' → logprob: -13.631218910217285
    7. 'exit' → logprob: -14.006218910217285
    8. '(stdout' → logprob: -14.131218910217285
    9. 'stdin' → logprob: -14.131218910217285
    10. '_stdout' → logprob: -14.256218910217285

Token 6: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -1.066246509552002
    2. '\n' → logprob: -1.066246509552002
    3. '```' → logprob: -1.941246509552002
    4. '
' → logprob: -2.816246509552002
    5. '\' → logprob: -2.941246509552002
    6. ',' → logprob: -4.316246509552002
    7. '' → logprob: -4.691246509552002
    8. 'newline' → logprob: -4.816246509552002
    9. 'import' → logprob: -5.066246509552002
    10. '.
' → logprob: -5.941246509552002

Token 7: 'read' (ID: 1293)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9571006894111633
    2. '\n' → logprob: -0.9571006894111633
    3. '.' → logprob: -1.9571006298065186
    4. '```' → logprob: -3.7071006298065186
    5. '\' → logprob: -4.082100868225098
    6. ',' → logprob: -4.707100868225098
    7. 'newline' → logprob: -4.832100868225098
    8. '' → logprob: -5.207100868225098
    9. 'import' → logprob: -5.457100868225098
    10. '

' → logprob: -5.457100868225098

Token 8: ' =' (ID: 314)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.2950670123100281
    2. '()' → logprob: -1.9200670719146729
    3. '_line' → logprob: -2.795067071914673
    4. '(' → logprob: -3.170067071914673
    5. '_' → logprob: -5.920066833496094
    6. 'Line' → logprob: -7.295066833496094
    7. 'ing' → logprob: -7.420066833496094
    8. 'from' → logprob: -7.795066833496094
    9. 'lines' → logprob: -8.045066833496094
    10. ')' → logprob: -8.795066833496094

Token 9: ' stdin' (ID: 75143)
  Prédit: ' stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stdin' → logprob: -0.3137785494327545
    2. 'stdin' → logprob: -1.3137785196304321
    3. '(stdin' → logprob: -7.938778400421143
    4. ' lambda' → logprob: -9.3137788772583
    5. '.stdin' → logprob: -9.8137788772583
    6. 'lambda' → logprob: -11.3137788772583
    7. 'input' → logprob: -14.0637788772583
    8. ' input' → logprob: -14.4387788772583
    9. 'stdout' → logprob: -14.5637788772583
    10. ' readline' → logprob: -14.9387788772583

Token 10: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.2631678283214569
    2. '.' → logprob: -1.5131678581237793
    3. '.read' → logprob: -4.513167858123779
    4. '.readlines' → logprob: -8.638167381286621
    5. 'read' → logprob: -12.013167381286621
    6. '.get' → logprob: -12.263167381286621
    7. '.Read' → logprob: -12.513167381286621
    8. '.write' → logprob: -12.638167381286621
    9. '```' → logprob: -13.388167381286621
    10. '.\' → logprob: -13.388167381286621

Token 11: '

' (ID: 279)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.04422677680850029
    2. '(' → logprob: -3.169226884841919
    3. '(
' → logprob: -7.91922664642334
    4. '()
' → logprob: -8.16922664642334
    5. '```' → logprob: -8.66922664642334
    6. ')' → logprob: -9.29422664642334
    7. '()

' → logprob: -9.54422664642334
    8. '())' → logprob: -10.41922664642334
    9. '()\' → logprob: -10.54422664642334
    10. '<|end|>' → logprob: -10.66922664642334

Token 12: 'n' (ID: 77)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.0408698320388794
    2. '(' → logprob: -1.4158698320388794
    3. '()' → logprob: -1.9158698320388794
    4. 'for' → logprob: -2.04086971282959
    5. 'data' → logprob: -3.41586971282959
    6. 'while' → logprob: -3.66586971282959
    7. 'n' → logprob: -3.91586971282959
    8. 'x' → logprob: -4.41586971282959
    9. '_' → logprob: -5.04086971282959
    10. 'input' → logprob: -5.16586971282959

Token 13: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5867687463760376
    2. ' ' → logprob: -1.4617687463760376
    3. '=' → logprob: -1.5867687463760376
    4. '_' → logprob: -5.836768627166748
    5. ')' → logprob: -5.961768627166748
    6. ',' → logprob: -7.461768627166748
    7. '.' → logprob: -7.961768627166748
    8. '  ' → logprob: -8.086769104003906
    9. ' )' → logprob: -8.711769104003906
    10. '<|end|>' → logprob: -9.336769104003906

Token 14: ' a' (ID: 261)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.7734919786453247
    2. ' m' → logprob: -0.7734919786453247
    3. ' ' → logprob: -2.648491859436035
    4. ' k' → logprob: -5.898491859436035
    5. 'k' → logprob: -6.398491859436035
    6. ' =' → logprob: -7.523491859436035
    7. '=' → logprob: -7.648491859436035
    8. ' n' → logprob: -8.398491859436035
    9. 'n' → logprob: -8.898491859436035
    10. 'input' → logprob: -9.648491859436035

Token 15: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12746556103229523
    2. ' =' → logprob: -2.1274654865264893
    3. ',' → logprob: -8.25246524810791
    4. ' ' → logprob: -9.00246524810791
    5. 's' → logprob: -10.25246524810791
    6. ')' → logprob: -11.12746524810791
    7. 'l' → logprob: -11.37746524810791
    8. 'r' → logprob: -11.37746524810791
    9. 'b' → logprob: -11.50246524810791
    10. 'm' → logprob: -11.62746524810791

Token 16: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.11634083837270737
    2. ' b' → logprob: -2.2413408756256104
    3. 'k' → logprob: -6.616340637207031
    4. 'm' → logprob: -6.991340637207031
    5. ' k' → logprob: -8.241340637207031
    6. 'd' → logprob: -8.491340637207031
    7. ' m' → logprob: -8.866340637207031
    8. 'x' → logprob: -8.991340637207031
    9. 'q' → logprob: -9.366340637207031
    10. ' =' → logprob: -9.616340637207031

Token 17: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868878483772278
    2. '=' → logprob: -1.136887788772583
    3. ',' → logprob: -11.136887550354004
    4. ' ' → logprob: -13.386887550354004
    5. ')' → logprob: -15.261887550354004
    6. '=line' → logprob: -16.13688850402832
    7. '=input' → logprob: -16.26188850402832
    8. '=int' → logprob: -16.63688850402832
    9. '=

' → logprob: -17.13688850402832
    10. '_' → logprob: -17.26188850402832

Token 18: ' c' (ID: 274)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8604128360748291
    2. ' =' → logprob: -1.235412836074829
    3. 'c' → logprob: -1.610412836074829
    4. ' c' → logprob: -2.485412836074829
    5. ' ' → logprob: -6.98541259765625
    6. '=c' → logprob: -8.48541259765625
    7. ' s' → logprob: -8.61041259765625
    8. 'q' → logprob: -8.73541259765625
    9. ' t' → logprob: -8.73541259765625
    10. '=input' → logprob: -8.98541259765625

Token 19: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3145127296447754
    2. '=' → logprob: -1.3145127296447754
    3. ',' → logprob: -6.689512729644775
    4. ')' → logprob: -13.064512252807617
    5. ' ' → logprob: -13.939512252807617
    6. ' ,' → logprob: -14.314512252807617
    7. '=input' → logprob: -14.814512252807617
    8. '  ' → logprob: -15.564512252807617
    9. ' =",' → logprob: -15.814512252807617
    10. '=

' → logprob: -15.877012252807617

Token 20: ' [' (ID: 723)
  Prédit: ' map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.3133350908756256
    2. 'map' → logprob: -1.3133350610733032
    3. ' read' → logprob: -10.063335418701172
    4. 'read' → logprob: -11.688335418701172
    5. '(map' → logprob: -12.063335418701172
    6. ' list' → logprob: -12.188335418701172
    7. '[' → logprob: -12.563335418701172
    8. ' ' → logprob: -13.188335418701172
    9. ' [' → logprob: -13.313335418701172
    10. 'list' → logprob: -13.438335418701172

Token 21: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.007524751592427492
    2. ' int' → logprob: -5.0075249671936035
    3. 'map' → logprob: -7.2575249671936035
    4. ' map' → logprob: -9.507524490356445
    5. '*' → logprob: -12.007524490356445
    6. ']int' → logprob: -12.132524490356445
    7. 'read' → logprob: -12.757524490356445
    8. ' ' → logprob: -13.132524490356445
    9. '0' → logprob: -13.257524490356445
    10. '  ' → logprob: -13.257524490356445

Token 22: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.07171545922756195
    2. '(read' → logprob: -2.9467153549194336
    3. '(' → logprob: -4.571715354919434
    4. '(i' → logprob: -5.321715354919434
    5. ']' → logprob: -6.946715354919434
    6. '()]' → logprob: -8.446715354919434
    7. '(s' → logprob: -9.571715354919434
    8. '(token' → logprob: -9.821715354919434
    9. '(item' → logprob: -10.321715354919434
    10. '(_)' → logprob: -10.946715354919434

Token 23: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2305242270231247
    2. '(read' → logprob: -1.6055241823196411
    3. 'read' → logprob: -6.480524063110352
    4. '())' → logprob: -6.730524063110352
    5. '()' → logprob: -7.105524063110352
    6. '(' → logprob: -7.230524063110352
    7. ')]' → logprob: -7.605524063110352
    8. '(stdin' → logprob: -8.855524063110352
    9. '()]' → logprob: -9.980524063110352
    10. ' read' → logprob: -10.730524063110352

Token 24: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.495414674282074
    2. ' read' → logprob: -1.6204147338867188
    3. '(read' → logprob: -2.2454147338867188
    4. 'read' → logprob: -2.9954147338867188
    5. ')' → logprob: -3.6204147338867188
    6. 'for' → logprob: -5.245414733886719
    7. ' ' → logprob: -6.870414733886719
    8. ' in' → logprob: -7.245414733886719
    9. '.read' → logprob: -7.245414733886719
    10. ']' → logprob: -7.495414733886719

Token 25: ' x' (ID: 1215)
  Prédit: ' read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.004178717732429504
    2. 'read' → logprob: -5.504178524017334
    3. ' x' → logprob: -10.004179000854492
    4. ' in' → logprob: -10.879179000854492
    5. ' readline' → logprob: -10.879179000854492
    6. ' stdin' → logprob: -11.629179000854492
    7. 'stdin' → logprob: -12.629179000854492
    8. ' input' → logprob: -13.254179000854492
    9. '	read' → logprob: -13.629179000854492
    10. ' ' → logprob: -14.629179000854492

Token 26: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.14785891771316528
    2. '.readline' → logprob: -2.2728588581085205
    3. 'in' → logprob: -4.2728590965271
    4. ' readline' → logprob: -5.2728590965271
    5. '(stdin' → logprob: -5.6478590965271
    6. 'read' → logprob: -5.7728590965271
    7. ' ' → logprob: -6.3978590965271
    8. ' read' → logprob: -6.5228590965271
    9. '.read' → logprob: -6.7728590965271
    10. 'input' → logprob: -7.2728590965271

Token 27: ' read' (ID: 1729)
  Prédit: ' read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.2811751067638397
    2. 'read' → logprob: -1.406175136566162
    3. ' readline' → logprob: -11.656174659729004
    4. ' input' → logprob: -12.031174659729004
    5. ' stdin' → logprob: -13.031174659729004
    6. 'stdin' → logprob: -13.031174659729004
    7. '	read' → logprob: -13.281174659729004
    8. 'input' → logprob: -13.281174659729004
    9. ' ' → logprob: -14.156174659729004
    10. '(read' → logprob: -14.406174659729004

Token 28: '().' (ID: 1454)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.6552633047103882
    2. '()' → logprob: -0.9052633047103882
    3. '().' → logprob: -2.6552634239196777
    4. '())' → logprob: -5.155263423919678
    5. '()][' → logprob: -9.53026294708252
    6. '()].' → logprob: -10.03026294708252
    7. '(' → logprob: -10.78026294708252
    8. '()[' → logprob: -11.28026294708252
    9. '()>' → logprob: -11.53026294708252
    10. '()<' → logprob: -11.90526294708252

Token 29: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.4927031099796295
    2. 'split' → logprob: -0.9927030801773071
    3. 'rstrip' → logprob: -3.9927031993865967
    4. ' split' → logprob: -13.117703437805176
    5. '(split' → logprob: -13.992703437805176
    6. ' strip' → logprob: -14.492703437805176
    7. '```' → logprob: -15.617703437805176
    8. '(strip' → logprob: -16.24270248413086
    9. '().' → logprob: -16.61770248413086
    10. '()' → logprob: -17.11770248413086

Token 30: '()]
' (ID: 67155)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.59419846534729
    2. '()]' → logprob: -0.84419846534729
    3. '(' → logprob: -4.969198226928711
    4. '()' → logprob: -5.219198226928711
    5. ')]' → logprob: -5.344198226928711
    6. '('' → logprob: -7.219198226928711
    7. ')' → logprob: -9.219198226928711
    8. ']' → logprob: -10.344198226928711
    9. '')]' → logprob: -10.469198226928711
    10. '()][' → logprob: -11.594198226928711

Token 31: 's' (ID: 82)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.30330178141593933
    2. '
' → logprob: -2.0533018112182617
    3. '\n' → logprob: -3.0533018112182617
    4. 'd' → logprob: -3.4283018112182617
    5. 'n' → logprob: -4.053301811218262
    6. 's' → logprob: -4.678301811218262
    7. ' 
' → logprob: -5.553301811218262
    8. 'result' → logprob: -6.053301811218262
    9. 'max' → logprob: -6.053301811218262
    10. 'if' → logprob: -6.053301811218262

Token 32: 'list' (ID: 2641)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6339157819747925
    2. '=' → logprob: -0.7589157819747925
    3. '[' → logprob: -7.383915901184082
    4. ' ' → logprob: -8.508915901184082
    5. '.' → logprob: -8.883915901184082
    6. '_' → logprob: -8.883915901184082
    7. '[:]' → logprob: -9.508915901184082
    8. 's' → logprob: -11.633915901184082
    9. 'tring' → logprob: -11.758915901184082
    10. ',' → logprob: -11.758915901184082

Token 33: '=[]
' (ID: 63466)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3623112738132477
    2. ' =' → logprob: -1.2373112440109253
    3. '.' → logprob: -5.237311363220215
    4. '_' → logprob: -5.862311363220215
    5. '[' → logprob: -5.862311363220215
    6. 's' → logprob: -7.112311363220215
    7. 't' → logprob: -7.487311363220215
    8. 'ist' → logprob: -8.237311363220215
    9. '=[]' → logprob: -8.362311363220215
    10. ')' → logprob: -8.612311363220215

Token 34: '[d' (ID: 48377)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00171278219204396
    2. ' for' → logprob: -6.501712799072266
    3. 's' → logprob: -8.626712799072266
    4. '
' → logprob: -10.876712799072266
    5. '\n' → logprob: -13.001712799072266
    6. '```' → logprob: -13.001712799072266
    7. 'while' → logprob: -13.126712799072266
    8. ' 
' → logprob: -13.876712799072266
    9. 'f' → logprob: -14.626712799072266
    10. '\' → logprob: -14.626712799072266

Token 35: 'ummy' (ID: 13149)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.907362699508667
    2. 'append' → logprob: -1.282362699508667
    3. '=' → logprob: -2.032362699508667
    4. 'o' → logprob: -2.907362699508667
    5. '.append' → logprob: -3.157362699508667
    6. 's' → logprob: -3.282362699508667
    7. 'x' → logprob: -3.907362699508667
    8. 'for' → logprob: -4.907362937927246
    9. ' =' → logprob: -6.282362937927246
    10. '=int' → logprob: -6.282362937927246

Token 36: ' :=' (ID: 3405)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.941400408744812
    2. ' for' → logprob: -1.566400408744812
    3. 'for' → logprob: -1.941400408744812
    4. '=' → logprob: -2.0664005279541016
    5. 'append' → logprob: -2.9414005279541016
    6. ' =' → logprob: -3.1914005279541016
    7. ' append' → logprob: -4.441400527954102
    8. 's' → logprob: -5.191400527954102
    9. ']' → logprob: -5.816400527954102
    10. '_' → logprob: -6.316400527954102

Token 37: ' sl' (ID: 1925)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.0233032703399658
    2. 'read' → logprob: -1.3983032703399658
    3. '0' → logprob: -2.148303270339966
    4. ' int' → logprob: -3.023303270339966
    5. '[]' → logprob: -3.148303270339966
    6. 'a' → logprob: -3.148303270339966
    7. 's' → logprob: -3.273303270339966
    8. ' read' → logprob: -3.523303270339966
    9. 'n' → logprob: -4.523303031921387
    10. ' s' → logprob: -5.023303031921387

Token 38: 'ist' (ID: 421)
  Prédit: 'ist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ist' → logprob: -0.0013211923651397228
    2. 'st' → logprob: -6.876321315765381
    3. '[' → logprob: -8.876320838928223
    4. 'it' → logprob: -10.626320838928223
    5. '[]' → logprob: -10.626320838928223
    6. '[i' → logprob: -11.501320838928223
    7. '=[]' → logprob: -11.626320838928223
    8. 'ap' → logprob: -11.751320838928223
    9. 'at' → logprob: -12.001320838928223
    10. '```' → logprob: -12.126320838928223

Token 39: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -1.747814349073451e-05
    2. '.' → logprob: -11.375017166137695
    3. '.extend' → logprob: -12.375017166137695
    4. '.Append' → logprob: -14.750017166137695
    5. 'append' → logprob: -15.000017166137695
    6. '.clear' → logprob: -15.250017166137695
    7. '.app' → logprob: -15.250017166137695
    8. '_append' → logprob: -16.125017166137695
    9. '.add' → logprob: -16.375017166137695
    10. '.pop' → logprob: -16.500017166137695

Token 40: '(read' (ID: 45738)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.9039022922515869
    2. '(read' → logprob: -1.153902292251587
    3. '(int' → logprob: -1.778902292251587
    4. '('' → logprob: -2.778902292251587
    5. '(s' → logprob: -4.028902053833008
    6. '((' → logprob: -4.653902053833008
    7. '(str' → logprob: -5.153902053833008
    8. '(a' → logprob: -5.528902053833008
    9. '(input' → logprob: -5.903902053833008
    10. '(x' → logprob: -6.653902053833008

Token 41: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.2119489312171936
    2. '())' → logprob: -1.7119488716125488
    3. '()' → logprob: -4.586948871612549
    4. '()]' → logprob: -8.836949348449707
    5. '()))' → logprob: -9.336949348449707
    6. '())
' → logprob: -10.836949348449707
    7. '()
' → logprob: -10.961949348449707
    8. ' ())' → logprob: -12.211949348449707
    9. '(' → logprob: -12.336949348449707
    10. '()),' → logprob: -12.586949348449707

Token 42: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.061972394585609436
    2. 'rstrip' → logprob: -2.8119723796844482
    3. 'split' → logprob: -13.186972618103027
    4. ' strip' → logprob: -13.311972618103027
    5. ')' → logprob: -14.936972618103027
    6. 'replace' → logprob: -15.061972618103027
    7. '(strip' → logprob: -15.561972618103027
    8. 'r' → logprob: -16.31197166442871
    9. '_strip' → logprob: -16.43697166442871
    10. '.rstrip' → logprob: -16.68697166442871

Token 43: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.020241115242242813
    2. '()' → logprob: -4.5202412605285645
    3. '()))' → logprob: -4.7702412605285645
    4. '()]' → logprob: -7.5202412605285645
    5. '()),' → logprob: -9.895240783691406
    6. '(' → logprob: -10.395240783691406
    7. '())
' → logprob: -11.020240783691406
    8. ' ())' → logprob: -11.645240783691406
    9. '());' → logprob: -12.145240783691406
    10. '())))' → logprob: -12.395240783691406

Token 44: ' for' (ID: 395)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.14240100979804993
    2. ' for' → logprob: -2.6424009799957275
    3. ']' → logprob: -3.1424009799957275
    4. '()' → logprob: -4.517401218414307
    5. '(' → logprob: -5.642401218414307
    6. 'for' → logprob: -5.892401218414307
    7. ' ]' → logprob: -7.017401218414307
    8. ')]' → logprob: -9.517400741577148
    9. '()]
' → logprob: -10.392400741577148
    10. ' (' → logprob: -11.017400741577148

Token 45: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.27015215158462524
    2. 'range' → logprob: -1.5201520919799805
    3. '_' → logprob: -4.0201520919799805
    4. ' _' → logprob: -9.27015209197998
    5. '_range' → logprob: -12.14515209197998
    6. '(range' → logprob: -12.27015209197998
    7. '	range' → logprob: -13.77015209197998
    8. ' ran' → logprob: -14.27015209197998
    9. ' ' → logprob: -14.64515209197998
    10. ' xrange' → logprob: -15.27015209197998

Token 46: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.07590492814779282
    2. ' range' → logprob: -2.9509048461914062
    3. ' in' → logprob: -4.450904846191406
    4. 'in' → logprob: -4.700904846191406
    5. '<|end|>' → logprob: -10.950904846191406
    6. 's' → logprob: -11.700904846191406
    7. '(range' → logprob: -11.825904846191406
    8. ' ' → logprob: -12.700904846191406
    9. ']' → logprob: -12.825904846191406
    10. '	range' → logprob: -12.950904846191406

Token 47: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00016361083544325083
    2. ' range' → logprob: -8.750164031982422
    3. 's' → logprob: -12.625164031982422
    4. '(range' → logprob: -14.375164031982422
    5. 'ran' → logprob: -14.750164031982422
    6. '[' → logprob: -15.250164031982422
    7. 'rang' → logprob: -15.750164031982422
    8. '	range' → logprob: -16.375164031982422
    9. 'r' → logprob: -16.500164031982422
    10. ']' → logprob: -16.625164031982422

Token 48: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0009415964013896883
    2. '(' → logprob: -7.000941753387451
    3. 'n' → logprob: -10.500941276550293
    4. ' (' → logprob: -13.250941276550293
    5. '(
' → logprob: -15.250941276550293
    6. ' n' → logprob: -15.750941276550293
    7. '(int' → logprob: -16.12594223022461
    8. ')n' → logprob: -16.12594223022461
    9. '((' → logprob: -16.25094223022461
    10. '(a' → logprob: -16.37594223022461

Token 49: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0009411195642314851
    2. ')' → logprob: -7.000941276550293
    3. ']' → logprob: -11.000941276550293
    4. ' )' → logprob: -11.500941276550293
    5. ')])' → logprob: -13.750941276550293
    6. ')],' → logprob: -14.875941276550293
    7. ')]
' → logprob: -14.875941276550293
    8. '))' → logprob: -15.750941276550293
    9. '')]' → logprob: -15.875941276550293
    10. '])]' → logprob: -15.875941276550293

Token 50: 'answer' (ID: 17021)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.5370925664901733
    2. 'for' → logprob: -1.5370925664901733
    3. 'max' → logprob: -3.287092685699463
    4. 's' → logprob: -3.787092685699463
    5. 'result' → logprob: -3.787092685699463
    6. 'ans' → logprob: -3.787092685699463
    7. 'd' → logprob: -4.287092685699463
    8. 'res' → logprob: -4.412092685699463
    9. 'count' → logprob: -4.787092685699463
    10. 'score' → logprob: -5.287092685699463

Token 51: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1302436888217926
    2. '=' → logprob: -2.1302437782287598
    3. '_' → logprob: -5.88024377822876
    4. 's' → logprob: -7.75524377822876
    5. ' ' → logprob: -10.755243301391602
    6. '=[]' → logprob: -11.255243301391602
    7. ',' → logprob: -11.380243301391602
    8. '1' → logprob: -12.255243301391602
    9. ':' → logprob: -12.380243301391602
    10. '(' → logprob: -12.505243301391602

Token 52: ' list' (ID: 1562)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.21683378517627716
    2. ' ' → logprob: -1.9668338298797607
    3. '-' → logprob: -3.2168338298797607
    4. ' -' → logprob: -5.466833591461182
    5. 'max' → logprob: -6.091833591461182
    6. ' max' → logprob: -6.216833591461182
    7. '[' → logprob: -6.841833591461182
    8. ' [' → logprob: -7.091833591461182
    9. 'float' → logprob: -7.216833591461182
    10. '[]' → logprob: -7.341833591461182

Token 53: '()

' (ID: 5874)
  Prédit: '(range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.20375244319438934
    2. '()' → logprob: -1.7037523984909058
    3. '(' → logprob: -6.453752517700195
    4. '(map' → logprob: -8.453752517700195
    5. '(s' → logprob: -8.828752517700195
    6. '<|end|>' → logprob: -9.453752517700195
    7. '([' → logprob: -9.578752517700195
    8. '(filter' → logprob: -9.953752517700195
    9. '([]' → logprob: -9.953752517700195
    10. 'range' → logprob: -10.328752517700195

Token 54: 'def' (ID: 1314)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0018290533917024732
    2. 'def' → logprob: -7.626829147338867
    3. 'dp' → logprob: -7.751829147338867
    4. 'if' → logprob: -8.126829147338867
    5. 'i' → logprob: -8.501829147338867
    6. 'max' → logprob: -9.876829147338867
    7. 'while' → logprob: -10.251829147338867
    8. 'a' → logprob: -10.501829147338867
    9. 'from' → logprob: -10.626829147338867
    10. '_' → logprob: -10.626829147338867

Token 55: ' push' (ID: 9349)
  Prédit: ' dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dfs' → logprob: -0.4176104962825775
    2. ' solve' → logprob: -1.5426105260849
    3. ' dp' → logprob: -2.5426104068756104
    4. ' can' → logprob: -5.0426106452941895
    5. ' calc' → logprob: -5.2926106452941895
    6. ' calculate' → logprob: -5.2926106452941895
    7. ' max' → logprob: -5.2926106452941895
    8. ' find' → logprob: -5.4176106452941895
    9. 'solve' → logprob: -5.9176106452941895
    10. ' back' → logprob: -5.9176106452941895

Token 56: 'A' (ID: 32)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.25233060121536255
    2. '(stack' → logprob: -2.6273305416107178
    3. '()' → logprob: -3.0023305416107178
    4. '(s' → logprob: -3.1273305416107178
    5. '_stack' → logprob: -4.752330780029297
    6. '(item' → logprob: -5.127330780029297
    7. '():' → logprob: -5.127330780029297
    8. '(a' → logprob: -5.252330780029297
    9. '(i' → logprob: -5.502330780029297
    10. '_' → logprob: -5.627330780029297

Token 57: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.15677237510681152
    2. '(' → logprob: -2.2817723751068115
    3. '(a' → logprob: -3.5317723751068115
    4. '()' → logprob: -4.656772613525391
    5. ' ():' → logprob: -6.656772613525391
    6. '(i' → logprob: -7.531772613525391
    7. ' (' → logprob: -8.15677261352539
    8. '(x' → logprob: -8.15677261352539
    9. '(A' → logprob: -8.15677261352539
    10. '(s' → logprob: -8.53177261352539

Token 58: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9084092378616333
    2. 'answer' → logprob: -1.2834092378616333
    3. '()' → logprob: -1.5334092378616333
    4. 'if' → logprob: -3.6584091186523438
    5. ' answer' → logprob: -4.033409118652344
    6. ' if' → logprob: -4.158409118652344
    7. '(' → logprob: -4.408409118652344
    8. 's' → logprob: -4.908409118652344
    9. 'pass' → logprob: -5.158409118652344
    10. 'a' → logprob: -5.408409118652344

Token 59: ' global' (ID: 5466)
  Prédit: 'answer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'answer' → logprob: -0.12750712037086487
    2. 'if' → logprob: -2.752507209777832
    3. 'global' (adapté à ' global') → logprob: -3.877507209777832
    4. ' answer' → logprob: -4.252507209777832
    5. 'pass' → logprob: -5.002507209777832
    6. ' if' → logprob: -5.127507209777832
    7. '   ' → logprob: -5.752507209777832
    8. ' global' → logprob: -6.752507209777832
    9. 's' → logprob: -7.002507209777832
    10. 'a' → logprob: -7.002507209777832

Token 60: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.10647305846214294
    2. 'answer' → logprob: -3.106472969055176
    3. ' a' → logprob: -3.231472969055176
    4. 's' → logprob: -4.606472969055176
    5. ' answer' → logprob: -5.481472969055176
    6. 'b' → logprob: -6.981472969055176
    7. 'c' → logprob: -7.231472969055176
    8. ' s' → logprob: -7.856472969055176
    9. ' b' → logprob: -8.731472969055176
    10. 'sl' → logprob: -9.231472969055176

Token 61: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6377140283584595
    2. 'a' → logprob: -1.7627140283584595
    3. '<|end|>' → logprob: -2.38771390914917
    4. '
' → logprob: -2.63771390914917
    5. ',' → logprob: -3.01271390914917
    6. ',a' → logprob: -3.76271390914917
    7. ' a' → logprob: -4.01271390914917
    8. '    
' → logprob: -4.13771390914917
    9. '    ' → logprob: -4.76271390914917
    10. '	a' → logprob: -5.01271390914917

Token 62: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.9428983926773071
    2. 'answer' → logprob: -1.0678983926773071
    3. 's' → logprob: -1.8178983926773071
    4. 'n' → logprob: -3.3178982734680176
    5. 'c' → logprob: -3.5678982734680176
    6. 'a' → logprob: -3.8178982734680176
    7. ' b' → logprob: -4.692898273468018
    8. ' answer' → logprob: -5.692898273468018
    9. ' s' → logprob: -6.192898273468018
    10. ' n' → logprob: -6.692898273468018

Token 63: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0033665162045508623
    2. '
' → logprob: -6.878366470336914
    3. ',c' → logprob: -7.128366470336914
    4. 'a' → logprob: -7.503366470336914
    5. '<|end|>' → logprob: -8.378366470336914
    6. '   ' → logprob: -8.628366470336914
    7. ',a' → logprob: -8.628366470336914
    8. 'c' → logprob: -8.628366470336914
    9. ',b' → logprob: -9.753366470336914
    10. ' ,' → logprob: -9.878366470336914

Token 64: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03086954541504383
    2. 'a' → logprob: -4.405869483947754
    3. ',' → logprob: -5.030869483947754
    4. ',a' → logprob: -6.155869483947754
    5. ' a' → logprob: -6.530869483947754
    6. ' if' → logprob: -6.655869483947754
    7. '	a' → logprob: -6.780869483947754
    8. '    
' → logprob: -6.905869483947754
    9. '    ' → logprob: -7.280869483947754
    10. 'global' → logprob: -7.280869483947754

Token 65: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.31668365001678467
    2. 'if' → logprob: -1.8166836500167847
    3. 'answer' → logprob: -3.316683769226074
    4. 'global' → logprob: -3.816683769226074
    5. '   ' → logprob: -4.316683769226074
    6. 'while' → logprob: -4.816683769226074
    7. ' if' → logprob: -4.941683769226074
    8. ' a' → logprob: -4.941683769226074
    9. 'c' → logprob: -5.566683769226074
    10. 'b' → logprob: -5.941683769226074

Token 66: ' +=' (ID: 2757)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.5360310077667236
    2. ' -=' → logprob: -0.9110310077667236
    3. '+=' → logprob: -4.9110307693481445
    4. '-' → logprob: -5.7860307693481445
    5. ' +=' → logprob: -6.2860307693481445
    6. '=' → logprob: -7.6610307693481445
    7. ' =' → logprob: -10.036030769348145
    8. ' -' → logprob: -12.036030769348145
    9. '>' → logprob: -12.411030769348145
    10. ',' → logprob: -14.911030769348145

Token 67: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.012410636991262436
    2. ' ' → logprob: -5.137410640716553
    3. 'b' → logprob: -5.887410640716553
    4. '-' → logprob: -5.887410640716553
    5. 's' → logprob: -8.512410163879395
    6. 'c' → logprob: -8.512410163879395
    7. ' -' → logprob: -9.137410163879395
    8. ' b' → logprob: -9.262410163879395
    9. '2' → logprob: -9.762410163879395
    10. 'len' → logprob: -10.012410163879395

Token 68: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.022036584094166756
    2. '-' → logprob: -3.897036552429199
    3. ' ' → logprob: -7.397036552429199
    4. 'b' → logprob: -7.647036552429199
    5. ' -' → logprob: -8.2720365524292
    6. 'c' → logprob: -9.8970365524292
    7. 'a' → logprob: -10.6470365524292
    8. 's' → logprob: -11.5220365524292
    9. '-b' → logprob: -11.6470365524292
    10. '2' → logprob: -12.0220365524292

Token 69: ';' (ID: 26)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8650492429733276
    2. 'def' → logprob: -1.3650492429733276
    3. '<|end|>' → logprob: -1.6150492429733276
    4. '
' → logprob: -2.615049362182617
    5. ')' → logprob: -3.740049362182617
    6. '<|end|>' → logprob: -4.740049362182617
    7. '\n' → logprob: -5.115049362182617
    8. '    
' → logprob: -5.615049362182617
    9. ' ' → logprob: -6.115049362182617
    10. '    ' → logprob: -7.240049362182617

Token 70: ' b' (ID: 287)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.7288379669189453
    2. ' b' → logprob: -1.3538379669189453
    3. 'b' → logprob: -2.2288379669189453
    4. 'return' → logprob: -2.6038379669189453
    5. '   ' → logprob: -3.4788379669189453
    6. ' a' → logprob: -4.353837966918945
    7. 'def' → logprob: -5.103837966918945
    8. ' s' → logprob: -5.353837966918945
    9. ' c' → logprob: -5.603837966918945
    10. 'a' → logprob: -5.603837966918945

Token 71: ' -=' (ID: 12583)
  Prédit: ' -='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.4019321799278259
    2. '-=' → logprob: -1.1519322395324707
    3. '-' → logprob: -4.401932239532471
    4. '+=' → logprob: -6.401932239532471
    5. ' +=' → logprob: -7.276932239532471
    6. '=' → logprob: -8.776931762695312
    7. ' -' → logprob: -9.026931762695312
    8. ' ' → logprob: -9.901931762695312
    9. ' =' → logprob: -11.776931762695312
    10. '   ' → logprob: -12.776931762695312

Token 72: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004622253589332104
    2. ' ' → logprob: -5.379622459411621
    3. '0' → logprob: -13.754622459411621
    4. '<|end|>' → logprob: -14.754622459411621
    5. '2' → logprob: -15.254622459411621
    6. '   ' → logprob: -15.879622459411621
    7. '  ' → logprob: -16.317121505737305
    8. '```' → logprob: -17.379621505737305
    9. '<|end|>' → logprob: -17.504621505737305
    10. '3' → logprob: -17.692121505737305

Token 73: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0019307781476527452
    2. ' ' → logprob: -6.2519307136535645
    3. '0' → logprob: -13.251931190490723
    4. '2' → logprob: -15.751931190490723
    5. '<|end|>' → logprob: -15.876931190490723
    6. '   ' → logprob: -18.001930236816406
    7. '3' → logprob: -18.064430236816406
    8. '  ' → logprob: -18.064430236816406
    9. '```' → logprob: -18.501930236816406
    10. '-' → logprob: -18.501930236816406

Token 74: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.11540275812149048
    2. 'def' → logprob: -2.4904026985168457
    3. '<|end|>' → logprob: -4.240402698516846
    4. '\n' → logprob: -5.490402698516846
    5. '   ' → logprob: -5.490402698516846
    6. '    
' → logprob: -6.990402698516846
    7. '<|end|>' → logprob: -7.490402698516846
    8. '

' → logprob: -7.615402698516846
    9. ')' → logprob: -7.990402698516846
    10. ' 
' → logprob: -8.490403175354004

Token 75: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.45347875356674194
    2. '
' → logprob: -1.2034788131713867
    3. '   ' → logprob: -3.3284788131713867
    4. '<|end|>' → logprob: -4.578478813171387
    5. '\n' → logprob: -4.828478813171387
    6. '    
' → logprob: -5.453478813171387
    7. ' 
' → logprob: -6.828478813171387
    8. '  
' → logprob: -7.078478813171387
    9. '<|end|>' → logprob: -7.203478813171387
    10. ')' → logprob: -7.453478813171387

Token 76: ' answer' (ID: 6052)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31506407260894775
    2. 'answer' (adapté à ' answer') → logprob: -1.9400640726089478
    3. 'def' → logprob: -2.440063953399658
    4. 'return' → logprob: -4.065063953399658
    5. '\n' → logprob: -5.315063953399658
    6. ')' → logprob: -5.690063953399658
    7. 'a' → logprob: -5.940063953399658
    8. '<|end|>' → logprob: -6.065063953399658
    9. ' answer' → logprob: -6.440063953399658
    10. '    
' → logprob: -6.940063953399658

Token 77: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00672566844150424
    2. '.' → logprob: -5.006725788116455
    3. ' .' → logprob: -12.006725311279297
    4. '.extend' → logprob: -13.506725311279297
    5. 'append' → logprob: -14.006725311279297
    6. '.app' → logprob: -14.006725311279297
    7. ' +=' → logprob: -14.256725311279297
    8. '.ap' → logprob: -15.131725311279297
    9. ' ' → logprob: -16.131725311279297
    10. '+=' → logprob: -16.756725311279297

Token 78: '("' (ID: 568)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.7056235074996948
    2. '("' → logprob: -0.8306235074996948
    3. '(' → logprob: -2.7056236267089844
    4. '("("' → logprob: -6.705623626708984
    5. '("'' → logprob: -7.455623626708984
    6. '('"' → logprob: -7.830623626708984
    7. ''' → logprob: -7.830623626708984
    8. '("(' → logprob: -8.080623626708984
    9. '"' → logprob: -8.330623626708984
    10. '('(' → logprob: -8.455623626708984

Token 79: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.003908845596015453
    2. '"A' → logprob: -6.628908634185791
    3. ''A' → logprob: -7.128908634185791
    4. '"' → logprob: -7.253908634185791
    5. 'a' → logprob: -7.753908634185791
    6. ''' → logprob: -8.25390911102295
    7. 'AA' → logprob: -9.37890911102295
    8. 'B' → logprob: -9.50390911102295
    9. '_A' → logprob: -10.25390911102295
    10. '")' → logprob: -10.87890911102295

Token 80: '")

' (ID: 10822)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.11358907073736191
    2. '")' → logprob: -2.23858904838562
    3. ' ")' → logprob: -7.363589286804199
    4. '"' → logprob: -9.9885892868042
    5. ')' → logprob: -11.1135892868042
    6. '")
' → logprob: -11.3635892868042
    7. '+' → logprob: -11.4885892868042
    8. 'n' → logprob: -11.4885892868042
    9. '\' → logprob: -11.8635892868042
    10. '
' → logprob: -11.9885892868042

Token 81: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3687121570110321
    2. '
' → logprob: -1.2437121868133545
    3. '<|end|>' → logprob: -4.243711948394775
    4. ')' → logprob: -6.618711948394775
    5. '<|end|>' → logprob: -6.743711948394775
    6. '\n' → logprob: -6.743711948394775
    7. '  
' → logprob: -7.493711948394775
    8. '

' → logprob: -7.618711948394775
    9. ' def' → logprob: -8.368712425231934
    10. '\' → logprob: -8.493712425231934

Token 82: ' push' (ID: 9349)
  Prédit: ' push'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' push' → logprob: -0.0646575316786766
    2. 'push' → logprob: -2.81465744972229
    3. 'B' → logprob: -6.939657688140869
    4. ' ' → logprob: -7.189657688140869
    5. 'b' → logprob: -8.814657211303711
    6. '_push' → logprob: -8.814657211303711
    7. ' B' → logprob: -9.064657211303711
    8. 'def' → logprob: -9.064657211303711
    9. ' b' → logprob: -9.689657211303711
    10. ' def' → logprob: -9.877157211303711

Token 83: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.0021956947166472673
    2. 'C' → logprob: -6.127195835113525
    3. 'b' → logprob: -12.127195358276367
    4. ' B' → logprob: -12.752195358276367
    5. 'BC' → logprob: -14.252195358276367
    6. 'A' → logprob: -14.752195358276367
    7. '_B' → logprob: -15.252195358276367
    8. 'D' → logprob: -16.002195358276367
    9. 'a' → logprob: -16.127195358276367
    10. ' ' → logprob: -16.314695358276367

Token 84: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.004118173383176327
    2. '():
' → logprob: -5.504117965698242
    3. '()' → logprob: -10.379117965698242
    4. ' ():' → logprob: -12.129117965698242
    5. '():
' → logprob: -13.754117965698242
    6. '(' → logprob: -13.879117965698242
    7. '():

' → logprob: -14.004117965698242
    8. ':' → logprob: -15.629117965698242
    9. 'def' → logprob: -16.254117965698242
    10. '()>' → logprob: -17.254117965698242

Token 85: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38080015778541565
    2. 'global' → logprob: -1.3808001279830933
    3. 'def' → logprob: -3.630800247192383
    4. ' global' → logprob: -4.005800247192383
    5. '()
' → logprob: -5.505800247192383
    6. '{
' → logprob: -6.005800247192383
    7. '()' → logprob: -6.005800247192383
    8. '(global' → logprob: -6.005800247192383
    9. '```' → logprob: -6.380800247192383
    10. '
' → logprob: -6.505800247192383

Token 86: ' global' (ID: 5466)
  Prédit: 'global'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'global' (adapté à ' global') → logprob: -0.003313288791105151
    2. ' global' → logprob: -5.878313064575195
    3. '   ' → logprob: -8.628313064575195
    4. '(global' → logprob: -9.128313064575195
    5. 'def' → logprob: -9.503313064575195
    6. 'b' → logprob: -9.753313064575195
    7. '
' → logprob: -10.253313064575195
    8. ' ' → logprob: -11.753313064575195
    9. '	global' → logprob: -11.878313064575195
    10. 'lobal' → logprob: -11.878313064575195

Token 87: ' a' (ID: 261)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.02450096234679222
    2. ' b' → logprob: -4.274500846862793
    3. 'a' → logprob: -4.774500846862793
    4. 'c' → logprob: -6.524500846862793
    5. '   ' → logprob: -9.149500846862793
    6. ' c' → logprob: -9.274500846862793
    7. ' a' → logprob: -9.274500846862793
    8. '  ' → logprob: -10.649500846862793
    9. ' ' → logprob: -10.899500846862793
    10. '	b' → logprob: -11.399500846862793

Token 88: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0026270237285643816
    2. ' ,' → logprob: -6.627626895904541
    3. ',b' → logprob: -6.877626895904541
    4. '+=' → logprob: -8.8776273727417
    5. 'b' → logprob: -9.6276273727417
    6. ' +=' → logprob: -10.3776273727417
    7. 'a' → logprob: -12.0026273727417
    8. '+' → logprob: -12.3776273727417
    9. ',a' → logprob: -12.7526273727417
    10. ' ' → logprob: -12.8776273727417

Token 89: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.6330946087837219
    2. ' b' → logprob: -1.2580945491790771
    3. ' c' → logprob: -2.383094549179077
    4. 'c' → logprob: -2.383094549179077
    5. ' ' → logprob: -9.133094787597656
    6. '   ' → logprob: -9.508094787597656
    7. 'a' → logprob: -10.258094787597656
    8. '  ' → logprob: -10.383094787597656
    9. '    ' → logprob: -10.570594787597656
    10. ' a' → logprob: -10.820594787597656

Token 90: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010732504539191723
    2. ' +=' → logprob: -5.135732650756836
    3. ' -=' → logprob: -6.635732650756836
    4. 'a' → logprob: -7.260732650756836
    5. '+=' → logprob: -7.260732650756836
    6. '    ' → logprob: -7.510732650756836
    7. ' a' → logprob: -8.260732650756836
    8. '
' → logprob: -8.385732650756836
    9. '-' → logprob: -8.635732650756836
    10. ',' → logprob: -8.635732650756836

Token 91: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10335225611925125
    2. 'b' → logprob: -2.4783523082733154
    3. 'a' → logprob: -4.478352069854736
    4. ' b' → logprob: -6.603352069854736
    5. ' a' → logprob: -7.978352069854736
    6. '    ' → logprob: -8.103352546691895
    7. ' +=' → logprob: -8.353352546691895
    8. '-' → logprob: -8.978352546691895
    9. ' ' → logprob: -9.228352546691895
    10. '+' → logprob: -9.353352546691895

Token 92: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -0.26950958371162415
    2. '   ' → logprob: -1.8945095539093018
    3. 'a' → logprob: -2.5195095539093018
    4. ' b' → logprob: -5.394509792327881
    5. ' a' → logprob: -7.519509792327881
    6. '  ' → logprob: -9.644509315490723
    7. 'c' → logprob: -10.269509315490723
    8. '_b' → logprob: -10.394509315490723
    9. '	b' → logprob: -10.519509315490723
    10. '    ' → logprob: -10.644509315490723

Token 93: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.10027071833610535
    2. ' +=' → logprob: -2.3502707481384277
    3. '-=' → logprob: -10.35027027130127
    4. '+' → logprob: -10.85027027130127
    5. ' -=' → logprob: -11.47527027130127
    6. '=' → logprob: -14.22527027130127
    7. ']+=' → logprob: -14.22527027130127
    8. '   ' → logprob: -14.97527027130127
    9. '-' → logprob: -15.35027027130127
    10. ' ' → logprob: -15.97527027130127

Token 94: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00014180023572407663
    2. ' ' → logprob: -8.875142097473145
    3. '-' → logprob: -13.875142097473145
    4. '   ' → logprob: -15.125142097473145
    5. ' -' → logprob: -15.812642097473145
    6. '+' → logprob: -15.937642097473145
    7. '  ' → logprob: -16.187641143798828
    8. '2' → logprob: -16.750141143798828
    9. '0' → logprob: -16.812641143798828
    10. '<|end|>' → logprob: -17.375141143798828

Token 95: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.107425062713446e-06
    2. ' ' → logprob: -12.000006675720215
    3. '-' → logprob: -14.375006675720215
    4. '0' → logprob: -15.625006675720215
    5. '2' → logprob: -16.62500762939453
    6. 'c' → logprob: -17.62500762939453
    7. '１' → logprob: -18.06250762939453
    8. '+' → logprob: -18.25000762939453
    9. '   ' → logprob: -18.25000762939453
    10. 'a' → logprob: -18.31250762939453

Token 96: ';' (ID: 26)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6387292146682739
    2. ',' → logprob: -1.388729214668274
    3. ';' → logprob: -2.1387290954589844
    4. '-' → logprob: -2.6387290954589844
    5. 'c' → logprob: -4.138729095458984
    6. ' c' → logprob: -5.388729095458984
    7. 'def' → logprob: -5.888729095458984
    8. '
' → logprob: -6.388729095458984
    9. 'a' → logprob: -6.638729095458984
    10. ' -' → logprob: -7.013729095458984

Token 97: ' a' (ID: 261)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0950065553188324
    2. ' c' → logprob: -2.4700064659118652
    3. 'a' → logprob: -5.970006465911865
    4. '   ' → logprob: -6.220006465911865
    5. '1' → logprob: -6.970006465911865
    6. ' a' → logprob: -8.220006942749023
    7. ' ' → logprob: -8.720006942749023
    8. '-' → logprob: -10.470006942749023
    9. '  ' → logprob: -10.470006942749023
    10. '    ' → logprob: -10.845006942749023

Token 98: ' -=' (ID: 12583)
  Prédit: ' -='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.11762940138578415
    2. '-=' → logprob: -2.242629289627075
    3. '-' → logprob: -5.367629528045654
    4. ' -' → logprob: -9.242629051208496
    5. '   ' → logprob: -10.867629051208496
    6. ' ' → logprob: -11.867629051208496
    7. '    ' → logprob: -12.992629051208496
    8. '=' → logprob: -13.617629051208496
    9. '  ' → logprob: -13.617629051208496
    10. '1' → logprob: -13.992629051208496

Token 99: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.012515892274677753
    2. ' ' → logprob: -4.387516021728516
    3. '<|end|>' → logprob: -12.137516021728516
    4. '<|end|>' → logprob: -15.637516021728516
    5. '   ' → logprob: -15.762516021728516
    6. '  ' → logprob: -16.262516021728516
    7. '0' → logprob: -16.387516021728516
    8. ' ' → logprob: -16.637516021728516
    9. '１' → logprob: -17.012516021728516
    10. '...' → logprob: -17.012516021728516

Token 100: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5928495486150496e-05
    2. ' ' → logprob: -11.125016212463379
    3. '<|end|>' → logprob: -13.875016212463379
    4. '<|end|>' → logprob: -16.625015258789062
    5. '0' → logprob: -17.875015258789062
    6. '...' → logprob: -19.375015258789062
    7. '   ' → logprob: -19.562515258789062
    8. '```' → logprob: -19.875015258789062
    9. '-' → logprob: -19.937515258789062
    10. '１' → logprob: -20.062515258789062

Token 101: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003244966734200716
    2. 'answer' → logprob: -5.753244876861572
    3. ' answer' → logprob: -9.87824535369873
    4. '
' → logprob: -11.50324535369873
    5. '  ' → logprob: -13.25324535369873
    6. '	answer' → logprob: -13.37824535369873
    7. '```' → logprob: -14.12824535369873
    8. ' ' → logprob: -14.25324535369873
    9. '       ' → logprob: -14.87824535369873
    10. '(answer' → logprob: -14.87824535369873

Token 102: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0003461905289441347
    2. 'answer' → logprob: -8.000346183776855
    3. ' answer' → logprob: -12.375346183776855
    4. '```' → logprob: -13.000346183776855
    5. '
' → logprob: -13.375346183776855
    6. '       ' → logprob: -14.125346183776855
    7. ' ' → logprob: -14.250346183776855
    8. '	answer' → logprob: -14.625346183776855
    9. 'def' → logprob: -15.375346183776855
    10. '``' → logprob: -15.375346183776855

Token 103: ' answer' (ID: 6052)
  Prédit: 'answer'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'answer' (adapté à ' answer') → logprob: -0.0008909751777537167
    2. ' answer' → logprob: -7.250891208648682
    3. '   ' → logprob: -8.625890731811523
    4. '	answer' → logprob: -14.000890731811523
    5. 'Answer' → logprob: -15.625890731811523
    6. '(answer' → logprob: -16.000890731811523
    7. ' ' → logprob: -16.125890731811523
    8. '  ' → logprob: -16.250890731811523
    9. '```' → logprob: -16.250890731811523
    10. '.answer' → logprob: -16.625890731811523

Token 104: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -2.5107177862082608e-05
    2. '.' → logprob: -10.625024795532227
    3. 'append' → logprob: -14.500024795532227
    4. ' .' → logprob: -15.875024795532227
    5. '.app' → logprob: -17.375024795532227
    6. '.extend' → logprob: -17.500024795532227
    7. 'app' → logprob: -19.625024795532227
    8. '.push' → logprob: -19.625024795532227
    9. '	append' → logprob: -19.875024795532227
    10. '.ap' → logprob: -20.125024795532227

Token 105: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.016243508085608482
    2. '("("' → logprob: -4.5162434577941895
    3. '(' → logprob: -5.2662434577941895
    4. '('' → logprob: -11.016243934631348
    5. '("(' → logprob: -13.391243934631348
    6. '(
' → logprob: -14.766243934631348
    7. '"' → logprob: -15.016243934631348
    8. '("\"' → logprob: -15.891243934631348
    9. '(("' → logprob: -16.14124298095703
    10. '("")' → logprob: -16.51624298095703

Token 106: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.016053136438131332
    2. '"B' → logprob: -4.141053199768066
    3. '"' → logprob: -11.516053199768066
    4. '")' → logprob: -12.641053199768066
    5. ' B' → logprob: -13.391053199768066
    6. ''' → logprob: -13.391053199768066
    7. '""' → logprob: -14.141053199768066
    8. '"""' → logprob: -15.516053199768066
    9. '	B' → logprob: -15.516053199768066
    10. '\"' → logprob: -15.516053199768066

Token 107: '")

' (ID: 10822)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.0011206917697563767
    2. ')' → logprob: -6.876120567321777
    3. ')")' → logprob: -9.501120567321777
    4. '")
' → logprob: -11.501120567321777
    5. '()' → logprob: -13.251120567321777
    6. '"' → logprob: -14.126120567321777
    7. '")

' → logprob: -16.001121520996094
    8. '')' → logprob: -16.501121520996094
    9. '}")' → logprob: -17.001121520996094
    10. '("' → logprob: -17.001121520996094

Token 108: 'def' (ID: 1314)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0087516784551553e-05
    2. ' for' → logprob: -12.25001049041748
    3. 'def' → logprob: -13.00001049041748
    4. '<|end|>' → logprob: -14.00001049041748
    5. 'valid' → logprob: -14.25001049041748
    6. 'if' → logprob: -14.87501049041748
    7. 'i' → logprob: -15.87501049041748
    8. '#' → logprob: -15.87501049041748
    9. 'try' → logprob: -16.250009536743164
    10. 'n' → logprob: -16.250009536743164

Token 109: ' push' (ID: 9349)
  Prédit: ' push'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' push' → logprob: -0.909371554851532
    2. 'push' → logprob: -1.2843716144561768
    3. ' main' → logprob: -1.7843716144561768
    4. 'main' → logprob: -3.0343716144561768
    5. ' solve' → logprob: -3.2843716144561768
    6. 'solve' → logprob: -3.7843716144561768
    7. ' pop' → logprob: -4.409371376037598
    8. 'pop' → logprob: -4.909371376037598
    9. 'c' → logprob: -4.909371376037598
    10. ' c' → logprob: -6.034371376037598

Token 110: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.015308414585888386
    2. 'A' → logprob: -4.265308380126953
    3. 'B' → logprob: -7.265308380126953
    4. 'a' → logprob: -8.390308380126953
    5. 'c' → logprob: -8.890308380126953
    6. 'S' → logprob: -11.140308380126953
    7. 'b' → logprob: -11.265308380126953
    8. 's' → logprob: -11.515308380126953
    9. 'D' → logprob: -11.640308380126953
    10. ' C' → logprob: -12.265308380126953

Token 111: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.005314277950674295
    2. '():
' → logprob: -5.255314350128174
    3. ' ():' → logprob: -9.755313873291016
    4. '()' → logprob: -10.755313873291016
    5. '():
' → logprob: -14.130313873291016
    6. 'def' → logprob: -15.005313873291016
    7. '():

' → logprob: -16.255313873291016
    8. ':' → logprob: -17.380313873291016
    9. '(' → logprob: -17.630313873291016
    10. '()>' → logprob: -18.130313873291016

Token 112: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.39884042739868164
    2. 'global' → logprob: -1.1488404273986816
    3. 'def' → logprob: -4.648840427398682
    4. ' global' → logprob: -6.273840427398682
    5. '(global' → logprob: -9.023839950561523
    6. '```' → logprob: -9.523839950561523
    7. 'a' → logprob: -9.773839950561523
    8. 'c' → logprob: -10.148839950561523
    9. '_global' → logprob: -10.273839950561523
    10. '	global' → logprob: -10.648839950561523

Token 113: ' global' (ID: 5466)
  Prédit: 'global'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'global' (adapté à ' global') → logprob: -7.278864359250292e-05
    2. ' global' → logprob: -10.125072479248047
    3. 'def' → logprob: -11.000072479248047
    4. 'c' → logprob: -11.875072479248047
    5. 'a' → logprob: -12.875072479248047
    6. '(global' → logprob: -12.875072479248047
    7. '_global' → logprob: -13.250072479248047
    8. 'b' → logprob: -14.000072479248047
    9. '.global' → logprob: -15.000072479248047
    10. 'globals' → logprob: -15.125072479248047

Token 114: ' c' (ID: 274)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5525410771369934
    2. 'b' → logprob: -0.9275410771369934
    3. 'c' → logprob: -3.8025410175323486
    4. ' a' → logprob: -5.802541255950928
    5. ' b' → logprob: -5.802541255950928
    6. ' c' → logprob: -7.427541255950928
    7. 'n' → logprob: -11.49004077911377
    8. ' ' → logprob: -11.67754077911377
    9. '   ' → logprob: -12.30254077911377
    10. '  ' → logprob: -12.92754077911377

Token 115: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6666229367256165
    2. '   ' → logprob: -0.7916229367256165
    3. '
' → logprob: -4.666623115539551
    4. ' +=' → logprob: -5.166623115539551
    5. ' ,' → logprob: -5.916623115539551
    6. ',c' → logprob: -6.166623115539551
    7. 'def' → logprob: -6.416623115539551
    8. '+=' → logprob: -6.541623115539551
    9. '  ' → logprob: -6.666623115539551
    10. 'c' → logprob: -6.666623115539551

Token 116: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.3117066025733948
    2. ' b' → logprob: -1.43670654296875
    3. '1' → logprob: -4.56170654296875
    4. 'a' → logprob: -5.31170654296875
    5. ' ' → logprob: -5.31170654296875
    6. ' a' → logprob: -5.93670654296875
    7. 'c' → logprob: -6.81170654296875
    8. ' c' → logprob: -6.93670654296875
    9. 'answer' → logprob: -6.93670654296875
    10. '   ' → logprob: -7.18670654296875

Token 117: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08899518847465515
    2. ',' → logprob: -2.8389952182769775
    3. '
' → logprob: -3.7139952182769775
    4. ',b' → logprob: -7.338994979858398
    5. 'b' → logprob: -7.463994979858398
    6. ' b' → logprob: -8.088994979858398
    7. 'def' → logprob: -8.338994979858398
    8. ',
' → logprob: -8.838994979858398
    9. ' ,' → logprob: -9.088994979858398
    10. '  ' → logprob: -9.463994979858398

Token 118: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22929610311985016
    2. 'c' → logprob: -1.604296088218689
    3. ' c' → logprob: -6.1042962074279785
    4. 'b' → logprob: -6.4792962074279785
    5. ' b' → logprob: -10.10429573059082
    6. ' ' → logprob: -10.35429573059082
    7. '	c' → logprob: -10.60429573059082
    8. '  ' → logprob: -12.10429573059082
    9. '    ' → logprob: -13.72929573059082
    10. 'a' → logprob: -14.60429573059082

Token 119: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' (adapté à ' c') → logprob: -0.0734785720705986
    2. 'b' → logprob: -2.6984784603118896
    3. '   ' → logprob: -5.948478698730469
    4. ' c' → logprob: -7.073478698730469
    5. ' b' → logprob: -9.573478698730469
    6. '	c' → logprob: -13.073478698730469
    7. ' ' → logprob: -13.448478698730469
    8. 'a' → logprob: -13.698478698730469
    9. '  ' → logprob: -13.948478698730469
    10. '    
' → logprob: -14.198478698730469

Token 120: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.38715508580207825
    2. '+=' → logprob: -1.1371550559997559
    3. ' -=' → logprob: -8.387155532836914
    4. '-=' → logprob: -10.137155532836914
    5. '=' → logprob: -11.887155532836914
    6. ' ' → logprob: -12.887155532836914
    7. '   ' → logprob: -13.012155532836914
    8. '+' → logprob: -13.137155532836914
    9. '>' → logprob: -13.887155532836914
    10. ']+=' → logprob: -14.262155532836914

Token 121: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004620472434908152
    2. ' ' → logprob: -5.379620552062988
    3. '-' → logprob: -16.004619598388672
    4. '   ' → logprob: -16.879619598388672
    5. '0' → logprob: -17.379619598388672
    6. '<|end|>' → logprob: -17.504619598388672
    7. '  ' → logprob: -18.129619598388672
    8. '```' → logprob: -18.254619598388672
    9. ' -' → logprob: -18.879619598388672
    10. '2' → logprob: -19.129619598388672

Token 122: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.465036105713807e-06
    2. '-' → logprob: -12.250007629394531
    3. ' ' → logprob: -12.875007629394531
    4. ' -' → logprob: -18.25000762939453
    5. '１' → logprob: -21.37500762939453
    6. '2' → logprob: -22.50000762939453
    7. 'b' → logprob: -22.62500762939453
    8. '0' → logprob: -22.87500762939453
    9. '' → logprob: -23.25000762939453
    10. '   ' → logprob: -23.75000762939453

Token 123: ';' (ID: 26)
  Prédit: ';'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ';' → logprob: -0.2960769534111023
    2. 'b' → logprob: -1.671077013015747
    3. ' b' → logprob: -2.921077013015747
    4. ',' → logprob: -4.296076774597168
    5. '   ' → logprob: -8.171076774597168
    6. 'c' → logprob: -8.671076774597168
    7. '
' → logprob: -9.171076774597168
    8. 'def' → logprob: -9.796076774597168
    9. ' c' → logprob: -10.046076774597168
    10. ';b' → logprob: -10.921076774597168

Token 124: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.16025316715240479
    2. ' b' → logprob: -1.9102531671524048
    3. '   ' → logprob: -10.910253524780273
    4. ' ' → logprob: -11.660253524780273
    5. 'c' → logprob: -13.910253524780273
    6. '	b' → logprob: -14.285253524780273
    7. ' c' → logprob: -15.285253524780273
    8. '  ' → logprob: -15.660253524780273
    9. '    ' → logprob: -16.160253524780273
    10. '```' → logprob: -17.035253524780273

Token 125: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.5086567997932434
    2. ' -=' → logprob: -1.0086567401885986
    3. '-' → logprob: -3.3836567401885986
    4. ' -' → logprob: -10.38365650177002
    5. ' ' → logprob: -11.38365650177002
    6. '   ' → logprob: -11.38365650177002
    7. '+=' → logprob: -12.63365650177002
    8. '  ' → logprob: -12.88365650177002
    9. '=' → logprob: -13.25865650177002
    10. '    ' → logprob: -13.25865650177002

Token 126: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.31326186656951904
    2. ' ' → logprob: -1.313261866569519
    3. '   ' → logprob: -16.938261032104492
    4. '<|end|>' → logprob: -16.938261032104492
    5. '```' → logprob: -17.063261032104492
    6. ' ' → logprob: -17.313261032104492
    7. '0' → logprob: -17.438261032104492
    8. 'def' → logprob: -18.063261032104492
    9. '  ' → logprob: -18.313261032104492
    10. '１' → logprob: -18.875761032104492

Token 127: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00033558503491804004
    2. ' ' → logprob: -8.000335693359375
    3. '```' → logprob: -17.312835693359375
    4. '   ' → logprob: -17.812835693359375
    5. '-' → logprob: -17.875335693359375
    6. '１' → logprob: -18.625335693359375
    7. 'b' → logprob: -19.125335693359375
    8. 'def' → logprob: -19.187835693359375
    9. '0' → logprob: -19.187835693359375
    10. '  ' → logprob: -19.375335693359375

Token 128: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006427380722016096
    2. 'answer' → logprob: -7.375642776489258
    3. ' answer' → logprob: -11.125642776489258
    4. '	answer' → logprob: -14.125642776489258
    5. 'def' → logprob: -15.625642776489258
    6. '
' → logprob: -15.750642776489258
    7. '```' → logprob: -16.000642776489258
    8. '       ' → logprob: -16.125642776489258
    9. '(answer' → logprob: -16.250642776489258
    10. '  ' → logprob: -17.250642776489258

Token 129: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00027492138906382024
    2. 'answer' → logprob: -8.250274658203125
    3. ' answer' → logprob: -11.750274658203125
    4. 'def' → logprob: -12.500274658203125
    5. '
' → logprob: -14.375274658203125
    6. '	answer' → logprob: -14.875274658203125
    7. '```' → logprob: -15.000274658203125
    8. '  ' → logprob: -15.375274658203125
    9. ' ' → logprob: -15.500274658203125
    10. '       ' → logprob: -15.625274658203125

Token 130: ' answer' (ID: 6052)
  Prédit: 'answer'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'answer' (adapté à ' answer') → logprob: -0.011102529242634773
    2. ' answer' → logprob: -4.511102676391602
    3. '   ' → logprob: -9.886102676391602
    4. 'def' → logprob: -13.261102676391602
    5. ' ' → logprob: -13.886102676391602
    6. '	answer' → logprob: -14.886102676391602
    7. 'Answer' → logprob: -15.136102676391602
    8. '  ' → logprob: -15.761102676391602
    9. '(answer' → logprob: -15.886102676391602
    10. '
' → logprob: -16.2611026763916

Token 131: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -4.644463479053229e-05
    2. '.' → logprob: -10.625046730041504
    3. 'append' → logprob: -10.750046730041504
    4. '.extend' → logprob: -15.375046730041504
    5. ' .' → logprob: -15.875046730041504
    6. '.app' → logprob: -16.625045776367188
    7. 'app' → logprob: -16.750045776367188
    8. '.Append' → logprob: -17.625045776367188
    9. '.push' → logprob: -17.750045776367188
    10. 'appen' → logprob: -18.000045776367188

Token 132: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.006760960444808006
    2. '("("' → logprob: -5.256761074066162
    3. '(' → logprob: -6.506761074066162
    4. '('' → logprob: -10.506760597229004
    5. '("(' → logprob: -12.631760597229004
    6. '("")' → logprob: -14.506760597229004
    7. '("""' → logprob: -15.256760597229004
    8. '(""' → logprob: -15.631760597229004
    9. ' ("' → logprob: -15.631760597229004
    10. '(
' → logprob: -15.756760597229004

Token 133: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.009924185462296009
    2. '"C' → logprob: -4.634924411773682
    3. ''C' → logprob: -9.134923934936523
    4. '"' → logprob: -9.884923934936523
    5. ' C' → logprob: -12.509923934936523
    6. 'B' → logprob: -12.884923934936523
    7. '"B' → logprob: -13.634923934936523
    8. ''' → logprob: -14.134923934936523
    9. '")' → logprob: -15.134923934936523
    10. 'Ｃ' → logprob: -15.759923934936523

Token 134: '")

' (ID: 10822)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.004811730235815048
    2. ')' → logprob: -5.379811763763428
    3. ')")' → logprob: -8.62981128692627
    4. '')' → logprob: -12.62981128692627
    5. '")
' → logprob: -12.62981128692627
    6. '"' → logprob: -13.37981128692627
    7. '()' → logprob: -13.50481128692627
    8. 'def' → logprob: -13.62981128692627
    9. ')"' → logprob: -13.75481128692627
    10. '}")' → logprob: -15.50481128692627

Token 135: 'i' (ID: 72)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.3902033970225602e-05
    2. ' for' → logprob: -11.750014305114746
    3. 'valid' → logprob: -12.750014305114746
    4. 'def' → logprob: -12.875014305114746
    5. 'ok' → logprob: -15.875014305114746
    6. 'prev' → logprob: -16.25001335144043
    7. 'possible' → logprob: -16.50001335144043
    8. 'correct' → logprob: -17.50001335144043
    9. 'last' → logprob: -17.62501335144043
    10. '```' → logprob: -17.62501335144043

Token 136: ' =' (ID: 314)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.08262891322374344
    2. '=' → logprob: -3.0826289653778076
    3. ' =' → logprob: -3.4576289653778076
    4. 'nd' → logprob: -6.7076287269592285
    5. 'n' → logprob: -7.4576287269592285
    6. ':' → logprob: -10.082629203796387
    7. ' ' → logprob: -10.457629203796387
    8. ' +=' → logprob: -11.207629203796387
    9. 'dx' → logprob: -11.457629203796387
    10. 'm' → logprob: -11.457629203796387

Token 137: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10020925104618073
    2. ' ' → logprob: -2.3502092361450195
    3. 'n' → logprob: -13.72520923614502
    4. '1' → logprob: -14.22520923614502
    5. ' n' → logprob: -14.97520923614502
    6. '=' → logprob: -16.412710189819336
    7. 'b' → logprob: -16.537710189819336
    8. 's' → logprob: -16.850210189819336
    9. ' ' → logprob: -16.912710189819336
    10. '-' → logprob: -16.975210189819336

Token 138: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00012809180771000683
    2. ' ' → logprob: -9.000127792358398
    3. 'n' → logprob: -12.625127792358398
    4. '1' → logprob: -13.750127792358398
    5. ' n' → logprob: -16.6251277923584
    6. 'i' → logprob: -16.6251277923584
    7. 'len' → logprob: -16.8751277923584
    8. '-' → logprob: -17.0001277923584
    9. 'int' → logprob: -17.5001277923584
    10. 'a' → logprob: -18.0001277923584

Token 139: '
' (ID: 198)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.007319927681237459
    2. '
' → logprob: -5.007319927215576
    3. ' while' → logprob: -7.632319927215576
    4. '<|end|>' → logprob: -9.632320404052734
    5. 'for' → logprob: -10.507320404052734
    6. '\n' → logprob: -11.257320404052734
    7. '```' → logprob: -12.132320404052734
    8. 'While' → logprob: -13.257320404052734
    9. 'if' → logprob: -14.007320404052734
    10. '\' → logprob: -14.132320404052734

Token 140: 'while' (ID: 7032)
  Prédit: 'while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.00010366239439463243
    2. ' while' → logprob: -9.250103950500488
    3. 'for' → logprob: -12.125103950500488
    4. '<|end|>' → logprob: -13.625103950500488
    5. '
' → logprob: -15.250103950500488
    6. 'While' → logprob: -15.500103950500488
    7. '```' → logprob: -16.250102996826172
    8. '	while' → logprob: -16.375102996826172
    9. 'if' → logprob: -16.750102996826172
    10. 'n' → logprob: -16.750102996826172

Token 141: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.026416871696710587
    2. 'i' → logprob: -3.651416778564453
    3. ' True' → logprob: -10.026416778564453
    4. ' n' → logprob: -10.526416778564453
    5. '(i' → logprob: -11.151416778564453
    6. 'True' → logprob: -11.276416778564453
    7. '	i' → logprob: -11.901416778564453
    8. 'n' → logprob: -12.276416778564453
    9. ' ' → logprob: -12.776416778564453
    10. ' len' → logprob: -14.526416778564453

Token 142: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.0631101131439209
    2. '<' → logprob: -2.813110113143921
    3. '<n' → logprob: -6.9381103515625
    4. ' <=' → logprob: -9.6881103515625
    5. '<len' → logprob: -10.1881103515625
    6. ' <
' → logprob: -10.4381103515625
    7. ' ' → logprob: -10.5631103515625
    8. '<=' → logprob: -11.5631103515625
    9. '<size' → logprob: -13.6881103515625
    10. '<num' → logprob: -13.6881103515625

Token 143: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00029708960209973156
    2. ' n' → logprob: -8.250297546386719
    3. 'len' → logprob: -10.250297546386719
    4. ' len' → logprob: -15.125297546386719
    5. '	n' → logprob: -16.12529754638672
    6. '   ' → logprob: -16.87529754638672
    7. '(n' → logprob: -17.00029754638672
    8. ' ' → logprob: -17.87529754638672
    9. '<n' → logprob: -17.87529754638672
    10. '2' → logprob: -18.12529754638672

Token 144: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10022488981485367
    2. ':
' → logprob: -2.3502249717712402
    3. ' and' → logprob: -11.475224494934082
    4. ':

' → logprob: -12.475224494934082
    5. ' :' → logprob: -13.850224494934082
    6. ' :
' → logprob: -13.850224494934082
    7. '   ' → logprob: -14.100224494934082
    8. 'and' → logprob: -14.725224494934082
    9. ':
' → logprob: -14.975224494934082
    10. '):
' → logprob: -15.225224494934082

Token 145: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019605640321969986
    2. ' if' → logprob: -4.64460563659668
    3. 'if' → logprob: -5.51960563659668
    4. 's' → logprob: -6.76960563659668
    5. 'x' → logprob: -7.14460563659668
    6. 't' → logprob: -7.14460563659668
    7. 'line' → logprob: -7.39460563659668
    8. ' line' → logprob: -7.39460563659668
    9. 'current' → logprob: -8.01960563659668
    10. 'item' → logprob: -8.51960563659668

Token 146: ' ss' (ID: 20928)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.2537413835525513
    2. 'if' → logprob: -1.2537413835525513
    3. 'current' → logprob: -2.0037412643432617
    4. 's' → logprob: -2.5037412643432617
    5. 'line' → logprob: -3.1287412643432617
    6. 'c' → logprob: -3.3787412643432617
    7. 't' → logprob: -3.3787412643432617
    8. 'ball' → logprob: -4.128741264343262
    9. 'cur' → logprob: -4.378741264343262
    10. 'ch' → logprob: -4.378741264343262

Token 147: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20145544409751892
    2. ' =' → logprob: -1.7014554738998413
    3. '=s' → logprob: -10.951455116271973
    4. '   ' → logprob: -11.201455116271973
    5. ' ' → logprob: -11.826455116271973
    6. 's' → logprob: -13.326455116271973
    7. ',' → logprob: -14.576455116271973
    8. 't' → logprob: -15.201455116271973
    9. '=
' → logprob: -15.576455116271973
    10. 'e' → logprob: -15.576455116271973

Token 148: ' sl' (ID: 1925)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -8.41129949549213e-05
    2. ' sl' → logprob: -9.625083923339844
    3. ' s' → logprob: -11.500083923339844
    4. '   ' → logprob: -13.250083923339844
    5. 'sl' → logprob: -13.375083923339844
    6. '(s' → logprob: -13.750083923339844
    7. '	s' → logprob: -14.250083923339844
    8. 'list' → logprob: -14.750083923339844
    9. ' ' → logprob: -15.000083923339844
    10. '_s' → logprob: -15.062583923339844

Token 149: 'ist' (ID: 421)
  Prédit: 'ist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ist' → logprob: -3.128163257315464e-07
    2. 'i' → logprob: -15.875
    3. 'list' → logprob: -16.25
    4. 'is' → logprob: -16.875
    5. '[i' → logprob: -17.25
    6. '   ' → logprob: -17.375
    7. 'ист' → logprob: -17.5
    8. '[' → logprob: -17.625
    9. '```' → logprob: -17.875
    10. 'st' → logprob: -18.5

Token 150: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.5451681974809617e-05
    2. '[' → logprob: -11.250015258789062
    3. ' [' → logprob: -14.000015258789062
    4. '[s' → logprob: -14.750015258789062
    5. '\[' → logprob: -15.125015258789062
    6. '```' → logprob: -15.250015258789062
    7. 's' → logprob: -15.750015258789062
    8. '[
' → logprob: -16.000015258789062
    9. '][' → logprob: -16.375015258789062
    10. '   ' → logprob: -16.375015258789062

Token 151: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.07899443805217743
    2. ']
' → logprob: -2.9539945125579834
    3. '][' → logprob: -4.328994274139404
    4. '[' → logprob: -4.578994274139404
    5. '[i' → logprob: -8.203994750976562
    6. '].' → logprob: -10.453994750976562
    7. ']

' → logprob: -10.578994750976562
    8. '])' → logprob: -11.078994750976562
    9. ']
' → logprob: -11.578994750976562
    10. ')' → logprob: -12.203994750976562

Token 152: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.044766865670681
    2. ' if' → logprob: -3.294766902923584
    3. '    
' → logprob: -6.044766902923584
    4. '
' → logprob: -6.544766902923584
    5. 'if' → logprob: -6.544766902923584
    6. ' i' → logprob: -8.169766426086426
    7. '<|end|>' → logprob: -8.169766426086426
    8. ' 
' → logprob: -8.294766426086426
    9. '  
' → logprob: -8.419766426086426
    10. '    ' → logprob: -9.669766426086426

Token 153: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7516488432884216
    2. ' if' → logprob: -1.0016489028930664
    3. '   ' → logprob: -2.0016489028930664
    4. 'i' → logprob: -4.376648902893066
    5. ' i' → logprob: -4.501648902893066
    6. '    
' → logprob: -6.876648902893066
    7. ' ' → logprob: -8.251648902893066
    8. ' parts' → logprob: -8.626648902893066
    9. 'a' → logprob: -8.876648902893066
    10. ' a' → logprob: -9.001648902893066

Token 154: ' object' (ID: 2817)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.022583000361919403
    2. ' if' → logprob: -3.8975830078125
    3. 'i' → logprob: -6.6475830078125
    4. '   ' → logprob: -9.1475830078125
    5. 'a' → logprob: -9.2725830078125
    6. ' i' → logprob: -9.5225830078125
    7. 'tokens' → logprob: -9.8975830078125
    8. 'for' → logprob: -10.1475830078125
    9. '#' → logprob: -10.2725830078125
    10. ' ' → logprob: -10.3975830078125

Token 155: ' for' (ID: 395)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7013238668441772
    2. ' =' → logprob: -1.0763238668441772
    3. '=' → logprob: -2.826323986053467
    4. ' if' → logprob: -3.826323986053467
    5. 'if' → logprob: -4.076323986053467
    6. ' s' → logprob: -4.201323986053467
    7. ' ' → logprob: -4.451323986053467
    8. 'A' → logprob: -5.326323986053467
    9. ' is' → logprob: -5.326323986053467
    10. ' i' → logprob: -5.576323986053467

Token 156: ' side' (ID: 4307)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -1.4548743963241577
    2. ' s' → logprob: -1.8298743963241577
    3. ' ss' → logprob: -2.2048745155334473
    4. 's' → logprob: -2.3298745155334473
    5. ' if' → logprob: -2.5798745155334473
    6. ' ' → logprob: -3.0798745155334473
    7. ' next' → logprob: -3.3298745155334473
    8. 'if' → logprob: -3.5798745155334473
    9. 'ss' → logprob: -3.7048745155334473
    10. 'i' → logprob: -3.8298745155334473

Token 157: ' effects' (ID: 9327)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.1918901205062866
    2. ' if' → logprob: -1.1918901205062866
    3. 'A' → logprob: -2.066890239715576
    4. ' =' → logprob: -2.566890239715576
    5. 'if' → logprob: -2.816890239715576
    6. '   ' → logprob: -3.066890239715576
    7. '=' → logprob: -3.816890239715576
    8. 'a' → logprob: -4.566890239715576
    9. '[i' → logprob: -4.691890239715576
    10. ' A' → logprob: -5.316890239715576

Token 158: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.39645883440971375
    2. ' if' → logprob: -1.3964588642120361
    3. '<|end|>' → logprob: -3.521458864212036
    4. '    
' → logprob: -4.271458625793457
    5. 'if' → logprob: -4.396458625793457
    6. ' ' → logprob: -5.396458625793457
    7. '
' → logprob: -5.771458625793457
    8. ' 
' → logprob: -6.021458625793457
    9. '<|end|>' → logprob: -6.021458625793457
    10. '    ' → logprob: -6.021458625793457

Token 159: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010206836275756359
    2. ' if' → logprob: -5.260206699371338
    3. '    
' → logprob: -6.135206699371338
    4. '<|end|>' → logprob: -6.260206699371338
    5. '
' → logprob: -8.135207176208496
    6. '<|end|>' → logprob: -8.760207176208496
    7. ',' → logprob: -9.260207176208496
    8. 'if' → logprob: -9.885207176208496
    9. ':' → logprob: -10.135207176208496
    10. '  
' → logprob: -10.385207176208496

Token 160: ' class' (ID: 744)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7397987842559814
    2. 'if' → logprob: -1.2397987842559814
    3. '   ' → logprob: -1.6147987842559814
    4. 'obj' → logprob: -5.239798545837402
    5. ' class' → logprob: -5.864798545837402
    6. ' obj' → logprob: -5.864798545837402
    7. 'class' (adapté à ' class') → logprob: -6.114798545837402
    8. ' i' → logprob: -6.489798545837402
    9. ' x' → logprob: -6.614798545837402
    10. ' ' → logprob: -6.614798545837402

Token 161: ' C' (ID: 363)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.59206622838974
    2. ' Tmp' → logprob: -2.5920662879943848
    3. ' Dummy' → logprob: -2.8420662879943848
    4. ' Obj' → logprob: -2.8420662879943848
    5. 'Obj' → logprob: -3.8420662879943848
    6. ' Temp' → logprob: -4.092066287994385
    7. ' State' → logprob: -4.217066287994385
    8. 'X' → logprob: -4.467066287994385
    9. ' Helper' → logprob: -4.467066287994385
    10. ' object' → logprob: -4.592066287994385

Token 162: 'tx' (ID: 6874)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14481186866760254
    2. ':
' → logprob: -2.2698118686676025
    3. '   ' → logprob: -4.144811630249023
    4. '():' → logprob: -4.644811630249023
    5. 'lass' → logprob: -5.644811630249023
    6. '():
' → logprob: -6.769811630249023
    7. '(object' → logprob: -7.519811630249023
    8. '       ' → logprob: -8.019811630249023
    9. 'ounter' → logprob: -9.394811630249023
    10. '  ' → logprob: -10.144811630249023

Token 163: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.038159456104040146
    2. ':
' → logprob: -3.2881593704223633
    3. '(object' → logprob: -9.163159370422363
    4. '   ' → logprob: -12.163159370422363
    5. '():' → logprob: -12.913159370422363
    6. ' :' → logprob: -13.538159370422363
    7. ':

' → logprob: -13.663159370422363
    8. '():
' → logprob: -13.788159370422363
    9. ':
' → logprob: -14.663159370422363
    10. '    ' → logprob: -15.038159370422363

Token 164: ' pass' (ID: 1853)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15542224049568176
    2. ' pass' → logprob: -2.2804222106933594
    3. '        
' → logprob: -3.9054222106933594
    4. '<|end|>' → logprob: -5.155422210693359
    5. ' 
' → logprob: -6.030422210693359
    6. '    ' → logprob: -6.030422210693359
    7. 'pass' → logprob: -6.155422210693359
    8. '    
' → logprob: -6.280422210693359
    9. '
' → logprob: -6.405422210693359
    10. '   ' → logprob: -6.530422210693359

Token 165: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 166: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3863888680934906
    2. '
' → logprob: -1.886388897895813
    3. 'ctx' → logprob: -2.3863887786865234
    4. '<|end|>' → logprob: -3.6363887786865234
    5. ' ctx' → logprob: -3.7613887786865234
    6. '    
' → logprob: -4.386388778686523
    7. '  
' → logprob: -5.761388778686523
    8. '  ' → logprob: -5.886388778686523
    9. '    ' → logprob: -6.511388778686523
    10. ' 
' → logprob: -6.761388778686523

Token 167: ' if' (ID: 538)
  Prédit: 'ctx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ctx' → logprob: -0.16621367633342743
    2. ' ctx' → logprob: -1.9162136316299438
    3. '   ' → logprob: -5.916213512420654
    4. 'context' → logprob: -6.916213512420654
    5. ' context' → logprob: -7.916213512420654
    6. 'c' → logprob: -7.916213512420654
    7. 'i' → logprob: -8.166213989257812
    8. ' if' → logprob: -8.416213989257812
    9. 'if' (adapté à ' if') → logprob: -9.041213989257812
    10. ' i' → logprob: -9.166213989257812

Token 168: ' ss' (ID: 20928)
  Prédit: ' ss'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ss' → logprob: -0.37115997076034546
    2. ' s' → logprob: -1.7461600303649902
    3. ' a' → logprob: -2.4961600303649902
    4. ' b' → logprob: -4.49616003036499
    5. 's' → logprob: -4.49616003036499
    6. 'ss' → logprob: -4.62116003036499
    7. ' sl' → logprob: -4.87116003036499
    8. 'a' → logprob: -5.49616003036499
    9. ' ' → logprob: -5.62116003036499
    10. ' "' → logprob: -6.74616003036499

Token 169: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.01959768682718277
    2. '==' → logprob: -4.14459753036499
    3. '[' → logprob: -5.76959753036499
    4. ' ' → logprob: -8.894598007202148
    5. ' in' → logprob: -9.269598007202148
    6. '=="' → logprob: -9.394598007202148
    7. '.startswith' → logprob: -9.894598007202148
    8. ' =="' → logprob: -9.894598007202148
    9. '=='' → logprob: -12.644598007202148
    10. ' [' → logprob: -12.894598007202148

Token 170: ' "' (ID: 392)
  Prédit: ' "'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' "' → logprob: -0.5243587493896484
    2. '"A' → logprob: -1.1493587493896484
    3. '"' → logprob: -3.1493587493896484
    4. ''A' → logprob: -4.024358749389648
    5. ' '' → logprob: -4.149358749389648
    6. ''' → logprob: -4.649358749389648
    7. '"B' → logprob: -6.399358749389648
    8. ' ' → logprob: -7.274358749389648
    9. '"S' → logprob: -7.274358749389648
    10. '"C' → logprob: -7.399358749389648

Token 171: 'AB' (ID: 2912)
  Prédit: 'AB'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'AB' → logprob: -0.00031377444975078106
    2. 'A' → logprob: -8.250313758850098
    3. 'AA' → logprob: -10.500313758850098
    4. '"' → logprob: -12.125313758850098
    5. 'ab' → logprob: -12.125313758850098
    6. 'ABC' → logprob: -12.625313758850098
    7. 'AC' → logprob: -12.750313758850098
    8. 'BA' → logprob: -13.000313758850098
    9. ' AB' → logprob: -13.125313758850098
    10. '_AB' → logprob: -14.250313758850098

Token 172: '":
' (ID: 9213)
  Prédit: '":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '":
' → logprob: -0.25811702013015747
    2. '":' → logprob: -1.5081169605255127
    3. '"' → logprob: -5.133117198944092
    4. '":
' → logprob: -9.008116722106934
    5. '":

' → logprob: -9.008116722106934
    6. ':
' → logprob: -11.758116722106934
    7. '"
' → logprob: -12.008116722106934
    8. '"):
' → logprob: -12.258116722106934
    9. ':' → logprob: -12.758116722106934
    10. '\":' → logprob: -13.758116722106934

Token 173: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013113046064972878
    2. '    ' → logprob: -5.388113021850586
    3. '   ' → logprob: -5.888113021850586
    4. '<|end|>' → logprob: -6.138113021850586
    5. ' ' → logprob: -6.513113021850586
    6. ' if' → logprob: -7.263113021850586
    7. ',' → logprob: -7.638113021850586
    8. '        
' → logprob: -8.138113021850586
    9. '    
' → logprob: -8.763113021850586
    10. '     ' → logprob: -9.513113021850586

Token 174: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.6224421262741089
    2. ' if' → logprob: -0.9974421262741089
    3. '       ' → logprob: -2.7474422454833984
    4. '   ' → logprob: -3.4974422454833984
    5. '    ' → logprob: -9.747442245483398
    6. '	if' → logprob: -11.122442245483398
    7. 'push' → logprob: -11.122442245483398
    8. '
' → logprob: -11.247442245483398
    9. '    
' → logprob: -11.622442245483398
    10. ' ' → logprob: -11.622442245483398

Token 175: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.4746856093406677
    2. ' a' → logprob: -0.9746856093406677
    3. '   ' → logprob: -8.599685668945312
    4. 'b' → logprob: -8.974685668945312
    5. ' ' → logprob: -8.974685668945312
    6. ' b' → logprob: -9.474685668945312
    7. '	a' → logprob: -9.974685668945312
    8. '  ' → logprob: -11.099685668945312
    9. '(a' → logprob: -11.474685668945312
    10. '    ' → logprob: -12.099685668945312

Token 176: ' ==' (ID: 951)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.09935640543699265
    2. ' ==' → logprob: -2.9743564128875732
    3. '>' → logprob: -3.7243564128875732
    4. ' >=' → logprob: -4.349356174468994
    5. '==' → logprob: -5.599356174468994
    6. ' <' → logprob: -6.599356174468994
    7. ' <=' → logprob: -7.099356174468994
    8. '>=' → logprob: -7.849356174468994
    9. ' ' → logprob: -9.224356651306152
    10. '<=' → logprob: -10.099356651306152

Token 177: ' b' (ID: 287)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.009795283898711205
    2. ' ' → logprob: -4.634795188903809
    3. 'b' → logprob: -10.259795188903809
    4. '1' → logprob: -12.759795188903809
    5. ' b' → logprob: -14.259795188903809
    6. '   ' → logprob: -14.634795188903809
    7. 'c' → logprob: -16.509796142578125
    8. 'n' → logprob: -16.509796142578125
    9. '  ' → logprob: -16.634796142578125
    10. '2' → logprob: -17.384796142578125

Token 178: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1279403120279312
    2. '>' → logprob: -2.8779404163360596
    3. ' and' → logprob: -3.1279404163360596
    4. ' >' → logprob: -5.0029401779174805
    5. ':
' → logprob: -5.2529401779174805
    6. 'and' → logprob: -5.7529401779174805
    7. '>=' → logprob: -6.3779401779174805
    8. '>:' → logprob: -7.0029401779174805
    9. '==' → logprob: -7.1279401779174805
    10. ' >=' → logprob: -7.7529401779174805

Token 179: ' b' (ID: 287)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.32364320755004883
    2. 'c' → logprob: -2.448643207550049
    3. ' a' → logprob: -2.823643207550049
    4. 'b' → logprob: -3.323643207550049
    5. 'i' → logprob: -3.698643207550049
    6. ' c' → logprob: -3.823643207550049
    7. '(i' → logprob: -4.323643207550049
    8. '(a' → logprob: -4.573643207550049
    9. ' b' → logprob: -4.698643207550049
    10. ' (' → logprob: -5.323643207550049

Token 180: ' ==' (ID: 951)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.21749700605869293
    2. '>' → logprob: -1.9674969911575317
    3. ' ==' → logprob: -3.4674971103668213
    4. '==' → logprob: -3.9674971103668213
    5. ' <' → logprob: -5.717496871948242
    6. ' !=' → logprob: -6.967496871948242
    7. ' ' → logprob: -7.842496871948242
    8. '<' → logprob: -8.217496871948242
    9. '!=' → logprob: -8.717496871948242
    10. ':' → logprob: -8.967496871948242

Token 181: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3167024254798889
    2. ' ' → logprob: -1.3167023658752441
    3. 'c' → logprob: -5.816702365875244
    4. ' c' → logprob: -7.816702365875244
    5. '1' → logprob: -10.816702842712402
    6. '   ' → logprob: -10.941702842712402
    7. '  ' → logprob: -11.566702842712402
    8. 'n' → logprob: -13.879202842712402
    9. ' ' → logprob: -14.254202842712402
    10. '#' → logprob: -14.504202842712402

Token 182: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.28381118178367615
    2. 'c' → logprob: -1.4088112115859985
    3. ' ' → logprob: -6.033811092376709
    4. ' c' → logprob: -8.908811569213867
    5. '1' → logprob: -9.158811569213867
    6. 'n' → logprob: -12.158811569213867
    7. 'a' → logprob: -12.283811569213867
    8. '   ' → logprob: -12.658811569213867
    9. '  ' → logprob: -13.533811569213867
    10. 'b' → logprob: -13.658811569213867

Token 183: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14300398528575897
    2. ':
' → logprob: -2.0180039405822754
    3. ' and' → logprob: -8.143004417419434
    4. ' or' → logprob: -11.143004417419434
    5. ':
' → logprob: -11.768004417419434
    6. ',' → logprob: -12.143004417419434
    7. 'and' → logprob: -12.768004417419434
    8. ':

' → logprob: -13.018004417419434
    9. ' :
' → logprob: -13.393004417419434
    10. ' :' → logprob: -13.518004417419434

Token 184: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2666272521018982
    2. 'c' → logprob: -2.266627311706543
    3. 'n' → logprob: -2.266627311706543
    4. 'ss' → logprob: -4.016627311706543
    5. ' i' → logprob: -5.641627311706543
    6. 'a' → logprob: -6.391627311706543
    7. 's' → logprob: -7.016627311706543
    8. ' c' → logprob: -7.141627311706543
    9. ' n' → logprob: -7.391627311706543
    10. ' ss' → logprob: -8.266627311706543

Token 185: ' <' (ID: 464)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.8876241445541382
    2. '+' → logprob: -1.0126241445541382
    3. '==' → logprob: -2.1376242637634277
    4. ' +' → logprob: -2.2626242637634277
    5. ' !=' → logprob: -6.637624263763428
    6. '!=' → logprob: -7.512624263763428
    7. ' ' → logprob: -8.01262378692627
    8. ' <' → logprob: -8.13762378692627
    9. ' <=' → logprob: -8.38762378692627
    10. '<=' → logprob: -9.26262378692627

Token 186: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2812317907810211
    2. ' n' → logprob: -1.4062317609786987
    3. '   ' → logprob: -10.281231880187988
    4. ' ' → logprob: -10.906231880187988
    5. '	n' → logprob: -11.656231880187988
    6. '(n' → logprob: -11.906231880187988
    7. 'len' → logprob: -12.531231880187988
    8. '
' → logprob: -13.031231880187988
    9. '  ' → logprob: -13.156231880187988
    10. ' (' → logprob: -13.281231880187988

Token 187: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6933180689811707
    2. ' -' → logprob: -0.6933180689811707
    3. ' ' → logprob: -8.818318367004395
    4. '   ' → logprob: -11.693318367004395
    5. ':' → logprob: -11.943318367004395
    6. '1' → logprob: -13.318318367004395
    7. '
' → logprob: -13.443318367004395
    8. '  ' → logprob: -13.443318367004395
    9. 'and' → logprob: -14.443318367004395
    10. ' and' → logprob: -14.568318367004395

Token 188: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0024801772087812424
    2. ' ' → logprob: -6.0024800300598145
    3. '2' → logprob: -12.877480506896973
    4. '   ' → logprob: -14.002480506896973
    5. '  ' → logprob: -14.877480506896973
    6. '
' → logprob: -15.502480506896973
    7. '-' → logprob: -16.127479553222656
    8. '```' → logprob: -16.314979553222656
    9. ' ' → logprob: -16.502479553222656
    10. '１' → logprob: -16.502479553222656

Token 189: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00011594036914175376
    2. ' ' → logprob: -9.125116348266602
    3. '2' → logprob: -12.000116348266602
    4. '   ' → logprob: -15.750116348266602
    5. '
' → logprob: -15.812616348266602
    6. '10' → logprob: -16.5001163482666
    7. '１' → logprob: -16.5626163482666
    8. '  ' → logprob: -16.7501163482666
    9. '3' → logprob: -17.0001163482666
    10. '-' → logprob: -17.3751163482666

Token 190: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.6349332928657532
    2. ':' → logprob: -1.0099332332611084
    3. ':
' → logprob: -2.2599332332611084
    4. 'and' → logprob: -6.8849334716796875
    5. '   ' → logprob: -8.884933471679688
    6. '       ' → logprob: -9.134933471679688
    7. ' :' → logprob: -9.634933471679688
    8. ' :
' → logprob: -10.009933471679688
    9. ',' → logprob: -11.509933471679688
    10. '           ' → logprob: -11.634933471679688

Token 191: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.015229643322527409
    2. '       ' → logprob: -5.01522970199585
    3. ' if' → logprob: -5.64022970199585
    4. ',' → logprob: -6.64022970199585
    5. '   ' → logprob: -6.76522970199585
    6. ' and' → logprob: -8.015229225158691
    7. '
' → logprob: -8.015229225158691
    8. ':
' → logprob: -8.265229225158691
    9. ' answer' → logprob: -8.515229225158691
    10. ' a' → logprob: -8.640229225158691

Token 192: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.22342020273208618
    2. ' if' → logprob: -2.3484201431274414
    3. '   ' → logprob: -2.7234201431274414
    4. 'next' → logprob: -3.8484201431274414
    5. '           ' → logprob: -4.723420143127441
    6. ' nxt' → logprob: -5.598420143127441
    7. ' next' → logprob: -5.723420143127441
    8. 'x' → logprob: -8.473420143127441
    9. 'answer' → logprob: -8.473420143127441
    10. '#' → logprob: -8.598420143127441

Token 193: ' sl' (ID: 1925)
  Prédit: ' sl'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sl' → logprob: -0.35506734251976013
    2. 's' → logprob: -1.2300673723220825
    3. 'sl' → logprob: -5.980067253112793
    4. ' "' → logprob: -7.355067253112793
    5. ' (' → logprob: -7.355067253112793
    6. '"' → logprob: -7.480067253112793
    7. '"s' → logprob: -7.605067253112793
    8. '(s' → logprob: -7.730067253112793
    9. ' s' → logprob: -8.105067253112793
    10. ' ' → logprob: -8.355067253112793

Token 194: 'ist' (ID: 421)
  Prédit: 'ist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ist' → logprob: -8.792751032160595e-05
    2. '[i' → logprob: -9.87508773803711
    3. '[' → logprob: -11.12508773803711
    4. 'st' → logprob: -11.37508773803711
    5. 'i' → logprob: -12.50008773803711
    6. 'list' → logprob: -13.12508773803711
    7. '#' → logprob: -14.25008773803711
    8. '   ' → logprob: -14.62508773803711
    9. '(i' → logprob: -15.00008773803711
    10. '_list' → logprob: -15.00008773803711

Token 195: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.6166903151315637e-05
    2. '[' → logprob: -11.500016212463379
    3. ' [' → logprob: -12.125016212463379
    4. '[
' → logprob: -15.750016212463379
    5. 'i' → logprob: -15.875016212463379
    6. '[j' → logprob: -16.125015258789062
    7. '[n' → logprob: -17.750015258789062
    8. '```' → logprob: -17.875015258789062
    9. '[I' → logprob: -18.000015258789062
    10. ' ' → logprob: -18.000015258789062

Token 196: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.006719991099089384
    2. ' +' → logprob: -5.006720066070557
    3. ']' → logprob: -13.006719589233398
    4. '+i' → logprob: -13.256719589233398
    5. '＋' → logprob: -14.881719589233398
    6. '+
' → logprob: -16.3817195892334
    7. '+]' → logprob: -17.0067195892334
    8. '   ' → logprob: -17.3817195892334
    9. ']+' → logprob: -17.8817195892334
    10. ' ' → logprob: -18.1317195892334

Token 197: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2233183042553719e-05
    2. 'i' → logprob: -12.000012397766113
    3. ' ' → logprob: -12.125012397766113
    4. '2' → logprob: -14.875012397766113
    5. ']' → logprob: -15.875012397766113
    6. '0' → logprob: -17.250011444091797
    7. '```' → logprob: -17.750011444091797
    8. '   ' → logprob: -18.125011444091797
    9. ')' → logprob: -18.875011444091797
    10. '
' → logprob: -19.000011444091797

Token 198: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.7596035003662109
    2. '][' → logprob: -0.7596035003662109
    3. ']==' → logprob: -3.759603500366211
    4. '].' → logprob: -3.759603500366211
    5. '[' → logprob: -4.259603500366211
    6. ']=="' → logprob: -6.509603500366211
    7. '==' → logprob: -7.009603500366211
    8. ']=='' → logprob: -7.634603500366211
    9. ' ][' → logprob: -9.009603500366211
    10. ' ]' → logprob: -9.134603500366211

Token 199: ' ==' (ID: 951)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.23977015912532806
    2. '==' → logprob: -1.6147701740264893
    3. ' ==' → logprob: -4.86476993560791
    4. '=="' → logprob: -5.23976993560791
    5. 'in' → logprob: -7.86476993560791
    6. '=='' → logprob: -8.23976993560791
    7. '.startswith' → logprob: -8.48976993560791
    8. ' in' → logprob: -8.98976993560791
    9. '.count' → logprob: -9.11476993560791
    10. '!=' → logprob: -10.61476993560791

Token 200: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.031058616936206818
    2. '"A' → logprob: -3.7810585498809814
    3. ''' → logprob: -5.2810587882995605
    4. '"C' → logprob: -6.5310587882995605
    5. '"B' → logprob: -7.1560587882995605
    6. ''A' → logprob: -8.031058311462402
    7. ' "' → logprob: -9.531058311462402
    8. '"А' → logprob: -11.156058311462402
    9. '"a' → logprob: -11.281058311462402
    10. ''C' → logprob: -11.406058311462402

Token 201: 'AC' (ID: 2436)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.38170596957206726
    2. 'AB' → logprob: -1.2567059993743896
    3. 'AC' → logprob: -3.8817059993743896
    4. 'BC' → logprob: -5.2567057609558105
    5. '"A' → logprob: -6.1317057609558105
    6. 'BA' → logprob: -6.2567057609558105
    7. '"B' → logprob: -6.6317057609558105
    8. '"C' → logprob: -7.5067057609558105
    9. ''' → logprob: -7.7567057609558105
    10. ' AB' → logprob: -8.631706237792969

Token 202: '":
' (ID: 9213)
  Prédit: '":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '":
' → logprob: -0.5524387955665588
    2. '":' → logprob: -0.9274387955665588
    3. '"' → logprob: -3.552438735961914
    4. '":
' → logprob: -8.677438735961914
    5. '":

' → logprob: -10.677438735961914
    6. '"):
' → logprob: -11.302438735961914
    7. '\n' → logprob: -11.677438735961914
    8. ':
' → logprob: -12.802438735961914
    9. ':' → logprob: -12.802438735961914
    10. ' "' → logprob: -13.052438735961914

Token 203: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00196836213581264
    2. '           ' → logprob: -7.2519683837890625
    3. ':
' → logprob: -7.6269683837890625
    4. 'push' → logprob: -8.251968383789062
    5. '              ' → logprob: -9.251968383789062
    6. '                
' → logprob: -9.376968383789062
    7. ':' → logprob: -9.501968383789062
    8. 'a' → logprob: -9.751968383789062
    9. ' push' → logprob: -10.501968383789062
    10. ',' → logprob: -11.001968383789062

Token 204: ' A' (ID: 355)
  Prédit: 'push'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'push' → logprob: -0.13136060535907745
    2. 'a' → logprob: -2.2563605308532715
    3. ' push' → logprob: -4.5063605308532715
    4. '           ' → logprob: -5.5063605308532715
    5. '               ' → logprob: -6.8813605308532715
    6. ' a' → logprob: -7.0063605308532715
    7. 'answer' → logprob: -7.0063605308532715
    8. 'A' (adapté à ' A') → logprob: -8.75636100769043
    9. '   ' → logprob: -8.88136100769043
    10. 'b' → logprob: -10.13136100769043

Token 205: ',' (ID: 11)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.526802659034729
    2. '+=' → logprob: -1.026802659034729
    3. 'push' → logprob: -3.9018025398254395
    4. '=' → logprob: -4.6518025398254395
    5. 'ns' → logprob: -5.0268025398254395
    6. '_push' → logprob: -5.6518025398254395
    7. ' =' → logprob: -5.7768025398254395
    8. ' push' → logprob: -6.4018025398254395
    9. '.push' → logprob: -6.6518025398254395
    10. '  ' → logprob: -7.4018025398254395

Token 206: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.0023303362540900707
    2. ' B' → logprob: -6.127330303192139
    3. 'C' → logprob: -9.002330780029297
    4. 'b' → logprob: -12.127330780029297
    5. ' ' → logprob: -12.252330780029297
    6. '   ' → logprob: -12.502330780029297
    7. '  ' → logprob: -13.877330780029297
    8. 'A' → logprob: -14.252330780029297
    9. '           ' → logprob: -14.252330780029297
    10. '	B' → logprob: -14.502330780029297

Token 207: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2914377748966217
    2. '=' → logprob: -1.6664377450942993
    3. ',' → logprob: -2.791437864303589
    4. ' +=' → logprob: -6.66643762588501
    5. '+=' → logprob: -8.041438102722168
    6. ' ,' → logprob: -8.166438102722168
    7. ' ' → logprob: -8.416438102722168
    8. '  ' → logprob: -9.416438102722168
    9. 'B' → logprob: -9.791438102722168
    10. '           ' → logprob: -10.416438102722168

Token 208: ' a' (ID: 261)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.06877872347831726
    2. '0' → logprob: -3.0687787532806396
    3. 'True' → logprob: -4.8187785148620605
    4. 'a' → logprob: -5.1937785148620605
    5. '(True' → logprob: -6.3187785148620605
    6. '(' → logprob: -6.4437785148620605
    7. ' ' → logprob: -7.3187785148620605
    8. 'b' → logprob: -7.4437785148620605
    9. '(a' → logprob: -7.5687785148620605
    10. '2' → logprob: -7.5687785148620605

Token 209: '+' (ID: 10)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007390571292489767
    2. ' ,' → logprob: -5.63239049911499
    3. '+' → logprob: -6.75739049911499
    4. ' +' → logprob: -7.25739049911499
    5. '=' → logprob: -7.38239049911499
    6. ',b' → logprob: -7.63239049911499
    7. '+=' → logprob: -8.882390975952148
    8. '-' → logprob: -9.132390975952148
    9. ' =' → logprob: -9.257390975952148
    10. 'b' → logprob: -9.382390975952148

Token 210: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.629921436891891e-05
    2. ' ' → logprob: -10.75002670288086
    3. '0' → logprob: -13.12502670288086
    4. 'b' → logprob: -13.25002670288086
    5. '-' → logprob: -14.62502670288086
    6. '2' → logprob: -14.87502670288086
    7. '   ' → logprob: -16.62502670288086
    8. '  ' → logprob: -18.00002670288086
    9. 'B' → logprob: -18.25002670288086
    10. '
' → logprob: -18.75002670288086

Token 211: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0014232104877009988
    2. ' ,' → logprob: -6.876423358917236
    3. '<|end|>' → logprob: -9.126422882080078
    4. ',b' → logprob: -9.376422882080078
    5. ',B' → logprob: -10.251422882080078
    6. '
' → logprob: -11.001422882080078
    7. 'b' → logprob: -11.001422882080078
    8. ',
' → logprob: -11.251422882080078
    9. ' ' → logprob: -11.251422882080078
    10. '               ' → logprob: -11.501422882080078

Token 212: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.011469470337033272
    2. ' b' → logprob: -4.51146936416626
    3. ' ' → logprob: -8.761469841003418
    4. 'c' → logprob: -8.886469841003418
    5. 'a' → logprob: -9.511469841003418
    6. '   ' → logprob: -11.011469841003418
    7. '0' → logprob: -11.136469841003418
    8. '1' → logprob: -12.011469841003418
    9. ' c' → logprob: -12.136469841003418
    10. '  ' → logprob: -12.386469841003418

Token 213: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0040364875458180904
    2. ' -' → logprob: -5.8790364265441895
    3. '+' → logprob: -6.7540364265441895
    4. '<|end|>' → logprob: -10.129036903381348
    5. '<|end|>' → logprob: -11.379036903381348
    6. '0' → logprob: -12.629036903381348
    7. ' +' → logprob: -13.004036903381348
    8. ' ' → logprob: -13.254036903381348
    9. '–' → logprob: -14.129036903381348
    10. '   ' → logprob: -14.254036903381348

Token 214: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3497334420681
    2. '-' → logprob: -1.2247334718704224
    3. '0' → logprob: -6.849733352661133
    4. ' -' → logprob: -8.724733352661133
    5. ' ' → logprob: -9.849733352661133
    6. '   ' → logprob: -12.474733352661133
    7. '2' → logprob: -12.474733352661133
    8. '
' → logprob: -13.849733352661133
    9. '  ' → logprob: -13.974733352661133
    10. '```' → logprob: -14.599733352661133

Token 215: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.003848055377602577
    2. '
' → logprob: -6.378848075866699
    3. '           ' → logprob: -6.503848075866699
    4. '                
' → logprob: -7.753848075866699
    5. ';' → logprob: -9.6288480758667
    6. ',' → logprob: -10.1288480758667
    7. '<|end|>' → logprob: -10.7538480758667
    8. '  
' → logprob: -11.5038480758667
    9. ' 
' → logprob: -11.5038480758667
    10. '            
' → logprob: -11.5038480758667

Token 216: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.012506122700870037
    2. '           ' → logprob: -4.512506008148193
    3. '
' → logprob: -7.012506008148193
    4. '                
' → logprob: -8.137506484985352
    5. '<|end|>' → logprob: -9.887506484985352
    6. '            
' → logprob: -10.262506484985352
    7. ' 
' → logprob: -10.637506484985352
    8. '              ' → logprob: -11.012506484985352
    9. ',' → logprob: -11.137506484985352
    10. '  
' → logprob: -11.262506484985352

Token 217: ' a' (ID: 261)
  Prédit: 'push'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'push' → logprob: -0.6395289897918701
    2. '               ' → logprob: -0.8895289897918701
    3. ' push' → logprob: -3.88952898979187
    4. '           ' → logprob: -4.014529228210449
    5. 'B' → logprob: -4.639529228210449
    6. 'answer' → logprob: -4.764529228210449
    7. 'if' → logprob: -6.264529228210449
    8. ' answer' → logprob: -7.514529228210449
    9. 'A' → logprob: -7.639529228210449
    10. ' if' → logprob: -7.889529228210449

Token 218: ',' (ID: 11)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.387160986661911
    2. '+=' → logprob: -1.7621610164642334
    3. ',' → logprob: -2.2621610164642334
    4. '+' → logprob: -4.262160778045654
    5. ' -=' → logprob: -4.762160778045654
    6. ' ,' → logprob: -4.887160778045654
    7. ' =' → logprob: -5.012160778045654
    8. '=' → logprob: -5.262160778045654
    9. ' +' → logprob: -6.637160778045654
    10. '-=' → logprob: -7.137160778045654

Token 219: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.6334176063537598
    2. ' b' → logprob: -0.7584176063537598
    3. 'B' → logprob: -8.008417129516602
    4. ' c' → logprob: -9.133417129516602
    5. 'c' → logprob: -9.383417129516602
    6. '=' → logprob: -9.758417129516602
    7. ' B' → logprob: -10.383417129516602
    8. ' ' → logprob: -10.508417129516602
    9. 'a' → logprob: -10.633417129516602
    10. ' a' → logprob: -11.008417129516602

Token 220: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6904656291007996
    2. '+=' → logprob: -0.9404656291007996
    3. ' +=' → logprob: -2.3154656887054443
    4. ' =' → logprob: -4.815465450286865
    5. '+' → logprob: -7.065465450286865
    6. ',' → logprob: -7.690465450286865
    7. '-=' → logprob: -10.065465927124023
    8. ' -=' → logprob: -11.065465927124023
    9. ' ,' → logprob: -12.065465927124023
    10. ' +' → logprob: -12.440465927124023

Token 221: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.007728006690740585
    2. '1' → logprob: -5.132728099822998
    3. '0' → logprob: -7.257728099822998
    4. 'B' → logprob: -7.632728099822998
    5. ' A' → logprob: -7.882728099822998
    6. 'a' → logprob: -8.63272762298584
    7. '   ' → logprob: -11.13272762298584
    8. ' ' → logprob: -11.88272762298584
    9. '                   ' → logprob: -12.13272762298584
    10. '+' → logprob: -12.25772762298584

Token 222: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7713807821273804
    2. '+' → logprob: -1.3963807821273804
    3. '-' → logprob: -2.02138090133667
    4. ' +' → logprob: -2.52138090133667
    5. ' -' → logprob: -2.64638090133667
    6. ' ,' → logprob: -6.27138090133667
    7. '1' → logprob: -6.39638090133667
    8. 'B' → logprob: -7.52138090133667
    9. ' ' → logprob: -7.89638090133667
    10. '+B' → logprob: -8.396380424499512

Token 223: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.20276501774787903
    2. ' B' → logprob: -1.8277649879455566
    3. 'b' → logprob: -3.9527649879455566
    4. ' b' → logprob: -6.202764987945557
    5. 'a' → logprob: -7.452764987945557
    6. 'A' → logprob: -7.577764987945557
    7. ' A' → logprob: -8.577765464782715
    8. ' a' → logprob: -9.077765464782715
    9. ' ' → logprob: -10.077765464782715
    10. '1' → logprob: -10.952765464782715

Token 224: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0015221221838146448
    2. '           ' → logprob: -6.501522064208984
    3. '
' → logprob: -11.501522064208984
    4. ',' → logprob: -12.876522064208984
    5. '                
' → logprob: -13.001522064208984
    6. 'else' → logprob: -13.501522064208984
    7. '       ' → logprob: -13.626522064208984
    8. '              ' → logprob: -14.626522064208984
    9. 'elif' → logprob: -14.751522064208984
    10. '   ' → logprob: -15.251522064208984

Token 225: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.055809423327445984
    2. '           ' → logprob: -2.930809497833252
    3. '
' → logprob: -7.430809497833252
    4. '                
' → logprob: -8.555809020996094
    5. '            
' → logprob: -10.555809020996094
    6. '       ' → logprob: -10.555809020996094
    7. '<|end|>' → logprob: -11.055809020996094
    8. 'else' → logprob: -11.430809020996094
    9. '   ' → logprob: -11.555809020996094
    10. '    
' → logprob: -11.805809020996094

Token 226: ' answer' (ID: 6052)
  Prédit: 'answer'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'answer' (adapté à ' answer') → logprob: -0.001434993464499712
    2. '           ' → logprob: -6.876434803009033
    3. ' answer' → logprob: -8.376435279846191
    4. '               ' → logprob: -9.126435279846191
    5. 'push' → logprob: -10.001435279846191
    6. '   ' → logprob: -12.001435279846191
    7. '	answer' → logprob: -12.626435279846191
    8. '       ' → logprob: -12.876435279846191
    9. '                   ' → logprob: -13.751435279846191
    10. 'A' → logprob: -14.376435279846191

Token 227: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -9.484132169745862e-05
    2. '.' → logprob: -9.375094413757324
    3. '.app' → logprob: -12.625094413757324
    4. 'append' → logprob: -12.625094413757324
    5. '.ap' → logprob: -12.875094413757324
    6. ' .' → logprob: -14.750094413757324
    7. '.extend' → logprob: -16.37509536743164
    8. '.pop' → logprob: -16.50009536743164
    9. '_append' → logprob: -17.00009536743164
    10. ' append' → logprob: -17.12509536743164

Token 228: '('' (ID: 706)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.000550887081772089
    2. '('' → logprob: -7.875550746917725
    3. '(' → logprob: -8.875551223754883
    4. '"A' → logprob: -10.750551223754883
    5. '"' → logprob: -11.625551223754883
    6. '"B' → logprob: -15.000551223754883
    7. ' "' → logprob: -16.125551223754883
    8. 'A' → logprob: -16.125551223754883
    9. '(A' → logprob: -16.250551223754883
    10. '(
' → logprob: -17.125551223754883

Token 229: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.08293113112449646
    2. ''A' → logprob: -3.2079310417175293
    3. '"A' → logprob: -3.3329310417175293
    4. ''' → logprob: -6.207931041717529
    5. '"' → logprob: -7.332931041717529
    6. 'B' → logprob: -7.457931041717529
    7. '"B' → logprob: -9.207931518554688
    8. ' A' → logprob: -9.457931518554688
    9. ' "' → logprob: -11.832931518554688
    10. ' '' → logprob: -11.832931518554688

Token 230: '')
' (ID: 2515)
  Prédit: '')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')
' → logprob: -0.06739881634712219
    2. '')' → logprob: -2.9423987865448
    3. '\n' → logprob: -5.692399024963379
    4. '")' → logprob: -5.692399024963379
    5. '"' → logprob: -6.067399024963379
    6. '")
' → logprob: -6.067399024963379
    7. '')
' → logprob: -7.692399024963379
    8. '')

' → logprob: -8.442399024963379
    9. ')
' → logprob: -9.067399024963379
    10. ''' → logprob: -9.192399024963379

Token 231: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.028240444138646126
    2. '               ' → logprob: -4.15324068069458
    3. '
' → logprob: -5.40324068069458
    4. '       ' → logprob: -5.65324068069458
    5. '                
' → logprob: -6.65324068069458
    6. '            
' → logprob: -7.15324068069458
    7. 'elif' → logprob: -7.15324068069458
    8. '\n' → logprob: -7.65324068069458
    9. '    
' → logprob: -8.153240203857422
    10. 'else' → logprob: -8.653240203857422

Token 232: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25885987281799316
    2. 'else' (adapté à ' else') → logprob: -1.8838598728179932
    3. '           ' → logprob: -2.633859872817993
    4. '
' → logprob: -6.383859634399414
    5. ' else' → logprob: -6.508859634399414
    6. '               ' → logprob: -7.258859634399414
    7. 'elif' → logprob: -8.008859634399414
    8. '   ' → logprob: -10.633859634399414
    9. '            
' → logprob: -12.258859634399414
    10. '        
' → logprob: -12.383859634399414

Token 233: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.04358835518360138
    2. ':' → logprob: -3.793588399887085
    3. '               ' → logprob: -3.918588399887085
    4. ' :
' → logprob: -8.793588638305664
    5. ':

' → logprob: -10.293588638305664
    6. '           ' → logprob: -10.418588638305664
    7. '              ' → logprob: -11.043588638305664
    8. ' if' → logprob: -11.918588638305664
    9. ' :' → logprob: -12.418588638305664
    10. ':
' → logprob: -12.543588638305664

Token 234: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.020986171439290047
    2. ' B' → logprob: -5.145986080169678
    3. 'B' → logprob: -5.395986080169678
    4. ' push' → logprob: -5.770986080169678
    5. 'push' → logprob: -5.895986080169678
    6. '           ' → logprob: -6.145986080169678
    7. 'A' → logprob: -7.520986080169678
    8. ' A' → logprob: -8.020986557006836
    9. '   ' → logprob: -8.145986557006836
    10. ' if' → logprob: -8.395986557006836

Token 235: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' (adapté à ' B') → logprob: -0.7945207357406616
    2. 'push' → logprob: -1.0445207357406616
    3. 'A' → logprob: -2.794520854949951
    4. 'a' → logprob: -3.044520854949951
    5. ' B' → logprob: -3.544520854949951
    6. ' push' → logprob: -3.919520854949951
    7. '   ' → logprob: -4.919520854949951
    8. 'b' → logprob: -4.919520854949951
    9. '               ' → logprob: -4.919520854949951
    10. ' A' → logprob: -5.294520854949951

Token 236: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00808908324688673
    2. '.append' → logprob: -6.133089065551758
    3. ' ,' → logprob: -6.258089065551758
    4. ' =' → logprob: -6.758089065551758
    5. '=' → logprob: -6.883089065551758
    6. ' +=' → logprob: -7.133089065551758
    7. '+' → logprob: -8.383089065551758
    8. '+=' → logprob: -8.758089065551758
    9. '  ' → logprob: -9.508089065551758
    10. ' ' → logprob: -9.508089065551758

Token 237: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.14536835253238678
    2. ' A' → logprob: -2.0203683376312256
    3. 'a' → logprob: -6.145368576049805
    4. ' a' → logprob: -8.145368576049805
    5. 'b' → logprob: -9.770368576049805
    6. ' ' → logprob: -10.020368576049805
    7. 'C' → logprob: -10.145368576049805
    8. ' b' → logprob: -10.520368576049805
    9. 'answer' → logprob: -11.145368576049805
    10. 'B' → logprob: -11.520368576049805

Token 238: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4743673801422119
    2. ' =' → logprob: -0.9743673801422119
    3. ',' → logprob: -8.224367141723633
    4. ' ,' → logprob: -10.849367141723633
    5. ' ' → logprob: -13.099367141723633
    6. '   ' → logprob: -15.974367141723633
    7. '＝' → logprob: -16.224367141723633
    8. '  ' → logprob: -16.599367141723633
    9. '=b' → logprob: -16.599367141723633
    10. '    ' → logprob: -17.099367141723633

Token 239: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.12700338661670685
    2. ' b' → logprob: -2.1270034313201904
    3. '   ' → logprob: -10.25200366973877
    4. 'a' → logprob: -10.50200366973877
    5. ' ' → logprob: -12.12700366973877
    6. ' a' → logprob: -12.87700366973877
    7. '	b' → logprob: -13.00200366973877
    8. '  ' → logprob: -13.87700366973877
    9. 'B' → logprob: -14.87700366973877
    10. '    ' → logprob: -15.50200366973877

Token 240: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.47593849897384644
    2. '-' → logprob: -0.9759384989738464
    3. ' +' → logprob: -6.975938320159912
    4. ' -' → logprob: -7.100938320159912
    5. ',' → logprob: -9.72593879699707
    6. '1' → logprob: -10.85093879699707
    7. '+,' → logprob: -11.85093879699707
    8. ' ' → logprob: -12.72593879699707
    9. '-,' → logprob: -13.10093879699707
    10. '```' → logprob: -13.47593879699707

Token 241: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2471589798224159e-05
    2. '-' → logprob: -11.875012397766113
    3. ' ' → logprob: -12.125012397766113
    4. '0' → logprob: -17.50001335144043
    5. ' -' → logprob: -18.00001335144043
    6. '   ' → logprob: -18.12501335144043
    7. '```' → logprob: -18.75001335144043
    8. '
' → logprob: -19.87501335144043
    9. '2' → logprob: -20.37501335144043
    10. '  ' → logprob: -20.50001335144043

Token 242: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.719917630311102e-05
    2. ' ,' → logprob: -9.875077247619629
    3. ',b' → logprob: -10.750077247619629
    4. '=' → logprob: -13.625077247619629
    5. ',a' → logprob: -13.625077247619629
    6. 'a' → logprob: -14.875077247619629
    7. ',
' → logprob: -15.125077247619629
    8. '               ' → logprob: -15.375077247619629
    9. '           ' → logprob: -15.750077247619629
    10. '<|end|>' → logprob: -16.000076293945312

Token 243: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.4740857779979706
    2. ' a' → logprob: -0.974085807800293
    3. ' ' → logprob: -12.724085807800293
    4. '	a' → logprob: -13.349085807800293
    5. '<|end|>' → logprob: -13.599085807800293
    6. '   ' → logprob: -14.224085807800293
    7. 'A' → logprob: -14.474085807800293
    8. '  ' → logprob: -14.849085807800293
    9. '    ' → logprob: -14.974085807800293
    10. 'b' → logprob: -15.724085807800293

Token 244: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0008339279447682202
    2. ' -' → logprob: -7.375833988189697
    3. ',' → logprob: -8.500833511352539
    4. '1' → logprob: -13.375833511352539
    5. '               ' → logprob: -13.625833511352539
    6. '           ' → logprob: -14.500833511352539
    7. ' ' → logprob: -15.625833511352539
    8. '+' → logprob: -15.750833511352539
    9. '   ' → logprob: -16.00083351135254
    10. '-,' → logprob: -16.62583351135254

Token 245: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001805377542041242
    2. '-' → logprob: -8.6251802444458
    3. ' ' → logprob: -14.0001802444458
    4. ' -' → logprob: -16.375181198120117
    5. '```' → logprob: -17.375181198120117
    6. '   ' → logprob: -18.625181198120117
    7. '۱' → logprob: -19.250181198120117
    8. '१' → logprob: -19.625181198120117
    9. 'def' → logprob: -19.625181198120117
    10. '0' → logprob: -19.625181198120117

Token 246: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0005726903327740729
    2. '           ' → logprob: -8.37557315826416
    3. '<|end|>' → logprob: -9.50057315826416
    4. '                
' → logprob: -9.87557315826416
    5. '
' → logprob: -10.00057315826416
    6. '              ' → logprob: -10.12557315826416
    7. '                ' → logprob: -10.50057315826416
    8. 'a' → logprob: -10.50057315826416
    9. '       ' → logprob: -10.87557315826416
    10. 'answer' → logprob: -11.37557315826416

Token 247: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0007872331188991666
    2. '           ' → logprob: -7.625787258148193
    3. '
' → logprob: -8.875786781311035
    4. '                
' → logprob: -9.750786781311035
    5. '              ' → logprob: -10.625786781311035
    6. '                ' → logprob: -11.250786781311035
    7. '   ' → logprob: -11.375786781311035
    8. '       ' → logprob: -11.625786781311035
    9. '                   ' → logprob: -11.875786781311035
    10. 'b' → logprob: -12.000786781311035

Token 248: ' b' (ID: 287)
  Prédit: 'answer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'answer' → logprob: -0.021479839459061623
    2. ' answer' → logprob: -3.896479845046997
    3. 'a' → logprob: -7.521479606628418
    4. '               ' → logprob: -9.021479606628418
    5. '           ' → logprob: -9.021479606628418
    6. 'b' (adapté à ' b') → logprob: -9.646479606628418
    7. '   ' → logprob: -9.771479606628418
    8. ' a' → logprob: -11.271479606628418
    9. '	answer' → logprob: -11.521479606628418
    10. ' b' → logprob: -12.521479606628418

Token 249: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.034986257553100586
    2. '=' → logprob: -3.4099862575531006
    3. '+=' → logprob: -7.03498649597168
    4. ' ,' → logprob: -8.15998649597168
    5. ' +=' → logprob: -8.90998649597168
    6. ' =' → logprob: -10.53498649597168
    7. '<|end|>' → logprob: -12.28498649597168
    8. '+' → logprob: -13.15998649597168
    9. '+,' → logprob: -13.78498649597168
    10. ',b' → logprob: -13.90998649597168

Token 250: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.02175118960440159
    2. ' a' → logprob: -4.521751403808594
    3. 'answer' → logprob: -4.646751403808594
    4. 'A' → logprob: -7.521751403808594
    5. ' answer' → logprob: -8.021751403808594
    6. '<|end|>' → logprob: -10.021751403808594
    7. 'Answer' → logprob: -10.521751403808594
    8. ' ' → logprob: -10.646751403808594
    9. ' A' → logprob: -10.771751403808594
    10. 'b' → logprob: -11.146751403808594

Token 251: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0031793788075447083
    2. ' =' → logprob: -5.753179550170898
    3. '+=' → logprob: -13.878179550170898
    4. ',' → logprob: -14.503179550170898
    5. ' +=' → logprob: -16.1281795501709
    6. '.=' → logprob: -17.6281795501709
    7. '＝' → logprob: -18.2531795501709
    8. ' ' → logprob: -18.2531795501709
    9. '=}' → logprob: -18.5031795501709
    10. '<|end|>' → logprob: -18.6281795501709

Token 252: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.00020401719666551799
    2. ' B' → logprob: -8.500204086303711
    3. 'A' → logprob: -14.625204086303711
    4. '	B' → logprob: -17.50020408630371
    5. ' ' → logprob: -18.25020408630371
    6. '   ' → logprob: -19.12520408630371
    7. 'b' → logprob: -19.75020408630371
    8. '"B' → logprob: -19.75020408630371
    9. '(B' → logprob: -20.50020408630371
    10. '  ' → logprob: -20.62520408630371

Token 253: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009057454881258309
    2. ' ,' → logprob: -7.125905513763428
    3. ',
' → logprob: -9.625905990600586
    4. '<|end|>' → logprob: -11.500905990600586
    5. ' +' → logprob: -12.250905990600586
    6. '               ' → logprob: -12.625905990600586
    7. '           ' → logprob: -12.875905990600586
    8. '+' → logprob: -12.875905990600586
    9. '```' → logprob: -13.500905990600586
    10. '
' → logprob: -13.625905990600586

Token 254: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.1290162354707718
    2. 'a' → logprob: -2.129016160964966
    3. ' A' → logprob: -6.254016399383545
    4. ' a' → logprob: -8.754015922546387
    5. ' ' → logprob: -12.629015922546387
    6. '  ' → logprob: -13.629015922546387
    7. '   ' → logprob: -14.754015922546387
    8. '<|end|>' → logprob: -14.879015922546387
    9. '    ' → logprob: -16.129016876220703
    10. '	a' → logprob: -17.379016876220703

Token 255: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01468943152576685
    2. '
' → logprob: -4.5146894454956055
    3. '           ' → logprob: -6.0146894454956055
    4. '<|end|>' → logprob: -8.389689445495605
    5. ',' → logprob: -8.514689445495605
    6. 'answer' → logprob: -8.764689445495605
    7. '                
' → logprob: -9.014689445495605
    8. '       ' → logprob: -9.139689445495605
    9. '   ' → logprob: -10.014689445495605
    10. '    
' → logprob: -10.139689445495605

Token 256: '               ' (ID: 506)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.26307061314582825
    2. '           ' → logprob: -1.6380705833435059
    3. '<|end|>' → logprob: -4.263070583343506
    4. '               ' → logprob: -4.513070583343506
    5. '
' → logprob: -5.013070583343506
    6. '   ' → logprob: -6.263070583343506
    7. '    
' → logprob: -7.388070583343506
    8. '<|end|>' → logprob: -7.513070583343506
    9. '                
' → logprob: -7.763070583343506
    10. '            
' → logprob: -7.763070583343506

Token 257: ' answer' (ID: 6052)
  Prédit: 'answer'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'answer' (adapté à ' answer') → logprob: -9.849109119386412e-06
    2. ' answer' → logprob: -11.875009536743164
    3. '           ' → logprob: -13.500009536743164
    4. '   ' → logprob: -14.000009536743164
    5. '               ' → logprob: -15.375009536743164
    6. '       ' → logprob: -15.875009536743164
    7. 'B' → logprob: -16.125009536743164
    8. '	answer' → logprob: -16.875009536743164
    9. 'append' → logprob: -17.625009536743164
    10. '  ' → logprob: -18.000009536743164

Token 258: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -7.465036105713807e-06
    2. '.' → logprob: -11.875007629394531
    3. '.extend' → logprob: -15.750007629394531
    4. '.app' → logprob: -16.50000762939453
    5. 'append' → logprob: -16.62500762939453
    6. '.Append' → logprob: -17.62500762939453
    7. ' .' → logprob: -17.75000762939453
    8. '           ' → logprob: -19.00000762939453
    9. 'app' → logprob: -19.62500762939453
    10. '.add' → logprob: -19.75000762939453

Token 259: '("' (ID: 568)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.002251483965665102
    2. '(' → logprob: -6.127251625061035
    3. '("' → logprob: -9.627251625061035
    4. '()' → logprob: -16.37725067138672
    5. ' ('' → logprob: -16.50225067138672
    6. '(('' → logprob: -16.50225067138672
    7. ''' → logprob: -16.75225067138672
    8. '(
' → logprob: -17.12725067138672
    9. '("("' → logprob: -17.37725067138672
    10. '('.')' → logprob: -17.37725067138672

Token 260: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.002282053232192993
    2. 'A' → logprob: -6.12728214263916
    3. '"B' → logprob: -9.37728214263916
    4. '"' → logprob: -12.37728214263916
    5. ' B' → logprob: -12.62728214263916
    6. ''' → logprob: -13.12728214263916
    7. '"A' → logprob: -13.37728214263916
    8. 'b' → logprob: -14.87728214263916
    9. ''A' → logprob: -15.12728214263916
    10. '	B' → logprob: -16.127281188964844

Token 261: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.0009513601544313133
    2. '")
' → logprob: -7.000951290130615
    3. ')' → logprob: -10.250951766967773
    4. '")
' → logprob: -13.625951766967773
    5. ')")' → logprob: -13.625951766967773
    6. '')' → logprob: -13.750951766967773
    7. '"' → logprob: -14.250951766967773
    8. '");' → logprob: -16.250951766967773
    9. ')
' → logprob: -16.750951766967773
    10. ' ")' → logprob: -17.125951766967773

Token 262: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10531014204025269
    2. '
' → logprob: -3.3553102016448975
    3. '<|end|>' → logprob: -3.4803102016448975
    4. '       ' → logprob: -3.6053102016448975
    5. '    
' → logprob: -5.730309963226318
    6. '<|end|>' → logprob: -6.730309963226318
    7. '\n' → logprob: -7.605309963226318
    8. ')' → logprob: -7.730309963226318
    9. '  
' → logprob: -8.480310440063477
    10. '           ' → logprob: -8.480310440063477

Token 263: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0035847488325089216
    2. 'else' (adapté à ' else') → logprob: -6.378584861755371
    3. '   ' → logprob: -6.503584861755371
    4. 'elif' → logprob: -8.503584861755371
    5. ' else' → logprob: -9.128584861755371
    6. '
' → logprob: -10.878584861755371
    7. '           ' → logprob: -11.128584861755371
    8. '    ' → logprob: -11.753584861755371
    9. '<|end|>' → logprob: -12.128584861755371
    10. '        
' → logprob: -12.503584861755371

Token 264: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.24650627374649048
    2. ':
' → logprob: -1.6215062141418457
    3. '           ' → logprob: -4.246506214141846
    4. '       ' → logprob: -5.246506214141846
    5. ' if' → logprob: -7.121506214141846
    6. ' :' → logprob: -8.746506690979004
    7. 'if' → logprob: -9.496506690979004
    8. ' :
' → logprob: -9.621506690979004
    9. ',' → logprob: -10.121506690979004
    10. '        ' → logprob: -10.121506690979004

Token 265: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4193725287914276
    2. 'if' → logprob: -1.66937255859375
    3. ' if' → logprob: -1.91937255859375
    4. 'push' → logprob: -5.29437255859375
    5. ' push' → logprob: -6.41937255859375
    6. '   ' → logprob: -7.29437255859375
    7. '           ' → logprob: -9.04437255859375
    8. ' ' → logprob: -12.54437255859375
    9. '
' → logprob: -12.66937255859375
    10. '```' → logprob: -12.79437255859375

Token 266: ' obj' (ID: 4099)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.06430982798337936
    2. ' if' → logprob: -2.81430983543396
    3. '       ' → logprob: -6.939309597015381
    4. '           ' → logprob: -7.189309597015381
    5. '   ' → logprob: -7.814309597015381
    6. 'push' → logprob: -8.689310073852539
    7. ' push' → logprob: -10.439310073852539
    8. ' ' → logprob: -12.314310073852539
    9. 'A' → logprob: -12.814310073852539
    10. '    ' → logprob: -13.189310073852539

Token 267: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.48009175062179565
    2. '=' → logprob: -0.9800917506217957
    3. 'ect' → logprob: -5.230091571807861
    4. ':' → logprob: -8.48009204864502
    5. 'ects' → logprob: -8.98009204864502
    6. 'ective' → logprob: -9.23009204864502
    7. '   ' → logprob: -10.10509204864502
    8. 'ected' → logprob: -10.10509204864502
    9. ' ' → logprob: -10.73009204864502
    10. '=obj' → logprob: -10.98009204864502

Token 268: ' C' (ID: 363)
  Prédit: ' C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' C' → logprob: -0.2374204844236374
    2. 'C' → logprob: -1.7374204397201538
    3. 'Ctx' → logprob: -4.112420558929443
    4. 'object' → logprob: -5.362420558929443
    5. ' None' → logprob: -5.862420558929443
    6. 'None' → logprob: -5.862420558929443
    7. ' object' → logprob: -6.487420558929443
    8. '{}' → logprob: -6.737420558929443
    9. 'type' → logprob: -6.862420558929443
    10. 'push' → logprob: -7.112420558929443

Token 269: 'tx' (ID: 6874)
  Prédit: 'tx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tx' → logprob: -0.0003266447747591883
    2. 'txt' → logprob: -8.750327110290527
    3. 'ctx' → logprob: -9.500327110290527
    4. 'Ctx' → logprob: -9.875327110290527
    5. 't' → logprob: -10.375327110290527
    6. 'xt' → logprob: -11.625327110290527
    7. 'tsx' → logprob: -14.625327110290527
    8. 'tz' → logprob: -14.875327110290527
    9. 'tl' → logprob: -14.875327110290527
    10. 'x' → logprob: -15.250327110290527

Token 270: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.11729785799980164
    2. '()' → logprob: -2.492297887802124
    3. '           ' → logprob: -3.617297887802124
    4. '();' → logprob: -7.742297649383545
    5. '()
' → logprob: -7.992297649383545
    6. '
' → logprob: -9.117298126220703
    7. '       ' → logprob: -9.242298126220703
    8. '()

' → logprob: -10.242298126220703
    9. ';' → logprob: -10.742298126220703
    10. '()\' → logprob: -10.742298126220703

Token 271: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001930301426909864
    2. '<|end|>' → logprob: -7.001930236816406
    3. 'if' → logprob: -7.751930236816406
    4. ' if' → logprob: -7.876930236816406
    5. '<|end|>' → logprob: -9.501930236816406
    6. '            
' → logprob: -10.251930236816406
    7. '       ' → logprob: -10.376930236816406
    8. '   ' → logprob: -10.751930236816406
    9. '            ' → logprob: -11.251930236816406
    10. '
' → logprob: -12.501930236816406

Token 272: ' (' (ID: 350)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3057890832424164
    2. '           ' → logprob: -1.9307891130447388
    3. 'obj' → logprob: -2.180788993835449
    4. ' if' → logprob: -5.305788993835449
    5. ' obj' → logprob: -9.18078899383545
    6. '   ' → logprob: -9.43078899383545
    7. '       ' → logprob: -9.55578899383545
    8. '            ' → logprob: -9.80578899383545
    9. 'answer' → logprob: -9.93078899383545
    10. 'pass' → logprob: -10.05578899383545

Token 273: 'set' (ID: 977)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.04460134729743004
    2. ' a' → logprob: -3.5446014404296875
    3. 'push' → logprob: -4.6696014404296875
    4. 'obj' → logprob: -5.7946014404296875
    5. ' push' → logprob: -7.0446014404296875
    6. ')' → logprob: -7.7946014404296875
    7. '(a' → logprob: -8.294601440429688
    8. 'A' → logprob: -9.294601440429688
    9. ' (' → logprob: -9.294601440429688
    10. ' obj' → logprob: -9.294601440429688

Token 274: 'attr' (ID: 6035)
  Prédit: 'attr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'attr' → logprob: -7.171581091824919e-05
    2. '(obj' → logprob: -10.25007152557373
    3. ')' → logprob: -11.25007152557373
    4. 'default' → logprob: -12.00007152557373
    5. '(attr' → logprob: -12.12507152557373
    6. 'obj' → logprob: -12.50007152557373
    7. 'item' → logprob: -13.50007152557373
    8. ')(' → logprob: -13.62507152557373
    9. 'a' → logprob: -13.75007152557373
    10. ')obj' → logprob: -14.00007152557373

Token 275: '(obj' (ID: 12464)
  Prédit: '(obj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(obj' → logprob: -0.0011829655850306153
    2. ')(' → logprob: -7.251183032989502
    3. ')obj' → logprob: -8.001182556152344
    4. ')' → logprob: -9.876182556152344
    5. 'obj' → logprob: -10.251182556152344
    6. '=obj' → logprob: -10.751182556152344
    7. ',obj' → logprob: -11.001182556152344
    8. ')(
' → logprob: -12.501182556152344
    9. '(' → logprob: -12.751182556152344
    10. '[obj' → logprob: -13.126182556152344

Token 276: ','' (ID: 6620)
  Prédit: '(obj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(obj' → logprob: -0.060655009001493454
    2. ',' → logprob: -2.935655117034912
    3. ',obj' → logprob: -5.560655117034912
    4. '(' → logprob: -6.810655117034912
    5. ')(' → logprob: -8.935654640197754
    6. ' ,' → logprob: -8.935654640197754
    7. '=obj' → logprob: -9.060654640197754
    8. ')' → logprob: -9.310654640197754
    9. '(object' → logprob: -9.560654640197754
    10. ','' → logprob: -10.060654640197754

Token 277: 'm' (ID: 76)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.05039094015955925
    2. 'push' → logprob: -4.050390720367432
    3. 'x' → logprob: -4.925390720367432
    4. ''a' → logprob: -5.050390720367432
    5. 'flag' → logprob: -5.925390720367432
    6. ''' → logprob: -6.050390720367432
    7. 'b' → logprob: -6.425390720367432
    8. 'val' → logprob: -6.425390720367432
    9. ' a' → logprob: -6.800390720367432
    10. 'value' → logprob: -7.550390720367432

Token 278: '',' (ID: 787)
  Prédit: 'ax'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ax' → logprob: -0.5467348098754883
    2. 'ode' → logprob: -1.7967348098754883
    3. 'in' → logprob: -2.9217348098754883
    4. 'ethod' → logprob: -2.9217348098754883
    5. ',' → logprob: -3.5467348098754883
    6. 'em' → logprob: -4.046734809875488
    7. 'emory' → logprob: -4.296734809875488
    8. 'a' → logprob: -4.421734809875488
    9. 'ean' → logprob: -4.546734809875488
    10. 'e' → logprob: -5.046734809875488

Token 279: 'min' (ID: 1493)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.720217227935791
    2. ''a' → logprob: -1.970217227935791
    3. '0' → logprob: -2.220217227935791
    4. 'lambda' → logprob: -2.970217227935791
    5. ''A' → logprob: -3.220217227935791
    6. '1' → logprob: -3.345217227935791
    7. '"' → logprob: -3.845217227935791
    8. ''' → logprob: -4.095217227935791
    9. 'push' → logprob: -4.095217227935791
    10. '"a' → logprob: -4.470217227935791

Token 280: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.002312026685103774
    2. 'a' → logprob: -6.252312183380127
    3. ')' → logprob: -8.252311706542969
    4. '((' → logprob: -9.752311706542969
    5. '(' → logprob: -10.127311706542969
    6. ')(' → logprob: -11.877311706542969
    7. ')a' → logprob: -12.127311706542969
    8. '([' → logprob: -12.252311706542969
    9. '))' → logprob: -13.252311706542969
    10. '(
' → logprob: -13.752311706542969

Token 281: ',b' (ID: 17568)
  Prédit: ',b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',b' → logprob: -0.6417818665504456
    2. ',' → logprob: -0.8917818665504456
    3. ',a' → logprob: -3.016781806945801
    4. ' ,' → logprob: -4.266781806945801
    5. '(a' → logprob: -7.891781806945801
    6. 'a' → logprob: -8.5167818069458
    7. ' a' → logprob: -10.0167818069458
    8. 'b' → logprob: -10.8917818069458
    9. '   ' → logprob: -11.1417818069458
    10. ' ' → logprob: -11.6417818069458

Token 282: ')))
' (ID: 12562)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.08391233533620834
    2. '))
' → logprob: -3.2089123725891113
    3. ')))' → logprob: -3.5839123725891113
    4. ')))
' → logprob: -5.208912372589111
    5. '));' → logprob: -5.833912372589111
    6. ')),' → logprob: -6.333912372589111
    7. ')));' → logprob: -6.833912372589111
    8. ')' → logprob: -7.958912372589111
    9. '),' → logprob: -8.583911895751953
    10. '()))' → logprob: -9.333911895751953

Token 283: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.009916398674249649
    2. '            
' → logprob: -5.884916305541992
    3. ' if' → logprob: -6.009916305541992
    4. '
' → logprob: -6.259916305541992
    5. '<|end|>' → logprob: -6.384916305541992
    6. '            ' → logprob: -7.759916305541992
    7. ',' → logprob: -9.134916305541992
    8. ' 
' → logprob: -9.259916305541992
    9. '<|end|>' → logprob: -9.384916305541992
    10. ' and' → logprob: -9.634916305541992

Token 284: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09791334718465805
    2. ' if' → logprob: -2.9729132652282715
    3. 'if' (adapté à ' if') → logprob: -3.2229132652282715
    4. '
' → logprob: -6.4729132652282715
    5. '            
' → logprob: -7.5979132652282715
    6. '<|end|>' → logprob: -9.97291374206543
    7. '            ' → logprob: -10.59791374206543
    8. ' ' → logprob: -10.72291374206543
    9. '   ' → logprob: -10.84791374206543
    10. ' 
' → logprob: -11.09791374206543

Token 285: ' obj' (ID: 4099)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5239637494087219
    2. ' a' → logprob: -0.8989637494087219
    3. 'obj' → logprob: -7.773963928222656
    4. ' obj' → logprob: -8.523963928222656
    5. ' ' → logprob: -9.273963928222656
    6. '(a' → logprob: -10.273963928222656
    7. '	a' → logprob: -10.523963928222656
    8. ' ' → logprob: -10.898963928222656
    9. '   ' → logprob: -11.023963928222656
    10. '  ' → logprob: -11.898963928222656

Token 286: '.m' (ID: 1021)
  Prédit: '.m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.m' → logprob: -0.0013078561751171947
    2. '.' → logprob: -7.001307964324951
    3. ' .' → logprob: -7.876307964324951
    4. 'm' → logprob: -12.376307487487793
    5. '.м' → logprob: -12.626307487487793
    6. '​.' → logprob: -12.751307487487793
    7. ' ' → logprob: -14.376307487487793
    8. '‌.' → logprob: -14.376307487487793
    9. ').' → logprob: -14.501307487487793
    10. '.a' → logprob: -14.876307487487793

Token 287: ' ==' (ID: 951)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.9737581014633179
    2. ' ==' → logprob: -1.0987581014633179
    3. '==' → logprob: -1.9737581014633179
    4. '>' → logprob: -2.0987582206726074
    5. ' <=' → logprob: -4.723758220672607
    6. ' >=' → logprob: -4.848758220672607
    7. ':' → logprob: -5.598758220672607
    8. ' <' → logprob: -6.098758220672607
    9. '>=' → logprob: -6.098758220672607
    10. '<=' → logprob: -6.348758220672607

Token 288: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.4302337169647217
    2. '1' → logprob: -1.5552337169647217
    3. '0' → logprob: -2.1802337169647217
    4. ' a' → logprob: -4.305233955383301
    5. ' ' → logprob: -4.430233955383301
    6. 'b' → logprob: -10.1802339553833
    7. '	a' → logprob: -11.5552339553833
    8. '2' → logprob: -11.6802339553833
    9. '   ' → logprob: -11.6802339553833
    10. ' b' → logprob: -12.3052339553833

Token 289: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.22632098197937012
    2. ':
' → logprob: -1.6013209819793701
    3. '):' → logprob: -7.601321220397949
    4. '):
' → logprob: -8.35132122039795
    5. ' and' → logprob: -9.72632122039795
    6. ')' → logprob: -10.60132122039795
    7. ' :
' → logprob: -10.97632122039795
    8. ' :' → logprob: -11.10132122039795
    9. ':
' → logprob: -11.22632122039795
    10. ':

' → logprob: -11.35132122039795

Token 290: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.02949565462768078
    2. ':
' → logprob: -4.279495716094971
    3. '           ' → logprob: -4.654495716094971
    4. ' push' → logprob: -6.029495716094971
    5. 'push' → logprob: -6.904495716094971
    6. '
' → logprob: -6.904495716094971
    7. ',' → logprob: -8.279495239257812
    8. ':' → logprob: -8.404495239257812
    9. '                
' → logprob: -8.529495239257812
    10. '   ' → logprob: -8.779495239257812

Token 291: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.17437663674354553
    2. '               ' → logprob: -2.5493767261505127
    3. 'push' → logprob: -3.5493767261505127
    4. ' a' → logprob: -4.049376487731934
    5. '   ' → logprob: -4.299376487731934
    6. 'A' → logprob: -4.299376487731934
    7. 'B' → logprob: -5.924376487731934
    8. '           ' → logprob: -5.924376487731934
    9. 'b' → logprob: -6.424376487731934
    10. ' push' → logprob: -7.174376487731934

Token 292: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.38707488775253296
    2. '+=' → logprob: -1.1370749473571777
    3. ' -=' → logprob: -9.26207447052002
    4. '+' → logprob: -10.01207447052002
    5. ',' → logprob: -10.01207447052002
    6. '-=' → logprob: -11.63707447052002
    7. '   ' → logprob: -12.76207447052002
    8. ']+=' → logprob: -13.01207447052002
    9. '+='' → logprob: -13.76207447052002
    10. '=' → logprob: -13.76207447052002

Token 293: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00014478032244369388
    2. ' ' → logprob: -8.875144958496094
    3. '-' → logprob: -12.375144958496094
    4. '   ' → logprob: -14.750144958496094
    5. '+' → logprob: -15.125144958496094
    6. ' -' → logprob: -17.250144958496094
    7. '  ' → logprob: -18.125144958496094
    8. ' +' → logprob: -19.000144958496094
    9. '１' → logprob: -19.250144958496094
    10. '```' → logprob: -21.000144958496094

Token 294: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.8921695047756657e-05
    2. '-' → logprob: -10.500028610229492
    3. ' ' → logprob: -13.625028610229492
    4. '+' → logprob: -16.000028610229492
    5. ' -' → logprob: -16.875028610229492
    6. '   ' → logprob: -18.125028610229492
    7. '１' → logprob: -19.250028610229492
    8. '  ' → logprob: -20.625028610229492
    9. ' +' → logprob: -21.750028610229492
    10. '```' → logprob: -21.750028610229492

Token 295: ';' (ID: 26)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7297195196151733
    2. ';' → logprob: -0.8547195196151733
    3. '<|end|>' → logprob: -3.604719638824463
    4. '               ' → logprob: -3.854719638824463
    5. '   ' → logprob: -4.104719638824463
    6. ' else' → logprob: -5.229719638824463
    7. ' b' → logprob: -5.729719638824463
    8. '           ' → logprob: -5.979719638824463
    9. ';b' → logprob: -6.104719638824463
    10. 'b' → logprob: -6.229719638824463

Token 296: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.023247575387358665
    2. 'b' → logprob: -3.773247480392456
    3. '               ' → logprob: -13.523247718811035
    4. ' ' → logprob: -14.773247718811035
    5. '           ' → logprob: -16.27324676513672
    6. '   ' → logprob: -16.52324676513672
    7. '	b' → logprob: -16.77324676513672
    8. '                   ' → logprob: -17.64824676513672
    9. ' ' → logprob: -17.89824676513672
    10. ',b' → logprob: -18.64824676513672

Token 297: ' -=' (ID: 12583)
  Prédit: ' -='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.39050862193107605
    2. '-=' → logprob: -1.1405086517333984
    3. '-' → logprob: -5.640508651733398
    4. ' -' → logprob: -10.390508651733398
    5. '   ' → logprob: -10.515508651733398
    6. ' ' → logprob: -11.640508651733398
    7. '+=' → logprob: -12.140508651733398
    8. ' +=' → logprob: -13.265508651733398
    9. '=' → logprob: -13.265508651733398
    10. '```' → logprob: -13.765508651733398

Token 298: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002475777640938759
    2. ' ' → logprob: -6.002475738525391
    3. '               ' → logprob: -17.12747573852539
    4. '   ' → logprob: -17.50247573852539
    5. '           ' → logprob: -17.75247573852539
    6. '0' → logprob: -18.25247573852539
    7. '                   ' → logprob: -18.37747573852539
    8. ' ' → logprob: -18.62747573852539
    9. '```' → logprob: -18.75247573852539
    10. '１' → logprob: -19.37747573852539

Token 299: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.676292231422849e-05
    2. ' ' → logprob: -11.000017166137695
    3. '<|end|>' → logprob: -18.812517166137695
    4. '１' → logprob: -19.062517166137695
    5. '۱' → logprob: -19.187517166137695
    6. '```' → logprob: -19.500017166137695
    7. '   ' → logprob: -19.562517166137695
    8. '0' → logprob: -20.062517166137695
    9. '-' → logprob: -20.187517166137695
    10. '१' → logprob: -20.375017166137695

Token 300: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.010688981041312218
    2. '<|end|>' → logprob: -5.135688781738281
    3. '
' → logprob: -6.260688781738281
    4. ';' → logprob: -7.385688781738281
    5. 'answer' → logprob: -7.635688781738281
    6. '           ' → logprob: -7.760688781738281
    7. '                
' → logprob: -8.260688781738281
    8. ' answer' → logprob: -8.385688781738281
    9. '<|end|>' → logprob: -8.760688781738281
    10. ' 
' → logprob: -9.135688781738281

Token 301: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0032168070320039988
    2. '<|end|>' → logprob: -6.878216743469238
    3. '           ' → logprob: -7.753216743469238
    4. '                
' → logprob: -7.878216743469238
    5. '
' → logprob: -8.003216743469238
    6. ';' → logprob: -8.003216743469238
    7. 'answer' → logprob: -8.503216743469238
    8. '       ' → logprob: -8.753216743469238
    9. '   ' → logprob: -9.503216743469238
    10. ' 
' → logprob: -9.753216743469238

Token 302: ' answer' (ID: 6052)
  Prédit: 'answer'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'answer' (adapté à ' answer') → logprob: -0.08189228177070618
    2. ' answer' → logprob: -2.581892251968384
    3. '               ' → logprob: -5.831892490386963
    4. '	answer' → logprob: -10.831892013549805
    5. ' ' → logprob: -10.956892013549805
    6. '   ' → logprob: -11.206892013549805
    7. '           ' → logprob: -11.331892013549805
    8. '       ' → logprob: -13.956892013549805
    9. 'Answer' → logprob: -14.581892013549805
    10. '  ' → logprob: -14.706892013549805

Token 303: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0011722482740879059
    2. '.' → logprob: -6.751172065734863
    3. ' .' → logprob: -13.876172065734863
    4. 'append' → logprob: -14.501172065734863
    5. '.app' → logprob: -15.001172065734863
    6. '.extend' → logprob: -15.751172065734863
    7. '.ap' → logprob: -17.75117301940918
    8. '.Append' → logprob: -18.25117301940918
    9. 'Append' → logprob: -18.62617301940918
    10. '.add' → logprob: -18.75117301940918

Token 304: '('' (ID: 706)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0013207156443968415
    2. '('' → logprob: -6.751320838928223
    3. '(' → logprob: -9.126320838928223
    4. '("("' → logprob: -10.376320838928223
    5. '"' → logprob: -11.501320838928223
    6. '("(' → logprob: -16.001319885253906
    7. '"A' → logprob: -16.376319885253906
    8. ' ("' → logprob: -16.626319885253906
    9. ''' → logprob: -17.126319885253906
    10. '('"' → logprob: -17.376319885253906

Token 305: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -5.919942486798391e-05
    2. '"A' → logprob: -10.000059127807617
    3. ''A' → logprob: -11.500059127807617
    4. '"' → logprob: -13.375059127807617
    5. 'B' → logprob: -13.500059127807617
    6. ''' → logprob: -14.625059127807617
    7. ' A' → logprob: -16.250059127807617
    8. 'А' → logprob: -17.750059127807617
    9. 'a' → logprob: -18.000059127807617
    10. 'Ａ' → logprob: -18.750059127807617

Token 306: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.005837437696754932
    2. '")' → logprob: -5.380837440490723
    3. '')
' → logprob: -7.255837440490723
    4. ')' → logprob: -7.630837440490723
    5. ''' → logprob: -11.255837440490723
    6. '')"' → logprob: -12.505837440490723
    7. '"' → logprob: -12.630837440490723
    8. '')

' → logprob: -12.880837440490723
    9. '")
' → logprob: -13.505837440490723
    10. ' ')' → logprob: -14.755837440490723

Token 307: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.011388852261006832
    2. '<|end|>' → logprob: -5.386388778686523
    3. '   ' → logprob: -6.136388778686523
    4. 'else' → logprob: -6.636388778686523
    5. '       ' → logprob: -6.761388778686523
    6. '               ' → logprob: -7.261388778686523
    7. 'elif' → logprob: -7.636388778686523
    8. '<|end|>' → logprob: -8.261388778686523
    9. ' else' → logprob: -8.386388778686523
    10. ')' → logprob: -8.761388778686523

Token 308: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.4807244539260864
    2. ' else' → logprob: -1.2307244539260864
    3. '           ' → logprob: -2.480724334716797
    4. '       ' → logprob: -5.355724334716797
    5. '<|end|>' → logprob: -7.105724334716797
    6. 'elif' → logprob: -8.480724334716797
    7. '	else' → logprob: -9.980724334716797
    8. '<|end|>' → logprob: -10.730724334716797
    9. '   ' → logprob: -10.980724334716797
    10. ' elif' → logprob: -11.480724334716797

Token 309: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.32599595189094543
    2. ':
' → logprob: -1.325995922088623
    3. '               ' → logprob: -4.575995922088623
    4. '           ' → logprob: -6.325995922088623
    5. ' :
' → logprob: -8.450996398925781
    6. ' :' → logprob: -9.075996398925781
    7. '            ' → logprob: -9.575996398925781
    8. '   ' → logprob: -10.575996398925781
    9. ' a' → logprob: -10.700996398925781
    10. '{' → logprob: -10.950996398925781

Token 310: '               ' (ID: 506)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.15935014188289642
    2. '               ' → logprob: -2.4093501567840576
    3. 'b' → logprob: -3.5343501567840576
    4. '   ' → logprob: -4.0343499183654785
    5. ' a' → logprob: -5.1593499183654785
    6. '           ' → logprob: -5.7843499183654785
    7. 'a' → logprob: -7.6593499183654785
    8. '	b' → logprob: -8.284350395202637
    9. ' B' → logprob: -8.534350395202637
    10. ' ' → logprob: -8.659350395202637

Token 311: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -0.03836815431714058
    2. ' b' → logprob: -3.2883682250976562
    3. '   ' → logprob: -8.663368225097656
    4. 'B' → logprob: -9.288368225097656
    5. '               ' → logprob: -11.163368225097656
    6. ' B' → logprob: -11.163368225097656
    7. 'a' → logprob: -11.163368225097656
    8. ' ' → logprob: -12.038368225097656
    9. '	b' → logprob: -12.163368225097656
    10. '           ' → logprob: -13.038368225097656

Token 312: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.023258639499545097
    2. '+=' → logprob: -3.773258686065674
    3. '+' → logprob: -11.898258209228516
    4. ' +' → logprob: -12.523258209228516
    5. ' -=' → logprob: -13.148258209228516
    6. ']+=' → logprob: -15.898258209228516
    7. '+='' → logprob: -16.148258209228516
    8. ' ' → logprob: -16.148258209228516
    9. '+="' → logprob: -16.273258209228516
    10. '=' → logprob: -16.398258209228516

Token 313: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.25192990899086
    2. '1' → logprob: -1.5019298791885376
    3. ' ' → logprob: -14.501930236816406
    4. '```' → logprob: -15.501930236816406
    5. '   ' → logprob: -16.001930236816406
    6. '0' → logprob: -17.751930236816406
    7. '  ' → logprob: -17.876930236816406
    8. 'space' → logprob: -18.001930236816406
    9. '
' → logprob: -18.626930236816406
    10. '           ' → logprob: -18.751930236816406

Token 314: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00317783304490149
    2. ' ' → logprob: -5.753177642822266
    3. '```' → logprob: -16.253177642822266
    4. '   ' → logprob: -18.128177642822266
    5. ' ' → logprob: -18.503177642822266
    6. '
' → logprob: -18.878177642822266
    7. 'space' → logprob: -19.378177642822266
    8. '0' → logprob: -20.128177642822266
    9. '１' → logprob: -20.128177642822266
    10. '-' → logprob: -20.128177642822266

Token 315: ';' (ID: 26)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.0885134935379028
    2. '-' → logprob: -1.3385134935379028
    3. ' -' → logprob: -1.8385134935379028
    4. ' -=' → logprob: -2.4635133743286133
    5. ',' → logprob: -2.5885133743286133
    6. ' ' → logprob: -3.4635133743286133
    7. '1' → logprob: -3.5885133743286133
    8. '   ' → logprob: -5.088513374328613
    9. ' ,' → logprob: -5.463513374328613
    10. '                   ' → logprob: -5.588513374328613

Token 316: ' a' (ID: 261)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.18033495545387268
    2. '1' → logprob: -1.8053349256515503
    3. ' b' → logprob: -7.93033504486084
    4. ' a' → logprob: -9.30533504486084
    5. '-' → logprob: -9.68033504486084
    6. ' -' → logprob: -10.43033504486084
    7. 'b' → logprob: -11.18033504486084
    8. '```' → logprob: -12.18033504486084
    9. '           ' → logprob: -12.43033504486084
    10. '<|end|>' → logprob: -12.55533504486084

Token 317: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.5049384236335754
    2. ' -=' → logprob: -1.0049383640289307
    3. '-' → logprob: -3.5049383640289307
    4. '               ' → logprob: -8.254938125610352
    5. '   ' → logprob: -10.629938125610352
    6. '           ' → logprob: -10.754938125610352
    7. ' -' → logprob: -10.879938125610352
    8. '                   ' → logprob: -11.629938125610352
    9. ' ' → logprob: -12.754938125610352
    10. '              ' → logprob: -13.754938125610352

Token 318: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02324594371020794
    2. ' ' → logprob: -3.7732460498809814
    3. '```' → logprob: -15.398245811462402
    4. ' ' → logprob: -16.52324676513672
    5. '   ' → logprob: -17.27324676513672
    6. '<|end|>' → logprob: -17.39824676513672
    7. '...' → logprob: -18.14824676513672
    8. '               ' → logprob: -18.39824676513672
    9. '           ' → logprob: -18.39824676513672
    10. '[' → logprob: -18.52324676513672

Token 319: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.002861104905605316
    2. '
' → logprob: -6.252861022949219
    3. '           ' → logprob: -8.127861022949219
    4. '<|end|>' → logprob: -8.127861022949219
    5. '   ' → logprob: -9.502861022949219
    6. ' ' → logprob: -9.752861022949219
    7. '                
' → logprob: -10.252861022949219
    8. '                ' → logprob: -10.252861022949219
    9. '       ' → logprob: -10.377861022949219
    10. ' 
' → logprob: -10.752861022949219

Token 320: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0001450187264708802
    2. '           ' → logprob: -9.500144958496094
    3. ' ' → logprob: -11.000144958496094
    4. '
' → logprob: -11.625144958496094
    5. '              ' → logprob: -11.875144958496094
    6. '   ' → logprob: -11.875144958496094
    7. ' B' → logprob: -12.250144958496094
    8. '<|end|>' → logprob: -12.375144958496094
    9. '                ' → logprob: -12.500144958496094
    10. '                
' → logprob: -12.500144958496094

Token 321: ' answer' (ID: 6052)
  Prédit: 'answer'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'answer' (adapté à ' answer') → logprob: -0.029788676649332047
    2. ' answer' → logprob: -3.5297887325286865
    3. '               ' → logprob: -10.279788970947266
    4. '           ' → logprob: -13.404788970947266
    5. ' ' → logprob: -13.779788970947266
    6. 'Answer' → logprob: -15.029788970947266
    7. '   ' → logprob: -15.279788970947266
    8. '	answer' → logprob: -15.279788970947266
    9. '.answer' → logprob: -15.904788970947266
    10. '_answer' → logprob: -16.904788970947266

Token 322: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -2.1888679839321412e-05
    2. '.' → logprob: -10.750021934509277
    3. '.app' → logprob: -16.00002098083496
    4. '.extend' → logprob: -16.12502098083496
    5. ' .' → logprob: -16.50002098083496
    6. '.Append' → logprob: -18.12502098083496
    7. '.ap' → logprob: -18.50002098083496
    8. 'append' → logprob: -18.87502098083496
    9. '.add' → logprob: -19.25002098083496
    10. '           ' → logprob: -19.37502098083496

Token 323: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.04869478568434715
    2. '("' → logprob: -3.0486948490142822
    3. '(' → logprob: -9.173694610595703
    4. ''' → logprob: -12.798694610595703
    5. '"B' → logprob: -14.298694610595703
    6. '"' → logprob: -15.798694610595703
    7. '(B' → logprob: -16.798694610595703
    8. ''b' → logprob: -17.298694610595703
    9. ''s' → logprob: -18.298694610595703
    10. ' ('' → logprob: -18.298694610595703

Token 324: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.001027927384711802
    2. '"B' → logprob: -7.001028060913086
    3. ''' → logprob: -9.126028060913086
    4. '"' → logprob: -12.126028060913086
    5. ' B' → logprob: -13.126028060913086
    6. '')' → logprob: -17.251028060913086
    7. ''b' → logprob: -17.626028060913086
    8. '	B' → logprob: -17.751028060913086
    9. 'b' → logprob: -18.251028060913086
    10. ')' → logprob: -18.251028060913086

Token 325: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.007135174237191677
    2. ')' → logprob: -5.007135391235352
    3. '")' → logprob: -8.257135391235352
    4. '')
' → logprob: -8.757135391235352
    5. ''' → logprob: -14.132135391235352
    6. '')"' → logprob: -14.257135391235352
    7. ')
' → logprob: -14.757135391235352
    8. ' ')' → logprob: -15.632135391235352
    9. '   ' → logprob: -15.882135391235352
    10. '')}' → logprob: -16.13213539123535

Token 326: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 327: ' elif' (ID: 9497)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0015882966108620167
    2. '
' → logprob: -7.251588344573975
    3. '    
' → logprob: -7.501588344573975
    4. '<|end|>' → logprob: -8.876587867736816
    5. 'i' → logprob: -9.501587867736816
    6. '  
' → logprob: -10.626587867736816
    7. '```' → logprob: -10.876587867736816
    8. '\n' → logprob: -11.126587867736816
    9. ' i' → logprob: -11.626587867736816
    10. '       ' → logprob: -11.751587867736816

Token 328: ' ss' (ID: 20928)
  Prédit: ' ss'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ss' → logprob: -0.04905760660767555
    2. 'ss' → logprob: -3.049057722091675
    3. 's' → logprob: -8.549057960510254
    4. ' s' → logprob: -8.549057960510254
    5. ' ' → logprob: -10.424057960510254
    6. '   ' → logprob: -10.924057960510254
    7. '(ss' → logprob: -11.424057960510254
    8. '"' → logprob: -12.174057960510254
    9. '	ss' → logprob: -12.299057960510254
    10. '    ' → logprob: -12.986557960510254

Token 329: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.029755808413028717
    2. '==' → logprob: -3.5297558307647705
    3. ' =="' → logprob: -13.154755592346191
    4. ' ' → logprob: -13.654755592346191
    5. '=="' → logprob: -13.904755592346191
    6. ' =' → logprob: -15.154755592346191
    7. ' ' → logprob: -15.529755592346191
    8. '=' → logprob: -15.529755592346191
    9. '===' → logprob: -16.029756546020508
    10. '[' → logprob: -16.279756546020508

Token 330: ' "' (ID: 392)
  Prédit: ' "'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' "' → logprob: -0.16090838611125946
    2. '"' → logprob: -1.9109083414077759
    3. '"C' → logprob: -7.910908222198486
    4. '"B' → logprob: -8.660908699035645
    5. ''' → logprob: -9.535908699035645
    6. ' '' → logprob: -9.910908699035645
    7. ' ' → logprob: -11.160908699035645
    8. '"A' → logprob: -12.535908699035645
    9. ' ' → logprob: -13.410908699035645
    10. '("' → logprob: -13.910908699035645

Token 331: 'BC' (ID: 7551)
  Prédit: 'BC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'BC' → logprob: -0.0018128673546016216
    2. 'AC' → logprob: -6.376812934875488
    3. ' BC' → logprob: -9.251812934875488
    4. 'bc' → logprob: -12.501812934875488
    5. '"' → logprob: -12.751812934875488
    6. 'BA' → logprob: -12.876812934875488
    7. 'CA' → logprob: -13.501812934875488
    8. '
' → logprob: -13.751812934875488
    9. 'AB' → logprob: -13.876812934875488
    10. ' ' → logprob: -14.751812934875488

Token 332: '":
' (ID: 9213)
  Prédit: '":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '":
' → logprob: -0.008841583505272865
    2. '":' → logprob: -4.883841514587402
    3. ':
' → logprob: -6.883841514587402
    4. ':' → logprob: -9.008841514587402
    5. '"' → logprob: -9.883841514587402
    6. '":
' → logprob: -10.883841514587402
    7. '":

' → logprob: -11.633841514587402
    8. '       ' → logprob: -12.008841514587402
    9. '   ' → logprob: -13.508841514587402
    10. '':
' → logprob: -14.508841514587402

Token 333: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09086047112941742
    2. '   ' → logprob: -2.465860366821289
    3. ' if' → logprob: -6.590860366821289
    4. 'if' → logprob: -7.715860366821289
    5. ':
' → logprob: -9.840860366821289
    6. ':' → logprob: -11.590860366821289
    7. '
' → logprob: -11.965860366821289
    8. '```' → logprob: -11.965860366821289
    9. '<|end|>' → logprob: -12.590860366821289
    10. '    ' → logprob: -12.715860366821289

Token 334: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.47585880756378174
    2. '   ' → logprob: -0.9758588075637817
    3. ' if' → logprob: -6.350858688354492
    4. '       ' → logprob: -11.225858688354492
    5. '
' → logprob: -11.975858688354492
    6. '	if' → logprob: -12.225858688354492
    7. 'def' → logprob: -12.725858688354492
    8. '```' → logprob: -12.850858688354492
    9. '    
' → logprob: -13.225858688354492
    10. '  ' → logprob: -14.475858688354492

Token 335: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.5244303941726685
    2. 'b' → logprob: -0.8994303941726685
    3. ' c' → logprob: -7.524430274963379
    4. 'c' → logprob: -7.774430274963379
    5. '   ' → logprob: -8.149430274963379
    6. ' ' → logprob: -10.524430274963379
    7. '    ' → logprob: -11.649430274963379
    8. '  ' → logprob: -11.649430274963379
    9. 'a' → logprob: -12.274430274963379
    10. '(b' → logprob: -12.899430274963379

Token 336: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.28121984004974365
    2. '==' → logprob: -1.4062198400497437
    3. ' >' → logprob: -10.531219482421875
    4. ' ' → logprob: -11.031219482421875
    5. '>' → logprob: -12.031219482421875
    6. '+' → logprob: -12.281219482421875
    7. ' +' → logprob: -12.781219482421875
    8. '   ' → logprob: -12.906219482421875
    9. '=' → logprob: -13.406219482421875
    10. '==
' → logprob: -13.406219482421875

Token 337: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.26431339979171753
    2. '1' → logprob: -1.5143134593963623
    3. ' c' → logprob: -4.639313220977783
    4. ' ' → logprob: -6.389313220977783
    5. '0' → logprob: -7.014313220977783
    6. '   ' → logprob: -10.639313697814941
    7. 'a' → logprob: -11.014313697814941
    8. 'b' → logprob: -11.264313697814941
    9. '  ' → logprob: -12.264313697814941
    10. '2' → logprob: -13.264313697814941

Token 338: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.004671137779951096
    2. 'and' → logprob: -5.379671096801758
    3. ':
' → logprob: -10.129671096801758
    4. ':' → logprob: -12.379671096801758
    5. '==' → logprob: -13.004671096801758
    6. ' ==' → logprob: -13.379671096801758
    7. ' ' → logprob: -13.379671096801758
    8. ' or' → logprob: -14.754671096801758
    9. '   ' → logprob: -15.129671096801758
    10. ':

' → logprob: -15.504671096801758

Token 339: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.6446199417114258
    2. 'c' → logprob: -1.0196199417114258
    3. 'b' → logprob: -2.644619941711426
    4. ' b' → logprob: -3.144619941711426
    5. '   ' → logprob: -9.019619941711426
    6. ' ' → logprob: -9.769619941711426
    7. '       ' → logprob: -10.269619941711426
    8. '    ' → logprob: -11.269619941711426
    9. '           ' → logprob: -11.269619941711426
    10. 'i' → logprob: -12.019619941711426

Token 340: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.12724967300891876
    2. '==' → logprob: -2.1272497177124023
    3. ' and' → logprob: -8.127249717712402
    4. 'and' → logprob: -11.252249717712402
    5. ' ' → logprob: -12.002249717712402
    6. '==
' → logprob: -12.752249717712402
    7. ' ==
' → logprob: -13.502249717712402
    8. '>' → logprob: -14.002249717712402
    9. '1' → logprob: -14.252249717712402
    10. '=' → logprob: -14.752249717712402

Token 341: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00023286080977413803
    2. ' ' → logprob: -8.375232696533203
    3. '0' → logprob: -13.125232696533203
    4. '   ' → logprob: -16.000232696533203
    5. '=' → logprob: -16.375232696533203
    6. '１' → logprob: -18.250232696533203
    7. 'b' → logprob: -18.375232696533203
    8. '  ' → logprob: -19.250232696533203
    9. '2' → logprob: -19.500232696533203
    10. '۱' → logprob: -19.875232696533203

Token 342: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.7968066206085496e-05
    2. ' ' → logprob: -10.500027656555176
    3. '0' → logprob: -14.750027656555176
    4. '   ' → logprob: -17.375028610229492
    5. '１' → logprob: -18.625028610229492
    6. 'b' → logprob: -19.750028610229492
    7. '=' → logprob: -20.000028610229492
    8. '  ' → logprob: -20.250028610229492
    9. '۱' → logprob: -20.375028610229492
    10. '2' → logprob: -20.500028610229492

Token 343: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.002264805603772402
    2. 'and' → logprob: -6.627264976501465
    3. ':
' → logprob: -7.127264976501465
    4. ':' → logprob: -9.002264976501465
    5. '       ' → logprob: -12.502264976501465
    6. ' ' → logprob: -13.252264976501465
    7. '   ' → logprob: -13.377264976501465
    8. '           ' → logprob: -13.502264976501465
    9. ',' → logprob: -14.127264976501465
    10. ' or' → logprob: -14.127264976501465

Token 344: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.2520068287849426
    2. 'i' → logprob: -1.5020067691802979
    3. '   ' → logprob: -9.752006530761719
    4. ' ' → logprob: -12.002006530761719
    5. '    ' → logprob: -12.502006530761719
    6. '       ' → logprob: -13.252006530761719
    7. '	i' → logprob: -13.502006530761719
    8. '  ' → logprob: -13.877006530761719
    9. '     ' → logprob: -14.002006530761719
    10. '           ' → logprob: -14.002006530761719

Token 345: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.22582188248634338
    2. '<' → logprob: -1.600821852684021
    3. '<n' → logprob: -7.8508219718933105
    4. '+' → logprob: -11.600821495056152
    5. ' ' → logprob: -11.600821495056152
    6. ' +' → logprob: -15.850821495056152
    7. '<int' → logprob: -15.975821495056152
    8. '<num' → logprob: -15.975821495056152
    9. 'n' → logprob: -16.10082244873047
    10. '<len' → logprob: -16.22582244873047

Token 346: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.20141518115997314
    2. ' n' → logprob: -1.7014151811599731
    3. '(n' → logprob: -14.326415061950684
    4. 'len' → logprob: -14.701415061950684
    5. '   ' → logprob: -15.201415061950684
    6. '	n' → logprob: -15.451415061950684
    7. ' ' → logprob: -15.576415061950684
    8. '
' → logprob: -16.826416015625
    9. '_n' → logprob: -17.076416015625
    10. ' (' → logprob: -17.326416015625

Token 347: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.38690564036369324
    2. '-' → logprob: -1.1369056701660156
    3. ' ' → logprob: -10.511905670166016
    4. '+' → logprob: -12.511905670166016
    5. ' ' → logprob: -13.886905670166016
    6. '<|end|>' → logprob: -14.886905670166016
    7. 'n' → logprob: -15.136905670166016
    8. '   ' → logprob: -15.261905670166016
    9. ' +' → logprob: -15.386905670166016
    10. ' -
' → logprob: -15.511905670166016

Token 348: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0024907607585191727
    2. ' ' → logprob: -6.002490997314453
    3. 'n' → logprob: -11.627490997314453
    4. ' n' → logprob: -12.877490997314453
    5. '-' → logprob: -13.877490997314453
    6. '2' → logprob: -14.502490997314453
    7. '   ' → logprob: -14.627490997314453
    8. '
' → logprob: -14.752490997314453
    9. '```' → logprob: -14.877490997314453
    10. 'len' → logprob: -15.127490997314453

Token 349: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001805377542041242
    2. ' ' → logprob: -8.6251802444458
    3. '-' → logprob: -15.0001802444458
    4. '```' → logprob: -15.6251802444458
    5. '   ' → logprob: -16.250181198120117
    6. '2' → logprob: -16.250181198120117
    7. '
' → logprob: -16.625181198120117
    8. 'n' → logprob: -17.000181198120117
    9. 'len' → logprob: -17.250181198120117
    10. '  ' → logprob: -18.187681198120117

Token 350: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4293779730796814
    2. ':
' → logprob: -1.0543780326843262
    3. ' and' → logprob: -7.554378032684326
    4. '       ' → logprob: -9.179377555847168
    5. 'and' → logprob: -11.054377555847168
    6. ':

' → logprob: -11.429377555847168
    7. '<|end|>' → logprob: -11.804377555847168
    8. '):
' → logprob: -12.054377555847168
    9. ',' → logprob: -12.679377555847168
    10. ':
' → logprob: -13.429377555847168

Token 351: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0013519029598683119
    2. '           ' → logprob: -7.126351833343506
    3. '<|end|>' → logprob: -7.751351833343506
    4. '
' → logprob: -10.251352310180664
    5. '<|end|>' → logprob: -10.876352310180664
    6. '   ' → logprob: -11.376352310180664
    7. '#' → logprob: -11.751352310180664
    8. ':
' → logprob: -11.751352310180664
    9. '```' → logprob: -11.751352310180664
    10. ',' → logprob: -12.001352310180664

Token 352: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.26381102204322815
    2. '           ' → logprob: -2.0138111114501953
    3. ' if' → logprob: -2.3888111114501953
    4. '       ' → logprob: -5.388811111450195
    5. '               ' → logprob: -6.388811111450195
    6. '<|end|>' → logprob: -9.013811111450195
    7. 'If' → logprob: -9.388811111450195
    8. '	if' → logprob: -10.013811111450195
    9. '   ' → logprob: -10.263811111450195
    10. '	       ' → logprob: -10.513811111450195

Token 353: ' sl' (ID: 1925)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.014465052634477615
    2. ' sl' → logprob: -4.264464855194092
    3. ' s' → logprob: -9.01446533203125
    4. 'sl' → logprob: -9.13946533203125
    5. '(s' → logprob: -10.01446533203125
    6. 'b' → logprob: -11.26446533203125
    7. '   ' → logprob: -12.76446533203125
    8. 'l' → logprob: -13.01446533203125
    9. ' ' → logprob: -13.26446533203125
    10. 'd' → logprob: -13.76446533203125

Token 354: 'ist' (ID: 421)
  Prédit: 'ist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ist' → logprob: -3.833878508885391e-05
    2. 'st' → logprob: -11.375038146972656
    3. 's' → logprob: -11.500038146972656
    4. '[' → logprob: -11.625038146972656
    5. 'list' → logprob: -12.625038146972656
    6. '[i' → logprob: -13.625038146972656
    7. 'ист' → logprob: -15.000038146972656
    8. '   ' → logprob: -15.125038146972656
    9. '{' → logprob: -15.125038146972656
    10. '```' → logprob: -15.125038146972656

Token 355: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.2664456789934775e-06
    2. '[' → logprob: -14.375000953674316
    3. ' [' → logprob: -15.250000953674316
    4. 'i' → logprob: -15.500000953674316
    5. '```' → logprob: -16.500001907348633
    6. '[I' → logprob: -16.875001907348633
    7. '   ' → logprob: -17.250001907348633
    8. '{i' → logprob: -17.625001907348633
    9. '[j' → logprob: -18.125001907348633
    10. '(i' → logprob: -18.500001907348633

Token 356: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -5.764977686339989e-05
    2. '+i' → logprob: -10.375057220458984
    3. ' +' → logprob: -10.625057220458984
    4. '[i' → logprob: -14.250057220458984
    5. '+]' → logprob: -14.875057220458984
    6. '[' → logprob: -15.125057220458984
    7. ']' → logprob: -15.250057220458984
    8. '+
' → logprob: -15.250057220458984
    9. 'i' → logprob: -15.875057220458984
    10. '+[' → logprob: -16.625057220458984

Token 357: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00024144348572008312
    2. ' ' → logprob: -8.37524127960205
    3. '+' → logprob: -12.25024127960205
    4. 'i' → logprob: -12.62524127960205
    5. '   ' → logprob: -14.87524127960205
    6. '2' → logprob: -14.87524127960205
    7. '{' → logprob: -15.25024127960205
    8. 'n' → logprob: -15.25024127960205
    9. '0' → logprob: -15.37524127960205
    10. '```' → logprob: -15.50024127960205

Token 358: ']' (ID: 60)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5503263473510742
    2. '==' → logprob: -1.0503263473510742
    3. ']' → logprob: -2.800326347351074
    4. ']==' → logprob: -4.425326347351074
    5. '[' → logprob: -8.175326347351074
    6. ' ]' → logprob: -9.050326347351074
    7. '"]' → logprob: -9.675326347351074
    8. '=="' → logprob: -9.800326347351074
    9. ' ' → logprob: -10.550326347351074
    10. '"' → logprob: -10.800326347351074

Token 359: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.3486059606075287
    2. '==' → logprob: -1.223605990409851
    3. '=="' → logprob: -8.84860610961914
    4. '=='' → logprob: -12.59860610961914
    5. ' =="' → logprob: -12.84860610961914
    6. '==
' → logprob: -12.97360610961914
    7. '[' → logprob: -13.09860610961914
    8. ' ' → logprob: -13.09860610961914
    9. ']==' → logprob: -13.09860610961914
    10. '=' → logprob: -14.47360610961914

Token 360: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.00011570196511456743
    2. ' "' → logprob: -9.500115394592285
    3. ''' → logprob: -10.750115394592285
    4. '"C' → logprob: -11.500115394592285
    5. '"B' → logprob: -12.625115394592285
    6. ' ' → logprob: -13.000115394592285
    7. '"A' → logprob: -13.125115394592285
    8. '   ' → logprob: -14.375115394592285
    9. '"AT' → logprob: -14.625115394592285
    10. 'AB' → logprob: -15.000115394592285

Token 361: 'AC' (ID: 2436)
  Prédit: 'AB'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'AB' → logprob: -0.00020938136731274426
    2. 'AC' → logprob: -9.25020980834961
    3. 'BA' → logprob: -9.25020980834961
    4. 'CB' → logprob: -12.25020980834961
    5. 'CA' → logprob: -12.25020980834961
    6. 'ABC' → logprob: -12.37520980834961
    7. 'BB' → logprob: -14.00020980834961
    8. ' AB' → logprob: -14.25020980834961
    9. 'BC' → logprob: -14.37520980834961
    10. 'ab' → logprob: -15.00020980834961

Token 362: '":
' (ID: 9213)
  Prédit: '":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '":
' → logprob: -0.014280091039836407
    2. '":' → logprob: -4.889280319213867
    3. ':
' → logprob: -5.639280319213867
    4. '               ' → logprob: -6.014280319213867
    5. '":
' → logprob: -9.014280319213867
    6. '"' → logprob: -9.014280319213867
    7. ':' → logprob: -9.264280319213867
    8. '```' → logprob: -9.639280319213867
    9. '"):
' → logprob: -9.764280319213867
    10. '"]:
' → logprob: -9.889280319213867

Token 363: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0009617198375053704
    2. 'B' → logprob: -8.625961303710938
    3. '           ' → logprob: -8.625961303710938
    4. '
' → logprob: -8.750961303710938
    5. 'b' → logprob: -8.750961303710938
    6. ':
' → logprob: -9.250961303710938
    7. '                
' → logprob: -9.375961303710938
    8. 'push' → logprob: -10.875961303710938
    9. 'C' → logprob: -11.375961303710938
    10. '```' → logprob: -11.500961303710938

Token 364: ' c' (ID: 274)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.48795193433761597
    2. 'C' → logprob: -1.4879519939422607
    3. '           ' → logprob: -2.6129519939422607
    4. '               ' → logprob: -3.1129519939422607
    5. 'A' → logprob: -3.8629519939422607
    6. 'b' → logprob: -4.362951755523682
    7. 'c' (adapté à ' c') → logprob: -5.987951755523682
    8. ' B' → logprob: -6.112951755523682
    9. '   ' → logprob: -6.987951755523682
    10. ' C' → logprob: -7.362951755523682

Token 365: '+=' (ID: 18287)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.6239947080612183
    2. '+=' → logprob: -1.3739947080612183
    3. ',' → logprob: -1.6239947080612183
    4. ' -=' → logprob: -4.748994827270508
    5. '-=' → logprob: -6.498994827270508
    6. '+' → logprob: -6.498994827270508
    7. ' ,' → logprob: -7.248994827270508
    8. '=' → logprob: -7.373994827270508
    9. '-' → logprob: -7.748994827270508
    10. ' +' → logprob: -8.373994827270508

Token 366: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.020580776035785675
    2. ' ' → logprob: -3.895580768585205
    3. '-' → logprob: -10.270581245422363
    4. ' -' → logprob: -12.895581245422363
    5. '   ' → logprob: -14.270581245422363
    6. '+' → logprob: -15.020581245422363
    7. '           ' → logprob: -15.520581245422363
    8. '  ' → logprob: -15.645581245422363
    9. ' +' → logprob: -16.583080291748047
    10. '0' → logprob: -16.645580291748047

Token 367: ';' (ID: 26)
  Prédit: ';'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ';' → logprob: -0.12090624123811722
    2. ',' → logprob: -2.370906352996826
    3. '               ' → logprob: -4.620906352996826
    4. '
' → logprob: -4.870906352996826
    5. '                   ' → logprob: -7.370906352996826
    6. '<|end|>' → logprob: -7.495906352996826
    7. ';c' → logprob: -7.995906352996826
    8. ' c' → logprob: -8.370905876159668
    9. ' ' → logprob: -8.370905876159668
    10. '           ' → logprob: -8.620905876159668

Token 368: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.007976029999554157
    2. ' b' → logprob: -4.882976055145264
    3. '           ' → logprob: -8.007975578308105
    4. '               ' → logprob: -10.632975578308105
    5. '                   ' → logprob: -12.132975578308105
    6. '   ' → logprob: -12.882975578308105
    7. 'c' → logprob: -13.257975578308105
    8. '       ' → logprob: -14.007975578308105
    9. ' ' → logprob: -14.507975578308105
    10. '```' → logprob: -14.882975578308105

Token 369: '-=' (ID: 77519)
  Prédit: '-='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.021231399849057198
    2. ' -=' → logprob: -3.8962314128875732
    3. '-' → logprob: -7.521231174468994
    4. '+=' → logprob: -8.896231651306152
    5. '=' → logprob: -12.146231651306152
    6. ',' → logprob: -13.271231651306152
    7. ' +=' → logprob: -13.896231651306152
    8. ' -' → logprob: -14.021231651306152
    9. ' ' → logprob: -14.521231651306152
    10. '=-' → logprob: -14.646231651306152

Token 370: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.226628895296017e-06
    2. ' ' → logprob: -11.875007629394531
    3. '-' → logprob: -15.625007629394531
    4. '   ' → logprob: -17.62500762939453
    5. '```' → logprob: -18.12500762939453
    6. '0' → logprob: -18.50000762939453
    7. '
' → logprob: -18.50000762939453
    8. '=' → logprob: -18.81250762939453
    9. '2' → logprob: -19.25000762939453
    10. '  ' → logprob: -19.56250762939453

Token 371: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2295614629983902
    2. '
' → logprob: -1.604561448097229
    3. '           ' → logprob: -6.6045613288879395
    4. 'answer' → logprob: -6.6045613288879395
    5. '                
' → logprob: -7.7295613288879395
    6. ';' → logprob: -7.9795613288879395
    7. '
' → logprob: -8.979561805725098
    8. ' answer' → logprob: -9.604561805725098
    9. '   ' → logprob: -9.729561805725098
    10. '       ' → logprob: -9.729561805725098

Token 372: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1466025561094284
    2. '
' → logprob: -2.0216026306152344
    3. '           ' → logprob: -6.146602630615234
    4. '                
' → logprob: -7.771602630615234
    5. '<|end|>' → logprob: -7.896602630615234
    6. ';' → logprob: -8.021602630615234
    7. 'answer' → logprob: -8.771602630615234
    8. '   ' → logprob: -9.646602630615234
    9. '
' → logprob: -9.646602630615234
    10. '       ' → logprob: -9.771602630615234

Token 373: ' answer' (ID: 6052)
  Prédit: 'answer'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'answer' (adapté à ' answer') → logprob: -0.002651871182024479
    2. ' answer' → logprob: -6.002651691436768
    3. '               ' → logprob: -9.002652168273926
    4. '           ' → logprob: -10.002652168273926
    5. '   ' → logprob: -12.502652168273926
    6. '	answer' → logprob: -13.377652168273926
    7. '
' → logprob: -13.502652168273926
    8. ' ' → logprob: -15.252652168273926
    9. '       ' → logprob: -15.252652168273926
    10. 'Answer' → logprob: -15.627652168273926

Token 374: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -4.096126576769166e-05
    2. '.' → logprob: -10.250041007995605
    3. ' .' → logprob: -12.875041007995605
    4. 'append' → logprob: -13.250041007995605
    5. '.app' → logprob: -14.375041007995605
    6. '.extend' → logprob: -14.625041007995605
    7. '.ap' → logprob: -16.25004005432129
    8. ' append' → logprob: -18.50004005432129
    9. '.setdefault' → logprob: -18.50004005432129
    10. '.add' → logprob: -19.00004005432129

Token 375: '("' (ID: 568)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.02993527241051197
    2. '("' → logprob: -3.529935359954834
    3. '(' → logprob: -8.904934883117676
    4. ''' → logprob: -10.779934883117676
    5. ''C' → logprob: -11.029934883117676
    6. '"C' → logprob: -12.154934883117676
    7. '"' → logprob: -12.279934883117676
    8. ' ('' → logprob: -14.529934883117676
    9. '   ' → logprob: -14.779934883117676
    10. ''A' → logprob: -15.904934883117676

Token 376: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.035559460520744324
    2. 'B' → logprob: -3.5355594158172607
    3. 'A' → logprob: -5.16055965423584
    4. ''C' → logprob: -10.41055965423584
    5. '"C' → logprob: -11.03555965423584
    6. ' C' → logprob: -13.16055965423584
    7. '"' → logprob: -13.16055965423584
    8. ''' → logprob: -13.66055965423584
    9. '"B' → logprob: -14.16055965423584
    10. ''A' → logprob: -15.16055965423584

Token 377: '")
' (ID: 1896)
  Prédit: '")
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")
' → logprob: -0.03428371995687485
    2. '")' → logprob: -3.4092836380004883
    3. ')
' → logprob: -8.534283638000488
    4. '")
' → logprob: -8.659283638000488
    5. '           ' → logprob: -8.909283638000488
    6. ')' → logprob: -9.284283638000488
    7. '               ' → logprob: -11.284283638000488
    8. ')")
' → logprob: -11.659283638000488
    9. '")

' → logprob: -12.159283638000488
    10. '"' → logprob: -12.409283638000488

Token 378: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0094956299290061
    2. '       ' → logprob: -4.759495735168457
    3. 'else' → logprob: -7.384495735168457
    4. '               ' → logprob: -9.509495735168457
    5. '<|end|>' → logprob: -9.884495735168457
    6. 'elif' → logprob: -10.009495735168457
    7. '   ' → logprob: -10.009495735168457
    8. '```' → logprob: -11.384495735168457
    9. ' else' → logprob: -11.634495735168457
    10. '
' → logprob: -11.884495735168457

Token 379: ' else' (ID: 1203)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.20157812535762787
    2. 'else' (adapté à ' else') → logprob: -1.826578140258789
    3. ' else' → logprob: -4.326578140258789
    4. '       ' → logprob: -4.826578140258789
    5. 'elif' → logprob: -8.076578140258789
    6. '               ' → logprob: -11.201578140258789
    7. '   ' → logprob: -11.326578140258789
    8. '
' → logprob: -11.451578140258789
    9. ' elif' → logprob: -11.701578140258789
    10. '	       ' → logprob: -13.201578140258789

Token 380: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.15569600462913513
    2. '               ' → logprob: -2.530695915222168
    3. ':' → logprob: -2.780695915222168
    4. '           ' → logprob: -6.155695915222168
    5. ' :
' → logprob: -9.030695915222168
    6. '):
' → logprob: -9.655695915222168
    7. '              ' → logprob: -9.655695915222168
    8. ',' → logprob: -10.030695915222168
    9. '             ' → logprob: -10.530695915222168
    10. ':
' → logprob: -11.030695915222168

Token 381: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7968809604644775
    2. 'b' → logprob: -0.9218809604644775
    3. '           ' → logprob: -1.9218809604644775
    4. ' b' → logprob: -5.546880722045898
    5. '       ' → logprob: -8.046880722045898
    6. '              ' → logprob: -8.546880722045898
    7. '             ' → logprob: -8.671880722045898
    8. '   ' → logprob: -9.046880722045898
    9. ' ' → logprob: -9.296880722045898
    10. '         ' → logprob: -9.796880722045898

Token 382: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -0.0012974964920431376
    2. ' b' → logprob: -6.876297473907471
    3. '               ' → logprob: -8.376297950744629
    4. 'B' → logprob: -10.876297950744629
    5. '   ' → logprob: -12.126297950744629
    6. '           ' → logprob: -12.376297950744629
    7. '                   ' → logprob: -13.501297950744629
    8. '       ' → logprob: -13.626297950744629
    9. '	b' → logprob: -13.876297950744629
    10. ' ' → logprob: -14.376297950744629

Token 383: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0036056553944945335
    2. ' +=' → logprob: -5.628605842590332
    3. ']+=' → logprob: -12.753605842590332
    4. '+' → logprob: -14.003605842590332
    5. ',' → logprob: -14.128605842590332
    6. '   ' → logprob: -14.753605842590332
    7. ' ' → logprob: -15.253605842590332
    8. '  ' → logprob: -16.003604888916016
    9. '+=(' → logprob: -16.003604888916016
    10. '+='' → logprob: -17.003604888916016

Token 384: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. '   ' → logprob: -18.500001907348633
    4. '-' → logprob: -19.125001907348633
    5. 'c' → logprob: -19.625001907348633
    6. '```' → logprob: -19.875001907348633
    7. '+' → logprob: -20.250001907348633
    8. '１' → logprob: -20.375001907348633
    9. '
' → logprob: -20.875001907348633
    10. '  ' → logprob: -21.125001907348633

Token 385: ';' (ID: 26)
  Prédit: ';'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ';' → logprob: -0.0016395928105339408
    2. '               ' → logprob: -7.376639366149902
    3. ',' → logprob: -7.501639366149902
    4. ' ;' → logprob: -7.876639366149902
    5. '   ' → logprob: -11.126639366149902
    6. ';b' → logprob: -11.376639366149902
    7. '           ' → logprob: -11.501639366149902
    8. '                   ' → logprob: -11.626639366149902
    9. ';c' → logprob: -11.626639366149902
    10. ' ' → logprob: -12.001639366149902

Token 386: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.07899664342403412
    2. ' c' → logprob: -2.5789966583251953
    3. '               ' → logprob: -10.078996658325195
    4. '           ' → logprob: -10.828996658325195
    5. '	c' → logprob: -11.078996658325195
    6. '   ' → logprob: -11.328996658325195
    7. ' ' → logprob: -12.078996658325195
    8. '       ' → logprob: -12.828996658325195
    9. '                   ' → logprob: -13.203996658325195
    10. 'C' → logprob: -13.703996658325195

Token 387: '-=' (ID: 77519)
  Prédit: '-='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.0036659908946603537
    2. '-' → logprob: -5.753665924072266
    3. ' -=' → logprob: -7.628665924072266
    4. '               ' → logprob: -13.628665924072266
    5. '                   ' → logprob: -15.878665924072266
    6. '           ' → logprob: -16.003665924072266
    7. '+=' → logprob: -16.003665924072266
    8. ' -' → logprob: -16.503665924072266
    9. '=' → logprob: -16.503665924072266
    10. '```' → logprob: -16.878665924072266

Token 388: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.625000953674316
    3. '```' → logprob: -18.625001907348633
    4. '   ' → logprob: -19.000001907348633
    5. '-' → logprob: -19.000001907348633
    6. '１' → logprob: -19.500001907348633
    7. '(' → logprob: -19.625001907348633
    8. 'def' → logprob: -19.625001907348633
    9. '
' → logprob: -19.750001907348633
    10. '           ' → logprob: -19.812501907348633

Token 389: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0010647247545421124
    2. '           ' → logprob: -7.376064777374268
    3. 'answer' → logprob: -8.37606430053711
    4. '
' → logprob: -8.87606430053711
    5. '              ' → logprob: -10.62606430053711
    6. ' answer' → logprob: -11.37606430053711
    7. '       ' → logprob: -11.62606430053711
    8. '                
' → logprob: -11.87606430053711
    9. '   ' → logprob: -12.25106430053711
    10. '                ' → logprob: -12.62606430053711

Token 390: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00963803380727768
    2. 'answer' → logprob: -4.759637832641602
    3. '           ' → logprob: -7.384637832641602
    4. ' answer' → logprob: -8.384637832641602
    5. '
' → logprob: -9.009637832641602
    6. '                
' → logprob: -11.259637832641602
    7. '              ' → logprob: -11.384637832641602
    8. '   ' → logprob: -12.259637832641602
    9. '	answer' → logprob: -12.384637832641602
    10. ',' → logprob: -12.884637832641602

Token 391: ' answer' (ID: 6052)
  Prédit: 'answer'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'answer' (adapté à ' answer') → logprob: -3.547789674485102e-05
    2. ' answer' → logprob: -10.250035285949707
    3. '           ' → logprob: -17.000036239624023
    4. 'b' → logprob: -17.750036239624023
    5. 'append' → logprob: -18.250036239624023
    6. 'Answer' → logprob: -19.750036239624023
    7. '   ' → logprob: -19.875036239624023
    8. '               ' → logprob: -20.000036239624023
    9. '	answer' → logprob: -20.000036239624023
    10. 'B' → logprob: -20.125036239624023

Token 392: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -2.45848218582978e-06
    2. '.' → logprob: -13.12500286102295
    3. ' .' → logprob: -15.50000286102295
    4. 'append' → logprob: -15.75000286102295
    5. '.extend' → logprob: -19.375001907348633
    6. '           ' → logprob: -20.375001907348633
    7. '```' → logprob: -21.250001907348633
    8. '.Append' → logprob: -21.500001907348633
    9. '	append' → logprob: -21.875001907348633
    10. '   ' → logprob: -21.875001907348633

Token 393: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0019759766291826963
    2. '('' → logprob: -6.251976013183594
    3. '(' → logprob: -10.001976013183594
    4. '"B' → logprob: -13.251976013183594
    5. '"' → logprob: -15.501976013183594
    6. '(B' → logprob: -16.751976013183594
    7. '(
' → logprob: -17.001976013183594
    8. '(b' → logprob: -18.501976013183594
    9. ' ("' → logprob: -19.376976013183594
    10. '()' → logprob: -20.126976013183594

Token 394: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.005245022010058165
    2. '"B' → logprob: -5.255245208740234
    3. '"' → logprob: -12.255245208740234
    4. ' B' → logprob: -12.380245208740234
    5. ''' → logprob: -13.130245208740234
    6. 'b' → logprob: -16.380245208740234
    7. '>B' → logprob: -17.505245208740234
    8. 'Ｂ' → logprob: -17.630245208740234
    9. '	B' → logprob: -17.755245208740234
    10. ''b' → logprob: -18.130245208740234

Token 395: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.20150329172611237
    2. '")
' → logprob: -1.7015032768249512
    3. ')' → logprob: -9.82650375366211
    4. '")
' → logprob: -10.95150375366211
    5. ')
' → logprob: -11.70150375366211
    6. ')")
' → logprob: -12.70150375366211
    7. '"' → logprob: -13.07650375366211
    8. ')")' → logprob: -13.57650375366211
    9. '   ' → logprob: -13.82650375366211
    10. '")

' → logprob: -14.20150375366211

Token 396: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004453378263860941
    2. '       ' → logprob: -5.504453182220459
    3. '<|end|>' → logprob: -8.379453659057617
    4. 'elif' → logprob: -10.004453659057617
    5. '<|end|>' → logprob: -10.379453659057617
    6. '```' → logprob: -10.629453659057617
    7. 'else' → logprob: -11.129453659057617
    8. '    
' → logprob: -11.379453659057617
    9. '
' → logprob: -11.504453659057617
    10. '           ' → logprob: -13.129453659057617

Token 397: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0003079334564972669
    2. 'else' (adapté à ' else') → logprob: -8.3753080368042
    3. ' else' → logprob: -10.3753080368042
    4. 'elif' → logprob: -11.0003080368042
    5. '<|end|>' → logprob: -11.7503080368042
    6. '       ' → logprob: -11.8753080368042
    7. '```' → logprob: -12.6253080368042
    8. '    
' → logprob: -12.6253080368042
    9. '<|end|>' → logprob: -12.6253080368042
    10. '
' → logprob: -13.3753080368042

Token 398: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.38296782970428467
    2. ':' → logprob: -1.3829678297042847
    3. '       ' → logprob: -2.882967948913574
    4. '           ' → logprob: -4.507967948913574
    5. '   ' → logprob: -9.007967948913574
    6. '```' → logprob: -9.882967948913574
    7. ',' → logprob: -10.132967948913574
    8. '=' → logprob: -10.257967948913574
    9. '               ' → logprob: -11.632967948913574
    10. '        ' → logprob: -11.632967948913574

Token 399: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3871816396713257
    2. '           ' → logprob: -1.1371816396713257
    3. 'obj' → logprob: -9.262181282043457
    4. '   ' → logprob: -9.512181282043457
    5. '```' → logprob: -10.137181282043457
    6. '               ' → logprob: -10.137181282043457
    7. '{
' → logprob: -11.137181282043457
    8. '
' → logprob: -11.512181282043457
    9. 'b' → logprob: -11.637181282043457
    10. 'if' → logprob: -11.762181282043457

Token 400: ' xs' (ID: 26642)
  Prédit: 'obj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'obj' → logprob: -0.024839993566274643
    2. '           ' → logprob: -4.399839878082275
    3. ' obj' → logprob: -4.649839878082275
    4. 'if' → logprob: -6.024839878082275
    5. ' if' → logprob: -8.774840354919434
    6. 'b' → logprob: -9.274840354919434
    7. '               ' → logprob: -11.899840354919434
    8. '       ' → logprob: -12.399840354919434
    9. '   ' → logprob: -12.774840354919434
    10. '	obj' → logprob: -13.024840354919434

Token 401: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6348274946212769
    2. '=' → logprob: -0.7598274946212769
    3. '=obj' → logprob: -6.884827613830566
    4. '   ' → logprob: -7.884827613830566
    5. '=set' → logprob: -8.759827613830566
    6. 'a' → logprob: -8.759827613830566
    7. ' ' → logprob: -8.884827613830566
    8. 'if' → logprob: -9.009827613830566
    9. 'f' → logprob: -10.009827613830566
    10. '=b' → logprob: -10.759827613830566

Token 402: ' [' (ID: 723)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.4057563543319702
    2. '[min' → logprob: -2.1557564735412598
    3. 'b' → logprob: -2.5307564735412598
    4. ' min' → logprob: -3.1557564735412598
    5. '(min' → logprob: -3.4057564735412598
    6. 'C' → logprob: -3.7807564735412598
    7. 'Ctx' → logprob: -4.28075647354126
    8. ' C' → logprob: -4.78075647354126
    9. 'set' → logprob: -5.28075647354126
    10. 'a' → logprob: -5.78075647354126

Token 403: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.08469029515981674
    2. '(b' → logprob: -3.0846903324127197
    3. 'a' → logprob: -3.5846903324127197
    4. '(a' → logprob: -5.084690093994141
    5. 'c' → logprob: -7.959690093994141
    6. '(' → logprob: -7.959690093994141
    7. '(c' → logprob: -8.95969009399414
    8. ' b' → logprob: -9.45969009399414
    9. '[b' → logprob: -9.45969009399414
    10. 'push' → logprob: -9.58469009399414

Token 404: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.18776406347751617
    2. ',c' → logprob: -1.812764048576355
    3. ',b' → logprob: -5.6877641677856445
    4. ',a' → logprob: -6.0627641677856445
    5. ',x' → logprob: -6.9377641677856445
    6. ' ,' → logprob: -7.0627641677856445
    7. ',k' → logprob: -9.312764167785645
    8. ',min' → logprob: -9.937764167785645
    9. ',m' → logprob: -10.062764167785645
    10. '+' → logprob: -10.312764167785645

Token 405: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.002831626683473587
    2. ' c' → logprob: -5.87783145904541
    3. '   ' → logprob: -11.62783145904541
    4. '           ' → logprob: -12.37783145904541
    5. ' ' → logprob: -12.75283145904541
    6. '       ' → logprob: -13.00283145904541
    7. '               ' → logprob: -13.75283145904541
    8. '  ' → logprob: -13.87783145904541
    9. '    ' → logprob: -13.87783145904541
    10. '     ' → logprob: -14.00283145904541

Token 406: ']
' (ID: 1592)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5024928450584412
    2. ']
' → logprob: -2.002492904663086
    3. ']' → logprob: -2.252492904663086
    4. '
' → logprob: -2.877492904663086
    5. ',min' → logprob: -3.377492904663086
    6. '           ' → logprob: -4.502492904663086
    7. 'min' → logprob: -4.752492904663086
    8. '   ' → logprob: -4.877492904663086
    9. '.sort' → logprob: -5.627492904663086
    10. ',x' → logprob: -5.877492904663086

Token 407: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006131656467914581
    2. '
' → logprob: -5.881131649017334
    3. 'min' → logprob: -6.881131649017334
    4. 'obj' → logprob: -7.631131649017334
    5. ' if' → logprob: -7.881131649017334
    6. 'm' → logprob: -8.381132125854492
    7. 'if' → logprob: -8.381132125854492
    8. 'x' → logprob: -8.506132125854492
    9. ',' → logprob: -8.756132125854492
    10. '            
' → logprob: -9.006132125854492

Token 408: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.1979756355285645
    2. ' if' → logprob: -1.5729756355285645
    3. 'm' → logprob: -1.8229756355285645
    4. 'min' → logprob: -2.1979756355285645
    5. 'if' (adapté à ' if') → logprob: -2.3229756355285645
    6. 'x' → logprob: -3.3229756355285645
    7. ' m' → logprob: -3.4479756355285645
    8. ' min' → logprob: -3.6979756355285645
    9. ' x' → logprob: -4.6979756355285645
    10. 'obj' → logprob: -4.9479756355285645

Token 409: ' min' (ID: 1349)
  Prédit: 'xs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'xs' → logprob: -0.6376803517341614
    2. ' xs' → logprob: -1.3876802921295166
    3. 'b' → logprob: -1.6376802921295166
    4. ' b' → logprob: -3.6376802921295166
    5. '(xs' → logprob: -7.512680530548096
    6. ' ' → logprob: -8.887680053710938
    7. 'x' → logprob: -8.887680053710938
    8. 'bs' → logprob: -9.262680053710938
    9. '   ' → logprob: -10.387680053710938
    10. '(b' → logprob: -10.387680053710938

Token 410: '(xs' (ID: 132690)
  Prédit: '(xs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(xs' → logprob: -0.00020544764993246645
    2. 'xs' → logprob: -8.875205039978027
    3. '(x' → logprob: -10.750205039978027
    4. '(' → logprob: -11.375205039978027
    5. ' xs' → logprob: -11.375205039978027
    6. ' (' → logprob: -12.000205039978027
    7. '=' → logprob: -12.375205039978027
    8. '(b' → logprob: -12.500205039978027
    9. ' =' → logprob: -12.625205039978027
    10. '(
' → logprob: -13.375205039978027

Token 411: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0735299587249756
    2. '==' → logprob: -1.0735299587249756
    3. ' ==' → logprob: -1.1985299587249756
    4. ')==' → logprob: -4.698530197143555
    5. ' )' → logprob: -5.323530197143555
    6. '[' → logprob: -7.823530197143555
    7. ']==' → logprob: -8.573530197143555
    8. ']' → logprob: -9.573530197143555
    9. ' ' → logprob: -10.698530197143555
    10. '()==' → logprob: -11.323530197143555

Token 412: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5759654641151428
    2. ' ==' → logprob: -0.8259654641151428
    3. '==
' → logprob: -11.825965881347656
    4. '()==' → logprob: -12.325965881347656
    5. ')==' → logprob: -12.950965881347656
    6. '[' → logprob: -13.075965881347656
    7. ']==' → logprob: -13.200965881347656
    8. '=' → logprob: -13.450965881347656
    9. '===' → logprob: -13.450965881347656
    10. ' ==
' → logprob: -13.950965881347656

Token 413: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0038232298102229834
    2. 'c' → logprob: -6.003823280334473
    3. ' b' → logprob: -6.628823280334473
    4. ' c' → logprob: -11.128823280334473
    5. '   ' → logprob: -12.253823280334473
    6. ' ' → logprob: -13.378823280334473
    7. 'x' → logprob: -13.503823280334473
    8. '	b' → logprob: -14.003823280334473
    9. 'xs' → logprob: -14.753823280334473
    10. '  ' → logprob: -15.378823280334473

Token 414: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.043457794934511185
    2. ':' → logprob: -3.1684577465057373
    3. '               ' → logprob: -8.043457984924316
    4. ' :
' → logprob: -9.668457984924316
    5. '           ' → logprob: -10.418457984924316
    6. '):
' → logprob: -11.293457984924316
    7. ':

' → logprob: -11.668457984924316
    8. ':
' → logprob: -11.918457984924316
    9. '       ' → logprob: -12.543457984924316
    10. '+' → logprob: -12.918457984924316

Token 415: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.05956888943910599
    2. 'b' → logprob: -3.3095688819885254
    3. '           ' → logprob: -3.9345688819885254
    4. ' b' → logprob: -6.434568881988525
    5. '
' → logprob: -9.434569358825684
    6. '   ' → logprob: -11.559569358825684
    7. '```' → logprob: -11.559569358825684
    8. '                
' → logprob: -11.809569358825684
    9. ',b' → logprob: -12.309569358825684
    10. '            
' → logprob: -12.434569358825684

Token 416: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -0.19387930631637573
    2. '           ' → logprob: -2.1938793659210205
    3. ' b' → logprob: -2.9438793659210205
    4. '               ' → logprob: -4.443879127502441
    5. 'push' → logprob: -9.193879127502441
    6. '   ' → logprob: -9.818879127502441
    7. '       ' → logprob: -10.068879127502441
    8. '
' → logprob: -10.443879127502441
    9. ' push' → logprob: -10.568879127502441
    10. ' ' → logprob: -10.693879127502441

Token 417: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.25195789337158203
    2. ' +=' → logprob: -1.501957893371582
    3. '+' → logprob: -10.876957893371582
    4. '   ' → logprob: -12.001957893371582
    5. ']+=' → logprob: -13.751957893371582
    6. '           ' → logprob: -14.001957893371582
    7. ' +' → logprob: -14.501957893371582
    8. '=' → logprob: -14.876957893371582
    9. '    ' → logprob: -15.501957893371582
    10. '  ' → logprob: -15.751957893371582

Token 418: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0019320894498378038
    2. ' ' → logprob: -6.251932144165039
    3. '   ' → logprob: -12.876932144165039
    4. '           ' → logprob: -15.001932144165039
    5. '<|end|>' → logprob: -15.626932144165039
    6. '```' → logprob: -15.876932144165039
    7. '+' → logprob: -16.00193214416504
    8. '  ' → logprob: -16.50193214416504
    9. '       ' → logprob: -17.50193214416504
    10. ' +' → logprob: -17.50193214416504

Token 419: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -13.875000953674316
    3. '   ' → logprob: -19.250001907348633
    4. '<|end|>' → logprob: -19.375001907348633
    5. '```' → logprob: -20.000001907348633
    6. '+' → logprob: -20.250001907348633
    7. '１' → logprob: -21.125001907348633
    8. 'def' → logprob: -21.500001907348633
    9. '  ' → logprob: -21.750001907348633
    10. '[' → logprob: -22.000001907348633

Token 420: ';' (ID: 26)
  Prédit: ';'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ';' → logprob: -0.0016105548711493611
    2. '               ' → logprob: -6.50161075592041
    3. ';c' → logprob: -10.12661075592041
    4. '
' → logprob: -10.37661075592041
    5. ' ;' → logprob: -10.75161075592041
    6. '   ' → logprob: -12.50161075592041
    7. ';b' → logprob: -13.00161075592041
    8. ',' → logprob: -13.12661075592041
    9. '           ' → logprob: -13.37661075592041
    10. '<|end|>' → logprob: -13.37661075592041

Token 421: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.3869778513908386
    2. ' c' → logprob: -1.1369779109954834
    3. '               ' → logprob: -9.761978149414062
    4. '   ' → logprob: -10.886978149414062
    5. '           ' → logprob: -11.011978149414062
    6. '	c' → logprob: -12.511978149414062
    7. ' ' → logprob: -12.761978149414062
    8. '       ' → logprob: -13.636978149414062
    9. '    ' → logprob: -13.636978149414062
    10. '  ' → logprob: -14.011978149414062

Token 422: ' -=' (ID: 12583)
  Prédit: ' -='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.3166477084159851
    2. '-=' → logprob: -1.3166477680206299
    3. '-' → logprob: -5.691647529602051
    4. ' -' → logprob: -12.19164752960205
    5. '           ' → logprob: -15.06664752960205
    6. ' ' → logprob: -15.44164752960205
    7. '   ' → logprob: -15.44164752960205
    8. '               ' → logprob: -16.191648483276367
    9. '+=' → logprob: -16.441648483276367
    10. '            ' → logprob: -16.566648483276367

Token 423: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008045066497288644
    2. ' ' → logprob: -7.125804424285889
    3. '   ' → logprob: -17.250804901123047
    4. '           ' → logprob: -18.875804901123047
    5. '```' → logprob: -19.000804901123047
    6. '<|end|>' → logprob: -19.563304901123047
    7. ' ' → logprob: -19.750804901123047
    8. '  ' → logprob: -19.875804901123047
    9. '
' → logprob: -19.875804901123047
    10. '0' → logprob: -20.000804901123047

Token 424: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.7729658540920354e-05
    2. ' ' → logprob: -10.500027656555176
    3. '```' → logprob: -16.875028610229492
    4. '
' → logprob: -17.500028610229492
    5. '   ' → logprob: -17.750028610229492
    6. '0' → logprob: -19.312528610229492
    7. '１' → logprob: -19.312528610229492
    8. '  ' → logprob: -19.375028610229492
    9. '-' → logprob: -19.375028610229492
    10. ' ' → logprob: -19.687528610229492

Token 425: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.036766715347766876
    2. 'answer' → logprob: -3.411766767501831
    3. '
' → logprob: -6.286766529083252
    4. '           ' → logprob: -7.411766529083252
    5. ' answer' → logprob: -8.16176700592041
    6. '                
' → logprob: -8.41176700592041
    7. '       ' → logprob: -9.91176700592041
    8. '   ' → logprob: -10.16176700592041
    9. '	answer' → logprob: -10.91176700592041
    10. '            
' → logprob: -11.66176700592041

Token 426: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.026646612212061882
    2. 'answer' → logprob: -3.651646614074707
    3. '           ' → logprob: -8.776646614074707
    4. ' answer' → logprob: -9.151646614074707
    5. '
' → logprob: -10.151646614074707
    6. '                
' → logprob: -10.901646614074707
    7. '       ' → logprob: -11.401646614074707
    8. '	answer' → logprob: -12.026646614074707
    9. '   ' → logprob: -12.276646614074707
    10. '              ' → logprob: -13.901646614074707

Token 427: ' answer' (ID: 6052)
  Prédit: 'answer'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'answer' (adapté à ' answer') → logprob: -0.0419907309114933
    2. ' answer' → logprob: -3.2919907569885254
    3. '               ' → logprob: -5.541990756988525
    4. '           ' → logprob: -11.166990280151367
    5. '	answer' → logprob: -13.166990280151367
    6. '   ' → logprob: -13.416990280151367
    7. 'Answer' → logprob: -13.541990280151367
    8. '       ' → logprob: -13.666990280151367
    9. ' ' → logprob: -13.666990280151367
    10. '
' → logprob: -15.166990280151367

Token 428: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -1.3306015716807451e-05
    2. '.' → logprob: -11.25001335144043
    3. 'append' → logprob: -16.25001335144043
    4. ' .' → logprob: -16.25001335144043
    5. '.app' → logprob: -18.25001335144043
    6. '.extend' → logprob: -19.25001335144043
    7. '           ' → logprob: -19.75001335144043
    8. '.Append' → logprob: -21.00001335144043
    9. '          ' → logprob: -21.50001335144043
    10. '   ' → logprob: -21.50001335144043

Token 429: '('' (ID: 706)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.3081222176551819
    2. '"B' → logprob: -1.808122158050537
    3. '('' → logprob: -2.558122158050537
    4. '"' → logprob: -4.058122158050537
    5. ''' → logprob: -5.058122158050537
    6. '(' → logprob: -9.933122634887695
    7. ''b' → logprob: -10.058122634887695
    8. '"A' → logprob: -11.433122634887695
    9. ' "' → logprob: -11.808122634887695
    10. '"C' → logprob: -11.933122634887695

Token 430: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -1.8789383830153383e-05
    2. '"B' → logprob: -11.375019073486328
    3. ''' → logprob: -12.000019073486328
    4. '"' → logprob: -14.125019073486328
    5. ' B' → logprob: -15.125019073486328
    6. 'C' → logprob: -16.875019073486328
    7. '	B' → logprob: -18.750019073486328
    8. 'b' → logprob: -18.875019073486328
    9. 'Ｂ' → logprob: -19.875019073486328
    10. '>B' → logprob: -20.750019073486328

Token 431: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.7114190459251404
    2. '')
' → logprob: -0.7114190459251404
    3. ')' → logprob: -4.211419105529785
    4. ')
' → logprob: -5.961419105529785
    5. '           ' → logprob: -7.711419105529785
    6. '   ' → logprob: -8.836419105529785
    7. '               ' → logprob: -10.586419105529785
    8. '")' → logprob: -10.961419105529785
    9. '")
' → logprob: -11.211419105529785
    10. '')
' → logprob: -11.211419105529785

Token 432: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0026512860786169767
    2. '   ' → logprob: -6.752651214599609
    3. 'else' → logprob: -6.877651214599609
    4. '<|end|>' → logprob: -8.00265121459961
    5. ' else' → logprob: -9.37765121459961
    6. '<|end|>' → logprob: -11.25265121459961
    7. 'elif' → logprob: -11.62765121459961
    8. '       ' → logprob: -13.00265121459961
    9. '		' → logprob: -14.12765121459961
    10. '```' → logprob: -14.37765121459961

Token 433: ' else' (ID: 1203)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7792813181877136
    2. 'else' (adapté à ' else') → logprob: -0.7792813181877136
    3. ' else' → logprob: -2.5292813777923584
    4. '   ' → logprob: -6.529281139373779
    5. '       ' → logprob: -6.654281139373779
    6. '<|end|>' → logprob: -11.279281616210938
    7. 'elif' → logprob: -11.404281616210938
    8. '               ' → logprob: -11.404281616210938
    9. '	else' → logprob: -11.654281616210938
    10. '  ' → logprob: -12.279281616210938

Token 434: ':
' (ID: 734)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.8242539167404175
    2. '               ' → logprob: -0.8242539167404175
    3. ':' → logprob: -2.699254035949707
    4. ':
' → logprob: -3.074254035949707
    5. '           ' → logprob: -5.324254035949707
    6. 'c' → logprob: -6.074254035949707
    7. ':c' → logprob: -6.824254035949707
    8. ',' → logprob: -8.824254035949707
    9. ' C' → logprob: -8.824254035949707
    10. ' :
' → logprob: -8.949254035949707

Token 435: '               ' (ID: 506)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.14507277309894562
    2. 'c' → logprob: -2.3950726985931396
    3. '               ' → logprob: -3.2700726985931396
    4. '           ' → logprob: -5.270072937011719
    5. '   ' → logprob: -8.020072937011719
    6. '       ' → logprob: -9.270072937011719
    7. '            ' → logprob: -9.895072937011719
    8. '              ' → logprob: -9.895072937011719
    9. ' ' → logprob: -10.270072937011719
    10. 'C' → logprob: -10.645072937011719

Token 436: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' (adapté à ' c') → logprob: -0.006080956198275089
    2. ' c' → logprob: -5.1310811042785645
    3. '               ' → logprob: -8.881080627441406
    4. '   ' → logprob: -11.631080627441406
    5. '           ' → logprob: -13.256080627441406
    6. '	c' → logprob: -13.881080627441406
    7. '       ' → logprob: -14.256080627441406
    8. 'C' → logprob: -14.756080627441406
    9. ' ' → logprob: -15.256080627441406
    10. '  ' → logprob: -15.756080627441406

Token 437: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.16024871170520782
    2. '+=' → logprob: -1.9102487564086914
    3. ' -=' → logprob: -11.660248756408691
    4. '+' → logprob: -11.785248756408691
    5. ' +' → logprob: -12.035248756408691
    6. '-=' → logprob: -14.660248756408691
    7. ']+=' → logprob: -14.660248756408691
    8. '=' → logprob: -14.785248756408691
    9. '+='' → logprob: -14.785248756408691
    10. '+="' → logprob: -14.910248756408691

Token 438: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.20141343772411346
    2. ' ' → logprob: -1.7014133930206299
    3. '   ' → logprob: -16.576414108276367
    4. '```' → logprob: -17.201414108276367
    5. ' ' → logprob: -17.451414108276367
    6. ' -' → logprob: -17.951414108276367
    7. '-' → logprob: -17.951414108276367
    8. '  ' → logprob: -18.326414108276367
    9. '0' → logprob: -18.576414108276367
    10. '
' → logprob: -19.701414108276367

Token 439: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00033546582562848926
    2. ' ' → logprob: -8.000335693359375
    3. '-' → logprob: -16.875335693359375
    4. '   ' → logprob: -19.125335693359375
    5. ' -' → logprob: -20.250335693359375
    6. '```' → logprob: -20.250335693359375
    7. '  ' → logprob: -20.875335693359375
    8. '
' → logprob: -21.125335693359375
    9. '１' → logprob: -21.500335693359375
    10. '0' → logprob: -22.375335693359375

Token 440: ';' (ID: 26)
  Prédit: ';'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ';' → logprob: -0.0034596563782542944
    2. '               ' → logprob: -5.878459453582764
    3. '-' → logprob: -8.253459930419922
    4. ' ;' → logprob: -9.003459930419922
    5. ';c' → logprob: -9.253459930419922
    6. ';-' → logprob: -9.378459930419922
    7. ',' → logprob: -10.753459930419922
    8. '           ' → logprob: -10.878459930419922
    9. ' -' → logprob: -11.378459930419922
    10. '   ' → logprob: -11.628459930419922

Token 441: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.02975187823176384
    2. ' b' → logprob: -3.529751777648926
    3. '	b' → logprob: -14.529751777648926
    4. '   ' → logprob: -15.029751777648926
    5. '           ' → logprob: -15.529751777648926
    6. '               ' → logprob: -15.529751777648926
    7. '1' → logprob: -16.154752731323242
    8. ' ' → logprob: -16.279752731323242
    9. '       ' → logprob: -17.779752731323242
    10. '  ' → logprob: -18.279752731323242

Token 442: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.08492664247751236
    2. ' -=' → logprob: -3.0849266052246094
    3. '-' → logprob: -3.3349266052246094
    4. '               ' → logprob: -9.83492660522461
    5. ' -' → logprob: -11.45992660522461
    6. '+=' → logprob: -13.58492660522461
    7. '                   ' → logprob: -13.70992660522461
    8. '           ' → logprob: -13.95992660522461
    9. '```' → logprob: -14.20992660522461
    10. '              ' → logprob: -14.70992660522461

Token 443: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.517272024415433e-05
    2. ' ' → logprob: -9.500075340270996
    3. 'c' → logprob: -16.62507438659668
    4. '               ' → logprob: -17.12507438659668
    5. '   ' → logprob: -17.37507438659668
    6. '           ' → logprob: -18.25007438659668
    7. 'b' → logprob: -19.00007438659668
    8. '```' → logprob: -19.00007438659668
    9. ' c' → logprob: -19.12507438659668
    10. '
' → logprob: -19.37507438659668

Token 444: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0001114106344175525
    2. '           ' → logprob: -10.12511157989502
    3. '   ' → logprob: -11.25011157989502
    4. '                ' → logprob: -11.37511157989502
    5. '                
' → logprob: -11.37511157989502
    6. 'answer' → logprob: -11.37511157989502
    7. '              ' → logprob: -11.62511157989502
    8. '
' → logprob: -12.12511157989502
    9. '       ' → logprob: -12.62511157989502
    10. ' answer' → logprob: -13.62511157989502

Token 445: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -8.482821431243792e-05
    2. '           ' → logprob: -9.62508487701416
    3. '              ' → logprob: -12.00008487701416
    4. '                
' → logprob: -12.62508487701416
    5. '   ' → logprob: -13.00008487701416
    6. '                ' → logprob: -13.50008487701416
    7. '
' → logprob: -13.87508487701416
    8. '       ' → logprob: -14.37508487701416
    9. '			' → logprob: -14.37508487701416
    10. 'answer' → logprob: -14.87508487701416

Token 446: ' answer' (ID: 6052)
  Prédit: 'answer'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'answer' (adapté à ' answer') → logprob: -0.11794756352901459
    2. 'C' → logprob: -2.617947578430176
    3. 'push' → logprob: -3.367947578430176
    4. 'append' → logprob: -6.742947578430176
    5. ' answer' → logprob: -6.742947578430176
    6. '               ' → logprob: -7.742947578430176
    7. '"C' → logprob: -8.492947578430176
    8. 'print' → logprob: -8.617947578430176
    9. 'Answer' → logprob: -8.742947578430176
    10. '           ' → logprob: -8.992947578430176

Token 447: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -3.7697225252486533e-06
    2. '.' → logprob: -12.750003814697266
    3. 'append' → logprob: -15.000003814697266
    4. '.app' → logprob: -15.125003814697266
    5. ' .' → logprob: -15.250003814697266
    6. '.extend' → logprob: -18.125003814697266
    7. '	append' → logprob: -18.625003814697266
    8. 'app' → logprob: -18.750003814697266
    9. '.Append' → logprob: -19.250003814697266
    10. 'Append' → logprob: -19.625003814697266

Token 448: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0015322434483096004
    2. '("' → logprob: -6.501532077789307
    3. '(' → logprob: -10.626532554626465
    4. ''C' → logprob: -12.376532554626465
    5. ''' → logprob: -14.001532554626465
    6. '"C' → logprob: -15.251532554626465
    7. 'C' → logprob: -16.25153160095215
    8. '(C' → logprob: -16.50153160095215
    9. '"' → logprob: -17.25153160095215
    10. ' ('' → logprob: -17.75153160095215

Token 449: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.6492983102798462
    2. ''C' → logprob: -0.8992983102798462
    3. '"C' → logprob: -2.6492981910705566
    4. ''' → logprob: -10.649298667907715
    5. '"' → logprob: -12.024298667907715
    6. ' C' → logprob: -14.524298667907715
    7. '	C' → logprob: -15.399298667907715
    8. '   ' → logprob: -15.649298667907715
    9. '>C' → logprob: -15.774298667907715
    10. '*C' → logprob: -15.899298667907715

Token 450: '')
' (ID: 2515)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5924787521362305
    2. '')' → logprob: -0.8424787521362305
    3. ')
' → logprob: -4.8424787521362305
    4. '')
' → logprob: -4.9674787521362305
    5. '   ' → logprob: -7.0924787521362305
    6. '")' → logprob: -7.4674787521362305
    7. '           ' → logprob: -9.96747875213623
    8. '       ' → logprob: -10.09247875213623
    9. '```' → logprob: -10.96747875213623
    10. '<|end|>' → logprob: -11.59247875213623

Token 451: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0010925926035270095
    2. 'elif' → logprob: -7.001092433929443
    3. 'else' → logprob: -8.751092910766602
    4. 'i' → logprob: -10.876092910766602
    5. '```' → logprob: -13.626092910766602
    6. '       ' → logprob: -14.376092910766602
    7. '<|end|>' → logprob: -14.751092910766602
    8. '	elif' → logprob: -14.751092910766602
    9. '    
' → logprob: -14.876092910766602
    10. '...' → logprob: -15.626092910766602

Token 452: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0011008031433448195
    2. 'elif' → logprob: -6.876101016998291
    3. 'else' (adapté à ' else') → logprob: -9.876100540161133
    4. '```' → logprob: -11.501100540161133
    5. '<|end|>' → logprob: -13.126100540161133
    6. '    
' → logprob: -13.501100540161133
    7. ' elif' → logprob: -14.001100540161133
    8. '       ' → logprob: -14.001100540161133
    9. '	elif' → logprob: -14.876100540161133
    10. ',' → logprob: -15.001100540161133

Token 453: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.016142871230840683
    2. ':
' → logprob: -4.391142845153809
    3. '   ' → logprob: -6.516142845153809
    4. ' ==' → logprob: -6.766142845153809
    5. ' if' → logprob: -7.891142845153809
    6. ' :' → logprob: -8.641142845153809
    7. '==' → logprob: -8.766142845153809
    8. '       ' → logprob: -9.016142845153809
    9. 'if' → logprob: -9.641142845153809
    10. ' =' → logprob: -10.391142845153809

Token 454: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5119299292564392
    2. 'if' → logprob: -1.511929988861084
    3. '   ' → logprob: -1.761929988861084
    4. 'a' → logprob: -4.886929988861084
    5. ' if' → logprob: -7.511929988861084
    6. 'c' → logprob: -8.761929512023926
    7. '#' → logprob: -9.511929512023926
    8. 'A' → logprob: -10.136929512023926
    9. 'b' → logprob: -10.386929512023926
    10. 'C' → logprob: -11.386929512023926

Token 455: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.5062560439109802
    2. 'a' → logprob: -1.631256103515625
    3. '   ' → logprob: -1.631256103515625
    4. 'c' → logprob: -5.881256103515625
    5. ' if' → logprob: -6.006256103515625
    6. ' a' → logprob: -8.631256103515625
    7. 'push' → logprob: -9.006256103515625
    8. 'A' → logprob: -9.006256103515625
    9. '       ' → logprob: -9.631256103515625
    10. '#' → logprob: -10.381256103515625

Token 456: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3394395112991333
    2. 'c' → logprob: -1.3394395112991333
    3. ' a' → logprob: -4.214439392089844
    4. ' c' → logprob: -4.589439392089844
    5. 'b' → logprob: -7.214439392089844
    6. '   ' → logprob: -9.714439392089844
    7. ' b' → logprob: -10.089439392089844
    8. '(a' → logprob: -10.339439392089844
    9. ' ' → logprob: -11.464439392089844
    10. '  ' → logprob: -11.964439392089844

Token 457: ' ==' (ID: 951)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.3605712056159973
    2. ' ==' → logprob: -1.7355711460113525
    3. '>' → logprob: -2.6105711460113525
    4. '==' → logprob: -2.9855711460113525
    5. ' >=' → logprob: -6.485571384429932
    6. '>=' → logprob: -8.110570907592773
    7. ' <' → logprob: -8.860570907592773
    8. ' ' → logprob: -8.860570907592773
    9. ' !=' → logprob: -9.735570907592773
    10. '  ' → logprob: -9.985570907592773

Token 458: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0007429223624058068
    2. ' c' → logprob: -7.2507429122924805
    3. 'b' → logprob: -10.62574291229248
    4. ' ' → logprob: -13.00074291229248
    5. '   ' → logprob: -13.00074291229248
    6. '0' → logprob: -13.12574291229248
    7. '1' → logprob: -13.37574291229248
    8. '  ' → logprob: -15.75074291229248
    9. '    ' → logprob: -16.125743865966797
    10. '	c' → logprob: -16.125743865966797

Token 459: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.07890113443136215
    2. 'and' → logprob: -2.5789010524749756
    3. '==' → logprob: -12.828901290893555
    4. ':
' → logprob: -12.953901290893555
    5. ':' → logprob: -13.078901290893555
    6. ' ==' → logprob: -13.953901290893555
    7. ' ' → logprob: -14.203901290893555
    8. '<|end|>' → logprob: -14.328901290893555
    9. '=' → logprob: -14.453901290893555
    10. '       ' → logprob: -14.828901290893555

Token 460: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.25335457921028137
    2. 'c' → logprob: -1.503354549407959
    3. ' a' → logprob: -7.503354549407959
    4. 'a' → logprob: -7.503354549407959
    5. 'i' → logprob: -9.128355026245117
    6. ' i' → logprob: -9.128355026245117
    7. '   ' → logprob: -9.753355026245117
    8. ' ' → logprob: -11.003355026245117
    9. '  ' → logprob: -12.003355026245117
    10. ' b' → logprob: -12.315855026245117

Token 461: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6932430267333984
    2. ' ==' → logprob: -0.6932430267333984
    3. ' and' → logprob: -9.943243026733398
    4. 'and' → logprob: -11.068243026733398
    5. '==
' → logprob: -11.068243026733398
    6. ' ' → logprob: -12.068243026733398
    7. '>' → logprob: -12.318243026733398
    8. '=' → logprob: -12.818243026733398
    9. '```' → logprob: -14.068243026733398
    10. '===' → logprob: -14.818243026733398

Token 462: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006273718317970634
    2. ' ' → logprob: -7.375627517700195
    3. '0' → logprob: -14.250627517700195
    4. '   ' → logprob: -15.500627517700195
    5. 'b' → logprob: -16.750627517700195
    6. '  ' → logprob: -18.250627517700195
    7. '１' → logprob: -18.500627517700195
    8. 'c' → logprob: -19.750627517700195
    9. '<|end|>' → logprob: -19.750627517700195
    10. '۱' → logprob: -19.875627517700195

Token 463: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.096126576769166e-05
    2. ' ' → logprob: -10.125041007995605
    3. '0' → logprob: -14.375041007995605
    4. 'b' → logprob: -15.250041007995605
    5. '   ' → logprob: -17.62504005432129
    6. '  ' → logprob: -19.25004005432129
    7. '```' → logprob: -19.37504005432129
    8. '１' → logprob: -19.50004005432129
    9. ' b' → logprob: -20.25004005432129
    10. '۱' → logprob: -20.37504005432129

Token 464: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.02070479467511177
    2. 'and' → logprob: -4.645704746246338
    3. ':
' → logprob: -5.145704746246338
    4. '       ' → logprob: -5.770704746246338
    5. ':' → logprob: -6.270704746246338
    6. '           ' → logprob: -10.520705223083496
    7. '        ' → logprob: -11.520705223083496
    8. '   ' → logprob: -12.395705223083496
    9. '<|end|>' → logprob: -12.520705223083496
    10. '      ' → logprob: -12.770705223083496

Token 465: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.11287619173526764
    2. 'i' → logprob: -2.2378761768341064
    3. '    ' → logprob: -10.987875938415527
    4. '   ' → logprob: -11.112875938415527
    5. '       ' → logprob: -11.237875938415527
    6. '        ' → logprob: -12.362875938415527
    7. ' ' → logprob: -13.487875938415527
    8. '           ' → logprob: -13.862875938415527
    9. '	i' → logprob: -15.112875938415527
    10. '  ' → logprob: -15.237875938415527

Token 466: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.0338214673101902
    2. '<' → logprob: -3.4088215827941895
    3. '<n' → logprob: -8.658821105957031
    4. ' ' → logprob: -13.533821105957031
    5. 'n' → logprob: -15.908821105957031
    6. '<len' → logprob: -15.908821105957031
    7. '<int' → logprob: -16.03382110595703
    8. ' ' → logprob: -16.03382110595703
    9. '<num' → logprob: -16.78382110595703
    10. ' <
' → logprob: -16.78382110595703

Token 467: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.5759586691856384
    2. 'n' → logprob: -0.8259586691856384
    3. '(n' → logprob: -11.450958251953125
    4. '<n' → logprob: -13.825958251953125
    5. '	n' → logprob: -13.825958251953125
    6. ' ' → logprob: -14.200958251953125
    7. '```' → logprob: -14.200958251953125
    8. '   ' → logprob: -14.575958251953125
    9. 'len' → logprob: -14.700958251953125
    10. '#' → logprob: -14.763458251953125

Token 468: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.3868957459926605
    2. '-' → logprob: -1.136895775794983
    3. ' ' → logprob: -11.261896133422852
    4. 'n' → logprob: -12.511896133422852
    5. '+' → logprob: -12.636896133422852
    6. ' n' → logprob: -13.511896133422852
    7. '<|end|>' → logprob: -14.136896133422852
    8. '   ' → logprob: -14.636896133422852
    9. '–' → logprob: -15.011896133422852
    10. ':' → logprob: -15.386896133422852

Token 469: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006236801855266094
    2. ' ' → logprob: -7.50062370300293
    3. 'n' → logprob: -9.75062370300293
    4. '-' → logprob: -11.75062370300293
    5. ' n' → logprob: -12.50062370300293
    6. '(n' → logprob: -15.00062370300293
    7. '```' → logprob: -15.75062370300293
    8. ' -' → logprob: -16.00062370300293
    9. '   ' → logprob: -16.12562370300293
    10. '(' → logprob: -16.87562370300293

Token 470: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008411920862272382
    2. ' ' → logprob: -7.12584114074707
    3. 'n' → logprob: -10.37584114074707
    4. ' n' → logprob: -13.00084114074707
    5. '-' → logprob: -13.12584114074707
    6. '```' → logprob: -14.50084114074707
    7. '   ' → logprob: -15.50084114074707
    8. '
' → logprob: -15.75084114074707
    9. '  ' → logprob: -16.37584114074707
    10. '0' → logprob: -16.62584114074707

Token 471: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5867820978164673
    2. ':
' → logprob: -0.9617820978164673
    3. ' and' → logprob: -3.3367819786071777
    4. '       ' → logprob: -3.7117819786071777
    5. 'and' → logprob: -6.961781978607178
    6. '           ' → logprob: -8.086782455444336
    7. '<|end|>' → logprob: -8.711782455444336
    8. '   ' → logprob: -9.586782455444336
    9. ',' → logprob: -9.836782455444336
    10. '):
' → logprob: -10.211782455444336

Token 472: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006152038928121328
    2. '       ' → logprob: -5.131152153015137
    3. '<|end|>' → logprob: -8.881152153015137
    4. '```' → logprob: -10.756152153015137
    5. '               ' → logprob: -10.881152153015137
    6. 'a' → logprob: -11.506152153015137
    7. '   ' → logprob: -11.756152153015137
    8. '#' → logprob: -12.131152153015137
    9. '          ' → logprob: -12.381152153015137
    10. 'if' → logprob: -12.756152153015137

Token 473: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.129257932305336
    2. '           ' → logprob: -2.129257917404175
    3. ' if' → logprob: -6.254258155822754
    4. '       ' → logprob: -8.379258155822754
    5. 'a' → logprob: -9.504258155822754
    6. '   ' → logprob: -10.629258155822754
    7. '               ' → logprob: -10.879258155822754
    8. 'next' → logprob: -10.879258155822754
    9. '```' → logprob: -11.754258155822754
    10. 'c' → logprob: -12.004258155822754

Token 474: ' sl' (ID: 1925)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0007330321241170168
    2. ' sl' → logprob: -7.750732898712158
    3. 'b' → logprob: -8.750733375549316
    4. 'a' → logprob: -10.250733375549316
    5. 'sl' → logprob: -10.375733375549316
    6. ' s' → logprob: -10.625733375549316
    7. '(s' → logprob: -11.000733375549316
    8. '   ' → logprob: -11.500733375549316
    9. '           ' → logprob: -12.250733375549316
    10. 'n' → logprob: -12.750733375549316

Token 475: 'ist' (ID: 421)
  Prédit: 'ist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ist' → logprob: -0.06324216723442078
    2. 's' → logprob: -2.813242197036743
    3. 'list' → logprob: -6.688241958618164
    4. 'st' → logprob: -10.688241958618164
    5. '[i' → logprob: -13.438241958618164
    6. '[' → logprob: -13.938241958618164
    7. '(s' → logprob: -14.438241958618164
    8. '[s' → logprob: -14.563241958618164
    9. 't' → logprob: -14.688241958618164
    10. 'i' → logprob: -15.438241958618164

Token 476: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -7.896309739408025e-07
    2. '   ' → logprob: -15.000000953674316
    3. 'i' → logprob: -15.750000953674316
    4. '[' → logprob: -16.25
    5. ' [' → logprob: -16.625
    6. '(i' → logprob: -17.75
    7. '       ' → logprob: -17.875
    8. '           ' → logprob: -18.375
    9. '[
' → logprob: -18.75
    10. ' ' → logprob: -18.875

Token 477: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00031067515374161303
    2. ' +' → logprob: -8.750310897827148
    3. '[i' → logprob: -9.125310897827148
    4. '+i' → logprob: -10.250310897827148
    5. '[' → logprob: -12.500310897827148
    6. '+
' → logprob: -13.500310897827148
    7. '+[' → logprob: -14.000310897827148
    8. '[
' → logprob: -14.250310897827148
    9. 'i' → logprob: -15.375310897827148
    10. '   ' → logprob: -15.750310897827148

Token 478: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00010354319238103926
    2. ' ' → logprob: -9.250103950500488
    3. 'i' → logprob: -12.000103950500488
    4. '+' → logprob: -14.875103950500488
    5. '2' → logprob: -15.250103950500488
    6. 'n' → logprob: -15.250103950500488
    7. '   ' → logprob: -16.750102996826172
    8. '0' → logprob: -16.875102996826172
    9. '-' → logprob: -17.250102996826172
    10. '
' → logprob: -17.750102996826172

Token 479: ']' (ID: 60)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.313607782125473
    2. '==' → logprob: -1.3136078119277954
    3. '=="' → logprob: -8.938608169555664
    4. ']==' → logprob: -9.188608169555664
    5. ']' → logprob: -9.438608169555664
    6. '[' → logprob: -11.563608169555664
    7. ' =="' → logprob: -12.063608169555664
    8. ')' → logprob: -12.188608169555664
    9. '=='' → logprob: -13.188608169555664
    10. ')==' → logprob: -13.313608169555664

Token 480: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.1272362321615219
    2. ' ==' → logprob: -2.1272361278533936
    3. '=="' → logprob: -8.127236366271973
    4. '==
' → logprob: -12.877236366271973
    5. ']==' → logprob: -13.002236366271973
    6. '=' → logprob: -13.127236366271973
    7. '=='' → logprob: -13.377236366271973
    8. ' =="' → logprob: -13.502236366271973
    9. '[' → logprob: -14.502236366271973
    10. ')==' → logprob: -14.502236366271973

Token 481: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0035593274515122175
    2. ' "' → logprob: -6.003559112548828
    3. '"B' → logprob: -7.253559112548828
    4. ''' → logprob: -8.878559112548828
    5. '"A' → logprob: -9.003559112548828
    6. '"C' → logprob: -9.253559112548828
    7. '"AT' → logprob: -11.628559112548828
    8. ' ' → logprob: -13.003559112548828
    9. '"А' → logprob: -13.378559112548828
    10. '"S' → logprob: -14.003559112548828

Token 482: 'AB' (ID: 2912)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.03955896571278572
    2. 'AB' → logprob: -3.4145588874816895
    3. ''' → logprob: -5.2895588874816895
    4. '"B' → logprob: -7.7895588874816895
    5. '"A' → logprob: -8.789559364318848
    6. ' "' → logprob: -9.289559364318848
    7. ''ab' → logprob: -9.539559364318848
    8. '"C' → logprob: -10.289559364318848
    9. ' AB' → logprob: -10.914559364318848
    10. 'ab' → logprob: -10.914559364318848

Token 483: '":
' (ID: 9213)
  Prédit: '":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '":
' → logprob: -0.41120314598083496
    2. ':
' → logprob: -1.661203145980835
    3. '":' → logprob: -2.536203145980835
    4. '               ' → logprob: -3.411203145980835
    5. ':' → logprob: -3.786203145980835
    6. '():
' → logprob: -5.161203384399414
    7. '"' → logprob: -6.411203384399414
    8. '"]:
' → logprob: -6.536203384399414
    9. '"):
' → logprob: -6.911203384399414
    10. '">
' → logprob: -7.286203384399414

Token 484: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.07284825295209885
    2. 'a' → logprob: -2.947848320007324
    3. '           ' → logprob: -4.197848320007324
    4. 'c' → logprob: -6.072848320007324
    5. ' a' → logprob: -8.572848320007324
    6. 'b' → logprob: -9.572848320007324
    7. '```' → logprob: -9.697848320007324
    8. ':
' → logprob: -10.447848320007324
    9. '              ' → logprob: -10.572848320007324
    10. ' c' → logprob: -10.697848320007324

Token 485: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.0008016457431949675
    2. '               ' → logprob: -8.000802040100098
    3. ' a' → logprob: -8.375802040100098
    4. 'c' → logprob: -8.875802040100098
    5. 'b' → logprob: -10.000802040100098
    6. '           ' → logprob: -11.000802040100098
    7. '   ' → logprob: -11.125802040100098
    8. '                   ' → logprob: -11.500802040100098
    9. 'A' → logprob: -12.250802040100098
    10. '	a' → logprob: -13.375802040100098

Token 486: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.14272506535053253
    2. ' +=' → logprob: -2.0177249908447266
    3. ']+=' → logprob: -11.017724990844727
    4. ',' → logprob: -12.267724990844727
    5. '   ' → logprob: -12.267724990844727
    6. '>=' → logprob: -12.517724990844727
    7. '>' → logprob: -12.517724990844727
    8. '+' → logprob: -12.642724990844727
    9. '=' → logprob: -12.767724990844727
    10. ' ' → logprob: -13.142724990844727

Token 487: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00017958412354346365
    2. ' ' → logprob: -8.625179290771484
    3. '   ' → logprob: -18.125179290771484
    4. '```' → logprob: -18.375179290771484
    5. '0' → logprob: -18.750179290771484
    6. '           ' → logprob: -18.875179290771484
    7. '１' → logprob: -19.875179290771484
    8. '               ' → logprob: -20.250179290771484
    9. '-' → logprob: -20.250179290771484
    10. '+' → logprob: -20.750179290771484

Token 488: ';' (ID: 26)
  Prédit: ';'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ';' → logprob: -0.006321458611637354
    2. '
' → logprob: -5.881321430206299
    3. 'b' → logprob: -6.381321430206299
    4. '               ' → logprob: -7.381321430206299
    5. ';b' → logprob: -7.381321430206299
    6. ' b' → logprob: -8.756321907043457
    7. '           ' → logprob: -8.756321907043457
    8. ';c' → logprob: -9.006321907043457
    9. ' c' → logprob: -10.381321907043457
    10. '   ' → logprob: -10.631321907043457

Token 489: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.011475122533738613
    2. ' c' → logprob: -4.886475086212158
    3. '               ' → logprob: -6.136475086212158
    4. 'b' → logprob: -6.386475086212158
    5. ' b' → logprob: -11.636475563049316
    6. '           ' → logprob: -13.636475563049316
    7. ' ' → logprob: -13.761475563049316
    8. '   ' → logprob: -14.011475563049316
    9. '	c' → logprob: -14.761475563049316
    10. '                   ' → logprob: -14.886475563049316

Token 490: '-=' (ID: 77519)
  Prédit: '-='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.001601506257429719
    2. '-' → logprob: -6.751601696014404
    3. ' -=' → logprob: -7.751601696014404
    4. '+=' → logprob: -14.251601219177246
    5. '=' → logprob: -14.751601219177246
    6. '   ' → logprob: -17.376602172851562
    7. ' ' → logprob: -17.751602172851562
    8. '
' → logprob: -17.751602172851562
    9. '  ' → logprob: -18.376602172851562
    10. ',' → logprob: -18.501602172851562

Token 491: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.688212614681106e-05
    2. ' ' → logprob: -11.000017166137695
    3. '```' → logprob: -16.875017166137695
    4. '<|end|>' → logprob: -18.250017166137695
    5. 'def' → logprob: -18.625017166137695
    6. '   ' → logprob: -18.750017166137695
    7. '=' → logprob: -19.875017166137695
    8. '           ' → logprob: -20.125017166137695
    9. '-' → logprob: -20.375017166137695
    10. '
' → logprob: -20.500017166137695

Token 492: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0032004083041101694
    2. 'answer' → logprob: -6.128200531005859
    3. '
' → logprob: -7.003200531005859
    4. '           ' → logprob: -9.50320053100586
    5. '                
' → logprob: -11.12820053100586
    6. '              ' → logprob: -12.25320053100586
    7. ' answer' → logprob: -12.75320053100586
    8. '       ' → logprob: -13.00320053100586
    9. '                   ' → logprob: -13.62820053100586
    10. '   ' → logprob: -13.87820053100586

Token 493: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00016277639952022582
    2. '           ' → logprob: -9.000163078308105
    3. '
' → logprob: -11.125163078308105
    4. 'answer' → logprob: -11.125163078308105
    5. '              ' → logprob: -12.375163078308105
    6. '       ' → logprob: -12.500163078308105
    7. '                   ' → logprob: -14.625163078308105
    8. '                ' → logprob: -14.875163078308105
    9. '             ' → logprob: -15.250163078308105
    10. '<|end|>' → logprob: -15.250163078308105

Token 494: ' answer' (ID: 6052)
  Prédit: 'answer'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'answer' (adapté à ' answer') → logprob: -0.006892150267958641
    2. '               ' → logprob: -5.006892204284668
    3. ' answer' → logprob: -8.881892204284668
    4. '           ' → logprob: -10.256892204284668
    5. '	answer' → logprob: -13.506892204284668
    6. '   ' → logprob: -14.631892204284668
    7. '       ' → logprob: -14.631892204284668
    8. 'Answer' → logprob: -16.00689125061035
    9. '              ' → logprob: -16.25689125061035
    10. ' ' → logprob: -16.38189125061035

Token 495: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -1.0087516784551553e-05
    2. '.' → logprob: -11.62501049041748
    3. 'append' → logprob: -14.37501049041748
    4. '.app' → logprob: -15.37501049041748
    5. ' .' → logprob: -15.37501049041748
    6. '.ap' → logprob: -18.375009536743164
    7. '	append' → logprob: -19.750009536743164
    8. '.extend' → logprob: -20.000009536743164
    9. 'Append' → logprob: -20.000009536743164
    10. '.Append' → logprob: -20.250009536743164

Token 496: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.4741096794605255
    2. '("' → logprob: -0.9741096496582031
    3. '(' → logprob: -10.349109649658203
    4. '"' → logprob: -15.599109649658203
    5. ''' → logprob: -15.599109649658203
    6. '"A' → logprob: -15.849109649658203
    7. ' ("' → logprob: -17.099109649658203
    8. ''A' → logprob: -17.349109649658203
    9. ' ('' → logprob: -18.099109649658203
    10. '   ' → logprob: -18.349109649658203

Token 497: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.08912715315818787
    2. ''A' → logprob: -2.7141270637512207
    3. '"A' → logprob: -3.9641270637512207
    4. ' A' → logprob: -11.464127540588379
    5. '"' → logprob: -12.964127540588379
    6. '	A' → logprob: -13.339127540588379
    7. '   ' → logprob: -13.464127540588379
    8. '’A' → logprob: -13.714127540588379
    9. '`' → logprob: -13.839127540588379
    10. ''' → logprob: -14.214127540588379

Token 498: '')
' (ID: 2515)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6252568364143372
    2. ')
' → logprob: -0.8752568364143372
    3. ')' → logprob: -3.7502567768096924
    4. '')
' → logprob: -4.0002570152282715
    5. '               ' → logprob: -5.2502570152282715
    6. '')' → logprob: -7.0002570152282715
    7. '       ' → logprob: -9.500256538391113
    8. '")
' → logprob: -10.875256538391113
    9. ')
' → logprob: -11.375256538391113
    10. '   ' → logprob: -11.500256538391113

Token 499: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0001434690784662962
    2. 'else' → logprob: -9.250143051147461
    3. '       ' → logprob: -10.125143051147461
    4. '               ' → logprob: -12.250143051147461
    5. '```' → logprob: -13.375143051147461
    6. '		' → logprob: -15.000143051147461
    7. 'elif' → logprob: -15.750143051147461
    8. ' else' → logprob: -15.875143051147461
    9. '	       ' → logprob: -16.87514305114746
    10. '<|end|>' → logprob: -17.00014305114746

Token 500: ' else' (ID: 1203)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6951155066490173
    2. 'else' (adapté à ' else') → logprob: -0.6951155066490173
    3. '       ' → logprob: -6.320115566253662
    4. ' else' → logprob: -8.945115089416504
    5. 'elif' → logprob: -10.695115089416504
    6. '               ' → logprob: -11.570115089416504
    7. '          ' → logprob: -14.070115089416504
    8. '   ' → logprob: -14.320115089416504
    9. '```' → logprob: -14.445115089416504
    10. '	       ' → logprob: -14.570115089416504

Token 501: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.17206421494483948
    2. ':
' → logprob: -2.2970643043518066
    3. ':' → logprob: -2.9220643043518066
    4. ' c' → logprob: -6.422064304351807
    5. '           ' → logprob: -6.672064304351807
    6. '<|end|>' → logprob: -8.672063827514648
    7. '```' → logprob: -8.797063827514648
    8. '              ' → logprob: -9.172063827514648
    9. '):
' → logprob: -9.172063827514648
    10. 'c' → logprob: -9.672063827514648

Token 502: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6162334084510803
    2. '               ' → logprob: -0.8662334084510803
    3. 'c' → logprob: -3.2412333488464355
    4. ' c' → logprob: -8.741233825683594
    5. 'b' → logprob: -9.241233825683594
    6. '       ' → logprob: -9.366233825683594
    7. 'C' → logprob: -11.616233825683594
    8. '```' → logprob: -12.241233825683594
    9. '          ' → logprob: -12.991233825683594
    10. '              ' → logprob: -12.991233825683594

Token 503: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' (adapté à ' c') → logprob: -0.0013711919309571385
    2. '               ' → logprob: -7.376371383666992
    3. ' c' → logprob: -8.126371383666992
    4. '   ' → logprob: -8.376371383666992
    5. '       ' → logprob: -8.876371383666992
    6. '           ' → logprob: -9.751371383666992
    7. '	c' → logprob: -11.001371383666992
    8. ' ' → logprob: -13.876371383666992
    9. '    ' → logprob: -14.376371383666992
    10. '  ' → logprob: -14.501371383666992

Token 504: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0020261851605027914
    2. '-=' → logprob: -6.252026081085205
    3. ' +=' → logprob: -9.252026557922363
    4. '=' → logprob: -14.252026557922363
    5. '+' → logprob: -14.752026557922363
    6. ' -=' → logprob: -15.002026557922363
    7. ']+=' → logprob: -15.127026557922363
    8. '   ' → logprob: -16.502025604248047
    9. ' ' → logprob: -18.252025604248047
    10. '-' → logprob: -18.252025604248047

Token 505: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.534558552724775e-05
    2. ' ' → logprob: -10.625025749206543
    3. '-' → logprob: -14.125025749206543
    4. '
' → logprob: -16.375024795532227
    5. '   ' → logprob: -16.875024795532227
    6. '```' → logprob: -17.000024795532227
    7. ' -' → logprob: -18.125024795532227
    8. '           ' → logprob: -19.000024795532227
    9. ',' → logprob: -19.000024795532227
    10. '+' → logprob: -19.000024795532227

Token 506: ';' (ID: 26)
  Prédit: ';'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ';' → logprob: -0.0063771214336156845
    2. '               ' → logprob: -5.631377220153809
    3. ',' → logprob: -6.131377220153809
    4. ';b' → logprob: -8.256377220153809
    5. ';c' → logprob: -8.756377220153809
    6. '           ' → logprob: -9.506377220153809
    7. ' ;' → logprob: -10.756377220153809
    8. '   ' → logprob: -11.131377220153809
    9. '              ' → logprob: -11.631377220153809
    10. '                   ' → logprob: -11.631377220153809

Token 507: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.018165044486522675
    2. ' a' → logprob: -4.018165111541748
    3. 'b' → logprob: -11.64316463470459
    4. '   ' → logprob: -13.01816463470459
    5. '	a' → logprob: -13.51816463470459
    6. '```' → logprob: -13.64316463470459
    7. ' b' → logprob: -14.39316463470459
    8. ' ' → logprob: -15.26816463470459
    9. 'c' → logprob: -15.51816463470459
    10. '  ' → logprob: -15.51816463470459

Token 508: '-=' (ID: 77519)
  Prédit: '-='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.0007493520388379693
    2. ' -=' → logprob: -7.625749588012695
    3. '-' → logprob: -8.250749588012695
    4. '   ' → logprob: -16.875749588012695
    5. '+=' → logprob: -17.125749588012695
    6. '	' → logprob: -17.250749588012695
    7. ' -' → logprob: -17.500749588012695
    8. '  ' → logprob: -18.000749588012695
    9. '           ' → logprob: -18.250749588012695
    10. '```' → logprob: -18.375749588012695

Token 509: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.75
    3. '-' → logprob: -17.75
    4. '```' → logprob: -18.125
    5. '   ' → logprob: -20.25
    6. '１' → logprob: -20.75
    7. '`' → logprob: -21.75
    8. '
' → logprob: -22.125
    9. ' ' → logprob: -22.25
    10. '۱' → logprob: -22.25

Token 510: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0006289214943535626
    2. '           ' → logprob: -7.87562894821167
    3. 'answer' → logprob: -8.875628471374512
    4. '
' → logprob: -9.625628471374512
    5. '```' → logprob: -11.125628471374512
    6. '              ' → logprob: -11.500628471374512
    7. '       ' → logprob: -12.125628471374512
    8. '                
' → logprob: -12.625628471374512
    9. '                ' → logprob: -13.000628471374512
    10. '   ' → logprob: -13.375628471374512

Token 511: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0031108111143112183
    2. 'answer' → logprob: -6.253110885620117
    3. '           ' → logprob: -6.753110885620117
    4. '
' → logprob: -12.003110885620117
    5. '              ' → logprob: -12.253110885620117
    6. ' answer' → logprob: -14.003110885620117
    7. '	answer' → logprob: -14.753110885620117
    8. '       ' → logprob: -14.878110885620117
    9. '             ' → logprob: -15.003110885620117
    10. '   ' → logprob: -15.128110885620117

Token 512: ' answer' (ID: 6052)
  Prédit: 'answer'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'answer' (adapté à ' answer') → logprob: -0.0003392767102923244
    2. ' answer' → logprob: -8.00033950805664
    3. '               ' → logprob: -13.12533950805664
    4. '           ' → logprob: -13.37533950805664
    5. '   ' → logprob: -16.00033950805664
    6. '	answer' → logprob: -16.62533950805664
    7. '       ' → logprob: -18.25033950805664
    8. '  ' → logprob: -18.25033950805664
    9. ' ' → logprob: -18.50033950805664
    10. 'Answer' → logprob: -19.37533950805664

Token 513: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -1.1398757123970427e-05
    2. '.' → logprob: -11.500011444091797
    3. 'append' → logprob: -14.000011444091797
    4. '.app' → logprob: -15.500011444091797
    5. ' .' → logprob: -16.750011444091797
    6. '.extend' → logprob: -18.500011444091797
    7. '\.' → logprob: -19.500011444091797
    8. '.ap' → logprob: -19.750011444091797
    9. '	append' → logprob: -20.250011444091797
    10. 'app' → logprob: -20.625011444091797

Token 514: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.006873910315334797
    2. '("' → logprob: -5.006874084472656
    3. '(' → logprob: -8.756874084472656
    4. '(
' → logprob: -14.006874084472656
    5. ''' → logprob: -15.506874084472656
    6. ''C' → logprob: -15.881874084472656
    7. '"C' → logprob: -17.506874084472656
    8. '"' → logprob: -18.131874084472656
    9. ' ('' → logprob: -18.256874084472656
    10. '(c' → logprob: -18.756874084472656

Token 515: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.10077536851167679
    2. ''C' → logprob: -2.3507754802703857
    3. '"C' → logprob: -7.725775241851807
    4. ''' → logprob: -8.975775718688965
    5. ' C' → logprob: -14.600775718688965
    6. '"' → logprob: -15.600775718688965
    7. 'Ｃ' → logprob: -17.47577476501465
    8. 'c' → logprob: -17.47577476501465
    9. '
' → logprob: -17.60077476501465
    10. '')' → logprob: -18.10077476501465

Token 516: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.3969264030456543
    2. '')
' → logprob: -1.1469264030456543
    3. '")' → logprob: -4.896926403045654
    4. '")
' → logprob: -6.521926403045654
    5. ')' → logprob: -7.396926403045654
    6. ')
' → logprob: -9.021926879882812
    7. '           ' → logprob: -9.021926879882812
    8. '')
' → logprob: -9.021926879882812
    9. '   ' → logprob: -10.021926879882812
    10. '       ' → logprob: -10.646926879882812

Token 517: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.038347385823726654
    2. '       ' → logprob: -3.2883474826812744
    3. '```' → logprob: -8.538347244262695
    4. '<|end|>' → logprob: -10.163347244262695
    5. 'else' → logprob: -10.288347244262695
    6. 'i' → logprob: -11.038347244262695
    7. '           ' → logprob: -11.538347244262695
    8. '<|end|>' → logprob: -12.538347244262695
    9. '    
' → logprob: -13.288347244262695
    10. '
' → logprob: -13.788347244262695

Token 518: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07397930324077606
    2. 'else' (adapté à ' else') → logprob: -2.823979377746582
    3. '   ' → logprob: -4.448979377746582
    4. ' else' → logprob: -8.448979377746582
    5. '           ' → logprob: -11.198979377746582
    6. '```' → logprob: -12.198979377746582
    7. 'elif' → logprob: -12.323979377746582
    8. '	else' → logprob: -12.323979377746582
    9. '<|end|>' → logprob: -13.073979377746582
    10. '	' → logprob: -13.448979377746582

Token 519: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10224277526140213
    2. ':' → logprob: -2.9772427082061768
    3. '       ' → logprob: -3.6022427082061768
    4. ':
' → logprob: -3.9772427082061768
    5. '```' → logprob: -9.102242469787598
    6. '               ' → logprob: -10.602242469787598
    7. '   ' → logprob: -11.102242469787598
    8. '          ' → logprob: -11.227242469787598
    9. '		' → logprob: -11.477242469787598
    10. '         ' → logprob: -11.852242469787598

Token 520: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.38911736011505127
    2. '       ' → logprob: -1.1391173601150513
    3. 'if' → logprob: -6.139117240905762
    4. '               ' → logprob: -10.389117240905762
    5. ' if' → logprob: -10.889117240905762
    6. '```' → logprob: -11.139117240905762
    7. 'a' → logprob: -11.764117240905762
    8. '   ' → logprob: -12.264117240905762
    9. '          ' → logprob: -13.014117240905762
    10. '        ' → logprob: -13.139117240905762

Token 521: ' switch' (ID: 6160)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.016087394207715988
    2. '           ' → logprob: -4.516087532043457
    3. '   ' → logprob: -6.391087532043457
    4. ' if' → logprob: -6.516087532043457
    5. '       ' → logprob: -6.641087532043457
    6. 'a' → logprob: -7.891087532043457
    7. 'x' → logprob: -9.766087532043457
    8. 'xs' → logprob: -9.766087532043457
    9. 'A' → logprob: -10.391087532043457
    10. 'obj' → logprob: -10.891087532043457

Token 522: ' =' (ID: 314)
  Prédit: '(ss'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ss' → logprob: -0.1194203719496727
    2. ' (' → logprob: -3.119420289993286
    3. ' ss' → logprob: -3.619420289993286
    4. '(a' → logprob: -3.744420289993286
    5. '(s' → logprob: -4.994420528411865
    6. 'ss' → logprob: -5.369420528411865
    7. '(' → logprob: -6.244420528411865
    8. 's' → logprob: -6.744420528411865
    9. ' s' → logprob: -7.244420528411865
    10. ' ' → logprob: -7.494420528411865

Token 523: ' {' (ID: 354)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6498496532440186
    2. '{
' → logprob: -1.3998496532440186
    3. '{' → logprob: -2.3998496532440186
    4. 'c' → logprob: -3.0248496532440186
    5. 'min' → logprob: -3.6498496532440186
    6. ' a' → logprob: -4.024849891662598
    7. 's' → logprob: -5.024849891662598
    8. 'b' → logprob: -5.024849891662598
    9. '(a' → logprob: -5.274849891662598
    10. ' c' → logprob: -5.399849891662598

Token 524: 'True' (ID: 4710)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.08747642487287521
    2. ''' → logprob: -2.5874764919281006
    3. '       ' → logprob: -5.2124762535095215
    4. '           ' → logprob: -5.9624762535095215
    5. '   ' → logprob: -7.7124762535095215
    6. '               ' → logprob: -10.71247673034668
    7. '"A' → logprob: -10.83747673034668
    8. ''A' → logprob: -11.33747673034668
    9. ' ' → logprob: -11.71247673034668
    10. ' "' → logprob: -11.83747673034668

Token 525: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.043332114815711975
    2. ':a' → logprob: -3.293332099914551
    3. ':b' → logprob: -5.668332099914551
    4. ' :' → logprob: -7.168332099914551
    5. '       ' → logprob: -8.16833209991455
    6. '           ' → logprob: -8.41833209991455
    7. ':c' → logprob: -8.54333209991455
    8. '   ' → logprob: -9.79333209991455
    9. 'a' → logprob: -9.79333209991455
    10. ':s' → logprob: -10.04333209991455

Token 526: ' lambda' (ID: 27871)
  Prédit: 'push'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'push' → logprob: -0.44552120566368103
    2. ' lambda' → logprob: -2.320521116256714
    3. ' push' → logprob: -2.320521116256714
    4. 'lambda' → logprob: -2.695521116256714
    5. '(lambda' → logprob: -2.820521116256714
    6. '(push' → logprob: -3.945521116256714
    7. '(a' → logprob: -5.195521354675293
    8. ' (' → logprob: -5.445521354675293
    9. 'True' → logprob: -6.195521354675293
    10. 'a' → logprob: -6.570521354675293

Token 527: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.36200395226478577
    2. 'a' → logprob: -1.3620039224624634
    3. ':a' → logprob: -3.362004041671753
    4. '():' → logprob: -5.362003803253174
    5. ' a' → logprob: -5.487003803253174
    6. ':c' → logprob: -6.612003803253174
    7. ' :' → logprob: -7.237003803253174
    8. 'True' → logprob: -7.987003803253174
    9. 'c' → logprob: -8.237004280090332
    10. ':b' → logprob: -8.362004280090332

Token 528: ' (' (ID: 350)
  Prédit: 'push'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'push' → logprob: -0.73948734998703
    2. '(push' → logprob: -1.6144874095916748
    3. '(a' → logprob: -1.7394874095916748
    4. 'a' → logprob: -2.364487409591675
    5. ' push' → logprob: -3.364487409591675
    6. ' (' → logprob: -4.489487171173096
    7. ' a' → logprob: -5.614487171173096
    8. '   ' → logprob: -6.614487171173096
    9. ' ' → logprob: -6.989487171173096
    10. '(' → logprob: -7.364487171173096

Token 529: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.037202805280685425
    2. '(a' → logprob: -3.787202835083008
    3. 'push' → logprob: -4.662202835083008
    4. ' a' → logprob: -6.162202835083008
    5. '(push' → logprob: -6.662202835083008
    6. '   ' → logprob: -8.037202835083008
    7. ' (' → logprob: -8.412202835083008
    8. ' ' → logprob: -8.787202835083008
    9. '[a' → logprob: -9.287202835083008
    10. ' push' → logprob: -9.287202835083008

Token 530: '+' (ID: 10)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.16152414679527283
    2. ' +=' → logprob: -1.9115241765975952
    3. '+' → logprob: -7.411524295806885
    4. '   ' → logprob: -8.786523818969727
    5. ' ' → logprob: -8.911523818969727
    6. '>' → logprob: -9.161523818969727
    7. ',' → logprob: -9.661523818969727
    8. '  ' → logprob: -10.036523818969727
    9. '>=' → logprob: -10.286523818969727
    10. ' +' → logprob: -10.286523818969727

Token 531: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00044795009307563305
    2. ' ' → logprob: -7.750447750091553
    3. '=' → logprob: -11.500448226928711
    4. '   ' → logprob: -12.625448226928711
    5. '           ' → logprob: -13.375448226928711
    6. 'a' → logprob: -15.000448226928711
    7. ',' → logprob: -15.125448226928711
    8. '  ' → logprob: -15.125448226928711
    9. '```' → logprob: -15.375448226928711
    10. '+' → logprob: -15.500448226928711

Token 532: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0012367760064080358
    2. ',a' → logprob: -7.376236915588379
    3. ' ,' → logprob: -8.501236915588379
    4. ',b' → logprob: -8.751236915588379
    5. 'a' → logprob: -9.001236915588379
    6. ')' → logprob: -10.751236915588379
    7. '   ' → logprob: -11.001236915588379
    8. ',c' → logprob: -11.126236915588379
    9. '           ' → logprob: -11.251236915588379
    10. '),' → logprob: -11.501236915588379

Token 533: ' c' (ID: 274)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.34997421503067017
    2. 'b' → logprob: -1.2249741554260254
    3. ' c' → logprob: -6.974974155426025
    4. 'c' → logprob: -8.224974632263184
    5. '           ' → logprob: -9.849974632263184
    6. '            ' → logprob: -9.849974632263184
    7. 'a' → logprob: -10.599974632263184
    8. ' ' → logprob: -10.724974632263184
    9. ' a' → logprob: -10.849974632263184
    10. '    ' → logprob: -11.099974632263184

Token 534: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0014089244650676847
    2. ' -' → logprob: -6.62640905380249
    3. ',' → logprob: -10.126408576965332
    4. '-=' → logprob: -10.251408576965332
    5. ')-' → logprob: -13.126408576965332
    6. '-,' → logprob: -13.376408576965332
    7. ' -=' → logprob: -14.001408576965332
    8. '```' → logprob: -14.376408576965332
    9. ')' → logprob: -14.751408576965332
    10. ',-' → logprob: -14.751408576965332

Token 535: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.88418151892256e-05
    2. ' ' → logprob: -9.750059127807617
    3. '   ' → logprob: -16.000059127807617
    4. '```' → logprob: -16.250059127807617
    5. '=' → logprob: -16.625059127807617
    6. '-' → logprob: -17.125059127807617
    7. '  ' → logprob: -17.437559127807617
    8. '۱' → logprob: -17.625059127807617
    9. '+' → logprob: -17.687559127807617
    10. '１' → logprob: -17.875059127807617

Token 536: ',' (ID: 11)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.1591002494096756
    2. ',' → logprob: -2.034100294113159
    3. '               ' → logprob: -4.53410005569458
    4. '),
' → logprob: -5.40910005569458
    5. '           ' → logprob: -7.40910005569458
    6. ')' → logprob: -8.659100532531738
    7. ',a' → logprob: -9.034100532531738
    8. '                   ' → logprob: -9.909100532531738
    9. '),(' → logprob: -10.409100532531738
    10. ',),' → logprob: -10.659100532531738

Token 537: ' '' (ID: 461)
  Prédit: 'answer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'answer' → logprob: -0.9979677796363831
    2. 'a' → logprob: -1.8729677200317383
    3. 'push' → logprob: -2.2479677200317383
    4. ' answer' → logprob: -2.2479677200317383
    5. ' a' → logprob: -2.4979677200317383
    6. ' push' → logprob: -2.6229677200317383
    7. '               ' → logprob: -3.4979677200317383
    8. '           ' → logprob: -3.9979677200317383
    9. '                   ' → logprob: -4.872967720031738
    10. '            ' → logprob: -4.872967720031738

Token 538: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.003150027245283127
    2. ''A' → logprob: -6.25314998626709
    3. '"A' → logprob: -7.87814998626709
    4. 'C' → logprob: -8.25314998626709
    5. '"' → logprob: -8.87814998626709
    6. 'a' → logprob: -9.00314998626709
    7. ''' → logprob: -9.12814998626709
    8. 'push' → logprob: -9.62814998626709
    9. 'answer' → logprob: -9.75314998626709
    10. ' A' → logprob: -10.37814998626709

Token 539: ''),
' (ID: 7239)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.6803117990493774
    2. ''),' → logprob: -0.8053117990493774
    3. ''),
' → logprob: -3.430311679840088
    4. '),
' → logprob: -4.430311679840088
    5. ')' → logprob: -7.055311679840088
    6. '       ' → logprob: -7.180311679840088
    7. '           ' → logprob: -8.555312156677246
    8. '   ' → logprob: -9.430312156677246
    9. '',' → logprob: -9.555312156677246
    10. '               ' → logprob: -9.930312156677246

Token 540: '                     ' (ID: 4451)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.3092873692512512
    2. '            ' → logprob: -2.0592873096466064
    3. ' False' → logprob: -2.0592873096466064
    4. '           ' → logprob: -5.9342875480651855
    5. '                    ' → logprob: -6.1842875480651855
    6. '                ' → logprob: -6.4342875480651855
    7. '             ' → logprob: -7.0592875480651855
    8. '          ' → logprob: -7.1842875480651855
    9. '    ' → logprob: -7.5592875480651855
    10. '                  ' → logprob: -7.5592875480651855

Token 541: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' (adapté à ' False') → logprob: -0.031249042600393295
    2. ' False' → logprob: -3.5312490463256836
    3. '          ' → logprob: -7.406249046325684
    4. '         ' → logprob: -8.281249046325684
    5. '        ' → logprob: -8.906249046325684
    6. '            ' → logprob: -9.031249046325684
    7. '              ' → logprob: -9.656249046325684
    8. '             ' → logprob: -9.781249046325684
    9. '    ' → logprob: -9.906249046325684
    10. '                ' → logprob: -10.031249046325684

Token 542: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.000432695698691532
    2. ' :' → logprob: -7.75043249130249
    3. '        ' → logprob: -14.250432968139648
    4. '      ' → logprob: -14.875432968139648
    5. '         ' → logprob: -15.250432968139648
    6. '          ' → logprob: -15.625432968139648
    7. '       ' → logprob: -15.750432968139648
    8. '    ' → logprob: -15.875432968139648
    9. '            ' → logprob: -16.00043296813965
    10. '   ' → logprob: -16.50043296813965

Token 543: ' lambda' (ID: 27871)
  Prédit: ' lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -0.6541085243225098
    2. 'lambda' → logprob: -0.7791085243225098
    3. '(lambda' → logprob: -4.02910852432251
    4. '                     ' → logprob: -6.65410852432251
    5. ' (' → logprob: -7.40410852432251
    6. '                      ' → logprob: -7.90410852432251
    7. '              ' → logprob: -8.279108047485352
    8. 'False' → logprob: -8.404108047485352
    9. '          ' → logprob: -9.029108047485352
    10. '                    ' → logprob: -9.154108047485352

Token 544: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01678522303700447
    2. ' :' → logprob: -4.141785144805908
    3. 'a' → logprob: -8.766785621643066
    4. ':a' → logprob: -9.391785621643066
    5. '           ' → logprob: -9.641785621643066
    6. '(a' → logprob: -10.016785621643066
    7. '        ' → logprob: -10.016785621643066
    8. '          ' → logprob: -10.016785621643066
    9. '         ' → logprob: -10.266785621643066
    10. '            ' → logprob: -10.391785621643066

Token 545: ' (' (ID: 350)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.7570545673370361
    2. '(c' → logprob: -1.2570545673370361
    3. ' (' → logprob: -1.5070545673370361
    4. 'a' → logprob: -4.632054328918457
    5. 'c' → logprob: -5.257054328918457
    6. ' c' → logprob: -6.007054328918457
    7. ' ' → logprob: -6.382054328918457
    8. ' a' → logprob: -6.507054328918457
    9. '(b' → logprob: -6.632054328918457
    10. '   ' → logprob: -6.632054328918457

Token 546: 'c' (ID: 66)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0008319015032611787
    2. ' a' → logprob: -7.5008320808410645
    3. 'b' → logprob: -8.625831604003906
    4. '(a' → logprob: -9.625831604003906
    5. 'c' → logprob: -10.875831604003906
    6. ' ' → logprob: -12.875831604003906
    7. '   ' → logprob: -13.000831604003906
    8. 'True' → logprob: -13.875831604003906
    9. '     ' → logprob: -14.375831604003906
    10. ' b' → logprob: -14.375831604003906

Token 547: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.05507918447256088
    2. '-' → logprob: -2.930079221725464
    3. ' +' → logprob: -8.930079460144043
    4. 'a' → logprob: -10.805079460144043
    5. ' -' → logprob: -11.055079460144043
    6. '>' → logprob: -11.055079460144043
    7. ',' → logprob: -12.055079460144043
    8. '1' → logprob: -13.305079460144043
    9. ' ' → logprob: -14.180079460144043
    10. '+a' → logprob: -14.430079460144043

Token 548: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.7120533811976202e-05
    2. ' ' → logprob: -11.125017166137695
    3. '0' → logprob: -13.125017166137695
    4. '   ' → logprob: -16.000017166137695
    5. '-' → logprob: -16.625017166137695
    6. '```' → logprob: -17.312517166137695
    7. 'a' → logprob: -17.375017166137695
    8. ',' → logprob: -17.562517166137695
    9. '
' → logprob: -17.625017166137695
    10. '  ' → logprob: -18.187517166137695

Token 549: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00021784115233458579
    2. ' ,' → logprob: -8.87521743774414
    3. ',a' → logprob: -10.12521743774414
    4. ',c' → logprob: -10.50021743774414
    5. ',b' → logprob: -12.12521743774414
    6. ',
' → logprob: -14.12521743774414
    7. '          ' → logprob: -14.50021743774414
    8. '           ' → logprob: -14.62521743774414
    9. ',n' → logprob: -14.62521743774414
    10. '         ' → logprob: -15.12521743774414

Token 550: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.02326131984591484
    2. ' a' → logprob: -3.773261308670044
    3. '     ' → logprob: -12.273261070251465
    4. '    ' → logprob: -12.398261070251465
    5. '   ' → logprob: -13.398261070251465
    6. 'b' → logprob: -13.773261070251465
    7. ' ' → logprob: -13.898261070251465
    8. '  ' → logprob: -14.023261070251465
    9. '      ' → logprob: -14.148261070251465
    10. '1' → logprob: -14.898261070251465

Token 551: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -9.088346359931165e-07
    2. ' -' → logprob: -14.000000953674316
    3. ',' → logprob: -17.0
    4. '1' → logprob: -17.5
    5. '```' → logprob: -17.625
    6. '   ' → logprob: -19.375
    7. ')-' → logprob: -19.75
    8. '+' → logprob: -19.875
    9. ' ' → logprob: -20.0
    10. '−' → logprob: -20.875

Token 552: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.981667537620524e-06
    2. ' ' → logprob: -13.750001907348633
    3. '
' → logprob: -15.125001907348633
    4. '```' → logprob: -15.500001907348633
    5. 'False' → logprob: -15.625001907348633
    6. '   ' → logprob: -16.375001907348633
    7. '0' → logprob: -17.125001907348633
    8. '

' → logprob: -17.750001907348633
    9. '-' → logprob: -17.750001907348633
    10. 'True' → logprob: -18.000001907348633

Token 553: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0012541614705696702
    2. ','' → logprob: -7.001254081726074
    3. ' ,' → logprob: -8.501254081726074
    4. '                     ' → logprob: -9.251254081726074
    5. '',' → logprob: -11.251254081726074
    6. '                         ' → logprob: -12.501254081726074
    7. '                      ' → logprob: -12.626254081726074
    8. ' ' → logprob: -13.001254081726074
    9. '                    ' → logprob: -13.001254081726074
    10. '                       ' → logprob: -13.251254081726074

Token 554: ' '' (ID: 461)
  Prédit: ''A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''A' → logprob: -0.08200936764478683
    2. ' '' → logprob: -2.7070093154907227
    3. ''C' → logprob: -4.457009315490723
    4. ''' → logprob: -8.832009315490723
    5. 'True' → logprob: -9.332009315490723
    6. ''a' → logprob: -10.082009315490723
    7. 'A' → logprob: -10.582009315490723
    8. ' ' → logprob: -10.957009315490723
    9. '   ' → logprob: -11.332009315490723
    10. '     ' → logprob: -11.582009315490723

Token 555: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.0002871993638109416
    2. ''C' → logprob: -8.625287055969238
    3. 'A' → logprob: -9.375287055969238
    4. ''' → logprob: -11.875287055969238
    5. 'c' → logprob: -12.500287055969238
    6. '"C' → logprob: -12.625287055969238
    7. ' C' → logprob: -12.875287055969238
    8. '
' → logprob: -13.750287055969238
    9. 'True' → logprob: -14.125287055969238
    10. '')' → logprob: -14.125287055969238

Token 556: '')}
' (ID: 58670)
  Prédit: ')}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')}' → logprob: -0.9147111177444458
    2. ')}
' → logprob: -1.5397111177444458
    3. ')' → logprob: -1.6647111177444458
    4. ')[' → logprob: -2.1647109985351562
    5. '       ' → logprob: -2.9147109985351562
    6. '}[' → logprob: -4.914710998535156
    7. '           ' → logprob: -6.039710998535156
    8. '}' → logprob: -6.414710998535156
    9. '               ' → logprob: -6.414710998535156
    10. '   ' → logprob: -6.414710998535156

Token 557: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.022739864885807037
    2. '
' → logprob: -4.522739887237549
    3. '   ' → logprob: -4.647739887237549
    4. '       ' → logprob: -6.897739887237549
    5. 'condition' → logprob: -7.647739887237549
    6. '            
' → logprob: -8.77273941040039
    7. '               ' → logprob: -9.39773941040039
    8. ',' → logprob: -10.02273941040039
    9. '```' → logprob: -10.64773941040039
    10. '    
' → logprob: -10.64773941040039

Token 558: ' res' (ID: 694)
  Prédit: 'condition'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'condition' → logprob: -0.7874476313591003
    2. 'cond' → logprob: -0.9124476313591003
    3. '           ' → logprob: -3.037447690963745
    4. 'flag' → logprob: -3.287447690963745
    5. 'result' → logprob: -4.162447452545166
    6. 'choice' → logprob: -4.662447452545166
    7. 'is' → logprob: -4.787447452545166
    8. 'decision' → logprob: -5.287447452545166
    9. 'key' → logprob: -6.037447452545166
    10. 'b' → logprob: -6.537447452545166

Token 559: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2014252245426178
    2. '=' → logprob: -1.7014251947402954
    3. '           ' → logprob: -12.576425552368164
    4. ',' → logprob: -12.826425552368164
    5. 'switch' → logprob: -13.451425552368164
    6. ' ' → logprob: -14.451425552368164
    7. '=True' → logprob: -14.576425552368164
    8. '   ' → logprob: -14.576425552368164
    9. '=s' → logprob: -14.826425552368164
    10. '=(' → logprob: -14.951425552368164

Token 560: ' switch' (ID: 6160)
  Prédit: 'switch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'switch' → logprob: -0.0343097560107708
    2. ' switch' → logprob: -3.4093098640441895
    3. '           ' → logprob: -7.4093098640441895
    4. '         ' → logprob: -11.284309387207031
    5. '   ' → logprob: -11.534309387207031
    6. ' ' → logprob: -11.784309387207031
    7. '          ' → logprob: -11.909309387207031
    8. '(s' → logprob: -12.534309387207031
    9. '            ' → logprob: -13.034309387207031
    10. '               ' → logprob: -13.159309387207031

Token 561: '[min' (ID: 135647)
  Prédit: '[a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.04369836673140526
    2. '[min' → logprob: -3.793698310852051
    3. '[' → logprob: -4.043698310852051
    4. '[(' → logprob: -6.043698310852051
    5. '[s' → logprob: -9.04369831085205
    6. 'a' → logprob: -9.16869831085205
    7. '[b' → logprob: -10.54369831085205
    8. '[c' → logprob: -10.66869831085205
    9. '[obj' → logprob: -11.04369831085205
    10. '[get' → logprob: -11.29369831085205

Token 562: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.00018780550453811884
    2. '([' → logprob: -9.250187873840332
    3. 'a' → logprob: -10.250187873840332
    4. '((' → logprob: -10.500187873840332
    5. '==' → logprob: -11.500187873840332
    6. '[a' → logprob: -12.875187873840332
    7. '(c' → logprob: -12.875187873840332
    8. '(s' → logprob: -12.875187873840332
    9. ']' → logprob: -13.625187873840332
    10. '(' → logprob: -13.750187873840332

Token 563: ',c' (ID: 22261)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.3420315682888031
    2. '<a' → logprob: -2.092031478881836
    3. ',' → logprob: -2.342031478881836
    4. 'a' → logprob: -3.467031478881836
    5. ',a' → logprob: -3.592031478881836
    6. ' <' → logprob: -5.342031478881836
    7. '==' → logprob: -6.217031478881836
    8. '[a' → logprob: -6.467031478881836
    9. ')' → logprob: -7.217031478881836
    10. '>' → logprob: -7.717031478881836

Token 564: ')==' (ID: 35269)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2440141886472702
    2. ')==' → logprob: -1.8690141439437866
    3. '==' → logprob: -3.119014263153076
    4. ')<' → logprob: -4.744014263153076
    5. ')>' → logprob: -5.369014263153076
    6. ' ==' → logprob: -6.619014263153076
    7. '<a' → logprob: -6.744014263153076
    8. 'a' → logprob: -7.119014263153076
    9. '(a' → logprob: -8.619013786315918
    10. '>' → logprob: -8.744013786315918

Token 565: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.4974866644479334e-05
    2. ' a' → logprob: -11.125015258789062
    3. 'min' → logprob: -16.000015258789062
    4. '	a' → logprob: -17.500015258789062
    5. 'c' → logprob: -18.125015258789062
    6. '   ' → logprob: -18.625015258789062
    7. ' ' → logprob: -19.250015258789062
    8. '(a' → logprob: -19.375015258789062
    9. 'b' → logprob: -19.500015258789062
    10. '=a' → logprob: -19.625015258789062

Token 566: ']()
' (ID: 95523)
  Prédit: ']()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']()' → logprob: -0.143197700381279
    2. '()]' → logprob: -2.143197774887085
    3. ']()
' → logprob: -4.268197536468506
    4. ']' → logprob: -6.268197536468506
    5. '()' → logprob: -8.518198013305664
    6. '()]
' → logprob: -10.768198013305664
    7. ' ]' → logprob: -12.393198013305664
    8. ')]' → logprob: -12.768198013305664
    9. '](' → logprob: -13.268198013305664
    10. '   ' → logprob: -13.393198013305664

Token 567: '           ' (ID: 352)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5761557221412659
    2. '           ' → logprob: -0.8261557221412659
    3. '   ' → logprob: -8.826155662536621
    4. ' a' → logprob: -10.076155662536621
    5. '       ' → logprob: -11.326155662536621
    6. '            
' → logprob: -12.701155662536621
    7. ',a' → logprob: -13.076155662536621
    8. '
' → logprob: -13.201155662536621
    9. ',' → logprob: -13.326155662536621
    10. '               ' → logprob: -13.451155662536621

Token 568: ' (' (ID: 350)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00272594066336751
    2. '           ' → logprob: -6.127726078033447
    3. ' a' → logprob: -7.752726078033447
    4. '   ' → logprob: -9.127725601196289
    5. '(a' → logprob: -14.127725601196289
    6. '            
' → logprob: -14.752725601196289
    7. '       ' → logprob: -15.127725601196289
    8. '<|end|>' → logprob: -15.877725601196289
    9. '[a' → logprob: -16.00272560119629
    10. '  ' → logprob: -16.00272560119629

Token 569: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0007146967691369355
    2. ' a' → logprob: -7.2507147789001465
    3. '           ' → logprob: -13.125714302062988
    4. '   ' → logprob: -13.250714302062988
    5. '(a' → logprob: -14.375714302062988
    6. '               ' → logprob: -15.500714302062988
    7. ')' → logprob: -16.625715255737305
    8. '                   ' → logprob: -17.750715255737305
    9. ' ' → logprob: -17.875715255737305
    10. ')a' → logprob: -17.875715255737305

Token 570: ' if' (ID: 538)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005341201089322567
    2. ',b' → logprob: -5.505341053009033
    3. ',res' → logprob: -7.380341053009033
    4. ',c' → logprob: -7.505341053009033
    5. 'b' → logprob: -9.755341529846191
    6. '),' → logprob: -11.255341529846191
    7. ' ,' → logprob: -12.255341529846191
    8. 'c' → logprob: -12.505341529846191
    9. 'res' → logprob: -12.755341529846191
    10. '=' → logprob: -13.505341529846191

Token 571: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.07671860605478287
    2. 'a' → logprob: -4.076718807220459
    3. 'False' → logprob: -4.201718807220459
    4. '0' → logprob: -4.201718807220459
    5. 'True' → logprob: -4.951718807220459
    6. ' res' → logprob: -5.076718807220459
    7. '=' → logprob: -5.326718807220459
    8. ',' → logprob: -6.576718807220459
    9. 'None' → logprob: -6.951718807220459
    10. '1' → logprob: -7.076718807220459

Token 572: '[' (ID: 58)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014175611548125744
    2. ',a' → logprob: -5.5141754150390625
    3. '=' → logprob: -5.6391754150390625
    4. ',b' → logprob: -6.0141754150390625
    5. ':=' → logprob: -6.2641754150390625
    6. '==' → logprob: -7.3891754150390625
    7. ' ,' → logprob: -7.7641754150390625
    8. 'a' → logprob: -8.264175415039062
    9. '!=' → logprob: -8.639175415039062
    10. ',c' → logprob: -8.764175415039062

Token 573: '2' (ID: 17)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002659847668837756
    2. '==' → logprob: -8.625266075134277
    3. ' ' → logprob: -10.250266075134277
    4. '=' → logprob: -10.375266075134277
    5. '1' → logprob: -12.125266075134277
    6. '2' → logprob: -12.625266075134277
    7. '   ' → logprob: -13.125266075134277
    8. ' ==' → logprob: -13.375266075134277
    9. '    ' → logprob: -13.875266075134277
    10. ']' → logprob: -14.125266075134277

Token 574: ']=='' (ID: 71177)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3293468654155731
    2. ' ==' → logprob: -1.7043468952178955
    3. '=='' → logprob: -2.3293468952178955
    4. '=="' → logprob: -7.329346656799316
    5. 'else' → logprob: -7.829346656799316
    6. ' else' → logprob: -8.954346656799316
    7. ' =='' → logprob: -9.579346656799316
    8. '==
' → logprob: -10.829346656799316
    9. '    ' → logprob: -11.204346656799316
    10. ' ' → logprob: -11.454346656799316

Token 575: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.002088400535285473
    2. ''A' → logprob: -6.25208854675293
    3. 'a' → logprob: -9.75208854675293
    4. ''a' → logprob: -10.25208854675293
    5. ''' → logprob: -10.50208854675293
    6. '"A' → logprob: -10.75208854675293
    7. ' A' → logprob: -12.25208854675293
    8. 'C' → logprob: -12.75208854675293
    9. '   ' → logprob: -13.00208854675293
    10. ' '' → logprob: -13.62708854675293

Token 576: ''' (ID: 6)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.44100427627563477
    2. ' else' → logprob: -1.0660042762756348
    3. ',' → logprob: -4.566004276275635
    4. ':=' → logprob: -7.816004276275635
    5. ' ' → logprob: -8.566003799438477
    6. ')' → logprob: -8.691003799438477
    7. ',a' → logprob: -8.941003799438477
    8. '    ' → logprob: -9.191003799438477
    9. ' ,' → logprob: -9.316003799438477
    10. '+' → logprob: -9.316003799438477

Token 577: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.23402966558933258
    2. ',' → logprob: -2.109029769897461
    3. ' else' → logprob: -2.484029769897461
    4. ',a' → logprob: -6.609029769897461
    5. ':=' → logprob: -7.359029769897461
    6. ')' → logprob: -7.984029769897461
    7. ' ' → logprob: -8.234029769897461
    8. 'a' → logprob: -8.484029769897461
    9. ' ,' → logprob: -8.609029769897461
    10. '==' → logprob: -8.609029769897461

Token 578: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0004068395064678043
    2. ' c' → logprob: -8.625407218933105
    3. 'a' → logprob: -9.750407218933105
    4. ')c' → logprob: -9.750407218933105
    5. ')' → logprob: -10.250407218933105
    6. '   ' → logprob: -11.000407218933105
    7. '=' → logprob: -11.125407218933105
    8. 'b' → logprob: -11.250407218933105
    9. '=c' → logprob: -11.500407218933105
    10. 'res' → logprob: -13.250407218933105

Token 579: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09477779269218445
    2. '),' → logprob: -2.469777822494507
    3. ')' → logprob: -5.844777584075928
    4. ')=' → logprob: -6.844777584075928
    5. ',res' → logprob: -7.094777584075928
    6. ' ,' → logprob: -7.969777584075928
    7. ')+' → logprob: -8.094778060913086
    8. ',a' → logprob: -9.219778060913086
    9. ',
' → logprob: -9.969778060913086
    10. '   ' → logprob: -10.469778060913086

Token 580: ' (' (ID: 350)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.13984176516532898
    2. '=' → logprob: -2.6398417949676514
    3. 'b' → logprob: -4.514841556549072
    4. ' =' → logprob: -4.764841556549072
    5. 'a' → logprob: -4.889841556549072
    6. '_=' → logprob: -4.889841556549072
    7. '_,' → logprob: -5.139841556549072
    8. ' res' → logprob: -5.264841556549072
    9. '(res' → logprob: -5.389841556549072
    10. '=res' → logprob: -6.514841556549072

Token 581: 'c' (ID: 66)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.48994749784469604
    2. 'b' → logprob: -1.2399475574493408
    3. 'res' → logprob: -2.739947557449341
    4. '_' → logprob: -4.864947319030762
    5. '(a' → logprob: -5.114947319030762
    6. 'c' → logprob: -5.239947319030762
    7. 'globals' → logprob: -5.614947319030762
    8. ')' → logprob: -5.739947319030762
    9. '_=' → logprob: -6.864947319030762
    10. '=' → logprob: -6.864947319030762

Token 582: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8040227890014648
    2. '=' → logprob: -0.9290227890014648
    3. ' if' → logprob: -2.179022789001465
    4. ' =' → logprob: -3.804022789001465
    5. ',' → logprob: -3.929022789001465
    6. 'res' → logprob: -6.554022789001465
    7. 'a' → logprob: -8.679022789001465
    8. ')' → logprob: -9.054022789001465
    9. ' ' → logprob: -9.054022789001465
    10. ',res' → logprob: -9.054022789001465

Token 583: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.00043102685594931245
    2. ' res' → logprob: -7.750431060791016
    3. '   ' → logprob: -15.750431060791016
    4. ' ' → logprob: -16.875431060791016
    5. '(res' → logprob: -17.125431060791016
    6. '  ' → logprob: -17.375431060791016
    7. '    ' → logprob: -17.625431060791016
    8. '           ' → logprob: -18.125431060791016
    9. '          ' → logprob: -18.625431060791016
    10. '       ' → logprob: -18.750431060791016

Token 584: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.048700347542762756
    2. 'res' → logprob: -3.0487003326416016
    3. '==' → logprob: -10.673700332641602
    4. 'if' → logprob: -10.798700332641602
    5. ' res' → logprob: -10.798700332641602
    6. '
' → logprob: -11.048700332641602
    7. '[
' → logprob: -11.673700332641602
    8. 'else' → logprob: -12.798700332641602
    9. '#' → logprob: -13.048700332641602
    10. '```' → logprob: -13.298700332641602

Token 585: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.3319124011322856e-05
    2. 'res' → logprob: -11.500022888183594
    3. ' ' → logprob: -12.375022888183594
    4. '[' → logprob: -12.375022888183594
    5. '
' → logprob: -12.750022888183594
    6. '   ' → logprob: -15.000022888183594
    7. '1' → logprob: -15.500022888183594
    8. '```' → logprob: -15.875022888183594
    9. '۲' → logprob: -15.875022888183594
    10. '(' → logprob: -16.000022888183594

Token 586: ']=='' (ID: 71177)
  Prédit: '==''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=='' → logprob: -0.020101504400372505
    2. '[' → logprob: -4.020101547241211
    3. '==' → logprob: -6.770101547241211
    4. ']=='' → logprob: -7.895101547241211
    5. ' =='' → logprob: -7.895101547241211
    6. ' ==' → logprob: -10.270101547241211
    7. '='' → logprob: -12.270101547241211
    8. '=="' → logprob: -12.520101547241211
    9. '==='' → logprob: -12.895101547241211
    10. ''' → logprob: -12.895101547241211

Token 587: 'A' (ID: 32)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.08721764385700226
    2. 'A' → logprob: -2.8372175693511963
    3. ''a' → logprob: -4.962217807769775
    4. ''' → logprob: -5.462217807769775
    5. 'res' → logprob: -5.587217807769775
    6. '2' → logprob: -5.962217807769775
    7. ''A' → logprob: -6.087217807769775
    8. '0' → logprob: -6.587217807769775
    9. '1' → logprob: -6.712217807769775
    10. 'True' → logprob: -7.462217807769775

Token 588: ''' (ID: 6)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.5828884840011597
    2. ' else' → logprob: -0.8328884840011597
    3. ',' → logprob: -5.457888603210449
    4. ')' → logprob: -6.457888603210449
    5. '=' → logprob: -8.20788860321045
    6. '==' → logprob: -8.83288860321045
    7. '!=' → logprob: -9.08288860321045
    8. ' ' → logprob: -9.45788860321045
    9. 'res' → logprob: -9.58288860321045
    10. '),' → logprob: -9.58288860321045

Token 589: ' else' (ID: 1203)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20429234206676483
    2. 'else' → logprob: -2.4542922973632812
    3. ' else' → logprob: -3.5792922973632812
    4. ',' → logprob: -3.9542922973632812
    5. '=res' → logprob: -3.9542922973632812
    6. ')' → logprob: -4.954292297363281
    7. ' =' → logprob: -5.079292297363281
    8. ',res' → logprob: -5.204292297363281
    9. 'res' → logprob: -5.329292297363281
    10. '==' → logprob: -5.579292297363281

Token 590: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.004055363591760397
    2. 'res' → logprob: -6.254055500030518
    3. ' a' → logprob: -6.504055500030518
    4. 'b' → logprob: -8.25405502319336
    5. '(a' → logprob: -8.87905502319336
    6. '   ' → logprob: -9.87905502319336
    7. '[a' → logprob: -10.37905502319336
    8. ')' → logprob: -10.62905502319336
    9. 'c' → logprob: -10.87905502319336
    10. ' (' → logprob: -11.12905502319336

Token 591: ')' (ID: 8)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08116985112428665
    2. ' =' → logprob: -2.581169843673706
    3. ')=' → logprob: -6.956170082092285
    4. ')' → logprob: -6.956170082092285
    5. '=res' → logprob: -8.206170082092285
    6. ',' → logprob: -10.456170082092285
    7. '   ' → logprob: -10.956170082092285
    8. ',res' → logprob: -11.206170082092285
    9. ' ' → logprob: -11.331170082092285
    10. '    ' → logprob: -11.581170082092285

Token 592: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.008649910800158978
    2. ' =' → logprob: -4.758649826049805
    3. ',' → logprob: -10.383649826049805
    4. '=
' → logprob: -12.758649826049805
    5. '   ' → logprob: -14.508649826049805
    6. ')=' → logprob: -14.758649826049805
    7. '=a' → logprob: -16.008649826049805
    8. '=

' → logprob: -16.133649826049805
    9. ' ' → logprob: -16.258649826049805
    10. ')' → logprob: -16.758649826049805

Token 593: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.0015109316445887089
    2. ' res' → logprob: -6.501511096954346
    3. '   ' → logprob: -12.001510620117188
    4. '(res' → logprob: -13.751510620117188
    5. '           ' → logprob: -14.501510620117188
    6. '	res' → logprob: -15.251510620117188
    7. '    ' → logprob: -15.376510620117188
    8. ' ' → logprob: -15.626510620117188
    9. '  ' → logprob: -16.001510620117188
    10. '       ' → logprob: -16.876510620117188

Token 594: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0012942852918058634
    2. '(' → logprob: -7.251294136047363
    3. '1' → logprob: -8.251294136047363
    4. ',' → logprob: -8.876294136047363
    5. '0' → logprob: -10.126294136047363
    6. '
' → logprob: -10.501294136047363
    7. '#' → logprob: -10.626294136047363
    8. '   ' → logprob: -11.001294136047363
    9. '[:' → logprob: -11.376294136047363
    10. ' (' → logprob: -11.501294136047363

Token 595: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0008383385138586164
    2. '1' → logprob: -7.125838279724121
    3. ' ' → logprob: -10.625838279724121
    4. '(' → logprob: -12.375838279724121
    5. '[' → logprob: -13.250838279724121
    6. '   ' → logprob: -13.500838279724121
    7. ':' → logprob: -13.500838279724121
    8. '01' → logprob: -15.750838279724121
    9. '  ' → logprob: -16.125839233398438
    10. '    ' → logprob: -16.563339233398438

Token 596: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00012642296496778727
    2. ',res' → logprob: -9.625126838684082
    3. ' ,' → logprob: -9.750126838684082
    4. ',
' → logprob: -13.875126838684082
    5. 'res' → logprob: -14.250126838684082
    6. '   ' → logprob: -15.625126838684082
    7. '],' → logprob: -16.250125885009766
    8. '           ' → logprob: -16.625125885009766
    9. '```' → logprob: -17.500125885009766
    10. '       ' → logprob: -17.750125885009766

Token 597: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.000553151941858232
    2. ' res' → logprob: -7.500553131103516
    3. '   ' → logprob: -16.000553131103516
    4. '	res' → logprob: -18.625553131103516
    5. ' ' → logprob: -19.125553131103516
    6. '  ' → logprob: -19.625553131103516
    7. '    ' → logprob: -20.375553131103516
    8. '       ' → logprob: -20.500553131103516
    9. '           ' → logprob: -20.750553131103516
    10. '$res' → logprob: -21.125553131103516

Token 598: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00020616286201402545
    2. '1' → logprob: -8.500205993652344
    3. '(' → logprob: -14.625205993652344
    4. ' [' → logprob: -14.875205993652344
    5. '
' → logprob: -14.875205993652344
    6. '```' → logprob: -14.875205993652344
    7. '][' → logprob: -15.250205993652344
    8. '[
' → logprob: -15.375205993652344
    9. '#' → logprob: -15.875205993652344
    10. ',' → logprob: -16.125205993652344

Token 599: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -16.875
    3. '   ' → logprob: -17.625
    4. '
' → logprob: -17.75
    5. '[' → logprob: -17.875
    6. '۱' → logprob: -18.5
    7. '0' → logprob: -18.75
    8. '' → logprob: -18.75
    9. '１' → logprob: -18.875
    10. '```' → logprob: -19.125

Token 600: ']
' (ID: 1592)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 601: '           ' (ID: 352)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.10564730316400528
    2. '   ' → logprob: -2.355647325515747
    3. '
' → logprob: -5.355647087097168
    4. 'answer' → logprob: -8.230647087097168
    5. '[i' → logprob: -8.855647087097168
    6. ' i' → logprob: -9.105647087097168
    7. '    
' → logprob: -9.605647087097168
    8. '           ' → logprob: -10.980647087097168
    9. '	i' → logprob: -11.105647087097168
    10. 'a' → logprob: -11.605647087097168

Token 602: ' answer' (ID: 6052)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6379405856132507
    2. 'i' → logprob: -0.7629405856132507
    3. '
' → logprob: -5.887940406799316
    4. '    
' → logprob: -6.762940406799316
    5. ' i' → logprob: -7.387940406799316
    6. '	i' → logprob: -8.387940406799316
    7. 'answer' (adapté à ' answer') → logprob: -8.762940406799316
    8. '[i' → logprob: -9.262940406799316
    9. '  ' → logprob: -9.762940406799316
    10. '<|end|>' → logprob: -10.137940406799316

Token 603: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0008531087078154087
    2. '.' → logprob: -7.125853061676025
    3. '.app' → logprob: -10.250853538513184
    4. '.extend' → logprob: -11.750853538513184
    5. ' .' → logprob: -12.750853538513184
    6. 'append' → logprob: -14.000853538513184
    7. '.push' → logprob: -14.625853538513184
    8. '.ap' → logprob: -14.875853538513184
    9. '.Append' → logprob: -15.500853538513184
    10. 'app' → logprob: -15.750853538513184

Token 604: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.00024335073248948902
    2. '(' → logprob: -8.500243186950684
    3. '('' → logprob: -10.625243186950684
    4. 'res' → logprob: -11.125243186950684
    5. '(
' → logprob: -15.125243186950684
    6. ' (' → logprob: -15.750243186950684
    7. '((' → logprob: -16.250244140625
    8. '("("' → logprob: -16.625244140625
    9. '(f' → logprob: -17.250244140625
    10. '(('' → logprob: -18.375244140625

Token 605: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: 0.0
    2. '[-' → logprob: -17.75
    3. '   ' → logprob: -18.0
    4. 'res' → logprob: -19.0
    5. ' [' → logprob: -19.125
    6. '```' → logprob: -19.25
    7. ''[' → logprob: -19.75
    8. '(' → logprob: -19.875
    9. '
' → logprob: -19.875
    10. ')[' → logprob: -19.875

Token 606: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.3676733690081164e-05
    2. '-' → logprob: -11.12502384185791
    3. '
' → logprob: -12.50002384185791
    4. ' ' → logprob: -13.37502384185791
    5. '0' → logprob: -14.00002384185791
    6. '[' → logprob: -14.25002384185791
    7. '```' → logprob: -14.25002384185791
    8. '   ' → logprob: -14.37502384185791
    9. '(' → logprob: -15.00002384185791
    10. ']' → logprob: -16.625022888183594

Token 607: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.550411151489243e-05
    2. ')
' → logprob: -10.875055313110352
    3. '])' → logprob: -11.125055313110352
    4. '')' → logprob: -11.375055313110352
    5. '")' → logprob: -11.875055313110352
    6. ' )' → logprob: -13.875055313110352
    7. ']' → logprob: -14.250055313110352
    8. '   ' → logprob: -15.000055313110352
    9. '))' → logprob: -15.250055313110352
    10. ')]' → logprob: -15.250055313110352

Token 608: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11155466735363007
    2. 'i' → logprob: -2.9865546226501465
    3. '
' → logprob: -3.2365546226501465
    4. '<|end|>' → logprob: -4.8615546226501465
    5. '```' → logprob: -5.1115546226501465
    6. '	i' → logprob: -7.2365546226501465
    7. ' i' → logprob: -7.3615546226501465
    8. '<|end|>' → logprob: -8.486555099487305
    9. '    
' → logprob: -8.986555099487305
    10. '[i' → logprob: -9.611555099487305

Token 609: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0020063186530023813
    2. 'i' → logprob: -6.377006530761719
    3. ' i' → logprob: -8.627006530761719
    4. '
' → logprob: -9.502006530761719
    5. '    
' → logprob: -10.002006530761719
    6. '	i' → logprob: -13.127006530761719
    7. '[i' → logprob: -13.877006530761719
    8. '        
' → logprob: -14.127006530761719
    9. ' 
' → logprob: -14.252006530761719
    10. ',i' → logprob: -16.37700653076172

Token 610: ' min' (ID: 1349)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.46825307607650757
    2. ' i' → logprob: -1.9682531356811523
    3. 'a' → logprob: -2.4682531356811523
    4. ' b' → logprob: -3.0932531356811523
    5. 'b' → logprob: -3.5932531356811523
    6. 'i' → logprob: -4.343253135681152
    7. ' ' → logprob: -4.343253135681152
    8. 's' → logprob: -4.593253135681152
    9. ' not' → logprob: -4.843253135681152
    10. 'n' → logprob: -4.968253135681152

Token 611: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -2.2961512513575144e-05
    2. '(' → logprob: -11.500022888183594
    3. 'a' → logprob: -11.500022888183594
    4. '([' → logprob: -13.750022888183594
    5. '(
' → logprob: -14.375022888183594
    6. '((' → logprob: -14.500022888183594
    7. '(answer' → logprob: -15.750022888183594
    8. ' (' → logprob: -16.000022888183594
    9. '[a' → logprob: -16.625022888183594
    10. '(A' → logprob: -17.250022888183594

Token 612: ',b' (ID: 17568)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05600512772798538
    2. ',b' → logprob: -2.9310052394866943
    3. ',c' → logprob: -6.931005001068115
    4. ' ,' → logprob: -9.556005477905273
    5. ',a' → logprob: -10.056005477905273
    6. ',
' → logprob: -11.181005477905273
    7. ',n' → logprob: -12.931005477905273
    8. '>' → logprob: -13.431005477905273
    9. '   ' → logprob: -13.556005477905273
    10. ' >' → logprob: -13.681005477905273

Token 613: ',c' (ID: 22261)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1312030702829361
    2. ',' → logprob: -2.3812031745910645
    3. ')>' → logprob: -4.0062031745910645
    4. ' >' → logprob: -5.1312031745910645
    5. '>' → logprob: -5.3812031745910645
    6. '   ' → logprob: -7.1312031745910645
    7. ' ,' → logprob: -8.506202697753906
    8. ')<=' → logprob: -9.006202697753906
    9. ',c' → logprob: -9.131202697753906
    10. ')==' → logprob: -9.256202697753906

Token 614: ')<' (ID: 62287)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01317882351577282
    2. ')>' → logprob: -5.138178825378418
    3. ' >' → logprob: -5.513178825378418
    4. '>' → logprob: -5.888178825378418
    5. ' ==' → logprob: -9.263178825378418
    6. ')==' → logprob: -9.513178825378418
    7. '==' → logprob: -9.763178825378418
    8. ' <=' → logprob: -10.263178825378418
    9. ')<=' → logprob: -10.263178825378418
    10. '   ' → logprob: -10.388178825378418

Token 615: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00015955790877342224
    2. ' ' → logprob: -8.75015926361084
    3. '=' → logprob: -14.62515926361084
    4. '   ' → logprob: -15.00015926361084
    5. '```' → logprob: -16.500160217285156
    6. '۰' → logprob: -16.750160217285156
    7. 'zero' → logprob: -16.750160217285156
    8. '０' → logprob: -17.250160217285156
    9. '  ' → logprob: -17.875160217285156
    10. ' ' → logprob: -18.062660217285156

Token 616: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.10031093657016754
    2. ':' → logprob: -2.850311040878296
    3. '       ' → logprob: -3.475311040878296
    4. '   ' → logprob: -5.350310802459717
    5. ' or' → logprob: -6.600310802459717
    6. ' :
' → logprob: -8.725311279296875
    7. '():
' → logprob: -9.100311279296875
    8. ':return' → logprob: -9.225311279296875
    9. '):
' → logprob: -9.725311279296875
    10. ' and' → logprob: -9.850311279296875

Token 617: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02817879244685173
    2. ' exit' → logprob: -3.7781786918640137
    3. 'exit' → logprob: -5.778178691864014
    4. '   ' → logprob: -6.778178691864014
    5. '	exit' → logprob: -7.528178691864014
    6. ' print' → logprob: -10.278179168701172
    7. ' ' → logprob: -10.778179168701172
    8. '        
' → logprob: -10.778179168701172
    9. 'print' → logprob: -10.903179168701172
    10. ' break' → logprob: -11.528179168701172

Token 618: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.04006977751851082
    2. 'exit' → logprob: -3.290069818496704
    3. '   ' → logprob: -6.540069580078125
    4. ' print' → logprob: -8.165069580078125
    5. '       ' → logprob: -8.790069580078125
    6. 'break' → logprob: -9.290069580078125
    7. ' exit' → logprob: -10.790069580078125
    8. 'answer' → logprob: -11.290069580078125
    9. '	print' → logprob: -11.790069580078125
    10. '	exit' → logprob: -12.290069580078125

Token 619: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.051663752645254135
    2. '"No' → logprob: -3.176663637161255
    3. '"' → logprob: -5.926663875579834
    4. '('' → logprob: -6.051663875579834
    5. 'No' → logprob: -6.426663875579834
    6. '(-' → logprob: -6.801663875579834
    7. '-' → logprob: -8.051663398742676
    8. '(NO' → logprob: -8.801663398742676
    9. '(No' → logprob: -8.926663398742676
    10. 'NO' → logprob: -9.426663398742676

Token 620: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -0.004074482247233391
    2. '-' → logprob: -6.004074573516846
    3. '"No' → logprob: -7.254074573516846
    4. 'Impossible' → logprob: -7.629074573516846
    5. '-No' → logprob: -8.254074096679688
    6. '"' → logprob: -9.629074096679688
    7. '"-' → logprob: -10.879074096679688
    8. ' No' → logprob: -11.004074096679688
    9. 'NO' → logprob: -11.379074096679688
    10. '-no' → logprob: -11.504074096679688

Token 621: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.2571095824241638
    2. '")
' → logprob: -1.6321096420288086
    3. '\n' → logprob: -3.5071096420288086
    4. ' ")' → logprob: -7.757109642028809
    5. '
' → logprob: -8.132109642028809
    6. '"' → logprob: -8.882109642028809
    7. ' ")
' → logprob: -9.007109642028809
    8. '");' → logprob: -9.757109642028809
    9. 't' → logprob: -10.382109642028809
    10. 'w' → logprob: -10.882109642028809

Token 622: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010631787590682507
    2. '
' → logprob: -7.001063346862793
    3. 'exit' → logprob: -9.376063346862793
    4. ' exit' → logprob: -10.751063346862793
    5. '        
' → logprob: -11.376063346862793
    6. '   ' → logprob: -11.626063346862793
    7. '```' → logprob: -11.626063346862793
    8. '           ' → logprob: -12.376063346862793
    9. '	exit' → logprob: -12.501063346862793
    10. '<|end|>' → logprob: -13.376063346862793

Token 623: ' exit' (ID: 10654)
  Prédit: ' exit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' exit' → logprob: -0.4474436938762665
    2. 'exit' (adapté à ' exit') → logprob: -1.1974437236785889
    3. '
' → logprob: -3.197443723678589
    4. '       ' → logprob: -4.57244348526001
    5. '	exit' → logprob: -5.32244348526001
    6. '        
' → logprob: -6.44744348526001
    7. ' 
' → logprob: -7.82244348526001
    8. '\n' → logprob: -8.322443962097168
    9. '    
' → logprob: -8.572443962097168
    10. '   ' → logprob: -10.197443962097168

Token 624: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06179007142782211
    2. '
' → logprob: -2.9367899894714355
    3. '    
' → logprob: -5.0617899894714355
    4. '        
' → logprob: -8.436790466308594
    5. '<|end|>' → logprob: -9.061790466308594
    6. '  
' → logprob: -9.436790466308594
    7. '
' → logprob: -10.436790466308594
    8. 'i' → logprob: -10.436790466308594
    9. '<|end|>' → logprob: -10.811790466308594
    10. '```' → logprob: -11.811790466308594

Token 625: '   ' (ID: 271)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.036723967641592026
    2. '   ' → logprob: -3.4117238521575928
    3. ' i' → logprob: -6.536724090576172
    4. '```' → logprob: -6.661724090576172
    5. '
' → logprob: -9.161724090576172
    6. '    
' → logprob: -9.411724090576172
    7. '	i' → logprob: -9.661724090576172
    8. '``' → logprob: -10.536724090576172
    9. '  
' → logprob: -11.036724090576172
    10. ' 
' → logprob: -11.536724090576172

Token 626: ' i' (ID: 575)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0036427148152142763
    2. 'i' (adapté à ' i') → logprob: -5.628642559051514
    3. ' i' → logprob: -10.128643035888672
    4. '    
' → logprob: -14.253643035888672
    5. '	i' → logprob: -14.503643035888672
    6. '<|end|>' → logprob: -14.753643035888672
    7. '```' → logprob: -15.253643035888672
    8. '
' → logprob: -15.503643035888672
    9. '<|end|>' → logprob: -15.503643035888672
    10. '++' → logprob: -16.253643035888672

Token 627: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.04861222952604294
    2. ' +=' → logprob: -3.048612117767334
    3. '+' → logprob: -10.798612594604492
    4. '=' → logprob: -12.798612594604492
    5. '++' → logprob: -14.298612594604492
    6. ']+=' → logprob: -14.423612594604492
    7. '+="' → logprob: -15.298612594604492
    8. '+='' → logprob: -15.548612594604492
    9. ' +' → logprob: -17.048612594604492
    10. ' ' → logprob: -17.423612594604492

Token 628: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. '```' → logprob: -18.625001907348633
    4. '１' → logprob: -19.875001907348633
    5. '   ' → logprob: -20.125001907348633
    6. '+' → logprob: -20.500001907348633
    7. '۱' → logprob: -21.000001907348633
    8. '१' → logprob: -22.000001907348633
    9. '
' → logprob: -22.187501907348633
    10. '=' → logprob: -22.250001907348633

Token 629: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00324687035754323
    2. 'else' → logprob: -6.503246784210205
    3. '```' → logprob: -6.628246784210205
    4. 'for' → logprob: -8.378247261047363
    5. 'if' → logprob: -9.503247261047363
    6. '
' → logprob: -9.628247261047363
    7. 'answer' → logprob: -11.003247261047363
    8. '``' → logprob: -11.628247261047363
    9. ' print' → logprob: -11.878247261047363
    10. '<|end|>' → logprob: -12.503247261047363

Token 630: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0007524513057433069
    2. '```' → logprob: -7.2507524490356445
    3. 'for' → logprob: -10.875752449035645
    4. '``' → logprob: -11.875752449035645
    5. 'else' → logprob: -12.125752449035645
    6. '
' → logprob: -12.250752449035645
    7. 'if' → logprob: -12.500752449035645
    8. 'answer' → logprob: -13.250752449035645
    9. ' print' → logprob: -14.375752449035645
    10. '  
' → logprob: -16.12575340270996

Token 631: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.203249990940094
    2. '('' → logprob: -1.7032499313354492
    3. '(' → logprob: -6.578249931335449
    4. '(*' → logprob: -8.82824993133545
    5. '()' → logprob: -9.20324993133545
    6. '("")' → logprob: -9.45324993133545
    7. '("\' → logprob: -9.95324993133545
    8. '(""' → logprob: -10.82824993133545
    9. '('\' → logprob: -10.95324993133545
    10. '("("' → logprob: -11.07824993133545

Token 632: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -5.228561349213123e-05
    2. '".' → logprob: -10.500052452087402
    3. '"' → logprob: -10.750052452087402
    4. 'YES' → logprob: -13.250052452087402
    5. '
' → logprob: -13.750052452087402
    6. ' Yes' → logprob: -15.875052452087402
    7. '\
' → logprob: -16.625051498413086
    8. '```' → logprob: -17.000051498413086
    9. 'Possible' → logprob: -17.250051498413086
    10. '\n' → logprob: -17.500051498413086

Token 633: '")
' (ID: 1896)
  Prédit: '")
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")
' → logprob: -0.3617960214614868
    2. '\n' → logprob: -1.7367960214614868
    3. '")' → logprob: -2.6117959022521973
    4. ')
' → logprob: -2.9867959022521973
    5. '"' → logprob: -6.861795902252197
    6. '
' → logprob: -7.111795902252197
    7. '"
' → logprob: -7.236795902252197
    8. 'print' → logprob: -7.736795902252197
    9. '')
' → logprob: -8.361796379089355
    10. '"\' → logprob: -9.111796379089355

Token 634: 'for' (ID: 1938)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.03079383261501789
    2. 'for' → logprob: -3.5307939052581787
    3. '\n' → logprob: -7.1557936668396
    4. '"\' → logprob: -8.780794143676758
    5. '
' → logprob: -9.530794143676758
    6. ''\' → logprob: -10.780794143676758
    7. '\' → logprob: -13.030794143676758
    8. ' print' → logprob: -13.030794143676758
    9. ' for' → logprob: -13.155794143676758
    10. '    
' → logprob: -13.280794143676758

Token 635: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.18175475299358368
    2. 'ch' → logprob: -2.4317548274993896
    3. 'ans' → logprob: -2.9317548274993896
    4. 'c' → logprob: -4.8067545890808105
    5. ' x' → logprob: -5.1817545890808105
    6. 'v' → logprob: -5.9317545890808105
    7. 'token' → logprob: -6.8067545890808105
    8. '_' → logprob: -6.9317545890808105
    9. 'char' → logprob: -7.5567545890808105
    10. ' ch' → logprob: -7.6817545890808105

Token 636: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.632615327835083
    2. 'in' → logprob: -0.757615327835083
    3. 'n' → logprob: -12.507615089416504
    4. ' ' → logprob: -12.757615089416504
    5. 'print' → logprob: -13.382615089416504
    6. '	in' → logprob: -13.507615089416504
    7. '_in' → logprob: -13.882615089416504
    8. 'i' → logprob: -14.007615089416504
    9. 'import' → logprob: -14.007615089416504
    10. '   ' → logprob: -14.257615089416504

Token 637: ' answer' (ID: 6052)
  Prédit: 'answer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'answer' → logprob: -0.0002613358374219388
    2. ' answer' → logprob: -8.250261306762695
    3. '(answer' → logprob: -19.500261306762695
    4. 'range' → logprob: -20.125261306762695
    5. '	answer' → logprob: -21.375261306762695
    6. 'Answer' → logprob: -22.500261306762695
    7. '   ' → logprob: -22.750261306762695
    8. 'print' → logprob: -23.125261306762695
    9. ' ' → logprob: -24.000261306762695
    10. '  ' → logprob: -24.625261306762695

Token 638: ':' (ID: 25)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.1966833770275116
    2. ':' → logprob: -2.321683406829834
    3. ':
' → logprob: -2.571683406829834
    4. '.print' → logprob: -6.196683406829834
    5. '(print' → logprob: -7.446683406829834
    6. ' print' → logprob: -7.946683406829834
    7. '():
' → logprob: -8.071682929992676
    8. '.println' → logprob: -8.196682929992676
    9. 'prints' → logprob: -9.196682929992676
    10. '   ' → logprob: -9.321682929992676

Token 639: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47420939803123474
    2. 'print' → logprob: -0.9742094278335571
    3. ' print' → logprob: -8.974209785461426
    4. '	print' → logprob: -12.724209785461426
    5. '```' → logprob: -13.224209785461426
    6. '       ' → logprob: -14.724209785461426
    7. ' ' → logprob: -14.724209785461426
    8. '  ' → logprob: -16.84920883178711
    9. '
' → logprob: -17.72420883178711
    10. '#print' → logprob: -17.84920883178711

Token 640: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -2.2200749754119897e-06
    2. 'x' → logprob: -13.125001907348633
    3. '(' → logprob: -15.625001907348633
    4. '((' → logprob: -17.500001907348633
    5. '()' → logprob: -18.375001907348633
    6. '(
' → logprob: -18.750001907348633
    7. 'f' → logprob: -19.625001907348633
    8. '(f' → logprob: -19.875001907348633
    9. '{x' → logprob: -20.000001907348633
    10. ' (' → logprob: -20.250001907348633

Token 641: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005779477301985025
    2. '())' → logprob: -5.255779266357422
    3. '()' → logprob: -7.630779266357422
    4. '")' → logprob: -10.630779266357422
    5. '(""))' → logprob: -11.505779266357422
    6. ' )' → logprob: -12.005779266357422
    7. '<|end|>' → logprob: -12.130779266357422
    8. '("")' → logprob: -12.380779266357422
    9. '(' → logprob: -12.755779266357422
    10. '')' → logprob: -13.255779266357422


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 639
Tokens correctement prédits (1ère position, stricte): 290
Tokens correctement prédits (1ère position, avec adaptation): 324
Tokens correctement prédits (top 10): 567
Précision stricte (1ère position): 45.38%
Précision adaptée (1ère position): 50.70%
Précision (top 10): 88.73%
================================================================================
