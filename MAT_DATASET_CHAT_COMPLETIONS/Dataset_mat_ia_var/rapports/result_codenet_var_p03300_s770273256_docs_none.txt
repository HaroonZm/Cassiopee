================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:13:39
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from itertools import accumulate

def search_ab(sss, cursor):
    ai = aaa.index(cursor)
    tmp_cur = bbb[ai]
    max_cur = sss.index(0, cursor)
    repeat = 1
    while tmp_cur < max_cur:
        cur = s.find('a', tmp_cur, max_cur)
        if cur == -1:
            break
        ai = aaa.index(cur, ai)
        tmp_cur = bbb[ai]
        repeat += 1
    return repeat, max_cur + 1

def search_ba(sss, cursor):
    first_bi = bbb.index(cursor)
    max_cursor = sss.index(0, cursor)
    last_bi = aaa.index(max_cursor)
    tmp_buf = [''] * (last_bi - first_bi + 1) * 2
    tmp_max = ''
    for i in range(last_bi, first_bi - 1, -1):
        tmp_buf[aaa[i] - cursor] = 'a'
        tmp_buf[bbb[i] - cursor] = 'b'
        tmp = ''.join(tmp_buf)
        if tmp > tmp_max:
            tmp_max = tmp
    return tmp_max, max_cursor + 1

def integrate(parts_b):
    tmp_max = ''
    for pb in reversed(parts_b):
        tmp = pb + tmp_max
        if tmp > tmp_max:
            tmp_max = tmp
    return tmp_max

n = int(input())
s = input()

n2 = n * 2
sss = []
aaa, bbb = [], []
for i, c in enumerate(s):
    if c == 'a':
        aaa.append(i)
        sss.append(-1)
    else:
        bbb.append(i)
        sss.append(1)
sss = list(accumulate(sss))
repeats_a = []
parts_b = []
last_b_cur = 0
cursor = 0
while cursor < n2:
    c = sss[cursor]
    if c < 0:
        repeat, cursor = search_ab(sss, cursor)
        repeats_a.append((cursor, repeat))
    else:
        tmp, cursor = search_ba(sss, cursor)
        parts_b.append(tmp)
        last_b_cur = cursor
print(integrate(parts_b) + 'ab' * sum(r for c, r in repeats_a if c > last_b_cur))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' itertools' (ID: 103178)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' accumulate' (ID: 74226)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'com' → logprob: -1.1646274328231812
    2. 'product' → logprob: -1.4146274328231812
    3. 'per' → logprob: -1.7896274328231812
    4. 'count' → logprob: -2.0396275520324707
    5. 'cycle' → logprob: -2.6646275520324707
    6. 'group' → logprob: -3.2896275520324707
    7. 'chain' → logprob: -3.4146275520324707
    8. 'acc' → logprob: -6.039627552032471
    9. 'is' → logprob: -6.539627552032471
    10. 'zip' → logprob: -6.914627552032471

Token 4: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0001669485354796052
    2. '(
' → logprob: -9.250166893005371
    3. '.' → logprob: -10.375166893005371
    4. ',' → logprob: -11.125166893005371
    5. '\(' → logprob: -11.750166893005371
    6. '()' → logprob: -12.375166893005371
    7. ' (' → logprob: -12.625166893005371
    8. '```' → logprob: -13.500166893005371
    9. '(

' → logprob: -13.625166893005371
    10. '('' → logprob: -14.000166893005371

Token 5: 'def' (ID: 1314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0008777545881457627
    2. '(
' → logprob: -7.125877857208252
    3. '\(' → logprob: -10.625877380371094
    4. ',' → logprob: -11.375877380371094
    5. '.' → logprob: -12.000877380371094
    6. '\n' → logprob: -12.500877380371094
    7. '```' → logprob: -12.500877380371094
    8. '\' → logprob: -12.500877380371094
    9. 'def' → logprob: -12.625877380371094
    10. '(

' → logprob: -12.875877380371094

Token 6: ' search' (ID: 3684)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0027708823326975107
    2. ' accumulate' → logprob: -6.252770900726318
    3. ' calculate' → logprob: -8.37777042388916
    4. ' space' → logprob: -8.87777042388916
    5. ' accumulated' → logprob: -9.50277042388916
    6. ' ' → logprob: -9.62777042388916
    7. ' add' → logprob: -9.87777042388916
    8. ' sum' → logprob: -9.87777042388916
    9. ' accumulator' → logprob: -10.12777042388916
    10. ' process' → logprob: -10.75277042388916

Token 7: '_ab' (ID: 53632)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.290204793214798
    2. '_' → logprob: -1.4152047634124756
    3. '_space' → logprob: -5.790205001831055
    4. ' (' → logprob: -6.165205001831055
    5. '(query' → logprob: -6.915205001831055
    6. '_(' → logprob: -7.040205001831055
    7. '_search' → logprob: -8.790205001831055
    8. '_p' → logprob: -8.915205001831055
    9. '(search' → logprob: -9.040205001831055
    10. ' ' → logprob: -9.290205001831055

Token 8: '(ss' (ID: 68597)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7642145156860352
    2. 'c' → logprob: -1.0142145156860352
    3. 'solute' → logprob: -2.764214515686035
    4. 'b' → logprob: -3.889214515686035
    5. '_test' → logprob: -4.389214515686035
    6. 'a' → logprob: -4.514214515686035
    7. '_s' → logprob: -4.889214515686035
    8. 'cd' → logprob: -4.889214515686035
    9. 'test' → logprob: -5.014214515686035
    10. 'spath' → logprob: -5.514214515686035

Token 9: 's' (ID: 82)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.11163495481014252
    2. ',' → logprob: -3.8616349697113037
    3. ')' → logprob: -4.111634731292725
    4. 'e' → logprob: -4.361634731292725
    5. 'earch' → logprob: -4.986634731292725
    6. ':' → logprob: -5.111634731292725
    7. 'a' → logprob: -5.111634731292725
    8. 'er' → logprob: -5.361634731292725
    9. 's' → logprob: -5.486634731292725
    10. 'for' → logprob: -5.736634731292725

Token 10: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.30641263723373413
    2. ',' → logprob: -1.556412696838379
    3. ')' → logprob: -3.806412696838379
    4. ':' → logprob: -4.181412696838379
    5. '[' → logprob: -4.806412696838379
    6. 's' → logprob: -5.181412696838379
    7. ' ):' → logprob: -8.181412696838379
    8. '[]):' → logprob: -8.306412696838379
    9. ' ,' → logprob: -8.556412696838379
    10. '):
' → logprob: -8.681412696838379

Token 11: ' cursor' (ID: 14944)
  Prédit: ' target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' target' → logprob: -0.8959981799125671
    2. ' pattern' → logprob: -1.645998239517212
    3. 'target' → logprob: -2.645998239517212
    4. ' key' → logprob: -3.020998239517212
    5. 'pattern' → logprob: -3.395998239517212
    6. ' t' → logprob: -3.520998239517212
    7. ' tgt' → logprob: -3.895998239517212
    8. ' sub' → logprob: -4.020998001098633
    9. ' s' → logprob: -4.020998001098633
    10. ' arr' → logprob: -4.145998001098633

Token 12: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.06741464883089066
    2. '=' → logprob: -2.9424147605895996
    3. ')' → logprob: -5.3174147605896
    4. ',' → logprob: -5.9424147605896
    5. '_pos' → logprob: -6.0674147605896
    6. '_positions' → logprob: -7.4424147605896
    7. '_position' → logprob: -7.4424147605896
    8. '):
' → logprob: -7.6924147605896
    9. ' ):' → logprob: -8.192414283752441
    10. 's' → logprob: -8.567414283752441

Token 13: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.1946055889129639
    2. '(' → logprob: -1.5696055889129639
    3. '[' → logprob: -1.6946055889129639
    4. '   ' → logprob: -2.194605588912964
    5. ' :' → logprob: -2.819605588912964
    6. ''' → logprob: -2.819605588912964
    7. ' ' → logprob: -4.069605827331543
    8. '    ' → logprob: -4.694605827331543
    9. '[:]' → logprob: -4.819605827331543
    10. ' (' → logprob: -5.194605827331543

Token 14: ' ai' (ID: 8440)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.2259531021118164
    2. ' for' → logprob: -1.2259531021118164
    3. '   ' → logprob: -1.9759531021118164
    4. 'for' → logprob: -2.8509531021118164
    5. ''' → logprob: -3.2259531021118164
    6. '[' → logprob: -3.4759531021118164
    7. '_' → logprob: -4.100953102111816
    8. '`' → logprob: -4.225953102111816
    9. ':' → logprob: -4.475953102111816
    10. ' return' → logprob: -4.725953102111816

Token 15: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5960652232170105
    2. 'r' → logprob: -1.5960652828216553
    3. 'm' → logprob: -1.7210652828216553
    4. ' =' → logprob: -3.2210652828216553
    5. 'nd' → logprob: -3.7210652828216553
    6. 'rc' → logprob: -6.846065044403076
    7. 'dx' → logprob: -7.596065044403076
    8. 'ndice' → logprob: -7.721065044403076
    9. '=r' → logprob: -8.346065521240234
    10. 'n' → logprob: -8.721065521240234

Token 16: ' aaa' (ID: 170080)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.679218590259552
    2. ' accumulate' → logprob: -1.1792185306549072
    3. '0' → logprob: -2.9292185306549072
    4. ' ' → logprob: -3.3042185306549072
    5. 'ss' → logprob: -3.8042185306549072
    6. ' next' → logprob: -4.179218769073486
    7. ' acc' → logprob: -4.554218769073486
    8. 'next' → logprob: -4.804218769073486
    9. ' list' → logprob: -4.804218769073486
    10. 'list' → logprob: -4.929218769073486

Token 17: '.index' (ID: 9736)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0391432046890259
    2. 'c' → logprob: -1.4141432046890259
    3. 'cc' → logprob: -1.9141432046890259
    4. '=' → logprob: -3.2891430854797363
    5. '.' → logprob: -3.5391430854797363
    6. '_' → logprob: -3.9141430854797363
    7. 's' → logprob: -3.9141430854797363
    8. 'b' → logprob: -3.9141430854797363
    9. 'g' → logprob: -4.289143085479736
    10. '+' → logprob: -4.664143085479736

Token 18: '(cursor' (ID: 50526)
  Prédit: '(ss'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ss' → logprob: -0.036275822669267654
    2. '(' → logprob: -3.411275863647461
    3. '('' → logprob: -6.661275863647461
    4. '((' → logprob: -7.036275863647461
    5. '(cursor' → logprob: -8.786275863647461
    6. '(
' → logprob: -9.286275863647461
    7. '(s' → logprob: -10.036275863647461
    8. ' (' → logprob: -10.536275863647461
    9. '("("' → logprob: -10.536275863647461
    10. 's' → logprob: -11.286275863647461

Token 19: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002762675518169999
    2. '[' → logprob: -6.252762794494629
    3. '(' → logprob: -8.002762794494629
    4. ']' → logprob: -8.127762794494629
    5. '])' → logprob: -10.252762794494629
    6. ')]' → logprob: -10.502762794494629
    7. ' )' → logprob: -10.877762794494629
    8. '')' → logprob: -11.127762794494629
    9. ')
' → logprob: -11.502762794494629
    10. '))' → logprob: -11.752762794494629

Token 20: '   ' (ID: 271)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8088189363479614
    2. ')' → logprob: -0.9338189363479614
    3. '(' → logprob: -2.433818817138672
    4. '.' → logprob: -2.933818817138672
    5. '_' → logprob: -4.558818817138672
    6. ']' → logprob: -6.183818817138672
    7. '[
' → logprob: -7.058818817138672
    8. '('.')' → logprob: -7.058818817138672
    9. '   ' → logprob: -7.433818817138672
    10. '```' → logprob: -7.683818817138672

Token 21: ' tmp' (ID: 8919)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.018011566251516342
    2. ' +' → logprob: -4.768011569976807
    3. '+
' → logprob: -5.643011569976807
    4. ' ' → logprob: -6.643011569976807
    5. ')' → logprob: -6.768011569976807
    6. '   ' → logprob: -7.268011569976807
    7. ']' → logprob: -7.768011569976807
    8. '[' → logprob: -7.893011569976807
    9. '(' → logprob: -8.143011093139648
    10. 's' → logprob: -8.393011093139648

Token 22: '_cur' (ID: 46382)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10635505616664886
    2. '=' → logprob: -2.9813549518585205
    3. '_' → logprob: -3.4813549518585205
    4. 's' → logprob: -4.2313551902771
    5. '_s' → logprob: -7.4813551902771
    6. '[' → logprob: -7.6063551902771
    7. '.append' → logprob: -7.8563551902771
    8. ' _' → logprob: -7.9813551902771
    9. ' ' → logprob: -8.106354713439941
    10. ')' → logprob: -8.106354713439941

Token 23: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00933857075870037
    2. ' =' → logprob: -5.63433837890625
    3. '=' → logprob: -6.25933837890625
    4. '=s' → logprob: -6.63433837890625
    5. '```' → logprob: -6.75933837890625
    6. 'SOR' → logprob: -8.13433837890625
    7. '_s' → logprob: -8.63433837890625
    8. '_index' → logprob: -9.00933837890625
    9. '_' → logprob: -9.13433837890625
    10. '_pos' → logprob: -9.25933837890625

Token 24: ' b' (ID: 287)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.87690669298172
    2. ' aaa' → logprob: -0.87690669298172
    3. ' ai' → logprob: -2.751906633377075
    4. ' cursor' → logprob: -3.501906633377075
    5. ' ss' → logprob: -3.751906633377075
    6. 'ss' → logprob: -4.501906871795654
    7. 'sss' → logprob: -4.501906871795654
    8. 'ai' → logprob: -5.126906871795654
    9. ' ' → logprob: -5.251906871795654
    10. 's' → logprob: -5.626906871795654

Token 25: 'bb' (ID: 10029)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.4608687162399292
    2. 'bb' → logprob: -1.5858687162399292
    3. 'ase' → logprob: -2.2108688354492188
    4. 'bbb' → logprob: -2.3358688354492188
    5. 'uf' → logprob: -2.4608688354492188
    6. 'uffer' → logprob: -2.7108688354492188
    7. 'ss' → logprob: -4.085868835449219
    8. 'uff' → logprob: -4.085868835449219
    9. 'cursor' → logprob: -4.210868835449219
    10. '[' → logprob: -4.460868835449219

Token 26: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.007853499613702297
    2. '[c' → logprob: -6.1328535079956055
    3. '[:' → logprob: -6.7578535079956055
    4. '[a' → logprob: -7.0078535079956055
    5. '   ' → logprob: -7.3828535079956055
    6. '.index' → logprob: -7.5078535079956055
    7. '[:]' → logprob: -7.5078535079956055
    8. '[cur' → logprob: -7.6328535079956055
    9. '.' → logprob: -8.132853507995605
    10. '[i' → logprob: -8.632853507995605

Token 27: 'ai' (ID: 1361)
  Prédit: 'ai'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ai' → logprob: -0.01179043110460043
    2. ' ai' → logprob: -4.7617902755737305
    3. '(ai' → logprob: -6.6367902755737305
    4. '0' → logprob: -7.5117902755737305
    5. '-ai' → logprob: -8.01179027557373
    6. '_ai' → logprob: -8.76179027557373
    7. ' ' → logprob: -9.26179027557373
    8. ']' → logprob: -9.26179027557373
    9. '-' → logprob: -9.38679027557373
    10. ':' → logprob: -9.63679027557373

Token 28: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.09638107568025589
    2. ']+' → logprob: -2.721381187438965
    3. '+' → logprob: -3.846381187438965
    4. ':]' → logprob: -6.346381187438965
    5. ')]' → logprob: -7.346381187438965
    6. ')' → logprob: -7.471381187438965
    7. '])' → logprob: -7.721381187438965
    8. ':' → logprob: -7.971381187438965
    9. ' +' → logprob: -7.971381187438965
    10. ' ]' → logprob: -8.096381187438965

Token 29: '   ' (ID: 271)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4748094975948334
    2. '   ' → logprob: -1.8498095273971558
    3. '[' → logprob: -2.474809408187866
    4. '.' → logprob: -3.224809408187866
    5. ')' → logprob: -3.224809408187866
    6. '<|end|>' → logprob: -4.349809646606445
    7. ' +' → logprob: -4.599809646606445
    8. ' ' → logprob: -4.724809646606445
    9. ']' → logprob: -5.099809646606445
    10. '    ' → logprob: -5.474809646606445

Token 30: ' max' (ID: 2999)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.13004170358181
    2. '[' → logprob: -2.7550415992736816
    3. '.' → logprob: -3.7550415992736816
    4. ']' → logprob: -4.630041599273682
    5. ')' → logprob: -5.005041599273682
    6. ' ' → logprob: -5.255041599273682
    7. ' +' → logprob: -5.380041599273682
    8. '=' → logprob: -6.380041599273682
    9. '   ' → logprob: -6.880041599273682
    10. '-' → logprob: -7.505041599273682

Token 31: '_cur' (ID: 46382)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.02206701785326004
    2. '_val' → logprob: -4.772067070007324
    3. '_idx' → logprob: -5.397067070007324
    4. '_len' → logprob: -5.897067070007324
    5. '_tmp' → logprob: -6.272067070007324
    6. '(' → logprob: -6.397067070007324
    7. '_index' → logprob: -7.522067070007324
    8. '_cursor' → logprob: -8.022067070007324
    9. '_acc' → logprob: -8.147067070007324
    10. '(tmp' → logprob: -8.272067070007324

Token 32: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.39129024744033813
    2. '=' → logprob: -1.1412901878356934
    3. '_idx' → logprob: -6.016290187835693
    4. '_' → logprob: -7.016290187835693
    5. '=max' → logprob: -8.266290664672852
    6. '_index' → logprob: -8.266290664672852
    7. ')' → logprob: -8.891290664672852
    8. ',' → logprob: -8.891290664672852
    9. 'idx' → logprob: -9.766290664672852
    10. '+' → logprob: -10.516290664672852

Token 33: ' s' (ID: 265)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.1451134979724884
    2. ' tmp' → logprob: -2.270113468170166
    3. 'tmp' → logprob: -4.520113468170166
    4. 'max' → logprob: -4.520113468170166
    5. ' b' → logprob: -5.645113468170166
    6. ' len' → logprob: -6.020113468170166
    7. ' ' → logprob: -6.895113468170166
    8. ' cursor' → logprob: -7.395113468170166
    9. 'len' → logprob: -7.520113468170166
    10. ' sum' → logprob: -8.145113945007324

Token 34: 'ss' (ID: 1087)
  Prédit: 'ss'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ss' → logprob: -0.03571143001317978
    2. 's' → logprob: -3.6607115268707275
    3. 'um' → logprob: -5.035711288452148
    4. 'sss' → logprob: -7.160711288452148
    5. '[max' → logprob: -8.285711288452148
    6. '[' → logprob: -8.785711288452148
    7. 'tr' → logprob: -9.035711288452148
    8. 'sum' → logprob: -9.035711288452148
    9. 'max' → logprob: -9.285711288452148
    10. 'sm' → logprob: -9.285711288452148

Token 35: '.index' (ID: 9736)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.011609814129769802
    2. '.' → logprob: -5.26161003112793
    3. '[:' → logprob: -6.26161003112793
    4. '.index' → logprob: -6.26161003112793
    5. '   ' → logprob: -7.51161003112793
    6. '[max' → logprob: -8.26161003112793
    7. '.find' → logprob: -8.51161003112793
    8. ')' → logprob: -8.76161003112793
    9. '.count' → logprob: -8.88661003112793
    10. 'len' → logprob: -9.13661003112793

Token 36: '(' (ID: 7)
  Prédit: '(tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tmp' → logprob: -0.3336936831474304
    2. '(' → logprob: -1.4586937427520752
    3. '(cursor' → logprob: -3.708693742752075
    4. '('' → logprob: -4.208693504333496
    5. '(max' → logprob: -4.708693504333496
    6. ' (' → logprob: -7.083693504333496
    7. '(ss' → logprob: -7.583693504333496
    8. '((' → logprob: -8.333693504333496
    9. '("("' → logprob: -8.333693504333496
    10. '(cur' → logprob: -8.833693504333496

Token 37: '0' (ID: 15)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.722044825553894
    2. '(tmp' → logprob: -0.847044825553894
    3. ' tmp' → logprob: -3.2220449447631836
    4. '('' → logprob: -4.222044944763184
    5. '(' → logprob: -4.722044944763184
    6. ''' → logprob: -4.722044944763184
    7. 'cursor' → logprob: -6.097044944763184
    8. '(cursor' → logprob: -6.472044944763184
    9. '')' → logprob: -6.722044944763184
    10. ')' → logprob: -6.972044944763184

Token 38: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0026636465918272734
    2. ')+' → logprob: -6.002663612365723
    3. ' )' → logprob: -9.127663612365723
    4. ')
' → logprob: -10.252663612365723
    5. '+' → logprob: -11.002663612365723
    6. '))' → logprob: -11.502663612365723
    7. ',' → logprob: -12.877663612365723
    8. '),' → logprob: -13.252663612365723
    9. ')

' → logprob: -13.252663612365723
    10. '   ' → logprob: -13.627663612365723

Token 39: ' cursor' (ID: 14944)
  Prédit: ' ai'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ai' → logprob: -0.1573384404182434
    2. 'ai' → logprob: -2.4073383808135986
    3. ' tmp' → logprob: -3.0323383808135986
    4. 'tmp' → logprob: -5.407338619232178
    5. ')' → logprob: -6.907338619232178
    6. ' ' → logprob: -7.407338619232178
    7. ' )' → logprob: -7.907338619232178
    8. '(ai' → logprob: -8.78233814239502
    9. '  ' → logprob: -8.90733814239502
    10. ' cursor' → logprob: -9.15733814239502

Token 40: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0616183765232563
    2. '+' → logprob: -2.9366183280944824
    3. ')+' → logprob: -5.811618328094482
    4. ' )' → logprob: -5.936618328094482
    5. ' +' → logprob: -6.936618328094482
    6. '+)' → logprob: -9.81161880493164
    7. ')
' → logprob: -11.06161880493164
    8. ' ' → logprob: -11.43661880493164
    9. '))' → logprob: -11.93661880493164
    10. '   ' → logprob: -12.43661880493164

Token 41: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.15585382282733917
    2. '+' → logprob: -2.030853748321533
    3. '<|end|>' → logprob: -5.280853748321533
    4. '   ' → logprob: -6.280853748321533
    5. ' ' → logprob: -6.405853748321533
    6. '(' → logprob: -6.780853748321533
    7. ':' → logprob: -7.780853748321533
    8. ']' → logprob: -7.905853748321533
    9. ' +' → logprob: -7.905853748321533
    10. '[' → logprob: -8.280854225158691

Token 42: ' repeat' (ID: 22962)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.20869947969913483
    2. ')' → logprob: -2.4586994647979736
    3. '   ' → logprob: -3.2086994647979736
    4. ' +' → logprob: -3.5836994647979736
    5. ' ' → logprob: -4.208699703216553
    6. '  ' → logprob: -6.083699703216553
    7. '
' → logprob: -6.208699703216553
    8. ' if' → logprob: -6.208699703216553
    9. '<|end|>' → logprob: -6.208699703216553
    10. ':' → logprob: -6.458699703216553

Token 43: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6988282203674316
    2. '(' → logprob: -0.8238282203674316
    3. 's' → logprob: -4.448828220367432
    4. ' =' → logprob: -4.448828220367432
    5. ' ' → logprob: -4.698828220367432
    6. '=' → logprob: -4.823828220367432
    7. 'd' → logprob: -5.323828220367432
    8. '_count' → logprob: -5.323828220367432
    9. ' (' → logprob: -5.823828220367432
    10. '   ' → logprob: -6.198828220367432

Token 44: ' ' (ID: 220)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.762329638004303
    2. ' ' → logprob: -1.5123295783996582
    3. ' tmp' → logprob: -1.7623295783996582
    4. ' s' → logprob: -3.137329578399658
    5. '0' → logprob: -3.387329578399658
    6. ' cursor' → logprob: -4.137329578399658
    7. ' b' → logprob: -4.262329578399658
    8. 'tmp' → logprob: -4.387329578399658
    9. 'max' → logprob: -4.512329578399658
    10. '1' → logprob: -5.762329578399658

Token 45: '1' (ID: 16)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.2265015840530396
    2. ' max' → logprob: -1.4765015840530396
    3. ' tmp' → logprob: -2.22650146484375
    4. 'tmp' → logprob: -2.22650146484375
    5. ' b' → logprob: -2.60150146484375
    6. '0' → logprob: -2.72650146484375
    7. ' s' → logprob: -3.47650146484375
    8. ' ' → logprob: -3.85150146484375
    9. '1' → logprob: -4.10150146484375
    10. 'sss' → logprob: -4.10150146484375

Token 46: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3777606785297394
    2. '<|end|>' → logprob: -1.502760648727417
    3. '   ' → logprob: -4.252760887145996
    4. '+' → logprob: -4.377760887145996
    5. ' ' → logprob: -4.502760887145996
    6. ')' → logprob: -4.752760887145996
    7. '<|end|>' → logprob: -4.877760887145996
    8. ' 
' → logprob: -5.002760887145996
    9. '  
' → logprob: -5.377760887145996
    10. '    
' → logprob: -5.502760887145996

Token 47: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 48: ' while' (ID: 2049)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8964546918869019
    2. '   ' → logprob: -1.3964546918869019
    3. ' ' → logprob: -1.6464546918869019
    4. ' 
' → logprob: -3.1464548110961914
    5. ')' → logprob: -3.8964548110961914
    6. '<|end|>' → logprob: -4.021454811096191
    7. '    
' → logprob: -4.646454811096191
    8. ' if' → logprob: -4.771454811096191
    9. '  
' → logprob: -4.896454811096191
    10. '   
' → logprob: -5.271454811096191

Token 49: ' tmp' (ID: 8919)
  Prédit: ' tmp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tmp' → logprob: -0.4174540638923645
    2. ' repeat' → logprob: -1.6674540042877197
    3. ' max' → logprob: -2.7924540042877197
    4. ' cursor' → logprob: -3.1674540042877197
    5. 'tmp' → logprob: -3.5424540042877197
    6. 'repeat' → logprob: -5.042454242706299
    7. ' True' → logprob: -5.167454242706299
    8. ' ' → logprob: -6.667454242706299
    9. '(tmp' → logprob: -6.667454242706299
    10. ' ai' → logprob: -6.917454242706299

Token 50: '_cur' (ID: 46382)
  Prédit: '_cur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cur' → logprob: -0.00025228000595234334
    2. '_' → logprob: -8.750252723693848
    3. '[cur' → logprob: -10.375252723693848
    4. '<' → logprob: -11.250252723693848
    5. '_cursor' → logprob: -11.250252723693848
    6. 'cur' → logprob: -11.625252723693848
    7. ' _' → logprob: -12.125252723693848
    8. '_tmp' → logprob: -12.625252723693848
    9. ' <' → logprob: -13.000252723693848
    10. '<_' → logprob: -13.375252723693848

Token 51: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.16278065741062164
    2. '<' → logprob: -2.41278076171875
    3. ' <=' → logprob: -3.03778076171875
    4. ' >' → logprob: -5.28778076171875
    5. '<=' → logprob: -5.66278076171875
    6. '>' → logprob: -6.78778076171875
    7. ' ' → logprob: -7.41278076171875
    8. '+' → logprob: -7.41278076171875
    9. ' >=' → logprob: -7.66278076171875
    10. ' +' → logprob: -7.66278076171875

Token 52: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.3872791826725006
    2. 'max' → logprob: -1.1372791528701782
    3. ' ' → logprob: -8.262279510498047
    4. ' len' → logprob: -10.387279510498047
    5. 'len' → logprob: -10.637279510498047
    6. '=max' → logprob: -11.387279510498047
    7. '(max' → logprob: -11.512279510498047
    8. '[max' → logprob: -11.637279510498047
    9. '=' → logprob: -11.887279510498047
    10. '	max' → logprob: -11.887279510498047

Token 53: '_cur' (ID: 46382)
  Prédit: '_cur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cur' → logprob: -2.8087270038668066e-05
    2. '_' → logprob: -10.875027656555176
    3. 'cur' → logprob: -12.250027656555176
    4. '_max' → logprob: -13.625027656555176
    5. '_cursor' → logprob: -14.125027656555176
    6. '_c' → logprob: -14.875027656555176
    7. '	cur' → logprob: -15.250027656555176
    8. '_curr' → logprob: -15.375027656555176
    9. ' _' → logprob: -15.625027656555176
    10. 'Cur' → logprob: -15.875027656555176

Token 54: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08411511033773422
    2. ' and' → logprob: -2.5841150283813477
    3. ' :' → logprob: -5.834115028381348
    4. 'and' → logprob: -7.084115028381348
    5. ':
' → logprob: -7.084115028381348
    6. '   ' → logprob: -8.584115028381348
    7. '       ' → logprob: -9.459115028381348
    8. '    ' → logprob: -9.584115028381348
    9. '):' → logprob: -10.084115028381348
    10. ' ' → logprob: -10.084115028381348

Token 55: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1581435650587082
    2. ':' → logprob: -3.6581435203552246
    3. '<|end|>' → logprob: -3.9081435203552246
    4. '   ' → logprob: -4.158143520355225
    5. ' ' → logprob: -4.158143520355225
    6. '    ' → logprob: -4.283143520355225
    7. '+' → logprob: -4.283143520355225
    8. '        
' → logprob: -4.283143520355225
    9. ' 
' → logprob: -5.158143520355225
    10. '        ' → logprob: -5.408143520355225

Token 56: ' cur' (ID: 4396)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6437910795211792
    2. '        ' → logprob: -2.2687911987304688
    3. '       ' → logprob: -2.5187911987304688
    4. '    ' → logprob: -2.6437911987304688
    5. ' 
' → logprob: -2.6437911987304688
    6. '        
' → logprob: -3.1437911987304688
    7. '<|end|>' → logprob: -3.7687911987304688
    8. '           ' → logprob: -4.268791198730469
    9. '            ' → logprob: -4.393791198730469
    10. '   ' → logprob: -5.143791198730469

Token 57: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.6113563776016235
    2. '_' → logprob: -1.8613563776016235
    3. ' =' → logprob: -2.361356258392334
    4. '+=' → logprob: -2.486356258392334
    5. '+' → logprob: -3.111356258392334
    6. '=' → logprob: -3.861356258392334
    7. 's' → logprob: -4.236356258392334
    8. 'r' → logprob: -4.736356258392334
    9. '   ' → logprob: -4.861356258392334
    10. '++' → logprob: -5.361356258392334

Token 58: ' s' (ID: 265)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.5218045115470886
    2. ' tmp' → logprob: -1.3968045711517334
    3. 'tmp' → logprob: -2.7718045711517334
    4. ' s' → logprob: -2.7718045711517334
    5. ' aaa' → logprob: -4.521804332733154
    6. 'sss' → logprob: -4.896804332733154
    7. ' cursor' → logprob: -5.021804332733154
    8. 'bbb' → logprob: -6.396804332733154
    9. ' max' → logprob: -6.896804332733154
    10. ' ' → logprob: -7.021804332733154

Token 59: '.find' (ID: 4231)
  Prédit: 'ss'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ss' → logprob: -0.10713567584753036
    2. 'tmp' → logprob: -2.607135772705078
    3. 's' → logprob: -3.857135772705078
    4. 'mp' → logprob: -5.607135772705078
    5. 't' → logprob: -7.232135772705078
    6. '_tmp' → logprob: -7.357135772705078
    7. 'p' → logprob: -7.732135772705078
    8. 'sp' → logprob: -8.357135772705078
    9. 'sss' → logprob: -8.857135772705078
    10. 'tt' → logprob: -8.982135772705078

Token 60: '('' (ID: 706)
  Prédit: '(ss'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ss' → logprob: -0.24446724355220795
    2. '(' → logprob: -2.119467258453369
    3. '(tmp' → logprob: -2.994467258453369
    4. '('' → logprob: -3.369467258453369
    5. '(cursor' → logprob: -5.494467258453369
    6. '(b' → logprob: -5.994467258453369
    7. '((' → logprob: -6.994467258453369
    8. '(cur' → logprob: -6.994467258453369
    9. '(s' → logprob: -7.244467258453369
    10. 'ss' → logprob: -7.244467258453369

Token 61: 'a' (ID: 64)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.8789170980453491
    2. ' ')' → logprob: -2.0039172172546387
    3. ''' → logprob: -2.8789172172546387
    4. 'sss' → logprob: -2.8789172172546387
    5. '')' → logprob: -3.1289172172546387
    6. ')' → logprob: -3.1289172172546387
    7. '(',' → logprob: -3.2539172172546387
    8. 'a' → logprob: -3.5039172172546387
    9. '(','' → logprob: -3.5039172172546387
    10. '(' → logprob: -3.6289172172546387

Token 62: '',' (ID: 787)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.8451934456825256
    2. '')' → logprob: -1.0951933860778809
    3. '',' → logprob: -1.5951933860778809
    4. 'b' → logprob: -3.970193386077881
    5. ''' → logprob: -4.470193386077881
    6. 'aa' → logprob: -7.095193386077881
    7. ''a' → logprob: -7.970193386077881
    8. 'ab' → logprob: -8.095193862915039
    9. '('' → logprob: -8.220193862915039
    10. 'bc' → logprob: -8.345193862915039

Token 63: ' tmp' (ID: 8919)
  Prédit: ' tmp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tmp' → logprob: -0.5249841809272766
    2. 'tmp' → logprob: -0.8999841809272766
    3. ' cursor' → logprob: -7.274984359741211
    4. 'cursor' → logprob: -7.899984359741211
    5. '	tmp' → logprob: -8.649984359741211
    6. 'cur' → logprob: -8.899984359741211
    7. ')' → logprob: -9.149984359741211
    8. '(tmp' → logprob: -9.649984359741211
    9. ' cur' → logprob: -10.024984359741211
    10. ' max' → logprob: -10.774984359741211

Token 64: '_cur' (ID: 46382)
  Prédit: '_cur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cur' → logprob: -4.894790981779806e-05
    2. 'cur' → logprob: -10.625048637390137
    3. '_tmp' → logprob: -11.125048637390137
    4. '_' → logprob: -12.625048637390137
    5. '	cur' → logprob: -14.125048637390137
    6. '[cur' → logprob: -14.125048637390137
    7. ')' → logprob: -14.250048637390137
    8. '_curr' → logprob: -14.375048637390137
    9. 'tmp' → logprob: -14.500048637390137
    10. '_c' → logprob: -14.500048637390137

Token 65: ',' (ID: 11)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2660256028175354
    2. ')' → logprob: -1.6410255432128906
    3. ' +' → logprob: -3.2660255432128906
    4. ')+' → logprob: -6.766025543212891
    5. ' )' → logprob: -8.14102554321289
    6. '+)' → logprob: -8.64102554321289
    7. ')
' → logprob: -12.89102554321289
    8. '    ' → logprob: -13.39102554321289
    9. '1' → logprob: -13.51602554321289
    10. ');' → logprob: -13.64102554321289

Token 66: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.3873473107814789
    2. ' max' → logprob: -1.1373473405838013
    3. ')' → logprob: -8.262347221374512
    4. ' s' → logprob: -9.012347221374512
    5. 's' → logprob: -10.512347221374512
    6. '	max' → logprob: -11.387347221374512
    7. 'sss' → logprob: -11.387347221374512
    8. 'ss' → logprob: -11.637347221374512
    9. ' ' → logprob: -12.012347221374512
    10. 'tmp' → logprob: -12.262347221374512

Token 67: '_cur' (ID: 46382)
  Prédit: '_cur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cur' → logprob: -7.941850526549388e-06
    2. 'cur' → logprob: -12.750007629394531
    3. '_' → logprob: -13.250007629394531
    4. '_max' → logprob: -13.750007629394531
    5. '	cur' → logprob: -14.750007629394531
    6. 'Cur' → logprob: -14.875007629394531
    7. '_c' → logprob: -15.250007629394531
    8. ')' → logprob: -15.625007629394531
    9. '_)' → logprob: -15.750007629394531
    10. '_CUR' → logprob: -16.25000762939453

Token 68: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0037025699857622385
    2. '+' → logprob: -5.753702640533447
    3. ')+' → logprob: -8.253702163696289
    4. ')
' → logprob: -8.503702163696289
    5. ' )' → logprob: -10.628702163696289
    6. ' +' → logprob: -10.628702163696289
    7. '+)' → logprob: -12.753702163696289
    8. '       ' → logprob: -12.878702163696289
    9. ')
' → logprob: -13.628702163696289
    10. '),' → logprob: -14.253702163696289

Token 69: '       ' (ID: 309)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.42637500166893005
    2. '<|end|>' → logprob: -2.051374912261963
    3. '       ' → logprob: -2.176374912261963
    4. ')' → logprob: -2.551374912261963
    5. ' +' → logprob: -4.426374912261963
    6. '        ' → logprob: -5.176374912261963
    7. '<|end|>' → logprob: -6.301374912261963
    8. '
' → logprob: -6.551374912261963
    9. ')+' → logprob: -6.676374912261963
    10. ' if' → logprob: -7.676374912261963

Token 70: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0674134492874146
    2. '<|end|>' → logprob: -1.4424134492874146
    3. ' ' → logprob: -1.5674134492874146
    4. '        ' → logprob: -2.692413330078125
    5. ')' → logprob: -2.692413330078125
    6. '    ' → logprob: -4.317413330078125
    7. ' if' → logprob: -4.692413330078125
    8. '   ' → logprob: -4.817413330078125
    9. '<|end|>' → logprob: -4.942413330078125
    10. 'if' (adapté à ' if') → logprob: -4.942413330078125

Token 71: ' cur' (ID: 4396)
  Prédit: ' cur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cur' → logprob: -0.3132995367050171
    2. 'cur' → logprob: -1.313299536705017
    3. '(cur' → logprob: -10.313299179077148
    4. '	cur' → logprob: -13.063299179077148
    5. '[cur' → logprob: -13.188299179077148
    6. ' not' → logprob: -15.563299179077148
    7. '_cur' → logprob: -15.938299179077148
    8. ' ' → logprob: -16.43829917907715
    9. '.cur' → logprob: -16.81329917907715
    10. ' ' → logprob: -16.93829917907715

Token 72: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.05834943801164627
    2. '==-' → logprob: -3.558349370956421
    3. '==' → logprob: -3.683349370956421
    4. ')' → logprob: -6.433349609375
    5. ' is' → logprob: -7.933349609375
    6. '=' → logprob: -7.933349609375
    7. ')==' → logprob: -8.308349609375
    8. ' ' → logprob: -8.933349609375
    9. '<|end|>' → logprob: -9.183349609375
    10. '<' → logprob: -9.308349609375

Token 73: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.3135095238685608
    2. ' -' → logprob: -1.313509464263916
    3. ' ' → logprob: -8.313509941101074
    4. '  ' → logprob: -14.563509941101074
    5. '0' → logprob: -15.063509941101074
    6. ' None' → logprob: -15.188509941101074
    7. '   ' → logprob: -15.313509941101074
    8. ' tmp' → logprob: -15.563509941101074
    9. ' s' → logprob: -15.938509941101074
    10. 'None' → logprob: -16.063508987426758

Token 74: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -15.125000953674316
    3. '```' → logprob: -15.687500953674316
    4. '2' → logprob: -16.9375
    5. '１' → logprob: -17.25
    6. '`' → logprob: -17.5625
    7. '۱' → logprob: -17.625
    8. '``' → logprob: -17.6875
    9. 's' → logprob: -17.8125
    10. '' → logprob: -17.875

Token 75: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002312026685103774
    2. '           ' → logprob: -7.002312183380127
    3. ':
' → logprob: -7.127312183380127
    4. '       ' → logprob: -8.377311706542969
    5. ':return' → logprob: -9.127311706542969
    6. '):' → logprob: -9.252311706542969
    7. ' or' → logprob: -9.377311706542969
    8. ',' → logprob: -10.627311706542969
    9. ')' → logprob: -11.002311706542969
    10. '   ' → logprob: -11.752311706542969

Token 76: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00022845028433948755
    2. ' break' → logprob: -10.000228881835938
    3. '               ' → logprob: -10.000228881835938
    4. '       ' → logprob: -10.125228881835938
    5. '<|end|>' → logprob: -10.750228881835938
    6. 'break' → logprob: -11.125228881835938
    7. '   ' → logprob: -11.250228881835938
    8. '            
' → logprob: -11.250228881835938
    9. '            ' → logprob: -11.625228881835938
    10. '          ' → logprob: -12.250228881835938

Token 77: ' break' (ID: 2338)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.021477267146110535
    2. ' break' → logprob: -4.146477222442627
    3. '               ' → logprob: -5.521477222442627
    4. 'break' (adapté à ' break') → logprob: -7.021477222442627
    5. '       ' → logprob: -8.146477699279785
    6. '            ' → logprob: -10.021477699279785
    7. '	break' → logprob: -10.021477699279785
    8. ' ' → logprob: -10.146477699279785
    9. '   ' → logprob: -10.396477699279785
    10. '<|end|>' → logprob: -11.271477699279785

Token 78: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05989465117454529
    2. '<|end|>' → logprob: -2.934894561767578
    3. '        ' → logprob: -6.809894561767578
    4. '        
' → logprob: -7.059894561767578
    5. '
' → logprob: -7.184894561767578
    6. '	' → logprob: -8.059894561767578
    7. '<|end|>' → logprob: -8.059894561767578
    8. ')' → logprob: -8.309894561767578
    9. '+' → logprob: -8.434894561767578
    10. ',' → logprob: -8.684894561767578

Token 79: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0034652480389922857
    2. '<|end|>' → logprob: -6.378465175628662
    3. '
' → logprob: -7.503465175628662
    4. '	' → logprob: -8.25346565246582
    5. '        
' → logprob: -8.50346565246582
    6. ')' → logprob: -8.87846565246582
    7. '      ' → logprob: -9.62846565246582
    8. '   ' → logprob: -9.62846565246582
    9. '\n' → logprob: -10.12846565246582
    10. '           ' → logprob: -10.12846565246582

Token 80: ' ai' (ID: 8440)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0232130978256464
    2. '        ' → logprob: -4.398212909698486
    3. '           ' → logprob: -6.398212909698486
    4. '<|end|>' → logprob: -6.398212909698486
    5. '   ' → logprob: -6.773212909698486
    6. '    ' → logprob: -6.898212909698486
    7. 'tmp' → logprob: -6.898212909698486
    8. '        
' → logprob: -7.023212909698486
    9. ' ' → logprob: -7.898212909698486
    10. '      ' → logprob: -8.023213386535645

Token 81: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.47678133845329285
    2. '+' → logprob: -1.2267813682556152
    3. '+=' → logprob: -2.7267813682556152
    4. ' +' → logprob: -3.9767813682556152
    5. ' =' → logprob: -6.476781368255615
    6. '=' → logprob: -8.476780891418457
    7. '<|end|>' → logprob: -10.601780891418457
    8. ']+=' → logprob: -11.476780891418457
    9. ')' → logprob: -11.476780891418457
    10. '++' → logprob: -12.226780891418457

Token 82: ' aaa' (ID: 170080)
  Prédit: ' aaa'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' aaa' → logprob: -0.7835239768028259
    2. ' cur' → logprob: -1.2835240364074707
    3. ' b' → logprob: -2.1585240364074707
    4. ' s' → logprob: -2.7835240364074707
    5. 'cur' → logprob: -2.9085240364074707
    6. ' ai' → logprob: -4.408524036407471
    7. 'bbb' → logprob: -4.658524036407471
    8. 'aaa' → logprob: -5.033524036407471
    9. 'ai' → logprob: -6.408524036407471
    10. ' ' → logprob: -7.158524036407471

Token 83: '.index' (ID: 9736)
  Prédit: '.index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.index' → logprob: -0.00013154871703591198
    2. 'index' → logprob: -9.125131607055664
    3. '.' → logprob: -12.000131607055664
    4. '.ai' → logprob: -12.250131607055664
    5. '[' → logprob: -12.625131607055664
    6. '[index' → logprob: -12.875131607055664
    7. '#index' → logprob: -13.250131607055664
    8. '_index' → logprob: -13.375131607055664
    9. ' .' → logprob: -14.500131607055664
    10. ' index' → logprob: -14.625131607055664

Token 84: '(cur' (ID: 34723)
  Prédit: '(ss'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ss' → logprob: -0.9426111578941345
    2. '(cur' → logprob: -1.1926112174987793
    3. '(cursor' → logprob: -1.8176112174987793
    4. '(b' → logprob: -2.1926112174987793
    5. '('' → logprob: -4.067611217498779
    6. '(' → logprob: -4.692611217498779
    7. '(s' → logprob: -5.317611217498779
    8. '(a' → logprob: -7.567611217498779
    9. 'cur' → logprob: -8.442610740661621
    10. '(tmp' → logprob: -8.567610740661621

Token 85: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011093330569565296
    2. ')
' → logprob: -4.5110931396484375
    3. '       ' → logprob: -10.261093139648438
    4. ')
' → logprob: -12.136093139648438
    5. ' )' → logprob: -13.636093139648438
    6. ')

' → logprob: -14.011093139648438
    7. ',' → logprob: -14.386093139648438
    8. '<|end|>' → logprob: -14.386093139648438
    9. ')return' → logprob: -15.386093139648438
    10. '<|end|>' → logprob: -15.386093139648438

Token 86: ' ai' (ID: 8440)
  Prédit: ' ai'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ai' → logprob: -0.32130131125450134
    2. 'ai' → logprob: -1.3213013410568237
    3. 'repeat' → logprob: -5.696301460266113
    4. ' repeat' → logprob: -6.696301460266113
    5. 'tmp' → logprob: -7.071301460266113
    6. ' tmp' → logprob: -7.446301460266113
    7. '(ai' → logprob: -7.696301460266113
    8. ')' → logprob: -7.946301460266113
    9. ' cur' → logprob: -8.196301460266113
    10. ' ' → logprob: -8.821301460266113

Token 87: ')
' (ID: 446)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.10207197070121765
    2. ')' → logprob: -2.35207200050354
    3. ' +' → logprob: -6.727071762084961
    4. ')
' → logprob: -7.602071762084961
    5. ')+' → logprob: -8.852071762084961
    6. '+)' → logprob: -11.227071762084961
    7. ' )' → logprob: -12.602071762084961
    8. '+
' → logprob: -12.727071762084961
    9. ')
' → logprob: -14.227071762084961
    10. ',' → logprob: -14.477071762084961

Token 88: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12969350814819336
    2. '<|end|>' → logprob: -2.1296935081481934
    3. ')' → logprob: -6.504693508148193
    4. '<|end|>' → logprob: -7.379693508148193
    5. '        
' → logprob: -8.629693984985352
    6. '+' → logprob: -9.254693984985352
    7. ',' → logprob: -9.504693984985352
    8. '      ' → logprob: -9.629693984985352
    9. ' ' → logprob: -10.254693984985352
    10. '
' → logprob: -10.379693984985352

Token 89: ' tmp' (ID: 8919)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8432660698890686
    2. ' if' → logprob: -1.4682660102844238
    3. ' tmp' → logprob: -1.7182660102844238
    4. 'tmp' (adapté à ' tmp') → logprob: -2.093266010284424
    5. 'if' → logprob: -4.468266010284424
    6. 'repeat' → logprob: -4.718266010284424
    7. ' repeat' → logprob: -5.343266010284424
    8. ' aaa' → logprob: -5.718266010284424
    9. ' b' → logprob: -6.718266010284424
    10. '        ' → logprob: -6.718266010284424

Token 90: '_cur' (ID: 46382)
  Prédit: '_cur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cur' → logprob: -0.0001931696751853451
    2. '_' → logprob: -9.00019359588623
    3. 'cur' → logprob: -9.75019359588623
    4. 'Cur' → logprob: -12.37519359588623
    5. '	cur' → logprob: -12.50019359588623
    6. '[cur' → logprob: -13.75019359588623
    7. ' cur' → logprob: -15.00019359588623
    8. '_CUR' → logprob: -15.00019359588623
    9. '.cur' → logprob: -15.50019359588623
    10. '+' → logprob: -15.62519359588623

Token 91: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2280459851026535
    2. '=' → logprob: -1.72804594039917
    3. ' +=' → logprob: -3.72804594039917
    4. '+=' → logprob: -6.10304594039917
    5. '+' → logprob: -12.728046417236328
    6. ' ' → logprob: -13.978046417236328
    7. ' +' → logprob: -14.353046417236328
    8. '<|end|>' → logprob: -16.103046417236328
    9. '.=' → logprob: -16.228046417236328
    10. ' <<=' → logprob: -16.353046417236328

Token 92: ' b' (ID: 287)
  Prédit: 'bbb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bbb' → logprob: -0.6051766872406006
    2. ' b' → logprob: -0.8551766872406006
    3. 'cur' → logprob: -3.9801766872406006
    4. 'b' → logprob: -5.10517692565918
    5. ' cur' → logprob: -5.85517692565918
    6. 'bb' → logprob: -8.10517692565918
    7. 'tmp' → logprob: -8.35517692565918
    8. 'ccc' → logprob: -8.85517692565918
    9. 'bbbb' → logprob: -8.98017692565918
    10. 'bbs' → logprob: -9.98017692565918

Token 93: 'bb' (ID: 10029)
  Prédit: 'bb'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bb' → logprob: -0.0036661101039499044
    2. 'b' → logprob: -5.628665924072266
    3. '[' → logprob: -10.503665924072266
    4. '[cur' → logprob: -11.003665924072266
    5. 'bbb' → logprob: -12.253665924072266
    6. 'st' → logprob: -12.878665924072266
    7. 'cur' → logprob: -13.003665924072266
    8. 'rr' → logprob: -13.378665924072266
    9. 'bp' → logprob: -13.503665924072266
    10. 'pp' → logprob: -13.628665924072266

Token 94: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.531315314830863e-06
    2. '.ai' → logprob: -13.375003814697266
    3. 'ai' → logprob: -14.000003814697266
    4. '_ai' → logprob: -14.750003814697266
    5. '(ai' → logprob: -15.250003814697266
    6. '-ai' → logprob: -16.125003814697266
    7. '+' → logprob: -16.875003814697266
    8. '```' → logprob: -16.875003814697266
    9. '[
' → logprob: -17.000003814697266
    10. ' ai' → logprob: -17.125003814697266

Token 95: 'ai' (ID: 1361)
  Prédit: 'ai'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ai' → logprob: -0.00021903318702243268
    2. '[' → logprob: -8.625219345092773
    3. ' ai' → logprob: -10.375219345092773
    4. 'a' → logprob: -12.125219345092773
    5. '(ai' → logprob: -13.500219345092773
    6. '_ai' → logprob: -14.625219345092773
    7. '
' → logprob: -15.125219345092773
    8. ']' → logprob: -15.750219345092773
    9. '.ai' → logprob: -16.000219345092773
    10. '-ai' → logprob: -16.000219345092773

Token 96: ']
' (ID: 1592)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1788952797651291
    2. ')' → logprob: -2.1788952350616455
    3. ')+' → logprob: -3.9288952350616455
    4. ' +' → logprob: -4.178895473480225
    5. ']' → logprob: -4.803895473480225
    6. ']+' → logprob: -4.928895473480225
    7. '+)' → logprob: -10.178894996643066
    8. '+
' → logprob: -10.303894996643066
    9. ' )' → logprob: -10.553894996643066
    10. '<|end|>' → logprob: -10.803894996643066

Token 97: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4069940745830536
    2. '<|end|>' → logprob: -1.281994104385376
    3. ')' → logprob: -3.281994104385376
    4. '+' → logprob: -5.031993865966797
    5. ' ' → logprob: -5.281993865966797
    6. '#' → logprob: -6.656993865966797
    7. '        ' → logprob: -6.656993865966797
    8. ',' → logprob: -6.906993865966797
    9. '
' → logprob: -7.406993865966797
    10. '   ' → logprob: -7.531993865966797

Token 98: ' repeat' (ID: 22962)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3102833926677704
    2. 'repeat' (adapté à ' repeat') → logprob: -1.6852834224700928
    3. '+' → logprob: -3.4352834224700928
    4. ' repeat' → logprob: -3.9352834224700928
    5. ' if' → logprob: -5.060283184051514
    6. '        ' → logprob: -5.185283184051514
    7. '<|end|>' → logprob: -5.435283184051514
    8. ')' → logprob: -5.810283184051514
    9. '   ' → logprob: -6.060283184051514
    10. '    ' → logprob: -6.560283184051514

Token 99: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.23536765575408936
    2. '+' → logprob: -1.8603676557540894
    3. '+=' → logprob: -2.985367774963379
    4. ' +' → logprob: -5.860367774963379
    5. '=' → logprob: -7.860367774963379
    6. ' ' → logprob: -8.735367774963379
    7. '<|end|>' → logprob: -8.860367774963379
    8. ' =' → logprob: -11.110367774963379
    9. '++' → logprob: -11.360367774963379
    10. 's' → logprob: -12.735367774963379

Token 100: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1602243334054947
    2. ' ' → logprob: -1.9102243185043335
    3. ' ' → logprob: -15.660223960876465
    4. '<|end|>' → logprob: -18.78522491455078
    5. '2' → logprob: -18.97272491455078
    6. 's' → logprob: -19.09772491455078
    7. '```' → logprob: -19.16022491455078
    8. '  ' → logprob: -19.34772491455078
    9. '   ' → logprob: -19.66022491455078
    10. '１' → logprob: -19.91022491455078

Token 101: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.1782583391759545e-05
    2. ' ' → logprob: -10.375031471252441
    3. 's' → logprob: -16.375032424926758
    4. '2' → logprob: -16.625032424926758
    5. '```' → logprob: -16.937532424926758
    6. '   ' → logprob: -17.125032424926758
    7. '+' → logprob: -17.687532424926758
    8. ' ' → logprob: -17.750032424926758
    9. '  ' → logprob: -17.875032424926758
    10. 'tmp' → logprob: -18.000032424926758

Token 102: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 103: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 104: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8252612948417664
    2. '<|end|>' → logprob: -0.9502612948417664
    3. ' ' → logprob: -2.200261354446411
    4. '
' → logprob: -4.200261116027832
    5. '       ' → logprob: -4.575261116027832
    6. ')' → logprob: -4.950261116027832
    7. '    ' → logprob: -5.200261116027832
    8. ' return' → logprob: -5.325261116027832
    9. ' 
' → logprob: -5.700261116027832
    10. '  ' → logprob: -5.700261116027832

Token 105: ' repeat' (ID: 22962)
  Prédit: ' repeat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' repeat' → logprob: -0.31328707933425903
    2. 'repeat' → logprob: -1.3132870197296143
    3. ' (' → logprob: -11.688286781311035
    4. ' True' → logprob: -13.313286781311035
    5. '_repeat' → logprob: -13.313286781311035
    6. ' ' → logprob: -13.438286781311035
    7. ' tmp' → logprob: -13.563286781311035
    8. ' repeats' → logprob: -13.563286781311035
    9. ' ' → logprob: -13.813286781311035
    10. ' None' → logprob: -14.063286781311035

Token 106: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 107: ' max' (ID: 2999)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4032723307609558
    2. '<|end|>' → logprob: -1.7782723903656006
    3. ')' → logprob: -2.1532723903656006
    4. ' )' → logprob: -3.5282723903656006
    5. ''' → logprob: -5.5282721519470215
    6. 's' → logprob: -5.7782721519470215
    7. ' ]' → logprob: -6.6532721519470215
    8. '[' → logprob: -6.7782721519470215
    9. '```' → logprob: -6.9032721519470215
    10. ' ```' → logprob: -7.2782721519470215

Token 108: '_cur' (ID: 46382)
  Prédit: '_cur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cur' → logprob: -7.3458322731312364e-06
    2. '_' → logprob: -12.875007629394531
    3. 'cur' → logprob: -13.375007629394531
    4. '(cur' → logprob: -13.750007629394531
    5. '_cursor' → logprob: -14.375007629394531
    6. 'Cur' → logprob: -14.750007629394531
    7. '_c' → logprob: -14.875007629394531
    8. '_curr' → logprob: -15.500007629394531
    9. '_)' → logprob: -16.12500762939453
    10. ' Cur' → logprob: -17.00000762939453

Token 109: ' +' (ID: 659)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 110: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0017049367306753993
    2. ' ' → logprob: -6.376705169677734
    3. '2' → logprob: -13.626705169677734
    4. '```' → logprob: -14.876705169677734
    5. '0' → logprob: -15.251705169677734
    6. '`' → logprob: -15.751705169677734
    7. 's' → logprob: -15.751705169677734
    8. 'len' → logprob: -16.126705169677734
    9. ' ' → logprob: -16.126705169677734
    10. '+' → logprob: -16.376705169677734

Token 111: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.1318875446449965e-05
    2. ' ' → logprob: -10.125041007995605
    3. 'len' → logprob: -15.000041007995605
    4. '2' → logprob: -15.500041007995605
    5. 's' → logprob: -16.125041961669922
    6. '0' → logprob: -16.375041961669922
    7. '```' → logprob: -16.500041961669922
    8. '   ' → logprob: -16.500041961669922
    9. '6' → logprob: -16.750041961669922
    10. '7' → logprob: -17.250041961669922

Token 112: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 113: 'def' (ID: 1314)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7571441531181335
    2. '<|end|>' → logprob: -1.7571442127227783
    3. 's' → logprob: -2.2571442127227783
    4. ')' → logprob: -2.2571442127227783
    5. '[' → logprob: -2.5071442127227783
    6. '(' → logprob: -4.257143974304199
    7. '
' → logprob: -4.882143974304199
    8. 'a' → logprob: -5.007143974304199
    9. ' s' → logprob: -5.257143974304199
    10. 'sss' → logprob: -5.382143974304199

Token 114: ' search' (ID: 3684)
  Prédit: ' search'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' search' → logprob: -0.268070250749588
    2. ' main' → logprob: -2.2680702209472656
    3. ' accumulate' → logprob: -4.143070220947266
    4. ' find' → logprob: -4.268070220947266
    5. ' aaa' → logprob: -4.393070220947266
    6. ' ' → logprob: -4.393070220947266
    7. ' calculate' → logprob: -4.643070220947266
    8. ' abc' → logprob: -5.393070220947266
    9. ' _' → logprob: -5.518070220947266
    10. 'search' → logprob: -5.518070220947266

Token 115: '_b' (ID: 1535)
  Prédit: '_ab'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ab' → logprob: -0.03987093269824982
    2. '_' → logprob: -3.4148709774017334
    3. '_a' → logprob: -5.539870738983154
    4. '_b' → logprob: -6.664870738983154
    5. '_(' → logprob: -8.664871215820312
    6. '_c' → logprob: -8.914871215820312
    7. '_ac' → logprob: -9.414871215820312
    8. '(' → logprob: -9.664871215820312
    9. '_ss' → logprob: -10.289871215820312
    10. '_cd' → logprob: -10.789871215820312

Token 116: 'a' (ID: 64)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.18931236863136292
    2. '(ss' → logprob: -1.8143123388290405
    3. 'ss' → logprob: -5.56431245803833
    4. 'bb' → logprob: -5.93931245803833
    5. '(s' → logprob: -7.31431245803833
    6. 'a' → logprob: -7.56431245803833
    7. 'ab' → logprob: -8.064311981201172
    8. '_' → logprob: -8.314311981201172
    9. 'bbb' → logprob: -8.314311981201172
    10. 's' → logprob: -8.314311981201172

Token 117: '(ss' (ID: 68597)
  Prédit: '(ss'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ss' → logprob: -0.015164594165980816
    2. '(s' → logprob: -4.515164375305176
    3. '(' → logprob: -6.015164375305176
    4. ' (' → logprob: -6.515164375305176
    5. 'ss' → logprob: -9.015164375305176
    6. 's' → logprob: -10.765164375305176
    7. ' ss' → logprob: -11.140164375305176
    8. ' ' → logprob: -12.015164375305176
    9. 'a' → logprob: -12.765164375305176
    10. '_ss' → logprob: -12.890164375305176

Token 118: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.037456952035427094
    2. 'ss' → logprob: -3.91245698928833
    3. '(ss' → logprob: -4.16245698928833
    4. '(s' → logprob: -6.78745698928833
    5. 'sss' → logprob: -10.037456512451172
    6. '(' → logprob: -11.412456512451172
    7. '):
' → logprob: -12.412456512451172
    8. '```' → logprob: -12.537456512451172
    9. '):' → logprob: -13.037456512451172
    10. ')' → logprob: -13.787456512451172

Token 119: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002084277366520837
    2. '):' → logprob: -8.875208854675293
    3. '(ss' → logprob: -10.625208854675293
    4. ' ,' → logprob: -11.375208854675293
    5. ')' → logprob: -11.500208854675293
    6. ',c' → logprob: -11.625208854675293
    7. ',s' → logprob: -12.500208854675293
    8. ',)' → logprob: -12.875208854675293
    9. '(' → logprob: -13.250208854675293
    10. ',b' → logprob: -13.250208854675293

Token 120: ' cursor' (ID: 14944)
  Prédit: ' cursor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cursor' → logprob: -0.4294133484363556
    2. 'cursor' → logprob: -1.0544133186340332
    3. 'cur' → logprob: -8.804413795471191
    4. 'ss' → logprob: -9.179413795471191
    5. ' ' → logprob: -9.554413795471191
    6. 'sss' → logprob: -9.804413795471191
    7. '	cursor' → logprob: -10.179413795471191
    8. 's' → logprob: -10.304413795471191
    9. ' s' → logprob: -10.554413795471191
    10. '(cursor' → logprob: -10.554413795471191

Token 121: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00024358915106859058
    2. '):
' → logprob: -8.500243186950684
    3. ')' → logprob: -10.250243186950684
    4. ':' → logprob: -12.500243186950684
    5. ' ):' → logprob: -14.375243186950684
    6. '   ' → logprob: -15.250243186950684
    7. '):
' → logprob: -16.375244140625
    8. '):

' → logprob: -16.625244140625
    9. '():' → logprob: -17.375244140625
    10. ',' → logprob: -17.625244140625

Token 122: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.034414224326610565
    2. 'ai' → logprob: -3.409414291381836
    3. ' ai' → logprob: -7.284414291381836
    4. 'def' → logprob: -10.034414291381836
    5. '   ' → logprob: -11.159414291381836
    6. '```' → logprob: -11.909414291381836
    7. '(ai' → logprob: -12.284414291381836
    8. '  ' → logprob: -12.534414291381836
    9. ' ' → logprob: -12.659414291381836
    10. '_ai' → logprob: -13.159414291381836

Token 123: ' first' (ID: 1577)
  Prédit: 'ai'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ai' → logprob: -0.0020731717813760042
    2. '   ' → logprob: -6.377073287963867
    3. 'bi' → logprob: -8.002073287963867
    4. ' ai' → logprob: -10.877073287963867
    5. ' ' → logprob: -12.002073287963867
    6. 'aa' → logprob: -12.627073287963867
    7. '
' → logprob: -13.502073287963867
    8. '  ' → logprob: -13.502073287963867
    9. 'def' → logprob: -13.877073287963867
    10. 'ba' → logprob: -14.377073287963867

Token 124: '_b' (ID: 1535)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.45611533522605896
    2. ' =' → logprob: -1.0811153650283813
    3. '=' → logprob: -4.206115245819092
    4. '_cur' → logprob: -5.581115245819092
    5. '_cursor' → logprob: -6.581115245819092
    6. 'a' → logprob: -7.081115245819092
    7. 'ai' → logprob: -7.206115245819092
    8. '_ai' → logprob: -7.206115245819092
    9. '_=' → logprob: -7.331115245819092
    10. '_a' → logprob: -7.456115245819092

Token 125: 'i' (ID: 72)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6133648753166199
    2. '_' → logprob: -1.2383649349212646
    3. 'b' → logprob: -2.2383649349212646
    4. '=' → logprob: -3.2383649349212646
    5. '_b' → logprob: -5.4883646965026855
    6. 'a' → logprob: -5.6133646965026855
    7. '_a' → logprob: -6.1133646965026855
    8. 'bbb' → logprob: -6.1133646965026855
    9. 'bb' → logprob: -6.2383646965026855
    10. '_idx' → logprob: -6.2383646965026855

Token 126: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5328805446624756
    2. '=' → logprob: -0.9078805446624756
    3. 't' → logprob: -5.657880783081055
    4. 'n' → logprob: -5.657880783081055
    5. 'nd' → logprob: -6.282880783081055
    6. '_' → logprob: -7.782880783081055
    7. '=index' → logprob: -9.157880783081055
    8. 'i' → logprob: -9.657880783081055
    9. 'f' → logprob: -9.657880783081055
    10. 'a' → logprob: -10.032880783081055

Token 127: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -1.3211519718170166
    2. ' s' → logprob: -1.4461519718170166
    3. 'bbb' → logprob: -1.8211519718170166
    4. ' aaa' → logprob: -1.8211519718170166
    5. 'sss' → logprob: -2.0711519718170166
    6. 'aaa' → logprob: -3.1961519718170166
    7. 'ccc' → logprob: -5.4461517333984375
    8. '0' → logprob: -7.5711517333984375
    9. ' ' → logprob: -8.071151733398438
    10. 'ss' → logprob: -8.321151733398438

Token 128: 'bb' (ID: 10029)
  Prédit: 'bb'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bb' → logprob: -0.014914470724761486
    2. '[' → logprob: -4.889914512634277
    3. 'b' → logprob: -5.014914512634277
    4. 'bbb' → logprob: -7.889914512634277
    5. '.index' → logprob: -10.014914512634277
    6. ' =' → logprob: -10.139914512634277
    7. 'ss' → logprob: -10.139914512634277
    8. '=' → logprob: -10.764914512634277
    9. '```' → logprob: -11.264914512634277
    10. 'index' → logprob: -11.264914512634277

Token 129: '.index' (ID: 9736)
  Prédit: '.index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.index' → logprob: -0.008992237038910389
    2. '[' → logprob: -4.8839921951293945
    3. 'index' → logprob: -6.6339921951293945
    4. 'ai' → logprob: -10.383992195129395
    5. '.' → logprob: -11.508992195129395
    6. ' .' → logprob: -12.258992195129395
    7. '.find' → logprob: -12.383992195129395
    8. 'def' → logprob: -12.758992195129395
    9. '_index' → logprob: -12.883992195129395
    10. '[index' → logprob: -13.133992195129395

Token 130: '(cursor' (ID: 50526)
  Prédit: '(cursor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cursor' → logprob: -0.0018985291244462132
    2. 'cursor' → logprob: -6.876898765563965
    3. '(' → logprob: -7.376898765563965
    4. '(ss' → logprob: -9.001898765563965
    5. '(b' → logprob: -10.626898765563965
    6. ' cursor' → logprob: -10.751898765563965
    7. '(s' → logprob: -11.126898765563965
    8. '(search' → logprob: -12.126898765563965
    9. '	cursor' → logprob: -12.251898765563965
    10. ')' → logprob: -12.376898765563965

Token 131: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001435708487406373
    2. ')
' → logprob: -6.62643575668335
    3. '   ' → logprob: -10.126435279846191
    4. ')+' → logprob: -10.126435279846191
    5. '+' → logprob: -10.876435279846191
    6. ' )' → logprob: -12.876435279846191
    7. '[' → logprob: -13.001435279846191
    8. ',' → logprob: -13.626435279846191
    9. ')
' → logprob: -14.376435279846191
    10. ')

' → logprob: -14.626435279846191

Token 132: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3498762547969818
    2. '
' → logprob: -1.9748762845993042
    3. 'ai' → logprob: -1.9748762845993042
    4. ')' → logprob: -5.099876403808594
    5. '    
' → logprob: -5.724876403808594
    6. 'first' → logprob: -6.474876403808594
    7. 'tmp' → logprob: -6.599876403808594
    8. ' ai' → logprob: -6.849876403808594
    9. 'cur' → logprob: -7.224876403808594
    10. '```' → logprob: -7.474876403808594

Token 133: ' max' (ID: 2999)
  Prédit: 'ai'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ai' → logprob: -0.5236217975616455
    2. 'tmp' → logprob: -1.1486217975616455
    3. 'bi' → logprob: -3.8986217975616455
    4. 'max' (adapté à ' max') → logprob: -4.148621559143066
    5. 'cur' → logprob: -4.148621559143066
    6. ' tmp' → logprob: -5.023621559143066
    7. 'last' → logprob: -5.148621559143066
    8. ' ai' → logprob: -5.398621559143066
    9. 'aa' → logprob: -5.648621559143066
    10. '   ' → logprob: -6.273621559143066

Token 134: '_cursor' (ID: 69415)
  Prédit: '_cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cur' → logprob: -0.0015218837652355433
    2. 'cur' → logprob: -7.251522064208984
    3. '_' → logprob: -8.126522064208984
    4. '_cursor' → logprob: -8.251522064208984
    5. '_val' → logprob: -10.126522064208984
    6. '_ai' → logprob: -10.251522064208984
    7. '_b' → logprob: -10.376522064208984
    8. '_max' → logprob: -11.001522064208984
    9. '_pos' → logprob: -11.126522064208984
    10. '_ab' → logprob: -11.251522064208984

Token 135: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4741097390651703
    2. '=' → logprob: -0.9741097688674927
    3. ')' → logprob: -10.974109649658203
    4. ',' → logprob: -12.724109649658203
    5. ' ' → logprob: -12.724109649658203
    6. 's' → logprob: -12.974109649658203
    7. '=s' → logprob: -14.099109649658203
    8. '_' → logprob: -14.474109649658203
    9. '<|end|>' → logprob: -14.724109649658203
    10. ':' → logprob: -14.974109649658203

Token 136: ' s' (ID: 265)
  Prédit: 'sss'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sss' → logprob: -0.3028614819049835
    2. ' s' → logprob: -1.5528614521026611
    3. 'len' → logprob: -3.552861452102661
    4. 'ss' → logprob: -4.30286169052124
    5. ' len' → logprob: -5.05286169052124
    6. 's' → logprob: -8.177861213684082
    7. 'ssss' → logprob: -8.552861213684082
    8. 'ccc' → logprob: -9.552861213684082
    9. ' ss' → logprob: -9.552861213684082
    10. '   ' → logprob: -9.802861213684082

Token 137: 'ss' (ID: 1087)
  Prédit: 'ss'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ss' → logprob: -0.014235081151127815
    2. 's' → logprob: -4.389235019683838
    3. '.index' → logprob: -6.389235019683838
    4. '.find' → logprob: -11.389235496520996
    5. 'sss' → logprob: -12.014235496520996
    6. 'sst' → logprob: -12.139235496520996
    7. '.length' → logprob: -12.639235496520996
    8. '[index' → logprob: -12.764235496520996
    9. 'index' → logprob: -13.014235496520996
    10. '.' → logprob: -13.389235496520996

Token 138: '.index' (ID: 9736)
  Prédit: '.index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.index' → logprob: -4.5252596464706585e-05
    2. '.' → logprob: -10.250044822692871
    3. 'index' → logprob: -11.750044822692871
    4. '.find' → logprob: -13.500044822692871
    5. '[' → logprob: -15.625044822692871
    6. ' .' → logprob: -16.125045776367188
    7. '#index' → logprob: -16.500045776367188
    8. '   ' → logprob: -16.875045776367188
    9. '[index' → logprob: -17.125045776367188
    10. '.argmax' → logprob: -17.125045776367188

Token 139: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -6.749814019713085e-06
    2. '0' → logprob: -12.625006675720215
    3. '(
' → logprob: -13.375006675720215
    4. ' (' → logprob: -13.625006675720215
    5. '('' → logprob: -15.750006675720215
    6. '(False' → logprob: -16.62500762939453
    7. '((' → logprob: -16.75000762939453
    8. '()' → logprob: -17.00000762939453
    9. '(-' → logprob: -17.37500762939453
    10. 'a' → logprob: -17.37500762939453

Token 140: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0011119971750304103
    2. ' ' → logprob: -7.25111198425293
    3. '(' → logprob: -8.12611198425293
    4. '1' → logprob: -10.00111198425293
    5. ',' → logprob: -10.87611198425293
    6. 'a' → logprob: -11.37611198425293
    7. 'b' → logprob: -11.50111198425293
    8. ')' → logprob: -12.12611198425293
    9. ' (' → logprob: -12.87611198425293
    10. '   ' → logprob: -13.00111198425293

Token 141: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00027849749312736094
    2. ')' → logprob: -8.25027847290039
    3. ',c' → logprob: -12.37527847290039
    4. ' ,' → logprob: -12.87527847290039
    5. '(cursor' → logprob: -13.12527847290039
    6. ',
' → logprob: -13.37527847290039
    7. '[' → logprob: -13.87527847290039
    8. ',b' → logprob: -14.12527847290039
    9. 'cursor' → logprob: -14.25027847290039
    10. '+' → logprob: -14.75027847290039

Token 142: ' cursor' (ID: 14944)
  Prédit: ' cursor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cursor' → logprob: -0.3565047085285187
    2. 'cursor' → logprob: -1.2315046787261963
    3. 'bbb' → logprob: -5.606504917144775
    4. ' b' → logprob: -6.481504917144775
    5. ' first' → logprob: -6.981504917144775
    6. 'first' → logprob: -7.856504917144775
    7. 'ccc' → logprob: -7.981504917144775
    8. ' aaa' → logprob: -8.606504440307617
    9. 'b' → logprob: -8.731504440307617
    10. ',' → logprob: -8.856504440307617

Token 143: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005626443307846785
    2. ')
' → logprob: -5.380626678466797
    3. '+' → logprob: -7.380626678466797
    4. ')+' → logprob: -8.005626678466797
    5. '   ' → logprob: -10.255626678466797
    6. ')
' → logprob: -12.630626678466797
    7. ' +' → logprob: -12.755626678466797
    8. ' )' → logprob: -13.380626678466797
    9. ')

' → logprob: -13.380626678466797
    10. '```' → logprob: -14.255626678466797

Token 144: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.32199597358703613
    2. '
' → logprob: -1.3219959735870361
    3. 'repeat' → logprob: -5.446995735168457
    4. '    
' → logprob: -6.571995735168457
    5. ')' → logprob: -7.196995735168457
    6. ' repeat' → logprob: -8.196995735168457
    7. '```' → logprob: -8.196995735168457
    8. 'ai' → logprob: -8.321995735168457
    9. '  ' → logprob: -8.821995735168457
    10. ',' → logprob: -8.821995735168457

Token 145: ' last' (ID: 2174)
  Prédit: 'repeat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'repeat' → logprob: -0.424728661775589
    2. 'tmp' → logprob: -1.7997286319732666
    3. 'cur' → logprob: -2.7997286319732666
    4. ' repeat' → logprob: -3.4247286319732666
    5. '   ' → logprob: -4.049728870391846
    6. 'count' → logprob: -4.174728870391846
    7. 'ai' → logprob: -4.549728870391846
    8. ' cur' → logprob: -4.674728870391846
    9. ' tmp' → logprob: -4.799728870391846
    10. 'last' (adapté à ' last') → logprob: -6.049728870391846

Token 146: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.03027036227285862
    2. '_' → logprob: -4.030270576477051
    3. '_a' → logprob: -4.530270576477051
    4. '_ai' → logprob: -7.780270576477051
    5. '_i' → logprob: -8.40527057647705
    6. 'a' → logprob: -9.03027057647705
    7. ' _' → logprob: -9.65527057647705
    8. '_bb' → logprob: -9.78027057647705
    9. 'b' → logprob: -9.90527057647705
    10. '_cursor' → logprob: -10.03027057647705

Token 147: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.004132541827857494
    2. 'b' → logprob: -5.6291327476501465
    3. 'bi' → logprob: -8.754132270812988
    4. ' =' → logprob: -9.004132270812988
    5. 'ii' → logprob: -9.754132270812988
    6. 'ai' → logprob: -10.254132270812988
    7. '=' → logprob: -10.254132270812988
    8. 'a' → logprob: -10.379132270812988
    9. 'bb' → logprob: -10.879132270812988
    10. 'bbb' → logprob: -11.129132270812988

Token 148: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1798129379749298
    2. '=' → logprob: -1.8048129081726074
    3. ' ' → logprob: -10.304813385009766
    4. ',' → logprob: -10.929813385009766
    5. '+' → logprob: -12.179813385009766
    6. ')' → logprob: -12.429813385009766
    7. ' =
' → logprob: -13.929813385009766
    8. ' +' → logprob: -14.054813385009766
    9. ' ' → logprob: -14.054813385009766
    10. ' ,' → logprob: -14.429813385009766

Token 149: ' aaa' (ID: 170080)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.6716082096099854
    2. ' first' → logprob: -1.5466082096099854
    3. ' len' → logprob: -1.6716082096099854
    4. 'len' → logprob: -3.0466082096099854
    5. 'first' → logprob: -4.046607971191406
    6. ' aaa' → logprob: -4.296607971191406
    7. 'bbb' → logprob: -5.671607971191406
    8. ' ' → logprob: -5.671607971191406
    9. 'b' → logprob: -7.671607971191406
    10. 'aaa' → logprob: -7.921607971191406

Token 150: '.index' (ID: 9736)
  Prédit: '.index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.index' → logprob: -0.0002541872672736645
    2. 'index' → logprob: -8.62525463104248
    3. '.first' → logprob: -10.37525463104248
    4. '.' → logprob: -11.00025463104248
    5. '[first' → logprob: -11.37525463104248
    6. '[' → logprob: -11.50025463104248
    7. '.append' → logprob: -14.00025463104248
    8. ' .' → logprob: -14.25025463104248
    9. '[index' → logprob: -14.25025463104248
    10. '.find' → logprob: -14.50025463104248

Token 151: '(max' (ID: 17178)
  Prédit: '(b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.9176287055015564
    2. '(max' → logprob: -1.1676287651062012
    3. '(cursor' → logprob: -2.292628765106201
    4. '(ss' → logprob: -2.292628765106201
    5. '(' → logprob: -2.667628765106201
    6. '(s' → logprob: -4.917628765106201
    7. '(tmp' → logprob: -5.917628765106201
    8. '(bb' → logprob: -6.042628765106201
    9. '(first' → logprob: -7.042628765106201
    10. 'bbb' → logprob: -7.042628765106201

Token 152: '_cursor' (ID: 69415)
  Prédit: '_cursor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cursor' → logprob: -0.03549618273973465
    2. 'cursor' → logprob: -3.535496234893799
    3. '_cur' → logprob: -6.160496234893799
    4. 'cur' → logprob: -6.285496234893799
    5. '(cursor' → logprob: -7.285496234893799
    6. ')' → logprob: -9.16049575805664
    7. '(b' → logprob: -9.53549575805664
    8. 'first' → logprob: -9.53549575805664
    9. 'b' → logprob: -9.78549575805664
    10. 'Cursor' → logprob: -9.78549575805664

Token 153: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.023787861689925194
    2. ',' → logprob: -4.023787975311279
    3. '+' → logprob: -6.398787975311279
    4. ' )' → logprob: -6.398787975311279
    5. ')+' → logprob: -6.523787975311279
    6. ' +' → logprob: -8.523787498474121
    7. '-' → logprob: -8.648787498474121
    8. ')
' → logprob: -9.148787498474121
    9. ' ,' → logprob: -9.273787498474121
    10. '[' → logprob: -9.648787498474121

Token 154: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04263966158032417
    2. '
' → logprob: -3.41763973236084
    3. ' last' → logprob: -6.16763973236084
    4. 'last' → logprob: -6.29263973236084
    5. 'repeat' → logprob: -6.41763973236084
    6. '<|end|>' → logprob: -6.79263973236084
    7. '```' → logprob: -7.54263973236084
    8. '    
' → logprob: -7.66763973236084
    9. ')' → logprob: -7.91763973236084
    10. 'def' → logprob: -9.04263973236084

Token 155: ' tmp' (ID: 8919)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9322373867034912
    2. '
' → logprob: -1.5572373867034912
    3. 'repeat' → logprob: -1.5572373867034912
    4. ' repeat' → logprob: -1.9322373867034912
    5. ' for' → logprob: -4.68223762512207
    6. '    
' → logprob: -5.43223762512207
    7. ' cur' → logprob: -5.68223762512207
    8. ' last' → logprob: -5.93223762512207
    9. 'i' → logprob: -5.93223762512207
    10. '```' → logprob: -5.93223762512207

Token 156: '_buf' (ID: 24144)
  Prédit: '_cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_cur' → logprob: -0.31354716420173645
    2. '_b' → logprob: -1.563547134399414
    3. '_' → logprob: -3.063547134399414
    4. '_ai' → logprob: -5.313547134399414
    5. '_cursor' → logprob: -5.938547134399414
    6. '_first' → logprob: -6.188547134399414
    7. '_last' → logprob: -6.563547134399414
    8. '_c' → logprob: -7.688547134399414
    9. 'cur' → logprob: -8.063547134399414
    10. '_a' → logprob: -8.688547134399414

Token 157: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2525317668914795
    2. '=' → logprob: -1.5025317668914795
    3. '_' → logprob: -7.627532005310059
    4. ' ' → logprob: -10.502532005310059
    5. 'a' → logprob: -11.252532005310059
    6. ',' → logprob: -11.377532005310059
    7. 'b' → logprob: -11.502532005310059
    8. '[' → logprob: -12.002532005310059
    9. '=[]' → logprob: -12.002532005310059
    10. '1' → logprob: -12.252532005310059

Token 158: ' ['' (ID: 5140)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.9987680912017822
    2. '[' → logprob: -1.4987680912017822
    3. '0' → logprob: -1.9987680912017822
    4. 'repeat' → logprob: -2.2487680912017822
    5. '1' → logprob: -2.6237680912017822
    6. 'bbb' → logprob: -3.6237680912017822
    7. ' []' → logprob: -4.373767852783203
    8. 'first' → logprob: -4.873767852783203
    9. 'aaa' → logprob: -5.123767852783203
    10. '[first' → logprob: -5.123767852783203

Token 159: '']' (ID: 1089)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.9959968328475952
    2. 'b' → logprob: -1.3709968328475952
    3. '']' → logprob: -1.8709968328475952
    4. '0' → logprob: -2.6209969520568848
    5. 's' → logprob: -2.7459969520568848
    6. ''' → logprob: -3.6209969520568848
    7. '[' → logprob: -4.620996952056885
    8. '(' → logprob: -5.120996952056885
    9. '('' → logprob: -5.120996952056885
    10. ' ']' → logprob: -5.370996952056885

Token 160: ' *' (ID: 425)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 161: ' (' (ID: 350)
  Prédit: '(last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(last' → logprob: -0.5177783966064453
    2. 'repeat' → logprob: -2.1427783966064453
    3. ' (' → logprob: -2.5177783966064453
    4. '(re' → logprob: -2.5177783966064453
    5. '(len' → logprob: -3.0177783966064453
    6. '(' → logprob: -3.1427783966064453
    7. 'last' → logprob: -4.517778396606445
    8. '(max' → logprob: -4.892778396606445
    9. ' repeat' → logprob: -5.267778396606445
    10. 'len' → logprob: -5.767778396606445

Token 162: 'last' (ID: 6684)
  Prédit: 'last'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.05313076078891754
    2. ' last' → logprob: -3.303130865097046
    3. 'max' → logprob: -4.803130626678467
    4. 'len' → logprob: -5.428130626678467
    5. '(last' → logprob: -6.553130626678467
    6. ' max' → logprob: -7.803130626678467
    7. ' ' → logprob: -9.053131103515625
    8. '  ' → logprob: -9.303131103515625
    9. 'bbb' → logprob: -9.678131103515625
    10. '   ' → logprob: -9.803131103515625

Token 163: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.006481003016233444
    2. '+' → logprob: -5.381481170654297
    3. ' +' → logprob: -7.756481170654297
    4. 'b' → logprob: -8.131481170654297
    5. 'last' → logprob: -8.256481170654297
    6. ' -' → logprob: -8.631481170654297
    7. '_a' → logprob: -9.256481170654297
    8. '_last' → logprob: -9.256481170654297
    9. '_ai' → logprob: -9.381481170654297
    10. '_' → logprob: -9.506481170654297

Token 164: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -6.074907287256792e-05
    2. 'last' → logprob: -10.87506103515625
    3. 'и' → logprob: -11.37506103515625
    4. ')' → logprob: -11.87506103515625
    5. '_i' → logprob: -12.37506103515625
    6. 'I' → logprob: -12.62506103515625
    7. '```' → logprob: -13.25006103515625
    8. ''i' → logprob: -13.50006103515625
    9. 'ai' → logprob: -13.81256103515625
    10. 'a' → logprob: -14.06256103515625

Token 165: ' -' (ID: 533)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2755695581436157
    2. '-' → logprob: -1.9005695581436157
    3. ')' → logprob: -2.650569438934326
    4. ' +' → logprob: -4.275569438934326
    5. ' -' → logprob: -5.150569438934326
    6. ' )' → logprob: -7.275569438934326
    7. '[' → logprob: -9.275569915771484
    8. ']' → logprob: -9.525569915771484
    9. '#' → logprob: -10.900569915771484
    10. '...' → logprob: -11.025569915771484

Token 166: ' first' (ID: 1577)
  Prédit: 'first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'first' → logprob: -0.1428486853837967
    2. ' first' → logprob: -2.0178487300872803
    3. '(first' → logprob: -9.89284896850586
    4. ' ' → logprob: -10.39284896850586
    5. '   ' → logprob: -10.39284896850586
    6. '	first' → logprob: -10.39284896850586
    7. '[first' → logprob: -11.89284896850586
    8. '  ' → logprob: -11.89284896850586
    9. 'last' → logprob: -12.14284896850586
    10. '    ' → logprob: -12.26784896850586

Token 167: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.008480535820126534
    2. 'b' → logprob: -5.008480548858643
    3. 'bi' → logprob: -6.758480548858643
    4. '+' → logprob: -8.383480072021484
    5. '_i' → logprob: -9.258480072021484
    6. '_' → logprob: -9.383480072021484
    7. 'i' → logprob: -9.633480072021484
    8. ' +' → logprob: -11.383480072021484
    9. 'first' → logprob: -11.383480072021484
    10. ')' → logprob: -11.445980072021484

Token 168: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00012070851516909897
    2. 'I' → logprob: -10.000121116638184
    3. ')' → logprob: -10.750121116638184
    4. '_i' → logprob: -11.625121116638184
    5. '```' → logprob: -12.375121116638184
    6. ']' → logprob: -12.437621116638184
    7. 'и' → logprob: -12.562621116638184
    8. 'a' → logprob: -12.812621116638184
    9. 'b' → logprob: -13.000121116638184
    10. ''i' → logprob: -13.062621116638184

Token 169: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0980692133307457
    2. ' +' → logprob: -2.848069190979004
    3. ')' → logprob: -3.348069190979004
    4. ' )' → logprob: -8.223069190979004
    5. '+)' → logprob: -11.598069190979004
    6. ']' → logprob: -11.973069190979004
    7. '+
' → logprob: -12.348069190979004
    8. '[' → logprob: -12.473069190979004
    9. ')
' → logprob: -13.348069190979004
    10. '   ' → logprob: -13.348069190979004

Token 170: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011049000546336174
    2. ' ' → logprob: -4.511048793792725
    3. '   ' → logprob: -14.761049270629883
    4. '```' → logprob: -14.886049270629883
    5. '2' → logprob: -15.636049270629883
    6. ')' → logprob: -16.136049270629883
    7. '
' → logprob: -16.636049270629883
    8. ' ' → logprob: -17.136049270629883
    9. '  ' → logprob: -17.323549270629883
    10. '0' → logprob: -17.698549270629883

Token 171: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00014096579980105162
    2. ' ' → logprob: -8.875141143798828
    3. '   ' → logprob: -14.875141143798828
    4. '2' → logprob: -15.250141143798828
    5. '```' → logprob: -15.625141143798828
    6. ')' → logprob: -16.312641143798828
    7. '
' → logprob: -16.437641143798828
    8. '...' → logprob: -17.562641143798828
    9. '  ' → logprob: -17.687641143798828
    10. 'len' → logprob: -18.000141143798828

Token 172: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011236205697059631
    2. ')
' → logprob: -4.511236190795898
    3. ' )' → logprob: -8.886236190795898
    4. ']' → logprob: -10.886236190795898
    5. ')
' → logprob: -11.386236190795898
    6. '   ' → logprob: -12.011236190795898
    7. ' )
' → logprob: -12.261236190795898
    8. ')

' → logprob: -12.886236190795898
    9. ')]' → logprob: -13.386236190795898
    10. '))' → logprob: -14.261236190795898

Token 173: ' *' (ID: 425)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.40247464179992676
    2. '<|end|>' → logprob: -1.5274746417999268
    3. '   ' → logprob: -2.5274746417999268
    4. ')' → logprob: -5.152474403381348
    5. ' for' → logprob: -5.152474403381348
    6. '    
' → logprob: -5.152474403381348
    7. '<|end|>' → logprob: -5.777474403381348
    8. 'for' → logprob: -5.902474403381348
    9. '  
' → logprob: -6.027474403381348
    10. ' ' → logprob: -6.402474403381348

Token 174: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.18952396512031555
    2. ' ' → logprob: -2.189523935317993
    3. '3' → logprob: -3.939523935317993
    4. 'repeat' → logprob: -4.189524173736572
    5. ' repeat' → logprob: -5.439524173736572
    6. '10' → logprob: -5.689524173736572
    7. '4' → logprob: -5.814524173736572
    8. '[' → logprob: -6.064524173736572
    9. '100' → logprob: -6.189524173736572
    10. '5' → logprob: -6.439524173736572

Token 175: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.13886238634586334
    2. 'repeat' → logprob: -3.013862371444702
    3. '3' → logprob: -3.638862371444702
    4. '10' → logprob: -4.888862609863281
    5. '100' → logprob: -4.888862609863281
    6. 'len' → logprob: -5.013862609863281
    7. '4' → logprob: -5.388862609863281
    8. '[' → logprob: -5.388862609863281
    9. ' ' → logprob: -5.513862609863281
    10. '5' → logprob: -5.888862609863281

Token 176: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 177: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1362234354019165
    2. ' for' → logprob: -3.386223316192627
    3. '
' → logprob: -4.011223316192627
    4. '<|end|>' → logprob: -4.136223316192627
    5. '    
' → logprob: -4.386223316192627
    6. 'for' → logprob: -4.886223316192627
    7. ' ' → logprob: -4.886223316192627
    8. '[' → logprob: -5.011223316192627
    9. ')' → logprob: -5.511223316192627
    10. '\t' → logprob: -6.136223316192627

Token 178: ' tmp' (ID: 8919)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.9752535223960876
    2. ' ' → logprob: -1.4752535820007324
    3. ' i' → logprob: -2.1002535820007324
    4. 'for' → logprob: -2.3502535820007324
    5. 'i' → logprob: -3.1002535820007324
    6. ' 
' → logprob: -3.7252535820007324
    7. '   ' → logprob: -4.100253582000732
    8. ' tmp' → logprob: -4.600253582000732
    9. ' idx' → logprob: -4.600253582000732
    10. 'idx' → logprob: -4.850253582000732

Token 179: '_max' (ID: 13731)
  Prédit: '_buf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_buf' → logprob: -0.12089800089597702
    2. '_' → logprob: -2.8708980083465576
    3. '_cur' → logprob: -3.4958980083465576
    4. '_idx' → logprob: -4.6208977699279785
    5. 'buf' → logprob: -5.3708977699279785
    6. ' =' → logprob: -6.3708977699279785
    7. '_buffer' → logprob: -6.3708977699279785
    8. 'cur' → logprob: -6.7458977699279785
    9. '_buff' → logprob: -6.7458977699279785
    10. '=' → logprob: -6.8708977699279785

Token 180: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.021290794014930725
    2. '_idx' → logprob: -5.1462907791137695
    3. '_cur' → logprob: -5.1462907791137695
    4. '=' → logprob: -5.7712907791137695
    5. '_=' → logprob: -6.0212907791137695
    6. ' =' → logprob: -6.6462907791137695
    7. '_len' → logprob: -7.1462907791137695
    8. '_index' → logprob: -7.2712907791137695
    9. '_cursor' → logprob: -7.7712907791137695
    10. '_buf' → logprob: -8.52129077911377

Token 181: ' ''
' (ID: 25366)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3314815163612366
    2. 'len' → logprob: -2.081481456756592
    3. ' ' → logprob: -2.706481456756592
    4. ' len' → logprob: -3.456481456756592
    5. 'first' → logprob: -4.206481456756592
    6. 'last' → logprob: -4.456481456756592
    7. ' first' → logprob: -4.956481456756592
    8. ' last' → logprob: -5.206481456756592
    9. ' (' → logprob: -5.581481456756592
    10. '(len' → logprob: -5.706481456756592

Token 182: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 183: ' for' (ID: 395)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 184: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.025815164670348167
    2. 'i' → logprob: -4.400815010070801
    3. ' _' → logprob: -5.525815010070801
    4. ' idx' → logprob: -5.650815010070801
    5. ' bi' → logprob: -7.025815010070801
    6. ' ii' → logprob: -7.150815010070801
    7. ' x' → logprob: -7.650815010070801
    8. ' ai' → logprob: -7.650815010070801
    9. ' ' → logprob: -7.650815010070801
    10. '_' → logprob: -7.650815010070801

Token 185: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.003276937175542116
    2. ' ' → logprob: -6.128276824951172
    3. 'in' → logprob: -7.003276824951172
    4. ',' → logprob: -9.253276824951172
    5. 'range' → logprob: -10.628276824951172
    6. ' range' → logprob: -10.753276824951172
    7. ' i' → logprob: -11.378276824951172
    8. '  ' → logprob: -11.753276824951172
    9. '_' → logprob: -12.003276824951172
    10. ' ' → logprob: -12.753276824951172

Token 186: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.2521533966064453
    2. ' range' → logprob: -1.5021533966064453
    3. ' ' → logprob: -9.002153396606445
    4. 'tmp' → logprob: -11.127153396606445
    5. '	range' → logprob: -11.502153396606445
    6. ' aaa' → logprob: -11.752153396606445
    7. '  ' → logprob: -11.877153396606445
    8. '   ' → logprob: -12.189653396606445
    9. '(range' → logprob: -12.252153396606445
    10. 'ra' → logprob: -12.314653396606445

Token 187: '(last' (ID: 39599)
  Prédit: '(first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(first' → logprob: -0.01305870059877634
    2. '(' → logprob: -4.513058662414551
    3. ' (' → logprob: -6.888058662414551
    4. 'first' → logprob: -7.638058662414551
    5. ' first' → logprob: -7.763058662414551
    6. '(len' → logprob: -10.26305866241455
    7. '(last' → logprob: -11.26305866241455
    8. '[first' → logprob: -11.63805866241455
    9. '(
' → logprob: -12.01305866241455
    10. '	first' → logprob: -12.13805866241455

Token 188: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -3.666993507067673e-05
    2. '_a' → logprob: -12.000036239624023
    3. 'b' → logprob: -12.250036239624023
    4. ' ' → logprob: -12.500036239624023
    5. '+' → logprob: -12.750036239624023
    6. '   ' → logprob: -12.875036239624023
    7. '_i' → logprob: -13.000036239624023
    8. '_' → logprob: -13.250036239624023
    9. ' -' → logprob: -13.250036239624023
    10. 'first' → logprob: -13.625036239624023

Token 189: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -9.698698704596609e-05
    2. '_i' → logprob: -10.000097274780273
    3. 'first' → logprob: -10.125097274780273
    4. 'a' → logprob: -13.125097274780273
    5. ')' → logprob: -13.250097274780273
    6. 'и' → logprob: -13.625097274780273
    7. '_first' → logprob: -14.250097274780273
    8. '```' → logprob: -14.250097274780273
    9. 'fi' → logprob: -14.687597274780273
    10. '_' → logprob: -15.125097274780273

Token 190: ',' (ID: 11)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.8367175459861755
    2. '+' → logprob: -0.9617175459861755
    3. ' -' → logprob: -2.3367176055908203
    4. ',' → logprob: -3.4617176055908203
    5. '-' → logprob: -3.4617176055908203
    6. '):' → logprob: -4.83671760559082
    7. 'first' → logprob: -5.21171760559082
    8. ' ,' → logprob: -5.58671760559082
    9. ' ' → logprob: -6.21171760559082
    10. '   ' → logprob: -6.96171760559082

Token 191: ' first' (ID: 1577)
  Prédit: ' first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' first' → logprob: -0.38700994849205017
    2. 'first' → logprob: -1.1370099782943726
    3. '	first' → logprob: -10.137009620666504
    4. ' ' → logprob: -10.637009620666504
    5. 'First' → logprob: -11.387009620666504
    6. '-' → logprob: -11.512009620666504
    7. '   ' → logprob: -11.637009620666504
    8. ' last' → logprob: -11.887009620666504
    9. 'last' → logprob: -12.262009620666504
    10. ' -' → logprob: -12.387009620666504

Token 192: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.00126059097237885
    2. '-' → logprob: -7.501260757446289
    3. '_i' → logprob: -7.876260757446289
    4. '_a' → logprob: -9.126260757446289
    5. 'b' → logprob: -10.126260757446289
    6. ' -' → logprob: -10.501260757446289
    7. 'i' → logprob: -10.501260757446289
    8. '+' → logprob: -10.626260757446289
    9. 'a' → logprob: -10.626260757446289
    10. '_' → logprob: -10.876260757446289

Token 193: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0010893779108300805
    2. '_i' → logprob: -7.501089572906494
    3. '-' → logprob: -7.751089572906494
    4. ')' → logprob: -11.001089096069336
    5. '+' → logprob: -11.126089096069336
    6. 'ai' → logprob: -11.751089096069336
    7. 'f' → logprob: -11.751089096069336
    8. ' ' → logprob: -12.126089096069336
    9. 'fi' → logprob: -12.126089096069336
    10. '```' → logprob: -12.126089096069336

Token 194: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.005569779314100742
    2. ' -' → logprob: -5.380569934844971
    3. ',' → logprob: -7.005569934844971
    4. ' ' → logprob: -10.505569458007812
    5. '+' → logprob: -12.755569458007812
    6. ',-' → logprob: -12.755569458007812
    7. '   ' → logprob: -12.880569458007812
    8. ' ,' → logprob: -13.130569458007812
    9. ')' → logprob: -13.880569458007812
    10. ',
' → logprob: -14.568069458007812

Token 195: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.036524842376821e-05
    2. ' ' → logprob: -10.125040054321289
    3. '-' → logprob: -16.87504005432129
    4. '<|end|>' → logprob: -17.00004005432129
    5. '   ' → logprob: -17.37504005432129
    6. '...' → logprob: -18.31254005432129
    7. '
' → logprob: -19.00004005432129
    8. '    ' → logprob: -19.00004005432129
    9. '۱' → logprob: -19.25004005432129
    10. ',' → logprob: -19.25004005432129

Token 196: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.1557283111615106e-05
    2. ' ' → logprob: -10.125041961669922
    3. '-' → logprob: -14.750041961669922
    4. '
' → logprob: -15.312541961669922
    5. '   ' → logprob: -15.312541961669922
    6. '2' → logprob: -16.187541961669922
    7. '...' → logprob: -16.562541961669922
    8. '

' → logprob: -16.875041961669922
    9. ' -' → logprob: -17.250041961669922
    10. '  ' → logprob: -17.312541961669922

Token 197: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006278328597545624
    2. '-' → logprob: -5.1312785148620605
    3. ',-' → logprob: -8.006278038024902
    4. ' -' → logprob: -11.756278038024902
    5. ' ,' → logprob: -12.131278038024902
    6. ',
' → logprob: -14.131278038024902
    7. '   ' → logprob: -14.506278038024902
    8. '1' → logprob: -14.631278038024902
    9. '```' → logprob: -15.506278038024902
    10. '-,' → logprob: -15.756278038024902

Token 198: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.04859782010316849
    2. ' -' → logprob: -3.048597812652588
    3. ' ' → logprob: -11.798598289489746
    4. '   ' → logprob: -13.548598289489746
    5. '  ' → logprob: -14.923598289489746
    6. '-step' → logprob: -14.923598289489746
    7. ',-' → logprob: -15.048598289489746
    8. ',' → logprob: -16.17359733581543
    9. '	' → logprob: -16.17359733581543
    10. '1' → logprob: -16.29859733581543

Token 199: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2113979209971149e-05
    2. ' ' → logprob: -11.375012397766113
    3. ',' → logprob: -16.125011444091797
    4. ' -' → logprob: -16.375011444091797
    5. ')' → logprob: -16.500011444091797
    6. '   ' → logprob: -16.875011444091797
    7. '-' → logprob: -16.875011444091797
    8. '```' → logprob: -17.375011444091797
    9. '
' → logprob: -17.875011444091797
    10. '2' → logprob: -18.125011444091797

Token 200: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1006157323718071
    2. '):
' → logprob: -2.3506157398223877
    3. ',' → logprob: -8.475615501403809
    4. ' ):' → logprob: -9.225615501403809
    5. ':' → logprob: -10.475615501403809
    6. ')' → logprob: -10.725615501403809
    7. '):
' → logprob: -10.725615501403809
    8. '   ' → logprob: -10.975615501403809
    9. ' ):
' → logprob: -12.225615501403809
    10. '):

' → logprob: -12.975615501403809

Token 201: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11431951820850372
    2. ':' → logprob: -3.4893195629119873
    3. '        
' → logprob: -3.4893195629119873
    4. ' ' → logprob: -3.9893195629119873
    5. '   ' → logprob: -4.989319324493408
    6. '<|end|>' → logprob: -5.489319324493408
    7. ',' → logprob: -5.614319324493408
    8. '    ' → logprob: -5.864319324493408
    9. ' :' → logprob: -5.989319324493408
    10. ' 
' → logprob: -6.364319324493408

Token 202: ' tmp' (ID: 8919)
  Prédit: ' tmp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tmp' → logprob: -0.29764366149902344
    2. ' if' → logprob: -2.4226436614990234
    3. ' c' → logprob: -3.1726436614990234
    4. '   ' → logprob: -3.1726436614990234
    5. 'tmp' (adapté à ' tmp') → logprob: -3.4226436614990234
    6. ' cur' → logprob: -4.922643661499023
    7. '       ' → logprob: -4.922643661499023
    8. ' ' → logprob: -4.922643661499023
    9. '    ' → logprob: -5.672643661499023
    10. ' s' → logprob: -5.797643661499023

Token 203: '_buf' (ID: 24144)
  Prédit: '_buf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_buf' → logprob: -0.34087738394737244
    2. '_max' → logprob: -1.4658774137496948
    3. '_cur' → logprob: -3.7158772945404053
    4. '_' → logprob: -3.8408772945404053
    5. '_tmp' → logprob: -4.840877532958984
    6. ' =' → logprob: -6.465877532958984
    7. '=' → logprob: -7.340877532958984
    8. 'max' → logprob: -7.590877532958984
    9. 'buf' → logprob: -8.340877532958984
    10. '_=' → logprob: -8.590877532958984

Token 204: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.14263154566287994
    2. '[i' → logprob: -2.6426315307617188
    3. '=' → logprob: -3.2676315307617188
    4. ' =' → logprob: -4.892631530761719
    5. '[len' → logprob: -5.267631530761719
    6. '['' → logprob: -6.017631530761719
    7. '[-' → logprob: -6.142631530761719
    8. '[tmp' → logprob: -6.517631530761719
    9. '[last' → logprob: -7.017631530761719
    10. '[:]' → logprob: -7.142631530761719

Token 205: 'aaa' (ID: 55894)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.6340248584747314
    2. 'i' → logprob: -1.5090248584747314
    3. ' (' → logprob: -2.0090248584747314
    4. ' i' → logprob: -2.7590248584747314
    5. '(' → logprob: -3.6340248584747314
    6. '2' → logprob: -4.509024620056152
    7. ' ' → logprob: -5.259024620056152
    8. '(len' → logprob: -6.259024620056152
    9. '(tmp' → logprob: -6.509024620056152
    10. '(last' → logprob: -6.884024620056152

Token 206: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.03261159732937813
    2. '[' → logprob: -4.03261137008667
    3. '.index' → logprob: -5.15761137008667
    4. 'i' → logprob: -6.03261137008667
    5. 'index' → logprob: -6.03261137008667
    6. ']' → logprob: -6.53261137008667
    7. '][' → logprob: -7.65761137008667
    8. ' i' → logprob: -8.407611846923828
    9. ')' → logprob: -8.532611846923828
    10. ' index' → logprob: -8.782611846923828

Token 207: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.12318838387727737
    2. '-' → logprob: -2.9981884956359863
    3. ' -' → logprob: -3.4981884956359863
    4. '*' → logprob: -3.9981884956359863
    5. ']-' → logprob: -4.748188495635986
    6. ']]' → logprob: -6.123188495635986
    7. ' *' → logprob: -6.248188495635986
    8. ']*' → logprob: -6.873188495635986
    9. ')' → logprob: -7.248188495635986
    10. ']+' → logprob: -7.373188495635986

Token 208: ' -' (ID: 533)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.7332754135131836
    2. '*' → logprob: -0.8582754135131836
    3. '-' → logprob: -3.4832754135131836
    4. ']=' → logprob: -3.8582754135131836
    5. ' -' → logprob: -3.8582754135131836
    6. ' *' → logprob: -3.9832754135131836
    7. '+' → logprob: -5.983275413513184
    8. '   ' → logprob: -7.983275413513184
    9. ' +' → logprob: -8.233275413513184
    10. ']='' → logprob: -8.608275413513184

Token 209: ' cursor' (ID: 14944)
  Prédit: 'aaa'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aaa' → logprob: -0.7200271487236023
    2. 'bbb' → logprob: -0.7200271487236023
    3. 'cursor' → logprob: -3.845027208328247
    4. 'first' → logprob: -5.845026969909668
    5. 'ccc' → logprob: -7.220026969909668
    6. ' aaa' → logprob: -7.845026969909668
    7. 'cur' → logprob: -8.470026969909668
    8. 'tmp' → logprob: -8.720026969909668
    9. ' cursor' → logprob: -9.595026969909668
    10. 'bb' → logprob: -9.595026969909668

Token 210: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.012132390402257442
    2. '*' → logprob: -5.512132167816162
    3. ']=' → logprob: -5.762132167816162
    4. '+' → logprob: -5.887132167816162
    5. ' ]' → logprob: -7.387132167816162
    6. ' +' → logprob: -7.387132167816162
    7. ' *' → logprob: -7.887132167816162
    8. '   ' → logprob: -8.63713264465332
    9. '-' → logprob: -9.13713264465332
    10. ']+=' → logprob: -10.26213264465332

Token 211: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1741616427898407
    2. ' =' → logprob: -2.049161672592163
    3. ']=' → logprob: -4.174161434173584
    4. ']' → logprob: -4.174161434173584
    5. ']='' → logprob: -10.049161911010742
    6. ']+=' → logprob: -10.049161911010742
    7. '+=' → logprob: -10.174161911010742
    8. '='' → logprob: -10.174161911010742
    9. '[' → logprob: -11.674161911010742
    10. ' ]' → logprob: -11.799161911010742

Token 212: ' '' (ID: 461)
  Prédit: ''b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''b' → logprob: -0.15458078682422638
    2. ''s' → logprob: -3.02958083152771
    3. ''a' → logprob: -3.15458083152771
    4. ' '' → logprob: -3.90458083152771
    5. 's' → logprob: -4.529580593109131
    6. ''' → logprob: -4.654580593109131
    7. 'b' → logprob: -5.029580593109131
    8. ' s' → logprob: -5.904580593109131
    9. ' ' → logprob: -7.154580593109131
    10. 'a' → logprob: -7.404580593109131

Token 213: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5454453825950623
    2. 'b' → logprob: -0.9204453825950623
    3. ''b' → logprob: -4.920445442199707
    4. 's' → logprob: -5.295445442199707
    5. ''a' → logprob: -5.295445442199707
    6. ''' → logprob: -5.920445442199707
    7. ' a' → logprob: -7.170445442199707
    8. ' b' → logprob: -7.545445442199707
    9. ''s' → logprob: -8.420445442199707
    10. ' ' → logprob: -9.357945442199707

Token 214: ''
' (ID: 2207)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0053132083266973495
    2. ''
' → logprob: -5.255313396453857
    3. ' '' → logprob: -10.6303129196167
    4. ']'' → logprob: -11.1303129196167
    5. ''b' → logprob: -12.1303129196167
    6. ']' → logprob: -12.3803129196167
    7. '']' → logprob: -12.3803129196167
    8. ''

' → logprob: -12.6303129196167
    9. '<|end|>' → logprob: -12.7553129196167
    10. '"' → logprob: -12.8803129196167

Token 215: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6282579302787781
    2. '
' → logprob: -1.0032579898834229
    3. '<|end|>' → logprob: -2.378257989883423
    4. '        
' → logprob: -5.753257751464844
    5. ' 
' → logprob: -6.628257751464844
    6. ' ' → logprob: -7.628257751464844
    7. '\n' → logprob: -7.878257751464844
    8. ')' → logprob: -8.128257751464844
    9. '<|end|>' → logprob: -8.378257751464844
    10. '   ' → logprob: -8.628257751464844

Token 216: ' tmp' (ID: 8919)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3727700114250183
    2. 'tmp' (adapté à ' tmp') → logprob: -2.497770071029663
    3. 'bbb' → logprob: -3.122770071029663
    4. ' tmp' → logprob: -3.122770071029663
    5. '        
' → logprob: -3.497770071029663
    6. ' b' → logprob: -3.747770071029663
    7. ' ' → logprob: -3.872770071029663
    8. ' 
' → logprob: -3.997770071029663
    9. '
' → logprob: -4.372769832611084
    10. '   ' → logprob: -4.497769832611084

Token 217: '_buf' (ID: 24144)
  Prédit: '_buf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_buf' → logprob: -0.002128968248143792
    2. '_b' → logprob: -7.127129077911377
    3. '[' → logprob: -7.752129077911377
    4. 'buf' → logprob: -8.252128601074219
    5. 'b' → logprob: -8.752128601074219
    6. '_buff' → logprob: -9.127128601074219
    7. '[i' → logprob: -9.377128601074219
    8. '[_' → logprob: -9.752128601074219
    9. '_' → logprob: -9.877128601074219
    10. '_cur' → logprob: -10.627128601074219

Token 218: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00125749537255615
    2. '[i' → logprob: -7.626257419586182
    3. '[b' → logprob: -8.00125789642334
    4. 'bbb' → logprob: -8.62625789642334
    5. ' [' → logprob: -10.37625789642334
    6. ']' → logprob: -10.62625789642334
    7. '[tmp' → logprob: -10.62625789642334
    8. '][' → logprob: -11.25125789642334
    9. '[(' → logprob: -11.37625789642334
    10. '[next' → logprob: -11.37625789642334

Token 219: 'bbb' (ID: 105015)
  Prédit: 'bbb'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bbb' → logprob: -0.01789647340774536
    2. ' b' → logprob: -4.14289665222168
    3. ' ' → logprob: -7.76789665222168
    4. '   ' → logprob: -7.89289665222168
    5. '  ' → logprob: -8.14289665222168
    6. 'aaa' → logprob: -8.64289665222168
    7. 'bb' → logprob: -9.01789665222168
    8. '
' → logprob: -9.14289665222168
    9. ' i' → logprob: -9.14289665222168
    10. '    ' → logprob: -9.76789665222168

Token 220: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.008778125047683716
    2. '[' → logprob: -4.758778095245361
    3. 'i' → logprob: -9.50877857208252
    4. ']' → logprob: -9.88377857208252
    5. '][' → logprob: -11.38377857208252
    6. '[b' → logprob: -12.00877857208252
    7. '[
' → logprob: -12.50877857208252
    8. ' [' → logprob: -13.13377857208252
    9. '```' → logprob: -13.13377857208252
    10. '[ii' → logprob: -13.38377857208252

Token 221: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.002412873087450862
    2. ']-' → logprob: -7.127412796020508
    3. ' -' → logprob: -7.627412796020508
    4. ' ]' → logprob: -7.627412796020508
    5. '-' → logprob: -8.127412796020508
    6. '[' → logprob: -8.877412796020508
    7. '']' → logprob: -9.002412796020508
    8. 'b' → logprob: -10.752412796020508
    9. '   ' → logprob: -11.252412796020508
    10. ' ' → logprob: -12.252412796020508

Token 222: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.1467645913362503
    2. '-' → logprob: -2.0217645168304443
    3. '[' → logprob: -6.271764755249023
    4. ']' → logprob: -6.396764755249023
    5. ' ' → logprob: -8.271764755249023
    6. '[i' → logprob: -9.646764755249023
    7. '-b' → logprob: -10.271764755249023
    8. ']-' → logprob: -10.646764755249023
    9. '   ' → logprob: -11.146764755249023
    10. ')' → logprob: -11.146764755249023

Token 223: ' cursor' (ID: 14944)
  Prédit: 'cursor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cursor' → logprob: -0.17982003092765808
    2. ' cursor' → logprob: -1.8048200607299805
    3. '(cursor' → logprob: -10.67982006072998
    4. '	cursor' → logprob: -11.05482006072998
    5. '.cursor' → logprob: -11.30482006072998
    6. '_cursor' → logprob: -11.92982006072998
    7. 'cur' → logprob: -12.42982006072998
    8. ' ' → logprob: -12.67982006072998
    9. 'ursor' → logprob: -13.55482006072998
    10. '
' → logprob: -13.61732006072998

Token 224: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00270644249394536
    2. ']=' → logprob: -6.752706527709961
    3. '=' → logprob: -7.252706527709961
    4. '']' → logprob: -7.627706527709961
    5. ' ]' → logprob: -8.127706527709961
    6. ' =' → logprob: -10.877706527709961
    7. ']='' → logprob: -11.502706527709961
    8. '']=' → logprob: -12.252706527709961
    9. '   ' → logprob: -12.877706527709961
    10. '"]' → logprob: -13.627706527709961

Token 225: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10022015124559402
    2. ' =' → logprob: -2.350220203399658
    3. ']' → logprob: -12.3502197265625
    4. '='' → logprob: -12.7252197265625
    5. ' ' → logprob: -12.8502197265625
    6. ' ='' → logprob: -13.3502197265625
    7. ']=' → logprob: -13.7252197265625
    8. ')' → logprob: -15.3502197265625
    9. '=
' → logprob: -15.8502197265625
    10. '[' → logprob: -16.3502197265625

Token 226: ' '' (ID: 461)
  Prédit: ''b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''b' → logprob: -0.20516632497310638
    2. ''' → logprob: -1.8301663398742676
    3. ' '' → logprob: -3.7051663398742676
    4. 'b' → logprob: -8.20516586303711
    5. ' ' → logprob: -9.58016586303711
    6. ''a' → logprob: -9.70516586303711
    7. ' b' → logprob: -9.95516586303711
    8. ''s' → logprob: -11.33016586303711
    9. '
' → logprob: -11.83016586303711
    10. '"' → logprob: -12.20516586303711

Token 227: 'b' (ID: 65)
  Prédit: ''b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''b' → logprob: -0.055118314921855927
    2. 'b' → logprob: -2.9301183223724365
    3. ''' → logprob: -9.055118560791016
    4. ' '' → logprob: -9.930118560791016
    5. ' b' → logprob: -10.055118560791016
    6. ''a' → logprob: -11.055118560791016
    7. ''s' → logprob: -12.305118560791016
    8. '	b' → logprob: -13.805118560791016
    9. '
' → logprob: -14.055118560791016
    10. '"' → logprob: -14.055118560791016

Token 228: ''
' (ID: 2207)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 229: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.053842782974243164
    2. '   ' → logprob: -3.678842782974243
    3. ' for' → logprob: -4.303842544555664
    4. ' ' → logprob: -5.303842544555664
    5. ' if' → logprob: -5.803842544555664
    6. '<|end|>' → logprob: -6.178842544555664
    7. '
' → logprob: -7.428842544555664
    8. '        
' → logprob: -7.553842544555664
    9. ' while' → logprob: -7.803842544555664
    10. 'for' → logprob: -8.053842544555664

Token 230: ' tmp' (ID: 8919)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6825348734855652
    2. ' for' → logprob: -1.68253493309021
    3. '       ' → logprob: -2.43253493309021
    4. ' tmp' → logprob: -2.43253493309021
    5. '   ' → logprob: -3.18253493309021
    6. 'if' → logprob: -3.68253493309021
    7. 'for' → logprob: -3.93253493309021
    8. 'tmp' (adapté à ' tmp') → logprob: -4.057534694671631
    9. ' ' → logprob: -4.557534694671631
    10. ' max' → logprob: -5.557534694671631

Token 231: ' =' (ID: 314)
  Prédit: '_buf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_buf' → logprob: -0.025017203763127327
    2. '_max' → logprob: -4.150017261505127
    3. 'buf' → logprob: -5.400017261505127
    4. '_cur' → logprob: -6.150017261505127
    5. 'max' → logprob: -6.775017261505127
    6. '[' → logprob: -8.650016784667969
    7. '_tmp' → logprob: -8.650016784667969
    8. '_' → logprob: -9.025016784667969
    9. 'Buf' → logprob: -9.275016784667969
    10. '_buff' → logprob: -9.775016784667969

Token 232: ' ''.' (ID: 105941)
  Prédit: '''.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '''.' → logprob: -0.6777939200401306
    2. 'tmp' → logprob: -1.4277939796447754
    3. ' ''.' → logprob: -1.8027939796447754
    4. ' tmp' → logprob: -3.1777939796447754
    5. 'max' → logprob: -4.052793979644775
    6. '''' → logprob: -5.052793979644775
    7. ' max' → logprob: -5.177793979644775
    8. ' ' → logprob: -5.427793979644775
    9. ' s' → logprob: -6.052793979644775
    10. ''' → logprob: -6.427793979644775

Token 233: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -3.726595241460018e-05
    2. ' join' → logprob: -10.75003719329834
    3. '''.' → logprob: -12.12503719329834
    4. '(join' → logprob: -12.75003719329834
    5. 'jo' → logprob: -12.87503719329834
    6. 'concat' → logprob: -13.50003719329834
    7. ''.' → logprob: -14.25003719329834
    8. 'j' → logprob: -14.62503719329834
    9. '.join' → logprob: -15.12503719329834
    10. '
' → logprob: -15.50003719329834

Token 234: '(tmp' (ID: 22623)
  Prédit: '(tmp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tmp' → logprob: -0.000667640648316592
    2. 'tmp' → logprob: -7.375667572021484
    3. '(' → logprob: -10.375667572021484
    4. '(temp' → logprob: -12.250667572021484
    5. ' tmp' → logprob: -13.875667572021484
    6. '[tmp' → logprob: -13.875667572021484
    7. '(tm' → logprob: -14.250667572021484
    8. '/tmp' → logprob: -14.250667572021484
    9. '$tmp' → logprob: -14.625667572021484
    10. '(sorted' → logprob: -15.000667572021484

Token 235: '_buf' (ID: 24144)
  Prédit: '_buf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_buf' → logprob: -0.010234798304736614
    2. '(tmp' → logprob: -5.010234832763672
    3. '[tmp' → logprob: -6.635234832763672
    4. 'buf' → logprob: -7.510234832763672
    5. '_tmp' → logprob: -7.635234832763672
    6. 'tmp' → logprob: -7.635234832763672
    7. 'Buf' → logprob: -8.135234832763672
    8. ')' → logprob: -8.635234832763672
    9. '(buf' → logprob: -10.010234832763672
    10. '[' → logprob: -10.010234832763672

Token 236: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.022036584094166756
    2. '[::-' → logprob: -4.147036552429199
    3. ')
' → logprob: -5.522036552429199
    4. '[:' → logprob: -6.647036552429199
    5. '[' → logprob: -7.772036552429199
    6. '[:-' → logprob: -8.8970365524292
    7. ').' → logprob: -9.5220365524292
    8. ')[' → logprob: -11.7720365524292
    9. ' )' → logprob: -12.0220365524292
    10. ')

' → logprob: -12.2720365524292

Token 237: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02521715685725212
    2. '<|end|>' → logprob: -4.650217056274414
    3. '
' → logprob: -4.900217056274414
    4. ' if' → logprob: -5.275217056274414
    5. '        
' → logprob: -6.525217056274414
    6. ',' → logprob: -8.150217056274414
    7. ')' → logprob: -8.400217056274414
    8. ' 
' → logprob: -8.400217056274414
    9. ' ' → logprob: -8.525217056274414
    10. '<|end|>' → logprob: -9.150217056274414

Token 238: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.23525939881801605
    2. 'if' (adapté à ' if') → logprob: -1.6102594137191772
    3. '       ' → logprob: -4.735259532928467
    4. '   ' → logprob: -7.860259532928467
    5. ' ' → logprob: -8.485259056091309
    6. ' tmp' → logprob: -9.110259056091309
    7. '
' → logprob: -9.485259056091309
    8. 'tmp' → logprob: -9.860259056091309
    9. ' 
' → logprob: -10.110259056091309
    10. '        
' → logprob: -10.735259056091309

Token 239: ' tmp' (ID: 8919)
  Prédit: ' tmp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tmp' → logprob: -0.2789647579193115
    2. 'tmp' → logprob: -1.5289647579193115
    3. ' s' → logprob: -4.278964996337891
    4. ' '' → logprob: -5.278964996337891
    5. ' not' → logprob: -6.403964996337891
    6. ' all' → logprob: -6.528964996337891
    7. 's' → logprob: -6.903964996337891
    8. ''' → logprob: -7.028964996337891
    9. ''s' → logprob: -7.403964996337891
    10. ' len' → logprob: -7.778964996337891

Token 240: ' >' (ID: 1424)
  Prédit: '.startswith'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.startswith' → logprob: -0.6584208011627197
    2. ' ==' → logprob: -1.2834208011627197
    3. ' in' → logprob: -2.1584208011627197
    4. '==' → logprob: -2.7834208011627197
    5. ' not' → logprob: -4.283420562744141
    6. '.endswith' → logprob: -5.658420562744141
    7. '.' → logprob: -5.783420562744141
    8. 'startswith' → logprob: -6.033420562744141
    9. ' .' → logprob: -6.658420562744141
    10. ' !=' → logprob: -7.533420562744141

Token 241: ' tmp' (ID: 8919)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.048593729734420776
    2. ' tmp' → logprob: -3.048593759536743
    3. '	tmp' → logprob: -13.423593521118164
    4. '(tmp' → logprob: -13.673593521118164
    5. '
' → logprob: -14.173593521118164
    6. '/tmp' → logprob: -14.298593521118164
    7. '$tmp' → logprob: -14.298593521118164
    8. 'temp' → logprob: -14.423593521118164
    9. 'tmpl' → logprob: -15.298593521118164
    10. '_tmp' → logprob: -15.423593521118164

Token 242: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.0033069930505007505
    2. 'max' → logprob: -6.628306865692139
    3. ':' → logprob: -7.128306865692139
    4. '_cur' → logprob: -7.378306865692139
    5. '_buf' → logprob: -8.628307342529297
    6. '_tmp' → logprob: -9.128307342529297
    7. ':
' → logprob: -9.253307342529297
    8. '_' → logprob: -9.628307342529297
    9. ' ' → logprob: -11.003307342529297
    10. '_MAX' → logprob: -11.503307342529297

Token 243: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6358374953269958
    2. ':' → logprob: -0.7608374953269958
    3. ' :
' → logprob: -6.010837554931641
    4. ' :' → logprob: -7.885837554931641
    5. '           ' → logprob: -8.38583755493164
    6. '):
' → logprob: -9.76083755493164
    7. '       ' → logprob: -10.51083755493164
    8. ':
' → logprob: -10.63583755493164
    9. '():
' → logprob: -11.26083755493164
    10. ':

' → logprob: -11.26083755493164

Token 244: '           ' (ID: 352)
  Prédit: ' tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tmp' → logprob: -0.5207481980323792
    2. 'tmp' → logprob: -1.6457481384277344
    3. ' 
' → logprob: -2.0207481384277344
    4. '
' → logprob: -2.6457481384277344
    5. '           ' → logprob: -5.645748138427734
    6. '(tmp' → logprob: -6.270748138427734
    7. '            
' → logprob: -6.645748138427734
    8. ' ' → logprob: -7.020748138427734
    9. '_tmp' → logprob: -8.520748138427734
    10. '/tmp' → logprob: -8.520748138427734

Token 245: ' tmp' (ID: 8919)
  Prédit: ' tmp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tmp' → logprob: -0.033814094960689545
    2. 'tmp' (adapté à ' tmp') → logprob: -3.4088141918182373
    3. '
' → logprob: -9.158814430236816
    4. ' 
' → logprob: -10.408814430236816
    5. '(tmp' → logprob: -11.533814430236816
    6. '	tmp' → logprob: -12.033814430236816
    7. '[tmp' → logprob: -12.658814430236816
    8. ' ' → logprob: -12.783814430236816
    9. '/tmp' → logprob: -12.783814430236816
    10. '_tmp' → logprob: -12.908814430236816

Token 246: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -4.246537173457909e-06
    2. '_' → logprob: -12.875003814697266
    3. 'max' → logprob: -14.000003814697266
    4. ' _' → logprob: -14.625003814697266
    5. 'Max' → logprob: -16.500003814697266
    6. '_MAX' → logprob: -16.875003814697266
    7. '_m' → logprob: -17.000003814697266
    8. '=_' → logprob: -17.375003814697266
    9. '_cur' → logprob: -17.500003814697266
    10. '=' → logprob: -17.500003814697266

Token 247: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06197742745280266
    2. '=' → logprob: -2.8119773864746094
    3. ' ' → logprob: -11.68697738647461
    4. ' =
' → logprob: -13.68697738647461
    5. ',' → logprob: -16.06197738647461
    6. '<|end|>' → logprob: -16.18697738647461
    7. '=
' → logprob: -17.18697738647461
    8. '=

' → logprob: -17.93697738647461
    9. ')' → logprob: -18.43697738647461
    10. '＝' → logprob: -18.56197738647461

Token 248: ' tmp' (ID: 8919)
  Prédit: ' tmp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tmp' → logprob: -0.25193649530410767
    2. 'tmp' → logprob: -1.501936435699463
    3. '(tmp' → logprob: -13.251936912536621
    4. '	tmp' → logprob: -13.376936912536621
    5. '/tmp' → logprob: -13.501936912536621
    6. '$tmp' → logprob: -14.126936912536621
    7. '[tmp' → logprob: -14.251936912536621
    8. 'temp' → logprob: -15.251936912536621
    9. ',tmp' → logprob: -15.251936912536621
    10. ' temp' → logprob: -15.501936912536621

Token 249: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 250: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1314527839422226
    2. '<|end|>' → logprob: -3.131452798843384
    3. '
' → logprob: -3.381452798843384
    4. ' 
' → logprob: -3.881452798843384
    5. ' return' → logprob: -5.006452560424805
    6. '    
' → logprob: -5.006452560424805
    7. ' ' → logprob: -5.506452560424805
    8. ')' → logprob: -6.381452560424805
    9. '    ' → logprob: -6.631452560424805
    10. 'return' → logprob: -7.006452560424805

Token 251: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1648428738117218
    2. ' return' → logprob: -2.7898428440093994
    3. '<|end|>' → logprob: -3.0398428440093994
    4. ' ' → logprob: -4.0398430824279785
    5. ' 
' → logprob: -5.0398430824279785
    6. '
' → logprob: -5.0398430824279785
    7. 'return' (adapté à ' return') → logprob: -5.6648430824279785
    8. '       ' → logprob: -6.0398430824279785
    9. '    
' → logprob: -6.6648430824279785
    10. '	return' → logprob: -7.0398430824279785

Token 252: ' tmp' (ID: 8919)
  Prédit: ' tmp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tmp' → logprob: -0.6350400447845459
    2. 'tmp' → logprob: -0.7600400447845459
    3. ' cursor' → logprob: -7.385040283203125
    4. '(tmp' → logprob: -7.760040283203125
    5. 'max' → logprob: -7.885040283203125
    6. 'cursor' → logprob: -8.010040283203125
    7. ' max' → logprob: -8.135040283203125
    8. ' (' → logprob: -9.510040283203125
    9. 'len' → logprob: -9.510040283203125
    10. ' len' → logprob: -9.760040283203125

Token 253: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.34021127223968506
    2. '_' → logprob: -1.465211272239685
    3. '<|end|>' → logprob: -3.0902113914489746
    4. '_
' → logprob: -6.090211391448975
    5. 's' → logprob: -6.090211391448975
    6. '[' → logprob: -6.340211391448975
    7. '
' → logprob: -6.465211391448975
    8. ' _' → logprob: -6.840211391448975
    9. ')' → logprob: -7.590211391448975
    10. '_MAX' → logprob: -7.715211391448975

Token 254: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 255: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.05155903100967407
    2. 'max' → logprob: -3.1765589714050293
    3. ' ' → logprob: -5.551558971405029
    4. '<|end|>' → logprob: -6.551558971405029
    5. ' b' → logprob: -6.801558971405029
    6. ' len' → logprob: -7.426558971405029
    7. ' tmp' → logprob: -7.551558971405029
    8. ' ' → logprob: -8.676559448242188
    9. ' s' → logprob: -9.176559448242188
    10. ' last' → logprob: -9.301559448242188

Token 256: '_cursor' (ID: 69415)
  Prédit: '_cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cur' → logprob: -0.07890047132968903
    2. '_cursor' → logprob: -2.5789005756378174
    3. 'cur' → logprob: -12.828900337219238
    4. '_' → logprob: -13.078900337219238
    5. 'cursor' → logprob: -13.203900337219238
    6. 'Cur' → logprob: -13.703900337219238
    7. '_max' → logprob: -14.578900337219238
    8. '(cur' → logprob: -14.578900337219238
    9. '_c' → logprob: -15.453900337219238
    10. 'Cursor' → logprob: -15.578900337219238

Token 257: ' +' (ID: 659)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 258: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0046404036693274975
    2. ' ' → logprob: -5.379640579223633
    3. '```' → logprob: -11.379640579223633
    4. '0' → logprob: -11.879640579223633
    5. '<|end|>' → logprob: -14.754640579223633
    6. '2' → logprob: -15.129640579223633
    7. '7' → logprob: -15.504640579223633
    8. 'def' → logprob: -15.879640579223633
    9. ' 
' → logprob: -16.129640579223633
    10. '   ' → logprob: -16.254640579223633

Token 259: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.625003814697266
    3. '0' → logprob: -15.500003814697266
    4. '```' → logprob: -16.375003814697266
    5. '
' → logprob: -18.750003814697266
    6. '7' → logprob: -19.875003814697266
    7. '2' → logprob: -19.875003814697266
    8. '   ' → logprob: -20.000003814697266
    9. '`' → logprob: -20.500003814697266
    10. '-' → logprob: -20.625003814697266

Token 260: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 261: 'def' (ID: 1314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.30431053042411804
    2. 'a' → logprob: -2.1793105602264404
    3. 'sss' → logprob: -2.6793105602264404
    4. 'aaa' → logprob: -3.3043105602264404
    5. 'def' → logprob: -4.179310321807861
    6. '#' → logprob: -5.179310321807861
    7. '<|end|>' → logprob: -5.554310321807861
    8. 'ss' → logprob: -5.929310321807861
    9. '```' → logprob: -6.054310321807861
    10. ' aaa' → logprob: -6.054310321807861

Token 262: ' integrate' (ID: 41990)
  Prédit: 'search'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'search' → logprob: -0.6601161360740662
    2. ' search' → logprob: -0.9101161360740662
    3. ' main' → logprob: -3.160116195678711
    4. 'main' → logprob: -4.660116195678711
    5. ' aaa' → logprob: -4.785116195678711
    6. ' find' → logprob: -5.660116195678711
    7. ' s' → logprob: -5.660116195678711
    8. 'aaa' → logprob: -6.285116195678711
    9. 's' → logprob: -6.535116195678711
    10. 'abc' → logprob: -6.910116195678711

Token 263: '(parts' (ID: 102573)
  Prédit: '(ss'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ss' → logprob: -0.006935355253517628
    2. '(' → logprob: -5.506935119628906
    3. '_ss' → logprob: -7.006935119628906
    4. ' (' → logprob: -7.506935119628906
    5. '_' → logprob: -7.631935119628906
    6. '(s' → logprob: -8.006935119628906
    7. '_ab' → logprob: -9.131935119628906
    8. '_(' → logprob: -9.381935119628906
    9. '_search' → logprob: -10.131935119628906
    10. '(ab' → logprob: -10.381935119628906

Token 264: '_b' (ID: 1535)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.19312191009521484
    2. '):
' → logprob: -2.068121910095215
    3. ',' → logprob: -3.068121910095215
    4. ')' → logprob: -6.818121910095215
    5. '(ss' → logprob: -7.443121910095215
    6. '_list' → logprob: -8.443121910095215
    7. ' ):' → logprob: -8.943121910095215
    8. '):
' → logprob: -9.193121910095215
    9. '   ' → logprob: -9.818121910095215
    10. '[' → logprob: -9.818121910095215

Token 265: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3733230531215668
    2. '):' → logprob: -1.6233230829238892
    3. ')_' → logprob: -2.7483229637145996
    4. '_' → logprob: -3.9983229637145996
    5. '):
' → logprob: -4.8733229637146
    6. '')' → logprob: -5.9983229637146
    7. 'b' → logprob: -6.1233229637146
    8. '=[]' → logprob: -6.1233229637146
    9. ''):' → logprob: -6.1233229637146
    10. '=' → logprob: -6.3733229637146

Token 266: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05250069499015808
    2. '
' → logprob: -3.8025007247924805
    3. '    ' → logprob: -4.4275007247924805
    4. ' parts' → logprob: -4.8025007247924805
    5. '    
' → logprob: -5.8025007247924805
    6. ' return' → logprob: -7.1775007247924805
    7. ' s' → logprob: -7.3025007247924805
    8. '```' → logprob: -7.5525007247924805
    9. ' 
' → logprob: -7.6775007247924805
    10. 'n' → logprob: -7.8025007247924805

Token 267: ' tmp' (ID: 8919)
  Prédit: ' res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.927536129951477
    2. ' result' → logprob: -1.302536129951477
    3. 'result' → logprob: -2.3025360107421875
    4. 'res' → logprob: -2.4275360107421875
    5. '   ' → logprob: -2.5525360107421875
    6. ' merged' → logprob: -4.4275360107421875
    7. ' parts' → logprob: -4.5525360107421875
    8. ' acc' → logprob: -5.3025360107421875
    9. ' total' → logprob: -5.8025360107421875
    10. 'merged' → logprob: -6.0525360107421875

Token 268: '_max' (ID: 13731)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8499162197113037
    2. '=' → logprob: -1.5999162197113037
    3. '_max' → logprob: -1.8499162197113037
    4. '_buf' → logprob: -2.0999162197113037
    5. '_' → logprob: -2.7249162197113037
    6. 'max' → logprob: -5.349916458129883
    7. '_cur' → logprob: -5.599916458129883
    8. '_parts' → logprob: -5.849916458129883
    9. '='_' → logprob: -6.224916458129883
    10. '=_' → logprob: -6.724916458129883

Token 269: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10723432153463364
    2. '=' → logprob: -2.482234239578247
    3. '_' → logprob: -4.232234477996826
    4. ',' → logprob: -5.857234477996826
    5. ' ' → logprob: -8.232234001159668
    6. ' _' → logprob: -8.857234001159668
    7. '_max' → logprob: -9.232234001159668
    8. ' ,' → logprob: -9.732234001159668
    9. '=''' → logprob: -10.357234001159668
    10. 'max' → logprob: -10.982234001159668

Token 270: ' ''
' (ID: 25366)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '''' → logprob: -0.04182416945695877
    2. '""' → logprob: -3.4168241024017334
    3. ' ''' → logprob: -5.1668243408203125
    4. 'parts' → logprob: -7.1668243408203125
    5. ''' → logprob: -7.5418243408203125
    6. '''
' → logprob: -8.041824340820312
    7. ' parts' → logprob: -8.541824340820312
    8. '"' → logprob: -8.541824340820312
    9. '[]' → logprob: -8.791824340820312
    10. ' ""' → logprob: -9.666824340820312

Token 271: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2212132066488266
    2. ' for' → logprob: -1.7212132215499878
    3. '
' → logprob: -4.346213340759277
    4. 'for' → logprob: -5.596213340759277
    5. '    
' → logprob: -6.721213340759277
    6. ',' → logprob: -7.221213340759277
    7. ' max' → logprob: -8.221213340759277
    8. ' ' → logprob: -8.971213340759277
    9. ' cur' → logprob: -9.096213340759277
    10. '  ' → logprob: -9.596213340759277

Token 272: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.2050243616104126
    2. 'cur' → logprob: -2.580024242401123
    3. 'tmp' → logprob: -3.330024242401123
    4. ' for' → logprob: -3.455024242401123
    5. 'pos' → logprob: -4.830024242401123
    6. 'max' → logprob: -5.080024242401123
    7. 'cursor' → logprob: -5.080024242401123
    8. 'parts' → logprob: -5.330024242401123
    9. 'idx' → logprob: -5.830024242401123
    10. 'res' → logprob: -6.205024242401123

Token 273: ' pb' (ID: 31582)
  Prédit: ' part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' part' → logprob: -0.5981310606002808
    2. 'part' → logprob: -1.0981310606002808
    3. 'p' → logprob: -2.9731311798095703
    4. ' p' → logprob: -3.9731311798095703
    5. 'i' → logprob: -4.22313117980957
    6. ' s' → logprob: -4.97313117980957
    7. 's' → logprob: -5.22313117980957
    8. ' i' → logprob: -5.22313117980957
    9. 'tmp' → logprob: -5.72313117980957
    10. ' tmp' → logprob: -6.34813117980957

Token 274: ' in' (ID: 306)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7940564751625061
    2. ' in' → logprob: -0.7940564751625061
    3. 'in' → logprob: -2.5440564155578613
    4. 'i' → logprob: -4.794056415557861
    5. ' _' → logprob: -5.919056415557861
    6. '_i' → logprob: -5.919056415557861
    7. '_in' → logprob: -6.169056415557861
    8. 'b' → logprob: -7.294056415557861
    9. ' ' → logprob: -7.419056415557861
    10. '_b' → logprob: -8.54405689239502

Token 275: ' reversed' (ID: 57184)
  Prédit: ' parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' parts' → logprob: -0.03806616738438606
    2. 'parts' → logprob: -3.2880661487579346
    3. '(parts' → logprob: -11.538065910339355
    4. ' ' → logprob: -12.413065910339355
    5. '   ' → logprob: -12.663065910339355
    6. ' partes' → logprob: -13.163065910339355
    7. '_parts' → logprob: -13.538065910339355
    8. '.parts' → logprob: -13.538065910339355
    9. ' 
' → logprob: -14.975565910339355
    10. 'Parts' → logprob: -15.038065910339355

Token 276: '(parts' (ID: 102573)
  Prédit: '(parts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(parts' → logprob: -0.00020103710994590074
    2. 'parts' → logprob: -8.750201225280762
    3. ' parts' → logprob: -10.500201225280762
    4. '(' → logprob: -11.875201225280762
    5. ' (' → logprob: -12.125201225280762
    6. '_parts' → logprob: -13.625201225280762
    7. '(points' → logprob: -14.750201225280762
    8. '(
' → logprob: -15.125201225280762
    9. '   ' → logprob: -15.500201225280762
    10. ')' → logprob: -15.625201225280762

Token 277: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -2.7372048862162046e-05
    2. '_' → logprob: -11.625027656555176
    3. 'b' → logprob: -11.625027656555176
    4. ')_' → logprob: -12.125027656555176
    5. ')' → logprob: -13.375027656555176
    6. '_)' → logprob: -13.625027656555176
    7. '_a' → logprob: -14.250027656555176
    8. ')b' → logprob: -16.25002670288086
    9. ' _' → logprob: -16.37502670288086
    10. '):' → logprob: -17.25002670288086

Token 278: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07011570781469345
    2. '):
' → logprob: -2.695115804672241
    3. ')' → logprob: -9.82011604309082
    4. ':' → logprob: -9.94511604309082
    5. ' ):' → logprob: -10.19511604309082
    6. '   ' → logprob: -10.57011604309082
    7. '):
' → logprob: -11.82011604309082
    8. ' ):
' → logprob: -13.32011604309082
    9. '       ' → logprob: -13.82011604309082
    10. '[' → logprob: -14.19511604309082

Token 279: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04011879116296768
    2. ':' → logprob: -3.29011869430542
    3. ':
' → logprob: -7.41511869430542
    4. ',' → logprob: -7.41511869430542
    5. '        
' → logprob: -8.540119171142578
    6. '<|end|>' → logprob: -8.665119171142578
    7. '   ' → logprob: -9.540119171142578
    8. '    ' → logprob: -9.790119171142578
    9. '      ' → logprob: -9.915119171142578
    10. ' :' → logprob: -9.915119171142578

Token 280: ' tmp' (ID: 8919)
  Prédit: ' tmp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tmp' → logprob: -0.5727187991142273
    2. 'tmp' (adapté à ' tmp') → logprob: -1.697718858718872
    3. '       ' → logprob: -2.072718858718872
    4. ' if' → logprob: -2.197718858718872
    5. 'if' → logprob: -4.572718620300293
    6. ' for' → logprob: -5.572718620300293
    7. '   ' → logprob: -8.072718620300293
    8. '        
' → logprob: -8.197718620300293
    9. 'for' → logprob: -8.572718620300293
    10. ' ' → logprob: -8.697718620300293

Token 281: ' =' (ID: 314)
  Prédit: '_max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.00017565040616318583
    2. 'max' → logprob: -8.750175476074219
    3. '=' → logprob: -11.750175476074219
    4. '_' → logprob: -12.500175476074219
    5. ' =' → logprob: -13.500175476074219
    6. '_tmp' → logprob: -13.750175476074219
    7. '=_' → logprob: -14.250175476074219
    8. '=max' → logprob: -14.750175476074219
    9. '_MAX' → logprob: -15.125175476074219
    10. ' _' → logprob: -15.125175476074219

Token 282: ' pb' (ID: 31582)
  Prédit: 'pb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pb' → logprob: -0.5519304275512695
    2. ' pb' → logprob: -0.9269304275512695
    3. 'tmp' → logprob: -3.9269304275512695
    4. ' tmp' → logprob: -4.8019304275512695
    5. '(pb' → logprob: -9.05193042755127
    6. ' ' → logprob: -9.67693042755127
    7. 'pbs' → logprob: -9.80193042755127
    8. '   ' → logprob: -9.92693042755127
    9. '_pb' → logprob: -10.30193042755127
    10. 'tb' → logprob: -10.55193042755127

Token 283: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.474092036485672
    2. '+' → logprob: -0.9740920066833496
    3. '+
' → logprob: -12.474092483520508
    4. 'max' → logprob: -12.974092483520508
    5. ' ' → logprob: -13.224092483520508
    6. '[' → logprob: -13.224092483520508
    7. '[::-' → logprob: -14.099092483520508
    8. '_max' → logprob: -14.349092483520508
    9. ' +
' → logprob: -14.349092483520508
    10. '+s' → logprob: -14.599092483520508

Token 284: ' tmp' (ID: 8919)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.006749597378075123
    2. ' tmp' → logprob: -5.006749629974365
    3. '
' → logprob: -10.631749153137207
    4. ' ' → logprob: -12.006749153137207
    5. '_tmp' → logprob: -13.131749153137207
    6. '   ' → logprob: -14.631749153137207
    7. '  ' → logprob: -15.131749153137207
    8. '	tmp' → logprob: -15.131749153137207
    9. '$tmp' → logprob: -15.506749153137207
    10. '_' → logprob: -15.756749153137207

Token 285: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -3.128163257315464e-07
    2. 'max' → logprob: -15.375
    3. '_' → logprob: -16.625
    4. ' _' → logprob: -18.375
    5. '_m' → logprob: -18.375
    6. '__' → logprob: -18.75
    7. '_cur' → logprob: -19.25
    8. '_MAX' → logprob: -19.75
    9. '
' → logprob: -19.875
    10. '_tmp' → logprob: -20.0

Token 286: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 287: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009103753603994846
    2. '
' → logprob: -4.759103775024414
    3. '   ' → logprob: -8.759103775024414
    4. '        
' → logprob: -9.259103775024414
    5. ' ' → logprob: -10.134103775024414
    6. '
' → logprob: -10.134103775024414
    7. ' 
' → logprob: -10.509103775024414
    8. '<|end|>' → logprob: -10.759103775024414
    9. ' if' → logprob: -11.259103775024414
    10. '	' → logprob: -11.259103775024414

Token 288: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.0599059984087944
    2. 'if' (adapté à ' if') → logprob: -3.184906005859375
    3. '
' → logprob: -4.309906005859375
    4. '       ' → logprob: -6.309906005859375
    5. ' 
' → logprob: -6.809906005859375
    6. ' ' → logprob: -8.184906005859375
    7. '        
' → logprob: -9.934906005859375
    8. '<|end|>' → logprob: -10.309906005859375
    9. '
' → logprob: -11.184906005859375
    10. '        ' → logprob: -11.934906005859375

Token 289: ' tmp' (ID: 8919)
  Prédit: ' tmp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tmp' → logprob: -0.19394096732139587
    2. 'tmp' → logprob: -1.8189409971237183
    3. ' len' → logprob: -4.443941116333008
    4. 'len' → logprob: -6.068941116333008
    5. '(tmp' → logprob: -11.568941116333008
    6. ' ' → logprob: -12.193941116333008
    7. '	tmp' → logprob: -12.193941116333008
    8. 't' → logprob: -12.943941116333008
    9. '/tmp' → logprob: -13.193941116333008
    10. ' t' → logprob: -13.443941116333008

Token 290: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.1626858413219452
    2. '>' → logprob: -1.9126858711242676
    3. ' >=' → logprob: -6.287685871124268
    4. '>=' → logprob: -7.537685871124268
    5. ' >
' → logprob: -10.16268539428711
    6. ' ' → logprob: -11.53768539428711
    7. '>
' → logprob: -12.41268539428711
    8. '[' → logprob: -12.41268539428711
    9. ' >

' → logprob: -13.28768539428711
    10. '">' → logprob: -13.28768539428711

Token 291: ' tmp' (ID: 8919)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.03804803267121315
    2. ' tmp' → logprob: -3.288048028945923
    3. '	tmp' → logprob: -13.163047790527344
    4. '$tmp' → logprob: -13.163047790527344
    5. '(tmp' → logprob: -13.663047790527344
    6. '_tmp' → logprob: -14.413047790527344
    7. '/tmp' → logprob: -14.663047790527344
    8. '[tmp' → logprob: -15.413047790527344
    9. '
' → logprob: -15.788047790527344
    10. ' ' → logprob: -16.163047790527344

Token 292: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -5.5027299822540954e-05
    2. 'max' → logprob: -9.875055313110352
    3. ' _' → logprob: -13.250055313110352
    4. '_tmp' → logprob: -13.875055313110352
    5. '_' → logprob: -15.000055313110352
    6. ' max' → logprob: -15.625055313110352
    7. '_MAX' → logprob: -15.875055313110352
    8. 'Max' → logprob: -16.37505531311035
    9. ')_' → logprob: -17.62505531311035
    10. ')' → logprob: -17.87505531311035

Token 293: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5766801834106445
    2. ':
' → logprob: -0.8266801834106445
    3. '           ' → logprob: -7.8266801834106445
    4. ' :
' → logprob: -9.076680183410645
    5. '       ' → logprob: -9.701680183410645
    6. '):
' → logprob: -9.826680183410645
    7. ' :' → logprob: -10.701680183410645
    8. '<|end|>' → logprob: -10.826680183410645
    9. ':

' → logprob: -10.951680183410645
    10. '):' → logprob: -11.451680183410645

Token 294: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06090179830789566
    2. ':' → logprob: -3.3109018802642822
    3. ' tmp' → logprob: -4.685901641845703
    4. ':
' → logprob: -4.810901641845703
    5. 'tmp' → logprob: -6.310901641845703
    6. '               ' → logprob: -7.310901641845703
    7. '(tmp' → logprob: -7.685901641845703
    8. ' :' → logprob: -7.810901641845703
    9. ' :
' → logprob: -8.435901641845703
    10. '[tmp' → logprob: -8.560901641845703

Token 295: ' tmp' (ID: 8919)
  Prédit: ' tmp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tmp' → logprob: -0.04861870035529137
    2. 'tmp' (adapté à ' tmp') → logprob: -3.048618793487549
    3. '           ' → logprob: -10.92361831665039
    4. '               ' → logprob: -11.79861831665039
    5. '(tmp' → logprob: -13.42361831665039
    6. '	tmp' → logprob: -13.67361831665039
    7. '
' → logprob: -14.54861831665039
    8. '_tmp' → logprob: -14.54861831665039
    9. '[tmp' → logprob: -14.54861831665039
    10. '       ' → logprob: -14.92361831665039

Token 296: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.5787737369537354
    2. '=' → logprob: -0.8287737369537354
    3. ' =' → logprob: -5.953773498535156
    4. 'max' → logprob: -8.828773498535156
    5. '_' → logprob: -10.203773498535156
    6. '=max' → logprob: -10.703773498535156
    7. '=_' → logprob: -11.203773498535156
    8. '_=' → logprob: -12.328773498535156
    9. 'Max' → logprob: -12.453773498535156
    10. '_MAX' → logprob: -13.203773498535156

Token 297: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10020904988050461
    2. ' =' → logprob: -2.3502089977264404
    3. '=
' → logprob: -13.85020923614502
    4. ' =
' → logprob: -13.97520923614502
    5. '=

' → logprob: -15.22520923614502
    6. ' ' → logprob: -15.97520923614502
    7. ',' → logprob: -16.100208282470703
    8. '        ' → logprob: -17.725208282470703
    9. '    ' → logprob: -17.850208282470703
    10. '           ' → logprob: -18.100208282470703

Token 298: ' tmp' (ID: 8919)
  Prédit: ' tmp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tmp' → logprob: -0.16022534668445587
    2. 'tmp' → logprob: -1.9102253913879395
    3. '	tmp' → logprob: -14.285224914550781
    4. '(tmp' → logprob: -15.410224914550781
    5. ' temp' → logprob: -16.16022491455078
    6. '/tmp' → logprob: -16.41022491455078
    7. 'temp' → logprob: -16.66022491455078
    8. '_tmp' → logprob: -17.16022491455078
    9. '$tmp' → logprob: -17.28522491455078
    10. '[tmp' → logprob: -17.53522491455078

Token 299: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21435502171516418
    2. '
' → logprob: -1.7143549919128418
    3. ' return' → logprob: -5.464354991912842
    4. ' 
' → logprob: -5.589354991912842
    5. '    
' → logprob: -5.714354991912842
    6. '<|end|>' → logprob: -7.714354991912842
    7. '	return' → logprob: -7.964354991912842
    8. 'return' → logprob: -8.21435546875
    9. '  
' → logprob: -9.08935546875
    10. ' ' → logprob: -9.71435546875

Token 300: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18194827437400818
    2. '
' → logprob: -2.181948184967041
    3. ' 
' → logprob: -4.056948184967041
    4. ' return' → logprob: -4.556948184967041
    5. '    
' → logprob: -4.931948184967041
    6. ' ' → logprob: -4.931948184967041
    7. '       ' → logprob: -5.181948184967041
    8. ',' → logprob: -7.056948184967041
    9. '    ' → logprob: -7.181948184967041
    10. '  
' → logprob: -7.431948184967041

Token 301: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.27204301953315735
    2. 'return' (adapté à ' return') → logprob: -2.022042989730835
    3. '   ' → logprob: -2.897042989730835
    4. '
' → logprob: -3.272042989730835
    5. ' 
' → logprob: -5.147043228149414
    6. ' ' → logprob: -5.272043228149414
    7. '    
' → logprob: -7.397043228149414
    8. '	return' → logprob: -7.647043228149414
    9. '  
' → logprob: -8.272043228149414
    10. '  ' → logprob: -9.147043228149414

Token 302: ' tmp' (ID: 8919)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.1269291490316391
    2. ' tmp' → logprob: -2.1269290447235107
    3. '(tmp' → logprob: -14.75192928314209
    4. '	tmp' → logprob: -15.25192928314209
    5. '/tmp' → logprob: -15.50192928314209
    6. '$tmp' → logprob: -16.126928329467773
    7. ' ' → logprob: -16.751928329467773
    8. '_tmp' → logprob: -16.876928329467773
    9. '[tmp' → logprob: -17.626928329467773
    10. '.tmp' → logprob: -18.126928329467773

Token 303: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -5.240481914370321e-05
    2. '_' → logprob: -9.875052452087402
    3. ' _' → logprob: -15.250052452087402
    4. '_MAX' → logprob: -15.375052452087402
    5. 'max' → logprob: -15.625052452087402
    6. '_m' → logprob: -16.125051498413086
    7. '__' → logprob: -17.250051498413086
    8. '_
' → logprob: -17.250051498413086
    9. '_Max' → logprob: -17.750051498413086
    10. '_tmp' → logprob: -17.875051498413086

Token 304: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 305: 'n' (ID: 77)
  Prédit: 'aaa'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'aaa' → logprob: -1.0467913150787354
    2. '<|end|>' → logprob: -1.2967913150787354
    3. 'def' → logprob: -2.4217913150787354
    4. '
' → logprob: -2.6717913150787354
    5. '#' → logprob: -2.9217913150787354
    6. 'a' → logprob: -3.1717913150787354
    7. 's' → logprob: -3.4217913150787354
    8. 'sss' → logprob: -3.5467913150787354
    9. '```' → logprob: -4.421791076660156
    10. ' aaa' → logprob: -4.671791076660156

Token 306: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.003920364659279585
    2. '=' → logprob: -5.878920555114746
    3. ',' → logprob: -6.878920555114746
    4. ' ,' → logprob: -9.753920555114746
    5. ' ' → logprob: -11.003920555114746
    6. ' =
' → logprob: -12.003920555114746
    7. '  ' → logprob: -13.003920555114746
    8. '=int' → logprob: -13.878920555114746
    9. ' =)' → logprob: -14.753920555114746
    10. 's' → logprob: -15.003920555114746

Token 307: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.03805835545063019
    2. ' int' → logprob: -3.288058280944824
    3. '10' → logprob: -12.663058280944824
    4. 'len' → logprob: -12.663058280944824
    5. '0' → logprob: -12.913058280944824
    6. ' ' → logprob: -12.913058280944824
    7. '[int' → logprob: -13.038058280944824
    8. '1' → logprob: -14.288058280944824
    9. '<int' → logprob: -14.413058280944824
    10. '5' → logprob: -14.788058280944824

Token 308: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.003335990710183978
    2. '(' → logprob: -5.878335952758789
    3. 'input' → logprob: -8.253335952758789
    4. '()' → logprob: -8.253335952758789
    5. ' (' → logprob: -12.378335952758789
    6. '=input' → logprob: -13.003335952758789
    7. '(
' → logprob: -13.128335952758789
    8. '('' → logprob: -14.253335952758789
    9. '(...)' → logprob: -15.378335952758789
    10. '(n' → logprob: -15.878335952758789

Token 309: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.03821029141545296
    2. '()' → logprob: -3.288210391998291
    3. ')' → logprob: -9.163209915161133
    4. '(' → logprob: -10.538209915161133
    5. '())
' → logprob: -10.538209915161133
    6. '().' → logprob: -12.413209915161133
    7. '('' → logprob: -13.038209915161133
    8. '()
' → logprob: -13.163209915161133
    9. ' ())' → logprob: -14.288209915161133
    10. '())

' → logprob: -14.788209915161133

Token 310: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.049621548503637314
    2. 'sss' → logprob: -3.42462158203125
    3. 'aaa' → logprob: -4.29962158203125
    4. 'a' → logprob: -6.79962158203125
    5. 'ss' → logprob: -7.54962158203125
    6. '```' → logprob: -9.42462158203125
    7. '
' → logprob: -9.79962158203125
    8. ' aaa' → logprob: -9.79962158203125
    9. 'abc' → logprob: -9.92462158203125
    10. ' s' → logprob: -9.92462158203125

Token 311: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0486162044107914
    2. '=' → logprob: -3.0486161708831787
    3. '=input' → logprob: -11.048616409301758
    4. ' ' → logprob: -12.548616409301758
    5. '_' → logprob: -13.423616409301758
    6. '  ' → logprob: -13.423616409301758
    7. ' =
' → logprob: -13.548616409301758
    8. 's' → logprob: -13.548616409301758
    9. ' ' → logprob: -13.548616409301758
    10. ',' → logprob: -14.298616409301758

Token 312: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.02975071594119072
    2. ' input' → logprob: -3.5297508239746094
    3. '=input' → logprob: -16.02975082397461
    4. 'list' → logprob: -16.52975082397461
    5. '(input' → logprob: -17.27975082397461
    6. '	input' → logprob: -18.40475082397461
    7. '[input' → logprob: -18.90475082397461
    8. '<input' → logprob: -19.02975082397461
    9. ',input' → logprob: -19.27975082397461
    10. ' ' → logprob: -19.65475082397461

Token 313: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0005404045223258436
    2. '(' → logprob: -7.625540256500244
    3. '().' → logprob: -10.375540733337402
    4. '('' → logprob: -11.250540733337402
    5. '())' → logprob: -13.125540733337402
    6. '()
' → logprob: -13.500540733337402
    7. ' ()' → logprob: -13.875540733337402
    8. '(),' → logprob: -14.250540733337402
    9. '("' → logprob: -14.250540733337402
    10. '()`' → logprob: -14.500540733337402

Token 314: 'n' (ID: 77)
  Prédit: 'aaa'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'aaa' → logprob: -0.021682018414139748
    2. 'a' → logprob: -4.021681785583496
    3. '
' → logprob: -6.896681785583496
    4. 'aa' → logprob: -7.021681785583496
    5. ' aaa' → logprob: -7.146681785583496
    6. 's' → logprob: -8.396681785583496
    7. '```' → logprob: -8.646681785583496
    8. 'abc' → logprob: -9.146681785583496
    9. '0' → logprob: -9.646681785583496
    10. '<|end|>' → logprob: -10.146681785583496

Token 315: '2' (ID: 17)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22444495558738708
    2. '=' → logprob: -2.22444486618042
    3. 's' → logprob: -3.59944486618042
    4. '<|end|>' → logprob: -4.34944486618042
    5. '_tokens' → logprob: -4.59944486618042
    6. ' +=' → logprob: -4.72444486618042
    7. 'n' → logprob: -4.84944486618042
    8. ',' → logprob: -5.34944486618042
    9. ' ' → logprob: -5.84944486618042
    10. '_parts' → logprob: -5.84944486618042

Token 316: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11319208890199661
    2. '=' → logprob: -2.238192081451416
    3. '2' → logprob: -9.113192558288574
    4. ',' → logprob: -10.113192558288574
    5. '*' → logprob: -10.363192558288574
    6. '_' → logprob: -10.488192558288574
    7. ' =
' → logprob: -10.738192558288574
    8. 's' → logprob: -10.738192558288574
    9. ' ' → logprob: -10.863192558288574
    10. ' *=' → logprob: -11.238192558288574

Token 317: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.11163047701120377
    2. 'len' → logprob: -2.611630439758301
    3. '2' → logprob: -3.861630439758301
    4. ' n' → logprob: -4.861630439758301
    5. '[n' → logprob: -6.361630439758301
    6. ' len' → logprob: -7.361630439758301
    7. '[' → logprob: -7.986630439758301
    8. ' ' → logprob: -8.2366304397583
    9. '(n' → logprob: -9.6116304397583
    10. '1' → logprob: -9.6116304397583

Token 318: ' *' (ID: 425)
  Prédit: ' //'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -1.0660333633422852
    2. ' *' → logprob: -1.3160333633422852
    3. '*' → logprob: -1.5660333633422852
    4. '//' → logprob: -1.8160333633422852
    5. ' +' → logprob: -5.066033363342285
    6. '+' → logprob: -5.316033363342285
    7. ' ' → logprob: -6.441033363342285
    8. '
' → logprob: -6.816033363342285
    9. '2' → logprob: -7.816033363342285
    10. '#' → logprob: -8.191033363342285

Token 319: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0007142199319787323
    2. ' ' → logprob: -7.250714302062988
    3. '3' → logprob: -14.250714302062988
    4. 'n' → logprob: -14.375714302062988
    5. '  ' → logprob: -14.500714302062988
    6. '   ' → logprob: -14.625714302062988
    7. '1' → logprob: -14.875714302062988
    8. '*' → logprob: -15.250714302062988
    9. '4' → logprob: -15.250714302062988
    10. '10' → logprob: -15.375714302062988

Token 320: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00010318557906430215
    2. 'n' → logprob: -10.000102996826172
    3. '10' → logprob: -11.250102996826172
    4. ' ' → logprob: -11.250102996826172
    5. '3' → logprob: -11.375102996826172
    6. '1' → logprob: -12.125102996826172
    7. '100' → logprob: -12.375102996826172
    8. '4' → logprob: -12.750102996826172
    9. 's' → logprob: -13.000102996826172
    10. '5' → logprob: -14.250102996826172

Token 321: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.005802231840789318
    2. '  
' → logprob: -6.130802154541016
    3. ' 
' → logprob: -6.380802154541016
    4. '
' → logprob: -7.755802154541016
    5. '\n' → logprob: -7.755802154541016
    6. 'aaa' → logprob: -7.880802154541016
    7. 'a' → logprob: -8.630802154541016
    8. '<|end|>' → logprob: -9.005802154541016
    9. '

' → logprob: -9.380802154541016
    10. 's' → logprob: -9.755802154541016

Token 322: 'sss' (ID: 132377)
  Prédit: 'aaa'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aaa' → logprob: -0.005300519522279501
    2. '
' → logprob: -6.755300521850586
    3. 'sss' → logprob: -6.755300521850586
    4. 's' → logprob: -6.880300521850586
    5. 'a' → logprob: -7.005300521850586
    6. 'aa' → logprob: -8.380300521850586
    7. ' aaa' → logprob: -8.505300521850586
    8. 'ccc' → logprob: -9.505300521850586
    9. 'bbb' → logprob: -9.505300521850586
    10. '  
' → logprob: -9.880300521850586

Token 323: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11283603310585022
    2. '=' → logprob: -2.2378361225128174
    3. '[' → logprob: -11.987835884094238
    4. ',' → logprob: -13.112835884094238
    5. ' =[' → logprob: -13.112835884094238
    6. 's' → logprob: -13.862835884094238
    7. '=[]' → logprob: -14.737835884094238
    8. '=[' → logprob: -14.862835884094238
    9. ' =
' → logprob: -14.987835884094238
    10. '.' → logprob: -15.237835884094238

Token 324: ' []
' (ID: 8911)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.01773439720273018
    2. ' [' → logprob: -4.267734527587891
    3. '[-' → logprob: -6.517734527587891
    4. '[n' → logprob: -6.892734527587891
    5. '[s' → logprob: -7.767734527587891
    6. '[a' → logprob: -8.64273452758789
    7. '[list' → logprob: -9.01773452758789
    8. '[int' → logprob: -9.14273452758789
    9. '[len' → logprob: -10.01773452758789
    10. '[i' → logprob: -10.14273452758789

Token 325: 'aaa' (ID: 55894)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.44610220193862915
    2. ' =' → logprob: -1.9461021423339844
    3. ' for' → logprob: -2.1961021423339844
    4. 'a' → logprob: -4.321102142333984
    5. 's' → logprob: -4.446102142333984
    6. '=' → logprob: -4.446102142333984
    7. 'cur' → logprob: -4.696102142333984
    8. 'i' → logprob: -5.071102142333984
    9. '[' → logprob: -5.196102142333984
    10. 'tmp' → logprob: -5.321102142333984

Token 326: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14372853934764862
    2. '=' → logprob: -2.018728494644165
    3. ',' → logprob: -6.893728733062744
    4. '=[]' → logprob: -10.393728256225586
    5. ' ,' → logprob: -12.143728256225586
    6. ' =
' → logprob: -14.768728256225586
    7. ' ' → logprob: -15.018728256225586
    8. '<|end|>' → logprob: -15.018728256225586
    9. ' =[' → logprob: -15.143728256225586
    10. ')' → logprob: -15.393728256225586

Token 327: ' b' (ID: 287)
  Prédit: 'bbb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bbb' → logprob: -0.3138635456562042
    2. ' b' → logprob: -1.3138635158538818
    3. '[]' → logprob: -7.688863754272461
    4. 'b' → logprob: -9.688863754272461
    5. '=[]' → logprob: -10.563863754272461
    6. ' ' → logprob: -11.188863754272461
    7. ' []' → logprob: -11.438863754272461
    8. 'bb' → logprob: -11.938863754272461
    9. '  ' → logprob: -12.063863754272461
    10. ' =' → logprob: -12.813863754272461

Token 328: 'bb' (ID: 10029)
  Prédit: 'bb'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bb' → logprob: -0.621285080909729
    2. '=' → logprob: -0.996285080909729
    3. '=[]' → logprob: -3.2462849617004395
    4. ' =' → logprob: -3.4962849617004395
    5. 'b' → logprob: -3.7462849617004395
    6. '=[]
' → logprob: -7.7462849617004395
    7. '=[' → logprob: -10.121285438537598
    8. '[]' → logprob: -10.121285438537598
    9. 'aa' → logprob: -10.496285438537598
    10. ',' → logprob: -10.496285438537598

Token 329: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06197462975978851
    2. ' =' → logprob: -2.81197452545166
    3. ',' → logprob: -12.18697452545166
    4. '=[]' → logprob: -13.81197452545166
    5. ' ' → logprob: -15.31197452545166
    6. '=
' → logprob: -16.311975479125977
    7. '=[],' → logprob: -16.311975479125977
    8. ' =[' → logprob: -16.311975479125977
    9. '=[' → logprob: -16.686975479125977
    10. '＝' → logprob: -16.811975479125977

Token 330: ' [],' (ID: 22188)
  Prédit: '[],'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[],' → logprob: -0.036488018929958344
    2. ' [],' → logprob: -3.5364880561828613
    3. '[' → logprob: -5.286488056182861
    4. '[]' → logprob: -6.536488056182861
    5. '([],' → logprob: -9.161487579345703
    6. ' [' → logprob: -9.911487579345703
    7. '[]
' → logprob: -10.536487579345703
    8. '[],
' → logprob: -12.036487579345703
    9. ' [[]' → logprob: -12.286487579345703
    10. 'zip' → logprob: -12.536487579345703

Token 331: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.004107134882360697
    2. ' []' → logprob: -5.5041069984436035
    3. '[]
' → logprob: -11.004107475280762
    4. '[]}' → logprob: -11.754107475280762
    5. '[]>' → logprob: -13.504107475280762
    6. '[],' → logprob: -13.754107475280762
    7. '=[]' → logprob: -14.254107475280762
    8. '[])' → logprob: -14.504107475280762
    9. '<|end|>' → logprob: -15.254107475280762
    10. '[]

' → logprob: -15.504107475280762

Token 332: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.39484062790870667
    2. ' for' → logprob: -1.1448405981063843
    3. '
' → logprob: -5.519840717315674
    4. ' 
' → logprob: -7.144840717315674
    5. '[' → logprob: -7.769840717315674
    6. '[]
' → logprob: -7.769840717315674
    7. 'cur' → logprob: -8.144840240478516
    8. 'idx' → logprob: -8.269840240478516
    9. ' cur' → logprob: -8.894840240478516
    10. '  
' → logprob: -8.894840240478516

Token 333: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.05754465237259865
    2. ' i' → logprob: -2.932544708251953
    3. '_i' → logprob: -7.057544708251953
    4. 'c' → logprob: -7.057544708251953
    5. '_' → logprob: -7.682544708251953
    6. 'idx' → logprob: -8.807544708251953
    7. ' c' → logprob: -9.682544708251953
    8. 'x' → logprob: -9.807544708251953
    9. ' _' → logprob: -10.182544708251953
    10. 'ch' → logprob: -10.307544708251953

Token 334: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03402877226471901
    2. 'in' → logprob: -3.5340287685394287
    3. ' ' → logprob: -5.784029006958008
    4. ',' → logprob: -6.784029006958008
    5. 'range' → logprob: -11.034029006958008
    6. ' ,' → logprob: -11.534029006958008
    7. 'n' → logprob: -11.534029006958008
    8. 's' → logprob: -12.284029006958008
    9. ' i' → logprob: -12.409029006958008
    10. '  ' → logprob: -12.534029006958008

Token 335: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.20368944108486176
    2. 'ch' → logprob: -1.703689455986023
    3. ' c' → logprob: -6.5786895751953125
    4. ' ch' → logprob: -7.4536895751953125
    5. 'char' → logprob: -9.078689575195312
    6. 'v' → logprob: -9.453689575195312
    7. 'e' → logprob: -10.578689575195312
    8. 'x' → logprob: -11.203689575195312
    9. 'si' → logprob: -11.328689575195312
    10. '(c' → logprob: -11.328689575195312

Token 336: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.016271421685814857
    2. 'in' → logprob: -4.141271591186523
    3. 'n' → logprob: -8.891271591186523
    4. 's' → logprob: -9.891271591186523
    5. ' ' → logprob: -10.141271591186523
    6. ',' → logprob: -12.516271591186523
    7. 'enumer' → logprob: -13.266271591186523
    8. '  ' → logprob: -14.141271591186523
    9. 't' → logprob: -14.516271591186523
    10. '	in' → logprob: -15.141271591186523

Token 337: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.38687264919281006
    2. ' enumerate' → logprob: -1.13687264919281
    3. 'en' → logprob: -14.136872291564941
    4. 'range' → logprob: -14.761872291564941
    5. 'enum' → logprob: -15.261872291564941
    6. '```' → logprob: -16.886873245239258
    7. '
' → logprob: -17.261873245239258
    8. ' range' → logprob: -17.636873245239258
    9. '(en' → logprob: -17.636873245239258
    10. 'e' → logprob: -17.761873245239258

Token 338: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0021634676959365606
    2. '(range' → logprob: -6.627163410186768
    3. 's' → logprob: -7.252163410186768
    4. '(en' → logprob: -9.377163887023926
    5. 'range' → logprob: -11.002163887023926
    6. 'enumer' → logprob: -11.377163887023926
    7. '(' → logprob: -11.752163887023926
    8. ' range' → logprob: -13.127163887023926
    9. ' enumerate' → logprob: -13.252163887023926
    10. ' s' → logprob: -13.252163887023926

Token 339: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4288751780986786
    2. '):
' → logprob: -1.053875207901001
    3. ':' → logprob: -9.053874969482422
    4. '):
' → logprob: -10.178874969482422
    5. ' ):' → logprob: -12.303874969482422
    6. ':
' → logprob: -12.553874969482422
    7. 's' → logprob: -12.803874969482422
    8. '():
' → logprob: -13.053874969482422
    9. '):

' → logprob: -13.553874969482422
    10. ' ):
' → logprob: -13.803874969482422

Token 340: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008819960057735443
    2. ' if' → logprob: -5.008820056915283
    3. 'if' → logprob: -7.258820056915283
    4. '    
' → logprob: -7.758820056915283
    5. '):
' → logprob: -8.008819580078125
    6. '
' → logprob: -8.758819580078125
    7. ':
' → logprob: -9.008819580078125
    8. ':' → logprob: -9.133819580078125
    9. '	if' → logprob: -9.758819580078125
    10. 's' → logprob: -10.133819580078125

Token 341: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.08613066375255585
    2. 'if' (adapté à ' if') → logprob: -2.5861306190490723
    3. '   ' → logprob: -4.961130619049072
    4. ' s' → logprob: -9.33613109588623
    5. '
' → logprob: -10.08613109588623
    6. 's' → logprob: -10.71113109588623
    7. '    ' → logprob: -11.08613109588623
    8. ' ' → logprob: -11.33613109588623
    9. '	if' → logprob: -11.58613109588623
    10. ' 
' → logprob: -12.21113109588623

Token 342: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.018215147778391838
    2. ' c' → logprob: -4.018215179443359
    3. '   ' → logprob: -10.76821517944336
    4. 's' → logprob: -10.89321517944336
    5. ' ' → logprob: -11.26821517944336
    6. '  ' → logprob: -12.76821517944336
    7. 'i' → logprob: -12.89321517944336
    8. '    ' → logprob: -13.26821517944336
    9. ' s' → logprob: -14.01821517944336
    10. 'a' → logprob: -14.08071517944336

Token 343: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.38928622007369995
    2. ' ==' → logprob: -1.1392862796783447
    3. '=='' → logprob: -6.139286041259766
    4. '=' → logprob: -8.889286041259766
    5. ' in' → logprob: -10.014286041259766
    6. '==
' → logprob: -10.514286041259766
    7. ' =='' → logprob: -10.764286041259766
    8. '=="' → logprob: -12.014286041259766
    9. ' =' → logprob: -12.139286041259766
    10. 'in' → logprob: -12.139286041259766

Token 344: ' '' (ID: 461)
  Prédit: ''a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''a' → logprob: -0.012693638913333416
    2. 'a' → logprob: -4.387693405151367
    3. ' '' → logprob: -9.762693405151367
    4. '"a' → logprob: -10.012693405151367
    5. ''b' → logprob: -10.012693405151367
    6. ' a' → logprob: -11.387693405151367
    7. 'b' → logprob: -11.512693405151367
    8. ''' → logprob: -12.512693405151367
    9. '   ' → logprob: -13.012693405151367
    10. '	a' → logprob: -13.012693405151367

Token 345: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.000762691895943135
    2. 'b' → logprob: -7.250762462615967
    3. ' a' → logprob: -10.750762939453125
    4. ''a' → logprob: -10.750762939453125
    5. '')' → logprob: -13.688262939453125
    6. ''' → logprob: -13.813262939453125
    7. '	a' → logprob: -13.938262939453125
    8. 'ab' → logprob: -14.063262939453125
    9. 'а' → logprob: -14.375762939453125
    10. '0' → logprob: -14.500762939453125

Token 346: '':
' (ID: 7669)
  Prédit: '':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':
' → logprob: -0.03434430807828903
    2. '':' → logprob: -3.40934419631958
    3. ''' → logprob: -7.90934419631958
    4. 'a' → logprob: -8.409344673156738
    5. '':
' → logprob: -10.284344673156738
    6. ':' → logprob: -11.159344673156738
    7. ''):
' → logprob: -11.159344673156738
    8. ':
' → logprob: -11.159344673156738
    9. '':

' → logprob: -11.534344673156738
    10. ' '' → logprob: -11.909344673156738

Token 347: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7091740369796753
    2. ' aaa' → logprob: -0.9591740369796753
    3. 'aaa' → logprob: -2.584174156188965
    4. '   ' → logprob: -3.084174156188965
    5. 'a' → logprob: -6.834174156188965
    6. '	   ' → logprob: -8.334174156188965
    7. '	' → logprob: -8.334174156188965
    8. 'aa' → logprob: -8.334174156188965
    9. ' a' → logprob: -8.959174156188965
    10. 'abc' → logprob: -9.084174156188965

Token 348: ' aaa' (ID: 170080)
  Prédit: ' aaa'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' aaa' → logprob: -0.3876100480556488
    2. 'aaa' (adapté à ' aaa') → logprob: -1.1376100778579712
    3. '   ' → logprob: -7.387609958648682
    4. 'aa' → logprob: -10.01261043548584
    5. 'a' → logprob: -10.51261043548584
    6. ' a' → logprob: -10.88761043548584
    7. ' aa' → logprob: -11.76261043548584
    8. 'sss' → logprob: -12.26261043548584
    9. 'ccc' → logprob: -13.01261043548584
    10. ' ' → logprob: -13.13761043548584

Token 349: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.014178793877363205
    2. '.' → logprob: -4.26417875289917
    3. '.app' → logprob: -11.514179229736328
    4. '.ap' → logprob: -12.639179229736328
    5. 'append' → logprob: -14.264179229736328
    6. ' .' → logprob: -14.764179229736328
    7. '.extend' → logprob: -15.014179229736328
    8. '.Append' → logprob: -15.389179229736328
    9. '.push' → logprob: -15.764179229736328
    10. '+.' → logprob: -15.764179229736328

Token 350: '(i' (ID: 3649)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0004894073354080319
    2. '(i' → logprob: -7.750489234924316
    3. ' i' → logprob: -9.750489234924316
    4. '	i' → logprob: -14.750489234924316
    5. ')i' → logprob: -16.125490188598633
    6. '
' → logprob: -17.750490188598633
    7. ',i' → logprob: -18.250490188598633
    8. '=i' → logprob: -18.750490188598633
    9. '_i' → logprob: -19.500490188598633
    10. 'len' → logprob: -19.500490188598633

Token 351: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6942918300628662
    2. ')
' → logprob: -0.6942918300628662
    3. '   ' → logprob: -6.819292068481445
    4. '       ' → logprob: -11.319292068481445
    5. ')b' → logprob: -11.694292068481445
    6. ')
' → logprob: -11.819292068481445
    7. ')

' → logprob: -11.944292068481445
    8. '
' → logprob: -12.194292068481445
    9. ' )
' → logprob: -12.944292068481445
    10. '<|end|>' → logprob: -13.319292068481445

Token 352: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00017827287956606597
    2. 'elif' → logprob: -9.500178337097168
    3. ' ' → logprob: -10.750178337097168
    4. '       ' → logprob: -10.875178337097168
    5. '<|end|>' → logprob: -11.375178337097168
    6. '    
' → logprob: -11.875178337097168
    7. '  ' → logprob: -12.000178337097168
    8. 'else' → logprob: -12.125178337097168
    9. 'for' → logprob: -12.250178337097168
    10. ' for' → logprob: -12.375178337097168

Token 353: ' s' (ID: 265)
  Prédit: 'bbb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bbb' → logprob: -0.31218868494033813
    2. 'sss' → logprob: -1.4371886253356934
    3. '   ' → logprob: -4.187188625335693
    4. ' b' → logprob: -4.937188625335693
    5. ' s' → logprob: -6.062188625335693
    6. 's' (adapté à ' s') → logprob: -6.437188625335693
    7. ' ' → logprob: -6.937188625335693
    8. '  ' → logprob: -7.187188625335693
    9. 'ss' → logprob: -7.312188625335693
    10. '       ' → logprob: -7.437188625335693

Token 354: 'ss' (ID: 1087)
  Prédit: 'ss'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ss' → logprob: -0.0003382038848940283
    2. 's' → logprob: -8.000338554382324
    3. 'sss' → logprob: -13.750338554382324
    4. 'bb' → logprob: -14.875338554382324
    5. '1' → logprob: -15.750338554382324
    6. '2' → logprob: -16.000337600708008
    7. '
' → logprob: -16.250337600708008
    8. ' ss' → logprob: -16.375337600708008
    9. 'ssp' → logprob: -16.750337600708008
    10. '	ss' → logprob: -16.750337600708008

Token 355: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0003036457928828895
    2. '.' → logprob: -8.125303268432617
    3. '.app' → logprob: -12.250303268432617
    4. ' .' → logprob: -14.000303268432617
    5. '.ap' → logprob: -14.375303268432617
    6. 'append' → logprob: -14.625303268432617
    7. '.s' → logprob: -15.625303268432617
    8. 's' → logprob: -15.625303268432617
    9. '.a' → logprob: -15.625303268432617
    10. '.extend' → logprob: -15.625303268432617

Token 356: '(-' (ID: 8087)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04143069311976433
    2. '0' → logprob: -4.041430473327637
    3. 'i' → logprob: -4.416430473327637
    4. '-' → logprob: -5.541430473327637
    5. 'ord' → logprob: -6.166430473327637
    6. ''i' → logprob: -6.666430473327637
    7. '2' → logprob: -7.291430473327637
    8. 'aaa' → logprob: -7.416430473327637
    9. 'a' → logprob: -7.916430473327637
    10. '(i' → logprob: -8.041430473327637

Token 357: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0021307526621967554
    2. '2' → logprob: -6.25213098526001
    3. '-' → logprob: -10.252130508422852
    4. '100' → logprob: -10.752130508422852
    5. '10' → logprob: -10.752130508422852
    6. 'i' → logprob: -10.877130508422852
    7. '3' → logprob: -10.877130508422852
    8. '111' → logprob: -11.252130508422852
    9. '999' → logprob: -11.502130508422852
    10. 'n' → logprob: -12.002130508422852

Token 358: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.023423079401254654
    2. ')' → logprob: -3.773423194885254
    3. '   ' → logprob: -8.773423194885254
    4. ' )
' → logprob: -11.523423194885254
    5. ')
' → logprob: -11.648423194885254
    6. ')

' → logprob: -13.648423194885254
    7. ' else' → logprob: -14.398423194885254
    8. 'else' → logprob: -14.648423194885254
    9. '0' → logprob: -14.773423194885254
    10. ' )' → logprob: -14.773423194885254

Token 359: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -2.6656825866666622e-05
    2. 'else' → logprob: -11.62502670288086
    3. 'elif' → logprob: -12.12502670288086
    4. '       ' → logprob: -12.25002670288086
    5. '```' → logprob: -13.50002670288086
    6. 'b' → logprob: -13.75002670288086
    7. '  ' → logprob: -13.75002670288086
    8. ' ' → logprob: -14.00002670288086
    9. '<|end|>' → logprob: -14.00002670288086
    10. 'for' → logprob: -14.12502670288086

Token 360: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.08098230510950089
    2. ' else' → logprob: -3.080982208251953
    3. 'elif' → logprob: -3.580982208251953
    4. '   ' → logprob: -5.580982208251953
    5. ' elif' → logprob: -8.330982208251953
    6. '	else' → logprob: -11.830982208251953
    7. ' ' → logprob: -12.455982208251953
    8. '  ' → logprob: -13.580982208251953
    9. '```' → logprob: -13.580982208251953
    10. '	elif' → logprob: -13.830982208251953

Token 361: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08288998901844025
    2. ':
' → logprob: -3.207890033721924
    3. ':' → logprob: -3.332890033721924
    4. '   ' → logprob: -5.832890033721924
    5. 'bbb' → logprob: -7.957890033721924
    6. 'bb' → logprob: -10.832889556884766
    7. '):
' → logprob: -11.332889556884766
    8. '  ' → logprob: -11.332889556884766
    9. 'if' → logprob: -11.582889556884766
    10. '      ' → logprob: -11.582889556884766

Token 362: '       ' (ID: 309)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.40650734305381775
    2. 'bbb' → logprob: -1.9065073728561401
    3. '   ' → logprob: -2.2815072536468506
    4. '       ' → logprob: -2.5315072536468506
    5. ' ' → logprob: -6.40650749206543
    6. 'b' → logprob: -7.03150749206543
    7. '  ' → logprob: -8.03150749206543
    8. 'bb' → logprob: -8.28150749206543
    9. '           ' → logprob: -8.53150749206543
    10. '    ' → logprob: -9.28150749206543

Token 363: ' b' (ID: 287)
  Prédit: 'bbb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bbb' → logprob: -0.0007717476109974086
    2. ' b' → logprob: -7.250771522521973
    3. '   ' → logprob: -10.125771522521973
    4. '  ' → logprob: -11.375771522521973
    5. ' ' → logprob: -12.750771522521973
    6. 'bb' → logprob: -13.375771522521973
    7. 'b' (adapté à ' b') → logprob: -13.625771522521973
    8. 'sss' → logprob: -14.125771522521973
    9. '    ' → logprob: -14.375771522521973
    10. 'bbbb' → logprob: -14.375771522521973

Token 364: 'bb' (ID: 10029)
  Prédit: 'bb'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bb' → logprob: -0.00010473522706888616
    2. 'b' → logprob: -9.875104904174805
    3. 'bbb' → logprob: -9.875104904174805
    4. 'ss' → logprob: -14.500104904174805
    5. 'bbs' → logprob: -14.750104904174805
    6. 'bbbb' → logprob: -15.500104904174805
    7. '  ' → logprob: -15.625104904174805
    8. 'aa' → logprob: -16.375104904174805
    9. '   ' → logprob: -16.875104904174805
    10. '.append' → logprob: -17.000104904174805

Token 365: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -3.643152740551159e-05
    2. '.' → logprob: -10.500036239624023
    3. 'append' → logprob: -11.750036239624023
    4. '.Append' → logprob: -15.000036239624023
    5. '.app' → logprob: -15.125036239624023
    6. ' .' → logprob: -16.250036239624023
    7. '_append' → logprob: -16.375036239624023
    8. 'app' → logprob: -17.875036239624023
    9. ' append' → logprob: -17.875036239624023
    10. '.ap' → logprob: -18.000036239624023

Token 366: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -6.704273118884885e-07
    2. 'i' → logprob: -14.500000953674316
    3. '(' → logprob: -16.875
    4. '(
' → logprob: -18.75
    5. ' (' → logprob: -19.0
    6. '(ii' → logprob: -20.0
    7. ' i' → logprob: -20.875
    8. '[i' → logprob: -21.125
    9. '(int' → logprob: -21.75
    10. '   ' → logprob: -21.875

Token 367: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0792674794793129
    2. ')
' → logprob: -2.5792675018310547
    3. '   ' → logprob: -9.204267501831055
    4. ' )' → logprob: -9.954267501831055
    5. '       ' → logprob: -10.579267501831055
    6. '.append' → logprob: -10.954267501831055
    7. '(' → logprob: -11.079267501831055
    8. ',' → logprob: -11.204267501831055
    9. ' )
' → logprob: -11.204267501831055
    10. ')
' → logprob: -11.204267501831055

Token 368: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010565844364464283
    2. '   ' → logprob: -4.885565757751465
    3. 'ss' → logprob: -6.010565757751465
    4. ' ' → logprob: -9.010565757751465
    5. 'sss' → logprob: -9.010565757751465
    6. ' s' → logprob: -9.385565757751465
    7. 's' → logprob: -9.385565757751465
    8. '0' → logprob: -10.260565757751465
    9. '  ' → logprob: -11.385565757751465
    10. '1' → logprob: -11.760565757751465

Token 369: ' s' (ID: 265)
  Prédit: 'sss'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sss' → logprob: -0.0022964440286159515
    2. '-' → logprob: -6.752296447753906
    3. 'ss' → logprob: -7.002296447753906
    4. ' s' → logprob: -8.877296447753906
    5. '0' → logprob: -10.502296447753906
    6. '1' → logprob: -11.002296447753906
    7. 's' (adapté à ' s') → logprob: -11.752296447753906
    8. '_ss' → logprob: -12.377296447753906
    9. ' ' → logprob: -12.377296447753906
    10. ' -' → logprob: -12.627296447753906

Token 370: 'ss' (ID: 1087)
  Prédit: 'ss'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ss' → logprob: -2.165027217415627e-05
    2. 's' → logprob: -10.750021934509277
    3. 'sss' → logprob: -16.87502098083496
    4. '```' → logprob: -17.50002098083496
    5. 'dd' → logprob: -17.75002098083496
    6. '
' → logprob: -18.00002098083496
    7. 'ssp' → logprob: -18.25002098083496
    8. ' s' → logprob: -18.50002098083496
    9. ' ss' → logprob: -19.00002098083496
    10. '	ss' → logprob: -19.25002098083496

Token 371: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -6.988221684878226e-06
    2. '.' → logprob: -12.000006675720215
    3. 'append' → logprob: -14.250006675720215
    4. '.extend' → logprob: -16.00000762939453
    5. '.app' → logprob: -17.37500762939453
    6. ' .' → logprob: -18.87500762939453
    7. 'Append' → logprob: -20.00000762939453
    8. '.ap' → logprob: -20.62500762939453
    9. '[-' → logprob: -20.75000762939453
    10. 'app' → logprob: -21.00000762939453

Token 372: '(' (ID: 7)
  Prédit: '(-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.054855771362781525
    2. '(' → logprob: -3.6798558235168457
    3. '(i' → logprob: -4.179855823516846
    4. '-' → logprob: -4.429855823516846
    5. '(n' → logprob: -7.929855823516846
    6. '0' → logprob: -8.429855346679688
    7. '1' → logprob: -8.804855346679688
    8. 'i' → logprob: -9.429855346679688
    9. '(ss' → logprob: -10.054855346679688
    10. '(s' → logprob: -10.929855346679688

Token 373: '1' (ID: 16)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.016192730516195297
    2. '1' → logprob: -4.89119291305542
    3. '0' → logprob: -5.51619291305542
    4. 'i' → logprob: -5.51619291305542
    5. ' -' → logprob: -8.641192436218262
    6. ' ' → logprob: -9.016192436218262
    7. '-i' → logprob: -10.016192436218262
    8. ' i' → logprob: -10.266192436218262
    9. '+' → logprob: -10.391192436218262
    10. 'n' → logprob: -10.766192436218262

Token 374: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.24179228907451e-05
    2. ')
' → logprob: -9.750061988830566
    3. ' )' → logprob: -12.875061988830566
    4. '0' → logprob: -15.125061988830566
    5. '))' → logprob: -15.500061988830566
    6. '),' → logprob: -15.750061988830566
    7. '+' → logprob: -15.875061988830566
    8. '<|end|>' → logprob: -15.875061988830566
    9. ')

' → logprob: -16.250062942504883
    10. ')}' → logprob: -16.375062942504883

Token 375: 'sss' (ID: 132377)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 376: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.690849244594574
    2. '[-' → logprob: -1.3158493041992188
    3. ',' → logprob: -2.4408493041992188
    4. '<|end|>' → logprob: -2.6908493041992188
    5. ' =' → logprob: -2.9408493041992188
    6. ')' → logprob: -4.940849304199219
    7. '
' → logprob: -6.190849304199219
    8. '=' → logprob: -6.315849304199219
    9. ',
' → logprob: -6.940849304199219
    10. '#' → logprob: -7.315849304199219

Token 377: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.005709427408874035
    2. ' list' → logprob: -5.755709648132324
    3. 'acc' → logprob: -6.255709648132324
    4. '[' → logprob: -8.005709648132324
    5. '[-' → logprob: -9.130709648132324
    6. '[list' → logprob: -9.380709648132324
    7. 'tuple' → logprob: -10.380709648132324
    8. 'ac' → logprob: -11.255709648132324
    9. ' [' → logprob: -11.505709648132324
    10. '(list' → logprob: -12.255709648132324

Token 378: '(acc' (ID: 82668)
  Prédit: '(acc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(acc' → logprob: -0.0003909927327185869
    2. 'acc' → logprob: -7.875391006469727
    3. '(ac' → logprob: -12.375391006469727
    4. '.acc' → logprob: -12.875391006469727
    5. '(' → logprob: -13.125391006469727
    6. '	acc' → logprob: -14.250391006469727
    7. '(it' → logprob: -14.375391006469727
    8. '(map' → logprob: -15.125391006469727
    9. ' accumulate' → logprob: -15.750391006469727
    10. '_acc' → logprob: -16.375391006469727

Token 379: 'umulate' (ID: 134636)
  Prédit: 'umulate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'umulate' → logprob: -1.2471589798224159e-05
    2. 'um' → logprob: -12.000012397766113
    3. 'umul' → logprob: -12.875012397766113
    4. 'om' → logprob: -13.375012397766113
    5. 'ulate' → logprob: -14.000012397766113
    6. 'umal' → logprob: -14.750012397766113
    7. 'umulative' → logprob: -15.375012397766113
    8. 'uminate' → logprob: -16.12501335144043
    9. 'eler' → logprob: -16.25001335144043
    10. '[' → logprob: -16.50001335144043

Token 380: '(ss' (ID: 68597)
  Prédit: '(ss'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ss' → logprob: -3.4121114822482923e-06
    2. ')' → logprob: -13.375003814697266
    3. '	ss' → logprob: -14.250003814697266
    4. ':ss' → logprob: -15.500003814697266
    5. 'ss' → logprob: -15.500003814697266
    6. '
' → logprob: -15.500003814697266
    7. 'sss' → logprob: -15.750003814697266
    8. ',' → logprob: -16.125003814697266
    9. '(' → logprob: -16.375003814697266
    10. 's' → logprob: -16.750003814697266

Token 381: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00028982185176573694
    2. ')' → logprob: -8.875289916992188
    3. 'ss' → logprob: -10.000289916992188
    4. '(s' → logprob: -10.000289916992188
    5. ')
' → logprob: -11.875289916992188
    6. '])' → logprob: -12.250289916992188
    7. 'p' → logprob: -12.250289916992188
    8. '))' → logprob: -12.625289916992188
    9. '
' → logprob: -12.750289916992188
    10. '(ss' → logprob: -12.750289916992188

Token 382: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -8.745069499127567e-05
    2. '))
' → logprob: -10.12508773803711
    3. ')' → logprob: -11.00008773803711
    4. ',' → logprob: -11.00008773803711
    5. ' ))' → logprob: -12.00008773803711
    6. '))

' → logprob: -12.50008773803711
    7. ')))' → logprob: -12.87508773803711
    8. '()))' → logprob: -14.50008773803711
    9. '),' → logprob: -15.87508773803711
    10. ' ' → logprob: -16.00008773803711

Token 383: 're' (ID: 264)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 384: 'pe' (ID: 424)
  Prédit: 'verse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'verse' → logprob: -1.1199867725372314
    2. 'ss' → logprob: -1.7449867725372314
    3. 'v' → logprob: -2.4949867725372314
    4. 'place' → logprob: -2.6199867725372314
    5. 's' → logprob: -2.7449867725372314
    6. 'sss' → logprob: -3.2449867725372314
    7. 'main' → logprob: -3.6199867725372314
    8. 'peat' → logprob: -3.6199867725372314
    9. 'turn' → logprob: -3.7449867725372314
    10. 'm' → logprob: -3.9949867725372314

Token 385: 'ats' (ID: 1838)
  Prédit: 'at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -6.170270353322849e-05
    2. 'ат' → logprob: -10.875061988830566
    3. 'ats' → logprob: -10.875061988830566
    4. ' at' → logprob: -11.750061988830566
    5. 'ated' → logprob: -12.625061988830566
    6. '	at' → logprob: -12.750061988830566
    7. 'a' → logprob: -13.500061988830566
    8. 'eat' → logprob: -13.625061988830566
    9. '_at' → logprob: -13.750061988830566
    10. '(at' → logprob: -14.125061988830566

Token 386: '_a' (ID: 10852)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11493668705224991
    2. ' =' → logprob: -2.364936590194702
    3. '=' → logprob: -4.239936828613281
    4. ' ,' → logprob: -9.239936828613281
    5. ')' → logprob: -10.364936828613281
    6. '[' → logprob: -10.864936828613281
    7. '_' → logprob: -11.239936828613281
    8. '=[]' → logprob: -11.489936828613281
    9. 's' → logprob: -11.614936828613281
    10. '(' → logprob: -11.739936828613281

Token 387: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.27668333053588867
    2. ',' → logprob: -1.7766833305358887
    3. '=' → logprob: -2.6516833305358887
    4. 'b' → logprob: -6.901683330535889
    5. ',b' → logprob: -8.401683807373047
    6. ' ' → logprob: -8.526683807373047
    7. '_b' → logprob: -8.651683807373047
    8. ' ,' → logprob: -8.651683807373047
    9. 'a' → logprob: -10.151683807373047
    10. 'nd' → logprob: -10.526683807373047

Token 388: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.12190334498882294
    2. '[]
' → logprob: -2.371903419494629
    3. '[' → logprob: -3.871903419494629
    4. '[a' → logprob: -8.621903419494629
    5. '{}' → logprob: -8.996903419494629
    6. '[]

' → logprob: -8.996903419494629
    7. '[n' → logprob: -10.121903419494629
    8. ' []' → logprob: -10.621903419494629
    9. '[s' → logprob: -10.996903419494629
    10. '[i' → logprob: -11.121903419494629

Token 389: 'parts' (ID: 34761)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cur' → logprob: -1.5456448793411255
    2. 'cursor' → logprob: -1.6706448793411255
    3. 'i' → logprob: -1.9206448793411255
    4. 'for' → logprob: -2.045644760131836
    5. 'last' → logprob: -2.795644760131836
    6. 'pos' → logprob: -2.920644760131836
    7. 'idx' → logprob: -2.920644760131836
    8. 'start' → logprob: -3.170644760131836
    9. 'repeat' → logprob: -3.420644760131836
    10. 'ai' → logprob: -3.670644760131836

Token 390: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.14451809227466583
    2. '_' → logprob: -2.1445181369781494
    3. '_a' → logprob: -5.01951789855957
    4. '=' → logprob: -5.26951789855957
    5. ' =' → logprob: -5.39451789855957
    6. '_=' → logprob: -7.26951789855957
    7. '=[]' → logprob: -8.39451789855957
    8. 'b' → logprob: -9.39451789855957
    9. 'a' → logprob: -10.26951789855957
    10. 's' → logprob: -11.01951789855957

Token 391: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04875541105866432
    2. '=' → logprob: -3.048755407333374
    3. '=[]' → logprob: -8.798755645751953
    4. '.append' → logprob: -11.423755645751953
    5. ',' → logprob: -12.798755645751953
    6. '[]' → logprob: -14.048755645751953
    7. '=[]
' → logprob: -14.548755645751953
    8. ')' → logprob: -14.923755645751953
    9. '_' → logprob: -15.173755645751953
    10. ' ' → logprob: -15.673755645751953

Token 392: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.00014454191841650754
    2. ' []' → logprob: -9.125144958496094
    3. '[]
' → logprob: -10.750144958496094
    4. '[' → logprob: -12.125144958496094
    5. '=[]' → logprob: -12.125144958496094
    6. '[]}' → logprob: -13.375144958496094
    7. '[]>' → logprob: -14.125144958496094
    8. '[])' → logprob: -15.500144958496094
    9. '[]

' → logprob: -15.500144958496094
    10. '([]' → logprob: -15.625144958496094

Token 393: 'last' (ID: 6684)
  Prédit: 'cursor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cursor' → logprob: -0.09184479713439941
    2. 'cur' → logprob: -2.7168447971343994
    3. 'i' → logprob: -3.9668447971343994
    4. '```' → logprob: -6.46684455871582
    5. ' cursor' → logprob: -8.21684455871582
    6. 'c' → logprob: -8.21684455871582
    7. 'ai' → logprob: -8.84184455871582
    8. 'pos' → logprob: -8.84184455871582
    9. 'idx' → logprob: -9.34184455871582
    10. 'for' → logprob: -9.34184455871582

Token 394: '_b' (ID: 1535)
  Prédit: '_cursor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cursor' → logprob: -0.11306709796190262
    2. '_' → logprob: -2.863067150115967
    3. '_pos' → logprob: -3.488067150115967
    4. '_cur' → logprob: -5.113067150115967
    5. '_index' → logprob: -5.238067150115967
    6. '_idx' → logprob: -5.363067150115967
    7. '_i' → logprob: -6.988067150115967
    8. ' =' → logprob: -7.738067150115967
    9. '_b' → logprob: -7.863067150115967
    10. '_a' → logprob: -8.363066673278809

Token 395: '_cur' (ID: 46382)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.07260173559188843
    2. ' =' → logprob: -3.072601795196533
    3. '=' → logprob: -4.572601795196533
    4. '_i' → logprob: -4.947601795196533
    5. '_idx' → logprob: -6.447601795196533
    6. 'b' → logprob: -6.697601795196533
    7. '_cursor' → logprob: -7.197601795196533
    8. '_cur' → logprob: -7.572601795196533
    9. '=i' → logprob: -7.697601795196533
    10. '=-' → logprob: -8.072601318359375

Token 396: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0790558010339737
    2. ' =' → logprob: -2.5790557861328125
    3. ',' → logprob: -8.829055786132812
    4. 'ursor' → logprob: -12.454055786132812
    5. '_' → logprob: -12.579055786132812
    6. '_cursor' → logprob: -12.829055786132812
    7. 'or' → logprob: -13.204055786132812
    8. ' ' → logprob: -13.579055786132812
    9. '=
' → logprob: -13.954055786132812
    10. 'cursor' → logprob: -14.204055786132812

Token 397: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1633904129266739
    2. '-' → logprob: -1.9133903980255127
    3. 'n' → logprob: -6.163390636444092
    4. ' -' → logprob: -7.788390636444092
    5. ' ' → logprob: -7.913390636444092
    6. '-n' → logprob: -8.663390159606934
    7. 'sss' → logprob: -10.913390159606934
    8. 'len' → logprob: -11.038390159606934
    9. 's' → logprob: -11.663390159606934
    10. '1' → logprob: -11.663390159606934

Token 398: '0' (ID: 15)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.25394105911254883
    2. '0' → logprob: -1.5039410591125488
    3. 'n' → logprob: -6.753941059112549
    4. '-n' → logprob: -8.00394058227539
    5. 'sss' → logprob: -8.50394058227539
    6. ' -' → logprob: -9.62894058227539
    7. '1' → logprob: -10.25394058227539
    8. 'None' → logprob: -10.37894058227539
    9. '-b' → logprob: -10.37894058227539
    10. 'len' → logprob: -10.37894058227539

Token 399: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2605821490287781
    2. 'cursor' → logprob: -2.510582208633423
    3. 'cur' → logprob: -2.760582208633423
    4. 'i' → logprob: -2.885582208633423
    5. 'for' → logprob: -4.385581970214844
    6. 'while' → logprob: -5.385581970214844
    7. ' for' → logprob: -6.010581970214844
    8. ',' → logprob: -6.260581970214844
    9. ' cursor' → logprob: -6.260581970214844
    10. '_cursor' → logprob: -7.010581970214844

Token 400: 'cursor' (ID: 34222)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.13467857241630554
    2. 'cur' → logprob: -2.884678602218628
    3. 'i' → logprob: -3.009678602218628
    4. 'cursor' → logprob: -4.259678363800049
    5. 'while' → logprob: -5.134678363800049
    6. ' for' → logprob: -8.134678840637207
    7. 'ai' → logprob: -8.509678840637207
    8. 'idx' → logprob: -9.134678840637207
    9. 'c' → logprob: -10.009678840637207
    10. '```' → logprob: -10.509678840637207

Token 401: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3132822811603546
    2. '=' → logprob: -1.3132822513580322
    3. ',' → logprob: -10.938282012939453
    4. ' ' → logprob: -13.313282012939453
    5. '_' → logprob: -15.938282012939453
    6. ' =
' → logprob: -16.063282012939453
    7. ' +=' → logprob: -16.188282012939453
    8. ' ,' → logprob: -16.188282012939453
    9. ' ==' → logprob: -16.188282012939453
    10. ')' → logprob: -16.563282012939453

Token 402: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00017994173686020076
    2. ' ' → logprob: -8.6251802444458
    3. 'n' → logprob: -16.500179290771484
    4. 'last' → logprob: -16.625179290771484
    5. '   ' → logprob: -17.250179290771484
    6. '1' → logprob: -18.125179290771484
    7. '  ' → logprob: -18.500179290771484
    8. ' last' → logprob: -18.625179290771484
    9. '-' → logprob: -18.625179290771484
    10. '00' → logprob: -18.875179290771484

Token 403: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000260382192209363
    2. 'sss' → logprob: -9.375260353088379
    3. ' ' → logprob: -10.000260353088379
    4. 'bbb' → logprob: -10.250260353088379
    5. 'n' → logprob: -10.500260353088379
    6. 'aaa' → logprob: -10.750260353088379
    7. 'last' → logprob: -11.125260353088379
    8. 's' → logprob: -12.125260353088379
    9. '1' → logprob: -12.125260353088379
    10. '-' → logprob: -12.375260353088379

Token 404: '
' (ID: 198)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.26784929633140564
    2. '
' → logprob: -2.1428492069244385
    3. ' while' → logprob: -2.3928492069244385
    4. '<|end|>' → logprob: -3.7678492069244385
    5. ':' → logprob: -6.767849445343018
    6. '```' → logprob: -7.142849445343018
    7. ':
' → logprob: -8.14284896850586
    8. ',' → logprob: -8.14284896850586
    9. '<|end|>' → logprob: -8.64284896850586
    10. 'While' → logprob: -9.14284896850586

Token 405: 'while' (ID: 7032)
  Prédit: 'while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.0005408813012763858
    2. ' while' → logprob: -7.625540733337402
    3. 'for' → logprob: -10.250540733337402
    4. '```' → logprob: -11.625540733337402
    5. 'if' → logprob: -12.125540733337402
    6. '
' → logprob: -13.500540733337402
    7. '	while' → logprob: -14.750540733337402
    8. 'While' → logprob: -14.750540733337402
    9. '<|end|>' → logprob: -15.500540733337402
    10. 'in' → logprob: -15.750540733337402

Token 406: ' cursor' (ID: 14944)
  Prédit: 'cursor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cursor' → logprob: -0.2534227967262268
    2. ' cursor' → logprob: -1.503422737121582
    3. 'True' → logprob: -6.753422737121582
    4. ' True' → logprob: -8.128422737121582
    5. 'last' → logprob: -11.378422737121582
    6. '(cursor' → logprob: -12.128422737121582
    7. '	cursor' → logprob: -12.378422737121582
    8. ' last' → logprob: -12.628422737121582
    9. 'cur' → logprob: -13.628422737121582
    10. ' ' → logprob: -14.128422737121582

Token 407: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.011787252500653267
    2. '<' → logprob: -4.636787414550781
    3. ' <=' → logprob: -6.386787414550781
    4. '<n' → logprob: -8.261787414550781
    5. '<=' → logprob: -9.761787414550781
    6. '<len' → logprob: -11.386787414550781
    7. ' =' → logprob: -11.886787414550781
    8. '=' → logprob: -12.761787414550781
    9. '<s' → logprob: -13.011787414550781
    10. ' !=' → logprob: -13.511787414550781

Token 408: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0033804262056946754
    2. 'len' → logprob: -5.753380298614502
    3. ' n' → logprob: -8.62838077545166
    4. '2' → logprob: -11.50338077545166
    5. '
' → logprob: -12.12838077545166
    6. ' ' → logprob: -12.62838077545166
    7. ' len' → logprob: -12.87838077545166
    8. '	n' → logprob: -14.87838077545166
    9. '   ' → logprob: -15.00338077545166
    10. 'length' → logprob: -15.25338077545166

Token 409: '2' (ID: 17)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.054900333285331726
    2. ':
' → logprob: -2.9299004077911377
    3. ' and' → logprob: -12.429900169372559
    4. ' :' → logprob: -12.554900169372559
    5. 'n' → logprob: -13.054900169372559
    6. ':
' → logprob: -13.304900169372559
    7. ':

' → logprob: -13.429900169372559
    8. 'and' → logprob: -13.554900169372559
    9. ':n' → logprob: -13.804900169372559
    10. '2' → logprob: -13.929900169372559

Token 410: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5762149691581726
    2. ':' → logprob: -0.8262149691581726
    3. '   ' → logprob: -8.451214790344238
    4. '):
' → logprob: -11.076214790344238
    5. ',' → logprob: -11.326214790344238
    6. ':

' → logprob: -11.576214790344238
    7. ' :
' → logprob: -11.576214790344238
    8. ':
' → logprob: -12.826214790344238
    9. '():
' → logprob: -12.951214790344238
    10. ' and' → logprob: -13.076214790344238

Token 411: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10002288222312927
    2. ' if' → logprob: -2.600022792816162
    3. 'if' → logprob: -4.225022792816162
    4. ' cur' → logprob: -6.225022792816162
    5. 'cur' → logprob: -6.350022792816162
    6. '```' → logprob: -6.725022792816162
    7. '    
' → logprob: -7.725022792816162
    8. 'repeat' → logprob: -8.35002326965332
    9. ' repeat' → logprob: -8.60002326965332
    10. 'a' → logprob: -9.35002326965332

Token 412: ' c' (ID: 274)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.20183485746383667
    2. 'repeat' → logprob: -2.2018349170684814
    3. ' if' → logprob: -2.9518349170684814
    4. 'cur' → logprob: -5.201834678649902
    5. ' repeat' → logprob: -5.576834678649902
    6. '   ' → logprob: -5.701834678649902
    7. 're' → logprob: -5.826834678649902
    8. 'rep' → logprob: -6.576834678649902
    9. 'r' → logprob: -7.576834678649902
    10. ' cur' → logprob: -7.951834678649902

Token 413: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.347404807806015
    2. 'ursor' → logprob: -2.472404718399048
    3. 'ur' → logprob: -2.597404718399048
    4. '=' → logprob: -2.597404718399048
    5. ',' → logprob: -3.972404718399048
    6. 'if' → logprob: -4.222404956817627
    7. ' if' → logprob: -4.972404956817627
    8. 'har' → logprob: -5.222404956817627
    9. 'urrent' → logprob: -5.472404956817627
    10. '_' → logprob: -6.722404956817627

Token 414: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.06808260083198547
    2. 'sss' → logprob: -3.193082571029663
    3. ''s' → logprob: -4.318082809448242
    4. ' s' → logprob: -4.818082809448242
    5. ''' → logprob: -6.943082809448242
    6. 'ss' → logprob: -7.193082809448242
    7. 'bbb' → logprob: -7.943082809448242
    8. 'b' → logprob: -7.943082809448242
    9. 'a' → logprob: -8.068082809448242
    10. ' '' → logprob: -9.568082809448242

Token 415: 'ss' (ID: 1087)
  Prédit: '[c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[c' → logprob: -1.8624639324116288e-06
    2. '[cur' → logprob: -14.000001907348633
    3. '[' → logprob: -14.875001907348633
    4. 'cursor' → logprob: -15.500001907348633
    5. '```' → logprob: -15.875001907348633
    6. '\[' → logprob: -16.750001907348633
    7. '[counter' → logprob: -17.375001907348633
    8. '[curr' → logprob: -17.750001907348633
    9. '[cell' → logprob: -18.125001907348633
    10. 's' → logprob: -18.125001907348633

Token 416: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -9.088346359931165e-07
    2. '.index' → logprob: -15.125000953674316
    3. '[' → logprob: -15.375000953674316
    4. '[cur' → logprob: -16.125
    5. '   ' → logprob: -16.875
    6. '
' → logprob: -17.375
    7. '[
' → logprob: -17.5
    8. 'cursor' → logprob: -17.75
    9. '[curr' → logprob: -17.875
    10. ',c' → logprob: -18.25

Token 417: 'ursor' (ID: 6519)
  Prédit: 'ursor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursor' → logprob: -0.0010404328349977732
    2. '[' → logprob: -7.626040458679199
    3. 'cursor' → logprob: -8.5010404586792
    4. 'URSOR' → logprob: -8.7510404586792
    5. ']' → logprob: -10.5010404586792
    6. ')' → logprob: -10.8760404586792
    7. '```' → logprob: -10.8760404586792
    8. '.cursor' → logprob: -10.8760404586792
    9. 'ursors' → logprob: -11.1260404586792
    10. ',' → logprob: -11.2510404586792

Token 418: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.22694317996501923
    2. ']' → logprob: -1.6019431352615356
    3. ')
' → logprob: -7.476943016052246
    4. '   ' → logprob: -7.601943016052246
    5. ')' → logprob: -8.726943016052246
    6. '+' → logprob: -9.476943016052246
    7. '
' → logprob: -9.976943016052246
    8. ']
' → logprob: -10.226943016052246
    9. '==' → logprob: -10.476943016052246
    10. ']

' → logprob: -10.726943016052246

Token 419: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00031985383247956634
    2. 'if' → logprob: -9.000319480895996
    3. ' if' → logprob: -9.250319480895996
    4. '
' → logprob: -10.000319480895996
    5. '    
' → logprob: -10.625319480895996
    6. '<|end|>' → logprob: -11.250319480895996
    7. '```' → logprob: -12.750319480895996
    8. '+' → logprob: -12.875319480895996
    9. ',' → logprob: -13.000319480895996
    10. '	if' → logprob: -13.125319480895996

Token 420: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.13562175631523132
    2. '   ' → logprob: -2.1356217861175537
    3. ' if' → logprob: -4.760621547698975
    4. '
' → logprob: -10.760622024536133
    5. ' ' → logprob: -10.760622024536133
    6. '    
' → logprob: -10.885622024536133
    7. '+' → logprob: -12.135622024536133
    8. '	if' → logprob: -12.260622024536133
    9. '  ' → logprob: -12.385622024536133
    10. '#' → logprob: -12.885622024536133

Token 421: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.2818935811519623
    2. ' c' → logprob: -1.4068936109542847
    3. '   ' → logprob: -8.281893730163574
    4. '0' → logprob: -8.781893730163574
    5. '1' → logprob: -8.906893730163574
    6. ' ' → logprob: -9.531893730163574
    7. '    ' → logprob: -9.656893730163574
    8. '  ' → logprob: -11.281893730163574
    9. 's' → logprob: -11.531893730163574
    10. 'cursor' → logprob: -12.656893730163574

Token 422: ' <' (ID: 464)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5343195199966431
    2. '==' → logprob: -1.034319519996643
    3. ' >' → logprob: -3.2843194007873535
    4. '>' → logprob: -4.5343194007873535
    5. ' <' → logprob: -5.1593194007873535
    6. ' >=' → logprob: -6.4093194007873535
    7. ' <=' → logprob: -6.9093194007873535
    8. '<' → logprob: -7.0343194007873535
    9. '>=' → logprob: -7.6593194007873535
    10. '<=' → logprob: -8.034319877624512

Token 423: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.038131795823574066
    2. ' ' → logprob: -3.2881317138671875
    3. 'cursor' → logprob: -10.413131713867188
    4. '=' → logprob: -11.163131713867188
    5. 'sss' → logprob: -11.413131713867188
    6. '1' → logprob: -11.913131713867188
    7. 's' → logprob: -11.913131713867188
    8. ' cursor' → logprob: -12.413131713867188
    9. ' s' → logprob: -12.663131713867188
    10. 'ss' → logprob: -13.038131713867188

Token 424: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004265608265995979
    2. '=' → logprob: -6.004265785217285
    3. ' ' → logprob: -7.129265785217285
    4. 'cursor' → logprob: -8.004265785217285
    5. '1' → logprob: -8.254265785217285
    6. 'sss' → logprob: -8.629265785217285
    7. 'n' → logprob: -9.379265785217285
    8. 'last' → logprob: -10.379265785217285
    9. 's' → logprob: -10.379265785217285
    10. 'c' → logprob: -10.754265785217285

Token 425: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7008622288703918
    2. ':
' → logprob: -0.7008622288703918
    3. ' and' → logprob: -5.200862407684326
    4. '   ' → logprob: -6.825862407684326
    5. ' or' → logprob: -7.575862407684326
    6. '       ' → logprob: -8.700861930847168
    7. ' :
' → logprob: -8.700861930847168
    8. ' :' → logprob: -8.825861930847168
    9. 'and' → logprob: -10.200861930847168
    10. '):
' → logprob: -10.950861930847168

Token 426: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007230573799461126
    2. ':
' → logprob: -6.257230758666992
    3. '   ' → logprob: -6.382230758666992
    4. ':' → logprob: -6.382230758666992
    5. ',' → logprob: -7.007230758666992
    6. ' and' → logprob: -8.507230758666992
    7. '
' → logprob: -8.632230758666992
    8. '        
' → logprob: -8.882230758666992
    9. 'repeat' → logprob: -9.632230758666992
    10. '):
' → logprob: -9.632230758666992

Token 427: ' repeat' (ID: 22962)
  Prédit: ' repeat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' repeat' → logprob: -0.7994740009307861
    2. 'repeat' (adapté à ' repeat') → logprob: -0.7994740009307861
    3. '       ' → logprob: -3.049474000930786
    4. '   ' → logprob: -3.424474000930786
    5. 're' → logprob: -5.174473762512207
    6. ' rep' → logprob: -5.299473762512207
    7. ' r' → logprob: -5.424473762512207
    8. 'r' → logprob: -6.174473762512207
    9. 'rep' → logprob: -6.299473762512207
    10. ' rpt' → logprob: -8.299473762512207

Token 428: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12722761929035187
    2. 's' → logprob: -2.127227544784546
    3. ' ,' → logprob: -9.502227783203125
    4. ',_' → logprob: -9.502227783203125
    5. '_,' → logprob: -9.752227783203125
    6. '_count' → logprob: -11.002227783203125
    7. ' =' → logprob: -11.127227783203125
    8. '_a' → logprob: -11.502227783203125
    9. ',a' → logprob: -11.627227783203125
    10. ',s' → logprob: -11.627227783203125

Token 429: ' cursor' (ID: 14944)
  Prédit: ' cursor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cursor' → logprob: -0.05627763643860817
    2. 'cursor' → logprob: -2.9312777519226074
    3. ' max' → logprob: -6.806277751922607
    4. 'max' → logprob: -8.55627727508545
    5. ' next' → logprob: -10.05627727508545
    6. ' new' → logprob: -10.80627727508545
    7. 'next' → logprob: -11.43127727508545
    8. '_cursor' → logprob: -12.55627727508545
    9. 'new' → logprob: -12.80627727508545
    10. ' last' → logprob: -12.93127727508545

Token 430: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47408199310302734
    2. '=' → logprob: -0.9740819931030273
    3. ',' → logprob: -12.599081993103027
    4. '   ' → logprob: -13.474081993103027
    5. ' ' → logprob: -16.474082946777344
    6. '    ' → logprob: -17.099082946777344
    7. '＝' → logprob: -17.474082946777344
    8. ' =
' → logprob: -17.474082946777344
    9. ' +=' → logprob: -18.349082946777344
    10. ')' → logprob: -18.349082946777344

Token 431: ' search' (ID: 3684)
  Prédit: 'search'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'search' → logprob: -0.008614808320999146
    2. ' search' → logprob: -4.758615016937256
    3. '
' → logprob: -16.508615493774414
    4. '   ' → logprob: -16.883615493774414
    5. '	search' → logprob: -17.008615493774414
    6. '(search' → logprob: -17.383615493774414
    7. ' ' → logprob: -17.508615493774414
    8. 'se' → logprob: -17.508615493774414
    9. '  ' → logprob: -19.008615493774414
    10. '.search' → logprob: -19.633615493774414

Token 432: '_ab' (ID: 53632)
  Prédit: '_ab'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ab' → logprob: -1.981667537620524e-06
    2. '_a' → logprob: -13.500001907348633
    3. '_' → logprob: -15.250001907348633
    4. 'ab' → logprob: -15.500001907348633
    5. 'a' → logprob: -18.500001907348633
    6. ''ab' → logprob: -18.625001907348633
    7. '_AB' → logprob: -19.000001907348633
    8. ' ab' → logprob: -19.375001907348633
    9. '_abs' → logprob: -19.500001907348633
    10. '_an' → logprob: -19.875001907348633

Token 433: '(ss' (ID: 68597)
  Prédit: '(ss'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ss' → logprob: -2.1008713702030946e-06
    2. '(' → logprob: -13.750001907348633
    3. ' (' → logprob: -14.375001907348633
    4. '(s' → logprob: -15.875001907348633
    5. 'sss' → logprob: -16.000001907348633
    6. ':ss' → logprob: -17.250001907348633
    7. '```' → logprob: -17.375001907348633
    8. '	ss' → logprob: -18.125001907348633
    9. '(cc' → logprob: -18.125001907348633
    10. '   ' → logprob: -18.375001907348633

Token 434: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00015943869948387146
    2. 'ss' → logprob: -8.87515926361084
    3. 'sss' → logprob: -11.87515926361084
    4. ' s' → logprob: -12.50015926361084
    5. '(s' → logprob: -12.62515926361084
    6. '(ss' → logprob: -13.12515926361084
    7. '(' → logprob: -13.50015926361084
    8. ',' → logprob: -15.37515926361084
    9. ')' → logprob: -15.50015926361084
    10. '```' → logprob: -15.56265926361084

Token 435: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00045783669338561594
    2. ' ,' → logprob: -7.875457763671875
    3. ',c' → logprob: -9.875457763671875
    4. '(cursor' → logprob: -11.000457763671875
    5. ',s' → logprob: -12.125457763671875
    6. ',
' → logprob: -13.250457763671875
    7. '   ' → logprob: -14.125457763671875
    8. 's' → logprob: -15.000457763671875
    9. '(' → logprob: -15.000457763671875
    10. ',n' → logprob: -15.250457763671875

Token 436: ' cursor' (ID: 14944)
  Prédit: 'cursor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cursor' → logprob: -0.023264816030859947
    2. ' cursor' → logprob: -3.7732648849487305
    3. '
' → logprob: -11.27326488494873
    4. '	cursor' → logprob: -13.02326488494873
    5. '(cursor' → logprob: -13.14826488494873
    6. 'cur' → logprob: -14.27326488494873
    7. '   ' → logprob: -14.64826488494873
    8. 'c' → logprob: -15.14826488494873
    9. 'Cursor' → logprob: -15.64826488494873
    10. '.cursor' → logprob: -15.64826488494873

Token 437: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0495942085981369
    2. ')
' → logprob: -3.0495941638946533
    3. '   ' → logprob: -6.924594402313232
    4. '       ' → logprob: -10.924593925476074
    5. ')
' → logprob: -13.049593925476074
    6. ' )' → logprob: -13.174593925476074
    7. ' )
' → logprob: -14.799593925476074
    8. ')

' → logprob: -15.174593925476074
    9. ' ' → logprob: -16.67459487915039
    10. ')`' → logprob: -16.79959487915039

Token 438: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006844549905508757
    2. 're' → logprob: -5.381844520568848
    3. '   ' → logprob: -6.131844520568848
    4. 'repeat' → logprob: -10.506844520568848
    5. ' repeats' → logprob: -12.756844520568848
    6. '           ' → logprob: -12.756844520568848
    7. ',re' → logprob: -12.881844520568848
    8. '	re' → logprob: -12.881844520568848
    9. '
' → logprob: -13.006844520568848
    10. ',' → logprob: -13.131844520568848

Token 439: ' repeats' (ID: 95681)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.07699579745531082
    2. '       ' → logprob: -3.076995849609375
    3. '   ' → logprob: -4.076995849609375
    4. ' repeats' → logprob: -4.576995849609375
    5. 'repeat' → logprob: -8.076995849609375
    6. '	re' → logprob: -8.076995849609375
    7. '
' → logprob: -10.201995849609375
    8. '        
' → logprob: -10.451995849609375
    9. '           ' → logprob: -11.201995849609375
    10. '```' → logprob: -11.451995849609375

Token 440: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -2.0219828002154827e-05
    2. '_' → logprob: -11.125020027160645
    3. '.append' → logprob: -13.000020027160645
    4. '_append' → logprob: -14.625020027160645
    5. '_as' → logprob: -14.875020027160645
    6. '_ai' → logprob: -14.875020027160645
    7. 'a' → logprob: -15.125020027160645
    8. '_at' → logprob: -15.125020027160645
    9. '_an' → logprob: -15.250020027160645
    10. 's' → logprob: -15.625020027160645

Token 441: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.004091816488653421
    2. '.' → logprob: -5.504091739654541
    3. ' .' → logprob: -12.2540922164917
    4. '.extend' → logprob: -12.3790922164917
    5. '.ap' → logprob: -12.8790922164917
    6. '.app' → logprob: -13.7540922164917
    7. 'append' → logprob: -14.7540922164917
    8. '.push' → logprob: -16.129091262817383
    9. '.py' → logprob: -16.254091262817383
    10. '.add' → logprob: -17.379091262817383

Token 442: '((' (ID: 2054)
  Prédit: '(re'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(re' → logprob: -2.2961512513575144e-05
    2. 'repeat' → logprob: -10.875022888183594
    3. '(' → logprob: -12.500022888183594
    4. '((' → logprob: -15.750022888183594
    5. '(
' → logprob: -16.875022888183594
    6. '(rep' → logprob: -17.000022888183594
    7. ' repeat' → logprob: -17.125022888183594
    8. ' (' → logprob: -18.500022888183594
    9. '	re' → logprob: -19.250022888183594
    10. '(str' → logprob: -19.375022888183594

Token 443: 'cursor' (ID: 34222)
  Prédit: 'repeat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'repeat' → logprob: -0.00161733478307724
    2. ' repeat' → logprob: -7.001617431640625
    3. 'cursor' → logprob: -7.876617431640625
    4. 'c' → logprob: -8.751617431640625
    5. 's' → logprob: -10.001617431640625
    6. 're' → logprob: -11.376617431640625
    7. '-repeat' → logprob: -11.751617431640625
    8. ''' → logprob: -11.751617431640625
    9. '_repeat' → logprob: -11.876617431640625
    10. ''s' → logprob: -12.001617431640625

Token 444: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003819332632701844
    2. ' ,' → logprob: -8.625381469726562
    3. '-' → logprob: -9.250381469726562
    4. ',
' → logprob: -9.875381469726562
    5. ' -' → logprob: -10.000381469726562
    6. '),' → logprob: -13.125381469726562
    7. '   ' → logprob: -13.625381469726562
    8. ')' → logprob: -13.750381469726562
    9. '       ' → logprob: -13.875381469726562
    10. '[' → logprob: -14.000381469726562

Token 445: ' repeat' (ID: 22962)
  Prédit: 'repeat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'repeat' → logprob: -0.005236479919403791
    2. ' repeat' → logprob: -5.255236625671387
    3. '   ' → logprob: -14.005236625671387
    4. ' ' → logprob: -14.255236625671387
    5. '       ' → logprob: -15.005236625671387
    6. '
' → logprob: -15.130236625671387
    7. '           ' → logprob: -15.880236625671387
    8. '  ' → logprob: -16.25523567199707
    9. '    ' → logprob: -16.63023567199707
    10. '     ' → logprob: -17.13023567199707

Token 446: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0018980521708726883
    2. ')' → logprob: -6.501898288726807
    3. '))
' → logprob: -7.876898288726807
    4. ' ))' → logprob: -11.876897811889648
    5. ',' → logprob: -12.751897811889648
    6. ')
' → logprob: -13.501897811889648
    7. ')))' → logprob: -13.501897811889648
    8. '   ' → logprob: -13.751897811889648
    9. '),' → logprob: -14.126897811889648
    10. ' ' → logprob: -14.376897811889648

Token 447: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00011021859245374799
    2. 'else' → logprob: -10.250110626220703
    3. '<|end|>' → logprob: -10.500110626220703
    4. ')' → logprob: -11.375110626220703
    5. 'elif' → logprob: -11.500110626220703
    6. '       ' → logprob: -12.000110626220703
    7. '```' → logprob: -12.250110626220703
    8. ' else' → logprob: -12.250110626220703
    9. '    
' → logprob: -12.625110626220703
    10. '
' → logprob: -13.375110626220703

Token 448: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05036033317446709
    2. 'else' (adapté à ' else') → logprob: -3.0503604412078857
    3. ' else' → logprob: -6.925360202789307
    4. 'elif' → logprob: -7.175360202789307
    5. ' elif' → logprob: -11.800360679626465
    6. '       ' → logprob: -12.300360679626465
    7. '    
' → logprob: -12.425360679626465
    8. '	else' → logprob: -12.800360679626465
    9. ' ' → logprob: -13.550360679626465
    10. ')' → logprob: -14.050360679626465

Token 449: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9103947281837463
    2. '       ' → logprob: -0.9103947281837463
    3. ':
' → logprob: -1.6603946685791016
    4. '   ' → logprob: -5.535394668579102
    5. ',' → logprob: -7.660394668579102
    6. '{' → logprob: -8.035394668579102
    7. '{
' → logprob: -8.535394668579102
    8. '```' → logprob: -9.535394668579102
    9. '<|end|>' → logprob: -10.160394668579102
    10. '      ' → logprob: -10.410394668579102

Token 450: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.049417123198509216
    2. 'repeat' → logprob: -3.549417018890381
    3. ' repeat' → logprob: -4.799417018890381
    4. '   ' → logprob: -5.049417018890381
    5. 'tmp' → logprob: -6.549417018890381
    6. ',' → logprob: -7.549417018890381
    7. ' tmp' → logprob: -7.674417018890381
    8. 'max' → logprob: -7.799417018890381
    9. 'cur' → logprob: -7.924417018890381
    10. ' ' → logprob: -8.299417495727539

Token 451: ' tmp' (ID: 8919)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' (adapté à ' tmp') → logprob: -0.23103642463684082
    2. ' tmp' → logprob: -2.606036424636841
    3. 'part' → logprob: -2.606036424636841
    4. ' part' → logprob: -2.981036424636841
    5. 'max' → logprob: -5.731036186218262
    6. '       ' → logprob: -6.481036186218262
    7. '   ' → logprob: -6.856036186218262
    8. 'cur' → logprob: -7.731036186218262
    9. ' max' → logprob: -8.356036186218262
    10. 'temp' → logprob: -8.731036186218262

Token 452: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.44790446758270264
    2. '_max' → logprob: -1.0729044675827026
    3. 'max' → logprob: -4.197904586791992
    4. '_cur' → logprob: -6.197904586791992
    5. '_str' → logprob: -7.697904586791992
    6. '_,' → logprob: -7.947904586791992
    7. ',max' → logprob: -8.447904586791992
    8. '_tmp' → logprob: -8.572904586791992
    9. '_b' → logprob: -8.822904586791992
    10. ',_' → logprob: -9.197904586791992

Token 453: ' cursor' (ID: 14944)
  Prédit: ' cursor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cursor' → logprob: -0.020547375082969666
    2. 'cursor' → logprob: -3.895547389984131
    3. '   ' → logprob: -13.020546913146973
    4. ' ' → logprob: -13.770546913146973
    5. '	cursor' → logprob: -14.020546913146973
    6. '       ' → logprob: -14.520546913146973
    7. '  ' → logprob: -15.645546913146973
    8. '(cursor' → logprob: -15.770546913146973
    9. '
' → logprob: -16.39554786682129
    10. '_cursor' → logprob: -16.52054786682129

Token 454: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07889485359191895
    2. ' =' → logprob: -2.578894853591919
    3. ',' → logprob: -12.20389461517334
    4. '   ' → logprob: -16.203895568847656
    5. ')' → logprob: -17.328895568847656
    6. ' ' → logprob: -17.703895568847656
    7. '＝' → logprob: -17.953895568847656
    8. '    ' → logprob: -18.203895568847656
    9. '  ' → logprob: -18.328895568847656
    10. '=
' → logprob: -18.953895568847656

Token 455: ' search' (ID: 3684)
  Prédit: 'search'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'search' → logprob: -0.016035189852118492
    2. ' search' → logprob: -4.141035079956055
    3. '	search' → logprob: -14.516035079956055
    4. ' ' → logprob: -15.891035079956055
    5. '(search' → logprob: -16.516035079956055
    6. '
' → logprob: -16.641035079956055
    7. '   ' → logprob: -16.641035079956055
    8. '  ' → logprob: -16.766035079956055
    9. 'earch' → logprob: -18.391035079956055
    10. '.search' → logprob: -18.766035079956055

Token 456: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -1.2664456789934775e-06
    2. 'ba' → logprob: -14.000000953674316
    3. ' ba' → logprob: -15.500000953674316
    4. '_bb' → logprob: -17.000001907348633
    5. '_ab' → logprob: -17.125001907348633
    6. '```' → logprob: -17.250001907348633
    7. '   ' → logprob: -19.125001907348633
    8. 'b' → logprob: -19.625001907348633
    9. '_B' → logprob: -19.875001907348633
    10. '_bc' → logprob: -20.250001907348633

Token 457: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -8.792751032160595e-05
    2. 'ab' → logprob: -10.37508773803711
    3. '_a' → logprob: -11.25008773803711
    4. 'ss' → logprob: -11.37508773803711
    5. 'ba' → logprob: -11.50008773803711
    6. 'aa' → logprob: -11.87508773803711
    7. 'b' → logprob: -12.00008773803711
    8. '(ss' → logprob: -12.62508773803711
    9. 'а' → logprob: -12.75008773803711
    10. '```' → logprob: -14.75008773803711

Token 458: '(ss' (ID: 68597)
  Prédit: '(ss'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ss' → logprob: -4.320199877838604e-07
    2. ' (' → logprob: -15.75
    3. 'ss' → logprob: -16.875
    4. '(' → logprob: -17.25
    5. 'sss' → logprob: -17.875
    6. '```' → logprob: -18.75
    7. '	ss' → logprob: -18.875
    8. ':ss' → logprob: -18.875
    9. '(
' → logprob: -20.5
    10. '(cc' → logprob: -21.25

Token 459: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.008300373330712318
    2. 'ss' → logprob: -4.883300304412842
    3. '(ss' → logprob: -8.25830078125
    4. 'sss' → logprob: -8.25830078125
    5. '(s' → logprob: -8.88330078125
    6. ')s' → logprob: -11.75830078125
    7. 'b' → logprob: -12.25830078125
    8. ')' → logprob: -12.25830078125
    9. '[s' → logprob: -12.75830078125
    10. ' s' → logprob: -12.75830078125

Token 460: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008403576212003827
    2. ' ,' → logprob: -7.500840187072754
    3. ',tmp' → logprob: -9.000840187072754
    4. ')' → logprob: -9.500840187072754
    5. '(ss' → logprob: -10.250840187072754
    6. ',
' → logprob: -11.000840187072754
    7. '(tmp' → logprob: -11.625840187072754
    8. 'tmp' → logprob: -12.250840187072754
    9. ',s' → logprob: -12.375840187072754
    10. ',)' → logprob: -12.875840187072754

Token 461: ' cursor' (ID: 14944)
  Prédit: 'cursor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cursor' → logprob: -0.1269523650407791
    2. ' cursor' → logprob: -2.1269524097442627
    3. 'tmp' → logprob: -11.251952171325684
    4. '(cursor' → logprob: -12.251952171325684
    5. '	cursor' → logprob: -12.876952171325684
    6. ' tmp' → logprob: -13.501952171325684
    7. ' ' → logprob: -14.126952171325684
    8. '.cursor' → logprob: -14.876952171325684
    9. 'cur' → logprob: -14.876952171325684
    10. '_cursor' → logprob: -15.376952171325684

Token 462: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.4361792206764221
    2. ')' → logprob: -1.0611791610717773
    3. '       ' → logprob: -4.936179161071777
    4. '   ' → logprob: -8.936179161071777
    5. ')
' → logprob: -9.936179161071777
    6. ',' → logprob: -10.061179161071777
    7. ' )
' → logprob: -10.811179161071777
    8. '[' → logprob: -12.186179161071777
    9. ' )' → logprob: -12.186179161071777
    10. ')

' → logprob: -12.686179161071777

Token 463: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05325916036963463
    2. 'parts' → logprob: -3.3032591342926025
    3. ' parts' → logprob: -4.803259372711182
    4. '   ' → logprob: -5.053259372711182
    5. '(parts' → logprob: -7.678259372711182
    6. '
' → logprob: -10.803258895874023
    7. '_parts' → logprob: -11.803258895874023
    8. ',' → logprob: -12.803258895874023
    9. '.parts' → logprob: -12.803258895874023
    10. '        
' → logprob: -12.928258895874023

Token 464: ' parts' (ID: 7881)
  Prédit: 'parts'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parts' (adapté à ' parts') → logprob: -0.0033090158831328154
    2. ' parts' → logprob: -5.75330924987793
    3. '   ' → logprob: -9.37830924987793
    4. '       ' → logprob: -10.25330924987793
    5. '
' → logprob: -11.62830924987793
    6. 'part' → logprob: -14.12830924987793
    7. '(parts' → logprob: -14.25330924987793
    8. '.parts' → logprob: -15.12830924987793
    9. '_parts' → logprob: -15.62830924987793
    10. ' ' → logprob: -15.75330924987793

Token 465: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.002200571121647954
    2. '.append' → logprob: -6.127200603485107
    3. 's' → logprob: -11.25220012664795
    4. '._' → logprob: -14.37720012664795
    5. '.' → logprob: -14.87720012664795
    6. '.push' → logprob: -15.12720012664795
    7. 'b' → logprob: -15.50220012664795
    8. '   ' → logprob: -15.62720012664795
    9. '.extend' → logprob: -16.252201080322266
    10. 'append' → logprob: -16.252201080322266

Token 466: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -2.8206473871250637e-05
    2. '.' → logprob: -10.500028610229492
    3. 'append' → logprob: -14.875028610229492
    4. ' .' → logprob: -15.500028610229492
    5. '.app' → logprob: -17.250028610229492
    6. '.ap' → logprob: -18.125028610229492
    7. '.extend' → logprob: -18.125028610229492
    8. '   ' → logprob: -18.625028610229492
    9. '.py' → logprob: -19.000028610229492
    10. '.push' → logprob: -19.375028610229492

Token 467: '(tmp' (ID: 22623)
  Prédit: '(tmp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tmp' → logprob: -4.906711546937004e-05
    2. '(' → logprob: -10.000048637390137
    3. 'tmp' → logprob: -12.625048637390137
    4. '(temp' → logprob: -15.500048637390137
    5. '(
' → logprob: -16.500049591064453
    6. '((' → logprob: -17.250049591064453
    7. ' (' → logprob: -17.875049591064453
    8. '/tmp' → logprob: -18.125049591064453
    9. ' tmp' → logprob: -18.625049591064453
    10. '(txt' → logprob: -18.875049591064453

Token 468: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.865583706414327e-05
    2. ')
' → logprob: -9.37509822845459
    3. '<|end|>' → logprob: -11.87509822845459
    4. ' )' → logprob: -12.50009822845459
    5. '   ' → logprob: -13.12509822845459
    6. ')return' → logprob: -15.50009822845459
    7. ')#' → logprob: -16.250099182128906
    8. ')}' → logprob: -16.375099182128906
    9. '
' → logprob: -16.500099182128906
    10. '))' → logprob: -16.500099182128906

Token 469: '       ' (ID: 309)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.5761658549308777
    2. 'max' → logprob: -1.5761659145355225
    3. 'if' → logprob: -2.0761659145355225
    4. ')' → logprob: -3.7011659145355225
    5. 'for' → logprob: -4.201165676116943
    6. 'tmp' → logprob: -4.326165676116943
    7. 'print' → logprob: -4.326165676116943
    8. '<|end|>' → logprob: -5.076165676116943
    9. 'parts' → logprob: -5.201165676116943
    10. 'res' → logprob: -5.326165676116943

Token 470: ' last' (ID: 2174)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' (adapté à ' last') → logprob: -0.030051300302147865
    2. ' last' → logprob: -3.9050512313842773
    3. '
' → logprob: -5.405051231384277
    4. 'print' → logprob: -6.405051231384277
    5. 'continue' → logprob: -6.530051231384277
    6. ')' → logprob: -8.405051231384277
    7. '```' → logprob: -8.655051231384277
    8. ' ' → logprob: -8.905051231384277
    9. '       ' → logprob: -9.030051231384277
    10. 's' → logprob: -9.030051231384277

Token 471: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.0002933942887466401
    2. '_cur' → logprob: -8.750293731689453
    3. '_cursor' → logprob: -9.875293731689453
    4. 'b' → logprob: -10.625293731689453
    5. '_' → logprob: -10.750293731689453
    6. '=' → logprob: -11.750293731689453
    7. ')_' → logprob: -12.000293731689453
    8. '=_' → logprob: -12.000293731689453
    9. '_a' → logprob: -13.000293731689453
    10. 'cursor' → logprob: -13.500293731689453

Token 472: '_cur' (ID: 46382)
  Prédit: '_cur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cur' → logprob: -0.07072066515684128
    2. 'cur' → logprob: -2.695720672607422
    3. '_cursor' → logprob: -7.820720672607422
    4. '=' → logprob: -9.195720672607422
    5. 'cursor' → logprob: -9.695720672607422
    6. '_' → logprob: -10.070720672607422
    7. 'tmp' → logprob: -10.820720672607422
    8. '_tmp' → logprob: -10.820720672607422
    9. ')_' → logprob: -10.945720672607422
    10. ' cur' → logprob: -10.945720672607422

Token 473: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.29378199577331543
    2. '=' → logprob: -1.4187819957733154
    3. ' +=' → logprob: -4.4187822341918945
    4. '+=' → logprob: -7.6687822341918945
    5. '+' → logprob: -11.668782234191895
    6. ',' → logprob: -12.168782234191895
    7. ')' → logprob: -12.293782234191895
    8. ' +' → logprob: -12.418782234191895
    9. ' ' → logprob: -12.543782234191895
    10. ' ==' → logprob: -12.668782234191895

Token 474: ' cursor' (ID: 14944)
  Prédit: 'cursor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cursor' → logprob: -0.011080952361226082
    2. ' cursor' → logprob: -4.511080741882324
    3. 'tmp' → logprob: -10.761080741882324
    4. '	cursor' → logprob: -12.386080741882324
    5. 'ccc' → logprob: -13.761080741882324
    6. '(cursor' → logprob: -13.886080741882324
    7. 'cur' → logprob: -14.011080741882324
    8. 'max' → logprob: -14.136080741882324
    9. 'sss' → logprob: -14.136080741882324
    10. '_cursor' → logprob: -14.261080741882324

Token 475: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 476: 'print' (ID: 1598)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.678932249546051
    2. '<|end|>' → logprob: -1.1789321899414062
    3. 'if' → logprob: -2.4289321899414062
    4. '#' → logprob: -3.4289321899414062
    5. 'while' → logprob: -4.553932189941406
    6. 'cursor' → logprob: -4.928932189941406
    7. '```' → logprob: -5.053932189941406
    8. 'for' → logprob: -5.053932189941406
    9. 'max' → logprob: -5.678932189941406
    10. 'tmp' → logprob: -5.803932189941406

Token 477: '(in' (ID: 9573)
  Prédit: '(max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.3107738792896271
    2. '(re' → logprob: -2.4357738494873047
    3. '(sum' → logprob: -2.8107738494873047
    4. '('' → logprob: -3.1857738494873047
    5. '(' → logprob: -3.3107738494873047
    6. '(in' → logprob: -3.9357738494873047
    7. '(*' → logprob: -4.810773849487305
    8. '(
' → logprob: -5.435773849487305
    9. '(len' → logprob: -5.560773849487305
    10. '((' → logprob: -6.810773849487305

Token 478: 'tegr' (ID: 11253)
  Prédit: 'tegr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tegr' → logprob: -0.2470724731683731
    2. 'te' → logprob: -1.872072458267212
    3. 't' → logprob: -2.872072458267212
    4. '(' → logprob: -5.622072696685791
    5. 'teg' → logprob: -6.497072696685791
    6. '('' → logprob: -6.872072696685791
    7. '
' → logprob: -7.372072696685791
    8. 'ate' → logprob: -8.747072219848633
    9. '"' → logprob: -8.872072219848633
    10. ')' → logprob: -9.122072219848633

Token 479: 'ate' (ID: 379)
  Prédit: 'ate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ate' → logprob: -4.36574100604048e-06
    2. '(' → logprob: -12.500004768371582
    3. '
' → logprob: -15.500004768371582
    4. '(parts' → logprob: -16.250003814697266
    5. 'te' → logprob: -16.500003814697266
    6. ' ate' → logprob: -17.000003814697266
    7. '```' → logprob: -17.250003814697266
    8. 'rate' → logprob: -17.250003814697266
    9. '(in' → logprob: -18.000003814697266
    10. '**' → logprob: -18.125003814697266

Token 480: '(parts' (ID: 102573)
  Prédit: '(parts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(parts' → logprob: 0.0
    2. '(' → logprob: -17.0
    3. '(points' → logprob: -17.625
    4. '(part' → logprob: -17.75
    5. '(p' → logprob: -18.875
    6. '(posts' → logprob: -19.25
    7. ')' → logprob: -19.5
    8. 'parts' → logprob: -19.875
    9. ' (' → logprob: -20.25
    10. '(par' → logprob: -20.875

Token 481: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -5.080963092041202e-06
    2. 'b' → logprob: -12.750004768371582
    3. ')' → logprob: -13.625004768371582
    4. ')_' → logprob: -14.625004768371582
    5. '```' → logprob: -16.1250057220459
    6. '(b' → logprob: -16.8750057220459
    7. '(_' → logprob: -17.3750057220459
    8. '_a' → logprob: -17.5000057220459
    9. ' _' → logprob: -17.5000057220459
    10. '_)' → logprob: -17.8750057220459

Token 482: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.023308252915740013
    2. '))' → logprob: -3.773308277130127
    3. '())' → logprob: -10.398307800292969
    4. ')))' → logprob: -11.523307800292969
    5. ',' → logprob: -11.898307800292969
    6. ' )' → logprob: -12.273307800292969
    7. '])' → logprob: -12.648307800292969
    8. '})' → logprob: -13.648307800292969
    9. '[' → logprob: -14.398307800292969
    10. ')+' → logprob: -14.648307800292969

Token 483: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.054500666621607e-06
    2. '))' → logprob: -14.12500286102295
    3. ' )' → logprob: -14.37500286102295
    4. '`)' → logprob: -14.62500286102295
    5. ')
' → logprob: -15.12500286102295
    6. ')#' → logprob: -15.37500286102295
    7. '())' → logprob: -15.50000286102295
    8. '[' → logprob: -15.75000286102295
    9. '()' → logprob: -16.125003814697266
    10. ')`' → logprob: -16.375003814697266

Token 484: ' '' (ID: 461)
  Prédit: ''a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''a' → logprob: -0.5518490672111511
    2. '''.' → logprob: -1.176849126815796
    3. ' ''.' → logprob: -2.801849126815796
    4. 's' → logprob: -4.176848888397217
    5. ''' → logprob: -4.426848888397217
    6. ''s' → logprob: -4.926848888397217
    7. '('' → logprob: -5.176848888397217
    8. 'a' → logprob: -5.301848888397217
    9. ' '' → logprob: -6.051848888397217
    10. '"' → logprob: -7.051848888397217

Token 485: 'ab' (ID: 378)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7853856682777405
    2. '''.' → logprob: -1.2853856086730957
    3. ''a' → logprob: -1.4103856086730957
    4. ''' → logprob: -4.785385608673096
    5. 'aaa' → logprob: -5.535385608673096
    6. '('' → logprob: -5.785385608673096
    7. ' ''.' → logprob: -6.035385608673096
    8. 'max' → logprob: -6.910385608673096
    9. '(a' → logprob: -7.785385608673096
    10. '(' → logprob: -7.785385608673096

Token 486: ''' (ID: 6)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.45992130041122437
    2. ''' → logprob: -1.9599213600158691
    3. '''.' → logprob: -2.459921360015869
    4. '')' → logprob: -2.709921360015869
    5. ''a' → logprob: -3.459921360015869
    6. ''.' → logprob: -4.084921360015869
    7. '''' → logprob: -4.834921360015869
    8. ''''' → logprob: -5.709921360015869
    9. ''*' → logprob: -5.709921360015869
    10. '"' → logprob: -5.709921360015869

Token 487: ' *' (ID: 425)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12913095951080322
    2. '*' → logprob: -3.1291308403015137
    3. '')' → logprob: -3.3791308403015137
    4. 'ab' → logprob: -3.7541308403015137
    5. ' *' → logprob: -4.879130840301514
    6. ''' → logprob: -5.254130840301514
    7. ''ab' → logprob: -6.004130840301514
    8. '.join' → logprob: -7.629130840301514
    9. '*(' → logprob: -7.879130840301514
    10. '[' → logprob: -7.879130840301514

Token 488: ' sum' (ID: 4215)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 're' → logprob: -0.2161080539226532
    2. 'sum' → logprob: -2.4661080837249756
    3. 'max' → logprob: -3.2161080837249756
    4. '(re' → logprob: -3.8411080837249756
    5. 'len' → logprob: -4.8411078453063965
    6. 'n' → logprob: -4.9661078453063965
    7. '(' → logprob: -5.2161078453063965
    8. ' repeats' → logprob: -5.4661078453063965
    9. 'repeat' → logprob: -5.4661078453063965
    10. 'min' → logprob: -5.5911078453063965

Token 489: '(r' (ID: 4729)
  Prédit: '(re'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(re' → logprob: -0.34375062584877014
    2. '(r' → logprob: -2.3437507152557373
    3. '([' → logprob: -2.3437507152557373
    4. '(rep' → logprob: -3.0937507152557373
    5. '(x' → logprob: -3.3437507152557373
    6. '(' → logprob: -4.593750476837158
    7. '((' → logprob: -5.718750476837158
    8. '(i' → logprob: -6.968750476837158
    9. '(t' → logprob: -6.968750476837158
    10. '(a' → logprob: -7.343750476837158

Token 490: ' for' (ID: 395)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6585779190063477
    2. 'r' → logprob: -1.2835779190063477
    3. 'e' → logprob: -2.6585779190063477
    4. 'a' → logprob: -3.0335779190063477
    5. 'repeat' → logprob: -3.0335779190063477
    6. 'x' → logprob: -4.158577919006348
    7. 'rep' → logprob: -4.783577919006348
    8. 'p' → logprob: -5.658577919006348
    9. '[a' → logprob: -5.658577919006348
    10. 't' → logprob: -6.408577919006348

Token 491: ' c' (ID: 274)
  Prédit: '_,'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_,' → logprob: -0.0008496518130414188
    2. '(_,' → logprob: -7.875849723815918
    3. '__,' → logprob: -8.750849723815918
    4. '_' → logprob: -9.250849723815918
    5. ' _,' → logprob: -9.375849723815918
    6. ',' → logprob: -9.625849723815918
    7. 'cur' → logprob: -11.000849723815918
    8. '_cursor' → logprob: -11.375849723815918
    9. '_c' → logprob: -11.750849723815918
    10. '_cur' → logprob: -12.000849723815918

Token 492: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04150262847542763
    2. '_,' → logprob: -3.5415027141571045
    3. ',c' → logprob: -4.541502475738525
    4. ',r' → logprob: -8.166502952575684
    5. ',_' → logprob: -8.791502952575684
    6. ',
' → logprob: -9.041502952575684
    7. ',p' → logprob: -9.166502952575684
    8. ' ,' → logprob: -9.666502952575684
    9. '_cursor' → logprob: -10.166502952575684
    10. ' _,' → logprob: -10.291502952575684

Token 493: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.13165521621704102
    2. 'c' → logprob: -2.256655216217041
    3. '_,' → logprob: -4.631655216217041
    4. 'p' → logprob: -5.381655216217041
    5. 't' → logprob: -6.631655216217041
    6. '(_,' → logprob: -7.506655216217041
    7. 'cur' → logprob: -7.631655216217041
    8. 'i' → logprob: -7.881655216217041
    9. ' r' → logprob: -7.881655216217041
    10. 'cursor' → logprob: -8.631654739379883

Token 494: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3506597578525543
    2. 'in' → logprob: -1.225659728050232
    3. ',' → logprob: -6.4756598472595215
    4. 're' → logprob: -8.225659370422363
    5. ',re' → logprob: -8.225659370422363
    6. ' ,' → logprob: -9.600659370422363
    7. ',c' → logprob: -10.475659370422363
    8. ',r' → logprob: -11.725659370422363
    9. '_,' → logprob: -11.975659370422363
    10. ' ' → logprob: -11.975659370422363

Token 495: ' repeats' (ID: 95681)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.04858827963471413
    2. ' repeats' → logprob: -3.048588275909424
    3. '	re' → logprob: -14.673588752746582
    4. 'repeat' → logprob: -15.798588752746582
    5. '(re' → logprob: -15.923588752746582
    6. 'Repe' → logprob: -16.048587799072266
    7. ' ' → logprob: -16.923587799072266
    8. 'r' → logprob: -16.923587799072266
    9. ' repe' → logprob: -17.173587799072266
    10. '   ' → logprob: -17.298587799072266

Token 496: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.0001302374730585143
    2. 'a' → logprob: -9.000130653381348
    3. ')' → logprob: -12.000130653381348
    4. '   ' → logprob: -15.125130653381348
    5. '_' → logprob: -16.87512969970703
    6. ' _' → logprob: -17.00012969970703
    7. '```' → logprob: -17.12512969970703
    8. '[' → logprob: -17.37512969970703
    9. ')_' → logprob: -17.37512969970703
    10. ' ' → logprob: -17.50012969970703

Token 497: ' if' (ID: 538)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20154158771038055
    2. '))' → logprob: -1.701541543006897
    3. ')))' → logprob: -9.451541900634766
    4. '())' → logprob: -11.076541900634766
    5. ')`' → logprob: -11.701541900634766
    6. '])' → logprob: -11.951541900634766
    7. ')")' → logprob: -12.701541900634766
    8. '})' → logprob: -12.701541900634766
    9. ' )' → logprob: -12.951541900634766
    10. ')
' → logprob: -13.326541900634766

Token 498: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.07225357741117477
    2. ' c' → logprob: -2.697253465652466
    3. 'cursor' → logprob: -6.822253704071045
    4. ' cursor' → logprob: -7.947253704071045
    5. 'r' → logprob: -8.197253227233887
    6. 's' → logprob: -9.322253227233887
    7. '  ' → logprob: -9.322253227233887
    8. ' ' → logprob: -9.572253227233887
    9. '(c' → logprob: -10.072253227233887
    10. '   ' → logprob: -10.072253227233887

Token 499: ' >' (ID: 1424)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<' → logprob: -0.14644843339920044
    2. ' <' → logprob: -2.7714483737945557
    3. '<=' → logprob: -3.0214483737945557
    4. ' <=' → logprob: -4.271448612213135
    5. '<n' → logprob: -4.896448612213135
    6. '<c' → logprob: -6.396448612213135
    7. '<len' → logprob: -6.521448612213135
    8. '<size' → logprob: -9.271448135375977
    9. ')' → logprob: -9.771448135375977
    10. '>' → logprob: -10.146448135375977

Token 500: ' last' (ID: 2174)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.00179846934042871
    2. ' last' → logprob: -6.376798629760742
    3. '0' → logprob: -9.376798629760742
    4. 'n' → logprob: -11.626798629760742
    5. 'cursor' → logprob: -13.626798629760742
    6. ' ' → logprob: -15.126798629760742
    7. '(last' → logprob: -15.376798629760742
    8. '	last' → logprob: -15.626798629760742
    9. '
' → logprob: -15.751798629760742
    10. '=' → logprob: -16.126798629760742

Token 501: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.00020902375399600714
    2. 'cur' → logprob: -8.875208854675293
    3. 'b' → logprob: -10.375208854675293
    4. '_cur' → logprob: -10.625208854675293
    5. 'cursor' → logprob: -12.625208854675293
    6. '[' → logprob: -12.875208854675293
    7. '_c' → logprob: -13.125208854675293
    8. ' ' → logprob: -13.375208854675293
    9. '0' → logprob: -13.875208854675293
    10. ')' → logprob: -14.500208854675293

Token 502: '_cur' (ID: 46382)
  Prédit: '_cur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cur' → logprob: -0.08914317190647125
    2. 'cur' → logprob: -2.4641432762145996
    3. ')' → logprob: -9.839142799377441
    4. ' ' → logprob: -10.214142799377441
    5. ' cur' → logprob: -10.339142799377441
    6. '_cursor' → logprob: -10.464142799377441
    7. '	cur' → logprob: -11.589142799377441
    8. 'cursor' → logprob: -11.714142799377441
    9. '[cur' → logprob: -11.839142799377441
    10. '0' → logprob: -12.089142799377441

Token 503: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.5760281085968018
    2. ')' → logprob: -0.8260281085968018
    3. ')))' → logprob: -9.451027870178223
    4. ' )' → logprob: -12.826027870178223
    5. '())' → logprob: -13.326027870178223
    6. ' ))' → logprob: -13.951027870178223
    7. '])' → logprob: -13.951027870178223
    8. '))
' → logprob: -14.326027870178223
    9. '})' → logprob: -14.576027870178223
    10. ')
' → logprob: -14.951027870178223


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 501
Tokens correctement prédits (1ère position, stricte): 226
Tokens correctement prédits (1ère position, avec adaptation): 232
Tokens correctement prédits (top 10): 411
Précision stricte (1ère position): 45.11%
Précision adaptée (1ère position): 46.31%
Précision (top 10): 82.04%
================================================================================
