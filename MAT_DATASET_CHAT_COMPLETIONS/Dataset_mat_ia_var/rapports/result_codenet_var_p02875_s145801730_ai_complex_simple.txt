================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:40:12
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from functools import reduce
from operator import mul,add
from itertools import islice,accumulate,repeat,cycle

n = int(input())
p = 998244353

# Suite de Fibonacci-like en version abstraction
def mysterious_sequence(length,mod):
    def gen():
        for i in range(length):
            if i < 2:
                yield i
            else:
                yield (seq[mod%i]*(mod-int(mod//i)))%mod
    seq = []
    for val in gen():
        seq.append(val)
    return seq

l = mysterious_sequence(n, p)

# Accumulateurs à l'ancienne
indices = list(range(n,n//2,-1))
aa = [l]*len(indices)
prod = lambda x: reduce(mul, x, 1)
def creativity(idx):
    return pow(l[0]+1, idx, p)

# Calcul extravagamment éclaté
def slowmotion(indices):
    state = (0,1,1)
    def step(tpl, k):
        a,b,c = tpl
        a_new = (a + b*c)%p
        b_new = (b + b)%p
        c_new = (c * k * l[n+1-k])%p
        return (a_new, b_new, c_new)
    final = reduce(step, indices, state)
    return final[0]
a = slowmotion(indices)

# Calcul du résultat
def exp_twist(q,m,mod):
    return pow(q,m,mod)

print((exp_twist(3, n, p) - 2*a)%p)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' functools' (ID: 142636)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' reduce' (ID: 10389)
  Prédit: 'wrap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'wrap' → logprob: -0.29569441080093384
    2. 'partial' → logprob: -1.545694351196289
    3. 'reduce' → logprob: -3.295694351196289
    4. 'l' → logprob: -5.920694351196289
    5. ' wraps' → logprob: -6.295694351196289
    6. 'cached' → logprob: -7.295694351196289
    7. 'cache' → logprob: -8.295694351196289
    8. 'cmp' → logprob: -8.795694351196289
    9. '`' → logprob: -9.795694351196289
    10. '```' → logprob: -9.795694351196289

Token 4: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.020179791375994682
    2. '(lambda' → logprob: -4.270179748535156
    3. '.' → logprob: -5.270179748535156
    4. ',' → logprob: -8.020179748535156
    5. ' (' → logprob: -8.395179748535156
    6. '```' → logprob: -9.520179748535156
    7. '(
' → logprob: -10.145179748535156
    8. '\(' → logprob: -10.270179748535156
    9. '\' → logprob: -10.395179748535156
    10. 'lambda' → logprob: -11.020179748535156

Token 5: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02829861268401146
    2. 'def' → logprob: -4.653298377990723
    3. ' ' → logprob: -4.778298377990723
    4. '\' → logprob: -5.153298377990723
    5. '(
' → logprob: -7.153298377990723
    6. ',' → logprob: -7.403298377990723
    7. '```' → logprob: -7.528298377990723
    8. ' (' → logprob: -8.153298377990723
    9. 'r' → logprob: -8.653298377990723
    10. 'd' → logprob: -8.778298377990723

Token 6: ' operator' (ID: 11019)
  Prédit: ' operator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' operator' → logprob: -0.2411840558052063
    2. ' itertools' → logprob: -2.1161839962005615
    3. ' math' → logprob: -2.7411839962005615
    4. ' collections' → logprob: -3.8661839962005615
    5. 'operator' → logprob: -4.991184234619141
    6. ' os' → logprob: -7.116184234619141
    7. 'math' → logprob: -7.991184234619141
    8. ' typing' → logprob: -8.49118423461914
    9. 'collections' → logprob: -8.99118423461914
    10. ' ' → logprob: -10.49118423461914

Token 7: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.022899029776453972
    2. 'import' → logprob: -3.8978989124298096
    3. ' ' → logprob: -6.397899150848389
    4. '.' → logprob: -7.522899150848389
    5. ' .' → logprob: -9.14789867401123
    6. '.import' → logprob: -10.64789867401123
    7. '	import' → logprob: -11.77289867401123
    8. '<|end|>' → logprob: -13.02289867401123
    9. '_import' → logprob: -13.39789867401123
    10. ' ' → logprob: -13.52289867401123

Token 8: ' mul' (ID: 9975)
  Prédit: ' add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.03045966848731041
    2. ' mul' → logprob: -4.405459880828857
    3. ' import' → logprob: -4.780459880828857
    4. ' ' → logprob: -5.030459880828857
    5. 'add' → logprob: -6.030459880828857
    6. ' item' → logprob: -8.7804594039917
    7. 'import' → logprob: -9.4054594039917
    8. 'mul' → logprob: -9.7804594039917
    9. ' icon' → logprob: -9.9054594039917
    10. ' sub' → logprob: -11.2804594039917

Token 9: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1192840039730072
    2. '\' → logprob: -2.49428391456604
    3. '(
' → logprob: -4.494284152984619
    4. '\n' → logprob: -4.994284152984619
    5. '\(' → logprob: -5.869284152984619
    6. '*' → logprob: -6.244284152984619
    7. 'def' → logprob: -6.369284152984619
    8. ',' → logprob: -6.619284152984619
    9. '`' → logprob: -7.119284152984619
    10. ')' → logprob: -7.869284152984619

Token 10: 'add' (ID: 964)
  Prédit: 'add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.2768455743789673
    2. 'tr' → logprob: -2.1518454551696777
    3. ' tr' → logprob: -2.9018454551696777
    4. ' add' → logprob: -3.1518454551696777
    5. 'pow' → logprob: -4.276845455169678
    6. '```' → logprob: -4.901845455169678
    7. 'import' → logprob: -7.151845455169678
    8. 'item' → logprob: -7.151845455169678
    9. 'mul' → logprob: -7.776845455169678
    10. '   ' → logprob: -7.901845455169678

Token 11: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.7283362150192261
    2. '(' → logprob: -1.853336215019226
    3. '#' → logprob: -2.7283363342285156
    4. '\' → logprob: -2.8533363342285156
    5. 'def' → logprob: -2.9783363342285156
    6. '(
' → logprob: -3.1033363342285156
    7. ',' → logprob: -3.9783363342285156
    8. '*' → logprob: -4.103336334228516
    9. '
' → logprob: -4.103336334228516
    10. '`' → logprob: -4.478336334228516

Token 12: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8307955265045166
    2. '(
' → logprob: -1.5807955265045166
    3. '\' → logprob: -2.8307955265045166
    4. '\n' → logprob: -2.9557955265045166
    5. 'a' → logprob: -3.2057955265045166
    6. 'def' → logprob: -3.3307955265045166
    7. 'result' → logprob: -3.5807955265045166
    8. '`' → logprob: -3.5807955265045166
    9. 'x' → logprob: -3.7057955265045166
    10. '#' → logprob: -4.3307952880859375

Token 13: ' itertools' (ID: 103178)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.27028852701187134
    2. ' itertools' → logprob: -1.5202884674072266
    3. 'math' → logprob: -4.020288467407227
    4. ' random' → logprob: -9.520288467407227
    5. ' collections' → logprob: -10.145288467407227
    6. 'it' → logprob: -10.520288467407227
    7. ' numpy' → logprob: -10.645288467407227
    8. ' typing' → logprob: -11.020288467407227
    9. ' ' → logprob: -11.395288467407227
    10. ' functools' → logprob: -11.895288467407227

Token 14: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.3670337498188019
    2. ' import' → logprob: -1.3670337200164795
    3. '.' → logprob: -2.9920337200164795
    4. '.import' → logprob: -6.617033958435059
    5. ' .' → logprob: -7.867033958435059
    6. '.im' → logprob: -8.742033958435059
    7. '	import' → logprob: -8.992033958435059
    8. '_import' → logprob: -9.742033958435059
    9. 'from' → logprob: -11.492033958435059
    10. 'ertools' → logprob: -11.617033958435059

Token 15: ' is' (ID: 382)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'com' → logprob: -1.0004957914352417
    2. 'product' → logprob: -1.2504957914352417
    3. 'acc' → logprob: -1.7504957914352417
    4. 'count' → logprob: -2.6254959106445312
    5. 'per' → logprob: -3.3754959106445312
    6. 'chain' → logprob: -4.000495910644531
    7. ' product' → logprob: -4.375495910644531
    8. 'cycle' → logprob: -4.500495910644531
    9. ' accumulate' → logprob: -4.750495910644531
    10. 'group' → logprob: -5.750495910644531

Token 16: 'lice' (ID: 7321)
  Prédit: 'lice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lice' → logprob: -0.00024084746837615967
    2. 'l' → logprob: -8.62524127960205
    3. 'lic' → logprob: -10.12524127960205
    4. 'lices' → logprob: -11.75024127960205
    5. 'liced' → logprob: -12.37524127960205
    6. 'li' → logprob: -12.87524127960205
    7. 'licing' → logprob: -13.50024127960205
    8. '```' → logprob: -13.87524127960205
    9. 'land' → logprob: -14.12524127960205
    10. 'a' → logprob: -14.62524127960205

Token 17: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.16316939890384674
    2. '(
' → logprob: -2.0381693840026855
    3. 'def' → logprob: -4.0381693840026855
    4. ',' → logprob: -7.6631693840026855
    5. '#' → logprob: -8.038169860839844
    6. '\' → logprob: -8.163169860839844
    7. '(

' → logprob: -8.163169860839844
    8. 'for' → logprob: -8.538169860839844
    9. '(
' → logprob: -9.288169860839844
    10. '(\' → logprob: -9.663169860839844

Token 18: 'acc' (ID: 3717)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.6677732467651367
    2. 'cycle' → logprob: -1.4177732467651367
    3. 'acc' → logprob: -2.4177732467651367
    4. 'take' → logprob: -2.5427732467651367
    5. 'chain' → logprob: -3.5427732467651367
    6. 'tee' → logprob: -4.667773246765137
    7. 'drop' → logprob: -4.917773246765137
    8. 'per' → logprob: -5.042773246765137
    9. 'zip' → logprob: -5.417773246765137
    10. 'group' → logprob: -5.542773246765137

Token 19: 'umulate' (ID: 134636)
  Prédit: 'umulate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'umulate' → logprob: -0.010024742223322392
    2. 'um' → logprob: -4.635024547576904
    3. 'umulator' → logprob: -9.385025024414062
    4. 'umulative' → logprob: -9.635025024414062
    5. 'umul' → logprob: -10.385025024414062
    6. 'umut' → logprob: -10.510025024414062
    7. 'ount' → logprob: -10.760025024414062
    8. '```' → logprob: -11.635025024414062
    9. 'uml' → logprob: -11.760025024414062
    10. 'umal' → logprob: -12.135025024414062

Token 20: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.13295070827007294
    2. '(
' → logprob: -3.007950782775879
    3. 'def' → logprob: -3.382950782775879
    4. '\' → logprob: -4.882950782775879
    5. 'd' → logprob: -4.882950782775879
    6. '[' → logprob: -5.257950782775879
    7. '#' → logprob: -5.382950782775879
    8. ',' → logprob: -5.882950782775879
    9. '*' → logprob: -6.382950782775879
    10. 'a' → logprob: -6.507950782775879

Token 21: 'repeat' (ID: 63242)
  Prédit: 'chain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'chain' → logprob: -1.3146779537200928
    2. 'take' → logprob: -1.4396779537200928
    3. 'cycle' → logprob: -2.3146779537200928
    4. 'com' → logprob: -2.4396779537200928
    5. 'count' → logprob: -2.4396779537200928
    6. 'group' → logprob: -2.9396779537200928
    7. 'drop' → logprob: -3.1896779537200928
    8. 'st' → logprob: -3.4396779537200928
    9. 'product' → logprob: -3.5646779537200928
    10. 'filter' → logprob: -4.189678192138672

Token 22: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.09647969901561737
    2. '(
' → logprob: -2.846479654312134
    3. 'a' → logprob: -4.971479892730713
    4. '\n' → logprob: -5.346479892730713
    5. ',' → logprob: -5.471479892730713
    6. '\' → logprob: -5.721479892730713
    7. 'def' → logprob: -5.721479892730713
    8. '[' → logprob: -6.346479892730713
    9. '#' → logprob: -6.846479892730713
    10. 'n' → logprob: -6.971479892730713

Token 23: 'cycle' (ID: 24879)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -1.1234194040298462
    2. 'cycle' → logprob: -1.2484194040298462
    3. 'chain' → logprob: -1.6234194040298462
    4. 'take' → logprob: -2.6234192848205566
    5. 'com' → logprob: -3.6234192848205566
    6. 'st' → logprob: -3.9984192848205566
    7. 'product' → logprob: -4.248419284820557
    8. 'filter' → logprob: -4.748419284820557
    9. 'zip' → logprob: -4.748419284820557
    10. 'group' → logprob: -4.748419284820557

Token 24: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1846909373998642
    2. '(
' → logprob: -2.6846909523010254
    3. 'def' → logprob: -3.9346909523010254
    4. '#' → logprob: -4.059690952301025
    5. '\' → logprob: -4.309690952301025
    6. '*' → logprob: -4.809690952301025
    7. ',' → logprob: -4.934690952301025
    8. '[' → logprob: -5.059690952301025
    9. 'd' → logprob: -5.434690952301025
    10. '\n' → logprob: -5.559690952301025

Token 25: 'n' (ID: 77)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.6584237813949585
    2. '*' → logprob: -1.7834237813949585
    3. 'a' → logprob: -2.033423900604248
    4. '#' → logprob: -2.283423900604248
    5. 'd' → logprob: -2.783423900604248
    6. 'def' → logprob: -2.783423900604248
    7. 'x' → logprob: -2.908423900604248
    8. 'f' → logprob: -3.158423900604248
    9. '[' → logprob: -3.408423900604248
    10. 'n' → logprob: -3.533423900604248

Token 26: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6049145460128784
    2. '=' → logprob: -0.8549145460128784
    3. '_' → logprob: -4.104914665222168
    4. ' ' → logprob: -5.729914665222168
    5. ',' → logprob: -5.854914665222168
    6. 'u' → logprob: -6.354914665222168
    7. 't' → logprob: -6.979914665222168
    8. 'o' → logprob: -7.354914665222168
    9. 'a' → logprob: -7.479914665222168
    10. 's' → logprob: -7.854914665222168

Token 27: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.04985305666923523
    2. '10' → logprob: -3.5498530864715576
    3. '5' → logprob: -4.9248528480529785
    4. ' int' → logprob: -5.4248528480529785
    5. '100' → logprob: -5.9248528480529785
    6. '1' → logprob: -6.7998528480529785
    7. '3' → logprob: -6.9248528480529785
    8. 'int' → logprob: -7.2998528480529785
    9. '20' → logprob: -7.4248528480529785
    10. '4' → logprob: -7.5498528480529785

Token 28: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0004315036640036851
    2. '('' → logprob: -8.625431060791016
    3. '(n' → logprob: -9.375431060791016
    4. '(input' → logprob: -9.625431060791016
    5. '()' → logprob: -10.500431060791016
    6. ' (' → logprob: -10.750431060791016
    7. '<|end|>' → logprob: -11.125431060791016
    8. '(`' → logprob: -11.875431060791016
    9. '```' → logprob: -12.000431060791016
    10. ''' → logprob: -12.875431060791016

Token 29: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7493563890457153
    2. '()' → logprob: -1.1243563890457153
    3. ')' → logprob: -1.7493563890457153
    4. '())' → logprob: -3.624356269836426
    5. '('' → logprob: -7.249356269836426
    6. '))' → logprob: -7.999356269836426
    7. '(
' → logprob: -8.499356269836426
    8. '(()' → logprob: -8.624356269836426
    9. '`)' → logprob: -9.124356269836426
    10. '')' → logprob: -9.624356269836426

Token 30: 'p' (ID: 79)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.1276658773422241
    2. 'data' → logprob: -1.7526658773422241
    3. 's' → logprob: -2.1276659965515137
    4. 'result' → logprob: -2.2526659965515137
    5. 'lst' → logprob: -2.6276659965515137
    6. 'arr' → logprob: -3.1276659965515137
    7. ')' → logprob: -3.3776659965515137
    8. 'sequence' → logprob: -3.3776659965515137
    9. 'numbers' → logprob: -4.127665996551514
    10. 'x' → logprob: -4.627665996551514

Token 31: ' =' (ID: 314)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.2735574245452881
    2. '=' → logprob: -2.648557424545288
    3. ' =' → logprob: -2.773557424545288
    4. 'ow' → logprob: -3.398557424545288
    5. 'ro' → logprob: -4.523557662963867
    6. 'ol' → logprob: -4.898557662963867
    7. 'owers' → logprob: -5.023557662963867
    8. 'ower' → logprob: -5.148557662963867
    9. 'erms' → logprob: -5.398557662963867
    10. 'er' → logprob: -5.523557662963867

Token 32: ' ' (ID: 220)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.6054558157920837
    2. 'list' → logprob: -0.9804558157920837
    3. ' [' → logprob: -3.1054558753967285
    4. '[' → logprob: -4.4804558753967285
    5. '[]' → logprob: -5.7304558753967285
    6. '[int' → logprob: -5.9804558753967285
    7. '[n' → logprob: -5.9804558753967285
    8. ' []' → logprob: -6.1054558753967285
    9. 'int' → logprob: -6.4804558753967285
    10. 'range' → logprob: -6.7304558753967285

Token 33: '998' (ID: 34589)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.04527899622917175
    2. 'int' → logprob: -4.545279026031494
    3. '[int' → logprob: -5.295279026031494
    4. '[' → logprob: -5.545279026031494
    5. 'cycle' → logprob: -5.670279026031494
    6. '[n' → logprob: -5.670279026031494
    7. 'tuple' → logprob: -5.795279026031494
    8. '[]' → logprob: -5.795279026031494
    9. '1' → logprob: -6.420279026031494
    10. 'range' → logprob: -6.795279026031494

Token 34: '244' (ID: 25291)
  Prédit: '244'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '244' → logprob: -2.2200749754119897e-06
    2. '_' → logprob: -14.625001907348633
    3. '247' → logprob: -15.000001907348633
    4. '7' → logprob: -15.125001907348633
    5. '243' → logprob: -15.500001907348633
    6. '344' → logprob: -15.625001907348633
    7. ''' → logprob: -15.750001907348633
    8. '245' → logprob: -16.000001907348633
    9. '457' → logprob: -16.750001907348633
    10. ''''' → logprob: -17.000001907348633

Token 35: '353' (ID: 32996)
  Prédit: '353'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '353' → logprob: -0.0019593210890889168
    2. '853' → logprob: -6.376959323883057
    3. '```' → logprob: -10.251958847045898
    4. '753' → logprob: -10.501958847045898
    5. '253' → logprob: -10.626958847045898
    6. '257' → logprob: -10.751958847045898
    7. '433' → logprob: -11.251958847045898
    8. '333' → logprob: -11.251958847045898
    9. '953' → logprob: -11.251958847045898
    10. 'b' → logprob: -11.376958847045898

Token 36: '

' (ID: 279)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.6762291193008423
    2. ' ' → logprob: -1.8012291193008423
    3. ')' → logprob: -1.9262291193008423
    4. '*' → logprob: -2.1762290000915527
    5. '
' → logprob: -2.3012290000915527
    6. 'n' → logprob: -2.6762290000915527
    7. ' 
' → logprob: -2.9262290000915527
    8. '' → logprob: -3.8012290000915527
    9. '\n' → logprob: -3.8012290000915527
    10. 'data' → logprob: -4.426229000091553

Token 37: '#' (ID: 2)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.1930530071258545
    2. 'arr' → logprob: -2.6930530071258545
    3. 'lst' → logprob: -3.3180530071258545
    4. 'fact' → logprob: -3.5680530071258545
    5. 'data' → logprob: -4.693053245544434
    6. 'dp' → logprob: -5.193053245544434
    7. 'def' → logprob: -5.693053245544434
    8. 's' → logprob: -5.818053245544434
    9. 'f' → logprob: -5.943053245544434
    10. 'if' → logprob: -5.943053245544434

Token 38: ' Suite' (ID: 26631)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.9450679421424866
    2. 'fact' → logprob: -1.4450678825378418
    3. 'a' → logprob: -2.695067882537842
    4. 'f' → logprob: -3.195067882537842
    5. 'for' → logprob: -3.320067882537842
    6. 'arr' → logprob: -3.320067882537842
    7. 'data' → logprob: -3.445067882537842
    8. 'def' → logprob: -3.695067882537842
    9. 'fac' → logprob: -3.820067882537842
    10. 'lst' → logprob: -3.945067882537842

Token 39: ' de' (ID: 334)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22649408876895905
    2. '=' → logprob: -1.6014940738677979
    3. 's' → logprob: -8.101493835449219
    4. 'a' → logprob: -8.476493835449219
    5. '=[]' → logprob: -8.851493835449219
    6. 'n' → logprob: -9.351493835449219
    7. 'def' → logprob: -9.351493835449219
    8. '_' → logprob: -10.476493835449219
    9. '```' → logprob: -10.851493835449219
    10. '=[' → logprob: -11.226493835449219

Token 40: ' Fibonacci' (ID: 139341)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.06190246716141701
    2. 'f' → logprob: -3.5619025230407715
    3. 'fib' → logprob: -3.9369025230407715
    4. 'Catal' → logprob: -5.6869025230407715
    5. 'Fib' → logprob: -6.1869025230407715
    6. 'l' → logprob: -6.8119025230407715
    7. 'Fare' → logprob: -7.3119025230407715
    8. 'tern' → logprob: -7.5619025230407715
    9. 'Lucas' → logprob: -7.6869025230407715
    10. '```' → logprob: -7.8119025230407715

Token 41: '-like' (ID: 22085)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.6309991478919983
    2. 'def' → logprob: -1.2559990882873535
    3. ':' → logprob: -2.8809990882873535
    4. ' :' → logprob: -3.7559990882873535
    5. ' def' → logprob: -3.8809990882873535
    6. ' =' → logprob: -3.8809990882873535
    7. ' (' → logprob: -4.7559990882873535
    8. 'F' → logprob: -4.8809990882873535
    9. 's' → logprob: -4.8809990882873535
    10. 'a' → logprob: -5.3809990882873535

Token 42: ' en' (ID: 469)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.34560051560401917
    2. 'f' → logprob: -2.2206006050109863
    3. '_' → logprob: -2.4706006050109863
    4. 's' → logprob: -3.4706006050109863
    5. 'def' → logprob: -4.345600605010986
    6. 'x' → logprob: -4.720600605010986
    7. 'fib' → logprob: -4.845600605010986
    8. ' ' → logprob: -5.095600605010986
    9. ' 
' → logprob: -5.345600605010986
    10. ' a' → logprob: -5.470600605010986

Token 43: ' version' (ID: 3926)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -2.1244359016418457
    2. 'part' → logprob: -2.1244359016418457
    3. 's' → logprob: -2.3744359016418457
    4. '```' → logprob: -2.3744359016418457
    5. 'ter' → logprob: -3.4994359016418457
    6. ' ' → logprob: -3.4994359016418457
    7. 'sembl' → logprob: -3.6244359016418457
    8. 'l' → logprob: -3.6244359016418457
    9. 'c' → logprob: -3.7494359016418457
    10. 'mod' → logprob: -3.8744359016418457

Token 44: ' abstraction' (ID: 129564)
  Prédit: 'python'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'python' → logprob: -0.7121223211288452
    2. 'py' → logprob: -2.4621224403381348
    3. 'r' → logprob: -2.5871224403381348
    4. 'g' → logprob: -2.7121224403381348
    5. '```' → logprob: -2.7121224403381348
    6. 'mod' → logprob: -3.3371224403381348
    7. 'com' → logprob: -3.7121224403381348
    8. 'fonction' → logprob: -3.9621224403381348
    9. 'tail' → logprob: -4.087122440338135
    10. 'p' → logprob: -4.462122440338135

Token 45: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2107662707567215
    2. ':' → logprob: -2.335766315460205
    3. ' :' → logprob: -3.960766315460205
    4. 's' → logprob: -3.960766315460205
    5. 'f' → logprob: -3.960766315460205
    6. ' def' → logprob: -4.960766315460205
    7. 'a' → logprob: -5.335766315460205
    8. '(' → logprob: -5.460766315460205
    9. ',' → logprob: -5.710766315460205
    10. '_' → logprob: -5.960766315460205

Token 46: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2289721667766571
    2. '_' → logprob: -2.8539721965789795
    3. 'f' → logprob: -2.9789721965789795
    4. ':' → logprob: -3.4789721965789795
    5. 'a' → logprob: -3.8539721965789795
    6. 's' → logprob: -4.3539719581604
    7. ' def' → logprob: -5.1039719581604
    8. 'F' → logprob: -5.3539719581604
    9. ',' → logprob: -5.6039719581604
    10. 'd' → logprob: -5.7289719581604

Token 47: ' mysterious' (ID: 44124)
  Prédit: ' fib'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' fib' → logprob: -0.33018919825553894
    2. ' f' → logprob: -1.9551892280578613
    3. ' fibonacci' → logprob: -2.2051892280578613
    4. '_f' → logprob: -5.080189228057861
    5. ' F' → logprob: -5.205189228057861
    6. ' ' → logprob: -5.705189228057861
    7. 'f' → logprob: -5.830189228057861
    8. 'F' → logprob: -5.955189228057861
    9. '_' → logprob: -6.080189228057861
    10. ' suite' → logprob: -6.955189228057861

Token 48: '_sequence' (ID: 55606)
  Prédit: '_sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sequence' → logprob: -0.31082409620285034
    2. '_' → logprob: -2.060824155807495
    3. '_function' → logprob: -2.435824155807495
    4. '_seq' → logprob: -4.185823917388916
    5. '_f' → logprob: -4.435823917388916
    6. '(n' → logprob: -4.810823917388916
    7. '(' → logprob: -5.310823917388916
    8. '_func' → logprob: -5.560823917388916
    9. '_s' → logprob: -6.810823917388916
    10. '_fn' → logprob: -7.560823917388916

Token 49: '(length' (ID: 47037)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.5766826868057251
    2. '(' → logprob: -0.8266826868057251
    3. '(k' → logprob: -7.4516825675964355
    4. ' (' → logprob: -9.451683044433594
    5. '(i' → logprob: -10.826683044433594
    6. '(x' → logprob: -11.576683044433594
    7. '(p' → logprob: -12.076683044433594
    8. '(a' → logprob: -12.076683044433594
    9. '(s' → logprob: -12.201683044433594
    10. '(N' → logprob: -12.326683044433594

Token 50: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12811420857906342
    2. '):' → logprob: -2.1281142234802246
    3. ' ,' → logprob: -7.753114223480225
    4. ' ):' → logprob: -8.003113746643066
    5. ')' → logprob: -8.628113746643066
    6. ':' → logprob: -8.628113746643066
    7. ',n' → logprob: -10.503113746643066
    8. ' :' → logprob: -11.628113746643066
    9. '=' → logprob: -11.628113746643066
    10. ',p' → logprob: -12.753113746643066

Token 51: 'mod' (ID: 4847)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.9297676682472229
    2. ' f' → logprob: -2.179767608642578
    3. 'start' → logprob: -2.179767608642578
    4. 'func' → logprob: -2.429767608642578
    5. 'initial' → logprob: -2.929767608642578
    6. 'first' → logprob: -3.429767608642578
    7. 'seed' → logprob: -3.429767608642578
    8. ' initial' → logprob: -3.679767608642578
    9. 'a' → logprob: -3.679767608642578
    10. ' start' → logprob: -3.679767608642578

Token 52: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5403629541397095
    2. ',' → logprob: -1.0403629541397095
    3. '=' → logprob: -2.91536283493042
    4. '=None' → logprob: -5.29036283493042
    5. ',p' → logprob: -6.79036283493042
    6. ')' → logprob: -6.79036283493042
    7. ',n' → logprob: -7.91536283493042
    8. 'ulo' → logprob: -7.91536283493042
    9. ' ):' → logprob: -8.165363311767578
    10. ' ,' → logprob: -8.540363311767578

Token 53: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005035813897848129
    2. '    ' → logprob: -6.755035877227783
    3. ' return' → logprob: -6.880035877227783
    4. ' yield' → logprob: -6.880035877227783
    5. ':' → logprob: -8.255035400390625
    6. ' ' → logprob: -8.630035400390625
    7. ' pass' → logprob: -9.005035400390625
    8. '  ' → logprob: -9.005035400390625
    9. 'yield' → logprob: -9.130035400390625
    10. '    
' → logprob: -9.130035400390625

Token 54: ' def' (ID: 1056)
  Prédit: ' seq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' seq' → logprob: -1.0105878114700317
    2. '   ' → logprob: -1.7605878114700317
    3. ' a' → logprob: -1.8855878114700317
    4. ' def' → logprob: -2.635587692260742
    5. ' sequence' → logprob: -2.760587692260742
    6. ' s' → logprob: -3.135587692260742
    7. ' res' → logprob: -3.260587692260742
    8. ' yield' → logprob: -3.510587692260742
    9. ' result' → logprob: -4.510587692260742
    10. ' return' → logprob: -4.635587692260742

Token 55: ' gen' (ID: 3645)
  Prédit: ' f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' f' → logprob: -0.1383807510137558
    2. ' fib' → logprob: -3.013380765914917
    3. ' helper' → logprob: -3.763380765914917
    4. ' recur' → logprob: -4.263380527496338
    5. ' inner' → logprob: -4.388380527496338
    6. ' step' → logprob: -5.138380527496338
    7. ' func' → logprob: -5.263380527496338
    8. ' _' → logprob: -5.513380527496338
    9. ' next' → logprob: -5.638380527496338
    10. ' seq' → logprob: -6.388380527496338

Token 56: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.2771759331226349
    2. 'er' → logprob: -1.6521759033203125
    3. '():
' → logprob: -3.6521759033203125
    4. '(n' → logprob: -4.7771759033203125
    5. 'ERATOR' → logprob: -5.0271759033203125
    6. '(i' → logprob: -5.5271759033203125
    7. '(x' → logprob: -5.9021759033203125
    8. '(idx' → logprob: -7.6521759033203125
    9. '(start' → logprob: -7.7771759033203125
    10. '(index' → logprob: -7.9021759033203125

Token 57: '       ' (ID: 309)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.18768757581710815
    2. '       ' → logprob: -2.437687635421753
    3. ' a' → logprob: -2.937687635421753
    4. 'x' → logprob: -3.937687635421753
    5. '   ' → logprob: -5.687687397003174
    6. '	a' → logprob: -6.437687397003174
    7. '0' → logprob: -6.562687397003174
    8. ' x' → logprob: -6.937687397003174
    9. 'yield' → logprob: -7.062687397003174
    10. 'n' → logprob: -7.062687397003174

Token 58: ' for' (ID: 395)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.022852662950754166
    2. '   ' → logprob: -4.897852897644043
    3. 'yield' → logprob: -5.022852897644043
    4. ' a' → logprob: -5.397852897644043
    5. 'x' → logprob: -6.022852897644043
    6. ' yield' → logprob: -7.647852897644043
    7. 'f' → logprob: -8.522852897644043
    8. ' ' → logprob: -8.522852897644043
    9. '       ' → logprob: -8.897852897644043
    10. '0' → logprob: -9.147852897644043

Token 59: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.6447357535362244
    2. ' _' → logprob: -2.019735813140869
    3. '_' → logprob: -2.269735813140869
    4. ' x' → logprob: -2.394735813140869
    5. ' a' → logprob: -3.144735813140869
    6. 'i' → logprob: -3.269735813140869
    7. 'x' → logprob: -3.394735813140869
    8. 'a' → logprob: -4.394735813140869
    9. ' ' → logprob: -5.144735813140869
    10. ' n' → logprob: -5.644735813140869

Token 60: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.023630931973457336
    2. 'in' → logprob: -3.8986308574676514
    3. ',' → logprob: -6.3986310958862305
    4. 'n' → logprob: -7.3986310958862305
    5. ' ' → logprob: -7.5236310958862305
    6. 's' → logprob: -10.14863109588623
    7. '  ' → logprob: -10.58613109588623
    8. ',n' → logprob: -10.64863109588623
    9. ' ,' → logprob: -11.02363109588623
    10. 'x' → logprob: -11.58613109588623

Token 61: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.010130370035767555
    2. 'range' → logprob: -4.635130405426025
    3. ' cycle' → logprob: -9.010129928588867
    4. ' count' → logprob: -9.635129928588867
    5. '	range' → logprob: -10.135129928588867
    6. 're' → logprob: -10.635129928588867
    7. ' repeat' → logprob: -10.635129928588867
    8. 'count' → logprob: -11.010129928588867
    9. 'cycle' → logprob: -11.260129928588867
    10. 'repeat' → logprob: -11.385129928588867

Token 62: '(length' (ID: 47037)
  Prédit: '(length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(length' → logprob: -0.632754921913147
    2. '(' → logprob: -0.757754921913147
    3. 'length' → logprob: -9.382755279541016
    4. '(n' → logprob: -10.632755279541016
    5. '(len' → logprob: -11.382755279541016
    6. '(l' → logprob: -11.382755279541016
    7. ' (' → logprob: -12.132755279541016
    8. ' length' → logprob: -12.382755279541016
    9. '2' → logprob: -13.007755279541016
    10. '()' → logprob: -13.382755279541016

Token 63: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.05135420337319374
    2. '):
' → logprob: -3.051354169845581
    3. ' ):' → logprob: -6.67635440826416
    4. '+' → logprob: -7.05135440826416
    5. ')' → logprob: -8.92635440826416
    6. ':' → logprob: -9.05135440826416
    7. '   ' → logprob: -9.05135440826416
    8. '-' → logprob: -9.17635440826416
    9. ' ):
' → logprob: -9.67635440826416
    10. '):
' → logprob: -10.05135440826416

Token 64: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9603983759880066
    2. ':' → logprob: -1.3353984355926514
    3. '           ' → logprob: -1.9603984355926514
    4. '        ' → logprob: -3.0853984355926514
    5. ' yield' → logprob: -3.2103984355926514
    6. '        
' → logprob: -3.4603984355926514
    7. 'yield' → logprob: -3.5853984355926514
    8. ' :' → logprob: -4.085398197174072
    9. '<|end|>' → logprob: -4.460398197174072
    10. ',' → logprob: -4.960398197174072

Token 65: ' if' (ID: 538)
  Prédit: ' yield'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' yield' → logprob: -0.1471289098262787
    2. ' if' → logprob: -2.6471288204193115
    3. 'yield' → logprob: -2.7721288204193115
    4. 'if' (adapté à ' if') → logprob: -5.897129058837891
    5. '	yield' → logprob: -7.522129058837891
    6. '   ' → logprob: -9.77212905883789
    7. ' ' → logprob: -10.77212905883789
    8. '        ' → logprob: -10.89712905883789
    9. '    ' → logprob: -11.27212905883789
    10. '               ' → logprob: -11.52212905883789

Token 66: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0007782964967191219
    2. 'i' → logprob: -7.2507781982421875
    3. '	i' → logprob: -10.125778198242188
    4. ' ' → logprob: -11.000778198242188
    5. '  ' → logprob: -12.625778198242188
    6. '<|end|>' → logprob: -12.625778198242188
    7. '<|end|>' → logprob: -13.250778198242188
    8. ' not' → logprob: -13.750778198242188
    9. '0' → logprob: -13.875778198242188
    10. '(i' → logprob: -15.000778198242188

Token 67: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.47877591848373413
    2. '<' → logprob: -1.853775978088379
    3. ' ==' → logprob: -1.853775978088379
    4. '==' → logprob: -2.978775978088379
    5. ' ' → logprob: -4.478775978088379
    6. ' in' → logprob: -6.103775978088379
    7. ' <=' → logprob: -6.603775978088379
    8. '<=' → logprob: -7.728775978088379
    9. '<|end|>' → logprob: -8.853775978088379
    10. '0' → logprob: -8.978775978088379

Token 68: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.08912322670221329
    2. '2' → logprob: -2.464123249053955
    3. '  ' → logprob: -9.089122772216797
    4. '1' → logprob: -10.714122772216797
    5. '<|end|>' → logprob: -11.714122772216797
    6. '<|end|>' → logprob: -12.214122772216797
    7. '3' → logprob: -12.401622772216797
    8. ' ' → logprob: -12.964122772216797
    9. '   ' → logprob: -13.026622772216797
    10. 'length' → logprob: -13.214122772216797

Token 69: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.012680340558290482
    2. ' ' → logprob: -4.387680530548096
    3. '3' → logprob: -9.387680053710938
    4. '1' → logprob: -9.637680053710938
    5. '0' → logprob: -12.200180053710938
    6. '4' → logprob: -12.450180053710938
    7. '  ' → logprob: -12.637680053710938
    8. '   ' → logprob: -13.637680053710938
    9. 'len' → logprob: -14.387680053710938
    10. '=' → logprob: -14.387680053710938

Token 70: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.019058771431446075
    2. ':
' → logprob: -4.019058704376221
    3. ':return' → logprob: -7.144058704376221
    4. ':

' → logprob: -10.644059181213379
    5. ' :' → logprob: -10.644059181213379
    6. '       ' → logprob: -11.144059181213379
    7. ',' → logprob: -11.519059181213379
    8. '           ' → logprob: -11.519059181213379
    9. ':
' → logprob: -11.894059181213379
    10. '):' → logprob: -12.019059181213379

Token 71: '               ' (ID: 506)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5765675902366638
    2. '               ' → logprob: -1.0765676498413086
    3. ' yield' → logprob: -2.8265676498413086
    4. ':
' → logprob: -4.076567649841309
    5. 'yield' → logprob: -4.451567649841309
    6. '	yield' → logprob: -6.076567649841309
    7. '           ' → logprob: -6.201567649841309
    8. ':return' → logprob: -6.326567649841309
    9. ' :' → logprob: -7.326567649841309
    10. '                
' → logprob: -7.951567649841309

Token 72: ' yield' (ID: 14376)
  Prédit: 'yield'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yield' (adapté à ' yield') → logprob: -0.5789868235588074
    2. ' yield' → logprob: -0.8289868235588074
    3. '1' → logprob: -6.578986644744873
    4. '	yield' → logprob: -6.953986644744873
    5. '               ' → logprob: -7.828986644744873
    6. '0' → logprob: -8.703987121582031
    7. ' ' → logprob: -9.953987121582031
    8. 'i' → logprob: -10.578987121582031
    9. ' i' → logprob: -11.203987121582031
    10. '                   ' → logprob: -11.328987121582031

Token 73: ' i' (ID: 575)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.36333364248275757
    2. 'i' → logprob: -1.2383337020874023
    3. ' i' → logprob: -4.488333702087402
    4. ' ' → logprob: -5.738333702087402
    5. '0' → logprob: -8.488333702087402
    6. '(i' → logprob: -10.613333702087402
    7. '   ' → logprob: -10.738333702087402
    8. ' (' → logprob: -10.738333702087402
    9. '2' → logprob: -10.988333702087402
    10. '	i' → logprob: -12.175833702087402

Token 74: '
' (ID: 198)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.6571769714355469
    2. ' else' → logprob: -0.9071769714355469
    3. '           ' → logprob: -3.157176971435547
    4. '       ' → logprob: -3.532176971435547
    5. '   ' → logprob: -6.407176971435547
    6. 'elif' → logprob: -6.907176971435547
    7. '+' → logprob: -7.532176971435547
    8. '               ' → logprob: -8.032176971435547
    9. '	else' → logprob: -8.157176971435547
    10. '    ' → logprob: -8.282176971435547

Token 75: '           ' (ID: 352)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.9026893377304077
    2. 'else' → logprob: -1.1526893377304077
    3. '           ' → logprob: -1.4026893377304077
    4. '       ' → logprob: -3.9026894569396973
    5. '	else' → logprob: -6.152689456939697
    6. 'elif' → logprob: -6.152689456939697
    7. '   ' → logprob: -6.652689456939697
    8. '        ' → logprob: -6.777689456939697
    9. '    ' → logprob: -7.152689456939697
    10. ' elif' → logprob: -7.277689456939697

Token 76: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.10118138790130615
    2. 'else' (adapté à ' else') → logprob: -2.3511815071105957
    3. '           ' → logprob: -7.976181507110596
    4. ' elif' → logprob: -8.226181030273438
    5. 'elif' → logprob: -9.226181030273438
    6. ' ' → logprob: -9.351181030273438
    7. '	else' → logprob: -9.726181030273438
    8. '       ' → logprob: -9.976181030273438
    9. '   ' → logprob: -11.226181030273438
    10. '        ' → logprob: -11.476181030273438

Token 77: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8959092497825623
    2. '               ' → logprob: -0.8959092497825623
    3. ':
' → logprob: -1.770909309387207
    4. ' yield' → logprob: -5.270909309387207
    5. 'yield' → logprob: -6.145909309387207
    6. '           ' → logprob: -6.395909309387207
    7. ' :' → logprob: -6.395909309387207
    8. ' :
' → logprob: -7.145909309387207
    9. ':return' → logprob: -7.395909309387207
    10. ':

' → logprob: -8.145909309387207

Token 78: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4108160138130188
    2. ' yield' → logprob: -1.535815954208374
    3. 'yield' → logprob: -2.160815954208374
    4. '	yield' → logprob: -5.910816192626953
    5. '                ' → logprob: -6.535816192626953
    6. ' (' → logprob: -7.285816192626953
    7. ' ' → logprob: -7.785816192626953
    8. '                
' → logprob: -8.410816192626953
    9. ':' → logprob: -8.410816192626953
    10. '   ' → logprob: -8.910816192626953

Token 79: ' yield' (ID: 14376)
  Prédit: ' yield'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' yield' → logprob: -0.05619717016816139
    2. 'yield' (adapté à ' yield') → logprob: -3.556197166442871
    3. ' (' → logprob: -3.681197166442871
    4. '	yield' → logprob: -8.056197166442871
    5. '                ' → logprob: -8.181197166442871
    6. '(' → logprob: -9.181197166442871
    7. '               ' → logprob: -9.181197166442871
    8. 'y' → logprob: -10.681197166442871
    9. '```' → logprob: -11.181197166442871
    10. ' ' → logprob: -11.431197166442871

Token 80: ' (' (ID: 350)
  Prédit: '(gen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(gen' → logprob: -0.7856401801109314
    2. '(p' → logprob: -1.5356402397155762
    3. '(next' → logprob: -2.285640239715576
    4. ' (' → logprob: -2.410640239715576
    5. '(mod' → logprob: -2.910640239715576
    6. '(m' → logprob: -3.785640239715576
    7. '(acc' → logprob: -3.785640239715576
    8. '(add' → logprob: -4.535640239715576
    9. '(g' → logprob: -4.660640239715576
    10. '(sum' → logprob: -5.160640239715576

Token 81: 'seq' (ID: 27794)
  Prédit: '(next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(next' → logprob: -1.3654561042785645
    2. '(i' → logprob: -1.7404561042785645
    3. '(acc' → logprob: -1.7404561042785645
    4. '(gen' → logprob: -2.7404561042785645
    5. '(prev' → logprob: -3.1154561042785645
    6. ' (' → logprob: -3.4904561042785645
    7. '(n' → logprob: -3.6154561042785645
    8. 'yield' → logprob: -3.6154561042785645
    9. '(' → logprob: -3.7404561042785645
    10. '(mod' → logprob: -4.1154561042785645

Token 82: '[' (ID: 58)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.204290509223938
    2. '[-' → logprob: -1.704290509223938
    3. '[(' → logprob: -7.329290390014648
    4. '(i' → logprob: -7.954290390014648
    5. 'i' → logprob: -8.204290390014648
    6. 's' → logprob: -8.454290390014648
    7. '-' → logprob: -8.704290390014648
    8. '[' → logprob: -9.079290390014648
    9. ')' → logprob: -9.329290390014648
    10. '_' → logprob: -9.704290390014648

Token 83: 'mod' (ID: 4847)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.08108257502317429
    2. 'i' → logprob: -3.081082582473755
    3. '-i' → logprob: -3.456082582473755
    4. '[i' → logprob: -8.956082344055176
    5. ' -' → logprob: -9.331082344055176
    6. '(i' → logprob: -9.456082344055176
    7. '[-' → logprob: -10.081082344055176
    8. '```' → logprob: -10.331082344055176
    9. ' ' → logprob: -11.206082344055176
    10. ' i' → logprob: -11.706082344055176

Token 84: '%i' (ID: 157265)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.8306229114532471
    2. 'i' → logprob: -1.205622911453247
    3. ' -' → logprob: -1.830622911453247
    4. ' i' → logprob: -3.455622911453247
    5. ')' → logprob: -3.955622911453247
    6. ' ' → logprob: -4.080622673034668
    7. '[i' → logprob: -4.580622673034668
    8. '(i' → logprob: -4.705622673034668
    9. '-i' → logprob: -5.830622673034668
    10. ')]' → logprob: -5.955622673034668

Token 85: ']*(' (ID: 92627)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.4015178978443146
    2. '-' → logprob: -2.026517868041992
    3. ']' → logprob: -3.401517868041992
    4. 'nd' → logprob: -3.401517868041992
    5. '])' → logprob: -3.651517868041992
    6. '1' → logprob: -4.026517868041992
    7. ' ' → logprob: -4.151517868041992
    8. 'd' → logprob: -4.151517868041992
    9. 'length' → logprob: -4.401517868041992
    10. 'n' → logprob: -4.651517868041992

Token 86: 'mod' (ID: 4847)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.8377869725227356
    2. '-' → logprob: -1.8377869129180908
    3. '(i' → logprob: -1.9627869129180908
    4. 'mod' → logprob: -2.337786912918091
    5. 'seq' → logprob: -2.837786912918091
    6. '2' → logprob: -3.587786912918091
    7. '(mod' → logprob: -3.837786912918091
    8. '1' → logprob: -3.837786912918091
    9. ' (' → logprob: -4.96278715133667
    10. 'p' → logprob: -5.33778715133667

Token 87: '-int' (ID: 43853)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.05755072459578514
    2. ' -' → logprob: -3.5575506687164307
    3. '-i' → logprob: -4.68255090713501
    4. '1' → logprob: -5.18255090713501
    5. '2' → logprob: -5.18255090713501
    6. ' ' → logprob: -5.93255090713501
    7. '%i' → logprob: -7.18255090713501
    8. '+i' → logprob: -7.18255090713501
    9. '(i' → logprob: -7.30755090713501
    10. '+' → logprob: -7.43255090713501

Token 88: '(mod' (ID: 45051)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.059926316142082214
    2. '(' → logprob: -3.9349262714385986
    3. '(seq' → logprob: -4.684926509857178
    4. '((' → logprob: -5.184926509857178
    5. '(c' → logprob: -5.184926509857178
    6. '(mod' → logprob: -5.559926509857178
    7. '(length' → logprob: -5.934926509857178
    8. '(not' → logprob: -6.434926509857178
    9. '(p' → logprob: -6.559926509857178
    10. ')' → logprob: -7.309926509857178

Token 89: '//' (ID: 393)
  Prédit: '/i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '/i' → logprob: -1.6505169868469238
    2. '/' → logprob: -1.7755169868469238
    3. '**' → logprob: -2.025516986846924
    4. '(i' → logprob: -2.150516986846924
    5. 'i' → logprob: -2.400516986846924
    6. ')' → logprob: -2.900516986846924
    7. ' /' → logprob: -3.900516986846924
    8. ')**' → logprob: -4.088016986846924
    9. '%i' → logprob: -4.150516986846924
    10. '))' → logprob: -4.275516986846924

Token 90: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.12220732867717743
    2. 'p' → logprob: -3.1222074031829834
    3. '(i' → logprob: -3.6222074031829834
    4. ' (' → logprob: -4.247207164764404
    5. ' i' → logprob: -4.997207164764404
    6. '(mod' → logprob: -5.497207164764404
    7. 'seq' → logprob: -5.997207164764404
    8. '2' → logprob: -5.997207164764404
    9. '(p' → logprob: -6.122207164764404
    10. '(' → logprob: -6.122207164764404

Token 91: ')))' (ID: 15975)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.04062439128756523
    2. ')' → logprob: -4.290624618530273
    3. '2' → logprob: -5.415624618530273
    4. '))+' → logprob: -5.415624618530273
    5. ')))' → logprob: -5.540624618530273
    6. ')+' → logprob: -6.040624618530273
    7. '))-' → logprob: -6.540624618530273
    8. ')**' → logprob: -6.540624618530273
    9. '0' → logprob: -6.915624618530273
    10. ' ))' → logprob: -6.915624618530273

Token 92: '%' (ID: 4)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6830447912216187
    2. ' +' → logprob: -1.0580447912216187
    3. ' %' → logprob: -2.683044910430908
    4. '%' → logprob: -3.058044910430908
    5. ' ' → logprob: -4.433044910430908
    6. '-' → logprob: -4.558044910430908
    7. ')' → logprob: -5.683044910430908
    8. ' -' → logprob: -6.058044910430908
    9. '<|end|>' → logprob: -6.933044910430908
    10. '  ' → logprob: -7.683044910430908

Token 93: 'mod' (ID: 4847)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.07214966416358948
    2. 'mod' → logprob: -2.6971497535705566
    3. 'length' → logprob: -6.447149753570557
    4. ' mod' → logprob: -8.197149276733398
    5. 'n' → logprob: -8.572149276733398
    6. ' p' → logprob: -9.197149276733398
    7. 'i' → logprob: -11.947149276733398
    8. ' length' → logprob: -11.947149276733398
    9. '	mod' → logprob: -12.322149276733398
    10. '	p' → logprob: -12.822149276733398

Token 94: '
' (ID: 198)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.39226049184799194
    2. '+' → logprob: -1.1422605514526367
    3. ' ' → logprob: -5.767260551452637
    4. ' +
' → logprob: -7.267260551452637
    5. ')' → logprob: -7.392260551452637
    6. '<|end|>' → logprob: -7.892260551452637
    7. '+i' → logprob: -9.767260551452637
    8. ' )' → logprob: -9.767260551452637
    9. '  ' → logprob: -9.892260551452637
    10. '+
' → logprob: -10.017260551452637

Token 95: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 96: ' seq' (ID: 26775)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07724454253911972
    2. ':' → logprob: -3.702244520187378
    3. '(' → logprob: -3.952244520187378
    4. '[' → logprob: -4.327244758605957
    5. ' ' → logprob: -5.327244758605957
    6. '   ' → logprob: -6.202244758605957
    7. '.' → logprob: -6.452244758605957
    8. '\' → logprob: -6.452244758605957
    9. '\n' → logprob: -6.577244758605957
    10. ')
' → logprob: -7.202244758605957

Token 97: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03805479779839516
    2. '=' → logprob: -3.2880547046661377
    3. ',' → logprob: -12.038054466247559
    4. '[' → logprob: -13.163054466247559
    5. '=[]' → logprob: -13.913054466247559
    6. '  ' → logprob: -14.163054466247559
    7. '[:]' → logprob: -14.163054466247559
    8. ' =[' → logprob: -14.538054466247559
    9. '.' → logprob: -14.663054466247559
    10. ')' → logprob: -14.663054466247559

Token 98: ' []
' (ID: 8911)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6494513154029846
    2. '[]' → logprob: -0.8994513154029846
    3. 'list' → logprob: -3.02445125579834
    4. ' [' → logprob: -4.39945125579834
    5. '[m' → logprob: -5.52445125579834
    6. ' []' → logprob: -6.02445125579834
    7. '[list' → logprob: -6.52445125579834
    8. '[p' → logprob: -7.77445125579834
    9. 'acc' → logprob: -8.02445125579834
    10. ' list' → logprob: -8.27445125579834

Token 99: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3423807919025421
    2. ' for' → logprob: -1.5923807621002197
    3. ' ' → logprob: -3.4673807621002197
    4. 'for' → logprob: -3.8423807621002197
    5. '<|end|>' → logprob: -3.9673807621002197
    6. '    ' → logprob: -5.342381000518799
    7. ' while' → logprob: -6.342381000518799
    8. '  ' → logprob: -6.967381000518799
    9. '	for' → logprob: -7.092381000518799
    10. '(' → logprob: -7.217381000518799

Token 100: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.05672106519341469
    2. ' for' → logprob: -2.9317209720611572
    3. '   ' → logprob: -6.931721210479736
    4. 'gen' → logprob: -7.681721210479736
    5. 'def' → logprob: -8.056720733642578
    6. 'seq' → logprob: -10.306720733642578
    7. 'yield' → logprob: -10.556720733642578
    8. 'while' → logprob: -11.806720733642578
    9. ' ' → logprob: -12.306720733642578
    10. 'return' → logprob: -12.681720733642578

Token 101: ' val' (ID: 1459)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.45044389367103577
    2. 'x' → logprob: -1.2004438638687134
    3. '_' → logprob: -3.075443983078003
    4. '_i' → logprob: -5.325443744659424
    5. ' i' → logprob: -5.700443744659424
    6. 'val' → logprob: -6.200443744659424
    7. ' x' → logprob: -6.575443744659424
    8. 'v' → logprob: -6.825443744659424
    9. 'value' → logprob: -7.950443744659424
    10. 'next' → logprob: -8.200444221496582

Token 102: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0010299502173438668
    2. 'in' → logprob: -7.376029968261719
    3. 'ue' → logprob: -9.001029968261719
    4. ' ' → logprob: -9.251029968261719
    5. 'e' → logprob: -9.751029968261719
    6. ',' → logprob: -10.001029968261719
    7. 'u' → logprob: -11.501029968261719
    8. '  ' → logprob: -11.501029968261719
    9. 's' → logprob: -11.751029968261719
    10. 'ues' → logprob: -12.251029968261719

Token 103: ' gen' (ID: 3645)
  Prédit: 'gen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gen' → logprob: -0.5759593844413757
    2. ' gen' → logprob: -0.8259593844413757
    3. '	gen' → logprob: -11.325959205627441
    4. '(gen' → logprob: -11.825959205627441
    5. 'Gen' → logprob: -15.325959205627441
    6. '_gen' → logprob: -15.950959205627441
    7. 'm' → logprob: -17.075960159301758
    8. ' is' → logprob: -17.075960159301758
    9. ' ' → logprob: -17.575960159301758
    10. 'is' → logprob: -17.575960159301758

Token 104: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0012408251641318202
    2. '():
' → logprob: -6.7512407302856445
    3. ' ():' → logprob: -10.001240730285645
    4. '()' → logprob: -11.376240730285645
    5. ':' → logprob: -11.751240730285645
    6. '():
' → logprob: -12.751240730285645
    7. '):' → logprob: -13.126240730285645
    8. '(' → logprob: -14.626240730285645
    9. '(val' → logprob: -16.12624168395996
    10. ' ()' → logprob: -16.25124168395996

Token 105: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0026773218996822834
    2. '   ' → logprob: -6.5026774406433105
    3. 'seq' → logprob: -7.5026774406433105
    4. '<|end|>' → logprob: -8.002676963806152
    5. ' seq' → logprob: -8.377676963806152
    6. '<|end|>' → logprob: -11.377676963806152
    7. '+' → logprob: -11.752676963806152
    8. '	   ' → logprob: -12.252676963806152
    9. '```' → logprob: -12.252676963806152
    10. '...' → logprob: -12.752676963806152

Token 106: ' seq' (ID: 26775)
  Prédit: ' seq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' seq' → logprob: -0.011270275339484215
    2. 'seq' (adapté à ' seq') → logprob: -4.511270046234131
    3. '       ' → logprob: -9.011270523071289
    4. '   ' → logprob: -9.636270523071289
    5. ' sequ' → logprob: -11.136270523071289
    6. ' sequence' → logprob: -11.636270523071289
    7. '(seq' → logprob: -11.761270523071289
    8. '_seq' → logprob: -13.636270523071289
    9. '.seq' → logprob: -13.761270523071289
    10. ' ' → logprob: -14.511270523071289

Token 107: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.007643067743629217
    2. '.' → logprob: -4.882643222808838
    3. 'append' → logprob: -11.25764274597168
    4. ' .' → logprob: -11.63264274597168
    5. '.Append' → logprob: -12.25764274597168
    6. '.app' → logprob: -13.00764274597168
    7. '​.' → logprob: -13.25764274597168
    8. '.extend' → logprob: -13.38264274597168
    9. '.setdefault' → logprob: -13.63264274597168
    10. '_append' → logprob: -14.00764274597168

Token 108: '(val' (ID: 17391)
  Prédit: '(val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(val' → logprob: -0.00016825977945700288
    2. '(' → logprob: -8.750167846679688
    3. ' val' → logprob: -12.125167846679688
    4. 'val' → logprob: -13.000167846679688
    5. ' (' → logprob: -13.625167846679688
    6. '((' → logprob: -14.875167846679688
    7. '(
' → logprob: -15.375167846679688
    8. '[val' → logprob: -16.500167846679688
    9. ',val' → logprob: -16.500167846679688
    10. '	val' → logprob: -16.875167846679688

Token 109: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0028683508280664682
    2. ')
' → logprob: -5.877868175506592
    3. '   ' → logprob: -10.12786865234375
    4. ')return' → logprob: -11.12786865234375
    5. ')
' → logprob: -13.25286865234375
    6. ' )' → logprob: -13.37786865234375
    7. '       ' → logprob: -13.62786865234375
    8. ' ' → logprob: -14.00286865234375
    9. '	' → logprob: -14.12786865234375
    10. '))' → logprob: -14.25286865234375

Token 110: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 111: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04374605417251587
    2. ' return' → logprob: -3.543745994567871
    3. '       ' → logprob: -5.168745994567871
    4. 'return' (adapté à ' return') → logprob: -5.418745994567871
    5. ' ' → logprob: -6.418745994567871
    6. '	return' → logprob: -7.293745994567871
    7. ')' → logprob: -7.668745994567871
    8. '<|end|>' → logprob: -8.168745994567871
    9. '    ' → logprob: -8.668745994567871
    10. '	' → logprob: -9.418745994567871

Token 112: ' seq' (ID: 26775)
  Prédit: 'seq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seq' → logprob: -0.1797718107700348
    2. ' seq' → logprob: -1.8047717809677124
    3. '(seq' → logprob: -11.554771423339844
    4. '[' → logprob: -12.054771423339844
    5. 'tuple' → logprob: -12.929771423339844
    6. 'list' → logprob: -12.929771423339844
    7. ' [' → logprob: -13.304771423339844
    8. 'sequence' → logprob: -13.804771423339844
    9. ' tuple' → logprob: -13.929771423339844
    10. ' list' → logprob: -14.304771423339844

Token 113: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 114: 'l' (ID: 75)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.232340008020401
    2. '<|end|>' → logprob: -2.482340097427368
    3. ')' → logprob: -3.107340097427368
    4. ' ' → logprob: -3.232340097427368
    5. '.' → logprob: -4.232339859008789
    6. '(' → logprob: -4.232339859008789
    7. '#' → logprob: -6.482339859008789
    8. ']' → logprob: -6.482339859008789
    9. '_' → logprob: -6.607339859008789
    10. ',' → logprob: -6.732339859008789

Token 115: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8556768298149109
    2. '=' → logprob: -1.2306768894195557
    3. 'ength' → logprob: -1.6056768894195557
    4. 'en' → logprob: -2.9806768894195557
    5. 'e' → logprob: -4.480676651000977
    6. 'n' → logprob: -5.480676651000977
    7. '(' → logprob: -5.480676651000977
    8. ' ' → logprob: -6.355676651000977
    9. '=[]' → logprob: -6.355676651000977
    10. 'i' → logprob: -7.230676651000977

Token 116: ' mysterious' (ID: 44124)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.08226368576288223
    2. '[m' → logprob: -3.457263708114624
    3. ' mysterious' → logprob: -3.582263708114624
    4. 'n' → logprob: -5.332263469696045
    5. '[n' → logprob: -5.582263469696045
    6. 'list' → logprob: -5.957263469696045
    7. ' list' → logprob: -6.457263469696045
    8. ' [' → logprob: -6.582263469696045
    9. '[int' → logprob: -6.957263469696045
    10. '[' → logprob: -7.082263469696045

Token 117: '_sequence' (ID: 55606)
  Prédit: '_sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sequence' → logprob: -5.512236498361744e-07
    2. '_sequences' → logprob: -15.125000953674316
    3. 'sequence' → logprob: -15.625000953674316
    4. '_seq' → logprob: -17.625
    5. '_SEQUENCE' → logprob: -17.875
    6. '_' → logprob: -18.0
    7. 'Sequence' → logprob: -19.0
    8. '_s' → logprob: -20.375
    9. ' sequence' → logprob: -20.625
    10. '(sequence' → logprob: -20.875

Token 118: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.011267212219536304
    2. '(' → logprob: -4.511267185211182
    3. '(length' → logprob: -9.26126766204834
    4. 'n' → logprob: -9.76126766204834
    5. '(l' → logprob: -10.63626766204834
    6. '<|end|>' → logprob: -11.01126766204834
    7. '10' → logprob: -12.13626766204834
    8. '(len' → logprob: -12.63626766204834
    9. ' (' → logprob: -12.63626766204834
    10. '(int' → logprob: -13.13626766204834

Token 119: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.020122302696108818
    2. ')' → logprob: -4.520122528076172
    3. ',p' → logprob: -5.020122528076172
    4. ' ,' → logprob: -7.145122528076172
    5. ',n' → logprob: -7.145122528076172
    6. ',)' → logprob: -7.270122528076172
    7. ',l' → logprob: -9.395122528076172
    8. ' )' → logprob: -11.395122528076172
    9. ',:)' → logprob: -11.895122528076172
    10. ',m' → logprob: -12.020122528076172

Token 120: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.018283037468791008
    2. ' p' → logprob: -4.018282890319824
    3. '10' → logprob: -10.268282890319824
    4. 'n' → logprob: -10.768282890319824
    5. ' ' → logprob: -10.768282890319824
    6. '998' → logprob: -10.893282890319824
    7. '100' → logprob: -11.018282890319824
    8. ' n' → logprob: -12.393282890319824
    9. '2' → logprob: -12.768282890319824
    10. '999' → logprob: -13.018282890319824

Token 121: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2664456789934775e-06
    2. ')
' → logprob: -14.000000953674316
    3. '))' → logprob: -15.375000953674316
    4. ' )' → logprob: -15.750000953674316
    5. ')#' → logprob: -17.500001907348633
    6. '),' → logprob: -18.000001907348633
    7. ')n' → logprob: -18.000001907348633
    8. ')`' → logprob: -18.125001907348633
    9. ')

' → logprob: -18.250001907348633
    10. ')p' → logprob: -19.000001907348633

Token 122: '#' (ID: 2)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.56779545545578
    2. '<|end|>' → logprob: -1.1927955150604248
    3. ')' → logprob: -2.442795515060425
    4. ' ' → logprob: -3.817795515060425
    5. '(' → logprob: -4.317795276641846
    6. '#' → logprob: -6.817795276641846
    7. '```' → logprob: -7.067795276641846
    8. ',' → logprob: -7.067795276641846
    9. ':' → logprob: -7.192795276641846
    10. '<|end|>' → logprob: -7.192795276641846

Token 123: ' Acc' (ID: 6278)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3778587281703949
    2. '[' → logprob: -1.6278587579727173
    3. '<|end|>' → logprob: -3.1278586387634277
    4. '(' → logprob: -3.2528586387634277
    5. ')' → logprob: -4.127858638763428
    6. 'n' → logprob: -5.377858638763428
    7. '.' → logprob: -6.127858638763428
    8. '#' → logprob: -6.127858638763428
    9. 'l' → logprob: -6.377858638763428
    10. ' l' → logprob: -6.752858638763428

Token 124: 'umulate' (ID: 134636)
  Prédit: 'umulate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'umulate' → logprob: -0.0005474337958730757
    2. 'um' → logprob: -7.625547409057617
    3. '=' → logprob: -10.875547409057617
    4. 'ulate' → logprob: -11.250547409057617
    5. 'umul' → logprob: -11.250547409057617
    6. 'umu' → logprob: -12.875547409057617
    7. 'umulator' → logprob: -13.000547409057617
    8. 'umulative' → logprob: -13.250547409057617
    9. ' =' → logprob: -13.375547409057617
    10. 'om' → logprob: -13.500547409057617

Token 125: 'urs' (ID: 1628)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.131264090538025
    2. '_l' → logprob: -1.256264090538025
    3. '(l' → logprob: -1.631264090538025
    4. 's' → logprob: -2.3812642097473145
    5. '(' → logprob: -4.0062642097473145
    6. '_values' → logprob: -4.1312642097473145
    7. 'result' → logprob: -4.3812642097473145
    8. '_result' → logprob: -4.5062642097473145
    9. 'def' → logprob: -4.6312642097473145
    10. '_s' → logprob: -4.8812642097473145

Token 126: ' à' (ID: 1221)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1427345722913742
    2. ' =' → logprob: -2.5177345275878906
    3. 's' → logprob: -3.3927345275878906
    4. '_' → logprob: -4.517734527587891
    5. 'sum' → logprob: -6.142734527587891
    6. ',' → logprob: -6.767734527587891
    7. 'result' → logprob: -7.642734527587891
    8. '(' → logprob: -7.642734527587891
    9. 'a' → logprob: -7.767734527587891
    10. 'for' → logprob: -8.14273452758789

Token 127: ' l' (ID: 305)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'part' → logprob: -0.6015838980674744
    2. 'l' → logprob: -2.476583957672119
    3. 'lambda' → logprob: -2.726583957672119
    4. 'la' → logprob: -2.976583957672119
    5. 'val' → logprob: -3.851583957672119
    6. 'multip' → logprob: -3.976583957672119
    7. 'p' → logprob: -4.226583957672119
    8. 'sum' → logprob: -4.351583957672119
    9. 'import' → logprob: -4.351583957672119
    10. 'dro' → logprob: -4.476583957672119

Token 128: ''' (ID: 6)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.12041324377059937
    2. ''aide' → logprob: -3.370413303375244
    3. 'igne' → logprob: -4.745413303375244
    4. 'en' → logprob: -4.995413303375244
    5. 'continue' → logprob: -5.245413303375244
    6. 'index' → logprob: -5.370413303375244
    7. 'e' → logprob: -5.620413303375244
    8. ''' → logprob: -5.745413303375244
    9. ''aj' → logprob: -5.870413303375244
    10. 'range' → logprob: -5.870413303375244

Token 129: 'ancienne' (ID: 161355)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.9243262410163879
    2. 'indice' → logprob: -1.1743261814117432
    3. ''aide' → logprob: -2.549326181411743
    4. 'indent' → logprob: -3.299326181411743
    5. 'avance' → logprob: -3.674326181411743
    6. 'int' → logprob: -4.049326419830322
    7. 'index' → logprob: -4.049326419830322
    8. 'indices' → logprob: -4.299326419830322
    9. 'import' → logprob: -4.424326419830322
    10. 'it' → logprob: -4.424326419830322

Token 130: '
' (ID: 198)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8907004594802856
    2. 'acc' → logprob: -1.3907004594802856
    3. 'result' → logprob: -2.515700340270996
    4. 'sum' → logprob: -2.640700340270996
    5. 'res' → logprob: -3.390700340270996
    6. 'for' → logprob: -3.765700340270996
    7. ' acc' → logprob: -3.765700340270996
    8. 'c' → logprob: -4.390700340270996
    9. 'total' → logprob: -4.390700340270996
    10. 'a' → logprob: -4.515700340270996

Token 131: 'indices' (ID: 30992)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.8450102210044861
    2. 's' → logprob: -1.0950102806091309
    3. 'result' → logprob: -2.595010280609131
    4. 'res' → logprob: -2.970010280609131
    5. 'total' → logprob: -3.845010280609131
    6. 'sum' → logprob: -4.095010280609131
    7. ' acc' → logprob: -4.220010280609131
    8. 'for' → logprob: -4.470010280609131
    9. 'c' → logprob: -4.970010280609131
    10. 'a' → logprob: -5.220010280609131

Token 132: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04309282451868057
    2. '=' → logprob: -3.168092727661133
    3. ',' → logprob: -9.793092727661133
    4. ' ' → logprob: -11.293092727661133
    5. '=list' → logprob: -11.793092727661133
    6. 's' → logprob: -12.668092727661133
    7. ' ' → logprob: -12.918092727661133
    8. ')' → logprob: -13.168092727661133
    9. ' ,' → logprob: -13.293092727661133
    10. '_' → logprob: -13.668092727661133

Token 133: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.8925440907478333
    2. ' range' → logprob: -1.5175440311431885
    3. 'range' → logprob: -1.6425440311431885
    4. 'list' → logprob: -1.7675440311431885
    5. ' [' → logprob: -6.517544269561768
    6. '[' → logprob: -7.142544269561768
    7. ' is' → logprob: -7.267544269561768
    8. '(range' → logprob: -7.267544269561768
    9. 'cycle' → logprob: -7.392544269561768
    10. ' accumulate' → logprob: -7.517544269561768

Token 134: '(range' (ID: 50017)
  Prédit: '(range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.39321208000183105
    2. '(is' → logprob: -1.268212080001831
    3. '(acc' → logprob: -3.143212080001831
    4. '(' → logprob: -7.89321231842041
    5. '(map' → logprob: -8.89321231842041
    6. '(filter' → logprob: -10.14321231842041
    7. '(re' → logprob: -11.14321231842041
    8. 'range' → logprob: -11.39321231842041
    9. 'is' → logprob: -11.51821231842041
    10. 'acc' → logprob: -11.64321231842041

Token 135: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.024599716067314148
    2. '(' → logprob: -3.77459979057312
    3. '(len' → logprob: -6.649599552154541
    4. '(l' → logprob: -10.3996000289917
    5. 'n' → logprob: -11.5246000289917
    6. '1' → logprob: -12.2746000289917
    7. '(
' → logprob: -13.1496000289917
    8. '(-' → logprob: -13.3996000289917
    9. ')' → logprob: -13.6496000289917
    10. 'len' → logprob: -13.7746000289917

Token 136: ',n' (ID: 18103)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0005004895501770079
    2. '))
' → logprob: -8.625500679016113
    3. ' ))' → logprob: -8.625500679016113
    4. '+' → logprob: -9.750500679016113
    5. ')' → logprob: -10.250500679016113
    6. ')))' → logprob: -11.000500679016113
    7. ',' → logprob: -11.750500679016113
    8. '))

' → logprob: -11.750500679016113
    9. '-' → logprob: -12.500500679016113
    10. '));' → logprob: -13.000500679016113

Token 137: '//' (ID: 393)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.8654943108558655
    2. '*' → logprob: -1.4904942512512207
    3. '+' → logprob: -1.4904942512512207
    4. ' -' → logprob: -3.2404942512512207
    5. '//' → logprob: -3.4904942512512207
    6. ' +' → logprob: -3.9904942512512207
    7. '))' → logprob: -4.240494251251221
    8. ',' → logprob: -5.240494251251221
    9. ' *' → logprob: -5.615494251251221
    10. '<<' → logprob: -6.115494251251221

Token 138: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.001677198801189661
    2. '3' → logprob: -7.1266770362854
    3. ' ' → logprob: -7.8766770362854
    4. '1' → logprob: -8.001677513122559
    5. '4' → logprob: -9.876677513122559
    6. '-' → logprob: -10.001677513122559
    7. 'p' → logprob: -11.814177513122559
    8. '5' → logprob: -11.939177513122559
    9. '10' → logprob: -12.314177513122559
    10. '6' → logprob: -12.376677513122559

Token 139: ',-' (ID: 8202)
  Prédit: ',-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',-' → logprob: -0.2615746557712555
    2. ',' → logprob: -2.2615747451782227
    3. '-' → logprob: -2.2615747451782227
    4. ' -' → logprob: -4.011574745178223
    5. ' ,-' → logprob: -6.261574745178223
    6. ' ,' → logprob: -6.886574745178223
    7. '))' → logprob: -7.636574745178223
    8. '+' → logprob: -9.011574745178223
    9. ',None' → logprob: -10.761574745178223
    10. ')))' → logprob: -11.011574745178223

Token 140: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.822646693966817e-06
    2. ' ' → logprob: -12.000007629394531
    3. '2' → logprob: -13.625007629394531
    4. '-' → logprob: -16.12500762939453
    5. ' -' → logprob: -16.93750762939453
    6. '１' → logprob: -17.25000762939453
    7. '  ' → logprob: -17.37500762939453
    8. '   ' → logprob: -17.37500762939453
    9. '
' → logprob: -17.62500762939453
    10. '0' → logprob: -17.81250762939453

Token 141: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.28805673122406006
    2. ',-' → logprob: -1.53805673122406
    3. '-' → logprob: -3.4130568504333496
    4. ',' → logprob: -7.03805685043335
    5. ' -' → logprob: -7.41305685043335
    6. ')' → logprob: -7.91305685043335
    7. '))
' → logprob: -8.538056373596191
    8. ')))' → logprob: -9.038056373596191
    9. ' ))' → logprob: -9.413056373596191
    10. '))

' → logprob: -9.788056373596191

Token 142: 'aa' (ID: 3545)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1144932433962822
    2. '<|end|>' → logprob: -3.1144931316375732
    3. ' ' → logprob: -4.114493370056152
    4. '
' → logprob: -4.489493370056152
    5. 'indices' → logprob: -4.739493370056152
    6. '[' → logprob: -5.364493370056152
    7. '+' → logprob: -5.614493370056152
    8. ' )' → logprob: -5.739493370056152
    9. ']' → logprob: -5.739493370056152
    10. '  
' → logprob: -6.364493370056152

Token 143: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.037448566406965256
    2. '=' → logprob: -3.6624486446380615
    3. 'c' → logprob: -5.037448406219482
    4. '_indices' → logprob: -6.412448406219482
    5. 'a' → logprob: -7.037448406219482
    6. '_' → logprob: -8.03744888305664
    7. 's' → logprob: -8.16244888305664
    8. 'indices' → logprob: -8.28744888305664
    9. 'cc' → logprob: -8.28744888305664
    10. '_acc' → logprob: -8.91244888305664

Token 144: ' [' (ID: 723)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.9975767135620117
    2. 'acc' → logprob: -1.2475767135620117
    3. ' accumulate' → logprob: -1.6225767135620117
    4. ' list' → logprob: -2.1225767135620117
    5. 'reduce' → logprob: -4.747576713562012
    6. '[' → logprob: -4.997576713562012
    7. ' [' → logprob: -5.497576713562012
    8. '[list' → logprob: -6.372576713562012
    9. '(acc' → logprob: -6.622576713562012
    10. ' reduce' → logprob: -6.997576713562012

Token 145: 'l' (ID: 75)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.5650193691253662
    2. 'acc' → logprob: -1.9400193691253662
    3. 'add' → logprob: -2.065019369125366
    4. 'reduce' → logprob: -2.440019369125366
    5. 'indices' → logprob: -3.190019369125366
    6. '(acc' → logprob: -3.190019369125366
    7. '(' → logprob: -3.190019369125366
    8. 'p' → logprob: -3.315019369125366
    9. 'l' → logprob: -3.565019369125366
    10. '*' → logprob: -3.565019369125366

Token 146: ']*' (ID: 18579)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0050332024693489075
    2. '[' → logprob: -6.380033016204834
    3. '[:' → logprob: -6.880033016204834
    4. '[n' → logprob: -7.380033016204834
    5. '[idx' → logprob: -7.630033016204834
    6. '[index' → logprob: -8.130033493041992
    7. '[j' → logprob: -8.380033493041992
    8. 'i' → logprob: -9.005033493041992
    9. '[ind' → logprob: -9.630033493041992
    10. '.index' → logprob: -9.755033493041992

Token 147: 'len' (ID: 3303)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.1237179040908813
    2. '(n' → logprob: -1.1237179040908813
    3. 'len' → logprob: -1.6237179040908813
    4. 'n' → logprob: -2.623717784881592
    5. '(len' → logprob: -3.123717784881592
    6. '(' → logprob: -3.998717784881592
    7. '3' → logprob: -4.373717784881592
    8. '1' → logprob: -6.623717784881592
    9. ' (' → logprob: -7.123717784881592
    10. '((' → logprob: -7.123717784881592

Token 148: '(indices' (ID: 161036)
  Prédit: '(indices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(indices' → logprob: -3.292907877039397e-06
    2. '(l' → logprob: -13.62500286102295
    3. '(' → logprob: -14.00000286102295
    4. 'indices' → logprob: -14.12500286102295
    5. '(ind' → logprob: -15.12500286102295
    6. '"indices' → logprob: -16.375003814697266
    7. '(ids' → logprob: -17.125003814697266
    8. ' indices' → logprob: -17.750003814697266
    9. ' (' → logprob: -17.875003814697266
    10. '.indices' → logprob: -18.125003814697266

Token 149: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009737557265907526
    2. ' )' → logprob: -7.250973701477051
    3. ']' → logprob: -9.00097370147705
    4. '<|end|>' → logprob: -9.75097370147705
    5. ')]' → logprob: -10.25097370147705
    6. ')
' → logprob: -11.12597370147705
    7. '[' → logprob: -11.50097370147705
    8. ',' → logprob: -12.12597370147705
    9. '),' → logprob: -12.75097370147705
    10. '))' → logprob: -13.37597370147705

Token 150: 'prod' (ID: 36781)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 151: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.08531507849693298
    2. '=' → logprob: -3.210314989089966
    3. ' =' → logprob: -3.210314989089966
    4. 'uct' → logprob: -7.585315227508545
    5. '_list' → logprob: -8.585314750671387
    6. '_acc' → logprob: -9.460314750671387
    7. 'ects' → logprob: -9.835314750671387
    8. '_' → logprob: -10.085314750671387
    9. '_values' → logprob: -10.585314750671387
    10. 'uctor' → logprob: -11.085314750671387

Token 152: ' lambda' (ID: 27871)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.45897164940834045
    2. 'list' → logprob: -1.708971619606018
    3. '1' → logprob: -3.0839717388153076
    4. '[' → logprob: -3.5839717388153076
    5. ' list' → logprob: -3.7089717388153076
    6. 'acc' → logprob: -3.7089717388153076
    7. ' reduce' → logprob: -3.8339717388153076
    8. ' accumulate' → logprob: -4.2089715003967285
    9. ' ' → logprob: -4.9589715003967285
    10. 'mul' → logprob: -5.0839715003967285

Token 153: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.08853542804718018
    2. ' a' → logprob: -3.3385353088378906
    3. 'x' → logprob: -4.213535308837891
    4. ' acc' → logprob: -4.588535308837891
    5. 'a' → logprob: -4.963535308837891
    6. ' reduce' → logprob: -5.463535308837891
    7. ':' → logprob: -5.713535308837891
    8. ' lambda' → logprob: -5.838535308837891
    9. ' mul' → logprob: -6.713535308837891
    10. 'acc' → logprob: -7.088535308837891

Token 154: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.267647922039032
    2. ',y' → logprob: -1.5176479816436768
    3. ',x' → logprob: -4.392647743225098
    4. ',l' → logprob: -6.892647743225098
    5. ',a' → logprob: -7.392647743225098
    6. ',i' → logprob: -8.142647743225098
    7. ',n' → logprob: -8.267647743225098
    8. ',b' → logprob: -8.642647743225098
    9. ',k' → logprob: -8.892647743225098
    10. ' ,' → logprob: -9.017647743225098

Token 155: ' reduce' (ID: 10389)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.09031485766172409
    2. ' reduce' → logprob: -2.4653148651123047
    3. 'mul' → logprob: -6.840314865112305
    4. ' mul' → logprob: -9.215314865112305
    5. 'acc' → logprob: -9.340314865112305
    6. 'multiply' → logprob: -10.715314865112305
    7. 'x' → logprob: -11.090314865112305
    8. ' x' → logprob: -11.340314865112305
    9. ' ' → logprob: -11.465314865112305
    10. ' functools' → logprob: -11.590314865112305

Token 156: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.005334197543561459
    2. '(' → logprob: -5.255334377288818
    3. 'mul' → logprob: -9.50533390045166
    4. '(add' → logprob: -11.63033390045166
    5. '(lambda' → logprob: -12.00533390045166
    6. '(mult' → logprob: -13.13033390045166
    7. '```' → logprob: -13.50533390045166
    8. '(operator' → logprob: -13.63033390045166
    9. '(
' → logprob: -13.63033390045166
    10. '(mu' → logprob: -14.13033390045166

Token 157: 'ul' (ID: 361)
  Prédit: 'ul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ul' → logprob: -5.512236498361744e-07
    2. '<ul' → logprob: -15.500000953674316
    3. ' ul' → logprob: -15.750000953674316
    4. 'ult' → logprob: -16.375
    5. 'u' → logprob: -17.5
    6. '.ul' → logprob: -18.25
    7. ' mul' → logprob: -18.875
    8. 'ул' → logprob: -19.125
    9. '-ul' → logprob: -19.25
    10. 'mul' → logprob: -19.625

Token 158: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0699901208281517
    2. ',x' → logprob: -2.6949901580810547
    3. ' ,' → logprob: -10.444990158081055
    4. ',int' → logprob: -11.944990158081055
    5. ',[' → logprob: -12.194990158081055
    6. ')' → logprob: -13.444990158081055
    7. ',l' → logprob: -13.694990158081055
    8. ',p' → logprob: -13.694990158081055
    9. ',n' → logprob: -13.819990158081055
    10. ',
' → logprob: -14.069990158081055

Token 159: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.03364846482872963
    2. ' x' → logprob: -3.4086484909057617
    3. ')' → logprob: -13.908648490905762
    4. ')x' → logprob: -14.783648490905762
    5. '[' → logprob: -15.033648490905762
    6. ',x' → logprob: -15.158648490905762
    7. '	x' → logprob: -15.283648490905762
    8. '(x' → logprob: -15.783648490905762
    9. ',' → logprob: -15.908648490905762
    10. '<|end|>' → logprob: -16.283647537231445

Token 160: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10074464976787567
    2. ',' → logprob: -2.3507447242736816
    3. ' )' → logprob: -7.975744724273682
    4. ' ,' → logprob: -8.975744247436523
    5. ')+' → logprob: -10.975744247436523
    6. '))' → logprob: -11.475744247436523
    7. '[' → logprob: -11.850744247436523
    8. ')>' → logprob: -12.350744247436523
    9. ',)' → logprob: -12.475744247436523
    10. ',x' → logprob: -12.475744247436523

Token 161: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00016074994346126914
    2. ' ' → logprob: -8.750161170959473
    3. ')' → logprob: -14.000161170959473
    4. 'p' → logprob: -14.750161170959473
    5. '   ' → logprob: -15.000161170959473
    6. '  ' → logprob: -15.125161170959473
    7. 'int' → logprob: -15.750161170959473
    8. '    ' → logprob: -17.062660217285156
    9. '=' → logprob: -17.437660217285156
    10. '2' → logprob: -17.687660217285156

Token 162: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.756989700486884e-05
    2. ' ' → logprob: -9.37508773803711
    3. ')' → logprob: -14.12508773803711
    4. 'p' → logprob: -14.37508773803711
    5. '   ' → logprob: -14.75008773803711
    6. '  ' → logprob: -15.00008773803711
    7. 'int' → logprob: -15.50008773803711
    8. '
' → logprob: -16.25008773803711
    9. '    ' → logprob: -17.06258773803711
    10. '=' → logprob: -17.37508773803711

Token 163: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.4021237802808173e-05
    2. ' )' → logprob: -12.375014305114746
    3. ',' → logprob: -12.750014305114746
    4. ')
' → logprob: -12.875014305114746
    5. '))' → logprob: -13.625014305114746
    6. ')

' → logprob: -13.875014305114746
    7. '),' → logprob: -14.250014305114746
    8. ')}' → logprob: -15.625014305114746
    9. ')#' → logprob: -15.750014305114746
    10. '<|end|>' → logprob: -16.00001335144043

Token 164: 'def' (ID: 1314)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.1888290643692017
    2. 'acc' → logprob: -1.4388290643692017
    3. 'res' → logprob: -1.6888290643692017
    4. 's' → logprob: -2.188828945159912
    5. '<|end|>' → logprob: -3.438828945159912
    6. 'sum' → logprob: -4.063828945159912
    7. 'prod' → logprob: -4.313828945159912
    8. 'results' → logprob: -4.313828945159912
    9. 'for' → logprob: -4.438828945159912
    10. 'r' → logprob: -4.813828945159912

Token 165: ' creativity' (ID: 31153)
  Prédit: ' prod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' prod' → logprob: -1.0903598070144653
    2. ' sum' → logprob: -2.090359687805176
    3. ' accumulate' → logprob: -2.215359687805176
    4. ' f' → logprob: -3.090359687805176
    5. ' add' → logprob: -3.215359687805176
    6. ' product' → logprob: -3.465359687805176
    7. ' partial' → logprob: -3.465359687805176
    8. 'prod' → logprob: -3.465359687805176
    9. ' prefix' → logprob: -3.840359687805176
    10. ' dot' → logprob: -3.965359687805176

Token 166: '(idx' (ID: 42793)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8038443922996521
    2. '():' → logprob: -1.5538444519042969
    3. '(x' → logprob: -2.053844451904297
    4. '(n' → logprob: -2.678844451904297
    5. '(indices' → logprob: -2.803844451904297
    6. '(l' → logprob: -3.928844451904297
    7. '(a' → logprob: -4.428844451904297
    8. '(i' → logprob: -4.803844451904297
    9. '(lst' → logprob: -4.928844451904297
    10. '(index' → logprob: -5.428844451904297

Token 167: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.05589183792471886
    2. ',' → logprob: -2.930891752243042
    3. ' ,' → logprob: -8.180891990661621
    4. '):
' → logprob: -8.305891990661621
    5. ' ):' → logprob: -8.555891990661621
    6. ')' → logprob: -9.555891990661621
    7. ',n' → logprob: -9.805891990661621
    8. ':' → logprob: -10.555891990661621
    9. '   ' → logprob: -11.180891990661621
    10. ',index' → logprob: -11.180891990661621

Token 168: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1670299768447876
    2. ' return' → logprob: -1.9170299768447876
    3. ' if' → logprob: -5.542029857635498
    4. 'return' → logprob: -6.667029857635498
    5. ' a' → logprob: -8.167030334472656
    6. ' s' → logprob: -8.792030334472656
    7. ' n' → logprob: -9.042030334472656
    8. ' l' → logprob: -9.167030334472656
    9. ' ' → logprob: -9.167030334472656
    10. ' x' → logprob: -9.417030334472656

Token 169: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.30288320779800415
    2. 'return' (adapté à ' return') → logprob: -1.5528831481933594
    3. '   ' → logprob: -3.6778831481933594
    4. ' if' → logprob: -4.802883148193359
    5. ' res' → logprob: -5.052883148193359
    6. 'if' → logprob: -5.552883148193359
    7. ' result' → logprob: -6.302883148193359
    8. 'result' → logprob: -7.052883148193359
    9. ' s' → logprob: -7.177883148193359
    10. 'res' → logprob: -7.177883148193359

Token 170: ' pow' (ID: 9779)
  Prédit: '(prod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(prod' → logprob: -1.80202317237854
    2. ' (' → logprob: -1.92702317237854
    3. 'prod' → logprob: -1.92702317237854
    4. '(acc' → logprob: -2.30202317237854
    5. 'sum' → logprob: -2.55202317237854
    6. '(l' → logprob: -2.92702317237854
    7. '(sum' → logprob: -3.05202317237854
    8. ' sum' → logprob: -3.17702317237854
    9. ' prod' → logprob: -3.42702317237854
    10. 'l' → logprob: -3.55202317237854

Token 171: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.15897946059703827
    2. '(p' → logprob: -2.2839794158935547
    3. '(' → logprob: -3.1589794158935547
    4. '(indices' → logprob: -6.908979415893555
    5. '(a' → logprob: -7.408979415893555
    6. '(add' → logprob: -8.783979415893555
    7. '(n' → logprob: -8.908979415893555
    8. 'l' → logprob: -9.283979415893555
    9. '(ll' → logprob: -9.283979415893555
    10. '(prod' → logprob: -9.408979415893555

Token 172: '[' (ID: 58)
  Prédit: '[idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.0022491037379950285
    2. '[' → logprob: -6.877249240875244
    3. 'idx' → logprob: -6.877249240875244
    4. '[n' → logprob: -9.877248764038086
    5. ' idx' → logprob: -10.002248764038086
    6. ' [' → logprob: -10.752248764038086
    7. '[p' → logprob: -11.752248764038086
    8. '[l' → logprob: -12.002248764038086
    9. '(idx' → logprob: -12.127248764038086
    10. '[i' → logprob: -12.377248764038086

Token 173: '0' (ID: 15)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.004372678697109222
    2. ' idx' → logprob: -5.879372596740723
    3. '0' → logprob: -7.379372596740723
    4. 'n' → logprob: -7.879372596740723
    5. '(idx' → logprob: -9.004372596740723
    6. '[idx' → logprob: -9.129372596740723
    7. 'indices' → logprob: -9.504372596740723
    8. '-' → logprob: -9.879372596740723
    9. '1' → logprob: -10.754372596740723
    10. '   ' → logprob: -10.879372596740723

Token 174: ']+' (ID: 15344)
  Prédit: '],'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.043101731687784195
    2. '+' → logprob: -4.043101787567139
    3. ' +' → logprob: -4.543101787567139
    4. ']' → logprob: -5.418101787567139
    5. '[idx' → logprob: -5.543101787567139
    6. ' ],' → logprob: -5.793101787567139
    7. ']+' → logprob: -7.293101787567139
    8. ':],' → logprob: -7.418101787567139
    9. 'idx' → logprob: -8.29310131072998
    10. '-' → logprob: -8.54310131072998

Token 175: '1' (ID: 16)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.12882909178733826
    2. 'l' → logprob: -2.253829002380371
    3. ' idx' → logprob: -4.878829002380371
    4. '1' → logprob: -5.378829002380371
    5. 'indices' → logprob: -6.628829002380371
    6. 'sum' → logprob: -7.128829002380371
    7. 'p' → logprob: -8.128829002380371
    8. ' l' → logprob: -8.128829002380371
    9. '(idx' → logprob: -8.628829002380371
    10. 'len' → logprob: -8.753829002380371

Token 176: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.13820156455039978
    2. ' ,' → logprob: -2.1382014751434326
    3. ',n' → logprob: -4.888201713562012
    4. ',index' → logprob: -6.888201713562012
    5. ',p' → logprob: -7.513201713562012
    6. ',l' → logprob: -7.638201713562012
    7. '+' → logprob: -7.638201713562012
    8. ',len' → logprob: -8.138201713562012
    9. '[idx' → logprob: -8.138201713562012
    10. ')' → logprob: -9.013201713562012

Token 177: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.4302654266357422
    2. ' idx' → logprob: -1.5552654266357422
    3. 'indices' → logprob: -2.305265426635742
    4. ' indices' → logprob: -3.305265426635742
    5. ' n' → logprob: -7.430265426635742
    6. 'n' → logprob: -7.555265426635742
    7. 'len' → logprob: -8.055265426635742
    8. 'l' → logprob: -9.305265426635742
    9. ' ' → logprob: -9.430265426635742
    10. '(idx' → logprob: -9.805265426635742

Token 178: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.32389143109321594
    2. ')' → logprob: -1.4488914012908936
    3. ' ,' → logprob: -3.3238914012908936
    4. ' )' → logprob: -5.698891639709473
    5. ',p' → logprob: -7.073891639709473
    6. '-' → logprob: -7.948891639709473
    7. '+' → logprob: -8.073891639709473
    8. ' -' → logprob: -8.448891639709473
    9. '*' → logprob: -8.573891639709473
    10. ' +' → logprob: -9.698891639709473

Token 179: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0011742709903046489
    2. ' p' → logprob: -6.751174449920654
    3. '998' → logprob: -13.626173973083496
    4. ' ' → logprob: -14.126173973083496
    5. '   ' → logprob: -14.376173973083496
    6. '
' → logprob: -14.626173973083496
    7. ')' → logprob: -14.626173973083496
    8. '<p' → logprob: -15.751173973083496
    9. ' ' → logprob: -16.626174926757812
    10. '  ' → logprob: -16.751174926757812

Token 180: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.200166469876422e-06
    2. ')
' → logprob: -13.750004768371582
    3. ' )' → logprob: -13.875004768371582
    4. '))' → logprob: -14.250004768371582
    5. ')+' → logprob: -14.625004768371582
    6. ')#' → logprob: -15.000004768371582
    7. '),' → logprob: -15.125004768371582
    8. ')return' → logprob: -15.125004768371582
    9. ')))' → logprob: -15.500004768371582
    10. ')}' → logprob: -15.750004768371582

Token 181: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 182: ' Calcul' (ID: 57243)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.3097774088382721
    2. 'res' → logprob: -1.9347773790359497
    3. 'for' → logprob: -3.3097774982452393
    4. 's' → logprob: -4.55977725982666
    5. 'expr' → logprob: -4.55977725982666
    6. 'results' → logprob: -5.18477725982666
    7. 'cre' → logprob: -5.30977725982666
    8. 'acc' → logprob: -5.43477725982666
    9. ' res' → logprob: -5.55977725982666
    10. 'sum' → logprob: -5.55977725982666

Token 183: ' extravag' (ID: 83780)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.1294976770877838
    2. 'res' → logprob: -3.004497766494751
    3. 'results' → logprob: -3.879497766494751
    4. 'for' → logprob: -4.254497528076172
    5. 'sum' → logprob: -5.254497528076172
    6. '#' → logprob: -5.379497528076172
    7. 's' → logprob: -5.504497528076172
    8. 'total' → logprob: -5.629497528076172
    9. ')' → logprob: -6.004497528076172
    10. '(' → logprob: -6.254497528076172

Token 184: 'amment' (ID: 23443)
  Prédit: 'ant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.1483902633190155
    2. 'ate' → logprob: -2.898390293121338
    3. 'ent' → logprob: -3.273390293121338
    4. 'ante' → logprob: -4.398390293121338
    5. 'ation' → logprob: -4.648390293121338
    6. 'er' → logprob: -4.898390293121338
    7. 'é' → logprob: -5.773390293121338
    8. 'e' → logprob: -6.023390293121338
    9. 'antly' → logprob: -6.273390293121338
    10. 'ue' → logprob: -7.148390293121338

Token 185: ' écl' (ID: 106108)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.214807152748108
    2. 'for' → logprob: -1.464807152748108
    3. 'range' → logprob: -2.5898070335388184
    4. 'indices' → logprob: -3.0898070335388184
    5. 'sum' → logprob: -3.3398070335388184
    6. '...' → logprob: -3.7148070335388184
    7. 'expr' → logprob: -3.9648070335388184
    8. 'res' → logprob: -4.089807033538818
    9. 'idx' → logprob: -4.089807033538818
    10. ' for' → logprob: -4.089807033538818

Token 186: 'até' (ID: 141237)
  Prédit: 'at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.24452120065689087
    2. 'air' → logprob: -2.119521141052246
    3. 'aire' → logprob: -3.119521141052246
    4. 'até' → logprob: -3.119521141052246
    5. 'airs' → logprob: -5.619521141052246
    6. 'ar' → logprob: -7.182021141052246
    7. 'et' → logprob: -7.369521141052246
    8. 'ir' → logprob: -7.682021141052246
    9. 'aré' → logprob: -8.244521141052246
    10. 'ats' → logprob: -8.307021141052246

Token 187: '
' (ID: 198)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.2210238128900528
    2. 'res' → logprob: -1.8460237979888916
    3. 'results' → logprob: -4.721024036407471
    4. 'total' → logprob: -4.846024036407471
    5. 's' → logprob: -5.221024036407471
    6. 'sum' → logprob: -5.596024036407471
    7. 'acc' → logprob: -6.096024036407471
    8. 'for' → logprob: -6.346024036407471
    9. 'answer' → logprob: -6.596024036407471
    10. 'expr' → logprob: -6.596024036407471

Token 188: 'def' (ID: 1314)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.14484630525112152
    2. 'res' → logprob: -2.394846200942993
    3. 'results' → logprob: -4.519846439361572
    4. 'total' → logprob: -4.644846439361572
    5. 's' → logprob: -5.269846439361572
    6. 'answer' → logprob: -5.769846439361572
    7. 'acc' → logprob: -6.019846439361572
    8. 'ans' → logprob: -6.394846439361572
    9. 'prod' → logprob: -6.644846439361572
    10. 'r' → logprob: -7.144846439361572

Token 189: ' slow' (ID: 9800)
  Prédit: 'extr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'extr' → logprob: -1.6185277700424194
    2. 'compute' → logprob: -2.243527889251709
    3. ' compute' → logprob: -2.493527889251709
    4. 'f' → logprob: -2.743527889251709
    5. ' extr' → logprob: -2.743527889251709
    6. 'calculate' → logprob: -3.118527889251709
    7. ' extravag' → logprob: -3.368527889251709
    8. 'complex' → logprob: -3.743527889251709
    9. ' main' → logprob: -3.743527889251709
    10. 'sum' → logprob: -3.868527889251709

Token 190: 'motion' (ID: 64499)
  Prédit: '_compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_compute' → logprob: -1.4621479511260986
    2. '_product' → logprob: -1.8371479511260986
    3. '_sum' → logprob: -1.8371479511260986
    4. '_m' → logprob: -2.0871479511260986
    5. '_factor' → logprob: -2.5871479511260986
    6. '_com' → logprob: -2.8371479511260986
    7. '_function' → logprob: -3.0871479511260986
    8. '_cal' → logprob: -3.2121479511260986
    9. '_power' → logprob: -4.5871477127075195
    10. '(' → logprob: -4.5871477127075195

Token 191: '(indices' (ID: 161036)
  Prédit: '(idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(idx' → logprob: -0.0725838914513588
    2. '(' → logprob: -3.5725839138031006
    3. '(n' → logprob: -4.0725836753845215
    4. '(indices' → logprob: -4.4475836753845215
    5. ' (' → logprob: -5.8225836753845215
    6. '(index' → logprob: -5.8225836753845215
    7. '(i' → logprob: -5.8225836753845215
    8. '(k' → logprob: -6.9475836753845215
    9. '():' → logprob: -7.8225836753845215
    10. '_indices' → logprob: -8.57258415222168

Token 192: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.005519515369087458
    2. ',' → logprob: -5.255519390106201
    3. '):
' → logprob: -9.25551986694336
    4. ')' → logprob: -9.25551986694336
    5. ' ):' → logprob: -9.75551986694336
    6. ':' → logprob: -11.25551986694336
    7. '):
' → logprob: -12.38051986694336
    8. ' ,' → logprob: -12.75551986694336
    9. ',index' → logprob: -13.00551986694336
    10. ',list' → logprob: -13.38051986694336

Token 193: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.020460249856114388
    2. ' res' → logprob: -4.39546012878418
    3. 'result' → logprob: -5.77046012878418
    4. ' result' → logprob: -6.02046012878418
    5. 'res' → logprob: -6.64546012878418
    6. ' return' → logprob: -8.64546012878418
    7. 'acc' → logprob: -9.02046012878418
    8. 'r' → logprob: -9.39546012878418
    9. 'ret' → logprob: -9.52046012878418
    10. ' s' → logprob: -9.52046012878418

Token 194: ' state' (ID: 2608)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.360269695520401
    2. 'res' → logprob: -1.8602696657180786
    3. ' res' → logprob: -2.610269784927368
    4. ' result' → logprob: -2.985269784927368
    5. '   ' → logprob: -4.735269546508789
    6. 'results' → logprob: -5.485269546508789
    7. 'total' → logprob: -5.735269546508789
    8. ' total' → logprob: -6.485269546508789
    9. 'acc' → logprob: -6.735269546508789
    10. ' acc' → logprob: -7.235269546508789

Token 195: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20295538008213043
    2. '=' → logprob: -1.7029553651809692
    3. ',' → logprob: -6.57795524597168
    4. ' ' → logprob: -10.07795524597168
    5. '[' → logprob: -10.57795524597168
    6. ':' → logprob: -11.07795524597168
    7. '_' → logprob: -11.20295524597168
    8. ' ,' → logprob: -11.45295524597168
    9. 's' → logprob: -11.70295524597168
    10. '=[]' → logprob: -11.82795524597168

Token 196: ' (' (ID: 350)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.27306345105171204
    2. '0' → logprob: -1.7730634212493896
    3. '[]' → logprob: -3.6480634212493896
    4. ' ' → logprob: -4.273063659667969
    5. '[' → logprob: -4.523063659667969
    6. '{}' → logprob: -5.148063659667969
    7. '{' → logprob: -6.148063659667969
    8. 'l' → logprob: -6.148063659667969
    9. '[l' → logprob: -6.398063659667969
    10. '[p' → logprob: -6.648063659667969

Token 197: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.16905063390731812
    2. '0' → logprob: -2.044050693511963
    3. 'p' → logprob: -4.794050693511963
    4. '[' → logprob: -5.544050693511963
    5. ' ' → logprob: -5.669050693511963
    6. '[],' → logprob: -5.794050693511963
    7. '[])' → logprob: -6.294050693511963
    8. '(' → logprob: -7.044050693511963
    9. '[p' → logprob: -7.169050693511963
    10. ')' → logprob: -7.294050693511963

Token 198: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3190884292125702
    2. ',)' → logprob: -1.3190884590148926
    3. ',)
' → logprob: -6.319088459014893
    4. ',len' → logprob: -7.069088459014893
    5. ',n' → logprob: -7.069088459014893
    6. ',
' → logprob: -7.569088459014893
    7. ')' → logprob: -7.819088459014893
    8. ' ,' → logprob: -7.944088459014893
    9. ',p' → logprob: -8.444087982177734
    10. '0' → logprob: -8.569087982177734

Token 199: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1529954969882965
    2. '0' → logprob: -2.2779955863952637
    3. ' ' → logprob: -4.152995586395264
    4. 'p' → logprob: -4.527995586395264
    5. ')' → logprob: -5.277995586395264
    6. '[])' → logprob: -5.402995586395264
    7. ' p' → logprob: -7.027995586395264
    8. 'len' → logprob: -7.402995586395264
    9. ' [])' → logprob: -7.777995586395264
    10. 'l' → logprob: -8.527995109558105

Token 200: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04319215193390846
    2. ')
' → logprob: -3.168192148208618
    3. ' )' → logprob: -9.668191909790039
    4. ',' → logprob: -10.293191909790039
    5. ')

' → logprob: -10.418191909790039
    6. '   ' → logprob: -10.668191909790039
    7. ')
' → logprob: -10.793191909790039
    8. ' )
' → logprob: -11.543191909790039
    9. '0' → logprob: -13.043191909790039
    10. ',)' → logprob: -13.293191909790039

Token 201: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.8886023163795471
    2. '1' → logprob: -0.8886023163795471
    3. 'p' → logprob: -2.5136022567749023
    4. '[])' → logprob: -2.5136022567749023
    5. ')' → logprob: -5.513602256774902
    6. '2' → logprob: -5.638602256774902
    7. '{})' → logprob: -6.513602256774902
    8. 'l' → logprob: -6.513602256774902
    9. '[' → logprob: -7.513602256774902
    10. ' [])' → logprob: -7.763602256774902

Token 202: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.016731416806578636
    2. ')
' → logprob: -4.266731262207031
    3. ',' → logprob: -6.266731262207031
    4. ' )' → logprob: -8.391731262207031
    5. ',)' → logprob: -8.766731262207031
    6. ')

' → logprob: -9.391731262207031
    7. ')
' → logprob: -10.141731262207031
    8. ',n' → logprob: -10.266731262207031
    9. ',
' → logprob: -10.391731262207031
    10. '   ' → logprob: -11.016731262207031

Token 203: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5370587706565857
    2. '   ' → logprob: -0.9120587706565857
    3. '    
' → logprob: -5.0370588302612305
    4. '<|end|>' → logprob: -6.2870588302612305
    5. 'def' → logprob: -6.7870588302612305
    6. ')' → logprob: -7.2870588302612305
    7. ',' → logprob: -7.4120588302612305
    8. '  
' → logprob: -7.7870588302612305
    9. '	
' → logprob: -7.9120588302612305
    10. ':' → logprob: -8.03705883026123

Token 204: ' def' (ID: 1056)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4578782021999359
    2. 'for' → logprob: -1.4578782320022583
    3. '   ' → logprob: -2.7078781127929688
    4. '
' → logprob: -3.5828781127929688
    5. 'def' (adapté à ' def') → logprob: -3.9578781127929688
    6. ')' → logprob: -5.207878112792969
    7. 'result' → logprob: -5.332878112792969
    8. ',' → logprob: -6.582878112792969
    9. '    
' → logprob: -6.582878112792969
    10. ':' → logprob: -7.207878112792969

Token 205: ' step' (ID: 5983)
  Prédit: 'step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'step' → logprob: -0.4835001826286316
    2. 'inner' → logprob: -1.3585002422332764
    3. 'acc' → logprob: -3.4835002422332764
    4. 'next' → logprob: -3.9835002422332764
    5. 'helper' → logprob: -4.358500003814697
    6. 'update' → logprob: -4.483500003814697
    7. 'state' → logprob: -4.858500003814697
    8. '_step' → logprob: -4.983500003814697
    9. 'iterator' → logprob: -5.233500003814697
    10. 'f' → logprob: -5.483500003814697

Token 206: '(t' (ID: 2025)
  Prédit: '(state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(state' → logprob: -0.6541584730148315
    2. '(i' → logprob: -1.2791584730148315
    3. '(idx' → logprob: -2.654158592224121
    4. '(x' → logprob: -2.654158592224121
    5. '(acc' → logprob: -3.404158592224121
    6. '(index' → logprob: -4.529158592224121
    7. '(s' → logprob: -5.154158592224121
    8. '(k' → logprob: -6.154158592224121
    9. '(a' → logprob: -6.654158592224121
    10. '(prev' → logprob: -6.904158592224121

Token 207: 'pl' (ID: 528)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.397876113653183
    2. '):
' → logprob: -1.6478761434555054
    3. '):' → logprob: -2.272876024246216
    4. ',state' → logprob: -4.147876262664795
    5. 'ate' → logprob: -4.647876262664795
    6. ',x' → logprob: -6.022876262664795
    7. ',i' → logprob: -7.147876262664795
    8. ' ,' → logprob: -7.272876262664795
    9. 'e' → logprob: -7.272876262664795
    10. ',v' → logprob: -8.272875785827637

Token 208: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.7002840042114258
    2. '):
' → logprob: -0.8252840042114258
    3. ',' → logprob: -2.825284004211426
    4. '   ' → logprob: -6.200284004211426
    5. ',i' → logprob: -6.950284004211426
    6. ',index' → logprob: -7.075284004211426
    7. ',k' → logprob: -7.825284004211426
    8. ',n' → logprob: -7.950284004211426
    9. ',state' → logprob: -8.075284004211426
    10. ',x' → logprob: -8.200284004211426

Token 209: ' k' (ID: 372)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.9099205136299133
    2. 'idx' → logprob: -1.1599204540252686
    3. 'x' → logprob: -1.4099204540252686
    4. 'index' → logprob: -4.409920692443848
    5. ' idx' → logprob: -4.409920692443848
    6. ' i' → logprob: -6.034920692443848
    7. ' x' → logprob: -6.534920692443848
    8. 'ix' → logprob: -6.784920692443848
    9. '   ' → logprob: -6.784920692443848
    10. '_' → logprob: -6.784920692443848

Token 210: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.2814251482486725
    2. '):' → logprob: -1.40642511844635
    3. '):
' → logprob: -8.281425476074219
    4. ':' → logprob: -12.156425476074219
    5. '):

' → logprob: -12.781425476074219
    6. ' ):
' → logprob: -12.781425476074219
    7. '   ' → logprob: -12.906425476074219
    8. '=' → logprob: -13.531425476074219
    9. '):(' → logprob: -13.531425476074219
    10. ' ):' → logprob: -13.906425476074219

Token 211: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18590810894966125
    2. ' i' → logprob: -2.310908079147339
    3. ' x' → logprob: -3.435908079147339
    4. '   ' → logprob: -4.935908317565918
    5. '(i' → logprob: -4.935908317565918
    6. 'x' → logprob: -5.310908317565918
    7. ' (' → logprob: -5.435908317565918
    8. ' a' → logprob: -5.810908317565918
    9. ',' → logprob: -5.935908317565918
    10. 'i' → logprob: -6.060908317565918

Token 212: ' a' (ID: 261)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.20356377959251404
    2. 'a' (adapté à ' a') → logprob: -3.078563690185547
    3. ' i' → logprob: -3.703563690185547
    4. 's' → logprob: -3.828563690185547
    5. '   ' → logprob: -3.828563690185547
    6. '(i' → logprob: -3.953563690185547
    7. 'idx' → logprob: -4.703563690185547
    8. 'x' → logprob: -4.828563690185547
    9. 'acc' → logprob: -4.953563690185547
    10. 'prev' → logprob: -5.828563690185547

Token 213: ',b' (ID: 17568)
  Prédit: ',b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',b' → logprob: -0.5277058482170105
    2. ',' → logprob: -0.9027058482170105
    3. ',state' → logprob: -6.027705669403076
    4. ',a' → logprob: -8.402706146240234
    5. ',(' → logprob: -8.402706146240234
    6. ' =' → logprob: -8.527706146240234
    7. ' ,' → logprob: -8.652706146240234
    8. ',i' → logprob: -8.652706146240234
    9. ',c' → logprob: -8.777706146240234
    10. '0' → logprob: -8.777706146240234

Token 214: ',c' (ID: 22261)
  Prédit: ',c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',c' → logprob: -0.09152676165103912
    2. ',' → logprob: -2.841526746749878
    3. ',k' → logprob: -4.341526985168457
    4. ' =' → logprob: -4.591526985168457
    5. ',b' → logprob: -5.716526985168457
    6. '=' → logprob: -6.091526985168457
    7. ' ,' → logprob: -8.716526985168457
    8. ',a' → logprob: -9.966526985168457
    9. ',state' → logprob: -10.466526985168457
    10. ',_' → logprob: -10.841526985168457

Token 215: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931777596473694
    2. ' =' → logprob: -0.6931777596473694
    3. ',' → logprob: -11.693178176879883
    4. '=k' → logprob: -11.818178176879883
    5. '=
' → logprob: -12.318178176879883
    6. '   ' → logprob: -13.193178176879883
    7. ' =
' → logprob: -13.318178176879883
    8. ',k' → logprob: -13.318178176879883
    9. ')=' → logprob: -13.943178176879883
    10. '=(' → logprob: -14.068178176879883

Token 216: ' tpl' (ID: 138784)
  Prédit: ' tpl'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tpl' → logprob: -0.20142066478729248
    2. 'tpl' → logprob: -1.7014206647872925
    3. '_tpl' → logprob: -12.326420783996582
    4. '	t' → logprob: -13.451420783996582
    5. '.tpl' → logprob: -14.326420783996582
    6. ' t' → logprob: -14.951420783996582
    7. ' ' → logprob: -16.326419830322266
    8. 't' → logprob: -16.326419830322266
    9. 'Tpl' → logprob: -16.326419830322266
    10. ' ' → logprob: -16.576419830322266

Token 217: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5039997696876526
    2. ',' → logprob: -1.0039997100830078
    3. ',
' → logprob: -4.003999710083008
    4. ' 
' → logprob: -5.503999710083008
    5. ',b' → logprob: -6.128999710083008
    6. '  
' → logprob: -6.878999710083008
    7. ' ,' → logprob: -6.878999710083008
    8. '    
' → logprob: -7.503999710083008
    9. '<|end|>' → logprob: -7.503999710083008
    10. '
' → logprob: -7.878999710083008

Token 218: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14361454546451569
    2. ',' → logprob: -2.2686145305633545
    3. 'return' → logprob: -4.643614768981934
    4. '   ' → logprob: -4.893614768981934
    5. ' return' → logprob: -5.518614768981934
    6. '
' → logprob: -5.768614768981934
    7. '        
' → logprob: -6.518614768981934
    8. ' ,' → logprob: -6.768614768981934
    9. ',
' → logprob: -7.268614768981934
    10. ',b' → logprob: -8.143614768981934

Token 219: ' a' (ID: 261)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -1.3956513404846191
    2. ' return' → logprob: -1.6456513404846191
    3. ' if' → logprob: -2.395651340484619
    4. 'i' → logprob: -2.895651340484619
    5. 'if' → logprob: -3.020651340484619
    6. ' i' → logprob: -3.020651340484619
    7. 'a' (adapté à ' a') → logprob: -3.145651340484619
    8. ' a' → logprob: -3.645651340484619
    9. '   ' → logprob: -3.770651340484619
    10. 'd' → logprob: -3.770651340484619

Token 220: '_new' (ID: 13000)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3890456557273865
    2. ',b' → logprob: -1.1390457153320312
    3. '=' → logprob: -7.639045715332031
    4. ' ,' → logprob: -8.139045715332031
    5. 'b' → logprob: -8.264045715332031
    6. '+=' → logprob: -8.389045715332031
    7. '+' → logprob: -8.639045715332031
    8. ',a' → logprob: -8.639045715332031
    9. ',c' → logprob: -8.764045715332031
    10. ' =' → logprob: -9.014045715332031

Token 221: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6261777281761169
    2. ',b' → logprob: -1.3761777877807617
    3. '=' → logprob: -1.8761777877807617
    4. ' =' → logprob: -3.0011777877807617
    5. ',a' → logprob: -4.876177787780762
    6. ',c' → logprob: -6.501177787780762
    7. '=b' → logprob: -8.751177787780762
    8. ' ,' → logprob: -9.001177787780762
    9. '+=' → logprob: -9.251177787780762
    10. '+' → logprob: -9.251177787780762

Token 222: ' (' (ID: 350)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.2508452832698822
    2. ' (' → logprob: -2.250845193862915
    3. '(b' → logprob: -2.250845193862915
    4. '(add' → logprob: -5.250845432281494
    5. '(c' → logprob: -7.125845432281494
    6. 'a' → logprob: -7.125845432281494
    7. '(pow' → logprob: -7.250845432281494
    8. '(' → logprob: -7.250845432281494
    9. '(k' → logprob: -7.375845432281494
    10. '(acc' → logprob: -7.875845432281494

Token 223: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.014883946627378464
    2. '(a' → logprob: -4.639883995056152
    3. 'b' → logprob: -5.514883995056152
    4. ' a' → logprob: -7.264883995056152
    5. '(b' → logprob: -8.389883995056152
    6. ' (' → logprob: -10.014883995056152
    7. 'c' → logprob: -10.889883995056152
    8. ' b' → logprob: -11.139883995056152
    9. '(' → logprob: -11.264883995056152
    10. '(k' → logprob: -11.389883995056152

Token 224: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.36119866371154785
    2. '+' → logprob: -1.3611986637115479
    3. ' *' → logprob: -4.111198425292969
    4. '+b' → logprob: -4.736198425292969
    5. '+k' → logprob: -5.111198425292969
    6. '*b' → logprob: -5.236198425292969
    7. '*' → logprob: -5.486198425292969
    8. '*k' → logprob: -5.611198425292969
    9. ',' → logprob: -7.361198425292969
    10. '*a' → logprob: -7.736198425292969

Token 225: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.18510998785495758
    2. 'k' → logprob: -2.435110092163086
    3. 'l' → logprob: -3.560110092163086
    4. 'pow' → logprob: -4.310110092163086
    5. ' b' → logprob: -4.685110092163086
    6. 'c' → logprob: -5.060110092163086
    7. '(k' → logprob: -5.185110092163086
    8. 'indices' → logprob: -5.435110092163086
    9. ' k' → logprob: -6.185110092163086
    10. 'cre' → logprob: -6.560110092163086

Token 226: '*c' (ID: 83421)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.041955169290304184
    2. ' +' → logprob: -4.54195499420166
    3. ' *' → logprob: -4.79195499420166
    4. '*' → logprob: -4.91695499420166
    5. ')%' → logprob: -5.16695499420166
    6. '+' → logprob: -5.41695499420166
    7. ' )' → logprob: -5.66695499420166
    8. '*c' → logprob: -7.29195499420166
    9. '*k' → logprob: -8.29195499420166
    10. '*b' → logprob: -9.79195499420166

Token 227: ')%' (ID: 57656)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02143106237053871
    2. ')%' → logprob: -4.021430969238281
    3. ' )' → logprob: -5.771430969238281
    4. '%' → logprob: -9.771430969238281
    5. '*' → logprob: -10.771430969238281
    6. '*p' → logprob: -10.771430969238281
    7. '+' → logprob: -11.021430969238281
    8. '*k' → logprob: -11.146430969238281
    9. ' +' → logprob: -12.021430969238281
    10. '*c' → logprob: -12.521430969238281

Token 228: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0004884536610916257
    2. ' p' → logprob: -7.62548828125
    3. '
' → logprob: -16.62548828125
    4. '<p' → logprob: -16.75048828125
    5. 'n' → logprob: -16.87548828125
    6. ' ' → logprob: -17.25048828125
    7. '   ' → logprob: -17.37548828125
    8. ' ' → logprob: -18.37548828125
    9. '`' → logprob: -18.87548828125
    10. '```' → logprob: -19.00048828125

Token 229: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002394913462921977
    2. '<|end|>' → logprob: -7.252394676208496
    3. '
' → logprob: -7.377394676208496
    4. '        
' → logprob: -7.627394676208496
    5. ',' → logprob: -8.127394676208496
    6. ',
' → logprob: -9.627394676208496
    7. ' return' → logprob: -9.877394676208496
    8. 'return' → logprob: -10.252394676208496
    9. '	' → logprob: -10.252394676208496
    10. ')' → logprob: -11.127394676208496

Token 230: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018655650317668915
    2. ',' → logprob: -5.518655776977539
    3. '        
' → logprob: -5.643655776977539
    4. 'b' → logprob: -5.768655776977539
    5. '   ' → logprob: -6.393655776977539
    6. ',b' → logprob: -6.768655776977539
    7. 'return' → logprob: -6.893655776977539
    8. ' return' → logprob: -6.893655776977539
    9. '<|end|>' → logprob: -7.143655776977539
    10. '
' → logprob: -7.393655776977539

Token 231: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -0.03300843387842178
    2. '(b' → logprob: -3.783008337020874
    3. ' b' → logprob: -4.908008575439453
    4. 'c' → logprob: -6.783008575439453
    5. '(a' → logprob: -8.283008575439453
    6. ' (' → logprob: -8.283008575439453
    7. 'a' → logprob: -8.658008575439453
    8. '   ' → logprob: -8.658008575439453
    9. '       ' → logprob: -8.783008575439453
    10. 'return' → logprob: -9.658008575439453

Token 232: '_new' (ID: 13000)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7811951041221619
    2. '=' → logprob: -1.6561951637268066
    3. ',c' → logprob: -1.6561951637268066
    4. '_new' → logprob: -2.0311951637268066
    5. ' =' → logprob: -3.9061951637268066
    6. ' ,' → logprob: -5.906195163726807
    7. ',new' → logprob: -6.281195163726807
    8. 'new' → logprob: -6.531195163726807
    9. 'c' → logprob: -7.281195163726807
    10. 'New' → logprob: -7.656195163726807

Token 233: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.23881468176841736
    2. ' =' → logprob: -1.6138147115707397
    3. ',' → logprob: -4.363814830780029
    4. ',c' → logprob: -7.738814830780029
    5. ',b' → logprob: -9.488814353942871
    6. ' ,' → logprob: -9.863814353942871
    7. '   ' → logprob: -12.238814353942871
    8. '=(' → logprob: -12.488814353942871
    9. ',a' → logprob: -13.738814353942871
    10. ' =(' → logprob: -13.738814353942871

Token 234: ' (' (ID: 350)
  Prédit: '(b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.21297134459018707
    2. '(a' → logprob: -2.2129714488983154
    3. '(c' → logprob: -2.5879714488983154
    4. ' (' → logprob: -5.337971210479736
    5. 'c' → logprob: -7.962971210479736
    6. 'b' → logprob: -7.962971210479736
    7. '(k' → logprob: -8.212971687316895
    8. '(' → logprob: -8.212971687316895
    9. '((' → logprob: -8.212971687316895
    10. 'a' → logprob: -8.712971687316895

Token 235: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.1647297441959381
    2. '(b' → logprob: -2.6647298336029053
    3. 'a' → logprob: -3.4147298336029053
    4. '(a' → logprob: -3.7897298336029053
    5. 'c' → logprob: -4.039729595184326
    6. ' b' → logprob: -5.414729595184326
    7. ' (' → logprob: -6.039729595184326
    8. '(c' → logprob: -6.414729595184326
    9. ' c' → logprob: -8.539730072021484
    10. ' a' → logprob: -8.789730072021484

Token 236: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.18671107292175293
    2. '+' → logprob: -1.936711072921753
    3. ',' → logprob: -4.186711311340332
    4. ' *' → logprob: -5.811711311340332
    5. '*' → logprob: -6.186711311340332
    6. '+c' → logprob: -6.186711311340332
    7. 'c' → logprob: -6.686711311340332
    8. ' ,' → logprob: -6.936711311340332
    9. '*c' → logprob: -7.436711311340332
    10. ',c' → logprob: -7.561711311340332

Token 237: ' b' (ID: 287)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.515915036201477
    2. 'k' → logprob: -1.640915036201477
    3. 'a' → logprob: -2.5159149169921875
    4. ' c' → logprob: -2.5159149169921875
    5. ' k' → logprob: -4.0159149169921875
    6. ' a' → logprob: -4.8909149169921875
    7. 'pow' → logprob: -5.2659149169921875
    8. '(k' → logprob: -5.7659149169921875
    9. 'l' → logprob: -6.2659149169921875
    10. '1' → logprob: -6.2659149169921875

Token 238: ')%' (ID: 57656)
  Prédit: '*c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*c' → logprob: -0.6505168676376343
    2. ' *' → logprob: -1.1505168676376343
    3. '*' → logprob: -2.900516986846924
    4. ')' → logprob: -3.150516986846924
    5. ' +' → logprob: -3.400516986846924
    6. '*a' → logprob: -4.525516986846924
    7. '+' → logprob: -5.525516986846924
    8. '_new' → logprob: -5.525516986846924
    9. '*k' → logprob: -5.525516986846924
    10. ' )' → logprob: -6.275516986846924

Token 239: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0002509687910787761
    2. 'c' → logprob: -8.375250816345215
    3. 'a' → logprob: -12.125250816345215
    4. ' p' → logprob: -12.250250816345215
    5. 'k' → logprob: -12.375250816345215
    6. '1' → logprob: -13.250250816345215
    7. 'b' → logprob: -13.875250816345215
    8. '
' → logprob: -13.875250816345215
    9. '

' → logprob: -15.062750816345215
    10. ' ' → logprob: -15.312750816345215

Token 240: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3208133578300476
    2. '       ' → logprob: -1.9458134174346924
    3. '<|end|>' → logprob: -2.1958134174346924
    4. '        
' → logprob: -5.445813179016113
    5. ',' → logprob: -5.695813179016113
    6. ' 
' → logprob: -5.820813179016113
    7. ',
' → logprob: -6.195813179016113
    8. ')' → logprob: -6.320813179016113
    9. '
' → logprob: -6.570813179016113
    10. 'c' → logprob: -6.945813179016113

Token 241: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04744616895914078
    2. 'c' → logprob: -3.5474462509155273
    3. '
' → logprob: -4.672446250915527
    4. ' c' → logprob: -5.172446250915527
    5. '   ' → logprob: -6.172446250915527
    6. '        
' → logprob: -8.297446250915527
    7. ',' → logprob: -9.922446250915527
    8. '           ' → logprob: -10.047446250915527
    9. '               ' → logprob: -11.547446250915527
    10. '    
' → logprob: -11.547446250915527

Token 242: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.22598126530647278
    2. 'c' (adapté à ' c') → logprob: -1.6009812355041504
    3. '       ' → logprob: -7.72598123550415
    4. '   ' → logprob: -9.975981712341309
    5. ' (' → logprob: -10.225981712341309
    6. '(c' → logprob: -11.350981712341309
    7. '(' → logprob: -11.725981712341309
    8. ' ' → logprob: -12.225981712341309
    9. 'return' → logprob: -12.725981712341309
    10. '	c' → logprob: -12.850981712341309

Token 243: '_new' (ID: 13000)
  Prédit: '_new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_new' → logprob: -0.05501599609851837
    2. '=' → logprob: -3.055016040802002
    3. ' =' → logprob: -5.305016040802002
    4. 'new' → logprob: -6.805016040802002
    5. 'New' → logprob: -8.305015563964844
    6. '_' → logprob: -9.680015563964844
    7. ' New' → logprob: -12.180015563964844
    8. '_NEW' → logprob: -12.555015563964844
    9. '=(' → logprob: -13.180015563964844
    10. '=_' → logprob: -13.305015563964844

Token 244: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2014332264661789
    2. '=' → logprob: -1.7014331817626953
    3. ',' → logprob: -12.201433181762695
    4. ' =(' → logprob: -12.201433181762695
    5. ' ' → logprob: -12.576433181762695
    6. '=(' → logprob: -13.951433181762695
    7. ',c' → logprob: -13.951433181762695
    8. '=c' → logprob: -13.951433181762695
    9. '   ' → logprob: -14.076433181762695
    10. 'c' → logprob: -14.451433181762695

Token 245: ' (' (ID: 350)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.042283304035663605
    2. '(a' → logprob: -3.792283296585083
    3. ' (' → logprob: -4.167283535003662
    4. '(add' → logprob: -6.417283535003662
    5. '(' → logprob: -7.542283535003662
    6. '(b' → logprob: -8.042283058166504
    7. 'add' → logprob: -8.667283058166504
    8. '(pow' → logprob: -8.917283058166504
    9. '((' → logprob: -9.417283058166504
    10. '(acc' → logprob: -9.667283058166504

Token 246: 'c' (ID: 66)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.15162640810012817
    2. 'c' → logprob: -2.1516263484954834
    3. '(a' → logprob: -4.6516265869140625
    4. '(add' → logprob: -5.7766265869140625
    5. '(pow' → logprob: -6.2766265869140625
    6. 'pow' → logprob: -6.4016265869140625
    7. 'add' → logprob: -6.5266265869140625
    8. ' (' → logprob: -6.6516265869140625
    9. 'a' → logprob: -6.9016265869140625
    10. '(' → logprob: -7.0266265869140625

Token 247: ' *' (ID: 425)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -1.3132102489471436
    2. ' (' → logprob: -1.4382102489471436
    3. ' *' → logprob: -1.9382102489471436
    4. 'c' → logprob: -2.3132102489471436
    5. '*c' → logprob: -2.3132102489471436
    6. '*' → logprob: -3.1882102489471436
    7. ' +' → logprob: -3.3132102489471436
    8. '(' → logprob: -3.5632102489471436
    9. '+' → logprob: -4.313210487365723
    10. ' c' → logprob: -4.813210487365723

Token 248: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.4034137427806854
    2. 'cre' → logprob: -2.028413772583008
    3. '(k' → logprob: -2.278413772583008
    4. 'l' → logprob: -3.778413772583008
    5. ' creativity' → logprob: -3.903413772583008
    6. '(cre' → logprob: -4.528413772583008
    7. '(l' → logprob: -4.903413772583008
    8. ' k' → logprob: -5.028413772583008
    9. 'pow' → logprob: -5.153413772583008
    10. '(' → logprob: -5.903413772583008

Token 249: ' *' (ID: 425)
  Prédit: ')%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')%' → logprob: -0.0002075933152809739
    2. ')' → logprob: -8.875207901000977
    3. ' )' → logprob: -9.625207901000977
    4. '   ' → logprob: -14.750207901000977
    5. '+' → logprob: -14.875207901000977
    6. ' +' → logprob: -15.500207901000977
    7. ' ' → logprob: -15.750207901000977
    8. '%' → logprob: -16.375207901000977
    9. '+p' → logprob: -16.500207901000977
    10. '       ' → logprob: -16.750207901000977

Token 250: ' l' (ID: 305)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.963075578212738
    2. 'pow' → logprob: -1.4630756378173828
    3. 'c' → logprob: -2.588075637817383
    4. 'cre' → logprob: -2.713075637817383
    5. 'a' → logprob: -2.963075637817383
    6. 'p' → logprob: -3.088075637817383
    7. ' creativity' → logprob: -3.463075637817383
    8. 'l' → logprob: -4.088075637817383
    9. '(k' → logprob: -4.213075637817383
    10. '2' → logprob: -4.463075637817383

Token 251: '[n' (ID: 15433)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7880024909973145
    2. '[k' → logprob: -0.7880024909973145
    3. '[idx' → logprob: -3.1630024909973145
    4. '0' → logprob: -3.9130024909973145
    5. '[(' → logprob: -5.0380024909973145
    6. '[c' → logprob: -5.0380024909973145
    7. '[b' → logprob: -5.4130024909973145
    8. '[a' → logprob: -5.5380024909973145
    9. '[-' → logprob: -5.7880024909973145
    10. 'idx' → logprob: -6.9130024909973145

Token 252: '+' (ID: 10)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.15182574093341827
    2. '-k' → logprob: -2.9018256664276123
    3. '[' → logprob: -3.6518256664276123
    4. ' -' → logprob: -3.9018256664276123
    5. ']' → logprob: -4.651825904846191
    6. 'k' → logprob: -5.151825904846191
    7. '-n' → logprob: -5.276825904846191
    8. '//' → logprob: -5.401825904846191
    9. '1' → logprob: -5.776825904846191
    10. '])' → logprob: -6.401825904846191

Token 253: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.321591317653656
    2. 'k' → logprob: -1.8215913772583008
    3. '-' → logprob: -3.071591377258301
    4. '-k' → logprob: -3.196591377258301
    5. 'idx' → logprob: -4.946591377258301
    6. '-n' → logprob: -5.196591377258301
    7. 'n' → logprob: -5.696591377258301
    8. '//' → logprob: -6.196591377258301
    9. '(' → logprob: -6.821591377258301
    10. ' -' → logprob: -6.946591377258301

Token 254: '-k' (ID: 10897)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.47904810309410095
    2. '-k' → logprob: -1.2290481328964233
    3. '-n' → logprob: -3.354048013687134
    4. ']' → logprob: -4.229048252105713
    5. ' -' → logprob: -4.229048252105713
    6. '])' → logprob: -4.229048252105713
    7. 'k' → logprob: -6.604048252105713
    8. '//' → logprob: -6.854048252105713
    9. '-b' → logprob: -6.979048252105713
    10. '-c' → logprob: -7.229048252105713

Token 255: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.02437148243188858
    2. '-' → logprob: -4.02437162399292
    3. ']%' → logprob: -5.64937162399292
    4. ' ])' → logprob: -6.77437162399292
    5. ')%' → logprob: -7.64937162399292
    6. '   ' → logprob: -8.024371147155762
    7. ' -' → logprob: -8.024371147155762
    8. ']' → logprob: -8.899371147155762
    9. '%' → logprob: -10.024371147155762
    10. ' ' → logprob: -10.399371147155762

Token 256: '%' (ID: 4)
  Prédit: ')%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')%' → logprob: -0.048572152853012085
    2. '%' → logprob: -3.173572063446045
    3. ')' → logprob: -5.298572063446045
    4. ' %' → logprob: -8.423572540283203
    5. '       ' → logprob: -8.798572540283203
    6. '%c' → logprob: -9.298572540283203
    7. '%)' → logprob: -10.423572540283203
    8. ' )' → logprob: -10.673572540283203
    9. '   ' → logprob: -10.798572540283203
    10. '
' → logprob: -12.298572540283203

Token 257: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -3.583550642360933e-05
    2. ' p' → logprob: -10.250036239624023
    3. '<p' → logprob: -16.625036239624023
    4. '```' → logprob: -16.625036239624023
    5. '
' → logprob: -17.250036239624023
    6. 'n' → logprob: -17.375036239624023
    7. '   ' → logprob: -17.500036239624023
    8. ' ' → logprob: -17.750036239624023
    9. ' ' → logprob: -18.375036239624023
    10. ')' → logprob: -18.500036239624023

Token 258: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8247142434120178
    2. '<|end|>' → logprob: -0.8247142434120178
    3. '       ' → logprob: -2.324714183807373
    4. '   ' → logprob: -4.824714183807373
    5. ')
' → logprob: -5.199714183807373
    6. ' 
' → logprob: -5.699714183807373
    7. '
' → logprob: -6.199714183807373
    8. '```' → logprob: -6.449714183807373
    9. '\n' → logprob: -7.074714183807373
    10. '        
' → logprob: -7.449714183807373

Token 259: '       ' (ID: 309)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -1.2239385843276978
    2. '<|end|>' → logprob: -1.2239385843276978
    3. '
' → logprob: -1.8489385843276978
    4. '   ' → logprob: -2.848938465118408
    5. '       ' → logprob: -2.848938465118408
    6. '  
' → logprob: -3.223938465118408
    7. '    
' → logprob: -3.598938465118408
    8. '\n' → logprob: -4.098938465118408
    9. '        
' → logprob: -4.223938465118408
    10. ' ' → logprob: -4.848938465118408

Token 260: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6534813642501831
    2. ' return' → logprob: -0.9034813642501831
    3. '   ' → logprob: -2.9034814834594727
    4. 'return' (adapté à ' return') → logprob: -4.028481483459473
    5. ')' → logprob: -7.153481483459473
    6. '	return' → logprob: -8.278481483459473
    7. ' ' → logprob: -8.403481483459473
    8. ' ' → logprob: -8.903481483459473
    9. '           ' → logprob: -9.403481483459473
    10. '      ' → logprob: -9.403481483459473

Token 261: ' (' (ID: 350)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0006962312036193907
    2. ' (' → logprob: -7.500696182250977
    3. 'a' → logprob: -8.875696182250977
    4. '(' → logprob: -13.500696182250977
    5. '   ' → logprob: -13.500696182250977
    6. ' a' → logprob: -14.625696182250977
    7. ' ' → logprob: -15.000696182250977
    8. '  ' → logprob: -17.125696182250977
    9. '((' → logprob: -17.125696182250977
    10. '(
' → logprob: -17.625696182250977

Token 262: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -4.5491004129871726e-05
    2. ' a' → logprob: -10.000045776367188
    3. ')a' → logprob: -17.375045776367188
    4. '   ' → logprob: -18.375045776367188
    5. '	a' → logprob: -18.500045776367188
    6. ')' → logprob: -18.500045776367188
    7. ' ' → logprob: -18.875045776367188
    8. '(a' → logprob: -18.875045776367188
    9. 'а' → logprob: -19.625045776367188
    10. '_a' → logprob: -19.875045776367188

Token 263: '_new' (ID: 13000)
  Prédit: '_new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_new' → logprob: -8.363617962459102e-05
    2. ',' → logprob: -10.000083923339844
    3. 'new' → logprob: -11.250083923339844
    4. '_,' → logprob: -11.375083923339844
    5. 'New' → logprob: -11.625083923339844
    6. ',_' → logprob: -14.000083923339844
    7. 'a' → logprob: -14.250083923339844
    8. '_' → logprob: -14.375083923339844
    9. 'b' → logprob: -14.500083923339844
    10. '_NEW' → logprob: -14.625083923339844

Token 264: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0182088240981102
    2. ',b' → logprob: -4.018208980560303
    3. ' ,' → logprob: -9.768208503723145
    4. 'b' → logprob: -14.268208503723145
    5. ',
' → logprob: -14.268208503723145
    6. ',p' → logprob: -16.51820945739746
    7. ',d' → logprob: -17.01820945739746
    8. ',

' → logprob: -17.01820945739746
    9. ',c' → logprob: -17.26820945739746
    10. ',y' → logprob: -17.26820945739746

Token 265: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.038054682314395905
    2. ' b' → logprob: -3.2880547046661377
    3. '(b' → logprob: -11.663054466247559
    4. '   ' → logprob: -13.663054466247559
    5. ' ' → logprob: -13.913054466247559
    6. ' (' → logprob: -14.038054466247559
    7. 'a' → logprob: -14.663054466247559
    8. '(' → logprob: -14.663054466247559
    9. 'c' → logprob: -14.913054466247559
    10. ' a' → logprob: -16.038055419921875

Token 266: '_new' (ID: 13000)
  Prédit: '_new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_new' → logprob: -0.0001354824344161898
    2. ',' → logprob: -9.50013542175293
    3. ',c' → logprob: -10.75013542175293
    4. 'new' → logprob: -11.25013542175293
    5. ',_' → logprob: -11.37513542175293
    6. 'New' → logprob: -11.62513542175293
    7. '_,' → logprob: -13.37513542175293
    8. ',new' → logprob: -13.75013542175293
    9. 'c' → logprob: -14.25013542175293
    10. '+' → logprob: -14.50013542175293

Token 267: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006045639514923096
    2. ',c' → logprob: -5.131045818328857
    3. ' ,' → logprob: -9.1310453414917
    4. ')' → logprob: -12.6310453414917
    5. ',
' → logprob: -13.7560453414917
    6. '   ' → logprob: -14.1310453414917
    7. ',b' → logprob: -14.1310453414917
    8. '<|end|>' → logprob: -14.8810453414917
    9. 'c' → logprob: -15.2560453414917
    10. ',d' → logprob: -15.3810453414917

Token 268: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.38688018918037415
    2. ' c' → logprob: -1.1368801593780518
    3. ' ' → logprob: -12.386879920959473
    4. '   ' → logprob: -13.261879920959473
    5. ')c' → logprob: -14.386879920959473
    6. '       ' → logprob: -14.511879920959473
    7. '	c' → logprob: -14.761879920959473
    8. '  ' → logprob: -14.886879920959473
    9. '    ' → logprob: -15.136879920959473
    10. '(c' → logprob: -15.511879920959473

Token 269: '_new' (ID: 13000)
  Prédit: '_new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_new' → logprob: -0.0010143491672351956
    2. ')' → logprob: -7.001014232635498
    3. 'new' → logprob: -10.001014709472656
    4. 'New' → logprob: -10.626014709472656
    5. ')_' → logprob: -11.501014709472656
    6. ')new' → logprob: -11.626014709472656
    7. ',' → logprob: -12.376014709472656
    8. ',new' → logprob: -13.376014709472656
    9. '_NEW' → logprob: -13.376014709472656
    10. ')
' → logprob: -14.376014709472656

Token 270: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008808538550511003
    2. '   ' → logprob: -7.625880718231201
    3. ')
' → logprob: -8.12588119506836
    4. '<|end|>' → logprob: -9.37588119506836
    5. ')return' → logprob: -12.25088119506836
    6. ' )' → logprob: -13.25088119506836
    7. '       ' → logprob: -13.87588119506836
    8. ')#' → logprob: -13.87588119506836
    9. '<|end|>' → logprob: -14.12588119506836
    10. '}' → logprob: -14.25088119506836

Token 271: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.387751042842865
    2. '<|end|>' → logprob: -1.1377511024475098
    3. '   ' → logprob: -7.88775110244751
    4. '<|end|>' → logprob: -8.512750625610352
    5. ' )' → logprob: -9.637750625610352
    6. '
' → logprob: -10.012750625610352
    7. ')
' → logprob: -10.262750625610352
    8. ')}' → logprob: -10.762750625610352
    9. '}' → logprob: -11.012750625610352
    10. ' ' → logprob: -11.512750625610352

Token 272: ' final' (ID: 1721)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1858464479446411
    2. '   ' → logprob: -2.4358463287353516
    3. '<|end|>' → logprob: -3.3108463287353516
    4. ' ' → logprob: -3.5608463287353516
    5. ' )' → logprob: -4.560846328735352
    6. ' 
' → logprob: -6.685846328735352
    7. '    ' → logprob: -6.810846328735352
    8. '  ' → logprob: -6.935846328735352
    9. ',' → logprob: -7.185846328735352
    10. '_' → logprob: -7.560846328735352

Token 273: ' =' (ID: 314)
  Prédit: '_state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -0.08170434087514877
    2. ' =' → logprob: -2.7067043781280518
    3. '_' → logprob: -5.206704139709473
    4. '=' → logprob: -5.456704139709473
    5. 'state' → logprob: -6.831704139709473
    6. '_result' → logprob: -7.331704139709473
    7. '_value' → logprob: -9.456704139709473
    8. ' state' → logprob: -10.956704139709473
    9. '_tuple' → logprob: -10.956704139709473
    10. 't' → logprob: -11.206704139709473

Token 274: ' reduce' (ID: 10389)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.0296848826110363
    2. 'reduce' → logprob: -3.6546847820281982
    3. ' accumulate' → logprob: -5.779685020446777
    4. '   ' → logprob: -8.904685020446777
    5. ' reduce' → logprob: -9.279685020446777
    6. 'list' → logprob: -10.654685020446777
    7. ' ' → logprob: -11.279685020446777
    8. ' acc' → logprob: -12.279685020446777
    9. 'iterate' → logprob: -12.279685020446777
    10. '  ' → logprob: -12.529685020446777

Token 275: '(step' (ID: 79951)
  Prédit: '(step'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(step' → logprob: -2.7133641196996905e-05
    2. '(' → logprob: -11.50002670288086
    3. '(lambda' → logprob: -11.62502670288086
    4. ' (' → logprob: -11.87502670288086
    5. 'step' → logprob: -14.50002670288086
    6. '(
' → logprob: -15.25002670288086
    7. ' step' → logprob: -16.00002670288086
    8. '(state' → logprob: -16.12502670288086
    9. '   ' → logprob: -17.00002670288086
    10. '```' → logprob: -17.50002670288086

Token 276: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.054917603731155396
    2. ' ,' → logprob: -2.929917573928833
    3. '(indices' → logprob: -11.304917335510254
    4. '   ' → logprob: -11.554917335510254
    5. ',state' → logprob: -12.179917335510254
    6. ',
' → logprob: -13.179917335510254
    7. 'indices' → logprob: -13.429917335510254
    8. '  ' → logprob: -14.304917335510254
    9. ' ' → logprob: -14.429917335510254
    10. '```' → logprob: -14.429917335510254

Token 277: ' indices' (ID: 30378)
  Prédit: 'indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'indices' → logprob: -0.5763880014419556
    2. ' indices' → logprob: -0.8263880014419556
    3. '(indices' → logprob: -8.826388359069824
    4. ')' → logprob: -10.451388359069824
    5. ' reversed' → logprob: -10.451388359069824
    6. '.indices' → logprob: -10.701388359069824
    7. '"indices' → logprob: -10.701388359069824
    8. '   ' → logprob: -10.701388359069824
    9. ' range' → logprob: -10.951388359069824
    10. 're' → logprob: -11.076388359069824

Token 278: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0017840604996308684
    2. ' ,' → logprob: -6.876783847808838
    3. ',state' → logprob: -7.251783847808838
    4. ')' → logprob: -10.251784324645996
    5. '   ' → logprob: -12.751784324645996
    6. ' )' → logprob: -13.626784324645996
    7. ',)' → logprob: -14.126784324645996
    8. ',s' → logprob: -14.751784324645996
    9. ',l' → logprob: -15.251784324645996
    10. 'state' → logprob: -15.626784324645996

Token 279: ' state' (ID: 2608)
  Prédit: 'state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'state' → logprob: -0.28122177720069885
    2. ' state' → logprob: -1.4062217473983765
    3. '(state' → logprob: -11.031221389770508
    4. ' (' → logprob: -11.031221389770508
    5. '(' → logprob: -11.156221389770508
    6. '   ' → logprob: -11.156221389770508
    7. ' ' → logprob: -11.906221389770508
    8. '  ' → logprob: -13.406221389770508
    9. ')' → logprob: -14.031221389770508
    10. '    ' → logprob: -14.531221389770508

Token 280: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004631145857274532
    2. ')
' → logprob: -5.379631042480469
    3. ' )' → logprob: -12.254631042480469
    4. ')
' → logprob: -12.879631042480469
    5. ')

' → logprob: -13.379631042480469
    6. '   ' → logprob: -14.504631042480469
    7. ')return' → logprob: -14.754631042480469
    8. ')[' → logprob: -15.254631042480469
    9. ' )
' → logprob: -15.754631042480469
    10. ' ' → logprob: -15.754631042480469

Token 281: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07418187707662582
    2. '   ' → logprob: -3.0741817951202393
    3. '<|end|>' → logprob: -4.199182033538818
    4. '
' → logprob: -5.324182033538818
    5. ')
' → logprob: -5.824182033538818
    6. ',' → logprob: -7.324182033538818
    7. ' )' → logprob: -8.07418155670166
    8. '[' → logprob: -8.19918155670166
    9. '    
' → logprob: -8.69918155670166
    10. ' ' → logprob: -8.69918155670166

Token 282: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.5413873195648193
    2. ')' → logprob: -1.4163873195648193
    3. ' return' → logprob: -1.7913873195648193
    4. '   ' → logprob: -4.916387557983398
    5. '<|end|>' → logprob: -7.416387557983398
    6. ')return' → logprob: -8.791387557983398
    7. ')
' → logprob: -9.291387557983398
    8. 'a' → logprob: -9.416387557983398
    9. '	return' → logprob: -9.541387557983398
    10. ' ' → logprob: -9.791387557983398

Token 283: ' final' (ID: 1721)
  Prédit: 'final'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'final' → logprob: -0.0011708177626132965
    2. ' final' → logprob: -6.751170635223389
    3. '(final' → logprob: -14.251171112060547
    4. '	final' → logprob: -20.126171112060547
    5. '   ' → logprob: -20.626171112060547
    6. ' ' → logprob: -20.751171112060547
    7. '.final' → logprob: -21.126171112060547
    8. '_final' → logprob: -21.876171112060547
    9. ' ' → logprob: -22.251171112060547
    10. 'first' → logprob: -22.501171112060547

Token 284: '[' (ID: 58)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06599033623933792
    2. '<|end|>' → logprob: -2.815990447998047
    3. '[' → logprob: -6.190990447998047
    4. '_' → logprob: -7.565990447998047
    5. ']' → logprob: -8.565990447998047
    6. '
' → logprob: -8.815990447998047
    7. '}' → logprob: -8.815990447998047
    8. '#' → logprob: -8.940990447998047
    9. '<|end|>' → logprob: -8.940990447998047
    10. ',' → logprob: -9.065990447998047

Token 285: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00043126524542458355
    2. '2' → logprob: -7.875431060791016
    3. '1' → logprob: -10.250431060791016
    4. '-' → logprob: -11.875431060791016
    5. ' ' → logprob: -12.750431060791016
    6. '```' → logprob: -13.375431060791016
    7. '3' → logprob: -13.437931060791016
    8. '
' → logprob: -14.187931060791016
    9. ']' → logprob: -14.812931060791016
    10. '   ' → logprob: -15.375431060791016

Token 286: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -7.226628895296017e-06
    2. ')
' → logprob: -12.500007629394531
    3. ' )' → logprob: -12.750007629394531
    4. '}' → logprob: -16.25000762939453
    5. '))' → logprob: -16.75000762939453
    6. ')}' → logprob: -16.87500762939453
    7. '),' → logprob: -17.75000762939453
    8. ')#' → logprob: -17.75000762939453
    9. ')`' → logprob: -17.87500762939453
    10. ')

' → logprob: -17.87500762939453

Token 287: 'a' (ID: 64)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005171707598492503
    2. '<|end|>' → logprob: -8.750516891479492
    3. '[' → logprob: -9.375516891479492
    4. ']' → logprob: -9.625516891479492
    5. ',' → logprob: -10.250516891479492
    6. '#' → logprob: -10.250516891479492
    7. '+' → logprob: -10.500516891479492
    8. '_' → logprob: -10.500516891479492
    9. ':' → logprob: -11.125516891479492
    10. 'n' → logprob: -11.500516891479492

Token 288: ' =' (ID: 314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 289: ' slow' (ID: 9800)
  Prédit: 'slow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'slow' → logprob: -0.3151511549949646
    2. ' slow' → logprob: -1.3151512145996094
    3. '[' → logprob: -8.44015121459961
    4. 'acc' → logprob: -8.56515121459961
    5. 'list' → logprob: -8.56515121459961
    6. 'sl' → logprob: -8.81515121459961
    7. 'a' → logprob: -8.94015121459961
    8. ' list' → logprob: -9.06515121459961
    9. 'cycle' → logprob: -9.31515121459961
    10. 'n' → logprob: -9.31515121459961

Token 290: 'motion' (ID: 64499)
  Prédit: 'motion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'motion' → logprob: -9.088346359931165e-07
    2. '_motion' → logprob: -14.875000953674316
    3. 'moment' → logprob: -16.125
    4. 'movement' → logprob: -16.25
    5. 'm' → logprob: -16.875
    6. ' motion' → logprob: -17.0
    7. '.motion' → logprob: -17.125
    8. '-motion' → logprob: -17.125
    9. 'motions' → logprob: -17.25
    10. 'otion' → logprob: -17.375

Token 291: '(indices' (ID: 161036)
  Prédit: '(indices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(indices' → logprob: -0.12464722990989685
    2. '<|end|>' → logprob: -2.8746471405029297
    3. '(' → logprob: -2.9996471405029297
    4. 'indices' → logprob: -4.99964714050293
    5. '_indices' → logprob: -6.24964714050293
    6. '"indices' → logprob: -7.37464714050293
    7. '(l' → logprob: -8.24964714050293
    8. '(n' → logprob: -8.74964714050293
    9. ' ' → logprob: -8.99964714050293
    10. '<|end|>' → logprob: -8.99964714050293

Token 292: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.4378848391061183e-05
    2. ' )' → logprob: -12.125014305114746
    3. ')
' → logprob: -12.750014305114746
    4. '))' → logprob: -13.500014305114746
    5. ')+' → logprob: -13.750014305114746
    6. ',)' → logprob: -14.250014305114746
    7. '+' → logprob: -14.500014305114746
    8. ')#' → logprob: -14.875014305114746
    9. ')a' → logprob: -15.250014305114746
    10. '[' → logprob: -15.375014305114746

Token 293: '#' (ID: 2)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10271188616752625
    2. '[' → logprob: -2.6027119159698486
    3. ']' → logprob: -4.4777116775512695
    4. '+' → logprob: -5.9777116775512695
    5. '<|end|>' → logprob: -6.1027116775512695
    6. '#' → logprob: -6.3527116775512695
    7. ' ' → logprob: -6.4777116775512695
    8. '(' → logprob: -6.8527116775512695
    9. ':' → logprob: -6.9777116775512695
    10. 'n' → logprob: -7.7277116775512695

Token 294: ' Calcul' (ID: 57243)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4884217381477356
    2. '[' → logprob: -1.4884216785430908
    3. ' ' → logprob: -2.988421678543091
    4. '(' → logprob: -3.113421678543091
    5. ']' → logprob: -3.738421678543091
    6. 'n' → logprob: -3.863421678543091
    7. '#' → logprob: -5.11342191696167
    8. '<|end|>' → logprob: -5.86342191696167
    9. 'a' → logprob: -6.36342191696167
    10. '+' → logprob: -6.36342191696167

Token 295: ' du' (ID: 1462)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2858971953392029
    2. '=' → logprob: -2.5358972549438477
    3. 'a' → logprob: -3.6608972549438477
    4. '<|end|>' → logprob: -3.9108972549438477
    5. 'indices' → logprob: -4.410897254943848
    6. ',' → logprob: -4.535897254943848
    7. ' +=' → logprob: -4.535897254943848
    8. '_' → logprob: -4.660897254943848
    9. '(' → logprob: -4.785897254943848
    10. '#' → logprob: -4.785897254943848

Token 296: ' résultat' (ID: 62556)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.3418101072311401
    2. 'a' → logprob: -1.5918101072311401
    3. ' next' → logprob: -2.4668102264404297
    4. 'l' → logprob: -2.7168102264404297
    5. ' b' → logprob: -2.8418102264404297
    6. 'slow' → logprob: -3.4668102264404297
    7. ' slow' → logprob: -3.7168102264404297
    8. 'fast' → logprob: -3.7168102264404297
    9. 'next' → logprob: -3.8418102264404297
    10. ' a' → logprob: -3.9668102264404297

Token 297: '
' (ID: 198)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.24507153034210205
    2. 'print' → logprob: -1.620071530342102
    3. 'res' → logprob: -4.6200714111328125
    4. 'r' → logprob: -5.2450714111328125
    5. 'b' → logprob: -6.8700714111328125
    6. ' result' → logprob: -7.3700714111328125
    7. 'answer' → logprob: -7.3700714111328125
    8. 'def' → logprob: -7.6200714111328125
    9. 'a' → logprob: -8.245071411132812
    10. ' =' → logprob: -8.245071411132812

Token 298: 'def' (ID: 1314)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.05883533135056496
    2. 'print' → logprob: -3.80883526802063
    3. 'res' → logprob: -4.183835506439209
    4. 'r' → logprob: -4.808835506439209
    5. 'b' → logprob: -5.183835506439209
    6. ' result' → logprob: -5.808835506439209
    7. 'answer' → logprob: -6.558835506439209
    8. 'ans' → logprob: -7.808835506439209
    9. 'a' → logprob: -7.933835506439209
    10. 's' → logprob: -9.18383502960205

Token 299: ' exp' (ID: 2794)
  Prédit: ' result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' result' → logprob: -0.36837682127952576
    2. ' final' → logprob: -2.1183767318725586
    3. ' main' → logprob: -2.9933767318725586
    4. ' compute' → logprob: -3.3683767318725586
    5. ' fancy' → logprob: -4.118376731872559
    6. ' solve' → logprob: -4.118376731872559
    7. ' calculate' → logprob: -4.243376731872559
    8. ' solution' → logprob: -4.743376731872559
    9. 'result' → logprob: -4.868376731872559
    10. ' clever' → logprob: -5.368376731872559

Token 300: '_tw' (ID: 139926)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -1.2461479902267456
    2. 'ow' → logprob: -2.246148109436035
    3. '(pow' → logprob: -2.246148109436035
    4. 'ort' → logprob: -2.371148109436035
    5. 'on' → logprob: -2.871148109436035
    6. 'ect' → logprob: -3.121148109436035
    7. 'mod' → logprob: -3.246148109436035
    8. 'def' → logprob: -3.371148109436035
    9. 'ected' → logprob: -3.621148109436035
    10. 'onent' → logprob: -3.621148109436035

Token 301: 'ist' (ID: 421)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.01583211123943329
    2. 'ist' → logprob: -4.76583194732666
    3. 'ice' → logprob: -5.01583194732666
    4. 'op' → logprob: -8.51583194732666
    5. 'isted' → logprob: -9.89083194732666
    6. 'ot' → logprob: -10.14083194732666
    7. 'os' → logprob: -10.39083194732666
    8. 'oint' → logprob: -10.64083194732666
    9. 'p' → logprob: -11.01583194732666
    10. 'oak' → logprob: -11.26583194732666

Token 302: '(q' (ID: 21479)
  Prédit: '(idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(idx' → logprob: -0.02735082246363163
    2. '(' → logprob: -4.652350902557373
    3. '(n' → logprob: -5.152350902557373
    4. '(k' → logprob: -5.527350902557373
    5. '(index' → logprob: -5.777350902557373
    6. '(i' → logprob: -6.652350902557373
    7. '(indices' → logprob: -7.152350902557373
    8. '(length' → logprob: -7.777350902557373
    9. '(x' → logprob: -7.902350902557373
    10. ' (' → logprob: -7.902350902557373

Token 303: ',m' (ID: 26648)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2407144159078598
    2. '):
' → logprob: -2.2407143115997314
    3. 'u' → logprob: -2.6157143115997314
    4. ',' → logprob: -3.4907143115997314
    5. 'x' → logprob: -6.8657145500183105
    6. 'idx' → logprob: -7.6157145500183105
    7. 'i' → logprob: -8.240714073181152
    8. ')' → logprob: -8.615714073181152
    9. 'd' → logprob: -8.740714073181152
    10. ',u' → logprob: -8.865714073181152

Token 304: ',' (ID: 11)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.6327813267707825
    2. '):' → logprob: -0.8827813267707825
    3. ',' → logprob: -3.2577812671661377
    4. 'ex' → logprob: -5.382781505584717
    5. 'x' → logprob: -5.882781505584717
    6. 'u' → logprob: -6.257781505584717
    7. 'q' → logprob: -6.507781505584717
    8. 'od' → logprob: -6.882781505584717
    9. '):
' → logprob: -7.007781505584717
    10. ',q' → logprob: -7.257781505584717

Token 305: 'mod' (ID: 4847)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.5801124572753906
    2. 'mod' → logprob: -1.5801124572753906
    3. 'r' → logprob: -2.0801124572753906
    4. 'n' → logprob: -3.0801124572753906
    5. 'x' → logprob: -4.330112457275391
    6. 'k' → logprob: -4.455112457275391
    7. 'e' → logprob: -5.205112457275391
    8. ' mod' → logprob: -5.330112457275391
    9. 'idx' → logprob: -5.580112457275391
    10. 'b' → logprob: -5.705112457275391

Token 306: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.012858881615102291
    2. '):
' → logprob: -4.512858867645264
    3. ',' → logprob: -6.512858867645264
    4. '):
' → logprob: -8.637859344482422
    5. ')' → logprob: -9.137859344482422
    6. ',q' → logprob: -11.262859344482422
    7. ':' → logprob: -12.387859344482422
    8. '   ' → logprob: -12.387859344482422
    9. '):

' → logprob: -12.762859344482422
    10. '=' → logprob: -12.762859344482422

Token 307: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.028010258451104164
    2. 'return' → logprob: -3.903010368347168
    3. ' return' → logprob: -5.153010368347168
    4. 'def' → logprob: -6.653010368347168
    5. 'pow' → logprob: -8.528010368347168
    6. 'result' → logprob: -9.278010368347168
    7. ' if' → logprob: -11.403010368347168
    8. ' def' → logprob: -11.903010368347168
    9. '   ' → logprob: -12.028010368347168
    10. '	return' → logprob: -12.028010368347168

Token 308: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.17614206671714783
    2. 'result' → logprob: -2.1761419773101807
    3. '   ' → logprob: -3.6761419773101807
    4. 'res' → logprob: -4.67614221572876
    5. 'if' → logprob: -5.17614221572876
    6. 'pow' → logprob: -5.80114221572876
    7. ' return' → logprob: -6.17614221572876
    8. 'def' → logprob: -6.17614221572876
    9. 'r' → logprob: -8.426141738891602
    10. ' result' → logprob: -9.676141738891602

Token 309: ' pow' (ID: 9779)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.13525624573230743
    2. '(pow' → logprob: -2.135256290435791
    3. '(q' → logprob: -5.260256290435791
    4. ' pow' → logprob: -6.010256290435791
    5. '(' → logprob: -8.385255813598633
    6. ' (' → logprob: -8.760255813598633
    7. '(p' → logprob: -8.885255813598633
    8. '(m' → logprob: -10.385255813598633
    9. 'q' → logprob: -10.385255813598633
    10. '   ' → logprob: -11.385255813598633

Token 310: '(q' (ID: 21479)
  Prédit: '(q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(q' → logprob: -0.0005488642491400242
    2. '(' → logprob: -8.12554931640625
    3. 'q' → logprob: -8.87554931640625
    4. '(m' → logprob: -10.00054931640625
    5. '(a' → logprob: -10.25054931640625
    6. '((' → logprob: -11.75054931640625
    7. '(p' → logprob: -11.87554931640625
    8. '(l' → logprob: -12.12554931640625
    9. '(add' → logprob: -13.25054931640625
    10. '(
' → logprob: -13.25054931640625

Token 311: ',m' (ID: 26648)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6545291543006897
    2. ',m' → logprob: -0.7795291543006897
    3. ' ,' → logprob: -4.654529094696045
    4. '+' → logprob: -5.029529094696045
    5. '+m' → logprob: -6.404529094696045
    6. '[' → logprob: -6.779529094696045
    7. ' +' → logprob: -7.404529094696045
    8. '[m' → logprob: -7.529529094696045
    9. 'm' → logprob: -7.529529094696045
    10. '   ' → logprob: -8.029529571533203

Token 312: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.021836107596755028
    2. ',p' → logprob: -4.521836280822754
    3. ' ,' → logprob: -4.646836280822754
    4. '%' → logprob: -7.271836280822754
    5. ' %' → logprob: -7.896836280822754
    6. ',q' → logprob: -11.021836280822754
    7. ')' → logprob: -11.396836280822754
    8. 'p' → logprob: -11.896836280822754
    9. '-' → logprob: -12.146836280822754
    10. ' -' → logprob: -12.271836280822754

Token 313: 'mod' (ID: 4847)
  Prédit: 'mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.004788122605532408
    2. ' mod' → logprob: -5.379787921905518
    3. 'p' → logprob: -8.754788398742676
    4. ' p' → logprob: -11.879788398742676
    5. ')' → logprob: -13.629788398742676
    6. ' ' → logprob: -14.379788398742676
    7. '   ' → logprob: -14.754788398742676
    8. '	mod' → logprob: -14.879788398742676
    9. '(mod' → logprob: -15.504788398742676
    10. '  ' → logprob: -16.25478744506836

Token 314: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -8.061054359131958e-06
    2. ')
' → logprob: -12.625007629394531
    3. ' )' → logprob: -13.875007629394531
    4. ')+' → logprob: -14.000007629394531
    5. ')return' → logprob: -14.125007629394531
    6. ')p' → logprob: -14.500007629394531
    7. ')#' → logprob: -15.375007629394531
    8. ')}' → logprob: -15.500007629394531
    9. '}' → logprob: -15.625007629394531
    10. '   ' → logprob: -15.625007629394531

Token 315: 'print' (ID: 1598)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.17684730887413025
    2. ')' → logprob: -2.551847219467163
    3. '#' → logprob: -3.676847219467163
    4. 'q' → logprob: -4.301847457885742
    5. 'print' → logprob: -4.676847457885742
    6. 'r' → logprob: -4.801847457885742
    7. '<|end|>' → logprob: -5.301847457885742
    8. 'res' → logprob: -5.426847457885742
    9. 'm' → logprob: -5.676847457885742
    10. 'for' → logprob: -6.051847457885742

Token 316: '((' (ID: 2054)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.03392264246940613
    2. '(' → logprob: -3.4089226722717285
    3. '()' → logprob: -9.40892219543457
    4. '((' → logprob: -9.90892219543457
    5. '(s' → logprob: -10.03392219543457
    6. '(exp' → logprob: -10.03392219543457
    7. '('' → logprob: -10.90892219543457
    8. 'a' → logprob: -11.15892219543457
    9. '(f' → logprob: -11.90892219543457
    10. '(end' → logprob: -12.65892219543457

Token 317: 'exp' (ID: 8067)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.022919896990060806
    2. 'exp' → logprob: -4.02292013168335
    3. ' a' → logprob: -6.14792013168335
    4. 'l' → logprob: -7.02292013168335
    5. '(a' → logprob: -7.02292013168335
    6. '(exp' → logprob: -8.647919654846191
    7. 'pow' → logprob: -8.772919654846191
    8. ' (' → logprob: -9.022919654846191
    9. '(' → logprob: -9.147919654846191
    10. 'add' → logprob: -9.397919654846191

Token 318: '_tw' (ID: 139926)
  Prédit: '_tw'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tw' → logprob: -1.9361264946837764e-07
    2. ' _' → logprob: -17.125
    3. 'tw' → logprob: -17.125
    4. '_pow' → logprob: -17.25
    5. ' ' → logprob: -18.0
    6. 'a' → logprob: -18.125
    7. '_thr' → logprob: -18.25
    8. '_t' → logprob: -18.375
    9. '  ' → logprob: -18.5
    10. '_' → logprob: -18.625

Token 319: 'ist' (ID: 421)
  Prédit: 'ist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ist' → logprob: -3.4121114822482923e-06
    2. '   ' → logprob: -13.750003814697266
    3. '(' → logprob: -14.750003814697266
    4. 'is' → logprob: -15.250003814697266
    5. '_' → logprob: -15.375003814697266
    6. 'ists' → logprob: -15.625003814697266
    7. 'ист' → logprob: -16.000003814697266
    8. 'st' → logprob: -16.250003814697266
    9. '1' → logprob: -16.250003814697266
    10. '```' → logprob: -16.375003814697266

Token 320: '(' (ID: 7)
  Prédit: '(l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.5803852081298828
    2. '(a' → logprob: -0.8303852081298828
    3. '(' → logprob: -6.080385208129883
    4. '((' → logprob: -7.205385208129883
    5. 'a' → logprob: -7.455385208129883
    6. '(p' → logprob: -7.955385208129883
    7. ')(' → logprob: -8.330385208129883
    8. '(n' → logprob: -9.205385208129883
    9. ' (' → logprob: -9.955385208129883
    10. ')' → logprob: -10.955385208129883

Token 321: '3' (ID: 18)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3143613636493683
    2. 'l' → logprob: -1.314361333847046
    3. '(l' → logprob: -8.439361572265625
    4. ' a' → logprob: -8.689361572265625
    5. '(a' → logprob: -8.689361572265625
    6. '1' → logprob: -9.314361572265625
    7. 'p' → logprob: -9.314361572265625
    8. ')' → logprob: -9.564361572265625
    9. '2' → logprob: -9.689361572265625
    10. ' l' → logprob: -9.939361572265625

Token 322: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4245236814022064
    2. ',a' → logprob: -1.4245237112045288
    3. ' ,' → logprob: -2.9245235919952393
    4. ',n' → logprob: -3.0495235919952393
    5. 'a' → logprob: -5.674523830413818
    6. ' a' → logprob: -7.924523830413818
    7. ',l' → logprob: -8.54952335357666
    8. ',p' → logprob: -9.17452335357666
    9. '*a' → logprob: -10.17452335357666
    10. ' ' → logprob: -10.67452335357666

Token 323: ' n' (ID: 297)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.11861839145421982
    2. ' a' → logprob: -2.2436184883117676
    3. 'n' → logprob: -5.493618488311768
    4. ' n' → logprob: -6.618618488311768
    5. ' ' → logprob: -8.99361801147461
    6. 'p' → logprob: -9.86861801147461
    7. 'l' → logprob: -10.24361801147461
    8. ' p' → logprob: -10.36861801147461
    9. ' l' → logprob: -11.36861801147461
    10. '  ' → logprob: -11.36861801147461

Token 324: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.13801206648349762
    2. '-' → logprob: -2.763012170791626
    3. ' ,' → logprob: -3.638012170791626
    4. ' -' → logprob: -4.513011932373047
    5. ',a' → logprob: -4.513011932373047
    6. ',p' → logprob: -4.638011932373047
    7. ',n' → logprob: -5.888011932373047
    8. '//' → logprob: -6.513011932373047
    9. '*' → logprob: -7.388011932373047
    10. ')' → logprob: -7.513011932373047

Token 325: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0010397175792604685
    2. ' p' → logprob: -6.876039505004883
    3. '998' → logprob: -12.126039505004883
    4. ' ' → logprob: -13.751039505004883
    5. ')' → logprob: -15.501039505004883
    6. '   ' → logprob: -16.251039505004883
    7. '999' → logprob: -16.751039505004883
    8. '
' → logprob: -16.876039505004883
    9. ')p' → logprob: -17.501039505004883
    10. '  ' → logprob: -17.626039505004883

Token 326: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.33450889587402344
    2. '))' → logprob: -1.3345088958740234
    3. ')))' → logprob: -3.9595088958740234
    4. ')+' → logprob: -6.584508895874023
    5. ')*' → logprob: -8.959508895874023
    6. ')-' → logprob: -8.959508895874023
    7. ' )' → logprob: -9.084508895874023
    8. '-' → logprob: -9.334508895874023
    9. ' ))' → logprob: -10.084508895874023
    10. '*' → logprob: -11.459508895874023

Token 327: ' -' (ID: 533)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.04923533648252487
    2. ')' → logprob: -3.0492353439331055
    3. ' ))' → logprob: -8.424235343933105
    4. ')))' → logprob: -8.674235343933105
    5. '**' → logprob: -9.424235343933105
    6. '+' → logprob: -9.799235343933105
    7. ',' → logprob: -10.049235343933105
    8. '-' → logprob: -10.549235343933105
    9. ')+' → logprob: -11.424235343933105
    10. ')**' → logprob: -11.674235343933105

Token 328: ' ' (ID: 220)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.04333062842488289
    2. ' a' → logprob: -3.168330669403076
    3. '1' → logprob: -8.668330192565918
    4. ' ' → logprob: -10.043330192565918
    5. '(a' → logprob: -10.168330192565918
    6. ' (' → logprob: -10.543330192565918
    7. '(' → logprob: -11.293330192565918
    8. '2' → logprob: -12.043330192565918
    9. 'slow' → logprob: -12.043330192565918
    10. 'exp' → logprob: -12.293330192565918

Token 329: '2' (ID: 17)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0021033943630754948
    2. ' a' → logprob: -6.252103328704834
    3. '1' → logprob: -9.752103805541992
    4. '(a' → logprob: -9.877103805541992
    5. '(' → logprob: -10.752103805541992
    6. 'exp' → logprob: -11.627103805541992
    7. ' (' → logprob: -11.877103805541992
    8. ' ' → logprob: -11.877103805541992
    9. '2' → logprob: -12.127103805541992
    10. 'slow' → logprob: -12.502103805541992

Token 330: '*a' (ID: 78448)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.012724831700325012
    2. ')%' → logprob: -4.762724876403809
    3. ' )' → logprob: -6.012724876403809
    4. '+' → logprob: -7.512724876403809
    5. '*' → logprob: -7.887724876403809
    6. '**' → logprob: -7.887724876403809
    7. ' +' → logprob: -8.887724876403809
    8. '))' → logprob: -9.762724876403809
    9. '*p' → logprob: -10.137724876403809
    10. '*n' → logprob: -10.887724876403809

Token 331: ')%' (ID: 57656)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008484440855681896
    2. ')%' → logprob: -5.258484363555908
    3. '))' → logprob: -5.758484363555908
    4. ' )' → logprob: -10.133484840393066
    5. ')))' → logprob: -10.883484840393066
    6. '+' → logprob: -11.133484840393066
    7. '%' → logprob: -12.258484840393066
    8. ')//' → logprob: -12.758484840393066
    9. ')+' → logprob: -12.883484840393066
    10. ')**' → logprob: -13.758484840393066

Token 332: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0001234428636962548
    2. ' p' → logprob: -9.000123023986816
    3. '(p' → logprob: -19.875123977661133
    4. '<p' → logprob: -21.250123977661133
    5. '	p' → logprob: -22.250123977661133
    6. ' ' → logprob: -22.250123977661133
    7. '*p' → logprob: -22.500123977661133
    8. '```' → logprob: -22.500123977661133
    9. ')p' → logprob: -22.875123977661133
    10. '   ' → logprob: -23.625123977661133

Token 333: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3856492842023727e-06
    2. ' )' → logprob: -13.875000953674316
    3. ')
' → logprob: -15.250000953674316
    4. '}' → logprob: -17.625001907348633
    5. '))' → logprob: -17.625001907348633
    6. '```' → logprob: -17.875001907348633
    7. ')`' → logprob: -18.500001907348633
    8. '`)' → logprob: -18.625001907348633
    9. '')' → logprob: -18.750001907348633
    10. ']' → logprob: -19.375001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 331
Tokens correctement prédits (1ère position, stricte): 104
Tokens correctement prédits (1ère position, avec adaptation): 109
Tokens correctement prédits (top 10): 231
Précision stricte (1ère position): 31.42%
Précision adaptée (1ère position): 32.93%
Précision (top 10): 69.79%
================================================================================
