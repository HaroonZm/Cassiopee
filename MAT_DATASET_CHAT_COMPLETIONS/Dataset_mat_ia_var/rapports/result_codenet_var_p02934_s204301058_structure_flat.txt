================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:47:48
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
N = int(input())
A = list(map(int, input().split()))
rev_sum = 0
for i in range(len(A)):
    if A[i] != 0:
        rev_sum += 1 / A[i]
if rev_sum != 0:
    print(1 / rev_sum)
else:
    print(0)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'N' (ID: 45)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0003567959647625685
    2. '(N' → logprob: -9.000356674194336
    3. '('' → logprob: -9.500356674194336
    4. ''' → logprob: -9.875356674194336
    5. '`' → logprob: -10.500356674194336
    6. '```' → logprob: -10.500356674194336
    7. '("("' → logprob: -11.375356674194336
    8. '()' → logprob: -11.500356674194336
    9. '(input' → logprob: -11.625356674194336
    10. '(
' → logprob: -12.250356674194336

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5405747294425964
    2. ')' → logprob: -0.9155747294425964
    3. '()' → logprob: -4.290574550628662
    4. '())' → logprob: -5.915574550628662
    5. '(
' → logprob: -8.41557502746582
    6. '```' → logprob: -9.16557502746582
    7. '))' → logprob: -9.29057502746582
    8. '")' → logprob: -9.54057502746582
    9. '(

' → logprob: -9.79057502746582
    10. '`)' → logprob: -9.79057502746582

Token 5: 'A' (ID: 32)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.31470787525177
    2. 'if' → logprob: -2.1897077560424805
    3. 'i' → logprob: -3.3147077560424805
    4. 'a' → logprob: -3.6897077560424805
    5. 's' → logprob: -3.9397077560424805
    6. 'x' → logprob: -4.3147077560424805
    7. '*' → logprob: -4.8147077560424805
    8. 'f' → logprob: -4.9397077560424805
    9. '`' → logprob: -4.9397077560424805
    10. ')' → logprob: -4.9397077560424805

Token 6: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0007823493797332048
    2. '[]' → logprob: -8.500782012939453
    3. '\[' → logprob: -9.125782012939453
    4. '.' → logprob: -9.250782012939453
    5. '[A' → logprob: -9.375782012939453
    6. '[i' → logprob: -9.500782012939453
    7. '[:]' → logprob: -9.750782012939453
    8. '+' → logprob: -10.250782012939453
    9. '=' → logprob: -10.750782012939453
    10. '[a' → logprob: -11.500782012939453

Token 7: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.8042125105857849
    2. ' list' → logprob: -0.9292125105857849
    3. ' []' → logprob: -2.4292125701904297
    4. '[]' → logprob: -3.1792125701904297
    5. ' [' → logprob: -3.9292125701904297
    6. '[' → logprob: -5.30421257019043
    7. '[list' → logprob: -6.67921257019043
    8. '[input' → logprob: -6.67921257019043
    9. 'input' → logprob: -8.05421257019043
    10. '[int' → logprob: -8.17921257019043

Token 8: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004554015584290028
    2. '(range' → logprob: -5.87955379486084
    3. '```' → logprob: -7.00455379486084
    4. '[' → logprob: -8.12955379486084
    5. '[(' → logprob: -8.87955379486084
    6. '(
' → logprob: -8.87955379486084
    7. ')' → logprob: -9.37955379486084
    8. '(

' → logprob: -10.37955379486084
    9. '<|end|>' → logprob: -10.87955379486084
    10. ' (' → logprob: -10.87955379486084

Token 9: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.08440472185611725
    2. '(' → logprob: -2.584404706954956
    3. '(str' → logprob: -5.959404945373535
    4. '(input' → logprob: -6.334404945373535
    5. '(lambda' → logprob: -7.834404945373535
    6. 'int' → logprob: -7.959404945373535
    7. ')' → logprob: -9.584404945373535
    8. '(eval' → logprob: -9.584404945373535
    9. '```' → logprob: -9.834404945373535
    10. '<int' → logprob: -10.084404945373535

Token 10: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.03276296705007553
    2. '(' → logprob: -3.9077630043029785
    3. ',input' → logprob: -4.6577630043029785
    4. ',' → logprob: -6.5327630043029785
    5. 'input' → logprob: -8.28276252746582
    6. ')' → logprob: -8.53276252746582
    7. '))' → logprob: -8.65776252746582
    8. '=input' → logprob: -9.03276252746582
    9. '```' → logprob: -9.53276252746582
    10. '<|end|>' → logprob: -9.53276252746582

Token 11: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.07891413569450378
    2. ' input' → logprob: -2.578914165496826
    3. '(input' → logprob: -10.828913688659668
    4. ',input' → logprob: -12.578913688659668
    5. ')' → logprob: -14.703913688659668
    6. '=input' → logprob: -15.453913688659668
    7. '	input' → logprob: -15.828913688659668
    8. ' ' → logprob: -15.953913688659668
    9. '<input' → logprob: -16.328914642333984
    10. '```' → logprob: -16.828914642333984

Token 12: '().' (ID: 1454)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.27297863364219666
    2. '()' → logprob: -1.772978663444519
    3. '())' → logprob: -3.0229785442352295
    4. '().' → logprob: -4.522978782653809
    5. '(' → logprob: -5.272978782653809
    6. '()));' → logprob: -6.022978782653809
    7. '))' → logprob: -7.522978782653809
    8. '())))' → logprob: -8.272978782653809
    9. '()>' → logprob: -8.397978782653809
    10. ')' → logprob: -8.522978782653809

Token 13: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00044103997061029077
    2. 'strip' → logprob: -7.750441074371338
    3. 'rstrip' → logprob: -11.62544059753418
    4. ' split' → logprob: -13.62544059753418
    5. '(split' → logprob: -15.75044059753418
    6. ')' → logprob: -16.87544059753418
    7. 'spl' → logprob: -17.12544059753418
    8. 'replace' → logprob: -18.50044059753418
    9. 'read' → logprob: -19.12544059753418
    10. 's' → logprob: -19.25044059753418

Token 14: '()))
' (ID: 24521)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.1646972894668579
    2. ')' → logprob: -1.914697289466858
    3. '()))' → logprob: -6.039697170257568
    4. '(' → logprob: -6.664697170257568
    5. ')))' → logprob: -7.414697170257568
    6. '())' → logprob: -9.039697647094727
    7. '()' → logprob: -10.289697647094727
    8. ''))' → logprob: -10.414697647094727
    9. '('' → logprob: -12.539697647094727
    10. '),' → logprob: -13.039697647094727

Token 15: 'rev' (ID: 25656)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.12053951621055603
    2. 's' → logprob: -3.495539426803589
    3. 'sum' → logprob: -3.995539426803589
    4. 'result' → logprob: -4.370539665222168
    5. 'dp' → logprob: -4.620539665222168
    6. 'print' → logprob: -5.120539665222168
    7. 'count' → logprob: -5.495539665222168
    8. 'for' → logprob: -5.620539665222168
    9. 'max' → logprob: -5.620539665222168
    10. 'sorted' → logprob: -5.745539665222168

Token 16: '_sum' (ID: 29859)
  Prédit: 'erse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'erse' → logprob: -0.08133657276630402
    2. 'ers' → logprob: -3.081336498260498
    3. '()' → logprob: -4.206336498260498
    4. '(' → logprob: -4.706336498260498
    5. '(A' → logprob: -5.956336498260498
    6. '_' → logprob: -6.331336498260498
    7. 'A' → logprob: -6.456336498260498
    8. 'er' → logprob: -6.831336498260498
    9. 'ersa' → logprob: -8.581336975097656
    10. '```' → logprob: -8.706336975097656

Token 17: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06500577926635742
    2. 's' → logprob: -3.4400057792663574
    3. '_' → logprob: -3.5650057792663574
    4. '()' → logprob: -7.190005779266357
    5. ' =' → logprob: -7.690005779266357
    6. '=' → logprob: -7.815005779266357
    7. '[' → logprob: -8.065006256103516
    8. '(A' → logprob: -9.190006256103516
    9. '('' → logprob: -9.815006256103516
    10. ')' → logprob: -9.940006256103516

Token 18: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.016834454610943794
    2. ' ' → logprob: -4.391834259033203
    3. 'sum' → logprob: -6.141834259033203
    4. '[' → logprob: -7.266834259033203
    5. 'A' → logprob: -7.266834259033203
    6. ' A' → logprob: -8.391834259033203
    7. ' [' → logprob: -8.641834259033203
    8. ' sum' → logprob: -8.891834259033203
    9. '[]' → logprob: -9.266834259033203
    10. '[A' → logprob: -9.391834259033203

Token 19: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03212583065032959
    2. 'sum' → logprob: -4.157125949859619
    3. '[' → logprob: -4.782125949859619
    4. 'A' → logprob: -5.157125949859619
    5. '[A' → logprob: -7.032125949859619
    6. '[]' → logprob: -7.407125949859619
    7. ' ' → logprob: -8.907125473022461
    8. '[len' → logprob: -9.907125473022461
    9. '[int' → logprob: -10.782125473022461
    10. '[max' → logprob: -10.907125473022461

Token 20: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.02094169147312641
    2. ' for' → logprob: -4.145941734313965
    3. '
' → logprob: -5.645941734313965
    4. '<|end|>' → logprob: -6.770941734313965
    5. '\n' → logprob: -9.520941734313965
    6. ')' → logprob: -10.020941734313965
    7. '```' → logprob: -10.645941734313965
    8. '' → logprob: -10.895941734313965
    9. '\' → logprob: -11.395941734313965
    10. '<|end|>' → logprob: -11.520941734313965

Token 21: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00012976066500414163
    2. ' for' → logprob: -9.125129699707031
    3. '```' → logprob: -11.625129699707031
    4. '
' → logprob: -12.000129699707031
    5. '\n' → logprob: -12.875129699707031
    6. '\' → logprob: -14.250129699707031
    7. 'i' → logprob: -14.500129699707031
    8. '' → logprob: -15.000129699707031
    9. 'n' → logprob: -15.375129699707031
    10. 'r' → logprob: -15.625129699707031

Token 22: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.004207802005112171
    2. 'i' → logprob: -6.129207611083984
    3. ' ' → logprob: -7.004207611083984
    4. ' _' → logprob: -7.504207611083984
    5. '_' → logprob: -7.629207611083984
    6. ' A' → logprob: -10.129207611083984
    7. ' x' → logprob: -11.254207611083984
    8. '  ' → logprob: -12.004207611083984
    9. ' ' → logprob: -12.379207611083984
    10. 'A' → logprob: -13.129207611083984

Token 23: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03036842681467533
    2. 'in' → logprob: -3.5303683280944824
    3. ' ' → logprob: -7.655368328094482
    4. '  ' → logprob: -9.15536880493164
    5. 'range' → logprob: -12.40536880493164
    6. ' i' → logprob: -12.53036880493164
    7. ' <' → logprob: -12.65536880493164
    8. ',' → logprob: -12.65536880493164
    9. '+' → logprob: -12.90536880493164
    10. '[' → logprob: -13.03036880493164

Token 24: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.12769021093845367
    2. 'range' → logprob: -2.127690315246582
    3. ' A' → logprob: -8.002690315246582
    4. 'A' → logprob: -8.127690315246582
    5. ' reversed' → logprob: -9.252690315246582
    6. '	range' → logprob: -11.877690315246582
    7. 're' → logprob: -12.127690315246582
    8. '(range' → logprob: -12.377690315246582
    9. ')' → logprob: -12.502690315246582
    10. ' ' → logprob: -12.752690315246582

Token 25: '(len' (ID: 14990)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1691792756319046
    2. '(N' → logprob: -2.0441792011260986
    3. '(len' → logprob: -3.6691792011260986
    4. '(n' → logprob: -7.919179439544678
    5. ' (' → logprob: -8.29417896270752
    6. '(i' → logprob: -11.04417896270752
    7. '(
' → logprob: -12.16917896270752
    8. '(A' → logprob: -12.54417896270752
    9. '(length' → logprob: -12.66917896270752
    10. '(range' → logprob: -12.66917896270752

Token 26: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.002210919978097081
    2. '(' → logprob: -6.127211093902588
    3. '(N' → logprob: -11.00221061706543
    4. 'A' → logprob: -12.12721061706543
    5. ')' → logprob: -14.12721061706543
    6. '(a' → logprob: -14.37721061706543
    7. '(S' → logprob: -14.50221061706543
    8. '(
' → logprob: -14.62721061706543
    9. '(B' → logprob: -14.75221061706543
    10. '(s' → logprob: -15.37721061706543

Token 27: ')):
' (ID: 22530)
  Prédit: ')):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')):' → logprob: -0.283841073513031
    2. '))' → logprob: -1.6588411331176758
    3. ')' → logprob: -3.658841133117676
    4. '-' → logprob: -4.533841133117676
    5. ')):
' → logprob: -4.658841133117676
    6. '):' → logprob: -5.408841133117676
    7. '[' → logprob: -6.033841133117676
    8. '[i' → logprob: -6.408841133117676
    9. ' -' → logprob: -7.283841133117676
    10. ' ' → logprob: -8.033841133117676

Token 28: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08253297954797745
    2. ' rev' → logprob: -3.2075328826904297
    3. 'rev' → logprob: -4.08253288269043
    4. ' if' → logprob: -5.20753288269043
    5. ' ' → logprob: -5.33253288269043
    6. '    ' → logprob: -5.70753288269043
    7. '[::-' → logprob: -5.70753288269043
    8. ' A' → logprob: -6.45753288269043
    9. '```' → logprob: -7.45753288269043
    10. ' for' → logprob: -7.58253288269043

Token 29: ' if' (ID: 538)
  Prédit: ' rev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rev' → logprob: -0.32449501752853394
    2. 'rev' → logprob: -1.3244950771331787
    3. ' if' → logprob: -5.0744948387146
    4. '   ' → logprob: -5.9494948387146
    5. ' for' → logprob: -6.8244948387146
    6. 'if' (adapté à ' if') → logprob: -7.8244948387146
    7. '_rev' → logprob: -8.449495315551758
    8. '```' → logprob: -9.074495315551758
    9. '[::-' → logprob: -9.199495315551758
    10. 'for' → logprob: -9.199495315551758

Token 30: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.07619459927082062
    2. 'A' → logprob: -2.7011945247650146
    3. ' i' → logprob: -5.451194763183594
    4. 'i' → logprob: -6.576194763183594
    5. ' ' → logprob: -8.451194763183594
    6. ' (' → logprob: -9.201194763183594
    7. '(A' → logprob: -9.326194763183594
    8. ' not' → logprob: -9.951194763183594
    9. '   ' → logprob: -10.701194763183594
    10. ' N' → logprob: -10.951194763183594

Token 31: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.007742085959762335
    2. '[' → logprob: -4.882741928100586
    3. '[::-' → logprob: -9.257741928100586
    4. ' [' → logprob: -11.007741928100586
    5. '[-' → logprob: -11.382741928100586
    6. '[len' → logprob: -12.882741928100586
    7. '>' → logprob: -13.257741928100586
    8. '[A' → logprob: -13.757741928100586
    9. '```' → logprob: -14.007741928100586
    10. '[I' → logprob: -14.132741928100586

Token 32: ']' (ID: 60)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.4408440589904785
    2. ' >' → logprob: -2.0658440589904785
    3. ')' → logprob: -2.9408440589904785
    4. '%' → logprob: -3.0658440589904785
    5. '<' → logprob: -3.5658440589904785
    6. ' <' → logprob: -3.6908440589904785
    7. '==' → logprob: -3.6908440589904785
    8. '[' → logprob: -4.5658440589904785
    9. ' ==' → logprob: -4.5658440589904785
    10. '[i' → logprob: -5.3158440589904785

Token 33: ' !=' (ID: 1666)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.633045494556427
    2. '%' → logprob: -1.6330454349517822
    3. ' >' → logprob: -2.5080454349517822
    4. '<' → logprob: -2.6330454349517822
    5. '==' → logprob: -2.8830454349517822
    6. ' ==' → logprob: -4.008045673370361
    7. ' <' → logprob: -4.133045673370361
    8. ' %' → logprob: -5.008045673370361
    9. '!=' → logprob: -5.133045673370361
    10. '[' → logprob: -5.633045673370361

Token 34: ' ' (ID: 220)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.2386760711669922
    2. ' A' → logprob: -1.2386760711669922
    3. '0' → logprob: -1.4886760711669922
    4. ' ' → logprob: -1.7386760711669922
    5. 'i' → logprob: -4.363676071166992
    6. ' i' → logprob: -5.488676071166992
    7. '1' → logprob: -7.863676071166992
    8. '  ' → logprob: -8.238676071166992
    9. '   ' → logprob: -8.488676071166992
    10. '6' → logprob: -8.613676071166992

Token 35: '0' (ID: 15)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.4673241674900055
    2. '0' → logprob: -1.092324137687683
    3. 'i' → logprob: -4.092324256896973
    4. ' A' → logprob: -4.342324256896973
    5. ' ' → logprob: -4.967324256896973
    6. '1' → logprob: -8.342324256896973
    7. ' i' → logprob: -8.467324256896973
    8. 'N' → logprob: -9.217324256896973
    9. 'max' → logprob: -9.592324256896973
    10. 'rev' → logprob: -9.592324256896973

Token 36: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0039886427111923695
    2. ' and' → logprob: -5.753988742828369
    3. ' :' → logprob: -7.253988742828369
    4. 'and' → logprob: -9.503988265991211
    5. ':
' → logprob: -10.878988265991211
    6. '):' → logprob: -12.753988265991211
    7. '   ' → logprob: -12.753988265991211
    8. ' ' → logprob: -13.878988265991211
    9. ':**' → logprob: -14.628988265991211
    10. ')' → logprob: -14.878988265991211

Token 37: '       ' (ID: 309)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.8670412302017212
    2. '       ' → logprob: -1.1170412302017212
    3. ' ' → logprob: -2.1170411109924316
    4. '    ' → logprob: -2.7420411109924316
    5. 'rev' → logprob: -3.9920411109924316
    6. '     
' → logprob: -4.617041110992432
    7. ' rev' → logprob: -4.867041110992432
    8. '   ' → logprob: -4.992041110992432
    9. '    
' → logprob: -5.492041110992432
    10. '<|end|>' → logprob: -5.617041110992432

Token 38: ' rev' (ID: 10808)
  Prédit: ' rev'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rev' → logprob: -0.5846729874610901
    2. 'rev' (adapté à ' rev') → logprob: -0.8346729874610901
    3. ' ' → logprob: -5.209672927856445
    4. '    ' → logprob: -6.459672927856445
    5. ' 
' → logprob: -7.709672927856445
    6. '_rev' → logprob: -8.459672927856445
    7. '   ' → logprob: -8.459672927856445
    8. ' A' → logprob: -9.209672927856445
    9. '.rev' → logprob: -9.584672927856445
    10. 'A' → logprob: -9.959672927856445

Token 39: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.12454450130462646
    2. 'erse' → logprob: -2.249544620513916
    3. '_' → logprob: -5.124544620513916
    4. 'ers' → logprob: -5.499544620513916
    5. 'sum' → logprob: -6.624544620513916
    6. '_s' → logprob: -9.624544143676758
    7. 'er' → logprob: -10.499544143676758
    8. '```' → logprob: -10.499544143676758
    9. '_rev' → logprob: -10.624544143676758
    10. '   ' → logprob: -11.624544143676758

Token 40: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.02170197106897831
    2. '+=' → logprob: -3.8967020511627197
    3. '+' → logprob: -6.896701812744141
    4. ' +' → logprob: -9.39670181274414
    5. ' -=' → logprob: -10.39670181274414
    6. '=' → logprob: -11.64670181274414
    7. '+=(' → logprob: -12.02170181274414
    8. ' =' → logprob: -12.14670181274414
    9. ' ' → logprob: -12.39670181274414
    10. ' ' → logprob: -13.02170181274414

Token 41: ' ' (ID: 220)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.6481043696403503
    2. ' A' → logprob: -1.2731044292449951
    3. '1' → logprob: -1.7731044292449951
    4. ' ' → logprob: -3.773104429244995
    5. 'int' → logprob: -6.523104190826416
    6. ' int' → logprob: -7.148104190826416
    7. 'i' → logprob: -7.898104190826416
    8. '10' → logprob: -8.398104667663574
    9. '(' → logprob: -8.648104667663574
    10. '   ' → logprob: -8.648104667663574

Token 42: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6116363406181335
    2. 'A' → logprob: -0.8616363406181335
    3. 'int' → logprob: -3.8616364002227783
    4. 'i' → logprob: -5.986636161804199
    5. 'pow' → logprob: -5.986636161804199
    6. '10' → logprob: -6.111636161804199
    7. ' ' → logprob: -6.236636161804199
    8. '(' → logprob: -6.861636161804199
    9. ' A' → logprob: -7.111636161804199
    10. 'len' → logprob: -7.236636161804199

Token 43: ' /' (ID: 820)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8972892761230469
    2. '<|end|>' → logprob: -1.5222892761230469
    3. '
' → logprob: -2.272289276123047
    4. ' else' → logprob: -2.647289276123047
    5. 'else' → logprob: -2.897289276123047
    6. '0' → logprob: -3.397289276123047
    7. ')' → logprob: -3.897289276123047
    8. '```' → logprob: -4.022289276123047
    9. '*' → logprob: -4.397289276123047
    10. '+' → logprob: -4.397289276123047

Token 44: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0024814847856760025
    2. ' A' → logprob: -6.002481460571289
    3. ' ' → logprob: -13.752481460571289
    4. 'i' → logprob: -13.877481460571289
    5. '(A' → logprob: -13.877481460571289
    6. '	A' → logprob: -14.127481460571289
    7. 'int' → logprob: -14.502481460571289
    8. '(' → logprob: -14.627481460571289
    9. 'Ai' → logprob: -14.877481460571289
    10. '   ' → logprob: -15.377481460571289

Token 45: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.011076239868998528
    2. '[' → logprob: -4.5110764503479
    3. '```' → logprob: -11.511075973510742
    4. ' [' → logprob: -12.011075973510742
    5. '[
' → logprob: -12.386075973510742
    6. '\[' → logprob: -13.261075973510742
    7. 'i' → logprob: -13.761075973510742
    8. '`' → logprob: -14.011075973510742
    9. '[s' → logprob: -14.261075973510742
    10. '[I' → logprob: -14.386075973510742

Token 46: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.024604277219623e-05
    2. ' )' → logprob: -10.750040054321289
    3. ')
' → logprob: -11.625040054321289
    4. '）' → logprob: -13.125040054321289
    5. '[' → logprob: -13.250040054321289
    6. '*' → logprob: -14.125040054321289
    7. '}' → logprob: -14.125040054321289
    8. '[i' → logprob: -14.250040054321289
    9. '))' → logprob: -14.625040054321289
    10. '   ' → logprob: -14.750040054321289

Token 47: 'if' (ID: 366)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.36068078875541687
    2. '
' → logprob: -1.6106808185577393
    3. 'r' → logprob: -3.4856808185577393
    4. 'rev' → logprob: -3.9856808185577393
    5. '\n' → logprob: -4.73568058013916
    6. ')' → logprob: -4.86068058013916
    7. 'result' → logprob: -5.11068058013916
    8. '' → logprob: -5.36068058013916
    9. ' 
' → logprob: -5.86068058013916
    10. '0' → logprob: -6.11068058013916

Token 48: ' rev' (ID: 10808)
  Prédit: ' rev'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rev' → logprob: -0.016225092113018036
    2. 'rev' → logprob: -4.1412248611450195
    3. ' ' → logprob: -9.01622486114502
    4. ' ' → logprob: -10.14122486114502
    5. ' len' → logprob: -11.76622486114502
    6. ' rep' → logprob: -12.26622486114502
    7. ' reve' → logprob: -12.76622486114502
    8. ' A' → logprob: -13.26622486114502
    9. ' abs' → logprob: -13.26622486114502
    10. '_rev' → logprob: -13.26622486114502

Token 49: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -5.955703818472102e-05
    2. '_' → logprob: -10.000059127807617
    3. '_s' → logprob: -11.375059127807617
    4. ' _' → logprob: -13.625059127807617
    5. 'sum' → logprob: -14.250059127807617
    6. '\' → logprob: -15.500059127807617
    7. '_SUM' → logprob: -15.875059127807617
    8. '_rev' → logprob: -16.375059127807617
    9. '_
' → logprob: -17.375059127807617
    10. '._' → logprob: -17.375059127807617

Token 50: ' !=' (ID: 1666)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.32215413451194763
    2. ' >' → logprob: -1.69715416431427
    3. '==' → logprob: -2.8221540451049805
    4. ' !=' → logprob: -3.9471540451049805
    5. '>' → logprob: -4.4471540451049805
    6. '!=' → logprob: -7.0721540451049805
    7. ' ' → logprob: -8.32215404510498
    8. ' <' → logprob: -8.57215404510498
    9. ' >=' → logprob: -9.44715404510498
    10. '=' → logprob: -9.69715404510498

Token 51: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.14268827438354492
    2. '0' → logprob: -2.017688274383545
    3. ' ' → logprob: -11.267688751220703
    4. '1' → logprob: -16.517688751220703
    5. '  ' → logprob: -16.642688751220703
    6. '​' → logprob: -16.642688751220703
    7. '=' → logprob: -17.205188751220703
    8. '' → logprob: -17.455188751220703
    9. 's' → logprob: -17.830188751220703
    10. '`' → logprob: -18.080188751220703

Token 52: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.009756917133927345
    2. ' ' → logprob: -4.634757041931152
    3. ' ' → logprob: -14.384757041931152
    4. '   ' → logprob: -16.009756088256836
    5. '```' → logprob: -16.384756088256836
    6. '  ' → logprob: -17.009756088256836
    7. '1' → logprob: -17.384756088256836
    8. '​' → logprob: -17.884756088256836
    9. '    ' → logprob: -18.009756088256836
    10. '=' → logprob: -18.134756088256836

Token 53: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -9.805981972021982e-05
    2. ':
' → logprob: -9.62509822845459
    3. ' :' → logprob: -10.37509822845459
    4. ':

' → logprob: -15.25009822845459
    5. '):' → logprob: -15.75009822845459
    6. ':return' → logprob: -16.125097274780273
    7. ':
' → logprob: -16.750097274780273
    8. ':**' → logprob: -16.875097274780273
    9. ' :
' → logprob: -17.125097274780273
    10. ')' → logprob: -17.375097274780273

Token 54: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019701847806572914
    2. ':' → logprob: -4.519701957702637
    3. ' print' → logprob: -5.519701957702637
    4. 'print' → logprob: -5.894701957702637
    5. '\n' → logprob: -7.644701957702637
    6. ':
' → logprob: -7.769701957702637
    7. '       ' → logprob: -8.519701957702637
    8. ' ' → logprob: -8.894701957702637
    9. '    
' → logprob: -8.894701957702637
    10. '    ' → logprob: -9.144701957702637

Token 55: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.35623326897621155
    2. 'print' (adapté à ' print') → logprob: -1.2312332391738892
    3. '   ' → logprob: -5.7312331199646
    4. '```' → logprob: -6.2312331199646
    5. '`' → logprob: -7.6062331199646
    6. ' h' → logprob: -7.8562331199646
    7. ' `' → logprob: -8.106233596801758
    8. '``' → logprob: -8.356233596801758
    9. ' ' → logprob: -8.481233596801758
    10. ' result' → logprob: -9.106233596801758

Token 56: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0032074193004518747
    2. ' (' → logprob: -7.128207206726074
    3. '(round' → logprob: -7.128207206726074
    4. '("' → logprob: -7.628207206726074
    5. '((' → logprob: -7.628207206726074
    6. '('' → logprob: -9.003207206726074
    7. '1' → logprob: -9.128207206726074
    8. '(f' → logprob: -9.253207206726074
    9. '(int' → logprob: -9.628207206726074
    10. '()' → logprob: -9.753207206726074

Token 57: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.06299237161874771
    2. 'round' → logprob: -2.9379923343658447
    3. ' ' → logprob: -5.687992572784424
    4. ' round' → logprob: -6.937992572784424
    5. '{' → logprob: -7.187992572784424
    6. 'int' → logprob: -7.187992572784424
    7. 'rev' → logprob: -7.187992572784424
    8. '"{' → logprob: -7.687992572784424
    9. ')' → logprob: -7.937992572784424
    10. '   ' → logprob: -8.812992095947266

Token 58: ' /' (ID: 820)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.14878112077713013
    2. ' /' → logprob: -2.0237810611724854
    3. ')' → logprob: -5.1487812995910645
    4. '/)' → logprob: -8.523780822753906
    5. ' )' → logprob: -10.523780822753906
    6. '   ' → logprob: -10.898780822753906
    7. ' ' → logprob: -11.273780822753906
    8. ')/' → logprob: -11.898780822753906
    9. '    ' → logprob: -13.148780822753906
    10. '/end' → logprob: -13.148780822753906

Token 59: ' rev' (ID: 10808)
  Prédit: 'rev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rev' → logprob: -0.0007099286303855479
    2. ' rev' → logprob: -7.2507100105285645
    3. '_rev' → logprob: -17.750709533691406
    4. 'rep' → logprob: -18.000709533691406
    5. '.rev' → logprob: -18.250709533691406
    6. 'prev' → logprob: -20.250709533691406
    7. '   ' → logprob: -20.500709533691406
    8. ' ' → logprob: -20.625709533691406
    9. 'revet' → logprob: -20.750709533691406
    10. 'Rev' → logprob: -21.250709533691406

Token 60: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -1.5213274309644476e-05
    2. '_' → logprob: -11.625015258789062
    3. '_s' → logprob: -12.375015258789062
    4. 'sum' → logprob: -13.375015258789062
    5. ' _' → logprob: -16.375015258789062
    6. '_SUM' → logprob: -16.875015258789062
    7. 'e' → logprob: -17.250015258789062
    8. '_sym' → logprob: -17.500015258789062
    9. '_sup' → logprob: -17.750015258789062
    10. 's' → logprob: -17.875015258789062

Token 61: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.5776860184123507e-06
    2. ' )' → logprob: -13.37500286102295
    3. ')
' → logprob: -14.12500286102295
    4. '))' → logprob: -16.375001907348633
    5. ')`' → logprob: -17.000001907348633
    6. '）' → logprob: -17.250001907348633
    7. '`)' → logprob: -17.500001907348633
    8. '')' → logprob: -18.000001907348633
    9. ')#' → logprob: -18.875001907348633
    10. '()' → logprob: -19.000001907348633

Token 62: 'else' (ID: 2807)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 63: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00038932388997636735
    2. ':
' → logprob: -7.875389099121094
    3. '   ' → logprob: -12.375389099121094
    4. ' :' → logprob: -12.375389099121094
    5. ':
' → logprob: -14.625389099121094
    6. '):' → logprob: -15.750389099121094
    7. ' :
' → logprob: -16.625389099121094
    8. ':

' → logprob: -17.625389099121094
    9. '():' → logprob: -17.750389099121094
    10. ':**' → logprob: -18.125389099121094

Token 64: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.025154616683721542
    2. ' 
' → logprob: -4.5251545906066895
    3. '    
' → logprob: -4.6501545906066895
    4. '
' → logprob: -6.9001545906066895
    5. ' ' → logprob: -7.2751545906066895
    6. '    ' → logprob: -7.2751545906066895
    7. '0' → logprob: -7.6501545906066895
    8. 'print' → logprob: -7.6501545906066895
    9. '   
' → logprob: -7.7751545906066895
    10. '  
' → logprob: -8.400155067443848

Token 65: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0393853485584259
    2. ' print' → logprob: -3.2893853187561035
    3. '   ' → logprob: -6.9143853187561035
    4. '0' → logprob: -8.039385795593262
    5. ' ' → logprob: -10.789385795593262
    6. '	print' → logprob: -13.039385795593262
    7. 'pass' → logprob: -13.664385795593262
    8. '    ' → logprob: -14.289385795593262
    9. '```' → logprob: -14.289385795593262
    10. '  ' → logprob: -14.789385795593262

Token 66: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004526485223323107
    2. '()' → logprob: -5.629526615142822
    3. '0' → logprob: -7.254526615142822
    4. '(None' → logprob: -8.504526138305664
    5. '("' → logprob: -12.504526138305664
    6. '('' → logprob: -12.629526138305664
    7. '(-' → logprob: -12.629526138305664
    8. 'None' → logprob: -13.629526138305664
    9. ' (' → logprob: -13.629526138305664
    10. '("")' → logprob: -14.254526138305664

Token 67: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04944207891821861
    2. '"' → logprob: -3.0494420528411865
    3. ''' → logprob: -7.549442291259766
    4. ')' → logprob: -8.799442291259766
    5. '"A' → logprob: -9.674442291259766
    6. ''A' → logprob: -10.799442291259766
    7. '-' → logprob: -10.924442291259766
    8. '")' → logprob: -11.049442291259766
    9. ' ' → logprob: -11.174442291259766
    10. '"N' → logprob: -11.674442291259766

Token 68: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2664456789934775e-06
    2. ' )' → logprob: -14.125000953674316
    3. '`)' → logprob: -15.500000953674316
    4. ')
' → logprob: -15.875000953674316
    5. '))' → logprob: -16.000001907348633
    6. '）' → logprob: -17.500001907348633
    7. ')`' → logprob: -17.500001907348633
    8. '())' → logprob: -17.875001907348633
    9. '')' → logprob: -17.875001907348633
    10. '0' → logprob: -18.125001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 66
Tokens correctement prédits (1ère position, stricte): 29
Tokens correctement prédits (1ère position, avec adaptation): 30
Tokens correctement prédits (top 10): 53
Précision stricte (1ère position): 43.94%
Précision adaptée (1ère position): 45.45%
Précision (top 10): 80.30%
================================================================================
