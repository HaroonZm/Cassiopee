================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:38:42
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import math

input = sys.stdin.readline

N = int(input())
xy = []
sm = 0
for _ in range(N):
    xy.append(list(map(int, input().split())))
for i in range(N):
    now_x = xy[i][0]
    now_y = xy[i][1]
    for j in range(N):
        if j != i:
            sm += math.sqrt((now_x - xy[j][0]) ** 2 + (now_y - xy[j][1]) ** 2)
print(sm / N)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.026953943073749542
    2. '\n' → logprob: -3.901953935623169
    3. '<|end|>' → logprob: -6.651954174041748
    4. 'import' → logprob: -7.151954174041748
    5. 'newline' → logprob: -7.151954174041748
    6. '\' → logprob: -7.151954174041748
    7. '```' → logprob: -7.526954174041748
    8. '' → logprob: -7.901954174041748
    9. '<|end|>' → logprob: -7.901954174041748
    10. 'print' → logprob: -8.27695369720459

Token 4: ' math' (ID: 13324)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.00020771251001860946
    2. 'os' → logprob: -8.500207901000977
    3. ' math' → logprob: -13.375207901000977
    4. ' re' → logprob: -13.750207901000977
    5. '"os' → logprob: -14.250207901000977
    6. ' json' → logprob: -14.750207901000977
    7. '_os' → logprob: -16.375207901000977
    8. ' ' → logprob: -16.500207901000977
    9. ' io' → logprob: -16.625207901000977
    10. '	os' → logprob: -16.875207901000977

Token 5: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.4576877951622009
    2. '\n' → logprob: -1.8326878547668457
    3. '\' → logprob: -2.3326878547668457
    4. 'import' → logprob: -3.0826878547668457
    5. '```' → logprob: -3.8326878547668457
    6. '
' → logprob: -4.207687854766846
    7. '<|end|>' → logprob: -4.207687854766846
    8. ',' → logprob: -5.582687854766846
    9. '

' → logprob: -5.832687854766846
    10. '<|end|>' → logprob: -6.582687854766846

Token 6: 'input' (ID: 2586)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.111208438873291
    2. '\' → logprob: -1.611208438873291
    3. 'import' → logprob: -1.861208438873291
    4. '.' → logprob: -1.861208438873291
    5. '```' → logprob: -2.611208438873291
    6. 'def' → logprob: -3.361208438873291
    7. '
' → logprob: -4.111208438873291
    8. ',' → logprob: -4.611208438873291
    9. '#' → logprob: -5.236208438873291
    10. '<|end|>' → logprob: -5.361208438873291

Token 7: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06226511299610138
    2. '.' → logprob: -2.812265157699585
    3. ' (' → logprob: -8.937265396118164
    4. ')' → logprob: -10.312265396118164
    5. '_' → logprob: -10.312265396118164
    6. ',' → logprob: -10.687265396118164
    7. '(
' → logprob: -11.062265396118164
    8. '()' → logprob: -11.687265396118164
    9. '(.)' → logprob: -11.687265396118164
    10. '[' → logprob: -11.812265396118164

Token 8: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.07708662003278732
    2. ' input' → logprob: -3.2020866870880127
    3. 'sys' → logprob: -3.8270866870880127
    4. 'input' → logprob: -4.452086448669434
    5. ' ' → logprob: -10.327086448669434
    6. '=sys' → logprob: -10.827086448669434
    7. '(sys' → logprob: -10.952086448669434
    8. '	sys' → logprob: -11.577086448669434
    9. '(input' → logprob: -14.077086448669434
    10. '=input' → logprob: -14.202086448669434

Token 9: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.2230227142572403
    2. '.' → logprob: -1.723022699356079
    3. '.input' → logprob: -5.098022937774658
    4. ' .' → logprob: -5.223022937774658
    5. '.argv' → logprob: -5.223022937774658
    6. '.stdout' → logprob: -5.973022937774658
    7. '.readline' → logprob: -7.223022937774658
    8. '.import' → logprob: -7.598022937774658
    9. '.path' → logprob: -8.4730224609375
    10. '.std' → logprob: -9.3480224609375

Token 10: '.readline' (ID: 74673)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6558128595352173
    2. '.readline' → logprob: -0.7808128595352173
    3. '.read' → logprob: -3.7808127403259277
    4. 'read' → logprob: -10.030813217163086
    5. '.Read' → logprob: -10.280813217163086
    6. '.readlines' → logprob: -10.405813217163086
    7. '```' → logprob: -11.780813217163086
    8. ' .' → logprob: -12.530813217163086
    9. '.READ' → logprob: -13.030813217163086
    10. '.get' → logprob: -13.280813217163086

Token 11: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.20942409336566925
    2. '(
' → logprob: -1.8344241380691528
    3. '()' → logprob: -4.209424018859863
    4. '
' → logprob: -4.709424018859863
    5. '(

' → logprob: -6.459424018859863
    6. '()
' → logprob: -7.209424018859863
    7. '\n' → logprob: -7.709424018859863
    8. '```' → logprob: -8.334424018859863
    9. '\' → logprob: -8.459424018859863
    10. '

' → logprob: -8.584424018859863

Token 12: 'N' (ID: 45)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.20349201560020447
    2. 'def' → logprob: -1.7034920454025269
    3. 'for' → logprob: -6.828492164611816
    4. 'N' → logprob: -8.203492164611816
    5. 't' → logprob: -8.703492164611816
    6. '(' → logprob: -9.328492164611816
    7. '(n' → logprob: -9.328492164611816
    8. 'num' → logprob: -9.328492164611816
    9. 'a' → logprob: -9.453492164611816
    10. 'data' → logprob: -9.953492164611816

Token 13: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3213118612766266
    2. ' ' → logprob: -1.9463118314743042
    3. '=' → logprob: -2.1963119506835938
    4. ',' → logprob: -5.196311950683594
    5. ')' → logprob: -5.321311950683594
    6. '.' → logprob: -5.946311950683594
    7. '[' → logprob: -6.071311950683594
    8. '  ' → logprob: -6.071311950683594
    9. ' )' → logprob: -7.196311950683594
    10. ' ,' → logprob: -7.946311950683594

Token 14: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.02976958453655243
    2. 'int' → logprob: -3.5297696590423584
    3. ' ' → logprob: -11.154769897460938
    4. '(int' → logprob: -13.779769897460938
    5. '10' → logprob: -13.779769897460938
    6. ' input' → logprob: -14.279769897460938
    7. '=int' → logprob: -14.279769897460938
    8. '5' → logprob: -14.404769897460938
    9. '0' → logprob: -15.029769897460938
    10. 'input' → logprob: -15.904769897460938

Token 15: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04874780774116516
    2. '(input' → logprob: -3.0487477779388428
    3. '(N' → logprob: -9.548748016357422
    4. ' (' → logprob: -10.048748016357422
    5. '('' → logprob: -10.548748016357422
    6. '(
' → logprob: -11.923748016357422
    7. 'input' → logprob: -12.048748016357422
    8. '(`' → logprob: -13.048748016357422
    9. '()' → logprob: -13.548748016357422
    10. '(

' → logprob: -13.923748016357422

Token 16: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.2271086722612381
    2. ')' → logprob: -2.2271087169647217
    3. '()' → logprob: -2.3521087169647217
    4. '(' → logprob: -9.1021089553833
    5. ' ())' → logprob: -10.8521089553833
    6. '())
' → logprob: -12.3521089553833
    7. '().' → logprob: -12.3521089553833
    8. '`)' → logprob: -12.8521089553833
    9. '()))' → logprob: -13.1021089553833
    10. ' )' → logprob: -13.2271089553833

Token 17: 'xy' (ID: 6077)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.11255956441164017
    2. 'data' → logprob: -3.4875595569610596
    3. 'result' → logprob: -3.9875595569610596
    4. 'if' → logprob: -4.737559795379639
    5. 's' → logprob: -4.862559795379639
    6. ')' → logprob: -5.237559795379639
    7. ' for' → logprob: -5.362559795379639
    8. '\n' → logprob: -5.737559795379639
    9. 'a' → logprob: -5.862559795379639
    10. 'A' → logprob: -6.112559795379639

Token 18: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.12561632692813873
    2. '[' → logprob: -2.3756163120269775
    3. '[]' → logprob: -4.000616550445557
    4. '_' → logprob: -6.750616550445557
    5. '_list' → logprob: -6.875616550445557
    6. ' =' → logprob: -6.875616550445557
    7. '_pairs' → logprob: -6.875616550445557
    8. '=' → logprob: -7.625616550445557
    9. '_coords' → logprob: -7.625616550445557
    10. ')' → logprob: -8.000616073608398

Token 19: ' []
' (ID: 8911)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2660912871360779
    2. '[]' → logprob: -2.0160913467407227
    3. '[list' → logprob: -2.7660913467407227
    4. ' [' → logprob: -4.266091346740723
    5. ' []' → logprob: -4.641091346740723
    6. '[int' → logprob: -5.016091346740723
    7. '[x' → logprob: -6.266091346740723
    8. '[input' → logprob: -6.266091346740723
    9. '[List' → logprob: -7.391091346740723
    10. '[str' → logprob: -7.641091346740723

Token 20: 'sm' (ID: 5635)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.001965031959116459
    2. ' for' → logprob: -6.251965045928955
    3. '[' → logprob: -11.126964569091797
    4. '.for' → logprob: -12.126964569091797
    5. '[]' → logprob: -12.376964569091797
    6. '```' → logprob: -13.001964569091797
    7. '<|end|>' → logprob: -13.126964569091797
    8. 'x' → logprob: -13.376964569091797
    9. '
' → logprob: -14.001964569091797
    10. '[
' → logprob: -14.501964569091797

Token 21: ' =' (ID: 314)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.44116780161857605
    2. 'all' → logprob: -1.4411678314208984
    3. ' =' → logprob: -2.6911678314208984
    4. '=[]' → logprob: -3.6911678314208984
    5. '=' → logprob: -4.566167831420898
    6. 'al' → logprob: -5.566167831420898
    7. 'o' → logprob: -5.691167831420898
    8. 'aller' → logprob: -6.066167831420898
    9. '=a' → logprob: -6.566167831420898
    10. 'ary' → logprob: -6.941167831420898

Token 22: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06422710418701172
    2. ' ' → logprob: -2.9392271041870117
    3. '[' → logprob: -5.939227104187012
    4. ' []' → logprob: -6.064227104187012
    5. '[]' → logprob: -6.314227104187012
    6. ' [' → logprob: -6.439227104187012
    7. 'x' → logprob: -8.439227104187012
    8. '(' → logprob: -8.564227104187012
    9. '{}' → logprob: -9.564227104187012
    10. '+' → logprob: -9.689227104187012

Token 23: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.05578519403934479
    2. '[' → logprob: -3.5557851791381836
    3. '[]' → logprob: -4.180785179138184
    4. '{}' → logprob: -5.430785179138184
    5. 'set' → logprob: -6.805785179138184
    6. ' ' → logprob: -6.930785179138184
    7. 'math' → logprob: -7.180785179138184
    8. '{' → logprob: -7.555785179138184
    9. '[int' → logprob: -7.680785179138184
    10. 'x' → logprob: -8.055785179138184

Token 24: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0016057939501479268
    2. ' for' → logprob: -6.751605987548828
    3. '
' → logprob: -7.876605987548828
    4. '<|end|>' → logprob: -11.126605987548828
    5. '' → logprob: -11.626605987548828
    6. 'x' → logprob: -11.751605987548828
    7. '\' → logprob: -12.501605987548828
    8. 'f' → logprob: -12.501605987548828
    9. '\n' → logprob: -12.626605987548828
    10. '[' → logprob: -13.376605987548828

Token 25: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -5.455048449221067e-05
    2. ' for' → logprob: -9.875054359436035
    3. 'f' → logprob: -13.625054359436035
    4. '
' → logprob: -13.875054359436035
    5. '```' → logprob: -15.250054359436035
    6. 'x' → logprob: -15.500054359436035
    7. '\' → logprob: -16.75005531311035
    8. '	for' → logprob: -16.87505531311035
    9. '' → logprob: -17.00005531311035
    10. '\n' → logprob: -17.12505531311035

Token 26: ' _' (ID: 1175)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2039434015750885
    2. ' _' → logprob: -1.8289433717727661
    3. ' i' → logprob: -3.8289434909820557
    4. '_' → logprob: -6.328943252563477
    5. '  ' → logprob: -8.453943252563477
    6. 'i' → logprob: -9.203943252563477
    7. ' ' → logprob: -10.203943252563477
    8. ' ‌' → logprob: -11.078943252563477
    9. ' range' → logprob: -11.453943252563477
    10. ' ▁' → logprob: -12.203943252563477

Token 27: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0077033997513353825
    2. 'in' → logprob: -5.3827033042907715
    3. ' ' → logprob: -5.8827033042907715
    4. ' i' → logprob: -9.25770378112793
    5. 'range' → logprob: -10.00770378112793
    6. '  ' → logprob: -10.75770378112793
    7. 'i' → logprob: -10.88270378112793
    8. 'n' → logprob: -10.88270378112793
    9. ' _' → logprob: -10.88270378112793
    10. '_' → logprob: -11.50770378112793

Token 28: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5760339498519897
    2. ' range' → logprob: -0.8260339498519897
    3. ' xrange' → logprob: -10.951033592224121
    4. 'ran' → logprob: -11.326033592224121
    5. '(range' → logprob: -11.451033592224121
    6. '	range' → logprob: -11.701033592224121
    7. 'rang' → logprob: -11.826033592224121
    8. 'r' → logprob: -12.201033592224121
    9. '```' → logprob: -12.451033592224121
    10. ' ' → logprob: -12.451033592224121

Token 29: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.12671199440956116
    2. '(N' → logprob: -2.5017120838165283
    3. ' (' → logprob: -4.001711845397949
    4. ' N' → logprob: -4.126711845397949
    5. ' range' → logprob: -6.876711845397949
    6. '(range' → logprob: -6.876711845397949
    7. 'N' → logprob: -8.12671184539795
    8. '(n' → logprob: -9.37671184539795
    9. 'range' → logprob: -9.37671184539795
    10. ' ' → logprob: -10.12671184539795

Token 30: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.012380379252135754
    2. '):
' → logprob: -4.762380599975586
    3. ')' → logprob: -5.637380599975586
    4. ' ):' → logprob: -9.137380599975586
    5. ':' → logprob: -9.762380599975586
    6. '):
' → logprob: -11.137380599975586
    7. ',' → logprob: -12.137380599975586
    8. '+' → logprob: -13.137380599975586
    9. ' ' → logprob: -13.137380599975586
    10. ' ):
' → logprob: -13.637380599975586

Token 31: '   ' (ID: 271)
  Prédit: ' xy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' xy' → logprob: -0.09101753681898117
    2. '   ' → logprob: -2.591017484664917
    3. 'xy' → logprob: -4.966017723083496
    4. ' x' → logprob: -5.591017723083496
    5. '    ' → logprob: -7.466017723083496
    6. ' xyz' → logprob: -8.591017723083496
    7. 'x' → logprob: -8.591017723083496
    8. ' s' → logprob: -8.716017723083496
    9. ' ' → logprob: -9.216017723083496
    10. ' line' → logprob: -10.716017723083496

Token 32: ' xy' (ID: 53634)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.43237292766571045
    2. ' x' → logprob: -1.0573729276657104
    3. 'xy' (adapté à ' xy') → logprob: -5.932373046875
    4. ' xy' → logprob: -7.182373046875
    5. 's' → logprob: -9.682373046875
    6. '   ' → logprob: -9.807373046875
    7. ' s' → logprob: -10.557373046875
    8. ' ' → logprob: -10.807373046875
    9. ' line' → logprob: -11.182373046875
    10. 'xyz' → logprob: -11.307373046875

Token 33: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0001310719089815393
    2. '.' → logprob: -9.000130653381348
    3. '.app' → logprob: -12.500130653381348
    4. 'append' → logprob: -13.125130653381348
    5. '.extend' → logprob: -13.875130653381348
    6. ').' → logprob: -15.000130653381348
    7. '.ap' → logprob: -15.875130653381348
    8. ' .' → logprob: -16.250131607055664
    9. '.Append' → logprob: -16.250131607055664
    10. '_append' → logprob: -16.375131607055664

Token 34: '(list' (ID: 13116)
  Prédit: '(tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tuple' → logprob: -0.3936147689819336
    2. '(list' → logprob: -1.1436147689819336
    3. '(' → logprob: -5.018614768981934
    4. '((' → logprob: -10.018614768981934
    5. 'tuple' → logprob: -10.768614768981934
    6. '(map' → logprob: -11.518614768981934
    7. '(int' → logprob: -12.018614768981934
    8. '(float' → logprob: -12.268614768981934
    9. 'list' → logprob: -12.268614768981934
    10. '(eval' → logprob: -12.643614768981934

Token 35: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -6.825890159234405e-05
    2. '(' → logprob: -9.750068664550781
    3. '(input' → logprob: -11.875068664550781
    4. 'map' → logprob: -13.250068664550781
    5. '(int' → logprob: -14.750068664550781
    6. '((' → logprob: -15.500068664550781
    7. ' map' → logprob: -16.00006866455078
    8. '(list' → logprob: -16.00006866455078
    9. '(tuple' → logprob: -16.12506866455078
    10. '(float' → logprob: -16.25006866455078

Token 36: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0002491807099431753
    2. '(lambda' → logprob: -9.375248908996582
    3. '(' → logprob: -9.500248908996582
    4. '(float' → logprob: -9.750248908996582
    5. 'int' → logprob: -11.250248908996582
    6. '<int' → logprob: -12.250248908996582
    7. '(str' → logprob: -12.625248908996582
    8. '(input' → logprob: -13.000248908996582
    9. ',int' → logprob: -13.250248908996582
    10. '[int' → logprob: -13.875248908996582

Token 37: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.011032256297767162
    2. ',input' → logprob: -5.1360321044921875
    3. '(' → logprob: -5.8860321044921875
    4. 'input' → logprob: -6.1360321044921875
    5. ',' → logprob: -9.511032104492188
    6. ' input' → logprob: -10.261032104492188
    7. ')' → logprob: -11.011032104492188
    8. '=input' → logprob: -11.761032104492188
    9. '(
' → logprob: -12.511032104492188
    10. ' (' → logprob: -12.886032104492188

Token 38: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.009760221466422081
    2. ' input' → logprob: -4.63476037979126
    3. '(input' → logprob: -12.634759902954102
    4. ',input' → logprob: -15.384759902954102
    5. '<input' → logprob: -16.0097599029541
    6. '	input' → logprob: -16.0097599029541
    7. '=input' → logprob: -16.1347599029541
    8. '))' → logprob: -16.3847599029541
    9. '
' → logprob: -16.3847599029541
    10. ' ' → logprob: -16.7597599029541

Token 39: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.8802491215174086e-05
    2. '()' → logprob: -10.500028610229492
    3. '())))' → logprob: -13.875028610229492
    4. '()))' → logprob: -15.875028610229492
    5. ' ().' → logprob: -16.375028610229492
    6. '(' → logprob: -17.625028610229492
    7. '())' → logprob: -17.750028610229492
    8. 'split' → logprob: -18.000028610229492
    9. '.split' → logprob: -18.375028610229492
    10. '.readline' → logprob: -18.625028610229492

Token 40: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.007145359646528959
    2. 'strip' → logprob: -5.007145404815674
    3. 'rstrip' → logprob: -7.757145404815674
    4. ' split' → logprob: -13.382144927978516
    5. '(split' → logprob: -14.632144927978516
    6. 'rs' → logprob: -16.882144927978516
    7. 'spl' → logprob: -17.507144927978516
    8. ' strip' → logprob: -17.507144927978516
    9. ' ' → logprob: -17.632144927978516
    10. 's' → logprob: -18.007144927978516

Token 41: '())))
' (ID: 129187)
  Prédit: '())))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())))' → logprob: -0.252817302942276
    2. ')))' → logprob: -1.7528172731399536
    3. '()))' → logprob: -3.627817392349243
    4. '()' → logprob: -4.002817153930664
    5. '())' → logprob: -5.502817153930664
    6. ')' → logprob: -8.002817153930664
    7. '())))
' → logprob: -8.002817153930664
    8. '(' → logprob: -8.127817153930664
    9. '))' → logprob: -9.002817153930664
    10. '))))' → logprob: -9.502817153930664

Token 42: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6730598211288452
    2. 'xy' → logprob: -1.0480598211288452
    3. 'sm' → logprob: -3.1730599403381348
    4. ' for' → logprob: -3.2980599403381348
    5. '
' → logprob: -3.5480599403381348
    6. '```' → logprob: -4.673059940338135
    7. ' 
' → logprob: -5.173059940338135
    8. '  
' → logprob: -5.423059940338135
    9. ')' → logprob: -6.423059940338135
    10. '    
' → logprob: -6.548059940338135

Token 43: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.006284729111939669
    2. 'i' → logprob: -5.881284713745117
    3. ' range' → logprob: -6.006284713745117
    4. ' xy' → logprob: -7.631284713745117
    5. ' ' → logprob: -8.756284713745117
    6. 'range' → logprob: -8.881284713745117
    7. ' _' → logprob: -8.881284713745117
    8. ' x' → logprob: -10.381284713745117
    9. ' (' → logprob: -11.756284713745117
    10. '(i' → logprob: -12.006284713745117

Token 44: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06260859221220016
    2. 'in' → logprob: -2.812608480453491
    3. ' ' → logprob: -7.81260871887207
    4. '+' → logprob: -9.31260871887207
    5. ',' → logprob: -9.68760871887207
    6. 'range' → logprob: -10.43760871887207
    7. '	in' → logprob: -11.31260871887207
    8. '   ' → logprob: -11.68760871887207
    9. '  ' → logprob: -11.93760871887207
    10. ' i' → logprob: -12.18760871887207

Token 45: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.03804505243897438
    2. 'range' → logprob: -3.2880451679229736
    3. ' ' → logprob: -13.163044929504395
    4. ' xrange' → logprob: -13.788044929504395
    5. '(range' → logprob: -15.288044929504395
    6. '  ' → logprob: -15.413044929504395
    7. '	range' → logprob: -16.28804588317871
    8. ' ran' → logprob: -17.41304588317871
    9. '   ' → logprob: -17.78804588317871
    10. ' rang' → logprob: -18.03804588317871

Token 46: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6967108249664307
    2. '(N' → logprob: -0.6967108249664307
    3. ' (' → logprob: -6.321710586547852
    4. '(len' → logprob: -6.821710586547852
    5. ' ' → logprob: -7.821710586547852
    6. ' N' → logprob: -8.946710586547852
    7. '(n' → logprob: -9.946710586547852
    8. ' range' → logprob: -10.196710586547852
    9. '(range' → logprob: -10.196710586547852
    10. '(s' → logprob: -11.946710586547852

Token 47: '):
' (ID: 1883)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.20785145461559296
    2. ' -' → logprob: -1.8328514099121094
    3. '):' → logprob: -4.207851409912109
    4. '+' → logprob: -4.582851409912109
    5. '):
' → logprob: -6.207851409912109
    6. ' +' → logprob: -8.33285140991211
    7. ' ' → logprob: -9.08285140991211
    8. ')' → logprob: -9.45785140991211
    9. ' ):' → logprob: -9.58285140991211
    10. '   ' → logprob: -10.08285140991211

Token 48: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24305666983127594
    2. ' for' → logprob: -1.6180566549301147
    3. 'for' → logprob: -4.993056774139404
    4. '    ' → logprob: -5.243056774139404
    5. ' ' → logprob: -5.743056774139404
    6. ' sm' → logprob: -7.618056774139404
    7. '  ' → logprob: -7.868056774139404
    8. ',' → logprob: -8.368056297302246
    9. '	for' → logprob: -8.368056297302246
    10. '   ' → logprob: -8.493056297302246

Token 49: ' now' (ID: 1954)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.1683962643146515
    2. ' sm' → logprob: -2.293396234512329
    3. 'for' → logprob: -3.293396234512329
    4. '   ' → logprob: -4.168396472930908
    5. 'sm' → logprob: -7.543396472930908
    6. '    ' → logprob: -8.16839599609375
    7. ' xy' → logprob: -8.79339599609375
    8. ' x' → logprob: -9.41839599609375
    9. ' ' → logprob: -9.41839599609375
    10. ' j' → logprob: -9.54339599609375

Token 50: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.5080941319465637
    2. 'x' → logprob: -1.133094072341919
    3. ' =' → logprob: -2.883094072341919
    4. '=' → logprob: -4.633094310760498
    5. '_' → logprob: -5.633094310760498
    6. '[' → logprob: -5.758094310760498
    7. '   ' → logprob: -7.383094310760498
    8. ' x' → logprob: -7.758094310760498
    9. ' ' → logprob: -7.883094310760498
    10. ',' → logprob: -8.00809383392334

Token 51: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008498270064592361
    2. ' =' → logprob: -5.258498191833496
    3. ' ,' → logprob: -6.008498191833496
    4. '=' → logprob: -7.258498191833496
    5. ',next' → logprob: -9.758498191833496
    6. '[now' → logprob: -11.508498191833496
    7. '_,' → logprob: -12.258498191833496
    8. ' ' → logprob: -12.633498191833496
    9. '_now' → logprob: -12.633498191833496
    10. ' now' → logprob: -12.883498191833496

Token 52: ' xy' (ID: 53634)
  Prédit: 'xy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xy' → logprob: -0.033685121685266495
    2. ' xy' → logprob: -3.4086852073669434
    3. '   ' → logprob: -10.908684730529785
    4. ' ' → logprob: -12.158684730529785
    5. '0' → logprob: -12.283684730529785
    6. '_xy' → logprob: -13.033684730529785
    7. '  ' → logprob: -13.283684730529785
    8. 'sm' → logprob: -13.283684730529785
    9. 'x' → logprob: -13.533684730529785
    10. 'xyz' → logprob: -14.158684730529785

Token 53: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0003410647332202643
    2. '[' → logprob: -8.000341415405273
    3. '][' → logprob: -13.500341415405273
    4. '[I' → logprob: -14.250341415405273
    5. '[min' → logprob: -14.500341415405273
    6. '[j' → logprob: -14.500341415405273
    7. '\[' → logprob: -14.875341415405273
    8. '[s' → logprob: -15.125341415405273
    9. '```' → logprob: -15.375341415405273
    10. '[max' → logprob: -15.375341415405273

Token 54: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00011903966515092179
    2. '[' → logprob: -9.37511920928955
    3. ']' → logprob: -11.12511920928955
    4. ' ][' → logprob: -11.50011920928955
    5. '0' → logprob: -12.37511920928955
    6. '   ' → logprob: -13.62511920928955
    7. '+' → logprob: -13.62511920928955
    8. '-' → logprob: -13.87511920928955
    9. ' ' → logprob: -15.25011920928955
    10. '	' → logprob: -15.75011920928955

Token 55: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00018887832993641496
    2. ' ' → logprob: -8.625188827514648
    3. '1' → logprob: -11.875188827514648
    4. ']' → logprob: -13.375188827514648
    5. '   ' → logprob: -15.875188827514648
    6. '])' → logprob: -16.25018882751465
    7. ')' → logprob: -16.62518882751465
    8. '۰' → logprob: -16.87518882751465
    9. ' ]' → logprob: -17.06268882751465
    10. '  ' → logprob: -17.06268882751465

Token 56: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.31387782096862793
    2. ')' → logprob: -1.438877820968628
    3. '+' → logprob: -3.938877820968628
    4. '])' → logprob: -5.438878059387207
    5. ' ]' → logprob: -6.313878059387207
    6. '-' → logprob: -6.438878059387207
    7. ' )' → logprob: -6.563878059387207
    8. '   ' → logprob: -7.063878059387207
    9. ' +' → logprob: -7.813878059387207
    10. ']+' → logprob: -7.938878059387207

Token 57: '   ' (ID: 271)
  Prédit: ' now'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' now' → logprob: -0.591747522354126
    2. '   ' → logprob: -1.216747522354126
    3. 'now' → logprob: -2.216747522354126
    4. ' for' → logprob: -4.091747283935547
    5. 'for' → logprob: -5.216747283935547
    6. '[now' → logprob: -5.216747283935547
    7. ' ' → logprob: -5.591747283935547
    8. '	now' → logprob: -5.841747283935547
    9. '  ' → logprob: -6.716747283935547
    10. '    ' → logprob: -6.841747283935547

Token 58: ' now' (ID: 1954)
  Prédit: 'now'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'now' (adapté à ' now') → logprob: -0.009856191463768482
    2. ' now' → logprob: -4.634856224060059
    3. 'for' → logprob: -9.884856224060059
    4. '   ' → logprob: -11.009856224060059
    5. ' ' → logprob: -12.134856224060059
    6. '	now' → logprob: -12.384856224060059
    7. '[now' → logprob: -12.634856224060059
    8. 'y' → logprob: -12.634856224060059
    9. 'n' → logprob: -13.259856224060059
    10. '_now' → logprob: -13.259856224060059

Token 59: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -3.5358694731257856e-05
    2. '_x' → logprob: -11.000035285949707
    3. '_' → logprob: -11.250035285949707
    4. 'y' → logprob: -13.250035285949707
    5. ' _' → logprob: -13.375035285949707
    6. '   ' → logprob: -14.250035285949707
    7. ']_' → logprob: -15.000035285949707
    8. '_j' → logprob: -15.375035285949707
    9. ' ' → logprob: -15.375035285949707
    10. '_i' → logprob: -15.625035285949707

Token 60: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14269374310970306
    2. '=' → logprob: -2.0176937580108643
    3. '<|end|>' → logprob: -11.642693519592285
    4. ' ' → logprob: -12.392693519592285
    5. ')' → logprob: -12.517693519592285
    6. '<|end|>' → logprob: -14.642693519592285
    7. ',' → logprob: -15.142693519592285
    8. '   ' → logprob: -15.267693519592285
    9. ' ' → logprob: -15.392693519592285
    10. ']' → logprob: -15.767693519592285

Token 61: ' xy' (ID: 53634)
  Prédit: 'xy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xy' → logprob: -0.6326166987419128
    2. ' xy' → logprob: -0.7576166987419128
    3. ' ' → logprob: -12.257616996765137
    4. '.xy' → logprob: -12.382616996765137
    5. '   ' → logprob: -12.757616996765137
    6. '_xy' → logprob: -12.757616996765137
    7. '0' → logprob: -14.757616996765137
    8. ' now' → logprob: -14.882616996765137
    9. '(x' → logprob: -15.007616996765137
    10. 'xyz' → logprob: -15.132616996765137

Token 62: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0036630146205425262
    2. '][' → logprob: -5.628663063049316
    3. '[' → logprob: -9.753663063049316
    4. 'i' → logprob: -13.628663063049316
    5. '[I' → logprob: -14.503663063049316
    6. '```' → logprob: -14.503663063049316
    7. ']' → logprob: -14.628663063049316
    8. '[][' → logprob: -14.753663063049316
    9. ')[' → logprob: -15.003663063049316
    10. ' ][' → logprob: -15.378663063049316

Token 63: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00021366903092712164
    2. '[' → logprob: -9.875213623046875
    3. ']' → logprob: -10.125213623046875
    4. ' ][' → logprob: -10.375213623046875
    5. '+' → logprob: -10.625213623046875
    6. '   ' → logprob: -11.000213623046875
    7. ']][' → logprob: -11.250213623046875
    8. '-' → logprob: -11.250213623046875
    9. ')][' → logprob: -12.125213623046875
    10. '1' → logprob: -12.500213623046875

Token 64: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.033657919615507126
    2. '0' → logprob: -3.408658027648926
    3. ' ' → logprob: -12.033658027648926
    4. ']' → logprob: -12.158658027648926
    5. '][' → logprob: -15.283658027648926
    6. 'i' → logprob: -15.533658027648926
    7. '])' → logprob: -15.908658027648926
    8. '```' → logprob: -15.908658027648926
    9. '-' → logprob: -16.78365707397461
    10. ')' → logprob: -17.53365707397461

Token 65: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00701597984880209
    2. '+' → logprob: -5.507016181945801
    3. '   ' → logprob: -6.507016181945801
    4. ')
' → logprob: -6.632016181945801
    5. ' )' → logprob: -10.6320161819458
    6. '-' → logprob: -11.1320161819458
    7. ']' → logprob: -11.2570161819458
    8. ' +' → logprob: -11.6320161819458
    9. '))' → logprob: -11.6320161819458
    10. '+
' → logprob: -11.8820161819458

Token 66: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.48283877968788147
    2. 'for' → logprob: -1.107838749885559
    3. ' for' → logprob: -2.9828388690948486
    4. 'sm' → logprob: -6.9828386306762695
    5. '	for' → logprob: -8.10783863067627
    6. 's' → logprob: -8.73283863067627
    7. ' ' → logprob: -8.85783863067627
    8. '  ' → logprob: -8.85783863067627
    9. ',' → logprob: -9.10783863067627
    10. '    ' → logprob: -9.98283863067627

Token 67: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.005186913069337606
    2. 'sm' → logprob: -6.005187034606934
    3. 'j' → logprob: -7.130187034606934
    4. ' for' → logprob: -7.130187034606934
    5. '   ' → logprob: -7.380187034606934
    6. 'if' → logprob: -8.880187034606934
    7. 's' → logprob: -10.130187034606934
    8. 'min' → logprob: -10.505187034606934
    9. 'next' → logprob: -10.505187034606934
    10. 'dist' → logprob: -10.505187034606934

Token 68: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.185129314661026
    2. ' range' → logprob: -1.8101292848587036
    3. 'range' → logprob: -5.435129165649414
    4. 'j' → logprob: -6.935129165649414
    5. ' ' → logprob: -10.810129165649414
    6. '```' → logprob: -12.810129165649414
    7. '  ' → logprob: -13.185129165649414
    8. '_j' → logprob: -13.185129165649414
    9. '(range' → logprob: -13.435129165649414
    10. '>' → logprob: -14.060129165649414

Token 69: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.014090980403125286
    2. 'in' → logprob: -4.3890910148620605
    3. ' range' → logprob: -7.0140910148620605
    4. ' ' → logprob: -7.5140910148620605
    5. 'range' → logprob: -9.014090538024902
    6. '   ' → logprob: -12.389090538024902
    7. '<|end|>' → logprob: -13.014090538024902
    8. '  ' → logprob: -13.514090538024902
    9. ' i' → logprob: -13.889090538024902
    10. ',' → logprob: -14.139090538024902

Token 70: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.12693609297275543
    2. 'range' → logprob: -2.126936197280884
    3. '(range' → logprob: -12.626935958862305
    4. '	range' → logprob: -12.876935958862305
    5. ' xrange' → logprob: -13.501935958862305
    6. ' ' → logprob: -15.001935958862305
    7. 'rang' → logprob: -15.751935958862305
    8. ' ran' → logprob: -16.251935958862305
    9. 'ran' → logprob: -16.501935958862305
    10. '.range' → logprob: -16.501935958862305

Token 71: '(N' (ID: 10564)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.011706073768436909
    2. 'range' → logprob: -4.6367058753967285
    3. '(range' → logprob: -6.2617058753967285
    4. ' in' → logprob: -11.261706352233887
    5. '	range' → logprob: -11.511706352233887
    6. ' ' → logprob: -12.011706352233887
    7. ' (' → logprob: -12.136706352233887
    8. ' xrange' → logprob: -12.636706352233887
    9. '(' → logprob: -14.011706352233887
    10. ')' → logprob: -14.136706352233887

Token 72: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.043627381324768066
    2. '):
' → logprob: -3.1686272621154785
    3. '+' → logprob: -7.7936272621154785
    4. ':' → logprob: -9.293627738952637
    5. ')' → logprob: -9.793627738952637
    6. '   ' → logprob: -11.293627738952637
    7. '):

' → logprob: -11.293627738952637
    8. ' ):' → logprob: -11.668627738952637
    9. '):
' → logprob: -11.918627738952637
    10. 'if' → logprob: -12.543627738952637

Token 73: '       ' (ID: 309)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.07266204059123993
    2. '    ' → logprob: -2.822662115097046
    3. ' if' → logprob: -5.822661876678467
    4. '<|end|>' → logprob: -5.947661876678467
    5. '   ' → logprob: -6.947661876678467
    6. ' 
' → logprob: -7.322661876678467
    7. '       ' → logprob: -7.322661876678467
    8. 'if' → logprob: -7.697661876678467
    9. '  ' → logprob: -7.822661876678467
    10. ' ' → logprob: -7.947661876678467

Token 74: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.05654049664735794
    2. 'if' (adapté à ' if') → logprob: -3.3065404891967773
    3. ' ' → logprob: -4.681540489196777
    4. '    ' → logprob: -5.056540489196777
    5. 'x' → logprob: -7.556540489196777
    6. ' ' → logprob: -7.681540489196777
    7. '       ' → logprob: -7.806540489196777
    8. ' x' → logprob: -8.556540489196777
    9. '        ' → logprob: -8.556540489196777
    10. '   ' → logprob: -8.681540489196777

Token 75: ' j' (ID: 441)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.11556919664144516
    2. 'i' → logprob: -2.2405691146850586
    3. ' j' → logprob: -6.990569114685059
    4. 'j' → logprob: -7.115569114685059
    5. ' ' → logprob: -8.115569114685059
    6. ' not' → logprob: -8.615569114685059
    7. '(i' → logprob: -8.740569114685059
    8. ' now' → logprob: -9.115569114685059
    9. '	i' → logprob: -9.115569114685059
    10. '   ' → logprob: -10.490569114685059

Token 76: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.5029006600379944
    2. '!=' → logprob: -1.0029006004333496
    3. '==' → logprob: -4.25290060043335
    4. ' ==' → logprob: -4.37790060043335
    5. '>' → logprob: -7.00290060043335
    6. ' >' → logprob: -7.75290060043335
    7. ' ' → logprob: -9.502901077270508
    8. '=' → logprob: -9.752901077270508
    9. '<=' → logprob: -10.377901077270508
    10. '<' → logprob: -10.627901077270508

Token 77: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.009773559868335724
    2. ' i' → logprob: -4.6347737312316895
    3. ' ' → logprob: -11.134773254394531
    4. '	i' → logprob: -13.634773254394531
    5. ' ' → logprob: -14.759773254394531
    6. '_i' → logprob: -15.134773254394531
    7. '   ' → logprob: -15.134773254394531
    8. '  ' → logprob: -15.259773254394531
    9. '0' → logprob: -15.384773254394531
    10. 'now' → logprob: -16.88477325439453

Token 78: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005086225923150778
    2. ':
' → logprob: -5.380086421966553
    3. ' and' → logprob: -7.755086421966553
    4. '           ' → logprob: -11.255085945129395
    5. ' :' → logprob: -11.755085945129395
    6. 'and' → logprob: -12.005085945129395
    7. '):' → logprob: -12.505085945129395
    8. '       ' → logprob: -12.880085945129395
    9. ':

' → logprob: -13.630085945129395
    10. ',' → logprob: -14.755085945129395

Token 79: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.15920162200927734
    2. ':' → logprob: -2.0342016220092773
    3. ':
' → logprob: -4.909201622009277
    4. '            
' → logprob: -6.034201622009277
    5. '       ' → logprob: -6.409201622009277
    6. '               ' → logprob: -7.159201622009277
    7. '
' → logprob: -7.159201622009277
    8. ' and' → logprob: -7.284201622009277
    9. '          ' → logprob: -7.784201622009277
    10. '            ' → logprob: -8.159201622009277

Token 80: ' sm' (ID: 1765)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.47325053811073303
    2. 'sm' (adapté à ' sm') → logprob: -1.2232505083084106
    3. ' dx' → logprob: -3.0982506275177
    4. 'dist' → logprob: -4.473250389099121
    5. ' sm' → logprob: -4.473250389099121
    6. 'x' → logprob: -4.973250389099121
    7. '           ' → logprob: -6.223250389099121
    8. '   ' → logprob: -6.723250389099121
    9. ' dist' → logprob: -6.973250389099121
    10. 'diff' → logprob: -6.973250389099121

Token 81: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.20180964469909668
    2. ' +=' → logprob: -1.7018096446990967
    3. '+' → logprob: -8.201809883117676
    4. '=' → logprob: -9.701809883117676
    5. '+=(' → logprob: -10.326809883117676
    6. ' =' → logprob: -11.826809883117676
    7. '   ' → logprob: -12.326809883117676
    8. ' +' → logprob: -12.701809883117676
    9. ']+=' → logprob: -12.701809883117676
    10. '	' → logprob: -12.951809883117676

Token 82: ' math' (ID: 13324)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.079053595662117
    2. 'abs' → logprob: -2.8290536403656006
    3. '(math' → logprob: -4.8290534019470215
    4. ' math' → logprob: -5.5790534019470215
    5. 'max' → logprob: -5.7040534019470215
    6. '(abs' → logprob: -7.2040534019470215
    7. '((' → logprob: -8.07905387878418
    8. ' abs' → logprob: -8.32905387878418
    9. 'min' → logprob: -9.20405387878418
    10. '(max' → logprob: -9.20405387878418

Token 83: '.sqrt' (ID: 38011)
  Prédit: '.sqrt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sqrt' → logprob: -0.14869585633277893
    2. '.dist' → logprob: -2.148695945739746
    3. '.h' → logprob: -3.898695945739746
    4. '.' → logprob: -6.898695945739746
    5. '.s' → logprob: -8.648695945739746
    6. '.atan' → logprob: -10.273695945739746
    7. '.f' → logprob: -10.398695945739746
    8. '.pow' → logprob: -12.023695945739746
    9. '.inf' → logprob: -13.273695945739746
    10. '.Sqrt' → logprob: -13.648695945739746

Token 84: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0022000980097800493
    2. '(' → logprob: -6.127200126647949
    3. '(pow' → logprob: -12.25220012664795
    4. '(abs' → logprob: -12.62720012664795
    5. ' ((' → logprob: -12.75220012664795
    6. '(
' → logprob: -12.87720012664795
    7. '```' → logprob: -14.25220012664795
    8. ' (' → logprob: -14.75220012664795
    9. '(((' → logprob: -15.37720012664795
    10. '(

' → logprob: -17.252199172973633

Token 85: 'now' (ID: 6201)
  Prédit: 'now'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'now' → logprob: -0.3742239773273468
    2. '(now' → logprob: -1.3742239475250244
    3. '(x' → logprob: -3.1242239475250244
    4. 'xy' → logprob: -4.6242241859436035
    5. ' now' → logprob: -5.8742241859436035
    6. 'x' → logprob: -7.2492241859436035
    7. 'abs' → logprob: -7.7492241859436035
    8. ' (' → logprob: -7.9992241859436035
    9. '(nx' → logprob: -8.249223709106445
    10. '(' → logprob: -8.499223709106445

Token 86: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -5.438573680294212e-06
    2. 'x' → logprob: -12.250005722045898
    3. '_' → logprob: -14.875005722045898
    4. '-_' → logprob: -17.0000057220459
    5. '_y' → logprob: -17.3750057220459
    6. ' _' → logprob: -17.8750057220459
    7. '-x' → logprob: -18.2500057220459
    8. '```' → logprob: -18.6250057220459
    9. ' -' → logprob: -18.7500057220459
    10. 's' → logprob: -19.3750057220459

Token 87: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.3868979811668396
    2. '-' → logprob: -1.1368980407714844
    3. '-x' → logprob: -10.636898040771484
    4. '-now' → logprob: -13.636898040771484
    5. ' ' → logprob: -15.136898040771484
    6. ' ' → logprob: -15.386898040771484
    7. '	' → logprob: -15.511898040771484
    8. '-p' → logprob: -15.636898040771484
    9. '-xl' → logprob: -15.761898040771484
    10. '   ' → logprob: -15.761898040771484

Token 88: ' xy' (ID: 53634)
  Prédit: 'xy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xy' → logprob: -0.47408756613731384
    2. ' xy' → logprob: -0.9740875959396362
    3. ' ' → logprob: -13.099087715148926
    4. '<|end|>' → logprob: -13.099087715148926
    5. '_xy' → logprob: -13.224087715148926
    6. 'xyz' → logprob: -13.349087715148926
    7. 'x' → logprob: -13.599087715148926
    8. '.xy' → logprob: -14.599087715148926
    9. ' xyz' → logprob: -15.099087715148926
    10. ' x' → logprob: -15.224087715148926

Token 89: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -9.372294698550832e-06
    2. '[' → logprob: -11.750009536743164
    3. ' [' → logprob: -14.750009536743164
    4. '][' → logprob: -14.875009536743164
    5. '[i' → logprob: -15.125009536743164
    6. ')[' → logprob: -15.500009536743164
    7. '```' → logprob: -16.750009536743164
    8. 'j' → logprob: -17.375009536743164
    9. '[s' → logprob: -17.625009536743164
    10. '[js' → logprob: -18.000009536743164

Token 90: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.048843398690223694
    2. '[' → logprob: -3.0488433837890625
    3. ')[' → logprob: -9.423843383789062
    4. ' ][' → logprob: -9.673843383789062
    5. ']' → logprob: -10.048843383789062
    6. ' [' → logprob: -10.923843383789062
    7. '}[' → logprob: -11.423843383789062
    8. '0' → logprob: -11.673843383789062
    9. '>[' → logprob: -11.673843383789062
    10. '   ' → logprob: -12.423843383789062

Token 91: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0019331586081534624
    2. '[' → logprob: -6.2519330978393555
    3. ' ' → logprob: -12.626933097839355
    4. '][' → logprob: -14.001933097839355
    5. '   ' → logprob: -15.376933097839355
    6. '1' → logprob: -16.751934051513672
    7. 'x' → logprob: -16.876934051513672
    8. ' [' → logprob: -17.001934051513672
    9. '```' → logprob: -17.251934051513672
    10. '[][' → logprob: -18.064434051513672

Token 92: '])' (ID: 4636)
  Prédit: ')**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')**' → logprob: -0.25216200947761536
    2. ')' → logprob: -1.502161979675293
    3. ' )' → logprob: -8.377161979675293
    4. '   ' → logprob: -14.002161979675293
    5. ' ' → logprob: -14.877161979675293
    6. ')*' → logprob: -14.877161979675293
    7. ')`' → logprob: -15.252161979675293
    8. '**' → logprob: -15.377161979675293
    9. '）' → logprob: -15.752161979675293
    10. '`)' → logprob: -15.752161979675293

Token 93: ' **' (ID: 6240)
  Prédit: ')**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')**' → logprob: -0.04876767098903656
    2. ')' → logprob: -3.048767566680908
    3. '**' → logprob: -8.798768043518066
    4. ' )' → logprob: -10.548768043518066
    5. ')*' → logprob: -13.923768043518066
    6. '**)' → logprob: -13.923768043518066
    7. '   ' → logprob: -15.423768043518066
    8. ' **' → logprob: -15.548768043518066
    9. '```' → logprob: -15.798768043518066
    10. ' ' → logprob: -15.798768043518066

Token 94: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.008616226725280285
    2. ' ' → logprob: -4.7586164474487305
    3. '  ' → logprob: -15.13361644744873
    4. '(' → logprob: -15.13361644744873
    5. '<|end|>' → logprob: -15.25861644744873
    6. '۲' → logprob: -15.38361644744873
    7. '```' → logprob: -15.75861644744873
    8. '   ' → logprob: -15.88361644744873
    9. '２' → logprob: -16.258615493774414
    10. ')' → logprob: -16.383615493774414

Token 95: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00012928384239785373
    2. ' ' → logprob: -9.000129699707031
    3. '22' → logprob: -14.000129699707031
    4. '   ' → logprob: -14.375129699707031
    5. '21' → logprob: -14.375129699707031
    6. '```' → logprob: -15.187629699707031
    7. '1' → logprob: -15.250129699707031
    8. '  ' → logprob: -15.312629699707031
    9. '212' → logprob: -15.375129699707031
    10. '27' → logprob: -15.625129699707031

Token 96: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3869006633758545
    2. ' +' → logprob: -1.1369006633758545
    3. '+(' → logprob: -10.636900901794434
    4. ' +(' → logprob: -13.136900901794434
    5. ' ' → logprob: -13.511900901794434
    6. '+
' → logprob: -14.261900901794434
    7. '   ' → logprob: -14.511900901794434
    8. ' +
' → logprob: -15.136900901794434
    9. '           ' → logprob: -15.386900901794434
    10. '          ' → logprob: -15.761900901794434

Token 97: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.011072466149926186
    2. '(now' → logprob: -4.511072635650635
    3. '(n' → logprob: -12.136072158813477
    4. '(' → logprob: -12.136072158813477
    5. ' ' → logprob: -12.511072158813477
    6. '  ' → logprob: -12.636072158813477
    7. '[now' → logprob: -12.761072158813477
    8. '   ' → logprob: -13.886072158813477
    9. '(next' → logprob: -14.136072158813477
    10. '    ' → logprob: -14.511072158813477

Token 98: 'now' (ID: 6201)
  Prédit: '(now'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(now' → logprob: -0.14679867029190063
    2. 'now' → logprob: -2.146798610687256
    3. ' now' → logprob: -4.146798610687256
    4. '[now' → logprob: -5.896798610687256
    5. ' (' → logprob: -6.896798610687256
    6. '	now' → logprob: -9.896799087524414
    7. '(' → logprob: -10.646799087524414
    8. '.now' → logprob: -11.646799087524414
    9. '<|end|>' → logprob: -11.771799087524414
    10. ')' → logprob: -13.396799087524414

Token 99: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -3.690834273584187e-05
    2. 'y' → logprob: -10.25003719329834
    3. '_j' → logprob: -13.87503719329834
    4. '_x' → logprob: -15.37503719329834
    5. '-y' → logprob: -15.87503719329834
    6. '_' → logprob: -16.125036239624023
    7. '[' → logprob: -17.375036239624023
    8. '```' → logprob: -17.750036239624023
    9. '_py' → logprob: -18.000036239624023
    10. 'Y' → logprob: -18.875036239624023

Token 100: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.04858805239200592
    2. '-' → logprob: -3.0485880374908447
    3. ' ' → logprob: -14.923587799072266
    4. ')' → logprob: -16.298587799072266
    5. '<|end|>' → logprob: -16.423587799072266
    6. '[' → logprob: -17.173587799072266
    7. ' ' → logprob: -17.173587799072266
    8. '–' → logprob: -17.423587799072266
    9. '<|end|>' → logprob: -18.173587799072266
    10. '−' → logprob: -18.298587799072266

Token 101: ' xy' (ID: 53634)
  Prédit: 'xy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xy' → logprob: -0.16046053171157837
    2. ' xy' → logprob: -1.9104604721069336
    3. ' now' → logprob: -8.910460472106934
    4. 'now' → logprob: -9.910460472106934
    5. '_xy' → logprob: -10.910460472106934
    6. ' ' → logprob: -11.285460472106934
    7. 'y' → logprob: -12.660460472106934
    8. ' y' → logprob: -13.035460472106934
    9. '.xy' → logprob: -13.035460472106934
    10. '(x' → logprob: -13.285460472106934

Token 102: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.5314459800720215
    2. '][' → logprob: -0.9064459800720215
    3. '[' → logprob: -4.9064459800720215
    4. '1' → logprob: -8.53144645690918
    5. '```' → logprob: -9.03144645690918
    6. 'j' → logprob: -9.28144645690918
    7. '[][' → logprob: -9.53144645690918
    8. ']' → logprob: -9.65644645690918
    9. ' ][' → logprob: -9.78144645690918
    10. ''][' → logprob: -9.90644645690918

Token 103: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0005047772428952157
    2. '[' → logprob: -7.625504970550537
    3. '1' → logprob: -12.250504493713379
    4. ']' → logprob: -12.500504493713379
    5. ' ][' → logprob: -13.125504493713379
    6. ']][' → logprob: -13.625504493713379
    7. ''][' → logprob: -13.875504493713379
    8. '"][' → logprob: -14.000504493713379
    9. ')[' → logprob: -14.500504493713379
    10. '   ' → logprob: -14.625504493713379

Token 104: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.36574100604048e-06
    2. '[' → logprob: -13.375004768371582
    3. '][' → logprob: -13.500004768371582
    4. '0' → logprob: -15.000004768371582
    5. '
' → logprob: -15.625004768371582
    6. ' ' → logprob: -15.687504768371582
    7. '```' → logprob: -15.750004768371582
    8. '])' → logprob: -16.062503814697266
    9. ']' → logprob: -16.062503814697266
    10. '-' → logprob: -16.187503814697266

Token 105: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.25295644998550415
    2. '])' → logprob: -1.7529563903808594
    3. ']' → logprob: -3.2529563903808594
    4. '[' → logprob: -5.252956390380859
    5. ')**' → logprob: -5.252956390380859
    6. ']))' → logprob: -8.50295639038086
    7. '))' → logprob: -8.50295639038086
    8. ')])' → logprob: -8.62795639038086
    9. '][' → logprob: -8.87795639038086
    10. '**' → logprob: -9.12795639038086

Token 106: ' **' (ID: 6240)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.021980026736855507
    2. '**' → logprob: -4.021979808807373
    3. ' ' → logprob: -5.896979808807373
    4. ' **' → logprob: -7.021979808807373
    5. ')' → logprob: -9.021980285644531
    6. '**)' → logprob: -11.271980285644531
    7. ' **)' → logprob: -11.271980285644531
    8. '))' → logprob: -11.771980285644531
    9. ')**' → logprob: -11.771980285644531
    10. '(' → logprob: -12.396980285644531

Token 107: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0009500489104539156
    2. '0' → logprob: -7.500949859619141
    3. '1' → logprob: -7.875949859619141
    4. ' ' → logprob: -11.50094985961914
    5. '(' → logprob: -12.37594985961914
    6. ')' → logprob: -13.37594985961914
    7. '4' → logprob: -14.62594985961914
    8. '**' → logprob: -14.75094985961914
    9. '.' → logprob: -15.87594985961914
    10. '```' → logprob: -16.00094985961914

Token 108: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0003663212701212615
    2. '1' → logprob: -8.1253662109375
    3. '0' → logprob: -10.6253662109375
    4. ' ' → logprob: -10.8753662109375
    5. '(' → logprob: -11.7503662109375
    6. '```' → logprob: -12.8128662109375
    7. '           ' → logprob: -13.1253662109375
    8. '4' → logprob: -13.5003662109375
    9. '{' → logprob: -13.9378662109375
    10. '+' → logprob: -14.2503662109375

Token 109: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008252615109086037
    2. ')
' → logprob: -5.2582526206970215
    3. '           ' → logprob: -6.0082526206970215
    4. ' )' → logprob: -8.508252143859863
    5. '))' → logprob: -9.008252143859863
    6. '       ' → logprob: -9.383252143859863
    7. '               ' → logprob: -9.883252143859863
    8. ')\' → logprob: -11.008252143859863
    9. '                   ' → logprob: -11.758252143859863
    10. '   ' → logprob: -11.883252143859863

Token 110: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0003122247871942818
    2. '
' → logprob: -8.500311851501465
    3. ' print' → logprob: -10.125311851501465
    4. '            
' → logprob: -10.625311851501465
    5. '/' → logprob: -10.875311851501465
    6. '/
' → logprob: -12.375311851501465
    7. '```' → logprob: -12.500311851501465
    8. 'result' → logprob: -12.875311851501465
    9. 'average' → logprob: -13.125311851501465
    10. ')' → logprob: -13.250311851501465

Token 111: '(sm' (ID: 137716)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.12837959825992584
    2. '(sm' → logprob: -2.1283795833587646
    3. '(round' → logprob: -7.503379821777344
    4. '(s' → logprob: -8.003379821777344
    5. '((' → logprob: -8.628379821777344
    6. '(f' → logprob: -8.753379821777344
    7. '("("' → logprob: -10.003379821777344
    8. '("' → logprob: -10.128379821777344
    9. '(int' → logprob: -10.253379821777344
    10. '(sum' → logprob: -10.378379821777344

Token 112: ' /' (ID: 820)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.016876772046089172
    2. '/' → logprob: -4.141876697540283
    3. ' /' → logprob: -8.266877174377441
    4. ' )' → logprob: -8.266877174377441
    5. '/N' → logprob: -8.266877174377441
    6. '/)' → logprob: -10.891877174377441
    7. '//' → logprob: -11.016877174377441
    8. '*' → logprob: -11.141877174377441
    9. '**' → logprob: -12.516877174377441
    10. ',' → logprob: -13.016877174377441

Token 113: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.01171267218887806
    2. '(N' → logprob: -4.511712551116943
    3. ' N' → logprob: -7.636712551116943
    4. '(' → logprob: -8.886713027954102
    5. ' (' → logprob: -10.136713027954102
    6. '2' → logprob: -13.386713027954102
    7. '((' → logprob: -13.761713027954102
    8. ' ' → logprob: -13.886713027954102
    9. '1' → logprob: -15.636713027954102
    10. '	N' → logprob: -16.0117130279541

Token 114: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.531315314830863e-06
    2. ')
' → logprob: -14.000003814697266
    3. '*' → logprob: -14.125003814697266
    4. ' )' → logprob: -14.125003814697266
    5. ')`' → logprob: -14.875003814697266
    6. '))' → logprob: -15.000003814697266
    7. '//' → logprob: -15.250003814697266
    8. '`)' → logprob: -16.125003814697266
    9. '**' → logprob: -16.250003814697266
    10. '）' → logprob: -16.750003814697266


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 112
Tokens correctement prédits (1ère position, stricte): 51
Tokens correctement prédits (1ère position, avec adaptation): 53
Tokens correctement prédits (top 10): 102
Précision stricte (1ère position): 45.54%
Précision adaptée (1ère position): 47.32%
Précision (top 10): 91.07%
================================================================================
