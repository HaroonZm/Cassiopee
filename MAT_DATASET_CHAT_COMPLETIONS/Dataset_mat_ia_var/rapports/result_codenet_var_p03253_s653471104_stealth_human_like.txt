================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:08:09
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import math

# Bon, début standard
n, m = map(int, input().split())

def prime_decompose(val):  # j'ai renommé, c'est plus clair pr moi
    result = []
    i = 2
    while i * i <= val:
        if val % i == 0:
            result.append(i)
            val //= i  # division entière sinon ça pose pb plus loin
        else:
            i += 1
    if val > 1:
        result.append(val)
    return result

primes = prime_decompose(m)

def combi(big, small):
    # je fais pas trop attention à la robustesse ici, le code est censé marcher...
    p = min(small, big - small)
    nbr = 1
    for k in range(big-p+1, big+1):
        nbr *= k
    for d in range(1, p+1):
        nbr //= d
    return nbr

modulo = 10 ** 9 + 7
result = 1
curr = 1

if len(primes) == 0:
    print(result)
    exit()

# 2e boucle, plus ou moins ce qui était au-dessus
for idx in range(1, len(primes)):
    if primes[idx-1] == primes[idx]:
        curr += 1
    else:
        result *= combi(curr + n - 1, curr)
        result = result % modulo  # on oublie parfois de le faire
        curr = 1

# Il reste à traiter ce qui reste
result = (result * combi(curr + n - 1, curr)) % modulo

print(result)
# Fini. Peut probablement être optimisé, mais c'est pas la demande.
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' math' (ID: 13324)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: '#' (ID: 2)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0024338087532669306
    2. '```' → logprob: -7.252433776855469
    3. '\n' → logprob: -7.377433776855469
    4. '\' → logprob: -7.877433776855469
    5. 'import' → logprob: -8.002433776855469
    6. '<|end|>' → logprob: -9.252433776855469
    7. '.pi' → logprob: -10.127433776855469
    8. 'a' → logprob: -11.002433776855469
    9. '.e' → logprob: -11.127433776855469
    10. '<|end|>' → logprob: -11.127433776855469

Token 4: ' Bon' (ID: 12658)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2532905638217926
    2. ' Calculate' → logprob: -3.1282906532287598
    3. ' def' → logprob: -3.7532906532287598
    4. ' factorial' → logprob: -3.8782906532287598
    5. ' calculates' → logprob: -4.00329065322876
    6. ' calculate' → logprob: -4.00329065322876
    7. 'Calculate' → logprob: -4.37829065322876
    8. ' space' → logprob: -4.75329065322876
    9. ' area' → logprob: -4.75329065322876
    10. ' is' → logprob: -5.12829065322876

Token 5: ',' (ID: 11)
  Prédit: 'us'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'us' → logprob: -0.06595450639724731
    2. 'jour' → logprob: -3.6909544467926025
    3. 'd' → logprob: -3.8159544467926025
    4. 'f' → logprob: -5.440954685211182
    5. 'j' → logprob: -6.565954685211182
    6. 'def' → logprob: -6.565954685211182
    7. 'u' → logprob: -6.690954685211182
    8. 'e' → logprob: -6.815954685211182
    9. 'jou' → logprob: -7.190954685211182
    10. '```' → logprob: -7.190954685211182

Token 6: ' début' (ID: 29589)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.4299335479736328
    2. ' ' → logprob: -1.1799335479736328
    3. ''s' → logprob: -3.929933547973633
    4. '_' → logprob: -4.804933547973633
    5. '  ' → logprob: -5.554933547973633
    6. ',' → logprob: -5.679933547973633
    7. '`' → logprob: -6.554933547973633
    8. '   ' → logprob: -7.179933547973633
    9. ' ,' → logprob: -7.679933547973633
    10. ' i' → logprob: -7.804933547973633

Token 7: ' standard' (ID: 7024)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.3859733045101166
    2. '```' → logprob: -1.635973334312439
    3. ':' → logprob: -2.8859732151031494
    4. ' ' → logprob: -4.1359734535217285
    5. '_' → logprob: -4.6359734535217285
    6. 's' → logprob: -5.1359734535217285
    7. ' de' → logprob: -5.3859734535217285
    8. '`' → logprob: -5.5109734535217285
    9. '=' → logprob: -5.6359734535217285
    10. ',' → logprob: -5.7609734535217285

Token 8: '
' (ID: 198)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5070172548294067
    2. '\' → logprob: -1.7570172548294067
    3. ':' → logprob: -2.007017135620117
    4. ',' → logprob: -3.632017135620117
    5. 'def' → logprob: -4.132017135620117
    6. '```' → logprob: -4.757017135620117
    7. 'e' → logprob: -5.007017135620117
    8. '_' → logprob: -5.257017135620117
    9. 'import' → logprob: -5.757017135620117
    10. '\n' → logprob: -5.757017135620117

Token 9: 'n' (ID: 77)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.26971933245658875
    2. '#' → logprob: -2.269719362258911
    3. ',' → logprob: -3.144719362258911
    4. ':' → logprob: -3.394719362258911
    5. 'import' → logprob: -4.019719123840332
    6. 'de' → logprob: -4.519719123840332
    7. '```' → logprob: -5.269719123840332
    8. '\' → logprob: -6.144719123840332
    9. 'd' → logprob: -6.269719123840332
    10. 'e' → logprob: -6.394719123840332

Token 10: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5402792096138
    2. ' ' → logprob: -1.6652791500091553
    3. '=' → logprob: -2.1652791500091553
    4. '_' → logprob: -3.1652791500091553
    5. 'umber' → logprob: -3.2902791500091553
    6. 'u' → logprob: -3.9152791500091553
    7. 'um' → logprob: -5.165279388427734
    8. ',' → logprob: -6.040279388427734
    9. 'a' → logprob: -6.665279388427734
    10. '   ' → logprob: -6.915279388427734

Token 11: ' m' (ID: 284)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.492349237203598
    2. ' k' → logprob: -2.242349147796631
    3. ' m' → logprob: -2.242349147796631
    4. '=' → logprob: -3.242349147796631
    5. ' =' → logprob: -3.367349147796631
    6. ' t' → logprob: -3.492349147796631
    7. 'k' → logprob: -3.992349147796631
    8. 'm' → logprob: -4.117349147796631
    9. ' x' → logprob: -4.617349147796631
    10. ' r' → logprob: -5.117349147796631

Token 12: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.043122973293066025
    2. '=' → logprob: -3.1681230068206787
    3. ',' → logprob: -9.043123245239258
    4. ')' → logprob: -13.168123245239258
    5. ' ' → logprob: -13.543123245239258
    6. ' ,' → logprob: -14.043123245239258
    7. ' =
' → logprob: -14.918123245239258
    8. 's' → logprob: -15.668123245239258
    9. '<|end|>' → logprob: -15.668123245239258
    10. ' =)' → logprob: -15.918123245239258

Token 13: ' map' (ID: 4014)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7160469889640808
    2. ' map' → logprob: -0.8410469889640808
    3. 'map' → logprob: -3.3410470485687256
    4. '10' → logprob: -3.4660470485687256
    5. '0' → logprob: -5.2160468101501465
    6. ' int' → logprob: -5.5910468101501465
    7. 'int' → logprob: -6.2160468101501465
    8. '5' → logprob: -7.3410468101501465
    9. '20' → logprob: -7.8410468101501465
    10. ' input' → logprob: -7.9660468101501465

Token 14: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.051134027540683746
    2. '(int' → logprob: -3.4261341094970703
    3. '(lambda' → logprob: -4.42613410949707
    4. '(str' → logprob: -5.42613410949707
    5. '<|end|>' → logprob: -8.05113410949707
    6. '(input' → logprob: -8.92613410949707
    7. '(
' → logprob: -9.05113410949707
    8. '()' → logprob: -10.17613410949707
    9. '(range' → logprob: -10.42613410949707
    10. '(len' → logprob: -10.55113410949707

Token 15: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.02729201689362526
    2. 'input' → logprob: -4.152292251586914
    3. ')' → logprob: -5.027292251586914
    4. '(' → logprob: -5.527292251586914
    5. ',input' → logprob: -8.277292251586914
    6. ' input' → logprob: -8.402292251586914
    7. '=input' → logprob: -9.777292251586914
    8. ',' → logprob: -9.777292251586914
    9. '[input' → logprob: -11.152292251586914
    10. '(int' → logprob: -11.652292251586914

Token 16: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.5760425925254822
    2. 'input' → logprob: -0.8260425925254822
    3. ')' → logprob: -9.451042175292969
    4. '(input' → logprob: -11.201042175292969
    5. ' )' → logprob: -11.951042175292969
    6. '=input' → logprob: -13.076042175292969
    7. ',input' → logprob: -14.201042175292969
    8. ' ' → logprob: -14.576042175292969
    9. '	input' → logprob: -14.576042175292969
    10. '```' → logprob: -15.701042175292969

Token 17: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3269902467727661
    2. '())' → logprob: -1.8269902467727661
    3. '(' → logprob: -3.0769901275634766
    4. '().' → logprob: -3.7019901275634766
    5. '());' → logprob: -3.7019901275634766
    6. '(()' → logprob: -5.076990127563477
    7. '()>' → logprob: -5.326990127563477
    8. '()))' → logprob: -6.076990127563477
    9. '('' → logprob: -6.451990127563477
    10. '()));' → logprob: -6.451990127563477

Token 18: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00018363336857873946
    2. 'strip' → logprob: -8.625184059143066
    3. 'rstrip' → logprob: -13.000184059143066
    4. 'read' → logprob: -13.750184059143066
    5. ' split' → logprob: -14.500184059143066
    6. '(split' → logprob: -15.750184059143066
    7. ')' → logprob: -17.00018310546875
    8. 'spl' → logprob: -17.00018310546875
    9. '().' → logprob: -18.12518310546875
    10. '.readline' → logprob: -18.50018310546875

Token 19: '())

' (ID: 27654)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10067685693502426
    2. '))' → logprob: -2.3506767749786377
    3. '())' → logprob: -7.975677013397217
    4. '()' → logprob: -10.475676536560059
    5. '),' → logprob: -10.850676536560059
    6. '')' → logprob: -11.225676536560059
    7. '()))' → logprob: -11.225676536560059
    8. '`)' → logprob: -11.725676536560059
    9. ')))' → logprob: -11.850676536560059
    10. '(' → logprob: -12.225676536560059

Token 20: 'def' (ID: 1314)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.731216311454773
    2. 'for' → logprob: -1.856216311454773
    3. ' ' → logprob: -2.2312164306640625
    4. 'a' → logprob: -2.7312164306640625
    5. 's' → logprob: -3.3562164306640625
    6. ',' → logprob: -3.3562164306640625
    7. 'if' → logprob: -3.9812164306640625
    8. 'd' → logprob: -4.2312164306640625
    9. 'n' → logprob: -4.3562164306640625
    10. '<|end|>' → logprob: -4.6062164306640625

Token 21: ' prime' (ID: 9197)
  Prédit: ' factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' factor' → logprob: -0.44617635011672974
    2. ' max' → logprob: -2.696176290512085
    3. ' math' → logprob: -2.696176290512085
    4. ' factorial' → logprob: -2.946176290512085
    5. ' gcd' → logprob: -3.196176290512085
    6. ' pow' → logprob: -3.571176290512085
    7. ' ' → logprob: -3.696176290512085
    8. ' f' → logprob: -3.946176290512085
    9. ' calculate' → logprob: -4.071176528930664
    10. 'factor' → logprob: -5.071176528930664

Token 22: '_de' (ID: 5047)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.18450619280338287
    2. '_' → logprob: -2.1845061779022217
    3. '_s' → logprob: -3.5595061779022217
    4. '(' → logprob: -4.184506416320801
    5. '_factor' → logprob: -4.809506416320801
    6. '(n' → logprob: -7.059506416320801
    7. '_f' → logprob: -7.184506416320801
    8. 'r' → logprob: -7.309506416320801
    9. '_(' → logprob: -7.434506416320801
    10. '_r' → logprob: -7.934506416320801

Token 23: 'compose' (ID: 65322)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.00042173630208708346
    2. 'fect' → logprob: -8.250421524047852
    3. 'finite' → logprob: -11.000421524047852
    4. 't' → logprob: -11.625421524047852
    5. 'tect' → logprob: -11.625421524047852
    6. 'p' → logprob: -11.625421524047852
    7. 'fé' → logprob: -11.750421524047852
    8. 'tection' → logprob: -11.875421524047852
    9. 'fic' → logprob: -12.000421524047852
    10. 'fault' → logprob: -12.000421524047852

Token 24: '(val' (ID: 17391)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00011033779446734115
    2. '(n' → logprob: -10.625110626220703
    3. ' (' → logprob: -10.875110626220703
    4. '("("' → logprob: -11.250110626220703
    5. 's' → logprob: -11.625110626220703
    6. '(x' → logprob: -11.750110626220703
    7. '_' → logprob: -11.750110626220703
    8. '(token' → logprob: -11.875110626220703
    9. '('' → logprob: -12.375110626220703
    10. '(s' → logprob: -12.375110626220703

Token 25: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.009227907285094261
    2. ')' → logprob: -5.009227752685547
    3. 'r' → logprob: -6.259227752685547
    4. '(' → logprob: -9.509227752685547
    5. ')):' → logprob: -9.509227752685547
    6. '):
' → logprob: -9.634227752685547
    7. ' ):' → logprob: -9.759227752685547
    8. 'ur' → logprob: -10.009227752685547
    9. ':' → logprob: -10.009227752685547
    10. 'u' → logprob: -10.259227752685547

Token 26: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7457569241523743
    2. ':' → logprob: -1.8707568645477295
    3. ' 
' → logprob: -2.2457568645477295
    4. '   ' → logprob: -2.4957568645477295
    5. '<|end|>' → logprob: -2.4957568645477295
    6. ' :' → logprob: -3.4957568645477295
    7. '    ' → logprob: -3.9957568645477295
    8. '  ' → logprob: -5.120757102966309
    9. '    
' → logprob: -5.120757102966309
    10. '):' → logprob: -5.245757102966309

Token 27: ' #' (ID: 1069)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.024999290704727173
    2. '   ' → logprob: -4.274999141693115
    3. ' :' → logprob: -5.149999141693115
    4. ' ' → logprob: -5.899999141693115
    5. ':
' → logprob: -6.774999141693115
    6. '):' → logprob: -8.524999618530273
    7. '(' → logprob: -9.274999618530273
    8. ' :
' → logprob: -9.274999618530273
    9. '```' → logprob: -9.774999618530273
    10. ',' → logprob: -9.774999618530273

Token 28: ' j' (ID: 441)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.02689812332391739
    2. ' :' → logprob: -4.90189790725708
    3. '   ' → logprob: -5.27689790725708
    4. ':' → logprob: -5.40189790725708
    5. '    ' → logprob: -6.40189790725708
    6. ' 
' → logprob: -6.52689790725708
    7. '  ' → logprob: -6.52689790725708
    8. '<|end|>' → logprob: -7.15189790725708
    9. ')' → logprob: -7.65189790725708
    10. ' ' → logprob: -8.151898384094238

Token 29: ''ai' (ID: 12480)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.5209022164344788
    2. 'u' → logprob: -1.645902156829834
    3. 'a' → logprob: -1.770902156829834
    4. ''' → logprob: -3.645902156829834
    5. '_' → logprob: -5.270902156829834
    6. ' ' → logprob: -5.770902156829834
    7. 's' → logprob: -6.270902156829834
    8. 'i' → logprob: -6.895902156829834
    9. '')' → logprob: -7.270902156829834
    10. 'ust' → logprob: -7.270902156829834

Token 30: ' renomm' (ID: 183123)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.16681841015815735
    2. ' []' → logprob: -1.916818380355835
    3. '[]' → logprob: -6.291818618774414
    4. '  ' → logprob: -6.791818618774414
    5. 'r' → logprob: -7.416818618774414
    6. ' a' → logprob: -7.541818618774414
    7. '"' → logprob: -7.791818618774414
    8. '_' → logprob: -8.541818618774414
    9. ''' → logprob: -8.541818618774414
    10. ' """' → logprob: -8.791818618774414

Token 31: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.00678796274587512
    2. 'ée' → logprob: -5.0067877769470215
    3. 'e' → logprob: -9.75678825378418
    4. 'né' → logprob: -12.63178825378418
    5. 'def' → logprob: -12.75678825378418
    6. 'er' → logprob: -13.25678825378418
    7. 'mé' → logprob: -13.25678825378418
    8. 'ed' → logprob: -13.38178825378418
    9. 'ation' → logprob: -14.75678825378418
    10. 'è' → logprob: -14.88178825378418

Token 32: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1697385609149933
    2. '(' → logprob: -3.294738531112671
    3. ' :' → logprob: -3.294738531112671
    4. '_' → logprob: -3.544738531112671
    5. ')' → logprob: -3.919738531112671
    6. ' ' → logprob: -4.29473876953125
    7. '):' → logprob: -5.04473876953125
    8. '   ' → logprob: -5.41973876953125
    9. ',' → logprob: -5.66973876953125
    10. '(p' → logprob: -7.41973876953125

Token 33: ' c' (ID: 274)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.07154369354248047
    2. ' result' → logprob: -4.0715436935424805
    3. '   ' → logprob: -4.1965436935424805
    4. ')' → logprob: -4.9465436935424805
    5. '*' → logprob: -5.8215436935424805
    6. '  ' → logprob: -6.0715436935424805
    7. '_' → logprob: -6.0715436935424805
    8. ' ):' → logprob: -6.3215436935424805
    9. ' )' → logprob: -6.5715436935424805
    10. '    ' → logprob: -6.5715436935424805

Token 34: ''est' (ID: 6616)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.5219671726226807
    2. ' ' → logprob: -1.3969671726226807
    3. 'a' → logprob: -3.0219671726226807
    4. 'e' → logprob: -3.5219671726226807
    5. ' '' → logprob: -4.021966934204102
    6. '_' → logprob: -4.646966934204102
    7. ' a' → logprob: -4.771966934204102
    8. ' =' → logprob: -4.771966934204102
    9. 'o' → logprob: -5.271966934204102
    10. ')' → logprob: -5.521966934204102

Token 35: ' plus' (ID: 2932)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.08306170254945755
    2. ' []' → logprob: -3.083061695098877
    3. ' =' → logprob: -4.583061695098877
    4. ' a' → logprob: -5.333061695098877
    5. ' :' → logprob: -5.708061695098877
    6. '  ' → logprob: -5.958061695098877
    7. ' )' → logprob: -6.833061695098877
    8. '   ' → logprob: -7.083061695098877
    9. ')' → logprob: -7.208061695098877
    10. ' la' → logprob: -7.208061695098877

Token 36: ' clair' (ID: 71396)
  Prédit: ' clair'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' clair' → logprob: -0.5154245495796204
    2. 'clair' → logprob: -1.2654244899749756
    3. 'pro' → logprob: -2.8904244899749756
    4. ' claire' → logprob: -4.515424728393555
    5. 'pr' → logprob: -4.640424728393555
    6. ' propre' → logprob: -4.890424728393555
    7. '```' → logprob: -5.390424728393555
    8. 'cl' → logprob: -5.640424728393555
    9. 'utile' → logprob: -5.640424728393555
    10. ' explic' → logprob: -5.640424728393555

Token 37: ' pr' (ID: 550)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.019518081098794937
    2. ' :' → logprob: -4.14451789855957
    3. ' ' → logprob: -7.14451789855957
    4. ':
' → logprob: -7.51951789855957
    5. ' :
' → logprob: -8.14451789855957
    6. '):' → logprob: -8.26951789855957
    7. ')' → logprob: -8.51951789855957
    8. '
' → logprob: -8.64451789855957
    9. '  
' → logprob: -8.64451789855957
    10. ' 
' → logprob: -8.76951789855957

Token 38: ' moi' (ID: 18745)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3892447054386139
    2. ' i' → logprob: -1.6392446756362915
    3. 'i' → logprob: -3.264244794845581
    4. ' l' → logprob: -4.014244556427002
    5. ' le' → logprob: -4.764244556427002
    6. ' '' → logprob: -4.889244556427002
    7. '  ' → logprob: -5.264244556427002
    8. ' la' → logprob: -5.264244556427002
    9. ' "' → logprob: -5.514244556427002
    10. ''' → logprob: -5.514244556427002

Token 39: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01109450776129961
    2. ' :' → logprob: -5.136094570159912
    3. '):' → logprob: -6.386094570159912
    4. ')' → logprob: -6.636094570159912
    5. ' ' → logprob: -7.636094570159912
    6. '
' → logprob: -7.761094570159912
    7. '<|end|>' → logprob: -8.011094093322754
    8. ',' → logprob: -8.511094093322754
    9. ':
' → logprob: -8.761094093322754
    10. ':def' → logprob: -9.761094093322754

Token 40: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04535394161939621
    2. ' :' → logprob: -3.420353889465332
    3. ' ' → logprob: -4.920353889465332
    4. '):' → logprob: -6.545353889465332
    5. '   ' → logprob: -6.795353889465332
    6. ')' → logprob: -8.045353889465332
    7. ':
' → logprob: -8.170353889465332
    8. ',' → logprob: -8.170353889465332
    9. ' :
' → logprob: -8.420353889465332
    10. '```' → logprob: -9.545353889465332

Token 41: ' result' (ID: 1534)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.29252609610557556
    2. ' factors' → logprob: -1.417526125907898
    3. '   ' → logprob: -5.9175262451171875
    4. 'fact' → logprob: -6.5425262451171875
    5. 'prime' → logprob: -6.9175262451171875
    6. 'result' (adapté à ' result') → logprob: -7.0425262451171875
    7. 'de' → logprob: -7.0425262451171875
    8. 'res' → logprob: -7.5425262451171875
    9. 'div' → logprob: -7.6675262451171875
    10. ' result' → logprob: -7.9175262451171875

Token 42: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014316289685666561
    2. '=' → logprob: -4.264316082000732
    3. ' ' → logprob: -9.76431655883789
    4. '=[]' → logprob: -9.88931655883789
    5. '[]' → logprob: -11.13931655883789
    6. '[' → logprob: -11.51431655883789
    7. ',' → logprob: -11.88931655883789
    8. '[:]' → logprob: -12.63931655883789
    9. '={}' → logprob: -13.01431655883789
    10. ' []' → logprob: -13.38931655883789

Token 43: ' []
' (ID: 8911)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.29037001729011536
    2. ' {}' → logprob: -2.290369987487793
    3. '{}' → logprob: -2.415369987487793
    4. '[]' → logprob: -2.790369987487793
    5. ' ' → logprob: -10.790369987487793
    6. ' defaultdict' → logprob: -10.915369987487793
    7. '[' → logprob: -13.040369987487793
    8. '{' → logprob: -13.540369987487793
    9. ' []
' → logprob: -13.540369987487793
    10. 'dict' → logprob: -13.665369987487793

Token 44: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.08718814700841904
    2. '   ' → logprob: -3.587188243865967
    3. ' 
' → logprob: -3.712188243865967
    4. ' for' → logprob: -4.587188243865967
    5. '    ' → logprob: -5.712188243865967
    6. '<|end|>' → logprob: -5.712188243865967
    7. '   
' → logprob: -5.962188243865967
    8. '     
' → logprob: -5.962188243865967
    9. '  ' → logprob: -6.337188243865967
    10. '  
' → logprob: -6.462188243865967

Token 45: ' i' (ID: 575)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.676833987236023
    2. 'i' (adapté à ' i') → logprob: -1.051833987236023
    3. 'while' → logprob: -2.6768341064453125
    4. 'div' → logprob: -3.5518341064453125
    5. '   ' → logprob: -4.1768341064453125
    6. 'd' → logprob: -4.5518341064453125
    7. ' for' → logprob: -5.0518341064453125
    8. ' i' → logprob: -5.4268341064453125
    9. ' while' → logprob: -6.1768341064453125
    10. 'factor' → logprob: -6.4268341064453125

Token 46: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3163696527481079
    2. '=' → logprob: -1.316369652748108
    3. ' ' → logprob: -6.441369533538818
    4. 'nt' → logprob: -6.816369533538818
    5. 'n' → logprob: -7.941369533538818
    6. '2' → logprob: -11.691370010375977
    7. ' n' → logprob: -11.691370010375977
    8. ' nt' → logprob: -11.816370010375977
    9. ' in' → logprob: -11.941370010375977
    10. '1' → logprob: -12.191370010375977

Token 47: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.10021044313907623
    2. '2' → logprob: -2.350210428237915
    3. '1' → logprob: -13.600210189819336
    4. ' ' → logprob: -13.850210189819336
    5. '  ' → logprob: -14.162710189819336
    6. '0' → logprob: -16.287710189819336
    7. '```' → logprob: -16.412710189819336
    8. '	' → logprob: -16.725210189819336
    9. ' math' → logprob: -16.850210189819336
    10. '   ' → logprob: -16.912710189819336

Token 48: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.7848862373502925e-05
    2. ' ' → logprob: -10.500027656555176
    3. '1' → logprob: -17.000028610229492
    4. '```' → logprob: -17.062528610229492
    5. '۲' → logprob: -17.437528610229492
    6. '   ' → logprob: -17.562528610229492
    7. '(' → logprob: -17.875028610229492
    8. '２' → logprob: -17.875028610229492
    9. '3' → logprob: -18.062528610229492
    10. '٢' → logprob: -18.187528610229492

Token 49: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 50: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.45002055168151855
    2. '<|end|>' → logprob: -1.5750205516815186
    3. 'while' → logprob: -2.7000205516815186
    4. ' 
' → logprob: -3.4500205516815186
    5. ' ' → logprob: -4.325020790100098
    6. ' while' → logprob: -4.575020790100098
    7. '  
' → logprob: -4.700020790100098
    8. '<|end|>' → logprob: -4.950020790100098
    9. ':' → logprob: -5.450020790100098
    10. '   
' → logprob: -5.825020790100098

Token 51: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.6598295569419861
    2. ' while' → logprob: -0.7848295569419861
    3. '<|end|>' → logprob: -3.909829616546631
    4. ' ' → logprob: -6.159829616546631
    5. '	while' → logprob: -6.784829616546631
    6. '  ' → logprob: -7.409829616546631
    7. ':' → logprob: -7.659829616546631
    8. '<|end|>' → logprob: -7.784829616546631
    9. '*' → logprob: -7.909829616546631
    10. '   ' → logprob: -8.159829139709473

Token 52: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.002322841202840209
    2. 'i' → logprob: -6.377322673797607
    3. ' ' → logprob: -7.502322673797607
    4. ' val' → logprob: -10.252323150634766
    5. '	i' → logprob: -11.127323150634766
    6. '(i' → logprob: -12.127323150634766
    7. ' ' → logprob: -12.502323150634766
    8. ' (' → logprob: -12.752323150634766
    9. 'val' → logprob: -13.127323150634766
    10. '```' → logprob: -13.752323150634766

Token 53: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.2474551647901535
    2. '*i' → logprob: -1.62245512008667
    3. '*' → logprob: -4.12245512008667
    4. ' <=' → logprob: -5.37245512008667
    5. '<=' → logprob: -6.99745512008667
    6. '**' → logprob: -10.372455596923828
    7. ' ' → logprob: -12.747455596923828
    8. ' **' → logprob: -13.997455596923828
    9. 'i' → logprob: -14.247455596923828
    10. '*j' → logprob: -14.747455596923828

Token 54: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0008787082624621689
    2. ' i' → logprob: -7.125878810882568
    3. 'val' → logprob: -10.50087833404541
    4. '*i' → logprob: -10.62587833404541
    5. '<|end|>' → logprob: -12.50087833404541
    6. '	i' → logprob: -12.62587833404541
    7. '<=' → logprob: -12.75087833404541
    8. ' ' → logprob: -13.50087833404541
    9. '_i' → logprob: -13.50087833404541
    10. ' val' → logprob: -13.50087833404541

Token 55: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.07890884578227997
    2. '<=' → logprob: -2.578908920288086
    3. '<|end|>' → logprob: -11.453908920288086
    4. ' ' → logprob: -13.203908920288086
    5. ')<=' → logprob: -13.578908920288086
    6. ']<=' → logprob: -13.828908920288086
    7. ' <=",' → logprob: -14.078908920288086
    8. ' <<=' → logprob: -14.203908920288086
    9. '[' → logprob: -14.453908920288086
    10. '<' → logprob: -14.703908920288086

Token 56: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.048589304089546204
    2. ' val' → logprob: -3.0485892295837402
    3. '	val' → logprob: -13.423589706420898
    4. '(val' → logprob: -15.298589706420898
    5. '[val' → logprob: -16.4235897064209
    6. '   ' → logprob: -16.5485897064209
    7. '_val' → logprob: -17.6735897064209
    8. ',val' → logprob: -17.9235897064209
    9. '```' → logprob: -18.0485897064209
    10. 'Val' → logprob: -18.5485897064209

Token 57: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0002529952325858176
    2. ' :' → logprob: -8.500252723693848
    3. ':
' → logprob: -10.500252723693848
    4. ' and' → logprob: -11.375252723693848
    5. '):' → logprob: -11.875252723693848
    6. ':**' → logprob: -13.500252723693848
    7. 'and' → logprob: -14.000252723693848
    8. '<|end|>' → logprob: -15.250252723693848
    9. '<|end|>' → logprob: -15.500252723693848
    10. '   ' → logprob: -15.625252723693848

Token 58: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.34906163811683655
    2. '       ' → logprob: -1.3490616083145142
    3. '<|end|>' → logprob: -3.8490617275238037
    4. ':
' → logprob: -5.224061489105225
    5. '   ' → logprob: -5.599061489105225
    6. ' :' → logprob: -6.349061489105225
    7. ' ' → logprob: -7.099061489105225
    8. '<|end|>' → logprob: -7.224061489105225
    9. '    ' → logprob: -7.474061489105225
    10. '):' → logprob: -8.599061965942383

Token 59: ' if' (ID: 538)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.47787144780158997
    2. '       ' → logprob: -2.2278714179992676
    3. ' if' → logprob: -2.8528714179992676
    4. '   ' → logprob: -3.1028714179992676
    5. '<|end|>' → logprob: -3.1028714179992676
    6. ' ' → logprob: -3.2278714179992676
    7. 'if' (adapté à ' if') → logprob: -3.4778714179992676
    8. '    ' → logprob: -3.4778714179992676
    9. ' :' → logprob: -4.977871417999268
    10. ':
' → logprob: -5.102871417999268

Token 60: ' val' (ID: 1459)
  Prédit: ' val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.006717743817716837
    2. 'val' → logprob: -5.006717681884766
    3. '	val' → logprob: -13.256717681884766
    4. '[val' → logprob: -15.256717681884766
    5. '(val' → logprob: -15.506717681884766
    6. ' ' → logprob: -16.131717681884766
    7. ' ' → logprob: -17.256717681884766
    8. '_val' → logprob: -18.381717681884766
    9. '.val' → logprob: -18.756717681884766
    10. '```' → logprob: -18.881717681884766

Token 61: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.014174672774970531
    2. '%' → logprob: -4.264174461364746
    3. ' ' → logprob: -11.639174461364746
    4. '%i' → logprob: -13.514174461364746
    5. ' ' → logprob: -14.514174461364746
    6. '%e' → logprob: -15.514174461364746
    7. '%s' → logprob: -16.014175415039062
    8. ' %=' → logprob: -16.764175415039062
    9. '%c' → logprob: -17.389175415039062
    10. '%x' → logprob: -17.389175415039062

Token 62: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.25194743275642395
    2. ' i' → logprob: -1.5019474029541016
    3. ' ' → logprob: -11.626947402954102
    4. '<|end|>' → logprob: -12.251947402954102
    5. '	i' → logprob: -12.876947402954102
    6. '<|end|>' → logprob: -14.251947402954102
    7. '  ' → logprob: -14.501947402954102
    8. '   ' → logprob: -14.876947402954102
    9. '2' → logprob: -15.251947402954102
    10. ' ' → logprob: -16.5019474029541

Token 63: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.043041668832302094
    2. '==' → logprob: -3.168041706085205
    3. ' ' → logprob: -11.043041229248047
    4. '=' → logprob: -11.793041229248047
    5. ')==' → logprob: -11.918041229248047
    6. ')' → logprob: -12.043041229248047
    7. '===' → logprob: -13.543041229248047
    8. ' ===' → logprob: -13.793041229248047
    9. ' =' → logprob: -13.918041229248047
    10. ']==' → logprob: -14.043041229248047

Token 64: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2519298195838928
    2. ' ' → logprob: -1.501929759979248
    3. ' ' → logprob: -14.376930236816406
    4. '  ' → logprob: -16.501930236816406
    5. '```' → logprob: -17.126930236816406
    6. '۰' → logprob: -17.251930236816406
    7. '   ' → logprob: -17.626930236816406
    8. '<|end|>' → logprob: -17.876930236816406
    9. '	' → logprob: -19.126930236816406
    10. ' ' → logprob: -19.501930236816406

Token 65: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.988221684878226e-06
    2. ' ' → logprob: -11.875006675720215
    3. '۰' → logprob: -20.62500762939453
    4. '  ' → logprob: -23.00000762939453
    5. '```' → logprob: -23.00000762939453
    6. '٠' → logprob: -23.37500762939453
    7. '<|end|>' → logprob: -24.00000762939453
    8. '   ' → logprob: -24.12500762939453
    9. ' ' → logprob: -24.25000762939453
    10. '０' → logprob: -24.25000762939453

Token 66: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00035810720873996615
    2. ':
' → logprob: -8.375358581542969
    3. '):' → logprob: -9.250358581542969
    4. ' :' → logprob: -10.625358581542969
    5. '<|end|>' → logprob: -13.000358581542969
    6. '       ' → logprob: -13.250358581542969
    7. '<|end|>' → logprob: -14.625358581542969
    8. ':**' → logprob: -14.750358581542969
    9. ')' → logprob: -14.750358581542969
    10. '):
' → logprob: -15.000358581542969

Token 67: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.18426541984081268
    2. '       ' → logprob: -2.059265375137329
    3. ')' → logprob: -5.184265613555908
    4. '```' → logprob: -5.184265613555908
    5. ' val' → logprob: -5.434265613555908
    6. 'result' → logprob: -5.684265613555908
    7. 'val' → logprob: -5.684265613555908
    8. ' ' → logprob: -5.809265613555908
    9. '<|end|>' → logprob: -5.809265613555908
    10. '        ' → logprob: -5.934265613555908

Token 68: ' result' (ID: 1534)
  Prédit: ' result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' result' → logprob: -0.634552001953125
    2. 'result' (adapté à ' result') → logprob: -0.759552001953125
    3. '           ' → logprob: -7.009552001953125
    4. 'val' → logprob: -7.634552001953125
    5. ' val' → logprob: -7.759552001953125
    6. 'count' → logprob: -10.009552001953125
    7. '            ' → logprob: -10.759552001953125
    8. ' ' → logprob: -11.259552001953125
    9. '	result' → logprob: -11.259552001953125
    10. '```' → logprob: -12.009552001953125

Token 69: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.007662105839699507
    2. '.' → logprob: -4.882662296295166
    3. '.extend' → logprob: -10.507661819458008
    4. '.Append' → logprob: -11.007661819458008
    5. ' .' → logprob: -12.757661819458008
    6. 'append' → logprob: -13.132661819458008
    7. '.add' → logprob: -13.757661819458008
    8. '.app' → logprob: -13.882661819458008
    9. '.push' → logprob: -13.882661819458008
    10. ' +=' → logprob: -14.007661819458008

Token 70: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0069455336779356
    2. '(' → logprob: -5.006945610046387
    3. '((' → logprob: -8.381945610046387
    4. '(
' → logprob: -14.006945610046387
    5. ' (' → logprob: -15.631945610046387
    6. '(

' → logprob: -16.63194465637207
    7. '('' → logprob: -17.63194465637207
    8. '(ii' → logprob: -17.88194465637207
    9. '("("' → logprob: -18.00694465637207
    10. '(`' → logprob: -18.13194465637207

Token 71: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.018277186900377274
    2. ')
' → logprob: -4.018277168273926
    3. ' )' → logprob: -9.893277168273926
    4. ')
' → logprob: -10.518277168273926
    5. ',' → logprob: -10.643277168273926
    6. ' )
' → logprob: -11.268277168273926
    7. '),' → logprob: -12.768277168273926
    8. '           ' → logprob: -13.018277168273926
    9. '       ' → logprob: -14.018277168273926
    10. '```' → logprob: -14.268277168273926

Token 72: '           ' (ID: 352)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.674007773399353
    2. '           ' → logprob: -1.174007773399353
    3. ' val' → logprob: -2.9240078926086426
    4. '       ' → logprob: -3.0490078926086426
    5. ')' → logprob: -4.299007892608643
    6. '<|end|>' → logprob: -4.424007892608643
    7. ',val' → logprob: -4.799007892608643
    8. ' ' → logprob: -4.924007892608643
    9. '*' → logprob: -5.424007892608643
    10. ',' → logprob: -5.424007892608643

Token 73: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' (adapté à ' val') → logprob: -6.034592388459714e-06
    2. ' val' → logprob: -12.125005722045898
    3. '           ' → logprob: -15.125005722045898
    4. '	val' → logprob: -15.125005722045898
    5. '_val' → logprob: -17.6250057220459
    6. '[val' → logprob: -18.0000057220459
    7. ',val' → logprob: -18.1250057220459
    8. '```' → logprob: -18.2500057220459
    9. '   ' → logprob: -19.5000057220459
    10. '-val' → logprob: -19.6250057220459

Token 74: ' //' (ID: 602)
  Prédit: '//='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//=' → logprob: -0.2533360719680786
    2. ' //' → logprob: -1.5033360719680786
    3. ' /=' → logprob: -7.378335952758789
    4. '=' → logprob: -8.003335952758789
    5. '//' → logprob: -8.128335952758789
    6. ' =' → logprob: -9.253335952758789
    7. '/=' → logprob: -9.878335952758789
    8. ' ' → logprob: -12.878335952758789
    9. ' ' → logprob: -13.878335952758789
    10. 'div' → logprob: -15.128335952758789

Token 75: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -2.939851037808694e-05
    2. '=i' → logprob: -10.750029563903809
    3. 'i' → logprob: -11.875029563903809
    4. '=}' → logprob: -14.250029563903809
    5. ' i' → logprob: -15.250029563903809
    6. '=int' → logprob: -17.125028610229492
    7. ' =' → logprob: -17.250028610229492
    8. '=

' → logprob: -18.250028610229492
    9. '=_' → logprob: -18.750028610229492
    10. '=*/' → logprob: -19.250028610229492

Token 76: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.20141363143920898
    2. ' i' → logprob: -1.701413631439209
    3. '	i' → logprob: -14.951414108276367
    4. ' ' → logprob: -18.201414108276367
    5. ')i' → logprob: -19.201414108276367
    6. '```' → logprob: -19.576414108276367
    7. '_i' → logprob: -19.701414108276367
    8. ' ' → logprob: -20.076414108276367
    9. '<|end|>' → logprob: -20.326414108276367
    10. ',i' → logprob: -20.576414108276367

Token 77: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03811883181333542
    2. 'else' → logprob: -4.038118839263916
    3. ' else' → logprob: -4.788118839263916
    4. '   ' → logprob: -5.163118839263916
    5. '<|end|>' → logprob: -5.913118839263916
    6. '           ' → logprob: -7.288118839263916
    7. '        
' → logprob: -7.663118839263916
    8. '```' → logprob: -8.163118362426758
    9. '        ' → logprob: -8.288118362426758
    10. '    
' → logprob: -8.538118362426758

Token 78: ' #' (ID: 1069)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.48523619771003723
    2. '       ' → logprob: -1.1102361679077148
    3. '<|end|>' → logprob: -3.735236167907715
    4. ' else' → logprob: -3.860236167907715
    5. '   ' → logprob: -6.235236167907715
    6. '```' → logprob: -6.360236167907715
    7. '*' → logprob: -6.610236167907715
    8. 'elif' → logprob: -7.360236167907715
    9. '<|end|>' → logprob: -7.360236167907715
    10. ')' → logprob: -7.485236167907715

Token 79: ' division' (ID: 21629)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7107805609703064
    2. 'else' → logprob: -1.7107806205749512
    3. ' else' → logprob: -2.085780620574951
    4. 'val' → logprob: -2.835780620574951
    5. ' val' → logprob: -3.335780620574951
    6. 'continue' → logprob: -3.460780620574951
    7. ' continue' → logprob: -3.585780620574951
    8. ' ' → logprob: -4.460780620574951
    9. 'i' → logprob: -4.835780620574951
    10. '```' → logprob: -5.085780620574951

Token 80: ' entière' (ID: 61583)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 81: ' sinon' (ID: 52915)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.32238197326660156
    2. '<|end|>' → logprob: -1.9473819732666016
    3. 'else' → logprob: -2.4473819732666016
    4. ' else' → logprob: -3.4473819732666016
    5. '   ' → logprob: -5.447381973266602
    6. '<|end|>' → logprob: -5.572381973266602
    7. 'elif' → logprob: -6.572381973266602
    8. '           ' → logprob: -7.322381973266602
    9. '```' → logprob: -7.322381973266602
    10. 'while' → logprob: -7.572381973266602

Token 82: ' ça' (ID: 13590)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.8708489537239075
    2. '       ' → logprob: -1.1208488941192627
    3. 'else' → logprob: -1.4958488941192627
    4. '<|end|>' → logprob: -3.7458488941192627
    5. '   ' → logprob: -6.620849132537842
    6. '<|end|>' → logprob: -6.745849132537842
    7. '```' → logprob: -6.995849132537842
    8. ' continue' → logprob: -7.495849132537842
    9. ' elif' → logprob: -7.495849132537842
    10. 'elif' → logprob: -7.870849132537842

Token 83: ' pose' (ID: 17557)
  Prédit: ' bug'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' bug' → logprob: -0.9630508422851562
    2. 'div' → logprob: -1.9630508422851562
    3. ' crash' → logprob: -2.4630508422851562
    4. ' va' → logprob: -2.8380508422851562
    5. ' casse' → logprob: -3.3380508422851562
    6. ' continue' → logprob: -3.4630508422851562
    7. ' break' → logprob: -3.8380508422851562
    8. 'contin' → logprob: -3.9630508422851562
    9. ' plante' → logprob: -4.088050842285156
    10. ' blo' → logprob: -4.213050842285156

Token 84: ' pb' (ID: 31582)
  Prédit: 'des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'des' → logprob: -0.6978842616081238
    2. 'pro' → logprob: -1.4478843212127686
    3. 'proble' → logprob: -1.8228843212127686
    4. 'pb' → logprob: -3.0728843212127686
    5. ' problème' → logprob: -3.6978843212127686
    6. 'un' → logprob: -4.5728840827941895
    7. 'problem' → logprob: -4.8228840827941895
    8. 'prob' → logprob: -5.1978840827941895
    9. ' des' → logprob: -5.3228840827941895
    10. 'pas' → logprob: -6.0728840827941895

Token 85: ' plus' (ID: 2932)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07102184742689133
    2. '<|end|>' → logprob: -2.821021795272827
    3. 'else' → logprob: -5.571022033691406
    4. ' else' → logprob: -6.571022033691406
    5. '```' → logprob: -6.696022033691406
    6. '<|end|>' → logprob: -6.696022033691406
    7. '           ' → logprob: -8.321022033691406
    8. '   ' → logprob: -8.321022033691406
    9. '        
' → logprob: -8.821022033691406
    10. '``' → logprob: -9.446022033691406

Token 86: ' loin' (ID: 40875)
  Prédit: ' tard'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tard' → logprob: -0.02667226456105709
    2. 't' → logprob: -3.65167236328125
    3. ' loin' → logprob: -9.15167236328125
    4. 'loin' → logprob: -9.52667236328125
    5. 'd' → logprob: -10.27667236328125
    6. 'de' → logprob: -10.40167236328125
    7. ' tarde' → logprob: -10.52667236328125
    8. 'bas' → logprob: -10.77667236328125
    9. '<|end|>' → logprob: -11.27667236328125
    10. ' t' → logprob: -11.27667236328125

Token 87: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03199075907468796
    2. 'else' → logprob: -4.0319905281066895
    3. ' else' → logprob: -4.6569905281066895
    4. '           ' → logprob: -6.6569905281066895
    5. '<|end|>' → logprob: -6.7819905281066895
    6. '   ' → logprob: -7.0319905281066895
    7. 'elif' → logprob: -8.531991004943848
    8. '*' → logprob: -8.531991004943848
    9. '```' → logprob: -9.156991004943848
    10. '<|end|>' → logprob: -9.406991004943848

Token 88: '       ' (ID: 309)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.7362041473388672
    2. ' else' → logprob: -1.1112041473388672
    3. '       ' → logprob: -1.8612041473388672
    4. '*' → logprob: -3.986204147338867
    5. '   ' → logprob: -4.611204147338867
    6. 'elif' → logprob: -6.236204147338867
    7. '           ' → logprob: -6.986204147338867
    8. '    ' → logprob: -6.986204147338867
    9. ' *' → logprob: -7.111204147338867
    10. ' elif' → logprob: -7.486204147338867

Token 89: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.20236393809318542
    2. '       ' → logprob: -2.077363967895508
    3. ' else' → logprob: -2.952363967895508
    4. '   ' → logprob: -5.202363967895508
    5. '	else' → logprob: -8.702363967895508
    6. 'elif' → logprob: -10.702363967895508
    7. '    ' → logprob: -11.827363967895508
    8. '  ' → logprob: -11.952363967895508
    9. '      ' → logprob: -12.827363967895508
    10. '```' → logprob: -12.952363967895508

Token 90: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.007292950991541147
    2. ':
' → logprob: -5.132292747497559
    3. 'i' → logprob: -8.007292747497559
    4. '           ' → logprob: -8.257292747497559
    5. ' i' → logprob: -8.257292747497559
    6. '       ' → logprob: -8.382292747497559
    7. '   ' → logprob: -8.882292747497559
    8. ':i' → logprob: -9.632292747497559
    9. ',' → logprob: -11.132292747497559
    10. '
' → logprob: -11.632292747497559

Token 91: '           ' (ID: 352)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.4091496467590332
    2. 'i' → logprob: -1.6591496467590332
    3. '           ' → logprob: -2.284149646759033
    4. '   ' → logprob: -3.534149646759033
    5. '       ' → logprob: -4.409149646759033
    6. '  ' → logprob: -7.534149646759033
    7. '```' → logprob: -7.534149646759033
    8. '1' → logprob: -8.159149169921875
    9. '	i' → logprob: -8.409149169921875
    10. ' ' → logprob: -8.784149169921875

Token 92: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.0024769625160843134
    2. ' i' → logprob: -6.002477169036865
    3. '	i' → logprob: -13.877476692199707
    4. '   ' → logprob: -14.877476692199707
    5. '1' → logprob: -17.002477645874023
    6. '  ' → logprob: -18.127477645874023
    7. ' ' → logprob: -18.127477645874023
    8. '++' → logprob: -18.377477645874023
    9. '       ' → logprob: -18.877477645874023
    10. '           ' → logprob: -19.252477645874023

Token 93: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.7064158320426941
    2. '+=' → logprob: -0.7064158320426941
    3. '+' → logprob: -4.33141565322876
    4. ' +' → logprob: -11.081416130065918
    5. '=' → logprob: -11.956416130065918
    6. ' ' → logprob: -12.831416130065918
    7. '+='' → logprob: -13.206416130065918
    8. '+="' → logprob: -13.456416130065918
    9. '++' → logprob: -13.706416130065918
    10. ']+=' → logprob: -14.081416130065918

Token 94: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.941850526549388e-06
    2. ' ' → logprob: -11.750007629394531
    3. '<|end|>' → logprob: -18.50000762939453
    4. '   ' → logprob: -20.25000762939453
    5. '  ' → logprob: -20.50000762939453
    6. '```' → logprob: -20.87500762939453
    7. '１' → logprob: -21.00000762939453
    8. '१' → logprob: -21.12500762939453
    9. '۱' → logprob: -21.25000762939453
    10. '১' → logprob: -21.37500762939453

Token 95: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.000000953674316
    3. '<|end|>' → logprob: -19.25
    4. '１' → logprob: -20.4375
    5. '۱' → logprob: -20.5
    6. '१' → logprob: -20.75
    7. '১' → logprob: -20.9375
    8. '<|end|>' → logprob: -21.6875
    9. '+' → logprob: -22.0625
    10. '```' → logprob: -22.125

Token 96: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09709671139717102
    2. '
' → logprob: -2.4720966815948486
    3. '    
' → logprob: -4.972096920013428
    4. '  
' → logprob: -8.34709644317627
    5. 'return' → logprob: -8.47209644317627
    6. '```' → logprob: -8.72209644317627
    7. '   
' → logprob: -9.22209644317627
    8. 'else' → logprob: -9.47209644317627
    9. ' 
' → logprob: -9.59709644317627
    10. '        
' → logprob: -9.72209644317627

Token 97: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004810661543160677
    2. 'if' → logprob: -5.629810810089111
    3. 'return' → logprob: -7.254810810089111
    4. '```' → logprob: -8.004810333251953
    5. 'else' → logprob: -9.629810333251953
    6. ' if' → logprob: -10.254810333251953
    7. 'result' → logprob: -11.004810333251953
    8. ' ' → logprob: -11.129810333251953
    9. 'while' → logprob: -11.629810333251953
    10. '
' → logprob: -12.754810333251953

Token 98: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.003738683182746172
    2. 'result' → logprob: -6.003738880157471
    3. '   ' → logprob: -7.753738880157471
    4. '
' → logprob: -7.878738880157471
    5. ' if' → logprob: -8.628738403320312
    6. 'return' → logprob: -9.003738403320312
    7. '```' → logprob: -9.003738403320312
    8. '    
' → logprob: -11.253738403320312
    9. '  
' → logprob: -12.378738403320312
    10. '``' → logprob: -12.503738403320312

Token 99: ' val' (ID: 1459)
  Prédit: ' val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.3868749439716339
    2. 'val' → logprob: -1.1368749141693115
    3. '	val' → logprob: -12.88687515258789
    4. '[val' → logprob: -14.51187515258789
    5. 'v' → logprob: -15.38687515258789
    6. ' ' → logprob: -15.51187515258789
    7. '(val' → logprob: -15.88687515258789
    8. '   ' → logprob: -16.26187515258789
    9. ' ' → logprob: -16.26187515258789
    10. '_val' → logprob: -16.38687515258789

Token 100: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.0024787469301372766
    2. ' >' → logprob: -6.00247859954834
    3. '!=' → logprob: -13.12747859954834
    4. '&gt' → logprob: -14.50247859954834
    5. '">' → logprob: -15.00247859954834
    6. ' ' → logprob: -15.50247859954834
    7. ' !=' → logprob: -16.377479553222656
    8. ' ' → logprob: -17.002479553222656
    9. '()>' → logprob: -17.627479553222656
    10. '>`' → logprob: -17.877479553222656

Token 101: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004306692280806601
    2. ' ' → logprob: -7.750430583953857
    3. ' ' → logprob: -17.750431060791016
    4. '```' → logprob: -18.500431060791016
    5. '   ' → logprob: -18.625431060791016
    6. '2' → logprob: -19.250431060791016
    7. '>' → logprob: -19.500431060791016
    8. '<|end|>' → logprob: -19.937931060791016
    9. '۱' → logprob: -20.437931060791016
    10. '１' → logprob: -20.625431060791016

Token 102: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -12.87500286102295
    3. '   ' → logprob: -18.625001907348633
    4. '```' → logprob: -19.125001907348633
    5. '１' → logprob: -19.500001907348633
    6. '१' → logprob: -20.437501907348633
    7. '۱' → logprob: -20.812501907348633
    8. '  ' → logprob: -21.062501907348633
    9. '2' → logprob: -21.375001907348633
    10. '>' → logprob: -21.375001907348633

Token 103: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005962930154055357
    2. ':
' → logprob: -5.13096284866333
    3. '       ' → logprob: -10.630963325500488
    4. '   ' → logprob: -12.380963325500488
    5. '):' → logprob: -13.130963325500488
    6. ' :' → logprob: -13.380963325500488
    7. ':
' → logprob: -13.755963325500488
    8. '):
' → logprob: -14.755963325500488
    9. ':

' → logprob: -15.255963325500488
    10. ',' → logprob: -15.755963325500488

Token 104: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00469581875950098
    2. ' result' → logprob: -5.629695892333984
    3. '   ' → logprob: -7.129695892333984
    4. 'result' → logprob: -8.629695892333984
    5. '<|end|>' → logprob: -10.254695892333984
    6. '           ' → logprob: -10.879695892333984
    7. ' ' → logprob: -11.379695892333984
    8. '	result' → logprob: -11.379695892333984
    9. '      ' → logprob: -11.879695892333984
    10. ' ' → logprob: -11.879695892333984

Token 105: ' result' (ID: 1534)
  Prédit: ' result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' result' → logprob: -0.1467089056968689
    2. 'result' (adapté à ' result') → logprob: -2.0217089653015137
    3. '       ' → logprob: -5.521708965301514
    4. '   ' → logprob: -11.271708488464355
    5. '	result' → logprob: -11.771708488464355
    6. '           ' → logprob: -13.771708488464355
    7. ' results' → logprob: -14.146708488464355
    8. '    ' → logprob: -14.396708488464355
    9. ' resultat' → logprob: -14.396708488464355
    10. ' ' → logprob: -14.646708488464355

Token 106: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.023254677653312683
    2. '.' → logprob: -3.773254632949829
    3. ' .' → logprob: -11.89825439453125
    4. '.Append' → logprob: -13.77325439453125
    5. 'append' → logprob: -14.77325439453125
    6. '.add' → logprob: -15.14825439453125
    7. '.setdefault' → logprob: -15.39825439453125
    8. '.extend' → logprob: -15.64825439453125
    9. '.app' → logprob: -15.64825439453125
    10. ').' → logprob: -17.02325439453125

Token 107: '(val' (ID: 17391)
  Prédit: '(val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(val' → logprob: -0.0007101670489646494
    2. '(' → logprob: -7.2507100105285645
    3. '(valor' → logprob: -15.875710487365723
    4. '(
' → logprob: -16.625709533691406
    5. 'val' → logprob: -17.750709533691406
    6. '[val' → logprob: -18.500709533691406
    7. ',val' → logprob: -18.625709533691406
    8. '(vals' → logprob: -18.750709533691406
    9. '(v' → logprob: -18.875709533691406
    10. ' (' → logprob: -18.875709533691406

Token 108: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005557744298130274
    2. ')
' → logprob: -7.500555992126465
    3. ')
' → logprob: -13.875555992126465
    4. ' )' → logprob: -14.125555992126465
    5. ')return' → logprob: -14.250555992126465
    6. '   ' → logprob: -15.125555992126465
    7. ')

' → logprob: -15.750555992126465
    8. ']' → logprob: -17.62555503845215
    9. ')`' → logprob: -18.00055503845215
    10. '),' → logprob: -18.50055503845215

Token 109: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.000523842521943152
    2. 'return' → logprob: -7.750524044036865
    3. ' return' → logprob: -9.375523567199707
    4. '	return' → logprob: -12.500523567199707
    5. '    
' → logprob: -13.250523567199707
    6. '
' → logprob: -13.750523567199707
    7. ':return' → logprob: -13.750523567199707
    8. ' ' → logprob: -15.750523567199707
    9. '```' → logprob: -15.875523567199707
    10. '       ' → logprob: -16.125524520874023

Token 110: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21460609138011932
    2. 'return' (adapté à ' return') → logprob: -1.7146060466766357
    3. ' return' → logprob: -4.339606285095215
    4. '	return' → logprob: -9.964606285095215
    5. ':return' → logprob: -12.089606285095215
    6. ' ' → logprob: -12.464606285095215
    7. '       ' → logprob: -12.964606285095215
    8. '    
' → logprob: -12.964606285095215
    9. '```' → logprob: -13.964606285095215
    10. '  ' → logprob: -14.839606285095215

Token 111: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.0019294669618830085
    2. ' result' → logprob: -6.25192928314209
    3. '(result' → logprob: -14.12692928314209
    4. '[result' → logprob: -16.251930236816406
    5. ' ' → logprob: -18.876930236816406
    6. '	result' → logprob: -19.876930236816406
    7. 'list' → logprob: -22.001930236816406
    8. ',result' → logprob: -22.251930236816406
    9. '   ' → logprob: -22.501930236816406
    10. '=result' → logprob: -22.626930236816406

Token 112: '

' (ID: 279)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.45833414793014526
    2. 'n' → logprob: -1.83333420753479
    3. 'def' → logprob: -3.20833420753479
    4. '*' → logprob: -3.83333420753479
    5. 'm' → logprob: -4.208333969116211
    6. 'p' → logprob: -4.333333969116211
    7. '_' → logprob: -4.333333969116211
    8. '[' → logprob: -4.458333969116211
    9. 's' → logprob: -4.458333969116211
    10. 'a' → logprob: -4.583333969116211

Token 113: 'pr' (ID: 638)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.97868812084198
    2. 'count' → logprob: -2.1036882400512695
    3. 'res' → logprob: -2.1036882400512695
    4. 'p' → logprob: -2.7286882400512695
    5. 'counts' → logprob: -2.8536882400512695
    6. 'def' → logprob: -2.9786882400512695
    7. 'f' → logprob: -3.1036882400512695
    8. 'freq' → logprob: -3.2286882400512695
    9. 'result' → logprob: -3.7286882400512695
    10. 'x' → logprob: -3.8536882400512695

Token 114: 'imes' (ID: 2332)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.6963788866996765
    2. 'ime' → logprob: -0.6963788866996765
    3. 'i' → logprob: -7.696378707885742
    4. 'im' → logprob: -7.946378707885742
    5. '_int' → logprob: -7.946378707885742
    6. 'od' → logprob: -8.321378707885742
    7. 'o' → logprob: -8.446378707885742
    8. '_' → logprob: -8.446378707885742
    9. 'imes' → logprob: -8.571378707885742
    10. '#' → logprob: -9.196378707885742

Token 115: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0119110606610775
    2. ' =' → logprob: -5.386910915374756
    3. '_de' → logprob: -5.386910915374756
    4. '(' → logprob: -6.636910915374756
    5. '=' → logprob: -7.011910915374756
    6. '_=' → logprob: -8.636911392211914
    7. 's' → logprob: -8.886911392211914
    8. '_count' → logprob: -10.011911392211914
    9. '_counts' → logprob: -10.261911392211914
    10. 'de' → logprob: -11.386911392211914

Token 116: ' prime' (ID: 9197)
  Prédit: 'prime'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prime' → logprob: -0.0022194879129529
    2. ' prime' → logprob: -6.6272196769714355
    3. '[' → logprob: -7.8772196769714355
    4. '[]' → logprob: -8.377219200134277
    5. 'set' → logprob: -8.877219200134277
    6. 'list' → logprob: -9.377219200134277
    7. 'pr' → logprob: -10.627219200134277
    8. 'sorted' → logprob: -10.877219200134277
    9. '{' → logprob: -12.877219200134277
    10. '[]
' → logprob: -13.002219200134277

Token 117: '_de' (ID: 5047)
  Prédit: '_de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_de' → logprob: -9.627176768844947e-05
    2. 'de' → logprob: -9.250096321105957
    3. 'prime' → logprob: -16.62509536743164
    4. '_prime' → logprob: -17.75009536743164
    5. ' de' → logprob: -18.00009536743164
    6. 'De' → logprob: -18.12509536743164
    7. '_pr' → logprob: -18.87509536743164
    8. '(de' → logprob: -19.37509536743164
    9. '_d' → logprob: -20.00009536743164
    10. '	de' → logprob: -20.25009536743164

Token 118: 'compose' (ID: 65322)
  Prédit: 'compose'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compose' → logprob: -2.935296834039036e-06
    2. 'com' → logprob: -13.12500286102295
    3. 'comp' → logprob: -14.75000286102295
    4. '-compose' → logprob: -15.75000286102295
    5. 'code' → logprob: -16.375003814697266
    6. '.compose' → logprob: -16.625003814697266
    7. 'come' → logprob: -17.000003814697266
    8. 'c' → logprob: -17.250003814697266
    9. 'compound' → logprob: -17.500003814697266
    10. 'Compose' → logprob: -17.875003814697266

Token 119: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.014365408569574356
    2. '(n' → logprob: -4.264365196228027
    3. '(' → logprob: -8.514365196228027
    4. 'm' → logprob: -14.139365196228027
    5. '(
' → logprob: -14.764365196228027
    6. '(s' → logprob: -15.639365196228027
    7. 'n' → logprob: -16.889366149902344
    8. ' (' → logprob: -17.014366149902344
    9. '((' → logprob: -17.389366149902344
    10. '(min' → logprob: -17.639366149902344

Token 120: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.531315314830863e-06
    2. ' )' → logprob: -12.750003814697266
    3. ')
' → logprob: -14.750003814697266
    4. '))' → logprob: -15.625003814697266
    5. ')`' → logprob: -16.625003814697266
    6. ')

' → logprob: -17.625003814697266
    7. ')#' → logprob: -17.875003814697266
    8. ']' → logprob: -18.125003814697266
    9. '[' → logprob: -18.625003814697266
    10. '),' → logprob: -18.750003814697266

Token 121: 'def' (ID: 1314)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.44592317938804626
    2. 'for' → logprob: -2.320923089981079
    3. 'counts' → logprob: -2.570923089981079
    4. 'dp' → logprob: -3.320923089981079
    5. 'from' → logprob: -3.570923089981079
    6. 'if' → logprob: -3.820923089981079
    7. 'result' → logprob: -3.945923089981079
    8. 'counter' → logprob: -4.320923328399658
    9. 'res' → logprob: -4.445923328399658
    10. 'freq' → logprob: -4.945923328399658

Token 122: ' comb' (ID: 4134)
  Prédit: ' gcd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' gcd' → logprob: -1.0516499280929565
    2. 'g' → logprob: -1.4266499280929565
    3. ' l' → logprob: -1.4266499280929565
    4. ' power' → logprob: -3.426650047302246
    5. ' is' → logprob: -3.676650047302246
    6. ' factor' → logprob: -4.301650047302246
    7. ' main' → logprob: -4.301650047302246
    8. 'l' → logprob: -4.426650047302246
    9. ' count' → logprob: -4.426650047302246
    10. ' pow' → logprob: -4.801650047302246

Token 123: 'i' (ID: 72)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.10647048056125641
    2. 'ine' → logprob: -2.6064705848693848
    3. '(' → logprob: -4.606470584869385
    4. 'ination' → logprob: -4.856470584869385
    5. '(pr' → logprob: -6.106470584869385
    6. 'e' → logprob: -6.606470584869385
    7. '(i' → logprob: -6.606470584869385
    8. 'in' → logprob: -6.856470584869385
    9. '(p' → logprob: -7.231470584869385
    10. '(in' → logprob: -7.731470584869385

Token 124: '(big' (ID: 140437)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.007910385727882385
    2. 'n' → logprob: -5.507910251617432
    3. '(' → logprob: -6.507910251617432
    4. 'ne' → logprob: -7.132910251617432
    5. '_n' → logprob: -7.632910251617432
    6. '_prime' → logprob: -8.50791072845459
    7. 'nation' → logprob: -8.75791072845459
    8. '_' → logprob: -9.50791072845459
    9. '(ne' → logprob: -10.00791072845459
    10. '_ne' → logprob: -10.13291072845459

Token 125: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6109213829040527
    2. ',' → logprob: -1.8609213829040527
    3. '(n' → logprob: -2.2359213829040527
    4. 'n' → logprob: -2.8609213829040527
    5. ',n' → logprob: -3.2359213829040527
    6. 'o' → logprob: -3.9859213829040527
    7. '_n' → logprob: -3.9859213829040527
    8. ')' → logprob: -4.110921382904053
    9. '):
' → logprob: -5.110921382904053
    10. 'ination' → logprob: -5.485921382904053

Token 126: ' small' (ID: 3291)
  Prédit: 'small'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'small' → logprob: -0.015028147958219051
    2. 'little' → logprob: -4.76502799987793
    3. ' small' → logprob: -5.14002799987793
    4. 'sm' → logprob: -8.39002799987793
    5. 'k' → logprob: -9.14002799987793
    6. ' little' → logprob: -10.14002799987793
    7. 'l' → logprob: -10.14002799987793
    8. 's' → logprob: -10.64002799987793
    9. '```' → logprob: -10.64002799987793
    10. 'lit' → logprob: -10.76502799987793

Token 127: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0005798388738185167
    2. ')' → logprob: -7.750579833984375
    3. ',' → logprob: -9.625579833984375
    4. ' ):' → logprob: -10.125579833984375
    5. '):
' → logprob: -10.500579833984375
    6. '=' → logprob: -12.125579833984375
    7. ':' → logprob: -12.375579833984375
    8. '):
' → logprob: -13.375579833984375
    9. 's' → logprob: -14.375579833984375
    10. ' ' → logprob: -14.875579833984375

Token 128: '   ' (ID: 271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.31763413548469543
    2. ':' → logprob: -1.442634105682373
    3. '   ' → logprob: -4.192634105682373
    4. '(n' → logprob: -5.192634105682373
    5. '(math' → logprob: -5.442634105682373
    6. '(
' → logprob: -5.567634105682373
    7. '():' → logprob: -5.817634105682373
    8. ':
' → logprob: -6.317634105682373
    9. '(big' → logprob: -7.442634105682373
    10. ' :' → logprob: -8.692634582519531

Token 129: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.44222840666770935
    2. 'if' → logprob: -1.8172284364700317
    3. '   ' → logprob: -2.817228317260742
    4. 'result' → logprob: -2.817228317260742
    5. ' math' → logprob: -3.942228317260742
    6. 'math' → logprob: -4.192228317260742
    7. ' result' → logprob: -4.567228317260742
    8. 'res' → logprob: -4.942228317260742
    9. 'import' → logprob: -5.067228317260742
    10. 'return' → logprob: -5.192228317260742

Token 130: ' je' (ID: 1264)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.15821611881256104
    2. ' if' → logprob: -2.5332159996032715
    3. 'res' → logprob: -3.4082159996032715
    4. 'return' → logprob: -4.6582159996032715
    5. 'result' → logprob: -4.7832159996032715
    6. ' res' → logprob: -5.1582159996032715
    7. 'from' → logprob: -5.7832159996032715
    8. '   ' → logprob: -6.2832159996032715
    9. 'import' → logprob: -6.5332159996032715
    10. 'factor' → logprob: -6.7832159996032715

Token 131: ' fais' (ID: 24376)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.07349319756031036
    2. 'if' → logprob: -3.573493242263794
    3. 'f' → logprob: -3.948493242263794
    4. ' return' → logprob: -4.198493003845215
    5. ' f' → logprob: -6.198493003845215
    6. ' s' → logprob: -6.448493003845215
    7. ' result' → logprob: -6.698493003845215
    8. '   ' → logprob: -7.198493003845215
    9. 'return' → logprob: -7.573493003845215
    10. ' ' → logprob: -7.573493003845215

Token 132: ' pas' (ID: 2173)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.677182674407959
    2. 'if' → logprob: -1.802182674407959
    3. ' return' → logprob: -2.052182674407959
    4. 'return' → logprob: -2.177182674407959
    5. '   ' → logprob: -3.427182674407959
    6. ' res' → logprob: -4.052182674407959
    7. ' ' → logprob: -4.802182674407959
    8. 'res' → logprob: -5.177182674407959
    9. ' un' → logprob: -5.552182674407959
    10. ' une' → logprob: -5.927182674407959

Token 133: ' trop' (ID: 14765)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.08023501187562943
    2. ' return' → logprob: -3.205235004425049
    3. '  ' → logprob: -4.205235004425049
    4. 'return' → logprob: -4.455235004425049
    5. ' pass' → logprob: -6.330235004425049
    6. 'pass' → logprob: -6.580235004425049
    7. 'n' → logprob: -6.830235004425049
    8. '(' → logprob: -6.830235004425049
    9. '  
' → logprob: -7.455235004425049
    10. '<|end|>' → logprob: -7.580235004425049

Token 134: ' attention' (ID: 8684)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.597624659538269
    2. ' if' → logprob: -1.097624659538269
    3. '   ' → logprob: -3.2226247787475586
    4. 'return' → logprob: -3.8476247787475586
    5. 'if' → logprob: -4.097624778747559
    6. ' ' → logprob: -4.597624778747559
    7. ' for' → logprob: -4.722624778747559
    8. '  ' → logprob: -4.972624778747559
    9. 'for' → logprob: -5.472624778747559
    10. '    ' → logprob: -5.847624778747559

Token 135: ' à' (ID: 1221)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.050618525594472885
    2. '   ' → logprob: -3.6756184101104736
    3. '(big' → logprob: -4.425618648529053
    4. ' (' → logprob: -5.050618648529053
    5. '(range' → logprob: -6.550618648529053
    6. ' ' → logprob: -6.550618648529053
    7. '(
' → logprob: -7.050618648529053
    8. '  ' → logprob: -7.675618648529053
    9. ',' → logprob: -8.300618171691895
    10. '(n' → logprob: -8.425618171691895

Token 136: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.812863826751709
    2. ' l' → logprob: -1.062863826751709
    3. 'l' → logprob: -1.812863826751709
    4. 'la' → logprob: -3.937863826751709
    5. 'le' → logprob: -5.562863826751709
    6. ' if' → logprob: -5.937863826751709
    7. 'if' → logprob: -6.062863826751709
    8. 'les' → logprob: -6.312863826751709
    9. ' les' → logprob: -6.312863826751709
    10. 'big' → logprob: -6.312863826751709

Token 137: ' robust' (ID: 26497)
  Prédit: ' big'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' big' → logprob: -1.3207106590270996
    2. ' ' → logprob: -2.1957106590270996
    3. 'big' → logprob: -2.4457106590270996
    4. ' taille' → logprob: -2.8207106590270996
    5. ' précision' → logprob: -3.0707106590270996
    6. 'val' → logprob: -3.4457106590270996
    7. ' precision' → logprob: -3.5707106590270996
    8. ' valid' → logprob: -3.6957106590270996
    9. 's' → logprob: -3.6957106590270996
    10. 'precision' → logprob: -4.0707106590271

Token 138: 'esse' (ID: 10010)
  Prédit: 'esse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'esse' → logprob: -0.014328152872622013
    2. 'ess' → logprob: -4.2643280029296875
    3. 'ete' → logprob: -9.389328002929688
    4. 'ence' → logprob: -9.639328002929688
    5. 'eté' → logprob: -12.264328002929688
    6. 'esses' → logprob: -12.389328002929688
    7. 'e' → logprob: -13.514328002929688
    8. 'es' → logprob: -13.764328002929688
    9. 'ese' → logprob: -13.889328002929688
    10. 'essa' → logprob: -14.139328002929688

Token 139: ' ici' (ID: 27994)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2500320076942444
    2. ' if' → logprob: -1.7500319480895996
    3. ' return' → logprob: -3.3750319480895996
    4. ' ' → logprob: -5.1250319480896
    5. ' (' → logprob: -6.1250319480896
    6. ':' → logprob: -6.8750319480896
    7. '  ' → logprob: -7.2500319480896
    8. ',' → logprob: -7.3750319480896
    9. '(' → logprob: -8.000032424926758
    10. ':
' → logprob: -8.125032424926758

Token 140: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.451644629240036
    2. '   ' → logprob: -1.5766446590423584
    3. ':
' → logprob: -2.4516446590423584
    4. ' if' → logprob: -2.9516446590423584
    5. '(' → logprob: -5.451644420623779
    6. '
' → logprob: -5.826644420623779
    7. ' :
' → logprob: -6.326644420623779
    8. ' :' → logprob: -6.826644420623779
    9. ',' → logprob: -6.951644420623779
    10. ' (' → logprob: -7.076644420623779

Token 141: ' le' (ID: 505)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.8067485094070435
    2. '   ' → logprob: -1.4317485094070435
    3. ' res' → logprob: -1.9317485094070435
    4. ' result' → logprob: -2.681748390197754
    5. 'result' → logprob: -3.431748390197754
    6. 'if' → logprob: -3.681748390197754
    7. ' return' → logprob: -3.931748390197754
    8. 'res' → logprob: -4.056748390197754
    9. 'return' → logprob: -5.556748390197754
    10. ' resultat' → logprob: -7.931748390197754

Token 142: ' code' (ID: 3490)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.9905219078063965
    2. ' big' → logprob: -0.9905219078063965
    3. ' small' → logprob: -2.8655219078063965
    4. 'big' → logprob: -2.9905219078063965
    5. 'return' → logprob: -3.2405219078063965
    6. 'small' → logprob: -3.4905219078063965
    7. ' if' → logprob: -3.6155219078063965
    8. ' result' → logprob: -4.1155219078063965
    9. 'if' → logprob: -4.4905219078063965
    10. ' code' → logprob: -4.8655219078063965

Token 143: ' est' (ID: 893)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8300815224647522
    2. '   ' → logprob: -1.2050814628601074
    3. ' return' → logprob: -2.4550814628601074
    4. ' =' → logprob: -2.8300814628601074
    5. '[' → logprob: -3.5800814628601074
    6. ' continue' → logprob: -4.080081462860107
    7. '=' → logprob: -4.705081462860107
    8. ' continues' → logprob: -4.955081462860107
    9. '  ' → logprob: -5.205081462860107
    10. 'return' → logprob: -5.455081462860107

Token 144: ' cens' (ID: 55288)
  Prédit: ' big'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' big' → logprob: -0.2722388207912445
    2. 'big' → logprob: -2.5222387313842773
    3. 'int' → logprob: -3.2722387313842773
    4. '   ' → logprob: -4.022238731384277
    5. ' simple' → logprob: -4.397238731384277
    6. ' valid' → logprob: -4.647238731384277
    7. ' ' → logprob: -5.272238731384277
    8. '"' → logprob: -5.272238731384277
    9. 'in' → logprob: -5.397238731384277
    10. ' not' → logprob: -5.522238731384277

Token 145: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.591357946395874
    2. 's' → logprob: -1.091357946395874
    3. 'se' → logprob: -2.966357946395874
    4. 'sé' → logprob: -3.216357946395874
    5. '```' → logprob: -4.841358184814453
    6. '#' → logprob: -5.716358184814453
    7. 'és' → logprob: -5.716358184814453
    8. '   ' → logprob: -6.966358184814453
    9. 'e' → logprob: -6.966358184814453
    10. 'ser' → logprob: -7.966358184814453

Token 146: ' marcher' (ID: 171848)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0439858436584473
    2. ' return' → logprob: -1.2939858436584473
    3. ' be' → logprob: -1.9189858436584473
    4. ' ' → logprob: -2.4189858436584473
    5. ' être' → logprob: -2.5439858436584473
    6. ' always' → logprob: -4.668985843658447
    7. 'return' → logprob: -5.168985843658447
    8. '  ' → logprob: -5.293985843658447
    9. ' toujours' → logprob: -5.293985843658447
    10. ' only' → logprob: -5.543985843658447

Token 147: '...
' (ID: 4908)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24911777675151825
    2. '(' → logprob: -2.624117851257324
    3. '(big' → logprob: -2.749117851257324
    4. ' ' → logprob: -3.999117851257324
    5. ')' → logprob: -3.999117851257324
    6. ' for' → logprob: -4.374117851257324
    7. ',' → logprob: -4.999117851257324
    8. ' (' → logprob: -5.249117851257324
    9. ' if' → logprob: -5.624117851257324
    10. '  ' → logprob: -6.124117851257324

Token 148: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6027101278305054
    2. '(' → logprob: -1.3527101278305054
    3. '(
' → logprob: -2.852710247039795
    4. '(big' → logprob: -3.227710247039795
    5. ' if' → logprob: -4.102710247039795
    6. ' 
' → logprob: -4.102710247039795
    7. ' return' → logprob: -4.102710247039795
    8. ' (' → logprob: -4.727710247039795
    9. ')' → logprob: -4.852710247039795
    10. '
' → logprob: -5.227710247039795

Token 149: ' p' (ID: 275)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.660250186920166
    2. 'if' → logprob: -1.035250186920166
    3. ' if' → logprob: -2.785250186920166
    4. ' res' → logprob: -3.410250186920166
    5. 'result' → logprob: -3.910250186920166
    6. 'return' → logprob: -5.785250186920166
    7. 'fact' → logprob: -6.035250186920166
    8. '   ' → logprob: -6.160250186920166
    9. 'r' → logprob: -6.535250186920166
    10. 'factor' → logprob: -6.785250186920166

Token 150: ' =' (ID: 314)
  Prédit: 'ro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ro' → logprob: -0.7083590626716614
    2. 'r' → logprob: -1.2083590030670166
    3. 'rod' → logprob: -1.9583590030670166
    4. '=' → logprob: -3.3333590030670166
    5. ' =' → logprob: -3.7083590030670166
    6. '   ' → logprob: -6.333359241485596
    7. 'ow' → logprob: -6.458359241485596
    8. 'rodu' → logprob: -6.958359241485596
    9. '  ' → logprob: -7.583359241485596
    10. 'rof' → logprob: -7.833359241485596

Token 151: ' min' (ID: 1349)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.13092273473739624
    2. 'math' → logprob: -2.130922794342041
    3. 'big' → logprob: -5.880922794342041
    4. ' math' → logprob: -7.505922794342041
    5. ' ' → logprob: -8.380922317504883
    6. '(math' → logprob: -9.005922317504883
    7. '0' → logprob: -9.630922317504883
    8. '[' → logprob: -10.005922317504883
    9. 'int' → logprob: -10.130922317504883
    10. 'factor' → logprob: -10.755922317504883

Token 152: '(s' (ID: 1858)
  Prédit: '(big'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(big' → logprob: -0.03415919095277786
    2. '(s' → logprob: -3.4091591835021973
    3. '(' → logprob: -7.784159183502197
    4. ' (' → logprob: -10.409159660339355
    5. '(pr' → logprob: -10.659159660339355
    6. '(com' → logprob: -11.159159660339355
    7. '(p' → logprob: -11.409159660339355
    8. '(sm' → logprob: -12.034159660339355
    9. '(len' → logprob: -13.034159660339355
    10. '((' → logprob: -13.159159660339355

Token 153: 'mall' (ID: 28671)
  Prédit: 'mall'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mall' → logprob: -0.3975323736667633
    2. '(big' → logprob: -1.147532343864441
    3. '(s' → logprob: -5.3975324630737305
    4. 'mal' → logprob: -6.0225324630737305
    5. '(' → logprob: -6.5225324630737305
    6. '(all' → logprob: -6.8975324630737305
    7. '(int' → logprob: -8.02253246307373
    8. '(pr' → logprob: -8.77253246307373
    9. 'all' → logprob: -9.39753246307373
    10. '(math' → logprob: -9.52253246307373

Token 154: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011466989293694496
    2. ' ,' → logprob: -4.511466979980469
    3. ')' → logprob: -8.386466979980469
    4. '(big' → logprob: -9.386466979980469
    5. ',n' → logprob: -10.386466979980469
    6. 'big' → logprob: -11.386466979980469
    7. ' )' → logprob: -11.761466979980469
    8. ' +' → logprob: -12.011466979980469
    9. '),' → logprob: -12.261466979980469
    10. ',
' → logprob: -12.261466979980469

Token 155: ' big' (ID: 3464)
  Prédit: ' big'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' big' → logprob: -0.25193214416503906
    2. 'big' → logprob: -1.501932144165039
    3. '(big' → logprob: -13.501932144165039
    4. ' ' → logprob: -13.626932144165039
    5. '   ' → logprob: -15.376932144165039
    6. 'Big' → logprob: -16.50193214416504
    7. '  ' → logprob: -16.75193214416504
    8. '_big' → logprob: -17.12693214416504
    9. 'b' → logprob: -17.50193214416504
    10. '.big' → logprob: -17.62693214416504

Token 156: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.35363155603408813
    2. ')' → logprob: -1.2286314964294434
    3. '-' → logprob: -5.728631496429443
    4. '-p' → logprob: -6.603631496429443
    5. ' )' → logprob: -7.853631496429443
    6. ',' → logprob: -9.478631973266602
    7. 'p' → logprob: -10.228631973266602
    8. '))' → logprob: -10.978631973266602
    9. ' p' → logprob: -11.478631973266602
    10. '-small' → logprob: -11.853631973266602

Token 157: ' small' (ID: 3291)
  Prédit: 'small'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'small' → logprob: -0.0032027887646108866
    2. ' small' → logprob: -5.75320291519165
    3. 'big' → logprob: -11.128202438354492
    4. 'sm' → logprob: -12.003202438354492
    5. ' ' → logprob: -13.378202438354492
    6. 's' → logprob: -14.128202438354492
    7. 'p' → logprob: -14.628202438354492
    8. '1' → logprob: -14.628202438354492
    9. 'large' → logprob: -15.628202438354492
    10. '_small' → logprob: -15.628202438354492

Token 158: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00042292833677493036
    2. ' )' → logprob: -8.125422477722168
    3. ')
' → logprob: -9.000422477722168
    4. ')
' → logprob: -13.750422477722168
    5. '))' → logprob: -14.125422477722168
    6. ' )
' → logprob: -14.875422477722168
    7. ')`' → logprob: -15.125422477722168
    8. ')

' → logprob: -15.500422477722168
    9. ' ' → logprob: -15.875422477722168
    10. ')#' → logprob: -16.125423431396484

Token 159: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.094332255423069
    2. ' ' → logprob: -3.469332218170166
    3. ')' → logprob: -4.094332218170166
    4. '+' → logprob: -4.094332218170166
    5. ' +' → logprob: -4.719332218170166
    6. '  ' → logprob: -5.594332218170166
    7. ' 
' → logprob: -5.594332218170166
    8. '  
' → logprob: -6.094332218170166
    9. '    
' → logprob: -6.469332218170166
    10. ' p' → logprob: -6.969332218170166

Token 160: ' nbr' (ID: 137674)
  Prédit: ' res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.3619352877140045
    2. 'res' → logprob: -1.6119352579116821
    3. ' result' → logprob: -3.1119353771209717
    4. 'result' → logprob: -3.2369353771209717
    5. '   ' → logprob: -5.236935138702393
    6. ' comb' → logprob: -5.611935138702393
    7. 'r' → logprob: -5.986935138702393
    8. 'fact' → logprob: -6.236935138702393
    9. 'factor' → logprob: -6.361935138702393
    10. ' ans' → logprob: -6.861935138702393

Token 161: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11818336695432663
    2. '=' → logprob: -2.6181833744049072
    3. ' ' → logprob: -3.3681833744049072
    4. '_comb' → logprob: -6.993183135986328
    5. '_com' → logprob: -7.243183135986328
    6. 'comb' → logprob: -7.493183135986328
    7. 'com' → logprob: -7.493183135986328
    8. '_choose' → logprob: -7.868183135986328
    9. '_' → logprob: -8.868183135986328
    10. '   ' → logprob: -9.243183135986328

Token 162: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.18012212216854095
    2. ' ' → logprob: -1.8051221370697021
    3. ' math' → logprob: -8.430122375488281
    4. 'math' → logprob: -8.805122375488281
    5. ' ' → logprob: -12.555122375488281
    6. '0' → logprob: -14.492622375488281
    7. '  
' → logprob: -14.555122375488281
    8. '   ' → logprob: -14.805122375488281
    9. '  ' → logprob: -14.930122375488281
    10. 'factor' → logprob: -15.055122375488281

Token 163: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.822646693966817e-06
    2. 'math' → logprob: -12.250007629394531
    3. ' ' → logprob: -12.875007629394531
    4. 'int' → logprob: -16.37500762939453
    5. '0' → logprob: -16.87500762939453
    6. ' math' → logprob: -17.06250762939453
    7. 'big' → logprob: -17.18750762939453
    8. '2' → logprob: -17.56250762939453
    9. '   ' → logprob: -17.62500762939453
    10. '=' → logprob: -18.50000762939453

Token 164: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 165: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 166: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3498915731906891
    2. 'for' (adapté à ' for') → logprob: -1.2248915433883667
    3. ' ' → logprob: -7.224891662597656
    4. '
' → logprob: -7.724891662597656
    5. ',' → logprob: -8.974891662597656
    6. ')' → logprob: -10.349891662597656
    7. 'import' → logprob: -10.974891662597656
    8. '   ' → logprob: -11.099891662597656
    9. '	for' → logprob: -11.224891662597656
    10. '  ' → logprob: -11.599891662597656

Token 167: ' k' (ID: 372)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.006442392244935036
    2. 'i' → logprob: -5.506442546844482
    3. ' _' → logprob: -7.006442546844482
    4. ' k' → logprob: -7.381442546844482
    5. '_' → logprob: -7.756442546844482
    6. ' x' → logprob: -9.381442070007324
    7. 'k' → logprob: -9.381442070007324
    8. ' ' → logprob: -9.381442070007324
    9. '	i' → logprob: -9.881442070007324
    10. ' j' → logprob: -10.256442070007324

Token 168: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02652287296950817
    2. 'in' → logprob: -3.6515228748321533
    3. ' ' → logprob: -8.526522636413574
    4. ',' → logprob: -11.776522636413574
    5. 'range' → logprob: -12.276522636413574
    6. 'n' → logprob: -12.651522636413574
    7. '1' → logprob: -13.026522636413574
    8. '  ' → logprob: -14.151522636413574
    9. '```' → logprob: -14.526522636413574
    10. 'k' → logprob: -14.776522636413574

Token 169: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.1269325166940689
    2. ' range' → logprob: -2.1269326210021973
    3. ' ' → logprob: -13.501932144165039
    4. '(range' → logprob: -13.501932144165039
    5. '	range' → logprob: -13.501932144165039
    6. '   ' → logprob: -15.751932144165039
    7. '  ' → logprob: -16.25193214416504
    8. 'rang' → logprob: -17.00193214416504
    9. '1' → logprob: -17.25193214416504
    10. '[' → logprob: -18.12693214416504

Token 170: '(big' (ID: 140437)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.014166101813316345
    2. '(p' → logprob: -4.264165878295898
    3. '1' → logprob: -13.764165878295898
    4. ' (' → logprob: -14.014165878295898
    5. '(
' → logprob: -14.764165878295898
    6. ' ' → logprob: -15.889165878295898
    7. 'p' → logprob: -16.2641658782959
    8. '(pr' → logprob: -16.8891658782959
    9. ' p' → logprob: -17.6391658782959
    10. '((' → logprob: -18.0141658782959

Token 171: '-p' (ID: 3161)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5520145893096924
    2. ' -' → logprob: -1.1770145893096924
    3. '-p' → logprob: -2.6770145893096924
    4. '-' → logprob: -4.177014350891113
    5. '+' → logprob: -4.427014350891113
    6. ',p' → logprob: -4.677014350891113
    7. ' ,' → logprob: -5.427014350891113
    8. '-k' → logprob: -5.927014350891113
    9. '):' → logprob: -7.552014350891113
    10. ' +' → logprob: -7.552014350891113

Token 172: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.039448149502277374
    2. ' +' → logprob: -3.2894482612609863
    3. ',' → logprob: -6.789448261260986
    4. '):' → logprob: -9.039447784423828
    5. '):
' → logprob: -9.914447784423828
    6. '+k' → logprob: -10.039447784423828
    7. '-' → logprob: -10.914447784423828
    8. '+p' → logprob: -11.039447784423828
    9. ' ,' → logprob: -11.539447784423828
    10. '1' → logprob: -12.539447784423828

Token 173: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.431207682704553e-05
    2. ' ' → logprob: -9.875054359436035
    3. 'k' → logprob: -13.375054359436035
    4. 'p' → logprob: -14.500054359436035
    5. '2' → logprob: -15.687554359436035
    6. '   ' → logprob: -15.750054359436035
    7. '
' → logprob: -16.06255340576172
    8. '  ' → logprob: -16.93755340576172
    9. '```' → logprob: -16.93755340576172
    10. ' p' → logprob: -17.00005340576172

Token 174: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12906956672668457
    2. ' ,' → logprob: -2.1290695667266846
    3. '):' → logprob: -6.5040693283081055
    4. ' ):' → logprob: -8.004069328308105
    5. ',k' → logprob: -8.754069328308105
    6. ',p' → logprob: -10.129069328308105
    7. ' ' → logprob: -10.129069328308105
    8. ',n' → logprob: -10.504069328308105
    9. '):
' → logprob: -11.129069328308105
    10. ')' → logprob: -11.879069328308105

Token 175: ' big' (ID: 3464)
  Prédit: 'big'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'big' → logprob: -0.023248272016644478
    2. ' big' → logprob: -3.7732481956481934
    3. '(big' → logprob: -13.148248672485352
    4. '_big' → logprob: -14.648248672485352
    5. 'Big' → logprob: -15.398248672485352
    6. '.big' → logprob: -16.14824867248535
    7. 'b' → logprob: -16.64824867248535
    8. '   ' → logprob: -16.89824867248535
    9. ' ' → logprob: -17.14824867248535
    10. 'k' → logprob: -17.89824867248535

Token 176: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0298327524214983
    2. ' +' → logprob: -3.5298328399658203
    3. '+k' → logprob: -9.52983283996582
    4. '):
' → logprob: -13.15483283996582
    5. ' ' → logprob: -13.40483283996582
    6. ')' → logprob: -13.40483283996582
    7. '   ' → logprob: -13.52983283996582
    8. '):' → logprob: -13.90483283996582
    9. '+p' → logprob: -14.90483283996582
    10. '+n' → logprob: -15.02983283996582

Token 177: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00010986098641296849
    2. ' ' → logprob: -9.125109672546387
    3. '```' → logprob: -15.375109672546387
    4. '   ' → logprob: -15.500109672546387
    5. '+' → logprob: -15.625109672546387
    6. ' k' → logprob: -16.125110626220703
    7. ')' → logprob: -16.250110626220703
    8. '
' → logprob: -16.500110626220703
    9. '2' → logprob: -16.750110626220703
    10. ' +' → logprob: -17.625110626220703

Token 178: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0007055217283777893
    2. ',' → logprob: -7.875705718994141
    3. '):
' → logprob: -9.12570571899414
    4. ' ):' → logprob: -9.12570571899414
    5. ':' → logprob: -9.50070571899414
    6. ')' → logprob: -10.37570571899414
    7. '):
' → logprob: -15.12570571899414
    8. '}:' → logprob: -15.37570571899414
    9. '():' → logprob: -15.37570571899414
    10. ']:' → logprob: -15.87570571899414

Token 179: '       ' (ID: 309)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5178996920585632
    2. '   ' → logprob: -1.392899751663208
    3. '<|end|>' → logprob: -2.392899751663208
    4. '    ' → logprob: -3.892899751663208
    5. '       ' → logprob: -4.017899513244629
    6. '  ' → logprob: -4.392899513244629
    7. ')' → logprob: -5.142899513244629
    8. '<|end|>' → logprob: -6.142899513244629
    9. ':' → logprob: -6.392899513244629
    10. ',' → logprob: -6.767899513244629

Token 180: ' nbr' (ID: 137674)
  Prédit: ' nbr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nbr' → logprob: -0.006526248995214701
    2. 'nbr' (adapté à ' nbr') → logprob: -5.381526470184326
    3. ' ' → logprob: -6.506526470184326
    4. ' n' → logprob: -8.881525993347168
    5. 'n' → logprob: -9.631525993347168
    6. 'Nbr' → logprob: -9.756525993347168
    7. '    ' → logprob: -9.756525993347168
    8. ' 
' → logprob: -10.506525993347168
    9. '<|end|>' → logprob: -11.506525993347168
    10. ' ' → logprob: -11.881525993347168

Token 181: ' *=' (ID: 25253)
  Prédit: ' *='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *=' → logprob: -0.63429856300354
    2. '*=' → logprob: -0.75929856300354
    3. '=' → logprob: -6.634298324584961
    4. '*' → logprob: -8.134298324584961
    5. ' =' → logprob: -10.134298324584961
    6. ' ' → logprob: -11.509298324584961
    7. 'import' → logprob: -11.634298324584961
    8. '   ' → logprob: -11.634298324584961
    9. '    ' → logprob: -12.009298324584961
    10. ')' → logprob: -12.884298324584961

Token 182: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0015023599844425917
    2. ' k' → logprob: -6.501502513885498
    3. '	k' → logprob: -18.876502990722656
    4. '(k' → logprob: -20.001502990722656
    5. ' ' → logprob: -20.376502990722656
    6. ' к' → logprob: -21.001502990722656
    7. '*k' → logprob: -21.251502990722656
    8. '{k' → logprob: -21.376502990722656
    9. '<|end|>' → logprob: -21.626502990722656
    10. '_k' → logprob: -21.626502990722656

Token 183: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 184: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 185: ' for' (ID: 395)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.0724017322063446
    2. ' /' → logprob: -3.072401762008667
    3. 'for' (adapté à ' for') → logprob: -4.447401523590088
    4. ' ' → logprob: -5.822401523590088
    5. ' for' → logprob: -6.072401523590088
    6. '   ' → logprob: -6.697401523590088
    7. ')' → logprob: -7.072401523590088
    8. '<|end|>' → logprob: -7.072401523590088
    9. ' /
' → logprob: -7.197401523590088
    10. '    ' → logprob: -7.197401523590088

Token 186: ' d' (ID: 272)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.05112462863326073
    2. 'k' → logprob: -3.0511245727539062
    3. ' i' → logprob: -7.051124572753906
    4. ' l' → logprob: -8.051124572753906
    5. ' j' → logprob: -8.426124572753906
    6. ' ' → logprob: -8.426124572753906
    7. ' x' → logprob: -8.926124572753906
    8. ' _' → logprob: -9.051124572753906
    9. ' r' → logprob: -9.176124572753906
    10. ' d' → logprob: -9.676124572753906

Token 187: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0007287554908543825
    2. 'in' → logprob: -7.250728607177734
    3. ' ' → logprob: -11.500728607177734
    4. 'n' → logprob: -13.125728607177734
    5. 'd' → logprob: -13.250728607177734
    6. ',' → logprob: -13.750728607177734
    7. ' i' → logprob: -14.125728607177734
    8. '   ' → logprob: -15.000728607177734
    9. 'en' → logprob: -15.000728607177734
    10. '  ' → logprob: -15.125728607177734

Token 188: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0001628956088097766
    2. ' range' → logprob: -8.750163078308105
    3. '(range' → logprob: -12.375163078308105
    4. '   ' → logprob: -15.625163078308105
    5. '	range' → logprob: -16.62516212463379
    6. 'rang' → logprob: -17.50016212463379
    7. ' ' → logprob: -18.00016212463379
    8. '(' → logprob: -18.37516212463379
    9. '  ' → logprob: -18.87516212463379
    10. 'r' → logprob: -19.50016212463379

Token 189: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.981667537620524e-06
    2. '(p' → logprob: -13.375001907348633
    3. '1' → logprob: -15.125001907348633
    4. ' (' → logprob: -16.500001907348633
    5. '(
' → logprob: -18.875001907348633
    6. 'p' → logprob: -19.000001907348633
    7. '[' → logprob: -20.500001907348633
    8. '   ' → logprob: -20.750001907348633
    9. ',' → logprob: -21.125001907348633
    10. '<p' → logprob: -21.250001907348633

Token 190: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001749351795297116
    2. '2' → logprob: -8.875174522399902
    3. '(' → logprob: -10.875174522399902
    4. ' ' → logprob: -11.375174522399902
    5. 'p' → logprob: -12.625174522399902
    6. '   ' → logprob: -13.625174522399902
    7. '(p' → logprob: -16.62517547607422
    8. '	' → logprob: -17.62517547607422
    9. ' p' → logprob: -17.75017547607422
    10. '    ' → logprob: -18.00017547607422

Token 191: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12759819626808167
    2. ',p' → logprob: -2.127598285675049
    3. ' ,' → logprob: -7.502598285675049
    4. 'p' → logprob: -9.12759780883789
    5. ' p' → logprob: -12.37759780883789
    6. ',
' → logprob: -12.87759780883789
    7. '(p' → logprob: -13.25259780883789
    8. '<p' → logprob: -15.12759780883789
    9. ',(' → logprob: -15.50259780883789
    10. '	p' → logprob: -15.87759780883789

Token 192: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0031777136027812958
    2. ' p' → logprob: -5.753177642822266
    3. '	p' → logprob: -18.003177642822266
    4. '<p' → logprob: -18.503177642822266
    5. '+p' → logprob: -19.253177642822266
    6. '   ' → logprob: -19.878177642822266
    7. '(p' → logprob: -20.128177642822266
    8. ' ' → logprob: -20.378177642822266
    9. ')p' → logprob: -20.378177642822266
    10. '_p' → logprob: -21.878177642822266

Token 193: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.011051470413804054
    2. ' +' → logprob: -4.511051654815674
    3. '+p' → logprob: -12.636051177978516
    4. '+
' → logprob: -15.386051177978516
    5. '+k' → logprob: -16.136051177978516
    6. ' +
' → logprob: -17.511051177978516
    7. '()+' → logprob: -17.636051177978516
    8. '+)' → logprob: -18.011051177978516
    9. '＋' → logprob: -18.011051177978516
    10. '   ' → logprob: -18.386051177978516

Token 194: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00020544764993246645
    2. ' ' → logprob: -8.500205039978027
    3. '   ' → logprob: -14.125205039978027
    4. ')' → logprob: -14.750205039978027
    5. 'd' → logprob: -15.250205039978027
    6. ' d' → logprob: -15.375205039978027
    7. '+' → logprob: -15.500205039978027
    8. '):
' → logprob: -15.875205039978027
    9. '```' → logprob: -17.250205993652344
    10. '):' → logprob: -18.125205993652344

Token 195: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.320492148399353
    2. '):' → logprob: -1.945492148399353
    3. ':' → logprob: -2.3204922676086426
    4. ':
' → logprob: -3.4454922676086426
    5. '   ' → logprob: -7.945492267608643
    6. '):
' → logprob: -8.695491790771484
    7. ' :
' → logprob: -8.695491790771484
    8. ' ):
' → logprob: -8.695491790771484
    9. ',' → logprob: -9.445491790771484
    10. ':n' → logprob: -9.820491790771484

Token 196: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.049195729196071625
    2. '   ' → logprob: -3.6741957664489746
    3. '<|end|>' → logprob: -4.549195766448975
    4. ' ' → logprob: -4.799195766448975
    5. '    ' → logprob: -6.549195766448975
    6. ' nbr' → logprob: -6.799195766448975
    7. '        
' → logprob: -7.924195766448975
    8. '        ' → logprob: -8.299195289611816
    9. '  ' → logprob: -9.174195289611816
    10. '<|end|>' → logprob: -9.549195289611816

Token 197: ' nbr' (ID: 137674)
  Prédit: ' nbr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nbr' → logprob: -0.041066356003284454
    2. 'nbr' (adapté à ' nbr') → logprob: -3.2910664081573486
    3. '       ' → logprob: -6.0410661697387695
    4. 'n' → logprob: -8.54106616973877
    5. '   ' → logprob: -8.66606616973877
    6. ' ' → logprob: -9.29106616973877
    7. '
' → logprob: -10.04106616973877
    8. ' n' → logprob: -10.29106616973877
    9. '        
' → logprob: -11.29106616973877
    10. '        ' → logprob: -11.54106616973877

Token 198: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.0477469302713871
    2. ' /=' → logprob: -3.5477468967437744
    3. ' *=' → logprob: -4.7977471351623535
    4. '//=' → logprob: -4.7977471351623535
    5. ' ' → logprob: -7.1727471351623535
    6. '*=' → logprob: -8.547746658325195
    7. ' =' → logprob: -9.422746658325195
    8. '=' → logprob: -9.422746658325195
    9. ' ' → logprob: -9.797746658325195
    10. '//' → logprob: -10.297746658325195

Token 199: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0001239196863025427
    2. '=d' → logprob: -9.000123977661133
    3. ' d' → logprob: -16.875123977661133
    4. '=

' → logprob: -17.125123977661133
    5. '=k' → logprob: -17.500123977661133
    6. '=
' → logprob: -17.625123977661133
    7. '=n' → logprob: -17.625123977661133
    8. '=_' → logprob: -17.625123977661133
    9. '=}' → logprob: -17.750123977661133
    10. ' =' → logprob: -17.750123977661133

Token 200: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.07888989895582199
    2. ' d' → logprob: -2.578889846801758
    3. '	d' → logprob: -16.578889846801758
    4. '   ' → logprob: -18.203889846801758
    5. ' ' → logprob: -18.203889846801758
    6. ' ' → logprob: -19.453889846801758
    7. ')d' → logprob: -19.703889846801758
    8. '_d' → logprob: -20.578889846801758
    9. '>d' → logprob: -20.578889846801758
    10. '    ' → logprob: -21.203889846801758

Token 201: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31994104385375977
    2. '
' → logprob: -1.4449410438537598
    3. '    
' → logprob: -4.31994104385376
    4. 'return' → logprob: -4.81994104385376
    5. ' return' → logprob: -4.94494104385376
    6. '\n' → logprob: -5.94494104385376
    7. ' 
' → logprob: -5.94494104385376
    8. '  
' → logprob: -6.69494104385376
    9. '<|end|>' → logprob: -6.94494104385376
    10. '	return' → logprob: -7.06994104385376

Token 202: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01983998715877533
    2. ' return' → logprob: -4.019839763641357
    3. 'return' → logprob: -7.519839763641357
    4. '    
' → logprob: -7.644839763641357
    5. ' 
' → logprob: -8.394840240478516
    6. '	return' → logprob: -8.519840240478516
    7. '\n' → logprob: -9.519840240478516
    8. '
' → logprob: -9.894840240478516
    9. ' ' → logprob: -10.019840240478516
    10. '<|end|>' → logprob: -10.644840240478516

Token 203: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08404584228992462
    2. ' return' → logprob: -2.709045886993408
    3. 'return' (adapté à ' return') → logprob: -4.959045886993408
    4. ' 
' → logprob: -5.584045886993408
    5. '    
' → logprob: -6.709045886993408
    6. '	return' → logprob: -7.459045886993408
    7. ' ' → logprob: -7.709045886993408
    8. '
' → logprob: -7.834045886993408
    9. '\n' → logprob: -8.58404541015625
    10. '<|end|>' → logprob: -8.83404541015625

Token 204: ' nbr' (ID: 137674)
  Prédit: 'nbr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nbr' → logprob: -0.038045283406972885
    2. ' nbr' → logprob: -3.2880451679229736
    3. 'n' → logprob: -13.038044929504395
    4. 'nb' → logprob: -13.913044929504395
    5. ' ' → logprob: -15.538044929504395
    6. 'Nbr' → logprob: -15.663044929504395
    7. 'int' → logprob: -15.913044929504395
    8. '	n' → logprob: -16.16304588317871
    9. 'nr' → logprob: -16.28804588317871
    10. 'nombre' → logprob: -17.16304588317871

Token 205: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 206: 'mod' (ID: 4847)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.9939265251159668
    2. 'answer' → logprob: -1.4939265251159668
    3. 'res' → logprob: -1.9939265251159668
    4. 'total' → logprob: -2.368926525115967
    5. 'ans' → logprob: -2.868926525115967
    6. 'count' → logprob: -3.243926525115967
    7. 'fact' → logprob: -4.618926525115967
    8. 'print' → logprob: -4.743926525115967
    9. 'def' → logprob: -4.743926525115967
    10. 'prime' → logprob: -5.243926525115967

Token 207: 'ulo' (ID: 5953)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4857306480407715
    2. '=' → logprob: -1.2357306480407715
    3. '_' → logprob: -2.6107306480407715
    4. 'ulus' → logprob: -4.4857306480407715
    5. '<|end|>' → logprob: -5.6107306480407715
    6. 'ulo' → logprob: -7.2357306480407715
    7. 'uler' → logprob: -7.4857306480407715
    8. 'e' → logprob: -7.8607306480407715
    9. 'ulation' → logprob: -8.23573112487793
    10. 'ULO' → logprob: -8.23573112487793

Token 208: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03826753795146942
    2. '=' → logprob: -3.2882676124572754
    3. ' ' → logprob: -9.288267135620117
    4. '_' → logprob: -9.538267135620117
    5. ':' → logprob: -11.038267135620117
    6. ',' → logprob: -11.663267135620117
    7. ' :=' → logprob: -12.163267135620117
    8. '<|end|>' → logprob: -12.163267135620117
    9. ' :' → logprob: -12.663267135620117
    10. ' ==' → logprob: -12.913267135620117

Token 209: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0086522763594985
    2. '100' → logprob: -4.758652210235596
    3. ' ' → logprob: -11.133652687072754
    4. '998' → logprob: -11.133652687072754
    5. '1' → logprob: -11.883652687072754
    6. '(' → logprob: -14.258652687072754
    7. '123' → logprob: -15.258652687072754
    8. 'pow' → logprob: -15.633652687072754
    9. '109' → logprob: -15.758652687072754
    10. '101' → logprob: -16.508651733398438

Token 210: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.009875434450805187
    2. '100' → logprob: -4.634875297546387
    3. '998' → logprob: -9.134875297546387
    4. '1' → logprob: -11.634875297546387
    5. '(' → logprob: -14.009875297546387
    6. 'pow' → logprob: -14.259875297546387
    7. ' ' → logprob: -15.259875297546387
    8. '123' → logprob: -15.509875297546387
    9. 'int' → logprob: -15.884875297546387
    10. '109' → logprob: -15.884875297546387

Token 211: ' **' (ID: 6240)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '9' → logprob: -3.9888433093437925e-05
    2. '09' → logprob: -10.750040054321289
    3. '+' → logprob: -11.500040054321289
    4. '**' → logprob: -12.125040054321289
    5. '```' → logprob: -13.250040054321289
    6. '009' → logprob: -15.625040054321289
    7. '000' → logprob: -15.750040054321289
    8. '99' → logprob: -16.25004005432129
    9. '18' → logprob: -16.37504005432129
    10. '7' → logprob: -16.50004005432129

Token 212: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -3.4121114822482923e-06
    2. '09' → logprob: -12.625003814697266
    3. '+' → logprob: -16.875003814697266
    4. '18' → logprob: -17.125003814697266
    5. '10' → logprob: -18.125003814697266
    6. '15' → logprob: -19.375003814697266
    7. '8' → logprob: -20.000003814697266
    8. '
' → logprob: -20.125003814697266
    9. '12' → logprob: -20.375003814697266
    10. ' ' → logprob: -20.500003814697266

Token 213: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -3.4121114822482923e-06
    2. '09' → logprob: -12.625003814697266
    3. '18' → logprob: -16.625003814697266
    4. '+' → logprob: -17.250003814697266
    5. '10' → logprob: -17.500003814697266
    6. '8' → logprob: -18.625003814697266
    7. '15' → logprob: -19.000003814697266
    8. '
' → logprob: -19.125003814697266
    9. '９' → logprob: -19.750003814697266
    10. '}' → logprob: -19.812503814697266

Token 214: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0015118853189051151
    2. ' +' → logprob: -6.501512050628662
    3. '7' → logprob: -11.626511573791504
    4. '+
' → logprob: -14.751511573791504
    5. ' plus' → logprob: -16.37651252746582
    6. '＋' → logprob: -16.62651252746582
    7. 'plus' → logprob: -17.00151252746582
    8. ' +
' → logprob: -18.37651252746582
    9. ' ' → logprob: -18.75151252746582
    10. '```' → logprob: -18.75151252746582

Token 215: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. '+' → logprob: -20.625
    3. '```' → logprob: -22.125
    4. ' ' → logprob: -22.25
    5. '07' → logprob: -22.625
    6. '9' → logprob: -23.75
    7. '   ' → logprob: -24.25
    8. '٧' → logprob: -24.5625
    9. '.' → logprob: -24.875
    10. '७' → logprob: -24.875

Token 216: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. '+' → logprob: -21.0
    3. '```' → logprob: -21.125
    4. '07' → logprob: -21.25
    5. ' ' → logprob: -22.25
    6. '٧' → logprob: -22.9375
    7. '७' → logprob: -23.375
    8. '9' → logprob: -23.5625
    9. '۷' → logprob: -23.5625
    10. '৭' → logprob: -23.8125

Token 217: '
' (ID: 198)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.8486502766609192
    2. 'answer' → logprob: -1.5986502170562744
    3. 'res' → logprob: -1.9736502170562744
    4. 'def' → logprob: -2.9736502170562744
    5. 'count' → logprob: -3.2236502170562744
    6. 'total' → logprob: -3.4736502170562744
    7. 'ways' → logprob: -3.7236502170562744
    8. 'ans' → logprob: -3.7236502170562744
    9. 'div' → logprob: -4.2236504554748535
    10. '#' → logprob: -4.4736504554748535

Token 218: 'result' (ID: 2521)
  Prédit: 'answer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'answer' → logprob: -1.4780502319335938
    2. 'res' → logprob: -1.7280502319335938
    3. 'result' → logprob: -1.7280502319335938
    4. 'def' → logprob: -2.4780502319335938
    5. 'count' → logprob: -2.7280502319335938
    6. 'ans' → logprob: -3.2280502319335938
    7. 'div' → logprob: -3.4780502319335938
    8. 'dp' → logprob: -3.4780502319335938
    9. 'fact' → logprob: -3.6030502319335938
    10. 'factor' → logprob: -3.8530502319335938

Token 219: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005251660477370024
    2. '=' → logprob: -5.255251884460449
    3. ' ' → logprob: -11.00525188446045
    4. ',' → logprob: -15.13025188446045
    5. ' =
' → logprob: -15.25525188446045
    6. 's' → logprob: -15.88025188446045
    7. '_' → logprob: -15.88025188446045
    8. ')' → logprob: -16.130250930786133
    9. ' ' → logprob: -16.130250930786133
    10. ' =)' → logprob: -16.380250930786133

Token 220: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.026514165103435516
    2. '0' → logprob: -4.026514053344727
    3. 'com' → logprob: -5.026514053344727
    4. ' ' → logprob: -6.401514053344727
    5. 'comb' → logprob: -10.276514053344727
    6. '(com' → logprob: -10.526514053344727
    7. ' comb' → logprob: -10.901514053344727
    8. ' com' → logprob: -11.276514053344727
    9. 'pow' → logprob: -12.026514053344727
    10. ' combin' → logprob: -12.526514053344727

Token 221: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0014915307983756065
    2. 'com' → logprob: -6.626491546630859
    3. '0' → logprob: -8.87649154663086
    4. 'comb' → logprob: -11.00149154663086
    5. '(com' → logprob: -12.62649154663086
    6. 'pow' → logprob: -12.75149154663086
    7. ' ' → logprob: -14.62649154663086
    8. 'pr' → logprob: -14.87649154663086
    9. '```' → logprob: -15.00149154663086
    10. '(' → logprob: -15.25149154663086

Token 222: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00047047226689755917
    2. ' for' → logprob: -7.7504706382751465
    3. '<|end|>' → logprob: -10.750470161437988
    4. 'pr' → logprob: -12.125470161437988
    5. 'from' → logprob: -12.750470161437988
    6. '#' → logprob: -12.750470161437988
    7. '
' → logprob: -13.125470161437988
    8. 'factor' → logprob: -13.375470161437988
    9. '*' → logprob: -14.375470161437988
    10. 'prime' → logprob: -14.625470161437988

Token 223: 'curr' (ID: 28376)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.7217395901679993
    2. 'for' → logprob: -0.8467395901679993
    3. 'count' → logprob: -3.4717395305633545
    4. 'pr' → logprob: -3.8467395305633545
    5. 'counts' → logprob: -3.9717395305633545
    6. 'prime' → logprob: -5.471739768981934
    7. 'counter' → logprob: -5.596739768981934
    8. 'current' → logprob: -5.596739768981934
    9. 'cnt' → logprob: -7.846739768981934
    10. 'freq' → logprob: -7.971739768981934

Token 224: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.002011775970459
    2. '_prime' → logprob: -1.627011775970459
    3. '_factor' → logprob: -2.127011775970459
    4. '_val' → logprob: -2.252011775970459
    5. '_pr' → logprob: -2.877011775970459
    6. '_div' → logprob: -3.377011775970459
    7. '_' → logprob: -3.752011775970459
    8. '_p' → logprob: -4.377011775970459
    9. '_count' → logprob: -4.377011775970459
    10. '_f' → logprob: -4.752011775970459

Token 225: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6752251386642456
    2. '{}' → logprob: -1.3002251386642456
    3. '0' → logprob: -1.6752251386642456
    4. 'pr' → logprob: -4.300225257873535
    5. 'n' → logprob: -4.675225257873535
    6. 'len' → logprob: -5.300225257873535
    7. '{' → logprob: -6.175225257873535
    8. '{}
' → logprob: -8.175225257873535
    9. 'm' → logprob: -8.675225257873535
    10. '2' → logprob: -9.050225257873535

Token 226: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4824219048023224
    2. 'pr' → logprob: -1.982421875
    3. '0' → logprob: -2.357421875
    4. 'n' → logprob: -2.482421875
    5. 'm' → logprob: -2.857421875
    6. '2' → logprob: -5.607421875
    7. '{}' → logprob: -6.107421875
    8. 'len' → logprob: -6.357421875
    9. 'math' → logprob: -7.232421875
    10. '[]' → logprob: -8.357421875

Token 227: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.08282480388879776
    2. 'while' → logprob: -3.45782470703125
    3. ' for' → logprob: -3.58282470703125
    4. 'from' → logprob: -4.08282470703125
    5. ' while' → logprob: -6.58282470703125
    6. '#' → logprob: -7.70782470703125
    7. '
' → logprob: -8.08282470703125
    8. 'import' → logprob: -8.33282470703125
    9. 'pr' → logprob: -8.58282470703125
    10. ' from' → logprob: -8.70782470703125

Token 228: 'if' (ID: 366)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0005311102140694857
    2. 'pr' → logprob: -8.375531196594238
    3. ' for' → logprob: -8.625531196594238
    4. 'from' → logprob: -9.375531196594238
    5. '#' → logprob: -11.250531196594238
    6. 'while' → logprob: -11.250531196594238
    7. 'import' → logprob: -12.125531196594238
    8. 'p' → logprob: -13.625531196594238
    9. 'prime' → logprob: -14.000531196594238
    10. 'def' → logprob: -14.625531196594238

Token 229: ' len' (ID: 4631)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.8436198830604553
    2. ' m' → logprob: -0.9686198830604553
    3. 'm' → logprob: -2.7186198234558105
    4. 'n' → logprob: -2.8436198234558105
    5. ' primes' → logprob: -3.2186198234558105
    6. ' len' → logprob: -3.8436198234558105
    7. 'pr' → logprob: -6.5936198234558105
    8. 'len' → logprob: -7.0936198234558105
    9. ' not' → logprob: -7.8436198234558105
    10. ' ' → logprob: -7.9686198234558105

Token 230: '(pr' (ID: 38401)
  Prédit: '(pr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pr' → logprob: -3.0948158382670954e-05
    2. ' (' → logprob: -10.500030517578125
    3. '(' → logprob: -13.125030517578125
    4. 'pr' → logprob: -13.750030517578125
    5. '(pl' → logprob: -16.250030517578125
    6. '	pr' → logprob: -16.625030517578125
    7. '(p' → logprob: -17.375030517578125
    8. '(
' → logprob: -18.375030517578125
    9. '()' → logprob: -18.875030517578125
    10. '(s' → logprob: -18.875030517578125

Token 231: 'imes' (ID: 2332)
  Prédit: 'imes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imes' → logprob: -0.0003918271977454424
    2. 'ims' → logprob: -9.250391960144043
    3. 'mes' → logprob: -10.375391960144043
    4. 'ime' → logprob: -10.375391960144043
    5. '>' → logprob: -10.875391960144043
    6. ')' → logprob: -11.125391960144043
    7. 'im' → logprob: -11.125391960144043
    8. '[' → logprob: -11.312891960144043
    9. '{' → logprob: -11.437891960144043
    10. '#' → logprob: -11.437891960144043

Token 232: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002047243993729353
    2. ')>' → logprob: -6.877047061920166
    3. ' )' → logprob: -7.377047061920166
    4. ')==' → logprob: -8.127047538757324
    5. '>' → logprob: -9.627047538757324
    6. ' >' → logprob: -11.252047538757324
    7. '==' → logprob: -12.002047538757324
    8. ' ==' → logprob: -12.877047538757324
    9. ')>=' → logprob: -13.752047538757324
    10. ')!=' → logprob: -14.252047538757324

Token 233: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.7526503205299377
    2. '==' → logprob: -1.252650260925293
    3. ' >' → logprob: -1.877650260925293
    4. '>' → logprob: -2.502650260925293
    5. ':' → logprob: -4.877650260925293
    6. ' !=' → logprob: -8.627650260925293
    7. ' :' → logprob: -8.877650260925293
    8. ' ' → logprob: -9.127650260925293
    9. '!=' → logprob: -9.377650260925293
    10. ' <=' → logprob: -9.877650260925293

Token 234: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01192072220146656
    2. '1' → logprob: -4.636920928955078
    3. ' ' → logprob: -6.136920928955078
    4. 'n' → logprob: -15.261920928955078
    5. '2' → logprob: -15.386920928955078
    6. 'm' → logprob: -15.636920928955078
    7. '[]' → logprob: -16.386920928955078
    8. 'len' → logprob: -17.261920928955078
    9. '(' → logprob: -17.449420928955078
    10. '  ' → logprob: -17.511920928955078

Token 235: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07015760987997055
    2. '1' → logprob: -2.695157527923584
    3. ' ' → logprob: -8.445158004760742
    4. 'm' → logprob: -12.445158004760742
    5. 'n' → logprob: -13.820158004760742
    6. '2' → logprob: -14.695158004760742
    7. 'pr' → logprob: -15.445158004760742
    8. 'len' → logprob: -15.695158004760742
    9. '[]' → logprob: -16.632658004760742
    10. 'curr' → logprob: -17.132658004760742

Token 236: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005285576917231083
    2. ':
' → logprob: -5.255285739898682
    3. ' or' → logprob: -10.130285263061523
    4. ' :' → logprob: -11.880285263061523
    5. 'or' → logprob: -12.755285263061523
    6. ' and' → logprob: -14.130285263061523
    7. ':return' → logprob: -14.755285263061523
    8. ':

' → logprob: -14.880285263061523
    9. '==' → logprob: -16.130285263061523
    10. ':
' → logprob: -16.255285263061523

Token 237: '   ' (ID: 271)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.1597265750169754
    2. '   ' → logprob: -2.659726619720459
    3. ':' → logprob: -2.909726619720459
    4. ' and' → logprob: -4.409726619720459
    5. 'result' → logprob: -5.159726619720459
    6. 'print' → logprob: -5.659726619720459
    7. 'if' → logprob: -7.909726619720459
    8. ' ' → logprob: -8.2847261428833
    9. ' or' → logprob: -8.2847261428833
    10. ' result' → logprob: -8.4097261428833

Token 238: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0984625294804573
    2. 'result' → logprob: -2.4734625816345215
    3. 'if' → logprob: -5.5984625816345215
    4. ' print' → logprob: -5.7234625816345215
    5. '   ' → logprob: -7.4734625816345215
    6. ' result' → logprob: -7.4734625816345215
    7. '1' → logprob: -7.5984625816345215
    8. '0' → logprob: -8.223462104797363
    9. ' if' → logprob: -8.473462104797363
    10. '
' → logprob: -9.223462104797363

Token 239: '(result' (ID: 8111)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.000283265660982579
    2. '(m' → logprob: -9.625283241271973
    3. '((' → logprob: -9.625283241271973
    4. '1' → logprob: -9.750283241271973
    5. '("' → logprob: -10.750283241271973
    6. '(n' → logprob: -10.875283241271973
    7. '(pow' → logprob: -11.250283241271973
    8. '(
' → logprob: -11.375283241271973
    9. '0' → logprob: -11.750283241271973
    10. '(com' → logprob: -12.125283241271973

Token 240: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004099773708730936
    2. ')
' → logprob: -5.5040998458862305
    3. ' )' → logprob: -11.25409984588623
    4. ')
' → logprob: -12.12909984588623
    5. '*' → logprob: -14.37909984588623
    6. '()' → logprob: -14.87909984588623
    7. '0' → logprob: -15.37909984588623
    8. '**' → logprob: -15.37909984588623
    9. ')

' → logprob: -15.37909984588623
    10. ' )
' → logprob: -15.62909984588623

Token 241: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.0742606669664383
    2. '   ' → logprob: -3.074260711669922
    3. '
' → logprob: -4.449260711669922
    4. ' else' → logprob: -5.199260711669922
    5. '    
' → logprob: -5.449260711669922
    6. 'elif' → logprob: -6.199260711669922
    7. ')' → logprob: -7.199260711669922
    8. ' 
' → logprob: -7.824260711669922
    9. '  
' → logprob: -9.199260711669922
    10. '#' → logprob: -9.449260711669922

Token 242: ' exit' (ID: 10654)
  Prédit: 'exit'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exit' (adapté à ' exit') → logprob: -0.6484679579734802
    2. 'else' → logprob: -1.023468017578125
    3. '   ' → logprob: -2.648468017578125
    4. ' exit' → logprob: -3.773468017578125
    5. '
' → logprob: -4.773468017578125
    6. '    
' → logprob: -5.273468017578125
    7. 'elif' → logprob: -6.273468017578125
    8. ')' → logprob: -6.523468017578125
    9. ' 
' → logprob: -6.648468017578125
    10. '	exit' → logprob: -6.648468017578125

Token 243: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0002181987656513229
    2. '(' → logprob: -8.500218391418457
    3. '()
' → logprob: -11.250218391418457
    4. '0' → logprob: -14.000218391418457
    5. '())' → logprob: -15.250218391418457
    6. '()`' → logprob: -15.500218391418457
    7. ' ()' → logprob: -15.875218391418457
    8. '()

' → logprob: -16.25021743774414
    9. '()]' → logprob: -16.87521743774414
    10. '()>' → logprob: -17.00021743774414

Token 244: '#' (ID: 2)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.08913587778806686
    2. 'for' → logprob: -3.0891358852386475
    3. 'pr' → logprob: -4.339135646820068
    4. 'count' → logprob: -5.339135646820068
    5. 'last' → logprob: -5.589135646820068
    6. 'counts' → logprob: -5.714135646820068
    7. 'curr' → logprob: -5.839135646820068
    8. 'current' → logprob: -6.089135646820068
    9. 'prime' → logprob: -6.339135646820068
    10. 'prev' → logprob: -6.339135646820068

Token 245: ' ' (ID: 220)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.05080186948180199
    2. 'for' → logprob: -3.5508017539978027
    3. 'pr' → logprob: -5.175801753997803
    4. 'count' → logprob: -5.675801753997803
    5. 'counts' → logprob: -5.925801753997803
    6. 'prime' → logprob: -6.050801753997803
    7. 'last' → logprob: -6.425801753997803
    8. 'curr' → logprob: -7.175801753997803
    9. 'prev' → logprob: -7.175801753997803
    10. 'counter' → logprob: -7.300801753997803

Token 246: '2' (ID: 17)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.36084994673728943
    2. 'for' → logprob: -1.4858499765396118
    3. 'pr' → logprob: -2.9858498573303223
    4. 'last' → logprob: -4.985849857330322
    5. 'prev' → logprob: -5.235849857330322
    6. 'current' → logprob: -5.360849857330322
    7. 'curr' → logprob: -5.860849857330322
    8. 'count' → logprob: -6.110849857330322
    9. 'prime' → logprob: -6.360849857330322
    10. 'counter' → logprob: -7.360849857330322

Token 247: 'e' (ID: 68)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7285727858543396
    2. 'for' → logprob: -1.8535728454589844
    3. '=' → logprob: -2.3535728454589844
    4. ' =' → logprob: -2.4785728454589844
    5. 'from' → logprob: -3.8535728454589844
    6. 'pr' → logprob: -3.9785728454589844
    7. 'curr' → logprob: -4.353572845458984
    8. ' for' → logprob: -4.353572845458984
    9. ')' → logprob: -4.478572845458984
    10. 'result' → logprob: -4.478572845458984

Token 248: ' boucle' (ID: 174211)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8507089614868164
    2. 'for' → logprob: -0.8507089614868164
    3. ':' → logprob: -2.7257089614868164
    4. 'while' → logprob: -3.7257089614868164
    5. 'token' → logprob: -4.350708961486816
    6. ' while' → logprob: -4.475708961486816
    7. ' token' → logprob: -5.850708961486816
    8. '#' → logprob: -5.975708961486816
    9. 'range' → logprob: -5.975708961486816
    10. 'factor' → logprob: -6.475708961486816

Token 249: ',' (ID: 11)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1277579814195633
    2. 'while' → logprob: -2.627758026123047
    3. ' for' → logprob: -4.252758026123047
    4. 'pr' → logprob: -4.252758026123047
    5. 'from' → logprob: -4.752758026123047
    6. ':' → logprob: -4.877758026123047
    7. ' while' → logprob: -7.252758026123047
    8. '(pr' → logprob: -7.877758026123047
    9. 'val' → logprob: -8.127758026123047
    10. 'count' → logprob: -8.627758026123047

Token 250: ' plus' (ID: 2932)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8933915495872498
    2. 'from' → logprob: -1.2683916091918945
    3. 'curr' → logprob: -2.3933916091918945
    4. 'current' → logprob: -3.1433916091918945
    5. 'count' → logprob: -3.3933916091918945
    6. 'last' → logprob: -3.7683916091918945
    7. 'prev' → logprob: -3.8933916091918945
    8. ' for' → logprob: -4.6433916091918945
    9. ' curr' → logprob: -4.6433916091918945
    10. ' from' → logprob: -4.6433916091918945

Token 251: ' ou' (ID: 2031)
  Prédit: 'pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.32204294204711914
    2. 'for' → logprob: -2.822042942047119
    3. 'prec' → logprob: -3.072042942047119
    4. 'pro' → logprob: -3.822042942047119
    5. 'import' → logprob: -3.947042942047119
    6. '#' → logprob: -4.072042942047119
    7. 'loin' → logprob: -4.197042942047119
    8. 'complex' → logprob: -4.322042942047119
    9. 'plus' → logprob: -4.447042942047119
    10. 'haut' → logprob: -4.947042942047119

Token 252: ' moins' (ID: 15924)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.4543145895004272
    2. '```' → logprob: -1.7043145895004272
    3. '#' → logprob: -1.9543145895004272
    4. 'près' → logprob: -2.079314708709717
    5. 'bas' → logprob: -2.829314708709717
    6. 'plus' → logprob: -3.329314708709717
    7. 't' → logprob: -3.954314708709717
    8. 'v' → logprob: -4.204314708709717
    9. 'tot' → logprob: -4.579314708709717
    10. 'import' → logprob: -4.579314708709717

Token 253: ' ce' (ID: 2357)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0642937496304512
    2. ' for' → logprob: -3.06429386138916
    3. 'while' → logprob: -4.56429386138916
    4. ':' → logprob: -6.06429386138916
    5. 'pr' → logprob: -6.56429386138916
    6. 'from' → logprob: -7.56429386138916
    7. ' while' → logprob: -8.18929386138916
    8. 'val' → logprob: -8.68929386138916
    9. 'i' → logprob: -9.56429386138916
    10. 'range' → logprob: -9.93929386138916

Token 254: ' qui' (ID: 2780)
  Prédit: 'que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.09865738451480865
    2. ' que' → logprob: -2.7236573696136475
    3. 'for' → logprob: -4.098657608032227
    4. 'n' → logprob: -5.348657608032227
    5. '#' → logprob: -6.223657608032227
    6. 'qui' → logprob: -6.473657608032227
    7. 'qu' → logprob: -7.098657608032227
    8. 'pend' → logprob: -7.223657608032227
    9. 'u' → logprob: -8.348657608032227
    10. 'l' → logprob: -8.598657608032227

Token 255: ' était' (ID: 16647)
  Prédit: 'qui'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'qui' → logprob: -0.8816636800765991
    2. 'fait' → logprob: -1.6316636800765991
    3. 'se' → logprob: -2.3816637992858887
    4. 'que' → logprob: -2.3816637992858887
    5. 'n' → logprob: -2.7566637992858887
    6. ' qui' → logprob: -3.6316637992858887
    7. '#' → logprob: -4.006663799285889
    8. 'su' → logprob: -4.256663799285889
    9. 's' → logprob: -4.256663799285889
    10. 'for' → logprob: -4.381663799285889

Token 256: ' au' (ID: 2791)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'à' → logprob: -1.7529717683792114
    2. 'fait' → logprob: -1.8779717683792114
    3. 'dans' → logprob: -1.8779717683792114
    4. 'dé' → logprob: -2.502971649169922
    5. 'prés' → logprob: -2.502971649169922
    6. 'ap' → logprob: -3.377971649169922
    7. '```' → logprob: -3.377971649169922
    8. 'man' → logprob: -3.627971649169922
    9. 'missing' → logprob: -3.752971649169922
    10. '#' → logprob: -3.752971649169922

Token 257: '-dessus' (ID: 74812)
  Prédit: 'dess'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dess' → logprob: -0.8128367066383362
    2. 'mil' → logprob: -2.6878366470336914
    3. '#' → logprob: -2.9378366470336914
    4. 'd' → logprob: -2.9378366470336914
    5. 'bas' → logprob: -3.1878366470336914
    6. 'moins' → logprob: -3.1878366470336914
    7. 'pr' → logprob: -3.3128366470336914
    8. '-dessus' → logprob: -3.4378366470336914
    9. '-dessous' → logprob: -3.5628366470336914
    10. 'final' → logprob: -3.6878366470336914

Token 258: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.20581258833408356
    2. 'from' → logprob: -1.8308125734329224
    3. 'pr' → logprob: -3.955812692642212
    4. 'prev' → logprob: -6.205812454223633
    5. 'prime' → logprob: -7.330812454223633
    6. 'curr' → logprob: -7.330812454223633
    7. 'count' → logprob: -7.455812454223633
    8. 'while' → logprob: -7.580812454223633
    9. 'current' → logprob: -7.705812454223633
    10. 'last' → logprob: -7.955812454223633

Token 259: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7282323837280273
    2. 'from' → logprob: -0.8532323837280273
    3. 'while' → logprob: -2.9782323837280273
    4. 'pr' → logprob: -3.6032323837280273
    5. 'count' → logprob: -5.728232383728027
    6. 'curr' → logprob: -5.978232383728027
    7. 'prime' → logprob: -6.728232383728027
    8. 'counts' → logprob: -6.728232383728027
    9. 'prev' → logprob: -6.978232383728027
    10. 'last' → logprob: -7.478232383728027

Token 260: ' idx' (ID: 14016)
  Prédit: 'prime'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prime' → logprob: -0.8776837587356567
    2. 'p' → logprob: -1.3776837587356567
    3. ' prime' → logprob: -1.5026837587356567
    4. ' p' → logprob: -3.002683639526367
    5. 'i' → logprob: -3.877683639526367
    6. 'pr' → logprob: -4.127683639526367
    7. 'val' → logprob: -4.502683639526367
    8. ' val' → logprob: -5.377683639526367
    9. ' i' → logprob: -5.502683639526367
    10. 'factor' → logprob: -8.127683639526367

Token 261: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.21060849726200104
    2. 'in' → logprob: -1.7106084823608398
    3. ',' → logprob: -4.71060848236084
    4. ' ' → logprob: -9.46060848236084
    5. ' ,' → logprob: -10.21060848236084
    6. ',in' → logprob: -11.71060848236084
    7. '	in' → logprob: -12.08560848236084
    8. '```' → logprob: -12.33560848236084
    9. ' i' → logprob: -12.71060848236084
    10. 'import' → logprob: -12.71060848236084

Token 262: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.022104214876890182
    2. 'pr' → logprob: -4.147104263305664
    3. ' range' → logprob: -5.147104263305664
    4. 'set' → logprob: -8.647104263305664
    5. 'prime' → logprob: -10.272104263305664
    6. ' primes' → logprob: -11.522104263305664
    7. '(range' → logprob: -12.772104263305664
    8. ' set' → logprob: -13.022104263305664
    9. '(pr' → logprob: -13.147104263305664
    10. 'list' → logprob: -13.772104263305664

Token 263: '(' (ID: 7)
  Prédit: '(len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.0037624286487698555
    2. '(' → logprob: -6.253762245178223
    3. '(n' → logprob: -6.503762245178223
    4. '(curr' → logprob: -8.253762245178223
    5. 'len' → logprob: -10.253762245178223
    6. '(pr' → logprob: -10.753762245178223
    7. ' len' → logprob: -12.003762245178223
    8. ' (' → logprob: -12.128762245178223
    9. '(l' → logprob: -13.378762245178223
    10. '((' → logprob: -13.753762245178223

Token 264: '1' (ID: 16)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0004961982485838234
    2. ' len' → logprob: -8.500495910644531
    3. 'n' → logprob: -9.125495910644531
    4. '(len' → logprob: -9.250495910644531
    5. '1' → logprob: -10.000495910644531
    6. 'curr' → logprob: -10.875495910644531
    7. 'pr' → logprob: -11.625495910644531
    8. '   ' → logprob: -12.625495910644531
    9. ' ' → logprob: -13.000495910644531
    10. 'le' → logprob: -13.375495910644531

Token 265: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007873523863963783
    2. ' ,' → logprob: -7.500787258148193
    3. ',len' → logprob: -8.375787734985352
    4. ',n' → logprob: -13.125787734985352
    5. 'len' → logprob: -14.125787734985352
    6. ',m' → logprob: -14.750787734985352
    7. '   ' → logprob: -15.250787734985352
    8. ',
' → logprob: -15.375787734985352
    9. 'm' → logprob: -16.00078773498535
    10. '+' → logprob: -16.25078773498535

Token 266: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.18665418028831482
    2. 'n' → logprob: -1.8116542100906372
    3. ' len' → logprob: -5.186654090881348
    4. ' n' → logprob: -7.311654090881348
    5. 'curr' → logprob: -8.311654090881348
    6. 'm' → logprob: -8.686654090881348
    7. ' ' → logprob: -9.311654090881348
    8. 'l' → logprob: -9.936654090881348
    9. '(len' → logprob: -10.811654090881348
    10. 'le' → logprob: -11.999154090881348

Token 267: '(pr' (ID: 38401)
  Prédit: '(pr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pr' → logprob: -2.5776860184123507e-06
    2. '(' → logprob: -13.87500286102295
    3. 'pr' → logprob: -13.87500286102295
    4. '	pr' → logprob: -15.75000286102295
    5. ' (' → logprob: -16.000001907348633
    6. ')' → logprob: -16.125001907348633
    7. '(p' → logprob: -16.875001907348633
    8. '(pl' → logprob: -17.000001907348633
    9. '(ph' → logprob: -17.875001907348633
    10. '(s' → logprob: -18.000001907348633

Token 268: 'imes' (ID: 2332)
  Prédit: '(pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pr' → logprob: -0.16228792071342468
    2. 'pr' → logprob: -2.037287950515747
    3. 'imes' → logprob: -4.162287712097168
    4. 'r' → logprob: -5.662287712097168
    5. 'im' → logprob: -8.537287712097168
    6. 'mes' → logprob: -10.412287712097168
    7. 'res' → logprob: -10.787287712097168
    8. ')' → logprob: -10.787287712097168
    9. 'ines' → logprob: -11.037287712097168
    10. 's' → logprob: -11.162287712097168

Token 269: ')):
' (ID: 22530)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3454299867153168
    2. ')):' → logprob: -1.4704300165176392
    3. '+' → logprob: -3.5954298973083496
    4. ')+' → logprob: -4.09542989730835
    5. ')):
' → logprob: -5.47042989730835
    6. ')' → logprob: -5.47042989730835
    7. '):
' → logprob: -5.84542989730835
    8. ' ):' → logprob: -5.84542989730835
    9. ' +' → logprob: -6.22042989730835
    10. '))' → logprob: -6.47042989730835

Token 270: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002229594625532627
    2. ' if' → logprob: -7.127229690551758
    3. 'curr' → logprob: -7.502229690551758
    4. 'if' → logprob: -7.752229690551758
    5. 'result' → logprob: -8.252229690551758
    6. ' curr' → logprob: -9.252229690551758
    7. ' result' → logprob: -9.877229690551758
    8. '    
' → logprob: -11.877229690551758
    9. '	curr' → logprob: -11.877229690551758
    10. ' ' → logprob: -12.877229690551758

Token 271: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.1867818832397461
    2. 'curr' → logprob: -2.186781883239746
    3. '   ' → logprob: -3.061781883239746
    4. 'result' → logprob: -4.561781883239746
    5. ' if' → logprob: -8.436781883239746
    6. 'diff' → logprob: -8.811781883239746
    7. 'for' → logprob: -9.561781883239746
    8. 'val' → logprob: -9.811781883239746
    9. 'while' → logprob: -9.936781883239746
    10. ' ' → logprob: -10.061781883239746

Token 272: ' primes' (ID: 104042)
  Prédit: 'pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.011390271596610546
    2. ' primes' → logprob: -4.511390209197998
    3. '(pr' → logprob: -8.261390686035156
    4. 'curr' → logprob: -10.636390686035156
    5. '   ' → logprob: -11.511390686035156
    6. 'result' → logprob: -12.011390686035156
    7. 'prime' → logprob: -12.011390686035156
    8. 'not' → logprob: -12.011390686035156
    9. ' ' → logprob: -12.511390686035156
    10. '	pr' → logprob: -12.636390686035156

Token 273: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.018735334277153015
    2. '[' → logprob: -4.018735408782959
    3. ' [' → logprob: -8.1437349319458
    4. ']' → logprob: -8.8937349319458
    5. '   ' → logprob: -9.8937349319458
    6. '==' → logprob: -10.5187349319458
    7. 'idx' → logprob: -11.2687349319458
    8. '```' → logprob: -11.2687349319458
    9. ' ==' → logprob: -11.5187349319458
    10. ' idx' → logprob: -11.8937349319458

Token 274: '-' (ID: 12)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.8601659536361694
    2. ']' → logprob: -0.9851659536361694
    3. '!=' → logprob: -2.360166072845459
    4. ']==' → logprob: -2.735166072845459
    5. ' ==' → logprob: -3.610166072845459
    6. ' !=' → logprob: -4.485166072845459
    7. ']!=' → logprob: -5.610166072845459
    8. '=' → logprob: -7.735166072845459
    9. '>' → logprob: -7.985166072845459
    10. '```' → logprob: -7.985166072845459

Token 275: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0018998401938006282
    2. 'idx' → logprob: -6.876899719238281
    3. ']' → logprob: -7.501899719238281
    4. ' ' → logprob: -8.376899719238281
    5. ')' → logprob: -10.376899719238281
    6. '   ' → logprob: -10.876899719238281
    7. '```' → logprob: -11.501899719238281
    8. ' idx' → logprob: -11.876899719238281
    9. '[idx' → logprob: -13.126899719238281
    10. '0' → logprob: -13.126899719238281

Token 276: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6939482092857361
    2. ']' → logprob: -1.3189482688903809
    3. '!=' → logprob: -1.6939482688903809
    4. ']==' → logprob: -3.693948268890381
    5. '<=' → logprob: -4.693948268890381
    6. ' ==' → logprob: -5.068948268890381
    7. ' !=' → logprob: -5.318948268890381
    8. ']!=' → logprob: -6.193948268890381
    9. '>' → logprob: -6.943948268890381
    10. '=' → logprob: -8.693947792053223

Token 277: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.604128897190094
    2. '!=' → logprob: -0.854128897190094
    3. '<=' → logprob: -3.854128837585449
    4. ' !=' → logprob: -5.729128837585449
    5. ' ==' → logprob: -5.979128837585449
    6. '>' → logprob: -8.10412883758545
    7. '>=' → logprob: -8.47912883758545
    8. '<' → logprob: -9.10412883758545
    9. ' <=' → logprob: -9.47912883758545
    10. '=' → logprob: -10.10412883758545

Token 278: ' primes' (ID: 104042)
  Prédit: 'pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pr' → logprob: -8.590104698669165e-05
    2. ' primes' → logprob: -9.375085830688477
    3. '   ' → logprob: -14.500085830688477
    4. '	pr' → logprob: -16.125085830688477
    5. 'pri' → logprob: -16.250085830688477
    6. 'prime' → logprob: -16.500085830688477
    7. '(pr' → logprob: -17.125085830688477
    8. ' ' → logprob: -17.125085830688477
    9. '  ' → logprob: -17.625085830688477
    10. ' pr' → logprob: -17.875085830688477

Token 279: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.048639941960573196
    2. 'pr' → logprob: -3.048640012741089
    3. 'es' → logprob: -11.048640251159668
    4. ' primes' → logprob: -11.048640251159668
    5. 'idx' → logprob: -11.798640251159668
    6. '[' → logprob: -12.298640251159668
    7. 'Pr' → logprob: -12.923640251159668
    8. 's' → logprob: -13.173640251159668
    9. '_pr' → logprob: -13.673640251159668
    10. '   ' → logprob: -13.923640251159668

Token 280: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.06107833608984947
    2. ':' → logprob: -2.9360783100128174
    3. '):
' → logprob: -5.4360785484313965
    4. ' ):' → logprob: -6.5610785484313965
    5. ':
' → logprob: -9.561078071594238
    6. ')' → logprob: -9.811078071594238
    7. '       ' → logprob: -9.936078071594238
    8. ' :' → logprob: -9.936078071594238
    9. '+' → logprob: -10.061078071594238
    10. ']:' → logprob: -10.686078071594238

Token 281: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7996228933334351
    2. 'curr' → logprob: -0.7996228933334351
    3. '   ' → logprob: -2.2996230125427246
    4. '	curr' → logprob: -8.674622535705566
    5. ' curr' → logprob: -8.799622535705566
    6. '
' → logprob: -9.049622535705566
    7. '```' → logprob: -9.174622535705566
    8. '[curr' → logprob: -9.674622535705566
    9. '    
' → logprob: -11.174622535705566
    10. '        
' → logprob: -11.299622535705566

Token 282: ' curr' (ID: 10495)
  Prédit: 'curr'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'curr' (adapté à ' curr') → logprob: -6.2729995988775045e-06
    2. '   ' → logprob: -12.875006675720215
    3. ' curr' → logprob: -12.875006675720215
    4. '	curr' → logprob: -14.125006675720215
    5. '[curr' → logprob: -15.375006675720215
    6. 'cur' → logprob: -17.0000057220459
    7. '(curr' → logprob: -17.2500057220459
    8. 'c' → logprob: -17.6250057220459
    9. 'corr' → logprob: -18.0000057220459
    10. 'continue' → logprob: -18.0000057220459

Token 283: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.6931580901145935
    2. '+=' → logprob: -0.6931580901145935
    3. ']+=' → logprob: -11.943158149719238
    4. '+' → logprob: -13.068158149719238
    5. '=' → logprob: -14.318158149719238
    6. '+='' → logprob: -14.818158149719238
    7. ' *=' → logprob: -15.318158149719238
    8. '+="' → logprob: -15.443158149719238
    9. '*=' → logprob: -15.443158149719238
    10. ' ' → logprob: -15.818158149719238

Token 284: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4855663721391466e-05
    2. ' ' → logprob: -11.125015258789062
    3. '   ' → logprob: -19.375015258789062
    4. '<|end|>' → logprob: -19.750015258789062
    5. '```' → logprob: -20.125015258789062
    6. '0' → logprob: -20.625015258789062
    7. '１' → logprob: -21.500015258789062
    8. '۱' → logprob: -21.687515258789062
    9. '১' → logprob: -21.937515258789062
    10. '  ' → logprob: -22.000015258789062

Token 285: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.0
    3. '```' → logprob: -20.125
    4. '<|end|>' → logprob: -20.375
    5. '-' → logprob: -20.875
    6. '   ' → logprob: -21.0
    7. '0' → logprob: -21.75
    8. '۱' → logprob: -22.75
    9. '१' → logprob: -23.0
    10. '১' → logprob: -23.25

Token 286: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005228889058344066
    2. 'else' → logprob: -7.625523090362549
    3. ' else' → logprob: -10.50052261352539
    4. ';' → logprob: -13.37552261352539
    5. '       ' → logprob: -13.50052261352539
    6. 'continue' → logprob: -14.12552261352539
    7. '```' → logprob: -14.25052261352539
    8. ':' → logprob: -14.25052261352539
    9. '<|end|>' → logprob: -14.37552261352539
    10. '	else' → logprob: -15.25052261352539

Token 287: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010165659710764885
    2. 'else' → logprob: -4.635165691375732
    3. ' else' → logprob: -7.885165691375732
    4. 'continue' → logprob: -11.010165214538574
    5. ';' → logprob: -12.510165214538574
    6. '```' → logprob: -12.760165214538574
    7. '	else' → logprob: -13.510165214538574
    8. 'elif' → logprob: -13.635165214538574
    9. '       ' → logprob: -13.760165214538574
    10. ')' → logprob: -14.135165214538574

Token 288: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.005577721633017063
    2. ' else' → logprob: -5.505577564239502
    3. '   ' → logprob: -6.505577564239502
    4. 'elif' → logprob: -13.50557804107666
    5. '	else' → logprob: -13.75557804107666
    6. '```' → logprob: -15.00557804107666
    7. ' ' → logprob: -15.50557804107666
    8. '  ' → logprob: -17.255577087402344
    9. '_else' → logprob: -18.630577087402344
    10. '       ' → logprob: -18.755577087402344

Token 289: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01607636548578739
    2. ':
' → logprob: -4.141076564788818
    3. '   ' → logprob: -10.39107608795166
    4. ' :' → logprob: -12.51607608795166
    5. '):' → logprob: -13.26607608795166
    6. '       ' → logprob: -13.51607608795166
    7. '):
' → logprob: -13.76607608795166
    8. '{' → logprob: -13.89107608795166
    9. '```' → logprob: -14.26607608795166
    10. ' :
' → logprob: -14.76607608795166

Token 290: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12773489952087402
    2. 'result' → logprob: -2.127734899520874
    3. ' result' → logprob: -7.252735137939453
    4. 'com' → logprob: -9.877735137939453
    5. '    
' → logprob: -11.377735137939453
    6. 'count' → logprob: -11.877735137939453
    7. '```' → logprob: -12.002735137939453
    8. '       ' → logprob: -12.127735137939453
    9. '
' → logprob: -12.127735137939453
    10. '	result' → logprob: -12.252735137939453

Token 291: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -0.01883547566831112
    2. '   ' → logprob: -4.518835544586182
    3. '       ' → logprob: -6.268835544586182
    4. 'com' → logprob: -6.393835544586182
    5. 'comb' → logprob: -6.518835544586182
    6. ' result' → logprob: -7.268835544586182
    7. '#' → logprob: -7.768835544586182
    8. 'count' → logprob: -8.018835067749023
    9. 'factor' → logprob: -8.393835067749023
    10. 'ex' → logprob: -8.393835067749023

Token 292: ' *=' (ID: 25253)
  Prédit: ' *='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *=' → logprob: -0.6471803784370422
    2. '*=' → logprob: -0.8971803784370422
    3. '=' → logprob: -2.7721803188323975
    4. ' =' → logprob: -5.147180557250977
    5. '*' → logprob: -8.022180557250977
    6. '```' → logprob: -10.272180557250977
    7. ' ' → logprob: -11.022180557250977
    8. '   ' → logprob: -11.272180557250977
    9. ' ' → logprob: -11.272180557250977
    10. '	' → logprob: -12.272180557250977

Token 293: ' comb' (ID: 4134)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.0005189551156945527
    2. '(com' → logprob: -7.625518798828125
    3. 'comb' → logprob: -11.000518798828125
    4. ' comb' → logprob: -11.750518798828125
    5. '(' → logprob: -12.250518798828125
    6. 'pow' → logprob: -14.625518798828125
    7. ' combin' → logprob: -15.500518798828125
    8. 'mod' → logprob: -15.875518798828125
    9. '	com' → logprob: -16.000518798828125
    10. ' (' → logprob: -16.250518798828125

Token 294: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.012445373460650444
    2. '(result' → logprob: -5.512445449829102
    3. '(curr' → logprob: -5.637445449829102
    4. '(com' → logprob: -5.637445449829102
    5. 'com' → logprob: -7.262445449829102
    6. 'result' → logprob: -8.262445449829102
    7. '(' → logprob: -9.762445449829102
    8. 'ic' → logprob: -10.387445449829102
    9. '(big' → logprob: -10.387445449829102
    10. '(i' → logprob: -11.262445449829102

Token 295: '(curr' (ID: 49739)
  Prédit: '(curr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(curr' → logprob: -0.2829807996749878
    2. '(n' → logprob: -2.0329809188842773
    3. '(m' → logprob: -2.5329809188842773
    4. '(pr' → logprob: -4.032980918884277
    5. '(' → logprob: -4.282980918884277
    6. '(idx' → logprob: -6.032980918884277
    7. '(len' → logprob: -6.407980918884277
    8. '(result' → logprob: -8.657980918884277
    9. '((' → logprob: -9.782980918884277
    10. '(cur' → logprob: -9.907980918884277

Token 296: ' +' (ID: 659)
  Prédit: '+n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+n' → logprob: -0.4588586390018463
    2. '+m' → logprob: -1.208858609199524
    3. '+' → logprob: -3.2088587284088135
    4. ' +' → logprob: -3.9588587284088135
    5. '(n' → logprob: -5.083858489990234
    6. '   ' → logprob: -7.458858489990234
    7. '(' → logprob: -7.458858489990234
    8. 'n' → logprob: -7.583858489990234
    9. ',n' → logprob: -7.833858489990234
    10. '+(' → logprob: -8.208858489990234

Token 297: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.002087688772007823
    2. ' n' → logprob: -6.752087593078613
    3. '(n' → logprob: -7.002087593078613
    4. '
' → logprob: -13.752087593078613
    5. ' (' → logprob: -13.877087593078613
    6. '   ' → logprob: -14.002087593078613
    7. 'curr' → logprob: -14.377087593078613
    8. '(pr' → logprob: -14.502087593078613
    9. ' ' → logprob: -14.752087593078613
    10. 'm' → logprob: -14.752087593078613

Token 298: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0028324576560407877
    2. ' -' → logprob: -5.877832412719727
    3. '[' → logprob: -11.127832412719727
    4. '2' → logprob: -12.752832412719727
    5. '[idx' → logprob: -13.002832412719727
    6. 'idx' → logprob: -13.502832412719727
    7. ' ' → logprob: -13.502832412719727
    8. 'pr' → logprob: -13.877832412719727
    9. '1' → logprob: -14.127832412719727
    10. ',' → logprob: -14.502832412719727

Token 299: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.190178904333152e-05
    2. '2' → logprob: -10.375031471252441
    3. ' ' → logprob: -14.875031471252441
    4. '   ' → logprob: -16.250032424926758
    5. '
' → logprob: -16.250032424926758
    6. '  ' → logprob: -17.687532424926758
    7. '

' → logprob: -18.375032424926758
    8. '```' → logprob: -19.062532424926758
    9. '
' → logprob: -19.187532424926758
    10. '-' → logprob: -19.187532424926758

Token 300: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006267757853493094
    2. '2' → logprob: -7.375626564025879
    3. '   ' → logprob: -16.125627517700195
    4. ' ' → logprob: -16.250627517700195
    5. '
' → logprob: -17.125627517700195
    6. '

' → logprob: -17.625627517700195
    7. '-' → logprob: -18.375627517700195
    8. '```' → logprob: -18.500627517700195
    9. '  ' → logprob: -18.938127517700195
    10. '
' → logprob: -19.188127517700195

Token 301: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00020139472326263785
    2. ' ,' → logprob: -8.625201225280762
    3. ')' → logprob: -11.750201225280762
    4. '-' → logprob: -12.250201225280762
    5. ',n' → logprob: -12.625201225280762
    6. ' -' → logprob: -13.250201225280762
    7. ',
' → logprob: -13.375201225280762
    8. '   ' → logprob: -14.375201225280762
    9. ',c' → logprob: -14.625201225280762
    10. ',result' → logprob: -15.125201225280762

Token 302: ' curr' (ID: 10495)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.47751152515411377
    2. 'curr' → logprob: -0.9775115251541138
    3. ' curr' → logprob: -5.977511405944824
    4. ' n' → logprob: -7.102511405944824
    5. '(curr' → logprob: -10.977511405944824
    6. 'cur' → logprob: -11.102511405944824
    7. '[curr' → logprob: -11.602511405944824
    8. '   ' → logprob: -11.727511405944824
    9. '	curr' → logprob: -11.977511405944824
    10. 'c' → logprob: -13.227511405944824

Token 303: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006297995802015066
    2. ')
' → logprob: -5.381298065185547
    3. '-' → logprob: -6.631298065185547
    4. ' )' → logprob: -8.756298065185547
    5. ' -' → logprob: -8.881298065185547
    6. '-)' → logprob: -10.256298065185547
    7. '   ' → logprob: -11.631298065185547
    8. ')
' → logprob: -12.381298065185547
    9. ' )
' → logprob: -12.631298065185547
    10. '1' → logprob: -13.006298065185547

Token 304: '       ' (ID: 309)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.6828099489212036
    2. ' %' → logprob: -1.6828099489212036
    3. 'result' → logprob: -1.9328099489212036
    4. '   ' → logprob: -2.057809829711914
    5. ' result' → logprob: -2.057809829711914
    6. ' 
' → logprob: -2.807809829711914
    7. ' ' → logprob: -2.932809829711914
    8. '%' → logprob: -3.432809829711914
    9. ' *' → logprob: -3.557809829711914
    10. '<|end|>' → logprob: -4.682809829711914

Token 305: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -0.00021617230959236622
    2. '       ' → logprob: -9.500216484069824
    3. 'curr' → logprob: -9.500216484069824
    4. ' result' → logprob: -9.625216484069824
    5. '	result' → logprob: -15.875216484069824
    6. '        
' → logprob: -16.750215530395508
    7. 'current' → logprob: -17.625215530395508
    8. ' curr' → logprob: -17.750215530395508
    9. '_result' → logprob: -18.250215530395508
    10. '(result' → logprob: -18.750215530395508

Token 306: ' =' (ID: 314)
  Prédit: ' %='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %=' → logprob: -0.26075685024261475
    2. '%=' → logprob: -1.5107568502426147
    3. '%' → logprob: -4.760756969451904
    4. ' %' → logprob: -8.635756492614746
    5. ' ' → logprob: -10.135756492614746
    6. '	' → logprob: -11.885756492614746
    7. '=' → logprob: -12.885756492614746
    8. '```' → logprob: -13.760756492614746
    9. '%s' → logprob: -14.260756492614746
    10. ' ' → logprob: -14.760756492614746

Token 307: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.20141616463661194
    2. ' result' → logprob: -1.7014161348342896
    3. '(result' → logprob: -12.826416015625
    4. '	result' → logprob: -16.951416015625
    5. '[result' → logprob: -17.951416015625
    6. 'res' → logprob: -18.576416015625
    7. '=result' → logprob: -18.576416015625
    8. ' resultat' → logprob: -19.076416015625
    9. '$result' → logprob: -19.326416015625
    10. '_result' → logprob: -19.826416015625

Token 308: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.0067161982879042625
    2. ' %' → logprob: -5.006716251373291
    3. ' ' → logprob: -14.506715774536133
    4. '%s' → logprob: -16.381715774536133
    5. ' %=' → logprob: -17.256715774536133
    6. '%i' → logprob: -17.256715774536133
    7. '%n' → logprob: -17.381715774536133
    8. '%d' → logprob: -17.881715774536133
    9. '%m' → logprob: -18.006715774536133
    10. '%
' → logprob: -18.256715774536133

Token 309: ' modulo' (ID: 112372)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -1.981667537620524e-06
    2. '(mod' → logprob: -13.750001907348633
    3. ' modulo' → logprob: -14.000001907348633
    4. 'module' → logprob: -17.750001907348633
    5. ' mod' → logprob: -20.250001907348633
    6. 'mo' → logprob: -21.125001907348633
    7. '	mod' → logprob: -21.500001907348633
    8. 'modal' → logprob: -21.750001907348633
    9. 'Modulo' → logprob: -21.750001907348633
    10. 'moder' → logprob: -22.000001907348633

Token 310: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010571977123618126
    2. 'curr' → logprob: -4.6355719566345215
    3. '   ' → logprob: -7.1355719566345215
    4. ' curr' → logprob: -11.01057243347168
    5. '	curr' → logprob: -13.51057243347168
    6. ' ' → logprob: -14.51057243347168
    7. '
' → logprob: -15.63557243347168
    8. 'current' → logprob: -15.88557243347168
    9. '[curr' → logprob: -16.01057243347168
    10. '           ' → logprob: -16.01057243347168

Token 311: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018605688586831093
    2. 'curr' → logprob: -4.018605709075928
    3. '   ' → logprob: -7.768605709075928
    4. ' curr' → logprob: -10.64360523223877
    5. '	curr' → logprob: -12.64360523223877
    6. ' ' → logprob: -13.64360523223877
    7. '      ' → logprob: -13.76860523223877
    8. '[curr' → logprob: -14.01860523223877
    9. '     ' → logprob: -14.51860523223877
    10. ',' → logprob: -14.89360523223877

Token 312: ' on' (ID: 402)
  Prédit: 'curr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'curr' → logprob: -0.008228256367146969
    2. '       ' → logprob: -5.258228302001953
    3. ' curr' → logprob: -5.883228302001953
    4. '   ' → logprob: -9.383228302001953
    5. '	curr' → logprob: -9.633228302001953
    6. '
' → logprob: -10.883228302001953
    7. '[curr' → logprob: -11.633228302001953
    8. 'result' → logprob: -11.758228302001953
    9. '        
' → logprob: -12.258228302001953
    10. '(curr' → logprob: -12.508228302001953

Token 313: ' oubl' (ID: 79628)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 314: 'ie' (ID: 396)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.959075927734375
    2. 'er' → logprob: -1.834075927734375
    3. '=' → logprob: -2.084075927734375
    4. 'pas' → logprob: -2.459075927734375
    5. 'tre' → logprob: -2.709075927734375
    6. ' pas' → logprob: -3.334075927734375
    7. '   ' → logprob: -3.584075927734375
    8. 'it' → logprob: -3.959075927734375
    9. 'e' → logprob: -4.334075927734375
    10. 'r' → logprob: -4.459075927734375

Token 315: ' parfois' (ID: 44575)
  Prédit: ' pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pas' → logprob: -0.11749151349067688
    2. 'pas' → logprob: -2.2424914836883545
    3. '=' → logprob: -5.742491722106934
    4. 'not' → logprob: -7.867491722106934
    5. '   ' → logprob: -8.367491722106934
    6. '%' → logprob: -8.617491722106934
    7. ' not' → logprob: -9.367491722106934
    8. '!' → logprob: -9.492491722106934
    9. ' jamais' → logprob: -9.492491722106934
    10. '    ' → logprob: -9.617491722106934

Token 316: ' de' (ID: 334)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7051625847816467
    2. 'curr' → logprob: -0.7051625847816467
    3. '   ' → logprob: -4.455162525177002
    4. ' curr' → logprob: -8.33016300201416
    5. '	curr' → logprob: -9.70516300201416
    6. '
' → logprob: -11.45516300201416
    7. ' ' → logprob: -12.45516300201416
    8. '[curr' → logprob: -13.20516300201416
    9. '(curr' → logprob: -13.58016300201416
    10. '     ' → logprob: -14.08016300201416

Token 317: ' le' (ID: 505)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.01379169337451458
    2. ' %' → logprob: -6.263791561126709
    3. '```' → logprob: -6.263791561126709
    4. ' prendre' → logprob: -6.388791561126709
    5. 'mettre' → logprob: -6.513791561126709
    6. '=' → logprob: -6.763791561126709
    7. 'mod' → logprob: -6.763791561126709
    8. 'prendre' → logprob: -7.013791561126709
    9. '%=' → logprob: -7.013791561126709
    10. 'result' → logprob: -7.013791561126709

Token 318: ' faire' (ID: 8119)
  Prédit: 'faire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'faire' → logprob: -0.10842667520046234
    2. 'mettre' → logprob: -2.733426570892334
    3. ' faire' → logprob: -3.608426570892334
    4. '%' → logprob: -4.983426570892334
    5. 'rem' → logprob: -7.108426570892334
    6. ' mettre' → logprob: -7.108426570892334
    7. 'prendre' → logprob: -7.858426570892334
    8. '```' → logprob: -7.858426570892334
    9. 'f' → logprob: -8.483427047729492
    10. 'contin' → logprob: -8.733427047729492

Token 319: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011534038931131363
    2. 'curr' → logprob: -4.511534214019775
    3. '   ' → logprob: -7.636534214019775
    4. ' curr' → logprob: -13.636533737182617
    5. '
' → logprob: -14.011533737182617
    6. '	curr' → logprob: -14.136533737182617
    7. '        
' → logprob: -15.386533737182617
    8. '      ' → logprob: -15.761533737182617
    9. '           ' → logprob: -16.136533737182617
    10. 'current' → logprob: -16.136533737182617

Token 320: '       ' (ID: 309)
  Prédit: 'curr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'curr' → logprob: -0.31729063391685486
    2. '       ' → logprob: -1.3172906637191772
    3. '   ' → logprob: -5.567290782928467
    4. ' curr' → logprob: -8.942290306091309
    5. '	curr' → logprob: -9.692290306091309
    6. '
' → logprob: -12.817290306091309
    7. '[curr' → logprob: -13.692290306091309
    8. ' ' → logprob: -13.817290306091309
    9. '(curr' → logprob: -14.192290306091309
    10. '        
' → logprob: -14.692290306091309

Token 321: ' curr' (ID: 10495)
  Prédit: 'curr'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'curr' (adapté à ' curr') → logprob: -0.003722288180142641
    2. '       ' → logprob: -5.628722190856934
    3. ' curr' → logprob: -9.503722190856934
    4. '   ' → logprob: -10.503722190856934
    5. 'result' → logprob: -11.253722190856934
    6. '
' → logprob: -12.628722190856934
    7. '	curr' → logprob: -13.003722190856934
    8. '        
' → logprob: -14.503722190856934
    9. 'current' → logprob: -15.503722190856934
    10. 'Curr' → logprob: -15.503722190856934

Token 322: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.061967797577381134
    2. ' =' → logprob: -2.8119678497314453
    3. ' +=' → logprob: -16.811967849731445
    4. '+=' → logprob: -16.811967849731445
    5. '＝' → logprob: -17.936967849731445
    6. '.=' → logprob: -18.936967849731445
    7. ' ' → logprob: -19.186967849731445
    8. ' *=' → logprob: -19.436967849731445
    9. '=
' → logprob: -19.936967849731445
    10. '*=' → logprob: -20.061967849731445

Token 323: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.0
    3. '   ' → logprob: -18.5
    4. '```' → logprob: -21.375
    5. '۱' → logprob: -22.0
    6. '  ' → logprob: -22.125
    7. '１' → logprob: -22.375
    8. '0' → logprob: -22.5
    9. 'a' → logprob: -22.625
    10. '१' → logprob: -22.75

Token 324: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.75
    3. '   ' → logprob: -20.0
    4. '```' → logprob: -20.875
    5. '۱' → logprob: -21.25
    6. '2' → logprob: -21.875
    7. '१' → logprob: -22.0
    8. '0' → logprob: -22.125
    9. '১' → logprob: -22.625
    10. 'a' → logprob: -22.6875

Token 325: '

' (ID: 279)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.01860347017645836
    2. 'if' → logprob: -4.768603324890137
    3. 'for' → logprob: -4.768603324890137
    4. 'else' → logprob: -6.893603324890137
    5. '#' → logprob: -7.893603324890137
    6. '
' → logprob: -10.268603324890137
    7. ' result' → logprob: -12.143603324890137
    8. '```' → logprob: -12.643603324890137
    9. 'elif' → logprob: -12.768603324890137
    10. 'print' → logprob: -12.768603324890137

Token 326: '#' (ID: 2)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.0006022418383508921
    2. '#' → logprob: -7.5006022453308105
    3. 'print' → logprob: -10.375601768493652
    4. 'if' → logprob: -11.625601768493652
    5. 'for' → logprob: -12.500601768493652
    6. '```' → logprob: -13.250601768493652
    7. '
' → logprob: -13.625601768493652
    8. 'else' → logprob: -13.875601768493652
    9. ' result' → logprob: -14.250601768493652
    10. ')' → logprob: -14.875601768493652

Token 327: ' Il' (ID: 5329)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -5.512236498361744e-07
    2. '#' → logprob: -14.750000953674316
    3. ' result' → logprob: -15.750000953674316
    4. 'if' → logprob: -19.0
    5. '```' → logprob: -19.25
    6. '
' → logprob: -19.75
    7. '   ' → logprob: -19.75
    8. 'resultado' → logprob: -20.0
    9. 'res' → logprob: -20.375
    10. 'print' → logprob: -20.75

Token 328: ' reste' (ID: 26769)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.06622276455163956
    2. 's' → logprob: -3.191222667694092
    3. ' result' → logprob: -4.191222667694092
    4. '=' → logprob: -5.941222667694092
    5. '#' → logprob: -6.191222667694092
    6. ' =' → logprob: -7.691222667694092
    7. '[result' → logprob: -7.816222667694092
    8. '_' → logprob: -8.19122314453125
    9. 'f' → logprob: -8.31622314453125
    10. '=result' → logprob: -8.44122314453125

Token 329: ' à' (ID: 1221)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -3.392824874026701e-05
    2. ' result' → logprob: -10.37503433227539
    3. '
' → logprob: -13.87503433227539
    4. '   ' → logprob: -14.25003433227539
    5. '(result' → logprob: -14.87503433227539
    6. '	result' → logprob: -15.87503433227539
    7. '...' → logprob: -16.75003433227539
    8. 'if' → logprob: -17.00003433227539
    9. '  ' → logprob: -17.00003433227539
    10. '```' → logprob: -17.00003433227539

Token 330: ' traiter' (ID: 105852)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.0005551783833652735
    2. ' result' → logprob: -7.500555038452148
    3. 'final' → logprob: -14.625555038452148
    4. '
' → logprob: -15.000555038452148
    5. '(result' → logprob: -15.000555038452148
    6. 'faire' → logprob: -15.125555038452148
    7. '#' → logprob: -15.625555038452148
    8. 'factor' → logprob: -15.750555038452148
    9. ' ' → logprob: -16.37555503845215
    10. 'trait' → logprob: -16.62555503845215

Token 331: ' ce' (ID: 2357)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.0683535037969705e-05
    2. ' result' → logprob: -12.00001049041748
    3. 'if' → logprob: -12.50001049041748
    4. '   ' → logprob: -14.87501049041748
    5. '
' → logprob: -16.000011444091797
    6. '#' → logprob: -16.000011444091797
    7. '```' → logprob: -16.625011444091797
    8. 'res' → logprob: -19.000011444091797
    9. '	result' → logprob: -19.000011444091797
    10. '(result' → logprob: -19.125011444091797

Token 332: ' qui' (ID: 2780)
  Prédit: 'curr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'curr' → logprob: -0.14247263967990875
    2. 'dern' → logprob: -2.767472743988037
    3. ' dernier' → logprob: -3.142472743988037
    4. 'qui' → logprob: -4.392472743988037
    5. 'qu' → logprob: -6.017472743988037
    6. 'last' → logprob: -6.267472743988037
    7. 's' → logprob: -6.642472743988037
    8. '#' → logprob: -6.642472743988037
    9. ' curr' → logprob: -6.642472743988037
    10. ' qui' → logprob: -6.767472743988037

Token 333: ' reste' (ID: 26769)
  Prédit: 'curr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'curr' → logprob: -0.10550818592309952
    2. 'n' → logprob: -3.1055080890655518
    3. ' curr' → logprob: -3.9805080890655518
    4. 'a' → logprob: -4.105508327484131
    5. ' a' → logprob: -5.355508327484131
    6. 'reste' → logprob: -5.855508327484131
    7. ' n' → logprob: -6.105508327484131
    8. ' reste' → logprob: -6.230508327484131
    9. 'rest' → logprob: -6.230508327484131
    10. '[curr' → logprob: -6.730508327484131

Token 334: '
' (ID: 198)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.9361264946837764e-07
    2. ' result' → logprob: -16.625
    3. 'if' → logprob: -17.375
    4. '   ' → logprob: -18.125
    5. '
' → logprob: -18.375
    6. '```' → logprob: -19.375
    7. 'resultado' → logprob: -21.0
    8. '(result' → logprob: -21.125
    9. '	result' → logprob: -21.625
    10. '#' → logprob: -21.875

Token 335: 'result' (ID: 2521)
  Prédit: 'result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: 0.0
    2. 'print' → logprob: -17.125
    3. ' result' → logprob: -18.0
    4. '```' → logprob: -21.0
    5. '   ' → logprob: -21.625
    6. '	result' → logprob: -22.0
    7. '
' → logprob: -22.375
    8. 'for' → logprob: -22.375
    9. 'resultado' → logprob: -22.375
    10. 'res' → logprob: -23.375

Token 336: ' =' (ID: 314)
  Prédit: ' *='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *=' → logprob: -0.03806708753108978
    2. '*=' → logprob: -3.288067102432251
    3. '*' → logprob: -10.788066864013672
    4. ' ' → logprob: -13.163066864013672
    5. ' *' → logprob: -13.163066864013672
    6. '=' → logprob: -14.163066864013672
    7. '```' → logprob: -15.663066864013672
    8. ' ' → logprob: -16.413066864013672
    9. ' =' → logprob: -16.663066864013672
    10. '   ' → logprob: -16.913066864013672

Token 337: ' (' (ID: 350)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.6378205418586731
    2. '(result' → logprob: -0.7628205418586731
    3. ' result' → logprob: -5.512820720672607
    4. ' (' → logprob: -6.762820720672607
    5. '(' → logprob: -11.51282024383545
    6. '=result' → logprob: -13.51282024383545
    7. '[result' → logprob: -14.13782024383545
    8. '	result' → logprob: -14.26282024383545
    9. ',result' → logprob: -14.38782024383545
    10. '```' → logprob: -14.38782024383545

Token 338: 'result' (ID: 2521)
  Prédit: 'result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -5.438573680294212e-06
    2. ' result' → logprob: -12.750005722045898
    3. '(result' → logprob: -12.875005722045898
    4. 'res' → logprob: -19.3750057220459
    5. '	result' → logprob: -19.7500057220459
    6. '   ' → logprob: -20.0000057220459
    7. ')' → logprob: -20.5000057220459
    8. '```' → logprob: -20.7500057220459
    9. '$result' → logprob: -21.2500057220459
    10. '
' → logprob: -21.3750057220459

Token 339: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.20141597092151642
    2. '*' → logprob: -1.701416015625
    3. ' ' → logprob: -13.576416015625
    4. '**' → logprob: -14.576416015625
    5. ' *
' → logprob: -14.951416015625
    6. ' ' → logprob: -15.201416015625
    7. '*
' → logprob: -16.076416015625
    8. ')' → logprob: -16.451416015625
    9. '*

' → logprob: -17.201416015625
    10. '   ' → logprob: -17.326416015625

Token 340: ' comb' (ID: 4134)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.00028529210248962045
    2. ' comb' → logprob: -8.250285148620605
    3. '(com' → logprob: -10.875285148620605
    4. 'comb' → logprob: -13.125285148620605
    5. ' combin' → logprob: -13.500285148620605
    6. ' com' → logprob: -14.000285148620605
    7. '	com' → logprob: -14.625285148620605
    8. 'Com' → logprob: -16.500286102294922
    9. '   ' → logprob: -16.625286102294922
    10. 'c' → logprob: -16.625286102294922

Token 341: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -7.278864359250292e-05
    2. 'com' → logprob: -9.625072479248047
    3. 'result' → logprob: -12.875072479248047
    4. 'comb' → logprob: -13.250072479248047
    5. 'ci' → logprob: -14.375072479248047
    6. '(' → logprob: -14.875072479248047
    7. '(com' → logprob: -14.875072479248047
    8. '(i' → logprob: -15.625072479248047
    9. '   ' → logprob: -15.875072479248047
    10. 'o' → logprob: -16.375072479248047

Token 342: '(curr' (ID: 49739)
  Prédit: '(curr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(curr' → logprob: -0.0003424951864872128
    2. 'curr' → logprob: -8.00034236907959
    3. '[curr' → logprob: -12.25034236907959
    4. '(' → logprob: -13.87534236907959
    5. '(cur' → logprob: -14.37534236907959
    6. ' curr' → logprob: -14.50034236907959
    7. ' (' → logprob: -15.75034236907959
    8. 'Curr' → logprob: -17.375343322753906
    9. '	curr' → logprob: -17.375343322753906
    10. ')' → logprob: -18.500343322753906

Token 343: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.0978500172495842
    2. '+' → logprob: -2.8478500843048096
    3. '(curr' → logprob: -3.3478500843048096
    4. '[curr' → logprob: -10.09784984588623
    5. ' (' → logprob: -10.84784984588623
    6. '(' → logprob: -11.09784984588623
    7. 'curr' → logprob: -12.59784984588623
    8. ' curr' → logprob: -13.47284984588623
    9. '(cur' → logprob: -13.72284984588623
    10. ' ' → logprob: -14.09784984588623

Token 344: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.10020861029624939
    2. ' n' → logprob: -2.3502085208892822
    3. ')n' → logprob: -14.850208282470703
    4. '(n' → logprob: -15.225208282470703
    5. '	n' → logprob: -15.225208282470703
    6. ')' → logprob: -15.725208282470703
    7. '<|end|>' → logprob: -15.975208282470703
    8. '[n' → logprob: -16.225208282470703
    9. '_n' → logprob: -16.225208282470703
    10. '```' → logprob: -16.475208282470703

Token 345: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.5759421586990356
    2. '-' → logprob: -0.8259421586990356
    3. ' ' → logprob: -13.450942039489746
    4. '   ' → logprob: -13.950942039489746
    5. '−' → logprob: -15.950942039489746
    6. '  ' → logprob: -16.450942993164062
    7. 'result' → logprob: -16.825942993164062
    8. '```' → logprob: -16.950942993164062
    9. '–' → logprob: -17.700942993164062
    10. '[' → logprob: -17.950942993164062

Token 346: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.165027217415627e-05
    2. ' ' → logprob: -10.750021934509277
    3. '   ' → logprob: -16.25002098083496
    4. '<|end|>' → logprob: -18.00002098083496
    5. '```' → logprob: -18.00002098083496
    6. 'm' → logprob: -18.50002098083496
    7. '-' → logprob: -18.62502098083496
    8. '  ' → logprob: -19.00002098083496
    9. '[' → logprob: -19.12502098083496
    10. ')' → logprob: -19.25002098083496

Token 347: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -13.12500286102295
    3. '   ' → logprob: -15.50000286102295
    4. '
' → logprob: -16.375001907348633
    5. '```' → logprob: -16.375001907348633
    6. 'result' → logprob: -16.875001907348633
    7. 'm' → logprob: -18.062501907348633
    8. '

' → logprob: -18.250001907348633
    9. '-' → logprob: -18.500001907348633
    10. '(' → logprob: -18.625001907348633

Token 348: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.2200749754119897e-06
    2. ' ,' → logprob: -13.375001907348633
    3. ',
' → logprob: -14.625001907348633
    4. ',current' → logprob: -17.000001907348633
    5. ',

' → logprob: -17.250001907348633
    6. ',c' → logprob: -18.125001907348633
    7. '```' → logprob: -18.375001907348633
    8. '),' → logprob: -18.500001907348633
    9. '‌,' → logprob: -18.750001907348633
    10. '[curr' → logprob: -19.125001907348633

Token 349: ' curr' (ID: 10495)
  Prédit: 'curr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'curr' → logprob: -0.4740838408470154
    2. ' curr' → logprob: -0.9740838408470154
    3. '	curr' → logprob: -12.97408390045166
    4. '(curr' → logprob: -13.09908390045166
    5. '[curr' → logprob: -13.34908390045166
    6. '.curr' → logprob: -14.97408390045166
    7. '_curr' → logprob: -15.09908390045166
    8. 'Curr' → logprob: -16.474082946777344
    9. ')' → logprob: -16.599082946777344
    10. '```' → logprob: -17.224082946777344

Token 350: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -9.253090865968261e-06
    2. ')' → logprob: -12.000009536743164
    3. ' ))' → logprob: -12.875009536743164
    4. '   ' → logprob: -15.000009536743164
    5. ')))' → logprob: -16.375009536743164
    6. ' ' → logprob: -16.750009536743164
    7. '       ' → logprob: -18.000009536743164
    8. ''))' → logprob: -18.375009536743164
    9. '))
' → logprob: -19.500009536743164
    10. '    ' → logprob: -19.500009536743164

Token 351: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.10020861029624939
    2. '%' → logprob: -2.3502085208892822
    3. ')' → logprob: -13.475208282470703
    4. 'result' → logprob: -15.350208282470703
    5. '
' → logprob: -16.100208282470703
    6. ' ' → logprob: -16.350208282470703
    7. ' ' → logprob: -16.975208282470703
    8. ')%' → logprob: -17.725208282470703
    9. ' %
' → logprob: -17.725208282470703
    10. '```' → logprob: -18.100208282470703

Token 352: ' modulo' (ID: 112372)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.0003631137660704553
    2. '(mod' → logprob: -8.00036334991455
    3. ' modulo' → logprob: -10.50036334991455
    4. 'module' → logprob: -16.125362396240234
    5. '	mod' → logprob: -16.875362396240234
    6. ' mod' → logprob: -18.250362396240234
    7. 'mo' → logprob: -18.875362396240234
    8. '(' → logprob: -19.750362396240234
    9. ' modu' → logprob: -20.125362396240234
    10. 'Modulo' → logprob: -20.125362396240234

Token 353: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -9.088346359931165e-07
    2. '
' → logprob: -14.000000953674316
    3. '```' → logprob: -17.75
    4. ' print' → logprob: -18.0
    5. '#print' → logprob: -19.75
    6. '    
' → logprob: -21.0
    7. '(print' → logprob: -21.125
    8. '  
' → logprob: -21.125
    9. 'pr' → logprob: -21.625
    10. '

' → logprob: -21.875

Token 354: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. ' print' → logprob: -18.5
    3. '
' → logprob: -19.375
    4. '```' → logprob: -21.0
    5. '  
' → logprob: -22.875
    6. '#print' → logprob: -23.625
    7. '    
' → logprob: -23.875
    8. 'for' → logprob: -24.125
    9. '#' → logprob: -24.75
    10. '``' → logprob: -25.0

Token 355: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -6.511406809295295e-06
    2. '(' → logprob: -12.250006675720215
    3. 'result' → logprob: -13.875006675720215
    4. ' (' → logprob: -14.875006675720215
    5. '(res' → logprob: -16.0000057220459
    6. '(results' → logprob: -16.2500057220459
    7. '=result' → logprob: -17.0000057220459
    8. ',result' → logprob: -17.5000057220459
    9. '(resultado' → logprob: -17.5000057220459
    10. '(response' → logprob: -19.1250057220459

Token 356: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.723352049040841e-06
    2. ' )' → logprob: -13.375004768371582
    3. '()' → logprob: -13.875004768371582
    4. '())' → logprob: -14.125004768371582
    5. ')
' → logprob: -14.625004768371582
    6. '))' → logprob: -14.750004768371582
    7. '(' → logprob: -15.000004768371582
    8. ')`' → logprob: -15.375004768371582
    9. ')**' → logprob: -18.125003814697266
    10. ')}' → logprob: -18.375003814697266

Token 357: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 358: ' F' (ID: 454)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 359: 'ini' (ID: 2363)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 360: '.' (ID: 13)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 361: ' Peut' (ID: 116891)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 362: ' probablement' (ID: 87740)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 363: ' être' (ID: 9104)
  Prédit: 'être'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'être' → logprob: -0.034939516335725784
    2. 'êt' → logprob: -3.9099395275115967
    3. '<|end|>' → logprob: -5.659939289093018
    4. 'ê' → logprob: -5.784939289093018
    5. 'êtres' → logprob: -5.909939289093018
    6. ' être' → logprob: -7.034939289093018
    7. 'ête' → logprob: -7.159939289093018
    8. 'êre' → logprob: -7.409939289093018
    9. 'Ê' → logprob: -7.909939289093018
    10. 's' → logprob: -8.534939765930176

Token 364: ' optim' (ID: 9367)
  Prédit: 'optim'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'optim' → logprob: -0.3283150792121887
    2. 'am' → logprob: -1.328315019607544
    3. 'amel' → logprob: -4.703315258026123
    4. ' optim' → logprob: -5.828315258026123
    5. 'simpl' → logprob: -6.953315258026123
    6. 'optimized' → logprob: -7.078315258026123
    7. ' amélior' → logprob: -7.953315258026123
    8. 'im' → logprob: -7.953315258026123
    9. 'opt' → logprob: -9.078314781188965
    10. '#' → logprob: -9.578314781188965

Token 365: 'isé' (ID: 30065)
  Prédit: 'isé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isé' → logprob: -0.5716695189476013
    2. 'ized' → logprob: -1.946669578552246
    3. 'isée' → logprob: -2.321669578552246
    4. 'é' → logprob: -2.571669578552246
    5. 'er' → logprob: -3.446669578552246
    6. 'isées' → logprob: -3.571669578552246
    7. 'izer' → logprob: -4.321669578552246
    8. '<|end|>' → logprob: -4.446669578552246
    9. 'éré' → logprob: -4.946669578552246
    10. 'érer' → logprob: -5.196669578552246

Token 366: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 367: ' mais' (ID: 2899)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 368: ' c' (ID: 274)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 369: ''est' (ID: 6616)
  Prédit: ''est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''est' → logprob: -0.09615208208560944
    2. ''' → logprob: -2.5961520671844482
    3. ''''' → logprob: -5.096152305603027
    4. '#' → logprob: -5.346152305603027
    5. 'est' → logprob: -6.221152305603027
    6. '```' → logprob: -6.721152305603027
    7. '’est' → logprob: -7.096152305603027
    8. '''' → logprob: -7.596152305603027
    9. ''#' → logprob: -8.221152305603027
    10. '<|end|>' → logprob: -8.721152305603027

Token 370: ' pas' (ID: 2173)
  Prédit: 'correct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'correct' → logprob: -0.6373551487922668
    2. 'bon' → logprob: -1.762355089187622
    3. 'fonction' → logprob: -2.262355089187622
    4. 'par' → logprob: -2.887355089187622
    5. 'dé' → logprob: -2.887355089187622
    6. 'ok' → logprob: -3.387355089187622
    7. 'tout' → logprob: -4.262355327606201
    8. 'OK' → logprob: -4.637355327606201
    9. 'bien' → logprob: -4.887355327606201
    10. 'exact' → logprob: -5.387355327606201

Token 371: ' la' (ID: 557)
  Prédit: 'necessary'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'necessary' → logprob: -0.8697235584259033
    2. 'f' → logprob: -1.6197235584259033
    3. 'needed' → logprob: -2.3697235584259033
    4. 'né' → logprob: -2.3697235584259033
    5. 'strict' → logprob: -2.7447235584259033
    6. 'com' → logprob: -4.244723320007324
    7. 'compl' → logprob: -4.369723320007324
    8. 'possible' → logprob: -4.494723320007324
    9. 'perfect' → logprob: -4.619723320007324
    10. 'necess' → logprob: -4.744723320007324

Token 372: ' demande' (ID: 26737)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 373: '.' (ID: 13)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 371
Tokens correctement prédits (1ère position, stricte): 114
Tokens correctement prédits (1ère position, avec adaptation): 127
Tokens correctement prédits (top 10): 254
Précision stricte (1ère position): 30.73%
Précision adaptée (1ère position): 34.23%
Précision (top 10): 68.46%
================================================================================
