================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:15:30
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import itertools
import operator

S = input()
options = dict(itertools.zip_longest(['ABC','ARC'], ['ARC','ABC']))
print(operator.methodcaller('__getitem__', S)(options))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' itertools' (ID: 103178)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -1.9862216504407115e-05
    2. '```' → logprob: -12.625020027160645
    3. 'import' → logprob: -13.250020027160645
    4. '."""' → logprob: -13.500020027160645
    5. '\' → logprob: -13.625020027160645
    6. '.

' → logprob: -13.750020027160645
    7. ' .' → logprob: -13.750020027160645
    8. '\.' → logprob: -13.875020027160645
    9. '​.' → logprob: -14.125020027160645
    10. '.experimental' → logprob: -14.125020027160645

Token 4: ' operator' (ID: 11019)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.7916621565818787
    2. ' sys' → logprob: -1.1666622161865234
    3. ' os' → logprob: -1.7916622161865234
    4. ' collections' → logprob: -3.2916622161865234
    5. ' functools' → logprob: -3.9166622161865234
    6. 'os' → logprob: -5.791662216186523
    7. ' operator' → logprob: -6.291662216186523
    8. 'math' → logprob: -6.291662216186523
    9. 'sys' → logprob: -6.791662216186523
    10. ' numpy' → logprob: -6.916662216186523

Token 5: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.015486016869544983
    2. '(' → logprob: -5.140486240386963
    3. '\' → logprob: -5.640486240386963
    4. ',' → logprob: -6.140486240386963
    5. '<|end|>' → logprob: -7.015486240386963
    6. '
' → logprob: -7.765486240386963
    7. '\n' → logprob: -7.765486240386963
    8. '#' → logprob: -8.265485763549805
    9. '```' → logprob: -8.265485763549805
    10. '[' → logprob: -8.265485763549805

Token 6: 'S' (ID: 50)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0449257493019104
    2. '(' → logprob: -3.2949256896972656
    3. ',' → logprob: -6.044925689697266
    4. '=' → logprob: -6.419925689697266
    5. '_' → logprob: -6.919925689697266
    6. '#' → logprob: -7.419925689697266
    7. 'as' → logprob: -7.794925689697266
    8. '\' → logprob: -8.669925689697266
    9. '*' → logprob: -9.044925689697266
    10. '[' → logprob: -9.169925689697266

Token 7: ' =' (ID: 314)
  Prédit: 'et'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'et' → logprob: -0.24580246210098267
    2. '.' → logprob: -1.995802402496338
    3. 'ET' → logprob: -3.995802402496338
    4. ' =' → logprob: -4.245802402496338
    5. '=' → logprob: -4.495802402496338
    6. 'ets' → logprob: -4.870802402496338
    7. '(' → logprob: -4.870802402496338
    8. '(et' → logprob: -5.620802402496338
    9. 'ETS' → logprob: -5.745802402496338
    10. ')' → logprob: -5.870802402496338

Token 8: ' input' (ID: 3422)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' []' → logprob: -1.2892076969146729
    2. ' itertools' → logprob: -1.5392076969146729
    3. ' '' → logprob: -1.6642076969146729
    4. ' [' → logprob: -2.039207696914673
    5. ' "' → logprob: -2.914207696914673
    6. ' {' → logprob: -3.914207696914673
    7. ' set' → logprob: -3.914207696914673
    8. ' range' → logprob: -4.164207458496094
    9. ' list' → logprob: -4.664207458496094
    10. '"' → logprob: -4.664207458496094

Token 9: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0013184542767703533
    2. '('' → logprob: -7.001318454742432
    3. ''' → logprob: -8.501317977905273
    4. '("("' → logprob: -9.376317977905273
    5. '(
' → logprob: -10.626317977905273
    6. ')' → logprob: -10.626317977905273
    7. '`' → logprob: -11.126317977905273
    8. '```' → logprob: -11.251317977905273
    9. '"' → logprob: -11.501317977905273
    10. ' (' → logprob: -12.001317977905273

Token 10: 'options' (ID: 5805)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.3134475648403168
    2. '[' → logprob: -2.6884474754333496
    3. '[::-' → logprob: -2.9384474754333496
    4. '+' → logprob: -3.5634474754333496
    5. '=' → logprob: -3.8134474754333496
    6. '_' → logprob: -3.9384474754333496
    7. 'for' → logprob: -4.43844747543335
    8. ')' → logprob: -4.68844747543335
    9. 's' → logprob: -4.93844747543335
    10. 'count' → logprob: -4.93844747543335

Token 11: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4130640923976898
    2. ' =' → logprob: -1.6630641222000122
    3. '.' → logprob: -1.9130641222000122
    4. '_' → logprob: -7.038064002990723
    5. 's' → logprob: -9.663064002990723
    6. '[' → logprob: -10.038064002990723
    7. ')' → logprob: -10.163064002990723
    8. '.=' → logprob: -10.538064002990723
    9. '=[]' → logprob: -10.788064002990723
    10. '_list' → logprob: -11.163064002990723

Token 12: ' dict' (ID: 11878)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.35002601146698
    2. 'it' → logprob: -1.47502601146698
    3. '['' → logprob: -1.72502601146698
    4. 'list' → logprob: -1.97502601146698
    5. '[]' → logprob: -3.1000261306762695
    6. ' list' → logprob: -3.2250261306762695
    7. ' itertools' → logprob: -3.3500261306762695
    8. ' [' → logprob: -4.1000261306762695
    9. ' ['' → logprob: -4.4750261306762695
    10. '[list' → logprob: -4.6000261306762695

Token 13: '(it' (ID: 29445)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.022098850458860397
    2. '()' → logprob: -4.522099018096924
    3. '.setdefault' → logprob: -6.147099018096924
    4. '.from' → logprob: -6.397099018096924
    5. '(
' → logprob: -6.522099018096924
    6. '([(' → logprob: -6.647099018096924
    7. '(items' → logprob: -7.772099018096924
    8. '(it' → logprob: -8.022098541259766
    9. '(

' → logprob: -8.147098541259766
    10. '(iter' → logprob: -8.272098541259766

Token 14: 'ertools' (ID: 88385)
  Prédit: 'ertools'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ertools' → logprob: -0.0007264905725605786
    2. 'er' → logprob: -7.250726699829102
    3. 'ert' → logprob: -11.125726699829102
    4. '(er' → logprob: -14.625726699829102
    5. 'ools' → logprob: -14.750726699829102
    6. 'erval' → logprob: -15.500726699829102
    7. 'erts' → logprob: -16.1257266998291
    8. 'erto' → logprob: -16.2507266998291
    9. 'erview' → logprob: -16.2507266998291
    10. 'erl' → logprob: -16.5007266998291

Token 15: '.zip' (ID: 48044)
  Prédit: '.product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.product' → logprob: -0.12707246840000153
    2. '.groupby' → logprob: -2.50207257270813
    3. '.per' → logprob: -3.87707257270813
    4. '.' → logprob: -4.502072334289551
    5. '.chain' → logprob: -5.877072334289551
    6. '.count' → logprob: -6.877072334289551
    7. '.com' → logprob: -7.752072334289551
    8. '.p' → logprob: -8.00207233428955
    9. '.items' → logprob: -8.50207233428955
    10. '.prod' → logprob: -8.75207233428955

Token 16: '_long' (ID: 42288)
  Prédit: '_long'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_long' → logprob: -0.0049858782440423965
    2. 'long' → logprob: -5.504985809326172
    3. ' ' → logprob: -8.504985809326172
    4. ')' → logprob: -9.254985809326172
    5. '(S' → logprob: -9.629985809326172
    6. 'Longest' → logprob: -9.629985809326172
    7. '```' → logprob: -9.629985809326172
    8. '

' → logprob: -9.754985809326172
    9. '(' → logprob: -10.004985809326172
    10. '
' → logprob: -10.129985809326172

Token 17: 'est' (ID: 376)
  Prédit: 'est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -1.9361264946837764e-07
    2. 'test' → logprob: -16.75
    3. 'st' → logprob: -17.375
    4. 'ist' → logprob: -18.0
    5. 'uest' → logprob: -18.375
    6. 'e' → logprob: -18.625
    7. 'iest' → logprob: -18.625
    8. 'east' → logprob: -19.0
    9. 'ext' → logprob: -19.375
    10. 'lest' → logprob: -19.375

Token 18: '(['' (ID: 14113)
  Prédit: '(S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(S' → logprob: -0.01387939415872097
    2. '(' → logprob: -4.638879299163818
    3. '((' → logprob: -6.138879299163818
    4. '(range' → logprob: -7.013879299163818
    5. '(list' → logprob: -7.513879299163818
    6. '(iter' → logprob: -9.388879776000977
    7. '('' → logprob: -9.763879776000977
    8. '(input' → logprob: -9.763879776000977
    9. '(s' → logprob: -10.138879776000977
    10. ')(' → logprob: -10.263879776000977

Token 19: 'ABC' (ID: 44197)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.4995203018188477
    2. 'S' → logprob: -1.8745203018188477
    3. 'A' → logprob: -2.1245203018188477
    4. '+' → logprob: -2.3745203018188477
    5. '(',' → logprob: -2.7495203018188477
    6. '+',' → logprob: -3.2495203018188477
    7. '0' → logprob: -3.6245203018188477
    8. '+-' → logprob: -3.9995203018188477
    9. '('' → logprob: -4.249520301818848
    10. 'R' → logprob: -4.249520301818848

Token 20: '','' (ID: 4074)
  Prédit: '','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.019703591242432594
    2. '','' → logprob: -4.144703388214111
    3. ''],' → logprob: -6.019703388214111
    4. 'D' → logprob: -7.644703388214111
    5. 'DE' → logprob: -8.39470386505127
    6. ''' → logprob: -8.89470386505127
    7. 'DEF' → logprob: -9.01970386505127
    8. ',' → logprob: -9.51970386505127
    9. '",' → logprob: -9.89470386505127
    10. '',"' → logprob: -10.14470386505127

Token 21: 'ARC' (ID: 64758)
  Prédit: 'DEF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'DEF' → logprob: -0.12617571651935577
    2. ''' → logprob: -2.87617564201355
    3. 'AC' → logprob: -4.001175880432129
    4. 'XYZ' → logprob: -5.001175880432129
    5. 'ABD' → logprob: -5.376175880432129
    6. 'S' → logprob: -5.876175880432129
    7. 'B' → logprob: -5.876175880432129
    8. ''S' → logprob: -6.251175880432129
    9. '123' → logprob: -6.251175880432129
    10. 'C' → logprob: -6.376175880432129

Token 22: ''],' (ID: 9151)
  Prédit: '',''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '','' → logprob: -0.04341863468289375
    2. ''],'' → logprob: -4.0434184074401855
    3. ''],' → logprob: -4.1684184074401855
    4. '',' → logprob: -5.0434184074401855
    5. 'T' → logprob: -7.1684184074401855
    6. 'C' → logprob: -7.2934184074401855
    7. 'S' → logprob: -7.4184184074401855
    8. ''' → logprob: -8.293418884277344
    9. 'O' → logprob: -8.668418884277344
    10. '',"' → logprob: -8.793418884277344

Token 23: ' ['' (ID: 5140)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.022097570821642876
    2. ' S' → logprob: -4.022097587585449
    3. '[' → logprob: -5.897097587585449
    4. '[S' → logprob: -8.27209758758545
    5. 'list' → logprob: -8.39709758758545
    6. ' [' → logprob: -8.52209758758545
    7. '['' → logprob: -8.52209758758545
    8. ' ' → logprob: -9.02209758758545
    9. '   ' → logprob: -9.64709758758545
    10. ' list' → logprob: -10.77209758758545

Token 24: 'ARC' (ID: 64758)
  Prédit: '123'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '123' → logprob: -1.2393180131912231
    2. 'ARC' → logprob: -2.7393178939819336
    3. 'ABC' → logprob: -3.1143178939819336
    4. 'R' → logprob: -3.1768178939819336
    5. 'AC' → logprob: -3.1768178939819336
    6. '1' → logprob: -3.3018178939819336
    7. ''' → logprob: -3.3643178939819336
    8. 'input' → logprob: -3.4893178939819336
    9. '0' → logprob: -3.8643178939819336
    10. '120' → logprob: -4.176817893981934

Token 25: '','' (ID: 4074)
  Prédit: '',''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '','' → logprob: -0.016092203557491302
    2. '',' → logprob: -4.391092300415039
    3. ''],' → logprob: -6.891092300415039
    4. 'C' → logprob: -7.641092300415039
    5. 'ABC' → logprob: -7.641092300415039
    6. ''],'' → logprob: -7.641092300415039
    7. 'B' → logprob: -8.641092300415039
    8. 'D' → logprob: -8.766092300415039
    9. ''' → logprob: -8.891092300415039
    10. ',' → logprob: -9.141092300415039

Token 26: 'ABC' (ID: 44197)
  Prédit: 'ABC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ABC' → logprob: -0.01662003993988037
    2. ' ABC' → logprob: -5.51662015914917
    3. 'AG' → logprob: -6.01662015914917
    4. 'AB' → logprob: -6.39162015914917
    5. 'ARC' → logprob: -6.51662015914917
    6. 'B' → logprob: -7.01662015914917
    7. 'ABD' → logprob: -7.76662015914917
    8. 'AC' → logprob: -7.89162015914917
    9. 'BCD' → logprob: -7.89162015914917
    10. 'A' → logprob: -7.89162015914917

Token 27: '']))
' (ID: 49740)
  Prédit: ''],'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''],' → logprob: -0.1299789845943451
    2. '']))' → logprob: -2.129978895187378
    3. '']),' → logprob: -7.379979133605957
    4. '),' → logprob: -7.379979133605957
    5. '],' → logprob: -7.504979133605957
    6. ']))' → logprob: -7.754979133605957
    7. '']' → logprob: -8.129979133605957
    8. ''],'' → logprob: -8.379979133605957
    9. ''),' → logprob: -9.629979133605957
    10. ''])' → logprob: -10.004979133605957

Token 28: 'print' (ID: 1598)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12129394710063934
    2. ',' → logprob: -2.6212940216064453
    3. '[' → logprob: -3.7462940216064453
    4. '.get' → logprob: -4.746294021606445
    5. ',S' → logprob: -6.121294021606445
    6. '[S' → logprob: -6.371294021606445
    7. 'S' → logprob: -6.996294021606445
    8. ',[' → logprob: -7.121294021606445
    9. ',)' → logprob: -7.996294021606445
    10. '))' → logprob: -7.996294021606445

Token 29: '(operator' (ID: 145734)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.012718120589852333
    2. '(operator' → logprob: -4.887718200683594
    3. '(S' → logprob: -6.387718200683594
    4. '(len' → logprob: -7.137718200683594
    5. '((' → logprob: -7.512718200683594
    6. '(list' → logprob: -7.512718200683594
    7. '(max' → logprob: -8.137718200683594
    8. '(options' → logprob: -8.262718200683594
    9. '(op' → logprob: -8.262718200683594
    10. '('' → logprob: -8.512718200683594

Token 30: '.method' (ID: 24432)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.010718470439314842
    2. ' .' → logprob: -4.76071834564209
    3. '.get' → logprob: -7.76071834564209
    4. '.attr' → logprob: -8.01071834564209
    5. '[' → logprob: -8.13571834564209
    6. ' ' → logprob: -8.38571834564209
    7. '.)' → logprob: -8.63571834564209
    8. ')' → logprob: -9.76071834564209
    9. '.mul' → logprob: -9.88571834564209
    10. '.[' → logprob: -9.88571834564209

Token 31: 'caller' (ID: 122437)
  Prédit: 'caller'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'caller' → logprob: -0.002849925309419632
    2. 's' → logprob: -6.62785005569458
    3. '.item' → logprob: -7.62785005569458
    4. '.__' → logprob: -8.002849578857422
    5. 'call' → logprob: -8.502849578857422
    6. 'Caller' → logprob: -9.002849578857422
    7. 'getitem' → logprob: -9.377849578857422
    8. 'item' → logprob: -9.627849578857422
    9. 'items' → logprob: -9.877849578857422
    10. '.call' → logprob: -11.002849578857422

Token 32: '('__' (ID: 180326)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.003275159979239106
    2. '(' → logprob: -5.878275394439697
    3. ' ('' → logprob: -8.753274917602539
    4. '('__' → logprob: -8.753274917602539
    5. '('_' → logprob: -9.128274917602539
    6. ''' → logprob: -11.128274917602539
    7. '("' → logprob: -11.628274917602539
    8. ')' → logprob: -11.878274917602539
    9. '(('' → logprob: -12.878274917602539
    10. ''s' → logprob: -12.878274917602539

Token 33: 'getitem' (ID: 147767)
  Prédit: 'contains'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'contains' → logprob: -0.6506555676460266
    2. 'getitem' → logprob: -0.9006555676460266
    3. 'eq' → logprob: -2.775655508041382
    4. 'get' → logprob: -5.150655746459961
    5. 'len' → logprob: -7.525655746459961
    6. 'call' → logprob: -7.775655746459961
    7. 'name' → logprob: -7.775655746459961
    8. 'add' → logprob: -7.900655746459961
    9. 'str' → logprob: -7.900655746459961
    10. 'lt' → logprob: -8.400655746459961

Token 34: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0006319015519693494
    2. '__('' → logprob: -8.125632286071777
    3. '',' → logprob: -8.375632286071777
    4. '__(' → logprob: -9.375632286071777
    5. '')(' → logprob: -11.625632286071777
    6. '(',' → logprob: -12.250632286071777
    7. '___' → logprob: -13.375632286071777
    8. '_',' → logprob: -13.500632286071777
    9. '__",' → logprob: -14.500632286071777
    10. '__("' → logprob: -14.875632286071777

Token 35: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.1337895691394806
    2. '')(' → logprob: -2.383789539337158
    3. '(S' → logprob: -3.508789539337158
    4. ''(' → logprob: -7.008789539337158
    5. '(',' → logprob: -7.758789539337158
    6. '(' → logprob: -7.883789539337158
    7. ''' → logprob: -8.008790016174316
    8. ')(' → logprob: -8.383790016174316
    9. '',(' → logprob: -8.383790016174316
    10. '('' → logprob: -8.758790016174316

Token 36: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.03881283849477768
    2. ' S' → logprob: -3.2888128757476807
    3. '(S' → logprob: -8.038812637329102
    4. ''S' → logprob: -8.788812637329102
    5. ')' → logprob: -9.038812637329102
    6. ' options' → logprob: -9.913812637329102
    7. ' ' → logprob: -10.288812637329102
    8. 'options' → logprob: -10.538812637329102
    9. '(' → logprob: -11.413812637329102
    10. ' (' → logprob: -11.538812637329102

Token 37: ')(' (ID: 4898)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.10262098163366318
    2. ')' → logprob: -2.352621078491211
    3. ')(' → logprob: -6.602621078491211
    4. ')))' → logprob: -7.227621078491211
    5. '])' → logprob: -9.477621078491211
    6. '))(' → logprob: -9.727621078491211
    7. ']))' → logprob: -10.102621078491211
    8. '[' → logprob: -10.477621078491211
    9. '))
' → logprob: -10.727621078491211
    10. ' ))' → logprob: -11.477621078491211

Token 38: 'options' (ID: 5805)
  Prédit: 'options'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'options' → logprob: -0.0015078396536409855
    2. ' options' → logprob: -6.501507759094238
    3. '(options' → logprob: -13.376507759094238
    4. '	options' → logprob: -13.751507759094238
    5. 'option' → logprob: -14.001507759094238
    6. ')' → logprob: -14.126507759094238
    7. 'Options' → logprob: -14.876507759094238
    8. '$options' → logprob: -15.376507759094238
    9. 'op' → logprob: -15.751507759094238
    10. 'opt' → logprob: -15.876507759094238

Token 39: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.004647045861929655
    2. ')' → logprob: -5.379647254943848
    3. ')))' → logprob: -11.379647254943848
    4. '))
' → logprob: -12.379647254943848
    5. '[' → logprob: -12.629647254943848
    6. ''))' → logprob: -12.629647254943848
    7. '[S' → logprob: -13.504647254943848
    8. '])' → logprob: -13.879647254943848
    9. ']))' → logprob: -14.629647254943848
    10. ' ))' → logprob: -15.129647254943848


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 37
Tokens correctement prédits (1ère position, stricte): 10
Tokens correctement prédits (1ère position, avec adaptation): 10
Tokens correctement prédits (top 10): 23
Précision stricte (1ère position): 27.03%
Précision adaptée (1ère position): 27.03%
Précision (top 10): 62.16%
================================================================================
