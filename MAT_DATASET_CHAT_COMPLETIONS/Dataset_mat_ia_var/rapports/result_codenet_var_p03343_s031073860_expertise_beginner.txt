================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:18:19
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
INF = 1 << 60

def read_int_list():
    return list(map(int, input().split()))

N, K, Q = read_int_list()
A = read_int_list()
A.append(-INF)

def get_lub(y):
    result = []
    l = 0
    for i in range(N+1):
        if A[i] < y:
            temp = A[l:i]
            temp.sort()
            if len(temp) >= K-1:
                for x in temp[:len(temp)-K+1]:
                    result.append(x)
            l = i + 1
    result.sort()
    if len(result) >= Q:
        return result[Q-1]
    else:
        return INF

ans = INF
for value in A[:-1]:
    other = get_lub(value)
    if other - value < ans:
        ans = other - value

print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'INF' (ID: 64358)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' ' (ID: 220)
  → Token d'amorce (pas de prédiction)

Token 3: '1' (ID: 16)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.27699604630470276
    2. '10' → logprob: -2.15199613571167
    3. ' float' → logprob: -2.65199613571167
    4. ' ' → logprob: -3.15199613571167
    5. '1' → logprob: -4.65199613571167
    6. 'int' → logprob: -6.77699613571167
    7. '100' → logprob: -6.90199613571167
    8. '999' → logprob: -7.77699613571167
    9. 'inf' → logprob: -9.151995658874512
    10. ' int' → logprob: -9.651995658874512

Token 4: ' <<' (ID: 2256)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.022793706506490707
    2. '_' → logprob: -4.772793769836426
    3. '00' → logprob: -5.022793769836426
    4. '000' → logprob: -5.022793769836426
    5. '<<' → logprob: -7.147793769836426
    6. 'e' → logprob: -9.897793769836426
    7. ' <<' → logprob: -10.272793769836426
    8. '```' → logprob: -12.147793769836426
    9. '1' → logprob: -12.272793769836426
    10. '2' → logprob: -12.272793769836426

Token 5: ' ' (ID: 220)
  Prédit: '30'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '30' → logprob: -0.1584470123052597
    2. '31' → logprob: -2.158447027206421
    3. '60' → logprob: -3.658447027206421
    4. '32' → logprob: -6.283446788787842
    5. '20' → logprob: -6.658446788787842
    6. '29' → logprob: -6.908446788787842
    7. '61' → logprob: -7.658446788787842
    8. '63' → logprob: -8.408447265625
    9. ' ' → logprob: -9.033447265625
    10. '62' → logprob: -9.783447265625

Token 6: '60' (ID: 1910)
  Prédit: '60'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '60' → logprob: -0.010615982115268707
    2. '30' → logprob: -4.635615825653076
    3. '31' → logprob: -7.635615825653076
    4. '62' → logprob: -9.260616302490234
    5. '59' → logprob: -9.510616302490234
    6. '61' → logprob: -9.760616302490234
    7. '63' → logprob: -10.010616302490234
    8. '29' → logprob: -10.135616302490234
    9. '50' → logprob: -10.260616302490234
    10. '20' → logprob: -11.260616302490234

Token 7: '

' (ID: 279)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.9017882943153381
    2. '\' → logprob: -1.4017882347106934
    3. '```' → logprob: -2.5267882347106934
    4. '*' → logprob: -2.6517882347106934
    5. '_' → logprob: -3.1517882347106934
    6. '#' → logprob: -3.2767882347106934
    7. '+' → logprob: -3.2767882347106934
    8. '' → logprob: -3.9017882347106934
    9. '
' → logprob: -4.401788234710693
    10. '`' → logprob: -4.526788234710693

Token 8: 'def' (ID: 1314)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.4692966043949127
    2. '\' → logprob: -1.5942965745925903
    3. '
' → logprob: -3.09429669380188
    4. '```' → logprob: -3.21929669380188
    5. '*' → logprob: -3.59429669380188
    6. '`' → logprob: -4.344296455383301
    7. '' → logprob: -4.719296455383301
    8. '#' → logprob: -5.219296455383301
    9. '**' → logprob: -5.469296455383301
    10. '

' → logprob: -5.594296455383301

Token 9: ' read' (ID: 1729)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0026776795275509357
    2. ' max' → logprob: -7.252677917480469
    3. ' dfs' → logprob: -7.502677917480469
    4. ' space' → logprob: -7.752677917480469
    5. ' f' → logprob: -8.627677917480469
    6. ' a' → logprob: -9.502677917480469
    7. '_' → logprob: -9.502677917480469
    8. ' factorial' → logprob: -9.627677917480469
    9. ' func' → logprob: -9.877677917480469
    10. ' add' → logprob: -9.877677917480469

Token 10: '_int' (ID: 12285)
  Prédit: '_line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.8261590003967285
    2. '(' → logprob: -1.0761590003967285
    3. '_' → logprob: -1.7011590003967285
    4. '()' → logprob: -4.0761590003967285
    5. 'line' → logprob: -4.9511590003967285
    6. '():' → logprob: -5.0761590003967285
    7. '_input' → logprob: -6.0761590003967285
    8. '_token' → logprob: -6.7011590003967285
    9. ' (' → logprob: -7.2011590003967285
    10. ')' → logprob: -7.7011590003967285

Token 11: '_list' (ID: 4162)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5882564783096313
    2. '(' → logprob: -0.8382564783096313
    3. '():' → logprob: -5.088256359100342
    4. '(s' → logprob: -6.463256359100342
    5. '```' → logprob: -6.838256359100342
    6. '()' → logprob: -6.963256359100342
    7. '_' → logprob: -7.838256359100342
    8. ':' → logprob: -8.0882568359375
    9. '_s' → logprob: -8.3382568359375
    10. '("("' → logprob: -8.5882568359375

Token 12: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06375623494386673
    2. '():' → logprob: -2.813756227493286
    3. '(prompt' → logprob: -8.563755989074707
    4. '_' → logprob: -8.563755989074707
    5. '(":' → logprob: -8.563755989074707
    6. '("("' → logprob: -8.688755989074707
    7. '(:' → logprob: -8.813755989074707
    8. '```' → logprob: -9.188755989074707
    9. '(line' → logprob: -9.563755989074707
    10. '(token' → logprob: -9.563755989074707

Token 13: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38754233717918396
    2. ' return' → logprob: -1.2625423669815063
    3. 'return' → logprob: -4.387542247772217
    4. '```' → logprob: -4.512542247772217
    5. '()' → logprob: -5.887542247772217
    6. '(' → logprob: -6.012542247772217
    7. '	return' → logprob: -6.387542247772217
    8. '[]' → logprob: -6.762542247772217
    9. '(return' → logprob: -6.887542247772217
    10. ':return' → logprob: -7.012542247772217

Token 14: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.1393042802810669
    2. ' return' → logprob: -2.5143041610717773
    3. '   ' → logprob: -3.0143041610717773
    4. 'r' → logprob: -11.514304161071777
    5. '```' → logprob: -11.764304161071777
    6. '	return' → logprob: -12.639304161071777
    7. 'n' → logprob: -13.014304161071777
    8. ' ' → logprob: -13.139304161071777
    9. 'data' → logprob: -13.514304161071777
    10. '    ' → logprob: -13.514304161071777

Token 15: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.038180917501449585
    2. 'list' → logprob: -3.2881808280944824
    3. '[list' → logprob: -9.28818130493164
    4. ' [' → logprob: -10.41318130493164
    5. '[' → logprob: -11.16318130493164
    6. '[int' → logprob: -13.66318130493164
    7. ' map' → logprob: -14.53818130493164
    8. '=list' → logprob: -15.41318130493164
    9. '(list' → logprob: -15.53818130493164
    10. '[]' → logprob: -15.66318130493164

Token 16: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.007296266499906778
    2. '(' → logprob: -5.007296085357666
    3. '(int' → logprob: -7.507296085357666
    4. '(input' → logprob: -10.757296562194824
    5. '(range' → logprob: -12.257296562194824
    6. '(eval' → logprob: -13.132296562194824
    7. '(filter' → logprob: -14.507296562194824
    8. '(read' → logprob: -15.257296562194824
    9. '[int' → logprob: -15.507296562194824
    10. '(in' → logprob: -15.507296562194824

Token 17: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00013882013445254415
    2. 'int' → logprob: -9.375139236450195
    3. '<int' → logprob: -10.750139236450195
    4. '(' → logprob: -10.875139236450195
    5. '=int' → logprob: -11.750139236450195
    6. ' int' → logprob: -13.250139236450195
    7. '[int' → logprob: -13.375139236450195
    8. ',int' → logprob: -13.375139236450195
    9. '```' → logprob: -15.000139236450195
    10. ']int' → logprob: -15.500139236450195

Token 18: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -1.019194483757019
    2. ',input' → logprob: -1.269194483757019
    3. 'input' → logprob: -1.519194483757019
    4. ',' → logprob: -2.2691946029663086
    5. '(' → logprob: -4.019194602966309
    6. '))' → logprob: -4.894194602966309
    7. ' input' → logprob: -5.769194602966309
    8. ')' → logprob: -5.894194602966309
    9. '   ' → logprob: -7.019194602966309
    10. ')))' → logprob: -7.394194602966309

Token 19: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.007655607536435127
    2. ' input' → logprob: -4.882655620574951
    3. '   ' → logprob: -10.632655143737793
    4. ',input' → logprob: -10.882655143737793
    5. '(input' → logprob: -13.257655143737793
    6. '	input' → logprob: -13.382655143737793
    7. '=input' → logprob: -14.132655143737793
    8. ')' → logprob: -14.382655143737793
    9. 'stdin' → logprob: -14.882655143737793
    10. '```' → logprob: -15.007655143737793

Token 20: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0008600078872404993
    2. '()' → logprob: -8.000860214233398
    3. '()))' → logprob: -8.000860214233398
    4. '())))' → logprob: -9.000860214233398
    5. '())' → logprob: -10.000860214233398
    6. '()));' → logprob: -11.250860214233398
    7. ')' → logprob: -12.875860214233398
    8. ')))' → logprob: -13.375860214233398
    9. '))' → logprob: -13.750860214233398
    10. '());' → logprob: -14.625860214233398

Token 21: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.008622966706752777
    2. 'strip' → logprob: -4.758623123168945
    3. 'rstrip' → logprob: -11.758623123168945
    4. ' split' → logprob: -15.508623123168945
    5. 'read' → logprob: -16.008623123168945
    6. '(split' → logprob: -16.133623123168945
    7. 'spl' → logprob: -17.258623123168945
    8. ')' → logprob: -17.633623123168945
    9. 's' → logprob: -18.383623123168945
    10. ' strip' → logprob: -18.883623123168945

Token 22: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.77493816614151
    2. ')))' → logprob: -1.2749381065368652
    3. '))' → logprob: -2.2749381065368652
    4. '())))' → logprob: -2.8999381065368652
    5. ')' → logprob: -3.2749381065368652
    6. '())' → logprob: -3.2749381065368652
    7. '()' → logprob: -3.6499381065368652
    8. '(' → logprob: -8.399938583374023
    9. '()));' → logprob: -10.774938583374023
    10. '())))
' → logprob: -10.899938583374023

Token 23: 'N' (ID: 45)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.10153590142726898
    2. 'd' → logprob: -2.3515357971191406
    3. 'de' → logprob: -7.851535797119141
    4. '\' → logprob: -8.10153579711914
    5. 'n' → logprob: -8.22653579711914
    6. '```' → logprob: -9.10153579711914
    7. '
' → logprob: -9.47653579711914
    8. '

' → logprob: -9.60153579711914
    9. '\n' → logprob: -10.35153579711914
    10. 'a' → logprob: -10.47653579711914

Token 24: ',' (ID: 11)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.17547821998596191
    2. ' =' → logprob: -2.425478219985962
    3. '=' → logprob: -3.675478219985962
    4. ')' → logprob: -3.800478219985962
    5. ',' → logprob: -4.925477981567383
    6. '<|end|>' → logprob: -5.550477981567383
    7. ' )' → logprob: -5.800477981567383
    8. '  ' → logprob: -6.175477981567383
    9. ' ,' → logprob: -6.175477981567383
    10. '.' → logprob: -6.425477981567383

Token 25: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.09255825728178024
    2. ' K' → logprob: -3.0925581455230713
    3. 'M' → logprob: -3.5925581455230713
    4. 'Q' → logprob: -4.34255838394165
    5. ' M' → logprob: -6.71755838394165
    6. 'X' → logprob: -8.467557907104492
    7. 'A' → logprob: -8.592557907104492
    8. ' Q' → logprob: -8.592557907104492
    9. 'D' → logprob: -8.967557907104492
    10. 'N' → logprob: -9.342557907104492

Token 26: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029770854860544205
    2. '=' → logprob: -3.529770851135254
    3. ',' → logprob: -10.904770851135254
    4. ' ' → logprob: -14.404770851135254
    5. ' =
' → logprob: -14.654770851135254
    6. ')' → logprob: -14.779770851135254
    7. '=input' → logprob: -16.02977180480957
    8. ' ,' → logprob: -16.15477180480957
    9. ' =",' → logprob: -16.27977180480957
    10. ' =)' → logprob: -16.65477180480957

Token 27: ' Q' (ID: 1486)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.58432936668396
    2. 'X' → logprob: -2.08432936668396
    3. 'D' → logprob: -2.33432936668396
    4. 'S' → logprob: -2.83432936668396
    5. 'A' → logprob: -2.95932936668396
    6. 'M' → logprob: -3.33432936668396
    7. 'C' → logprob: -3.70932936668396
    8. ' Q' → logprob: -4.209329605102539
    9. 'L' → logprob: -4.459329605102539
    10. ' D' → logprob: -5.709329605102539

Token 28: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25193798542022705
    2. '=' → logprob: -1.501937985420227
    3. ',' → logprob: -11.876937866210938
    4. '=input' → logprob: -14.001937866210938
    5. ' ' → logprob: -15.001937866210938
    6. ')' → logprob: -15.626937866210938
    7. '   ' → logprob: -16.501937866210938
    8. ' =
' → logprob: -16.876937866210938
    9. '=int' → logprob: -17.001937866210938
    10. '```' → logprob: -17.001937866210938

Token 29: ' read' (ID: 1729)
  Prédit: ' map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.5339997410774231
    2. ' read' → logprob: -1.6589996814727783
    3. 'map' → logprob: -1.6589996814727783
    4. 'read' → logprob: -3.4089996814727783
    5. ' ' → logprob: -12.9089994430542
    6. ' list' → logprob: -13.0339994430542
    7. 'list' → logprob: -13.1589994430542
    8. ' [' → logprob: -13.9089994430542
    9. '[' → logprob: -14.4089994430542
    10. '	read' → logprob: -14.6589994430542

Token 30: '_int' (ID: 12285)
  Prédit: '_int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -2.7848862373502925e-05
    2. 'int' → logprob: -10.500027656555176
    3. '_' → logprob: -16.000028610229492
    4. '_in' → logprob: -17.375028610229492
    5. '```' → logprob: -17.375028610229492
    6. '_INT' → logprob: -17.750028610229492
    7. '_inf' → logprob: -17.875028610229492
    8. '_input' → logprob: -17.875028610229492
    9. '_str' → logprob: -18.500028610229492
    10. ' int' → logprob: -18.750028610229492

Token 31: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -6.034592388459714e-06
    2. 's' → logprob: -13.000005722045898
    3. '()' → logprob: -13.750005722045898
    4. '_s' → logprob: -14.500005722045898
    5. '_line' → logprob: -14.500005722045898
    6. 'List' → logprob: -14.875005722045898
    7. '_l' → logprob: -15.625005722045898
    8. 'list' → logprob: -15.625005722045898
    9. '_lst' → logprob: -15.625005722045898
    10. '_' → logprob: -15.750005722045898

Token 32: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00023298001906368881
    2. '(' → logprob: -8.625232696533203
    3. '()]' → logprob: -11.375232696533203
    4. '())' → logprob: -11.625232696533203
    5. '()[' → logprob: -12.125232696533203
    6. '()`' → logprob: -12.375232696533203
    7. '```' → logprob: -12.625232696533203
    8. ' ()' → logprob: -12.750232696533203
    9. '()<' → logprob: -12.875232696533203
    10. '()

' → logprob: -13.000232696533203

Token 33: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0010859245667234063
    2. 'scores' → logprob: -8.126086235046387
    3. ' A' → logprob: -8.501086235046387
    4. 'a' → logprob: -8.626086235046387
    5. 'S' → logprob: -9.126086235046387
    6. 'answers' → logprob: -9.626086235046387
    7. 'points' → logprob: -10.001086235046387
    8. 'As' → logprob: -10.501086235046387
    9. 'arr' → logprob: -10.626086235046387
    10. 'ans' → logprob: -10.751086235046387

Token 34: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1009596511721611
    2. '=' → logprob: -2.350959539413452
    3. 's' → logprob: -7.975959777832031
    4. ' ' → logprob: -8.475959777832031
    5. ',' → logprob: -9.475959777832031
    6. '_' → logprob: -10.725959777832031
    7. '[:]' → logprob: -10.975959777832031
    8. '.' → logprob: -11.475959777832031
    9. '=[]' → logprob: -11.475959777832031
    10. 'rray' → logprob: -11.725959777832031

Token 35: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.5371936559677124
    2. ' read' → logprob: -1.0371936559677124
    3. ' [' → logprob: -3.537193775177002
    4. '[' → logprob: -3.912193775177002
    5. '[]' → logprob: -4.787193775177002
    6. ' []' → logprob: -6.662193775177002
    7. ' list' → logprob: -7.162193775177002
    8. 'list' → logprob: -7.287193775177002
    9. '[N' → logprob: -8.412193298339844
    10. ' ' → logprob: -9.037193298339844

Token 36: '_int' (ID: 12285)
  Prédit: '_int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -6.988221684878226e-06
    2. 'int' → logprob: -12.125006675720215
    3. '_list' → logprob: -14.125006675720215
    4. '_uint' → logprob: -15.875006675720215
    5. '_in' → logprob: -16.25000762939453
    6. '```' → logprob: -16.25000762939453
    7. '_' → logprob: -16.37500762939453
    8. '_integer' → logprob: -16.87500762939453
    9. '_str' → logprob: -17.00000762939453
    10. '_float' → logprob: -17.75000762939453

Token 37: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -1.9146995327901095e-05
    2. 'list' → logprob: -11.125019073486328
    3. 'List' → logprob: -12.500019073486328
    4. '()' → logprob: -14.625019073486328
    5. 'ist' → logprob: -17.125019073486328
    6. '_LIST' → logprob: -17.125019073486328
    7. 'alist' → logprob: -17.500019073486328
    8. '```' → logprob: -18.375019073486328
    9. 's' → logprob: -18.625019073486328
    10. '_lst' → logprob: -19.000019073486328

Token 38: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -9.253090865968261e-06
    2. '(' → logprob: -12.250009536743164
    3. '()]' → logprob: -13.375009536743164
    4. '()`' → logprob: -14.375009536743164
    5. '()

' → logprob: -14.625009536743164
    6. '().' → logprob: -14.875009536743164
    7. '`()' → logprob: -15.000009536743164
    8. '())' → logprob: -15.125009536743164
    9. '()[' → logprob: -15.500009536743164
    10. ' ()' → logprob: -15.500009536743164

Token 39: 'A' (ID: 32)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -1.8509021997451782
    2. 'S' → logprob: -1.8509021997451782
    3. 'for' → logprob: -2.3509020805358887
    4. 'dp' → logprob: -2.3509020805358887
    5. 'B' → logprob: -2.4759020805358887
    6. 'D' → logprob: -2.6009020805358887
    7. 'X' → logprob: -2.8509020805358887
    8. 'A' → logprob: -3.3509020805358887
    9. 'C' → logprob: -3.8509020805358887
    10. '_' → logprob: -3.9759020805358887

Token 40: '.append' (ID: 3709)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7474260330200195
    2. '<|end|>' → logprob: -0.8724260330200195
    3. '.' → logprob: -2.8724260330200195
    4. '<|end|>' → logprob: -3.8724260330200195
    5. '[:]' → logprob: -4.7474260330200195
    6. '#' → logprob: -5.6224260330200195
    7. '[::-' → logprob: -5.8724260330200195
    8. '+' → logprob: -5.9974260330200195
    9. '```' → logprob: -6.1224260330200195
    10. ' ' → logprob: -6.1224260330200195

Token 41: '(-' (ID: 8087)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.05191221460700035
    2. '(IN' → logprob: -3.301912307739258
    3. '(A' → logprob: -4.801912307739258
    4. '(-' → logprob: -6.426912307739258
    5. '((' → logprob: -6.551912307739258
    6. '(Q' → logprob: -7.426912307739258
    7. '(int' → logprob: -7.926912307739258
    8. '(None' → logprob: -7.926912307739258
    9. '(in' → logprob: -8.051912307739258
    10. '(K' → logprob: -8.551912307739258

Token 42: 'INF' (ID: 64358)
  Prédit: 'INF'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'INF' → logprob: -0.5762116312980652
    2. '1' → logprob: -0.8262116312980652
    3. '(' → logprob: -9.701211929321289
    4. '10' → logprob: -9.951211929321289
    5. 'inf' → logprob: -10.326211929321289
    6. 'IN' → logprob: -10.451211929321289
    7. '100' → logprob: -10.576211929321289
    8. '-INF' → logprob: -11.451211929321289
    9. '_INF' → logprob: -11.701211929321289
    10. ' INF' → logprob: -11.701211929321289

Token 43: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -7.231182826217264e-05
    2. ' )' → logprob: -9.750072479248047
    3. '))' → logprob: -11.375072479248047
    4. ')
' → logprob: -13.875072479248047
    5. '`)' → logprob: -15.125072479248047
    6. '-' → logprob: -15.500072479248047
    7. ')`' → logprob: -15.625072479248047
    8. ')))' → logprob: -15.875072479248047
    9. '0' → logprob: -16.500072479248047
    10. '-)' → logprob: -16.625072479248047

Token 44: 'def' (ID: 1314)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5522529482841492
    2. 'dp' → logprob: -1.677253007888794
    3. ' for' → logprob: -2.927253007888794
    4. 'result' → logprob: -3.302253007888794
    5. ' 
' → logprob: -3.802253007888794
    6. '
' → logprob: -3.927253007888794
    7. '```' → logprob: -4.052252769470215
    8. '\n' → logprob: -4.302252769470215
    9. 'res' → logprob: -4.302252769470215
    10. 'max' → logprob: -5.177252769470215

Token 45: ' get' (ID: 717)
  Prédit: ' solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' solve' → logprob: -0.1132860779762268
    2. ' dfs' → logprob: -2.613286018371582
    3. ' main' → logprob: -4.613286018371582
    4. ' dp' → logprob: -5.488286018371582
    5. ' check' → logprob: -5.988286018371582
    6. ' max' → logprob: -6.113286018371582
    7. ' binary' → logprob: -6.238286018371582
    8. ' ' → logprob: -6.363286018371582
    9. ' calc' → logprob: -6.363286018371582
    10. '_' → logprob: -6.863286018371582

Token 46: '_l' (ID: 1478)
  Prédit: '_max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.6711889505386353
    2. '_min' → logprob: -1.2961889505386353
    3. '_dp' → logprob: -2.6711888313293457
    4. '_' → logprob: -3.5461888313293457
    5. '_answer' → logprob: -4.421188831329346
    6. '_next' → logprob: -4.421188831329346
    7. '_distance' → logprob: -4.546188831329346
    8. '_value' → logprob: -4.671188831329346
    9. '_pos' → logprob: -4.921188831329346
    10. '_ans' → logprob: -5.171188831329346

Token 47: 'ub' (ID: 431)
  Prédit: 'eft'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'eft' → logprob: -0.030310725793242455
    2. 'ist' → logprob: -4.40531063079834
    3. 'en' → logprob: -4.90531063079834
    4. 'e' → logprob: -4.90531063079834
    5. 'ength' → logprob: -6.40531063079834
    6. 'ong' → logprob: -8.03031063079834
    7. 'imit' → logprob: -8.90531063079834
    8. 'ast' → logprob: -9.03031063079834
    9. 'east' → logprob: -9.40531063079834
    10. 'ink' → logprob: -10.03031063079834

Token 48: '(y' (ID: 14684)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.04888290911912918
    2. '(i' → logprob: -4.423882961273193
    3. '(' → logprob: -4.923882961273193
    4. '(index' → logprob: -4.923882961273193
    5. '(a' → logprob: -5.673882961273193
    6. '(idx' → logprob: -5.673882961273193
    7. '(pos' → logprob: -5.673882961273193
    8. '(A' → logprob: -5.923882961273193
    9. '(value' → logprob: -6.048882961273193
    10. '(key' → logprob: -6.923882961273193

Token 49: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3806544840335846
    2. ',' → logprob: -1.3806544542312622
    3. 'x' → logprob: -3.2556545734405518
    4. '):
' → logprob: -4.505654335021973
    5. '(x' → logprob: -5.255654335021973
    6. ',x' → logprob: -6.255654335021973
    7. 'ef' → logprob: -6.505654335021973
    8. 'ex' → logprob: -6.880654335021973
    9. ',y' → logprob: -6.880654335021973
    10. ' ,' → logprob: -7.130654335021973

Token 50: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2967129647731781
    2. ' for' → logprob: -2.171712875366211
    3. ' lo' → logprob: -3.046712875366211
    4. 'l' → logprob: -4.046712875366211
    5. ' low' → logprob: -4.171712875366211
    6. 'for' → logprob: -4.421712875366211
    7. 'low' → logprob: -4.546712875366211
    8. 'lo' → logprob: -4.921712875366211
    9. ' i' → logprob: -5.046712875366211
    10. ' l' → logprob: -5.046712875366211

Token 51: ' result' (ID: 1534)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.24233806133270264
    2. 'lo' → logprob: -2.867338180541992
    3. 'low' → logprob: -3.242338180541992
    4. ' lo' → logprob: -3.492338180541992
    5. 'left' → logprob: -3.617338180541992
    6. 'res' → logprob: -4.117338180541992
    7. ' l' → logprob: -4.367338180541992
    8. '   ' → logprob: -4.992338180541992
    9. 'for' → logprob: -5.242338180541992
    10. ' res' → logprob: -5.367338180541992

Token 52: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014217334799468517
    2. '=' → logprob: -4.264217376708984
    3. ' ' → logprob: -10.389217376708984
    4. ',' → logprob: -10.889217376708984
    5. '   ' → logprob: -13.514217376708984
    6. ' ,' → logprob: -14.514217376708984
    7. '=int' → logprob: -14.639217376708984
    8. '  ' → logprob: -15.264217376708984
    9. 'def' → logprob: -15.389217376708984
    10. ':' → logprob: -15.639217376708984

Token 53: ' []
' (ID: 8911)
  Prédit: '-INF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-INF' → logprob: -0.24488072097301483
    2. '-' → logprob: -2.8698806762695312
    3. 'INF' → logprob: -2.8698806762695312
    4. ' -' → logprob: -2.9948806762695312
    5. '0' → logprob: -3.7448806762695312
    6. '-A' → logprob: -4.619880676269531
    7. ' INF' → logprob: -4.869880676269531
    8. '-N' → logprob: -5.244880676269531
    9. ' ' → logprob: -6.119880676269531
    10. 'y' → logprob: -6.744880676269531

Token 54: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03739839047193527
    2. ' for' → logprob: -3.412398338317871
    3. 'for' → logprob: -6.662398338317871
    4. ' i' → logprob: -7.162398338317871
    5. '    
' → logprob: -8.537398338317871
    6. ',' → logprob: -8.662398338317871
    7. ' current' → logprob: -8.787398338317871
    8. 'i' → logprob: -9.037398338317871
    9. 'idx' → logprob: -9.037398338317871
    10. ' last' → logprob: -9.162398338317871

Token 55: ' l' (ID: 305)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8502278327941895
    2. ' for' → logprob: -2.1002278327941895
    3. 'x' → logprob: -2.6002278327941895
    4. 'l' (adapté à ' l') → logprob: -2.8502278327941895
    5. 'i' → logprob: -2.9752278327941895
    6. 'pos' → logprob: -3.2252278327941895
    7. 'idx' → logprob: -3.3502278327941895
    8. 'prev' → logprob: -3.6002278327941895
    9. 'stack' → logprob: -3.6002278327941895
    10. 'last' → logprob: -3.7252278327941895

Token 56: ' =' (ID: 314)
  Prédit: 'eft'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eft' → logprob: -0.04403971880674362
    2. ' =' → logprob: -4.294039726257324
    3. '=' → logprob: -4.419039726257324
    4. 'ast' → logprob: -4.544039726257324
    5. 'e' → logprob: -5.794039726257324
    6. 'ow' → logprob: -6.794039726257324
    7. 'ef' → logprob: -7.044039726257324
    8. 'ower' → logprob: -8.169039726257324
    9. 'en' → logprob: -8.419039726257324
    10. '   ' → logprob: -8.419039726257324

Token 57: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.09164272248744965
    2. '-' → logprob: -2.7166426181793213
    3. ' ' → logprob: -4.0916428565979
    4. ' -' → logprob: -5.5916428565979
    5. 'y' → logprob: -7.9666428565979
    6. '[' → logprob: -8.716642379760742
    7. '1' → logprob: -9.091642379760742
    8. '[-' → logprob: -9.841642379760742
    9. '[]' → logprob: -9.966642379760742
    10. '-N' → logprob: -10.091642379760742

Token 58: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.05286688730120659
    2. '-' → logprob: -3.1778669357299805
    3. '-N' → logprob: -5.9278669357299805
    4. '-INF' → logprob: -5.9278669357299805
    5. '-Q' → logprob: -6.9278669357299805
    6. '-B' → logprob: -7.3028669357299805
    7. 'y' → logprob: -7.8028669357299805
    8. '-b' → logprob: -7.8028669357299805
    9. '[]' → logprob: -8.30286693572998
    10. '-A' → logprob: -8.42786693572998

Token 59: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 60: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3315298557281494
    2. 'r' → logprob: -1.4565298557281494
    3. ' for' → logprob: -3.8315298557281494
    4. 'for' → logprob: -4.70652961730957
    5. '<|end|>' → logprob: -4.70652961730957
    6. ' r' → logprob: -5.20652961730957
    7. 'n' → logprob: -6.20652961730957
    8. ' ' → logprob: -7.45652961730957
    9. '
' → logprob: -8.33152961730957
    10. 'u' → logprob: -8.33152961730957

Token 61: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.29160076379776
    2. 'r' → logprob: -1.4166007041931152
    3. ' for' → logprob: -4.666600704193115
    4. '   ' → logprob: -7.291600704193115
    5. 'n' → logprob: -9.791601181030273
    6. 'max' → logprob: -10.041601181030273
    7. 's' → logprob: -10.291601181030273
    8. 'stack' → logprob: -10.291601181030273
    9. ' r' → logprob: -10.666601181030273
    10. '<|end|>' → logprob: -11.041601181030273

Token 62: ' i' (ID: 575)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.18025602400302887
    2. ' r' → logprob: -2.1802561283111572
    3. 'x' → logprob: -3.5552561283111572
    4. 'i' → logprob: -4.055255889892578
    5. ' x' → logprob: -6.055255889892578
    6. ' i' → logprob: -6.305255889892578
    7. 'v' → logprob: -7.680255889892578
    8. 'a' → logprob: -8.430255889892578
    9. ' ' → logprob: -8.555255889892578
    10. '   ' → logprob: -8.680255889892578

Token 63: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0274044182151556
    2. 'in' → logprob: -3.902404308319092
    3. ',' → logprob: -5.027404308319092
    4. '   ' → logprob: -9.52740478515625
    5. ' ' → logprob: -9.65240478515625
    6. '	in' → logprob: -10.15240478515625
    7. ' ,' → logprob: -10.27740478515625
    8. '  ' → logprob: -10.40240478515625
    9. ',in' → logprob: -11.90240478515625
    10. 'range' → logprob: -12.33990478515625

Token 64: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0789351761341095
    2. ' range' → logprob: -2.578935146331787
    3. '   ' → logprob: -10.578935623168945
    4. ' ' → logprob: -11.953935623168945
    5. '  ' → logprob: -12.453935623168945
    6. '	range' → logprob: -12.703935623168945
    7. 'A' → logprob: -12.953935623168945
    8. '(range' → logprob: -13.703935623168945
    9. 'y' → logprob: -14.578935623168945
    10. 'len' → logprob: -14.703935623168945

Token 65: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.2617967426776886
    2. '(' → logprob: -2.136796712875366
    3. '(len' → logprob: -2.386796712875366
    4. '(K' → logprob: -4.011796951293945
    5. '(l' → logprob: -6.886796951293945
    6. '(Q' → logprob: -7.761796951293945
    7. '(y' → logprob: -8.386796951293945
    8. '(n' → logprob: -8.386796951293945
    9. '(i' → logprob: -9.011796951293945
    10. 'N' → logprob: -9.886796951293945

Token 66: '+' (ID: 10)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2821322977542877
    2. '):
' → logprob: -1.5321322679519653
    3. '+' → logprob: -4.032132148742676
    4. '-' → logprob: -4.657132148742676
    5. ' -' → logprob: -6.782132148742676
    6. '   ' → logprob: -7.032132148742676
    7. ' +' → logprob: -8.532132148742676
    8. ')' → logprob: -9.157132148742676
    9. '):
' → logprob: -9.407132148742676
    10. ':' → logprob: -10.907132148742676

Token 67: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00011772842844948173
    2. ' ' → logprob: -9.250117301940918
    3. '   ' → logprob: -11.000117301940918
    4. '2' → logprob: -12.500117301940918
    5. 'K' → logprob: -14.875117301940918
    6. '0' → logprob: -15.250117301940918
    7. ')' → logprob: -16.625118255615234
    8. ' K' → logprob: -16.750118255615234
    9. '-' → logprob: -16.875118255615234
    10. '
' → logprob: -17.000118255615234

Token 68: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04358356073498726
    2. '):
' → logprob: -3.168583631515503
    3. ' ):' → logprob: -8.168583869934082
    4. ')' → logprob: -9.293583869934082
    5. '   ' → logprob: -9.543583869934082
    6. '):
' → logprob: -9.668583869934082
    7. ' ):
' → logprob: -10.793583869934082
    8. ',' → logprob: -10.793583869934082
    9. ':' → logprob: -11.043583869934082
    10. ' ' → logprob: -11.793583869934082

Token 69: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002019643783569336
    2. '<|end|>' → logprob: -6.752019882202148
    3. '   ' → logprob: -8.377019882202148
    4. ',' → logprob: -8.877019882202148
    5. '    ' → logprob: -9.127019882202148
    6. ' ' → logprob: -9.252019882202148
    7. ' if' → logprob: -9.377019882202148
    8. ':' → logprob: -9.502019882202148
    9. '<|end|>' → logprob: -10.627019882202148
    10. '        
' → logprob: -11.002019882202148

Token 70: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06949770450592041
    2. 'if' (adapté à ' if') → logprob: -3.444497585296631
    3. ' if' → logprob: -3.944497585296631
    4. ' while' → logprob: -4.819497585296631
    5. 'while' → logprob: -5.319497585296631
    6. '   ' → logprob: -5.944497585296631
    7. ' ' → logprob: -9.069498062133789
    8. '	while' → logprob: -10.444498062133789
    9. '```' → logprob: -10.444498062133789
    10. '	if' → logprob: -10.694498062133789

Token 71: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.18089629709720612
    2. 'A' → logprob: -1.805896282196045
    3. '   ' → logprob: -7.555896282196045
    4. ' ' → logprob: -8.180896759033203
    5. ' i' → logprob: -9.180896759033203
    6. 'i' → logprob: -9.430896759033203
    7. ' y' → logprob: -9.680896759033203
    8. 'y' → logprob: -10.555896759033203
    9. '	A' → logprob: -11.180896759033203
    10. '  ' → logprob: -11.430896759033203

Token 72: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.466968650580384e-05
    2. '[' → logprob: -9.875054359436035
    3. 'i' → logprob: -13.500054359436035
    4. '[l' → logprob: -14.625054359436035
    5. ' [' → logprob: -15.000054359436035
    6. '[
' → logprob: -15.125054359436035
    7. '[I' → logprob: -15.750054359436035
    8. '```' → logprob: -15.875054359436035
    9. '[j' → logprob: -16.25005531311035
    10. ' ' → logprob: -16.37505531311035

Token 73: ']' (ID: 60)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.8880043625831604
    2. '>' → logprob: -1.6380043029785156
    3. '>=' → logprob: -1.6380043029785156
    4. ' <' → logprob: -2.7630043029785156
    5. ' >' → logprob: -3.1380043029785156
    6. ']' → logprob: -3.5130043029785156
    7. '<' → logprob: -3.6380043029785156
    8. ' ' → logprob: -4.388004302978516
    9. ' <=' → logprob: -4.513004302978516
    10. '<=' → logprob: -5.513004302978516

Token 74: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.6603145003318787
    2. '>=' → logprob: -1.4103145599365234
    3. ' <' → logprob: -2.1603145599365234
    4. '>' → logprob: -3.1603145599365234
    5. ' >=' → logprob: -3.2853145599365234
    6. '<=' → logprob: -3.5353145599365234
    7. ' <=' → logprob: -4.910314559936523
    8. ' >' → logprob: -5.410314559936523
    9. '==' → logprob: -6.410314559936523
    10. ' ' → logprob: -7.285314559936523

Token 75: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.3137032687664032
    2. ' y' → logprob: -1.3137032985687256
    3. '=' → logprob: -7.8137030601501465
    4. '=y' → logprob: -10.938703536987305
    5. ' ' → logprob: -11.813703536987305
    6. 'A' → logprob: -12.563703536987305
    7. '	y' → logprob: -13.063703536987305
    8. ' ' → logprob: -13.813703536987305
    9. ' =' → logprob: -13.813703536987305
    10. '   ' → logprob: -13.938703536987305

Token 76: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.39159175753593445
    2. ':
' → logprob: -1.1415917873382568
    3. '       ' → logprob: -5.641591548919678
    4. ' and' → logprob: -7.516591548919678
    5. '):' → logprob: -8.516592025756836
    6. ' or' → logprob: -9.141592025756836
    7. '):
' → logprob: -9.141592025756836
    8. '   ' → logprob: -9.766592025756836
    9. ':
' → logprob: -10.266592025756836
    10. 'and' → logprob: -10.516592025756836

Token 77: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5841765403747559
    2. '           ' → logprob: -0.8341765403747559
    3. 'result' → logprob: -5.584176540374756
    4. ':' → logprob: -6.209176540374756
    5. '   ' → logprob: -7.334176540374756
    6. 'continue' → logprob: -7.584176540374756
    7. ' continue' → logprob: -8.209177017211914
    8. ' result' → logprob: -8.709177017211914
    9. ':
' → logprob: -8.959177017211914
    10. ',' → logprob: -8.959177017211914

Token 78: ' temp' (ID: 5484)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.21370048820972443
    2. '           ' → logprob: -2.463700532913208
    3. '       ' → logprob: -2.963700532913208
    4. 'l' → logprob: -3.588700532913208
    5. '   ' → logprob: -4.213700294494629
    6. ' result' → logprob: -5.088700294494629
    7. 'if' → logprob: -5.713700294494629
    8. 'continue' → logprob: -6.088700294494629
    9. ' l' → logprob: -7.838700294494629
    10. 'while' → logprob: -8.338700294494629

Token 79: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.054388243705034256
    2. '=' → logprob: -3.1793882846832275
    3. '.append' → logprob: -5.054388046264648
    4. 'result' → logprob: -6.304388046264648
    5. 's' → logprob: -7.179388046264648
    6. '   ' → logprob: -7.554388046264648
    7. '_len' → logprob: -8.054388046264648
    8. '_length' → logprob: -8.054388046264648
    9. '_result' → logprob: -8.804388046264648
    10. 'len' → logprob: -8.804388046264648

Token 80: ' A' (ID: 355)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4922557473182678
    2. 'A' → logprob: -1.117255687713623
    3. '[i' → logprob: -3.617255687713623
    4. 'l' → logprob: -4.492255687713623
    5. '[]' → logprob: -4.867255687713623
    6. '(i' → logprob: -5.867255687713623
    7. '[A' → logprob: -5.992255687713623
    8. 'result' → logprob: -6.242255687713623
    9. 'max' → logprob: -6.242255687713623
    10. '[l' → logprob: -6.742255687713623

Token 81: '[l' (ID: 38286)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.1269831359386444
    2. '[l' → logprob: -2.126983165740967
    3. '[' → logprob: -10.501982688903809
    4. 'i' → logprob: -12.001982688903809
    5. 'l' → logprob: -12.751982688903809
    6. '[s' → logprob: -13.001982688903809
    7. '[temp' → logprob: -13.376982688903809
    8. '[j' → logprob: -13.501982688903809
    9. '[m' → logprob: -13.626982688903809
    10. '	l' → logprob: -13.626982688903809

Token 82: ':i' (ID: 34041)
  Prédit: ':i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':i' → logprob: -0.01313234306871891
    2. ']' → logprob: -4.888132572174072
    3. ':' → logprob: -5.888132572174072
    4. '[i' → logprob: -6.763132572174072
    5. '
' → logprob: -8.013132095336914
    6. '+i' → logprob: -8.013132095336914
    7. 'i' → logprob: -8.888132095336914
    8. '+' → logprob: -9.388132095336914
    9. ']
' → logprob: -9.388132095336914
    10. ':j' → logprob: -9.513132095336914

Token 83: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.31419819593429565
    2. ']' → logprob: -1.3141982555389404
    3. ']
' → logprob: -7.564198017120361
    4. '][' → logprob: -8.68919849395752
    5. ']

' → logprob: -9.81419849395752
    6. '       ' → logprob: -10.18919849395752
    7. '+' → logprob: -10.18919849395752
    8. '           ' → logprob: -10.56419849395752
    9. '[::-' → logprob: -11.18919849395752
    10. '][-' → logprob: -11.18919849395752

Token 84: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2440759241580963
    2. 'result' → logprob: -1.619075894355774
    3. '       ' → logprob: -4.244075775146484
    4. 'if' → logprob: -6.494075775146484
    5. ' if' → logprob: -6.869075775146484
    6. ' result' → logprob: -7.119075775146484
    7. ',result' → logprob: -8.119075775146484
    8. '[::-' → logprob: -8.619075775146484
    9. '
' → logprob: -9.994075775146484
    10. '            
' → logprob: -10.494075775146484

Token 85: ' temp' (ID: 5484)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.3538147509098053
    2. 'if' → logprob: -2.2288148403167725
    3. '           ' → logprob: -2.3538148403167725
    4. 'temp' (adapté à ' temp') → logprob: -2.7288148403167725
    5. ' if' → logprob: -4.353814601898193
    6. ' result' → logprob: -4.978814601898193
    7. 'l' → logprob: -5.353814601898193
    8. 'for' → logprob: -6.478814601898193
    9. '   ' → logprob: -6.603814601898193
    10. ' temp' → logprob: -7.228814601898193

Token 86: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.06616295874118805
    2. '.append' → logprob: -3.3161630630493164
    3. '.reverse' → logprob: -4.191163063049316
    4. '.extend' → logprob: -4.941163063049316
    5. '=' → logprob: -6.066163063049316
    6. '.' → logprob: -6.691163063049316
    7. ' =' → logprob: -7.066163063049316
    8. '_sorted' → logprob: -7.941163063049316
    9. 'sort' → logprob: -8.191163063049316
    10. ' .' → logprob: -9.816163063049316

Token 87: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.3200976252555847
    2. '()' → logprob: -1.3200976848602295
    3. '(reverse' → logprob: -5.44509744644165
    4. 'reverse' → logprob: -6.07009744644165
    5. '()
' → logprob: -8.945097923278809
    6. '           ' → logprob: -10.695097923278809
    7. '();' → logprob: -12.070097923278809
    8. ' reverse' → logprob: -12.195097923278809
    9. '()

' → logprob: -12.445097923278809
    10. ')' → logprob: -12.570097923278809

Token 88: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06655754148960114
    2. 'result' → logprob: -2.9415576457977295
    3. ' result' → logprob: -5.31655740737915
    4. '   ' → logprob: -6.56655740737915
    5. '()' → logprob: -6.94155740737915
    6. ')' → logprob: -7.19155740737915
    7. '       ' → logprob: -7.31655740737915
    8. '
' → logprob: -7.81655740737915
    9. '()
' → logprob: -7.94155740737915
    10. ' if' → logprob: -8.066557884216309

Token 89: ' if' (ID: 538)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.13345946371555328
    2. 'if' (adapté à ' if') → logprob: -2.6334595680236816
    3. 'for' → logprob: -3.8834595680236816
    4. '           ' → logprob: -4.133459568023682
    5. 'while' → logprob: -5.008459568023682
    6. '   ' → logprob: -5.633459568023682
    7. 'l' → logprob: -6.633459568023682
    8. 'k' → logprob: -7.133459568023682
    9. 'temp' → logprob: -7.133459568023682
    10. 'idx' → logprob: -7.133459568023682

Token 90: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.31731748580932617
    2. ' len' → logprob: -1.3173174858093262
    3. 'temp' → logprob: -7.192317485809326
    4. ' K' → logprob: -7.317317485809326
    5. 'i' → logprob: -7.567317485809326
    6. 'K' → logprob: -7.567317485809326
    7. '(len' → logprob: -7.942317485809326
    8. ' temp' → logprob: -8.067317962646484
    9. ' i' → logprob: -8.567317962646484
    10. 'Q' → logprob: -8.692317962646484

Token 91: '(temp' (ID: 19094)
  Prédit: '(temp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(temp' → logprob: -0.0001415618316968903
    2. 'temp' → logprob: -9.125141143798828
    3. '(' → logprob: -10.500141143798828
    4. ' temp' → logprob: -12.625141143798828
    5. '	temp' → logprob: -14.375141143798828
    6. '(result' → logprob: -15.000141143798828
    7. ' (' → logprob: -15.000141143798828
    8. '=temp' → logprob: -15.875141143798828
    9. '[temp' → logprob: -15.875141143798828
    10. '(tmp' → logprob: -16.625141143798828

Token 92: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1347140073776245
    2. ' >=' → logprob: -2.509714126586914
    3. '>=' → logprob: -3.384714126586914
    4. ')>=' → logprob: -4.884714126586914
    5. ' <=' → logprob: -7.134714126586914
    6. '>' → logprob: -7.384714126586914
    7. ' >' → logprob: -7.509714126586914
    8. ' )' → logprob: -8.384714126586914
    9. '<=' → logprob: -8.634714126586914
    10. '==' → logprob: -8.634714126586914

Token 93: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.7145512104034424
    2. '>=' → logprob: -0.7145512104034424
    3. '>' → logprob: -5.214550971984863
    4. ' >' → logprob: -5.339550971984863
    5. ' <=' → logprob: -5.464550971984863
    6. '<=' → logprob: -5.964550971984863
    7. '==' → logprob: -6.339550971984863
    8. ' <' → logprob: -7.214550971984863
    9. ' ==' → logprob: -7.339550971984863
    10. '<' → logprob: -8.464550971984863

Token 94: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.041359443217515945
    2. 'Q' → logprob: -3.9163594245910645
    3. ' K' → logprob: -3.9163594245910645
    4. ' Q' → logprob: -8.041359901428223
    5. '1' → logprob: -8.916359901428223
    6. 'N' → logprob: -9.416359901428223
    7. ' ' → logprob: -9.541359901428223
    8. '(' → logprob: -10.666359901428223
    9. '2' → logprob: -11.291359901428223
    10. ' (' → logprob: -12.166359901428223

Token 95: '-' (ID: 12)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.41023263335227966
    2. ':' → logprob: -1.285232663154602
    3. ':
' → logprob: -2.9102325439453125
    4. 'and' → logprob: -5.9102325439453125
    5. '               ' → logprob: -6.1602325439453125
    6. '           ' → logprob: -7.5352325439453125
    7. ',' → logprob: -11.160232543945312
    8. ':

' → logprob: -11.285232543945312
    9. '):
' → logprob: -11.285232543945312
    10. ':
' → logprob: -11.660232543945312

Token 96: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0037890311796218157
    2. 'Q' → logprob: -5.753788948059082
    3. 'len' → logprob: -8.253788948059082
    4. ' ' → logprob: -8.628788948059082
    5. ' Q' → logprob: -9.378788948059082
    6. '(Q' → logprob: -10.753788948059082
    7. 'q' → logprob: -10.753788948059082
    8. '(' → logprob: -11.878788948059082
    9. '2' → logprob: -12.003788948059082
    10. '0' → logprob: -12.003788948059082

Token 97: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3985024392604828
    2. ':
' → logprob: -1.6485024690628052
    3. ' and' → logprob: -2.0235023498535156
    4. '               ' → logprob: -6.148502349853516
    5. '           ' → logprob: -6.648502349853516
    6. 'and' → logprob: -7.648502349853516
    7. '):
' → logprob: -9.648502349853516
    8. ' :' → logprob: -10.273502349853516
    9. ',' → logprob: -10.648502349853516
    10. ':

' → logprob: -10.648502349853516

Token 98: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00094933359650895
    2. '<|end|>' → logprob: -7.375949382781982
    3. '           ' → logprob: -8.250948905944824
    4. '                
' → logprob: -10.750948905944824
    5. '       ' → logprob: -10.875948905944824
    6. '<|end|>' → logprob: -12.750948905944824
    7. ',' → logprob: -12.875948905944824
    8. '                   ' → logprob: -13.000948905944824
    9. '              ' → logprob: -13.500948905944824
    10. 'result' → logprob: -13.625948905944824

Token 99: ' for' (ID: 395)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.5378922820091248
    2. 'result' → logprob: -1.5378923416137695
    3. '       ' → logprob: -2.6628923416137695
    4. '           ' → logprob: -2.9128923416137695
    5. ' result' → logprob: -3.0378923416137695
    6. '               ' → logprob: -3.7878923416137695
    7. ' for' → logprob: -5.7878923416137695
    8. '   ' → logprob: -6.1628923416137695
    9. 'for' (adapté à ' for') → logprob: -7.0378923416137695
    10. '                       ' → logprob: -8.28789234161377

Token 100: ' x' (ID: 1215)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.5229901671409607
    2. ' j' → logprob: -1.0229902267456055
    3. 'x' → logprob: -3.6479902267456055
    4. ' x' → logprob: -4.5229902267456055
    5. ' val' → logprob: -6.2729902267456055
    6. 'val' → logprob: -6.3979902267456055
    7. 'v' → logprob: -6.3979902267456055
    8. ' v' → logprob: -7.0229902267456055
    9. 'k' → logprob: -7.6479902267456055
    10. 'idx' → logprob: -7.6479902267456055

Token 101: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0028192552272230387
    2. 'in' → logprob: -5.877819061279297
    3. 's' → logprob: -12.002819061279297
    4. ' ' → logprob: -13.377819061279297
    5. '   ' → logprob: -13.752819061279297
    6. '	in' → logprob: -13.752819061279297
    7. ',' → logprob: -14.252819061279297
    8. '_in' → logprob: -14.627819061279297
    9. '    ' → logprob: -14.752819061279297
    10. '  ' → logprob: -15.065319061279297

Token 102: ' temp' (ID: 5484)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.09712159633636475
    2. ' temp' → logprob: -2.4721217155456543
    3. 'range' → logprob: -5.347121715545654
    4. ' range' → logprob: -5.722121715545654
    5. 're' → logprob: -10.222121238708496
    6. '   ' → logprob: -10.972121238708496
    7. 'tmp' → logprob: -11.347121238708496
    8. '	temp' → logprob: -11.472121238708496
    9. ' reversed' → logprob: -11.847121238708496
    10. ' ' → logprob: -11.972121238708496

Token 103: '[:' (ID: 7808)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.49806439876556396
    2. ':
' → logprob: -1.248064398765564
    3. '                   ' → logprob: -3.2480645179748535
    4. '[::-' → logprob: -3.2480645179748535
    5. '[:-' → logprob: -4.2480645179748535
    6. '[:' → logprob: -4.9980645179748535
    7. '                       ' → logprob: -6.1230645179748535
    8. '               ' → logprob: -6.1230645179748535
    9. '[' → logprob: -7.4980645179748535
    10. '[-' → logprob: -7.9980645179748535

Token 104: 'len' (ID: 3303)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.033687423914670944
    2. '-(' → logprob: -3.7836873531341553
    3. ' K' → logprob: -5.533687591552734
    4. '(' → logprob: -5.908687591552734
    5. '-K' → logprob: -6.408687591552734
    6. '-' → logprob: -7.283687591552734
    7. '(K' → logprob: -7.408687591552734
    8. 'Q' → logprob: -8.283687591552734
    9. ' (' → logprob: -9.158687591552734
    10. '   ' → logprob: -9.408687591552734

Token 105: '(temp' (ID: 19094)
  Prédit: '(temp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(temp' → logprob: -0.001978118671104312
    2. 'temp' → logprob: -6.251977920532227
    3. '(' → logprob: -10.751977920532227
    4. '(x' → logprob: -12.001977920532227
    5. '	temp' → logprob: -12.251977920532227
    6. ' temp' → logprob: -12.376977920532227
    7. '(t' → logprob: -13.126977920532227
    8. '[temp' → logprob: -13.126977920532227
    9. '=temp' → logprob: -13.251977920532227
    10. '_temp' → logprob: -13.376977920532227

Token 106: ')-' (ID: 14080)
  Prédit: '-('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-(' → logprob: -0.8475247025489807
    2. ')-(' → logprob: -1.472524642944336
    3. '-' → logprob: -1.597524642944336
    4. ' -' → logprob: -3.097524642944336
    5. ')' → logprob: -3.097524642944336
    6. '   ' → logprob: -3.972524642944336
    7. '-K' → logprob: -4.972524642944336
    8. ']' → logprob: -5.222524642944336
    9. ')-' → logprob: -5.347524642944336
    10. ' -(' → logprob: -5.847524642944336

Token 107: 'K' (ID: 42)
  Prédit: '(K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(K' → logprob: -0.08715155720710754
    2. 'K' → logprob: -2.587151527404785
    3. ' (' → logprob: -5.337151527404785
    4. '(Q' → logprob: -5.962151527404785
    5. '(' → logprob: -7.712151527404785
    6. ' K' → logprob: -8.712151527404785
    7. 'Q' → logprob: -9.337151527404785
    8. '1' → logprob: -10.212151527404785
    9. '   ' → logprob: -10.712151527404785
    10. ' ' → logprob: -10.962151527404785

Token 108: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.04238808527588844
    2. '1' → logprob: -3.2923882007598877
    3. '-' → logprob: -5.792387962341309
    4. ' +' → logprob: -7.542387962341309
    5. ']+' → logprob: -7.917387962341309
    6. '   ' → logprob: -9.167387962341309
    7. '```' → logprob: -9.542387962341309
    8. ']' → logprob: -10.667387962341309
    9. '       ' → logprob: -10.917387962341309
    10. '()+' → logprob: -11.167387962341309

Token 109: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00013285996101330966
    2. '2' → logprob: -9.12513256072998
    3. ' ' → logprob: -10.75013256072998
    4. '   ' → logprob: -14.87513256072998
    5. '+' → logprob: -15.06263256072998
    6. '```' → logprob: -15.25013256072998
    7. '-' → logprob: -15.68763256072998
    8. '0' → logprob: -16.000133514404297
    9. '
' → logprob: -16.437633514404297
    10. '<|end|>' → logprob: -16.687633514404297

Token 110: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.35509365797042847
    2. ']:
' → logprob: -1.2300937175750732
    3. ']' → logprob: -5.480093479156494
    4. '+' → logprob: -6.980093479156494
    5. ']:
' → logprob: -7.105093479156494
    6. ' ]' → logprob: -7.980093479156494
    7. ']+' → logprob: -8.980093955993652
    8. '           ' → logprob: -9.855093955993652
    9. ']:

' → logprob: -10.230093955993652
    10. ':' → logprob: -10.230093955993652

Token 111: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.026786591857671738
    2. ' result' → logprob: -4.901786804199219
    3. '               ' → logprob: -5.026786804199219
    4. 'result' → logprob: -5.276786804199219
    5. '           ' → logprob: -5.901786804199219
    6. '                    
' → logprob: -6.526786804199219
    7. '                       ' → logprob: -6.901786804199219
    8. '       ' → logprob: -7.776786804199219
    9. '   ' → logprob: -7.776786804199219
    10. '                    ' → logprob: -8.651786804199219

Token 112: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -0.06331042945384979
    2. ' result' → logprob: -2.813310384750366
    3. '                       ' → logprob: -7.438310623168945
    4. '       ' → logprob: -7.813310623168945
    5. '                   ' → logprob: -8.438310623168945
    6. '   ' → logprob: -9.938310623168945
    7. '               ' → logprob: -10.313310623168945
    8. 'if' → logprob: -11.563310623168945
    9. '           ' → logprob: -11.688310623168945
    10. '```' → logprob: -11.813310623168945

Token 113: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.4750633239746094
    2. '.' → logprob: -0.9750633239746094
    3. ' .' → logprob: -6.975063323974609
    4. '.extend' → logprob: -10.10006332397461
    5. '.add' → logprob: -12.97506332397461
    6. '.remove' → logprob: -13.22506332397461
    7. '.py' → logprob: -13.35006332397461
    8. '.push' → logprob: -13.97506332397461
    9. '.app' → logprob: -14.35006332397461
    10. '.setdefault' → logprob: -15.10006332397461

Token 114: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.04091966524720192
    2. 'x' → logprob: -3.540919780731201
    3. '(' → logprob: -5.040919780731201
    4. ' x' → logprob: -5.415919780731201
    5. ' (' → logprob: -9.665919303894043
    6. '((' → logprob: -10.415919303894043
    7. '(-' → logprob: -10.415919303894043
    8. '(y' → logprob: -11.290919303894043
    9. '(abs' → logprob: -11.415919303894043
    10. '(
' → logprob: -11.540919303894043

Token 115: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0019528986886143684
    2. ')
' → logprob: -7.001953125
    3. ' )' → logprob: -7.626953125
    4. '                   ' → logprob: -8.251953125
    5. '               ' → logprob: -9.251953125
    6. '           ' → logprob: -9.751953125
    7. '+' → logprob: -10.126953125
    8. '<|end|>' → logprob: -10.751953125
    9. '       ' → logprob: -11.126953125
    10. ',' → logprob: -11.376953125

Token 116: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1736387014389038
    2. '       ' → logprob: -1.9236387014389038
    3. '   ' → logprob: -4.673638820648193
    4. '               ' → logprob: -5.673638820648193
    5. 'return' → logprob: -8.673638343811035
    6. '                   ' → logprob: -9.173638343811035
    7. 'l' → logprob: -10.173638343811035
    8. '<|end|>' → logprob: -10.423638343811035
    9. '```' → logprob: -10.798638343811035
    10. ' l' → logprob: -11.173638343811035

Token 117: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' (adapté à ' l') → logprob: -0.08583203703165054
    2. '           ' → logprob: -3.210832118988037
    3. '       ' → logprob: -3.835832118988037
    4. 'else' → logprob: -4.210832118988037
    5. '   ' → logprob: -5.710832118988037
    6. ' l' → logprob: -6.335832118988037
    7. ' else' → logprob: -8.210831642150879
    8. '               ' → logprob: -9.460831642150879
    9. '	l' → logprob: -11.335831642150879
    10. '```' → logprob: -11.335831642150879

Token 118: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2531139850616455
    2. ' =' → logprob: -1.5031139850616455
    3. ' +=' → logprob: -7.378113746643066
    4. '+=' → logprob: -7.503113746643066
    5. '   ' → logprob: -12.128113746643066
    6. ' ' → logprob: -14.003113746643066
    7. '=i' → logprob: -14.128113746643066
    8. '    ' → logprob: -15.378113746643066
    9. '  ' → logprob: -16.253114700317383
    10. '＝' → logprob: -16.253114700317383

Token 119: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -5.204720582696609e-05
    2. ' i' → logprob: -9.875052452087402
    3. '   ' → logprob: -14.875052452087402
    4. '	i' → logprob: -16.750051498413086
    5. '  ' → logprob: -18.000051498413086
    6. ' ' → logprob: -18.125051498413086
    7. '{i' → logprob: -19.000051498413086
    8. '(i' → logprob: -19.250051498413086
    9. '    ' → logprob: -19.875051498413086
    10. ')i' → logprob: -20.125051498413086

Token 120: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0486072339117527
    2. ' +' → logprob: -3.048607349395752
    3. '+
' → logprob: -11.798606872558594
    4. ' else' → logprob: -12.548606872558594
    5. '   ' → logprob: -13.423606872558594
    6. '<|end|>' → logprob: -13.423606872558594
    7. ' ' → logprob: -14.048606872558594
    8. 'else' → logprob: -14.173606872558594
    9. '+\' → logprob: -14.423606872558594
    10. '<|end|>' → logprob: -14.548606872558594

Token 121: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.250004768371582
    3. '
' → logprob: -18.5000057220459
    4. '   ' → logprob: -18.7500057220459
    5. '```' → logprob: -18.7500057220459
    6. '0' → logprob: -19.1250057220459
    7. '+' → logprob: -20.0000057220459
    8. '           ' → logprob: -20.7500057220459
    9. '       ' → logprob: -20.7500057220459
    10. '2' → logprob: -21.1250057220459

Token 122: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -13.000003814697266
    3. '0' → logprob: -13.500003814697266
    4. '```' → logprob: -17.500003814697266
    5. '
' → logprob: -18.375003814697266
    6. '   ' → logprob: -18.750003814697266
    7. '2' → logprob: -19.062503814697266
    8. '-' → logprob: -19.562503814697266
    9. '１' → logprob: -19.812503814697266
    10. '

' → logprob: -20.625003814697266

Token 123: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0015359314857050776
    2. '<|end|>' → logprob: -7.251535892486572
    3. '       ' → logprob: -7.626535892486572
    4. ' ' → logprob: -8.87653636932373
    5. ')' → logprob: -9.62653636932373
    6. '    
' → logprob: -10.37653636932373
    7. '	return' → logprob: -10.75153636932373
    8. 'return' → logprob: -11.25153636932373
    9. ' return' → logprob: -11.75153636932373
    10. ',' → logprob: -11.75153636932373

Token 124: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0002843384863808751
    2. '       ' → logprob: -9.000284194946289
    3. 'return' → logprob: -9.875284194946289
    4. '<|end|>' → logprob: -10.125284194946289
    5. ')' → logprob: -10.750284194946289
    6. ' ' → logprob: -11.125284194946289
    7. ' return' → logprob: -11.125284194946289
    8. '	return' → logprob: -11.750284194946289
    9. '.' → logprob: -13.125284194946289
    10. ',' → logprob: -13.125284194946289

Token 125: ' result' (ID: 1534)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012839353643357754
    2. ')' → logprob: -4.512839317321777
    3. ' ' → logprob: -7.387839317321777
    4. 'return' → logprob: -8.012839317321777
    5. '<|end|>' → logprob: -8.137839317321777
    6. '       ' → logprob: -8.637839317321777
    7. ' return' → logprob: -9.012839317321777
    8. ']' → logprob: -10.012839317321777
    9. '	return' → logprob: -10.137839317321777
    10. '
' → logprob: -10.387839317321777

Token 126: '.sort' (ID: 19551)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.32980233430862427
    2. 'return' → logprob: -1.7048022747039795
    3. '.' → logprob: -3.4548022747039795
    4. '
' → logprob: -4.204802513122559
    5. '<|end|>' → logprob: -4.204802513122559
    6. '   ' → logprob: -4.704802513122559
    7. '.sort' → logprob: -5.329802513122559
    8. ':return' → logprob: -5.454802513122559
    9. '.return' → logprob: -5.954802513122559
    10. ' return' → logprob: -5.954802513122559

Token 127: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0002622894535306841
    2. '()
' → logprob: -8.250262260437012
    3. '()
' → logprob: -14.250262260437012
    4. '(' → logprob: -16.250263214111328
    5. '()`' → logprob: -16.250263214111328
    6. '()

' → logprob: -16.625263214111328
    7. '()\' → logprob: -16.750263214111328
    8. '();' → logprob: -17.875263214111328
    9. '()"' → logprob: -18.250263214111328
    10. ' ()' → logprob: -19.250263214111328

Token 128: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00519320135936141
    2. 'return' → logprob: -6.63019323348999
    3. ' return' → logprob: -6.75519323348999
    4. '[' → logprob: -6.88019323348999
    5. '```' → logprob: -7.13019323348999
    6. '    
' → logprob: -8.380192756652832
    7. '       ' → logprob: -9.130192756652832
    8. ' 
' → logprob: -9.630192756652832
    9. '
' → logprob: -9.630192756652832
    10. ' ' → logprob: -9.755192756652832

Token 129: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5770951509475708
    2. 'return' → logprob: -0.8270951509475708
    3. ' return' → logprob: -7.077095031738281
    4. '	return' → logprob: -9.327095031738281
    5. 'if' (adapté à ' if') → logprob: -9.577095031738281
    6. '
' → logprob: -10.827095031738281
    7. ')' → logprob: -10.952095031738281
    8. ' ' → logprob: -10.952095031738281
    9. '       ' → logprob: -10.952095031738281
    10. '<|end|>' → logprob: -10.952095031738281

Token 130: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.5064751505851746
    2. ' len' → logprob: -1.5064752101898193
    3. 'result' → logprob: -2.2564752101898193
    4. ' result' → logprob: -3.2564752101898193
    5. ' not' → logprob: -3.6314752101898193
    6. 'not' → logprob: -5.13147497177124
    7. '   ' → logprob: -11.006475448608398
    8. ' ' → logprob: -11.131475448608398
    9. 'Q' → logprob: -11.506475448608398
    10. '(len' → logprob: -11.881475448608398

Token 131: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -2.3676733690081164e-05
    2. 'result' → logprob: -10.75002384185791
    3. '(' → logprob: -13.12502384185791
    4. '(results' → logprob: -17.375022888183594
    5. '(
' → logprob: -17.500022888183594
    6. ' (' → logprob: -17.750022888183594
    7. '(res' → logprob: -17.875022888183594
    8. '=result' → logprob: -18.000022888183594
    9. ' result' → logprob: -18.125022888183594
    10. ',result' → logprob: -18.875022888183594

Token 132: ')' (ID: 8)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.8212317824363708
    2. ' ==' → logprob: -0.9462317824363708
    3. ' <' → logprob: -3.0712318420410156
    4. ')' → logprob: -3.0712318420410156
    5. '>' → logprob: -3.4462318420410156
    6. '<' → logprob: -3.8212318420410156
    7. ' >' → logprob: -4.696231842041016
    8. '>=' → logprob: -5.071231842041016
    9. ' >=' → logprob: -5.321231842041016
    10. '<=' → logprob: -6.321231842041016

Token 133: ' >=' (ID: 5064)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.4171609878540039
    2. '<' → logprob: -1.792160987854004
    3. ' ==' → logprob: -2.417160987854004
    4. ' <' → logprob: -2.667160987854004
    5. '>' → logprob: -5.167160987854004
    6. '>=' → logprob: -5.417160987854004
    7. '<K' → logprob: -6.167160987854004
    8. '<=' → logprob: -6.917160987854004
    9. ' >' → logprob: -7.167160987854004
    10. ' >=' → logprob: -7.292160987854004

Token 134: ' Q' (ID: 1486)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.03479756787419319
    2. 'K' → logprob: -3.7847976684570312
    3. '1' → logprob: -4.784797668457031
    4. ' Q' → logprob: -6.409797668457031
    5. 'len' → logprob: -7.284797668457031
    6. 'N' → logprob: -7.659797668457031
    7. '2' → logprob: -9.409797668457031
    8. ' K' → logprob: -9.534797668457031
    9. '(' → logprob: -9.909797668457031
    10. ' ' → logprob: -10.534797668457031

Token 135: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6829983592033386
    2. ' and' → logprob: -1.0579984188079834
    3. ':
' → logprob: -2.0579984188079834
    4. 'and' → logprob: -4.057998180389404
    5. '[' → logprob: -6.432998180389404
    6. '   ' → logprob: -8.182998657226562
    7. ':return' → logprob: -8.182998657226562
    8. '):
' → logprob: -9.057998657226562
    9. '-' → logprob: -9.182998657226562
    10. '):' → logprob: -9.557998657226562

Token 136: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007653831038624048
    2. ':' → logprob: -5.007653713226318
    3. ':
' → logprob: -7.382653713226318
    4. ' return' → logprob: -8.507654190063477
    5. '   ' → logprob: -10.007654190063477
    6. ':return' → logprob: -10.507654190063477
    7. '
' → logprob: -11.632654190063477
    8. 'return' → logprob: -12.007654190063477
    9. '):
' → logprob: -12.382654190063477
    10. '           ' → logprob: -12.632654190063477

Token 137: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6556210517883301
    2. ' return' → logprob: -0.9056210517883301
    3. '       ' → logprob: -3.03062105178833
    4. ' print' → logprob: -4.40562105178833
    5. 'return' (adapté à ' return') → logprob: -4.53062105178833
    6. 'print' → logprob: -5.40562105178833
    7. '
' → logprob: -7.40562105178833
    8. '	return' → logprob: -10.030620574951172
    9. '    ' → logprob: -10.155620574951172
    10. '```' → logprob: -10.155620574951172

Token 138: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.054954275488853455
    2. ' result' → logprob: -2.9299542903900146
    3. 'str' → logprob: -10.054954528808594
    4. '"' → logprob: -11.304954528808594
    5. ' str' → logprob: -11.929954528808594
    6. ''' → logprob: -12.804954528808594
    7. ' f' → logprob: -13.054954528808594
    8. ' ' → logprob: -13.179954528808594
    9. '(result' → logprob: -13.554954528808594
    10. 'f' → logprob: -14.179954528808594

Token 139: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.226628895296017e-06
    2. ' [' → logprob: -12.750007629394531
    3. '[-' → logprob: -12.875007629394531
    4. '   ' → logprob: -14.375007629394531
    5. '[q' → logprob: -15.125007629394531
    6. '```' → logprob: -15.125007629394531
    7. '[
' → logprob: -15.250007629394531
    8. '       ' → logprob: -16.87500762939453
    9. '[K' → logprob: -17.25000762939453
    10. '[:' → logprob: -17.25000762939453

Token 140: 'Q' (ID: 48)
  Prédit: 'Q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -7.541112427134067e-05
    2. '-Q' → logprob: -10.125075340270996
    3. '-' → logprob: -10.625075340270996
    4. ' Q' → logprob: -11.500075340270996
    5. '
' → logprob: -15.125075340270996
    6. '   ' → logprob: -15.750075340270996
    7. 'len' → logprob: -16.125076293945312
    8. '	Q' → logprob: -16.125076293945312
    9. '```' → logprob: -16.125076293945312
    10. '[' → logprob: -16.250076293945312

Token 141: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -7.505351095460355e-05
    2. ' -' → logprob: -9.625075340270996
    3. ']-' → logprob: -12.750075340270996
    4. '[' → logprob: -12.750075340270996
    5. 'Q' → logprob: -13.875075340270996
    6. '[-' → logprob: -13.875075340270996
    7. ']' → logprob: -14.625075340270996
    8. '```' → logprob: -15.125075340270996
    9. '   ' → logprob: -15.750075340270996
    10. '1' → logprob: -16.12507438659668

Token 142: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.080963092041202e-06
    2. ' ' → logprob: -12.250004768371582
    3. 'Q' → logprob: -16.8125057220459
    4. '0' → logprob: -16.8125057220459
    5. '   ' → logprob: -17.3125057220459
    6. '2' → logprob: -17.5000057220459
    7. '```' → logprob: -17.6250057220459
    8. ']' → logprob: -17.8125057220459
    9. 'def' → logprob: -17.8750057220459
    10. ')' → logprob: -18.1250057220459

Token 143: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.27345821261405945
    2. ']' → logprob: -1.6484582424163818
    3. '   ' → logprob: -3.523458242416382
    4. ')
' → logprob: -4.648458003997803
    5. ']
' → logprob: -5.648458003997803
    6. '<|end|>' → logprob: -6.023458003997803
    7. '
' → logprob: -6.898458003997803
    8. '}' → logprob: -8.023458480834961
    9. ' else' → logprob: -8.773458480834961
    10. ')return' → logprob: -9.273458480834961

Token 144: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011959359049797058
    2. ' else' → logprob: -4.886959552764893
    3. 'else' → logprob: -5.511959552764893
    4. ' return' → logprob: -9.636959075927734
    5. 'return' → logprob: -9.636959075927734
    6. '```' → logprob: -9.886959075927734
    7. '	else' → logprob: -10.136959075927734
    8. '
' → logprob: -10.386959075927734
    9. '    
' → logprob: -11.386959075927734
    10. '<|end|>' → logprob: -11.511959075927734

Token 145: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.12370698899030685
    2. '   ' → logprob: -2.8737070560455322
    3. ' else' → logprob: -2.8737070560455322
    4. 'return' → logprob: -5.748706817626953
    5. ' return' → logprob: -8.623706817626953
    6. ' ' → logprob: -12.123706817626953
    7. '	else' → logprob: -12.248706817626953
    8. '```' → logprob: -12.873706817626953
    9. '
' → logprob: -13.998706817626953
    10. '    
' → logprob: -14.373706817626953

Token 146: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6150611042976379
    2. '   ' → logprob: -1.1150610446929932
    3. ':' → logprob: -2.115061044692993
    4. ':
' → logprob: -4.865061283111572
    5. ' return' → logprob: -6.740061283111572
    6. ' None' → logprob: -7.365061283111572
    7. 'return' → logprob: -8.115060806274414
    8. ':return' → logprob: -8.240060806274414
    9. '    ' → logprob: -8.365060806274414
    10. ',' → logprob: -9.115060806274414

Token 147: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2686750590801239
    2. '       ' → logprob: -2.3936750888824463
    3. 'return' → logprob: -2.6436750888824463
    4. ' return' → logprob: -2.7686750888824463
    5. '-' → logprob: -4.768674850463867
    6. ' -' → logprob: -6.518674850463867
    7. ' None' → logprob: -9.143674850463867
    8. ' ' → logprob: -9.518674850463867
    9. '	return' → logprob: -9.768674850463867
    10. '    ' → logprob: -10.393674850463867

Token 148: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.045731402933597565
    2. '-' → logprob: -3.92073130607605
    3. '   ' → logprob: -4.045731544494629
    4. ' return' → logprob: -5.045731544494629
    5. '       ' → logprob: -8.420731544494629
    6. 'INF' → logprob: -8.670731544494629
    7. 'print' → logprob: -8.920731544494629
    8. ' -' → logprob: -9.170731544494629
    9. '
' → logprob: -9.170731544494629
    10. '-INF' → logprob: -10.420731544494629

Token 149: ' INF' (ID: 69196)
  Prédit: '-INF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-INF' → logprob: -0.28575870394706726
    2. '-' → logprob: -1.7857587337493896
    3. 'INF' → logprob: -3.4107587337493896
    4. 'None' → logprob: -3.4107587337493896
    5. ' -' → logprob: -5.2857584953308105
    6. ' INF' → logprob: -5.6607584953308105
    7. '-inf' → logprob: -5.6607584953308105
    8. ' None' → logprob: -6.0357584953308105
    9. '-IN' → logprob: -9.160758972167969
    10. '_INF' → logprob: -9.285758972167969

Token 150: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 151: 'ans' (ID: 616)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.09646420925855637
    2. 'print' → logprob: -3.096464157104492
    3. 'x' → logprob: -3.221464157104492
    4. 'for' → logprob: -6.471464157104492
    5. 'p' → logprob: -6.596464157104492
    6. '#' → logprob: -6.971464157104492
    7. 'v' → logprob: -7.971464157104492
    8. 'K' → logprob: -8.096464157104492
    9. 'answer' → logprob: -8.096464157104492
    10. 'q' → logprob: -8.221464157104492

Token 152: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08025756478309631
    2. '=' → logprob: -2.5802576541900635
    3. '[' → logprob: -7.455257415771484
    4. '_' → logprob: -7.705257415771484
    5. '[]' → logprob: -8.830257415771484
    6. ',' → logprob: -9.580257415771484
    7. ')' → logprob: -10.205257415771484
    8. '[:]' → logprob: -10.455257415771484
    9. ' ' → logprob: -10.955257415771484
    10. ' +=' → logprob: -12.205257415771484

Token 153: ' INF' (ID: 69196)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.4845081865787506
    2. 'INF' → logprob: -1.3595081567764282
    3. '0' → logprob: -2.9845082759857178
    4. '-' → logprob: -3.6095082759857178
    5. ' get' → logprob: -3.9845082759857178
    6. ' INF' → logprob: -4.609508037567139
    7. '[]' → logprob: -4.984508037567139
    8. '-INF' → logprob: -4.984508037567139
    9. ' -' → logprob: -6.234508037567139
    10. 'A' → logprob: -6.234508037567139

Token 154: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.011208505369722843
    2. ' for' → logprob: -4.511208534240723
    3. '
' → logprob: -9.136208534240723
    4. ' 
' → logprob: -11.886208534240723
    5. '```' → logprob: -11.886208534240723
    6. '  
' → logprob: -12.261208534240723
    7. '0' → logprob: -12.511208534240723
    8. 'y' → logprob: -12.886208534240723
    9. '\n' → logprob: -13.136208534240723
    10. '<|end|>' → logprob: -13.136208534240723

Token 155: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0011892797192558646
    2. 'left' → logprob: -7.376189231872559
    3. 'l' → logprob: -8.626189231872559
    4. 'low' → logprob: -8.876189231872559
    5. 'lo' → logprob: -9.251189231872559
    6. 'y' → logprob: -10.126189231872559
    7. 'x' → logprob: -10.751189231872559
    8. 'import' → logprob: -10.876189231872559
    9. 'def' → logprob: -11.376189231872559
    10. ' for' → logprob: -11.751189231872559

Token 156: ' value' (ID: 1432)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.3159160614013672
    2. ' x' → logprob: -2.190916061401367
    3. ' i' → logprob: -2.315916061401367
    4. 'y' → logprob: -3.690916061401367
    5. 'i' → logprob: -4.315916061401367
    6. 'x' → logprob: -4.440916061401367
    7. ' a' → logprob: -5.565916061401367
    8. ' _' → logprob: -6.190916061401367
    9. 'a' → logprob: -6.690916061401367
    10. ' v' → logprob: -7.440916061401367

Token 157: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.043081171810626984
    2. 'in' → logprob: -3.168081283569336
    3. ' ' → logprob: -9.668081283569336
    4. '   ' → logprob: -12.293081283569336
    5. '_in' → logprob: -12.793081283569336
    6. 's' → logprob: -13.043081283569336
    7. '  ' → logprob: -13.168081283569336
    8. '_' → logprob: -13.668081283569336
    9. ',' → logprob: -14.105581283569336
    10. 'import' → logprob: -14.730581283569336

Token 158: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.20807869732379913
    2. ' A' → logprob: -1.7080787420272827
    3. ' range' → logprob: -5.708078861236572
    4. 'range' → logprob: -6.583078861236572
    5. 'set' → logprob: -7.083078861236572
    6. ' set' → logprob: -7.208078861236572
    7. ' ' → logprob: -8.958078384399414
    8. 'sorted' → logprob: -9.333078384399414
    9. ' sorted' → logprob: -9.458078384399414
    10. '   ' → logprob: -10.208078384399414

Token 159: '[:-' (ID: 63556)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0010390023235231638
    2. ':
' → logprob: -6.876039028167725
    3. '[:-' → logprob: -12.626038551330566
    4. '[' → logprob: -13.751038551330566
    5. '[:' → logprob: -14.501038551330566
    6. '[::-' → logprob: -14.876038551330566
    7. ' :' → logprob: -15.126038551330566
    8. '   ' → logprob: -15.751038551330566
    9. '):' → logprob: -16.501039505004883
    10. ':
' → logprob: -16.626039505004883

Token 160: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.558399319241289e-05
    2. 'K' → logprob: -12.125025749206543
    3. '])' → logprob: -12.125025749206543
    4. ' ' → logprob: -12.250025749206543
    5. ']' → logprob: -12.875025749206543
    6. '   ' → logprob: -12.875025749206543
    7. '
' → logprob: -13.625025749206543
    8. '-' → logprob: -13.875025749206543
    9. '```' → logprob: -14.500025749206543
    10. '2' → logprob: -14.875025749206543

Token 161: ']:
' (ID: 22152)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.24598842859268188
    2. ']:' → logprob: -2.370988368988037
    3. ':
' → logprob: -2.495988368988037
    4. ']:
' → logprob: -3.870988368988037
    5. '):
' → logprob: -4.370988368988037
    6. '):' → logprob: -5.370988368988037
    7. '   ' → logprob: -5.620988368988037
    8. ']' → logprob: -8.495988845825195
    9. ' :' → logprob: -9.370988845825195
    10. '():
' → logprob: -9.870988845825195

Token 162: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001979668391868472
    2. ' if' → logprob: -6.626979827880859
    3. '    
' → logprob: -8.37697982788086
    4. 'if' → logprob: -8.75197982788086
    5. ' for' → logprob: -9.62697982788086
    6. ',' → logprob: -10.00197982788086
    7. ' ans' → logprob: -10.12697982788086
    8. '
' → logprob: -10.62697982788086
    9. 'ans' → logprob: -10.87697982788086
    10. 'for' → logprob: -11.00197982788086

Token 163: ' other' (ID: 1273)
  Prédit: ' candidate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' candidate' → logprob: -0.5756762027740479
    2. '   ' → logprob: -2.200676202774048
    3. 'candidate' → logprob: -2.200676202774048
    4. ' current' → logprob: -3.325676202774048
    5. ' cand' → logprob: -3.575676202774048
    6. ' val' → logprob: -3.575676202774048
    7. ' res' → logprob: -3.700676202774048
    8. ' temp' → logprob: -4.200675964355469
    9. 'cand' → logprob: -4.200675964355469
    10. ' ans' → logprob: -4.575675964355469

Token 164: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7524629831314087
    2. ' =' → logprob: -1.3774629831314087
    3. '=' → logprob: -2.127462863922119
    4. '_values' → logprob: -2.752462863922119
    5. '_candidates' → logprob: -3.127462863922119
    6. '_value' → logprob: -4.377462863922119
    7. '_' → logprob: -4.627462863922119
    8. '_ans' → logprob: -5.002462863922119
    9. 'wise' → logprob: -5.252462863922119
    10. '_than' → logprob: -5.627462863922119

Token 165: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.004080897197127342
    2. ' get' → logprob: -5.504080772399902
    3. '   ' → logprob: -13.379080772399902
    4. '(get' → logprob: -14.879080772399902
    5. '
' → logprob: -15.379080772399902
    6. 'INF' → logprob: -16.37908172607422
    7. ' ' → logprob: -16.62908172607422
    8. '	get' → logprob: -16.87908172607422
    9. '=get' → logprob: -16.87908172607422
    10. 'value' → logprob: -16.87908172607422

Token 166: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -5.200166469876422e-06
    2. '(value' → logprob: -12.500004768371582
    3. 'value' → logprob: -13.875004768371582
    4. '_' → logprob: -15.625004768371582
    5. '```' → logprob: -15.625004768371582
    6. '(' → logprob: -16.5000057220459
    7. 'l' → logprob: -17.1250057220459
    8. '_value' → logprob: -17.3750057220459
    9. '(_' → logprob: -17.3750057220459
    10. ' _' → logprob: -19.2500057220459

Token 167: 'ub' (ID: 431)
  Prédit: 'ub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ub' → logprob: -9.162282367469743e-05
    2. '(value' → logprob: -9.750091552734375
    3. 'ob' → logprob: -11.750091552734375
    4. 'u' → logprob: -11.875091552734375
    5. 'value' → logprob: -11.875091552734375
    6. 'b' → logprob: -13.000091552734375
    7. 'уб' → logprob: -13.250091552734375
    8. '```' → logprob: -13.875091552734375
    9. '
' → logprob: -14.000091552734375
    10. 'uf' → logprob: -14.250091552734375

Token 168: '(value' (ID: 6333)
  Prédit: '(value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(value' → logprob: -5.204720582696609e-05
    2. '(' → logprob: -9.875052452087402
    3. ' (' → logprob: -14.875052452087402
    4. '(
' → logprob: -16.625051498413086
    5. 'value' → logprob: -17.500051498413086
    6. ')value' → logprob: -18.000051498413086
    7. '(int' → logprob: -18.250051498413086
    8. '(x' → logprob: -18.250051498413086
    9. '```' → logprob: -18.250051498413086
    10. '((' → logprob: -18.750051498413086

Token 169: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.13113249838352203
    2. ')
' → logprob: -2.1311326026916504
    3. '+' → logprob: -5.88113260269165
    4. ')+' → logprob: -6.63113260269165
    5. ' )' → logprob: -10.631132125854492
    6. ' +' → logprob: -11.006132125854492
    7. ' )
' → logprob: -11.131132125854492
    8. '-' → logprob: -11.256132125854492
    9. ')
' → logprob: -11.756132125854492
    10. '   ' → logprob: -12.756132125854492

Token 170: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0031615570187568665
    2. ' if' → logprob: -6.878161430358887
    3. '
' → logprob: -7.003161430358887
    4. 'if' → logprob: -7.503161430358887
    5. '    
' → logprob: -7.628161430358887
    6. '<|end|>' → logprob: -9.378161430358887
    7. 'ans' → logprob: -10.003161430358887
    8. ')' → logprob: -10.878161430358887
    9. ' ans' → logprob: -12.003161430358887
    10. '       ' → logprob: -12.628161430358887

Token 171: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.03821992501616478
    2. 'ans' → logprob: -3.288219928741455
    3. '   ' → logprob: -8.788219451904297
    4. ' if' → logprob: -11.163219451904297
    5. '
' → logprob: -12.163219451904297
    6. 'import' → logprob: -14.038219451904297
    7. ' ans' → logprob: -14.163219451904297
    8. 'answer' → logprob: -14.413219451904297
    9. 'diff' → logprob: -14.663219451904297
    10. '       ' → logprob: -14.788219451904297

Token 172: ' other' (ID: 1273)
  Prédit: ' other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' other' → logprob: -0.03371324762701988
    2. 'other' → logprob: -3.4087133407592773
    3. ' ans' → logprob: -10.033713340759277
    4. '(other' → logprob: -11.783713340759277
    5. ' oth' → logprob: -12.408713340759277
    6. 'ans' → logprob: -12.533713340759277
    7. ' value' → logprob: -12.658713340759277
    8. ' ' → logprob: -13.033713340759277
    9. 'value' → logprob: -14.033713340759277
    10. ' abs' → logprob: -15.283713340759277

Token 173: ' -' (ID: 533)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.43399113416671753
    2. '<' → logprob: -1.6839911937713623
    3. ' !=' → logprob: -1.9339911937713623
    4. ' is' → logprob: -4.308990955352783
    5. ' <' → logprob: -5.308990955352783
    6. '>' → logprob: -6.933990955352783
    7. '==' → logprob: -7.183990955352783
    8. '!=-' → logprob: -7.433990955352783
    9. 'is' → logprob: -7.808990955352783
    10. '<=' → logprob: -8.933991432189941

Token 174: ' value' (ID: 1432)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.12555965781211853
    2. ' value' → logprob: -2.2505595684051514
    3. '1' → logprob: -4.7505598068237305
    4. 'ans' → logprob: -5.8755598068237305
    5. ' ans' → logprob: -7.7505598068237305
    6. '0' → logprob: -8.62555980682373
    7. ' ' → logprob: -8.87555980682373
    8. 'A' → logprob: -9.25055980682373
    9. 'INF' → logprob: -9.62555980682373
    10. '-' → logprob: -10.00055980682373

Token 175: ' <' (ID: 464)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.4920662045478821
    2. '>' → logprob: -1.2420661449432373
    3. ' <' → logprob: -2.4920661449432373
    4. '<' → logprob: -4.367066383361816
    5. ' >=' → logprob: -5.742066383361816
    6. '>=' → logprob: -7.242066383361816
    7. ' ' → logprob: -7.867066383361816
    8. ' <=' → logprob: -10.617066383361816
    9. ')' → logprob: -10.742066383361816
    10. '   ' → logprob: -10.867066383361816

Token 176: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.00846386794000864
    2. ' ans' → logprob: -5.0084638595581055
    3. '0' → logprob: -6.3834638595581055
    4. ' ' → logprob: -10.758463859558105
    5. '(ans' → logprob: -11.258463859558105
    6. '	ans' → logprob: -11.633463859558105
    7. 'INF' → logprob: -12.008463859558105
    8. 'K' → logprob: -12.508463859558105
    9. 'inf' → logprob: -13.633463859558105
    10. '1' → logprob: -14.383463859558105

Token 177: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2825411856174469
    2. ':
' → logprob: -1.4075411558151245
    3. ' and' → logprob: -6.782541275024414
    4. '   ' → logprob: -9.032541275024414
    5. '       ' → logprob: -10.032541275024414
    6. 'and' → logprob: -11.032541275024414
    7. '):
' → logprob: -11.032541275024414
    8. '=' → logprob: -11.032541275024414
    9. ' :
' → logprob: -11.032541275024414
    10. ':
' → logprob: -11.407541275024414

Token 178: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002314303710591048
    2. ' ans' → logprob: -9.000231742858887
    3. '   ' → logprob: -9.875231742858887
    4. 'ans' → logprob: -10.500231742858887
    5. '=' → logprob: -12.000231742858887
    6. ' and' → logprob: -12.125231742858887
    7. ' =' → logprob: -12.375231742858887
    8. '           ' → logprob: -12.625231742858887
    9. '	ans' → logprob: -12.750231742858887
    10. ',' → logprob: -13.500231742858887

Token 179: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.06495271623134613
    2. ' ans' → logprob: -2.8149526119232178
    3. '       ' → logprob: -5.939952850341797
    4. '   ' → logprob: -8.189952850341797
    5. '	ans' → logprob: -9.939952850341797
    6. '           ' → logprob: -10.939952850341797
    7. '(ans' → logprob: -13.064952850341797
    8. 'answer' → logprob: -13.564952850341797
    9. '_ans' → logprob: -13.689952850341797
    10. '
' → logprob: -14.939952850341797

Token 180: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029751067981123924
    2. '=' → logprob: -3.5297510623931885
    3. '   ' → logprob: -15.52975082397461
    4. '    ' → logprob: -15.65475082397461
    5. ' ' → logprob: -15.90475082397461
    6. ',' → logprob: -18.27975082397461
    7. ' =
' → logprob: -18.40475082397461
    8. ' =)' → logprob: -18.40475082397461
    9. '＝' → logprob: -18.52975082397461
    10. '<|end|>' → logprob: -18.65475082397461

Token 181: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.002476724097505212
    2. ' other' → logprob: -6.002476692199707
    3. '(other' → logprob: -14.627476692199707
    4. '   ' → logprob: -15.127476692199707
    5. ' ' → logprob: -16.252477645874023
    6. '
' → logprob: -16.252477645874023
    7. 'others' → logprob: -17.252477645874023
    8. 'Other' → logprob: -17.752477645874023
    9. 'othe' → logprob: -18.002477645874023
    10. 'oth' → logprob: -18.127477645874023

Token 182: ' -' (ID: 533)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.004876738879829645
    2. '
' → logprob: -5.504876613616943
    3. ' print' → logprob: -7.254876613616943
    4. ' 
' → logprob: -10.629877090454102
    5. '    
' → logprob: -10.879877090454102
    6. '   ' → logprob: -11.379877090454102
    7. '
' → logprob: -11.754877090454102
    8. '<|end|>' → logprob: -11.879877090454102
    9. 'if' → logprob: -12.629877090454102
    10. '-' → logprob: -12.754877090454102

Token 183: ' value' (ID: 1432)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.004078639671206474
    2. ' value' → logprob: -5.5040788650512695
    3. '"value' → logprob: -16.754077911376953
    4. '   ' → logprob: -16.879077911376953
    5. ''value' → logprob: -17.504077911376953
    6. ')value' → logprob: -17.754077911376953
    7. '<|end|>' → logprob: -17.754077911376953
    8. '	value' → logprob: -18.254077911376953
    9. '$value' → logprob: -18.504077911376953
    10. '```' → logprob: -18.504077911376953

Token 184: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0017988269682973623
    2. '
' → logprob: -6.376798629760742
    3. ' print' → logprob: -9.751798629760742
    4. 'if' → logprob: -10.376798629760742
    5. '
' → logprob: -12.376798629760742
    6. ' 
' → logprob: -14.001798629760742
    7. '```' → logprob: -14.251798629760742
    8. '    
' → logprob: -14.501798629760742
    9. '<|end|>' → logprob: -15.626798629760742
    10. ' if' → logprob: -15.751798629760742

Token 185: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.5776860184123507e-06
    2. 'if' → logprob: -13.62500286102295
    3. ' print' → logprob: -14.37500286102295
    4. '
' → logprob: -14.50000286102295
    5. 'return' → logprob: -16.500001907348633
    6. 'pr' → logprob: -17.500001907348633
    7. '#print' → logprob: -18.000001907348633
    8. '0' → logprob: -18.000001907348633
    9. '```' → logprob: -18.125001907348633
    10. '#' → logprob: -18.375001907348633

Token 186: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.00029232146334834397
    2. '(' → logprob: -8.250292778015137
    3. 'ans' → logprob: -10.500292778015137
    4. '()' → logprob: -12.875292778015137
    5. '(abs' → logprob: -14.875292778015137
    6. '(
' → logprob: -14.875292778015137
    7. ' (' → logprob: -16.25029182434082
    8. '(answer' → logprob: -16.62529182434082
    9. '(max' → logprob: -16.87529182434082
    10. '((' → logprob: -18.00029182434082

Token 187: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1472419600977446e-06
    2. '+' → logprob: -15.000000953674316
    3. ' )' → logprob: -15.250000953674316
    4. '))' → logprob: -15.625000953674316
    5. ')`' → logprob: -15.750000953674316
    6. '())' → logprob: -17.000001907348633
    7. ')
' → logprob: -17.000001907348633
    8. '()' → logprob: -17.125001907348633
    9. '+)' → logprob: -18.250001907348633
    10. '`)' → logprob: -18.250001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 185
Tokens correctement prédits (1ère position, stricte): 71
Tokens correctement prédits (1ère position, avec adaptation): 79
Tokens correctement prédits (top 10): 152
Précision stricte (1ère position): 38.38%
Précision adaptée (1ère position): 42.70%
Précision (top 10): 82.16%
================================================================================
