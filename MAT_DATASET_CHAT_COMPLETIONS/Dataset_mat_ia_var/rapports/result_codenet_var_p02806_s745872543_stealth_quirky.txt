================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:31:11
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
N = int(input())
_songz = [[],[]]
for __ in [0]*N:
    a_b = input().split(" ")
    _songz[0] += [a_b[0]]
    _songz[1] += [int(a_b[1])]

x_track = input()
try:
    i = (_songz[0]).index(x_track)
except ValueError:
    i = -1  # just in case

if i+1 < len(_songz[1]):
    print(sum(_songz[1][i+1:]))
else:
    print(0)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'N' (ID: 45)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0003567959647625685
    2. '(N' → logprob: -9.000356674194336
    3. '('' → logprob: -9.500356674194336
    4. ''' → logprob: -9.875356674194336
    5. '`' → logprob: -10.500356674194336
    6. '```' → logprob: -10.500356674194336
    7. '("("' → logprob: -11.375356674194336
    8. '()' → logprob: -11.500356674194336
    9. '(input' → logprob: -11.625356674194336
    10. '(
' → logprob: -12.250356674194336

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5405747294425964
    2. ')' → logprob: -0.9155747294425964
    3. '()' → logprob: -4.290574550628662
    4. '())' → logprob: -5.915574550628662
    5. '(
' → logprob: -8.41557502746582
    6. '```' → logprob: -9.16557502746582
    7. '))' → logprob: -9.29057502746582
    8. '")' → logprob: -9.54057502746582
    9. '(

' → logprob: -9.79057502746582
    10. '`)' → logprob: -9.79057502746582

Token 5: '_song' (ID: 140694)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7973122596740723
    2. 'if' → logprob: -1.7973122596740723
    3. '\n' → logprob: -2.1723122596740723
    4. '`' → logprob: -3.1723122596740723
    5. 'x' → logprob: -3.6723122596740723
    6. '```' → logprob: -3.6723122596740723
    7. 's' → logprob: -3.7973122596740723
    8. 'a' → logprob: -3.9223122596740723
    9. '\' → logprob: -4.047312259674072
    10. ')' → logprob: -4.297312259674072

Token 6: 'z' (ID: 89)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.20357868075370789
    2. '[' → logprob: -2.8285787105560303
    3. '_' → logprob: -3.0785787105560303
    4. '.' → logprob: -3.3285787105560303
    5. ' =' → logprob: -4.703578472137451
    6. '_name' → logprob: -4.828578472137451
    7. ')' → logprob: -5.078578472137451
    8. '=' → logprob: -5.203578472137451
    9. '[]' → logprob: -5.453578472137451
    10. '_list' → logprob: -6.328578472137451

Token 7: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8441842198371887
    2. '.' → logprob: -1.594184160232544
    3. '=' → logprob: -2.094184160232544
    4. '_' → logprob: -2.219184160232544
    5. ' =' → logprob: -2.469184160232544
    6. 's' → logprob: -3.219184160232544
    7. '[]' → logprob: -6.344184398651123
    8. ' ' → logprob: -6.719184398651123
    9. ''s' → logprob: -6.969184398651123
    10. ''' → logprob: -7.344184398651123

Token 8: ' [' (ID: 723)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.3034135699272156
    2. '[]' → logprob: -1.5534136295318604
    3. ' {}' → logprob: -4.178413391113281
    4. 'set' → logprob: -4.303413391113281
    5. '{}' → logprob: -5.053413391113281
    6. ' [' → logprob: -5.053413391113281
    7. 'list' → logprob: -5.678413391113281
    8. '[' → logprob: -6.303413391113281
    9. ' set' → logprob: -6.553413391113281
    10. ' ' → logprob: -7.803413391113281

Token 9: '[],' (ID: 25409)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6694762706756592
    2. '0' → logprob: -0.7944762706756592
    3. '[]' → logprob: -3.794476270675659
    4. 'int' → logprob: -4.794476509094238
    5. '[int' → logprob: -6.669476509094238
    6. 'list' → logprob: -6.669476509094238
    7. '()]' → logprob: -7.169476509094238
    8. ']int' → logprob: -7.294476509094238
    9. 'input' → logprob: -7.794476509094238
    10. '(int' → logprob: -7.919476509094238

Token 10: '[]' (ID: 1951)
  Prédit: '[]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.07309006154537201
    2. ' []' → logprob: -2.698090076446533
    3. '[],' → logprob: -5.948090076446533
    4. ' [],' → logprob: -7.698090076446533
    5. ']' → logprob: -10.073089599609375
    6. '[])' → logprob: -12.073089599609375
    7. '],' → logprob: -12.073089599609375
    8. '[]}' → logprob: -12.198089599609375
    9. '[]

' → logprob: -12.448089599609375
    10. '[]
' → logprob: -12.573089599609375

Token 11: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.005309415981173515
    2. ',' → logprob: -6.130309581756592
    3. ')' → logprob: -6.380309581756592
    4. ')]' → logprob: -6.630309581756592
    5. '])' → logprob: -10.130309104919434
    6. '[' → logprob: -10.380309104919434
    7. '()]' → logprob: -11.880309104919434
    8. '`]' → logprob: -12.130309104919434
    9. ' ]' → logprob: -12.505309104919434
    10. '[]' → logprob: -12.755309104919434

Token 12: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00020795092859771103
    2. '_' → logprob: -9.250207901000977
    3. ' for' → logprob: -9.500207901000977
    4. '[' → logprob: -11.875207901000977
    5. '```' → logprob: -12.375207901000977
    6. '_for' → logprob: -12.750207901000977
    7. ')' → logprob: -12.875207901000977
    8. 'n' → logprob: -13.000207901000977
    9. 'song' → logprob: -13.500207901000977
    10. 'range' → logprob: -13.500207901000977

Token 13: ' __' (ID: 2516)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.18143683671951294
    2. ' _' → logprob: -2.181436777114868
    3. ' ' → logprob: -3.056436777114868
    4. '_' → logprob: -5.306437015533447
    5. 'i' → logprob: -6.931437015533447
    6. ' x' → logprob: -11.056436538696289
    7. '  ' → logprob: -11.556436538696289
    8. ' range' → logprob: -11.681436538696289
    9. ' ‌' → logprob: -12.306436538696289
    10. ' j' → logprob: -12.806436538696289

Token 14: ' in' (ID: 306)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.36656254529953003
    2. '_' → logprob: -1.9915626049041748
    3. 'i' → logprob: -2.866562604904175
    4. ' in' → logprob: -2.991562604904175
    5. ' _' → logprob: -3.366562604904175
    6. ' ' → logprob: -3.616562604904175
    7. 'in' → logprob: -6.366562366485596
    8. '_i' → logprob: -9.491562843322754
    9. ' __' → logprob: -10.616562843322754
    10. '  ' → logprob: -10.866562843322754

Token 15: ' [' (ID: 723)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.5759558081626892
    2. 'range' → logprob: -0.8259558081626892
    3. '_' → logprob: -11.825955390930176
    4. '_range' → logprob: -12.325955390930176
    5. '(range' → logprob: -13.950955390930176
    6. 'rang' → logprob: -14.325955390930176
    7. '[' → logprob: -14.450955390930176
    8. 'ran' → logprob: -14.450955390930176
    9. ' ran' → logprob: -14.450955390930176
    10. '	range' → logprob: -14.700955390930176

Token 16: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6850630044937134
    2. 'range' → logprob: -0.8100630044937134
    3. ' range' → logprob: -3.185062885284424
    4. ' ' → logprob: -5.560062885284424
    5. '1' → logprob: -5.810062885284424
    6. '[' → logprob: -6.810062885284424
    7. '(' → logprob: -7.185062885284424
    8. ''' → logprob: -8.560063362121582
    9. '_' → logprob: -8.560063362121582
    10. '"' → logprob: -9.060063362121582

Token 17: ']*' (ID: 18579)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006610880955122411
    2. ' ,' → logprob: -7.5006608963012695
    3. ']' → logprob: -9.50066089630127
    4. ' ]' → logprob: -11.50066089630127
    5. ' ' → logprob: -11.62566089630127
    6. ']:' → logprob: -11.75066089630127
    7. '1' → logprob: -13.62566089630127
    8. ':' → logprob: -13.75066089630127
    9. ',...' → logprob: -14.37566089630127
    10. ',:' → logprob: -14.62566089630127

Token 18: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.06997790187597275
    2. '2' → logprob: -3.1949779987335205
    3. ' N' → logprob: -3.6949779987335205
    4. ' ' → logprob: -6.569977760314941
    5. '1' → logprob: -9.819977760314941
    6. '3' → logprob: -9.944977760314941
    7. '10' → logprob: -10.194977760314941
    8. '5' → logprob: -10.194977760314941
    9. '_N' → logprob: -10.194977760314941
    10. '4' → logprob: -10.819977760314941

Token 19: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00046320082037709653
    2. ' :' → logprob: -7.750463008880615
    3. ':
' → logprob: -10.625463485717773
    4. ':**' → logprob: -13.000463485717773
    5. ',' → logprob: -13.500463485717773
    6. ',:' → logprob: -13.875463485717773
    7. '):' → logprob: -14.500463485717773
    8. ':def' → logprob: -15.000463485717773
    9. '+:' → logprob: -15.125463485717773
    10. '   ' → logprob: -15.500463485717773

Token 20: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7873075008392334
    2. '   ' → logprob: -1.6623075008392334
    3. '_' → logprob: -2.2873075008392334
    4. ' _' → logprob: -2.2873075008392334
    5. ' 
' → logprob: -3.1623075008392334
    6. '<|end|>' → logprob: -3.6623075008392334
    7. '_s' → logprob: -3.7873075008392334
    8. '_song' → logprob: -4.4123077392578125
    9. '    ' → logprob: -4.5373077392578125
    10. ' s' → logprob: -4.6623077392578125

Token 21: ' a' (ID: 261)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6423050761222839
    2. 'a' (adapté à ' a') → logprob: -1.7673051357269287
    3. '   ' → logprob: -3.2673051357269287
    4. ' s' → logprob: -3.3923051357269287
    5. 'song' → logprob: -3.5173051357269287
    6. '_' → logprob: -3.8923051357269287
    7. 'x' → logprob: -4.01730489730835
    8. ' _' → logprob: -4.26730489730835
    9. '_s' → logprob: -4.39230489730835
    10. ' song' → logprob: -4.39230489730835

Token 22: '_b' (ID: 1535)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7494731545448303
    2. ',b' → logprob: -1.2494730949401855
    3. ' ,' → logprob: -1.6244730949401855
    4. ' =' → logprob: -3.7494730949401855
    5. 'r' → logprob: -5.2494730949401855
    6. ',r' → logprob: -5.3744730949401855
    7. ' ' → logprob: -5.7494730949401855
    8. 'rr' → logprob: -6.6244730949401855
    9. ',_' → logprob: -6.7494730949401855
    10. ',p' → logprob: -6.8744730949401855

Token 23: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5793402791023254
    2. '=' → logprob: -0.8293402791023254
    3. ',' → logprob: -6.20434045791626
    4. 'a' → logprob: -8.079339981079102
    5. '=input' → logprob: -8.079339981079102
    6. 'nd' → logprob: -9.079339981079102
    7. 's' → logprob: -9.079339981079102
    8. '_' → logprob: -9.204339981079102
    9. 'input' → logprob: -9.329339981079102
    10. ' ' → logprob: -9.954339981079102

Token 24: ' input' (ID: 3422)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.33791324496269226
    2. 'input' → logprob: -1.4629132747650146
    3. ' list' → logprob: -3.2129132747650146
    4. ' input' → logprob: -4.2129130363464355
    5. '[' → logprob: -9.962913513183594
    6. '[input' → logprob: -10.087913513183594
    7. 'int' → logprob: -11.087913513183594
    8. 'tuple' → logprob: -11.337913513183594
    9. ' tuple' → logprob: -12.337913513183594
    10. ' [' → logprob: -12.462913513183594

Token 25: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.05509170889854431
    2. '(' → logprob: -3.180091619491577
    3. '().' → logprob: -4.680091857910156
    4. '("' → logprob: -6.680091857910156
    5. '('' → logprob: -7.055091857910156
    6. '("("' → logprob: -7.805091857910156
    7. '("")' → logprob: -9.930091857910156
    8. ' ()' → logprob: -10.180091857910156
    9. '`()' → logprob: -10.930091857910156
    10. ' ' → logprob: -11.180091857910156

Token 26: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00020771251001860946
    2. 'strip' → logprob: -8.500207901000977
    3. 'rstrip' → logprob: -12.750207901000977
    4. 'spl' → logprob: -14.250207901000977
    5. ' split' → logprob: -14.500207901000977
    6. 's' → logprob: -15.750207901000977
    7. 'replace' → logprob: -17.500207901000977
    8. '(split' → logprob: -17.750207901000977
    9. 'plit' → logprob: -17.875207901000977
    10. 'sp' → logprob: -18.500207901000977

Token 27: '("' (ID: 568)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6179592609405518
    2. '(' → logprob: -1.2429592609405518
    3. '('' → logprob: -1.8679592609405518
    4. '("("' → logprob: -4.117959022521973
    5. '("' → logprob: -6.492959022521973
    6. '(`' → logprob: -9.617959022521973
    7. '`()' → logprob: -10.742959022521973
    8. '```' → logprob: -11.117959022521973
    9. '()]' → logprob: -11.617959022521973
    10. '()`' → logprob: -11.867959022521973

Token 28: ' ")
' (ID: 31232)
  Prédit: ' )'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' )' → logprob: -0.43056750297546387
    2. ')' → logprob: -1.0555675029754639
    3. ' ' → logprob: -6.555567741394043
    4. ' ")' → logprob: -8.680567741394043
    5. '')' → logprob: -9.805567741394043
    6. '")' → logprob: -9.805567741394043
    7. '())' → logprob: -9.805567741394043
    8. ' ,' → logprob: -10.430567741394043
    9. '()' → logprob: -10.430567741394043
    10. ' ' → logprob: -11.180567741394043

Token 29: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5837030410766602
    2. 'a' → logprob: -2.08370304107666
    3. '_a' → logprob: -2.20870304107666
    4. ' _' → logprob: -2.58370304107666
    5. '_' → logprob: -3.20870304107666
    6. '[' → logprob: -3.20870304107666
    7. '<|end|>' → logprob: -4.33370304107666
    8. ' ' → logprob: -4.58370304107666
    9. ' a' → logprob: -5.20870304107666
    10. '    
' → logprob: -5.33370304107666

Token 30: ' _' (ID: 1175)
  Prédit: '_song'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_song' → logprob: -0.42318934202194214
    2. '_' (adapté à ' _') → logprob: -1.298189401626587
    3. 'a' → logprob: -3.298189401626587
    4. '_s' → logprob: -4.173189163208008
    5. ' _' → logprob: -5.423189163208008
    6. '   ' → logprob: -5.423189163208008
    7. 'if' → logprob: -5.673189163208008
    8. '[' → logprob: -6.048189163208008
    9. '_a' → logprob: -6.048189163208008
    10. ' if' → logprob: -7.798189163208008

Token 31: 'song' (ID: 63251)
  Prédit: 'song'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'song' → logprob: -0.038078103214502335
    2. '_song' → logprob: -3.2880780696868896
    3. 's' → logprob: -10.538078308105469
    4. 'a' → logprob: -12.163078308105469
    5. 'Song' → logprob: -13.163078308105469
    6. ' song' → logprob: -14.038078308105469
    7. '.song' → logprob: -14.288078308105469
    8. 'b' → logprob: -14.538078308105469
    9. 'songs' → logprob: -15.163078308105469
    10. '-song' → logprob: -15.413078308105469

Token 32: 'z' (ID: 89)
  Prédit: 'z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -1.2352385965641588e-05
    2. '_z' → logprob: -11.500012397766113
    3. 'з' → logprob: -13.625012397766113
    4. 'ز' → logprob: -14.750012397766113
    5. ''z' → logprob: -15.375012397766113
    6. '_' → logprob: -15.625012397766113
    7. 's' → logprob: -16.250011444091797
    8. '	z' → logprob: -16.625011444091797
    9. 'zs' → logprob: -17.875011444091797
    10. ' z' → logprob: -18.500011444091797

Token 33: '[' (ID: 58)
  Prédit: '[a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.3832780122756958
    2. '[' → logprob: -1.2582780122756958
    3. '[int' → logprob: -3.3832778930664062
    4. '[]' → logprob: -9.633277893066406
    5. '[
' → logprob: -10.383277893066406
    6. 'a' → logprob: -10.883277893066406
    7. '[...]' → logprob: -10.883277893066406
    8. '[][' → logprob: -10.883277893066406
    9. '[array' → logprob: -11.133277893066406
    10. '```' → logprob: -11.383277893066406

Token 34: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.20522351562976837
    2. 'int' → logprob: -1.830223560333252
    3. '1' → logprob: -4.080223560333252
    4. ' int' → logprob: -5.580223560333252
    5. 'a' → logprob: -6.080223560333252
    6. '[int' → logprob: -7.080223560333252
    7. ' ' → logprob: -7.205223560333252
    8. '(int' → logprob: -8.330223083496094
    9. '-' → logprob: -9.705223083496094
    10. ']int' → logprob: -9.955223083496094

Token 35: ']' (ID: 60)
  Prédit: '].'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.012758140452206135
    2. '.append' → logprob: -4.512758255004883
    3. ']' → logprob: -6.637758255004883
    4. 'append' → logprob: -9.012758255004883
    5. '][' → logprob: -9.137758255004883
    6. ' ].' → logprob: -9.387758255004883
    7. ').' → logprob: -9.637758255004883
    8. '.' → logprob: -12.387758255004883
    9. '_append' → logprob: -12.762758255004883
    10. '[' → logprob: -13.137758255004883

Token 36: ' +=' (ID: 2757)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.008899364620447159
    2. '.extend' → logprob: -5.258899211883545
    3. '.' → logprob: -5.633899211883545
    4. 'append' → logprob: -10.133899688720703
    5. ' .' → logprob: -10.883899688720703
    6. '.add' → logprob: -12.633899688720703
    7. '].' → logprob: -12.633899688720703
    8. '.app' → logprob: -12.633899688720703
    9. '.a' → logprob: -12.758899688720703
    10. '_append' → logprob: -13.008899688720703

Token 37: ' [' (ID: 723)
  Prédit: '[a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.030433882027864456
    2. '[int' → logprob: -4.155433654785156
    3. ' [' → logprob: -4.780433654785156
    4. 'a' → logprob: -5.780433654785156
    5. '[' → logprob: -6.030433654785156
    6. ' a' → logprob: -8.655433654785156
    7. '[str' → logprob: -10.030433654785156
    8. '[list' → logprob: -10.030433654785156
    9. '[b' → logprob: -10.405433654785156
    10. '["' → logprob: -10.655433654785156

Token 38: 'a' (ID: 64)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.11348680406808853
    2. 'a' → logprob: -2.2384867668151855
    3. ' int' → logprob: -7.6134867668151855
    4. '[int' → logprob: -9.863487243652344
    5. 'str' → logprob: -9.988487243652344
    6. '(int' → logprob: -10.613487243652344
    7. ' a' → logprob: -11.113487243652344
    8. '[a' → logprob: -11.488487243652344
    9. 'float' → logprob: -11.738487243652344
    10. '   ' → logprob: -13.363487243652344

Token 39: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.00017112065688706934
    2. 'int' → logprob: -8.875170707702637
    3. ']' → logprob: -11.750170707702637
    4. 'b' → logprob: -12.000170707702637
    5. 'a' → logprob: -12.375170707702637
    6. '])' → logprob: -12.625170707702637
    7. '=int' → logprob: -13.250170707702637
    8. ']_' → logprob: -13.500170707702637
    9. '_a' → logprob: -13.750170707702637
    10. '_]' → logprob: -13.875170707702637

Token 40: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.002293471246957779
    2. '0' → logprob: -6.127293586730957
    3. '])' → logprob: -10.377293586730957
    4. '][' → logprob: -10.502293586730957
    5. ']' → logprob: -10.627293586730957
    6. ' [' → logprob: -11.127293586730957
    7. ')' → logprob: -12.752293586730957
    8. '[int' → logprob: -13.127293586730957
    9. '   ' → logprob: -13.502293586730957
    10. ' ' → logprob: -13.627293586730957

Token 41: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00021867557370569557
    2. '1' → logprob: -8.625218391418457
    3. ' ' → logprob: -10.250218391418457
    4. '   ' → logprob: -13.937718391418457
    5. '-' → logprob: -14.125218391418457
    6. ']' → logprob: -14.250218391418457
    7. '[' → logprob: -14.750218391418457
    8. '])' → logprob: -15.750218391418457
    9. '۰' → logprob: -16.437719345092773
    10. ')' → logprob: -16.625219345092773

Token 42: ']]
' (ID: 29446)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0035150181502103806
    2. ']]' → logprob: -5.878515243530273
    3. ' ]' → logprob: -8.503515243530273
    4. '],' → logprob: -8.628515243530273
    5. ')]' → logprob: -8.878515243530273
    6. ',' → logprob: -9.753515243530273
    7. ']
' → logprob: -10.503515243530273
    8. '']]' → logprob: -11.128515243530273
    9. '`]' → logprob: -11.253515243530273
    10. '']' → logprob: -11.503515243530273

Token 43: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002457460854202509
    2. '[' → logprob: -7.377457618713379
    3. '    
' → logprob: -7.377457618713379
    4. '_s' → logprob: -8.252457618713379
    5. '<|end|>' → logprob: -8.377457618713379
    6. '  ' → logprob: -8.627457618713379
    7. '_' → logprob: -8.752457618713379
    8. ' _' → logprob: -9.252457618713379
    9. ' ' → logprob: -9.627457618713379
    10. '```' → logprob: -10.002457618713379

Token 44: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' (adapté à ' _') → logprob: -1.3405121564865112
    2. ' ' → logprob: -1.3405121564865112
    3. ' _' → logprob: -1.8405121564865112
    4. '_s' → logprob: -2.715512275695801
    5. '_song' → logprob: -2.715512275695801
    6. '   ' → logprob: -3.340512275695801
    7. '[' → logprob: -3.465512275695801
    8. '  
' → logprob: -3.465512275695801
    9. ' 
' → logprob: -4.215512275695801
    10. ''' → logprob: -4.215512275695801

Token 45: 'song' (ID: 63251)
  Prédit: '_song'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_song' → logprob: -0.03806593269109726
    2. 'song' → logprob: -3.2880659103393555
    3. '_s' → logprob: -11.288065910339355
    4. '[' → logprob: -12.788065910339355
    5. '.song' → logprob: -13.288065910339355
    6. ' song' → logprob: -13.538065910339355
    7. 'Song' → logprob: -13.538065910339355
    8. 's' → logprob: -13.663065910339355
    9. '-song' → logprob: -13.788065910339355
    10. '0' → logprob: -14.288065910339355

Token 46: 'z' (ID: 89)
  Prédit: 'z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -1.8624639324116288e-06
    2. '[' → logprob: -13.250001907348633
    3. '_z' → logprob: -16.875001907348633
    4. 'з' → logprob: -17.125001907348633
    5. '_' → logprob: -18.625001907348633
    6. 'ز' → logprob: -20.125001907348633
    7. ''z' → logprob: -20.625001907348633
    8. '```' → logprob: -20.875001907348633
    9. '0' → logprob: -21.000001907348633
    10. '	z' → logprob: -21.125001907348633

Token 47: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.292907877039397e-06
    2. '1' → logprob: -13.12500286102295
    3. '```' → logprob: -14.12500286102295
    4. '\[' → logprob: -15.75000286102295
    5. ' [' → logprob: -16.000003814697266
    6. '[
' → logprob: -16.375003814697266
    7. '][' → logprob: -16.375003814697266
    8. ')[' → logprob: -17.875003814697266
    9. '   ' → logprob: -18.375003814697266
    10. '`' → logprob: -18.500003814697266

Token 48: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.676981345459353e-06
    2. ' ' → logprob: -12.875005722045898
    3. '0' → logprob: -13.125005722045898
    4. ']' → logprob: -14.750005722045898
    5. '[' → logprob: -15.125005722045898
    6. '-' → logprob: -16.0000057220459
    7. '   ' → logprob: -16.3125057220459
    8. '][' → logprob: -16.6875057220459
    9. '```' → logprob: -17.3750057220459
    10. '  ' → logprob: -17.8750057220459

Token 49: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0032156186643987894
    2. ' ]' → logprob: -6.253215789794922
    3. ']+=' → logprob: -6.753215789794922
    4. ']+' → logprob: -9.253215789794922
    5. '].' → logprob: -11.003215789794922
    6. ')' → logprob: -13.003215789794922
    7. '+' → logprob: -14.003215789794922
    8. '.append' → logprob: -14.253215789794922
    9. '+]' → logprob: -14.378215789794922
    10. '']' → logprob: -14.378215789794922

Token 50: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.3588887155056
    2. ' +=' → logprob: -1.2338887453079224
    3. '.append' → logprob: -4.983888626098633
    4. '+' → logprob: -5.858888626098633
    5. '.' → logprob: -8.233888626098633
    6. '.extend' → logprob: -8.858888626098633
    7. ' .' → logprob: -8.983888626098633
    8. '+='' → logprob: -9.608888626098633
    9. ']+=' → logprob: -10.483888626098633
    10. '+="' → logprob: -10.483888626098633

Token 51: ' [' (ID: 723)
  Prédit: '[a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.6025213599205017
    2. ' [' → logprob: -0.8525213599205017
    3. '[' → logprob: -3.7275214195251465
    4. '[int' → logprob: -6.2275214195251465
    5. '[b' → logprob: -8.977520942687988
    6. '["' → logprob: -10.852520942687988
    7. 'a' → logprob: -11.477520942687988
    8. '['' → logprob: -11.477520942687988
    9. ' a' → logprob: -11.602520942687988
    10. '[f' → logprob: -11.852520942687988

Token 52: 'int' (ID: 491)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0018298695795238018
    2. 'int' → logprob: -6.626830101013184
    3. ' a' → logprob: -7.626830101013184
    4. ' int' → logprob: -11.126830101013184
    5. ' ' → logprob: -14.251830101013184
    6. '1' → logprob: -15.126830101013184
    7. 'b' → logprob: -15.251830101013184
    8. '   ' → logprob: -15.501830101013184
    9. 'float' → logprob: -15.501830101013184
    10. '(int' → logprob: -16.001829147338867

Token 53: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.1002127155661583
    2. '(' → logprob: -2.350212812423706
    3. '(
' → logprob: -12.975213050842285
    4. '((' → logprob: -13.475213050842285
    5. '(

' → logprob: -14.350213050842285
    6. ' (' → logprob: -14.600213050842285
    7. '(b' → logprob: -15.350213050842285
    8. ')' → logprob: -15.350213050842285
    9. '(A' → logprob: -15.600213050842285
    10. 'a' → logprob: -16.22521209716797

Token 54: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -3.128163257315464e-07
    2. '[' → logprob: -16.625
    3. '])' → logprob: -17.5
    4. 'b' → logprob: -17.75
    5. '_a' → logprob: -18.0
    6. ')' → logprob: -18.0
    7. '"_' → logprob: -18.5
    8. '(' → logprob: -18.75
    9. '	b' → logprob: -18.875
    10. ' _' → logprob: -18.875

Token 55: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -9.960946772480384e-05
    2. '1' → logprob: -9.250099182128906
    3. ')' → logprob: -13.750099182128906
    4. '[
' → logprob: -14.375099182128906
    5. '(' → logprob: -14.625099182128906
    6. '```' → logprob: -14.875099182128906
    7. ' [' → logprob: -15.000099182128906
    8. '-' → logprob: -16.000099182128906
    9. ']' → logprob: -16.000099182128906
    10. ' ' → logprob: -16.125099182128906

Token 56: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.625004768371582
    3. '[' → logprob: -14.125004768371582
    4. '])' → logprob: -15.750004768371582
    5. '   ' → logprob: -15.750004768371582
    6. '-' → logprob: -16.3750057220459
    7. '0' → logprob: -16.6250057220459
    8. ']' → logprob: -16.8750057220459
    9. '```' → logprob: -16.8750057220459
    10. ')' → logprob: -17.0625057220459

Token 57: '])' (ID: 4636)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.015917055308818817
    2. '])]' → logprob: -4.26591682434082
    3. ')' → logprob: -7.26591682434082
    4. ']' → logprob: -7.51591682434082
    5. '])' → logprob: -7.89091682434082
    6. ')])' → logprob: -9.01591682434082
    7. '))' → logprob: -12.26591682434082
    8. '")]' → logprob: -13.14091682434082
    9. ' )' → logprob: -13.39091682434082
    10. '')]' → logprob: -13.51591682434082

Token 58: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001436185440979898
    2. ']' → logprob: -7.001436233520508
    3. ')]' → logprob: -8.251436233520508
    4. ')
' → logprob: -9.001436233520508
    5. '])' → logprob: -9.626436233520508
    6. ' )' → logprob: -9.876436233520508
    7. '))' → logprob: -11.876436233520508
    8. '   ' → logprob: -12.126436233520508
    9. ')])' → logprob: -12.501436233520508
    10. '）' → logprob: -12.876436233520508

Token 59: 'x' (ID: 87)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0530635118484497
    2. 'print' → logprob: -1.9280635118484497
    3. 'if' → logprob: -2.55306339263916
    4. 'i' → logprob: -2.67806339263916
    5. 'max' → logprob: -2.67806339263916
    6. '_' → logprob: -2.80306339263916
    7. '#' → logprob: -3.55306339263916
    8. 's' → logprob: -3.80306339263916
    9. 'sum' → logprob: -4.05306339263916
    10. 'p' → logprob: -4.17806339263916

Token 60: '_track' (ID: 65595)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4121871292591095
    2. ' =' → logprob: -1.787187099456787
    3. '=' → logprob: -2.162187099456787
    4. '0' → logprob: -3.662187099456787
    5. '[' → logprob: -4.662187099456787
    6. 's' → logprob: -5.662187099456787
    7. '_=' → logprob: -6.037187099456787
    8. ',' → logprob: -6.287187099456787
    9. '_i' → logprob: -6.537187099456787
    10. 'y' → logprob: -6.912187099456787

Token 61: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.09327664226293564
    2. ' =' → logprob: -2.9682767391204834
    3. '=' → logprob: -4.343276500701904
    4. '_' → logprob: -4.718276500701904
    5. '[' → logprob: -5.593276500701904
    6. '_count' → logprob: -6.093276500701904
    7. '0' → logprob: -6.593276500701904
    8. '_idx' → logprob: -6.593276500701904
    9. '_s' → logprob: -6.843276500701904
    10. '_index' → logprob: -6.968276500701904

Token 62: ' input' (ID: 3422)
  Prédit: '_song'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_song' → logprob: -0.8476195335388184
    2. '0' → logprob: -1.5976195335388184
    3. '[]' → logprob: -2.2226195335388184
    4. ' []' → logprob: -2.5976195335388184
    5. 'max' → logprob: -2.9726195335388184
    6. ' ' → logprob: -3.4726195335388184
    7. 'sum' → logprob: -3.5976195335388184
    8. '[' → logprob: -3.9726195335388184
    9. 'len' → logprob: -4.722619533538818
    10. ' max' → logprob: -4.722619533538818

Token 63: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.07934070378541946
    2. '(' → logprob: -2.579340696334839
    3. '().' → logprob: -8.579340934753418
    4. '```' → logprob: -9.829340934753418
    5. ')' → logprob: -10.079340934753418
    6. '`()' → logprob: -10.579340934753418
    7. '.' → logprob: -11.079340934753418
    8. '()`' → logprob: -11.204340934753418
    9. ' ()' → logprob: -11.204340934753418
    10. '"' → logprob: -11.329340934753418

Token 64: 'try' (ID: 1806)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.9099739193916321
    2. 'i' → logprob: -1.7849738597869873
    3. '\n' → logprob: -2.0349738597869873
    4. 'idx' → logprob: -2.5349738597869873
    5. '
' → logprob: -3.0349738597869873
    6. 'for' → logprob: -3.4099738597869873
    7. 'x' → logprob: -3.5349738597869873
    8. '_' → logprob: -3.7849738597869873
    9. '_i' → logprob: -4.409974098205566
    10. '_
' → logprob: -4.659974098205566

Token 65: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0010713927913457155
    2. ' :' → logprob: -6.876071453094482
    3. ':
' → logprob: -10.251070976257324
    4. '):' → logprob: -14.751070976257324
    5. '：' → logprob: -15.126070976257324
    6. ':return' → logprob: -15.126070976257324
    7. '[' → logprob: -15.251070976257324
    8. ' except' → logprob: -15.376070976257324
    9. '<|end|>' → logprob: -15.501070976257324
    10. ' :
' → logprob: -15.501070976257324

Token 66: '   ' (ID: 271)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9930295944213867
    2. '   ' → logprob: -1.2430295944213867
    3. ' _' → logprob: -1.2430295944213867
    4. '    ' → logprob: -4.618029594421387
    5. ' x' → logprob: -4.743029594421387
    6. ':' → logprob: -4.868029594421387
    7. ' ' → logprob: -5.118029594421387
    8. ' print' → logprob: -5.618029594421387
    9. '_index' → logprob: -5.868029594421387
    10. '[' → logprob: -6.243029594421387

Token 67: ' i' (ID: 575)
  Prédit: ' idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.5786829590797424
    2. ' i' → logprob: -1.3286828994750977
    3. ' _' → logprob: -1.9536828994750977
    4. '_' → logprob: -4.703682899475098
    5. ' index' → logprob: -4.953682899475098
    6. ' ind' → logprob: -5.328682899475098
    7. ' x' → logprob: -6.078682899475098
    8. '_i' → logprob: -6.203682899475098
    9. ' indx' → logprob: -6.328682899475098
    10. 'i' (adapté à ' i') → logprob: -6.703682899475098

Token 68: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.36735233664512634
    2. '_' → logprob: -2.117352247238159
    3. 'nd' → logprob: -2.367352247238159
    4. 'd' → logprob: -3.367352247238159
    5. '=' → logprob: -3.867352247238159
    6. 'x' → logprob: -4.742352485656738
    7. '_nd' → logprob: -5.117352485656738
    8. '=_' → logprob: -5.242352485656738
    9. 's' → logprob: -5.367352485656738
    10. 'dx' → logprob: -5.367352485656738

Token 69: ' (_' (ID: 11350)
  Prédit: '_song'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_song' → logprob: -0.03927485644817352
    2. ' _' → logprob: -3.2892749309539795
    3. '_s' → logprob: -6.7892746925354
    4. '   ' → logprob: -10.539275169372559
    5. ' ' → logprob: -10.914275169372559
    6. '_' → logprob: -11.289275169372559
    7. '_S' → logprob: -11.289275169372559
    8. '_track' → logprob: -12.414275169372559
    9. ' Song' → logprob: -12.664275169372559
    10. '[_' → logprob: -12.914275169372559

Token 70: 'song' (ID: 63251)
  Prédit: '_song'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_song' → logprob: -0.000584249384701252
    2. 'song' → logprob: -7.500584125518799
    3. '_s' → logprob: -10.625584602355957
    4. 'x' → logprob: -13.625584602355957
    5. '-song' → logprob: -13.625584602355957
    6. 'Song' → logprob: -13.750584602355957
    7. '.song' → logprob: -14.125584602355957
    8. ' song' → logprob: -14.625584602355957
    9. ' _' → logprob: -14.750584602355957
    10. ')' → logprob: -15.125584602355957

Token 71: 'z' (ID: 89)
  Prédit: 'z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.00016873658751137555
    2. '_z' → logprob: -9.250168800354004
    3. '[' → logprob: -10.375168800354004
    4. 'x' → logprob: -11.625168800354004
    5. '_song' → logprob: -12.000168800354004
    6. '_' → logprob: -12.625168800354004
    7. '0' → logprob: -12.625168800354004
    8. 's' → logprob: -12.875168800354004
    9. '```' → logprob: -13.625168800354004
    10. 'з' → logprob: -13.750168800354004

Token 72: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -8.41866585687967e-06
    2. ' [' → logprob: -12.750008583068848
    3. ')[' → logprob: -14.000008583068848
    4. ' ' → logprob: -14.125008583068848
    5. '[
' → logprob: -14.500008583068848
    6. '```' → logprob: -14.625008583068848
    7. 'index' → logprob: -14.625008583068848
    8. ')' → logprob: -14.750008583068848
    9. '0' → logprob: -14.875008583068848
    10. '
' → logprob: -15.125008583068848

Token 73: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00032378386822529137
    2. '[' → logprob: -8.125324249267578
    3. ' ' → logprob: -11.000324249267578
    4. '1' → logprob: -12.375324249267578
    5. ')' → logprob: -13.562824249267578
    6. '۰' → logprob: -14.375324249267578
    7. 'x' → logprob: -14.625324249267578
    8. '```' → logprob: -14.750324249267578
    9. '][' → logprob: -15.312824249267578
    10. ' [' → logprob: -15.500324249267578

Token 74: ']).' (ID: 21953)
  Prédit: '.index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.index' → logprob: -0.007667079102247953
    2. ').' → logprob: -4.882667064666748
    3. ' .' → logprob: -10.632667541503906
    4. 'index' → logprob: -11.257667541503906
    5. ' ).' → logprob: -11.632667541503906
    6. '].' → logprob: -12.257667541503906
    7. '#index' → logprob: -12.757667541503906
    8. '.' → logprob: -13.382667541503906
    9. '.find' → logprob: -13.382667541503906
    10. '.Index' → logprob: -13.507667541503906

Token 75: 'index' (ID: 2257)
  Prédit: 'index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.0001342903997283429
    2. '.index' → logprob: -9.000134468078613
    3. 'ind' → logprob: -11.625134468078613
    4. 'inde' → logprob: -13.750134468078613
    5. '_index' → logprob: -14.750134468078613
    6. 'in' → logprob: -15.375134468078613
    7. ' index' → logprob: -16.125133514404297
    8. 'indx' → logprob: -18.125133514404297
    9. 'i' → logprob: -18.875133514404297
    10. 'inx' → logprob: -19.000133514404297

Token 76: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.5760161876678467
    2. '(' → logprob: -0.8260161876678467
    3. '('' → logprob: -10.076016426086426
    4. '("("' → logprob: -11.076016426086426
    5. '(
' → logprob: -11.326016426086426
    6. '((' → logprob: -12.576016426086426
    7. '(

' → logprob: -13.826016426086426
    8. ' (' → logprob: -14.701016426086426
    9. '(xs' → logprob: -14.701016426086426
    10. '(i' → logprob: -14.826016426086426

Token 77: '_track' (ID: 65595)
  Prédit: '_track'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_track' → logprob: -0.10206378996372223
    2. ')' → logprob: -2.9770638942718506
    3. '_' → logprob: -3.4770638942718506
    4. '[' → logprob: -4.9770636558532715
    5. ')_' → logprob: -5.4770636558532715
    6. '_)' → logprob: -6.1020636558532715
    7. '_tracks' → logprob: -7.4770636558532715
    8. '[_' → logprob: -7.8520636558532715
    9. '"_' → logprob: -8.35206413269043
    10. '_TRACK' → logprob: -9.47706413269043

Token 78: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.4987974029500037e-05
    2. ')
' → logprob: -11.250024795532227
    3. ' )' → logprob: -11.625024795532227
    4. ')+' → logprob: -14.250024795532227
    5. 'except' → logprob: -14.375024795532227
    6. '))' → logprob: -15.125024795532227
    7. '   ' → logprob: -15.125024795532227
    8. '}' → logprob: -15.750024795532227
    9. ')

' → logprob: -16.000024795532227
    10. '),' → logprob: -16.125024795532227

Token 79: 'except' (ID: 25035)
  Prédit: 'except'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'except' → logprob: -0.16097772121429443
    2. ' except' → logprob: -2.285977840423584
    3. '   ' → logprob: -3.535977840423584
    4. ')' → logprob: -4.160977840423584
    5. '    
' → logprob: -7.160977840423584
    6. '	except' → logprob: -7.285977840423584
    7. '<|end|>' → logprob: -8.910977363586426
    8. ' ' → logprob: -9.160977363586426
    9. '
' → logprob: -9.410977363586426
    10. '+' → logprob: -9.660977363586426

Token 80: ' Value' (ID: 9963)
  Prédit: ' Value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Value' → logprob: -0.0010968804126605392
    2. 'Value' → logprob: -7.251096725463867
    3. '(Value' → logprob: -8.751096725463867
    4. '	Value' → logprob: -8.751096725463867
    5. ' ' → logprob: -10.626096725463867
    6. '_Value' → logprob: -10.751096725463867
    7. '<Value' → logprob: -12.251096725463867
    8. ':' → logprob: -12.501096725463867
    9. ' Val' → logprob: -12.751096725463867
    10. '  ' → logprob: -12.751096725463867

Token 81: 'Error' (ID: 2255)
  Prédit: 'rror'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rror' → logprob: -0.023674702271819115
    2. 'Error' → logprob: -3.773674726486206
    3. 'ror' → logprob: -7.773674488067627
    4. 'r' → logprob: -11.898674964904785
    5. 'error' → logprob: -13.648674964904785
    6. 'x' → logprob: -15.398674964904785
    7. 'rr' → logprob: -15.898674964904785
    8. 'ROR' → logprob: -16.64867401123047
    9. 'rors' → logprob: -17.52367401123047
    10. 'or' → logprob: -18.14867401123047

Token 82: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -2.1888679839321412e-05
    2. ':
' → logprob: -10.875021934509277
    3. ':**' → logprob: -14.125021934509277
    4. ':return' → logprob: -14.125021934509277
    5. ' :' → logprob: -14.500021934509277
    6. '):' → logprob: -14.500021934509277
    7. ' as' → logprob: -16.50002098083496
    8. '   ' → logprob: -16.75002098083496
    9. ':

' → logprob: -17.00002098083496
    10. ',' → logprob: -17.12502098083496

Token 83: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00765501894056797
    2. '-' → logprob: -5.257655143737793
    3. ' -' → logprob: -7.382655143737793
    4. 'print' → logprob: -7.507655143737793
    5. '0' → logprob: -7.882655143737793
    6. ' print' → logprob: -8.132655143737793
    7. '1' → logprob: -9.132655143737793
    8. ' pass' → logprob: -9.257655143737793
    9. ' continue' → logprob: -10.007655143737793
    10. 'pass' → logprob: -10.132655143737793

Token 84: ' i' (ID: 575)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3595658838748932
    2. '   ' → logprob: -1.6095658540725708
    3. ' print' → logprob: -2.6095659732818604
    4. 'pass' → logprob: -4.609565734863281
    5. ' i' → logprob: -5.359565734863281
    6. 'i' (adapté à ' i') → logprob: -5.359565734863281
    7. ' pass' → logprob: -5.609565734863281
    8. '-' → logprob: -6.484565734863281
    9. ' continue' → logprob: -7.234565734863281
    10. '0' → logprob: -7.359565734863281

Token 85: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20243491232395172
    2. '=' → logprob: -1.7024348974227905
    3. ' +=' → logprob: -7.32743501663208
    4. ' ' → logprob: -8.952434539794922
    5. '+' → logprob: -9.202434539794922
    6. '+=' → logprob: -9.577434539794922
    7. ' ==' → logprob: -11.077434539794922
    8. ' +' → logprob: -11.202434539794922
    9. ' =
' → logprob: -11.327434539794922
    10. ')' → logprob: -12.827434539794922

Token 86: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.022372376173734665
    2. ' -' → logprob: -3.8973724842071533
    3. 'None' → logprob: -6.647372245788574
    4. ' None' → logprob: -8.147372245788574
    5. '0' → logprob: -9.147372245788574
    6. 'len' → logprob: -10.522372245788574
    7. '-l' → logprob: -10.522372245788574
    8. ' ' → logprob: -10.647372245788574
    9. '-s' → logprob: -11.022372245788574
    10. '-none' → logprob: -11.897372245788574

Token 87: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.968312951968983e-06
    2. '2' → logprob: -12.750009536743164
    3. ' ' → logprob: -13.875009536743164
    4. '0' → logprob: -14.062509536743164
    5. '11' → logprob: -14.062509536743164
    6. '10' → logprob: -14.125009536743164
    7. '111' → logprob: -14.187509536743164
    8. '100' → logprob: -14.250009536743164
    9. '999' → logprob: -15.312509536743164
    10. '１' → logprob: -15.312509536743164

Token 88: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.11977903544902802
    2. 'if' → logprob: -2.869779109954834
    3. '<|end|>' → logprob: -2.994779109954834
    4. ' if' → logprob: -6.494779109954834
    5. 'i' → logprob: -6.994779109954834
    6. 'print' → logprob: -7.119779109954834
    7. '

' → logprob: -7.244779109954834
    8. ' 
' → logprob: -7.869779109954834
    9. '\n' → logprob: -8.119778633117676
    10. '```' → logprob: -8.119778633117676

Token 89: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.038474954664707184
    2. '
' → logprob: -3.6634750366210938
    3. 'print' → logprob: -5.663475036621094
    4. 'i' → logprob: -5.913475036621094
    5. '<|end|>' → logprob: -5.913475036621094
    6. ' if' → logprob: -6.413475036621094
    7. '\n' → logprob: -8.288475036621094
    8. '#' → logprob: -8.413475036621094
    9. '```' → logprob: -8.788475036621094
    10. '  
' → logprob: -8.913475036621094

Token 90: ' just' (ID: 1327)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.0501030683517456
    2. ' if' → logprob: -1.5501030683517456
    3. '1' → logprob: -1.8001030683517456
    4. ' ' → logprob: -2.550103187561035
    5. '0' → logprob: -2.675103187561035
    6. 'i' → logprob: -3.550103187561035
    7. 'print' → logprob: -3.550103187561035
    8. 'None' → logprob: -4.425103187561035
    9. ' i' → logprob: -4.675103187561035
    10. 'pass' → logprob: -4.800103187561035

Token 91: ' in' (ID: 306)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pass' → logprob: -0.11313703656196594
    2. 'continue' → logprob: -2.8631370067596436
    3. '0' → logprob: -4.113137245178223
    4. ' continue' → logprob: -4.488137245178223
    5. ' pass' → logprob: -4.488137245178223
    6. 'print' → logprob: -4.988137245178223
    7. '1' → logprob: -6.238137245178223
    8. ' ' → logprob: -6.863137245178223
    9. 'in' → logprob: -8.613137245178223
    10. ' print' → logprob: -9.238137245178223

Token 92: ' case' (ID: 1890)
  Prédit: 'case'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'case' → logprob: -0.0011910604080185294
    2. 'pass' → logprob: -7.126191139221191
    3. ' case' → logprob: -8.001191139221191
    4. 'this' → logprob: -10.126191139221191
    5. '_case' → logprob: -12.376191139221191
    6. '-case' → logprob: -13.251191139221191
    7. 'the' → logprob: -13.376191139221191
    8. '#' → logprob: -14.126191139221191
    9. 'if' → logprob: -14.251191139221191
    10. '```' → logprob: -14.251191139221191

Token 93: '

' (ID: 279)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.03641446679830551
    2. '<|end|>' → logprob: -4.286414623260498
    3. '
' → logprob: -4.411414623260498
    4. 'i' → logprob: -5.786414623260498
    5. ' if' → logprob: -6.036414623260498
    6. 'print' → logprob: -6.036414623260498
    7. '#' → logprob: -7.286414623260498
    8. '```' → logprob: -8.66141414642334
    9. ';if' → logprob: -8.78641414642334
    10. '  
' → logprob: -8.91141414642334

Token 94: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.031202828511595726
    2. 'print' → logprob: -3.531202793121338
    3. 'i' → logprob: -6.656202793121338
    4. 'result' → logprob: -10.531203269958496
    5. 'return' → logprob: -10.531203269958496
    6. '#' → logprob: -10.906203269958496
    7. '_' → logprob: -11.156203269958496
    8. 'for' → logprob: -11.281203269958496
    9. ' if' → logprob: -11.281203269958496
    10. 'output' → logprob: -12.406203269958496

Token 95: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.5761967897415161
    2. 'i' → logprob: -0.8261967897415161
    3. ' ' → logprob: -8.826196670532227
    4. '_i' → logprob: -9.701196670532227
    5. '0' → logprob: -10.326196670532227
    6. ' ' → logprob: -12.326196670532227
    7. '   ' → logprob: -12.451196670532227
    8. '_' → logprob: -12.826196670532227
    9. ' _' → logprob: -12.951196670532227
    10. '  ' → logprob: -13.951196670532227

Token 96: '+' (ID: 10)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.5295006632804871
    2. ' >=' → logprob: -2.029500722885132
    3. '>=' → logprob: -2.029500722885132
    4. ' ==' → logprob: -2.904500722885132
    5. '!=' → logprob: -3.279500722885132
    6. '==' → logprob: -3.904500722885132
    7. '>' → logprob: -4.029500484466553
    8. '!=-' → logprob: -4.529500484466553
    9. ' >' → logprob: -5.654500484466553
    10. ' ' → logprob: -6.404500484466553

Token 97: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.06290562450885773
    2. ' ' → logprob: -2.8129055500030518
    3. '0' → logprob: -7.187905788421631
    4. '>' → logprob: -9.937905311584473
    5. '+' → logprob: -10.312905311584473
    6. '=' → logprob: -11.437905311584473
    7. 'len' → logprob: -11.437905311584473
    8. '-' → logprob: -11.625405311584473
    9. '2' → logprob: -11.687905311584473
    10. '10' → logprob: -12.000405311584473

Token 98: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.09093036502599716
    2. '<' → logprob: -2.715930461883545
    3. '<len' → logprob: -3.965930461883545
    4. ' ==' → logprob: -6.965930461883545
    5. ' ' → logprob: -8.465929985046387
    6. '==' → logprob: -8.465929985046387
    7. ' <=' → logprob: -9.215929985046387
    8. ' >' → logprob: -9.715929985046387
    9. ' >=' → logprob: -9.715929985046387
    10. '>' → logprob: -10.340929985046387

Token 99: ' len' (ID: 4631)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.5803425312042236
    2. 'len' → logprob: -0.8303425312042236
    3. ' len' → logprob: -6.0803422927856445
    4. ' N' → logprob: -6.2053422927856445
    5. ' ' → logprob: -10.330342292785645
    6. 'n' → logprob: -11.330342292785645
    7. '   ' → logprob: -11.455342292785645
    8. '(len' → logprob: -11.705342292785645
    9. '_N' → logprob: -12.330342292785645
    10. '_len' → logprob: -12.830342292785645

Token 100: '(_' (ID: 4963)
  Prédit: '(_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(_' → logprob: -0.001775022828951478
    2. '_song' → logprob: -6.376774787902832
    3. '(' → logprob: -9.626774787902832
    4. '_s' → logprob: -13.251774787902832
    5. '(S' → logprob: -13.626774787902832
    6. '(
' → logprob: -14.001774787902832
    7. ' (_' → logprob: -14.501774787902832
    8. ' _' → logprob: -14.626774787902832
    9. '((_' → logprob: -15.001774787902832
    10. '(s' → logprob: -15.001774787902832

Token 101: 'song' (ID: 63251)
  Prédit: '_song'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_song' → logprob: -0.00011963568249484524
    2. '_s' → logprob: -9.12511920928955
    3. ' _' → logprob: -12.50011920928955
    4. '(_' → logprob: -12.87511920928955
    5. '(song' → logprob: -13.50011920928955
    6. '_track' → logprob: -14.25011920928955
    7. '_' → logprob: -15.12511920928955
    8. 'song' → logprob: -15.25011920928955
    9. 'Song' → logprob: -15.37511920928955
    10. '   ' → logprob: -15.75011920928955

Token 102: 'z' (ID: 89)
  Prédit: 'z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -5.061676347395405e-05
    2. '[' → logprob: -10.00005054473877
    3. '_z' → logprob: -12.62505054473877
    4. 'з' → logprob: -14.75005054473877
    5. '   ' → logprob: -15.37505054473877
    6. '0' → logprob: -15.62505054473877
    7. ' ' → logprob: -15.75005054473877
    8. ')' → logprob: -15.75005054473877
    9. 's' → logprob: -15.87505054473877
    10. '```' → logprob: -16.000051498413086

Token 103: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.612634362885728e-05
    2. ' [' → logprob: -10.625076293945312
    3. '):' → logprob: -10.875076293945312
    4. ')' → logprob: -11.000076293945312
    5. '   ' → logprob: -12.125076293945312
    6. ' ' → logprob: -13.000076293945312
    7. '```' → logprob: -13.125076293945312
    8. '0' → logprob: -13.375076293945312
    9. ')[' → logprob: -14.000076293945312
    10. '):
' → logprob: -14.375076293945312

Token 104: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6935611367225647
    2. '[' → logprob: -0.6935611367225647
    3. ')' → logprob: -8.568561553955078
    4. ' ' → logprob: -9.443561553955078
    5. '   ' → logprob: -10.318561553955078
    6. ' [' → logprob: -10.568561553955078
    7. '```' → logprob: -10.943561553955078
    8. '):
' → logprob: -11.443561553955078
    9. '):' → logprob: -11.568561553955078
    10. ')]' → logprob: -12.068561553955078

Token 105: ']):
' (ID: 51989)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4923246502876282
    2. ')' → logprob: -1.2423245906829834
    3. ']):' → logprob: -2.4923245906829834
    4. '])' → logprob: -4.2423248291015625
    5. ']' → logprob: -6.7423248291015625
    6. '):
' → logprob: -7.8673248291015625
    7. '[' → logprob: -8.492324829101562
    8. ']):
' → logprob: -8.617324829101562
    9. ')):' → logprob: -8.617324829101562
    10. ')]' → logprob: -8.867324829101562

Token 106: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.052270710468292236
    2. ' and' → logprob: -3.3022706508636475
    3. ' print' → logprob: -5.427270889282227
    4. ':' → logprob: -5.677270889282227
    5. ':
' → logprob: -5.802270889282227
    6. 'print' → logprob: -6.177270889282227
    7. 'and' → logprob: -7.177270889282227
    8. '```' → logprob: -8.802270889282227
    9. '
' → logprob: -9.177270889282227
    10. '	print' → logprob: -9.927270889282227

Token 107: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.11502870172262192
    2. ' print' → logprob: -2.3650286197662354
    3. '   ' → logprob: -4.6150288581848145
    4. 'if' → logprob: -5.8650288581848145
    5. '_print' → logprob: -6.9900288581848145
    6. ' if' → logprob: -7.6150288581848145
    7. ' _' → logprob: -9.115028381347656
    8. '_sum' → logprob: -9.740028381347656
    9. '_s' → logprob: -9.990028381347656
    10. '	print' → logprob: -10.115028381347656

Token 108: '(sum' (ID: 45528)
  Prédit: '(_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(_' → logprob: -0.011220182292163372
    2. '(' → logprob: -4.7612199783325195
    3. '_song' → logprob: -6.1362199783325195
    4. '("' → logprob: -8.13621997833252
    5. '('' → logprob: -9.51121997833252
    6. '(f' → logprob: -10.76121997833252
    7. ' _' → logprob: -11.63621997833252
    8. ' (_' → logprob: -11.88621997833252
    9. '((_' → logprob: -12.13621997833252
    10. '(s' → logprob: -12.51121997833252

Token 109: '(_' (ID: 4963)
  Prédit: '(_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(_' → logprob: -0.0006115250871516764
    2. '_song' → logprob: -8.250611305236816
    3. '(' → logprob: -8.625611305236816
    4. '([' → logprob: -8.750611305236816
    5. ' _' → logprob: -13.250611305236816
    6. '(s' → logprob: -13.375611305236816
    7. ')(_' → logprob: -13.375611305236816
    8. '_s' → logprob: -13.625611305236816
    9. '((_' → logprob: -13.625611305236816
    10. ')' → logprob: -13.750611305236816

Token 110: 'song' (ID: 63251)
  Prédit: '_song'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_song' → logprob: -0.000518482003826648
    2. '_s' → logprob: -8.000518798828125
    3. 'song' → logprob: -9.000518798828125
    4. '[' → logprob: -10.250518798828125
    5. '[_' → logprob: -11.500518798828125
    6. '(song' → logprob: -12.125518798828125
    7. '(_' → logprob: -13.000518798828125
    8. '-song' → logprob: -13.875518798828125
    9. '.song' → logprob: -13.875518798828125
    10. 's' → logprob: -14.000518798828125

Token 111: 'z' (ID: 89)
  Prédit: 'z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.001952541060745716
    2. '[' → logprob: -6.251952648162842
    3. '_z' → logprob: -11.501952171325684
    4. '_' → logprob: -12.251952171325684
    5. 'з' → logprob: -12.501952171325684
    6. '[_' → logprob: -13.501952171325684
    7. '(' → logprob: -14.251952171325684
    8. '(_' → logprob: -14.501952171325684
    9. '([' → logprob: -14.876952171325684
    10. ']' → logprob: -15.001952171325684

Token 112: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.2948405128554441e-05
    2. '1' → logprob: -12.50001335144043
    3. '][' → logprob: -12.87501335144043
    4. ' [' → logprob: -13.12501335144043
    5. ')[' → logprob: -13.25001335144043
    6. ')' → logprob: -14.87501335144043
    7. '[
' → logprob: -14.87501335144043
    8. '```' → logprob: -14.87501335144043
    9. '[[' → logprob: -15.37501335144043
    10. 's' → logprob: -15.50001335144043

Token 113: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.012547207996249199
    2. '[' → logprob: -4.387547016143799
    3. ' ' → logprob: -10.887547492980957
    4. ' [' → logprob: -12.262547492980957
    5. '0' → logprob: -12.512547492980957
    6. '   ' → logprob: -13.262547492980957
    7. '```' → logprob: -13.325047492980957
    8. ')' → logprob: -13.575047492980957
    9. '][' → logprob: -13.950047492980957
    10. ']' → logprob: -14.637547492980957

Token 114: '][' (ID: 2696)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0024865958839654922
    2. '][' → logprob: -6.377486705780029
    3. '[:' → logprob: -8.377486228942871
    4. ')[' → logprob: -8.627486228942871
    5. ' [' → logprob: -9.127486228942871
    6. '[' → logprob: -9.252486228942871
    7. '][:' → logprob: -9.877486228942871
    8. '   ' → logprob: -10.377486228942871
    9. ')' → logprob: -10.877486228942871
    10. 'i' → logprob: -11.002486228942871

Token 115: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.017844127491116524
    2. ':i' → logprob: -4.392844200134277
    3. ' i' → logprob: -6.267844200134277
    4. ':' → logprob: -6.642844200134277
    5. '(i' → logprob: -6.892844200134277
    6. '0' → logprob: -7.517844200134277
    7. 'range' → logprob: -8.642844200134277
    8. '[i' → logprob: -9.017844200134277
    9. ' :' → logprob: -9.267844200134277
    10. '1' → logprob: -9.767844200134277

Token 116: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.22637537121772766
    2. ':i' → logprob: -1.9763753414154053
    3. ':' → logprob: -2.8513753414154053
    4. ' +' → logprob: -5.726375579833984
    5. ':]' → logprob: -6.976375579833984
    6. '+i' → logprob: -7.226375579833984
    7. ' :' → logprob: -7.351375579833984
    8. ' ' → logprob: -9.226375579833984
    9. ']+' → logprob: -9.351375579833984
    10. '])' → logprob: -9.476375579833984

Token 117: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00046033994294703007
    2. ' ' → logprob: -8.250460624694824
    3. '2' → logprob: -9.250460624694824
    4. ':' → logprob: -9.375460624694824
    5. '0' → logprob: -12.375460624694824
    6. '   ' → logprob: -12.500460624694824
    7. ' :' → logprob: -12.750460624694824
    8. '  ' → logprob: -13.375460624694824
    9. '3' → logprob: -14.312960624694824
    10. '
' → logprob: -14.375460624694824

Token 118: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008643647655844688
    2. ']))' → logprob: -4.883643627166748
    3. '])' → logprob: -7.633643627166748
    4. ' :' → logprob: -8.133644104003906
    5. ':]' → logprob: -9.008644104003906
    6. ':i' → logprob: -9.758644104003906
    7. '::' → logprob: -11.258644104003906
    8. '   ' → logprob: -11.633644104003906
    9. ':],' → logprob: -11.633644104003906
    10. ']' → logprob: -11.883644104003906

Token 119: ']))
' (ID: 24801)
  Prédit: ']))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']))' → logprob: -0.0037542327772825956
    2. '])' → logprob: -5.628754138946533
    3. ']))
' → logprob: -9.878754615783691
    4. ']' → logprob: -9.878754615783691
    5. '))' → logprob: -10.378754615783691
    6. ']))

' → logprob: -12.878754615783691
    7. ' ]' → logprob: -13.003754615783691
    8. '])))' → logprob: -13.003754615783691
    9. ')))' → logprob: -13.378754615783691
    10. '],' → logprob: -13.378754615783691

Token 120: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.030740264803171158
    2. 'elif' → logprob: -3.905740261077881
    3. ' else' → logprob: -5.155740261077881
    4. '<|end|>' → logprob: -5.655740261077881
    5. '```' → logprob: -7.280740261077881
    6. ')' → logprob: -10.405740737915039
    7. ' elif' → logprob: -10.530740737915039
    8. '<|end|>' → logprob: -10.530740737915039
    9. '[' → logprob: -11.030740737915039
    10. 'e' → logprob: -11.030740737915039

Token 121: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.009532123804092407
    2. '   ' → logprob: -4.8845319747924805
    3. ':
' → logprob: -6.2595319747924805
    4. ' :' → logprob: -12.38453197479248
    5. 'print' → logprob: -13.25953197479248
    6. '    ' → logprob: -13.25953197479248
    7. '0' → logprob: -14.38453197479248
    8. ' print' → logprob: -14.50953197479248
    9. '  ' → logprob: -14.63453197479248
    10. ':
' → logprob: -14.63453197479248

Token 122: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5776241421699524
    2. 'print' → logprob: -0.8276241421699524
    3. '0' → logprob: -6.452624320983887
    4. ' print' → logprob: -9.327624320983887
    5. ' ' → logprob: -12.202624320983887
    6. '	print' → logprob: -12.452624320983887
    7. '```' → logprob: -12.827624320983887
    8. '  ' → logprob: -12.827624320983887
    9. '       ' → logprob: -14.202624320983887
    10. '    
' → logprob: -14.327624320983887

Token 123: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.00016027313540689647
    2. '   ' → logprob: -9.375160217285156
    3. ' print' → logprob: -9.500160217285156
    4. '0' → logprob: -15.500160217285156
    5. '	print' → logprob: -16.375160217285156
    6. 'pass' → logprob: -16.375160217285156
    7. '```' → logprob: -16.375160217285156
    8. 'pr' → logprob: -17.250160217285156
    9. ' ' → logprob: -17.625160217285156
    10. 'prit' → logprob: -18.500160217285156

Token 124: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0017037445213645697
    2. '0' → logprob: -6.87670373916626
    3. '()' → logprob: -7.37670373916626
    4. '(sum' → logprob: -11.376704216003418
    5. '(-' → logprob: -11.626704216003418
    6. '(_' → logprob: -11.751704216003418
    7. '("' → logprob: -12.376704216003418
    8. '(
' → logprob: -12.626704216003418
    9. '('' → logprob: -12.751704216003418
    10. ' (' → logprob: -13.626704216003418

Token 125: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.027225754223764e-05
    2. '(' → logprob: -11.125060081481934
    3. '"' → logprob: -11.250060081481934
    4. 'sum' → logprob: -11.375060081481934
    5. ')' → logprob: -11.500060081481934
    6. '_' → logprob: -12.250060081481934
    7. ' ' → logprob: -12.375060081481934
    8. '-' → logprob: -14.375060081481934
    9. '(sum' → logprob: -15.250060081481934
    10. ''' → logprob: -15.625060081481934

Token 126: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.704273118884885e-07
    2. ')
' → logprob: -14.875000953674316
    3. ' )' → logprob: -15.625000953674316
    4. '))' → logprob: -17.5
    5. '`)' → logprob: -17.625
    6. ')`' → logprob: -18.375
    7. '')' → logprob: -18.625
    8. '）' → logprob: -19.25
    9. '")' → logprob: -19.375
    10. '())' → logprob: -20.125


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 124
Tokens correctement prédits (1ère position, stricte): 55
Tokens correctement prédits (1ère position, avec adaptation): 58
Tokens correctement prédits (top 10): 96
Précision stricte (1ère position): 44.35%
Précision adaptée (1ère position): 46.77%
Précision (top 10): 77.42%
================================================================================
