================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:27:58
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def ceil_division_of_sum():
    """
    Lit deux entiers de l'entrée standard, calcule la somme des deux,
    puis effectue une division entière "plafond" (c'est-à-dire le plus petit entier
    supérieur ou égal au quotient de la somme par le deuxième entier).
    Affiche ensuite ce résultat.

    Exemple :
        Entrée : 7 3
        Affichage : 3
    """
    # Lecture de deux entiers depuis l'entrée standard, séparés par un espace
    a, b = map(int, input().split())
    # Calcul du résultat : (a + b - 1) // b équivaut à un arrondi par excès de a/b
    result = (a + b - 1) // b
    # Affichage du résultat
    print(result)

# Appelle la fonction principale pour exécuter le calcul
ceil_division_of_sum()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' ceil' (ID: 35964)
  → Token d'amorce (pas de prédiction)

Token 2: '_div' (ID: 36926)
  → Token d'amorce (pas de prédiction)

Token 3: 'ision' (ID: 3625)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.016671516001224518
    2. '_' → logprob: -4.891671657562256
    3. 'ision' → logprob: -5.516671657562256
    4. '```' → logprob: -6.016671657562256
    5. '(_:' → logprob: -7.516671657562256
    6. 'ide' → logprob: -7.641671657562256
    7. '(_' → logprob: -7.766671657562256
    8. 'er' → logprob: -7.766671657562256
    9. '_(' → logprob: -8.391671180725098
    10. ' (' → logprob: -9.266671180725098

Token 4: '_of' (ID: 8023)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.027977224439382553
    2. '_' → logprob: -3.652977228164673
    3. '```' → logprob: -6.652976989746094
    4. ':' → logprob: -9.277976989746094
    5. '(_' → logprob: -9.652976989746094
    6. '_:' → logprob: -10.277976989746094
    7. ' (' → logprob: -10.527976989746094
    8. '(_:' → logprob: -11.152976989746094
    9. '('' → logprob: -11.277976989746094
    10. 'def' → logprob: -11.402976989746094

Token 5: '_sum' (ID: 29859)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.42789262533187866
    2. '(' → logprob: -1.4278926849365234
    3. ' ' → logprob: -2.6778926849365234
    4. ' (' → logprob: -4.427892684936523
    5. ' _' → logprob: -4.677892684936523
    6. 'a' → logprob: -5.052892684936523
    7. ' a' → logprob: -5.677892684936523
    8. 'def' → logprob: -6.427892684936523
    9. ' def' → logprob: -6.677892684936523
    10. '```' → logprob: -7.302892684936523

Token 6: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0006479830481112003
    2. '(:' → logprob: -8.12564754486084
    3. '_' → logprob: -9.00064754486084
    4. ':' → logprob: -9.50064754486084
    5. '(a' → logprob: -9.62564754486084
    6. '():' → logprob: -10.62564754486084
    7. '(x' → logprob: -11.00064754486084
    8. '(_' → logprob: -11.87564754486084
    9. '('' → logprob: -12.25064754486084
    10. '(
' → logprob: -12.25064754486084

Token 7: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0326793193817139
    2. '(' → logprob: -1.4076793193817139
    3. '```' → logprob: -1.5326793193817139
    4. '   ' → logprob: -1.9076793193817139
    5. '():' → logprob: -4.157679557800293
    6. '\' → logprob: -5.282679557800293
    7. ''' → logprob: -6.032679557800293
    8. '(:' → logprob: -6.407679557800293
    9. '(
' → logprob: -6.532679557800293
    10. '    
' → logprob: -6.532679557800293

Token 8: ' """
' (ID: 7037)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.7731173038482666
    2. '    ' → logprob: -1.2731173038482666
    3. '   ' → logprob: -2.5231173038482666
    4. '`' → logprob: -2.7731173038482666
    5. 'return' → logprob: -3.3981173038482666
    6. ' return' → logprob: -3.7731173038482666
    7. ' ' → logprob: -4.0231170654296875
    8. '       ' → logprob: -4.2731170654296875
    9. 'a' → logprob: -5.1481170654296875
    10. ''' → logprob: -5.7731170654296875

Token 9: '   ' (ID: 271)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.16977053880691528
    2. ' """' → logprob: -2.9197704792022705
    3. ' Calculate' → logprob: -3.5447704792022705
    4. ' Calculates' → logprob: -3.5447704792022705
    5. 'Calculate' → logprob: -4.04477071762085
    6. '   ' → logprob: -4.16977071762085
    7. ''''' → logprob: -5.16977071762085
    8. ' calculates' → logprob: -6.41977071762085
    9. 'Calcul' → logprob: -7.04477071762085
    10. '""' → logprob: -7.16977071762085

Token 10: ' Lit' (ID: 45595)
  Prédit: 'Calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Calculate' → logprob: -0.6874656677246094
    2. ' Calculates' → logprob: -1.9374656677246094
    3. ' Calculate' → logprob: -2.4374656677246094
    4. '"""' → logprob: -2.4374656677246094
    5. 'Calcul' → logprob: -3.0624656677246094
    6. 'Returns' → logprob: -3.3124656677246094
    7. '   ' → logprob: -3.3124656677246094
    8. 'Return' → logprob: -3.9374656677246094
    9. ' """' → logprob: -4.187465667724609
    10. ' Returns' → logprob: -5.312465667724609

Token 11: ' deux' (ID: 10301)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.2553732097148895
    2. '   ' → logprob: -1.630373239517212
    3. '```' → logprob: -4.380373001098633
    4. 'e' → logprob: -5.130373001098633
    5. '  ' → logprob: -5.630373001098633
    6. 'def' → logprob: -5.880373001098633
    7. '       ' → logprob: -7.255373001098633
    8. ' ' → logprob: -7.380373001098633
    9. 'eral' → logprob: -7.630373001098633
    10. 'ernal' → logprob: -7.630373001098633

Token 12: ' ent' (ID: 1121)
  Prédit: ' nombres'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' nombres' → logprob: -1.2734962701797485
    2. ' lignes' → logprob: -1.7734962701797485
    3. ' ' → logprob: -1.8984962701797485
    4. '   ' → logprob: -2.773496150970459
    5. ' chiffres' → logprob: -3.273496150970459
    6. 'e' → logprob: -3.273496150970459
    7. ' espaces' → logprob: -3.523496150970459
    8. ' nombre' → logprob: -3.898496150970459
    9. '\' → logprob: -4.023496150970459
    10. 'a' → logprob: -4.273496150970459

Token 13: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.05467474088072777
    2. 'i' → logprob: -3.6796746253967285
    3. 'ier' → logprob: -4.3046746253967285
    4. 'ières' → logprob: -4.3046746253967285
    5. '   ' → logprob: -8.304675102233887
    6. 'r' → logprob: -8.554675102233887
    7. '```' → logprob: -8.929675102233887
    8. 'ié' → logprob: -9.304675102233887
    9. 'er' → logprob: -9.554675102233887
    10. 'êtes' → logprob: -9.929675102233887

Token 14: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7390258312225342
    2. ',' → logprob: -1.9890258312225342
    3. 's' → logprob: -2.364025831222534
    4. ' ,' → logprob: -2.614025831222534
    5. ' )' → logprob: -3.489025831222534
    6. 'a' → logprob: -3.739025831222534
    7. ' \' → logprob: -3.989025831222534
    8. ' s' → logprob: -4.364026069641113
    9. '   ' → logprob: -4.364026069641113
    10. '  ' → logprob: -4.489026069641113

Token 15: ' l' (ID: 305)
  Prédit: 'ux'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ux' → logprob: -0.688289999961853
    2. ' l' → logprob: -1.313289999961853
    3. ' input' → logprob: -2.3132901191711426
    4. 'l' → logprob: -2.4382901191711426
    5. ' la' → logprob: -4.438290119171143
    6. 'de' → logprob: -4.938290119171143
    7. ' ' → logprob: -5.313290119171143
    8. ' standard' → logprob: -5.688290119171143
    9. 'input' → logprob: -6.063290119171143
    10. 's' → logprob: -6.063290119171143

Token 16: ''entrée' (ID: 115820)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5950720310211182
    2. 'e' → logprob: -0.8450720310211182
    3. 'n' → logprob: -5.595071792602539
    4. 'ine' → logprob: -5.595071792602539
    5. ''' → logprob: -6.220071792602539
    6. ''''' → logprob: -6.720071792602539
    7. 'input' → logprob: -6.720071792602539
    8. 'es' → logprob: -6.845071792602539
    9. ''\' → logprob: -7.095071792602539
    10. ''entrée' → logprob: -7.095071792602539

Token 17: ' standard' (ID: 7024)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.1301687955856323
    2. ' \' → logprob: -1.6301687955856323
    3. 's' → logprob: -1.7551687955856323
    4. ' ' → logprob: -1.7551687955856323
    5. '\' → logprob: -3.255168914794922
    6. '`' → logprob: -4.005168914794922
    7. ' )' → logprob: -4.380168914794922
    8. '   ' → logprob: -4.755168914794922
    9. ')' → logprob: -4.880168914794922
    10. ''' → logprob: -5.005168914794922

Token 18: ',' (ID: 11)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.008790061809122562
    2. '   ' → logprob: -5.133790016174316
    3. '\' → logprob: -7.258790016174316
    4. ',' → logprob: -7.383790016174316
    5. ''\' → logprob: -7.758790016174316
    6. '"\' → logprob: -8.508790016174316
    7. ' \' → logprob: -8.633790016174316
    8. '    
' → logprob: -8.883790016174316
    9. '\r' → logprob: -8.883790016174316
    10. '    ' → logprob: -9.633790016174316

Token 19: ' calc' (ID: 25691)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3754124045372009
    2. ' ' → logprob: -2.2504124641418457
    3. '    ' → logprob: -2.6254124641418457
    4. '<|end|>' → logprob: -2.6254124641418457
    5. ' et' → logprob: -3.6254124641418457
    6. ' return' → logprob: -4.750412464141846
    7. ' and' → logprob: -5.375412464141846
    8. '<|end|>' → logprob: -5.500412464141846
    9. '  ' → logprob: -6.375412464141846
    10. ' ' → logprob: -6.625412464141846

Token 20: 'ule' (ID: 1601)
  Prédit: 'ule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ule' → logprob: -0.0004564135451801121
    2. 'ulé' → logprob: -8.250456809997559
    3. 'cule' → logprob: -10.000456809997559
    4. '   ' → logprob: -10.125456809997559
    5. 'ul' → logprob: -10.250456809997559
    6. '```' → logprob: -11.000456809997559
    7. '       ' → logprob: -11.500456809997559
    8. 'u' → logprob: -12.250456809997559
    9. 'ú' → logprob: -12.625456809997559
    10. 'ules' → logprob: -12.750456809997559

Token 21: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.7626851201057434
    2. '   ' → logprob: -1.8876850605010986
    3. ' l' → logprob: -2.1376850605010986
    4. 's' → logprob: -2.1376850605010986
    5. ' le' → logprob: -3.1376850605010986
    6. ' et' → logprob: -3.8876850605010986
    7. '    ' → logprob: -4.137685298919678
    8. ' leur' → logprob: -4.262685298919678
    9. ' ' → logprob: -4.512685298919678
    10. 'leur' → logprob: -4.637685298919678

Token 22: ' somme' (ID: 64484)
  Prédit: ' somme'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' somme' → logprob: -0.5517008900642395
    2. '   ' → logprob: -1.5517008304595947
    3. ' ' → logprob: -2.1767008304595947
    4. 's' → logprob: -2.8017008304595947
    5. '    ' → logprob: -4.551701068878174
    6. '  ' → logprob: -4.926701068878174
    7. ' division' → logprob: -5.676701068878174
    8. ' ceil' → logprob: -6.426701068878174
    9. ' espace' → logprob: -6.426701068878174
    10. ' résultat' → logprob: -6.926701068878174

Token 23: ' des' (ID: 731)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03175012394785881
    2. ',' → logprob: -4.406750202178955
    3. ' et' → logprob: -4.656750202178955
    4. '`' → logprob: -6.281750202178955
    5. '    ' → logprob: -6.656750202178955
    6. 'de' → logprob: -7.156750202178955
    7. ' ' → logprob: -7.156750202178955
    8. '    
' → logprob: -7.281750202178955
    9. 'et' → logprob: -7.656750202178955
    10. 'e' → logprob: -7.906750202178955

Token 24: ' deux' (ID: 10301)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.15100328624248505
    2. ' deux' → logprob: -2.026003360748291
    3. ' ' → logprob: -5.151003360748291
    4. '```' → logprob: -7.276003360748291
    5. ' two' → logprob: -7.526003360748291
    6. 'a' → logprob: -7.651003360748291
    7. '   ' → logprob: -9.026002883911133
    8. ' ' → logprob: -9.776002883911133
    9. '2' → logprob: -9.838502883911133
    10. 'd' → logprob: -9.901002883911133

Token 25: ',
' (ID: 412)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\' → logprob: -1.640439510345459
    2. ' \' → logprob: -1.765439510345459
    3. '   ' → logprob: -2.140439510345459
    4. ' ' → logprob: -2.515439510345459
    5. '\n' → logprob: -2.640439510345459
    6. ' ,' → logprob: -2.765439510345459
    7. ',' → logprob: -2.765439510345459
    8. 's' → logprob: -3.515439510345459
    9. ' )' → logprob: -3.515439510345459
    10. ' et' → logprob: -4.015439510345459

Token 26: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7111375331878662
    2. ' puis' → logprob: -0.7111375331878662
    3. ' et' → logprob: -4.461137771606445
    4. '    ' → logprob: -5.836137771606445
    5. ' retourne' → logprob: -6.961137771606445
    6. 'p' → logprob: -7.461137771606445
    7. ' les' → logprob: -7.711137771606445
    8. ' calc' → logprob: -8.461137771606445
    9. ' div' → logprob: -8.711137771606445
    10. 'et' → logprob: -8.711137771606445

Token 27: ' puis' (ID: 18766)
  Prédit: ' puis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' puis' → logprob: -0.7464629411697388
    2. ' et' → logprob: -0.9964629411697388
    3. '   ' → logprob: -2.371462821960449
    4. '\n' → logprob: -3.746462821960449
    5. '\' → logprob: -4.371462821960449
    6. ' \' → logprob: -5.246462821960449
    7. 'et' → logprob: -5.246462821960449
    8. '    ' → logprob: -5.871462821960449
    9. ',' → logprob: -5.996462821960449
    10. '```' → logprob: -6.246462821960449

Token 28: ' effect' (ID: 3159)
  Prédit: ' retourne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' retourne' → logprob: -0.7094705104827881
    2. ' ren' → logprob: -1.459470510482788
    3. 'ren' → logprob: -1.959470510482788
    4. 'effect' → logprob: -3.459470510482788
    5. ' affiche' → logprob: -3.709470510482788
    6. '   ' → logprob: -3.834470510482788
    7. 'ret' → logprob: -3.959470510482788
    8. ' effect' → logprob: -4.084470748901367
    9. 'return' → logprob: -5.334470748901367
    10. 'aff' → logprob: -5.459470748901367

Token 29: 'ue' (ID: 466)
  Prédit: 'ue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ue' → logprob: -0.00016504127415828407
    2. 'u' → logprob: -8.750164985656738
    3. 'uer' → logprob: -12.250164985656738
    4. 'uez' → logprob: -14.375164985656738
    5. 'ué' → logprob: -15.625164985656738
    6. 'e' → logprob: -15.625164985656738
    7. 'uent' → logprob: -15.750164985656738
    8. 'uera' → logprob: -15.875164985656738
    9. 'uie' → logprob: -16.250165939331055
    10. 'uée' → logprob: -16.250165939331055

Token 30: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.360580176115036
    2. ' la' → logprob: -1.9855802059173584
    3. 'une' → logprob: -2.3605802059173584
    4. ' l' → logprob: -3.1105802059173584
    5. '   ' → logprob: -4.610579967498779
    6. 'l' → logprob: -4.985579967498779
    7. 'la' → logprob: -5.235579967498779
    8. ' ' → logprob: -6.985579967498779
    9. ' un' → logprob: -7.235579967498779
    10. '    ' → logprob: -7.860579967498779

Token 31: ' division' (ID: 21629)
  Prédit: ' division'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' division' → logprob: -0.2728743851184845
    2. 'division' → logprob: -2.147874355316162
    3. ' ' → logprob: -3.147874355316162
    4. 'ceil' → logprob: -3.147874355316162
    5. ' ceil' → logprob: -3.897874355316162
    6. '   ' → logprob: -5.397874355316162
    7. 'div' → logprob: -5.397874355316162
    8. ' plafond' → logprob: -7.210374355316162
    9. ' ' → logprob: -7.710374355316162
    10. 'd' → logprob: -7.710374355316162

Token 32: ' entière' (ID: 61583)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7741477489471436
    2. ' entière' → logprob: -0.7741477489471436
    3. ' ent' → logprob: -3.5241477489471436
    4. 'ent' → logprob: -3.8991477489471436
    5. '_ent' → logprob: -5.649147987365723
    6. '    ' → logprob: -5.649147987365723
    7. ' de' → logprob: -5.774147987365723
    8. '  ' → logprob: -6.399147987365723
    9. ' ' → logprob: -6.524147987365723
    10. ' entier' → logprob: -6.649147987365723

Token 33: ' "' (ID: 392)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0499001145362854
    2. ' entière' → logprob: -4.924900054931641
    3. ' par' → logprob: -5.174900054931641
    4. ' ' → logprob: -5.174900054931641
    5. '  ' → logprob: -5.424900054931641
    6. ' de' → logprob: -5.549900054931641
    7. '    ' → logprob: -5.799900054931641
    8. ',' → logprob: -6.049900054931641
    9. 'de' → logprob: -6.424900054931641
    10. '.' → logprob: -6.799900054931641

Token 34: 'pl' (ID: 528)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -1.1293143033981323
    2. '   ' → logprob: -1.2543143033981323
    3. ' entière' → logprob: -2.254314422607422
    4. 'par' → logprob: -2.754314422607422
    5. 'de' → logprob: -2.879314422607422
    6. ' de' → logprob: -3.129314422607422
    7. ' "' → logprob: -3.379314422607422
    8. ' par' → logprob: -4.004314422607422
    9. ' ' → logprob: -4.379314422607422
    10. ')' → logprob: -4.754314422607422

Token 35: 'af' (ID: 1553)
  Prédit: 'us'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'us' → logprob: -0.41002219915390015
    2. 'an' → logprob: -1.910022258758545
    3. 'af' → logprob: -2.660022258758545
    4. 'anch' → logprob: -3.160022258758545
    5. 'u' → logprob: -3.785022258758545
    6. 'ut' → logprob: -3.910022258758545
    7. 'a' → logprob: -4.160022258758545
    8. 'ur' → logprob: -5.160022258758545
    9. 'e' → logprob: -6.285022258758545
    10. '```' → logprob: -6.535022258758545

Token 36: 'ond' (ID: 1415)
  Prédit: 'onnée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'onnée' → logprob: -0.03332694619894028
    2. 'on' → logprob: -3.9083268642425537
    3. 'ée' → logprob: -5.283327102661133
    4. 'ond' → logprob: -5.658327102661133
    5. 'onnement' → logprob: -6.908327102661133
    6. 'f' → logprob: -7.033327102661133
    7. 'o' → logprob: -7.533327102661133
    8. 'onné' → logprob: -8.408327102661133
    9. 'onne' → logprob: -9.283327102661133
    10. 'cée' → logprob: -9.283327102661133

Token 37: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.19932986795902252
    2. '"""
' → logprob: -2.8243298530578613
    3. '")' → logprob: -3.3243298530578613
    4. '   ' → logprob: -3.4493298530578613
    5. ')' → logprob: -5.199329853057861
    6. '"\' → logprob: -5.199329853057861
    7. ' "' → logprob: -5.449329853057861
    8. ' ' → logprob: -5.574329853057861
    9. '"""' → logprob: -5.699329853057861
    10. '"
' → logprob: -5.949329853057861

Token 38: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04856067895889282
    2. '\n' → logprob: -3.548560619354248
    3. '(' → logprob: -5.423560619354248
    4. '(
' → logprob: -5.798560619354248
    5. '\' → logprob: -5.923560619354248
    6. '(n' → logprob: -6.423560619354248
    7. 'def' → logprob: -6.923560619354248
    8. '"\' → logprob: -7.173560619354248
    9. '("\' → logprob: -7.423560619354248
    10. ' (' → logprob: -7.423560619354248

Token 39: 'c' (ID: 66)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.22069740295410156
    2. '   ' → logprob: -2.2206974029541016
    3. 'a' → logprob: -3.3456974029541016
    4. ' )' → logprob: -4.470697402954102
    5. ' des' → logprob: -4.720697402954102
    6. ' ' → logprob: -5.220697402954102
    7. ' la' → logprob: -5.470697402954102
    8. ' a' → logprob: -5.720697402954102
    9. ' par' → logprob: -5.720697402954102
    10. 'n' → logprob: -6.470697402954102

Token 40: ''est' (ID: 6616)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.41702258586883545
    2. 'a' → logprob: -2.667022705078125
    3. ''' → logprob: -2.792022705078125
    4. ''e' → logprob: -3.042022705078125
    5. '')' → logprob: -3.167022705078125
    6. ''a' → logprob: -3.917022705078125
    7. ''é' → logprob: -3.917022705078125
    8. ''à' → logprob: -3.917022705078125
    9. 'é' → logprob: -4.167022705078125
    10. 'o' → logprob: -4.667022705078125

Token 41: '-à' (ID: 56297)
  Prédit: '-à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-à' → logprob: -0.19638760387897491
    2. 'à' → logprob: -2.321387529373169
    3. ' à' → logprob: -2.571387529373169
    4. '   ' → logprob: -5.946387767791748
    5. ' une' → logprob: -8.19638729095459
    6. 'a' → logprob: -8.69638729095459
    7. '-' → logprob: -8.82138729095459
    8. ' ' → logprob: -8.82138729095459
    9. '-a' → logprob: -9.07138729095459
    10. ' a' → logprob: -9.19638729095459

Token 42: '-dire' (ID: 76064)
  Prédit: ' dire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dire' → logprob: -0.6913329362869263
    2. 'dire' → logprob: -1.1913329362869263
    3. 'd' → logprob: -2.3163328170776367
    4. 'à' → logprob: -3.8163328170776367
    5. '-dire' → logprob: -3.9413328170776367
    6. '```' → logprob: -4.191332817077637
    7. '`' → logprob: -4.941332817077637
    8. ' d' → logprob: -5.066332817077637
    9. 'g' → logprob: -5.316332817077637
    10. '-à' → logprob: -5.441332817077637

Token 43: ' le' (ID: 505)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -1.4021759033203125
    2. ' une' → logprob: -1.4021759033203125
    3. ' que' → logprob: -1.7771759033203125
    4. '   ' → logprob: -2.6521759033203125
    5. ' un' → logprob: -3.4021759033203125
    6. ' a' → logprob: -3.5271759033203125
    7. ' de' → logprob: -3.6521759033203125
    8. ' that' → logprob: -4.2771759033203125
    9. ' au' → logprob: -4.2771759033203125
    10. 'une' → logprob: -4.4021759033203125

Token 44: ' plus' (ID: 2932)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.341281533241272
    2. '/' → logprob: -1.591281533241272
    3. ')' → logprob: -2.3412814140319824
    4. ' nombre' → logprob: -3.0912814140319824
    5. 's' → logprob: -3.0912814140319824
    6. 'r' → logprob: -3.2162814140319824
    7. ' )' → logprob: -3.3412814140319824
    8. '   ' → logprob: -3.7162814140319824
    9. 'a' → logprob: -3.8412814140319824
    10. ' résultat' → logprob: -3.9662814140319824

Token 45: ' petit' (ID: 20577)
  Prédit: 'sup'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sup' → logprob: -0.8751529455184937
    2. '```' → logprob: -1.7501529455184937
    3. ' supérieur' → logprob: -2.750153064727783
    4. '+' → logprob: -2.750153064727783
    5. 's' → logprob: -3.000153064727783
    6. '<|end|>' → logprob: -3.375153064727783
    7. 'plus' → logprob: -3.500153064727783
    8. 'pro' → logprob: -3.500153064727783
    9. '   ' → logprob: -4.125153064727783
    10. 'grand' → logprob: -4.375153064727783

Token 46: ' entier' (ID: 80473)
  Prédit: ' multiple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' multiple' → logprob: -0.8353625535964966
    2. ' nombre' → logprob: -1.9603625535964966
    3. ' entier' → logprob: -2.085362434387207
    4. '```' → logprob: -2.585362434387207
    5. ' divisible' → logprob: -2.960362434387207
    6. 'div' → logprob: -3.085362434387207
    7. 'ent' → logprob: -3.335362434387207
    8. ' ' → logprob: -3.710362434387207
    9. '   ' → logprob: -3.960362434387207
    10. 'nombre' → logprob: -3.960362434387207

Token 47: '
' (ID: 198)
  Prédit: ' supérieur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' supérieur' → logprob: -0.15287619829177856
    2. ' ' → logprob: -2.902876138687134
    3. 'sup' → logprob: -3.777876138687134
    4. ' sup' → logprob: -4.027876377105713
    5. ' qui' → logprob: -4.027876377105713
    6. '```' → logprob: -4.902876377105713
    7. ' supérieure' → logprob: -5.527876377105713
    8. ' su' → logprob: -5.777876377105713
    9. '<|end|>' → logprob: -6.652876377105713
    10. ' super' → logprob: -6.777876377105713

Token 48: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5769227147102356
    2. ' qui' → logprob: -2.076922655105591
    3. ' sup' → logprob: -2.326922655105591
    4. ' supérieur' → logprob: -2.701922655105591
    5. ')' → logprob: -3.326922655105591
    6. ' possible' → logprob: -3.576922655105591
    7. '```' → logprob: -4.20192289352417
    8. ' su' → logprob: -4.95192289352417
    9. 'sup' → logprob: -5.07692289352417
    10. '   ' → logprob: -5.07692289352417

Token 49: ' supérieur' (ID: 98491)
  Prédit: ' supérieur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' supérieur' → logprob: -0.5436046123504639
    2. ' qui' → logprob: -1.7936046123504639
    3. 'sup' → logprob: -2.168604612350464
    4. ' sup' → logprob: -2.793604612350464
    5. '```' → logprob: -3.918604612350464
    6. ' ' → logprob: -4.543604850769043
    7. ' super' → logprob: -5.168604850769043
    8. ' divisible' → logprob: -5.293604850769043
    9. 'su' → logprob: -5.418604850769043
    10. ' supr' → logprob: -5.668604850769043

Token 50: ' ou' (ID: 2031)
  Prédit: 'ou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ou' → logprob: -0.8499396443367004
    2. ' ou' → logprob: -1.0999395847320557
    3. 'au' → logprob: -1.7249395847320557
    4. 'à' → logprob: -3.2249395847320557
    5. ' au' → logprob: -4.474939823150635
    6. '_' → logprob: -5.474939823150635
    7. ' à' → logprob: -6.099939823150635
    8. '```' → logprob: -6.099939823150635
    9. 'strict' → logprob: -7.599939823150635
    10. 'e' → logprob: -8.224939346313477

Token 51: ' égal' (ID: 15059)
  Prédit: 'égal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'égal' → logprob: -0.0850326344370842
    2. '=' → logprob: -2.5850327014923096
    3. ' égal' → logprob: -5.8350324630737305
    4. 'ég' → logprob: -6.4600324630737305
    5. 'é' → logprob: -7.0850324630737305
    6. 'égalité' → logprob: -8.46003246307373
    7. ' ég' → logprob: -9.33503246307373
    8. 'à' → logprob: -9.46003246307373
    9. 'équ' → logprob: -9.46003246307373
    10. '==' → logprob: -9.83503246307373

Token 52: ' au' (ID: 2791)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.1765989363193512
    2. ' au' → logprob: -2.3015990257263184
    3. 'à' → logprob: -3.6765990257263184
    4. 'au' → logprob: -4.051599025726318
    5. ' ' → logprob: -4.176599025726318
    6. '   ' → logprob: -6.051599025726318
    7. ')' → logprob: -7.301599025726318
    8. ''à' → logprob: -8.17659854888916
    9. '  ' → logprob: -8.80159854888916
    10. '```' → logprob: -9.67659854888916

Token 53: ' quotient' (ID: 169302)
  Prédit: ' résultat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' résultat' → logprob: -0.6374249458312988
    2. 'rés' → logprob: -1.5124249458312988
    3. 'quot' → logprob: -2.137424945831299
    4. '   ' → logprob: -2.512424945831299
    5. ' quotient' → logprob: -4.012424945831299
    6. ' ' → logprob: -4.512424945831299
    7. 'div' → logprob: -4.887424945831299
    8. 'result' → logprob: -5.512424945831299
    9. 'r' → logprob: -5.512424945831299
    10. ' resultat' → logprob: -6.637424945831299

Token 54: ' de' (ID: 334)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07576549053192139
    2. ')
' → logprob: -3.575765609741211
    3. '"""
' → logprob: -4.075765609741211
    4. '   ' → logprob: -4.950765609741211
    5. ' )' → logprob: -5.200765609741211
    6. '"' → logprob: -5.325765609741211
    7. ').' → logprob: -5.825765609741211
    8. ' )
' → logprob: -6.700765609741211
    9. '")' → logprob: -6.825765609741211
    10. ' """
' → logprob: -6.825765609741211

Token 55: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.1062297597527504
    2. 'la' → logprob: -2.356229782104492
    3. 'l' → logprob: -5.981229782104492
    4. ' l' → logprob: -6.981229782104492
    5. 'a' → logprob: -7.356229782104492
    6. ' leur' → logprob: -7.856229782104492
    7. 's' → logprob: -8.481229782104492
    8. '   ' → logprob: -8.856229782104492
    9. ' a' → logprob: -8.856229782104492
    10. 'div' → logprob: -8.856229782104492

Token 56: ' somme' (ID: 64484)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.23541259765625
    2. ' somme' → logprob: -1.86041259765625
    3. 'division' → logprob: -3.23541259765625
    4. ' division' → logprob: -5.11041259765625
    5. 'div' → logprob: -5.36041259765625
    6. '   ' → logprob: -6.36041259765625
    7. ' ' → logprob: -6.86041259765625
    8. 'som' → logprob: -7.11041259765625
    9. 'sum' → logprob: -8.61041259765625
    10. 'de' → logprob: -9.61041259765625

Token 57: ' par' (ID: 686)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.13993380963802338
    2. ')
' → logprob: -2.7649338245391846
    3. '   ' → logprob: -3.5149338245391846
    4. ' )' → logprob: -4.7649335861206055
    5. '"' → logprob: -5.0149335861206055
    6. ' )
' → logprob: -5.2649335861206055
    7. ' ' → logprob: -5.3899335861206055
    8. '"""
' → logprob: -5.6399335861206055
    9. '")' → logprob: -6.5149335861206055
    10. ' des' → logprob: -7.1399335861206055

Token 58: ' le' (ID: 505)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8937724828720093
    2. '2' → logprob: -1.0187724828720093
    3. ' le' → logprob: -1.7687724828720093
    4. ' l' → logprob: -3.893772602081299
    5. 'le' → logprob: -4.018772602081299
    6. ' la' → logprob: -4.768772602081299
    7. 'de' → logprob: -6.018772602081299
    8. ' n' → logprob: -6.143772602081299
    9. '3' → logprob: -6.393772602081299
    10. ' deux' → logprob: -7.143772602081299

Token 59: ' deuxième' (ID: 51664)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0198678970336914
    2. 'de' → logprob: -1.0198678970336914
    3. '2' → logprob: -2.3948678970336914
    4. 'div' → logprob: -2.5198678970336914
    5. ' second' → logprob: -3.0198678970336914
    6. 'second' → logprob: -3.2698678970336914
    7. ' deuxième' → logprob: -5.019867897033691
    8. '```' → logprob: -5.144867897033691
    9. ' ' → logprob: -6.019867897033691
    10. 'den' → logprob: -6.644867897033691

Token 60: ' entier' (ID: 80473)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4814152717590332
    2. ' )' → logprob: -1.3564152717590332
    3. ' entier' → logprob: -2.731415271759033
    4. 'ent' → logprob: -3.606415271759033
    5. ' ' → logprob: -4.981415271759033
    6. 'argument' → logprob: -5.606415271759033
    7. ' argument' → logprob: -5.856415271759033
    8. '")' → logprob: -5.856415271759033
    9. ' ")' → logprob: -6.481415271759033
    10. 'param' → logprob: -6.481415271759033

Token 61: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.23567181825637817
    2. '   ' → logprob: -1.7356717586517334
    3. '):' → logprob: -4.7356719970703125
    4. '\n' → logprob: -4.8606719970703125
    5. ' )' → logprob: -5.2356719970703125
    6. ')
' → logprob: -5.9856719970703125
    7. ')\' → logprob: -6.4856719970703125
    8. '")' → logprob: -6.9856719970703125
    9. ',' → logprob: -7.1106719970703125
    10. '"' → logprob: -7.2356719970703125

Token 62: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001083302078768611
    2. '"""' → logprob: -7.6260833740234375
    3. '    
' → logprob: -9.001083374023438
    4. '\n' → logprob: -9.126083374023438
    5. '```' → logprob: -9.251083374023438
    6. '    ' → logprob: -9.251083374023438
    7. '"""
' → logprob: -9.501083374023438
    8. '
' → logprob: -10.626083374023438
    9. '"' → logprob: -10.751083374023438
    10. '  ' → logprob: -11.376083374023438

Token 63: ' Aff' (ID: 13741)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01389537937939167
    2. '\n' → logprob: -4.638895511627197
    3. '    
' → logprob: -6.763895511627197
    4. '"""' → logprob: -7.138895511627197
    5. '```' → logprob: -7.263895511627197
    6. '"' → logprob: -8.138895034790039
    7. '\' → logprob: -8.263895034790039
    8. '
' → logprob: -8.388895034790039
    9. ' 
' → logprob: -9.138895034790039
    10. '"""
' → logprob: -9.263895034790039

Token 64: 'iche' (ID: 7509)
  Prédit: 'iche'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iche' → logprob: -0.1140485554933548
    2. 'ic' → logprob: -2.614048480987549
    3. 'i' → logprob: -3.989048480987549
    4. '   ' → logprob: -4.989048480987549
    5. 'r' → logprob: -5.989048480987549
    6. 'ichage' → logprob: -6.739048480987549
    7. 'ect' → logprob: -6.989048480987549
    8. 'f' → logprob: -7.489048480987549
    9. 'ich' → logprob: -7.614048480987549
    10. '       ' → logprob: -7.614048480987549

Token 65: ' ensuite' (ID: 39713)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.29966679215431213
    2. ' le' → logprob: -2.1746668815612793
    3. '(' → logprob: -3.1746668815612793
    4. ' ' → logprob: -3.1746668815612793
    5. ' l' → logprob: -3.7996668815612793
    6. ' les' → logprob: -4.549666881561279
    7. '    ' → logprob: -5.174666881561279
    8. ' un' → logprob: -5.299666881561279
    9. '   ' → logprob: -5.799666881561279
    10. 's' → logprob: -5.799666881561279

Token 66: ' ce' (ID: 2357)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.6439408659934998
    2. ' la' → logprob: -0.8939408659934998
    3. ' l' → logprob: -4.0189409255981445
    4. ' ' → logprob: -4.8939409255981445
    5. ' un' → logprob: -4.8939409255981445
    6. 'le' → logprob: -5.5189409255981445
    7. 'la' → logprob: -5.5189409255981445
    8. '(' → logprob: -5.7689409255981445
    9. 'rés' → logprob: -5.8939409255981445
    10. 'l' → logprob: -6.0189409255981445

Token 67: ' résultat' (ID: 62556)
  Prédit: ' résultat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' résultat' → logprob: -0.013584381900727749
    2. ' resultat' → logprob: -5.013584613800049
    3. ' result' → logprob: -5.513584613800049
    4. ' résult' → logprob: -7.513584613800049
    5. 'rés' → logprob: -7.638584613800049
    6. 'r' → logprob: -7.888584613800049
    7. ' quotient' → logprob: -8.26358413696289
    8. ' rés' → logprob: -8.51358413696289
    9. 'result' → logprob: -8.63858413696289
    10. ' res' → logprob: -8.88858413696289

Token 68: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26933950185775757
    2. '\n' → logprob: -1.7693395614624023
    3. '"""' → logprob: -3.1443395614624023
    4. '"""
' → logprob: -4.894339561462402
    5. '"' → logprob: -5.519339561462402
    6. '\' → logprob: -5.769339561462402
    7. '```' → logprob: -5.769339561462402
    8. '    
' → logprob: -6.894339561462402
    9. '
' → logprob: -6.894339561462402
    10. '' → logprob: -8.019339561462402

Token 69: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04943198710680008
    2. '"""' → logprob: -3.0494320392608643
    3. '```' → logprob: -7.799431800842285
    4. '"""
' → logprob: -8.924431800842285
    5. '"' → logprob: -9.299431800842285
    6. '""' → logprob: -9.424431800842285
    7. ' """' → logprob: -10.049431800842285
    8. ')' → logprob: -10.674431800842285
    9. '    ' → logprob: -10.799431800842285
    10. '    
' → logprob: -11.924431800842285

Token 70: ' Exemple' (ID: 142783)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007000704761594534
    2. '"""' → logprob: -6.257000923156738
    3. '```' → logprob: -6.757000923156738
    4. '\n' → logprob: -6.757000923156738
    5. '    
' → logprob: -7.132000923156738
    6. '    ' → logprob: -7.257000923156738
    7. '
' → logprob: -7.507000923156738
    8. ')' → logprob: -8.882000923156738
    9. ' 
' → logprob: -9.132000923156738
    10. 'n' → logprob: -9.257000923156738

Token 71: ' :
' (ID: 10039)
  Prédit: ' :'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' :' → logprob: -0.9991173148155212
    2. 's' → logprob: -1.874117374420166
    3. '   ' → logprob: -2.624117374420166
    4. '```' → logprob: -2.624117374420166
    5. '\n' → logprob: -2.749117374420166
    6. ' :
' → logprob: -2.874117374420166
    7. ':' → logprob: -3.124117374420166
    8. ' 
' → logprob: -3.374117374420166
    9. ' d' → logprob: -3.999117374420166
    10. '  
' → logprob: -4.124117374420166

Token 72: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03538745641708374
    2. '    ' → logprob: -3.9103875160217285
    3. '    
' → logprob: -4.7853875160217285
    4. '     
' → logprob: -6.2853875160217285
    5. ' 
' → logprob: -7.0353875160217285
    6. '  ' → logprob: -7.0353875160217285
    7. ' ' → logprob: -7.0353875160217285
    8. '   
' → logprob: -7.2853875160217285
    9. 'n' → logprob: -8.41038703918457
    10. '\n' → logprob: -9.28538703918457

Token 73: ' Entr' (ID: 50650)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6775226593017578
    2. '    ' → logprob: -1.3025226593017578
    3. ' ' → logprob: -2.802522659301758
    4. '     
' → logprob: -3.177522659301758
    5. '    
' → logprob: -3.677522659301758
    6. 'n' → logprob: -3.802522659301758
    7. ' 
' → logprob: -3.927522659301758
    8. ' \' → logprob: -4.427522659301758
    9. '1' → logprob: -4.802522659301758
    10. ' ```' → logprob: -6.052522659301758

Token 74: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.00964901689440012
    2. 'é' → logprob: -4.88464879989624
    3. 'ées' → logprob: -6.25964879989624
    4. 'er' → logprob: -9.634649276733398
    5. 'e' → logprob: -10.259649276733398
    6. '   ' → logprob: -12.009649276733398
    7. ' é' → logprob: -12.134649276733398
    8. 'éer' → logprob: -12.259649276733398
    9. '```' → logprob: -13.134649276733398
    10. 'és' → logprob: -13.134649276733398

Token 75: ' :' (ID: 712)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3070814609527588
    2. '   ' → logprob: -1.5570814609527588
    3. ':' → logprob: -2.557081460952759
    4. ' ' → logprob: -2.557081460952759
    5. '2' → logprob: -2.682081460952759
    6. ' 
' → logprob: -3.057081460952759
    7. '    
' → logprob: -3.182081460952759
    8. '\n' → logprob: -3.557081460952759
    9. ' :' → logprob: -3.557081460952759
    10. '12' → logprob: -3.682081460952759

Token 76: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.6130555868148804
    2. ' ' → logprob: -1.6130555868148804
    3. '1' → logprob: -1.9880555868148804
    4. '3' → logprob: -2.11305570602417
    5. '4' → logprob: -2.11305570602417
    6. '10' → logprob: -2.98805570602417
    7. '12' → logprob: -3.23805570602417
    8. '8' → logprob: -3.36305570602417
    9. ' 
' → logprob: -3.48805570602417
    10. '5' → logprob: -4.11305570602417

Token 77: '7' (ID: 22)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -1.1050946712493896
    2. '3' → logprob: -1.3550946712493896
    3. '4' → logprob: -1.8550946712493896
    4. '7' → logprob: -2.2300946712493896
    5. '10' → logprob: -2.9800946712493896
    6. '8' → logprob: -3.4800946712493896
    7. '2' → logprob: -3.7300946712493896
    8. '1' → logprob: -4.355094909667969
    9. '6' → logprob: -4.480094909667969
    10. '12' → logprob: -4.730094909667969

Token 78: ' ' (ID: 220)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8661994934082031
    2. ' ' → logprob: -0.8661994934082031
    3. ' ,' → logprob: -2.491199493408203
    4. '7' → logprob: -3.116199493408203
    5. '   ' → logprob: -5.366199493408203
    6. '    ' → logprob: -5.741199493408203
    7. '2' → logprob: -5.991199493408203
    8. '0' → logprob: -6.116199493408203
    9. '6' → logprob: -6.116199493408203
    10. '  ' → logprob: -6.241199493408203

Token 79: '3' (ID: 18)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.11861542612314224
    2. '8' → logprob: -3.2436153888702393
    3. '10' → logprob: -4.243615627288818
    4. '   ' → logprob: -4.743615627288818
    5. '12' → logprob: -4.993615627288818
    6. '9' → logprob: -4.993615627288818
    7. ',' → logprob: -5.368615627288818
    8. '14' → logprob: -5.493615627288818
    9. '4' → logprob: -5.868615627288818
    10. '5' → logprob: -5.868615627288818

Token 80: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05353344976902008
    2. '\n' → logprob: -3.8035335540771484
    3. '    
' → logprob: -4.553533554077148
    4. '\' → logprob: -4.678533554077148
    5. '```' → logprob: -6.053533554077148
    6. '    ' → logprob: -6.803533554077148
    7. '   
' → logprob: -6.803533554077148
    8. ' 
' → logprob: -6.928533554077148
    9. '"""' → logprob: -7.178533554077148
    10. '"""
' → logprob: -7.303533554077148

Token 81: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18245655298233032
    2. '"""' → logprob: -3.0574564933776855
    3. '\n' → logprob: -3.3074564933776855
    4. '"""
' → logprob: -3.9324564933776855
    5. '    
' → logprob: -4.3074564933776855
    6. '\' → logprob: -4.3074564933776855
    7. ' 
' → logprob: -4.6824564933776855
    8. '    ' → logprob: -5.1824564933776855
    9. '```' → logprob: -5.3074564933776855
    10. '     
' → logprob: -5.5574564933776855

Token 82: ' Aff' (ID: 13741)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.29880693554878235
    2. '"""
' → logprob: -2.67380690574646
    3. '\n' → logprob: -2.92380690574646
    4. ' 
' → logprob: -3.42380690574646
    5. '"""' → logprob: -3.42380690574646
    6. '    
' → logprob: -3.54880690574646
    7. '       ' → logprob: -4.548807144165039
    8. '    ' → logprob: -5.048807144165039
    9. '     
' → logprob: -5.173807144165039
    10. ' """
' → logprob: -5.673807144165039

Token 83: 'ichage' (ID: 118475)
  Prédit: 'iche'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iche' → logprob: -0.02561021037399769
    2. 'ichage' → logprob: -4.025610446929932
    3. '   ' → logprob: -5.275610446929932
    4. 'ic' → logprob: -7.400610446929932
    5. ' ' → logprob: -8.525609970092773
    6. '  ' → logprob: -8.650609970092773
    7. 'i' → logprob: -8.775609970092773
    8. '       ' → logprob: -8.900609970092773
    9. '```' → logprob: -8.900609970092773
    10. 'î' → logprob: -9.150609970092773

Token 84: ' :' (ID: 712)
  Prédit: ' :'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' :' → logprob: -0.010587077587842941
    2. ':' → logprob: -4.635587215423584
    3. ' ' → logprob: -8.135586738586426
    4. '   ' → logprob: -8.885586738586426
    5. ' :
' → logprob: -9.260586738586426
    6. '"' → logprob: -9.510586738586426
    7. '1' → logprob: -10.260586738586426
    8. ' :

' → logprob: -10.510586738586426
    9. '7' → logprob: -10.760586738586426
    10. '3' → logprob: -11.135586738586426

Token 85: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.16038772463798523
    2. '3' → logprob: -1.9103877544403076
    3. '```' → logprob: -9.785387992858887
    4. '4' → logprob: -10.160387992858887
    5. '`' → logprob: -11.160387992858887
    6. '1' → logprob: -11.910387992858887
    7. ' ```' → logprob: -11.972887992858887
    8. '    ' → logprob: -12.222887992858887
    9. '``' → logprob: -12.285387992858887
    10. '8' → logprob: -12.347887992858887

Token 86: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.00456030759960413
    2. ' ' → logprob: -5.504560470581055
    3. '```' → logprob: -8.129560470581055
    4. '``' → logprob: -9.942060470581055
    5. '`' → logprob: -10.129560470581055
    6. '4' → logprob: -10.817060470581055
    7. '9' → logprob: -10.817060470581055
    8. '   ' → logprob: -11.942060470581055
    9. '"' → logprob: -12.442060470581055
    10. '10' → logprob: -12.504560470581055

Token 87: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.029222700744867325
    2. '\n' → logprob: -4.65422248840332
    3. '    
' → logprob: -4.90422248840332
    4. '```' → logprob: -6.02922248840332
    5. '\' → logprob: -6.27922248840332
    6. '"""' → logprob: -6.52922248840332
    7. ' 
' → logprob: -6.77922248840332
    8. '
' → logprob: -6.77922248840332
    9. '    ' → logprob: -7.15422248840332
    10. '     
' → logprob: -7.27922248840332

Token 88: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06188924238085747
    2. '"""' → logprob: -2.936889171600342
    3. '"""
' → logprob: -5.561889171600342
    4. '"' → logprob: -6.686889171600342
    5. ' """' → logprob: -7.061889171600342
    6. ' """
' → logprob: -7.936889171600342
    7. '```' → logprob: -8.0618896484375
    8. '""' → logprob: -8.9368896484375
    9. '    ' → logprob: -9.3118896484375
    10. '  ' → logprob: -10.1868896484375

Token 89: ' """
' (ID: 7037)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.3985951244831085
    2. '   ' → logprob: -1.1485950946807861
    3. '"' → logprob: -5.398595333099365
    4. '"""
' (adapté à ' """
') → logprob: -5.773595333099365
    5. '""' → logprob: -6.023595333099365
    6. '```' → logprob: -7.023595333099365
    7. ' """' → logprob: -7.773595333099365
    8. '\n' → logprob: -9.898594856262207
    9. '    ' → logprob: -10.398594856262207
    10. ')' → logprob: -10.523594856262207

Token 90: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06982449442148209
    2. '    
' → logprob: -3.819824457168579
    3. '
' → logprob: -3.944824457168579
    4. '\n' → logprob: -4.569824695587158
    5. 'n' → logprob: -5.069824695587158
    6. '\' → logprob: -5.319824695587158
    7. ' 
' → logprob: -6.319824695587158
    8. '    ' → logprob: -7.319824695587158
    9. '```' → logprob: -7.944824695587158
    10. 'newline' → logprob: -7.944824695587158

Token 91: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016087748110294342
    2. 'n' → logprob: -4.391087532043457
    3. '    
' → logprob: -7.016087532043457
    4. ' 
' → logprob: -7.516087532043457
    5. 'a' → logprob: -8.016087532043457
    6. ' ' → logprob: -8.266087532043457
    7. '    ' → logprob: -8.516087532043457
    8. '\n' → logprob: -8.641087532043457
    9. '
' → logprob: -8.766087532043457
    10. 'import' → logprob: -9.141087532043457

Token 92: ' Lecture' (ID: 106534)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5961487889289856
    2. ' a' → logprob: -1.3461487293243408
    3. ' x' → logprob: -2.096148729324341
    4. 'x' → logprob: -2.846148729324341
    5. '   ' → logprob: -5.97114896774292
    6. 'n' → logprob: -5.97114896774292
    7. ' n' → logprob: -6.47114896774292
    8. 's' → logprob: -8.471148490905762
    9. ' import' → logprob: -8.846148490905762
    10. 'import' → logprob: -8.846148490905762

Token 93: ' de' (ID: 334)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.41203439235687256
    2. '   ' → logprob: -2.537034511566162
    3. ' n' → logprob: -2.787034511566162
    4. 'a' → logprob: -3.412034511566162
    5. 's' → logprob: -3.537034511566162
    6. ' ' → logprob: -3.912034511566162
    7. ' des' → logprob: -4.037034511566162
    8. 'r' → logprob: -4.412034511566162
    9. '    ' → logprob: -4.537034511566162
    10. 'inputs' → logprob: -4.537034511566162

Token 94: ' deux' (ID: 10301)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.34725528955459595
    2. ' l' → logprob: -1.7222552299499512
    3. ' ' → logprob: -2.597255229949951
    4. 'l' → logprob: -4.472255229949951
    5. ' line' → logprob: -5.097255229949951
    6. ' deux' → logprob: -5.222255229949951
    7. 's' → logprob: -5.597255229949951
    8. 'de' → logprob: -6.472255229949951
    9. ' les' → logprob: -6.472255229949951
    10. ' n' → logprob: -7.222255229949951

Token 95: ' ent' (ID: 1121)
  Prédit: ' ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ent' → logprob: -0.028630228713154793
    2. 'ent' → logprob: -3.653630256652832
    3. 'int' → logprob: -7.028630256652832
    4. ' ' → logprob: -8.028630256652832
    5. ' nombres' → logprob: -8.028630256652832
    6. ' integers' → logprob: -8.278630256652832
    7. ' int' → logprob: -8.528630256652832
    8. 'n' → logprob: -9.528630256652832
    9. ' n' → logprob: -9.528630256652832
    10. ' entier' → logprob: -9.528630256652832

Token 96: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.0008010497549548745
    2. 'ières' → logprob: -8.000801086425781
    3. '   ' → logprob: -8.250801086425781
    4. 'i' → logprob: -9.500801086425781
    5. 'ier' → logprob: -9.750801086425781
    6. '       ' → logprob: -11.375801086425781
    7. 's' → logprob: -11.375801086425781
    8. 't' → logprob: -11.375801086425781
    9. 'ers' → logprob: -11.750801086425781
    10. 'ière' → logprob: -11.875801086425781

Token 97: ' depuis' (ID: 16277)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.510878324508667
    2. '   ' → logprob: -1.385878324508667
    3. ' n' → logprob: -3.135878324508667
    4. 'a' → logprob: -3.635878324508667
    5. ' x' → logprob: -4.260878562927246
    6. 's' → logprob: -4.635878562927246
    7. '    
' → logprob: -4.635878562927246
    8. ' i' → logprob: -4.760878562927246
    9. ' a' → logprob: -4.885878562927246
    10. ' line' → logprob: -5.135878562927246

Token 98: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.47934186458587646
    2. ' input' → logprob: -1.4793418645858765
    3. ' ' → logprob: -2.354341983795166
    4. 'l' → logprob: -3.354341983795166
    5. 'input' → logprob: -4.229341983795166
    6. ' la' → logprob: -4.979341983795166
    7. ' ' → logprob: -7.229341983795166
    8. ' standard' → logprob: -8.104341506958008
    9. ' stdin' → logprob: -8.979341506958008
    10. '	l' → logprob: -9.479341506958008

Token 99: ''entrée' (ID: 115820)
  Prédit: ''entrée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''entrée' → logprob: -0.11222460120916367
    2. ''' → logprob: -3.237224578857422
    3. 'entrée' → logprob: -3.737224578857422
    4. 'input' → logprob: -4.237224578857422
    5. 'a' → logprob: -4.237224578857422
    6. 'e' → logprob: -4.362224578857422
    7. ''ent' → logprob: -7.862224578857422
    8. ' input' → logprob: -8.612224578857422
    9. ''utilisateur' → logprob: -9.112224578857422
    10. 'entr' → logprob: -9.237224578857422

Token 100: ' standard' (ID: 7024)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.9196603894233704
    2. '   ' → logprob: -1.4196603298187256
    3. 'n' → logprob: -2.5446603298187256
    4. 'input' → logprob: -2.9196603298187256
    5. ' a' → logprob: -3.0446603298187256
    6. ' ' → logprob: -3.1696603298187256
    7. ' input' → logprob: -3.4196603298187256
    8. 's' → logprob: -4.044660568237305
    9. ' n' → logprob: -4.169660568237305
    10. 'x' → logprob: -4.294660568237305

Token 101: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1424124836921692
    2. 'a' → logprob: -2.5174124240875244
    3. 'n' → logprob: -3.5174124240875244
    4. '    
' → logprob: -4.6424126625061035
    5. ' a' → logprob: -5.1424126625061035
    6. 'x' → logprob: -5.7674126625061035
    7. ' x' → logprob: -7.5174126625061035
    8. '
' → logprob: -8.142412185668945
    9. 'import' → logprob: -8.142412185668945
    10. ' 
' → logprob: -8.142412185668945

Token 102: ' sépar' (ID: 97160)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.8868677020072937
    2. ' a' → logprob: -0.8868677020072937
    3. '   ' → logprob: -2.3868677616119385
    4. ' x' → logprob: -2.7618677616119385
    5. 'x' → logprob: -3.8868677616119385
    6. 'n' → logprob: -8.38686752319336
    7. ' n' → logprob: -9.13686752319336
    8. 's' → logprob: -10.63686752319336
    9. ' line' → logprob: -10.88686752319336
    10. ' i' → logprob: -11.01186752319336

Token 103: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.043831974267959595
    2. 'é' → logprob: -3.1688320636749268
    3. 'ée' → logprob: -7.793831825256348
    4. 'es' → logprob: -8.168831825256348
    5. 'e' → logprob: -10.168831825256348
    6. 'ées' → logprob: -10.168831825256348
    7. 'ès' → logprob: -11.043831825256348
    8. 'er' → logprob: -11.168831825256348
    9. 's' → logprob: -11.543831825256348
    10. ' par' → logprob: -12.793831825256348

Token 104: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.4289937913417816
    2. 'par' → logprob: -1.053993821144104
    3. '_par' → logprob: -8.928994178771973
    4. '  ' → logprob: -9.928994178771973
    5. '(par' → logprob: -10.928994178771973
    6. '	par' → logprob: -11.053994178771973
    7. '<|end|>' → logprob: -11.303994178771973
    8. ' by' → logprob: -11.803994178771973
    9. '```' → logprob: -11.803994178771973
    10. ' ' → logprob: -11.928994178771973

Token 105: ' un' (ID: 537)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.5667427182197571
    2. ' un' → logprob: -1.1917426586151123
    3. 'une' → logprob: -3.0667426586151123
    4. ' une' → logprob: -3.1917426586151123
    5. ' ' → logprob: -4.566742897033691
    6. 'l' → logprob: -4.691742897033691
    7. ' espace' → logprob: -5.066742897033691
    8. ''' → logprob: -5.816742897033691
    9. ''un' → logprob: -5.941742897033691
    10. 'space' → logprob: -6.691742897033691

Token 106: ' espace' (ID: 66004)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.24287520349025726
    2. ' espace' → logprob: -2.367875099182129
    3. 'esp' → logprob: -2.742875099182129
    4. ''espace' → logprob: -3.367875099182129
    5. 'space' → logprob: -4.367875099182129
    6. ''' → logprob: -6.492875099182129
    7. ''esp' → logprob: -6.617875099182129
    8. 's' → logprob: -6.742875099182129
    9. '’espace' → logprob: -6.867875099182129
    10. 'input' → logprob: -6.992875099182129

Token 107: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03541265428066254
    2. 'n' → logprob: -4.410412788391113
    3. 'a' → logprob: -4.535412788391113
    4. '    
' → logprob: -5.160412788391113
    5. 'x' → logprob: -5.535412788391113
    6. ' 
' → logprob: -7.660412788391113
    7. ' x' → logprob: -8.035412788391113
    8. 's' → logprob: -8.160412788391113
    9. '
' → logprob: -8.535412788391113
    10. ' a' → logprob: -8.785412788391113

Token 108: '   ' (ID: 271)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.4099872410297394
    2. '   ' → logprob: -1.159987211227417
    3. ' a' → logprob: -4.534987449645996
    4. 'x' → logprob: -4.534987449645996
    5. ' x' → logprob: -6.659987449645996
    6. 'n' → logprob: -9.659987449645996
    7. '    
' → logprob: -10.784987449645996
    8. ' line' → logprob: -12.034987449645996
    9. '       ' → logprob: -12.409987449645996
    10. 'input' → logprob: -12.784987449645996

Token 109: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.03260364010930061
    2. 'x' → logprob: -3.9076037406921387
    3. ' a' → logprob: -4.532603740692139
    4. '   ' → logprob: -7.282603740692139
    5. ' x' → logprob: -7.532603740692139
    6. 'n' → logprob: -11.40760326385498
    7. '	a' → logprob: -14.90760326385498
    8. ' n' → logprob: -15.03260326385498
    9. ' ' → logprob: -15.15760326385498
    10. 'ent' → logprob: -15.15760326385498

Token 110: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00038300611777231097
    2. ' ,' → logprob: -7.875382900238037
    3. ',b' → logprob: -13.375383377075195
    4. ',a' → logprob: -14.625383377075195
    5. ',int' → logprob: -15.375383377075195
    6. 's' → logprob: -15.500383377075195
    7. 'a' → logprob: -15.875383377075195
    8. ',s' → logprob: -16.000383377075195
    9. ',
' → logprob: -17.375383377075195
    10. ',input' → logprob: -17.625383377075195

Token 111: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.055097900331020355
    2. 'b' → logprob: -2.930097818374634
    3. ' ' → logprob: -8.555097579956055
    4. '<|end|>' → logprob: -10.805097579956055
    5. ' ' → logprob: -13.805097579956055
    6. 'space' → logprob: -15.180097579956055
    7. '<|end|>' → logprob: -15.305097579956055
    8. '  ' → logprob: -15.430097579956055
    9. '	b' → logprob: -15.680097579956055
    10. 's' → logprob: -16.180097579956055

Token 112: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004623679909855127
    2. '=' → logprob: -5.379623889923096
    3. ',' → logprob: -13.129623413085938
    4. ' ' → logprob: -15.004623413085938
    5. '=input' → logprob: -15.129623413085938
    6. ' ' → logprob: -15.379623413085938
    7. ' =
' → logprob: -15.504623413085938
    8. '=int' → logprob: -15.504623413085938
    9. ')' → logprob: -16.254623413085938
    10. ' ,' → logprob: -16.629623413085938

Token 113: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.008615515194833279
    2. 'map' → logprob: -4.758615493774414
    3. '	map' → logprob: -14.508615493774414
    4. ' ' → logprob: -15.383615493774414
    5. ' ' → logprob: -16.258615493774414
    6. ' list' → logprob: -16.508615493774414
    7. ' [' → logprob: -16.883615493774414
    8. '(map' → logprob: -17.008615493774414
    9. '[' → logprob: -17.133615493774414
    10. '.map' → logprob: -18.133615493774414

Token 114: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.023307088762521744
    2. '(' → logprob: -3.7733070850372314
    3. '(input' → logprob: -10.523306846618652
    4. 'int' → logprob: -11.148306846618652
    5. '(str' → logprob: -11.898306846618652
    6. '(
' → logprob: -12.023306846618652
    7. '<int' → logprob: -12.523306846618652
    8. '[int' → logprob: -13.648306846618652
    9. ' int' → logprob: -14.023306846618652
    10. '=int' → logprob: -14.773306846618652

Token 115: ',' (ID: 11)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.5755983591079712
    2. '(input' → logprob: -2.0755982398986816
    3. ',input' → logprob: -2.0755982398986816
    4. ',' → logprob: -2.3255982398986816
    5. ' input' → logprob: -2.7005982398986816
    6. '   ' → logprob: -4.325598239898682
    7. ' ,' → logprob: -5.450598239898682
    8. '(' → logprob: -6.200598239898682
    9. ')' → logprob: -6.575598239898682
    10. ' (' → logprob: -7.575598239898682

Token 116: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.3868788182735443
    2. ' input' → logprob: -1.1368788480758667
    3. ')' → logprob: -12.636878967285156
    4. '   ' → logprob: -13.511878967285156
    5. ' ' → logprob: -13.761878967285156
    6. '	input' → logprob: -14.386878967285156
    7. '(input' → logprob: -14.511878967285156
    8. '=input' → logprob: -14.886878967285156
    9. '```' → logprob: -15.386878967285156
    10. ',input' → logprob: -15.511878967285156

Token 117: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.001224274281412363
    2. '()' → logprob: -6.751224040985107
    3. '())' → logprob: -9.876224517822266
    4. ')' → logprob: -13.501224517822266
    5. ' ().' → logprob: -14.126224517822266
    6. '(' → logprob: -15.251224517822266
    7. '()
' → logprob: -16.001224517822266
    8. ' ()' → logprob: -17.251224517822266
    9. '());' → logprob: -17.251224517822266
    10. '()))' → logprob: -17.376224517822266

Token 118: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -3.023293538717553e-05
    2. 'strip' → logprob: -10.500030517578125
    3. ' split' → logprob: -13.000030517578125
    4. 'spl' → logprob: -15.125030517578125
    5. 'rstrip' → logprob: -16.250030517578125
    6. '(split' → logprob: -16.875030517578125
    7. 's' → logprob: -19.375030517578125
    8. '.split' → logprob: -19.625030517578125
    9. ')' → logprob: -20.750030517578125
    10. ' ' → logprob: -20.875030517578125

Token 119: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.15609003603458405
    2. ')' → logprob: -2.531090021133423
    3. '()))' → logprob: -3.406090021133423
    4. '))' → logprob: -3.656090021133423
    5. '()' → logprob: -5.156090259552002
    6. '(' → logprob: -8.906089782714844
    7. '('' → logprob: -11.031089782714844
    8. ' ())' → logprob: -11.906089782714844
    9. '(','' → logprob: -12.406089782714844
    10. ')))' → logprob: -13.281089782714844

Token 120: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7742276191711426
    2. '
' → logprob: -1.1492276191711426
    3. ' 
' → logprob: -2.5242276191711426
    4. '\n' → logprob: -2.6492276191711426
    5. '  
' → logprob: -3.6492276191711426
    6. '    
' → logprob: -4.149227619171143
    7. '   
' → logprob: -4.149227619171143
    8. ' ' → logprob: -4.899227619171143
    9. '\' → logprob: -6.524227619171143
    10. '```' → logprob: -7.149227619171143

Token 121: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8708478808403015
    2. '   ' → logprob: -1.7458479404449463
    3. 'result' → logprob: -1.8708479404449463
    4. 's' → logprob: -2.2458479404449463
    5. 'return' → logprob: -3.1208479404449463
    6. 'sum' → logprob: -3.7458479404449463
    7. '    
' → logprob: -4.245847702026367
    8. ' 
' → logprob: -4.370847702026367
    9. '  
' → logprob: -4.620847702026367
    10. 'c' → logprob: -4.870847702026367

Token 122: ' Calcul' (ID: 57243)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.2650114893913269
    2. ' result' → logprob: -2.2650115489959717
    3. 'c' → logprob: -3.3900115489959717
    4. 's' → logprob: -3.7650115489959717
    5. 'if' → logprob: -4.015011310577393
    6. 'sum' → logprob: -4.265011310577393
    7. ' if' → logprob: -4.890011310577393
    8. 'from' → logprob: -5.140011310577393
    9. 'return' → logprob: -5.265011310577393
    10. ' c' → logprob: -5.640011310577393

Token 123: ' du' (ID: 1462)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.7991257905960083
    2. '   ' → logprob: -1.1741257905960083
    3. ' s' → logprob: -2.1741256713867188
    4. 's' → logprob: -2.7991256713867188
    5. '_' → logprob: -3.6741256713867188
    6. '    ' → logprob: -4.174125671386719
    7. 'sum' → logprob: -5.424125671386719
    8. '(' → logprob: -5.549125671386719
    9. ' sum' → logprob: -5.799125671386719
    10. ' la' → logprob: -5.924125671386719

Token 124: ' résultat' (ID: 62556)
  Prédit: ' sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.7115764617919922
    2. ' s' → logprob: -1.8365764617919922
    3. 'sum' → logprob: -2.211576461791992
    4. 's' → logprob: -2.461576461791992
    5. ' (' → logprob: -3.211576461791992
    6. ' total' → logprob: -3.586576461791992
    7. ' quotient' → logprob: -3.711576461791992
    8. ' result' → logprob: -4.586576461791992
    9. ' numerator' → logprob: -4.836576461791992
    10. 'result' → logprob: -5.211576461791992

Token 125: ' :' (ID: 712)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.8710781931877136
    2. '   ' → logprob: -1.3710782527923584
    3. ' =' → logprob: -1.3710782527923584
    4. ' result' → logprob: -2.8710782527923584
    5. '=' → logprob: -4.746078014373779
    6. ',' → logprob: -6.621078014373779
    7. 'res' → logprob: -6.871078014373779
    8. '    
' → logprob: -7.371078014373779
    9. ':' → logprob: -7.496078014373779
    10. 's' → logprob: -7.496078014373779

Token 126: ' (' (ID: 350)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.32575714588165283
    2. ' (' → logprob: -1.3257571458816528
    3. 'result' → logprob: -5.075757026672363
    4. '(result' → logprob: -5.325757026672363
    5. '   ' → logprob: -8.075757026672363
    6. ' -' → logprob: -8.200757026672363
    7. ' result' → logprob: -8.575757026672363
    8. '((' → logprob: -9.325757026672363
    9. '-' → logprob: -9.575757026672363
    10. '(ans' → logprob: -9.700757026672363

Token 127: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.014219566248357296
    2. '(a' → logprob: -4.389219760894775
    3. ' a' → logprob: -6.514219760894775
    4. ' (' → logprob: -9.139219284057617
    5. '   ' → logprob: -9.389219284057617
    6. ' ' → logprob: -11.639219284057617
    7. ')' → logprob: -12.264219284057617
    8. '(' → logprob: -12.389219284057617
    9. '
' → logprob: -12.514219284057617
    10. ')a' → logprob: -13.014219284057617

Token 128: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.03448977693915367
    2. '+b' → logprob: -3.909489870071411
    3. '+' → logprob: -4.284489631652832
    4. '+B' → logprob: -10.159489631652832
    5. ' ' → logprob: -11.409489631652832
    6. ' plus' → logprob: -12.159489631652832
    7. ' ' → logprob: -12.159489631652832
    8. '```' → logprob: -13.409489631652832
    9. '  ' → logprob: -13.659489631652832
    10. '+j' → logprob: -13.909489631652832

Token 129: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.3486289978027344
    2. ' b' → logprob: -1.2236289978027344
    3. ' (' → logprob: -9.223628997802734
    4. '(b' → logprob: -10.098628997802734
    5. ' ' → logprob: -10.473628997802734
    6. '1' → logprob: -12.223628997802734
    7. '(' → logprob: -12.723628997802734
    8. ')' → logprob: -13.348628997802734
    9. '   ' → logprob: -13.348628997802734
    10. 'a' → logprob: -13.973628997802734

Token 130: ' -' (ID: 533)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.18964546918869019
    2. '-' → logprob: -2.439645528793335
    3. ' -' → logprob: -2.939645528793335
    4. '+' → logprob: -3.564645528793335
    5. ')' → logprob: -6.189645290374756
    6. ' ' → logprob: -7.189645290374756
    7. '+b' → logprob: -7.564645290374756
    8. '```' → logprob: -8.189645767211914
    9. '1' → logprob: -8.439645767211914
    10. ' plus' → logprob: -8.564645767211914

Token 131: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006323783891275525
    2. ' ' → logprob: -7.375632286071777
    3. '<|end|>' → logprob: -13.000632286071777
    4. 'b' → logprob: -13.500632286071777
    5. ')' → logprob: -14.250632286071777
    6. '(' → logprob: -15.000632286071777
    7. ' b' → logprob: -15.375632286071777
    8. '
' → logprob: -15.625632286071777
    9. '  ' → logprob: -15.750632286071777
    10. 's' → logprob: -15.875632286071777

Token 132: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3544423381972592e-05
    2. ' ' → logprob: -11.62501335144043
    3. 'b' → logprob: -12.62501335144043
    4. '(' → logprob: -13.75001335144043
    5. ')' → logprob: -16.75001335144043
    6. '<|end|>' → logprob: -17.25001335144043
    7. '
' → logprob: -17.37501335144043
    8. ' (' → logprob: -17.87501335144043
    9. '   ' → logprob: -18.12501335144043
    10. ' b' → logprob: -18.25001335144043

Token 133: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.044689811766147614
    2. ' +' → logprob: -3.294689893722534
    3. '+' → logprob: -5.169689655303955
    4. ' )' → logprob: -7.294689655303955
    5. ')//' → logprob: -9.419690132141113
    6. ' ' → logprob: -9.544690132141113
    7. '```' → logprob: -10.169690132141113
    8. ')
' → logprob: -10.544690132141113
    9. '   ' → logprob: -11.419690132141113
    10. '1' → logprob: -12.544690132141113

Token 134: ' //' (ID: 602)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3002067804336548
    2. ' //' → logprob: -1.8002067804336548
    3. ' ' → logprob: -2.8002066612243652
    4. ' )' → logprob: -5.050206661224365
    5. '```' → logprob: -5.550206661224365
    6. '//' → logprob: -5.550206661224365
    7. '   ' → logprob: -5.925206661224365
    8. 'div' → logprob: -6.050206661224365
    9. ' +' → logprob: -6.175206661224365
    10. '
' → logprob: -6.550206661224365

Token 135: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.4740866422653198
    2. ' b' → logprob: -0.9740866422653198
    3. '	b' → logprob: -12.22408676147461
    4. '   ' → logprob: -12.59908676147461
    5. ' ' → logprob: -13.97408676147461
    6. '    ' → logprob: -16.09908676147461
    7. ' ' → logprob: -16.09908676147461
    8. ' б' → logprob: -16.22408676147461
    9. '  ' → logprob: -16.34908676147461
    10. '<|end|>' → logprob: -16.84908676147461

Token 136: ' équ' (ID: 18899)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07258842885494232
    2. ')' → logprob: -3.4475884437561035
    3. '+' → logprob: -4.0725884437561035
    4. 'return' → logprob: -5.1975884437561035
    5. '
' → logprob: -5.8225884437561035
    6. '<|end|>' → logprob: -6.0725884437561035
    7. '    
' → logprob: -6.5725884437561035
    8. ' ' → logprob: -6.5725884437561035
    9. ' +' → logprob: -6.6975884437561035
    10. ' return' → logprob: -6.9475884437561035

Token 137: 'iv' (ID: 349)
  Prédit: 'iv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iv' → logprob: -0.0028290078043937683
    2. 'al' → logprob: -6.252829074859619
    3. 'ival' → logprob: -7.752829074859619
    4. 'ivalent' → logprob: -7.877829074859619
    5. 'aux' → logprob: -10.377828598022461
    6. 'ale' → logprob: -10.502828598022461
    7. 'ates' → logprob: -11.377828598022461
    8. 'ales' → logprob: -11.877828598022461
    9. 'a' → logprob: -12.627828598022461
    10. '   ' → logprob: -12.877828598022461

Token 138: 'aut' (ID: 1828)
  Prédit: 'al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.15635688602924347
    2. 'ale' → logprob: -2.0313568115234375
    3. 'a' → logprob: -4.7813568115234375
    4. '   ' → logprob: -6.4063568115234375
    5. 'ales' → logprob: -7.2813568115234375
    6. 'aut' → logprob: -7.2813568115234375
    7. ' a' → logprob: -7.5313568115234375
    8. 'aux' → logprob: -7.6563568115234375
    9. 'ault' → logprob: -8.156356811523438
    10. 'ivalent' → logprob: -8.531356811523438

Token 139: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.2835868299007416
    2. ' to' → logprob: -2.0335867404937744
    3. '   ' → logprob: -2.6585867404937744
    4. ' ' → logprob: -4.2835869789123535
    5. '    ' → logprob: -4.4085869789123535
    6. ' au' → logprob: -5.4085869789123535
    7. ' a' → logprob: -5.5335869789123535
    8. 'to' → logprob: -6.0335869789123535
    9. 'à' → logprob: -6.0335869789123535
    10. '  ' → logprob: -6.1585869789123535

Token 140: ' un' (ID: 537)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.637718677520752
    2. '(a' → logprob: -0.762718677520752
    3. ' ' → logprob: -6.387718677520752
    4. '((' → logprob: -6.762718677520752
    5. ' -' → logprob: -7.387718677520752
    6. '(' → logprob: -7.762718677520752
    7. '-' → logprob: -7.887718677520752
    8. ' ((' → logprob: -8.137718200683594
    9. 'a' → logprob: -9.262718200683594
    10. '   ' → logprob: -9.387718200683594

Token 141: ' arr' (ID: 1724)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -1.1099995374679565
    2. '((' → logprob: -1.3599995374679565
    3. '(a' → logprob: -1.7349995374679565
    4. '-' → logprob: -2.984999656677246
    5. 'e' → logprob: -2.984999656677246
    6. '(' → logprob: -3.359999656677246
    7. ' -' → logprob: -3.359999656677246
    8. ' ((' → logprob: -3.859999656677246
    9. 'div' → logprob: -4.484999656677246
    10. '
' → logprob: -4.734999656677246

Token 142: 'ondi' (ID: 117409)
  Prédit: 'ondi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ondi' → logprob: -0.1918027698993683
    2. 'ond' → logprob: -1.816802740097046
    3. 'ondissement' → logprob: -4.441802978515625
    4. 'on' → logprob: -9.066802978515625
    5. 'onnement' → logprob: -10.191802978515625
    6. 'ont' → logprob: -10.691802978515625
    7. 'angement' → logprob: -12.191802978515625
    8. '   ' → logprob: -12.316802978515625
    9. 'ound' → logprob: -12.816802978515625
    10. '```' → logprob: -13.066802978515625

Token 143: ' par' (ID: 686)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8888252973556519
    2. ' supérieur' → logprob: -1.5138252973556519
    3. 'up' → logprob: -2.2638254165649414
    4. ' ' → logprob: -2.6388254165649414
    5. ' vers' → logprob: -3.0138254165649414
    6. 'sup' → logprob: -3.5138254165649414
    7. ' au' → logprob: -3.6388254165649414
    8. 'au' → logprob: -3.7638254165649414
    9. '  ' → logprob: -4.388825416564941
    10. ' à' → logprob: -4.513825416564941

Token 144: ' exc' (ID: 3529)
  Prédit: 'exc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exc' → logprob: -0.6169712543487549
    2. 'pl' → logprob: -1.6169712543487549
    3. ' exc' → logprob: -1.6169712543487549
    4. 'sup' → logprob: -3.491971254348755
    5. 'ex' → logprob: -4.866971015930176
    6. '   ' → logprob: -5.366971015930176
    7. ' ' → logprob: -5.491971015930176
    8. 'def' → logprob: -5.616971015930176
    9. 'su' → logprob: -6.116971015930176
    10. 's' → logprob: -6.741971015930176

Token 145: 'ès' (ID: 4119)
  Prédit: 'ès'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ès' → logprob: -0.14242985844612122
    2. 'ess' → logprob: -2.142429828643799
    3. 'ces' → logprob: -4.892429828643799
    4. 'cess' → logprob: -6.767429828643799
    5. 's' → logprob: -6.892429828643799
    6. 'c' → logprob: -7.142429828643799
    7. 'ss' → logprob: -7.142429828643799
    8. '`' → logprob: -7.267429828643799
    9. 'es' → logprob: -7.267429828643799
    10. ' ess' → logprob: -7.642429828643799

Token 146: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.044615261256694794
    2. ' (' → logprob: -3.9196152687072754
    3. '(' → logprob: -4.669615268707275
    4. ')' → logprob: -5.544615268707275
    5. '    ' → logprob: -5.669615268707275
    6. 'def' → logprob: -6.544615268707275
    7. '(a' → logprob: -7.419615268707275
    8. '+' → logprob: -7.544615268707275
    9. 'a' → logprob: -7.669615268707275
    10. 'return' → logprob: -7.794615268707275

Token 147: ' a' (ID: 261)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.6442294120788574
    2. ' (' → logprob: -1.1442294120788574
    3. 'a' → logprob: -2.0192294120788574
    4. ' a' → logprob: -4.769229412078857
    5. 'b' → logprob: -5.769229412078857
    6. '(b' → logprob: -5.769229412078857
    7. 'division' → logprob: -6.019229412078857
    8. ' la' → logprob: -6.144229412078857
    9. '(' → logprob: -6.519229412078857
    10. 'div' → logprob: -7.269229412078857

Token 148: '/b' (ID: 7611)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5694453716278076
    2. '+b' → logprob: -0.9444453716278076
    3. ' plus' → logprob: -3.5694453716278076
    4. '+' → logprob: -4.819445610046387
    5. 'plus' → logprob: -5.069445610046387
    6. ' +
' → logprob: -7.944445610046387
    7. 'b' → logprob: -7.944445610046387
    8. ' ' → logprob: -7.944445610046387
    9. '_plus' → logprob: -8.069445610046387
    10. ')' → logprob: -8.069445610046387

Token 149: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004879942629486322
    2. 'return' → logprob: -6.129879951477051
    3. ' return' → logprob: -6.754879951477051
    4. '
' → logprob: -6.879879951477051
    5. '    
' → logprob: -8.62987995147705
    6. 'def' → logprob: -9.50487995147705
    7. 'result' → logprob: -9.62987995147705
    8. ')' → logprob: -10.12987995147705
    9. '    ' → logprob: -10.62987995147705
    10. '   
' → logprob: -10.75487995147705

Token 150: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0036645643413066864
    2. ' return' → logprob: -6.378664493560791
    3. 'return' → logprob: -6.628664493560791
    4. '    ' → logprob: -8.12866497039795
    5. 'def' → logprob: -8.62866497039795
    6. 'result' → logprob: -10.50366497039795
    7. '```' → logprob: -10.87866497039795
    8. '       ' → logprob: -10.87866497039795
    9. '    
' → logprob: -11.12866497039795
    10. ' (' → logprob: -11.25366497039795

Token 151: ' result' (ID: 1534)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0290757417678833
    2. ' return' → logprob: -1.2790757417678833
    3. 'return' → logprob: -1.5290757417678833
    4. 'result' (adapté à ' result') → logprob: -2.2790756225585938
    5. ' result' → logprob: -3.2790756225585938
    6. 'print' → logprob: -5.779075622558594
    7. ' (' → logprob: -6.404075622558594
    8. ' print' → logprob: -7.404075622558594
    9. '```' → logprob: -8.154075622558594
    10. 'c' → logprob: -8.154075622558594

Token 152: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.009785366244614124
    2. '=' → logprob: -4.634785175323486
    3. ' ' → logprob: -11.384785652160645
    4. ' =
' → logprob: -11.759785652160645
    5. 's' → logprob: -12.134785652160645
    6. ')' → logprob: -13.634785652160645
    7. ' ' → logprob: -14.009785652160645
    8. '  ' → logprob: -14.884785652160645
    9. '   ' → logprob: -14.884785652160645
    10. '1' → logprob: -15.009785652160645

Token 153: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.4289994239807129
    2. '(a' → logprob: -1.053999423980713
    3. '   ' → logprob: -8.678998947143555
    4. ' ' → logprob: -9.678998947143555
    5. '((' → logprob: -10.803998947143555
    6. '(' → logprob: -11.303998947143555
    7. '  ' → logprob: -11.303998947143555
    8. '(A' → logprob: -11.428998947143555
    9. ' ((' → logprob: -12.303998947143555
    10. '(b' → logprob: -13.053998947143555

Token 154: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00010628487507347018
    2. ' a' → logprob: -9.750105857849121
    3. '(a' → logprob: -10.000105857849121
    4. '   ' → logprob: -13.125105857849121
    5. ' (' → logprob: -15.750105857849121
    6. '	a' → logprob: -16.625106811523438
    7. ' ' → logprob: -16.625106811523438
    8. ')a' → logprob: -16.750106811523438
    9. '(' → logprob: -17.125106811523438
    10. ')' → logprob: -17.375106811523438

Token 155: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.030303901061415672
    2. '+' → logprob: -3.530303955078125
    3. '+b' → logprob: -7.530303955078125
    4. ' plus' → logprob: -12.155303955078125
    5. ' ' → logprob: -12.655303955078125
    6. '+a' → logprob: -13.030303955078125
    7. '+B' → logprob: -13.780303955078125
    8. '   ' → logprob: -13.780303955078125
    9. ' +
' → logprob: -14.155303955078125
    10. 'a' → logprob: -14.155303955078125

Token 156: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.011058665812015533
    2. ' b' → logprob: -4.511058807373047
    3. '(b' → logprob: -12.136058807373047
    4. ' (' → logprob: -12.511058807373047
    5. ' ' → logprob: -14.136058807373047
    6. '   ' → logprob: -14.261058807373047
    7. '(' → logprob: -15.511058807373047
    8. '	b' → logprob: -16.011058807373047
    9. '
' → logprob: -17.261058807373047
    10. ')b' → logprob: -17.386058807373047

Token 157: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.1604783833026886
    2. '-' → logprob: -1.9104783535003662
    3. ')' → logprob: -9.035478591918945
    4. ' ' → logprob: -9.160478591918945
    5. '1' → logprob: -11.535478591918945
    6. '   ' → logprob: -11.910478591918945
    7. ' )' → logprob: -12.660478591918945
    8. '  ' → logprob: -13.160478591918945
    9. '
' → logprob: -13.285478591918945
    10. 'b' → logprob: -13.285478591918945

Token 158: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002185472520068288
    2. ' ' → logprob: -6.127185344696045
    3. '   ' → logprob: -15.627185821533203
    4. '<|end|>' → logprob: -16.252185821533203
    5. '```' → logprob: -17.252185821533203
    6. '  ' → logprob: -17.252185821533203
    7. ')' → logprob: -17.502185821533203
    8. '１' → logprob: -18.627185821533203
    9. '۱' → logprob: -18.752185821533203
    10. ' ' → logprob: -18.877185821533203

Token 159: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.836499985889532e-05
    2. ' ' → logprob: -9.7500581741333
    3. '۱' → logprob: -18.375059127807617
    4. '   ' → logprob: -18.500059127807617
    5. '2' → logprob: -18.625059127807617
    6. '<|end|>' → logprob: -18.625059127807617
    7. ')' → logprob: -18.750059127807617
    8. '１' → logprob: -19.000059127807617
    9. '  ' → logprob: -19.125059127807617
    10. '```' → logprob: -19.500059127807617

Token 160: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004354373668320477
    2. ' )' → logprob: -7.8754353523254395
    3. ')//' → logprob: -9.875435829162598
    4. '   ' → logprob: -13.500435829162598
    5. ')
' → logprob: -14.000435829162598
    6. '//' → logprob: -14.125435829162598
    7. ' //' → logprob: -15.250435829162598
    8. ' ' → logprob: -15.625435829162598
    9. '#' → logprob: -16.00043487548828
    10. '）' → logprob: -16.37543487548828

Token 161: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.03414351865649223
    2. ')' → logprob: -3.6591434478759766
    3. '//' → logprob: -4.909143447875977
    4. ' ' → logprob: -8.284143447875977
    5. ' )' → logprob: -8.909143447875977
    6. ')//' → logprob: -11.034143447875977
    7. '   ' → logprob: -11.534143447875977
    8. '```' → logprob: -11.784143447875977
    9. ' ' → logprob: -13.034143447875977
    10. ']' → logprob: -13.159143447875977

Token 162: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0004307884373702109
    2. ' b' → logprob: -7.750430583953857
    3. '	b' → logprob: -16.875431060791016
    4. '<|end|>' → logprob: -17.500431060791016
    5. '   ' → logprob: -18.000431060791016
    6. ' ' → logprob: -19.375431060791016
    7. ')b' → logprob: -20.250431060791016
    8. '>b' → logprob: -20.375431060791016
    9. 'B' → logprob: -21.125431060791016
    10. '  ' → logprob: -21.375431060791016

Token 163: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002632257528603077
    2. '
' → logprob: -6.377632141113281
    3. 'print' → logprob: -7.127632141113281
    4. '    
' → logprob: -9.002632141113281
    5. ' print' → logprob: -13.502632141113281
    6. '```' → logprob: -14.002632141113281
    7. '  
' → logprob: -14.377632141113281
    8. '
' → logprob: -15.127632141113281
    9. '   
' → logprob: -15.252632141113281
    10. '   ' → logprob: -15.627632141113281

Token 164: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006773988250643015
    2. 'print' → logprob: -5.006773948669434
    3. '
' → logprob: -10.381773948669434
    4. '    
' → logprob: -10.881773948669434
    5. ' print' → logprob: -11.756773948669434
    6. '```' → logprob: -14.381773948669434
    7. '  
' → logprob: -16.63177490234375
    8. '	print' → logprob: -16.63177490234375
    9. '  ' → logprob: -16.75677490234375
    10. '   ' → logprob: -16.88177490234375

Token 165: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47412288188934326
    2. 'print' → logprob: -0.9741228818893433
    3. ' print' → logprob: -10.224123001098633
    4. '```' → logprob: -11.724123001098633
    5. '
' → logprob: -14.724123001098633
    6. '	print' → logprob: -14.849123001098633
    7. '  ' → logprob: -15.224123001098633
    8. '    
' → logprob: -15.349123001098633
    9. '    ' → logprob: -16.849123001098633
    10. '   ' → logprob: -16.974123001098633

Token 166: ' Aff' (ID: 13741)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.1602420061826706
    2. ' print' → logprob: -1.910241961479187
    3. '   ' → logprob: -11.035242080688477
    4. '```' → logprob: -13.410242080688477
    5. '	print' → logprob: -16.660242080688477
    6. 'Print' → logprob: -16.910242080688477
    7. ' ' → logprob: -17.160242080688477
    8. 'aff' → logprob: -17.910242080688477
    9. '  ' → logprob: -18.035242080688477
    10. '    ' → logprob: -18.160242080688477

Token 167: 'ichage' (ID: 118475)
  Prédit: 'iche'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iche' → logprob: -0.2758887708187103
    2. 'icher' → logprob: -1.5258888006210327
    3. 'ichage' → logprob: -3.775888681411743
    4. '   ' → logprob: -7.400888919830322
    5. '#' → logprob: -9.400888442993164
    6. 'ich' → logprob: -10.900888442993164
    7. 'ic' → logprob: -11.525888442993164
    8. '```' → logprob: -12.275888442993164
    9. 'iché' → logprob: -12.400888442993164
    10. '  ' → logprob: -12.400888442993164

Token 168: ' du' (ID: 1462)
  Prédit: '(result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.5768876671791077
    2. '(' → logprob: -0.8268876671791077
    3. 'result' → logprob: -7.201887607574463
    4. '   ' → logprob: -9.201888084411621
    5. '(
' → logprob: -9.576888084411621
    6. ' (' → logprob: -11.576888084411621
    7. '(print' → logprob: -12.076888084411621
    8. ' result' → logprob: -12.326888084411621
    9. '()' → logprob: -12.451888084411621
    10. '(res' → logprob: -13.326888084411621

Token 169: ' résultat' (ID: 62556)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.0024763736873865128
    2. ' result' → logprob: -6.002476215362549
    3. ' résultat' → logprob: -15.252476692199707
    4. ' resultat' → logprob: -15.502476692199707
    5. 'rés' → logprob: -16.00247573852539
    6. 'r' → logprob: -17.12747573852539
    7. 'res' → logprob: -17.37747573852539
    8. 'print' → logprob: -17.62747573852539
    9. 'resultado' → logprob: -17.75247573852539
    10. 'results' → logprob: -20.25247573852539

Token 170: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18195044994354248
    2. 'print' → logprob: -2.181950569152832
    3. ' print' → logprob: -2.931950569152832
    4. '
' → logprob: -8.431950569152832
    5. '    
' → logprob: -11.806950569152832
    6. '	print' → logprob: -12.306950569152832
    7. '```' → logprob: -12.431950569152832
    8. ' ' → logprob: -13.181950569152832
    9. '\n' → logprob: -13.431950569152832
    10. '  ' → logprob: -13.431950569152832

Token 171: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07903828471899033
    2. ' print' → logprob: -2.829038381576538
    3. 'print' → logprob: -4.079038143157959
    4. '```' → logprob: -13.704038619995117
    5. '
' → logprob: -14.454038619995117
    6. '	print' → logprob: -15.704038619995117
    7. '   ' → logprob: -16.079038619995117
    8. '.print' → logprob: -17.204038619995117
    9. '    
' → logprob: -17.204038619995117
    10. '    ' → logprob: -17.954038619995117

Token 172: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0019299437990412116
    2. ' print' → logprob: -6.251929759979248
    3. '   ' → logprob: -13.626930236816406
    4. '```' → logprob: -16.376930236816406
    5. 'pr' → logprob: -20.876930236816406
    6. '	print' → logprob: -21.626930236816406
    7. 'prin' → logprob: -22.626930236816406
    8. '    ' → logprob: -22.876930236816406
    9. '`' → logprob: -23.001930236816406
    10. '(print' → logprob: -23.001930236816406

Token 173: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.01815216802060604
    2. '(' → logprob: -4.018152236938477
    3. 'result' → logprob: -13.268152236938477
    4. ' (' → logprob: -15.518152236938477
    5. '(results' → logprob: -16.768152236938477
    6. '(
' → logprob: -16.768152236938477
    7. '(resultado' → logprob: -16.768152236938477
    8. '(res' → logprob: -16.893152236938477
    9. '(Result' → logprob: -17.268152236938477
    10. '()' → logprob: -17.393152236938477

Token 174: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.173704271830502e-06
    2. ' )' → logprob: -12.75000286102295
    3. ')
' → logprob: -15.50000286102295
    4. ')`' → logprob: -18.250003814697266
    5. '))' → logprob: -18.375003814697266
    6. '()' → logprob: -18.875003814697266
    7. '')' → logprob: -19.750003814697266
    8. '）' → logprob: -20.375003814697266
    9. '`)' → logprob: -20.500003814697266
    10. ' ' → logprob: -20.500003814697266

Token 175: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 176: ' App' (ID: 2583)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.8132205009460449
    2. '#' → logprob: -1.813220500946045
    3. '<|end|>' → logprob: -2.563220500946045
    4. '```' → logprob: -2.688220500946045
    5. ')' → logprob: -2.938220500946045
    6. '(' → logprob: -3.063220500946045
    7. '
' → logprob: -3.188220500946045
    8. 'def' → logprob: -3.813220500946045
    9. '\n' → logprob: -4.063220500946045
    10. '\' → logprob: -4.188220500946045

Token 177: 'elle' (ID: 3486)
  Prédit: 'el'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'el' → logprob: -0.05637161061167717
    2. '_' → logprob: -3.1813716888427734
    3. 'ly' → logprob: -5.181371688842773
    4. 'e' → logprob: -7.056371688842773
    5. 'lication' → logprob: -7.181371688842773
    6. '__' → logprob: -7.181371688842773
    7. 'l' → logprob: -7.306371688842773
    8. 'eel' → logprob: -7.431371688842773
    9. '```' → logprob: -7.556371688842773
    10. 'elif' → logprob: -7.681371688842773

Token 178: ' la' (ID: 557)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.001372218132019
    2. 'ceil' → logprob: -1.001372218132019
    3. '()' → logprob: -1.751372218132019
    4. ' ceil' → logprob: -2.7513723373413086
    5. 'def' → logprob: -3.8763723373413086
    6. '   ' → logprob: -7.001372337341309
    7. ' (' → logprob: -7.001372337341309
    8. 'er' → logprob: -7.126372337341309
    9. 'd' → logprob: -7.376372337341309
    10. 'ur' → logprob: -7.501372337341309

Token 179: ' fonction' (ID: 17610)
  Prédit: 'ceil'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ceil' → logprob: -0.0001544321421533823
    2. ' ceil' → logprob: -9.000154495239258
    3. 'def' → logprob: -11.500154495239258
    4. 'fonction' → logprob: -12.250154495239258
    5. 'function' → logprob: -12.375154495239258
    6. 'cel' → logprob: -12.875154495239258
    7. 'func' → logprob: -13.125154495239258
    8. 'main' → logprob: -13.750154495239258
    9. 'floor' → logprob: -13.750154495239258
    10. '#' → logprob: -13.875154495239258

Token 180: ' principale' (ID: 68926)
  Prédit: 'ceil'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ceil' → logprob: -0.0031954164151102304
    2. '
' → logprob: -5.753195285797119
    3. ' ceil' → logprob: -12.128195762634277
    4. '

' → logprob: -12.753195762634277
    5. '\' → logprob: -13.003195762634277
    6. '
' → logprob: -13.378195762634277
    7. '()
' → logprob: -13.753195762634277
    8. '\
' → logprob: -13.878195762634277
    9. '\n' → logprob: -14.128195762634277
    10. '.ceil' → logprob: -14.253195762634277

Token 181: ' pour' (ID: 1930)
  Prédit: 'ceil'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ceil' → logprob: -0.009808745235204697
    2. '
' → logprob: -4.634808540344238
    3. '

' → logprob: -10.759808540344238
    4. ' ceil' → logprob: -11.509808540344238
    5. '
' → logprob: -12.009808540344238
    6. '\' → logprob: -12.634808540344238
    7. '  
' → logprob: -13.009808540344238
    8. '\
' → logprob: -13.009808540344238
    9. ' 
' → logprob: -13.134808540344238
    10. '.ceil' → logprob: -13.634808540344238

Token 182: ' ex' (ID: 513)
  Prédit: 'ceil'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ceil' → logprob: -0.5119218230247498
    2. 'ex' → logprob: -1.2619218826293945
    3. ' ceil' → logprob: -3.1369218826293945
    4. ' ex' → logprob: -3.7619218826293945
    5. 'execute' → logprob: -4.7619218826293945
    6. ' execut' → logprob: -5.0119218826293945
    7. 'execut' → logprob: -5.0119218826293945
    8. ' effectuer' → logprob: -5.2619218826293945
    9. 'exec' → logprob: -5.3869218826293945
    10. 'run' → logprob: -6.6369218826293945

Token 183: 'éc' (ID: 5675)
  Prédit: 'éc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'éc' → logprob: -0.07459153234958649
    2. 'é' → logprob: -2.824591636657715
    3. 'ecut' → logprob: -5.574591636657715
    4. 'ec' → logprob: -5.699591636657715
    5. 'écution' → logprob: -5.824591636657715
    6. 'cut' → logprob: -7.449591636657715
    7. 'e' → logprob: -7.574591636657715
    8. 'écut' → logprob: -7.824591636657715
    9. '#' → logprob: -8.074591636657715
    10. 'è' → logprob: -8.449591636657715

Token 184: 'uter' (ID: 23469)
  Prédit: 'cut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cut' → logprob: -0.03086133860051632
    2. 'éc' → logprob: -4.7808613777160645
    3. 'c' → logprob: -5.0308613777160645
    4. '#' → logprob: -5.1558613777160645
    5. 'uter' → logprob: -5.2808613777160645
    6. '```' → logprob: -6.7808613777160645
    7. 'cute' → logprob: -7.0308613777160645
    8. 'é' → logprob: -7.9058613777160645
    9. '́' → logprob: -8.280860900878906
    10. 'érer' → logprob: -8.655860900878906

Token 185: ' le' (ID: 505)
  Prédit: 'ceil'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ceil' → logprob: -0.0007107630372047424
    2. ' ceil' → logprob: -7.250710964202881
    3. '.ceil' → logprob: -15.375710487365723
    4. 'floor' → logprob: -15.625710487365723
    5. 'cel' → logprob: -16.25071144104004
    6. '```' → logprob: -16.50071144104004
    7. '
' → logprob: -16.62571144104004
    8. '\' → logprob: -17.50071144104004
    9. 'endl' → logprob: -17.62571144104004
    10. 'ce' → logprob: -17.75071144104004

Token 186: ' calcul' (ID: 7559)
  Prédit: 'code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'code' → logprob: -0.5719079375267029
    2. 'script' → logprob: -1.5719079971313477
    3. 'programme' → logprob: -1.6969079971313477
    4. 'calcul' → logprob: -4.446907997131348
    5. 'ceil' → logprob: -4.571907997131348
    6. ' script' → logprob: -4.696907997131348
    7. ' code' → logprob: -4.821907997131348
    8. ' programme' → logprob: -5.821907997131348
    9. 'program' → logprob: -7.071907997131348
    10. '_code' → logprob: -8.196907997131348

Token 187: '
' (ID: 198)
  Prédit: 'ceil'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ceil' → logprob: -0.38731634616851807
    2. '
' → logprob: -1.137316346168518
    3. '

' → logprob: -8.387316703796387
    4. '
' → logprob: -8.887316703796387
    5. '  
' → logprob: -11.637316703796387
    6. '\
' → logprob: -11.762316703796387
    7. ' ceil' → logprob: -11.887316703796387
    8. '()
' → logprob: -12.012316703796387
    9. '\' → logprob: -12.012316703796387
    10. ' 
' → logprob: -12.137316703796387

Token 188: 'ceil' (ID: 43552)
  Prédit: 'ceil'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ceil' → logprob: 0.0
    2. ' ceil' → logprob: -16.875
    3. 'if' → logprob: -18.375
    4. '.ceil' → logprob: -18.875
    5. 'cel' → logprob: -19.5
    6. 'floor' → logprob: -19.75
    7. '```' → logprob: -19.875
    8. 'ce' → logprob: -21.375
    9. 'cei' → logprob: -21.5
    10. 'ceed' → logprob: -22.25

Token 189: '_div' (ID: 36926)
  Prédit: '_div'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_div' → logprob: -3.5120287066092715e-05
    2. '_' → logprob: -10.375035285949707
    3. '_def' → logprob: -13.000035285949707
    4. '_DIV' → logprob: -15.000035285949707
    5. '_d' → logprob: -15.500035285949707
    6. '_ce' → logprob: -15.625035285949707
    7. '_floor' → logprob: -15.750035285949707
    8. ' _' → logprob: -16.12503433227539
    9. '_del' → logprob: -16.25003433227539
    10. '_de' → logprob: -16.62503433227539

Token 190: 'ision' (ID: 3625)
  Prédit: 'ision'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ision' → logprob: -0.09002315253019333
    2. '_div' → logprob: -2.4650230407714844
    3. 'is' → logprob: -7.465023040771484
    4. '_is' → logprob: -8.965023040771484
    5. '_' → logprob: -9.590023040771484
    6. 's' → logprob: -10.090023040771484
    7. 'division' → logprob: -10.215023040771484
    8. '_function' → logprob: -10.340023040771484
    9. 'e' → logprob: -10.840023040771484
    10. '_definition' → logprob: -10.965023040771484

Token 191: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -0.0004990590969100595
    2. '_' → logprob: -7.625499248504639
    3. '_de' → logprob: -12.37549877166748
    4. '_div' → logprob: -13.00049877166748
    5. '_def' → logprob: -14.25049877166748
    6. ' _' → logprob: -14.62549877166748
    7. '_for' → logprob: -14.62549877166748
    8. '_o' → logprob: -14.87549877166748
    9. '_off' → logprob: -15.25049877166748
    10. '```' → logprob: -15.25049877166748

Token 192: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.0002619318547658622
    2. 'sum' → logprob: -9.250262260437012
    3. '_of' → logprob: -9.375262260437012
    4. '_' → logprob: -9.500262260437012
    5. '_s' → logprob: -13.375262260437012
    6. 'of' → logprob: -13.625262260437012
    7. '_div' → logprob: -14.375262260437012
    8. '_floor' → logprob: -14.375262260437012
    9. 'ceil' → logprob: -14.500262260437012
    10. ')' → logprob: -15.000262260437012

Token 193: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -8.923874702304602e-05
    2. '_' → logprob: -10.250089645385742
    3. '`()' → logprob: -11.000089645385742
    4. ']()' → logprob: -11.625089645385742
    5. '(' → logprob: -12.000089645385742
    6. '_of' → logprob: -12.375089645385742
    7. '|()
' → logprob: -12.625089645385742
    8. ' ()' → logprob: -12.625089645385742
    9. '()
' → logprob: -12.875089645385742
    10. '()`' → logprob: -13.625089645385742


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 191
Tokens correctement prédits (1ère position, stricte): 64
Tokens correctement prédits (1ère position, avec adaptation): 66
Tokens correctement prédits (top 10): 125
Précision stricte (1ère position): 33.51%
Précision adaptée (1ère position): 34.55%
Précision (top 10): 65.45%
================================================================================
