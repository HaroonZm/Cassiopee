================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:33:29
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import itertools  # Importe le module 'itertools', qui fournit des fonctions créant des itérateurs pour un traitement efficace des boucles.
import math       # Importe le module 'math', qui offre des fonctions mathématiques comme sqrt, log, etc.
import sys        # Importe le module 'sys', qui permet d'interagir avec l'interpréteur Python et de manipuler des aspects système.
import heapq      # Importe le module 'heapq', qui fournit des fonctions pour créer et manipuler des tas binaires (heaps).
from collections import Counter  # Importe la classe 'Counter' du module 'collections', qui compte les éléments dans des objets itérables.
from collections import deque    # Importe la classe 'deque' pour créer des files d'attente à accès rapide en FIFO/LIFO.
from fractions import gcd        # Importe la fonction gcd (greatest common divisor) pour calculer le plus grand commun diviseur de deux nombres.
INF = 1 << 60  # Définit une grande valeur constante, utilisée généralement pour représenter l'infini. Ici, c'est 2^60.
sys.setrecursionlimit(10 ** 6)  # Définit la limite de récursion de Python à un million pour éviter les erreurs de récursion dans des cas profonds.

# Début du corps principal du programme (section où résoudre le problème principal).
# Récupère deux entiers n et k à partir de l'entrée standard.
n, k = map(int, input().split())  # split() sépare la ligne d'entrée sur les espaces, map applique int() à chaque partie.

# Récupère trois entiers r, s, p. Ces variables représentent les points attribués pour jouer 'rock', 'scissors', 'paper'.
r, s, p = map(int, input().split())  # Lecture et affectation simultanées des trois valeurs depuis l'entrée.

# Récupère une chaîne t depuis l'entrée standard, représentant la séquence des actions adverses ('r','s','p').
t = input()  # Le contenu de t sera itéré plus loin pour déterminer les actions à choisir.

a = ""  # Initialise la chaîne a, qui contiendra la séquence de nos actions optimalement choisies.
# Pour chaque caractère (chaque coup de l'adversaire) dans la chaîne t (boucle sur l'adversaire).
for i in t:
    if i == "r":        # Si l'adversaire a joué 'rock' ("r"),
        a += "p"        # alors on joue 'paper' ("p"), car paper bat rock.
    elif i == "s":      # Sinon si l'adversaire a joué 'scissors' ("s"),
        a += "r"        # alors on joue 'rock' ("r"), car rock bat scissors.
    else:               # Sinon, l'adversaire a joué 'paper' ("p")
        a += "s"        # alors on joue 'scissors' ("s"), car scissors bat paper.

ans = 0  # Initialise la variable 'ans', qui contiendra le score total obtenu.

# Pour chaque caractère (coup choisi) dans 'a' (la liste de nos coups optimaux sans contrainte sur les doublons espacés de k).
for i in a:
    if i == "r":        # Si on a joué 'rock' ("r")
        ans += r        # On ajoute le score attribué à 'rock' à la réponse totale.
    elif i == "s":      # Sinon si on a joué 'scissors' ("s")
        ans += s        # On ajoute le score de 'scissors'.
    else:               # Sinon, on a joué 'paper' ("p")
        ans += p        # On ajoute le score de 'paper'.
# Note : À ce stade, tous les coups sont traités comme indépendants. On va compenser ensuite si la contrainte de non-répétition k s'applique.

# Pour gérer la contrainte : on ne peut pas gagner en utilisant le même coup que k coups avant.
# On parcourt l'indexi des coups, en commençant à k (ici, on commence après les k premiers coups car on ne peut pas vérifier pour les premiers).
for i in range(k, n):       # Pour chaque index i allant de k jusqu'à n-1 (noter que range s'arrête avant n).
    if a[i] == a[i - k]:    # Si le coup à l'index i est le même que celui à l'index i-k (le coup précédent dans la même sous-séquence de modulo k)
        # On a donc utilisé le même coup qu'il y a k coups, ce qui n'est pas permis pour scorer.
        if a[i] == "r":     # Si le coup interdit est 'rock', 
            ans -= r        # On soustrait le score r car ce point ne doit pas être compté.
        elif a[i] == "s":   # Si c'est 'scissors',
            ans -= s        # On soustrait le score s.
        else:               # Si c'est 'paper',
            ans -= p        # On soustrait le score p.
        # On modifie le coup à l'index i dans la chaîne a pour ne pas compter ce coup plusieurs fois à l'avenir.
        # Comme les chaînes sont immuables en Python, on crée une nouvelle chaîne identique, sauf à l'index i où on met un caractère arbitraire ("a" ici).
        a = a[:i] + "a" + a[i + 1:]  # Ceci empêche de décompter deux fois sur des séquences à distance k multiples.
        
print(ans)  # Affiche enfin le score total obtenu après avoir appliqué la contrainte de non-répétition à distance k.
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' itertools' (ID: 103178)
  → Token d'amorce (pas de prédiction)

Token 2: ' ' (ID: 220)
  → Token d'amorce (pas de prédiction)

Token 3: ' #' (ID: 1069)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -4.966313281329349e-05
    2. 'import' → logprob: -11.000049591064453
    3. '.import' → logprob: -11.875049591064453
    4. '```' → logprob: -12.875049591064453
    5. '(' → logprob: -13.375049591064453
    6. '.​' → logprob: -13.625049591064453
    7. ' .' → logprob: -13.625049591064453
    8. '\' → logprob: -13.750049591064453
    9. '.period' → logprob: -13.750049591064453
    10. '.for' → logprob: -14.125049591064453

Token 4: ' Im' (ID: 3133)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.36519962549209595
    2. ' itertools' → logprob: -1.6151995658874512
    3. ' .' → logprob: -2.990199565887451
    4. ' import' → logprob: -3.240199565887451
    5. '.' → logprob: -5.115199565887451
    6. ' from' → logprob: -6.115199565887451
    7. ' is' → logprob: -6.240199565887451
    8. ' ,' → logprob: -6.865199565887451
    9. ' space' → logprob: -6.990199565887451
    10. 'import' → logprob: -6.990199565887451

Token 5: 'porte' (ID: 17761)
  Prédit: 'port'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'port' → logprob: -0.00043639098294079304
    2. 'p' → logprob: -9.250436782836914
    3. 'ported' → logprob: -9.375436782836914
    4. 'ports' → logprob: -9.500436782836914
    5. 'por' → logprob: -9.750436782836914
    6. 'porter' → logprob: -10.375436782836914
    7. 'rt' → logprob: -10.750436782836914
    8. 'portable' → logprob: -11.250436782836914
    9. 'import' → logprob: -11.375436782836914
    10. 't' → logprob: -11.500436782836914

Token 6: ' le' (ID: 505)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.007434708531945944
    2. 'd' → logprob: -5.507434844970703
    3. 'n' → logprob: -6.882434844970703
    4. 'rn' → logprob: -8.007434844970703
    5. 'space' → logprob: -8.007434844970703
    6. 's' → logprob: -8.257434844970703
    7. ' ' → logprob: -8.382434844970703
    8. 'ration' → logprob: -8.632434844970703
    9. ' ```' → logprob: -9.007434844970703
    10. '```' → logprob: -9.007434844970703

Token 7: ' module' (ID: 8827)
  Prédit: ' module'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' module' → logprob: -0.09053146094083786
    2. 's' → logprob: -2.965531349182129
    3. ' ' → logprob: -4.840531349182129
    4. ' s' → logprob: -5.090531349182129
    5. 'module' → logprob: -5.215531349182129
    6. ' code' → logprob: -5.340531349182129
    7. ' space' → logprob: -6.965531349182129
    8. ' a' → logprob: -7.090531349182129
    9. ' cycle' → logprob: -7.215531349182129
    10. ' package' → logprob: -7.340531349182129

Token 8: ' '' (ID: 461)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.1913975477218628
    2. ' as' → logprob: -2.4413976669311523
    3. 'it' → logprob: -3.5663976669311523
    4. ' itertools' → logprob: -4.066397666931152
    5. ' .' → logprob: -4.191397666931152
    6. 'import' → logprob: -5.191397666931152
    7. 'as' → logprob: -5.316397666931152
    8. ',' → logprob: -6.066397666931152
    9. 'from' → logprob: -6.316397666931152
    10. ' ' → logprob: -6.316397666931152

Token 9: 'it' (ID: 278)
  Prédit: ' itertools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.10500741750001907
    2. 'it' → logprob: -2.8550074100494385
    3. ' ' → logprob: -4.230007648468018
    4. '```' → logprob: -5.480007648468018
    5. ' ' → logprob: -6.105007648468018
    6. ''' → logprob: -6.230007648468018
    7. 'import' → logprob: -6.355007648468018
    8. 'os' → logprob: -6.355007648468018
    9. '`' → logprob: -6.605007648468018
    10. 'python' → logprob: -7.042507648468018

Token 10: 'ertools' (ID: 88385)
  Prédit: 'ertools'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ertools' → logprob: -0.005619093310087919
    2. 'ert' → logprob: -5.755619049072266
    3. 'er' → logprob: -6.130619049072266
    4. 'tools' → logprob: -8.630619049072266
    5. 'erto' → logprob: -10.005619049072266
    6. 'r' → logprob: -10.505619049072266
    7. 'ools' → logprob: -12.755619049072266
    8. 'rt' → logprob: -13.630619049072266
    9. 'e' → logprob: -13.880619049072266
    10. 'ter' → logprob: -14.255619049072266

Token 11: '',' (ID: 787)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.9342747926712036
    2. ''' → logprob: -1.4342747926712036
    3. ')' → logprob: -1.4342747926712036
    4. '```' → logprob: -2.809274673461914
    5. 'import' → logprob: -3.559274673461914
    6. '')' → logprob: -3.684274673461914
    7. ',' → logprob: -5.934274673461914
    8. '`' → logprob: -6.434274673461914
    9. '.import' → logprob: -6.434274673461914
    10. ''import' → logprob: -6.684274673461914

Token 12: ' qui' (ID: 2780)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.870225191116333
    2. '.' → logprob: -1.495225191116333
    3. 'import' → logprob: -1.620225191116333
    4. ' ,' → logprob: -3.870225191116333
    5. ' ' → logprob: -3.995225191116333
    6. ' import' → logprob: -4.120224952697754
    7. ' which' → logprob: -4.370224952697754
    8. ' as' → logprob: -4.745224952697754
    9. ' qui' → logprob: -4.745224952697754
    10. ' pour' → logprob: -4.745224952697754

Token 13: ' fournit' (ID: 123615)
  Prédit: ' fournit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fournit' → logprob: -0.17853526771068573
    2. ' est' → logprob: -2.928535223007202
    3. ' ' → logprob: -3.678535223007202
    4. ' permet' → logprob: -3.803535223007202
    5. ' contient' → logprob: -4.178535461425781
    6. ' .' → logprob: -4.553535461425781
    7. ' offre' → logprob: -4.803535461425781
    8. '.' → logprob: -4.928535461425781
    9. 'provid' → logprob: -5.553535461425781
    10. ' provides' → logprob: -5.928535461425781

Token 14: ' des' (ID: 731)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5277532339096069
    2. ' ' → logprob: -1.277753233909607
    3. ' .' → logprob: -3.1527533531188965
    4. '<|end|>' → logprob: -3.9027533531188965
    5. '  ' → logprob: -4.0277533531188965
    6. ',' → logprob: -4.7777533531188965
    7. '```' → logprob: -4.9027533531188965
    8. ' ,' → logprob: -5.5277533531188965
    9. ''' → logprob: -5.6527533531188965
    10. ' itertools' → logprob: -6.1527533531188965

Token 15: ' fonctions' (ID: 87283)
  Prédit: 'out'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'out' → logprob: -0.9220361709594727
    2. ' outils' → logprob: -1.1720361709594727
    3. ' fonctions' → logprob: -1.7970361709594727
    4. 'fon' → logprob: -2.5470361709594727
    5. 'it' → logprob: -4.797036170959473
    6. 'g' → logprob: -5.172036170959473
    7. ' out' → logprob: -5.422036170959473
    8. '_' → logprob: -5.547036170959473
    9. ' fonctionnalités' → logprob: -5.547036170959473
    10. 'fonction' → logprob: -5.547036170959473

Token 16: ' cré' (ID: 12201)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.015499046072363853
    2. 'import' → logprob: -5.515499114990234
    3. ' .' → logprob: -5.515499114990234
    4. '<|end|>' → logprob: -6.265499114990234
    5. '```' → logprob: -6.765499114990234
    6. ',' → logprob: -7.015499114990234
    7. ' import' → logprob: -8.140499114990234
    8. '<|end|>' → logprob: -8.265499114990234
    9. '.pyplot' → logprob: -8.765499114990234
    10. ' ' → logprob: -8.765499114990234

Token 17: 'ant' (ID: 493)
  Prédit: 'ales'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ales' → logprob: -0.7739518284797668
    2. 'ation' → logprob: -1.273951768875122
    3. 'es' → logprob: -2.398951768875122
    4. 'ations' → logprob: -3.898951768875122
    5. '```' → logprob: -3.898951768875122
    6. 'é' → logprob: -4.023952007293701
    7. 'er' → logprob: -4.023952007293701
    8. 'ées' → logprob: -4.148952007293701
    9. 'és' → logprob: -4.648952007293701
    10. 'a' → logprob: -5.148952007293701

Token 18: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.3968900442123413
    2. ' ' → logprob: -1.2718900442123413
    3. 'des' → logprob: -3.396890163421631
    4. '_' → logprob: -4.646890163421631
    5. '_des' → logprob: -5.646890163421631
    6. ' ' → logprob: -9.396889686584473
    7. ' de' → logprob: -9.771889686584473
    8. '  ' → logprob: -9.771889686584473
    9. '_s' → logprob: -10.021889686584473
    10. ' et' → logprob: -10.271889686584473

Token 19: ' it' (ID: 480)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.4036777019500732
    2. ' it' → logprob: -1.4036777019500732
    3. ' espaces' → logprob: -1.6536777019500732
    4. ' comb' → logprob: -2.5286777019500732
    5. '_' → logprob: -2.6536777019500732
    6. ' iter' → logprob: -2.7786777019500732
    7. ' génér' → logprob: -3.4036777019500732
    8. 'it' → logprob: -3.6536777019500732
    9. ' combin' → logprob: -4.403677940368652
    10. ' chaînes' → logprob: -5.653677940368652

Token 20: 'ér' (ID: 2156)
  Prédit: 'ér'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ér' → logprob: -1.134811282157898
    2. 'r' → logprob: -1.259811282157898
    3. '{' → logprob: -1.384811282157898
    4. 'er' → logprob: -3.7598114013671875
    5. 'ter' → logprob: -4.1348114013671875
    6. 'é' → logprob: -4.2598114013671875
    7. '_r' → logprob: -4.6348114013671875
    8. '#' → logprob: -4.8848114013671875
    9. 'rates' → logprob: -5.0098114013671875
    10. '##' → logprob: -5.1348114013671875

Token 21: 'ateurs' (ID: 19727)
  Prédit: 'ateurs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ateurs' → logprob: -0.10085856914520264
    2. 'ators' → logprob: -2.475858688354492
    3. 'ables' → logprob: -4.850858688354492
    4. '```' → logprob: -6.600858688354492
    5. 'tools' → logprob: -7.350858688354492
    6. 'a' → logprob: -7.475858688354492
    7. 'teurs' → logprob: -7.725858688354492
    8. '__' → logprob: -8.225858688354492
    9. 'at' → logprob: -8.475858688354492
    10. '_' → logprob: -9.350858688354492

Token 22: ' pour' (ID: 1930)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0017832369776442647
    2. ',' → logprob: -8.12678337097168
    3. '\' → logprob: -8.12678337097168
    4. ' ' → logprob: -8.12678337097168
    5. 'import' → logprob: -8.25178337097168
    6. '#' → logprob: -9.62678337097168
    7. '[' → logprob: -9.62678337097168
    8. 'newline' → logprob: -9.62678337097168
    9. '\n' → logprob: -9.75178337097168
    10. ' .' → logprob: -9.87678337097168

Token 23: ' un' (ID: 537)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.4863749146461487
    2. ' manip' → logprob: -1.611374855041504
    3. ' créer' → logprob: -3.236374855041504
    4. ' les' → logprob: -3.361374855041504
    5. ' faciliter' → logprob: -3.736374855041504
    6. ' comb' → logprob: -3.861374855041504
    7. ' l' → logprob: -5.111374855041504
    8. ' la' → logprob: -5.236374855041504
    9. ' explo' → logprob: -5.361374855041504
    10. '```' → logprob: -5.486374855041504

Token 24: ' traitement' (ID: 42434)
  Prédit: ' usage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' usage' → logprob: -1.516481876373291
    2. 'e' → logprob: -1.641481876373291
    3. 's' → logprob: -1.641481876373291
    4. ' large' → logprob: -1.891481876373291
    5. ' grand' → logprob: -2.641481876373291
    6. ' ensemble' → logprob: -3.766481876373291
    7. 'usage' → logprob: -3.891481876373291
    8. 'es' → logprob: -4.266481876373291
    9. 'large' → logprob: -4.391481876373291
    10. 'ité' → logprob: -4.766481876373291

Token 25: ' efficace' (ID: 54338)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6605793237686157
    2. 's' → logprob: -0.9105793237686157
    3. '  ' → logprob: -3.410579204559326
    4. ' avanc' → logprob: -4.160579204559326
    5. '_' → logprob: -4.785579204559326
    6. 'space' → logprob: -5.910579204559326
    7. ' efficace' → logprob: -6.160579204559326
    8. 'es' → logprob: -6.160579204559326
    9. ' plus' → logprob: -6.160579204559326
    10. '.' → logprob: -6.160579204559326

Token 26: ' des' (ID: 731)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.20779646933078766
    2. '\' → logprob: -2.332796573638916
    3. '\n' → logprob: -3.457796573638916
    4. 'import' → logprob: -3.957796573638916
    5. ',' → logprob: -4.207796573638916
    6. '```' → logprob: -4.832796573638916
    7. '
' → logprob: -5.582796573638916
    8. '<|end|>' → logprob: -5.957796573638916
    9. '

' → logprob: -6.082796573638916
    10. 'newline' → logprob: -6.332796573638916

Token 27: ' bou' (ID: 17573)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.14804799854755402
    2. ' données' → logprob: -2.523047924041748
    3. ' it' → logprob: -3.273047924041748
    4. ' espaces' → logprob: -4.148047924041748
    5. ' iter' → logprob: -7.023047924041748
    6. ' ' → logprob: -7.773047924041748
    7. ' data' → logprob: -8.148048400878906
    8. ' objets' → logprob: -8.148048400878906
    9. 'it' → logprob: -8.523048400878906
    10. ' collections' → logprob: -8.648048400878906

Token 28: 'cles' (ID: 10934)
  Prédit: 'cles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cles' → logprob: -0.00041732576210051775
    2. 'r' → logprob: -9.250417709350586
    3. '```' → logprob: -9.500417709350586
    4. 'c' → logprob: -10.250417709350586
    5. 'cle' → logprob: -10.625417709350586
    6. 'cl' → logprob: -10.625417709350586
    7. 'cls' → logprob: -10.625417709350586
    8. 'ch' → logprob: -10.750417709350586
    9. 'q' → logprob: -11.500417709350586
    10. 'les' → logprob: -11.500417709350586

Token 29: '.
' (ID: 558)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.23495624959468842
    2. '
' → logprob: -2.6099562644958496
    3. '\n' → logprob: -3.3599562644958496
    4. 'import' → logprob: -3.8599562644958496
    5. '\' → logprob: -3.9849562644958496
    6. '<|end|>' → logprob: -3.9849562644958496
    7. ',' → logprob: -4.73495626449585
    8. '```' → logprob: -5.10995626449585
    9. 'newline' → logprob: -5.48495626449585
    10. 'n' → logprob: -5.60995626449585

Token 30: 'import' (ID: 561)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5952855944633484
    2. '\n' → logprob: -1.7202856540679932
    3. '

' → logprob: -2.095285654067993
    4. '.' → logprob: -3.470285654067993
    5. '\' → logprob: -3.845285654067993
    6. ' 

' → logprob: -4.095285415649414
    7. '' → logprob: -4.095285415649414
    8. 'import' → logprob: -4.345285415649414
    9. ',' → logprob: -4.970285415649414
    10. '<|end|>' → logprob: -4.970285415649414

Token 31: ' math' (ID: 13324)
  Prédit: ' math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.9163269400596619
    2. ' sys' → logprob: -1.1663269996643066
    3. ' os' → logprob: -2.0413269996643066
    4. ' collections' → logprob: -2.0413269996643066
    5. ' functools' → logprob: -4.541326999664307
    6. ' numpy' → logprob: -5.416326999664307
    7. ' random' → logprob: -5.541326999664307
    8. 'os' → logprob: -5.916326999664307
    9. ' operator' → logprob: -6.166326999664307
    10. 'collections' → logprob: -6.666326999664307

Token 32: '      ' (ID: 1699)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 33: ' #' (ID: 1069)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.048863381147384644
    2. '<|end|>' → logprob: -3.423863410949707
    3. ' #' → logprob: -4.798863410949707
    4. '#' (adapté à ' #') → logprob: -5.548863410949707
    5. ' 
' → logprob: -6.673863410949707
    6. '<|end|>' → logprob: -7.173863410949707
    7. '  
' → logprob: -8.173863410949707
    8. '  ' → logprob: -8.298863410949707
    9. 'import' → logprob: -9.048863410949707
    10. '
' → logprob: -9.173863410949707

Token 34: ' Im' (ID: 3133)
  Prédit: ' import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.3299071490764618
    2. 'import' → logprob: -2.204907178878784
    3. ' ' → logprob: -2.329907178878784
    4. ' math' → logprob: -3.579907178878784
    5. ' #' → logprob: -3.954907178878784
    6. '#' → logprob: -4.079906940460205
    7. ' ' → logprob: -5.454906940460205
    8. ' from' → logprob: -6.579906940460205
    9. ' importe' → logprob: -6.829906940460205
    10. 'importe' → logprob: -7.079906940460205

Token 35: 'porte' (ID: 17761)
  Prédit: 'porte'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'porte' → logprob: -0.3874102830886841
    2. 'port' → logprob: -1.137410283088684
    3. 'p' → logprob: -8.387410163879395
    4. ' porte' → logprob: -8.512410163879395
    5. 'porta' → logprob: -10.262410163879395
    6. 'porter' → logprob: -10.887410163879395
    7. 'por' → logprob: -10.887410163879395
    8. 'portes' → logprob: -11.512410163879395
    9. 'orte' → logprob: -12.012410163879395
    10. ' ' → logprob: -12.762410163879395

Token 36: ' le' (ID: 505)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.5049591660499573
    2. ' ' → logprob: -1.2549591064453125
    3. ' ' → logprob: -2.7549591064453125
    4. '<|end|>' → logprob: -3.5049591064453125
    5. ' os' → logprob: -5.3799591064453125
    6. 'math' → logprob: -6.0049591064453125
    7. '  ' → logprob: -6.0049591064453125
    8. 'es' → logprob: -6.6299591064453125
    9. ' the' → logprob: -6.7549591064453125
    10. 's' → logprob: -7.1299591064453125

Token 37: ' module' (ID: 8827)
  Prédit: ' module'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' module' → logprob: -0.005541327875107527
    2. ' math' → logprob: -5.5055413246154785
    3. 'module' → logprob: -6.6305413246154785
    4. ' space' → logprob: -9.880541801452637
    5. ' ' → logprob: -10.255541801452637
    6. ' modules' → logprob: -11.005541801452637
    7. ' espace' → logprob: -11.630541801452637
    8. ' m' → logprob: -12.380541801452637
    9. ' modu' → logprob: -12.380541801452637
    10. '	module' → logprob: -12.505541801452637

Token 38: ' '' (ID: 461)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.6194369792938232
    2. '<|end|>' → logprob: -1.3694369792938232
    3. ' ' → logprob: -2.2444369792938232
    4. ' os' → logprob: -3.1194369792938232
    5. 'math' → logprob: -3.8694369792938232
    6. ' '' → logprob: -4.369437217712402
    7. 'cmath' → logprob: -5.119437217712402
    8. ' ' → logprob: -5.369437217712402
    9. ' space' → logprob: -6.369437217712402
    10. ' `' → logprob: -6.494437217712402

Token 39: 'math' (ID: 20310)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.0010479353368282318
    2. 'math' → logprob: -6.8760480880737305
    3. ' ' → logprob: -11.87604808807373
    4. ' ' → logprob: -12.12604808807373
    5. 'cmath' → logprob: -13.50104808807373
    6. ' os' → logprob: -14.62604808807373
    7. ' itertools' → logprob: -14.75104808807373
    8. ' maths' → logprob: -15.87604808807373
    9. ' space' → logprob: -16.001047134399414
    10. '.math' → logprob: -16.751047134399414

Token 40: '',' (ID: 787)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 41: ' qui' (ID: 2780)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1963982880115509
    2. '<|end|>' → logprob: -2.3213982582092285
    3. '#' → logprob: -3.5713982582092285
    4. ' #' → logprob: -4.1963982582092285
    5. ' qui' → logprob: -4.3213982582092285
    6. ' which' → logprob: -4.8213982582092285
    7. '  ' → logprob: -5.8213982582092285
    8. 'which' → logprob: -5.9463982582092285
    9. 'import' → logprob: -6.3213982582092285
    10. '```' → logprob: -6.6963982582092285

Token 42: ' offre' (ID: 32066)
  Prédit: ' fournit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fournit' → logprob: -0.28279438614845276
    2. 'f' → logprob: -1.4077943563461304
    3. ' fournisse' → logprob: -7.53279447555542
    4. ' fourn' → logprob: -8.157793998718262
    5. ' four' → logprob: -8.532793998718262
    6. ' offre' → logprob: -8.782793998718262
    7. ' fourni' → logprob: -8.907793998718262
    8. 'provid' → logprob: -9.407793998718262
    9. ' permet' → logprob: -9.657793998718262
    10. ' provides' → logprob: -10.407793998718262

Token 43: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.00709315063431859
    2. 'des' → logprob: -5.6320929527282715
    3. ' les' → logprob: -6.6320929527282715
    4. ' ' → logprob: -6.6320929527282715
    5. 'es' → logprob: -8.13209342956543
    6. 's' → logprob: -8.50709342956543
    7. ' diverses' → logprob: -9.00709342956543
    8. ' l' → logprob: -9.75709342956543
    9. ' math' → logprob: -10.00709342956543
    10. ' un' → logprob: -10.88209342956543

Token 44: ' fonctions' (ID: 87283)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.2432374656200409
    2. ' fonctions' → logprob: -1.8682374954223633
    3. 'des' → logprob: -3.1182374954223633
    4. ' math' → logprob: -5.993237495422363
    5. 'fonction' → logprob: -5.993237495422363
    6. '<|end|>' → logprob: -6.493237495422363
    7. ' fonctionnalités' → logprob: -6.618237495422363
    8. 'import' → logprob: -6.743237495422363
    9. 's' → logprob: -7.118237495422363
    10. 'd' → logprob: -7.243237495422363

Token 45: ' math' (ID: 13324)
  Prédit: ' math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.04145745560526848
    2. 'import' → logprob: -3.541457414627075
    3. ' ' → logprob: -5.666457653045654
    4. 's' → logprob: -6.041457653045654
    5. ' import' → logprob: -6.791457653045654
    6. 'math' → logprob: -7.166457653045654
    7. ' matem' → logprob: -8.041457176208496
    8. 'es' → logprob: -8.041457176208496
    9. ' et' → logprob: -8.041457176208496
    10. ' ,' → logprob: -8.291457176208496

Token 46: 'ématiques' (ID: 114734)
  Prédit: 'ématiques'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ématiques' → logprob: -0.0014134504599496722
    2. 'ématique' → logprob: -6.751413345336914
    3. 'ém' → logprob: -8.501413345336914
    4. 'é' → logprob: -10.501413345336914
    5. 'étiques' → logprob: -11.751413345336914
    6. '```' → logprob: -13.501413345336914
    7. 'éma' → logprob: -14.376413345336914
    8. ' ' → logprob: -14.501413345336914
    9. ' é' → logprob: -14.751413345336914
    10. 'import' → logprob: -14.876413345336914

Token 47: ' comme' (ID: 7971)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 48: ' sqrt' (ID: 44237)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.2810049057006836
    2. ' les' → logprob: -2.2810049057006836
    3. ' ' → logprob: -2.4060049057006836
    4. ' la' → logprob: -3.6560049057006836
    5. ' sqrt' → logprob: -4.531004905700684
    6. ' math' → logprob: -5.531004905700684
    7. ' le' → logprob: -6.031004905700684
    8. ' l' → logprob: -6.406004905700684
    9. 'des' → logprob: -6.656004905700684
    10. '  ' → logprob: -7.281004905700684

Token 49: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5973727107048035
    2. '(' → logprob: -1.3473727703094482
    3. '
' → logprob: -2.7223727703094482
    4. '#' → logprob: -4.097372531890869
    5. '(
' → logprob: -4.097372531890869
    6. ')' → logprob: -4.347372531890869
    7. 'import' → logprob: -4.347372531890869
    8. '

' → logprob: -4.472372531890869
    9. '()' → logprob: -4.597372531890869
    10. '.' → logprob: -4.722372531890869

Token 50: ' log' (ID: 2142)
  Prédit: ' sin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sin' → logprob: -0.6273676156997681
    2. ' pow' → logprob: -1.752367615699768
    3. ' cos' → logprob: -2.2523674964904785
    4. 'sin' → logprob: -2.5023674964904785
    5. ' log' → logprob: -3.5023674964904785
    6. ' exp' → logprob: -3.6273674964904785
    7. ' factorial' → logprob: -3.7523674964904785
    8. 'pow' → logprob: -4.8773674964904785
    9. 'cos' → logprob: -5.1273674964904785
    10. 'log' → logprob: -5.7523674964904785

Token 51: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03381478413939476
    2. '
' → logprob: -4.658814907073975
    3. '

' → logprob: -4.783814907073975
    4. 'import' → logprob: -5.658814907073975
    5. ',
' → logprob: -6.158814907073975
    6. ' ,' → logprob: -6.533814907073975
    7. '#' → logprob: -6.533814907073975
    8. '```' → logprob: -6.658814907073975
    9. ' ' → logprob: -7.033814907073975
    10. 's' → logprob: -7.283814907073975

Token 52: ' etc' (ID: 5178)
  Prédit: ' sin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sin' → logprob: -0.8610363602638245
    2. 'sin' → logprob: -1.1110363006591797
    3. ' exp' → logprob: -2.1110363006591797
    4. ' cos' → logprob: -2.8610363006591797
    5. 'exp' → logprob: -3.3610363006591797
    6. ' pow' → logprob: -4.36103630065918
    7. ' factorial' → logprob: -4.61103630065918
    8. 'cos' → logprob: -4.73603630065918
    9. 'pow' → logprob: -6.61103630065918
    10. ' ceil' → logprob: -6.73603630065918

Token 53: '.
' (ID: 558)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.25908613204956055
    2. '

' → logprob: -1.8840861320495605
    3. '<|end|>' → logprob: -2.7590861320495605
    4. 'import' → logprob: -5.3840861320495605
    5. '```' → logprob: -6.2590861320495605
    6. '\n' → logprob: -6.3840861320495605
    7. '<|end|>' → logprob: -6.8840861320495605
    8. '


' → logprob: -7.1340861320495605
    9. '#' → logprob: -7.2590861320495605
    10. ' ' → logprob: -7.5090861320495605

Token 54: 'import' (ID: 561)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5040801763534546
    2. '

' → logprob: -1.0040801763534546
    3. 'import' → logprob: -4.504080295562744
    4. '\n' → logprob: -5.754080295562744
    5. ' 

' → logprob: -5.879080295562744
    6. '' → logprob: -6.379080295562744
    7. ' ' → logprob: -6.379080295562744
    8. '
' → logprob: -6.754080295562744
    9. '


' → logprob: -6.754080295562744
    10. '<|end|>' → logprob: -6.754080295562744

Token 55: ' sys' (ID: 12228)
  Prédit: ' random'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' random' → logprob: -0.8993435502052307
    2. ' os' → logprob: -1.524343490600586
    3. ' numpy' → logprob: -1.774343490600586
    4. 'random' → logprob: -2.524343490600586
    5. ' collections' → logprob: -3.274343490600586
    6. ' sys' → logprob: -3.399343490600586
    7. 'os' → logprob: -3.649343490600586
    8. 'numpy' → logprob: -5.149343490600586
    9. ' functools' → logprob: -5.274343490600586
    10. 'collections' → logprob: -5.399343490600586

Token 56: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.785522997379303
    2. '<|end|>' → logprob: -0.785522997379303
    3. ' ' → logprob: -3.910522937774658
    4. '<|end|>' → logprob: -4.160522937774658
    5. '#' → logprob: -4.535522937774658
    6. ' 
' → logprob: -4.535522937774658
    7. '

' → logprob: -4.660522937774658
    8. '  
' → logprob: -4.910522937774658
    9. '```' → logprob: -5.160522937774658
    10. ' #' → logprob: -6.035522937774658

Token 57: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -1.1906955242156982
    2. ' #' → logprob: -1.3156955242156982
    3. '
' → logprob: -1.8156955242156982
    4. ' ' → logprob: -2.1906955242156982
    5. '<|end|>' → logprob: -2.1906955242156982
    6. ' 
' → logprob: -4.815695762634277
    7. '<|end|>' → logprob: -4.815695762634277
    8. '

' → logprob: -5.065695762634277
    9. '  
' → logprob: -5.190695762634277
    10. '  ' → logprob: -5.440695762634277

Token 58: ' Im' (ID: 3133)
  Prédit: ' import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.3057491183280945
    2. ' sys' → logprob: -1.9307491779327393
    3. ' os' → logprob: -2.4307491779327393
    4. 'import' → logprob: -3.9307491779327393
    5. ' ' → logprob: -5.05574893951416
    6. 'sys' → logprob: -6.55574893951416
    7. ' system' → logprob: -6.93074893951416
    8. ' argparse' → logprob: -7.93074893951416
    9. ' ' → logprob: -8.18074893951416
    10. 'os' → logprob: -8.43074893951416

Token 59: 'porte' (ID: 17761)
  Prédit: 'port'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'port' → logprob: -0.007411993574351072
    2. 'p' → logprob: -5.507411956787109
    3. 'por' → logprob: -5.757411956787109
    4. 'po' → logprob: -9.50741195678711
    5. 'porte' → logprob: -10.38241195678711
    6. ' ' → logprob: -10.63241195678711
    7. ' port' → logprob: -11.25741195678711
    8. 'porta' → logprob: -11.50741195678711
    9. 'poort' → logprob: -12.13241195678711
    10. 'порт' → logprob: -13.50741195678711

Token 60: ' le' (ID: 505)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0003280751989223063
    2. ' os' → logprob: -9.250328063964844
    3. ' sys' → logprob: -9.750328063964844
    4. '  ' → logprob: -10.000328063964844
    5. '<|end|>' → logprob: -10.000328063964844
    6. '.' → logprob: -11.000328063964844
    7. ' ‌' → logprob: -11.125328063964844
    8. ' ' → logprob: -11.125328063964844
    9. ' ​' → logprob: -11.625328063964844
    10. ' ,' → logprob: -12.500328063964844

Token 61: ' module' (ID: 8827)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.9112847447395325
    2. ' ' → logprob: -1.2862846851348877
    3. ' sys' → logprob: -1.6612846851348877
    4. ' space' → logprob: -2.7862846851348877
    5. ' module' → logprob: -3.1612846851348877
    6. ' system' → logprob: -3.9112846851348877
    7. ' espace' → logprob: -6.036284923553467
    8. ' import' → logprob: -7.036284923553467
    9. 'space' → logprob: -7.036284923553467
    10. '  ' → logprob: -7.411284923553467

Token 62: ' '' (ID: 461)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1870826780796051
    2. '<|end|>' → logprob: -1.9370826482772827
    3. ' os' → logprob: -5.187082767486572
    4. '  ' → logprob: -5.437082767486572
    5. ' ,' → logprob: -5.562082767486572
    6. '.' → logprob: -6.062082767486572
    7. ',' → logprob: -6.062082767486572
    8. ' .' → logprob: -6.312082767486572
    9. '<|end|>' → logprob: -6.437082767486572
    10. ' sys' → logprob: -6.687082767486572

Token 63: 'sys' (ID: 17324)
  Prédit: 'sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -1.0203908681869507
    2. ' sys' → logprob: -1.1453908681869507
    3. 'os' → logprob: -1.7703908681869507
    4. ' os' → logprob: -1.8953908681869507
    5. 'io' → logprob: -8.270390510559082
    6. ' ' → logprob: -8.770390510559082
    7. 'random' → logprob: -9.520390510559082
    8. 'json' → logprob: -10.145390510559082
    9. ' argparse' → logprob: -10.270390510559082
    10. 'argv' → logprob: -10.520390510559082

Token 64: '',' (ID: 787)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 65: ' qui' (ID: 2780)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1271487921476364
    2. ' #' → logprob: -2.2521488666534424
    3. '<|end|>' → logprob: -4.877148628234863
    4. ' 
' → logprob: -6.502148628234863
    5. '#' → logprob: -6.627148628234863
    6. ' ' → logprob: -7.127148628234863
    7. '```' → logprob: -7.627148628234863
    8. '  
' → logprob: -8.002148628234863
    9. '  ' → logprob: -8.252148628234863
    10. '     ' → logprob: -8.502148628234863

Token 66: ' permet' (ID: 11798)
  Prédit: ' fournit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fournit' → logprob: -0.3686886131763458
    2. ' permet' → logprob: -1.3686885833740234
    3. ' ' → logprob: -3.7436885833740234
    4. ' provides' → logprob: -4.493688583374023
    5. ' donne' → logprob: -4.618688583374023
    6. ' ' → logprob: -5.868688583374023
    7. ' provide' → logprob: -6.493688583374023
    8. ' offre' → logprob: -6.743688583374023
    9. ' facilite' → logprob: -7.368688583374023
    10. ' est' → logprob: -7.743688583374023

Token 67: ' d' (ID: 272)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.006164951249957085
    2. '.' → logprob: -6.381165027618408
    3. '<|end|>' → logprob: -6.506165027618408
    4. '_' → logprob: -7.506165027618408
    5. ' import' → logprob: -7.881165027618408
    6. '  ' → logprob: -8.13116455078125
    7. ' a' → logprob: -8.13116455078125
    8. ' des' → logprob: -8.50616455078125
    9. ' ' → logprob: -9.81866455078125
    10. ' l' → logprob: -9.88116455078125

Token 68: ''inter' (ID: 55731)
  Prédit: ' accéder'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' accéder' → logprob: -0.6122779846191406
    2. ' inter' → logprob: -2.1122779846191406
    3. ''acc' → logprob: -2.2372779846191406
    4. ''inter' → logprob: -2.2372779846191406
    5. 'inter' → logprob: -2.4872779846191406
    6. ' gérer' → logprob: -3.8622779846191406
    7. ' acceder' → logprob: -5.112277984619141
    8. ''utiliser' → logprob: -6.112277984619141
    9. 'acc' → logprob: -6.612277984619141
    10. '’acc' → logprob: -6.737277984619141

Token 69: 'agir' (ID: 105832)
  Prédit: 'pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.7471762895584106
    2. 'preter' → logprob: -0.9971762895584106
    3. 'agir' → logprob: -1.9971762895584106
    4. 'op' → logprob: -5.247176170349121
    5. 'import' → logprob: -5.997176170349121
    6. 'p' → logprob: -5.997176170349121
    7. 'f' → logprob: -6.372176170349121
    8. 'cepter' → logprob: -6.747176170349121
    9. 'face' → logprob: -7.247176170349121
    10. 'ag' → logprob: -7.247176170349121

Token 70: ' avec' (ID: 3937)
  Prédit: ' with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' with' → logprob: -0.7511119246482849
    2. ' avec' → logprob: -1.0011119842529297
    3. ' ' → logprob: -2.0011119842529297
    4. 'with' → logprob: -4.87611198425293
    5. '<|end|>' → logprob: -5.75111198425293
    6. 'avec' → logprob: -6.25111198425293
    7. ' au' → logprob: -6.87611198425293
    8. ' import' → logprob: -7.00111198425293
    9. ' os' → logprob: -7.25111198425293
    10. ' ' → logprob: -7.25111198425293

Token 71: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.6456069350242615
    2. ' ' → logprob: -0.7706069350242615
    3. ' les' → logprob: -5.270606994628906
    4. ' le' → logprob: -6.145606994628906
    5. 'l' → logprob: -6.270606994628906
    6. 'space' → logprob: -6.770606994628906
    7. ' system' → logprob: -7.645606994628906
    8. ' space' → logprob: -8.270606994628906
    9. ' Python' → logprob: -8.270606994628906
    10. ' the' → logprob: -8.395606994628906

Token 72: ''inter' (ID: 55731)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.5824997425079346
    2. ''' → logprob: -1.0824997425079346
    3. 'a' → logprob: -3.2074997425079346
    4. ''espace' → logprob: -4.2074995040893555
    5. 'es' → logprob: -4.3324995040893555
    6. ''environnement' → logprob: -4.5824995040893555
    7. ''utilisateur' → logprob: -5.3324995040893555
    8. ''import' → logprob: -5.5824995040893555
    9. ''inter' → logprob: -6.3324995040893555
    10. '   ' → logprob: -6.4574995040893555

Token 73: 'pré' (ID: 192449)
  Prédit: 'preter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'preter' → logprob: -0.40943169593811035
    2. 'pre' → logprob: -2.0344316959381104
    3. 'pré' → logprob: -2.6594316959381104
    4. 'pr' → logprob: -2.7844316959381104
    5. 'p' → logprob: -3.6594316959381104
    6. 'prete' → logprob: -3.7844316959381104
    7. 'face' → logprob: -4.909431457519531
    8. 'n' → logprob: -5.659431457519531
    9. 'pret' → logprob: -5.909431457519531
    10. '```' → logprob: -6.034431457519531

Token 74: 'teur' (ID: 45262)
  Prédit: 'teur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'teur' → logprob: -0.00044353955308906734
    2. 'ter' → logprob: -8.625443458557129
    3. '```' → logprob: -10.000443458557129
    4. '	' → logprob: -10.500443458557129
    5. 'teurs' → logprob: -10.500443458557129
    6. '#' → logprob: -10.750443458557129
    7. 'é' → logprob: -10.750443458557129
    8. '   ' → logprob: -11.000443458557129
    9. 'te' → logprob: -11.375443458557129
    10. '``' → logprob: -11.375443458557129

Token 75: ' Python' (ID: 26534)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 76: ' et' (ID: 859)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.44390156865119934
    2. '

' → logprob: -1.068901538848877
    3. '<|end|>' → logprob: -5.318901538848877
    4. 'import' → logprob: -5.693901538848877
    5. '```' → logprob: -6.818901538848877
    6. ' 

' → logprob: -6.943901538848877
    7. '
' → logprob: -7.068901538848877
    8. '.' → logprob: -7.193901538848877
    9. ' 
' → logprob: -7.318901538848877
    10. '\n' → logprob: -7.818901538848877

Token 77: ' de' (ID: 334)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.6171751618385315
    2. ' gérer' → logprob: -1.7421751022338867
    3. ' l' → logprob: -2.2421751022338867
    4. ' la' → logprob: -2.7421751022338867
    5. ' manip' → logprob: -3.3671751022338867
    6. ' le' → logprob: -4.117175102233887
    7. ' accéder' → logprob: -4.117175102233887
    8. 'les' → logprob: -5.242175102233887
    9. ' fournir' → logprob: -5.242175102233887
    10. ' récupérer' → logprob: -5.492175102233887

Token 78: ' manip' (ID: 20526)
  Prédit: ' manip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' manip' → logprob: -0.1367940753698349
    2. ' gérer' → logprob: -2.261794090270996
    3. ' accéder' → logprob: -4.136794090270996
    4. ' inter' → logprob: -6.761794090270996
    5. ' utiliser' → logprob: -7.011794090270996
    6. ' récupérer' → logprob: -7.136794090270996
    7. ' system' → logprob: -7.636794090270996
    8. 's' → logprob: -7.761794090270996
    9. ' fournir' → logprob: -7.761794090270996
    10. ' manipulation' → logprob: -8.136794090270996

Token 79: 'uler' (ID: 11802)
  Prédit: 'uler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uler' → logprob: -0.09941889345645905
    2. 'ule' → logprob: -2.599418878555298
    3. 'u' → logprob: -5.224419116973877
    4. 'ul' → logprob: -5.349419116973877
    5. 'ulate' → logprob: -5.474419116973877
    6. 'ulator' → logprob: -6.724419116973877
    7. 'ulation' → logprob: -6.849419116973877
    8. 'p' → logprob: -7.474419116973877
    9. 'puter' → logprob: -7.474419116973877
    10. 'ulé' → logprob: -8.411918640136719

Token 80: ' des' (ID: 731)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.8881310224533081
    2. ' ' → logprob: -1.388131022453308
    3. ' les' → logprob: -1.888131022453308
    4. 'l' → logprob: -2.5131311416625977
    5. 'les' → logprob: -3.5131311416625977
    6. 'le' → logprob: -3.6381311416625977
    7. ' des' → logprob: -3.7631311416625977
    8. ' ' → logprob: -5.138131141662598
    9. ' le' → logprob: -5.513131141662598
    10. 'la' → logprob: -5.888131141662598

Token 81: ' aspects' (ID: 15712)
  Prédit: ' arguments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' arguments' → logprob: -0.23032920062541962
    2. ' l' → logprob: -2.8553292751312256
    3. ' flux' → logprob: -3.3553292751312256
    4. ' ' → logprob: -4.2303290367126465
    5. 'l' → logprob: -4.6053290367126465
    6. 'arguments' → logprob: -4.6053290367126465
    7. ' variables' → logprob: -4.7303290367126465
    8. ' systèmes' → logprob: -4.9803290367126465
    9. ' paramètres' → logprob: -5.2303290367126465
    10. ' system' → logprob: -5.3553290367126465

Token 82: ' système' (ID: 30034)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.05632462725043297
    2. ' du' → logprob: -3.5563247203826904
    3. ' des' → logprob: -3.9313247203826904
    4. ' de' → logprob: -5.931324481964111
    5. ' système' → logprob: -7.056324481964111
    6. ' system' → logprob: -7.306324481964111
    7. 's' → logprob: -7.681324481964111
    8. ' sys' → logprob: -8.18132495880127
    9. ' ,' → logprob: -9.05632495880127
    10. ' d' → logprob: -9.11882495880127

Token 83: '.
' (ID: 558)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.33216965198516846
    2. '

' → logprob: -1.3321696519851685
    3. '
' → logprob: -5.457169532775879
    4. '.' → logprob: -5.832169532775879
    5. 'import' → logprob: -6.207169532775879
    6. '<|end|>' → logprob: -6.582169532775879
    7. '\n' → logprob: -6.832169532775879
    8. '```' → logprob: -6.957169532775879
    9. '


' → logprob: -6.957169532775879
    10. '' → logprob: -6.957169532775879

Token 84: 'import' (ID: 561)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.3521248996257782
    2. '
' → logprob: -1.2271249294281006
    3. '\n' → logprob: -7.1021246910095215
    4. '' → logprob: -7.3521246910095215
    5. '```' → logprob: -7.4771246910095215
    6. '


' → logprob: -7.7271246910095215
    7. '
' → logprob: -8.10212516784668
    8. ' 

' → logprob: -8.10212516784668
    9. '
 
' → logprob: -8.97712516784668
    10. '#' → logprob: -9.22712516784668

Token 85: ' heap' (ID: 37237)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.005038779228925705
    2. 'os' → logprob: -6.005038738250732
    3. ' collections' → logprob: -6.630038738250732
    4. ' random' → logprob: -6.880038738250732
    5. ' ' → logprob: -9.50503921508789
    6. ' re' → logprob: -10.00503921508789
    7. ' numpy' → logprob: -10.63003921508789
    8. ' time' → logprob: -11.63003921508789
    9. 'collections' → logprob: -11.63003921508789
    10. ' functools' → logprob: -11.75503921508789

Token 86: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.9361264946837764e-07
    2. 'n' → logprob: -16.875
    3. 'queue' → logprob: -17.125
    4. ' ' → logprob: -18.375
    5. 'u' → logprob: -18.625
    6. 'e' → logprob: -19.0
    7. 'dict' → logprob: -19.125
    8. ' queue' → logprob: -19.375
    9. 'l' → logprob: -19.625
    10. 't' → logprob: -19.875

Token 87: '     ' (ID: 530)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.045952510088682175
    2. ' #' → logprob: -3.295952558517456
    3. ' 
' → logprob: -5.295952320098877
    4. '#' → logprob: -6.545952320098877
    5. '  ' → logprob: -7.420952320098877
    6. '  
' → logprob: -8.045952796936035
    7. ' 

' → logprob: -8.295952796936035
    8. '<|end|>' → logprob: -10.045952796936035
    9. ' 
' → logprob: -10.795952796936035
    10. '
' → logprob: -11.045952796936035

Token 88: ' #' (ID: 1069)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.028386464342474937
    2. ' #' → logprob: -3.653386354446411
    3. ' 
' → logprob: -6.77838659286499
    4. '  ' → logprob: -7.52838659286499
    5. '#' (adapté à ' #') → logprob: -8.278386116027832
    6. ' 

' → logprob: -9.528386116027832
    7. '  
' → logprob: -10.403386116027832
    8. '<|end|>' → logprob: -11.778386116027832
    9. '   ' → logprob: -12.028386116027832
    10. '      ' → logprob: -12.153386116027832

Token 89: ' Im' (ID: 3133)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -7.803360495017841e-05
    2. ' ' → logprob: -10.250078201293945
    3. '  ' → logprob: -10.875078201293945
    4. ' import' → logprob: -11.375078201293945
    5. ' #' → logprob: -12.000078201293945
    6. ' ﻿' → logprob: -13.375078201293945
    7. ' ​' → logprob: -13.875078201293945
    8. '  ' → logprob: -14.375078201293945
    9. '  
' → logprob: -14.500078201293945
    10. 'import' → logprob: -14.500078201293945

Token 90: 'porte' (ID: 17761)
  Prédit: 'port'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'port' → logprob: -0.15109840035438538
    2. 'porte' → logprob: -2.4010984897613525
    3. 'p' → logprob: -3.7760984897613525
    4. 'por' → logprob: -4.151098251342773
    5. ' ' → logprob: -5.651098251342773
    6. 'orte' → logprob: -5.901098251342773
    7. ' port' → logprob: -6.526098251342773
    8. 'porta' → logprob: -7.401098251342773
    9. 'portes' → logprob: -8.151098251342773
    10. 'po' → logprob: -8.151098251342773

Token 91: ' le' (ID: 505)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.001052934443578124
    2. '  ' → logprob: -8.626052856445312
    3. ' collections' → logprob: -8.626052856445312
    4. ' le' → logprob: -8.751052856445312
    5. ' ' → logprob: -9.126052856445312
    6. ' itertools' → logprob: -9.126052856445312
    7. ' heap' → logprob: -9.501052856445312
    8. ' ‌' → logprob: -9.751052856445312
    9. ' the' → logprob: -10.001052856445312
    10. ' space' → logprob: -10.251052856445312

Token 92: ' module' (ID: 8827)
  Prédit: ' module'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' module' → logprob: -0.047273021191358566
    2. ' ' → logprob: -3.1722729206085205
    3. ' space' → logprob: -5.6722731590271
    4. 'module' → logprob: -8.172272682189941
    5. 'space' → logprob: -8.547272682189941
    6. ' espace' → logprob: -9.047272682189941
    7. ' ' → logprob: -9.297272682189941
    8. ' code' → logprob: -10.297272682189941
    9. '  ' → logprob: -10.797272682189941
    10. '	module' → logprob: -10.922272682189941

Token 93: ' '' (ID: 461)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.017153944820165634
    2. ' '' → logprob: -5.142153739929199
    3. '<|end|>' → logprob: -5.642153739929199
    4. ',' → logprob: -5.892153739929199
    5. ' ,' → logprob: -5.892153739929199
    6. ''' → logprob: -7.642153739929199
    7. ' #' → logprob: -7.767153739929199
    8. '  ' → logprob: -8.0171537399292
    9. 'space' → logprob: -8.3921537399292
    10. ' ' → logprob: -8.8921537399292

Token 94: 'heap' (ID: 38535)
  Prédit: 'heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.07058137655258179
    2. ' heap' → logprob: -2.8205814361572266
    3. 'queue' → logprob: -4.945581436157227
    4. ' queue' → logprob: -6.945581436157227
    5. 'q' → logprob: -7.695581436157227
    6. 'collections' → logprob: -10.820581436157227
    7. ' ' → logprob: -12.570581436157227
    8. 'h' → logprob: -12.570581436157227
    9. '```' → logprob: -12.695581436157227
    10. '.heap' → logprob: -12.695581436157227

Token 95: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -3.0590548703912646e-05
    2. ''' → logprob: -11.500030517578125
    3. 'queue' → logprob: -12.000030517578125
    4. ' queue' → logprob: -12.625030517578125
    5. '#' → logprob: -12.875030517578125
    6. ' #' → logprob: -13.375030517578125
    7. '```' → logprob: -13.875030517578125
    8. '  ' → logprob: -13.875030517578125
    9. ''q' → logprob: -13.875030517578125
    10. ' q' → logprob: -14.500030517578125

Token 96: '',' (ID: 787)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.034170135855674744
    2. ' #' → logprob: -3.659170150756836
    3. ' 
' → logprob: -5.534170150756836
    4. '  ' → logprob: -7.159170150756836
    5. ' ,' → logprob: -7.534170150756836
    6. '#' → logprob: -7.659170150756836
    7. ',' → logprob: -7.659170150756836
    8. ' 

' → logprob: -7.909170150756836
    9. '```' → logprob: -8.284170150756836
    10. ''' → logprob: -8.534170150756836

Token 97: ' qui' (ID: 2780)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.31841498613357544
    2. ' #' → logprob: -1.3184149265289307
    3. ' qui' → logprob: -5.44341516494751
    4. '  ' → logprob: -8.693414688110352
    5. '     ' → logprob: -8.693414688110352
    6. '#' → logprob: -9.068414688110352
    7. ' ' → logprob: -9.193414688110352
    8. ' which' → logprob: -9.443414688110352
    9. 'qui' → logprob: -9.818414688110352
    10. ' 
' → logprob: -10.443414688110352

Token 98: ' fournit' (ID: 123615)
  Prédit: ' fournit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fournit' → logprob: -0.16144432127475739
    2. ' ' → logprob: -2.9114444255828857
    3. ' permet' → logprob: -3.2864444255828857
    4. ' offre' → logprob: -3.4114444255828857
    5. ' impl' → logprob: -4.536444187164307
    6. ' provides' → logprob: -5.286444187164307
    7. ' g' → logprob: -5.786444187164307
    8. 'impl' → logprob: -6.786444187164307
    9. ' propose' → logprob: -6.911444187164307
    10. ' ' → logprob: -7.786444187164307

Token 99: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.03847690299153328
    2. ' ' → logprob: -3.4134769439697266
    3. 'des' → logprob: -6.288476943969727
    4. ' un' → logprob: -6.413476943969727
    5. '  ' → logprob: -7.413476943969727
    6. ' les' → logprob: -8.038476943969727
    7. ' une' → logprob: -9.038476943969727
    8. ' ' → logprob: -9.038476943969727
    9. ' l' → logprob: -9.663476943969727
    10. ' d' → logprob: -11.288476943969727

Token 100: ' fonctions' (ID: 87283)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.03064974769949913
    2. ' structures' → logprob: -4.405649662017822
    3. 'des' → logprob: -5.030649662017822
    4. 'structures' → logprob: -5.530649662017822
    5. ' file' → logprob: -6.405649662017822
    6. ' fonctions' → logprob: -6.780649662017822
    7. 'une' → logprob: -6.905649662017822
    8. ' une' → logprob: -7.155649662017822
    9. ' ' → logprob: -7.530649662017822
    10. 'les' → logprob: -7.655649662017822

Token 101: ' pour' (ID: 1930)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2960197627544403
    2. '  ' → logprob: -1.6710197925567627
    3. ' pour' → logprob: -3.0460197925567627
    4. 'pour' → logprob: -4.671019554138184
    5. '   ' → logprob: -5.796019554138184
    6. ' permettant' → logprob: -5.796019554138184
    7. ' ,' → logprob: -7.171019554138184
    8. ' for' → logprob: -7.171019554138184
    9. ',' → logprob: -7.296019554138184
    10. ' ' → logprob: -7.796019554138184

Token 102: ' créer' (ID: 40938)
  Prédit: ' manip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' manip' → logprob: -0.565778374671936
    2. ' gérer' → logprob: -0.940778374671936
    3. ' créer' → logprob: -3.9407782554626465
    4. ' ' → logprob: -4.5657782554626465
    5. ' travailler' → logprob: -5.1907782554626465
    6. ' la' → logprob: -5.9407782554626465
    7. ' des' → logprob: -7.1907782554626465
    8. ' impl' → logprob: -7.8157782554626465
    9. 'man' → logprob: -7.9407782554626465
    10. ' les' → logprob: -8.315778732299805

Token 103: ' et' (ID: 859)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.12666462361812592
    2. 'des' → logprob: -2.501664638519287
    3. ' et' → logprob: -3.626664638519287
    4. ' une' → logprob: -5.876664638519287
    5. '<|end|>' → logprob: -6.126664638519287
    6. ' ' → logprob: -6.501664638519287
    7. 'et' → logprob: -6.626664638519287
    8. 's' → logprob: -7.251664638519287
    9. ',' → logprob: -8.126664161682129
    10. 'les' → logprob: -8.126664161682129

Token 104: ' manip' (ID: 20526)
  Prédit: ' manip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' manip' → logprob: -0.13136383891105652
    2. ' gérer' → logprob: -2.131363868713379
    3. ' maintenir' → logprob: -6.006363868713379
    4. ' utiliser' → logprob: -7.506363868713379
    5. 'man' → logprob: -7.881363868713379
    6. ' travailler' → logprob: -8.131363868713379
    7. 'maint' → logprob: -8.506363868713379
    8. ' manipulation' → logprob: -8.756363868713379
    9. ' ' → logprob: -9.506363868713379
    10. ' manipul' → logprob: -9.631363868713379

Token 105: 'uler' (ID: 11802)
  Prédit: 'uler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uler' → logprob: -0.6620516180992126
    2. 'ule' → logprob: -1.9120516777038574
    3. 'ul' → logprob: -2.5370516777038574
    4. 'ules' → logprob: -3.0370516777038574
    5. 'u' → logprob: -3.7870516777038574
    6. 'ulers' → logprob: -3.7870516777038574
    7. 'ort' → logprob: -4.037051677703857
    8. 'les' → logprob: -4.037051677703857
    9. '```' → logprob: -4.599551677703857
    10. ' ul' → logprob: -4.787051677703857

Token 106: ' des' (ID: 731)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.528427243232727
    2. ' des' → logprob: -0.903427243232727
    3. ' les' → logprob: -6.7784271240234375
    4. 'des' → logprob: -7.0284271240234375
    5. ' une' → logprob: -7.2784271240234375
    6. ' un' → logprob: -7.4034271240234375
    7. '  ' → logprob: -7.6534271240234375
    8. ' heaps' → logprob: -7.7784271240234375
    9. 'he' → logprob: -8.028427124023438
    10. 'les' → logprob: -9.278427124023438

Token 107: ' tas' (ID: 17067)
  Prédit: ' tas'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tas' → logprob: -0.06325694173574448
    2. 'tas' → logprob: -2.9382569789886475
    3. ' files' → logprob: -4.938256740570068
    4. ' file' → logprob: -7.438256740570068
    5. ' structures' → logprob: -8.188257217407227
    6. ' heaps' → logprob: -9.313257217407227
    7. ' listes' → logprob: -9.938257217407227
    8. 'files' → logprob: -10.813257217407227
    9. ' fichiers' → logprob: -10.813257217407227
    10. ' ' → logprob: -10.813257217407227

Token 108: ' bin' (ID: 6958)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.8313085436820984
    2. ' ' → logprob: -0.9563085436820984
    3. 's' → logprob: -2.706308603286743
    4. '<|end|>' → logprob: -2.956308603286743
    5. ',' → logprob: -3.706308603286743
    6. ' ,' → logprob: -3.956308603286743
    7. ' (' → logprob: -4.581308364868164
    8. ' .' → logprob: -5.956308364868164
    9. 'es' → logprob: -6.581308364868164
    10. '  ' → logprob: -7.081308364868164

Token 109: 'aires' (ID: 8507)
  Prédit: 'aires'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aires' → logprob: -0.016433971002697945
    2. 'om' → logprob: -5.016434192657471
    3. 'omes' → logprob: -5.266434192657471
    4. 'aire' → logprob: -6.891434192657471
    5. 'omial' → logprob: -7.016434192657471
    6. 'ômes' → logprob: -7.141434192657471
    7. 'a' → logprob: -8.141433715820312
    8. ' heaps' → logprob: -8.266433715820312
    9. 'o' → logprob: -8.766433715820312
    10. 'heap' → logprob: -8.891433715820312

Token 110: ' (' (ID: 350)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3800480365753174
    2. '

' → logprob: -1.6300480365753174
    3. '.' → logprob: -2.5050480365753174
    4. '


' → logprob: -4.755047798156738
    5. '<|end|>' → logprob: -4.755047798156738
    6. ' 

' → logprob: -5.380047798156738
    7. '
' → logprob: -5.755047798156738
    8. 'import' → logprob: -5.880047798156738
    9. ' 
' → logprob: -6.130047798156738
    10. '.

' → logprob: -6.255047798156738

Token 111: 'he' (ID: 273)
  Prédit: ' en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.7205273509025574
    2. ')' → logprob: -1.9705274105072021
    3. ',' → logprob: -2.345527410507202
    4. ' )' → logprob: -2.595527410507202
    5. ' des' → logprob: -2.720527410507202
    6. ' ' → logprob: -3.095527410507202
    7. ' ,' → logprob: -3.970527410507202
    8. ').' → logprob: -4.345527172088623
    9. 's' → logprob: -4.845527172088623
    10. ' ).' → logprob: -4.845527172088623

Token 112: 'aps' (ID: 3506)
  Prédit: 'aps'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aps' → logprob: -0.007048533298075199
    2. 'app' → logprob: -6.382048606872559
    3. 'ap' → logprob: -6.507048606872559
    4. '   ' → logprob: -7.257048606872559
    5. '```' → logprob: -7.257048606872559
    6. 'a' → logprob: -7.507048606872559
    7. 'apis' → logprob: -8.132048606872559
    8. 'ап' → logprob: -8.132048606872559
    9. '##' → logprob: -9.007048606872559
    10. '`' → logprob: -9.132048606872559

Token 113: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02883131615817547
    2. ' )' → logprob: -3.9038312435150146
    3. ').' → logprob: -5.903831481933594
    4. '.' → logprob: -6.278831481933594
    5. ')
' → logprob: -6.278831481933594
    6. ',' → logprob: -8.028831481933594
    7. '
' → logprob: -8.153831481933594
    8. ' )
' → logprob: -8.653831481933594
    9. 'import' → logprob: -8.778831481933594
    10. '```' → logprob: -8.778831481933594

Token 114: 'from' (ID: 2845)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.1287878006696701
    2. '
' → logprob: -2.1287877559661865
    3. 'import' → logprob: -8.003787994384766
    4. '<|end|>' → logprob: -8.128787994384766
    5. ' 

' → logprob: -8.253787994384766
    6. '
' → logprob: -8.253787994384766
    7. '


' → logprob: -8.378787994384766
    8. '\n' → logprob: -9.128787994384766
    9. '' → logprob: -9.628787994384766
    10. '#' → logprob: -9.753787994384766

Token 115: ' collections' (ID: 22690)
  Prédit: ' collections'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.01627153903245926
    2. 'collections' → logprob: -4.266271591186523
    3. ' math' → logprob: -6.641271591186523
    4. ' itertools' → logprob: -7.641271591186523
    5. ' ' → logprob: -8.766271591186523
    6. ' functools' → logprob: -9.891271591186523
    7. ' operator' → logprob: -10.141271591186523
    8. ' heap' → logprob: -10.391271591186523
    9. ' typing' → logprob: -11.266271591186523
    10. '_' → logprob: -12.016271591186523

Token 116: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.014268225058913231
    2. 'import' → logprob: -4.264268398284912
    3. ' ' → logprob: -9.764267921447754
    4. '.' → logprob: -10.514267921447754
    5. ' defaultdict' → logprob: -11.889267921447754
    6. '	import' → logprob: -12.514267921447754
    7. ' collections' → logprob: -12.639267921447754
    8. '<|end|>' → logprob: -13.889267921447754
    9. 'collections' → logprob: -14.139267921447754
    10. '_import' → logprob: -14.514267921447754

Token 117: ' Counter' (ID: 32251)
  Prédit: ' deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deque' → logprob: -0.5763767957687378
    2. ' defaultdict' → logprob: -0.8263767957687378
    3. 'deque' → logprob: -8.326376914978027
    4. ' abc' → logprob: -9.076376914978027
    5. ' collections' → logprob: -9.826376914978027
    6. ' Counter' → logprob: -11.451376914978027
    7. ' named' → logprob: -11.826376914978027
    8. ' ' → logprob: -12.451376914978027
    9. ' itertools' → logprob: -13.451376914978027
    10. ' de' → logprob: -13.826376914978027

Token 118: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5300918817520142
    2. '<|end|>' → logprob: -0.9050918817520142
    3. ',' → logprob: -5.530091762542725
    4. '<|end|>' → logprob: -7.030091762542725
    5. ' 
' → logprob: -7.280091762542725
    6. 'import' → logprob: -7.780091762542725
    7. ' ,' → logprob: -7.905091762542725
    8. '  
' → logprob: -8.280092239379883
    9. '  ' → logprob: -9.155092239379883
    10. '
' → logprob: -9.780092239379883

Token 119: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 120: ' Im' (ID: 3133)
  Prédit: ' collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.49588122963905334
    2. ' import' → logprob: -0.995881199836731
    3. 'import' → logprob: -5.120881080627441
    4. ' importe' → logprob: -5.245881080627441
    5. 'collections' → logprob: -5.620881080627441
    6. ' Collections' → logprob: -6.495881080627441
    7. ' Import' → logprob: -6.495881080627441
    8. ' from' → logprob: -7.370881080627441
    9. ' imports' → logprob: -7.620881080627441
    10. 'importe' → logprob: -7.995881080627441

Token 121: 'porte' (ID: 17761)
  Prédit: 'port'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'port' → logprob: -0.011125401593744755
    2. 'porte' → logprob: -4.511125564575195
    3. 'porter' → logprob: -9.761125564575195
    4. 'porta' → logprob: -11.886125564575195
    5. 'ported' → logprob: -12.136125564575195
    6. 'ports' → logprob: -12.636125564575195
    7. 'portes' → logprob: -13.761125564575195
    8. 'orte' → logprob: -14.386125564575195
    9. 'import' → logprob: -14.886125564575195
    10. 'por' → logprob: -14.886125564575195

Token 122: ' la' (ID: 557)
  Prédit: ' collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.04217473790049553
    2. ' defaultdict' → logprob: -3.667174816131592
    3. 'collections' → logprob: -4.667174816131592
    4. ' ' → logprob: -5.667174816131592
    5. ' itertools' → logprob: -6.292174816131592
    6. ' Counter' → logprob: -7.792174816131592
    7. ' ' → logprob: -8.292174339294434
    8. ' deque' → logprob: -8.917174339294434
    9. 'deque' → logprob: -10.167174339294434
    10. 'Counter' → logprob: -10.292174339294434

Token 123: ' classe' (ID: 29329)
  Prédit: ' collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.0764140635728836
    2. 'collections' → logprob: -3.076414108276367
    3. ' module' → logprob: -4.326414108276367
    4. ' collection' → logprob: -4.451414108276367
    5. ' class' → logprob: -7.701414108276367
    6. 'module' → logprob: -7.951414108276367
    7. ' ' → logprob: -8.326414108276367
    8. 's' → logprob: -8.451414108276367
    9. ' defaultdict' → logprob: -8.576414108276367
    10. ' Counter' → logprob: -8.576414108276367

Token 124: ' '' (ID: 461)
  Prédit: ' Counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Counter' → logprob: -0.06799417734146118
    2. ' collections' → logprob: -3.5679941177368164
    3. ' defaultdict' → logprob: -3.6929941177368164
    4. 'Counter' → logprob: -4.817994117736816
    5. ' ' → logprob: -6.067994117736816
    6. 'collections' → logprob: -7.192994117736816
    7. ' ' → logprob: -7.317994117736816
    8. ' Collections' → logprob: -7.692994117736816
    9. '.Counter' → logprob: -8.567994117736816
    10. '<|end|>' → logprob: -10.192994117736816

Token 125: 'Counter' (ID: 16263)
  Prédit: 'Counter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Counter' → logprob: -0.6961829662322998
    2. ' Counter' → logprob: -0.6961829662322998
    3. ' defaultdict' → logprob: -5.946183204650879
    4. ' collections' → logprob: -8.946183204650879
    5. 'collections' → logprob: -9.571183204650879
    6. '.Counter' → logprob: -9.821183204650879
    7. 'deque' → logprob: -10.196183204650879
    8. 'default' → logprob: -10.446183204650879
    9. ' deque' → logprob: -10.696183204650879
    10. '```' → logprob: -11.321183204650879

Token 126: ''' (ID: 6)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3856244683265686
    2. '<|end|>' → logprob: -1.6356244087219238
    3. ' ,' → logprob: -2.885624408721924
    4. ' ' → logprob: -3.260624408721924
    5. ''' → logprob: -4.510624408721924
    6. '```' → logprob: -5.635624408721924
    7. '  ' → logprob: -5.635624408721924
    8. ' from' → logprob: -6.010624408721924
    9. '',' → logprob: -6.135624408721924
    10. 'from' → logprob: -6.260624408721924

Token 127: ' du' (ID: 1462)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.41997796297073364
    2. '<|end|>' → logprob: -1.4199779033660889
    3. ',' → logprob: -2.419977903366089
    4. ' ,' → logprob: -5.669978141784668
    5. ' (' → logprob: -6.294978141784668
    6. '(' → logprob: -6.669978141784668
    7. '<|end|>' → logprob: -6.794978141784668
    8. '  ' → logprob: -7.044978141784668
    9. ' from' → logprob: -7.044978141784668
    10. 'import' → logprob: -7.544978141784668

Token 128: ' module' (ID: 8827)
  Prédit: ' collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.0019032935379073024
    2. 'collections' → logprob: -6.376903057098389
    3. ' ' → logprob: -8.626903533935547
    4. ' ' → logprob: -11.126903533935547
    5. ' collection' → logprob: -12.126903533935547
    6. ' space' → logprob: -14.376903533935547
    7. '.collections' → logprob: -14.876903533935547
    8. ' module' → logprob: -15.751903533935547
    9. ' cole' → logprob: -16.001903533935547
    10. ' itertools' → logprob: -16.001903533935547

Token 129: ' '' (ID: 461)
  Prédit: ' collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.0109663475304842
    2. 'collections' → logprob: -4.8859663009643555
    3. ' ' → logprob: -5.7609663009643555
    4. ' ' → logprob: -8.760966300964355
    5. ' '' → logprob: -10.760966300964355
    6. ' collection' → logprob: -11.385966300964355
    7. '.collections' → logprob: -12.010966300964355
    8. ' itertools' → logprob: -13.010966300964355
    9. ' ' → logprob: -13.385966300964355
    10. ' cole' → logprob: -13.385966300964355

Token 130: 'collections' (ID: 83306)
  Prédit: 'collections'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'collections' → logprob: -0.0015042672166600823
    2. ' collections' → logprob: -6.501504421234131
    3. '.collections' → logprob: -14.126503944396973
    4. 'collection' → logprob: -14.501503944396973
    5. ' ' → logprob: -15.251503944396973
    6. '```' → logprob: -15.876503944396973
    7. 'col' → logprob: -16.12650489807129
    8. 'collect' → logprob: -16.25150489807129
    9. 'cole' → logprob: -17.37650489807129
    10. 'Collections' → logprob: -17.50150489807129

Token 131: '',' (ID: 787)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.007988691329956
    2. '<|end|>' → logprob: -2.257988691329956
    3. ' ' → logprob: -2.382988691329956
    4. ' }' → logprob: -2.507988691329956
    5. ' ,' → logprob: -2.632988691329956
    6. ''' → logprob: -2.632988691329956
    7. '```' → logprob: -3.007988691329956
    8. 'import' → logprob: -3.007988691329956
    9. '}' → logprob: -3.007988691329956
    10. '
' → logprob: -4.007988929748535

Token 132: ' qui' (ID: 2780)
  Prédit: ' collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.48519402742385864
    2. ' ' → logprob: -1.1101939678192139
    3. ' which' → logprob: -3.860193967819214
    4. ' qui' → logprob: -4.110194206237793
    5. 'collections' → logprob: -5.110194206237793
    6. ' permettant' → logprob: -5.235194206237793
    7. ' ' → logprob: -6.485194206237793
    8. ' defaultdict' → logprob: -6.485194206237793
    9. ' collection' → logprob: -7.735194206237793
    10. ' une' → logprob: -8.235194206237793

Token 133: ' compte' (ID: 19657)
  Prédit: ' permet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' permet' → logprob: -0.21363048255443573
    2. ' facilite' → logprob: -2.963630437850952
    3. ' ' → logprob: -3.088630437850952
    4. ' fournit' → logprob: -3.213630437850952
    5. ' aide' → logprob: -3.963630437850952
    6. ' est' → logprob: -3.963630437850952
    7. ' collections' → logprob: -5.588630676269531
    8. ' compte' → logprob: -5.713630676269531
    9. ' offre' → logprob: -6.838630676269531
    10. 'collections' → logprob: -6.838630676269531

Token 134: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.3905867636203766
    2. '<|end|>' → logprob: -1.6405867338180542
    3. ' des' → logprob: -2.7655868530273438
    4. 'les' → logprob: -3.2655868530273438
    5. 'élé' → logprob: -4.640586853027344
    6. ' ' → logprob: -5.015586853027344
    7. 'des' → logprob: -5.765586853027344
    8. 's' → logprob: -6.015586853027344
    9. ' elements' → logprob: -6.640586853027344
    10. 'elements' → logprob: -6.765586853027344

Token 135: ' éléments' (ID: 57375)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.0926569327712059
    2. ' éléments' → logprob: -2.4676568508148193
    3. ' occurrences' → logprob: -5.967657089233398
    4. 'hash' → logprob: -8.342657089233398
    5. 'elements' → logprob: -8.467657089233398
    6. ' elements' → logprob: -8.592657089233398
    7. ' objets' → logprob: -8.967657089233398
    8. 'é' → logprob: -9.342657089233398
    9. 'collections' → logprob: -9.592657089233398
    10. ' él' → logprob: -10.592657089233398

Token 136: ' dans' (ID: 2671)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 137: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -1.004876732826233
    2. ' les' → logprob: -1.504876732826233
    3. '<|end|>' → logprob: -1.754876732826233
    4. ' une' → logprob: -2.0048766136169434
    5. ' iterable' → logprob: -3.7548766136169434
    6. ' un' → logprob: -4.004876613616943
    7. ' collections' → logprob: -4.129876613616943
    8. 's' → logprob: -4.379876613616943
    9. ' ' → logprob: -4.754876613616943
    10. ' iter' → logprob: -5.004876613616943

Token 138: ' objets' (ID: 83726)
  Prédit: 'iter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'iter' → logprob: -0.6682323217391968
    2. ' it' → logprob: -1.5432323217391968
    3. 'it' → logprob: -1.9182323217391968
    4. ' iter' → logprob: -2.7932324409484863
    5. ' iterable' → logprob: -3.2932324409484863
    6. 'collections' → logprob: -4.418232440948486
    7. ' ' → logprob: -5.293232440948486
    8. ' collections' → logprob: -5.918232440948486
    9. 'containers' → logprob: -6.543232440948486
    10. 'conten' → logprob: -6.668232440948486

Token 139: ' it' (ID: 480)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8006160259246826
    2. ' it' → logprob: -1.0506160259246826
    3. ' iter' → logprob: -2.6756160259246826
    4. ' iterable' → logprob: -3.4256160259246826
    5. 'iter' → logprob: -3.8006160259246826
    6. 'it' → logprob: -3.8006160259246826
    7. '.' → logprob: -4.050616264343262
    8. 'collections' → logprob: -4.550616264343262
    9. ' collections' → logprob: -4.800616264343262
    10. 's' → logprob: -5.050616264343262

Token 140: 'ér' (ID: 2156)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.20270533859729767
    2. 'ér' → logprob: -1.7027053833007812
    3. 'ertools' → logprob: -7.202705383300781
    4. 'e' → logprob: -9.077705383300781
    5. '```' → logprob: -9.327705383300781
    6. 'ables' → logprob: -9.827705383300781
    7. 'é' → logprob: -10.577705383300781
    8. 'érés' → logprob: -10.577705383300781
    9. 'érateur' → logprob: -10.827705383300781
    10. 'érées' → logprob: -10.952705383300781

Token 141: 'ables' (ID: 3232)
  Prédit: 'ables'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ables' → logprob: -0.0792555883526802
    2. 'able' → logprob: -2.5792555809020996
    3. '```' → logprob: -8.204256057739258
    4. 'er' → logprob: -10.704256057739258
    5. 'bles' → logprob: -11.579256057739258
    6. 'atables' → logprob: -11.829256057739258
    7. '   ' → logprob: -11.954256057739258
    8. 'r' → logprob: -12.079256057739258
    9. 'ér' → logprob: -12.329256057739258
    10. ' able' → logprob: -12.454256057739258

Token 142: '.
' (ID: 558)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6190311908721924
    2. '

' → logprob: -0.9940311908721924
    3. '<|end|>' → logprob: -2.7440311908721924
    4. '.' → logprob: -4.619030952453613
    5. ' 

' → logprob: -5.494030952453613
    6. 'import' → logprob: -5.994030952453613
    7. ',' → logprob: -5.994030952453613
    8. ' 
' → logprob: -6.494030952453613
    9. '


' → logprob: -6.619030952453613
    10. ' ' → logprob: -7.119030952453613

Token 143: 'from' (ID: 2845)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.28526806831359863
    2. '
' → logprob: -1.4102680683135986
    3. '


' → logprob: -6.9102678298950195
    4. 'import' → logprob: -7.1602678298950195
    5. ' 

' → logprob: -7.7852678298950195
    6. '<|end|>' → logprob: -7.7852678298950195
    7. 'def' → logprob: -7.9102678298950195
    8. '#' → logprob: -8.66026782989502
    9. '\n' → logprob: -8.66026782989502
    10. '



' → logprob: -9.03526782989502

Token 144: ' collections' (ID: 22690)
  Prédit: ' collections'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collections' → logprob: -1.1833202838897705
    2. ' itertools' → logprob: -1.3083202838897705
    3. ' math' → logprob: -1.5583202838897705
    4. ' typing' → logprob: -1.8083202838897705
    5. ' functools' → logprob: -3.9333202838897705
    6. ' operator' → logprob: -4.808320045471191
    7. 'collections' → logprob: -5.308320045471191
    8. ' datetime' → logprob: -5.558320045471191
    9. ' os' → logprob: -6.058320045471191
    10. ' ' → logprob: -6.183320045471191

Token 145: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.004426082130521536
    2. 'import' → logprob: -5.629426002502441
    3. '.' → logprob: -7.129426002502441
    4. ' ' → logprob: -11.379426002502441
    5. '	import' → logprob: -11.754426002502441
    6. 'abc' → logprob: -13.629426002502441
    7. '.import' → logprob: -14.004426002502441
    8. ' defaultdict' → logprob: -14.379426002502441
    9. '```' → logprob: -14.629426002502441
    10. ' abc' → logprob: -15.004426002502441

Token 146: ' deque' (ID: 90347)
  Prédit: ' defaultdict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.08309207856655121
    2. ' deque' → logprob: -2.583091974258423
    3. 'deque' → logprob: -5.833092212677002
    4. 'default' → logprob: -6.958092212677002
    5. ' named' → logprob: -8.583091735839844
    6. ' Ordered' → logprob: -9.333091735839844
    7. 'named' → logprob: -10.833091735839844
    8. ' default' → logprob: -11.708091735839844
    9. 'Ordered' → logprob: -11.958091735839844
    10. 'de' → logprob: -13.958091735839844

Token 147: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.005970507860183716
    2. '<|end|>' → logprob: -6.130970478057861
    3. ' #' → logprob: -6.880970478057861
    4. '  
' → logprob: -7.130970478057861
    5. '  ' → logprob: -7.255970478057861
    6. ' 
' → logprob: -7.505970478057861
    7. ',' → logprob: -7.880970478057861
    8. ' ,' → logprob: -8.88097095489502
    9. ' ' → logprob: -9.75597095489502
    10. '
' → logprob: -10.88097095489502

Token 148: ' #' (ID: 1069)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.11357800662517548
    2. '<|end|>' → logprob: -2.4885780811309814
    3. ' #' → logprob: -3.8635780811309814
    4. '  ' → logprob: -6.113577842712402
    5. ',' → logprob: -8.113577842712402
    6. ' ,' → logprob: -8.363577842712402
    7. '  
' → logprob: -8.488577842712402
    8. '#' (adapté à ' #') → logprob: -9.113577842712402
    9. ' ' → logprob: -9.738577842712402
    10. ' as' → logprob: -9.863577842712402

Token 149: ' Im' (ID: 3133)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.56960129737854
    2. ' collections' → logprob: -1.31960129737854
    3. ' import' → logprob: -1.81960129737854
    4. 'collections' → logprob: -6.319601058959961
    5. 'import' → logprob: -6.694601058959961
    6. ' ' → logprob: -6.694601058959961
    7. '  ' → logprob: -8.319601058959961
    8. ' deque' → logprob: -9.194601058959961
    9. ' defaultdict' → logprob: -9.569601058959961
    10. ' collection' → logprob: -9.694601058959961

Token 150: 'porte' (ID: 17761)
  Prédit: 'porte'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'porte' → logprob: -0.000540166103746742
    2. 'orte' → logprob: -8.250539779663086
    3. 'port' → logprob: -8.875539779663086
    4. ' porte' → logprob: -9.750539779663086
    5. 'portes' → logprob: -10.125539779663086
    6. 'p' → logprob: -10.750539779663086
    7. 'por' → logprob: -12.000539779663086
    8. 'pte' → logprob: -12.875539779663086
    9. 'po' → logprob: -13.125539779663086
    10. 'porta' → logprob: -13.750539779663086

Token 151: ' la' (ID: 557)
  Prédit: ' collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.1997421234846115
    2. ' la' → logprob: -1.949742078781128
    3. ' ' → logprob: -4.074742317199707
    4. 'collections' → logprob: -4.824742317199707
    5. ' ' → logprob: -4.949742317199707
    6. ' l' → logprob: -6.074742317199707
    7. ' le' → logprob: -6.699742317199707
    8. ' les' → logprob: -6.824742317199707
    9. ' des' → logprob: -7.199742317199707
    10. ' the' → logprob: -7.949742317199707

Token 152: ' classe' (ID: 29329)
  Prédit: ' collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.7448544502258301
    2. 'collections' → logprob: -0.7448544502258301
    3. ' module' → logprob: -3.24485445022583
    4. 'module' → logprob: -4.99485445022583
    5. 'deque' → logprob: -5.61985445022583
    6. ' deque' → logprob: -7.74485445022583
    7. ' collection' → logprob: -8.244853973388672
    8. ' queue' → logprob: -9.619853973388672
    9. ' ' → logprob: -9.619853973388672
    10. ' defaultdict' → logprob: -10.369853973388672

Token 153: ' '' (ID: 461)
  Prédit: ' ''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.04166798293590546
    2. ' deque' → logprob: -3.791667938232422
    3. 'deque' → logprob: -4.916667938232422
    4. ' ' → logprob: -5.541667938232422
    5. ' collections' → logprob: -6.416667938232422
    6. ' ' → logprob: -7.041667938232422
    7. ' de' → logprob: -7.041667938232422
    8. ' defaultdict' → logprob: -7.041667938232422
    9. ' from' → logprob: -7.166667938232422
    10. ' `' → logprob: -7.291667938232422

Token 154: 'deque' (ID: 143563)
  Prédit: 'deque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.5761443972587585
    2. ' deque' → logprob: -0.8261443972587585
    3. ' defaultdict' → logprob: -8.951144218444824
    4. 'collections' → logprob: -10.076144218444824
    5. ' collections' → logprob: -10.701144218444824
    6. 'Deque' → logprob: -11.576144218444824
    7. 'de' → logprob: -14.326144218444824
    8. 'default' → logprob: -15.451144218444824
    9. ' ' → logprob: -15.826144218444824
    10. ' dequeue' → logprob: -16.32614517211914

Token 155: ''' (ID: 6)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.45744699239730835
    2. '<|end|>' → logprob: -1.7074470520019531
    3. ',' → logprob: -1.9574470520019531
    4. ' from' → logprob: -4.832447052001953
    5. ' ,' → logprob: -4.832447052001953
    6. 'from' → logprob: -4.832447052001953
    7. ' #' → logprob: -5.582447052001953
    8. 'import' → logprob: -5.707447052001953
    9. ' }' → logprob: -5.957447052001953
    10. ' (' → logprob: -6.082447052001953

Token 156: ' pour' (ID: 1930)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1538028120994568
    2. '<|end|>' → logprob: -2.0288028717041016
    3. ' (' → logprob: -5.653802871704102
    4. ' from' → logprob: -6.778802871704102
    5. ',' → logprob: -7.028802871704102
    6. '  ' → logprob: -7.153802871704102
    7. 'from' → logprob: -7.403802871704102
    8. '<|end|>' → logprob: -7.528802871704102
    9. 'import' → logprob: -7.653802871704102
    10. ' import' → logprob: -7.653802871704102

Token 157: ' créer' (ID: 40938)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.28492259979248047
    2. ' une' → logprob: -2.2849225997924805
    3. ' les' → logprob: -2.9099225997924805
    4. ' collections' → logprob: -3.1599225997924805
    5. ' double' → logprob: -3.5349225997924805
    6. ' gérer' → logprob: -5.2849225997924805
    7. ' créer' → logprob: -5.5349225997924805
    8. 'des' → logprob: -5.9099225997924805
    9. 'collections' → logprob: -5.9099225997924805
    10. 'les' → logprob: -6.9099225997924805

Token 158: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.015176448039710522
    2. 'des' → logprob: -4.765176296234131
    3. ' une' → logprob: -5.390176296234131
    4. ' ' → logprob: -6.890176296234131
    5. ' ' → logprob: -7.765176296234131
    6. ' double' → logprob: -8.265176773071289
    7. 'une' → logprob: -9.015176773071289
    8. 'double' → logprob: -10.640176773071289
    9. 's' → logprob: -10.890176773071289
    10. ' de' → logprob: -11.015176773071289

Token 159: ' files' (ID: 6291)
  Prédit: ' structures'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' structures' → logprob: -0.5678547024726868
    2. ' files' → logprob: -1.067854642868042
    3. ' listes' → logprob: -3.692854642868042
    4. 'structures' → logprob: -3.692854642868042
    5. ' ' → logprob: -4.192854881286621
    6. ' file' → logprob: -4.817854881286621
    7. 'files' → logprob: -5.067854881286621
    8. ' collections' → logprob: -6.317854881286621
    9. 'collections' → logprob: -6.442854881286621
    10. ' double' → logprob: -6.567854881286621

Token 160: ' d' (ID: 272)
  Prédit: ' double'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' double' → logprob: -0.20476649701595306
    2. 'double' → logprob: -2.4547665119171143
    3. ' (' → logprob: -3.5797665119171143
    4. 'd' → logprob: -3.9547665119171143
    5. ' doubles' → logprob: -4.079766273498535
    6. ' d' → logprob: -4.704766273498535
    7. 'deque' → logprob: -4.954766273498535
    8. ' ' → logprob: -5.204766273498535
    9. ' de' → logprob: -6.079766273498535
    10. '<|end|>' → logprob: -6.329766273498535

Token 161: ''att' (ID: 50189)
  Prédit: 'double'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'double' → logprob: -1.018704891204834
    2. ''att' → logprob: -1.393704891204834
    3. 'ouble' → logprob: -2.143704891204834
    4. 'att' → logprob: -2.518704891204834
    5. ' double' → logprob: -2.893704891204834
    6. 'collections' → logprob: -3.143704891204834
    7. '```' → logprob: -3.393704891204834
    8. 'd' → logprob: -3.893704891204834
    9. '’att' → logprob: -4.393704891204834
    10. 'e' → logprob: -5.893704891204834

Token 162: 'ente' (ID: 1576)
  Prédit: 'ente'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ente' → logprob: -0.0006509594968520105
    2. 'ent' → logprob: -7.750650882720947
    3. 'entes' → logprob: -8.625651359558105
    4. 'endre' → logprob: -10.750651359558105
    5. 'end' → logprob: -11.750651359558105
    6. 'ende' → logprob: -12.375651359558105
    7. 'endent' → logprob: -13.875651359558105
    8. 'd' → logprob: -14.000651359558105
    9. 'e' → logprob: -14.125651359558105
    10. 'ENTE' → logprob: -14.375651359558105

Token 163: ' à' (ID: 1221)
  Prédit: ' double'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' double' → logprob: -0.2946416437625885
    2. ' ' → logprob: -2.6696417331695557
    3. '<|end|>' → logprob: -2.6696417331695557
    4. ',' → logprob: -2.7946417331695557
    5. 'double' → logprob: -3.5446417331695557
    6. ' ,' → logprob: -5.169641494750977
    7. ' doubles' → logprob: -5.294641494750977
    8. ' (' → logprob: -5.419641494750977
    9. ' doub' → logprob: -6.044641494750977
    10. ' ' → logprob: -6.419641494750977

Token 164: ' accès' (ID: 65948)
  Prédit: 'double'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'double' → logprob: -0.07684523612260818
    2. ' double' → logprob: -2.701845169067383
    3. '```' → logprob: -5.451845169067383
    4. ' ' → logprob: -7.826845169067383
    5. '
' → logprob: -7.951845169067383
    6. '   ' → logprob: -8.326845169067383
    7. 'dbl' → logprob: -8.326845169067383
    8. 'liste' → logprob: -9.326845169067383
    9. ' ' → logprob: -9.326845169067383
    10. ' deux' → logprob: -9.576845169067383

Token 165: ' rapide' (ID: 44887)
  Prédit: ' double'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' double' → logprob: -0.8061937093734741
    2. 'double' → logprob: -0.9311937093734741
    3. ' rapide' → logprob: -1.9311937093734741
    4. 'rap' → logprob: -4.556193828582764
    5. ' rapides' → logprob: -7.306193828582764
    6. 't' → logprob: -7.681193828582764
    7. '```' → logprob: -8.181193351745605
    8. 'bil' → logprob: -8.181193351745605
    9. ' bid' → logprob: -8.306193351745605
    10. '双' → logprob: -8.306193351745605

Token 166: ' en' (ID: 469)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.2211620807647705
    2. '<|end|>' → logprob: -1.2211620807647705
    3. ' ' → logprob: -1.7211620807647705
    4. '.' → logprob: -2.5961620807647705
    5. ',' → logprob: -2.7211620807647705
    6. ' 
' → logprob: -2.8461620807647705
    7. '  
' → logprob: -4.346161842346191
    8. 's' → logprob: -5.096161842346191
    9. 'import' → logprob: -5.096161842346191
    10. ' ,' → logprob: -6.471161842346191

Token 167: ' FIFO' (ID: 114077)
  Prédit: ' double'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' double' → logprob: -0.36675921082496643
    2. ' les' → logprob: -2.3667593002319336
    3. 'double' → logprob: -2.8667593002319336
    4. 'les' → logprob: -2.9917593002319336
    5. '```' → logprob: -3.6167593002319336
    6. ' deux' → logprob: -4.116759300231934
    7. ' ' → logprob: -4.366759300231934
    8. ' collections' → logprob: -4.866759300231934
    9. ' liste' → logprob: -4.866759300231934
    10. ' temps' → logprob: -5.241759300231934

Token 168: '/L' (ID: 26049)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 169: 'IFO' (ID: 79012)
  Prédit: 'IFO'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IFO' → logprob: -0.39100244641304016
    2. 'I' → logprob: -1.1410024166107178
    3. 'IF' → logprob: -7.266002655029297
    4. 'O' → logprob: -7.266002655029297
    5. 'ILO' → logprob: -7.516002655029297
    6. 'A' → logprob: -7.516002655029297
    7. 'RU' → logprob: -7.891002655029297
    8. 'U' → logprob: -8.516002655029297
    9. '```' → logprob: -8.766002655029297
    10. 'ifo' → logprob: -9.016002655029297

Token 170: '.
' (ID: 558)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3915848731994629
    2. '<|end|>' → logprob: -1.141584873199463
    3. '  
' → logprob: -6.766584873199463
    4. ' 
' → logprob: -6.891584873199463
    5. '

' → logprob: -7.141584873199463
    6. '
' → logprob: -7.266584873199463
    7. 'import' → logprob: -8.141584396362305
    8. '<|end|>' → logprob: -8.266584396362305
    9. '```' → logprob: -8.891584396362305
    10. '\n' → logprob: -9.266584396362305

Token 171: 'from' (ID: 2845)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.24071478843688965
    2. '
' → logprob: -1.6157147884368896
    3. 'import' → logprob: -4.740715026855469
    4. '


' → logprob: -5.990715026855469
    5. ' 

' → logprob: -6.865715026855469
    6. 'def' → logprob: -7.615715026855469
    7. '
' → logprob: -7.990715026855469
    8. '
 
' → logprob: -7.990715026855469
    9. '\n' → logprob: -8.365715026855469
    10. '#' → logprob: -8.365715026855469

Token 172: ' fractions' (ID: 110523)
  Prédit: ' typing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' typing' → logprob: -0.9714903831481934
    2. ' collections' → logprob: -1.3464903831481934
    3. ' functools' → logprob: -1.7214903831481934
    4. ' operator' → logprob: -2.5964903831481934
    5. ' random' → logprob: -3.2214903831481934
    6. ' os' → logprob: -4.221490383148193
    7. ' itertools' → logprob: -4.221490383148193
    8. ' threading' → logprob: -4.846490383148193
    9. 'collections' → logprob: -4.971490383148193
    10. ' bis' → logprob: -5.471490383148193

Token 173: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.010435384698212147
    2. 'import' → logprob: -5.010435581207275
    3. ' ' → logprob: -5.635435581207275
    4. '<|end|>' → logprob: -9.260435104370117
    5. '	import' → logprob: -10.760435104370117
    6. ' ' → logprob: -11.260435104370117
    7. '<|end|>' → logprob: -12.260435104370117
    8. '_import' → logprob: -12.260435104370117
    9. ' importar' → logprob: -14.385435104370117
    10. '```' → logprob: -14.635435104370117

Token 174: ' gcd' (ID: 106918)
  Prédit: ' Fraction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Fraction' → logprob: -0.005112084094434977
    2. 'Fraction' → logprob: -5.380112171173096
    3. ' ' → logprob: -8.130111694335938
    4. ' Fra' → logprob: -8.880111694335938
    5. ' Rational' → logprob: -10.630111694335938
    6. ' fractions' → logprob: -10.755111694335938
    7. 'Fra' → logprob: -11.880111694335938
    8. ' ' → logprob: -13.880111694335938
    9. '_fraction' → logprob: -13.880111694335938
    10. ' F' → logprob: -14.255111694335938

Token 175: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 176: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 177: ' Im' (ID: 3133)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.10999733954668045
    2. 'from' → logprob: -3.484997272491455
    3. '<|end|>' → logprob: -3.484997272491455
    4. ' from' → logprob: -3.734997272491455
    5. ' fractions' → logprob: -5.734997272491455
    6. ' Deprecated' → logprob: -5.984997272491455
    7. ' math' → logprob: -6.109997272491455
    8. ' Fra' → logprob: -6.484997272491455
    9. ' deprecated' → logprob: -6.484997272491455
    10. 'Fra' → logprob: -6.984997272491455

Token 178: 'porte' (ID: 17761)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.38306495547294617
    2. ' fractions' → logprob: -1.7580649852752686
    3. 'fra' → logprob: -2.3830649852752686
    4. 'from' → logprob: -4.6330647468566895
    5. ' ' → logprob: -4.7580647468566895
    6. 'math' → logprob: -5.0080647468566895
    7. ' ' → logprob: -5.1330647468566895
    8. ' from' → logprob: -5.5080647468566895
    9. 'ractions' → logprob: -5.6330647468566895
    10. ' functools' → logprob: -6.3830647468566895

Token 179: ' la' (ID: 557)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 180: ' fonction' (ID: 17610)
  Prédit: ' fractions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' fractions' → logprob: -0.06164415925741196
    2. 'fra' → logprob: -2.9366440773010254
    3. 'fraction' → logprob: -5.686644077301025
    4. ' fraction' → logprob: -6.936644077301025
    5. ' math' → logprob: -7.061644077301025
    6. '<|end|>' → logprob: -7.811644077301025
    7. ' gcd' → logprob: -7.936644077301025
    8. 'g' → logprob: -8.186644554138184
    9. 'math' → logprob: -8.811644554138184
    10. '_fraction' → logprob: -8.936644554138184

Token 181: ' gcd' (ID: 106918)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.944635272026062
    2. ' ' → logprob: -1.569635272026062
    3. '<|end|>' → logprob: -1.819635272026062
    4. ' (' → logprob: -2.5696353912353516
    5. 'g' → logprob: -3.1946353912353516
    6. '()' → logprob: -3.3196353912353516
    7. ' gcd' → logprob: -3.3196353912353516
    8. ' fractions' → logprob: -4.319635391235352
    9. ' )' → logprob: -5.069635391235352
    10. ')' → logprob: -5.319635391235352

Token 182: ' (' (ID: 350)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 183: 'great' (ID: 67530)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1800035536289215
    2. 'math' → logprob: -3.3050036430358887
    3. 'from' → logprob: -3.5550036430358887
    4. '<|end|>' → logprob: -3.5550036430358887
    5. ' from' → logprob: -3.8050036430358887
    6. ' )' → logprob: -4.305003643035889
    7. ',' → logprob: -4.680003643035889
    8. ' math' → logprob: -4.805003643035889
    9. 'deprecated' → logprob: -5.555003643035889
    10. 'g' → logprob: -5.805003643035889

Token 184: 'est' (ID: 376)
  Prédit: 'est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.006820985581725836
    2. 'es' → logprob: -5.006821155548096
    3. '_common' → logprob: -10.006820678710938
    4. 'ests' → logprob: -11.131820678710938
    5. ' common' → logprob: -11.381820678710938
    6. 'common' → logprob: -11.381820678710938
    7. 'er' → logprob: -12.006820678710938
    8. 'gest' → logprob: -12.756820678710938
    9. ' ' → logprob: -12.881820678710938
    10. 'estor' → logprob: -13.381820678710938

Token 185: ' common' (ID: 5355)
  Prédit: '_common'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_common' → logprob: -0.0830896720290184
    2. ' common' → logprob: -2.833089590072632
    3. '_' → logprob: -4.083089828491211
    4. 'common' → logprob: -6.083089828491211
    5. '(common' → logprob: -7.208089828491211
    6. ' ' → logprob: -8.208089828491211
    7. ')' → logprob: -8.458089828491211
    8. '<|end|>' → logprob: -8.708089828491211
    9. '	common' → logprob: -9.958089828491211
    10. '-common' → logprob: -10.208089828491211

Token 186: ' divisor' (ID: 100482)
  Prédit: '_common'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_common' → logprob: -0.5527905225753784
    2. '_div' → logprob: -1.0527905225753784
    3. ' common' → logprob: -3.302790641784668
    4. '_' → logprob: -3.552790641784668
    5. ' divisor' → logprob: -5.552790641784668
    6. 'common' → logprob: -5.802790641784668
    7. ' ' → logprob: -5.927790641784668
    8. 'div' → logprob: -8.052790641784668
    9. '_den' → logprob: -8.552790641784668
    10. '	common' → logprob: -9.802790641784668

Token 187: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09573379904031754
    2. '<|end|>' → logprob: -2.720733880996704
    3. ',' → logprob: -3.845733880996704
    4. ' )' → logprob: -6.845733642578125
    5. '(' → logprob: -7.220733642578125
    6. 'from' → logprob: -7.595733642578125
    7. '<|end|>' → logprob: -8.095733642578125
    8. '
' → logprob: -8.345733642578125
    9. '()' → logprob: -8.720733642578125
    10. ' ' → logprob: -8.720733642578125

Token 188: ' pour' (ID: 1930)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 189: ' calcul' (ID: 7559)
  Prédit: ' calcul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' calcul' → logprob: -0.22290939092636108
    2. 'calcul' → logprob: -1.8479094505310059
    3. ' math' → logprob: -3.722909450531006
    4. ' trouver' → logprob: -5.097909450531006
    5. 'cal' → logprob: -5.972909450531006
    6. ' calcular' → logprob: -6.097909450531006
    7. ' compute' → logprob: -6.472909450531006
    8. ' calculate' → logprob: -6.972909450531006
    9. 'math' → logprob: -7.222909450531006
    10. 'comput' → logprob: -8.097908973693848

Token 190: 'er' (ID: 259)
  Prédit: 'ulate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ulate' → logprob: -0.9450836181640625
    2. 'uler' → logprob: -1.0700836181640625
    3. 'ulator' → logprob: -2.3200836181640625
    4. 'er' → logprob: -2.6950836181640625
    5. 'ul' → logprob: -3.9450836181640625
    6. 'culate' → logprob: -4.0700836181640625
    7. 'ate' → logprob: -4.4450836181640625
    8. 'us' → logprob: -4.8200836181640625
    9. 'ulus' → logprob: -4.9450836181640625
    10. 'ateur' → logprob: -5.0700836181640625

Token 191: ' le' (ID: 505)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 192: ' plus' (ID: 2932)
  Prédit: ' greatest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' greatest' → logprob: -0.6078504323959351
    2. ',' → logprob: -2.1078505516052246
    3. ' plus' → logprob: -2.6078505516052246
    4. ' pg' → logprob: -2.7328505516052246
    5. ' gcd' → logprob: -3.3578505516052246
    6. 'pg' → logprob: -3.6078505516052246
    7. ')' → logprob: -3.8578505516052246
    8. 'great' → logprob: -3.8578505516052246
    9. ' Greatest' → logprob: -4.232850551605225
    10. '_pg' → logprob: -4.482850551605225

Token 193: ' grand' (ID: 6363)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.002798103028908372
    2. '_common' → logprob: -6.252798080444336
    3. ' _' → logprob: -8.002798080444336
    4. '_comm' → logprob: -8.252798080444336
    5. ' ' → logprob: -9.627798080444336
    6. '_exact' → logprob: -11.127798080444336
    7. '_general' → logprob: -11.252798080444336
    8. '_global' → logprob: -11.627798080444336
    9. '_com' → logprob: -11.627798080444336
    10. '_val' → logprob: -11.877798080444336

Token 194: ' commun' (ID: 2797)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0015425959136337042
    2. '_common' → logprob: -7.376542568206787
    3. '(' → logprob: -8.126543045043945
    4. '_comm' → logprob: -9.126543045043945
    5. '<|end|>' → logprob: -9.126543045043945
    6. '_com' → logprob: -9.626543045043945
    7. ',' → logprob: -10.126543045043945
    8. '_,' → logprob: -10.751543045043945
    9. 'underscore' → logprob: -10.751543045043945
    10. '_parent' → logprob: -11.001543045043945

Token 195: ' div' (ID: 4223)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.16442012786865234
    2. '_div' → logprob: -1.9144201278686523
    3. ' divisor' → logprob: -6.414420127868652
    4. 'den' → logprob: -6.789420127868652
    5. ' div' → logprob: -7.289420127868652
    6. '_d' → logprob: -7.914420127868652
    7. '	div' → logprob: -9.164420127868652
    8. ' ' → logprob: -9.539420127868652
    9. 'd' → logprob: -9.789420127868652
    10. '(div' → logprob: -11.289420127868652

Token 196: 'iseur' (ID: 108637)
  Prédit: 'iseur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iseur' → logprob: -0.9145732522010803
    2. '```' → logprob: -2.0395731925964355
    3. 'é' → logprob: -2.4145731925964355
    4. 'iteur' → logprob: -2.7895731925964355
    5. 'eur' → logprob: -3.2895731925964355
    6. ')' → logprob: -3.5395731925964355
    7. 'ificate' → logprob: -3.9145731925964355
    8. '__' → logprob: -4.4145731925964355
    9. 'isor' → logprob: -4.5395731925964355
    10. 'f' → logprob: -4.5395731925964355

Token 197: ' de' (ID: 334)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 198: ' deux' (ID: 10301)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8095705509185791
    2. '(' → logprob: -1.809570550918579
    3. '(a' → logprob: -1.934570550918579
    4. ' two' → logprob: -2.934570550918579
    5. ' fractions' → logprob: -3.434570550918579
    6. 'two' → logprob: -3.559570550918579
    7. ' ,' → logprob: -3.684570550918579
    8. ')' → logprob: -4.1845703125
    9. 'a' → logprob: -4.3095703125
    10. ' ' → logprob: -4.5595703125

Token 199: ' nombres' (ID: 76205)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3721944987773895
    2. ' nombres' → logprob: -1.997194528579712
    3. '(a' → logprob: -2.622194528579712
    4. ' numbers' → logprob: -3.372194528579712
    5. '_numbers' → logprob: -4.122194290161133
    6. '(' → logprob: -4.622194290161133
    7. '_' → logprob: -4.872194290161133
    8. ' integers' → logprob: -4.997194290161133
    9. 'numbers' → logprob: -5.747194290161133
    10. ' ent' → logprob: -5.872194290161133

Token 200: '.
' (ID: 558)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9302665591239929
    2. '
' → logprob: -1.1802666187286377
    3. '<|end|>' → logprob: -1.5552666187286377
    4. '(' → logprob: -3.8052666187286377
    5. 'import' → logprob: -4.305266380310059
    6. '' → logprob: -4.805266380310059
    7. '#' → logprob: -5.180266380310059
    8. ' ' → logprob: -5.305266380310059
    9. '(
' → logprob: -5.555266380310059
    10. ')' → logprob: -5.555266380310059

Token 201: 'INF' (ID: 64358)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2589740753173828
    2. '<|end|>' → logprob: -1.6339740753173828
    3. '

' → logprob: -4.258974075317383
    4. ',' → logprob: -4.508974075317383
    5. '<|end|>' → logprob: -6.883974075317383
    6. '#' → logprob: -6.883974075317383
    7. '.' → logprob: -7.133974075317383
    8. '' → logprob: -7.133974075317383
    9. 'import' → logprob: -7.258974075317383
    10. ' ' → logprob: -7.383974075317383

Token 202: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02632305398583412
    2. '=' → logprob: -3.651323080062866
    3. ' ' → logprob: -11.026323318481445
    4. ',' → logprob: -12.526323318481445
    5. ' =
' → logprob: -13.401323318481445
    6. ' ' → logprob: -15.401323318481445
    7. '  ' → logprob: -15.526323318481445
    8. '.' → logprob: -15.526323318481445
    9. ' ,' → logprob: -15.526323318481445
    10. '_' → logprob: -15.901323318481445

Token 203: ' ' (ID: 220)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.48789408802986145
    2. ' float' → logprob: -0.9878940582275391
    3. '10' → logprob: -4.612894058227539
    4. ' ' → logprob: -5.737894058227539
    5. 'math' → logprob: -7.862894058227539
    6. ' math' → logprob: -8.612894058227539
    7. 'int' → logprob: -12.362894058227539
    8. '	float' → logprob: -12.737894058227539
    9. '100' → logprob: -13.737894058227539
    10. '1' → logprob: -13.987894058227539

Token 204: '1' (ID: 16)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.16067971289157867
    2. '10' → logprob: -1.9106796979904175
    3. 'math' → logprob: -7.910679817199707
    4. 'int' → logprob: -9.660679817199707
    5. ' float' → logprob: -11.035679817199707
    6. '1' → logprob: -12.160679817199707
    7. '100' → logprob: -13.035679817199707
    8. '999' → logprob: -14.160679817199707
    9. ' ' → logprob: -15.035679817199707
    10. 'sys' → logprob: -15.660679817199707

Token 205: ' <<' (ID: 2256)
  Prédit: '000'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.4802907407283783
    2. '0' → logprob: -0.9802907705307007
    3. '<<' → logprob: -5.48029088973999
    4. '00' → logprob: -6.60529088973999
    5. '_' → logprob: -8.230290412902832
    6. 'e' → logprob: -8.605290412902832
    7. ' <<' → logprob: -9.480290412902832
    8. '   ' → logprob: -10.605290412902832
    9. '       ' → logprob: -11.355290412902832
    10. '012' → logprob: -11.730290412902832

Token 206: ' ' (ID: 220)
  Prédit: '60'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '60' → logprob: -0.008896528743207455
    2. '30' → logprob: -4.758896350860596
    3. '31' → logprob: -9.133896827697754
    4. '62' → logprob: -9.258896827697754
    5. '63' → logprob: -10.508896827697754
    6. '50' → logprob: -10.633896827697754
    7. '29' → logprob: -11.508896827697754
    8. '61' → logprob: -11.633896827697754
    9. '32' → logprob: -12.383896827697754
    10. '55' → logprob: -12.883896827697754

Token 207: '60' (ID: 1910)
  Prédit: '60'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '60' → logprob: -0.004880300257354975
    2. '30' → logprob: -5.379880428314209
    3. '62' → logprob: -9.12987995147705
    4. '31' → logprob: -9.62987995147705
    5. '29' → logprob: -10.75487995147705
    6. '50' → logprob: -10.75487995147705
    7. '61' → logprob: -10.87987995147705
    8. '63' → logprob: -11.25487995147705
    9. '55' → logprob: -12.50487995147705
    10. '59' → logprob: -12.87987995147705

Token 208: ' ' (ID: 220)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.0419132709503174
    2. 'def' → logprob: -1.0419132709503174
    3. '<|end|>' → logprob: -1.7919132709503174
    4. '
' → logprob: -2.4169132709503174
    5. '

' → logprob: -4.916913032531738
    6. '<|end|>' → logprob: -5.291913032531738
    7. 'newline' → logprob: -5.416913032531738
    8. '' → logprob: -5.666913032531738
    9. '\n' → logprob: -5.791913032531738
    10. '```' → logprob: -6.041913032531738

Token 209: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 210: ' Déf' (ID: 180635)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8329883217811584
    2. '#' → logprob: -1.3329882621765137
    3. ' #' → logprob: -1.7079882621765137
    4. 'INF' → logprob: -2.8329882621765137
    5. ' INF' → logprob: -3.4579882621765137
    6. ' ' → logprob: -5.082988262176514
    7. 'E' → logprob: -6.332988262176514
    8. 'MAX' → logprob: -6.582988262176514
    9. 'A' → logprob: -6.707988262176514
    10. 'max' → logprob: -6.832988262176514

Token 211: 'init' (ID: 3287)
  Prédit: 'ini'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ini' → logprob: -0.10846421122550964
    2. 'inition' → logprob: -3.233464241027832
    3. 'init' → logprob: -3.358464241027832
    4. 'ined' → logprob: -4.358464241027832
    5. 'inie' → logprob: -5.358464241027832
    6. 'ine' → logprob: -5.608464241027832
    7. 'inis' → logprob: -5.733464241027832
    8. 'ining' → logprob: -6.983464241027832
    9. 'in' → logprob: -6.983464241027832
    10. 'inir' → logprob: -7.358464241027832

Token 212: ' une' (ID: 2463)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0018523624166846275
    2. '  ' → logprob: -6.501852512359619
    3. ' ' → logprob: -9.126852035522461
    4. '<|end|>' → logprob: -9.126852035522461
    5. '_' → logprob: -9.376852035522461
    6. 'INF' → logprob: -11.876852035522461
    7. ' INF' → logprob: -12.001852035522461
    8. ' ‌' → logprob: -12.626852035522461
    9. ' =' → logprob: -12.751852035522461
    10. 'space' → logprob: -12.876852035522461

Token 213: ' grande' (ID: 10094)
  Prédit: ' constante'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' constante' → logprob: -0.16790810227394104
    2. 'const' → logprob: -2.792908191680908
    3. 'val' → logprob: -2.917908191680908
    4. ' valeur' → logprob: -3.292908191680908
    5. 'inf' → logprob: -7.417908191680908
    6. 'variable' → logprob: -8.16790771484375
    7. 'large' → logprob: -8.54290771484375
    8. ' grande' → logprob: -8.66790771484375
    9. 'constant' → logprob: -9.04290771484375
    10. ' val' → logprob: -9.29290771484375

Token 214: ' valeur' (ID: 41664)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5953263640403748
    2. 'space' → logprob: -2.4703264236450195
    3. ' valeur' → logprob: -2.5953264236450195
    4. ' espace' → logprob: -2.5953264236450195
    5. ' constante' → logprob: -2.7203264236450195
    6. '_' → logprob: -2.9703264236450195
    7. 'val' → logprob: -3.3453264236450195
    8. 'int' → logprob: -3.9703264236450195
    9. ' space' → logprob: -4.0953264236450195
    10. 'const' → logprob: -5.0953264236450195

Token 215: ' constante' (ID: 49652)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 216: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 217: ' utilisée' (ID: 106548)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.007568060886114836
    2. ' #' → logprob: -6.257567882537842
    3. '#' → logprob: -6.507567882537842
    4. ' 
' → logprob: -6.632567882537842
    5. '  ' → logprob: -7.257567882537842
    6. '  
' → logprob: -7.257567882537842
    7. ' \' → logprob: -8.382568359375
    8. '' → logprob: -8.757568359375
    9. '   
' → logprob: -9.007568359375
    10. ' =' → logprob: -9.382568359375

Token 218: ' généralement' (ID: 67075)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6181431412696838
    2. ' pour' → logprob: -1.368143081665039
    3. ' comme' → logprob: -1.743143081665039
    4. 'comme' → logprob: -4.493143081665039
    5. 'pour' → logprob: -4.743143081665039
    6. ' ' → logprob: -6.368143081665039
    7. ' for' → logprob: -6.743143081665039
    8. ',' → logprob: -6.743143081665039
    9. ' afin' → logprob: -6.743143081665039
    10. ' dans' → logprob: -6.993143081665039

Token 219: ' pour' (ID: 1930)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.34131038188934326
    2. ' pour' → logprob: -1.9663103818893433
    3. ' comme' → logprob: -2.716310501098633
    4. 'pour' → logprob: -2.966310501098633
    5. 'comme' → logprob: -3.716310501098633
    6. ' ' → logprob: -6.841310501098633
    7. ',' → logprob: -6.966310501098633
    8. ' as' → logprob: -7.216310501098633
    9. '  ' → logprob: -7.466310501098633
    10. 'as' → logprob: -7.466310501098633

Token 220: ' représ' (ID: 31534)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.15434329211711884
    2. ' représ' → logprob: -2.779343366622925
    3. 'repr' → logprob: -3.279343366622925
    4. 'l' → logprob: -3.404343366622925
    5. 'initial' → logprob: -5.654343128204346
    6. ' l' → logprob: -6.154343128204346
    7. 'represent' → logprob: -6.279343128204346
    8. 'sim' → logprob: -6.654343128204346
    9. ' repr' → logprob: -8.029343605041504
    10. 'rep' → logprob: -8.154343605041504

Token 221: 'enter' (ID: 3547)
  Prédit: 'enter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enter' → logprob: -0.16938860714435577
    2. 'endre' → logprob: -3.04438853263855
    3. 'er' → logprob: -3.54438853263855
    4. 'u' → logprob: -3.91938853263855
    5. 'uire' → logprob: -4.419388771057129
    6. 'é' → logprob: -4.544388771057129
    7. 'érer' → logprob: -4.794388771057129
    8. 'uer' → logprob: -4.919388771057129
    9. 'ent' → logprob: -5.169388771057129
    10. 'urer' → logprob: -5.919388771057129

Token 222: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.2600090503692627
    2. 'l' → logprob: -1.5100090503692627
    3. ' une' → logprob: -4.885008811950684
    4. 'une' → logprob: -9.260008811950684
    5. ' "' → logprob: -9.260008811950684
    6. 'inf' → logprob: -9.260008811950684
    7. ' '' → logprob: -10.135008811950684
    8. ' ' → logprob: -10.260008811950684
    9. ' ' → logprob: -10.510008811950684
    10. ' un' → logprob: -11.260008811950684

Token 223: ''in' (ID: 17942)
  Prédit: ''in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''in' → logprob: -0.03486998751759529
    2. ''' → logprob: -4.409870147705078
    3. 'a' → logprob: -5.034870147705078
    4. ''a' → logprob: -5.784870147705078
    5. 'e' → logprob: -6.534870147705078
    6. ''é' → logprob: -6.659870147705078
    7. ''une' → logprob: -7.409870147705078
    8. ''instant' → logprob: -7.409870147705078
    9. ''imm' → logprob: -7.534870147705078
    10. 'in' → logprob: -7.534870147705078

Token 224: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.016753805801272392
    2. 'fin' → logprob: -4.641753673553467
    3. 'finite' → logprob: -5.266753673553467
    4. 'finity' → logprob: -6.516753673553467
    5. 'fi' → logprob: -9.516754150390625
    6. 'in' → logprob: -9.516754150390625
    7. 'inite' → logprob: -9.766754150390625
    8. 'possible' → logprob: -10.641754150390625
    9. 'fty' → logprob: -10.766754150390625
    10. 'inf' → logprob: -11.391754150390625

Token 225: 'ini' (ID: 2363)
  Prédit: 'inity'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inity' → logprob: -0.13894475996494293
    2. 'ini' → logprob: -2.2639448642730713
    3. 'inite' → logprob: -4.013944625854492
    4. 'init' → logprob: -5.763944625854492
    5. 'inty' → logprob: -6.263944625854492
    6. 'ity' → logprob: -6.388944625854492
    7. 'inie' → logprob: -8.138944625854492
    8. 'inition' → logprob: -8.513944625854492
    9. 'in' → logprob: -8.638944625854492
    10. 'initely' → logprob: -9.388944625854492

Token 226: '.' (ID: 13)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 227: ' Ici' (ID: 145754)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.15535815060138702
    2. '

' → logprob: -2.655358076095581
    3. 'def' → logprob: -3.030358076095581
    4. '<|end|>' → logprob: -4.53035831451416
    5. '#' → logprob: -5.15535831451416
    6. '
' → logprob: -6.40535831451416
    7. 'import' → logprob: -6.40535831451416
    8. 'from' → logprob: -6.65535831451416
    9. '\n' → logprob: -6.78035831451416
    10. '' → logprob: -6.90535831451416

Token 228: ',' (ID: 11)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.3002828061580658
    2. ' #' → logprob: -2.4252827167510986
    3. ' ' → logprob: -2.5502827167510986
    4. ',' → logprob: -2.8002827167510986
    5. ' pour' → logprob: -4.925282955169678
    6. ' =' → logprob: -4.925282955169678
    7. ' est' → logprob: -5.800282955169678
    8. ' comme' → logprob: -5.800282955169678
    9. ':' → logprob: -6.675282955169678
    10. 'une' → logprob: -6.800282955169678

Token 229: ' c' (ID: 274)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -1.1598925590515137
    2. ' elle' → logprob: -1.2848925590515137
    3. ' c' → logprob: -2.5348925590515137
    4. 'une' → logprob: -2.6598925590515137
    5. ' on' → logprob: -3.0348925590515137
    6. ' cela' → logprob: -3.1598925590515137
    7. 'INF' → logprob: -3.4098925590515137
    8. ' cette' → logprob: -3.7848925590515137
    9. 'c' → logprob: -3.9098925590515137
    10. ' par' → logprob: -4.534892559051514

Token 230: ''est' (ID: 6616)
  Prédit: ''est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''est' → logprob: -0.9063158631324768
    2. 'e' → logprob: -1.031315803527832
    3. 'est' → logprob: -2.781315803527832
    4. 'ette' → logprob: -3.531315803527832
    5. ''' → logprob: -3.656315803527832
    6. 'on' → logprob: -3.906315803527832
    7. 'ep' → logprob: -4.156315803527832
    8. 'omme' → logprob: -4.156315803527832
    9. 'ela' → logprob: -4.281315803527832
    10. 'omp' → logprob: -4.781315803527832

Token 231: ' ' (ID: 220)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'une' → logprob: -0.7049216628074646
    2. ' une' → logprob: -0.8299216628074646
    3. ' ' → logprob: -3.9549217224121094
    4. ' un' → logprob: -4.579921722412109
    5. 'typ' → logprob: -5.079921722412109
    6. 'l' → logprob: -5.204921722412109
    7. ' souvent' → logprob: -5.204921722412109
    8. ' typ' → logprob: -5.829921722412109
    9. ' utilisée' → logprob: -5.954921722412109
    10. '100' → logprob: -6.204921722412109

Token 232: '2' (ID: 17)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'une' → logprob: -0.028553063049912453
    2. 'un' → logprob: -4.653553009033203
    3. ' une' → logprob: -5.153553009033203
    4. ' ' → logprob: -5.778553009033203
    5. 'l' → logprob: -6.278553009033203
    6. '2' → logprob: -6.403553009033203
    7. 'le' → logprob: -6.528553009033203
    8. '1' → logprob: -6.653553009033203
    9. '(' → logprob: -7.653553009033203
    10. '107' → logprob: -7.778553009033203

Token 233: '^' (ID: 61)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1947777420282364
    2. '**' → logprob: -1.8197777271270752
    3. ' **' → logprob: -4.444777965545654
    4. '60' → logprob: -6.694777965545654
    5. '6' → logprob: -7.194777965545654
    6. '^' → logprob: -7.819777965545654
    7. '*' → logprob: -8.194777488708496
    8. ' ' → logprob: -8.194777488708496
    9. ' ' → logprob: -9.694777488708496
    10. '4' → logprob: -10.319777488708496

Token 234: '60' (ID: 1910)
  Prédit: '60'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '60' → logprob: 0.0
    2. ' ' → logprob: -18.125
    3. '59' → logprob: -20.375
    4. '600' → logprob: -21.0
    5. '63' → logprob: -21.125
    6. '61' → logprob: -21.375
    7. '```' → logprob: -21.5
    8. '50' → logprob: -21.625
    9. '6' → logprob: -21.75
    10. '64' → logprob: -22.375

Token 235: '.
' (ID: 558)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 236: 'sys' (ID: 17324)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7206948399543762
    2. '#' → logprob: -1.3456947803497314
    3. 'def' → logprob: -1.9706947803497314
    4. '

' → logprob: -3.3456947803497314
    5. '<|end|>' → logprob: -3.7206947803497314
    6. 'from' → logprob: -4.0956950187683105
    7. '\n' → logprob: -4.3456950187683105
    8. 'import' → logprob: -4.9706950187683105
    9. 'g' → logprob: -5.5956950187683105
    10. ' ' → logprob: -5.8456950187683105

Token 237: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.31906962394714355
    2. '.stdout' → logprob: -2.1940696239471436
    3. '.exit' → logprob: -2.1940696239471436
    4. '.stdin' → logprob: -3.6940696239471436
    5. '.argv' → logprob: -3.8190696239471436
    6. '.stderr' → logprob: -5.819069862365723
    7. '.path' → logprob: -8.944069862365723
    8. '.setdefault' → logprob: -8.944069862365723
    9. '.version' → logprob: -9.944069862365723
    10. ' .' → logprob: -10.194069862365723

Token 238: 'rec' (ID: 9285)
  Prédit: 'rec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rec' → logprob: -0.00021331508469302207
    2. '_rec' → logprob: -8.750213623046875
    3. 'limit' → logprob: -11.125213623046875
    4. '_int' → logprob: -11.250213623046875
    5. 'trace' → logprob: -12.500213623046875
    6. 'switch' → logprob: -12.750213623046875
    7. '_limit' → logprob: -12.750213623046875
    8. 'execution' → logprob: -12.875213623046875
    9. '_execution' → logprob: -13.125213623046875
    10. 'e' → logprob: -13.875213623046875

Token 239: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -4.3822154111694545e-05
    2. 'limit' → logprob: -11.000043869018555
    3. 'ursive' → logprob: -11.500043869018555
    4. 'urs' → logprob: -11.625043869018555
    5. 'usion' → logprob: -12.125043869018555
    6. 'ur' → logprob: -13.375043869018555
    7. 'ursor' → logprob: -14.875043869018555
    8. 'ision' → logprob: -15.875043869018555
    9. 'usr' → logprob: -16.125043869018555
    10. 'us' → logprob: -16.750043869018555

Token 240: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -1.259079363080673e-05
    2. '_limit' → logprob: -11.875012397766113
    3. ' limit' → logprob: -12.125012397766113
    4. 'Limit' → logprob: -16.12501335144043
    5. 'depth' → logprob: -17.12501335144043
    6. '.limit' → logprob: -17.62501335144043
    7. '(limit' → logprob: -18.25001335144043
    8. '-limit' → logprob: -18.50001335144043
    9. 'lim' → logprob: -19.87501335144043
    10. '_LIMIT' → logprob: -20.00001335144043

Token 241: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.5213274309644476e-05
    2. ' (' → logprob: -11.250015258789062
    3. '(
' → logprob: -13.875015258789062
    4. '(int' → logprob: -14.500015258789062
    5. '((' → logprob: -14.500015258789062
    6. '100' → logprob: -16.375015258789062
    7. '(

' → logprob: -16.750015258789062
    8. '()' → logprob: -17.375015258789062
    9. '250' → logprob: -18.250015258789062
    10. ' ' → logprob: -18.750015258789062

Token 242: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0015081972815096378
    2. '100' → logprob: -6.5015082359313965
    3. '200' → logprob: -13.251507759094238
    4. '300' → logprob: -13.751507759094238
    5. '500' → logprob: -14.001507759094238
    6. '250' → logprob: -14.376507759094238
    7. '999' → logprob: -14.501507759094238
    8. ' ' → logprob: -14.876507759094238
    9. '400' → logprob: -15.501507759094238
    10. '410' → logprob: -16.251508712768555

Token 243: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.023362061008810997
    2. '7' → logprob: -3.773362159729004
    3. '6' → logprob: -9.273362159729004
    4. '07' → logprob: -11.398362159729004
    5. '8' → logprob: -11.773362159729004
    6. '000' → logprob: -13.023362159729004
    7. '*' → logprob: -14.648362159729004
    8. '9' → logprob: -15.023362159729004
    9. ' **' → logprob: -15.273362159729004
    10. '```' → logprob: -15.898362159729004

Token 244: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.06208375096321106
    2. '9' → logprob: -2.8120837211608887
    3. '8' → logprob: -9.062084197998047
    4. '**' → logprob: -15.937084197998047
    5. '6' → logprob: -16.812084197998047
    6. '10' → logprob: -17.687084197998047
    7. '```' → logprob: -19.187084197998047
    8. ' ' → logprob: -19.437084197998047
    9. '７' → logprob: -19.687084197998047
    10. '  ' → logprob: -19.687084197998047

Token 245: '6' (ID: 21)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.04878152534365654
    2. '9' → logprob: -3.048781633377075
    3. '8' → logprob: -8.548781394958496
    4. '6' → logprob: -15.298781394958496
    5. '**' → logprob: -16.923782348632812
    6. '10' → logprob: -17.673782348632812
    7. '７' → logprob: -18.673782348632812
    8. '
' → logprob: -18.798782348632812
    9. '

' → logprob: -18.923782348632812
    10. ' ' → logprob: -19.048782348632812

Token 246: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1517960956552997e-05
    2. ' )' → logprob: -11.375011444091797
    3. '))' → logprob: -17.750011444091797
    4. ')
' → logprob: -18.500011444091797
    5. ' ' → logprob: -19.875011444091797
    6. ')

' → logprob: -20.125011444091797
    7. ')#' → logprob: -20.125011444091797
    8. ')`' → logprob: -20.125011444091797
    9. '),' → logprob: -20.250011444091797
    10. ')
' → logprob: -20.500011444091797

Token 247: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.13081668317317963
    2. '<|end|>' → logprob: -2.380816698074341
    3. '\n' → logprob: -4.880816459655762
    4. '#' → logprob: -5.005816459655762
    5. '

' → logprob: -5.255816459655762
    6. '' → logprob: -6.005816459655762
    7. ')' → logprob: -6.380816459655762
    8. ' 
' → logprob: -6.505816459655762
    9. '  
' → logprob: -7.130816459655762
    10. '
' → logprob: -7.255816459655762

Token 248: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.28947117924690247
    2. '#' → logprob: -2.41447114944458
    3. '<|end|>' → logprob: -2.66447114944458
    4. ')' → logprob: -3.78947114944458
    5. '' → logprob: -4.03947114944458
    6. ' ' → logprob: -4.16447114944458
    7. '

' → logprob: -4.53947114944458
    8. '\n' → logprob: -4.66447114944458
    9. '  
' → logprob: -6.16447114944458
    10. '
' → logprob: -6.41447114944458

Token 249: ' Déf' (ID: 180635)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.3399117588996887
    2. 'sys' → logprob: -1.464911699295044
    3. ' sys' → logprob: -3.464911699295044
    4. 'Increase' → logprob: -4.964911937713623
    5. ' #' → logprob: -5.714911937713623
    6. 'Aug' → logprob: -5.839911937713623
    7. 'Fix' → logprob: -6.339911937713623
    8. ' augmenter' → logprob: -6.839911937713623
    9. 'Perm' → logprob: -6.964911937713623
    10. 'set' → logprob: -7.339911937713623

Token 250: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.04449041560292244
    2. '_init' → logprob: -3.169490337371826
    3. 'int' → logprob: -7.544490337371826
    4. '_' → logprob: -7.919490337371826
    5. 'ini' → logprob: -8.794490814208984
    6. 'inition' → logprob: -9.419490814208984
    7. 'nit' → logprob: -9.544490814208984
    8. 'ine' → logprob: -9.794490814208984
    9. 'in' → logprob: -10.794490814208984
    10. '```' → logprob: -10.794490814208984

Token 251: ' la' (ID: 557)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0017242035828530788
    2. '100' → logprob: -6.8767242431640625
    3. '(sys' → logprob: -7.7517242431640625
    4. '10' → logprob: -9.501724243164062
    5. ' la' → logprob: -10.251724243164062
    6. '()' → logprob: -10.626724243164062
    7. 'sys' → logprob: -10.626724243164062
    8. 'la' → logprob: -10.876724243164062
    9. 'l' → logprob: -11.001724243164062
    10. '1' → logprob: -11.376724243164062

Token 252: ' limite' (ID: 48939)
  Prédit: 'lim'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lim' → logprob: -0.0009479032014496624
    2. ' limite' → logprob: -7.125947952270508
    3. 'rec' → logprob: -9.375947952270508
    4. 'tail' → logprob: -11.375947952270508
    5. 'val' → logprob: -11.625947952270508
    6. 'prof' → logprob: -11.750947952270508
    7. 'pile' → logprob: -12.125947952270508
    8. ' profondeur' → logprob: -12.125947952270508
    9. 'pro' → logprob: -12.250947952270508
    10. 'r' → logprob: -12.500947952270508

Token 253: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.8621282577514648
    2. 'de' → logprob: -1.6121282577514648
    3. ' maximale' → logprob: -1.6121282577514648
    4. ' d' → logprob: -2.487128257751465
    5. 'd' → logprob: -2.737128257751465
    6. 'max' → logprob: -4.737128257751465
    7. 'sys' → logprob: -4.737128257751465
    8. 'rec' → logprob: -5.987128257751465
    9. ' des' → logprob: -6.487128257751465
    10. ' sys' → logprob: -6.612128257751465

Token 254: ' réc' (ID: 36254)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.7828757762908936
    2. ' réc' → logprob: -1.2828757762908936
    3. 'rec' → logprob: -2.0328757762908936
    4. 'la' → logprob: -2.6578757762908936
    5. '100' → logprob: -3.1578757762908936
    6. ' recursion' → logprob: -4.907876014709473
    7. ' profondeur' → logprob: -5.032876014709473
    8. ' la' → logprob: -5.657876014709473
    9. 'l' → logprob: -6.657876014709473
    10. '500' → logprob: -7.532876014709473

Token 255: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.0028675198554992676
    2. 'urs' → logprob: -5.877867698669434
    3. 'ur' → logprob: -10.002867698669434
    4. 'urrence' → logprob: -12.377867698669434
    5. '##' → logprob: -13.002867698669434
    6. '**' → logprob: -13.002867698669434
    7. 'ursive' → logprob: -13.252867698669434
    8. 'usion' → logprob: -13.627867698669434
    9. 'u' → logprob: -13.627867698669434
    10. '```' → logprob: -14.002867698669434

Token 256: ' de' (ID: 334)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2828708589076996
    2. ' ' → logprob: -2.9078707695007324
    3. ' sys' → logprob: -3.4078707695007324
    4. ' maximale' → logprob: -3.5328707695007324
    5. '100' → logprob: -3.7828707695007324
    6. ' à' → logprob: -3.9078707695007324
    7. 'sys' → logprob: -3.9078707695007324
    8. '_' → logprob: -4.407870769500732
    9. '=sys' → logprob: -4.907870769500732
    10. '(sys' → logprob: -5.157870769500732

Token 257: ' Python' (ID: 26534)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '100' → logprob: -0.2555314004421234
    2. '10' → logprob: -1.5055314302444458
    3. 'Python' → logprob: -6.755531311035156
    4. 'python' → logprob: -7.005531311035156
    5. 'le' → logprob: -7.755531311035156
    6. ' ' → logprob: -8.255531311035156
    7. '500' → logprob: -8.255531311035156
    8. 'l' → logprob: -8.505531311035156
    9. '1' → logprob: -8.755531311035156
    10. '200' → logprob: -9.755531311035156

Token 258: ' à' (ID: 1221)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6804155111312866
    2. '<|end|>' → logprob: -1.6804155111312866
    3. '#' → logprob: -2.430415630340576
    4. ' 
' → logprob: -3.055415630340576
    5. '  
' → logprob: -3.305415630340576
    6. ' ' → logprob: -3.430415630340576
    7. '' → logprob: -3.805415630340576
    8. '\n' → logprob: -3.930415630340576
    9. '<|end|>' → logprob: -4.680415630340576
    10. ')' → logprob: -4.930415630340576

Token 259: ' un' (ID: 537)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.017934756353497505
    2. ' ' → logprob: -4.142934799194336
    3. '10' → logprob: -6.267934799194336
    4. '1' → logprob: -14.017934799194336
    5. ' une' → logprob: -15.142934799194336
    6. ' un' → logprob: -15.392934799194336
    7. '(' → logprob: -15.392934799194336
    8. '104' → logprob: -15.642934799194336
    9. 'one' → logprob: -15.892934799194336
    10. 'un' → logprob: -16.017934799194336

Token 260: ' million' (ID: 5749)
  Prédit: 'million'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'million' → logprob: -0.3605535626411438
    2. ' million' → logprob: -1.235553503036499
    3. 'mill' → logprob: -5.235553741455078
    4. '000' → logprob: -5.235553741455078
    5. '100' → logprob: -6.860553741455078
    6. 'e' → logprob: -9.110553741455078
    7. 'mil' → logprob: -9.985553741455078
    8. 'm' → logprob: -10.610553741455078
    9. ' millón' → logprob: -10.735553741455078
    10. ' millions' → logprob: -11.110553741455078

Token 261: ' pour' (ID: 1930)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2806100845336914
    2. '<|end|>' → logprob: -1.5306100845336914
    3. '

' → logprob: -4.905610084533691
    4. '#' → logprob: -5.280610084533691
    5. '<|end|>' → logprob: -5.405610084533691
    6. '```' → logprob: -6.280610084533691
    7. '\n' → logprob: -6.280610084533691
    8. ')' → logprob: -6.280610084533691
    9. '.' → logprob: -6.405610084533691
    10. '
' → logprob: -6.905610084533691

Token 262: ' éviter' (ID: 64013)
  Prédit: ' permettre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' permettre' → logprob: -0.3923380374908447
    2. 'allow' → logprob: -1.5173380374908447
    3. 'per' → logprob: -2.8923380374908447
    4. ' gérer' → logprob: -4.767337799072266
    5. 'autor' → logprob: -4.892337799072266
    6. ' éviter' → logprob: -4.892337799072266
    7. 'support' → logprob: -5.267337799072266
    8. 'év' → logprob: -6.142337799072266
    9. 'handle' → logprob: -6.267337799072266
    10. 'g' → logprob: -6.392337799072266

Token 263: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.09724761545658112
    2. ' Rec' → logprob: -3.22224760055542
    3. 'les' → logprob: -3.72224760055542
    4. 'Rec' → logprob: -4.47224760055542
    5. ' Runtime' → logprob: -4.97224760055542
    6. ' l' → logprob: -5.09724760055542
    7. 'Runtime' → logprob: -6.84724760055542
    8. ' une' → logprob: -6.97224760055542
    9. ' des' → logprob: -7.09724760055542
    10. 'd' → logprob: -8.097248077392578

Token 264: ' erreurs' (ID: 139891)
  Prédit: 'Rec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Rec' → logprob: -0.2615835666656494
    2. ' Rec' → logprob: -2.2615835666656494
    3. ' dépasse' → logprob: -2.8865835666656494
    4. 'd' → logprob: -3.5115835666656494
    5. ' erreurs' → logprob: -4.26158332824707
    6. 'Runtime' → logprob: -5.13658332824707
    7. 'Overflow' → logprob: -5.63658332824707
    8. ' Runtime' → logprob: -5.76158332824707
    9. 'overflow' → logprob: -6.01158332824707
    10. 'dé' → logprob: -6.38658332824707

Token 265: ' de' (ID: 334)
  Prédit: ' Rec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Rec' → logprob: -0.8018013834953308
    2. ' de' → logprob: -1.0518014430999756
    3. 'Rec' → logprob: -1.8018014430999756
    4. ' d' → logprob: -3.5518014430999756
    5. 'de' → logprob: -5.6768012046813965
    6. 'rec' → logprob: -6.4268012046813965
    7. 'd' → logprob: -7.3018012046813965
    8. ' ' → logprob: -7.4268012046813965
    9. ' recursion' → logprob: -7.4268012046813965
    10. ' ' → logprob: -8.051801681518555

Token 266: ' réc' (ID: 36254)
  Prédit: 'rec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rec' → logprob: -0.9339504241943359
    2. ' réc' → logprob: -1.183950424194336
    3. 'Rec' → logprob: -2.058950424194336
    4. ' dépasse' → logprob: -2.558950424194336
    5. 'r' → logprob: -3.433950424194336
    6. 'd' → logprob: -3.558950424194336
    7. 'maximum' → logprob: -4.933950424194336
    8. 'dé' → logprob: -5.308950424194336
    9. ' recursion' → logprob: -5.433950424194336
    10. ' Rec' → logprob: -5.433950424194336

Token 267: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.024871280416846275
    2. 'urs' → logprob: -3.774871349334717
    3. 'ur' → logprob: -7.024871349334717
    4. 'urrence' → logprob: -7.774871349334717
    5. 'usion' → logprob: -8.899870872497559
    6. 'u' → logprob: -9.899870872497559
    7. 'ussion' → logprob: -11.274870872497559
    8. 'urrent' → logprob: -11.274870872497559
    9. 'up' → logprob: -11.399870872497559
    10. 'urse' → logprob: -11.524870872497559

Token 268: ' dans' (ID: 2671)
  Prédit: 'depth'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'depth' → logprob: -0.82399982213974
    2. '_depth' → logprob: -1.9489998817443848
    3. 'stack' → logprob: -1.9489998817443848
    4. ' stack' → logprob: -2.8239998817443848
    5. ' depth' → logprob: -3.1989998817443848
    6. '_stack' → logprob: -3.3239998817443848
    7. 'maximum' → logprob: -3.6989998817443848
    8. ' maximum' → logprob: -4.323999881744385
    9. 'max' → logprob: -4.573999881744385
    10. 'rec' → logprob: -4.573999881744385

Token 269: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.6432610154151917
    2. ' les' → logprob: -0.8932610154151917
    3. 'les' → logprob: -3.143260955810547
    4. ' le' → logprob: -5.143260955810547
    5. ' certains' → logprob: -5.518260955810547
    6. ' certaines' → logprob: -6.018260955810547
    7. 'le' → logprob: -6.143260955810547
    8. 'dfs' → logprob: -6.143260955810547
    9. ' l' → logprob: -6.393260955810547
    10. 'des' → logprob: -6.518260955810547

Token 270: ' cas' (ID: 2108)
  Prédit: 'pro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pro' → logprob: -1.3146826028823853
    2. 'alg' → logprob: -1.6896826028823853
    3. ' cas' → logprob: -1.9396826028823853
    4. 'program' → logprob: -2.0646824836730957
    5. 'cas' → logprob: -2.6896824836730957
    6. ' problèmes' → logprob: -2.9396824836730957
    7. 'codes' → logprob: -3.5646824836730957
    8. ' code' → logprob: -4.189682483673096
    9. 'calcul' → logprob: -4.189682483673096
    10. 'dfs' → logprob: -4.564682483673096

Token 271: ' prof' (ID: 1915)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.8066192269325256
    2. ' de' → logprob: -1.8066191673278809
    3. ' complexes' → logprob: -2.181619167327881
    4. ' extr' → logprob: -2.556619167327881
    5. 'd' → logprob: -2.806619167327881
    6. ' très' → logprob: -3.056619167327881
    7. 'import' → logprob: -3.806619167327881
    8. ' fréqu' → logprob: -3.931619167327881
    9. 'de' → logprob: -4.681619167327881
    10. 's' → logprob: -4.806619167327881

Token 272: 'onds' (ID: 20754)
  Prédit: 'onds'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'onds' → logprob: -0.020986875519156456
    2. 'ondes' → logprob: -4.395987033843994
    3. 'onde' → logprob: -5.270987033843994
    4. 'ond' → logprob: -5.770987033843994
    5. '```' → logprob: -9.770986557006836
    6. 'fonds' → logprob: -10.270986557006836
    7. '=' → logprob: -11.395986557006836
    8. 'on' → logprob: -11.770986557006836
    9. 'onda' → logprob: -12.145986557006836
    10. '>' → logprob: -12.145986557006836

Token 273: '.

' (ID: 364)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.3349961042404175
    2. '
' → logprob: -1.4599961042404175
    3. '<|end|>' → logprob: -3.584996223449707
    4. '' → logprob: -5.584996223449707
    5. '#' → logprob: -5.834996223449707
    6. ',' → logprob: -6.334996223449707
    7. '<|end|>' → logprob: -6.334996223449707
    8. '  
' → logprob: -6.334996223449707
    9. ' 
' → logprob: -6.459996223449707
    10. '

' → logprob: -6.459996223449707

Token 274: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0014909347519278526
    2. 'class' → logprob: -7.001491069793701
    3. 'n' → logprob: -8.126490592956543
    4. ' 
' → logprob: -9.501490592956543
    5. ' def' → logprob: -10.251490592956543
    6. 'import' → logprob: -10.376490592956543
    7. '#' → logprob: -10.501490592956543
    8. '\' → logprob: -10.501490592956543
    9. ' ' → logprob: -10.751490592956543
    10. '

' → logprob: -11.001490592956543

Token 275: ' Dé' (ID: 27247)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.047834210097789764
    2. ' def' → logprob: -3.9228341579437256
    3. 'from' → logprob: -4.547834396362305
    4. 'class' → logprob: -4.797834396362305
    5. 'import' → logprob: -5.297834396362305
    6. ' class' → logprob: -6.797834396362305
    7. '#' → logprob: -7.422834396362305
    8. 'input' → logprob: -7.672834396362305
    9. ' input' → logprob: -8.547834396362305
    10. ' from' → logprob: -8.672834396362305

Token 276: 'but' (ID: 8293)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.023423777893185616
    2. 'fin' → logprob: -3.773423671722412
    3. '#' → logprob: -8.89842414855957
    4. 'fi' → logprob: -10.64842414855957
    5. 'fine' → logprob: -11.89842414855957
    6. '
' → logprob: -12.64842414855957
    7. 'def' → logprob: -12.77342414855957
    8. '```' → logprob: -13.64842414855957
    9. 'finite' → logprob: -14.14842414855957
    10. 'fn' → logprob: -14.52342414855957

Token 277: ' du' (ID: 1462)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.03751114755868912
    2. '<|end|>' → logprob: -3.662511110305786
    3. '#' → logprob: -6.037511348724365
    4. ' de' → logprob: -6.162511348724365
    5. ' def' → logprob: -6.662511348724365
    6. 'class' → logprob: -6.912511348724365
    7. '<|end|>' → logprob: -6.912511348724365
    8. 'de' → logprob: -7.037511348724365
    9. ' of' → logprob: -7.912511348724365
    10. '_' → logprob: -8.037510871887207

Token 278: ' corps' (ID: 29363)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.06775480508804321
    2. ' code' → logprob: -3.5677547454833984
    3. '#' → logprob: -3.9427547454833984
    4. ' main' → logprob: -5.192754745483398
    5. ' def' → logprob: -5.442754745483398
    6. 'main' → logprob: -5.692754745483398
    7. 'code' → logprob: -6.442754745483398
    8. 'class' → logprob: -6.442754745483398
    9. 'import' → logprob: -8.067754745483398
    10. ' class' → logprob: -8.567754745483398

Token 279: ' principal' (ID: 10589)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.690818727016449
    2. '
' → logprob: -0.940818727016449
    3. '

' → logprob: -2.9408187866210938
    4. '#' → logprob: -3.6908187866210938
    5. ' ' → logprob: -4.190818786621094
    6. ' 
' → logprob: -5.065818786621094
    7. ' 

' → logprob: -5.940818786621094
    8. '' → logprob: -6.440818786621094
    9. ':' → logprob: -7.190818786621094
    10. ' def' → logprob: -7.565818786621094

Token 280: ' du' (ID: 1462)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1434336155653
    2. '
' → logprob: -2.1434335708618164
    3. '

' → logprob: -4.893433570861816
    4. ' ' → logprob: -5.893433570861816
    5. ' 
' → logprob: -6.518433570861816
    6. '#' → logprob: -7.018433570861816
    7. '' → logprob: -7.268433570861816
    8. 'n' → logprob: -7.268433570861816
    9. '\' → logprob: -7.268433570861816
    10. 'import' → logprob: -7.893433570861816

Token 281: ' programme' (ID: 18190)
  Prédit: 'code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'code' → logprob: -0.13614854216575623
    2. 'programme' → logprob: -2.136148452758789
    3. ' code' → logprob: -5.011148452758789
    4. 'script' → logprob: -6.761148452758789
    5. ' programme' → logprob: -7.386148452758789
    6. 'program' → logprob: -7.511148452758789
    7. 'texte' → logprob: -9.261148452758789
    8. ' script' → logprob: -9.761148452758789
    9. '#' → logprob: -11.261148452758789
    10. '_code' → logprob: -12.136148452758789

Token 282: ' (' (ID: 350)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0069074141792953014
    2. '
' → logprob: -5.3819074630737305
    3. 'n' → logprob: -7.3819074630737305
    4. ' 
' → logprob: -7.7569074630737305
    5. '\' → logprob: -8.50690746307373
    6. '

' → logprob: -8.63190746307373
    7. 'class' → logprob: -8.63190746307373
    8. ' ' → logprob: -8.75690746307373
    9. '#' → logprob: -9.25690746307373
    10. 'import' → logprob: -9.50690746307373

Token 283: 'section' (ID: 6471)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2542743980884552
    2. 'def' → logprob: -1.5042743682861328
    3. 'class' → logprob: -6.879274368286133
    4. ' )' → logprob: -7.129274368286133
    5. 'if' → logprob: -8.254274368286133
    6. 'import' → logprob: -9.379274368286133
    7. 'n' → logprob: -9.879274368286133
    8. '#' → logprob: -10.004274368286133
    9. ' def' → logprob: -11.504274368286133
    10. ')n' → logprob: -11.504274368286133

Token 284: ' où' (ID: 15113)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.16209198534488678
    2. 'if' → logprob: -2.5370919704437256
    3. ')' → logprob: -3.1620919704437256
    4. ' if' → logprob: -5.162092208862305
    5. '```' → logprob: -5.287092208862305
    6. '#' → logprob: -5.412092208862305
    7. 'de' → logprob: -5.537092208862305
    8. '"""' → logprob: -6.287092208862305
    9. 'import' → logprob: -6.412092208862305
    10. ':' → logprob: -6.537092208862305

Token 285: ' résoudre' (ID: 134006)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.1158891916275024
    2. 'if' → logprob: -1.8658891916275024
    3. 'le' → logprob: -2.115889072418213
    4. 'les' → logprob: -2.740889072418213
    5. 'l' → logprob: -2.865889072418213
    6. ' les' → logprob: -2.865889072418213
    7. ' la' → logprob: -3.115889072418213
    8. ' l' → logprob: -3.240889072418213
    9. ' le' → logprob: -3.365889072418213
    10. ' on' → logprob: -3.365889072418213

Token 286: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.4787302613258362
    2. ' ' → logprob: -2.2287302017211914
    3. ' des' → logprob: -2.2287302017211914
    4. ' )' → logprob: -3.1037302017211914
    5. ')' → logprob: -3.2287302017211914
    6. ' les' → logprob: -3.2287302017211914
    7. ' la' → logprob: -4.353730201721191
    8. 'le' → logprob: -4.603730201721191
    9. ' ' → logprob: -5.353730201721191
    10. ' un' → logprob: -6.228730201721191

Token 287: ' problème' (ID: 35630)
  Prédit: 'pro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pro' → logprob: -0.03864036127924919
    2. 'proble' → logprob: -3.788640260696411
    3. ' problème' → logprob: -4.78864049911499
    4. 'problem' → logprob: -5.03864049911499
    5. ' probleme' → logprob: -8.788640022277832
    6. 'prob' → logprob: -9.288640022277832
    7. ' probl' → logprob: -9.538640022277832
    8. 'graph' → logprob: -10.163640022277832
    9. '```' → logprob: -10.413640022277832
    10. 'pb' → logprob: -11.288640022277832

Token 288: ' principal' (ID: 10589)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07459595799446106
    2. 'def' → logprob: -2.9495959281921387
    3. ':' → logprob: -4.449595928192139
    4. '):' → logprob: -5.574595928192139
    5. '
' → logprob: -5.949595928192139
    6. ' )' → logprob: -7.824595928192139
    7. ')
' → logprob: -8.199596405029297
    8. ':def' → logprob: -8.449596405029297
    9. ':
' → logprob: -9.199596405029297
    10. 'n' → logprob: -9.199596405029297

Token 289: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0645475685596466
    2. 'def' → logprob: -2.814547538757324
    3. ')
' → logprob: -6.689547538757324
    4. '):' → logprob: -7.314547538757324
    5. ' )' → logprob: -8.314547538757324
    6. 'if' → logprob: -8.814547538757324
    7. ')

' → logprob: -9.439547538757324
    8. '
' → logprob: -10.064547538757324
    9. ':' → logprob: -10.564547538757324
    10. 'n' → logprob: -10.564547538757324

Token 290: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.10092592984437943
    2. 'n' → logprob: -2.350925922393799
    3. 'N' → logprob: -7.850925922393799
    4. 'class' → logprob: -8.600926399230957
    5. 'a' → logprob: -10.225926399230957
    6. 'input' → logprob: -10.725926399230957
    7. 'for' → logprob: -10.850926399230957
    8. 'import' → logprob: -11.475926399230957
    9. 'if' → logprob: -11.600926399230957
    10. '#' → logprob: -11.975926399230957

Token 291: ' R' (ID: 460)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.011590264737606049
    2. 'n' → logprob: -4.511590480804443
    3. 'class' → logprob: -7.886590480804443
    4. 'N' → logprob: -9.011590003967285
    5. 'input' → logprob: -11.261590003967285
    6. 'a' → logprob: -11.761590003967285
    7. 'import' → logprob: -11.886590003967285
    8. '#' → logprob: -12.136590003967285
    9. 'from' → logprob: -13.011590003967285
    10. 'for' → logprob: -13.136590003967285

Token 292: 'éc' (ID: 5675)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.1282315254211426
    2. 'def' → logprob: -1.1282315254211426
    3. 'ead' → logprob: -2.1282315254211426
    4. 'ec' → logprob: -2.2532315254211426
    5. '#' → logprob: -3.0032315254211426
    6. 'éc' → logprob: -4.003231525421143
    7. 'est' → logprob: -4.128231525421143
    8. 'ef' → logprob: -4.253231525421143
    9. 'edef' → logprob: -4.878231525421143
    10. 'é' → logprob: -5.378231525421143

Token 293: 'up' (ID: 817)
  Prédit: 'éc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'éc' → logprob: -0.7207175493240356
    2. 'ec' → logprob: -1.0957175493240356
    3. 'e' → logprob: -1.9707175493240356
    4. 'é' → logprob: -3.845717430114746
    5. 'es' → logprob: -5.470717430114746
    6. 'econ' → logprob: -5.845717430114746
    7. 'ée' → logprob: -6.470717430114746
    8. 'est' → logprob: -6.720717430114746
    9. 'em' → logprob: -6.845717430114746
    10. 'ép' → logprob: -6.970717430114746

Token 294: 'ère' (ID: 4346)
  Prédit: 'érer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érer' → logprob: -0.3288860619068146
    2. 'up' → logprob: -1.7038860321044922
    3. 'ère' → logprob: -2.953886032104492
    4. 'ération' → logprob: -4.078886032104492
    5. '#' → logprob: -4.703886032104492
    6. 'er' → logprob: -5.203886032104492
    7. 'è' → logprob: -5.453886032104492
    8. 'erer' → logprob: -6.328886032104492
    9. 'u' → logprob: -6.578886032104492
    10. 'ére' → logprob: -6.828886032104492

Token 295: ' deux' (ID: 10301)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.804352879524231
    2. 'n' → logprob: -1.179352879524231
    3. 'input' → logprob: -1.804352879524231
    4. ' la' → logprob: -3.4293527603149414
    5. ' input' → logprob: -3.6793527603149414
    6. ' l' → logprob: -4.679352760314941
    7. 'l' → logprob: -5.429352760314941
    8. ' les' → logprob: -5.929352760314941
    9. 'la' → logprob: -6.054352760314941
    10. ' le' → logprob: -7.054352760314941

Token 296: ' ent' (ID: 1121)
  Prédit: ' nombres'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombres' → logprob: -0.3067554831504822
    2. ' integers' → logprob: -2.556755542755127
    3. ' ent' → logprob: -2.681755542755127
    4. ' ' → logprob: -2.931755542755127
    5. ' numbers' → logprob: -3.806755542755127
    6. 'n' → logprob: -4.431755542755127
    7. 'numbers' → logprob: -5.056755542755127
    8. 'ent' → logprob: -5.181755542755127
    9. ' a' → logprob: -5.806755542755127
    10. ' n' → logprob: -5.931755542755127

Token 297: 'iers' (ID: 11012)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.3008233308792114
    2. 'iers' → logprob: -1.4258233308792114
    3. 'tries' → logprob: -4.800823211669922
    4. 'ières' → logprob: -6.050823211669922
    5. 'rees' → logprob: -6.550823211669922
    6. 'tiers' → logprob: -6.925823211669922
    7. 'puts' → logprob: -7.050823211669922
    8. 'r' → logprob: -7.050823211669922
    9. 'ers' → logprob: -7.300823211669922
    10. 'ters' → logprob: -7.800823211669922

Token 298: ' n' (ID: 297)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.24365752935409546
    2. 'n' → logprob: -2.2436575889587402
    3. ' a' → logprob: -2.6186575889587402
    4. ' n' → logprob: -3.6186575889587402
    5. ',' → logprob: -4.86865758895874
    6. 'A' → logprob: -6.86865758895874
    7. 'N' → logprob: -7.99365758895874
    8. '(a' → logprob: -8.243657112121582
    9. ',a' → logprob: -8.618657112121582
    10. '()' → logprob: -8.868657112121582

Token 299: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003000696888193488
    2. ' ,' → logprob: -8.750300407409668
    3. ' =' → logprob: -9.625300407409668
    4. ',n' → logprob: -10.500300407409668
    5. ',m' → logprob: -11.875300407409668
    6. '=' → logprob: -12.125300407409668
    7. ',a' → logprob: -12.250300407409668
    8. ',u' → logprob: -12.500300407409668
    9. ',input' → logprob: -12.875300407409668
    10. ',p' → logprob: -12.875300407409668

Token 300: ' k' (ID: 372)
  Prédit: ' m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.4279564917087555
    2. 'm' → logprob: -1.177956461906433
    3. ' k' → logprob: -3.8029565811157227
    4. 'k' → logprob: -4.052956581115723
    5. 'a' → logprob: -9.802956581115723
    6. ' d' → logprob: -9.802956581115723
    7. ' a' → logprob: -10.052956581115723
    8. ' x' → logprob: -10.052956581115723
    9. ' t' → logprob: -10.177956581115723
    10. ' p' → logprob: -10.177956581115723

Token 301: ' à' (ID: 1221)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07463113963603973
    2. '=' → logprob: -2.6996312141418457
    3. ',' → logprob: -5.949631214141846
    4. 'n' → logprob: -6.324631214141846
    5. '=n' → logprob: -8.824630737304688
    6. ',n' → logprob: -10.324630737304688
    7. '=input' → logprob: -10.324630737304688
    8. ' =
' → logprob: -10.949630737304688
    9. ' ' → logprob: -11.199630737304688
    10. ' n' → logprob: -11.324630737304688

Token 302: ' partir' (ID: 12100)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.6369243860244751
    2. 'input' → logprob: -1.261924386024475
    3. ' =' → logprob: -3.0119242668151855
    4. 'list' → logprob: -3.3869242668151855
    5. '=' → logprob: -3.6369242668151855
    6. ' input' → logprob: -4.0119242668151855
    7. 'l' → logprob: -4.1369242668151855
    8. '=input' → logprob: -4.2619242668151855
    9. ' map' → logprob: -4.5119242668151855
    10. ' partir' → logprob: -5.1369242668151855

Token 303: ' de' (ID: 334)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.8350746631622314
    2. ' de' → logprob: -0.9600746631622314
    3. 'input' → logprob: -2.5850746631622314
    4. ' la' → logprob: -2.9600746631622314
    5. ' d' → logprob: -4.335074424743652
    6. 'de' → logprob: -4.585074424743652
    7. '(input' → logprob: -4.835074424743652
    8. '()' → logprob: -4.960074424743652
    9. ' des' → logprob: -5.335074424743652
    10. '=input' → logprob: -5.335074424743652

Token 304: ' l' (ID: 305)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.5891221761703491
    2. ' input' → logprob: -0.8391221761703491
    3. 'l' → logprob: -4.839122295379639
    4. ' l' → logprob: -6.214122295379639
    5. 'la' → logprob: -6.464122295379639
    6. ' la' → logprob: -6.464122295379639
    7. 'sys' → logprob: -10.08912181854248
    8. '=input' → logprob: -11.33912181854248
    9. ' sys' → logprob: -12.08912181854248
    10. '	input' → logprob: -13.58912181854248

Token 305: ''entrée' (ID: 115820)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.027269162237644196
    2. ''entrée' → logprob: -4.77726936340332
    3. 'e' → logprob: -5.40226936340332
    4. 'entrée' → logprob: -5.52726936340332
    5. '=input' → logprob: -5.77726936340332
    6. 'a' → logprob: -6.40226936340332
    7. 'sys' → logprob: -6.52726936340332
    8. ' input' → logprob: -6.52726936340332
    9. 'stdin' → logprob: -7.02726936340332
    10. 'es' → logprob: -7.90226936340332

Token 306: ' standard' (ID: 7024)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.13449852168560028
    2. '=' → logprob: -2.2594985961914062
    3. '=input' → logprob: -4.259498596191406
    4. 'n' → logprob: -6.259498596191406
    5. '=n' → logprob: -6.634498596191406
    6. 's' → logprob: -6.884498596191406
    7. ':' → logprob: -7.009498596191406
    8. ',' → logprob: -7.134498596191406
    9. '()' → logprob: -7.259498596191406
    10. '=list' → logprob: -9.259498596191406

Token 307: '.
' (ID: 558)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6999319195747375
    2. ' =' → logprob: -0.8249319195747375
    3. ',' → logprob: -3.0749318599700928
    4. '=' → logprob: -4.199932098388672
    5. '
' → logprob: -6.449932098388672
    6. ',n' → logprob: -6.949932098388672
    7. '=n' → logprob: -8.574932098388672
    8. ' n' → logprob: -8.574932098388672
    9. ' 
' → logprob: -8.699932098388672
    10. 's' → logprob: -9.074932098388672

Token 308: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -6.704273118884885e-07
    2. ' n' → logprob: -14.500000953674316
    3. '\n' → logprob: -15.875000953674316
    4. '
' → logprob: -17.0
    5. '

' → logprob: -18.75
    6. '(n' → logprob: -19.0
    7. '\' → logprob: -19.375
    8. '  
' → logprob: -19.5
    9. ' 
' → logprob: -20.5
    10. 'a' → logprob: -20.5

Token 309: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002338144404347986
    2. ',k' → logprob: -8.37523365020752
    3. ' ,' → logprob: -12.75023365020752
    4. 'k' → logprob: -15.87523365020752
    5. ',n' → logprob: -16.625234603881836
    6. ',
' → logprob: -17.125234603881836
    7. ',K' → logprob: -18.250234603881836
    8. ',s' → logprob: -19.000234603881836
    9. ',b' → logprob: -19.250234603881836
    10. ',\
' → logprob: -19.375234603881836

Token 310: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.14115585386753082
    2. 'k' → logprob: -2.141155958175659
    3. ' ' → logprob: -4.26615571975708
    4. '  ' → logprob: -10.266156196594238
    5. ' ' → logprob: -10.766156196594238
    6. ' =' → logprob: -12.266156196594238
    7. '=k' → logprob: -12.266156196594238
    8. '_' → logprob: -12.516156196594238
    9. '_k' → logprob: -12.641156196594238
    10. ' ‌' → logprob: -12.891156196594238

Token 311: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12692853808403015
    2. ' =' → logprob: -2.1269285678863525
    3. '=input' → logprob: -15.751928329467773
    4. ',' → logprob: -16.626928329467773
    5. ')' → logprob: -16.751928329467773
    6. '＝' → logprob: -17.251928329467773
    7. '=

' → logprob: -17.251928329467773
    8. ' ' → logprob: -17.501928329467773
    9. '=int' → logprob: -17.501928329467773
    10. ' ' → logprob: -18.251928329467773

Token 312: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.07889033854007721
    2. ' map' → logprob: -2.578890323638916
    3. '	map' → logprob: -14.828890800476074
    4. ' ' → logprob: -16.453889846801758
    5. 'list' → logprob: -16.828889846801758
    6. 'm' → logprob: -17.078889846801758
    7. '(map' → logprob: -18.078889846801758
    8. '[' → logprob: -18.703889846801758
    9. 'ma' → logprob: -19.453889846801758
    10. 'input' → logprob: -19.578889846801758

Token 313: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.20145025849342346
    2. '(' → logprob: -1.701450228691101
    3. '(input' → logprob: -10.82645034790039
    4. '(str' → logprob: -11.45145034790039
    5. '(in' → logprob: -12.95145034790039
    6. 'int' → logprob: -13.45145034790039
    7. '(
' → logprob: -13.70145034790039
    8. '(list' → logprob: -15.07645034790039
    9. '[int' → logprob: -15.20145034790039
    10. ' (' → logprob: -15.45145034790039

Token 314: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.36815696954727173
    2. 'input' → logprob: -1.993156909942627
    3. ',input' → logprob: -2.368156909942627
    4. ',' → logprob: -2.993156909942627
    5. ')' → logprob: -4.493156909942627
    6. '(' → logprob: -4.493156909942627
    7. ' input' → logprob: -5.743156909942627
    8. '(sys' → logprob: -6.243156909942627
    9. 'sys' → logprob: -8.743157386779785
    10. '=input' → logprob: -9.743157386779785

Token 315: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.06227575242519379
    2. ' input' → logprob: -2.8122756481170654
    3. 'sys' → logprob: -8.312275886535645
    4. ' sys' → logprob: -9.687275886535645
    5. ' ' → logprob: -15.062275886535645
    6. ')' → logprob: -15.687275886535645
    7. '	input' → logprob: -17.687274932861328
    8. '(input' → logprob: -18.062274932861328
    9. '=input' → logprob: -18.562274932861328
    10. '_input' → logprob: -18.687274932861328

Token 316: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.771655115589965e-05
    2. '()' → logprob: -11.125018119812012
    3. '())' → logprob: -13.000018119812012
    4. ' ().' → logprob: -15.000018119812012
    5. '(' → logprob: -15.500018119812012
    6. ')' → logprob: -17.000017166137695
    7. '.split' → logprob: -17.375017166137695
    8. 'split' → logprob: -18.250017166137695
    9. '()
' → logprob: -19.500017166137695
    10. ' .' → logprob: -20.000017166137695

Token 317: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0002036595979006961
    2. 'strip' → logprob: -8.500204086303711
    3. 'spl' → logprob: -17.12520408630371
    4. ' split' → logprob: -17.37520408630371
    5. 'rstrip' → logprob: -17.37520408630371
    6. '(split' → logprob: -19.12520408630371
    7. '.split' → logprob: -21.50020408630371
    8. 's' → logprob: -22.12520408630371
    9. '_split' → logprob: -22.75020408630371
    10. '().' → logprob: -22.75020408630371

Token 318: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.056114453822374344
    2. ')' → logprob: -3.056114435195923
    3. '))' → logprob: -5.931114673614502
    4. '()' → logprob: -6.056114673614502
    5. '()))' → logprob: -6.056114673614502
    6. '(' → logprob: -8.806114196777344
    7. ' ())' → logprob: -13.306114196777344
    8. '('' → logprob: -14.056114196777344
    9. '());' → logprob: -14.056114196777344
    10. '())
' → logprob: -14.181114196777344

Token 319: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.637464165687561
    2. ')' → logprob: -1.887464165687561
    3. ',' → logprob: -2.0124640464782715
    4. '#' → logprob: -2.1374640464782715
    5. 'n' → logprob: -2.2624640464782715
    6. 'a' → logprob: -2.5124640464782715
    7. '<|end|>' → logprob: -3.0124640464782715
    8. '' → logprob: -3.1374640464782715
    9. ' 
' → logprob: -3.6374640464782715
    10. '\n' → logprob: -4.2624640464782715

Token 320: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7174615859985352
    2. ')' → logprob: -1.4674615859985352
    3. 'a' → logprob: -2.092461585998535
    4. 'n' → logprob: -2.967461585998535
    5. '#' → logprob: -3.217461585998535
    6. 'd' → logprob: -5.217461585998535
    7. 'def' → logprob: -5.217461585998535
    8. 'numbers' → logprob: -5.342461585998535
    9. 'A' → logprob: -5.467461585998535
    10. 'print' → logprob: -5.592461585998535

Token 321: ' split' (ID: 12648)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.11524268239736557
    2. 'arr' → logprob: -3.4902427196502686
    3. 's' → logprob: -4.3652424812316895
    4. 'A' → logprob: -4.3652424812316895
    5. 'data' → logprob: -4.7402424812316895
    6. 'lst' → logprob: -4.7402424812316895
    7. 'numbers' → logprob: -5.1152424812316895
    8. '#' → logprob: -5.2402424812316895
    9. 'array' → logprob: -5.6152424812316895
    10. 'd' → logprob: -5.7402424812316895

Token 322: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.002307385206222534
    2. '(' → logprob: -6.377307415008545
    3. ')' → logprob: -8.002306938171387
    4. '())' → logprob: -8.252306938171387
    5. '()
' → logprob: -12.627306938171387
    6. '('' → logprob: -13.752306938171387
    7. '(
' → logprob: -14.127306938171387
    8. '()

' → logprob: -14.377306938171387
    9. '#' → logprob: -14.627306938171387
    10. '()]' → logprob: -14.877306938171387

Token 323: ' sé' (ID: 7462)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.012325981631875038
    2. ')' → logprob: -5.137325763702393
    3. '<|end|>' → logprob: -5.887325763702393
    4. '#' → logprob: -6.387325763702393
    5. '(' → logprob: -7.762325763702393
    6. '())' → logprob: -8.13732624053955
    7. '()
' → logprob: -8.13732624053955
    8. '[' → logprob: -8.38732624053955
    9. '<|end|>' → logprob: -8.38732624053955
    10. '()[' → logprob: -9.88732624053955

Token 324: 'pare' (ID: 6900)
  Prédit: 'pare'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pare' → logprob: -9.65101717156358e-05
    2. 'p' → logprob: -9.625096321105957
    3. 'par' → logprob: -11.000096321105957
    4. 'pa' → logprob: -12.625096321105957
    5. 'parent' → logprob: -12.625096321105957
    6. 'parer' → logprob: -13.000096321105957
    7. 'pard' → logprob: -13.875096321105957
    8. 'parate' → logprob: -14.750096321105957
    9. 'pares' → logprob: -15.000096321105957
    10. 'part' → logprob: -15.000096321105957

Token 325: ' la' (ID: 557)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00016504127415828407
    2. '('' → logprob: -8.875164985656738
    3. '(' → logprob: -11.000164985656738
    4. '())' → logprob: -12.375164985656738
    5. ')' → logprob: -13.375164985656738
    6. 'input' → logprob: -13.875164985656738
    7. 'l' → logprob: -15.125164985656738
    8. '("' → logprob: -15.375164985656738
    9. '()
' → logprob: -15.625164985656738
    10. '()]' → logprob: -15.875164985656738

Token 326: ' ligne' (ID: 19583)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.09194429963827133
    2. 'chaine' → logprob: -3.3419442176818848
    3. '()' → logprob: -3.7169442176818848
    4. 'string' → logprob: -3.9669442176818848
    5. ' input' → logprob: -5.591944217681885
    6. 'entrée' → logprob: -5.841944217681885
    7. 'str' → logprob: -6.841944217681885
    8. ' chaîne' → logprob: -7.341944217681885
    9. 'cha' → logprob: -8.091944694519043
    10. 'chain' → logprob: -8.966944694519043

Token 327: ' d' (ID: 272)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0005940204137004912
    2. ')' → logprob: -8.875594139099121
    3. '(' → logprob: -9.125594139099121
    4. '())' → logprob: -9.125594139099121
    5. ' )' → logprob: -9.625594139099121
    6. ' ()' → logprob: -9.875594139099121
    7. '('' → logprob: -10.375594139099121
    8. 'input' → logprob: -11.250594139099121
    9. '().' → logprob: -11.500594139099121
    10. 'tokens' → logprob: -11.500594139099121

Token 328: ''entrée' (ID: 115820)
  Prédit: ''entrée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''entrée' → logprob: -0.0737481340765953
    2. 'entrée' → logprob: -3.0737481117248535
    3. ' input' → logprob: -4.3237481117248535
    4. 'input' → logprob: -5.5737481117248535
    5. 'es' → logprob: -5.8237481117248535
    6. 'e' → logprob: -6.8237481117248535
    7. '’entrée' → logprob: -6.8237481117248535
    8. 'chaine' → logprob: -7.3237481117248535
    9. ' entrée' → logprob: -7.4487481117248535
    10. ''' → logprob: -7.6987481117248535

Token 329: ' sur' (ID: 1512)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00012868782505393028
    2. '(' → logprob: -9.250128746032715
    3. ')' → logprob: -11.125128746032715
    4. '())' → logprob: -11.625128746032715
    5. '('' → logprob: -12.625128746032715
    6. '()
' → logprob: -13.875128746032715
    7. '().' → logprob: -13.875128746032715
    8. '[]' → logprob: -14.000128746032715
    9. '();' → logprob: -14.250128746032715
    10. ' ()' → logprob: -14.875128746032715

Token 330: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.6489729285240173
    2. ' l' → logprob: -1.398972988128662
    3. 'les' → logprob: -2.148972988128662
    4. 'l' → logprob: -2.398972988128662
    5. ''' → logprob: -4.523972988128662
    6. ' des' → logprob: -5.523972988128662
    7. ' espaces' → logprob: -5.648972988128662
    8. ' '' → logprob: -7.398972988128662
    9. 'le' → logprob: -7.523972988128662
    10. ' ' → logprob: -7.523972988128662

Token 331: ' espaces' (ID: 98361)
  Prédit: 'esp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'esp' → logprob: -0.002030707662925124
    2. ''esp' → logprob: -7.127030849456787
    3. 'es' → logprob: -7.502030849456787
    4. ' espaces' → logprob: -7.502030849456787
    5. 'spaces' → logprob: -9.127030372619629
    6. ''espace' → logprob: -12.377030372619629
    7. 'car' → logprob: -12.627030372619629
    8. ''' → logprob: -13.252030372619629
    9. '’esp' → logprob: -13.377030372619629
    10. 'space' → logprob: -14.752030372619629

Token 332: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007331405766308308
    2. '()' → logprob: -5.007331371307373
    3. '(' → logprob: -8.507331848144531
    4. ' )' → logprob: -9.007331848144531
    5. '[' → logprob: -9.882331848144531
    6. 'n' → logprob: -9.882331848144531
    7. ',' → logprob: -10.132331848144531
    8. '(n' → logprob: -10.132331848144531
    9. '#' → logprob: -10.507331848144531
    10. '())' → logprob: -10.507331848144531

Token 333: ' map' (ID: 4014)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007555509451776743
    2. 'n' → logprob: -5.3825554847717285
    3. 'k' → logprob: -7.0075554847717285
    4. '[]' → logprob: -8.132555961608887
    5. ' )' → logprob: -8.382555961608887
    6. '()' → logprob: -8.632555961608887
    7. '[' → logprob: -8.882555961608887
    8. 'input' → logprob: -8.882555961608887
    9. 'int' → logprob: -9.382555961608887
    10. ' ' → logprob: -9.507555961608887

Token 334: ' applique' (ID: 180579)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.036422405391931534
    2. '(int' → logprob: -3.4114224910736084
    3. ')' → logprob: -6.036422252655029
    4. '(
' → logprob: -9.161422729492188
    5. '(lambda' → logprob: -9.161422729492188
    6. ',int' → logprob: -10.286422729492188
    7. ')(' → logprob: -10.661422729492188
    8. 'int' → logprob: -10.911422729492188
    9. '(str' → logprob: -10.911422729492188
    10. '(

' → logprob: -10.911422729492188

Token 335: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.43046125769615173
    2. '(int' → logprob: -1.0554612874984741
    3. ' int' → logprob: -6.555461406707764
    4. ',int' → logprob: -9.180460929870605
    5. '=int' → logprob: -9.430460929870605
    6. ')' → logprob: -10.055460929870605
    7. '(' → logprob: -10.180460929870605
    8. '[int' → logprob: -11.055460929870605
    9. '<int' → logprob: -11.180460929870605
    10. '```' → logprob: -11.680460929870605

Token 336: '()' (ID: 416)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.19411389529705048
    2. ')' → logprob: -2.1941139698028564
    3. ',input' → logprob: -3.1941139698028564
    4. ',int' → logprob: -4.319113731384277
    5. '<|end|>' → logprob: -4.819113731384277
    6. ',map' → logprob: -6.944113731384277
    7. ' ,' → logprob: -7.319113731384277
    8. ',n' → logprob: -8.694113731384277
    9. ' )' → logprob: -9.194113731384277
    10. ');' → logprob: -9.569113731384277

Token 337: ' à' (ID: 1221)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.19830426573753357
    2. ')' → logprob: -2.1983041763305664
    3. ',input' → logprob: -2.6983041763305664
    4. ' ,' → logprob: -7.573304176330566
    5. ',int' → logprob: -7.573304176330566
    6. ' )' → logprob: -8.448304176330566
    7. ',
' → logprob: -9.948304176330566
    8. ',)' → logprob: -9.948304176330566
    9. '(input' → logprob: -10.073304176330566
    10. ',map' → logprob: -10.448304176330566

Token 338: ' chaque' (ID: 21194)
  Prédit: 'cha'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cha' → logprob: -0.41322270035743713
    2. ' chaque' → logprob: -1.4132226705551147
    3. 'each' → logprob: -3.1632227897644043
    4. 'ch' → logprob: -3.4132227897644043
    5. ' chacune' → logprob: -4.788222789764404
    6. ' each' → logprob: -5.288222789764404
    7. ' chacun' → logprob: -5.913222789764404
    8. 'l' → logprob: -6.663222789764404
    9. 'les' → logprob: -7.288222789764404
    10. ' cha' → logprob: -7.538222789764404

Token 339: ' partie' (ID: 22139)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.002517515793442726
    2. 'token' → logprob: -6.8775177001953125
    3. ' élément' → logprob: -7.1275177001953125
    4. 'element' → logprob: -8.377517700195312
    5. ')' → logprob: -8.502517700195312
    6. 'part' → logprob: -9.252517700195312
    7. ' token' → logprob: -9.877517700195312
    8. 'él' → logprob: -10.877517700195312
    9. 'entrée' → logprob: -11.002517700195312
    10. 'val' → logprob: -11.002517700195312

Token 340: '.

' (ID: 364)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00454974640160799
    2. '()' → logprob: -5.879549980163574
    3. '())' → logprob: -7.004549980163574
    4. '(' → logprob: -7.379549980163574
    5. ' )' → logprob: -9.379549980163574
    6. ',' → logprob: -9.754549980163574
    7. '(n' → logprob: -10.754549980163574
    8. 'n' → logprob: -11.254549980163574
    9. '))' → logprob: -11.379549980163574
    10. 'input' → logprob: -12.754549980163574

Token 341: '#' (ID: 2)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.07117407023906708
    2. 'arr' → logprob: -3.196174144744873
    3. 'A' → logprob: -4.946174144744873
    4. 'lst' → logprob: -5.446174144744873
    5. 'numbers' → logprob: -5.696174144744873
    6. 'data' → logprob: -5.946174144744873
    7. 's' → logprob: -6.321174144744873
    8. '#' → logprob: -6.571174144744873
    9. 'dp' → logprob: -6.696174144744873
    10. 'result' → logprob: -6.821174144744873

Token 342: ' R' (ID: 460)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.9065893292427063
    2. 'arr' → logprob: -1.1565892696380615
    3. 'dp' → logprob: -2.7815892696380615
    4. 'A' → logprob: -2.9065892696380615
    5. 'lst' → logprob: -3.0315892696380615
    6. 'data' → logprob: -3.7815892696380615
    7. 'def' → logprob: -4.156589508056641
    8. '#' → logprob: -4.406589508056641
    9. 'ans' → logprob: -4.656589508056641
    10. 'numbers' → logprob: -4.656589508056641

Token 343: 'éc' (ID: 5675)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.3112761974334717
    2. 'est' → logprob: -1.4362761974334717
    3. 'es' → logprob: -1.9362761974334717
    4. 'ange' → logprob: -2.4362761974334717
    5. 'em' → logprob: -2.9362761974334717
    6. 'emain' → logprob: -3.1862761974334717
    7. 'ep' → logprob: -3.8112761974334717
    8. 'és' → logprob: -3.9362761974334717
    9. 's' → logprob: -3.9362761974334717
    10. 'e' → logprob: -4.061276435852051

Token 344: 'up' (ID: 817)
  Prédit: 'up'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'up' → logprob: -0.003922976087778807
    2. 'ur' → logprob: -5.753922939300537
    3. '#' → logprob: -7.878922939300537
    4. 'urs' → logprob: -9.503923416137695
    5. 'ursive' → logprob: -9.753923416137695
    6. 'u' → logprob: -9.753923416137695
    7. 'r' → logprob: -10.253923416137695
    8. 'v' → logprob: -10.503923416137695
    9. 'urse' → logprob: -10.503923416137695
    10. 'ursion' → logprob: -11.503923416137695

Token 345: 'ère' (ID: 4346)
  Prédit: 'ère'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ère' → logprob: -1.2820106744766235
    2. 'er' → logprob: -1.4070106744766235
    3. 'ert' → logprob: -1.9070106744766235
    4. 'r' → logprob: -2.657010555267334
    5. 'are' → logprob: -3.157010555267334
    6. 't' → logprob: -4.157010555267334
    7. 'erve' → logprob: -4.407010555267334
    8. 'e' → logprob: -4.407010555267334
    9. 'is' → logprob: -4.657010555267334
    10. 'range' → logprob: -4.782010555267334

Token 346: ' trois' (ID: 25564)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.283406138420105
    2. 'l' → logprob: -2.6584062576293945
    3. 'la' → logprob: -2.7834062576293945
    4. ' la' → logprob: -3.6584062576293945
    5. 'lst' → logprob: -3.6584062576293945
    6. 'les' → logprob: -4.1584062576293945
    7. 'arr' → logprob: -4.4084062576293945
    8. ' a' → logprob: -5.2834062576293945
    9. 'the' → logprob: -5.4084062576293945
    10. 'n' → logprob: -5.5334062576293945

Token 347: ' ent' (ID: 1121)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.14992088079452515
    2. ' a' → logprob: -2.64992094039917
    3. 'x' → logprob: -4.14992094039917
    4. ' integers' → logprob: -4.77492094039917
    5. 'lst' → logprob: -5.02492094039917
    6. 'A' → logprob: -5.39992094039917
    7. 't' → logprob: -5.64992094039917
    8. 'v' → logprob: -6.14992094039917
    9. 'b' → logprob: -6.27492094039917
    10. 's' → logprob: -6.39992094039917

Token 348: 'iers' (ID: 11012)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.2702905237674713
    2. 'iers' → logprob: -1.520290493965149
    3. 'tiers' → logprob: -4.270290374755859
    4. 'ters' → logprob: -6.895290374755859
    5. 'ter' → logprob: -7.020290374755859
    6. 'ti' → logprob: -7.520290374755859
    7. 'teurs' → logprob: -8.27029037475586
    8. 'ers' → logprob: -8.52029037475586
    9. 'ants' → logprob: -8.64529037475586
    10. 'ints' → logprob: -8.77029037475586

Token 349: ' r' (ID: 428)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.007148314267396927
    2. 'x' → logprob: -5.507148265838623
    3. ' a' → logprob: -6.132148265838623
    4. 'l' → logprob: -8.257148742675781
    5. 'A' → logprob: -8.632148742675781
    6. ',' → logprob: -9.007148742675781
    7. 'r' → logprob: -9.882148742675781
    8. 's' → logprob: -10.132148742675781
    9. 'h' → logprob: -10.507148742675781
    10. 't' → logprob: -10.507148742675781

Token 350: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002755307126790285
    2. ' ,' → logprob: -6.002755165100098
    3. 'ange' → logprob: -9.377755165100098
    4. ',r' → logprob: -9.877755165100098
    5. 'a' → logprob: -10.502755165100098
    6. 'anges' → logprob: -11.002755165100098
    7. '1' → logprob: -11.252755165100098
    8. ',s' → logprob: -11.502755165100098
    9. ' =' → logprob: -11.877755165100098
    10. 'e' → logprob: -12.127755165100098

Token 351: ' s' (ID: 265)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.15163777768611908
    2. 's' → logprob: -2.0266377925872803
    3. 'c' → logprob: -5.401637554168701
    4. 'b' → logprob: -5.901637554168701
    5. 'd' → logprob: -6.526637554168701
    6. ' g' → logprob: -9.02663803100586
    7. 'r' → logprob: -11.27663803100586
    8. 'a' → logprob: -11.27663803100586
    9. 'x' → logprob: -11.65163803100586
    10. 't' → logprob: -11.65163803100586

Token 352: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00037609596620313823
    2. 't' → logprob: -8.500375747680664
    3. ',t' → logprob: -8.875375747680664
    4. ' ,' → logprob: -10.500375747680664
    5. ' t' → logprob: -13.125375747680664
    6. ',p' → logprob: -14.625375747680664
    7. ',
' → logprob: -15.250375747680664
    8. 'p' → logprob: -15.375375747680664
    9. ',r' → logprob: -15.500375747680664
    10. ',v' → logprob: -15.750375747680664

Token 353: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0008429800509475172
    2. ' p' → logprob: -7.625843048095703
    3. 'd' → logprob: -8.125843048095703
    4. 'q' → logprob: -11.250843048095703
    5. 't' → logprob: -11.250843048095703
    6. 'k' → logprob: -12.250843048095703
    7. 'm' → logprob: -12.500843048095703
    8. '_p' → logprob: -12.500843048095703
    9. 'b' → logprob: -12.875843048095703
    10. 'e' → logprob: -13.000843048095703

Token 354: '.' (ID: 13)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25193408131599426
    2. ' =' → logprob: -1.5019340515136719
    3. 'r' → logprob: -13.001934051513672
    4. ',' → logprob: -13.876934051513672
    5. 'n' → logprob: -14.001934051513672
    6. '=r' → logprob: -14.501934051513672
    7. '=input' → logprob: -15.876934051513672
    8. ' ' → logprob: -16.126934051513672
    9. '＝' → logprob: -17.251934051513672
    10. '=n' → logprob: -17.376934051513672

Token 355: ' Ces' (ID: 35720)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.00018613664724398404
    2. '=' → logprob: -9.5001859664917
    3. ' r' → logprob: -10.2501859664917
    4. ',' → logprob: -10.3751859664917
    5. ' =' → logprob: -10.8751859664917
    6. ',r' → logprob: -10.8751859664917
    7. '=r' → logprob: -12.3751859664917
    8. '
' → logprob: -13.1251859664917
    9. '
' → logprob: -15.5001859664917
    10. '

' → logprob: -16.000186920166016

Token 356: ' variables' (ID: 13955)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4814758002758026
    2. ' =' → logprob: -0.981475830078125
    3. ',' → logprob: -5.356475830078125
    4. 'r' → logprob: -7.231475830078125
    5. 's' → logprob: -7.731475830078125
    6. '=r' → logprob: -8.231475830078125
    7. ' représentent' → logprob: -8.606475830078125
    8. '=int' → logprob: -8.981475830078125
    9. '=input' → logprob: -8.981475830078125
    10. 'vals' → logprob: -9.356475830078125

Token 357: ' représentent' (ID: 169478)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.012522606179118156
    2. ' =' → logprob: -4.3875226974487305
    3. ',' → logprob: -12.26252269744873
    4. 'n' → logprob: -13.26252269744873
    5. 's' → logprob: -13.88752269744873
    6. '=r' → logprob: -14.38752269744873
    7. '=n' → logprob: -14.51252269744873
    8. ' sont' → logprob: -14.63752269744873
    9. '=

' → logprob: -14.63752269744873
    10. ' représentent' → logprob: -14.63752269744873

Token 358: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.5817911624908447
    2. 'respect' → logprob: -1.5817911624908447
    3. 'le' → logprob: -1.8317911624908447
    4. ' les' → logprob: -3.0817911624908447
    5. ' le' → logprob: -3.8317911624908447
    6. ' respect' → logprob: -5.706790924072266
    7. 'la' → logprob: -6.456790924072266
    8. 'des' → logprob: -6.831790924072266
    9. 'r' → logprob: -7.831790924072266
    10. 'prob' → logprob: -8.206790924072266

Token 359: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.97688227891922
    2. 'quant' → logprob: -1.3518822193145752
    3. 'nombre' → logprob: -1.4768822193145752
    4. 'scores' → logprob: -2.476882219314575
    5. 'coeff' → logprob: -3.726882219314575
    6. 'val' → logprob: -4.851882457733154
    7. 'co' → logprob: -5.476882457733154
    8. 'prob' → logprob: -5.851882457733154
    9. 'com' → logprob: -5.976882457733154
    10. 'param' → logprob: -6.601882457733154

Token 360: ' attrib' (ID: 72186)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.39980217814445496
    2. 'r' → logprob: -1.3998022079467773
    3. ' =' → logprob: -2.8998022079467773
    4. ',' → logprob: -3.6498022079467773
    5. '=r' → logprob: -6.899802207946777
    6. ',r' → logprob: -7.524802207946777
    7. ' r' → logprob: -9.024802207946777
    8. '_r' → logprob: -9.524802207946777
    9. ' ' → logprob: -10.399802207946777
    10. ')' → logprob: -10.649802207946777

Token 361: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -2.999452772201039e-05
    2. 'ues' → logprob: -11.375029563903809
    3. 'us' → logprob: -12.250029563903809
    4. 'ué' → logprob: -12.375029563903809
    5. 's' → logprob: -12.500029563903809
    6. 'r' → logprob: -13.750029563903809
    7. 'uant' → logprob: -14.125029563903809
    8. 'p' → logprob: -14.250029563903809
    9. 'és' → logprob: -14.250029563903809
    10. 'uée' → logprob: -14.500029563903809

Token 362: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.0673447698354721
    2. 's' → logprob: -2.8173446655273438
    3. 'es' → logprob: -5.317344665527344
    4. 'é' → logprob: -8.817344665527344
    5. 'ées' → logprob: -9.317344665527344
    6. 'ables' → logprob: -9.442344665527344
    7. '```' → logprob: -9.692344665527344
    8. '#' → logprob: -10.942344665527344
    9. 'r' → logprob: -12.192344665527344
    10. 'ès' → logprob: -12.192344665527344

Token 363: ' pour' (ID: 1930)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.0216174125671387
    2. ',' → logprob: -1.2716174125671387
    3. ' à' → logprob: -2.1466174125671387
    4. ' pour' → logprob: -2.8966174125671387
    5. ' ' → logprob: -3.1466174125671387
    6. 'pour' → logprob: -3.1466174125671387
    7. ' par' → logprob: -3.5216174125671387
    8. 'à' → logprob: -3.7716174125671387
    9. '=' → logprob: -4.521617412567139
    10. ' =' → logprob: -4.771617412567139

Token 364: ' jouer' (ID: 48012)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'les' → logprob: -1.5902514457702637
    2. 'g' → logprob: -1.9652514457702637
    3. 'vic' → logprob: -1.9652514457702637
    4. 'respect' → logprob: -2.0902514457702637
    5. 'la' → logprob: -2.5902514457702637
    6. 'rock' → logprob: -2.5902514457702637
    7. 'une' → logprob: -3.2152514457702637
    8. 'ré' → logprob: -3.9652514457702637
    9. 'rou' → logprob: -4.090251445770264
    10. 'r' → logprob: -4.215251445770264

Token 365: ' '' (ID: 461)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.4402875304222107
    2. '"' → logprob: -1.8152875900268555
    3. 'rock' → logprob: -2.1902875900268555
    4. ''' → logprob: -3.1902875900268555
    5. 'R' → logprob: -4.4402875900268555
    6. 'à' → logprob: -4.9402875900268555
    7. ' ' → logprob: -5.3152875900268555
    8. 'Rock' → logprob: -5.9402875900268555
    9. ' rock' → logprob: -6.4402875900268555
    10. 'p' → logprob: -6.4402875900268555

Token 366: 'rock' (ID: 21032)
  Prédit: 'rock'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rock' → logprob: -0.5012494325637817
    2. 'r' → logprob: -2.001249313354492
    3. ' pierre' → logprob: -2.376249313354492
    4. ''' → logprob: -3.126249313354492
    5. '"' → logprob: -3.376249313354492
    6. 'Rock' → logprob: -3.751249313354492
    7. 'R' → logprob: -4.126249313354492
    8. 'p' → logprob: -4.251249313354492
    9. ' rock' → logprob: -4.251249313354492
    10. 'Pierre' → logprob: -5.501249313354492

Token 367: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.009080717340111732
    2. ',' → logprob: -5.38408088684082
    3. ''' → logprob: -5.75908088684082
    4. '','' → logprob: -7.13408088684082
    5. ' ',' → logprob: -9.88408088684082
    6. ','' → logprob: -9.88408088684082
    7. ''',' → logprob: -10.13408088684082
    8. 'rock' → logprob: -10.25908088684082
    9. ',p' → logprob: -10.25908088684082
    10. ''),' → logprob: -10.38408088684082

Token 368: ' '' (ID: 461)
  Prédit: ''s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''s' → logprob: -0.16732406616210938
    2. ' '' → logprob: -2.9173240661621094
    3. ' scissors' → logprob: -2.9173240661621094
    4. 'sc' → logprob: -3.9173240661621094
    5. ''' → logprob: -4.292324066162109
    6. '#' → logprob: -5.167324066162109
    7. 'paper' → logprob: -5.667324066162109
    8. ' paper' → logprob: -6.417324066162109
    9. ' ' → logprob: -7.917324066162109
    10. ' sc' → logprob: -8.04232406616211

Token 369: 'sc' (ID: 2786)
  Prédit: 'sc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sc' → logprob: -0.2158135622739792
    2. ''s' → logprob: -2.090813636779785
    3. ' scissors' → logprob: -2.840813636779785
    4. ' sc' → logprob: -4.965813636779785
    5. ''' → logprob: -6.340813636779785
    6. 'paper' → logprob: -6.840813636779785
    7. 's' → logprob: -7.090813636779785
    8. ' '' → logprob: -7.590813636779785
    9. ' paper' → logprob: -8.215813636779785
    10. 'scape' → logprob: -8.965813636779785

Token 370: 'issors' (ID: 69357)
  Prédit: 'issors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'issors' → logprob: -0.039231076836586
    2. 'issor' → logprob: -3.414231061935425
    3. 'iss' → logprob: -5.289231300354004
    4. 'i' → logprob: -8.914231300354004
    5. 'is' → logprob: -9.289231300354004
    6. 'isso' → logprob: -9.914231300354004
    7. 'isse' → logprob: -9.914231300354004
    8. '#' → logprob: -10.039231300354004
    9. 'ss' → logprob: -10.164231300354004
    10. '```' → logprob: -11.039231300354004

Token 371: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.07949299365282059
    2. ',' → logprob: -2.7044930458068848
    3. ''' → logprob: -4.704493045806885
    4. ','' → logprob: -8.329492568969727
    5. ' ,' → logprob: -9.829492568969727
    6. ' ',' → logprob: -10.204492568969727
    7. '#' → logprob: -10.704492568969727
    8. 'rock' → logprob: -11.079492568969727
    9. ')',' → logprob: -11.204492568969727
    10. '','' → logprob: -11.579492568969727

Token 372: ' '' (ID: 461)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.19298401474952698
    2. 'paper' → logprob: -1.8179839849472046
    3. 'q' → logprob: -4.817984104156494
    4. 'p' → logprob: -6.567984104156494
    5. ' #' → logprob: -6.817984104156494
    6. ' paper' → logprob: -7.317984104156494
    7. ''' → logprob: -7.442984104156494
    8. ' '' → logprob: -8.192983627319336
    9. 'import' → logprob: -9.192983627319336
    10. 'pq' → logprob: -9.192983627319336

Token 373: 'paper' (ID: 23112)
  Prédit: 'paper'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'paper' → logprob: -0.008411262184381485
    2. ''' → logprob: -5.758411407470703
    3. ' paper' → logprob: -6.008411407470703
    4. 'pap' → logprob: -6.758411407470703
    5. 'papier' → logprob: -7.383411407470703
    6. ''p' → logprob: -8.008411407470703
    7. ' '' → logprob: -8.383411407470703
    8. 'papers' → logprob: -9.008411407470703
    9. 'rock' → logprob: -9.008411407470703
    10. ''s' → logprob: -9.883411407470703

Token 374: ''.
' (ID: 49980)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.10695540904998779
    2. '')' → logprob: -2.9819555282592773
    3. ')' → logprob: -3.9819555282592773
    4. ')'' → logprob: -3.9819555282592773
    5. ''.' → logprob: -5.356955528259277
    6. 'respect' → logprob: -6.231955528259277
    7. '',' → logprob: -6.356955528259277
    8. '').' → logprob: -6.481955528259277
    9. 'rock' → logprob: -7.231955528259277
    10. ').' → logprob: -7.731955528259277

Token 375: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -3.128163257315464e-07
    2. ' r' → logprob: -15.375
    3. '#' → logprob: -19.5
    4. 'R' → logprob: -19.875
    5. '	r' → logprob: -20.125
    6. '_r' → logprob: -20.5
    7. '[r' → logprob: -20.5
    8. 'p' → logprob: -20.75
    9. ',r' → logprob: -20.75
    10. '(r' → logprob: -21.375

Token 376: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00014537633978761733
    2. ',s' → logprob: -9.000144958496094
    3. ' ,' → logprob: -10.875144958496094
    4. ',k' → logprob: -13.500144958496094
    5. ',p' → logprob: -14.375144958496094
    6. 's' → logprob: -14.500144958496094
    7. ',
' → logprob: -14.875144958496094
    8. ',r' → logprob: -16.375144958496094
    9. ',

' → logprob: -17.375144958496094
    10. '‌,' → logprob: -17.875144958496094

Token 377: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3132648468017578
    2. ' s' → logprob: -1.3132648468017578
    3. ' p' → logprob: -13.313264846801758
    4. ' ' → logprob: -14.063264846801758
    5. 'p' → logprob: -14.688264846801758
    6. ' ' → logprob: -15.563264846801758
    7. '	s' → logprob: -17.313264846801758
    8. ' 
' → logprob: -17.688264846801758
    9. ' =' → logprob: -17.938264846801758
    10. ',' → logprob: -17.938264846801758

Token 378: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001725511101540178
    2. ',p' → logprob: -8.75017261505127
    3. ' ,' → logprob: -11.50017261505127
    4. 'p' → logprob: -13.37517261505127
    5. '=' → logprob: -13.37517261505127
    6. ',k' → logprob: -14.25017261505127
    7. ',s' → logprob: -16.125171661376953
    8. ' p' → logprob: -18.000171661376953
    9. ' =' → logprob: -19.000171661376953
    10. ',

' → logprob: -19.375171661376953

Token 379: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.011048408225178719
    2. ' p' → logprob: -4.511048316955566
    3. ' ' → logprob: -14.511048316955566
    4. '	p' → logprob: -15.886048316955566
    5. ' ' → logprob: -16.886049270629883
    6. '  ' → logprob: -18.136049270629883
    7. ' 
' → logprob: -18.511049270629883
    8. '_p' → logprob: -18.761049270629883
    9. '  
' → logprob: -19.886049270629883
    10. ''p' → logprob: -19.886049270629883

Token 380: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.004078401252627373
    2. ' =' → logprob: -5.504078388214111
    3. ',' → logprob: -18.254077911376953
    4. '=

' → logprob: -18.254077911376953
    5. '＝' → logprob: -18.629077911376953
    6. ' ' → logprob: -18.754077911376953
    7. ')' → logprob: -18.754077911376953
    8. ' ' → logprob: -19.379077911376953
    9. ')=' → logprob: -19.754077911376953
    10. '=input' → logprob: -20.129077911376953

Token 381: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.002475777640938759
    2. ' map' → logprob: -6.002475738525391
    3. '	map' → logprob: -15.87747573852539
    4. ' ' → logprob: -18.87747573852539
    5. '(map' → logprob: -18.87747573852539
    6. 'ma' → logprob: -19.37747573852539
    7. '.map' → logprob: -19.37747573852539
    8. 'm' → logprob: -19.62747573852539
    9. 'tuple' → logprob: -20.00247573852539
    10. 'list' → logprob: -20.12747573852539

Token 382: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -3.35706390615087e-05
    2. 'int' → logprob: -10.750033378601074
    3. '(' → logprob: -11.375033378601074
    4. '[int' → logprob: -15.375033378601074
    5. ' (' → logprob: -16.00003433227539
    6. ' int' → logprob: -16.25003433227539
    7. '<int' → logprob: -16.25003433227539
    8. '=int' → logprob: -16.62503433227539
    9. '(in' → logprob: -17.00003433227539
    10. ']int' → logprob: -17.62503433227539

Token 383: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06338147819042206
    2. ',int' → logprob: -2.8133814334869385
    3. '(int' → logprob: -6.813381671905518
    4. 'int' → logprob: -8.56338119506836
    5. ',input' → logprob: -9.68838119506836
    6. ' ,' → logprob: -9.93838119506836
    7. '(' → logprob: -12.31338119506836
    8. '[int' → logprob: -12.68838119506836
    9. '<int' → logprob: -13.18838119506836
    10. '=int' → logprob: -14.81338119506836

Token 384: ' input' (ID: 3422)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0012309459270909429
    2. ' int' → logprob: -6.751230716705322
    3. '(int' → logprob: -9.87623119354248
    4. 'input' → logprob: -12.50123119354248
    5. '[int' → logprob: -12.75123119354248
    6. 'map' → logprob: -14.00123119354248
    7. ' ' → logprob: -14.62623119354248
    8. ',int' → logprob: -14.87623119354248
    9. '=int' → logprob: -15.50123119354248
    10. '```' → logprob: -15.87623119354248

Token 385: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -9.849109119386412e-06
    2. '()' → logprob: -11.625009536743164
    3. '(' → logprob: -14.625009536743164
    4. ' ().' → logprob: -15.250009536743164
    5. '.' → logprob: -16.500009536743164
    6. ').' → logprob: -18.125009536743164
    7. '()).' → logprob: -18.500009536743164
    8. ' .' → logprob: -18.500009536743164
    9. '()].' → logprob: -19.250009536743164
    10. '(.' → logprob: -19.625009536743164

Token 386: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -7.896309739408025e-07
    2. ' split' → logprob: -14.125000953674316
    3. 'strip' → logprob: -18.0
    4. 'spl' → logprob: -18.375
    5. '.split' → logprob: -18.75
    6. '(split' → logprob: -19.0
    7. ')' → logprob: -19.25
    8. ' ' → logprob: -19.875
    9. ').' → logprob: -19.875
    10. 'plit' → logprob: -20.625

Token 387: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.011251530610024929
    2. '()' → logprob: -4.511251449584961
    3. ')' → logprob: -8.636251449584961
    4. '(' → logprob: -11.261251449584961
    5. ' ())' → logprob: -11.886251449584961
    6. '())
' → logprob: -13.136251449584961
    7. '());' → logprob: -14.011251449584961
    8. '().' → logprob: -14.136251449584961
    9. '();)' → logprob: -14.261251449584961
    10. '()))' → logprob: -14.261251449584961

Token 388: ' ' (ID: 220)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.22768083214759827
    2. 't' → logprob: -2.7276809215545654
    3. 'r' → logprob: -3.4776809215545654
    4. 'result' → logprob: -4.102680683135986
    5. 'strategy' → logprob: -4.227680683135986
    6. 'rock' → logprob: -4.352680683135986
    7. ')' → logprob: -4.727680683135986
    8. 'R' → logprob: -4.977680683135986
    9. 'dp' → logprob: -4.977680683135986
    10. 'choices' → logprob: -5.352680683135986

Token 389: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.3329017460346222
    2. ')' → logprob: -1.4579017162322998
    3. 'r' → logprob: -4.332901954650879
    4. 'rock' → logprob: -4.582901954650879
    5. 'def' → logprob: -4.582901954650879
    6. '()' → logprob: -5.457901954650879
    7. 't' → logprob: -5.582901954650879
    8. 'k' → logprob: -6.582901954650879
    9. '
' → logprob: -6.832901954650879
    10. 'string' → logprob: -7.332901954650879

Token 390: ' Lecture' (ID: 106534)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.2776937186717987
    2. 'r' → logprob: -2.402693748474121
    3. '<|end|>' → logprob: -2.527693748474121
    4. ')' → logprob: -3.527693748474121
    5. 'def' → logprob: -4.027693748474121
    6. 'rock' → logprob: -4.027693748474121
    7. 'R' → logprob: -5.902693748474121
    8. 'tokens' → logprob: -7.277693748474121
    9. '<|end|>' → logprob: -7.277693748474121
    10. 't' → logprob: -7.402693748474121

Token 391: ' et' (ID: 859)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00941379927098751
    2. '#' → logprob: -5.009413719177246
    3. 'r' → logprob: -6.509413719177246
    4. '(' → logprob: -8.259413719177246
    5. 'des' → logprob: -8.384413719177246
    6. '(r' → logprob: -8.634413719177246
    7. ' des' → logprob: -9.009413719177246
    8. '(
' → logprob: -9.509413719177246
    9. 'n' → logprob: -9.509413719177246
    10. '()
' → logprob: -9.759413719177246

Token 392: ' affect' (ID: 7902)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.43675780296325684
    2. 'assign' → logprob: -1.5617578029632568
    3. 'split' → logprob: -3.186757802963257
    4. ' map' → logprob: -3.561757802963257
    5. 'aff' → logprob: -3.686757802963257
    6. 'assignment' → logprob: -3.811757802963257
    7. 'mapping' → logprob: -5.811758041381836
    8. 'list' → logprob: -5.811758041381836
    9. ' assignment' → logprob: -5.936758041381836
    10. ' unpack' → logprob: -5.936758041381836

Token 393: 'ation' (ID: 387)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0968894213438034
    2. 'ation' → logprob: -3.5968894958496094
    3. ' r' → logprob: -3.9718894958496094
    4. '=' → logprob: -4.096889495849609
    5. 'ration' → logprob: -4.221889495849609
    6. '=r' → logprob: -5.221889495849609
    7. '(r' → logprob: -5.471889495849609
    8. 'tion' → logprob: -6.096889495849609
    9. 'n' → logprob: -6.846889495849609
    10. 'e' → logprob: -7.846889495849609

Token 394: ' simult' (ID: 27260)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.044466014951467514
    2. '(r' → logprob: -3.794466018676758
    3. 'r' → logprob: -4.544466018676758
    4. '(' → logprob: -5.419466018676758
    5. '#' → logprob: -5.919466018676758
    6. '(
' → logprob: -7.544466018676758
    7. 'def' → logprob: -7.544466018676758
    8. '(n' → logprob: -8.169466018676758
    9. '.' → logprob: -8.419466018676758
    10. ')' → logprob: -8.419466018676758

Token 395: 'an' (ID: 270)
  Prédit: 'ation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ation' → logprob: -0.6084340810775757
    2. '=' → logprob: -1.6084340810775757
    3. 'ution' → logprob: -2.6084342002868652
    4. ')' → logprob: -3.1084342002868652
    5. 'uation' → logprob: -3.4834342002868652
    6. '=int' → logprob: -3.9834342002868652
    7. 'ration' → logprob: -4.108434200286865
    8. 'r' → logprob: -4.358434200286865
    9. '=input' → logprob: -4.858434200286865
    10. '(int' → logprob: -4.983434200286865

Token 396: 'ées' (ID: 5161)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ent' → logprob: -1.0573163032531738
    2. 'ment' → logprob: -1.3073163032531738
    3. 'ation' → logprob: -1.4323163032531738
    4. 'e' → logprob: -3.182316303253174
    5. 'ée' → logprob: -3.432316303253174
    6. 't' → logprob: -4.432316303253174
    7. 'ant' → logprob: -4.557316303253174
    8. 'ement' → logprob: -4.557316303253174
    9. 'tion' → logprob: -4.807316303253174
    10. 'ément' → logprob: -5.307316303253174

Token 397: ' des' (ID: 731)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.007856692187488079
    2. 'def' → logprob: -5.382856845855713
    3. 'r' → logprob: -6.632856845855713
    4. ')' → logprob: -7.382856845855713
    5. 'n' → logprob: -8.007856369018555
    6. 'rock' → logprob: -8.257856369018555
    7. '
' → logprob: -9.257856369018555
    8. ' #' → logprob: -9.507856369018555
    9. 'from' → logprob: -9.632856369018555
    10. 't' → logprob: -9.757856369018555

Token 398: ' trois' (ID: 25564)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.6151453256607056
    2. 'map' → logprob: -0.9901453256607056
    3. 'int' → logprob: -3.740145206451416
    4. 'scores' → logprob: -3.740145206451416
    5. 'r' → logprob: -4.115145206451416
    6. 'values' → logprob: -5.115145206451416
    7. 'val' → logprob: -5.490145206451416
    8. ' points' → logprob: -5.865145206451416
    9. '(map' → logprob: -5.865145206451416
    10. '[int' → logprob: -6.490145206451416

Token 399: ' valeurs' (ID: 73668)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.5380392074584961
    2. 'val' → logprob: -1.538039207458496
    3. 'values' → logprob: -2.038039207458496
    4. 'r' → logprob: -3.413039207458496
    5. 'variables' → logprob: -3.913039207458496
    6. 'tokens' → logprob: -5.163039207458496
    7. 'scores' → logprob: -5.413039207458496
    8. 'vals' → logprob: -5.788039207458496
    9. 'int' → logprob: -7.163039207458496
    10. 'ints' → logprob: -7.163039207458496

Token 400: ' depuis' (ID: 16277)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.04432975500822067
    2. ')' → logprob: -3.4193296432495117
    3. 'def' → logprob: -5.794329643249512
    4. 'r' → logprob: -6.169329643249512
    5. 't' → logprob: -7.044329643249512
    6. '
' → logprob: -7.544329643249512
    7. 'n' → logprob: -7.544329643249512
    8. 'rock' → logprob: -7.669329643249512
    9. 'k' → logprob: -8.044329643249512
    10. 'points' → logprob: -8.294329643249512

Token 401: ' l' (ID: 305)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0006302326801232994
    2. 'l' → logprob: -8.250630378723145
    3. ' input' → logprob: -8.250630378723145
    4. '(input' → logprob: -9.250630378723145
    5. 'la' → logprob: -12.000630378723145
    6. 'stdin' → logprob: -13.250630378723145
    7. '=input' → logprob: -13.375630378723145
    8. 'sys' → logprob: -13.875630378723145
    9. '()' → logprob: -15.125630378723145
    10. 'entrée' → logprob: -15.750630378723145

Token 402: ''entrée' (ID: 115820)
  Prédit: ''entrée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''entrée' → logprob: -0.6939144730567932
    2. 'input' → logprob: -0.8189144730567932
    3. 'entrée' → logprob: -2.9439144134521484
    4. 'e' → logprob: -6.068914413452148
    5. 'a' → logprob: -6.193914413452148
    6. 'stdin' → logprob: -7.318914413452148
    7. ''' → logprob: -7.943914413452148
    8. '’entrée' → logprob: -8.443914413452148
    9. 'sys' → logprob: -8.693914413452148
    10. '()' → logprob: -8.693914413452148

Token 403: '.

' (ID: 364)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.10138025879859924
    2. '().' → logprob: -2.3513803482055664
    3. '())' → logprob: -6.851380348205566
    4. ')' → logprob: -9.476380348205566
    5. '()
' → logprob: -11.226380348205566
    6. '.split' → logprob: -12.226380348205566
    7. '.' → logprob: -12.476380348205566
    8. '();' → logprob: -13.226380348205566
    9. '=input' → logprob: -13.226380348205566
    10. 'input' → logprob: -13.351380348205566

Token 404: '#' (ID: 2)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.03391757607460022
    2. 'T' → logprob: -3.5339176654815674
    3. 'S' → logprob: -6.408917427062988
    4. 's' → logprob: -7.283917427062988
    5. '#' → logprob: -8.533917427062988
    6. 'hand' → logprob: -8.658917427062988
    7. 'moves' → logprob: -8.658917427062988
    8. 'r' → logprob: -8.908917427062988
    9. 'a' → logprob: -8.908917427062988
    10. '```' → logprob: -9.033917427062988

Token 405: ' R' (ID: 460)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.016233069822192192
    2. 'T' → logprob: -4.516232967376709
    3. '#' → logprob: -6.641232967376709
    4. 'S' → logprob: -7.266232967376709
    5. 's' → logprob: -7.266232967376709
    6. 'hand' → logprob: -7.516232967376709
    7. 'h' → logprob: -8.141233444213867
    8. 'ts' → logprob: -8.891233444213867
    9. 'a' → logprob: -9.266233444213867
    10. 'seq' → logprob: -9.266233444213867

Token 406: 'éc' (ID: 5675)
  Prédit: 'ock'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ock' → logprob: -1.1528934240341187
    2. '#' → logprob: -1.4028934240341187
    3. 'PS' → logprob: -2.152893543243408
    4. 's' → logprob: -2.402893543243408
    5. 'ps' → logprob: -2.652893543243408
    6. 'P' → logprob: -3.027893543243408
    7. 'S' → logprob: -3.277893543243408
    8. 'o' → logprob: -4.527893543243408
    9. 'e' → logprob: -4.652893543243408
    10. 'k' → logprob: -4.777893543243408

Token 407: 'up' (ID: 817)
  Prédit: 'up'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'up' → logprob: -0.0004025481757707894
    2. 'u' → logprob: -8.375402450561523
    3. 'uper' → logprob: -10.000402450561523
    4. 'e' → logprob: -10.000402450561523
    5. 'upe' → logprob: -10.000402450561523
    6. 'p' → logprob: -11.625402450561523
    7. 'ups' → logprob: -12.375402450561523
    8. 'v' → logprob: -12.625402450561523
    9. '#' → logprob: -13.250402450561523
    10. 'upt' → logprob: -13.500402450561523

Token 408: 'ère' (ID: 4346)
  Prédit: 'ère'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ère' → logprob: -0.32321566343307495
    2. 'p' → logprob: -1.9482157230377197
    3. 're' → logprob: -3.4482157230377197
    4. 'r' → logprob: -3.6982157230377197
    5. 'e' → logprob: -3.8232157230377197
    6. 'up' → logprob: -4.073215484619141
    7. 'er' → logprob: -4.698215484619141
    8. 'ere' → logprob: -4.948215484619141
    9. 'è' → logprob: -5.448215484619141
    10. 't' → logprob: -5.823215484619141

Token 409: ' une' (ID: 2463)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.08173312246799469
    2. 'T' → logprob: -2.831733226776123
    3. 'S' → logprob: -4.581733226776123
    4. 's' → logprob: -5.456733226776123
    5. 'hand' → logprob: -6.456733226776123
    6. 'h' → logprob: -6.831733226776123
    7. 'x' → logprob: -7.956733226776123
    8. 'a' → logprob: -8.081732749938965
    9. '#' → logprob: -8.456732749938965
    10. '
' → logprob: -8.581732749938965

Token 410: ' chaîne' (ID: 89288)
  Prédit: 'string'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'string' → logprob: -0.6851598620414734
    2. 'S' → logprob: -1.3101599216461182
    3. 's' → logprob: -1.5601599216461182
    4. 't' → logprob: -5.060159683227539
    5. 'str' → logprob: -5.310159683227539
    6. 'T' → logprob: -6.685159683227539
    7. 'hand' → logprob: -6.935159683227539
    8. 'j' → logprob: -7.935159683227539
    9. '_' → logprob: -8.060159683227539
    10. 'input' → logprob: -8.310159683227539

Token 411: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.04096795246005058
    2. 'T' → logprob: -3.5409679412841797
    3. 'S' → logprob: -4.91596794128418
    4. 's' → logprob: -5.91596794128418
    5. '=' → logprob: -7.91596794128418
    6. '
' → logprob: -8.79096794128418
    7. 'str' → logprob: -9.29096794128418
    8. 'hand' → logprob: -9.66596794128418
    9. ' =' → logprob: -10.04096794128418
    10. 'x' → logprob: -10.04096794128418

Token 412: ' depuis' (ID: 16277)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0017342021455988288
    2. ' =' → logprob: -6.376734256744385
    3. 't' → logprob: -10.376733779907227
    4. '=input' → logprob: -14.751733779907227
    5. '=
' → logprob: -15.251733779907227
    6. 's' → logprob: -15.501733779907227
    7. '=t' → logprob: -16.751733779907227
    8. '＝' → logprob: -17.376733779907227
    9. '=sys' → logprob: -17.501733779907227
    10. '=str' → logprob: -18.251733779907227

Token 413: ' l' (ID: 305)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.00012035090912831947
    2. ' input' → logprob: -9.375120162963867
    3. '(input' → logprob: -10.375120162963867
    4. 'l' → logprob: -13.125120162963867
    5. 'stdin' → logprob: -14.000120162963867
    6. '=input' → logprob: -14.500120162963867
    7. '	input' → logprob: -15.250120162963867
    8. 'sys' → logprob: -15.500120162963867
    9. '入力' → logprob: -15.500120162963867
    10. 'la' → logprob: -16.875120162963867

Token 414: ''entrée' (ID: 115820)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0676848515868187
    2. 'put' → logprob: -2.8176848888397217
    3. '=input' → logprob: -6.067684650421143
    4. ' input' → logprob: -6.692684650421143
    5. '()' → logprob: -7.067684650421143
    6. '(input' → logprob: -7.567684650421143
    7. 'entrée' → logprob: -8.3176851272583
    8. 'ine' → logprob: -9.0676851272583
    9. ''entrée' → logprob: -9.1926851272583
    10. 'e' → logprob: -9.8176851272583

Token 415: ' standard' (ID: 7024)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3359195590019226
    2. '=' → logprob: -1.5859196186065674
    3. 't' → logprob: -2.7109196186065674
    4. ' =' → logprob: -4.335919380187988
    5. '(t' → logprob: -8.085919380187988
    6. '(' → logprob: -8.585919380187988
    7. 's' → logprob: -8.710919380187988
    8. '()
' → logprob: -9.210919380187988
    9. '=input' → logprob: -9.335919380187988
    10. '=t' → logprob: -9.585919380187988

Token 416: ',' (ID: 11)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0005658994195982814
    2. '=' → logprob: -7.625566005706787
    3. ' =' → logprob: -9.625565528869629
    4. ' t' → logprob: -12.375565528869629
    5. '
' → logprob: -12.750565528869629
    6. '=t' → logprob: -13.125565528869629
    7. 's' → logprob: -13.250565528869629
    8. ':' → logprob: -15.750565528869629
    9. '=
' → logprob: -15.750565528869629
    10. '(t' → logprob: -16.125566482543945

Token 417: ' représentant' (ID: 136122)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.05056503415107727
    2. ' t' → logprob: -3.050565004348755
    3. '
' → logprob: -7.050565242767334
    4. 'input' → logprob: -7.550565242767334
    5. 's' → logprob: -8.425564765930176
    6. ' 
' → logprob: -8.925564765930176
    7. ' input' → logprob: -9.050564765930176
    8. ' s' → logprob: -10.300564765930176
    9. '  
' → logprob: -10.675564765930176
    10. ' which' → logprob: -10.800564765930176

Token 418: ' la' (ID: 557)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.46630340814590454
    2. 'la' → logprob: -1.4663033485412598
    3. 't' → logprob: -3.2163033485412598
    4. 'l' → logprob: -3.3413033485412598
    5. '(input' → logprob: -3.7163033485412598
    6. 'le' → logprob: -3.9663033485412598
    7. 'les' → logprob: -4.34130334854126
    8. 'str' → logprob: -5.96630334854126
    9. ' input' → logprob: -6.09130334854126
    10. ' la' → logprob: -6.21630334854126

Token 419: ' sé' (ID: 7462)
  Prédit: 'sé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sé' → logprob: -0.6494563221931458
    2. 's' → logprob: -1.024456262588501
    3. 'str' → logprob: -2.899456262588501
    4. 'sequence' → logprob: -3.774456262588501
    5. 'suite' → logprob: -4.02445650100708
    6. 'chaine' → logprob: -5.27445650100708
    7. 'main' → logprob: -5.77445650100708
    8. 't' → logprob: -6.14945650100708
    9. 'string' → logprob: -6.52445650100708
    10. 'cho' → logprob: -6.77445650100708

Token 420: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -0.0021474044770002365
    2. 'rie' → logprob: -6.752147197723389
    3. 'q' → logprob: -7.377147197723389
    4. 'que' → logprob: -8.877147674560547
    5. 'quences' → logprob: -9.127147674560547
    6. 'QUENCE' → logprob: -10.002147674560547
    7. 'qu' → logprob: -11.377147674560547
    8. 'cuencia' → logprob: -12.127147674560547
    9. 'lection' → logprob: -12.252147674560547
    10. 'curité' → logprob: -12.252147674560547

Token 421: ' des' (ID: 731)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.06393976509571075
    2. ' t' → logprob: -4.063939571380615
    3. '()' → logprob: -4.188939571380615
    4. '(t' → logprob: -4.188939571380615
    5. 's' → logprob: -5.438939571380615
    6. '(' → logprob: -6.313939571380615
    7. ' =' → logprob: -6.438939571380615
    8. '
' → logprob: -6.688939571380615
    9. ' ' → logprob: -6.688939571380615
    10. ' de' → logprob: -7.063939571380615

Token 422: ' actions' (ID: 10370)
  Prédit: ' coups'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' coups' → logprob: -0.25036993622779846
    2. 't' → logprob: -2.8753700256347656
    3. ' mouvements' → logprob: -3.0003700256347656
    4. 'm' → logprob: -3.2503700256347656
    5. 'actions' → logprob: -4.000370025634766
    6. 'cou' → logprob: -4.250370025634766
    7. 'c' → logprob: -4.375370025634766
    8. ' choix' → logprob: -4.875370025634766
    9. 'moves' → logprob: -5.625370025634766
    10. 'jou' → logprob: -5.750370025634766

Token 423: ' advers' (ID: 33091)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -2.093505099765025e-05
    2. '=' → logprob: -11.875020980834961
    3. ' =' → logprob: -12.125020980834961
    4. ' t' → logprob: -12.250020980834961
    5. 's' → logprob: -13.625020980834961
    6. '(t' → logprob: -13.875020980834961
    7. '
' → logprob: -14.625020980834961
    8. '=t' → logprob: -15.125020980834961
    9. '_t' → logprob: -15.250020980834961
    10. '.' → logprob: -15.875020980834961

Token 424: 'es' (ID: 268)
  Prédit: 'aire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aire' → logprob: -0.2495669573545456
    2. 'ate' → logprob: -2.2495670318603516
    3. 'e' → logprob: -3.6245670318603516
    4. 'é' → logprob: -3.8745670318603516
    5. 'es' → logprob: -3.9995670318603516
    6. 'ataire' → logprob: -4.124567031860352
    7. 'a' → logprob: -4.624567031860352
    8. 't' → logprob: -5.624567031860352
    9. 'iaire' → logprob: -5.749567031860352
    10. '```' → logprob: -5.874567031860352

Token 425: ' ('' (ID: 9906)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -6.098748053773306e-05
    2. '=' → logprob: -10.50006103515625
    3. ' =' → logprob: -10.87506103515625
    4. '
' → logprob: -11.62506103515625
    5. '(t' → logprob: -12.87506103515625
    6. '=t' → logprob: -13.50006103515625
    7. ' t' → logprob: -14.00006103515625
    8. ')t' → logprob: -15.25006103515625
    9. 's' → logprob: -15.37506103515625
    10. ',' → logprob: -16.75006103515625

Token 426: 'r' (ID: 81)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.7978060841560364
    2. 'rsp' → logprob: -1.5478060245513916
    3. 'r' → logprob: -1.7978060245513916
    4. 'rs' → logprob: -2.7978060245513916
    5. ''' → logprob: -3.0478060245513916
    6. 'R' → logprob: -3.6728060245513916
    7. 'RS' → logprob: -4.797806262969971
    8. '```' → logprob: -5.797806262969971
    9. 'rock' → logprob: -5.922806262969971
    10. ''''' → logprob: -6.172806262969971

Token 427: '','' (ID: 4074)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.5591347813606262
    2. 'ps' → logprob: -1.1841347217559814
    3. 's' → logprob: -2.8091347217559814
    4. '')' → logprob: -3.8091347217559814
    5. ' p' → logprob: -4.9341349601745605
    6. ''' → logprob: -5.5591349601745605
    7. '').' → logprob: -5.6841349601745605
    8. ',' → logprob: -5.8091349601745605
    9. '','' → logprob: -6.1841349601745605
    10. '',' → logprob: -6.1841349601745605

Token 428: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -6.73052782076411e-05
    2. 'p' → logprob: -9.625067710876465
    3. ' s' → logprob: -14.125067710876465
    4. '

' → logprob: -15.750067710876465
    5. '
' → logprob: -16.25006675720215
    6. 'sp' → logprob: -16.75006675720215
    7. ''s' → logprob: -16.87506675720215
    8. '`s' → logprob: -17.75006675720215
    9. '_s' → logprob: -18.00006675720215
    10. ' ' → logprob: -18.12506675720215

Token 429: '','' (ID: 4074)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.8318427801132202
    2. '','' → logprob: -1.2068427801132202
    3. '',' → logprob: -1.3318427801132202
    4. ''p' → logprob: -7.45684289932251
    5. ''' → logprob: -8.081842422485352
    6. ',' → logprob: -8.206842422485352
    7. ',p' → logprob: -8.956842422485352
    8. ','' → logprob: -9.331842422485352
    9. ' ',' → logprob: -9.956842422485352
    10. '')' → logprob: -10.581842422485352

Token 430: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.002852901816368103
    2. ''p' → logprob: -5.877852916717529
    3. ''' → logprob: -10.502852439880371
    4. ' p' → logprob: -11.002852439880371
    5. '')' → logprob: -14.252852439880371
    6. ' '' → logprob: -14.377852439880371
    7. '
' → logprob: -14.502852439880371
    8. '	p' → logprob: -14.752852439880371
    9. ',p' → logprob: -15.002852439880371
    10. '',' → logprob: -15.377852439880371

Token 431: '').
' (ID: 105328)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '')' → logprob: -0.12887854874134064
    2. ')' → logprob: -2.253878593444824
    3. 't' → logprob: -4.253878593444824
    4. '=' → logprob: -7.503878593444824
    5. '').' → logprob: -7.878878593444824
    6. '")' → logprob: -7.878878593444824
    7. '')
' → logprob: -8.878878593444824
    8. ' =' → logprob: -9.253878593444824
    9. ').' → logprob: -10.503878593444824
    10. ''' → logprob: -10.628878593444824

Token 432: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: 0.0
    2. ' t' → logprob: -18.5
    3. '`t' → logprob: -23.0
    4. 's' → logprob: -23.125
    5. 'T' → logprob: -23.5
    6. '	t' → logprob: -24.625
    7. '_t' → logprob: -26.0
    8. 'ti' → logprob: -27.0
    9. 'ts' → logprob: -27.25
    10. ')t' → logprob: -27.5

Token 433: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0052350712940096855
    2. ' =' → logprob: -5.255235195159912
    3. '=input' → logprob: -13.630234718322754
    4. '＝' → logprob: -16.75523567199707
    5. ',' → logprob: -17.38023567199707
    6. '.' → logprob: -18.00523567199707
    7. '.=' → logprob: -18.00523567199707
    8. '=

' → logprob: -18.88023567199707
    9. ')' → logprob: -19.00523567199707
    10. ' ' → logprob: -19.00523567199707

Token 434: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -8.061054359131958e-06
    2. ' input' → logprob: -11.750007629394531
    3. 'list' → logprob: -16.62500762939453
    4. 'str' → logprob: -19.50000762939453
    5. '(input' → logprob: -19.87500762939453
    6. '<input' → logprob: -20.87500762939453
    7. '	input' → logprob: -21.50000762939453
    8. '=input' → logprob: -21.62500762939453
    9. '[input' → logprob: -22.00000762939453
    10. '入力' → logprob: -22.12500762939453

Token 435: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -4.1318875446449965e-05
    2. '().' → logprob: -10.125041007995605
    3. ' ()' → logprob: -14.125041007995605
    4. '()
' → logprob: -16.000041961669922
    5. '(' → logprob: -17.125041961669922
    6. '（）' → logprob: -17.125041961669922
    7. '>()' → logprob: -17.375041961669922
    8. '()`' → logprob: -17.625041961669922
    9. '()

' → logprob: -17.625041961669922
    10. '`()' → logprob: -17.875041961669922

Token 436: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 437: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.2971327602863312
    2. '#' → logprob: -2.047132730484009
    3. 'result' → logprob: -2.422132730484009
    4. 'answer' → logprob: -4.547132968902588
    5. 'def' → logprob: -5.422132968902588
    6. ')' → logprob: -5.797132968902588
    7. '
' → logprob: -6.172132968902588
    8. 'score' → logprob: -6.297132968902588
    9. 'res' → logprob: -6.422132968902588
    10. 'ans' → logprob: -6.547132968902588

Token 438: ' Le' (ID: 2018)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.24371564388275146
    2. 'm' → logprob: -2.868715763092041
    3. 'length' → logprob: -3.618715763092041
    4. 'n' → logprob: -3.618715763092041
    5. 'l' → logprob: -3.743715763092041
    6. 'k' → logprob: -3.993715763092041
    7. '#' → logprob: -4.118715763092041
    8. 'result' → logprob: -4.118715763092041
    9. 'answer' → logprob: -4.618715763092041
    10. 'ans' → logprob: -5.243715763092041

Token 439: ' contenu' (ID: 57581)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.2586870491504669
    2. 'len' → logprob: -2.1336870193481445
    3. ' t' → logprob: -3.1336870193481445
    4. 'str' → logprob: -4.0086870193481445
    5. '#' → logprob: -4.5086870193481445
    6. 's' → logprob: -5.2586870193481445
    7. '.' → logprob: -5.3836870193481445
    8. ' ' → logprob: -5.8836870193481445
    9. ''' → logprob: -6.0086870193481445
    10. 'rstrip' → logprob: -6.0086870193481445

Token 440: ' de' (ID: 334)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.40429770946502686
    2. ' =' → logprob: -1.4042977094650269
    3. '<|end|>' → logprob: -2.7792978286743164
    4. '.' → logprob: -4.404297828674316
    5. '<|end|>' → logprob: -5.154297828674316
    6. '#' → logprob: -5.279297828674316
    7. 't' → logprob: -7.779297828674316
    8. ' ' → logprob: -8.029297828674316
    9. 's' → logprob: -8.154297828674316
    10. ')' → logprob: -8.904297828674316

Token 441: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.09689114987850189
    2. 'la' → logprob: -2.971891164779663
    3. 'input' → logprob: -3.346891164779663
    4. 'l' → logprob: -5.971890926361084
    5. 'str' → logprob: -6.596890926361084
    6. 'chaine' → logprob: -6.596890926361084
    7. ' t' → logprob: -8.346891403198242
    8. ' input' → logprob: -9.221891403198242
    9. ' la' → logprob: -9.596891403198242
    10. 's' → logprob: -9.596891403198242

Token 442: ' sera' (ID: 15511)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7125625014305115
    2. ' =' → logprob: -1.8375625610351562
    3. '#' → logprob: -1.9625625610351562
    4. '<|end|>' → logprob: -2.7125625610351562
    5. '.' → logprob: -2.8375625610351562
    6. 't' → logprob: -3.8375625610351562
    7. '[' → logprob: -4.212562561035156
    8. '<|end|>' → logprob: -4.587562561035156
    9. ')' → logprob: -5.212562561035156
    10. 's' → logprob: -5.337562561035156

Token 443: ' it' (ID: 480)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.8339588046073914
    2. 't' → logprob: -1.5839588642120361
    3. 'input' → logprob: -2.333958864212036
    4. 'une' → logprob: -2.458958864212036
    5. 'str' → logprob: -2.958958864212036
    6. ' a' → logprob: -3.583958864212036
    7. ' input' → logprob: -3.708958864212036
    8. 'a' → logprob: -3.958958864212036
    9. ' t' → logprob: -4.958958625793457
    10. ' str' → logprob: -4.958958625793457

Token 444: 'éré' (ID: 33338)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.0728980153799057
    2. 'éré' → logprob: -3.5728979110717773
    3. 't' → logprob: -4.322897911071777
    4. 'put' → logprob: -4.822897911071777
    5. 'érée' → logprob: -5.072897911071777
    6. 'érés' → logprob: -6.572897911071777
    7. 'érées' → logprob: -6.822897911071777
    8. 'e' → logprob: -6.947897911071777
    9. 'é' → logprob: -7.197897911071777
    10. 'ér' → logprob: -7.197897911071777

Token 445: ' plus' (ID: 2932)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.501151442527771
    2. '#' → logprob: -1.501151442527771
    3. '<|end|>' → logprob: -2.6261515617370605
    4. 't' → logprob: -3.7511515617370605
    5. 's' → logprob: -4.5011515617370605
    6. '<|end|>' → logprob: -4.6261515617370605
    7. '[' → logprob: -4.7511515617370605
    8. 'n' → logprob: -4.8761515617370605
    9. ')' → logprob: -4.8761515617370605
    10. 'for' → logprob: -4.8761515617370605

Token 446: ' loin' (ID: 40875)
  Prédit: ' tard'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tard' → logprob: -0.06937448680400848
    2. 't' → logprob: -3.4443745613098145
    3. 'loin' → logprob: -4.1943745613098145
    4. 'bas' → logprob: -4.4443745613098145
    5. 'long' → logprob: -5.1943745613098145
    6. 'late' → logprob: -7.3193745613098145
    7. ' loin' → logprob: -7.8193745613098145
    8. 'avant' → logprob: -8.319374084472656
    9. 'haut' → logprob: -8.444374084472656
    10. '#' → logprob: -8.694374084472656

Token 447: ' pour' (ID: 1930)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.38780322670936584
    2. '#' → logprob: -1.7628031969070435
    3. '
' → logprob: -2.262803316116333
    4. 'result' → logprob: -4.762803077697754
    5. '\n' → logprob: -5.262803077697754
    6. 'answer' → logprob: -5.387803077697754
    7. 'def' → logprob: -5.512803077697754
    8. 't' → logprob: -5.762803077697754
    9. '<|end|>' → logprob: -5.762803077697754
    10. '  
' → logprob: -6.512803077697754

Token 448: ' déterminer' (ID: 122024)
  Prédit: ' déterminer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' déterminer' → logprob: -0.1394582837820053
    2. ' analyser' → logprob: -3.014458179473877
    3. 'determ' → logprob: -3.514458179473877
    4. 'an' → logprob: -4.014458179473877
    5. 'dé' → logprob: -5.389458179473877
    6. 'calcul' → logprob: -5.514458179473877
    7. ' choisir' → logprob: -5.889458179473877
    8. ' calcul' → logprob: -6.139458179473877
    9. ' jouer' → logprob: -6.639458179473877
    10. ' obtenir' → logprob: -6.639458179473877

Token 449: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.25772997736930847
    2. 'la' → logprob: -2.007730007171631
    3. ' la' → logprob: -3.382730007171631
    4. ' les' → logprob: -4.007730007171631
    5. 'l' → logprob: -4.257730007171631
    6. 'le' → logprob: -4.632730007171631
    7. '#' → logprob: -4.632730007171631
    8. 'the' → logprob: -7.132730007171631
    9. 'score' → logprob: -7.507730007171631
    10. 'comment' → logprob: -7.632730007171631

Token 450: ' actions' (ID: 10370)
  Prédit: 'me'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'me' → logprob: -0.7108055949211121
    2. 'actions' → logprob: -1.0858056545257568
    3. 'points' → logprob: -3.210805654525757
    4. 'cou' → logprob: -3.335805654525757
    5. 'moves' → logprob: -3.460805654525757
    6. 'cho' → logprob: -3.585805654525757
    7. 'm' → logprob: -4.835805416107178
    8. 'ré' → logprob: -4.835805416107178
    9. 'scores' → logprob: -5.210805416107178
    10. 'jou' → logprob: -5.585805416107178

Token 451: ' à' (ID: 1221)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.2922087907791138
    2. '#' → logprob: -1.4172087907791138
    3. 'def' → logprob: -2.667208671569824
    4. 'A' → logprob: -3.542208671569824
    5. 't' → logprob: -3.667208671569824
    6. '=' → logprob: -3.917208671569824
    7. 'r' → logprob: -3.917208671569824
    8. 's' → logprob: -4.042208671569824
    9. '_choices' → logprob: -4.042208671569824
    10. '_r' → logprob: -4.292208671569824

Token 452: ' choisir' (ID: 47004)
  Prédit: 'jou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'jou' → logprob: -0.17140941321849823
    2. 'cho' → logprob: -2.6714093685150146
    3. 'faire' → logprob: -3.5464093685150146
    4. 'prendre' → logprob: -4.171409606933594
    5. 'contre' → logprob: -4.296409606933594
    6. 'ré' → logprob: -4.421409606933594
    7. 'cont' → logprob: -5.296409606933594
    8. '```' → logprob: -5.671409606933594
    9. 'produ' → logprob: -6.046409606933594
    10. ' jouer' → logprob: -6.671409606933594

Token 453: '.

' (ID: 364)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7794338464736938
    2. 'dp' → logprob: -0.7794338464736938
    3. 'answer' → logprob: -3.5294337272644043
    4. 'def' → logprob: -4.529433727264404
    5. 'result' → logprob: -4.654433727264404
    6. 'answers' → logprob: -5.529433727264404
    7. ')' → logprob: -5.654433727264404
    8. 'ans' → logprob: -5.779433727264404
    9. 't' → logprob: -5.904433727264404
    10. 'score' → logprob: -6.029433727264404

Token 454: 'a' (ID: 64)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.07993604242801666
    2. '#' → logprob: -2.9549360275268555
    3. 't' → logprob: -4.9549360275268555
    4. 'T' → logprob: -5.2049360275268555
    5. 'answer' → logprob: -6.0799360275268555
    6. '  
' → logprob: -6.9549360275268555
    7. 'def' → logprob: -6.9549360275268555
    8. 'result' → logprob: -7.0799360275268555
    9. 'points' → logprob: -7.3299360275268555
    10. 'w' → logprob: -7.7049360275268555

Token 455: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4812358021736145
    2. ' =' → logprob: -1.3562357425689697
    3. 'ns' → logprob: -2.1062357425689697
    4. '=[]' → logprob: -7.231235980987549
    5. 'ction' → logprob: -7.481235980987549
    6. 'ctions' → logprob: -7.606235980987549
    7. 's' → logprob: -8.60623550415039
    8. 'b' → logprob: -8.85623550415039
    9. '=[]
' → logprob: -9.23123550415039
    10. ' ' → logprob: -9.48123550415039

Token 456: ' ""' (ID: 3216)
  Prédit: '[''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '['' → logprob: -0.3469541072845459
    2. '[]' → logprob: -1.471954107284546
    3. '["' → logprob: -3.596954107284546
    4. '[' → logprob: -3.846954107284546
    5. '[k' → logprob: -4.721954345703125
    6. '""' → logprob: -6.471954345703125
    7. ' ['' → logprob: -6.846954345703125
    8. '[t' → logprob: -7.346954345703125
    9. '[n' → logprob: -7.596954345703125
    10. '''' → logprob: -7.971954345703125

Token 457: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.33108285069465637
    2. '<|end|>' → logprob: -1.331082820892334
    3. 'for' → logprob: -4.956082820892334
    4. ' 
' → logprob: -5.456082820892334
    5. ' for' → logprob: -5.956082820892334
    6. '<|end|>' → logprob: -6.456082820892334
    7. 'a' → logprob: -7.706082820892334
    8. '
' → logprob: -7.956082820892334
    9. '#' → logprob: -8.081083297729492
    10. '  
' → logprob: -8.456083297729492

Token 458: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 459: ' Initialise' (ID: 179601)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6135691404342651
    2. '<|end|>' → logprob: -1.7385691404342651
    3. '[]' → logprob: -2.3635692596435547
    4. '#' → logprob: -2.7385692596435547
    5. '""' → logprob: -3.1135692596435547
    6. 'input' → logprob: -3.6135692596435547
    7. 'for' → logprob: -3.9885692596435547
    8. '"' → logprob: -4.488569259643555
    9. '<|end|>' → logprob: -5.113569259643555
    10. 't' → logprob: -5.863569259643555

Token 460: ' la' (ID: 557)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 461: ' chaîne' (ID: 89288)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -1.169553279876709
    2. 'a' → logprob: -1.669553279876709
    3. 'str' → logprob: -1.669553279876709
    4. 'list' → logprob: -1.919553279876709
    5. '""' → logprob: -2.794553279876709
    6. 'b' → logprob: -3.169553279876709
    7. ' ' → logprob: -3.919553279876709
    8. 'string' → logprob: -4.544553279876709
    9. ''' → logprob: -5.419553279876709
    10. '[]' → logprob: -5.544553279876709

Token 462: ' a' (ID: 261)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 463: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 464: ' qui' (ID: 2780)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6526695489883423
    2. '"' → logprob: -2.6526694297790527
    3. '[]' → logprob: -2.7776694297790527
    4. ' ' → logprob: -2.9026694297790527
    5. ' a' → logprob: -3.0276694297790527
    6. ' representing' → logprob: -3.2776694297790527
    7. '#' → logprob: -3.4026694297790527
    8. ' which' → logprob: -3.4026694297790527
    9. 'which' → logprob: -3.6526694297790527
    10. '""' → logprob: -3.7776694297790527

Token 465: ' cont' (ID: 836)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8524221777915955
    2. '=' → logprob: -1.2274222373962402
    3. ' ' → logprob: -1.4774222373962402
    4. ' +=' → logprob: -3.8524222373962402
    5. ' a' → logprob: -4.97742223739624
    6. 'a' → logprob: -5.22742223739624
    7. ' va' → logprob: -5.47742223739624
    8. '+=' → logprob: -5.47742223739624
    9. ' will' → logprob: -6.35242223739624
    10. ' "' → logprob: -6.47742223739624

Token 466: 'i' (ID: 72)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.922134518623352
    2. 'inue' → logprob: -1.172134518623352
    3. 'i' → logprob: -1.547134518623352
    4. 'ient' → logprob: -2.7971343994140625
    5. 'iend' → logprob: -5.0471343994140625
    6. '+=' → logprob: -5.9221343994140625
    7. '=' → logprob: -6.0471343994140625
    8. 'inu' → logprob: -6.1721343994140625
    9. 'e' → logprob: -6.9221343994140625
    10. 'ains' → logprob: -7.1721343994140625

Token 467: 'endra' (ID: 32364)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2893475592136383
    2. 'ient' → logprob: -1.914347529411316
    3. 'iend' → logprob: -2.2893476486206055
    4. 'endra' → logprob: -6.9143476486206055
    5. 'ien' → logprob: -7.5393476486206055
    6. 'iennent' → logprob: -8.164347648620605
    7. 'iens' → logprob: -8.539347648620605
    8. 'endrá' → logprob: -9.539347648620605
    9. '```' → logprob: -9.789347648620605
    10. 'in' → logprob: -10.539347648620605

Token 468: ' la' (ID: 557)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.8682624101638794
    2. ' ' → logprob: -0.9932624101638794
    3. ' la' → logprob: -2.86826229095459
    4. '"' → logprob: -2.86826229095459
    5. ' le' → logprob: -3.74326229095459
    6. '<|end|>' → logprob: -3.74326229095459
    7. ' l' → logprob: -4.11826229095459
    8. 'les' → logprob: -4.61826229095459
    9. ' "' → logprob: -5.36826229095459
    10. ' des' → logprob: -5.74326229095459

Token 469: ' sé' (ID: 7462)
  Prédit: 'me'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'me' → logprob: -0.4550636410713196
    2. 'solution' → logprob: -1.9550635814666748
    3. 'str' → logprob: -2.580063581466675
    4. ' choix' → logprob: -3.330063581466675
    5. 's' → logprob: -3.580063581466675
    6. 'cho' → logprob: -3.580063581466675
    7. 'ré' → logprob: -4.580063819885254
    8. 'result' → logprob: -4.830063819885254
    9. 'sequence' → logprob: -4.955063819885254
    10. ' solution' → logprob: -5.205063819885254

Token 470: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -0.09829171001911163
    2. 'lection' → logprob: -2.4732916355133057
    3. 'quences' → logprob: -5.848291873931885
    4. 'lected' → logprob: -6.098291873931885
    5. 'lect' → logprob: -6.223291873931885
    6. 'rie' → logprob: -7.098291873931885
    7. 'qu' → logprob: -7.848291873931885
    8. 'q' → logprob: -8.223291397094727
    9. 'ré' → logprob: -8.348291397094727
    10. 'lections' → logprob: -8.598291397094727

Token 471: ' de' (ID: 334)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.2027989774942398
    2. 'des' → logprob: -2.202799081802368
    3. ' de' → logprob: -3.952799081802368
    4. ' chois' → logprob: -3.952799081802368
    5. ' ' → logprob: -4.452798843383789
    6. 'a' → logprob: -4.952798843383789
    7. ' a' → logprob: -6.202798843383789
    8. 'chosen' → logprob: -6.577798843383789
    9. ' chosen' → logprob: -6.827798843383789
    10. 'for' → logprob: -6.952798843383789

Token 472: ' nos' (ID: 4001)
  Prédit: 'actions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'actions' → logprob: -0.05021874979138374
    2. ' choix' → logprob: -3.9252188205718994
    3. 'cho' → logprob: -4.92521858215332
    4. ' actions' → logprob: -5.17521858215332
    5. 'ré' → logprob: -5.67521858215332
    6. 'moves' → logprob: -6.05021858215332
    7. ' réponses' → logprob: -6.30021858215332
    8. 'choices' → logprob: -6.30021858215332
    9. 'm' → logprob: -6.80021858215332
    10. 'str' → logprob: -7.05021858215332

Token 473: ' actions' (ID: 10370)
  Prédit: 'actions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'actions' → logprob: -0.08297556638717651
    2. ' coups' → logprob: -3.2079756259918213
    3. 'cou' → logprob: -4.207975387573242
    4. 'cho' → logprob: -4.707975387573242
    5. 'c' → logprob: -5.207975387573242
    6. ' actions' → logprob: -5.832975387573242
    7. ' choix' → logprob: -6.207975387573242
    8. ' réponses' → logprob: -6.457975387573242
    9. 'ré' → logprob: -6.832975387573242
    10. 'jou' → logprob: -7.207975387573242

Token 474: ' optimal' (ID: 24174)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.024332625791430473
    2. ' for' → logprob: -4.149332523345947
    3. '=' → logprob: -6.149332523345947
    4. ' =' → logprob: -6.524332523345947
    5. '#' → logprob: -6.774332523345947
    6. '
' → logprob: -7.024332523345947
    7. 'choices' → logprob: -7.899332523345947
    8. '<|end|>' → logprob: -7.899332523345947
    9. 't' → logprob: -8.024333000183105
    10. ',' → logprob: -8.524333000183105

Token 475: 'ement' (ID: 962)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.336019903421402
    2. ' ' → logprob: -1.8360198736190796
    3. ' for' → logprob: -3.336019992828369
    4. ' =' → logprob: -3.461019992828369
    5. '<|end|>' → logprob: -3.961019992828369
    6. '=' → logprob: -3.961019992828369
    7. 'a' → logprob: -5.336019992828369
    8. '
' → logprob: -5.461019992828369
    9. '<|end|>' → logprob: -6.336019992828369
    10. '#' → logprob: -6.461019992828369

Token 476: ' chois' (ID: 33475)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4402640461921692
    2. '+=' → logprob: -1.9402639865875244
    3. ' =' → logprob: -2.5652639865875244
    4. '<|end|>' → logprob: -2.5652639865875244
    5. ' +=' → logprob: -3.9402639865875244
    6. 'for' → logprob: -4.8152642250061035
    7. '_choices' → logprob: -5.1902642250061035
    8. '+="' → logprob: -5.6902642250061035
    9. 'def' → logprob: -6.3152642250061035
    10. '<|end|>' → logprob: -6.3152642250061035

Token 477: 'ies' (ID: 566)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.3896956145763397
    2. 'ies' → logprob: -1.764695644378662
    3. 'e' → logprob: -2.264695644378662
    4. 'ées' → logprob: -3.514695644378662
    5. 'i' → logprob: -4.264695644378662
    6. 'ie' → logprob: -6.889695644378662
    7. 'é' → logprob: -7.014695644378662
    8. '"' → logprob: -7.764695644378662
    9. 'ees' → logprob: -8.139695167541504
    10. '```' → logprob: -8.139695167541504

Token 478: '.
' (ID: 558)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.027386898174881935
    2. ' for' → logprob: -4.277386665344238
    3. '<|end|>' → logprob: -4.402386665344238
    4. '<|end|>' → logprob: -7.777386665344238
    5. '
' → logprob: -9.152386665344238
    6. '#' → logprob: -9.402386665344238
    7. ')' → logprob: -9.652386665344238
    8. '[' → logprob: -10.277386665344238
    9. ' ' → logprob: -10.527386665344238
    10. '	for' → logprob: -10.902386665344238

Token 479: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0006307095172815025
    2. 'used' → logprob: -8.375630378723145
    3. 'dp' → logprob: -8.875630378723145
    4. '#' → logprob: -9.500630378723145
    5. 'actions' → logprob: -9.625630378723145
    6. ' for' → logprob: -9.750630378723145
    7. '<|end|>' → logprob: -11.625630378723145
    8. 'from' → logprob: -11.750630378723145
    9. 'def' → logprob: -11.875630378723145
    10. 'w' → logprob: -12.625630378723145

Token 480: ' Pour' (ID: 13931)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0001847062085289508
    2. 'actions' → logprob: -9.000185012817383
    3. '#' → logprob: -10.250185012817383
    4. 'from' → logprob: -12.000185012817383
    5. ' for' → logprob: -12.125185012817383
    6. 'def' → logprob: -12.750185012817383
    7. 'dp' → logprob: -12.875185012817383
    8. 'action' → logprob: -13.750185012817383
    9. 'f' → logprob: -14.500185012817383
    10. 'a' → logprob: -14.500185012817383

Token 481: ' chaque' (ID: 21194)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.005108168348670006
    2. '_' → logprob: -5.38010835647583
    3. ' i' → logprob: -7.75510835647583
    4. '_i' → logprob: -9.755107879638672
    5. ' _' → logprob: -14.130107879638672
    6. '	i' → logprob: -15.255107879638672
    7. '(i' → logprob: -16.880107879638672
    8. '_index' → logprob: -17.130107879638672
    9. 'j' → logprob: -17.255107879638672
    10. '__' → logprob: -17.505107879638672

Token 482: ' caractère' (ID: 80509)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.04921308904886246
    2. ' i' → logprob: -3.049213171005249
    3. '_' → logprob: -7.54921293258667
    4. '_i' → logprob: -9.424213409423828
    5. ' _' → logprob: -11.549213409423828
    6. 'c' → logprob: -12.549213409423828
    7. ' ' → logprob: -13.924213409423828
    8. 'ch' → logprob: -14.549213409423828
    9. ' ' → logprob: -14.549213409423828
    10. 'index' → logprob: -14.549213409423828

Token 483: ' (' (ID: 350)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.7443258166313171
    2. 'i' → logprob: -1.619325876235962
    3. ' i' → logprob: -1.744325876235962
    4. 'in' → logprob: -1.994325876235962
    5. 'c' → logprob: -4.744325637817383
    6. ' c' → logprob: -6.244325637817383
    7. ' de' → logprob: -6.244325637817383
    8. ' dans' → logprob: -7.869325637817383
    9. ',' → logprob: -7.994325637817383
    10. ' t' → logprob: -7.994325637817383

Token 484: 'cha' (ID: 3836)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3437117338180542
    2. 'c' → logprob: -1.7187117338180542
    3. 'ti' → logprob: -2.7187118530273438
    4. 'ch' → logprob: -3.3437118530273438
    5. 'char' → logprob: -5.343711853027344
    6. 'x' → logprob: -5.843711853027344
    7. 'ci' → logprob: -7.218711853027344
    8. 'action' → logprob: -7.468711853027344
    9. 'tt' → logprob: -7.718711853027344
    10. ' i' → logprob: -8.343711853027344

Token 485: 'que' (ID: 1126)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.9295274615287781
    2. 'ar' → logprob: -1.4295275211334229
    3. ' in' → logprob: -2.179527521133423
    4. 'e' → logprob: -2.429527521133423
    5. 'a' → logprob: -2.679527521133423
    6. '   ' → logprob: -3.929527521133423
    7. '```' → logprob: -4.054527282714844
    8. 'car' → logprob: -4.179527282714844
    9. 'c' → logprob: -4.429527282714844
    10. 'aine' → logprob: -5.179527282714844

Token 486: ' coup' (ID: 25465)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7175008654594421
    2. 'c' → logprob: -1.217500925064087
    3. ' i' → logprob: -2.092500925064087
    4. ' c' → logprob: -2.842500925064087
    5. 'char' → logprob: -4.217500686645508
    6. 'action' → logprob: -4.967500686645508
    7. 'ch' → logprob: -5.467500686645508
    8. ' action' → logprob: -5.842500686645508
    9. ' char' → logprob: -5.967500686645508
    10. 'car' → logprob: -7.717500686645508

Token 487: ' de' (ID: 334)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.14836324751377106
    2. ')' → logprob: -2.3983633518218994
    3. 'in' → logprob: -3.5233633518218994
    4. ' i' → logprob: -5.27336311340332
    5. 'i' → logprob: -5.64836311340332
    6. ' de' → logprob: -6.39836311340332
    7. ' dans' → logprob: -6.64836311340332
    8. ' ' → logprob: -6.89836311340332
    9. 'e' → logprob: -7.02336311340332
    10. ',' → logprob: -7.02336311340332

Token 488: ' l' (ID: 305)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0026352303102612495
    2. ' t' → logprob: -6.0026350021362305
    3. 'l' → logprob: -10.37763500213623
    4. ' ' → logprob: -10.37763500213623
    5. 'tour' → logprob: -10.62763500213623
    6. 'a' → logprob: -11.25263500213623
    7. 'jeu' → logprob: -11.87763500213623
    8. 'c' → logprob: -12.25263500213623
    9. 'attaque' → logprob: -12.25263500213623
    10. 'r' → logprob: -12.25263500213623

Token 489: ''ad' (ID: 36162)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.5112680792808533
    2. 'a' → logprob: -1.761268138885498
    3. 'r' → logprob: -3.761268138885498
    4. 'ad' → logprob: -4.261268138885498
    5. 'u' → logprob: -4.386268138885498
    6. 'que' → logprob: -4.386268138885498
    7. 'ar' → logprob: -4.511268138885498
    8. '```' → logprob: -4.636268138885498
    9. 'jeu' → logprob: -4.761268138885498
    10. 'à' → logprob: -4.761268138885498

Token 490: 'vers' (ID: 3674)
  Prédit: 'vers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vers' → logprob: -0.04769635200500488
    2. 'a' → logprob: -4.422696113586426
    3. 't' → logprob: -4.922696113586426
    4. 'f' → logprob: -5.172696113586426
    5. 'r' → logprob: -5.797696113586426
    6. 'c' → logprob: -5.797696113586426
    7. 'ut' → logprob: -5.922696113586426
    8. 'p' → logprob: -6.547696113586426
    9. 'é' → logprob: -6.672696113586426
    10. 'v' → logprob: -6.797696113586426

Token 491: 'aire' (ID: 8189)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.28690147399902344
    2. 'ce' → logprob: -2.0369014739990234
    3. 'é' → logprob: -2.7869014739990234
    4. 'es' → logprob: -4.411901473999023
    5. 'ise' → logprob: -4.536901473999023
    6. 'ève' → logprob: -4.661901473999023
    7. 'ace' → logprob: -5.161901473999023
    8. 'è' → logprob: -5.536901473999023
    9. 'a' → logprob: -6.411901473999023
    10. 't' → logprob: -6.536901473999023

Token 492: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2539667785167694
    2. ' in' → logprob: -1.6289668083190918
    3. 'in' → logprob: -3.628966808319092
    4. ' )' → logprob: -7.878966808319092
    5. 'i' → logprob: -8.378966331481934
    6. ',' → logprob: -8.378966331481934
    7. ' dans' → logprob: -8.503966331481934
    8. '),' → logprob: -8.753966331481934
    9. ' i' → logprob: -8.878966331481934
    10. ' for' → logprob: -9.878966331481934

Token 493: ' dans' (ID: 2671)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1572960615158081
    2. 'in' → logprob: -2.2822961807250977
    3. ',' → logprob: -4.282296180725098
    4. ' ' → logprob: -4.532296180725098
    5. ' i' → logprob: -4.532296180725098
    6. 'i' → logprob: -5.907296180725098
    7. ':' → logprob: -6.157296180725098
    8. 'a' → logprob: -7.282296180725098
    9. 'for' → logprob: -7.282296180725098
    10. ' for' → logprob: -7.407296180725098

Token 494: ' la' (ID: 557)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -4.656383680412546e-05
    2. ' t' → logprob: -10.125046730041504
    3. 'range' → logprob: -12.000046730041504
    4. ' range' → logprob: -15.375046730041504
    5. '(t' → logprob: -17.625045776367188
    6. '`t' → logprob: -17.750045776367188
    7. 'for' → logprob: -18.250045776367188
    8. '	t' → logprob: -18.250045776367188
    9. ' ' → logprob: -18.375045776367188
    10. 'enumer' → logprob: -18.500045776367188

Token 495: ' chaîne' (ID: 89288)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0033336104825139046
    2. 'range' → logprob: -5.878333568572998
    3. 'for' → logprob: -7.628333568572998
    4. ' range' → logprob: -10.753334045410156
    5. 'enumer' → logprob: -11.128334045410156
    6. ' for' → logprob: -12.753334045410156
    7. ' t' → logprob: -13.253334045410156
    8. '#' → logprob: -15.378334045410156
    9. '`t' → logprob: -15.503334045410156
    10. 'string' → logprob: -15.628334045410156

Token 496: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0014870046870782971
    2. 'for' → logprob: -6.876486778259277
    3. ' t' → logprob: -8.126486778259277
    4. ' for' → logprob: -8.751486778259277
    5. '`t' → logprob: -15.751486778259277
    6. '(t' → logprob: -16.376487731933594
    7. ',' → logprob: -16.876487731933594
    8. ' ' → logprob: -16.876487731933594
    9. '_t' → logprob: -17.001487731933594
    10. 's' → logprob: -17.251487731933594

Token 497: ' (' (ID: 350)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6796438694000244
    2. ':' → logprob: -0.8046438694000244
    3. ' for' → logprob: -3.1796438694000244
    4. ',' → logprob: -5.679643630981445
    5. ':
' → logprob: -7.054643630981445
    6. '.' → logprob: -10.804643630981445
    7. ' :' → logprob: -11.179643630981445
    8. 'in' → logprob: -11.179643630981445
    9. ')' → logprob: -12.679643630981445
    10. '):' → logprob: -12.804643630981445

Token 498: 'bou' (ID: 79064)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.43858209252357483
    2. 't' → logprob: -1.0635820627212524
    3. ' for' → logprob: -4.813581943511963
    4. ')' → logprob: -6.688581943511963
    5. 'range' → logprob: -9.063582420349121
    6. ' t' → logprob: -9.188582420349121
    7. '):' → logprob: -9.563582420349121
    8. '),' → logprob: -10.313582420349121
    9. 'enumer' → logprob: -10.688582420349121
    10. '):
' → logprob: -10.688582420349121

Token 499: 'cle' (ID: 3170)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5357037782669067
    2. ' for' → logprob: -0.9107037782669067
    3. ' in' → logprob: -5.035703659057617
    4. 'e' → logprob: -5.410703659057617
    5. 'r' → logprob: -7.160703659057617
    6. 'in' → logprob: -8.285703659057617
    7. 't' → logprob: -9.410703659057617
    8. 'a' → logprob: -9.535703659057617
    9. 'i' → logprob: -9.910703659057617
    10. ' ' → logprob: -10.035703659057617

Token 500: ' sur' (ID: 1512)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07014738023281097
    2. ' for' → logprob: -2.6951472759246826
    3. 'in' → logprob: -8.945147514343262
    4. ' in' → logprob: -10.695147514343262
    5. ':' → logprob: -10.945147514343262
    6. ')' → logprob: -10.945147514343262
    7. 't' → logprob: -11.570147514343262
    8. 'au' → logprob: -12.320147514343262
    9. 'pour' → logprob: -13.070147514343262
    10. ',' → logprob: -13.445147514343262

Token 501: ' l' (ID: 305)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0007343433680944145
    2. ' t' → logprob: -7.625734329223633
    3. 'range' → logprob: -8.375734329223633
    4. ' range' → logprob: -11.125734329223633
    5. ')' → logprob: -14.875734329223633
    6. 'enumer' → logprob: -15.625734329223633
    7. ' ' → logprob: -16.000734329223633
    8. '(t' → logprob: -16.625734329223633
    9. ' ' → logprob: -16.875734329223633
    10. '[t' → logprob: -16.875734329223633

Token 502: ''ad' (ID: 36162)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.11374685913324356
    2. ' range' → logprob: -2.7387468814849854
    3. ' t' → logprob: -3.3637468814849854
    4. 'range' → logprob: -5.113746643066406
    5. 'a' → logprob: -7.238746643066406
    6. 'ange' → logprob: -7.488746643066406
    7. ')' → logprob: -7.738746643066406
    8. ' for' → logprob: -9.238746643066406
    9. ' a' → logprob: -9.363746643066406
    10. 'enumer' → logprob: -9.363746643066406

Token 503: 'vers' (ID: 3674)
  Prédit: 'vers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vers' → logprob: -0.00036323294625617564
    2. 'v' → logprob: -9.25036334991455
    3. 'ver' → logprob: -9.25036334991455
    4. 'd' → logprob: -10.00036334991455
    5. 'verse' → logprob: -10.37536334991455
    6. 'ers' → logprob: -10.37536334991455
    7. 'vert' → logprob: -11.25036334991455
    8. 'a' → logprob: -11.50036334991455
    9. 'vec' → logprob: -12.25036334991455
    10. 'herent' → logprob: -13.00036334991455

Token 504: 'aire' (ID: 8189)
  Prédit: 'ête'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ête' → logprob: -0.5261760354042053
    2. 'ière' → logprob: -2.2761759757995605
    3. 'ate' → logprob: -2.6511759757995605
    4. 'at' → logprob: -3.2761759757995605
    5. 'aire' → logprob: -3.2761759757995605
    6. 'ère' → logprob: -3.4011759757995605
    7. 'oire' → logprob: -3.5261759757995605
    8. 'être' → logprob: -3.9011759757995605
    9. 're' → logprob: -4.2761759757995605
    10. 'atoire' → logprob: -5.2761759757995605

Token 505: ').
' (ID: 6294)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.12223274260759354
    2. ':' → logprob: -3.122232675552368
    3. 'for' → logprob: -3.122232675552368
    4. '):
' → logprob: -3.872232675552368
    5. ')' → logprob: -5.497232913970947
    6. ' for' → logprob: -6.622232913970947
    7. ':
' → logprob: -8.122232437133789
    8. 'a' → logprob: -8.997232437133789
    9. '),' → logprob: -9.747232437133789
    10. 't' → logprob: -10.122232437133789

Token 506: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0011084247380495071
    2. ' for' → logprob: -6.876108646392822
    3. 'i' → logprob: -9.751108169555664
    4. 'f' → logprob: -12.126108169555664
    5. '_' → logprob: -12.251108169555664
    6. 'n' → logprob: -12.626108169555664
    7. 'from' → logprob: -14.001108169555664
    8. 'a' → logprob: -14.001108169555664
    9. 'prev' → logprob: -14.876108169555664
    10. '#' → logprob: -15.126108169555664

Token 507: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.11644355952739716
    2. 'c' → logprob: -3.116443634033203
    3. ' i' → logprob: -3.241443634033203
    4. 'ch' → logprob: -4.241443634033203
    5. 'ti' → logprob: -4.991443634033203
    6. 'char' → logprob: -6.241443634033203
    7. ' c' → logprob: -6.366443634033203
    8. 'x' → logprob: -6.866443634033203
    9. ' ch' → logprob: -8.866443634033203
    10. ' char' → logprob: -9.241443634033203

Token 508: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.019398711621761322
    2. 'in' → logprob: -4.0193986892700195
    3. ',' → logprob: -6.8943986892700195
    4. ' ' → logprob: -8.39439868927002
    5. ' ,' → logprob: -12.51939868927002
    6. '	in' → logprob: -13.89439868927002
    7. 'n' → logprob: -14.01939868927002
    8. 's' → logprob: -14.64439868927002
    9. ' ' → logprob: -14.76939868927002
    10. ',in' → logprob: -15.01939868927002

Token 509: ' t' (ID: 260)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0011757015017792583
    2. ' range' → logprob: -6.751175880432129
    3. 't' → logprob: -12.876175880432129
    4. 'r' → logprob: -14.876175880432129
    5. '(range' → logprob: -14.876175880432129
    6. ' ' → logprob: -15.001175880432129
    7. 'in' → logprob: -15.126175880432129
    8. '	range' → logprob: -15.376175880432129
    9. 'a' → logprob: -15.626175880432129
    10. ')' → logprob: -15.751175880432129

Token 510: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0025915890000760555
    2. 'in' → logprob: -6.877591609954834
    3. ' in' → logprob: -6.877591609954834
    4. ' :' → logprob: -7.627591609954834
    5. ',' → logprob: -10.627591133117676
    6. '=' → logprob: -11.502591133117676
    7. ':=' → logprob: -14.127591133117676
    8. ':i' → logprob: -14.502591133117676
    9. ')' → logprob: -14.627591133117676
    10. '：' → logprob: -14.752591133117676

Token 511: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5982912182807922
    2. 'if' → logprob: -1.3482911586761475
    3. ' if' → logprob: -2.0982911586761475
    4. ':' → logprob: -2.9732911586761475
    5. 'a' → logprob: -4.223291397094727
    6. ' ' → logprob: -7.098291397094727
    7. '	if' → logprob: -8.098291397094727
    8. ',' → logprob: -8.473291397094727
    9. '.' → logprob: -8.723291397094727
    10. '):' → logprob: -8.848291397094727

Token 512: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.008050177246332169
    2. ' if' → logprob: -5.133049964904785
    3. '   ' → logprob: -6.758049964904785
    4. 'a' → logprob: -7.258049964904785
    5. ' ' → logprob: -9.133049964904785
    6. '	if' → logprob: -9.508049964904785
    7. '  ' → logprob: -9.633049964904785
    8. '    ' → logprob: -13.133049964904785
    9. 'i' → logprob: -13.883049964904785
    10. 'If' → logprob: -14.758049964904785

Token 513: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0015036711702123284
    2. ' i' → logprob: -6.5015034675598145
    3. '   ' → logprob: -14.501503944396973
    4. ' ' → logprob: -14.876503944396973
    5. '	i' → logprob: -15.376503944396973
    6. '  ' → logprob: -15.501503944396973
    7. ' ' → logprob: -17.751502990722656
    8. 'a' → logprob: -17.876502990722656
    9. '    ' → logprob: -18.001502990722656
    10. '     ' → logprob: -19.001502990722656

Token 514: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.11371473222970963
    2. ' ==' → logprob: -2.2387146949768066
    3. '=' → logprob: -7.238714694976807
    4. '=='' → logprob: -9.488715171813965
    5. '=="' → logprob: -9.613715171813965
    6. '==
' → logprob: -11.613715171813965
    7. ' =' → logprob: -12.113715171813965
    8. '===' → logprob: -12.988715171813965
    9. ' ' → logprob: -13.113715171813965
    10. ')==' → logprob: -13.363715171813965

Token 515: ' "' (ID: 392)
  Prédit: ''r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''r' → logprob: -0.0032629151828587055
    2. '"' → logprob: -6.003262996673584
    3. 'r' → logprob: -8.003262519836426
    4. ''p' → logprob: -8.503262519836426
    5. ''s' → logprob: -9.003262519836426
    6. ''' → logprob: -9.003262519836426
    7. '"s' → logprob: -14.378262519836426
    8. 's' → logprob: -14.628262519836426
    9. '`' → logprob: -14.628262519836426
    10. '	r' → logprob: -14.753262519836426

Token 516: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.05164122208952904
    2. 's' → logprob: -3.0516412258148193
    3. 'p' → logprob: -5.80164098739624
    4. '"' → logprob: -11.426641464233398
    5. ''' → logprob: -12.301641464233398
    6. '"s' → logprob: -12.676641464233398
    7. ''r' → logprob: -12.676641464233398
    8. ''p' → logprob: -13.301641464233398
    9. ' r' → logprob: -14.426641464233398
    10. '$r' → logprob: -14.551641464233398

Token 517: '":' (ID: 1243)
  Prédit: '":'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '":' → logprob: -0.11537514626979828
    2. '"' → logprob: -2.86537504196167
    3. '":
' → logprob: -3.11537504196167
    4. 'a' → logprob: -5.49037504196167
    5. '":
' → logprob: -5.99037504196167
    6. ':' → logprob: -7.11537504196167
    7. ' "' → logprob: -9.990375518798828
    8. 'e' → logprob: -10.115375518798828
    9. ':
' → logprob: -10.990375518798828
    10. 'p' → logprob: -11.240375518798828

Token 518: '       ' (ID: 309)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.006084510590881109
    2. 's' → logprob: -5.256084442138672
    3. ' p' → logprob: -7.756084442138672
    4. 'a' → logprob: -7.881084442138672
    5. '"' → logprob: -10.631084442138672
    6. '	p' → logprob: -12.131084442138672
    7. ''p' → logprob: -12.506084442138672
    8. ' s' → logprob: -13.006084442138672
    9. ')p' → logprob: -13.131084442138672
    10. '_p' → logprob: -13.631084442138672

Token 519: ' #' (ID: 1069)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00020783171930816025
    2. ' a' → logprob: -8.625207901000977
    3. 'p' → logprob: -11.125207901000977
    4. '   ' → logprob: -12.125207901000977
    5. 's' → logprob: -12.625207901000977
    6. '"' → logprob: -14.000207901000977
    7. ':' → logprob: -14.125207901000977
    8. ' ' → logprob: -14.125207901000977
    9. '	a' → logprob: -14.125207901000977
    10. '"a' → logprob: -15.375207901000977

Token 520: ' Si' (ID: 7832)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00016432604752480984
    2. 'p' → logprob: -8.875164031982422
    3. 's' → logprob: -11.250164031982422
    4. ' a' → logprob: -11.500164031982422
    5. '#a' → logprob: -15.125164031982422
    6. 'k' → logprob: -15.250164031982422
    7. '   ' → logprob: -15.750164031982422
    8. '#' → logprob: -16.000164031982422
    9. '"a' → logprob: -16.625164031982422
    10. '"' → logprob: -16.750164031982422

Token 521: ' l' (ID: 305)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.2262621521949768
    2. ' a' → logprob: -1.601262092590332
    3. '"' → logprob: -8.601262092590332
    4. 's' → logprob: -8.976262092590332
    5. ' ' → logprob: -8.976262092590332
    6. ' s' → logprob: -9.226262092590332
    7. ''a' → logprob: -9.726262092590332
    8. '"a' → logprob: -9.726262092590332
    9. ' p' → logprob: -9.976262092590332
    10. ' "' → logprob: -10.351262092590332

Token 522: ''ad' (ID: 36162)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.07988442480564117
    2. ' a' → logprob: -3.4548845291137695
    3. '"' → logprob: -4.2048845291137695
    4. ' ==' → logprob: -4.8298845291137695
    5. ' ' → logprob: -5.2048845291137695
    6. 'i' → logprob: -5.4548845291137695
    7. 'r' → logprob: -5.9548845291137695
    8. 'e' → logprob: -6.2048845291137695
    9. ' i' → logprob: -6.2048845291137695
    10. ''a' → logprob: -6.5798845291137695

Token 523: 'vers' (ID: 3674)
  Prédit: 'vers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vers' → logprob: -0.038233235478401184
    2. 'ers' → logprob: -3.6632332801818848
    3. 'a' → logprob: -5.038233280181885
    4. 'v' → logprob: -6.038233280181885
    5. 'verse' → logprob: -6.413233280181885
    6. '   ' → logprob: -7.913233280181885
    7. 'ver' → logprob: -9.038232803344727
    8. 'r' → logprob: -9.163232803344727
    9. 'erse' → logprob: -9.288232803344727
    10. ' vers' → logprob: -9.538232803344727

Token 524: 'aire' (ID: 8189)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.17537108063697815
    2. 'a' → logprob: -2.6753711700439453
    3. 'e' → logprob: -3.5503711700439453
    4. 'es' → logprob: -4.675371170043945
    5. '#' → logprob: -5.175371170043945
    6. 'aise' → logprob: -5.550371170043945
    7. 'if' → logprob: -5.925371170043945
    8. '=' → logprob: -5.925371170043945
    9. 'elif' → logprob: -6.050371170043945
    10. 're' → logprob: -6.050371170043945

Token 525: ' a' (ID: 261)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.18347670137882233
    2. ' ==' → logprob: -1.8084766864776611
    3. '=="' → logprob: -5.68347692489624
    4. 'a' → logprob: -9.183476448059082
    5. '=='' → logprob: -9.683476448059082
    6. 's' → logprob: -9.808476448059082
    7. '=' → logprob: -10.183476448059082
    8. '==
' → logprob: -10.558476448059082
    9. 'p' → logprob: -10.933476448059082
    10. ' =="' → logprob: -12.058476448059082

Token 526: ' joué' (ID: 117143)
  Prédit: 'jou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jou' → logprob: -0.03260628506541252
    2. ' joué' → logprob: -3.532606363296509
    3. 'cho' → logprob: -6.90760612487793
    4. ' played' → logprob: -8.28260612487793
    5. '"' → logprob: -8.40760612487793
    6. 'f' → logprob: -8.53260612487793
    7. 'fait' → logprob: -8.65760612487793
    8. 'played' → logprob: -8.78260612487793
    9. ' choisi' → logprob: -9.03260612487793
    10. ' joue' → logprob: -9.15760612487793

Token 527: ' '' (ID: 461)
  Prédit: '"s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"s' → logprob: -0.3985065221786499
    2. '"' → logprob: -1.27350652217865
    3. ''s' → logprob: -4.0235066413879395
    4. ' "' → logprob: -4.3985066413879395
    5. 'p' → logprob: -4.6485066413879395
    6. 's' → logprob: -5.0235066413879395
    7. '   ' → logprob: -6.7735066413879395
    8. ''p' → logprob: -7.8985066413879395
    9. '"S' → logprob: -8.273506164550781
    10. ' ' → logprob: -8.898506164550781

Token 528: 'rock' (ID: 21032)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8244776725769043
    2. '"s' → logprob: -0.8244776725769043
    3. 'p' → logprob: -2.8244776725769043
    4. '"' → logprob: -3.0744776725769043
    5. ''s' → logprob: -4.199477672576904
    6. ''p' → logprob: -6.074477672576904
    7. ''' → logprob: -8.824478149414062
    8. '`s' → logprob: -10.449478149414062
    9. 'r' → logprob: -11.574478149414062
    10. '"S' → logprob: -11.699478149414062

Token 529: ''' (ID: 6)
  Prédit: '":'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '":' → logprob: -0.6028945446014404
    2. ',' → logprob: -1.7278945446014404
    3. 'a' → logprob: -1.9778945446014404
    4. ':' → logprob: -2.7278945446014404
    5. '"' → logprob: -3.4778945446014404
    6. '":
' → logprob: -4.2278947830200195
    7. '   ' → logprob: -5.3528947830200195
    8. '",' → logprob: -5.4778947830200195
    9. '':' → logprob: -5.8528947830200195
    10. ':
' → logprob: -6.1028947830200195

Token 530: ' ("' (ID: 7109)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1727290004491806
    2. ',' → logprob: -2.547729015350342
    3. 'a' → logprob: -2.672729015350342
    4. ':
' → logprob: -4.922729015350342
    5. '   ' → logprob: -6.422729015350342
    6. '       ' → logprob: -7.297729015350342
    7. ' :' → logprob: -7.797729015350342
    8. ' a' → logprob: -7.797729015350342
    9. ',a' → logprob: -8.047728538513184
    10. '):' → logprob: -9.172728538513184

Token 531: 'r' (ID: 81)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.6669520735740662
    2. 'a' → logprob: -1.041952133178711
    3. 's' → logprob: -2.166952133178711
    4. '"' → logprob: -4.666952133178711
    5. '")' → logprob: -5.041952133178711
    6. ')' → logprob: -6.291952133178711
    7. '"):
' → logprob: -7.666952133178711
    8. '"):' → logprob: -8.166952133178711
    9. '"s' → logprob: -8.541952133178711
    10. '"),' → logprob: -9.041952133178711

Token 532: '"),
' (ID: 8132)
  Prédit: '"):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"):' → logprob: -0.6420118808746338
    2. '"):
' → logprob: -0.8920118808746338
    3. ')' → logprob: -3.892011880874634
    4. 'a' → logprob: -4.267011642456055
    5. '")' → logprob: -4.517011642456055
    6. '):' → logprob: -5.267011642456055
    7. '):
' → logprob: -5.517011642456055
    8. '"),' → logprob: -5.517011642456055
    9. '"' → logprob: -6.267011642456055
    10. '"):
' → logprob: -6.267011642456055

Token 533: '       ' (ID: 309)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0008477445808239281
    2. '   ' → logprob: -7.500847816467285
    3. ' a' → logprob: -8.500847816467285
    4. '       ' → logprob: -9.625847816467285
    5. '	a' → logprob: -10.875847816467285
    6. '    ' → logprob: -13.625847816467285
    7. 's' → logprob: -14.000847816467285
    8. ' ' → logprob: -14.375847816467285
    9. '  ' → logprob: -14.625847816467285
    10. '           ' → logprob: -14.625847816467285

Token 534: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -5.796184723294573e-06
    2. ' a' → logprob: -12.125005722045898
    3. '   ' → logprob: -15.250005722045898
    4. '	a' → logprob: -17.0000057220459
    5. '#a' → logprob: -17.8750057220459
    6. '       ' → logprob: -18.0000057220459
    7. 's' → logprob: -18.3750057220459
    8. '#' → logprob: -19.0000057220459
    9. '           ' → logprob: -19.3750057220459
    10. 'p' → logprob: -19.6250057220459

Token 535: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0037436678539961576
    2. ' +=' → logprob: -5.628743648529053
    3. '+="' → logprob: -8.878744125366211
    4. '+='' → logprob: -12.878744125366211
    5. '=' → logprob: -14.378744125366211
    6. ']+=' → logprob: -14.503744125366211
    7. '+' → logprob: -15.003744125366211
    8. '+=(' → logprob: -15.253744125366211
    9. ' +' → logprob: -17.12874412536621
    10. 'a' → logprob: -18.62874412536621

Token 536: ' "' (ID: 392)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.004262296482920647
    2. '"' → logprob: -5.504262447357178
    3. ''p' → logprob: -9.00426197052002
    4. ' p' → logprob: -9.87926197052002
    5. 's' → logprob: -12.25426197052002
    6. '"s' → logprob: -12.87926197052002
    7. ''' → logprob: -13.87926197052002
    8. '	p' → logprob: -14.25426197052002
    9. ''s' → logprob: -15.37926197052002
    10. '"P' → logprob: -15.75426197052002

Token 537: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -5.512236498361744e-07
    2. 's' → logprob: -15.750000953674316
    3. ''p' → logprob: -15.750000953674316
    4. '"' → logprob: -16.625
    5. ' p' → logprob: -16.875
    6. '	p' → logprob: -19.125
    7. ''' → logprob: -19.75
    8. '_p' → logprob: -20.0
    9. '

' → logprob: -21.125
    10. ')p' → logprob: -21.625

Token 538: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.01262830849736929
    2. '"
' → logprob: -4.387628078460693
    3. ' "' → logprob: -9.762628555297852
    4. '"
' → logprob: -9.762628555297852
    5. '"

' → logprob: -13.762628555297852
    6. ' "
' → logprob: -14.012628555297852
    7. 's' → logprob: -15.262628555297852
    8. ''' → logprob: -15.262628555297852
    9. ')' → logprob: -15.762628555297852
    10. '"#' → logprob: -15.762628555297852

Token 539: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011083542369306087
    2. '
' → logprob: -5.761083602905273
    3. 'elif' → logprob: -6.261083602905273
    4. ' elif' → logprob: -6.886083602905273
    5. '  ' → logprob: -7.011083602905273
    6. '    
' → logprob: -7.011083602905273
    7. '  
' → logprob: -7.136083602905273
    8. ' ' → logprob: -7.386083602905273
    9. '	elif' → logprob: -7.386083602905273
    10. ' 
' → logprob: -8.136083602905273

Token 540: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08007767796516418
    2. '
' → logprob: -2.705077648162842
    3. 'elif' → logprob: -5.080077648162842
    4. '  ' → logprob: -7.205077648162842
    5. ' elif' → logprob: -7.205077648162842
    6. ' ' → logprob: -7.580077648162842
    7. '    
' → logprob: -7.830077648162842
    8. '  
' → logprob: -7.830077648162842
    9. '   
' → logprob: -8.205078125
    10. '\n' → logprob: -8.455078125

Token 541: ' alors' (ID: 17971)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3727783262729645
    2. '<|end|>' → logprob: -1.497778296470642
    3. '  ' → logprob: -3.7477784156799316
    4. '
' → logprob: -3.8727784156799316
    5. ' 
' → logprob: -4.372778415679932
    6. '#' → logprob: -4.372778415679932
    7. '  
' → logprob: -5.497778415679932
    8. '"' → logprob: -5.872778415679932
    9. ' #' → logprob: -5.872778415679932
    10. '<|end|>' → logprob: -6.622778415679932

Token 542: ' on' (ID: 402)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.07949277013540268
    2. ' "' → logprob: -3.9544928073883057
    3. '#' → logprob: -4.329492568969727
    4. '<|end|>' → logprob: -4.454492568969727
    5. ' #' → logprob: -4.579492568969727
    6. '  ' → logprob: -5.204492568969727
    7. ' pour' → logprob: -5.329492568969727
    8. '"' → logprob: -6.204492568969727
    9. '.' → logprob: -6.829492568969727
    10. ' a' → logprob: -7.204492568969727

Token 543: ' joue' (ID: 74342)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -1.842729926109314
    2. ' gagne' → logprob: -1.842729926109314
    3. ' chooses' → logprob: -1.967729926109314
    4. ' chois' → logprob: -2.5927300453186035
    5. ' +=' → logprob: -2.7177300453186035
    6. ' joue' → logprob: -3.2177300453186035
    7. ' choose' → logprob: -3.4677300453186035
    8. '+' → logprob: -3.4677300453186035
    9. 'a' → logprob: -3.5927300453186035
    10. ' ' → logprob: -3.5927300453186035

Token 544: ' '' (ID: 461)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.19528308510780334
    2. ' "' → logprob: -1.945283055305481
    3. ' ' → logprob: -4.070282936096191
    4. 'p' → logprob: -5.070282936096191
    5. ' paper' → logprob: -5.695282936096191
    6. 'paper' → logprob: -5.820282936096191
    7. ' p' → logprob: -7.320282936096191
    8. 'papier' → logprob: -7.320282936096191
    9. '")' → logprob: -7.570282936096191
    10. 'pap' → logprob: -7.820282936096191

Token 545: 'paper' (ID: 23112)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.10337761044502258
    2. '"' → logprob: -2.6033775806427
    3. ''p' → logprob: -3.8533775806427
    4. ''' → logprob: -5.978377819061279
    5. 'paper' → logprob: -8.478377342224121
    6. ''s' → logprob: -9.853377342224121
    7. ' p' → logprob: -10.103377342224121
    8. ' "' → logprob: -10.228377342224121
    9. 'papier' → logprob: -10.478377342224121
    10. 'pap' → logprob: -11.103377342224121

Token 546: ''' (ID: 6)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.002216988243162632
    2. ' "' → logprob: -6.127216815948486
    3. ''' → logprob: -10.877217292785645
    4. '"
' → logprob: -11.377217292785645
    5. '".' → logprob: -14.752217292785645
    6. '"
' → logprob: -15.502217292785645
    7. '")' → logprob: -16.127216339111328
    8. '"#' → logprob: -16.377216339111328
    9. ')' → logprob: -16.502216339111328
    10. '",' → logprob: -16.502216339111328

Token 547: ' ("' (ID: 7109)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 548: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0008422649116255343
    2. '")' → logprob: -7.125842094421387
    3. '"' → logprob: -10.250842094421387
    4. ' p' → logprob: -14.250842094421387
    5. 'r' → logprob: -14.500842094421387
    6. '_p' → logprob: -14.625842094421387
    7. 's' → logprob: -15.250842094421387
    8. ')' → logprob: -16.000843048095703
    9. ' ")' → logprob: -16.000843048095703
    10. '(p' → logprob: -16.375843048095703

Token 549: '"),' (ID: 7645)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.005991012789309025
    2. '").' → logprob: -5.755990982055664
    3. '"),' → logprob: -6.255990982055664
    4. '")
' → logprob: -7.130990982055664
    5. '"' → logprob: -10.755990982055664
    6. '")
' → logprob: -11.130990982055664
    7. '");' → logprob: -11.130990982055664
    8. ' ")' → logprob: -11.255990982055664
    9. ')' → logprob: -11.505990982055664
    10. '").
' → logprob: -12.505990982055664

Token 550: ' car' (ID: 1669)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0021758354268968105
    2. '<|end|>' → logprob: -6.877175807952881
    3. ' elif' → logprob: -8.752176284790039
    4. '
' → logprob: -8.752176284790039
    5. '    
' → logprob: -8.752176284790039
    6. '  
' → logprob: -8.752176284790039
    7. 'elif' → logprob: -8.752176284790039
    8. '")' → logprob: -10.002176284790039
    9. '       ' → logprob: -10.252176284790039
    10. '  ' → logprob: -10.252176284790039

Token 551: ' paper' (ID: 6651)
  Prédit: ' paper'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' paper' → logprob: -0.4188371002674103
    2. 'paper' → logprob: -2.418837070465088
    3. ' c' → logprob: -2.793837070465088
    4. 'papier' → logprob: -3.043837070465088
    5. 'c' → logprob: -3.668837070465088
    6. ' p' → logprob: -4.168837070465088
    7. ' le' → logprob: -4.168837070465088
    8. ' papier' → logprob: -4.168837070465088
    9. ' il' → logprob: -4.418837070465088
    10. ' cela' → logprob: -4.418837070465088

Token 552: ' bat' (ID: 10639)
  Prédit: ' beats'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' beats' → logprob: -1.4614324569702148
    2. ' bat' → logprob: -1.7114324569702148
    3. 'bat' → logprob: -1.9614324569702148
    4. 'b' → logprob: -2.336432456970215
    5. '
' → logprob: -2.461432456970215
    6. ' gagne' → logprob: -2.461432456970215
    7. 'beats' → logprob: -2.711432456970215
    8. 'beat' → logprob: -3.836432456970215
    9. ' ' → logprob: -4.336432456970215
    10. ' beat' → logprob: -4.461432456970215

Token 553: ' rock' (ID: 8707)
  Prédit: 'rock'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rock' → logprob: -0.16038091480731964
    2. ' rock' → logprob: -1.9103809595108032
    3. 'r' → logprob: -9.160381317138672
    4. ' roca' → logprob: -10.910381317138672
    5. 'roc' → logprob: -11.035381317138672
    6. 'ro' → logprob: -12.160381317138672
    7. ' r' → logprob: -12.785381317138672
    8. ' ' → logprob: -13.160381317138672
    9. 'rocks' → logprob: -13.535381317138672
    10. 'Rock' → logprob: -13.660381317138672

Token 554: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4050757586956024
    2. '.' → logprob: -1.1550757884979248
    3. '.
' → logprob: -4.780075550079346
    4. '
' → logprob: -5.155075550079346
    5. '<|end|>' → logprob: -5.905075550079346
    6. '\n' → logprob: -8.780076026916504
    7. '<|end|>' → logprob: -8.905076026916504
    8. '    
' → logprob: -9.155076026916504
    9. ',' → logprob: -9.155076026916504
    10. '  
' → logprob: -9.280076026916504

Token 555: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01108484622091055
    2. 'elif' → logprob: -4.511085033416748
    3. ' elif' → logprob: -10.51108455657959
    4. '	elif' → logprob: -11.63608455657959
    5. '   ' → logprob: -15.26108455657959
    6. '    
' → logprob: -15.51108455657959
    7. 'else' → logprob: -16.261085510253906
    8. '  ' → logprob: -16.386085510253906
    9. '<|end|>' → logprob: -16.511085510253906
    10. '\n' → logprob: -16.636085510253906

Token 556: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.01199164055287838
    2. '   ' → logprob: -4.511991500854492
    3. ' elif' → logprob: -7.011991500854492
    4. '	elif' → logprob: -10.261991500854492
    5. 'el' → logprob: -11.886991500854492
    6. ' ' → logprob: -16.011991500854492
    7. '  ' → logprob: -16.511991500854492
    8. '    
' → logprob: -16.511991500854492
    9. 'else' → logprob: -16.511991500854492
    10. '.' → logprob: -16.636991500854492

Token 557: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.009764472022652626
    2. 'i' → logprob: -4.634764671325684
    3. ' ' → logprob: -12.009764671325684
    4. ' ' → logprob: -13.884764671325684
    5. '	i' → logprob: -14.259764671325684
    6. '   ' → logprob: -14.759764671325684
    7. '  ' → logprob: -16.009763717651367
    8. '    ' → logprob: -16.759763717651367
    9. '(i' → logprob: -16.884763717651367
    10. ' a' → logprob: -17.009763717651367

Token 558: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.020602382719516754
    2. '==' → logprob: -3.8956024646759033
    3. ' =="' → logprob: -10.895602226257324
    4. ' =' → logprob: -11.020602226257324
    5. '=' → logprob: -11.770602226257324
    6. ' ' → logprob: -11.895602226257324
    7. ' ' → logprob: -12.270602226257324
    8. '=="' → logprob: -12.395602226257324
    9. '[' → logprob: -14.645602226257324
    10. '	' → logprob: -14.770602226257324

Token 559: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.11549845337867737
    2. '"s' → logprob: -2.7404985427856445
    3. ' "' → logprob: -3.1154985427856445
    4. ''s' → logprob: -9.115498542785645
    5. ''' → logprob: -10.740498542785645
    6. ' ' → logprob: -10.740498542785645
    7. ' s' → logprob: -11.240498542785645
    8. 's' → logprob: -11.365498542785645
    9. ' '' → logprob: -13.240498542785645
    10. ' ' → logprob: -13.615498542785645

Token 560: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0013005920918658376
    2. '"s' → logprob: -6.751300811767578
    3. '"' → logprob: -9.376300811767578
    4. 'r' → logprob: -10.751300811767578
    5. ''s' → logprob: -10.751300811767578
    6. '`s' → logprob: -13.501300811767578
    7. 'p' → logprob: -14.251300811767578
    8. ' s' → logprob: -14.626300811767578
    9. ''' → logprob: -15.876300811767578
    10. '"S' → logprob: -16.126300811767578

Token 561: '":' (ID: 1243)
  Prédit: '":'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '":' → logprob: -0.008848914876580238
    2. ':' → logprob: -4.758849143981934
    3. '":
' → logprob: -8.758849143981934
    4. '"' → logprob: -10.133849143981934
    5. ' ":' → logprob: -10.633849143981934
    6. '":
' → logprob: -12.133849143981934
    7. ' :' → logprob: -13.133849143981934
    8. '):' → logprob: -13.633849143981934
    9. '+":' → logprob: -13.633849143981934
    10. '(":' → logprob: -14.008849143981934

Token 562: '     ' (ID: 530)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8423457145690918
    2. ' a' → logprob: -1.5923457145690918
    3. '   ' → logprob: -1.5923457145690918
    4. 'a' → logprob: -1.8423457145690918
    5. '	a' → logprob: -6.092345714569092
    6. ' ' → logprob: -7.467345714569092
    7. '    ' → logprob: -8.34234619140625
    8. '  ' → logprob: -8.84234619140625
    9. '	   ' → logprob: -8.96734619140625
    10. '      ' → logprob: -8.96734619140625

Token 563: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9995364546775818
    2. '   ' → logprob: -1.2495365142822266
    3. ' a' → logprob: -1.8745365142822266
    4. ':' → logprob: -2.2495365142822266
    5. 'a' → logprob: -2.4995365142822266
    6. '	a' → logprob: -6.499536514282227
    7. ' ' → logprob: -7.249536514282227
    8. '  ' → logprob: -7.874536514282227
    9. '    ' → logprob: -7.874536514282227
    10. ' :' → logprob: -7.999536514282227

Token 564: ' Sinon' (ID: 154924)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.14701418578624725
    2. '   ' → logprob: -2.3970141410827637
    3. '       ' → logprob: -3.5220141410827637
    4. ' a' → logprob: -4.147014141082764
    5. '	a' → logprob: -9.397014617919922
    6. '    ' → logprob: -9.522014617919922
    7. ' ' → logprob: -9.897014617919922
    8. '  ' → logprob: -10.272014617919922
    9. '     ' → logprob: -10.772014617919922
    10. 'elif' → logprob: -11.147014617919922

Token 565: ' si' (ID: 1784)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.37256231904029846
    2. '       ' → logprob: -1.497562289237976
    3. ' a' → logprob: -2.9975624084472656
    4. ':' → logprob: -3.7475624084472656
    5. ' if' → logprob: -4.997562408447266
    6. 'a' → logprob: -5.622562408447266
    7. 'if' → logprob: -6.872562408447266
    8. '    ' → logprob: -6.997562408447266
    9. '  ' → logprob: -7.622562408447266
    10. ',' → logprob: -8.497562408447266

Token 566: ' l' (ID: 305)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.02975928969681263
    2. 'i' → logprob: -3.529759407043457
    3. ' ' → logprob: -11.904759407043457
    4. '	i' → logprob: -13.654759407043457
    5. ' ' → logprob: -14.404759407043457
    6. '  ' → logprob: -15.529759407043457
    7. '   ' → logprob: -16.40475845336914
    8. '(i' → logprob: -17.27975845336914
    9. '[i' → logprob: -18.15475845336914
    10. '    ' → logprob: -18.27975845336914

Token 567: ''ad' (ID: 36162)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.12708915770053864
    2. ' i' → logprob: -2.127089262008667
    3. 'elif' → logprob: -9.502089500427246
    4. 'a' → logprob: -10.502089500427246
    5. ' advers' → logprob: -10.752089500427246
    6. ' ' → logprob: -11.127089500427246
    7. ' ==' → logprob: -12.377089500427246
    8. ' elif' → logprob: -12.377089500427246
    9. ' a' → logprob: -12.502089500427246
    10. '  ' → logprob: -13.502089500427246

Token 568: 'vers' (ID: 3674)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.04205645993351936
    2. ' elif' → logprob: -4.292056560516357
    3. '==' → logprob: -4.792056560516357
    4. '   ' → logprob: -5.667056560516357
    5. '  ' → logprob: -5.917056560516357
    6. ' ==' → logprob: -6.042056560516357
    7. '"' → logprob: -6.542056560516357
    8. 'f' → logprob: -6.542056560516357
    9. 'i' → logprob: -6.917056560516357
    10. '+=' → logprob: -6.917056560516357

Token 569: 'aire' (ID: 8189)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.10861822962760925
    2. 'if' → logprob: -3.1086182594299316
    3. 'and' → logprob: -4.483618259429932
    4. 'i' → logprob: -4.483618259429932
    5. '   ' → logprob: -4.983618259429932
    6. '"' → logprob: -5.233618259429932
    7. 'ors' → logprob: -5.358618259429932
    8. 'oire' → logprob: -6.233618259429932
    9. 'or' → logprob: -6.608618259429932
    10. 'ort' → logprob: -6.608618259429932

Token 570: ' a' (ID: 261)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.062058210372924805
    2. '==' → logprob: -2.812058210372925
    3. '=="' → logprob: -9.437058448791504
    4. ' =="' → logprob: -12.312058448791504
    5. ' a' → logprob: -12.687058448791504
    6. 'a' → logprob: -13.312058448791504
    7. '=' → logprob: -14.437058448791504
    8. ' ' → logprob: -14.812058448791504
    9. '=='' → logprob: -15.812058448791504
    10. ' =' → logprob: -15.812058448791504

Token 571: ' joué' (ID: 117143)
  Prédit: ' joué'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' joué' → logprob: -0.3457012474536896
    2. 'jou' → logprob: -1.3457012176513672
    3. '"' → logprob: -4.095701217651367
    4. ' played' → logprob: -5.345701217651367
    5. 'played' → logprob: -5.595701217651367
    6. ' joue' → logprob: -5.845701217651367
    7. '==' → logprob: -6.345701217651367
    8. '=="' → logprob: -7.470701217651367
    9. 'play' → logprob: -7.595701217651367
    10. ' ==' → logprob: -7.720701217651367

Token 572: ' '' (ID: 461)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.2265302985906601
    2. ' "' → logprob: -1.6015303134918213
    3. ''r' → logprob: -7.101530075073242
    4. ' '' → logprob: -9.101530075073242
    5. 'r' → logprob: -9.476530075073242
    6. ''' → logprob: -9.601530075073242
    7. ' ' → logprob: -12.101530075073242
    8. ''p' → logprob: -12.226530075073242
    9. ' ' → logprob: -12.351530075073242
    10. '   ' → logprob: -12.476530075073242

Token 573: 'sc' (ID: 2786)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.00018887832993641496
    2. 'p' → logprob: -9.000188827514648
    3. 'r' → logprob: -9.750188827514648
    4. ''r' → logprob: -12.125188827514648
    5. ''p' → logprob: -13.500188827514648
    6. '   ' → logprob: -16.00018882751465
    7. ''' → logprob: -16.50018882751465
    8. ' ' → logprob: -17.00018882751465
    9. '```' → logprob: -17.50018882751465
    10. '`' → logprob: -17.87518882751465

Token 574: 'issors' (ID: 69357)
  Prédit: 'issors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'issors' → logprob: -0.3879033923149109
    2. 'i' → logprob: -1.8879034519195557
    3. '"' → logprob: -2.3879034519195557
    4. 'p' → logprob: -3.1379034519195557
    5. 'o' → logprob: -4.137903213500977
    6. 'issor' → logprob: -5.012903213500977
    7. 'is' → logprob: -5.762903213500977
    8. 's' → logprob: -6.262903213500977
    9. '```' → logprob: -6.762903213500977
    10. '">' → logprob: -6.887903213500977

Token 575: ''' (ID: 6)
  Prédit: '":'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '":' → logprob: -0.009938235394656658
    2. '"' → logprob: -6.0099382400512695
    3. ' ("' → logprob: -6.0099382400512695
    4. ':' → logprob: -6.1349382400512695
    5. '("' → logprob: -6.8849382400512695
    6. '":
' → logprob: -7.3849382400512695
    7. '(":' → logprob: -7.7599382400512695
    8. '(p' → logprob: -8.88493824005127
    9. '':' → logprob: -9.13493824005127
    10. ' "' → logprob: -9.38493824005127

Token 576: ' ("' (ID: 7109)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.22471606731414795
    2. ' ("' → logprob: -1.974716067314148
    3. '":' → logprob: -3.4747161865234375
    4. '("' → logprob: -3.9747161865234375
    5. '(":' → logprob: -5.8497161865234375
    6. '"' → logprob: -6.0997161865234375
    7. ' (' → logprob: -6.0997161865234375
    8. ',' → logprob: -6.7247161865234375
    9. '   ' → logprob: -6.9747161865234375
    10. '(' → logprob: -7.0997161865234375

Token 577: 's' (ID: 82)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.7019780278205872
    2. 's' → logprob: -1.2019779682159424
    3. 'r' → logprob: -1.9519779682159424
    4. '"' → logprob: -2.8269779682159424
    5. '")' → logprob: -6.3269782066345215
    6. '"s' → logprob: -7.7019782066345215
    7. '"),' → logprob: -9.826977729797363
    8. 'c' → logprob: -9.951977729797363
    9. '"):
' → logprob: -10.326977729797363
    10. ' p' → logprob: -10.326977729797363

Token 578: '"),
' (ID: 8132)
  Prédit: '"):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"):' → logprob: -0.030419308692216873
    2. '):' → logprob: -4.28041934967041
    3. '"):
' → logprob: -4.28041934967041
    4. ':' → logprob: -6.53041934967041
    5. '":' → logprob: -8.53041934967041
    6. '")' → logprob: -8.90541934967041
    7. '"' → logprob: -9.03041934967041
    8. '):
' → logprob: -9.40541934967041
    9. '"),' → logprob: -9.53041934967041
    10. '   ' → logprob: -9.78041934967041

Token 579: '       ' (ID: 309)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.21818356215953827
    2. '   ' → logprob: -1.7181835174560547
    3. 'p' → logprob: -4.468183517456055
    4. '       ' → logprob: -5.343183517456055
    5. ' a' → logprob: -8.718183517456055
    6. '    ' → logprob: -9.843183517456055
    7. '	a' → logprob: -10.093183517456055
    8. '  ' → logprob: -10.218183517456055
    9. ' ' → logprob: -10.843183517456055
    10. '	' → logprob: -11.343183517456055

Token 580: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.008396013639867306
    2. ' a' → logprob: -4.883396148681641
    3. '   ' → logprob: -7.258396148681641
    4. '       ' → logprob: -9.63339614868164
    5. '	a' → logprob: -11.88339614868164
    6. 'p' → logprob: -12.00839614868164
    7. '  ' → logprob: -13.00839614868164
    8. '    ' → logprob: -13.50839614868164
    9. ' ' → logprob: -13.75839614868164
    10. 't' → logprob: -15.00839614868164

Token 581: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.12697282433509827
    2. '+=' → logprob: -2.1269729137420654
    3. ' +' → logprob: -10.251973152160645
    4. '+="' → logprob: -12.501973152160645
    5. '+' → logprob: -12.876973152160645
    6. '+='' → logprob: -13.751973152160645
    7. '=' → logprob: -14.126973152160645
    8. ' =' → logprob: -14.251973152160645
    9. ']+=' → logprob: -14.501973152160645
    10. ' ' → logprob: -16.626972198486328

Token 582: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.03817736357450485
    2. 'r' → logprob: -3.288177251815796
    3. ''r' → logprob: -9.163177490234375
    4. ''' → logprob: -12.038177490234375
    5. ' "' → logprob: -12.038177490234375
    6. '   ' → logprob: -12.163177490234375
    7. '	r' → logprob: -12.413177490234375
    8. '	' → logprob: -12.663177490234375
    9. ' ' → logprob: -13.288177490234375
    10. '`' → logprob: -13.663177490234375

Token 583: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -2.935296834039036e-06
    2. '"' → logprob: -12.87500286102295
    3. ''r' → logprob: -15.25000286102295
    4. '	r' → logprob: -16.125003814697266
    5. ' r' → logprob: -16.500003814697266
    6. 'rock' → logprob: -16.750003814697266
    7. '_r' → logprob: -19.125003814697266
    8. '-r' → logprob: -19.875003814697266
    9. ''' → logprob: -20.250003814697266
    10. '`' → logprob: -21.000003814697266

Token 584: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -5.085517113911919e-05
    2. '")' → logprob: -10.12505054473877
    3. ' "' → logprob: -11.62505054473877
    4. ''' → logprob: -14.25005054473877
    5. '"
' → logprob: -14.75005054473877
    6. ')' → logprob: -15.00005054473877
    7. '<|end|>' → logprob: -15.75005054473877
    8. '```' → logprob: -16.250051498413086
    9. '">' → logprob: -17.125051498413086
    10. ')"' → logprob: -17.375051498413086

Token 585: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 586: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26078376173973083
    2. '<|end|>' → logprob: -1.5107837915420532
    3. '<|end|>' → logprob: -5.385783672332764
    4. '#' (adapté à ' #') → logprob: -6.385783672332764
    5. ' ' → logprob: -6.760783672332764
    6. '  ' → logprob: -7.385783672332764
    7. 'elif' → logprob: -7.885783672332764
    8. ' elif' → logprob: -9.010784149169922
    9. '	elif' → logprob: -9.510784149169922
    10. ' #' → logprob: -10.260784149169922

Token 587: ' alors' (ID: 17971)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 588: ' on' (ID: 402)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.18890605866909027
    2. ' "' → logprob: -1.9389060735702515
    3. '")' → logprob: -5.188906192779541
    4. 'r' → logprob: -5.188906192779541
    5. '#' → logprob: -5.563906192779541
    6. ' on' → logprob: -5.563906192779541
    7. ' ' → logprob: -6.063906192779541
    8. 'on' → logprob: -6.813906192779541
    9. '<|end|>' → logprob: -6.813906192779541
    10. ' #' → logprob: -7.563906192779541

Token 589: ' joue' (ID: 74342)
  Prédit: ' joue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' joue' → logprob: -0.27651137113571167
    2. 'jou' → logprob: -2.0265114307403564
    3. 'plays' → logprob: -3.1515114307403564
    4. 'play' → logprob: -3.5265114307403564
    5. '<|end|>' → logprob: -4.401511192321777
    6. ' plays' → logprob: -4.651511192321777
    7. ' jou' → logprob: -4.776511192321777
    8. ' play' → logprob: -5.526511192321777
    9. ' jouer' → logprob: -6.151511192321777
    10. ' jouent' → logprob: -8.151511192321777

Token 590: ' '' (ID: 461)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.19673587381839752
    2. ''' → logprob: -1.8217358589172363
    3. ' "' → logprob: -4.821735858917236
    4. ' '' → logprob: -4.821735858917236
    5. ''r' → logprob: -8.321736335754395
    6. ''p' → logprob: -8.946736335754395
    7. '`' → logprob: -9.071736335754395
    8. ''s' → logprob: -9.071736335754395
    9. '<|end|>' → logprob: -10.446736335754395
    10. ' ' → logprob: -11.196736335754395

Token 591: 'rock' (ID: 21032)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.5871946811676025
    2. 's' → logprob: -0.8371946811676025
    3. ''s' → logprob: -5.337194442749023
    4. '"s' → logprob: -5.712194442749023
    5. '"' → logprob: -6.337194442749023
    6. ''p' → logprob: -6.712194442749023
    7. ''' → logprob: -9.587194442749023
    8. '`s' → logprob: -10.962194442749023
    9. 'rock' → logprob: -13.212194442749023
    10. '_p' → logprob: -13.837194442749023

Token 592: ''' (ID: 6)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.01295950636267662
    2. '")' → logprob: -4.3879594802856445
    3. '<|end|>' → logprob: -8.887959480285645
    4. '("' → logprob: -9.512959480285645
    5. ''' → logprob: -9.637959480285645
    6. ' ("' → logprob: -9.762959480285645
    7. ' "' → logprob: -10.137959480285645
    8. ')' → logprob: -10.262959480285645
    9. '```' → logprob: -12.262959480285645
    10. '(' → logprob: -12.387959480285645

Token 593: ' ("' (ID: 7109)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 594: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.31890344619750977
    2. '")' → logprob: -1.3189034461975098
    3. '"' → logprob: -5.19390344619751
    4. 's' → logprob: -10.568902969360352
    5. ')' → logprob: -10.818902969360352
    6. '"),' → logprob: -10.943902969360352
    7. '(r' → logprob: -12.693902969360352
    8. ' ")' → logprob: -12.943902969360352
    9. '"s' → logprob: -13.943902969360352
    10. 'n' → logprob: -14.193902969360352

Token 595: '"),' (ID: 7645)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.000540166103746742
    2. ')' → logprob: -7.625540256500244
    3. '"),' → logprob: -10.750539779663086
    4. '").' → logprob: -11.375539779663086
    5. '")
' → logprob: -12.125539779663086
    6. '"' → logprob: -12.625539779663086
    7. '");' → logprob: -13.125539779663086
    8. '')' → logprob: -13.250539779663086
    9. ' ")' → logprob: -13.625539779663086
    10. ')")' → logprob: -13.625539779663086

Token 596: ' car' (ID: 1669)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -5.550411151489243e-05
    2. 'elif' → logprob: -10.375055313110352
    3. ' elif' → logprob: -11.500055313110352
    4. '<|end|>' → logprob: -11.625055313110352
    5. '	elif' → logprob: -13.000055313110352
    6. '<|end|>' → logprob: -14.125055313110352
    7. '    ' → logprob: -14.750055313110352
    8. '.' → logprob: -15.000055313110352
    9. '  ' → logprob: -15.000055313110352
    10. ' else' → logprob: -15.125055313110352

Token 597: ' rock' (ID: 8707)
  Prédit: 'rock'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rock' → logprob: -0.474564790725708
    2. ' rock' → logprob: -0.974564790725708
    3. ' scissors' → logprob: -8.349564552307129
    4. 'sc' → logprob: -9.099564552307129
    5. 'r' → logprob: -10.099564552307129
    6. ' paper' → logprob: -10.224564552307129
    7. 'stone' → logprob: -10.974564552307129
    8. 'paper' → logprob: -11.099564552307129
    9. ' roca' → logprob: -12.474564552307129
    10. 'rocks' → logprob: -12.474564552307129

Token 598: ' bat' (ID: 10639)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.5457988977432251
    2. ' bat' → logprob: -0.9207988977432251
    3. 'bat' → logprob: -3.9207987785339355
    4. ' b' → logprob: -6.7957987785339355
    5. '<|end|>' → logprob: -7.1707987785339355
    6. ' bats' → logprob: -7.6707987785339355
    7. ' batt' → logprob: -9.420799255371094
    8. ' batter' → logprob: -10.170799255371094
    9. ' bata' → logprob: -10.795799255371094
    10. ' bate' → logprob: -11.170799255371094

Token 599: ' scissors' (ID: 117596)
  Prédit: 'sc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sc' → logprob: -0.023973053321242332
    2. ' scissors' → logprob: -3.773972988128662
    3. '"' → logprob: -7.773972988128662
    4. 's' → logprob: -8.14897346496582
    5. '"s' → logprob: -11.14897346496582
    6. ' sc' → logprob: -13.27397346496582
    7. ''s' → logprob: -14.27397346496582
    8. '	sc' → logprob: -14.27397346496582
    9. '_sc' → logprob: -15.64897346496582
    10. 'paper' → logprob: -17.02397346496582

Token 600: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -3.523948907968588e-05
    2. '<|end|>' → logprob: -10.750035285949707
    3. '.' → logprob: -12.500035285949707
    4. 'elif' → logprob: -12.750035285949707
    5. '<|end|>' → logprob: -13.125035285949707
    6. ')' → logprob: -13.125035285949707
    7. '	elif' → logprob: -13.875035285949707
    8. '")' → logprob: -14.000035285949707
    9. ' elif' → logprob: -14.625035285949707
    10. '  ' → logprob: -14.875035285949707

Token 601: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002499675378203392
    2. 'elif' → logprob: -6.002499580383301
    3. 'else' → logprob: -10.8774995803833
    4. '	elif' → logprob: -12.3774995803833
    5. ' elif' → logprob: -14.0024995803833
    6. '<|end|>' → logprob: -17.502500534057617
    7. 'elseif' → logprob: -17.627500534057617
    8. '	else' → logprob: -17.877500534057617
    9. '```' → logprob: -18.252500534057617
    10. ' else' → logprob: -18.627500534057617

Token 602: ' else' (ID: 1203)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.017399517819285393
    2. '   ' → logprob: -4.767399311065674
    3. 'else' (adapté à ' else') → logprob: -4.767399311065674
    4. ' elif' → logprob: -8.392399787902832
    5. '	elif' → logprob: -11.267399787902832
    6. ' else' → logprob: -12.892399787902832
    7. 'el' → logprob: -13.642399787902832
    8. '  ' → logprob: -15.267399787902832
    9. 'e' → logprob: -15.642399787902832
    10. ' ' → logprob: -15.767399787902832

Token 603: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0047409068793058395
    2. ' :' → logprob: -6.3797407150268555
    3. '   ' → logprob: -6.7547407150268555
    4. ':
' → logprob: -7.0047407150268555
    5. ' +=' → logprob: -7.8797407150268555
    6. ' ==' → logprob: -9.129740715026855
    7. 'a' → logprob: -9.254740715026855
    8. ' =' → logprob: -9.379740715026855
    9. '=' → logprob: -9.754740715026855
    10. '  ' → logprob: -9.754740715026855

Token 604: '              ' (ID: 4442)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.019076436758041382
    2. ' a' → logprob: -4.644076347351074
    3. '   ' → logprob: -4.769076347351074
    4. '       ' → logprob: -7.769076347351074
    5. '	a' → logprob: -8.394076347351074
    6. '    ' → logprob: -10.019076347351074
    7. '  ' → logprob: -10.144076347351074
    8. ' ' → logprob: -10.519076347351074
    9. '	' → logprob: -12.394076347351074
    10. '     ' → logprob: -12.519076347351074

Token 605: ' #' (ID: 1069)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.011627611704170704
    2. '   ' → logprob: -4.636627674102783
    3. ' a' → logprob: -6.386627674102783
    4. '       ' → logprob: -8.886627197265625
    5. '	a' → logprob: -10.261627197265625
    6. '  ' → logprob: -12.386627197265625
    7. '    ' → logprob: -12.636627197265625
    8. ' ' → logprob: -12.636627197265625
    9. 'p' → logprob: -14.636627197265625
    10. '     ' → logprob: -15.136627197265625

Token 606: ' Sinon' (ID: 154924)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.014397135935723782
    2. '   ' → logprob: -4.639397144317627
    3. ' a' → logprob: -5.389397144317627
    4. '       ' → logprob: -10.264396667480469
    5. '	a' → logprob: -10.889396667480469
    6. '  ' → logprob: -12.389396667480469
    7. '    ' → logprob: -12.514396667480469
    8. ' ' → logprob: -13.014396667480469
    9. '#a' → logprob: -14.639396667480469
    10. '   ' → logprob: -14.889396667480469

Token 607: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.333274245262146
    2. 'a' → logprob: -1.583274245262146
    3. ' a' → logprob: -2.7082743644714355
    4. '       ' → logprob: -4.5832743644714355
    5. '	a' → logprob: -7.7082743644714355
    6. '    ' → logprob: -7.9582743644714355
    7. '  ' → logprob: -9.083273887634277
    8. ' ' → logprob: -9.333273887634277
    9. ':' → logprob: -9.833273887634277
    10. '#a' → logprob: -10.333273887634277

Token 608: ' l' (ID: 305)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.23521587252616882
    2. ' a' → logprob: -2.235215902328491
    3. '   ' → logprob: -2.860215902328491
    4. '       ' → logprob: -3.110215902328491
    5. '	a' → logprob: -7.360215663909912
    6. '    ' → logprob: -9.86021614074707
    7. ' ' → logprob: -10.36021614074707
    8. '  ' → logprob: -10.98521614074707
    9. ' ' → logprob: -11.73521614074707
    10. '     ' → logprob: -11.86021614074707

Token 609: ''ad' (ID: 36162)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3596494197845459
    2. '   ' → logprob: -1.484649419784546
    3. ' a' → logprob: -3.109649419784546
    4. 'if' → logprob: -3.609649419784546
    5. ' if' → logprob: -6.609649658203125
    6. '  ' → logprob: -6.859649658203125
    7. 'p' → logprob: -7.859649658203125
    8. '    ' → logprob: -7.984649658203125
    9. ' ' → logprob: -7.984649658203125
    10. 'i' → logprob: -9.484649658203125

Token 610: 'vers' (ID: 3674)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.8212037682533264
    2. 'a' → logprob: -1.3212037086486816
    3. 'else' → logprob: -1.3212037086486816
    4. '   ' → logprob: -3.8212037086486816
    5. 'e' → logprob: -6.571203708648682
    6. 'f' → logprob: -6.696203708648682
    7. 'se' → logprob: -7.821203708648682
    8. ' else' → logprob: -8.07120418548584
    9. '=' → logprob: -8.57120418548584
    10. ' elif' → logprob: -8.94620418548584

Token 611: 'aire' (ID: 8189)
  Prédit: 'oire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'oire' → logprob: -1.0442196130752563
    2. 'elif' → logprob: -1.9192196130752563
    3. 'ateur' → logprob: -1.9192196130752563
    4. 'être' → logprob: -2.919219493865967
    5. 'oir' → logprob: -3.044219493865967
    6. 'a' → logprob: -3.544219493865967
    7. '"' → logprob: -3.669219493865967
    8. 'or' → logprob: -4.294219493865967
    9. 'else' → logprob: -4.544219493865967
    10. 'o' → logprob: -4.919219493865967

Token 612: ' a' (ID: 261)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5553504824638367
    2. ' ==' → logprob: -0.9303504824638367
    3. 'a' → logprob: -3.5553505420684814
    4. '=' → logprob: -6.680350303649902
    5. ' a' → logprob: -7.055350303649902
    6. ' joue' → logprob: -8.805350303649902
    7. '=="' → logprob: -8.930350303649902
    8. '+=' → logprob: -9.180350303649902
    9. '   ' → logprob: -9.180350303649902
    10. ' =' → logprob: -9.180350303649902

Token 613: ' joué' (ID: 117143)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.07526475936174393
    2. ' ==' → logprob: -3.2002646923065186
    3. '=="' → logprob: -4.825264930725098
    4. '=' → logprob: -5.075264930725098
    5. 'a' → logprob: -5.450264930725098
    6. '"' → logprob: -5.450264930725098
    7. ' joué' → logprob: -5.700264930725098
    8. 'played' → logprob: -6.200264930725098
    9. 'jou' → logprob: -7.325264930725098
    10. 'été' → logprob: -7.825264930725098

Token 614: ' '' (ID: 461)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.001808341359719634
    2. ''p' → logprob: -7.126808166503906
    3. 'p' → logprob: -7.626808166503906
    4. '"s' → logprob: -8.376808166503906
    5. ''' → logprob: -8.751808166503906
    6. ' "' → logprob: -9.251808166503906
    7. ''s' → logprob: -11.251808166503906
    8. '   ' → logprob: -11.751808166503906
    9. ' ' → logprob: -13.001808166503906
    10. ' p' → logprob: -13.251808166503906

Token 615: 'paper' (ID: 23112)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.1165771484375
    2. ''s' → logprob: -1.3665771484375
    3. 'p' → logprob: -1.8665771484375
    4. '"s' → logprob: -1.8665771484375
    5. ''p' → logprob: -2.6165771484375
    6. '"' → logprob: -3.3665771484375
    7. '`s' → logprob: -7.2415771484375
    8. ''' → logprob: -11.4915771484375
    9. ' s' → logprob: -11.8665771484375
    10. '   ' → logprob: -12.2415771484375

Token 616: ''' (ID: 6)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.050994634628296
    2. '"' → logprob: -1.550994634628296
    3. ' (' → logprob: -2.050994634628296
    4. '("' → logprob: -2.800994634628296
    5. ':' → logprob: -3.050994634628296
    6. '":' → logprob: -3.050994634628296
    7. '(' → logprob: -3.300994634628296
    8. ' ("' → logprob: -3.675994634628296
    9. '       ' → logprob: -3.800994634628296
    10. '(p' → logprob: -4.550994873046875

Token 617: ' ("' (ID: 7109)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09462890774011612
    2. 'a' → logprob: -3.5946288108825684
    3. ',' → logprob: -4.344628810882568
    4. '"' → logprob: -4.344628810882568
    5. '       ' → logprob: -4.344628810882568
    6. ' (' → logprob: -4.844628810882568
    7. '"a' → logprob: -5.844628810882568
    8. '(' → logprob: -6.344628810882568
    9. ':' → logprob: -6.344628810882568
    10. ' "' → logprob: -6.594628810882568

Token 618: 'p' (ID: 79)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.2679235637187958
    2. 's' → logprob: -1.7679235935211182
    3. '"' → logprob: -3.142923593521118
    4. '"s' → logprob: -4.267923355102539
    5. '")' → logprob: -5.017923355102539
    6. ''s' → logprob: -8.767923355102539
    7. '"),' → logprob: -8.892923355102539
    8. ')' → logprob: -9.267923355102539
    9. ''r' → logprob: -9.642923355102539
    10. 'p' → logprob: -10.392923355102539

Token 619: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.08672360330820084
    2. ')' → logprob: -3.211723566055298
    3. '"):' → logprob: -3.586723566055298
    4. '   ' → logprob: -4.836723804473877
    5. '"),' → logprob: -5.836723804473877
    6. '"' → logprob: -6.336723804473877
    7. '"):
' → logprob: -7.086723804473877
    8. '):' → logprob: -7.336723804473877
    9. 'r' → logprob: -8.336723327636719
    10. ':' → logprob: -8.961723327636719

Token 620: '       ' (ID: 309)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.08286935836076736
    2. '   ' → logprob: -2.582869291305542
    3. 's' → logprob: -5.707869529724121
    4. '       ' → logprob: -7.582869529724121
    5. '	a' → logprob: -9.582869529724121
    6. ' a' → logprob: -9.957869529724121
    7. '  ' → logprob: -11.332869529724121
    8. '    ' → logprob: -12.207869529724121
    9. '	' → logprob: -13.082869529724121
    10. '	s' → logprob: -13.457869529724121

Token 621: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -7.226628895296017e-06
    2. '   ' → logprob: -12.000007629394531
    3. ' a' → logprob: -14.000007629394531
    4. '       ' → logprob: -15.750007629394531
    5. 's' → logprob: -17.37500762939453
    6. '	a' → logprob: -18.00000762939453
    7. '  ' → logprob: -18.50000762939453
    8. '    ' → logprob: -19.50000762939453
    9. '        
' → logprob: -21.00000762939453
    10. '      ' → logprob: -21.12500762939453

Token 622: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.018173592165112495
    2. ' +=' → logprob: -4.018173694610596
    3. '=' → logprob: -11.143173217773438
    4. '+="' → logprob: -11.893173217773438
    5. '+' → logprob: -13.393173217773438
    6. '+='' → logprob: -15.143173217773438
    7. ' =' → logprob: -15.518173217773438
    8. 'a' → logprob: -15.893173217773438
    9. 's' → logprob: -16.268173217773438
    10. ']+=' → logprob: -16.393173217773438

Token 623: ' "' (ID: 392)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.577812671661377
    2. '"s' → logprob: -0.827812671661377
    3. ''s' → logprob: -6.327812671661377
    4. '"' → logprob: -9.952812194824219
    5. '`s' → logprob: -10.577812194824219
    6. ' s' → logprob: -11.327812194824219
    7. '	s' → logprob: -15.577812194824219
    8. 'r' → logprob: -16.07781219482422
    9. '_s' → logprob: -17.45281219482422
    10. ' "' → logprob: -17.70281219482422

Token 624: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -3.128163257315464e-07
    2. '"s' → logprob: -15.375
    3. ' s' → logprob: -17.5
    4. '"' → logprob: -17.5
    5. '`s' → logprob: -20.125
    6. '	s' → logprob: -20.25
    7. ''s' → logprob: -20.75
    8. 'r' → logprob: -21.25
    9. 'sc' → logprob: -22.0
    10. ''' → logprob: -22.0

Token 625: '"' (ID: 1)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.5795504450798035
    2. '"' → logprob: -0.8295504450798035
    3. ')' → logprob: -5.704550266265869
    4. ''' → logprob: -9.204550743103027
    5. ' ")' → logprob: -9.954550743103027
    6. '```' → logprob: -9.954550743103027
    7. '')' → logprob: -10.204550743103027
    8. ' "' → logprob: -11.579550743103027
    9. '<|end|>' → logprob: -11.954550743103027
    10. '#' → logprob: -12.329550743103027

Token 626: '       ' (ID: 309)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.03990484029054642
    2. '#' → logprob: -3.289904832839966
    3. '<|end|>' → logprob: -7.289905071258545
    4. '
' → logprob: -8.414904594421387
    5. '  
' → logprob: -8.539904594421387
    6. ' ' → logprob: -8.664904594421387
    7. ' 
' → logprob: -9.039904594421387
    8. ' print' → logprob: -9.414904594421387
    9. ' #' → logprob: -9.664904594421387
    10. 'score' → logprob: -9.914904594421387

Token 627: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.002114454749971628
    2. '#' (adapté à ' #') → logprob: -6.502114295959473
    3. ' print' → logprob: -8.002114295959473
    4. 'a' → logprob: -8.502114295959473
    5. '<|end|>' → logprob: -10.877114295959473
    6. '#print' → logprob: -11.252114295959473
    7. ')' → logprob: -11.502114295959473
    8. ' a' → logprob: -12.002114295959473
    9. '.print' → logprob: -12.252114295959473
    10. ' ' → logprob: -12.627114295959473

Token 628: ' alors' (ID: 17971)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.11788558959960938
    2. '<|end|>' → logprob: -2.2428855895996094
    3. 'print' → logprob: -5.492885589599609
    4. ' ' → logprob: -8.11788558959961
    5. ' #' → logprob: -8.61788558959961
    6. '<|end|>' → logprob: -8.86788558959961
    7. '       ' → logprob: -9.49288558959961
    8. '  ' → logprob: -10.24288558959961
    9. '   ' → logprob: -10.36788558959961
    10. '```' → logprob: -10.49288558959961

Token 629: ' on' (ID: 402)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -1.1558611392974854
    2. ' on' → logprob: -1.2808611392974854
    3. 's' → logprob: -1.9058611392974854
    4. 'on' → logprob: -3.0308611392974854
    5. ' "' → logprob: -3.2808611392974854
    6. '#' → logprob: -3.2808611392974854
    7. ''s' → logprob: -3.5308611392974854
    8. 'we' → logprob: -3.6558611392974854
    9. ' scissors' → logprob: -4.155860900878906
    10. ' s' → logprob: -4.655860900878906

Token 630: ' joue' (ID: 74342)
  Prédit: ' joue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' joue' → logprob: -0.5272029638290405
    2. 'jou' → logprob: -1.2772029638290405
    3. ' jouer' → logprob: -2.52720308303833
    4. ' jou' → logprob: -3.90220308303833
    5. 'play' → logprob: -4.52720308303833
    6. '<|end|>' → logprob: -4.77720308303833
    7. ' play' → logprob: -5.65220308303833
    8. 'plays' → logprob: -5.65220308303833
    9. ' plays' → logprob: -6.40220308303833
    10. ' continue' → logprob: -7.77720308303833

Token 631: ' '' (ID: 461)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.5413205027580261
    2. ''' → logprob: -0.9163205027580261
    3. ''r' → logprob: -4.041320323944092
    4. ''s' → logprob: -8.79132080078125
    5. ' "' → logprob: -9.54132080078125
    6. '<|end|>' → logprob: -10.04132080078125
    7. ' ' → logprob: -10.54132080078125
    8. ' '' → logprob: -10.66632080078125
    9. '   ' → logprob: -11.04132080078125
    10. '`' → logprob: -11.04132080078125

Token 632: 'sc' (ID: 2786)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.00030400342075154185
    2. '"' → logprob: -8.250304222106934
    3. ''r' → logprob: -10.125304222106934
    4. ''' → logprob: -13.375304222106934
    5. 'rock' → logprob: -13.875304222106934
    6. '	r' → logprob: -17.375303268432617
    7. ' r' → logprob: -18.000303268432617
    8. '­r' → logprob: -18.625303268432617
    9. 'p' → logprob: -19.000303268432617
    10. '_r' → logprob: -19.500303268432617

Token 633: 'issors' (ID: 69357)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.13162711262702942
    2. 'r' → logprob: -2.131627082824707
    3. 'issors' → logprob: -5.881627082824707
    4. '<|end|>' → logprob: -7.006627082824707
    5. 's' → logprob: -7.631627082824707
    6. '"' → logprob: -9.131627082824707
    7. 'a' → logprob: -9.256627082824707
    8. 'i' → logprob: -10.256627082824707
    9. '")' → logprob: -10.256627082824707
    10. 'b' → logprob: -10.506627082824707

Token 634: ''' (ID: 6)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0615520216524601
    2. '")' → logprob: -3.436552047729492
    3. '("' → logprob: -3.936552047729492
    4. '(p' → logprob: -5.436552047729492
    5. ' ("' → logprob: -7.061552047729492
    6. ')' → logprob: -7.436552047729492
    7. '()' → logprob: -7.811552047729492
    8. '"s' → logprob: -7.936552047729492
    9. 's' → logprob: -8.186552047729492
    10. ''' → logprob: -8.186552047729492

Token 635: ' ("' (ID: 7109)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 636: 's' (ID: 82)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.06908516585826874
    2. 's' → logprob: -3.069085121154785
    3. '")' → logprob: -4.069085121154785
    4. '"' → logprob: -5.819085121154785
    5. ')' → logprob: -8.444085121154785
    6. '(p' → logprob: -12.319085121154785
    7. ' p' → logprob: -13.444085121154785
    8. ')p' → logprob: -13.569085121154785
    9. '"s' → logprob: -13.694085121154785
    10. 'r' → logprob: -14.444085121154785

Token 637: '"),' (ID: 7645)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.001786086824722588
    2. ')' → logprob: -6.501786231994629
    3. ')")' → logprob: -8.751786231994629
    4. '.")' → logprob: -10.001786231994629
    5. ')"' → logprob: -10.626786231994629
    6. '"' → logprob: -10.626786231994629
    7. '")
' → logprob: -11.001786231994629
    8. '").' → logprob: -11.376786231994629
    9. ' ")' → logprob: -14.126786231994629
    10. '")

' → logprob: -14.501786231994629

Token 638: ' car' (ID: 1669)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.46232089400291443
    2. '<|end|>' → logprob: -1.3373209238052368
    3. ')' → logprob: -3.2123208045959473
    4. '#' → logprob: -3.2123208045959473
    5. ' ' → logprob: -4.837320804595947
    6. '```' → logprob: -5.462320804595947
    7. '
' → logprob: -5.962320804595947
    8. 'a' → logprob: -5.962320804595947
    9. '<|end|>' → logprob: -5.962320804595947
    10. '"' → logprob: -6.462320804595947

Token 639: ' scissors' (ID: 117596)
  Prédit: 'rock'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rock' → logprob: -0.29134681820869446
    2. 'p' → logprob: -2.041346788406372
    3. 'r' → logprob: -2.541346788406372
    4. 'paper' → logprob: -3.291346788406372
    5. 'papier' → logprob: -5.541347026824951
    6. 's' → logprob: -6.916347026824951
    7. ' pierre' → logprob: -7.666347026824951
    8. ' rock' → logprob: -7.666347026824951
    9. 'pap' → logprob: -8.916346549987793
    10. 'sp' → logprob: -9.291346549987793

Token 640: ' bat' (ID: 10639)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.6050652265548706
    2. 'bat' → logprob: -1.1050652265548706
    3. ' bat' → logprob: -2.10506534576416
    4. ' batt' → logprob: -7.73006534576416
    5. 'beat' → logprob: -8.10506534576416
    6. ' bats' → logprob: -9.98006534576416
    7. ' b' → logprob: -10.23006534576416
    8. ' battre' → logprob: -11.10506534576416
    9. '```' → logprob: -11.23006534576416
    10. ' batter' → logprob: -11.23006534576416

Token 641: ' paper' (ID: 6651)
  Prédit: 'rock'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rock' → logprob: -0.006250492297112942
    2. 'paper' → logprob: -5.256250381469727
    3. ' rock' → logprob: -7.006250381469727
    4. '"' → logprob: -9.256250381469727
    5. 'r' → logprob: -11.381250381469727
    6. 'p' → logprob: -13.256250381469727
    7. ' paper' → logprob: -13.881250381469727
    8. ''' → logprob: -16.756250381469727
    9. 'Rock' → logprob: -16.756250381469727
    10. 'roc' → logprob: -16.881250381469727

Token 642: '.

' (ID: 364)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5626855492591858
    2. '<|end|>' → logprob: -0.9376855492591858
    3. ')' → logprob: -3.937685489654541
    4. '#' → logprob: -4.187685489654541
    5. '<|end|>' → logprob: -6.812685489654541
    6. '.' → logprob: -7.062685489654541
    7. '
' → logprob: -7.312685489654541
    8. 'a' → logprob: -8.0626859664917
    9. '#print' → logprob: -8.5626859664917
    10. '```' → logprob: -8.6876859664917

Token 643: 'ans' (ID: 616)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00011892046313732862
    2. '#' → logprob: -9.50011920928955
    3. 'score' → logprob: -10.50011920928955
    4. 'total' → logprob: -11.87511920928955
    5. 'pr' → logprob: -13.00011920928955
    6. 'a' → logprob: -13.75011920928955
    7. 'p' → logprob: -14.00011920928955
    8. 'result' → logprob: -14.00011920928955
    9. '#print' → logprob: -14.25011920928955
    10. 'points' → logprob: -14.62511920928955

Token 644: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1427803635597229
    2. '=' → logprob: -2.017780303955078
    3. '_score' → logprob: -9.767780303955078
    4. '_points' → logprob: -10.392780303955078
    5. '_' → logprob: -12.142780303955078
    6. 'score' → logprob: -12.517780303955078
    7. ' ' → logprob: -12.642780303955078
    8. 's' → logprob: -13.392780303955078
    9. 'points' → logprob: -14.017780303955078
    10. '_pts' → logprob: -14.517780303955078

Token 645: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.718606891809031e-05
    2. ' ' → logprob: -10.125066757202148
    3. '[' → logprob: -10.875066757202148
    4. 'sum' → logprob: -12.125066757202148
    5. '[]' → logprob: -13.250066757202148
    6. 'len' → logprob: -16.12506675720215
    7. '""' → logprob: -16.12506675720215
    8. 'a' → logprob: -16.25006675720215
    9. '(' → logprob: -16.50006675720215
    10. ' [' → logprob: -16.62506675720215

Token 646: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00018280261429026723
    2. 'sum' → logprob: -8.62518310546875
    3. 'k' → logprob: -13.62518310546875
    4. '[' → logprob: -14.50018310546875
    5. ' ' → logprob: -14.87518310546875
    6. 'len' → logprob: -15.37518310546875
    7. 'a' → logprob: -15.75018310546875
    8. 'max' → logprob: -15.87518310546875
    9. '(' → logprob: -16.25018310546875
    10. 'min' → logprob: -16.87518310546875

Token 647: ' ' (ID: 220)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04636776074767113
    2. ' for' → logprob: -4.046367645263672
    3. '
' → logprob: -4.296367645263672
    4. '#' → logprob: -4.921367645263672
    5. '<|end|>' → logprob: -5.296367645263672
    6. ')' → logprob: -7.046367645263672
    7. '\n' → logprob: -7.671367645263672
    8. 'print' → logprob: -8.171367645263672
    9. ',' → logprob: -10.046367645263672
    10. '

' → logprob: -10.296367645263672

Token 648: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.015261105261743069
    2. '#' → logprob: -4.390261173248291
    3. ' for' → logprob: -6.515261173248291
    4. '<|end|>' → logprob: -7.015261173248291
    5. ')' → logprob: -8.640260696411133
    6. 'print' → logprob: -9.640260696411133
    7. '.' → logprob: -10.265260696411133
    8. 'prev' → logprob: -11.265260696411133
    9. '*' → logprob: -11.390260696411133
    10. 'i' → logprob: -11.890260696411133

Token 649: ' Initialise' (ID: 179601)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.009568843059241772
    2. 'dp' → logprob: -5.509568691253662
    3. 'prev' → logprob: -6.134568691253662
    4. 'used' → logprob: -6.134568691253662
    5. '#' → logprob: -8.00956916809082
    6. 'ans' → logprob: -8.25956916809082
    7. 'score' → logprob: -8.50956916809082
    8. 'visited' → logprob: -10.13456916809082
    9. 'i' → logprob: -10.38456916809082
    10. 'last' → logprob: -10.50956916809082

Token 650: ' la' (ID: 557)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.1061949729919434
    2. 'for' → logprob: -1.6061949729919434
    3. '_' → logprob: -1.9811949729919434
    4. ' for' → logprob: -2.1061949729919434
    5. ' a' → logprob: -2.6061949729919434
    6. 'a' → logprob: -2.8561949729919434
    7. ')' → logprob: -3.7311949729919434
    8. '=' → logprob: -4.481194972991943
    9. '#' → logprob: -4.731194972991943
    10. '<|end|>' → logprob: -4.981194972991943

Token 651: ' variable' (ID: 11076)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.21478450298309326
    2. 'len' → logprob: -2.964784622192383
    3. 'score' → logprob: -3.214784622192383
    4. 'list' → logprob: -3.464784622192383
    5. 'variable' → logprob: -3.714784622192383
    6. 'result' → logprob: -4.589784622192383
    7. '0' → logprob: -4.839784622192383
    8. 'length' → logprob: -5.339784622192383
    9. 'total' → logprob: -5.464784622192383
    10. 'counter' → logprob: -5.589784622192383

Token 652: ' '' (ID: 461)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7726143598556519
    2. 'for' → logprob: -0.7726143598556519
    3. 'ans' → logprob: -3.6476144790649414
    4. ' ' → logprob: -4.397614479064941
    5. ' ans' → logprob: -4.397614479064941
    6. ' =' → logprob: -4.897614479064941
    7. ' i' → logprob: -5.022614479064941
    8. 'i' → logprob: -5.772614479064941
    9. '=' → logprob: -6.647614479064941
    10. '' → logprob: -7.022614479064941

Token 653: 'ans' (ID: 616)
  Prédit: 'ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.006305934861302376
    2. 'int' → logprob: -5.381306171417236
    3. 'score' → logprob: -6.631306171417236
    4. 'answer' → logprob: -8.256305694580078
    5. 'total' → logprob: -10.506305694580078
    6. ' ans' → logprob: -10.756305694580078
    7. 'points' → logprob: -11.506305694580078
    8. 'result' → logprob: -11.506305694580078
    9. '0' → logprob: -12.006305694580078
    10. 'a' → logprob: -12.381305694580078

Token 654: '',' (ID: 787)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.17246288061141968
    2. ' =' → logprob: -2.5474629402160645
    3. '=' → logprob: -2.7974629402160645
    4. ')' → logprob: -5.5474629402160645
    5. '<|end|>' → logprob: -5.7974629402160645
    6. 'for' → logprob: -5.9224629402160645
    7. '
' → logprob: -6.5474629402160645
    8. '  ' → logprob: -6.5474629402160645
    9. ' for' → logprob: -6.7974629402160645
    10. '#' → logprob: -6.7974629402160645

Token 655: ' qui' (ID: 2780)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9753506183624268
    2. ' ' → logprob: -1.3503506183624268
    3. '#' → logprob: -2.7253506183624268
    4. ' for' → logprob: -2.8503506183624268
    5. 'a' → logprob: -2.8503506183624268
    6. 'ans' → logprob: -3.3503506183624268
    7. ' ans' → logprob: -3.7253506183624268
    8. '=' → logprob: -3.9753506183624268
    9. ' i' → logprob: -4.225350379943848
    10. 'i' → logprob: -4.350350379943848

Token 656: ' cont' (ID: 836)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03758234530687332
    2. '#' → logprob: -3.6625823974609375
    3. ' =' → logprob: -4.6625823974609375
    4. 'for' → logprob: -7.5375823974609375
    5. 'will' → logprob: -7.9125823974609375
    6. ' will' → logprob: -8.412582397460938
    7. 'rep' → logprob: -8.662582397460938
    8. 'calcul' → logprob: -8.912582397460938
    9. 'counts' → logprob: -10.287582397460938
    10. '0' → logprob: -10.412582397460938

Token 657: 'i' (ID: 72)
  Prédit: 'ient'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ient' → logprob: -0.12848789989948273
    2. 'i' → logprob: -2.1284878253936768
    3. 'iend' → logprob: -7.503488063812256
    4. 'iennent' → logprob: -7.628488063812256
    5. '#' → logprob: -9.503487586975098
    6. 't' → logprob: -9.878487586975098
    7. 'int' → logprob: -10.003487586975098
    8. 'in' → logprob: -10.128487586975098
    9. 'ients' → logprob: -10.253487586975098
    10. 'err' → logprob: -10.378487586975098

Token 658: 'endra' (ID: 32364)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.05457778647542
    2. ' =' → logprob: -3.9295778274536133
    3. 'for' → logprob: -4.179577827453613
    4. 'ont' → logprob: -4.804577827453613
    5. '#' → logprob: -5.554577827453613
    6. 'inue' → logprob: -7.929577827453613
    7. 'int' → logprob: -8.179577827453613
    8. 'e' → logprob: -8.179577827453613
    9. 'ère' → logprob: -8.179577827453613
    10. 'ent' → logprob: -8.179577827453613

Token 659: ' le' (ID: 505)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0025943268556147814
    2. ' the' → logprob: -7.127594470977783
    3. 'the' → logprob: -7.252594470977783
    4. ' ' → logprob: -7.502594470977783
    5. '#' → logprob: -7.752594470977783
    6. 'ans' → logprob: -9.752593994140625
    7. 'a' → logprob: -11.127593994140625
    8. 'int' → logprob: -12.127593994140625
    9. 'k' → logprob: -12.877593994140625
    10. '=' → logprob: -13.002593994140625

Token 660: ' score' (ID: 8429)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'score' → logprob: -0.00894308090209961
    2. 'total' → logprob: -5.2589430809021
    3. ' score' → logprob: -5.6339430809021
    4. ' total' → logprob: -10.008943557739258
    5. 'nombre' → logprob: -10.133943557739258
    6. 'result' → logprob: -11.008943557739258
    7. '0' → logprob: -11.758943557739258
    8. 'point' → logprob: -12.258943557739258
    9. '_score' → logprob: -13.008943557739258
    10. 'points' → logprob: -13.133943557739258

Token 661: ' total' (ID: 3609)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.14288803935050964
    2. ' =' → logprob: -2.017888069152832
    3. ' ' → logprob: -9.267888069152832
    4. 'for' → logprob: -9.392888069152832
    5. '_' → logprob: -11.642888069152832
    6. ' for' → logprob: -12.142888069152832
    7. ',' → logprob: -12.517888069152832
    8. '#' → logprob: -13.017888069152832
    9. '
' → logprob: -13.142888069152832
    10. '' → logprob: -13.517888069152832

Token 662: ' obtenu' (ID: 117330)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3345121443271637
    2. ' =' → logprob: -1.4595121145248413
    3. 'for' → logprob: -3.084512233734131
    4. '#' → logprob: -5.709512233734131
    5. '
' → logprob: -6.209512233734131
    6. ' for' → logprob: -7.584512233734131
    7. '' → logprob: -9.959511756896973
    8. ')' → logprob: -10.084511756896973
    9. '
' → logprob: -10.334511756896973
    10. '\n' → logprob: -10.334511756896973

Token 663: '.

' (ID: 364)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3116535544395447
    2. '=' → logprob: -1.6866536140441895
    3. ' =' → logprob: -2.9366536140441895
    4. '
' → logprob: -4.0616536140441895
    5. '#' → logprob: -4.8116536140441895
    6. ' for' → logprob: -5.9366536140441895
    7. ')' → logprob: -7.9366536140441895
    8. 'i' → logprob: -8.186653137207031
    9. '
' → logprob: -8.561653137207031
    10. '

' → logprob: -8.936653137207031

Token 664: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0003277176001574844
    2. 'used' → logprob: -8.250328063964844
    3. '#' → logprob: -10.500328063964844
    4. 'print' → logprob: -11.625328063964844
    5. 'length' → logprob: -11.625328063964844
    6. ' for' → logprob: -12.500328063964844
    7. 'n' → logprob: -12.750328063964844
    8. 'dp' → logprob: -12.750328063964844
    9. 'from' → logprob: -12.875328063964844
    10. 'i' → logprob: -13.125328063964844

Token 665: ' Pour' (ID: 13931)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04261178523302078
    2. 'used' → logprob: -3.542611837387085
    3. 'dp' → logprob: -4.417611598968506
    4. '#' → logprob: -8.167612075805664
    5. 'visited' → logprob: -9.542612075805664
    6. 'actions' → logprob: -9.792612075805664
    7. 'score' → logprob: -10.292612075805664
    8. 'from' → logprob: -10.542612075805664
    9. 'chosen' → logprob: -10.667612075805664
    10. 'memo' → logprob: -10.792612075805664

Token 666: ' chaque' (ID: 21194)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00012737659562844783
    2. '_' → logprob: -9.750127792358398
    3. '_i' → logprob: -9.875127792358398
    4. ' i' → logprob: -11.750127792358398
    5. 'idx' → logprob: -12.000127792358398
    6. 'index' → logprob: -13.250127792358398
    7. 'j' → logprob: -13.875127792358398
    8. 'x' → logprob: -15.125127792358398
    9. '_index' → logprob: -15.500127792358398
    10. 'ii' → logprob: -16.0001277923584

Token 667: ' caractère' (ID: 80509)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.010265479795634747
    2. ' i' → logprob: -4.885265350341797
    3. 'index' → logprob: -6.260265350341797
    4. 'idx' → logprob: -7.760265350341797
    5. 'j' → logprob: -8.760265350341797
    6. ' index' → logprob: -10.135265350341797
    7. '_i' → logprob: -10.510265350341797
    8. '(i' → logprob: -10.635265350341797
    9. 'indice' → logprob: -11.760265350341797
    10. 'x' → logprob: -12.010265350341797

Token 668: ' (' (ID: 350)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4732378125190735
    2. 'in' → logprob: -1.4732377529144287
    3. ',' → logprob: -2.0982377529144287
    4. 'i' → logprob: -3.9732377529144287
    5. ' i' → logprob: -5.723237991333008
    6. '(i' → logprob: -7.223237991333008
    7. 'for' → logprob: -7.348237991333008
    8. ' (' → logprob: -8.348237991333008
    9. '(' → logprob: -8.473237991333008
    10. ',i' → logprob: -8.473237991333008

Token 669: 'c' (ID: 66)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.008340099826455116
    2. ' i' → logprob: -4.883339881896973
    3. 'idx' → logprob: -8.258339881896973
    4. '_i' → logprob: -8.508339881896973
    5. 'j' → logprob: -9.883339881896973
    6. 'index' → logprob: -10.008339881896973
    7. 'x' → logprob: -10.508339881896973
    8. '(i' → logprob: -10.508339881896973
    9. 'c' → logprob: -11.383339881896973
    10. '_' → logprob: -11.383339881896973

Token 670: 'oup' (ID: 9999)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.6823026537895203
    2. 'i' → logprob: -1.557302713394165
    3. ' i' → logprob: -1.682302713394165
    4. 'har' → logprob: -2.932302713394165
    5. ',' → logprob: -3.682302713394165
    6. 'h' → logprob: -5.432302474975586
    7. 'in' → logprob: -5.557302474975586
    8. ',i' → logprob: -6.432302474975586
    9. 'for' → logprob: -6.557302474975586
    10. 's' → logprob: -6.682302474975586

Token 671: ' choisi' (ID: 77245)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.944472074508667
    2. ' in' → logprob: -1.069472074508667
    3. 'in' → logprob: -1.694472074508667
    4. 'i' → logprob: -3.319472074508667
    5. 'a' → logprob: -4.944472312927246
    6. 'for' → logprob: -4.944472312927246
    7. ' i' → logprob: -5.319472312927246
    8. 'o' → logprob: -5.319472312927246
    9. ' dans' → logprob: -5.319472312927246
    10. 'dans' → logprob: -6.069472312927246

Token 672: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.510669469833374
    2. ' in' → logprob: -1.385669469833374
    3. ' dans' → logprob: -2.760669469833374
    4. 'in' → logprob: -3.760669469833374
    5. ' de' → logprob: -4.385669708251953
    6. 'for' → logprob: -4.510669708251953
    7. ' for' → logprob: -4.760669708251953
    8. 'dans' → logprob: -4.885669708251953
    9. 'c' → logprob: -5.635669708251953
    10. 'de' → logprob: -5.885669708251953

Token 673: ' dans' (ID: 2671)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.3595029413700104
    2. 'for' → logprob: -1.359502911567688
    3. ',' → logprob: -3.6095030307769775
    4. ' in' → logprob: -4.109502792358398
    5. 'i' → logprob: -6.859502792358398
    6. ' for' → logprob: -8.609502792358398
    7. ',i' → logprob: -9.359502792358398
    8. 'and' → logprob: -9.734502792358398
    9. 'import' → logprob: -10.234502792358398
    10. '#' → logprob: -10.484502792358398

Token 674: ' '' (ID: 461)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.006081306841224432
    2. 'range' → logprob: -5.1310811042785645
    3. 'enumer' → logprob: -9.131081581115723
    4. 'zip' → logprob: -10.756081581115723
    5. ' a' → logprob: -11.381081581115723
    6. ' range' → logprob: -12.131081581115723
    7. 't' → logprob: -12.756081581115723
    8. '[a' → logprob: -13.381081581115723
    9. '(range' → logprob: -14.631081581115723
    10. '(a' → logprob: -14.881081581115723

Token 675: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0019000787287950516
    2. 'range' → logprob: -6.3769001960754395
    3. 't' → logprob: -9.251899719238281
    4. 'enumer' → logprob: -9.376899719238281
    5. ' a' → logprob: -11.501899719238281
    6. 'zip' → logprob: -12.626899719238281
    7. ' range' → logprob: -13.626899719238281
    8. '[a' → logprob: -14.376899719238281
    9. '(a' → logprob: -15.376899719238281
    10. '```' → logprob: -15.564399719238281

Token 676: ''' (ID: 6)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005455728620290756
    2. '):' → logprob: -6.005455493927002
    3. ' :' → logprob: -6.255455493927002
    4. '[' → logprob: -7.380455493927002
    5. ':
' → logprob: -8.75545597076416
    6. '[:' → logprob: -9.00545597076416
    7. '':' → logprob: -10.00545597076416
    8. ',' → logprob: -10.25545597076416
    9. ')' → logprob: -10.63045597076416
    10. '[i' → logprob: -11.38045597076416

Token 677: ' (' (ID: 350)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.09556826949119568
    2. ':' → logprob: -2.5955681800842285
    3. ' for' → logprob: -4.4705681800842285
    4. ',' → logprob: -5.4705681800842285
    5. '[' → logprob: -7.8455681800842285
    6. 'range' → logprob: -9.095568656921387
    7. 'and' → logprob: -9.220568656921387
    8. '.' → logprob: -9.345568656921387
    9. '[i' → logprob: -10.470568656921387
    10. '):' → logprob: -10.595568656921387

Token 678: 'la' (ID: 1675)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00019126241386402398
    2. 'range' → logprob: -8.625191688537598
    3. 'for' → logprob: -12.125191688537598
    4. ' a' → logprob: -12.625191688537598
    5. 'enumer' → logprob: -13.500191688537598
    6. 't' → logprob: -14.500191688537598
    7. ')' → logprob: -14.875191688537598
    8. 'ans' → logprob: -15.375191688537598
    9. ' range' → logprob: -15.750191688537598
    10. '[a' → logprob: -16.12519073486328

Token 679: ' liste' (ID: 31719)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00021676832693628967
    2. 'enumer' → logprob: -9.250216484069824
    3. 'for' → logprob: -9.625216484069824
    4. ' range' → logprob: -9.875216484069824
    5. '(range' → logprob: -13.750216484069824
    6. 'zip' → logprob: -13.875216484069824
    7. 't' → logprob: -14.250216484069824
    8. 'a' → logprob: -15.625216484069824
    9. 'ange' → logprob: -15.875216484069824
    10. 'r' → logprob: -16.37521743774414

Token 680: ' de' (ID: 334)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0149078369140625
    2. '):' → logprob: -1.0149078369140625
    3. ')' → logprob: -2.3899078369140625
    4. 'a' → logprob: -3.1399078369140625
    5. 'for' → logprob: -3.3899078369140625
    6. ',' → logprob: -3.5149078369140625
    7. 'de' → logprob: -4.2649078369140625
    8. 't' → logprob: -4.6399078369140625
    9. 'enumer' → logprob: -4.8899078369140625
    10. ' de' → logprob: -5.3899078369140625

Token 681: ' nos' (ID: 4001)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.018903087824583054
    2. 'range' → logprob: -4.0189032554626465
    3. ' range' → logprob: -8.268902778625488
    4. ' a' → logprob: -8.643902778625488
    5. 'enumer' → logprob: -9.143902778625488
    6. ')' → logprob: -9.768902778625488
    7. 'la' → logprob: -10.268902778625488
    8. 'ans' → logprob: -10.768902778625488
    9. 'the' → logprob: -11.518902778625488
    10. 'chosen' → logprob: -11.643902778625488

Token 682: ' coups' (ID: 98942)
  Prédit: 'actions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'actions' → logprob: -0.031922873109579086
    2. 'a' → logprob: -4.656922817230225
    3. 'range' → logprob: -4.656922817230225
    4. 'cho' → logprob: -5.031922817230225
    5. 'for' → logprob: -6.156922817230225
    6. 'choices' → logprob: -7.031922817230225
    7. 'chosen' → logprob: -7.406922817230225
    8. ' actions' → logprob: -7.406922817230225
    9. 't' → logprob: -7.906922817230225
    10. 'ré' → logprob: -8.656923294067383

Token 683: ' optim' (ID: 9367)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01248010154813528
    2. ':' → logprob: -4.88748025894165
    3. 'for' → logprob: -6.13748025894165
    4. '):
' → logprob: -6.76248025894165
    5. ')' → logprob: -6.88748025894165
    6. '[' → logprob: -8.262479782104492
    7. ',' → logprob: -10.012479782104492
    8. '),' → logprob: -10.137479782104492
    9. 'a' → logprob: -10.887479782104492
    10. '[i' → logprob: -10.887479782104492

Token 684: 'aux' (ID: 5454)
  Prédit: 'aux'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aux' → logprob: -0.31679925322532654
    2. 'isés' → logprob: -1.316799283027649
    3. 'a' → logprob: -7.066799163818359
    4. '```' → logprob: -7.066799163818359
    5. 'isé' → logprob: -7.441799163818359
    6. 'is' → logprob: -7.816799163818359
    7. 'al' → logprob: -8.19179916381836
    8. 'isées' → logprob: -8.56679916381836
    9. 'ales' → logprob: -9.19179916381836
    10. 'és' → logprob: -9.44179916381836

Token 685: ' sans' (ID: 9828)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5802770853042603
    2. '):' → logprob: -0.8302770853042603
    3. 'for' → logprob: -6.080276966094971
    4. ')' → logprob: -7.455276966094971
    5. ':
' → logprob: -7.580276966094971
    6. '[' → logprob: -8.330277442932129
    7. '):
' → logprob: -8.580277442932129
    8. 'a' → logprob: -9.080277442932129
    9. ',' → logprob: -9.205277442932129
    10. ' :' → logprob: -9.705277442932129

Token 686: ' contr' (ID: 6030)
  Prédit: 'restr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'restr' → logprob: -0.7795647382736206
    2. 'k' → logprob: -2.02956485748291
    3. 'restriction' → logprob: -2.27956485748291
    4. 'con' → logprob: -2.77956485748291
    5. 'modifier' → logprob: -2.77956485748291
    6. 'prendre' → logprob: -3.52956485748291
    7. 'esp' → logprob: -3.65456485748291
    8. 'mod' → logprob: -4.15456485748291
    9. 're' → logprob: -4.52956485748291
    10. 'prise' → logprob: -4.65456485748291

Token 687: 'ainte' (ID: 48434)
  Prédit: 'aints'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aints' → logprob: -0.2675558030605316
    2. 'a' → logprob: -1.892555832862854
    3. 'aint' → logprob: -2.7675557136535645
    4. 'raints' → logprob: -4.5175557136535645
    5. 'ains' → logprob: -5.0175557136535645
    6. 'ainte' → logprob: -6.3925557136535645
    7. 'ra' → logprob: -7.6425557136535645
    8. 'raint' → logprob: -7.6425557136535645
    9. 'aits' → logprob: -8.017556190490723
    10. 'ain' → logprob: -8.767556190490723

Token 688: ' sur' (ID: 1512)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4518486261367798
    2. '):' → logprob: -2.3268485069274902
    3. 'for' → logprob: -2.3268485069274902
    4. '[' → logprob: -2.5768485069274902
    5. '<|end|>' → logprob: -4.07684850692749
    6. ':' → logprob: -4.20184850692749
    7. ' for' → logprob: -4.57684850692749
    8. 'if' → logprob: -4.70184850692749
    9. '),' → logprob: -5.07684850692749
    10. '[i' → logprob: -5.07684850692749

Token 689: ' les' (ID: 1341)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.04695436730980873
    2. 'a' → logprob: -3.671954393386841
    3. 't' → logprob: -4.171954154968262
    4. ' range' → logprob: -5.796954154968262
    5. 'k' → logprob: -6.796954154968262
    6. 'enumer' → logprob: -8.296954154968262
    7. '"' → logprob: -8.421954154968262
    8. 'i' → logprob: -9.421954154968262
    9. '(range' → logprob: -10.046954154968262
    10. 'la' → logprob: -10.171954154968262

Token 690: ' doubl' (ID: 127992)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.28832387924194336
    2. 'positions' → logprob: -2.4133238792419434
    3. 'esp' → logprob: -2.9133238792419434
    4. 'adj' → logprob: -3.2883238792419434
    5. 'con' → logprob: -3.6633238792419434
    6. 'indices' → logprob: -4.163323879241943
    7. 'K' → logprob: -5.163323879241943
    8. 'i' → logprob: -5.788323879241943
    9. 'a' → logprob: -6.288323879241943
    10. 't' → logprob: -6.538323879241943

Token 691: 'ons' (ID: 1808)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.7928801774978638
    2. 'e' → logprob: -1.1678801774978638
    3. 'a' → logprob: -1.9178801774978638
    4. 'ées' → logprob: -3.042880058288574
    5. 'és' → logprob: -4.417880058288574
    6. 'é' → logprob: -4.542880058288574
    7. 'ée' → logprob: -4.917880058288574
    8. 'ons' → logprob: -6.417880058288574
    9. 'à' → logprob: -7.292880058288574
    10. 'esp' → logprob: -7.292880058288574

Token 692: ' espac' (ID: 195747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5949757695198059
    2. '):' → logprob: -0.9699757695198059
    3. 'for' → logprob: -3.469975709915161
    4. '[' → logprob: -4.21997594833374
    5. ')' → logprob: -4.59497594833374
    6. 'if' → logprob: -5.59497594833374
    7. '[:' → logprob: -5.96997594833374
    8. ' for' → logprob: -6.46997594833374
    9. '[i' → logprob: -6.59497594833374
    10. 'range' → logprob: -7.21997594833374

Token 693: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.03360363468527794
    2. 'es' → logprob: -3.6586036682128906
    3. 'ant' → logprob: -6.158603668212891
    4. 'e' → logprob: -6.283603668212891
    5. 'é' → logprob: -6.533603668212891
    6. 'ées' → logprob: -6.533603668212891
    7. 'ed' → logprob: -9.28360366821289
    8. 'ée' → logprob: -9.53360366821289
    9. 's' → logprob: -10.40860366821289
    10. 'a' → logprob: -10.53360366821289

Token 694: ' de' (ID: 334)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6610104441642761
    2. 'for' → logprob: -1.911010503768921
    3. ')' → logprob: -2.286010503768921
    4. ' by' → logprob: -2.411010503768921
    5. 'by' → logprob: -3.536010503768921
    6. '[i' → logprob: -3.786010503768921
    7. 'if' → logprob: -3.911010503768921
    8. ' for' → logprob: -4.411010265350342
    9. ' ' → logprob: -4.661010265350342
    10. '),' → logprob: -5.411010265350342

Token 695: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0003805064770858735
    2. ' k' → logprob: -8.500380516052246
    3. '1' → logprob: -9.000380516052246
    4. 'K' → logprob: -10.000380516052246
    5. '`' → logprob: -13.500380516052246
    6. ' ' → logprob: -13.750380516052246
    7. '

' → logprob: -13.875380516052246
    8. '2' → logprob: -14.250380516052246
    9. '	k' → logprob: -14.625380516052246
    10. '```' → logprob: -14.625380516052246

Token 696: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6982226967811584
    2. '):' → logprob: -0.8232226967811584
    3. 'for' → logprob: -3.1982226371765137
    4. ' for' → logprob: -5.573222637176514
    5. '),' → logprob: -5.823222637176514
    6. ' )' → logprob: -5.823222637176514
    7. '):
' → logprob: -6.198222637176514
    8. ' ):' → logprob: -6.198222637176514
    9. 'indices' → logprob: -6.448222637176514
    10. ').' → logprob: -6.573222637176514

Token 697: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -2.45848218582978e-06
    2. ' for' → logprob: -13.00000286102295
    3. 'f' → logprob: -17.625001907348633
    4. '#' → logprob: -18.125001907348633
    5. 'i' → logprob: -18.875001907348633
    6. ')' → logprob: -18.875001907348633
    7. 'n' → logprob: -19.000001907348633
    8. '	for' → logprob: -19.500001907348633
    9. '[' → logprob: -19.875001907348633
    10. 'from' → logprob: -20.125001907348633

Token 698: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0014116625534370542
    2. ' i' → logprob: -7.251411437988281
    3. 'idx' → logprob: -7.876411437988281
    4. 'j' → logprob: -9.251411437988281
    5. '_i' → logprob: -9.751411437988281
    6. '(i' → logprob: -10.626411437988281
    7. 'ii' → logprob: -10.626411437988281
    8. 'x' → logprob: -10.876411437988281
    9. 'c' → logprob: -10.876411437988281
    10. 'ai' → logprob: -10.876411437988281

Token 699: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.6294775605201721
    2. ',' → logprob: -0.8794775605201721
    3. 'in' → logprob: -3.0044775009155273
    4. ' ,' → logprob: -6.504477500915527
    5. ',a' → logprob: -8.004477500915527
    6. 'a' → logprob: -8.754477500915527
    7. ',in' → logprob: -9.129477500915527
    8. ',n' → logprob: -9.879477500915527
    9. 's' → logprob: -10.004477500915527
    10. ' ' → logprob: -10.004477500915527

Token 700: ' a' (ID: 261)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.35085493326187134
    2. 'a' → logprob: -1.2258548736572266
    3. ' range' → logprob: -6.100854873657227
    4. ' a' → logprob: -8.850854873657227
    5. '(range' → logprob: -12.225854873657227
    6. 'enumer' → logprob: -12.600854873657227
    7. 'ans' → logprob: -12.850854873657227
    8. 'r' → logprob: -13.600854873657227
    9. 'ran' → logprob: -13.663354873657227
    10. 'ra' → logprob: -13.663354873657227

Token 701: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.003333133412525058
    2. ',' → logprob: -6.75333309173584
    3. 'n' → logprob: -7.62833309173584
    4. ':
' → logprob: -8.37833309173584
    5. ' in' → logprob: -8.50333309173584
    6. ' :' → logprob: -8.50333309173584
    7. '==' → logprob: -8.50333309173584
    8. ' ==' → logprob: -8.62833309173584
    9. 'in' → logprob: -8.87833309173584
    10. '[' → logprob: -9.00333309173584

Token 702: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.1953439712524414
    2. '   ' → logprob: -2.5703439712524414
    3. 'ans' → logprob: -2.9453439712524414
    4. ' if' → logprob: -4.070343971252441
    5. '<|end|>' → logprob: -4.445343971252441
    6. ' ' → logprob: -5.695343971252441
    7. 'score' → logprob: -5.695343971252441
    8. '  ' → logprob: -5.945343971252441
    9. '    ' → logprob: -5.945343971252441
    10. 'pass' → logprob: -6.070343971252441

Token 703: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.003874062094837427
    2. 'pass' → logprob: -5.628873825073242
    3. 'ans' → logprob: -9.503873825073242
    4. '   ' → logprob: -9.503873825073242
    5. ' if' → logprob: -10.253873825073242
    6. '<|end|>' → logprob: -10.253873825073242
    7. '...' → logprob: -11.128873825073242
    8. 'i' → logprob: -11.628873825073242
    9. '    ' → logprob: -12.003873825073242
    10. ' ' → logprob: -12.253873825073242

Token 704: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0004891689168289304
    2. ' i' → logprob: -7.625489234924316
    3. '   ' → logprob: -14.375489234924316
    4. ' ' → logprob: -15.125489234924316
    5. '  ' → logprob: -15.875489234924316
    6. '	i' → logprob: -16.50048828125
    7. '(i' → logprob: -16.87548828125
    8. 'a' → logprob: -17.00048828125
    9. ''i' → logprob: -17.37548828125
    10. '{i' → logprob: -18.37548828125

Token 705: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6326953172683716
    2. ' ==' → logprob: -0.7576953172683716
    3. '=="' → logprob: -9.882695198059082
    4. '=='' → logprob: -10.632695198059082
    5. '=' → logprob: -11.507695198059082
    6. '==
' → logprob: -12.257695198059082
    7. ' ' → logprob: -13.132695198059082
    8. ' =="' → logprob: -14.507695198059082
    9. '[' → logprob: -14.632695198059082
    10. ' =='' → logprob: -14.882695198059082

Token 706: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0015589047688990831
    2. ''r' → logprob: -6.876558780670166
    3. ''p' → logprob: -8.126559257507324
    4. 'r' → logprob: -8.501559257507324
    5. 'p' → logprob: -10.626559257507324
    6. ''' → logprob: -14.626559257507324
    7. '   ' → logprob: -14.626559257507324
    8. '`' → logprob: -14.626559257507324
    9. ' "' → logprob: -15.126559257507324
    10. '
' → logprob: -15.376559257507324

Token 707: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.33651575446128845
    2. 'p' → logprob: -1.7115157842636108
    3. '"' → logprob: -2.3365156650543213
    4. ''p' → logprob: -5.3365159034729
    5. ''r' → logprob: -5.7115159034729
    6. ''' → logprob: -7.9615159034729
    7. ''s' → logprob: -12.836515426635742
    8. 's' → logprob: -12.836515426635742
    9. '`' → logprob: -12.961515426635742
    10. '	r' → logprob: -13.461515426635742

Token 708: '":' (ID: 1243)
  Prédit: '":'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '":' → logprob: -0.04957038536667824
    2. '":
' → logprob: -3.049570322036743
    3. '"' → logprob: -7.549570560455322
    4. ':' → logprob: -8.299570083618164
    5. '":
' → logprob: -8.549570083618164
    6. '":

' → logprob: -11.799570083618164
    7. ' ":' → logprob: -13.299570083618164
    8. ':
' → logprob: -13.299570083618164
    9. ':"' → logprob: -14.299570083618164
    10. ' "' → logprob: -14.549570083618164

Token 709: '       ' (ID: 309)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.009516770020127296
    2. '   ' → logprob: -5.009516716003418
    3. '	ans' → logprob: -6.134516716003418
    4. ' ans' → logprob: -7.384516716003418
    5. '       ' → logprob: -12.634516716003418
    6. '(ans' → logprob: -13.384516716003418
    7. ' ' → logprob: -13.509516716003418
    8. 'answer' → logprob: -13.634516716003418
    9. '_ans' → logprob: -13.884516716003418
    10. '  ' → logprob: -14.759516716003418

Token 710: ' #' (ID: 1069)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.001256780233234167
    2. '   ' → logprob: -7.001256942749023
    3. ' ans' → logprob: -8.501256942749023
    4. '	ans' → logprob: -8.876256942749023
    5. '(ans' → logprob: -13.876256942749023
    6. '       ' → logprob: -13.876256942749023
    7. '_ans' → logprob: -15.251256942749023
    8. ' ' → logprob: -16.501256942749023
    9. '  ' → logprob: -16.501256942749023
    10. 'Ans' → logprob: -16.751256942749023

Token 711: ' Si' (ID: 7832)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -9.93710636976175e-05
    2. '   ' → logprob: -9.875099182128906
    3. '	ans' → logprob: -10.250099182128906
    4. ' ans' → logprob: -11.500099182128906
    5. '       ' → logprob: -13.375099182128906
    6. '(ans' → logprob: -14.750099182128906
    7. 'if' → logprob: -15.250099182128906
    8. 'answer' → logprob: -16.375099182128906
    9. '  ' → logprob: -17.750099182128906
    10. ' ' → logprob: -18.250099182128906

Token 712: ' on' (ID: 402)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.583670437335968
    2. ' ans' → logprob: -0.833670437335968
    3. 'r' → logprob: -5.708670616149902
    4. '	ans' → logprob: -6.083670616149902
    5. ' r' → logprob: -7.208670616149902
    6. 'n' → logprob: -7.958670616149902
    7. '(ans' → logprob: -8.333670616149902
    8. '<|end|>' → logprob: -9.083670616149902
    9. 'k' → logprob: -9.208670616149902
    10. '   ' → logprob: -9.208670616149902

Token 713: ' a' (ID: 261)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.3361753523349762
    2. ' ans' → logprob: -1.7111753225326538
    3. '==' → logprob: -2.5861754417419434
    4. ' ==' → logprob: -4.711175441741943
    5. 'r' → logprob: -5.336175441741943
    6. '<|end|>' → logprob: -5.461175441741943
    7. '=' → logprob: -6.586175441741943
    8. '(ans' → logprob: -6.711175441741943
    9. '   ' → logprob: -6.836175441741943
    10. '	ans' → logprob: -7.086175441741943

Token 714: ' joué' (ID: 117143)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.07906185835599899
    2. '"' → logprob: -2.70406174659729
    3. ''r' → logprob: -5.704061985015869
    4. ''' → logprob: -6.454061985015869
    5. ' r' → logprob: -6.579061985015869
    6. ' "' → logprob: -6.829061985015869
    7. 'ans' → logprob: -7.329061985015869
    8. ' '' → logprob: -8.329061508178711
    9. ' ans' → logprob: -8.704061508178711
    10. ' ==' → logprob: -9.079061508178711

Token 715: ' '' (ID: 461)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0351564921438694
    2. '"' → logprob: -4.410156726837158
    3. ' r' → logprob: -4.535156726837158
    4. ' ' → logprob: -5.535156726837158
    5. ' "' → logprob: -6.660156726837158
    6. '   ' → logprob: -6.785156726837158
    7. ' '' → logprob: -6.910156726837158
    8. '       ' → logprob: -6.910156726837158
    9. 'n' → logprob: -7.035156726837158
    10. ':' → logprob: -7.660156726837158

Token 716: 'rock' (ID: 21032)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.43460845947265625
    2. '"' → logprob: -1.0596084594726562
    3. ''r' → logprob: -5.184608459472656
    4. 'rock' → logprob: -9.059608459472656
    5. ''' → logprob: -9.684608459472656
    6. 'p' → logprob: -10.309608459472656
    7. ' ' → logprob: -11.059608459472656
    8. ' r' → logprob: -11.309608459472656
    9. ''p' → logprob: -11.434608459472656
    10. ' "' → logprob: -11.434608459472656

Token 717: ''' (ID: 6)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.39147451519966125
    2. ':
' → logprob: -1.1414744853973389
    3. '":' → logprob: -5.766474723815918
    4. ',' → logprob: -7.766474723815918
    5. '):
' → logprob: -7.891474723815918
    6. '":
' → logprob: -8.141474723815918
    7. '):' → logprob: -9.391474723815918
    8. '"' → logprob: -9.891474723815918
    9. 'ans' → logprob: -10.016474723815918
    10. '
' → logprob: -10.391474723815918

Token 718: ' ("' (ID: 7109)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.37625429034233093
    2. ':
' → logprob: -1.7512543201446533
    3. '   ' → logprob: -2.0012543201446533
    4. 'ans' → logprob: -6.876254081726074
    5. '       ' → logprob: -7.126254081726074
    6. ',' → logprob: -7.126254081726074
    7. ' :' → logprob: -7.376254081726074
    8. ' :
' → logprob: -8.001254081726074
    9. '  ' → logprob: -8.126254081726074
    10. ' ans' → logprob: -8.501254081726074

Token 719: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0008353583980351686
    2. '"' → logprob: -7.250835418701172
    3. '")' → logprob: -9.750835418701172
    4. '"):
' → logprob: -10.625835418701172
    5. ' r' → logprob: -10.875835418701172
    6. ' "' → logprob: -12.000835418701172
    7. ')' → logprob: -12.875835418701172
    8. '"),' → logprob: -13.125835418701172
    9. ''r' → logprob: -13.125835418701172
    10. '_r' → logprob: -13.250835418701172

Token 720: '")
' (ID: 1896)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4796132445335388
    2. '):
' → logprob: -1.7296133041381836
    3. '"):' → logprob: -1.9796133041381836
    4. '"):
' → logprob: -2.9796133041381836
    5. ')' → logprob: -4.354613304138184
    6. '):
' → logprob: -7.229613304138184
    7. '   ' → logprob: -8.104613304138184
    8. '")' → logprob: -8.729613304138184
    9. '"):
' → logprob: -8.729613304138184
    10. ':' → logprob: -9.354613304138184

Token 721: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5385106205940247
    2. '       ' → logprob: -1.0385105609893799
    3. 'ans' → logprob: -3.03851056098938
    4. ':' → logprob: -5.413510799407959
    5. ' ans' → logprob: -5.663510799407959
    6. '	ans' → logprob: -6.038510799407959
    7. '<|end|>' → logprob: -6.788510799407959
    8. 'and' → logprob: -7.663510799407959
    9. '=' → logprob: -7.788510799407959
    10. ',' → logprob: -8.1635103225708

Token 722: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -1.1637164789135568e-05
    2. ' ans' → logprob: -11.875011444091797
    3. '   ' → logprob: -13.000011444091797
    4. '	ans' → logprob: -13.000011444091797
    5. '(ans' → logprob: -17.250011444091797
    6. 'answer' → logprob: -20.000011444091797
    7. '
' → logprob: -20.625011444091797
    8. 'Ans' → logprob: -20.750011444091797
    9. '_ans' → logprob: -20.875011444091797
    10. '  ' → logprob: -21.000011444091797

Token 723: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.07889264822006226
    2. ' +=' → logprob: -2.578892707824707
    3. '+' → logprob: -13.203892707824707
    4. ']+=' → logprob: -13.953892707824707
    5. '+=(' → logprob: -15.953892707824707
    6. '+="' → logprob: -17.07889175415039
    7. '=' → logprob: -17.20389175415039
    8. '+='' → logprob: -17.32889175415039
    9. ' ' → logprob: -19.45389175415039
    10. ' +' → logprob: -19.82889175415039

Token 724: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -2.696889623621246e-06
    2. ' r' → logprob: -13.25000286102295
    3. 'p' → logprob: -14.00000286102295
    4. '	r' → logprob: -19.875001907348633
    5. '­r' → logprob: -21.625001907348633
    6. '   ' → logprob: -23.250001907348633
    7. ' ' → logprob: -23.250001907348633
    8. ' p' → logprob: -23.250001907348633
    9. '_r' → logprob: -23.625001907348633
    10. '+r' → logprob: -24.500001907348633

Token 725: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 726: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 727: ' On' (ID: 2160)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.31684616208076477
    2. ' +=' → logprob: -1.6918461322784424
    3. 'ans' → logprob: -3.5668461322784424
    4. '+' → logprob: -3.9418461322784424
    5. '
' → logprob: -4.1918463706970215
    6. 'elif' → logprob: -4.4418463706970215
    7. ' ans' → logprob: -5.0668463706970215
    8. 'r' → logprob: -6.6918463706970215
    9. '   ' → logprob: -7.3168463706970215
    10. ' ' → logprob: -7.4418463706970215

Token 728: ' ajoute' (ID: 91611)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.03804585337638855
    2. ' +=' → logprob: -3.288045883178711
    3. '+' → logprob: -12.913045883178711
    4. ']+=' → logprob: -13.663045883178711
    5. '=' → logprob: -14.413045883178711
    6. ' ' → logprob: -16.03804588317871
    7. '+="' → logprob: -17.28804588317871
    8. ' ' → logprob: -17.78804588317871
    9. '+=(' → logprob: -18.66304588317871
    10. ')' → logprob: -19.16304588317871

Token 729: ' le' (ID: 505)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.01991770789027214
    2. ' r' → logprob: -4.0199174880981445
    3. '<|end|>' → logprob: -6.5199174880981445
    4. ' ' → logprob: -9.269917488098145
    5. 's' → logprob: -10.144917488098145
    6. '+r' → logprob: -10.394917488098145
    7. '+' → logprob: -10.519917488098145
    8. ' p' → logprob: -10.769917488098145
    9. 'p' → logprob: -10.769917488098145
    10. '1' → logprob: -10.769917488098145

Token 730: ' score' (ID: 8429)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.008834020234644413
    2. ' r' → logprob: -4.758833885192871
    3. ' ' → logprob: -9.133833885192871
    4. '+' → logprob: -10.383833885192871
    5. 'p' → logprob: -10.508833885192871
    6. 's' → logprob: -11.633833885192871
    7. 'n' → logprob: -12.008833885192871
    8. '1' → logprob: -12.758833885192871
    9. 'R' → logprob: -12.883833885192871
    10. '+r' → logprob: -12.883833885192871

Token 731: ' attrib' (ID: 72186)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 732: 'ué' (ID: 50179)
  Prédit: 'ué'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ué' → logprob: -0.0007226797170005739
    2. 'u' → logprob: -7.500722885131836
    3. 'ue' → logprob: -8.875722885131836
    4. 'uer' → logprob: -11.000722885131836
    5. 'uée' → logprob: -11.625722885131836
    6. 'r' → logprob: -12.875722885131836
    7. 'é' → logprob: -14.375722885131836
    8. 'ut' → logprob: -15.500722885131836
    9. 'uable' → logprob: -15.875722885131836
    10. 'ued' → logprob: -16.125722885131836

Token 733: ' à' (ID: 1221)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 734: ' '' (ID: 461)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0009131324477493763
    2. ' r' → logprob: -7.000913143157959
    3. ' ' → logprob: -14.3759126663208
    4. 'p' → logprob: -14.6259126663208
    5. 'n' → logprob: -16.250913619995117
    6. '	r' → logprob: -16.500913619995117
    7. '   ' → logprob: -16.500913619995117
    8. 's' → logprob: -16.875913619995117
    9. 'ans' → logprob: -17.125913619995117
    10. '  ' → logprob: -17.250913619995117

Token 735: 'rock' (ID: 21032)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.00048358101048506796
    2. ' r' → logprob: -7.875483512878418
    3. '"' → logprob: -9.625483512878418
    4. ''r' → logprob: -10.500483512878418
    5. ''' → logprob: -11.875483512878418
    6. 'rock' → logprob: -14.125483512878418
    7. ' "' → logprob: -14.750483512878418
    8. ' '' → logprob: -15.000483512878418
    9. ' ' → logprob: -15.000483512878418
    10. '_r' → logprob: -15.625483512878418

Token 736: ''' (ID: 6)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 737: ' à' (ID: 1221)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 738: ' la' (ID: 557)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.010030409321188927
    2. 'r' → logprob: -4.635030269622803
    3. ' ans' → logprob: -8.260030746459961
    4. 'la' → logprob: -12.260030746459961
    5. 'l' → logprob: -12.385030746459961
    6. '	ans' → logprob: -12.510030746459961
    7. '(ans' → logprob: -13.385030746459961
    8. ' r' → logprob: -14.635030746459961
    9. 'rans' → logprob: -15.385030746459961
    10. '   ' → logprob: -15.885030746459961

Token 739: ' réponse' (ID: 50332)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.10055460780858994
    2. 'ans' → logprob: -2.3505547046661377
    3. 'score' → logprob: -8.475554466247559
    4. ' r' → logprob: -9.475554466247559
    5. ' ans' → logprob: -11.475554466247559
    6. 'result' → logprob: -11.600554466247559
    7. 'answer' → logprob: -12.100554466247559
    8. 'ré' → logprob: -12.350554466247559
    9. 'rock' → logprob: -12.725554466247559
    10. 'res' → logprob: -13.100554466247559

Token 740: ' totale' (ID: 52898)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 741: '.
' (ID: 558)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 742: '   ' (ID: 271)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.5117490291595459
    2. '<|end|>' → logprob: -1.386749029159546
    3. '   ' → logprob: -2.386749029159546
    4. ' elif' → logprob: -3.761749029159546
    5. ' ' → logprob: -4.011749267578125
    6. '  ' → logprob: -5.136749267578125
    7. '.' → logprob: -5.511749267578125
    8. '<|end|>' → logprob: -5.886749267578125
    9. '	elif' → logprob: -6.386749267578125
    10. '    ' → logprob: -6.636749267578125

Token 743: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.048921965062618256
    2. '   ' → logprob: -3.298922061920166
    3. ' elif' → logprob: -4.548922061920166
    4. '	elif' → logprob: -8.548921585083008
    5. '.' → logprob: -10.923921585083008
    6. '  ' → logprob: -11.423921585083008
    7. '<|end|>' → logprob: -12.048921585083008
    8. ',' → logprob: -12.173921585083008
    9. ' ' → logprob: -12.423921585083008
    10. ')' → logprob: -13.673921585083008

Token 744: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.2519359588623047
    2. 'i' → logprob: -1.5019359588623047
    3. '   ' → logprob: -12.376935958862305
    4. ' ' → logprob: -13.751935958862305
    5. '	i' → logprob: -14.376935958862305
    6. '  ' → logprob: -15.126935958862305
    7. 'a' → logprob: -15.626935958862305
    8. 's' → logprob: -15.751935958862305
    9. '(i' → logprob: -16.251935958862305
    10. '[i' → logprob: -16.251935958862305

Token 745: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.12693998217582703
    2. '==' → logprob: -2.1269400119781494
    3. ' ' → logprob: -12.37693977355957
    4. '=' → logprob: -12.62693977355957
    5. ' =' → logprob: -13.75193977355957
    6. '=="' → logprob: -14.00193977355957
    7. ' ' → logprob: -14.00193977355957
    8. ' =="' → logprob: -14.75193977355957
    9. 'if' → logprob: -16.00193977355957
    10. '[' → logprob: -16.12693977355957

Token 746: ' "' (ID: 392)
  Prédit: '"s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"s' → logprob: -0.5785943269729614
    2. '"' → logprob: -0.8285943269729614
    3. ' "' → logprob: -6.203594207763672
    4. ''s' → logprob: -8.328594207763672
    5. 's' → logprob: -8.578594207763672
    6. ' s' → logprob: -8.828594207763672
    7. ' ' → logprob: -10.203594207763672
    8. ' p' → logprob: -12.078594207763672
    9. 'p' → logprob: -12.953594207763672
    10. ''' → logprob: -13.578594207763672

Token 747: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.18274226784706116
    2. 'p' → logprob: -2.1827423572540283
    3. '"s' → logprob: -2.9327423572540283
    4. '"' → logprob: -7.307742118835449
    5. ''s' → logprob: -8.43274211883545
    6. ' s' → logprob: -9.80774211883545
    7. ''p' → logprob: -9.80774211883545
    8. ' p' → logprob: -10.93274211883545
    9. '`s' → logprob: -11.30774211883545
    10. ' "' → logprob: -12.55774211883545

Token 748: '":' (ID: 1243)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0005792465526610613
    2. ' :' → logprob: -8.125578880310059
    3. ' +=' → logprob: -8.625578880310059
    4. ':
' → logprob: -10.750578880310059
    5. '   ' → logprob: -10.750578880310059
    6. '+=' → logprob: -11.250578880310059
    7. '+' → logprob: -11.500578880310059
    8. '=' → logprob: -12.000578880310059
    9. ' ==' → logprob: -12.125578880310059
    10. '):' → logprob: -12.250578880310059

Token 749: '     ' (ID: 530)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.05491749197244644
    2. ' ans' → logprob: -3.679917573928833
    3. '   ' → logprob: -3.804917573928833
    4. '       ' → logprob: -5.304917335510254
    5. '	ans' → logprob: -7.554917335510254
    6. 's' → logprob: -8.054917335510254
    7. '(ans' → logprob: -9.679917335510254
    8. '=' → logprob: -11.179917335510254
    9. ' ' → logprob: -11.304917335510254
    10. ' s' → logprob: -11.429917335510254

Token 750: ' #' (ID: 1069)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.006465724669396877
    2. '   ' → logprob: -5.631465911865234
    3. ' ans' → logprob: -6.256465911865234
    4. '       ' → logprob: -7.131465911865234
    5. '	ans' → logprob: -9.006465911865234
    6. '(ans' → logprob: -11.631465911865234
    7. '=' → logprob: -12.256465911865234
    8. '  ' → logprob: -13.131465911865234
    9. ' ' → logprob: -13.881465911865234
    10. '_ans' → logprob: -14.381465911865234

Token 751: ' Sinon' (ID: 154924)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.2555404305458069
    2. ' ans' → logprob: -1.505540370941162
    3. '   ' → logprob: -5.755540370941162
    4. '	ans' → logprob: -8.50554084777832
    5. '(ans' → logprob: -9.13054084777832
    6. '       ' → logprob: -9.13054084777832
    7. '    ' → logprob: -12.25554084777832
    8. ' ' → logprob: -12.38054084777832
    9. ' ' → logprob: -12.63054084777832
    10. '_ans' → logprob: -13.00554084777832

Token 752: ' si' (ID: 1784)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.37074699997901917
    2. '   ' → logprob: -1.7457469701766968
    3. ' ans' → logprob: -2.3707470893859863
    4. 'ans' → logprob: -3.2457470893859863
    5. ':' → logprob: -6.745747089385986
    6. '(ans' → logprob: -7.245747089385986
    7. '	ans' → logprob: -8.245746612548828
    8. '    ' → logprob: -8.495746612548828
    9. '      ' → logprob: -8.870746612548828
    10. '  ' → logprob: -8.995746612548828

Token 753: ' on' (ID: 402)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.47414135932922363
    2. ' i' → logprob: -0.9741413593292236
    3. '   ' → logprob: -10.224141120910645
    4. ' ' → logprob: -11.349141120910645
    5. '(i' → logprob: -11.849141120910645
    6. '	i' → logprob: -12.599141120910645
    7. ' ' → logprob: -13.599141120910645
    8. '  ' → logprob: -13.599141120910645
    9. '[i' → logprob: -13.849141120910645
    10. 'ans' → logprob: -14.224141120910645

Token 754: ' a' (ID: 261)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.4744265079498291
    2. ' ==' → logprob: -0.9744265079498291
    3. '=' → logprob: -8.59942626953125
    4. '=="' → logprob: -8.97442626953125
    5. 's' → logprob: -10.84942626953125
    6. '"' → logprob: -11.72442626953125
    7. ' =="' → logprob: -12.84942626953125
    8. ' ' → logprob: -12.97442626953125
    9. ' =' → logprob: -13.22442626953125
    10. 'i' → logprob: -13.84942626953125

Token 755: ' joué' (ID: 117143)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0605880431830883
    2. '"s' → logprob: -3.1855881214141846
    3. ''s' → logprob: -4.3105878829956055
    4. 's' → logprob: -5.9355878829956055
    5. 'p' → logprob: -7.1855878829956055
    6. ' "' → logprob: -8.060587882995605
    7. ''p' → logprob: -9.560587882995605
    8. '==' → logprob: -9.810587882995605
    9. ' ' → logprob: -10.435587882995605
    10. '=' → logprob: -10.560587882995605

Token 756: ' '' (ID: 461)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.531637966632843
    2. ' "' → logprob: -1.2816379070281982
    3. '"s' → logprob: -2.2816379070281982
    4. ''s' → logprob: -3.7816379070281982
    5. '"k' → logprob: -5.406638145446777
    6. 's' → logprob: -5.906638145446777
    7. ' ' → logprob: -7.406638145446777
    8. 'p' → logprob: -7.656638145446777
    9. 'ans' → logprob: -8.656638145446777
    10. ''p' → logprob: -8.781638145446777

Token 757: 'sc' (ID: 2786)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.08364386111497879
    2. 'p' → logprob: -3.208643913269043
    3. '"s' → logprob: -3.583643913269043
    4. '"' → logprob: -4.708643913269043
    5. ''s' → logprob: -5.833643913269043
    6. ' p' → logprob: -10.458643913269043
    7. ' "' → logprob: -10.833643913269043
    8. ' s' → logprob: -10.958643913269043
    9. '`s' → logprob: -11.208643913269043
    10. ' ' → logprob: -11.458643913269043

Token 758: 'issors' (ID: 69357)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.3256603181362152
    2. 'p' → logprob: -1.3256603479385376
    3. '"s' → logprob: -5.450660228729248
    4. '=' → logprob: -5.950660228729248
    5. 's' → logprob: -6.700660228729248
    6. ''s' → logprob: -7.325660228729248
    7. 'if' → logprob: -7.450660228729248
    8. '"""' → logprob: -7.700660228729248
    9. ''p' → logprob: -7.825660228729248
    10. '">' → logprob: -7.950660228729248

Token 759: ''' (ID: 6)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4445485770702362
    2. '       ' → logprob: -1.1945486068725586
    3. '   ' → logprob: -3.1945486068725586
    4. '):' → logprob: -4.944548606872559
    5. '":' → logprob: -5.694548606872559
    6. ':
' → logprob: -5.944548606872559
    7. '<|end|>' → logprob: -7.694548606872559
    8. '):
' → logprob: -8.819548606872559
    9. '=' → logprob: -8.819548606872559
    10. ')' → logprob: -8.944548606872559

Token 760: ' ("' (ID: 7109)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7975903749465942
    2. '       ' → logprob: -0.7975903749465942
    3. '   ' → logprob: -2.4225902557373047
    4. ' +=' → logprob: -5.672590255737305
    5. ',' → logprob: -5.797590255737305
    6. '<|end|>' → logprob: -6.547590255737305
    7. ' =' → logprob: -7.797590255737305
    8. ':
' → logprob: -8.047590255737305
    9. '=' → logprob: -8.172590255737305
    10. '+=' → logprob: -8.297590255737305

Token 761: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.04607842490077019
    2. '"):
' → logprob: -3.6710784435272217
    3. '")' → logprob: -4.296078205108643
    4. '"):' → logprob: -5.671078205108643
    5. '"' → logprob: -6.921078205108643
    6. 'ans' → logprob: -7.046078205108643
    7. '"s' → logprob: -8.2960786819458
    8. ' s' → logprob: -9.0460786819458
    9. '"),' → logprob: -9.9210786819458
    10. ' ans' → logprob: -10.1710786819458

Token 762: '")
' (ID: 1896)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.20608611404895782
    2. '   ' → logprob: -2.3310861587524414
    3. '):
' → logprob: -2.9560861587524414
    4. '       ' → logprob: -3.7060861587524414
    5. ':' → logprob: -4.706086158752441
    6. '"):' → logprob: -6.456086158752441
    7. ')' → logprob: -6.706086158752441
    8. '"):
' → logprob: -8.456086158752441
    9. ':
' → logprob: -9.331086158752441
    10. '":' → logprob: -9.956086158752441

Token 763: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07016517221927643
    2. 'ans' → logprob: -2.8201651573181152
    3. '   ' → logprob: -4.820165157318115
    4. '	ans' → logprob: -10.070165634155273
    5. ' ans' → logprob: -10.445165634155273
    6. '           ' → logprob: -11.820165634155273
    7. '      ' → logprob: -12.570165634155273
    8. '(ans' → logprob: -12.570165634155273
    9. '     ' → logprob: -12.570165634155273
    10. '```' → logprob: -13.070165634155273

Token 764: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -9.639096970204264e-05
    2. ' ans' → logprob: -9.500096321105957
    3. '   ' → logprob: -10.875096321105957
    4. '	ans' → logprob: -13.000096321105957
    5. 'answer' → logprob: -15.875096321105957
    6. '       ' → logprob: -16.375097274780273
    7. '(ans' → logprob: -16.750097274780273
    8. '  ' → logprob: -17.625097274780273
    9. '_ans' → logprob: -18.375097274780273
    10. ' ' → logprob: -18.500097274780273

Token 765: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.07889066636562347
    2. '+=' → logprob: -2.578890562057495
    3. ' +' → logprob: -14.828890800476074
    4. ']+=' → logprob: -15.078890800476074
    5. ' ' → logprob: -15.953890800476074
    6. '+' → logprob: -16.203889846801758
    7. '+="' → logprob: -17.078889846801758
    8. '+='' → logprob: -17.453889846801758
    9. ' ' → logprob: -17.953889846801758
    10. '+=(' → logprob: -18.453889846801758

Token 766: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -4.572941179503687e-05
    2. ' s' → logprob: -10.000045776367188
    3. 'p' → logprob: -15.250045776367188
    4. '	s' → logprob: -19.750045776367188
    5. '_s' → logprob: -20.500045776367188
    6. '   ' → logprob: -21.250045776367188
    7. ' ' → logprob: -23.250045776367188
    8. ' p' → logprob: -23.250045776367188
    9. '`s' → logprob: -23.375045776367188
    10. '    ' → logprob: -23.625045776367188

Token 767: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0019461298361420631
    2. '<|end|>' → logprob: -7.126945972442627
    3. ' ' → logprob: -7.626945972442627
    4. '  ' → logprob: -7.876945972442627
    5. '    ' → logprob: -9.251946449279785
    6. ')' → logprob: -9.501946449279785
    7. '    
' → logprob: -10.751946449279785
    8. '       ' → logprob: -11.001946449279785
    9. '<|end|>' → logprob: -11.126946449279785
    10. 'elif' → logprob: -11.751946449279785

Token 768: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00018613664724398404
    2. 'elif' → logprob: -9.2501859664917
    3. 'else' → logprob: -9.5001859664917
    4. '.' → logprob: -12.2501859664917
    5. ' else' → logprob: -12.7501859664917
    6. ')' → logprob: -13.2501859664917
    7. '  ' → logprob: -13.3751859664917
    8. ' elif' → logprob: -13.3751859664917
    9. ',' → logprob: -14.5001859664917
    10. '	elif' → logprob: -14.8751859664917

Token 769: ' On' (ID: 2160)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0397791713476181
    2. 'elif' → logprob: -3.6647791862487793
    3. ' ' → logprob: -5.289779186248779
    4. 'else' → logprob: -6.289779186248779
    5. 'ans' → logprob: -6.414779186248779
    6. '  ' → logprob: -6.539779186248779
    7. '<|end|>' → logprob: -6.539779186248779
    8. ' elif' → logprob: -7.664779186248779
    9. ')' → logprob: -7.789779186248779
    10. '.' → logprob: -7.914779186248779

Token 770: ' ajoute' (ID: 91611)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.03821774572134018
    2. '+=' → logprob: -3.288217782974243
    3. '+' → logprob: -9.038217544555664
    4. '=' → logprob: -10.788217544555664
    5. ' ' → logprob: -10.913217544555664
    6. ' +' → logprob: -11.663217544555664
    7. ' ' → logprob: -13.038217544555664
    8. ' =' → logprob: -13.288217544555664
    9. ']+=' → logprob: -13.538217544555664
    10. '+="' → logprob: -13.663217544555664

Token 771: ' le' (ID: 505)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.32522526383399963
    2. ' p' → logprob: -1.3252252340316772
    3. ' ' → logprob: -4.700225353240967
    4. '(p' → logprob: -6.325225353240967
    5. ' 
' → logprob: -7.950225353240967
    6. ' ' → logprob: -9.200224876403809
    7. '(' → logprob: -9.450224876403809
    8. '"' → logprob: -10.075224876403809
    9. '<|end|>' → logprob: -10.325224876403809
    10. '1' → logprob: -10.450224876403809

Token 772: ' score' (ID: 8429)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.00023619852436240762
    2. ' p' → logprob: -8.375236511230469
    3. 'score' → logprob: -13.125236511230469
    4. ' ' → logprob: -13.750236511230469
    5. '<|end|>' → logprob: -13.875236511230469
    6. 's' → logprob: -14.750236511230469
    7. '+' → logprob: -15.250236511230469
    8. '```' → logprob: -15.625236511230469
    9. ')' → logprob: -16.50023651123047
    10. '	p' → logprob: -16.50023651123047

Token 773: ' de' (ID: 334)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.2540852129459381
    2. '   ' → logprob: -2.0040853023529053
    3. ' ' → logprob: -3.3790853023529053
    4. ' +' → logprob: -4.004085063934326
    5. '<|end|>' → logprob: -4.254085063934326
    6. '    ' → logprob: -5.379085063934326
    7. '+' → logprob: -5.379085063934326
    8. '+=' → logprob: -5.629085063934326
    9. '       ' → logprob: -5.879085063934326
    10. ')' → logprob: -6.004085063934326

Token 774: ' '' (ID: 461)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.34858831763267517
    2. ' s' → logprob: -1.2235883474349976
    3. 'p' → logprob: -9.973587989807129
    4. 'ans' → logprob: -10.598587989807129
    5. ' p' → logprob: -10.598587989807129
    6. ' ' → logprob: -10.973587989807129
    7. ' ans' → logprob: -11.348587989807129
    8. '_s' → logprob: -12.723587989807129
    9. 'i' → logprob: -13.598587989807129
    10. '       ' → logprob: -13.723587989807129

Token 775: 'sc' (ID: 2786)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0004386558721307665
    2. 'ans' → logprob: -8.500438690185547
    3. 's' → logprob: -8.875438690185547
    4. ' p' → logprob: -9.500438690185547
    5. 'i' → logprob: -12.000438690185547
    6. '```' → logprob: -13.375438690185547
    7. ' ' → logprob: -13.625438690185547
    8. ')' → logprob: -14.062938690185547
    9. ' ans' → logprob: -14.187938690185547
    10. '1' → logprob: -14.187938690185547

Token 776: 'issors' (ID: 69357)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.08696545660495758
    2. '+=' → logprob: -3.086965560913086
    3. '```' → logprob: -4.836965560913086
    4. '}' → logprob: -5.086965560913086
    5. '++' → logprob: -5.211965560913086
    6. ' +=' → logprob: -5.461965560913086
    7. 'p' → logprob: -5.586965560913086
    8. ')' → logprob: -6.586965560913086
    9. '<|end|>' → logprob: -6.711965560913086
    10. '       ' → logprob: -7.086965560913086

Token 777: ''.
' (ID: 49980)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.41752827167510986
    2. ')' → logprob: -1.1675282716751099
    3. '<|end|>' → logprob: -4.16752815246582
    4. '       ' → logprob: -4.41752815246582
    5. ' )' → logprob: -7.54252815246582
    6. '+' → logprob: -7.54252815246582
    7. '<|end|>' → logprob: -8.16752815246582
    8. ' +=' → logprob: -8.29252815246582
    9. ' +' → logprob: -8.29252815246582
    10. ')+' → logprob: -8.54252815246582

Token 778: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004149987827986479
    2. 'else' → logprob: -6.379149913787842
    3. 'elif' → logprob: -6.504149913787842
    4. ' else' → logprob: -7.379149913787842
    5. ' elif' → logprob: -8.254150390625
    6. '	elif' → logprob: -11.379150390625
    7. ' ' → logprob: -11.504150390625
    8. '.' → logprob: -11.879150390625
    9. '<|end|>' → logprob: -12.004150390625
    10. '   ' → logprob: -12.379150390625

Token 779: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009818539954721928
    2. 'elif' → logprob: -4.7598185539245605
    3. 'else' (adapté à ' else') → logprob: -6.7598185539245605
    4. ' elif' → logprob: -10.509818077087402
    5. ' else' → logprob: -11.384818077087402
    6. '	elif' → logprob: -12.884818077087402
    7. '.' → logprob: -14.009818077087402
    8. '  ' → logprob: -15.009818077087402
    9. ',' → logprob: -15.009818077087402
    10. '```' → logprob: -15.134818077087402

Token 780: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0034078743774443865
    2. ':
' → logprob: -6.003407955169678
    3. ' :' → logprob: -7.128407955169678
    4. '   ' → logprob: -9.62840747833252
    5. ' +=' → logprob: -10.75340747833252
    6. ' :
' → logprob: -11.50340747833252
    7. '  ' → logprob: -12.00340747833252
    8. '+=' → logprob: -12.25340747833252
    9. '       ' → logprob: -12.50340747833252
    10. '=' → logprob: -12.62840747833252

Token 781: '              ' (ID: 4442)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7546407580375671
    2. ' ans' → logprob: -0.7546407580375671
    3. '       ' → logprob: -3.129640817642212
    4. 'ans' → logprob: -4.254640579223633
    5. '	ans' → logprob: -6.879640579223633
    6. '(ans' → logprob: -8.504640579223633
    7. '           ' → logprob: -9.004640579223633
    8. '    ' → logprob: -9.254640579223633
    9. ' ' → logprob: -9.504640579223633
    10. '  ' → logprob: -9.754640579223633

Token 782: ' #' (ID: 1069)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.14376148581504822
    2. 'ans' → logprob: -2.143761396408081
    3. '   ' → logprob: -4.14376163482666
    4. '	ans' → logprob: -8.01876163482666
    5. '       ' → logprob: -8.14376163482666
    6. '(ans' → logprob: -8.64376163482666
    7. '  ' → logprob: -11.39376163482666
    8. ' ' → logprob: -11.51876163482666
    9. '    ' → logprob: -12.39376163482666
    10. '_ans' → logprob: -12.64376163482666

Token 783: ' Sinon' (ID: 154924)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.012163239531219006
    2. '   ' → logprob: -4.512163162231445
    3. ' ans' → logprob: -6.887163162231445
    4. '	ans' → logprob: -10.012163162231445
    5. '(ans' → logprob: -10.762163162231445
    6. ':' → logprob: -10.762163162231445
    7. '       ' → logprob: -12.887163162231445
    8. '  ' → logprob: -13.637163162231445
    9. ' ' → logprob: -13.887163162231445
    10. '_ans' → logprob: -14.262163162231445

Token 784: ',' (ID: 11)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.40031298995018005
    2. '   ' → logprob: -1.1503130197525024
    3. ' ans' → logprob: -4.650312900543213
    4. ':' → logprob: -6.275312900543213
    5. '(ans' → logprob: -7.400312900543213
    6. '	ans' → logprob: -7.400312900543213
    7. '       ' → logprob: -7.650312900543213
    8. '  ' → logprob: -9.400313377380371
    9. '           ' → logprob: -9.650313377380371
    10. '    ' → logprob: -11.025313377380371

Token 785: ' on' (ID: 402)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.038261573761701584
    2. ' ans' → logprob: -3.538261651992798
    3. '   ' → logprob: -4.788261413574219
    4. '	ans' → logprob: -9.538261413574219
    5. '(ans' → logprob: -9.913261413574219
    6. '       ' → logprob: -10.788261413574219
    7. '  ' → logprob: -13.413261413574219
    8. '    ' → logprob: -13.663261413574219
    9. '_ans' → logprob: -13.663261413574219
    10. '           ' → logprob: -14.038261413574219

Token 786: ' a' (ID: 261)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.7334510087966919
    2. '+=' → logprob: -0.7334510087966919
    3. 'ans' → logprob: -3.9834508895874023
    4. '   ' → logprob: -4.233450889587402
    5. '+' → logprob: -5.983450889587402
    6. 'p' → logprob: -6.733450889587402
    7. '=' → logprob: -6.733450889587402
    8. ' ans' → logprob: -6.983450889587402
    9. ' =' → logprob: -9.108450889587402
    10. ' ' → logprob: -9.233450889587402

Token 787: ' joué' (ID: 117143)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.16263823211193085
    2. '+=' → logprob: -3.0376381874084473
    3. ' +=' → logprob: -3.0376381874084473
    4. 'p' → logprob: -3.5376381874084473
    5. ' ans' → logprob: -4.037638187408447
    6. '   ' → logprob: -5.537638187408447
    7. '+p' → logprob: -7.287638187408447
    8. '+' → logprob: -7.537638187408447
    9. '(ans' → logprob: -7.912638187408447
    10. ' p' → logprob: -8.037638664245605

Token 788: ' '' (ID: 461)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.008458547294139862
    2. ' p' → logprob: -5.008458614349365
    3. '"' → logprob: -6.383458614349365
    4. ' "' → logprob: -11.008458137512207
    5. ''p' → logprob: -11.258458137512207
    6. '   ' → logprob: -11.508458137512207
    7. 'ans' → logprob: -11.883458137512207
    8. '(p' → logprob: -13.258458137512207
    9. ''' → logprob: -13.883458137512207
    10. ' ' → logprob: -14.133458137512207

Token 789: 'paper' (ID: 23112)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -2.1008713702030946e-06
    2. ''p' → logprob: -13.875001907348633
    3. '"' → logprob: -14.375001907348633
    4. ' p' → logprob: -15.000001907348633
    5. ''' → logprob: -15.875001907348633
    6. '	p' → logprob: -17.875001907348633
    7. '`' → logprob: -18.250001907348633
    8. '   ' → logprob: -18.500001907348633
    9. 'paper' → logprob: -19.250001907348633
    10. ' ' → logprob: -19.250001907348633

Token 790: ''' (ID: 6)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.25104060769081116
    2. '(' → logprob: -2.3760406970977783
    3. ' (' → logprob: -2.8760406970977783
    4. '+=' → logprob: -3.8760406970977783
    5. '"' → logprob: -4.001040458679199
    6. '   ' → logprob: -4.626040458679199
    7. ' ("' → logprob: -5.001040458679199
    8. '("' → logprob: -6.126040458679199
    9. '<|end|>' → logprob: -6.126040458679199
    10. ')' → logprob: -6.251040458679199

Token 791: ' ("' (ID: 7109)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05128590390086174
    2. '   ' → logprob: -3.426285982131958
    3. ' +=' → logprob: -4.926285743713379
    4. '(' → logprob: -5.551285743713379
    5. '(ans' → logprob: -5.676285743713379
    6. '+=' → logprob: -6.801285743713379
    7. '      ' → logprob: -8.551285743713379
    8. ' (' → logprob: -8.801285743713379
    9. '<|end|>' → logprob: -8.801285743713379
    10. '           ' → logprob: -8.926285743713379

Token 792: 'p' (ID: 79)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.8626452684402466
    2. 'p' → logprob: -1.2376452684402466
    3. '")' → logprob: -1.3626452684402466
    4. '("' → logprob: -4.737645149230957
    5. '"' → logprob: -4.862645149230957
    6. ')' → logprob: -5.362645149230957
    7. ' ("' → logprob: -5.612645149230957
    8. '(' → logprob: -6.237645149230957
    9. ' (' → logprob: -6.487645149230957
    10. ' ")' → logprob: -6.612645149230957

Token 793: '")
' (ID: 1896)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009723623283207417
    2. '):' → logprob: -5.509723663330078
    3. '       ' → logprob: -5.634723663330078
    4. '   ' → logprob: -6.384723663330078
    5. ':' → logprob: -9.134723663330078
    6. '")' → logprob: -9.384723663330078
    7. '):
' → logprob: -10.259723663330078
    8. ')
' → logprob: -10.509723663330078
    9. ' )' → logprob: -10.634723663330078
    10. '<|end|>' → logprob: -11.009723663330078

Token 794: '       ' (ID: 309)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.5843847393989563
    2. '   ' → logprob: -0.8343847393989563
    3. ' ans' → logprob: -4.834384918212891
    4. '	ans' → logprob: -7.834384918212891
    5. '       ' → logprob: -10.08438491821289
    6. '(ans' → logprob: -11.20938491821289
    7. '  ' → logprob: -12.45938491821289
    8. ' ' → logprob: -13.45938491821289
    9. '    ' → logprob: -14.45938491821289
    10. '```' → logprob: -15.20938491821289

Token 795: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -4.961759259458631e-06
    2. ' ans' → logprob: -12.500004768371582
    3. '   ' → logprob: -13.750004768371582
    4. '	ans' → logprob: -16.0000057220459
    5. '(ans' → logprob: -19.8750057220459
    6. '       ' → logprob: -21.2500057220459
    7. 'Ans' → logprob: -21.5000057220459
    8. '  ' → logprob: -21.8750057220459
    9. '_ans' → logprob: -22.1250057220459
    10. ' ' → logprob: -22.5000057220459

Token 796: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.20141343772411346
    2. ' +=' → logprob: -1.7014133930206299
    3. ']+=' → logprob: -15.70141315460205
    4. '+="' → logprob: -17.826414108276367
    5. '+=(' → logprob: -17.951414108276367
    6. '+='' → logprob: -18.701414108276367
    7. ' ' → logprob: -19.576414108276367
    8. '+' → logprob: -19.826414108276367
    9. '=' → logprob: -19.951414108276367
    10. ' ' → logprob: -20.576414108276367

Token 797: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -5.836499985889532e-05
    2. ' p' → logprob: -9.7500581741333
    3. '	p' → logprob: -20.000059127807617
    4. '   ' → logprob: -20.375059127807617
    5. '_p' → logprob: -21.375059127807617
    6. ' ' → logprob: -21.750059127807617
    7. '  ' → logprob: -21.750059127807617
    8. '(p' → logprob: -23.250059127807617
    9. '*p' → logprob: -23.500059127807617
    10. '+' → logprob: -23.625059127807617

Token 798: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.345240831375122
    2. ')' → logprob: -1.720240831375122
    3. '       ' → logprob: -1.970240831375122
    4. '#' → logprob: -1.970240831375122
    5. ' ' → logprob: -2.220240831375122
    6. '<|end|>' → logprob: -2.345240831375122
    7. '  ' → logprob: -4.595240592956543
    8. 'print' → logprob: -4.595240592956543
    9. '        ' → logprob: -5.095240592956543
    10. '
' → logprob: -5.095240592956543

Token 799: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5831314325332642
    2. '#' (adapté à ' #') → logprob: -0.8331314325332642
    3. '#print' → logprob: -5.833131313323975
    4. '       ' → logprob: -7.333131313323975
    5. ')' → logprob: -7.333131313323975
    6. 'ans' → logprob: -7.458131313323975
    7. '   ' → logprob: -7.458131313323975
    8. ' #' → logprob: -7.833131313323975
    9. ' ' → logprob: -8.083131790161133
    10. '  ' → logprob: -8.333131790161133

Token 800: ' On' (ID: 2160)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -4.320199877838604e-07
    2. ' ans' → logprob: -15.375
    3. '   ' → logprob: -16.625
    4. '(ans' → logprob: -17.25
    5. '	ans' → logprob: -17.625
    6. '       ' → logprob: -18.125
    7. '           ' → logprob: -18.125
    8. '#' → logprob: -18.125
    9. '```' → logprob: -20.25
    10. '0' → logprob: -20.5

Token 801: ' ajoute' (ID: 91611)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.018154039978981018
    2. ' +=' → logprob: -4.018154144287109
    3. ']+=' → logprob: -12.64315414428711
    4. '=' → logprob: -15.26815414428711
    5. 'ans' → logprob: -15.26815414428711
    6. '+' → logprob: -15.64315414428711
    7. '+="' → logprob: -16.39315414428711
    8. '```' → logprob: -16.76815414428711
    9. ' ' → logprob: -16.89315414428711
    10. '+=(' → logprob: -17.26815414428711

Token 802: ' le' (ID: 505)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.22563618421554565
    2. ' p' → logprob: -1.6006362438201904
    3. ' the' → logprob: -9.72563648223877
    4. ' ans' → logprob: -9.97563648223877
    5. ' ' → logprob: -10.35063648223877
    6. '(p' → logprob: -10.60063648223877
    7. '       ' → logprob: -10.72563648223877
    8. 'ans' → logprob: -11.10063648223877
    9. ' a' → logprob: -12.60063648223877
    10. 'the' → logprob: -12.85063648223877

Token 803: ' score' (ID: 8429)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'score' → logprob: -0.21960467100143433
    2. ' score' → logprob: -1.719604730606079
    3. 'p' → logprob: -5.0946044921875
    4. ' ' → logprob: -5.2196044921875
    5. '<|end|>' → logprob: -6.3446044921875
    6. ' scores' → logprob: -7.4696044921875
    7. 'scores' → logprob: -7.7196044921875
    8. 's' → logprob: -7.7196044921875
    9. ' p' → logprob: -7.8446044921875
    10. '_score' → logprob: -7.8446044921875

Token 804: ' de' (ID: 334)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -1.1087037324905396
    2. ' +' → logprob: -1.2337037324905396
    3. '+' → logprob: -1.3587037324905396
    4. ' ' → logprob: -2.60870361328125
    5. ')' → logprob: -4.23370361328125
    6. '<|end|>' → logprob: -4.35870361328125
    7. '+=' → logprob: -5.35870361328125
    8. '.' → logprob: -5.98370361328125
    9. ' )' → logprob: -6.35870361328125
    10. ' for' → logprob: -6.48370361328125

Token 805: ' '' (ID: 461)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.005513823125511408
    2. 'paper' → logprob: -5.505513668060303
    3. ' p' → logprob: -7.880513668060303
    4. '[p' → logprob: -8.380514144897461
    5. 'ans' → logprob: -8.505514144897461
    6. 'a' → logprob: -8.755514144897461
    7. ' paper' → logprob: -9.130514144897461
    8. ' ' → logprob: -9.505514144897461
    9. '(p' → logprob: -9.630514144897461
    10. 's' → logprob: -10.505514144897461

Token 806: 'paper' (ID: 23112)
  Prédit: 'paper'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'paper' → logprob: -0.014186188578605652
    2. 'p' → logprob: -4.264186382293701
    3. ' paper' → logprob: -11.264185905456543
    4. 'papier' → logprob: -12.139185905456543
    5. 'pap' → logprob: -12.889185905456543
    6. 'Paper' → logprob: -14.264185905456543
    7. 'pa' → logprob: -14.764185905456543
    8. 'papers' → logprob: -15.264185905456543
    9. '.paper' → logprob: -15.514185905456543
    10. '-paper' → logprob: -16.51418685913086

Token 807: ''.
' (ID: 49980)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.016078947111964226
    2. '<|end|>' → logprob: -5.391078948974609
    3. '}' → logprob: -5.516078948974609
    4. '.' → logprob: -6.516078948974609
    5. '+' → logprob: -6.516078948974609
    6. '"' → logprob: -7.016078948974609
    7. '```' → logprob: -7.016078948974609
    8. ']' → logprob: -7.391078948974609
    9. '   ' → logprob: -8.01607894897461
    10. '")' → logprob: -8.26607894897461

Token 808: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0004822697374038398
    2. '#' → logprob: -7.875482082366943
    3. '#print' → logprob: -10.375482559204102
    4. '<|end|>' → logprob: -10.875482559204102
    5. ' print' → logprob: -11.125482559204102
    6. 'a' → logprob: -11.125482559204102
    7. 'for' → logprob: -12.125482559204102
    8. 'pr' → logprob: -13.125482559204102
    9. '```' → logprob: -13.250482559204102
    10. '.' → logprob: -13.250482559204102

Token 809: ' Note' (ID: 12225)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.8789383830153383e-05
    2. '#' → logprob: -11.625019073486328
    3. ' print' → logprob: -12.250019073486328
    4. '#print' → logprob: -12.625019073486328
    5. '<|end|>' → logprob: -14.125019073486328
    6. 'pr' → logprob: -14.750019073486328
    7. 'for' → logprob: -16.250019073486328
    8. 'a' → logprob: -16.250019073486328
    9. 'if' → logprob: -16.500019073486328
    10. '.' → logprob: -17.000019073486328

Token 810: ' :' (ID: 712)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 811: ' À' (ID: 27643)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.30082598328590393
    2. 'print' → logprob: -1.5508259534835815
    3. ' #' → logprob: -3.800826072692871
    4. ' print' → logprob: -4.550826072692871
    5. '<|end|>' → logprob: -4.675826072692871
    6. ' ' → logprob: -6.800826072692871
    7. ' for' → logprob: -7.050826072692871
    8. '```' → logprob: -7.425826072692871
    9. '#print' → logprob: -7.925826072692871
    10. '<|end|>' → logprob: -8.175826072692871

Token 812: ' ce' (ID: 2357)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.11938884854316711
    2. 'print' → logprob: -2.2443888187408447
    3. ' ce' → logprob: -6.119389057159424
    4. 'this' → logprob: -7.244389057159424
    5. 'l' → logprob: -7.744389057159424
    6. ' #' → logprob: -8.119388580322266
    7. ' présent' → logprob: -8.369388580322266
    8. ' print' → logprob: -8.369388580322266
    9. '"""' → logprob: -8.619388580322266
    10. 'This' → logprob: -8.619388580322266

Token 813: ' stade' (ID: 113944)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7398888468742371
    2. ' ' → logprob: -1.7398889064788818
    3. ' #' → logprob: -2.489888906478882
    4. '<|end|>' → logprob: -2.864888906478882
    5. 'certain' → logprob: -3.614888906478882
    6. ' point' → logprob: -3.614888906478882
    7. 's' → logprob: -4.239888668060303
    8. 'point' → logprob: -4.239888668060303
    9. 'n' → logprob: -4.614888668060303
    10. '_' → logprob: -4.739888668060303

Token 814: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 815: ' tous' (ID: 10688)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.03162701800465584
    2. 'print' → logprob: -4.031627178192139
    3. ' #' → logprob: -5.656627178192139
    4. 'ans' → logprob: -5.781627178192139
    5. '<|end|>' → logprob: -6.281627178192139
    6. 'a' → logprob: -7.031627178192139
    7. 'pass' → logprob: -7.406627178192139
    8. ' ans' → logprob: -7.531627178192139
    9. ' ' → logprob: -7.781627178192139
    10. '#print' → logprob: -7.906627178192139

Token 816: ' les' (ID: 1341)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.4170919358730316
    2. '<|end|>' → logprob: -1.542091965675354
    3. 'tokens' → logprob: -4.0420918464660645
    4. '
' → logprob: -4.2920918464660645
    5. ' #' → logprob: -4.2920918464660645
    6. ' ' → logprob: -4.4170918464660645
    7. 'print' → logprob: -4.4170918464660645
    8. ' espaces' → logprob: -4.7920918464660645
    9. ' tokens' → logprob: -5.0420918464660645
    10. ' les' → logprob: -5.1670918464660645

Token 817: ' coups' (ID: 98942)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8325992226600647
    2. 'esp' → logprob: -1.95759916305542
    3. ' espaces' → logprob: -2.20759916305542
    4. 'es' → logprob: -2.45759916305542
    5. 'ans' → logprob: -3.08259916305542
    6. 'tokens' → logprob: -3.95759916305542
    7. '<|end|>' → logprob: -4.08259916305542
    8. ' #' → logprob: -4.45759916305542
    9. 'd' → logprob: -4.70759916305542
    10. 'print' → logprob: -4.83259916305542

Token 818: ' sont' (ID: 5242)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 819: ' trait' (ID: 15458)
  Prédit: 'valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'valid' → logprob: -0.7788220643997192
    2. 'com' → logprob: -0.9038220643997192
    3. ' compt' → logprob: -3.1538219451904297
    4. 'accept' → logprob: -3.6538219451904297
    5. 'aj' → logprob: -3.9038219451904297
    6. 'calcul' → logprob: -4.90382194519043
    7. 'val' → logprob: -5.02882194519043
    8. 'cho' → logprob: -5.15382194519043
    9. '#' → logprob: -5.15382194519043
    10. 'addition' → logprob: -5.90382194519043

Token 820: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.009383565746247768
    2. '#' → logprob: -5.009383678436279
    3. 'a' → logprob: -7.134383678436279
    4. '```' → logprob: -7.884383678436279
    5. 'es' → logprob: -8.259383201599121
    6. 'except' → logprob: -8.634383201599121
    7. 's' → logprob: -8.759383201599121
    8. 'é' → logprob: -9.634383201599121
    9. 'nés' → logprob: -9.634383201599121
    10. '   ' → logprob: -9.759383201599121

Token 821: ' comme' (ID: 7971)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 822: ' indépend' (ID: 68392)
  Prédit: 'valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'valid' → logprob: -1.0586538314819336
    2. 'correct' → logprob: -1.3086538314819336
    3. 'val' → logprob: -1.4336538314819336
    4. 'ind' → logprob: -2.5586538314819336
    5. 'g' → logprob: -3.0586538314819336
    6. 'poss' → logprob: -5.683653831481934
    7. 'optim' → logprob: -5.808653831481934
    8. 'pot' → logprob: -6.558653831481934
    9. ' val' → logprob: -6.933653831481934
    10. 'import' → logprob: -6.933653831481934

Token 823: 'ants' (ID: 2027)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.09418754279613495
    2. 'ans' → logprob: -2.7191874980926514
    3. 'a' → logprob: -5.2191877365112305
    4. ' #' → logprob: -5.3441877365112305
    5. 'e' → logprob: -6.2191877365112305
    6. 'else' → logprob: -6.2191877365112305
    7. ' ans' → logprob: -6.4691877365112305
    8. '(ans' → logprob: -7.0941877365112305
    9. 'if' → logprob: -7.3441877365112305
    10. ')' → logprob: -7.3441877365112305

Token 824: '.' (ID: 13)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 825: ' On' (ID: 2160)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6275986433029175
    2. '#' → logprob: -1.0025986433029175
    3. '<|end|>' → logprob: -2.627598762512207
    4. 'print' → logprob: -5.002598762512207
    5. 'from' → logprob: -5.002598762512207
    6. 'b' → logprob: -6.377598762512207
    7. 'if' → logprob: -6.877598762512207
    8. 'ans' → logprob: -7.002598762512207
    9. '#print' → logprob: -7.127598762512207
    10. ')' → logprob: -7.127598762512207

Token 826: ' va' (ID: 3423)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.2201152890920639
    2. ' #' → logprob: -1.845115303993225
    3. ' need' → logprob: -4.4701151847839355
    4. ' n' → logprob: -5.2201151847839355
    5. '
' → logprob: -5.3451151847839355
    6. ' devra' → logprob: -5.9701151847839355
    7. '<|end|>' → logprob: -6.3451151847839355
    8. ' doit' → logprob: -6.4701151847839355
    9. 'need' → logprob: -6.5951151847839355
    10. ' ' → logprob: -6.8451151847839355

Token 827: ' comp' (ID: 1050)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.057949040085077286
    2. 'continue' → logprob: -4.182949066162109
    3. 'a' → logprob: -4.307949066162109
    4. ' #' → logprob: -5.307949066162109
    5. 'replace' → logprob: -5.432949066162109
    6. '```' → logprob: -6.057949066162109
    7. 'print' → logprob: -6.557949066162109
    8. 'split' → logprob: -6.932949066162109
    9. 'modify' → logprob: -7.182949066162109
    10. ' ' → logprob: -7.182949066162109

Token 828: 'enser' (ID: 114019)
  Prédit: 'lete'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lete' → logprob: -1.0605875253677368
    2. 'le' → logprob: -1.5605875253677368
    3. 'lé' → logprob: -1.9355875253677368
    4. 'l' → logprob: -2.3105874061584473
    5. 'lement' → logprob: -2.4355874061584473
    6. 'ler' → logprob: -3.8105874061584473
    7. 'let' → logprob: -3.9355874061584473
    8. 'lex' → logprob: -4.685587406158447
    9. '```' → logprob: -4.685587406158447
    10. 'enser' → logprob: -4.935587406158447

Token 829: ' ensuite' (ID: 39713)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7124166488647461
    2. 'for' → logprob: -0.9624166488647461
    3. '#' → logprob: -2.337416648864746
    4. ' #' → logprob: -4.212416648864746
    5. ' maintenant' → logprob: -5.962416648864746
    6. ' pour' → logprob: -6.212416648864746
    7. ' la' → logprob: -6.712416648864746
    8. ' ' → logprob: -6.837416648864746
    9. '<|end|>' → logprob: -6.837416648864746
    10. 'a' → logprob: -6.962416648864746

Token 830: ' si' (ID: 1784)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6931214332580566
    2. '<|end|>' → logprob: -0.9431214332580566
    3. '
' → logprob: -3.1931214332580566
    4. ' ' → logprob: -3.6931214332580566
    5. '.' → logprob: -4.568121433258057
    6. 'a' → logprob: -4.693121433258057
    7. ' for' → logprob: -5.193121433258057
    8. ' #' → logprob: -5.193121433258057
    9. 'for' → logprob: -5.568121433258057
    10. ' 
' → logprob: -5.943121433258057

Token 831: ' la' (ID: 557)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.37726908922195435
    2. 'k' → logprob: -1.3772690296173096
    3. ' i' → logprob: -3.8772690296173096
    4. 'i' → logprob: -4.627269268035889
    5. '#' → logprob: -5.127269268035889
    6. 'len' → logprob: -5.752269268035889
    7. ' des' → logprob: -5.877269268035889
    8. ' n' → logprob: -5.877269268035889
    9. 'not' → logprob: -6.002269268035889
    10. 'n' → logprob: -6.252269268035889

Token 832: ' contr' (ID: 6030)
  Prédit: 'problem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'problem' → logprob: -0.8612135052680969
    2. 'k' → logprob: -1.4862134456634521
    3. ' problem' → logprob: -1.9862134456634521
    4. '#' → logprob: -2.611213445663452
    5. ' k' → logprob: -3.736213445663452
    6. 'r' → logprob: -4.361213684082031
    7. ' prochaine' → logprob: -4.611213684082031
    8. ' ' → logprob: -4.736213684082031
    9. 't' → logprob: -4.861213684082031
    10. ' probl' → logprob: -5.236213684082031

Token 833: 'ainte' (ID: 48434)
  Prédit: 'ainte'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ainte' → logprob: -0.030656682327389717
    2. 'aint' → logprob: -3.905656576156616
    3. '#' → logprob: -4.905656814575195
    4. 'ôle' → logprob: -7.155656814575195
    5. 'a' → logprob: -7.655656814575195
    6. 'aine' → logprob: -7.780656814575195
    7. 'raint' → logprob: -8.530656814575195
    8. 'ain' → logprob: -8.780656814575195
    9. 'aints' → logprob: -8.905656814575195
    10. 'e' → logprob: -9.280656814575195

Token 834: ' de' (ID: 334)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7404152750968933
    2. 'de' → logprob: -1.240415334701538
    3. ' de' → logprob: -1.740415334701538
    4. 'des' → logprob: -4.240415096282959
    5. 'n' → logprob: -4.365415096282959
    6. ' #' → logprob: -5.240415096282959
    7. ' des' → logprob: -5.365415096282959
    8. 'd' → logprob: -5.490415096282959
    9. 'k' → logprob: -5.865415096282959
    10. ' of' → logprob: -6.240415096282959

Token 835: ' non' (ID: 2893)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.07135456800460815
    2. ' k' → logprob: -3.321354627609253
    3. 'dou' → logprob: -4.821354389190674
    4. '"k' → logprob: -5.071354389190674
    5. ' répét' → logprob: -5.071354389190674
    6. '"' → logprob: -6.071354389190674
    7. 'double' → logprob: -6.196354389190674
    8. 'dup' → logprob: -6.821354389190674
    9. 're' → logprob: -6.821354389190674
    10. 'duplicates' → logprob: -7.321354389190674

Token 836: '-r' (ID: 6335)
  Prédit: ' répét'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' répét' → logprob: -0.3046868145465851
    2. 'ré' → logprob: -1.5546867847442627
    3. 're' → logprob: -3.6796867847442627
    4. ' rép' → logprob: -4.929687023162842
    5. 'repeat' → logprob: -5.054687023162842
    6. 'r' → logprob: -5.554687023162842
    7. 'adj' → logprob: -6.304687023162842
    8. '_repeat' → logprob: -6.929687023162842
    9. 'contin' → logprob: -7.054687023162842
    10. 'con' → logprob: -7.179687023162842

Token 837: 'ép' (ID: 35980)
  Prédit: 'ep'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ep' → logprob: -0.7273996472358704
    2. 'e' → logprob: -0.8523996472358704
    3. '#' → logprob: -3.1023995876312256
    4. 'p' → logprob: -3.3523995876312256
    5. 'a' → logprob: -5.977399826049805
    6. 'estr' → logprob: -6.102399826049805
    7. 'ape' → logprob: -6.727399826049805
    8. 'peat' → logprob: -6.852399826049805
    9. 'ép' → logprob: -7.477399826049805
    10. 'pet' → logprob: -7.977399826049805

Token 838: 'ét' (ID: 3913)
  Prédit: 'éter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'éter' → logprob: -0.374997079372406
    2. 'eter' → logprob: -1.8749971389770508
    3. 'et' → logprob: -2.749997138977051
    4. 'e' → logprob: -3.374997138977051
    5. 'ete' → logprob: -3.624997138977051
    6. 'eteer' → logprob: -4.249997138977051
    7. 'eting' → logprob: -5.374997138977051
    8. 'é' → logprob: -5.624997138977051
    9. 'ition' → logprob: -5.624997138977051
    10. 'ét' → logprob: -5.999997138977051

Token 839: 'ition' (ID: 868)
  Prédit: 'ition'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ition' → logprob: -0.5643290877342224
    2. 'et' → logprob: -1.1893291473388672
    3. 'é' → logprob: -2.689329147338867
    4. 'ét' → logprob: -3.189329147338867
    5. 'étation' → logprob: -5.189329147338867
    6. 'éter' → logprob: -5.564329147338867
    7. 'e' → logprob: -5.939329147338867
    8. 'lication' → logprob: -6.564329147338867
    9. 'eter' → logprob: -7.189329147338867
    10. 'ection' → logprob: -7.314329147338867

Token 840: ' k' (ID: 372)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.33055585622787476
    2. ' applies' → logprob: -2.5805559158325195
    3. 'for' → logprob: -3.0805559158325195
    4. 'n' → logprob: -3.3305559158325195
    5. ' #' → logprob: -3.4555559158325195
    6. ' for' → logprob: -4.3305559158325195
    7. 'sur' → logprob: -4.5805559158325195
    8. ' n' → logprob: -4.5805559158325195
    9. 'prev' → logprob: -4.8305559158325195
    10. 'possible' → logprob: -4.9555559158325195

Token 841: ' s' (ID: 265)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6258983612060547
    2. 'for' → logprob: -0.8758983612060547
    3. 'a' → logprob: -4.625898361206055
    4. 'を' → logprob: -5.125898361206055
    5. 'で' → logprob: -5.250898361206055
    6. 'の' → logprob: -5.875898361206055
    7. 'は' → logprob: -6.000898361206055
    8. '
' → logprob: -6.125898361206055
    9. '分' → logprob: -6.125898361206055
    10. '```' → logprob: -6.375898361206055

Token 842: ''ap' (ID: 31362)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.02208545245230198
    2. 'é' → logprob: -5.147085666656494
    3. 'ép' → logprob: -5.647085666656494
    4. 'p' → logprob: -6.272085666656494
    5. 'ète' → logprob: -6.647085666656494
    6. 'éc' → logprob: -6.897085666656494
    7. 'ête' → logprob: -7.272085666656494
    8. 'éd' → logprob: -7.272085666656494
    9. 'ét' → logprob: -7.397085666656494
    10. 'és' → logprob: -7.772085666656494

Token 843: 'plique' (ID: 71193)
  Prédit: 'pliquer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pliquer' → logprob: -0.5664730072021484
    2. 'plique' → logprob: -0.9414730072021484
    3. 'pli' → logprob: -4.566473007202148
    4. 'pl' → logprob: -4.691473007202148
    5. 'par' → logprob: -4.816473007202148
    6. 'ply' → logprob: -4.941473007202148
    7. 'para' → logprob: -6.566473007202148
    8. 'p' → logprob: -6.691473007202148
    9. 'plier' → logprob: -7.816473007202148
    10. 'plied' → logprob: -7.816473007202148

Token 844: '.

' (ID: 364)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9683071374893188
    2. 'a' → logprob: -1.3433071374893188
    3. '<|end|>' → logprob: -1.5933071374893188
    4. '
' → logprob: -1.9683071374893188
    5. '.' → logprob: -5.843307018280029
    6. '<|end|>' → logprob: -6.093307018280029
    7. ' a' → logprob: -6.843307018280029
    8. 'b' → logprob: -6.843307018280029
    9. 's' → logprob: -7.093307018280029
    10. '  
' → logprob: -7.093307018280029

Token 845: '#' (ID: 2)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' → logprob: -1.2519171237945557
    2. 'dp' → logprob: -1.5019171237945557
    3. 'b' → logprob: -1.7519171237945557
    4. 'a' → logprob: -2.2519171237945557
    5. '#' → logprob: -2.5019171237945557
    6. 'actions' → logprob: -2.8769171237945557
    7. 'ans' → logprob: -3.6269171237945557
    8. 'res' → logprob: -4.126916885375977
    9. 'from' → logprob: -4.376916885375977
    10. 'result' → logprob: -5.626916885375977

Token 846: ' Pour' (ID: 13931)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'used' → logprob: -1.1104075908660889
    2. '#' → logprob: -1.7354075908660889
    3. 'b' → logprob: -1.9854075908660889
    4. 'a' → logprob: -2.735407590866089
    5. 'actions' → logprob: -2.735407590866089
    6. 'ans' → logprob: -2.860407590866089
    7. 'if' → logprob: -2.985407590866089
    8. 'res' → logprob: -3.235407590866089
    9. 'result' → logprob: -3.860407590866089
    10. 'print' → logprob: -4.110407829284668

Token 847: ' gérer' (ID: 86786)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.043443065136671066
    2. ' i' → logprob: -3.168442964553833
    3. '_' → logprob: -9.043442726135254
    4. 'j' → logprob: -9.168442726135254
    5. 'idx' → logprob: -9.668442726135254
    6. '#' → logprob: -10.043442726135254
    7. 'index' → logprob: -11.293442726135254
    8. '_i' → logprob: -11.668442726135254
    9. ' idx' → logprob: -11.668442726135254
    10. 'maint' → logprob: -11.793442726135254

Token 848: ' la' (ID: 557)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6822304129600525
    2. ' i' → logprob: -0.9322304129600525
    3. '_' → logprob: -2.5572304725646973
    4. ' _' → logprob: -4.932230472564697
    5. 'idx' → logprob: -5.682230472564697
    6. ' idx' → logprob: -5.682230472564697
    7. 'k' → logprob: -6.057230472564697
    8. ' k' → logprob: -6.432230472564697
    9. '_i' → logprob: -7.307230472564697
    10. ' ' → logprob: -7.807230472564697

Token 849: ' contr' (ID: 6030)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.20304907858371735
    2. 'i' → logprob: -1.7030490636825562
    3. '_' → logprob: -7.328049182891846
    4. ' k' → logprob: -8.828048706054688
    5. ' idx' → logprob: -9.328048706054688
    6. 'k' → logprob: -9.328048706054688
    7. '```' → logprob: -9.328048706054688
    8. 'idx' → logprob: -9.453048706054688
    9. 'constraint' → logprob: -10.078048706054688
    10. ' _' → logprob: -10.078048706054688

Token 850: 'ainte' (ID: 48434)
  Prédit: 'ainte'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ainte' → logprob: -0.007140621542930603
    2. 'a' → logprob: -5.382140636444092
    3. 'aint' → logprob: -6.757140636444092
    4. '#' → logprob: -6.882140636444092
    5. '```' → logprob: -9.382140159606934
    6. 'ain' → logprob: -9.507140159606934
    7. '
' → logprob: -10.257140159606934
    8. '``' → logprob: -10.882140159606934
    9. 'e' → logprob: -11.257140159606934
    10. 'i' → logprob: -11.507140159606934

Token 851: ' :' (ID: 712)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 852: ' on' (ID: 402)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.28472283482551575
    2. 'dp' → logprob: -2.1597228050231934
    3. 'if' → logprob: -3.1597228050231934
    4. 'for' → logprob: -3.4097228050231934
    5. 'last' → logprob: -4.409722805023193
    6. '#' → logprob: -4.784722805023193
    7. 'visited' → logprob: -4.909722805023193
    8. 'ans' → logprob: -5.034722805023193
    9. ' used' → logprob: -5.659722805023193
    10. 'b' → logprob: -5.784722805023193

Token 853: ' ne' (ID: 453)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0462467670440674
    2. '=' → logprob: -1.5462467670440674
    3. 'for' → logprob: -1.7962467670440674
    4. 'dp' → logprob: -2.9212467670440674
    5. 'ans' → logprob: -3.2962467670440674
    6. ' for' → logprob: -3.4212467670440674
    7. '#' → logprob: -3.5462467670440674
    8. 'used' → logprob: -3.7962467670440674
    9. 'visited' → logprob: -3.9212467670440674
    10. 'if' → logprob: -4.421246528625488

Token 854: ' peut' (ID: 9216)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.46086063981056213
    2. ' =' → logprob: -1.8358606100082397
    3. '=' → logprob: -2.3358607292175293
    4. 'used' → logprob: -3.5858607292175293
    5. 'rem' → logprob: -3.5858607292175293
    6. '#' → logprob: -3.7108607292175293
    7. 'mod' → logprob: -5.710860729217529
    8. 'visited' → logprob: -5.710860729217529
    9. ' for' → logprob: -5.960860729217529
    10. 'n' → logprob: -5.960860729217529

Token 855: ' pas' (ID: 2173)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.1958229541778564
    2. 'pas' → logprob: -1.4458229541778564
    3. 'for' → logprob: -1.6958229541778564
    4. ' ' → logprob: -2.9458229541778564
    5. ' pas' → logprob: -2.9458229541778564
    6. 'jou' → logprob: -3.0708229541778564
    7. ' rép' → logprob: -3.6958229541778564
    8. ' jouer' → logprob: -3.9458229541778564
    9. 'a' → logprob: -4.445822715759277
    10. 'repeat' → logprob: -4.570822715759277

Token 856: ' gagner' (ID: 64227)
  Prédit: 'jou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'jou' → logprob: -0.4690271317958832
    2. 'cho' → logprob: -2.094027042388916
    3. 'ré' → logprob: -2.469027042388916
    4. 'g' → logprob: -3.344027042388916
    5. 'repeat' → logprob: -3.344027042388916
    6. ' jouer' → logprob: -3.594027042388916
    7. 'util' → logprob: -4.469027042388916
    8. ' rép' → logprob: -4.844027042388916
    9. 're' → logprob: -5.094027042388916
    10. 'for' → logprob: -5.219027042388916

Token 857: ' en' (ID: 469)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.2710953950881958
    2. 'k' → logprob: -1.7710953950881958
    3. ' ' → logprob: -2.2710952758789062
    4. ' deux' → logprob: -2.5210952758789062
    5. '```' → logprob: -3.2710952758789062
    6. 'à' → logprob: -3.6460952758789062
    7. ' k' → logprob: -3.7710952758789062
    8. 'de' → logprob: -3.8960952758789062
    9. 'sur' → logprob: -3.8960952758789062
    10. 'avec' → logprob: -4.021095275878906

Token 858: ' utilisant' (ID: 92474)
  Prédit: 'jou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'jou' → logprob: -0.41782012581825256
    2. 'k' → logprob: -1.2928200960159302
    3. 'de' → logprob: -3.0428202152252197
    4. ' jou' → logprob: -5.292819976806641
    5. 'adj' → logprob: -6.542819976806641
    6. 'ayant' → logprob: -6.667819976806641
    7. 'une' → logprob: -6.792819976806641
    8. 'cho' → logprob: -6.917819976806641
    9. '```' → logprob: -7.292819976806641
    10. 'plac' → logprob: -7.417819976806641

Token 859: ' le' (ID: 505)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.6867100596427917
    2. 'a' → logprob: -1.6867101192474365
    3. 'la' → logprob: -2.0617101192474365
    4. 'k' → logprob: -3.1867101192474365
    5. 'i' → logprob: -3.5617101192474365
    6. 'le' → logprob: -3.9367101192474365
    7. 'une' → logprob: -4.311709880828857
    8. 'import' → logprob: -4.311709880828857
    9. ' deux' → logprob: -4.436709880828857
    10. '```' → logprob: -4.936709880828857

Token 860: ' même' (ID: 9679)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.02902204357087612
    2. ' même' → logprob: -3.654021978378296
    3. '```' → logprob: -7.029022216796875
    4. 'same' → logprob: -7.154022216796875
    5. 'Même' → logprob: -7.904022216796875
    6. 'mé' → logprob: -8.154022216796875
    7. 'import' → logprob: -9.029022216796875
    8. 'even' → logprob: -9.404022216796875
    9. 'k' → logprob: -9.654022216796875
    10. 'mem' → logprob: -10.529022216796875

Token 861: ' coup' (ID: 25465)
  Prédit: 'move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'move' → logprob: -0.1848808228969574
    2. 'c' → logprob: -3.1848807334899902
    3. 'type' → logprob: -3.5598807334899902
    4. 'for' → logprob: -3.5598807334899902
    5. 'char' → logprob: -3.9348807334899902
    6. ' coup' → logprob: -4.93488073348999
    7. 'action' → logprob: -5.30988073348999
    8. 'choice' → logprob: -5.43488073348999
    9. '```' → logprob: -5.43488073348999
    10. 'coin' → logprob: -5.93488073348999

Token 862: ' que' (ID: 661)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0718334913253784
    2. 'k' → logprob: -1.1968334913253784
    3. 'used' → logprob: -1.8218334913253784
    4. 'if' → logprob: -3.196833610534668
    5. 'pour' → logprob: -3.696833610534668
    6. 'dans' → logprob: -3.696833610534668
    7. '```' → logprob: -3.946833610534668
    8. '[i' → logprob: -3.946833610534668
    9. '_used' → logprob: -4.321833610534668
    10. '#' → logprob: -4.696833610534668

Token 863: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.01267810259014368
    2. 'cel' → logprob: -4.637678146362305
    3. 'le' → logprob: -7.387678146362305
    4. 'dans' → logprob: -7.762678146362305
    5. ' k' → logprob: -8.137678146362305
    6. 'la' → logprob: -8.262678146362305
    7. '```' → logprob: -8.262678146362305
    8. ' celui' → logprob: -8.512678146362305
    9. 'celle' → logprob: -8.512678146362305
    10. 'pr' → logprob: -8.762678146362305

Token 864: ' coups' (ID: 98942)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.035298850387334824
    2. 'indices' → logprob: -4.910298824310303
    3. 'characters' → logprob: -5.035298824310303
    4. ' positions' → logprob: -5.535298824310303
    5. 'lines' → logprob: -5.660298824310303
    6. 'for' → logprob: -6.160298824310303
    7. 'times' → logprob: -6.410298824310303
    8. 'spaces' → logprob: -6.910298824310303
    9. 'cases' → logprob: -7.160298824310303
    10. 'places' → logprob: -7.285298824310303

Token 865: ' avant' (ID: 13339)
  Prédit: 'preced'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'preced' → logprob: -1.500881314277649
    2. ' ' → logprob: -2.0008811950683594
    3. 'for' → logprob: -3.0008811950683594
    4. ' )' → logprob: -3.3758811950683594
    5. ' ago' → logprob: -3.5008811950683594
    6. '```' → logprob: -3.5008811950683594
    7. ')' → logprob: -3.6258811950683594
    8. 'd' → logprob: -3.7508811950683594
    9. '   ' → logprob: -3.7508811950683594
    10. '[' → logprob: -3.7508811950683594

Token 866: '.
' (ID: 558)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.42309555411338806
    2. 'for' → logprob: -1.5480955839157104
    3. 'if' → logprob: -2.923095464706421
    4. '#' → logprob: -3.548095464706421
    5. 'dp' → logprob: -4.923095703125
    6. ',' → logprob: -5.173095703125
    7. 'moves' → logprob: -5.673095703125
    8. 'actions' → logprob: -5.798095703125
    9. ' used' → logprob: -5.798095703125
    10. 'a' → logprob: -5.923095703125

Token 867: '#' (ID: 2)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.05985063314437866
    2. 'for' → logprob: -3.8098506927490234
    3. 'dp' → logprob: -4.184850692749023
    4. 'from' → logprob: -5.059850692749023
    5. '#' → logprob: -6.059850692749023
    6. 'counts' → logprob: -6.184850692749023
    7. 'ans' → logprob: -6.309850692749023
    8. 'b' → logprob: -6.309850692749023
    9. 'count' → logprob: -7.309850692749023
    10. 'res' → logprob: -7.434850692749023

Token 868: ' On' (ID: 2160)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.06439199298620224
    2. '#' → logprob: -3.43939208984375
    3. 'from' → logprob: -5.06439208984375
    4. 'dp' → logprob: -5.31439208984375
    5. 'for' → logprob: -5.56439208984375
    6. 'actions' → logprob: -5.68939208984375
    7. 'ans' → logprob: -6.06439208984375
    8. 'counts' → logprob: -6.31439208984375
    9. 'b' → logprob: -6.56439208984375
    10. 'moves' → logprob: -7.06439208984375

Token 869: ' parc' (ID: 22138)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.2053651809692383
    2. ' =' → logprob: -1.3303651809692383
    3. '#' → logprob: -1.9553651809692383
    4. ' for' → logprob: -2.7053651809692383
    5. '=' → logprob: -2.8303651809692383
    6. '_' → logprob: -2.9553651809692383
    7. ' #' → logprob: -4.080365180969238
    8. 'a' → logprob: -4.205365180969238
    9. 'ans' → logprob: -4.205365180969238
    10. 'def' → logprob: -4.955365180969238

Token 870: 'ourt' (ID: 38600)
  Prédit: 'ours'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ours' → logprob: -0.5172082781791687
    2. 'ourt' → logprob: -1.1422083377838135
    3. 'our' → logprob: -2.7672083377838135
    4. 'oure' → logprob: -4.517208099365234
    5. '#' → logprob: -5.017208099365234
    6. '_' → logprob: -7.017208099365234
    7. '```' → logprob: -7.517208099365234
    8. 'c' → logprob: -7.642208099365234
    9. 'court' → logprob: -7.767208099365234
    10. 's' → logprob: -7.767208099365234

Token 871: ' l' (ID: 305)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0023563832510262728
    2. 'a' → logprob: -6.37735652923584
    3. ' range' → logprob: -7.75235652923584
    4. 'for' → logprob: -9.25235652923584
    5. '(range' → logprob: -9.37735652923584
    6. '
' → logprob: -10.75235652923584
    7. 'r' → logprob: -11.50235652923584
    8. '```' → logprob: -13.12735652923584
    9. 'ra' → logprob: -13.62735652923584
    10. 'i' → logprob: -13.62735652923584

Token 872: ''' (ID: 6)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.11390367150306702
    2. 'ange' → logprob: -3.238903760910034
    3. ' range' → logprob: -3.363903760910034
    4. 'a' → logprob: -3.613903760910034
    5. 'e' → logprob: -5.113903522491455
    6. 'for' → logprob: -8.738903999328613
    7. 'en' → logprob: -8.863903999328613
    8. 'ge' → logprob: -9.488903999328613
    9. 't' → logprob: -9.613903999328613
    10. 'r' → logprob: -9.863903999328613

Token 873: 'index' (ID: 2257)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0007574541959911585
    2. ' range' → logprob: -7.625757217407227
    3. 'ange' → logprob: -8.375757217407227
    4. 'a' → logprob: -10.500757217407227
    5. 'r' → logprob: -12.250757217407227
    6. '(range' → logprob: -13.500757217407227
    7. 'i' → logprob: -13.625757217407227
    8. 'rang' → logprob: -13.750757217407227
    9. 'for' → logprob: -14.250757217407227
    10. 't' → logprob: -14.375757217407227

Token 874: 'i' (ID: 72)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7866522073745728
    2. ',' → logprob: -0.9116522073745728
    3. '(' → logprob: -3.036652088165283
    4. ' i' → logprob: -3.161652088165283
    5. ' ' → logprob: -4.786652088165283
    6. ' ,' → logprob: -5.036652088165283
    7. ' range' → logprob: -5.161652088165283
    8. ' s' → logprob: -5.286652088165283
    9. ' in' → logprob: -5.661652088165283
    10. 'range' → logprob: -5.786652088165283

Token 875: ' des' (ID: 731)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.1779348999261856
    2. 'es' → logprob: -2.0529348850250244
    3. 'ces' → logprob: -3.9279348850250244
    4. 'e' → logprob: -5.5529351234436035
    5. 'que' → logprob: -6.0529351234436035
    6. 'for' → logprob: -6.4279351234436035
    7. 'ce' → logprob: -6.4279351234436035
    8. 'ng' → logprob: -6.9279351234436035
    9. 'on' → logprob: -7.6779351234436035
    10. 'x' → logprob: -7.6779351234436035

Token 876: ' coups' (ID: 98942)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0018951985985040665
    2. ' range' → logprob: -6.501895427703857
    3. 'a' → logprob: -7.876895427703857
    4. 'ange' → logprob: -12.6268949508667
    5. 'rang' → logprob: -13.0018949508667
    6. '(range' → logprob: -13.2518949508667
    7. 't' → logprob: -13.8768949508667
    8. 'r' → logprob: -14.0018949508667
    9. 'for' → logprob: -14.1268949508667
    10. '
' → logprob: -14.6268949508667

Token 877: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.49997371435165405
    2. ' ' → logprob: -2.124973773956299
    3. 'for' → logprob: -2.624973773956299
    4. 's' → logprob: -3.499973773956299
    5. ' i' → logprob: -3.499973773956299
    6. ' =' → logprob: -3.499973773956299
    7. 'n' → logprob: -3.624973773956299
    8. '=' → logprob: -4.124973773956299
    9. ' in' → logprob: -4.374973773956299
    10. ' for' → logprob: -4.374973773956299

Token 878: ' en' (ID: 469)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1243801936507225
    2. ' for' → logprob: -2.249380111694336
    3. 'i' → logprob: -5.374380111694336
    4. ' i' → logprob: -6.374380111694336
    5. 'n' → logprob: -6.624380111694336
    6. ' used' → logprob: -6.874380111694336
    7. 'used' → logprob: -7.374380111694336
    8. 'a' → logprob: -7.624380111694336
    9. ' n' → logprob: -8.124380111694336
    10. ' ans' → logprob: -8.374380111694336

Token 879: ' comm' (ID: 1394)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -3.8889261304575484e-06
    2. ' range' → logprob: -12.625003814697266
    3. 'r' → logprob: -16.000003814697266
    4. 'rang' → logprob: -16.000003814697266
    5. 'enumer' → logprob: -17.250003814697266
    6. 'x' → logprob: -17.375003814697266
    7. '	range' → logprob: -17.500003814697266
    8. 'ange' → logprob: -17.500003814697266
    9. 'for' → logprob: -17.625003814697266
    10. '```' → logprob: -17.750003814697266

Token 880: 'en' (ID: 262)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.08872076869010925
    2. 'ge' → logprob: -3.7137207984924316
    3. 'ange' → logprob: -3.7137207984924316
    4. 'e' → logprob: -4.088720798492432
    5. 'en' → logprob: -4.463720798492432
    6. 'enge' → logprob: -6.713720798492432
    7. 'ence' → logprob: -6.713720798492432
    8. 'ent' → logprob: -6.838720798492432
    9. ' range' → logprob: -6.963720798492432
    10. '(range' → logprob: -7.088720798492432

Token 881: 'çant' (ID: 78714)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.1794910430908203
    2. 'ge' → logprob: -1.5544910430908203
    3. 'range' → logprob: -2.0544910430908203
    4. 'umer' → logprob: -2.4294910430908203
    5. 'u' → logprob: -2.6794910430908203
    6. 'ue' → logprob: -2.9294910430908203
    7. 'ume' → logprob: -3.3044910430908203
    8. 'age' → logprob: -3.4294910430908203
    9. 'um' → logprob: -3.4294910430908203
    10. 't' → logprob: -4.42949104309082

Token 882: ' à' (ID: 1221)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.5976865291595459
    2. ' par' → logprob: -1.597686529159546
    3. ' à' → logprob: -2.847686529159546
    4. 'range' → logprob: -3.222686529159546
    5. 'par' → logprob: -3.472686529159546
    6. ' from' → logprob: -3.472686529159546
    7. '=' → logprob: -3.722686529159546
    8. 'à' → logprob: -3.847686529159546
    9. 'de' → logprob: -4.347686767578125
    10. ' depuis' → logprob: -5.472686767578125

Token 883: ' k' (ID: 372)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.006899370811879635
    2. 'k' → logprob: -5.006899356842041
    3. ' range' → logprob: -8.8818998336792
    4. 'index' → logprob: -10.7568998336792
    5. 'i' → logprob: -11.1318998336792
    6. '0' → logprob: -12.1318998336792
    7. 'rang' → logprob: -13.7568998336792
    8. 'idx' → logprob: -14.3818998336792
    9. 'l' → logprob: -14.8818998336792
    10. 'indice' → logprob: -15.5068998336792

Token 884: ' (' (ID: 350)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8270572423934937
    2. 'range' → logprob: -0.9520572423934937
    3. ' range' → logprob: -2.702057361602783
    4. ',' → logprob: -2.952057361602783
    5. ' for' → logprob: -3.327057361602783
    6. ':' → logprob: -4.577057361602783
    7. '.' → logprob: -5.202057361602783
    8. ')' → logprob: -6.577057361602783
    9. '=' → logprob: -6.702057361602783
    10. '(range' → logprob: -7.327057361602783

Token 885: 'ici' (ID: 3757)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.055157918483018875
    2. ' k' → logprob: -3.0551578998565674
    3. ' range' → logprob: -5.3051581382751465
    4. 'range' → logprob: -6.6801581382751465
    5. '0' → logprob: -9.180157661437988
    6. ')' → logprob: -9.555157661437988
    7. ' for' → logprob: -9.930157661437988
    8. 'for' → logprob: -10.180157661437988
    9. '1' → logprob: -10.930157661437988
    10. ' 
' → logprob: -11.930157661437988

Token 886: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4848889410495758
    2. ')' → logprob: -1.3598889112472534
    3. '):
' → logprob: -3.484889030456543
    4. ',' → logprob: -3.484889030456543
    5. 'for' → logprob: -3.734889030456543
    6. ':' → logprob: -3.984889030456543
    7. ' ):' → logprob: -5.609889030456543
    8. '),' → logprob: -5.734889030456543
    9. '=' → logprob: -5.734889030456543
    10. 'k' → logprob: -5.984889030456543

Token 887: ' on' (ID: 402)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.05278005450963974
    2. ' k' → logprob: -4.0527801513671875
    3. 'for' → logprob: -4.1777801513671875
    4. 'range' → logprob: -4.5527801513671875
    5. ' range' → logprob: -5.4277801513671875
    6. 'i' → logprob: -6.1777801513671875
    7. ' for' → logprob: -7.0527801513671875
    8. ' i' → logprob: -8.552780151367188
    9. '
' → logprob: -8.677780151367188
    10. ')' → logprob: -9.177780151367188

Token 888: ' commence' (ID: 44755)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6010148525238037
    2. 'range' → logprob: -1.3510148525238037
    3. ' range' → logprob: -1.9760148525238037
    4. ' for' → logprob: -3.3510148525238037
    5. '=' → logprob: -4.226015090942383
    6. ' =' → logprob: -5.851015090942383
    7. ')' → logprob: -8.101015090942383
    8. 'k' → logprob: -8.476015090942383
    9. '
' → logprob: -8.726015090942383
    10. ' in' → logprob: -8.851015090942383

Token 889: ' après' (ID: 16460)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.43106138706207275
    2. 'à' → logprob: -1.3060613870620728
    3. ' à' → logprob: -2.681061267852783
    4. 'range' → logprob: -6.056061267852783
    5. ' from' → logprob: -6.181061267852783
    6. 'k' → logprob: -6.181061267852783
    7. '=' → logprob: -6.931061267852783
    8. 'dep' → logprob: -7.056061267852783
    9. 'de' → logprob: -7.431061267852783
    10. 'en' → logprob: -7.806061267852783

Token 890: ' les' (ID: 1341)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.005120496265590191
    2. 'range' → logprob: -5.505120277404785
    3. ' k' → logprob: -7.005120277404785
    4. ' range' → logprob: -9.380120277404785
    5. 'for' → logprob: -10.505120277404785
    6. 'n' → logprob: -12.630120277404785
    7. '```' → logprob: -12.755120277404785
    8. '`' → logprob: -12.880120277404785
    9. '=k' → logprob: -12.880120277404785
    10. 'le' → logprob: -13.630120277404785

Token 891: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.00011534435179783031
    2. ' k' → logprob: -9.500115394592285
    3. 'for' → logprob: -10.875115394592285
    4. 'range' → logprob: -11.750115394592285
    5. '`' → logprob: -12.875115394592285
    6. '
' → logprob: -13.625115394592285
    7. '```' → logprob: -13.625115394592285
    8. 'i' → logprob: -14.250115394592285
    9. 'idx' → logprob: -14.250115394592285
    10. '=k' → logprob: -14.375115394592285

Token 892: ' premiers' (ID: 59140)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.24504141509532928
    2. 'indices' → logprob: -2.3700413703918457
    3. 'positions' → logprob: -3.6200413703918457
    4. ' indices' → logprob: -3.6200413703918457
    5. ' )' → logprob: -4.245041370391846
    6. ' espaces' → logprob: -4.245041370391846
    7. ' caractères' → logprob: -4.620041370391846
    8. ' ' → logprob: -4.745041370391846
    9. 'tokens' → logprob: -4.995041370391846
    10. '=' → logprob: -6.495041370391846

Token 893: ' coups' (ID: 98942)
  Prédit: ' coups'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' coups' → logprob: -0.6102686524391174
    2. 'indices' → logprob: -0.9852686524391174
    3. 'positions' → logprob: -3.6102685928344727
    4. ' indices' → logprob: -4.360268592834473
    5. 'cou' → logprob: -4.485268592834473
    6. ')' → logprob: -4.860268592834473
    7. 'tokens' → logprob: -5.235268592834473
    8. 'for' → logprob: -5.360268592834473
    9. 'indexes' → logprob: -5.735268592834473
    10. ' lignes' → logprob: -6.235268592834473

Token 894: ' car' (ID: 1669)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.009444859810173512
    2. 'range' → logprob: -5.634444713592529
    3. ' for' → logprob: -6.634444713592529
    4. '
' → logprob: -6.634444713592529
    5. ',' → logprob: -6.759444713592529
    6. ')' → logprob: -7.134444713592529
    7. '):
' → logprob: -7.509444713592529
    8. ':' → logprob: -8.009445190429688
    9. '):' → logprob: -8.509445190429688
    10. ':
' → logprob: -10.509445190429688

Token 895: ' on' (ID: 402)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.3811032176017761
    2. 'for' → logprob: -2.256103277206421
    3. 'len' → logprob: -2.631103277206421
    4. 'range' → logprob: -2.881103277206421
    5. ' k' → logprob: -3.006103277206421
    6. ' ceux' → logprob: -4.256103038787842
    7. ' for' → logprob: -5.131103038787842
    8. ' range' → logprob: -5.131103038787842
    9. '#' → logprob: -6.506103038787842
    10. ' len' → logprob: -6.881103038787842

Token 896: ' ne' (ID: 453)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.0821442604064941
    2. 'do' → logprob: -1.2071442604064941
    3. ' doit' → logprob: -2.207144260406494
    4. 'n' → logprob: -2.957144260406494
    5. 'for' → logprob: -3.207144260406494
    6. 'range' → logprob: -3.582144260406494
    7. ' a' → logprob: -3.957144260406494
    8. 'v' → logprob: -4.082144260406494
    9. ' devra' → logprob: -4.082144260406494
    10. 've' → logprob: -4.332144260406494

Token 897: ' peut' (ID: 9216)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1993987113237381
    2. ' for' → logprob: -2.6993987560272217
    3. 'range' → logprob: -2.8243987560272217
    4. '=' → logprob: -3.6993987560272217
    5. ' =' → logprob: -4.324398517608643
    6. ' range' → logprob: -4.574398517608643
    7. 'k' → logprob: -7.449398517608643
    8. ' ' → logprob: -7.574398517608643
    9. ')' → logprob: -7.699398517608643
    10. '    ' → logprob: -7.824398517608643

Token 898: ' pas' (ID: 2173)
  Prédit: ' pas'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pas' → logprob: -0.24130196869373322
    2. 'pas' → logprob: -1.6163020133972168
    3. ' =' → logprob: -5.366302013397217
    4. '=' → logprob: -5.616302013397217
    5. 'for' → logprob: -6.366302013397217
    6. '_' → logprob: -6.866302013397217
    7. '_pas' → logprob: -6.866302013397217
    8. ' ' → logprob: -7.616302013397217
    9. '#' → logprob: -7.741302013397217
    10. ' for' → logprob: -7.866302013397217

Token 899: ' vérifier' (ID: 93671)
  Prédit: 'ré'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ré' → logprob: -1.0727261304855347
    2. 'rep' → logprob: -1.9477261304855347
    3. 're' → logprob: -2.697726249694824
    4. 'util' → logprob: -2.947726249694824
    5. 'faire' → logprob: -2.947726249694824
    6. 'changer' → logprob: -3.197726249694824
    7. 'contin' → logprob: -3.322726249694824
    8. ' rép' → logprob: -3.322726249694824
    9. 'for' → logprob: -3.697726249694824
    10. 'les' → logprob: -3.697726249694824

Token 900: ' pour' (ID: 1930)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.4407263994216919
    2. 'k' → logprob: -1.190726399421692
    3. ' la' → logprob: -3.9407262802124023
    4. 'le' → logprob: -5.190726280212402
    5. ')' → logprob: -5.190726280212402
    6. 'la' → logprob: -5.690726280212402
    7. ' i' → logprob: -6.190726280212402
    8. 'for' → logprob: -6.315726280212402
    9. ' l' → logprob: -6.440726280212402
    10. 'l' → logprob: -6.565726280212402

Token 901: ' les' (ID: 1341)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.41618379950523376
    2. 'k' → logprob: -1.4161838293075562
    3. ' i' → logprob: -3.0411837100982666
    4. ' k' → logprob: -4.041183948516846
    5. '0' → logprob: -4.416183948516846
    6. 'range' → logprob: -4.416183948516846
    7. '_' → logprob: -5.916183948516846
    8. 'j' → logprob: -6.791183948516846
    9. ' range' → logprob: -6.791183948516846
    10. ')' → logprob: -7.041183948516846

Token 902: ' premiers' (ID: 59140)
  Prédit: 'indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'indices' → logprob: -0.9739188551902771
    2. 'k' → logprob: -1.2239189147949219
    3. 'prem' → logprob: -1.8489189147949219
    4. ' premiers' → logprob: -3.223918914794922
    5. 'i' → logprob: -3.348918914794922
    6. ' indices' → logprob: -3.598918914794922
    7. 'index' → logprob: -3.723918914794922
    8. '0' → logprob: -3.848918914794922
    9. 'indexes' → logprob: -4.473918914794922
    10. ' k' → logprob: -5.348918914794922

Token 903: ').
' (ID: 6294)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.9343234300613403
    2. ' k' → logprob: -1.1843234300613403
    3. ' indices' → logprob: -1.9343234300613403
    4. 'indices' → logprob: -2.059323310852051
    5. ' espaces' → logprob: -5.309323310852051
    6. ' i' → logprob: -5.559323310852051
    7. 'index' → logprob: -5.809323310852051
    8. ')' → logprob: -6.184323310852051
    9. ' =' → logprob: -6.559323310852051
    10. '=' → logprob: -6.559323310852051

Token 904: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0006531051476486027
    2. '
' → logprob: -7.625653266906738
    3. ' for' → logprob: -9.000653266906738
    4. '\n' → logprob: -10.375653266906738
    5. 'i' → logprob: -12.125653266906738
    6. '
' → logprob: -13.625653266906738
    7. '\' → logprob: -13.875653266906738
    8. '```' → logprob: -14.375653266906738
    9. 'n' → logprob: -14.500653266906738
    10. '  
' → logprob: -14.625653266906738

Token 905: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0037868928629904985
    2. 'j' → logprob: -6.253787040710449
    3. ' i' → logprob: -6.378787040710449
    4. 'idx' → logprob: -9.12878704071045
    5. ' j' → logprob: -11.37878704071045
    6. '_i' → logprob: -11.50378704071045
    7. 'x' → logprob: -12.00378704071045
    8. 'index' → logprob: -12.00378704071045
    9. '_' → logprob: -12.12878704071045
    10. ' idx' → logprob: -12.75378704071045

Token 906: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.016109324991703033
    2. 'in' → logprob: -4.141109466552734
    3. ' ' → logprob: -9.766109466552734
    4. '  ' → logprob: -12.391109466552734
    5. ',' → logprob: -12.766109466552734
    6. 'range' → logprob: -12.891109466552734
    7. '	in' → logprob: -13.391109466552734
    8. 'k' → logprob: -13.766109466552734
    9. ' i' → logprob: -13.891109466552734
    10. 'import' → logprob: -14.141109466552734

Token 907: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.02324547804892063
    2. ' range' → logprob: -3.7732455730438232
    3. '(range' → logprob: -16.898244857788086
    4. 'rang' → logprob: -17.898244857788086
    5. 'ra' → logprob: -18.648244857788086
    6. '	range' → logprob: -18.773244857788086
    7. 'k' → logprob: -19.523244857788086
    8. 'r' → logprob: -19.648244857788086
    9. ' xrange' → logprob: -19.898244857788086
    10. ' ' → logprob: -20.398244857788086

Token 908: '(k' (ID: 12125)
  Prédit: '(k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -2.141186450899113e-05
    2. 'k' → logprob: -10.875020980834961
    3. '(' → logprob: -13.000020980834961
    4. '(n' → logprob: -16.75002098083496
    5. '(
' → logprob: -17.00002098083496
    6. ' (' → logprob: -17.75002098083496
    7. ' k' → logprob: -17.87502098083496
    8. '(i' → logprob: -18.62502098083496
    9. ',k' → logprob: -19.00002098083496
    10. '	k' → logprob: -20.12502098083496

Token 909: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003645442193374038
    2. ' ,' → logprob: -8.375364303588867
    3. ',n' → logprob: -9.375364303588867
    4. ',k' → logprob: -10.125364303588867
    5. ',len' → logprob: -12.000364303588867
    6. ',
' → logprob: -13.625364303588867
    7. ',i' → logprob: -14.875364303588867
    8. '):' → logprob: -15.000364303588867
    9. ',length' → logprob: -16.000364303588867
    10. ',N' → logprob: -16.125364303588867

Token 910: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -3.531315314830863e-06
    2. 'len' → logprob: -12.750003814697266
    3. ' n' → logprob: -14.375003814697266
    4. '	n' → logprob: -19.875003814697266
    5. '   ' → logprob: -21.250003814697266
    6. ')n' → logprob: -21.875003814697266
    7. ' len' → logprob: -22.125003814697266
    8. '_n' → logprob: -23.000003814697266
    9. ',n' → logprob: -23.250003814697266
    10. ' ' → logprob: -23.500003814697266

Token 911: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00320123927667737
    2. '):
' → logprob: -5.753201007843018
    3. '):
' → logprob: -10.878201484680176
    4. ':' → logprob: -12.628201484680176
    5. ' ):' → logprob: -13.628201484680176
    6. '):

' → logprob: -17.00320053100586
    7. '}:' → logprob: -17.25320053100586
    8. ']:' → logprob: -17.75320053100586
    9. ')' → logprob: -18.00320053100586
    10. '():' → logprob: -18.12820053100586

Token 912: '      ' (ID: 1699)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -4.096126576769166e-05
    2. ' if' → logprob: -10.625041007995605
    3. 'if' → logprob: -11.750041007995605
    4. '	if' → logprob: -11.875041007995605
    5. '   ' → logprob: -13.500041007995605
    6. '       ' → logprob: -15.375041007995605
    7. '   ' → logprob: -16.87504005432129
    8. '	   ' → logprob: -17.25004005432129
    9. '```' → logprob: -17.50004005432129
    10. ' ' → logprob: -17.62504005432129

Token 913: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4129534363746643
    2. '   ' → logprob: -1.1629533767700195
    3. ' if' → logprob: -3.6629533767700195
    4. '	if' → logprob: -9.91295337677002
    5. ' ' → logprob: -10.78795337677002
    6. '       ' → logprob: -11.28795337677002
    7. '```' → logprob: -13.28795337677002
    8. '  ' → logprob: -13.91295337677002
    9. ':' → logprob: -14.03795337677002
    10. '    ' → logprob: -14.41295337677002

Token 914: ' Pour' (ID: 13931)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -5.3596853831550106e-05
    2. '   ' → logprob: -10.000053405761719
    3. ' if' → logprob: -11.750053405761719
    4. ' ' → logprob: -15.250053405761719
    5. '
' → logprob: -19.00005340576172
    6. '	if' → logprob: -19.50005340576172
    7. '#' → logprob: -19.50005340576172
    8. '```' → logprob: -19.50005340576172
    9. '  ' → logprob: -20.00005340576172
    10. 'If' → logprob: -20.37505340576172

Token 915: ' chaque' (ID: 21194)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00015800826076883823
    2. 'a' → logprob: -9.625158309936523
    3. '0' → logprob: -10.500158309936523
    4. ' i' → logprob: -10.500158309936523
    5. 'idx' → logprob: -11.500158309936523
    6. 'range' → logprob: -12.250158309936523
    7. 'index' → logprob: -12.500158309936523
    8. '_' → logprob: -12.875158309936523
    9. 'j' → logprob: -13.250158309936523
    10. 'int' → logprob: -13.500158309936523

Token 916: ' index' (ID: 3472)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.000271706550847739
    2. ' i' → logprob: -8.250271797180176
    3. ' ' → logprob: -12.500271797180176
    4. ')' → logprob: -13.125271797180176
    5. '```' → logprob: -13.750271797180176
    6. 'index' → logprob: -14.000271797180176
    7. '   ' → logprob: -14.000271797180176
    8. '`' → logprob: -14.875271797180176
    9. 'indice' → logprob: -15.000271797180176
    10. 'idx' → logprob: -15.250271797180176

Token 917: ' i' (ID: 575)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2183808833360672
    2. ' in' → logprob: -2.093380928039551
    3. 'in' → logprob: -2.718380928039551
    4. '   ' → logprob: -6.343380928039551
    5. 'if' → logprob: -6.593380928039551
    6. ':
' → logprob: -6.718380928039551
    7. ' :' → logprob: -7.218380928039551
    8. ',' → logprob: -7.718380928039551
    9. ' i' → logprob: -8.21838092803955
    10. ' if' → logprob: -8.46838092803955

Token 918: ' allant' (ID: 122150)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07063248008489609
    2. ':
' → logprob: -2.6956324577331543
    3. '   ' → logprob: -7.320632457733154
    4. 'if' → logprob: -11.570632934570312
    5. ' if' → logprob: -12.195632934570312
    6. ',' → logprob: -12.445632934570312
    7. ':
' → logprob: -12.445632934570312
    8. '):' → logprob: -12.695632934570312
    9. '):
' → logprob: -13.070632934570312
    10. '{' → logprob: -13.070632934570312

Token 919: ' de' (ID: 334)
  Prédit: 'dans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dans' → logprob: -0.559389054775238
    2. 'jus' → logprob: -2.434389114379883
    3. ' de' → logprob: -2.684389114379883
    4. 'de' → logprob: -2.934389114379883
    5. 'à' → logprob: -3.184389114379883
    6. ' i' → logprob: -3.184389114379883
    7. 'in' → logprob: -3.684389114379883
    8. ' in' → logprob: -3.684389114379883
    9. ' jusqu' → logprob: -3.684389114379883
    10. 'i' → logprob: -4.184389114379883

Token 920: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0001773192489054054
    2. '0' → logprob: -9.500177383422852
    3. ' k' → logprob: -9.500177383422852
    4. 'i' → logprob: -10.500177383422852
    5. ' i' → logprob: -16.87517738342285
    6. ' ' → logprob: -17.00017738342285
    7. '	k' → logprob: -17.37517738342285
    8. '1' → logprob: -18.25017738342285
    9. '```' → logprob: -18.25017738342285
    10. ',k' → logprob: -18.87517738342285

Token 921: ' jusqu' (ID: 21961)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.32097673416137695
    2. 'to' → logprob: -2.320976734161377
    3. '):' → logprob: -2.695976734161377
    4. ' to' → logprob: -3.070976734161377
    5. ' :' → logprob: -3.570976734161377
    6. ',' → logprob: -4.570976734161377
    7. ' ' → logprob: -4.820976734161377
    8. '   ' → logprob: -5.195976734161377
    9. ' ):' → logprob: -6.195976734161377
    10. ')' → logprob: -6.195976734161377

Token 922: ''à' (ID: 33688)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.39574572443962097
    2. '(n' → logprob: -1.1457457542419434
    3. '(' → logprob: -5.270745754241943
    4. '0' → logprob: -6.645745754241943
    5. 'i' → logprob: -7.270745754241943
    6. 'k' → logprob: -7.270745754241943
    7. ' n' → logprob: -8.020745277404785
    8. 'a' → logprob: -8.395745277404785
    9. 'à' → logprob: -9.020745277404785
    10. '(i' → logprob: -9.895745277404785

Token 923: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0006268949946388602
    2. ' n' → logprob: -7.375627040863037
    3. 'len' → logprob: -15.250626564025879
    4. '	n' → logprob: -16.375627517700195
    5. ' ' → logprob: -17.250627517700195
    6. '   ' → logprob: -17.625627517700195
    7. '```' → logprob: -19.125627517700195
    8. '    ' → logprob: -19.500627517700195
    9. '(n' → logprob: -19.750627517700195
    10. 'range' → logprob: -19.875627517700195

Token 924: '-' (ID: 12)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.010666227899491787
    2. ' :' → logprob: -5.135666370391846
    3. '):' → logprob: -5.385666370391846
    4. ':
' → logprob: -9.010665893554688
    5. '():' → logprob: -11.510665893554688
    6. '):
' → logprob: -12.135665893554688
    7. '：' → logprob: -13.135665893554688
    8. ' :
' → logprob: -13.635665893554688
    9. ' ):' → logprob: -13.885665893554688
    10. ']:' → logprob: -14.510665893554688

Token 925: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.054500666621607e-06
    2. ' ' → logprob: -13.12500286102295
    3. '-' → logprob: -14.75000286102295
    4. '```' → logprob: -15.37500286102295
    5. 'n' → logprob: -15.62500286102295
    6. ')' → logprob: -15.87500286102295
    7. ':' → logprob: -16.750003814697266
    8. '   ' → logprob: -17.875003814697266
    9. '`' → logprob: -18.000003814697266
    10. 'i' → logprob: -18.125003814697266

Token 926: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3880242705345154
    2. ':
' → logprob: -1.2630243301391602
    3. '   ' → logprob: -3.26302433013916
    4. ' if' → logprob: -8.76302433013916
    5. 'if' → logprob: -9.01302433013916
    6. '):
' → logprob: -9.26302433013916
    7. ',' → logprob: -9.51302433013916
    8. '```' → logprob: -11.13802433013916
    9. ' :
' → logprob: -11.38802433013916
    10. ' :' → logprob: -11.63802433013916

Token 927: 'not' (ID: 2878)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5094155669212341
    2. '):' → logprob: -1.009415626525879
    3. ')' → logprob: -4.009415626525879
    4. '):
' → logprob: -4.759415626525879
    5. ' n' → logprob: -5.759415626525879
    6. '   ' → logprob: -5.884415626525879
    7. ' ):' → logprob: -6.759415626525879
    8. ')n' → logprob: -8.759415626525879
    9. ':' → logprob: -9.009415626525879
    10. ' )' → logprob: -9.009415626525879

Token 928: 'er' (ID: 259)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.030868275091052055
    2. ' i' → logprob: -5.030868053436279
    3. '```' → logprob: -5.155868053436279
    4. ':' → logprob: -5.405868053436279
    5. ')' → logprob: -5.655868053436279
    6. '1' → logprob: -6.405868053436279
    7. 'inue' → logprob: -6.655868053436279
    8. '):' → logprob: -6.655868053436279
    9. 'n' → logprob: -7.030868053436279
    10. '   ' → logprob: -7.155868053436279

Token 929: ' que' (ID: 661)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2188110500574112
    2. 'n' → logprob: -2.84381103515625
    3. ' n' → logprob: -2.84381103515625
    4. ')' → logprob: -2.96881103515625
    5. ' ):' → logprob: -4.09381103515625
    6. '):
' → logprob: -5.46881103515625
    7. ')n' → logprob: -5.71881103515625
    8. ' )' → logprob: -5.96881103515625
    9. '1' → logprob: -7.59381103515625
    10. ' ' → logprob: -8.21881103515625

Token 930: ' range' (ID: 3352)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.10913749784231186
    2. 'i' → logprob: -2.734137535095215
    3. ' n' → logprob: -3.859137535095215
    4. ')' → logprob: -4.734137535095215
    5. ' i' → logprob: -5.734137535095215
    6. ')n' → logprob: -6.109137535095215
    7. '):' → logprob: -6.609137535095215
    8. ' )' → logprob: -7.984137535095215
    9. 'len' → logprob: -8.234137535095215
    10. ' ' → logprob: -8.609137535095215

Token 931: ' s' (ID: 265)
  Prédit: '(k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.2994413375854492
    2. '(n' → logprob: -2.049441337585449
    3. '(i' → logprob: -2.674441337585449
    4. '(' → logprob: -3.049441337585449
    5. ')' → logprob: -5.174441337585449
    6. '):' → logprob: -5.924441337585449
    7. '(start' → logprob: -6.049441337585449
    8. '(len' → logprob: -6.174441337585449
    9. ' (' → logprob: -8.67444133758545
    10. 'start' → logprob: -9.04944133758545

Token 932: ''arr' (ID: 49695)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31601080298423767
    2. ')' → logprob: -2.9410107135772705
    3. '```' → logprob: -2.9410107135772705
    4. ' =' → logprob: -4.31601095199585
    5. '   ' → logprob: -4.44101095199585
    6. '(' → logprob: -4.69101095199585
    7. '(range' → logprob: -4.69101095199585
    8. '(start' → logprob: -4.81601095199585
    9. 'pace' → logprob: -4.81601095199585
    10. ',' → logprob: -4.94101095199585

Token 933: 'ête' (ID: 16808)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.02802753448486328
    2. 'e' → logprob: -4.403027534484863
    3. 'etop' → logprob: -5.653027534484863
    4. 'pace' → logprob: -6.403027534484863
    5. ' top' → logprob: -6.403027534484863
    6. 't' → logprob: -6.528027534484863
    7. 'op' → logprob: -6.653027534484863
    8. 'up' → logprob: -6.903027534484863
    9. 'art' → logprob: -7.278027534484863
    10. 'ur' → logprob: -7.528027534484863

Token 934: ' avant' (ID: 13339)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03185243532061577
    2. '(' → logprob: -4.9068522453308105
    3. 'au' → logprob: -5.6568522453308105
    4. '(i' → logprob: -5.9068522453308105
    5. '(n' → logprob: -5.9068522453308105
    6. '```' → logprob: -6.1568522453308105
    7. 'à' → logprob: -6.2818522453308105
    8. ',' → logprob: -6.6568522453308105
    9. ' à' → logprob: -6.6568522453308105
    10. '=' → logprob: -6.6568522453308105

Token 935: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.003701139474287629
    2. ')' → logprob: -6.128701210021973
    3. ' n' → logprob: -7.253701210021973
    4. 'i' → logprob: -7.878701210021973
    5. '(n' → logprob: -8.503701210021973
    6. ')n' → logprob: -8.753701210021973
    7. ',' → logprob: -11.253701210021973
    8. '```' → logprob: -11.378701210021973
    9. 'k' → logprob: -12.253701210021973
    10. ',n' → logprob: -12.253701210021973

Token 936: ').
' (ID: 6294)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.000785091076977551
    2. '):
' → logprob: -7.500784873962402
    3. ':' → logprob: -8.625784873962402
    4. ')' → logprob: -10.500784873962402
    5. '):
' → logprob: -11.375784873962402
    6. ' ):' → logprob: -12.000784873962402
    7. '():' → logprob: -13.125784873962402
    8. '=' → logprob: -13.625784873962402
    9. '   ' → logprob: -13.625784873962402
    10. ',' → logprob: -14.250784873962402

Token 937: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014202527701854706
    2. 'if' → logprob: -4.51420259475708
    3. ' if' → logprob: -5.76420259475708
    4. '	if' → logprob: -12.014202117919922
    5. '       ' → logprob: -13.014202117919922
    6. ' ' → logprob: -13.264202117919922
    7. '   ' → logprob: -13.764202117919922
    8. '  ' → logprob: -15.514202117919922
    9. '```' → logprob: -15.764202117919922
    10. ',' → logprob: -15.764202117919922

Token 938: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -9.253090865968261e-06
    2. ' if' → logprob: -11.875009536743164
    3. '   ' → logprob: -13.125009536743164
    4. '#' → logprob: -15.750009536743164
    5. ' ' → logprob: -16.875009536743164
    6. 'j' → logprob: -17.500009536743164
    7. '
' → logprob: -19.000009536743164
    8. '  ' → logprob: -19.875009536743164
    9. '	if' → logprob: -19.875009536743164
    10. 'If' → logprob: -20.250009536743164

Token 939: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0007183883571997285
    2. ' a' → logprob: -7.250718593597412
    3. 't' → logprob: -12.000718116760254
    4. 'i' → logprob: -14.500718116760254
    5. '	a' → logprob: -14.500718116760254
    6. '   ' → logprob: -14.500718116760254
    7. '(a' → logprob: -15.625718116760254
    8. ' ' → logprob: -15.875718116760254
    9. ' ' → logprob: -16.50071907043457
    10. ' t' → logprob: -17.00071907043457

Token 940: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.463036435074173e-05
    2. '[' → logprob: -11.000024795532227
    3. 'i' → logprob: -12.000024795532227
    4. 'a' → logprob: -14.375024795532227
    5. ' [' → logprob: -14.375024795532227
    6. '[a' → logprob: -15.625024795532227
    7. ' i' → logprob: -16.375024795532227
    8. '   ' → logprob: -16.625024795532227
    9. ' ==' → logprob: -16.750024795532227
    10. '```' → logprob: -17.125024795532227

Token 941: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.055987775325775146
    2. ']==' → logprob: -3.18098783493042
    3. '==' → logprob: -4.55598783493042
    4. ' ==' → logprob: -6.18098783493042
    5. ' ]' → logprob: -8.305987358093262
    6. 'a' → logprob: -10.680987358093262
    7. '   ' → logprob: -11.430987358093262
    8. '=' → logprob: -11.555987358093262
    9. ')' → logprob: -11.680987358093262
    10. '```' → logprob: -12.430987358093262

Token 942: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.021128345280885696
    2. ' ==' → logprob: -3.8961284160614014
    3. '=' → logprob: -7.646128177642822
    4. 'a' → logprob: -9.77112865447998
    5. '===' → logprob: -10.77112865447998
    6. '"' → logprob: -11.52112865447998
    7. '==
' → logprob: -12.02112865447998
    8. ']==' → logprob: -13.02112865447998
    9. '   ' → logprob: -13.39612865447998
    10. ' =' → logprob: -13.64612865447998

Token 943: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0002619318547658622
    2. ' a' → logprob: -8.250262260437012
    3. '   ' → logprob: -14.500262260437012
    4. ' ' → logprob: -16.750261306762695
    5. '  ' → logprob: -17.500261306762695
    6. '```' → logprob: -17.500261306762695
    7. '	a' → logprob: -17.625261306762695
    8. '    ' → logprob: -17.875261306762695
    9. ''a' → logprob: -18.000261306762695
    10. '`' → logprob: -18.000261306762695

Token 944: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0394001342356205
    2. 'a' → logprob: -3.289400100708008
    3. 'i' → logprob: -6.664400100708008
    4. '[' → logprob: -10.164400100708008
    5. '   ' → logprob: -11.039400100708008
    6. ' a' → logprob: -11.539400100708008
    7. '[a' → logprob: -11.539400100708008
    8. ' [' → logprob: -12.539400100708008
    9. ' i' → logprob: -12.789400100708008
    10. '[
' → logprob: -15.039400100708008

Token 945: ' -' (ID: 533)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0017775188898667693
    2. 'i' → logprob: -6.376777648925781
    3. '-' → logprob: -10.251777648925781
    4. '   ' → logprob: -11.126777648925781
    5. '(i' → logprob: -12.376777648925781
    6. ' i' → logprob: -12.376777648925781
    7. '```' → logprob: -12.376777648925781
    8. '-i' → logprob: -12.751777648925781
    9. '{i' → logprob: -13.126777648925781
    10. 'a' → logprob: -13.251777648925781

Token 946: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.0206720617134124e-05
    2. ' k' → logprob: -11.50001049041748
    3. '   ' → logprob: -19.000009536743164
    4. '	k' → logprob: -20.250009536743164
    5. '{k' → logprob: -21.750009536743164
    6. ' ' → logprob: -22.125009536743164
    7. '<|end|>' → logprob: -22.125009536743164
    8. '"k' → logprob: -22.125009536743164
    9. '```' → logprob: -22.250009536743164
    10. '  ' → logprob: -22.875009536743164

Token 947: ']:' (ID: 12433)
  Prédit: ']:'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.42851924896240234
    2. ':' → logprob: -1.3035192489624023
    3. '":' → logprob: -3.3035192489624023
    4. ']' → logprob: -4.303519248962402
    5. '):' → logprob: -4.928519248962402
    6. '':' → logprob: -5.553519248962402
    7. ' and' → logprob: -5.928519248962402
    8. '}:' → logprob: -6.053519248962402
    9. 'and' → logprob: -6.553519248962402
    10. ' :' → logprob: -6.553519248962402

Token 948: '   ' (ID: 271)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.5783313512802124
    2. '   ' → logprob: -0.8283313512802124
    3. 'if' → logprob: -7.078331470489502
    4. '	ans' → logprob: -7.578331470489502
    5. '       ' → logprob: -7.703331470489502
    6. '#' → logprob: -8.078330993652344
    7. ' ans' → logprob: -8.703330993652344
    8. '(ans' → logprob: -11.078330993652344
    9. 'a' → logprob: -11.328330993652344
    10. '    ' → logprob: -11.453330993652344

Token 949: ' #' (ID: 1069)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.5237605571746826
    2. '   ' → logprob: -0.8987605571746826
    3. '	ans' → logprob: -7.773760795593262
    4. ' ans' → logprob: -9.023760795593262
    5. '#' (adapté à ' #') → logprob: -9.523760795593262
    6. '(ans' → logprob: -11.648760795593262
    7. '       ' → logprob: -12.148760795593262
    8. ' ' → logprob: -13.398760795593262
    9. '
' → logprob: -13.898760795593262
    10. '    
' → logprob: -14.023760795593262

Token 950: ' Si' (ID: 7832)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0022618290968239307
    2. '   ' → logprob: -6.127261638641357
    3. ' ans' → logprob: -10.627262115478516
    4. 'if' → logprob: -11.002262115478516
    5. '	ans' → logprob: -11.502262115478516
    6. '           ' → logprob: -11.752262115478516
    7. '#' → logprob: -12.002262115478516
    8. '       ' → logprob: -12.502262115478516
    9. ' ' → logprob: -13.252262115478516
    10. '    ' → logprob: -13.752262115478516

Token 951: ' le' (ID: 505)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.006726737599819899
    2. ' a' → logprob: -5.0067267417907715
    3. ' ' → logprob: -12.381726264953613
    4. 'the' → logprob: -13.756726264953613
    5. '#a' → logprob: -13.881726264953613
    6. '   ' → logprob: -14.006726264953613
    7. ' the' → logprob: -14.006726264953613
    8. '#' → logprob: -14.256726264953613
    9. '	a' → logprob: -14.631726264953613
    10. 'ans' → logprob: -14.756726264953613

Token 952: ' coup' (ID: 25465)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.002647832967340946
    2. 'c' → logprob: -6.627647876739502
    3. ' a' → logprob: -7.502647876739502
    4. ' même' → logprob: -8.002647399902344
    5. ' coup' → logprob: -9.127647399902344
    6. '```' → logprob: -9.627647399902344
    7. 'same' → logprob: -9.877647399902344
    8. 'm' → logprob: -9.877647399902344
    9. 'i' → logprob: -10.127647399902344
    10. 'even' → logprob: -10.127647399902344

Token 953: ' à' (ID: 1221)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3212087154388428
    2. ' à' → logprob: -2.8212087154388428
    3. ' est' → logprob: -2.9462087154388428
    4. ' a' → logprob: -3.0712087154388428
    5. '[i' → logprob: -3.4462087154388428
    6. 'à' → logprob: -3.4462087154388428
    7. ' choisi' → logprob: -3.6962087154388428
    8. 'est' → logprob: -4.696208953857422
    9. ' utilisé' → logprob: -5.821208953857422
    10. ' ' → logprob: -6.446208953857422

Token 954: ' l' (ID: 305)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.03038785606622696
    2. 'l' → logprob: -4.030387878417969
    3. 'a' → logprob: -5.030387878417969
    4. 'index' → logprob: -6.030387878417969
    5. 'indice' → logprob: -6.655387878417969
    6. 'la' → logprob: -7.030387878417969
    7. ' i' → logprob: -7.780387878417969
    8. 'position' → logprob: -8.155387878417969
    9. '[i' → logprob: -8.405387878417969
    10. ' l' → logprob: -10.280387878417969

Token 955: ''' (ID: 6)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7093117833137512
    2. 'index' → logprob: -0.9593117833137512
    3. 'indice' → logprob: -2.0843117237091064
    4. 'indices' → logprob: -8.834311485290527
    5. 'a' → logprob: -8.959311485290527
    6. ''i' → logprob: -9.459311485290527
    7. '[i' → logprob: -10.334311485290527
    8. 'idx' → logprob: -10.959311485290527
    9. ' index' → logprob: -11.084311485290527
    10. ' i' → logprob: -11.959311485290527

Token 956: 'index' (ID: 2257)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.1857878416776657
    2. 'index' → logprob: -2.0607879161834717
    3. 'indice' → logprob: -3.1857879161834717
    4. 'a' → logprob: -8.06078815460205
    5. 'indices' → logprob: -8.68578815460205
    6. 'position' → logprob: -8.81078815460205
    7. '```' → logprob: -9.81078815460205
    8. '[i' → logprob: -9.93578815460205
    9. ' i' → logprob: -11.06078815460205
    10. 'ith' → logprob: -11.31078815460205

Token 957: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0036045825108885765
    2. ' i' → logprob: -5.628604412078857
    3. 'a' → logprob: -13.128604888916016
    4. ' ' → logprob: -13.878604888916016
    5. '[i' → logprob: -14.128604888916016
    6. '   ' → logprob: -14.378604888916016
    7. '```' → logprob: -15.753604888916016
    8. '	i' → logprob: -16.753604888916016
    9. '  ' → logprob: -17.378604888916016
    10. '`' → logprob: -17.378604888916016

Token 958: ' est' (ID: 893)
  Prédit: 'est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.31547021865844727
    2. ' est' → logprob: -1.3154702186584473
    3. '#' → logprob: -7.190470218658447
    4. 'a' → logprob: -8.565469741821289
    5. 'avait' → logprob: -8.565469741821289
    6. 'et' → logprob: -8.690469741821289
    7. 's' → logprob: -8.940469741821289
    8. '==' → logprob: -8.940469741821289
    9. 'ét' → logprob: -9.190469741821289
    10. '```' → logprob: -9.190469741821289

Token 959: ' le' (ID: 505)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.6383839249610901
    2. 'ident' → logprob: -0.8883839249610901
    3. 'a' → logprob: -3.3883838653564453
    4. ' ident' → logprob: -4.388383865356445
    5. 'égal' → logprob: -4.638383865356445
    6. ' le' → logprob: -5.513383865356445
    7. ' égal' → logprob: -8.013383865356445
    8. 'la' → logprob: -9.638383865356445
    9. 'exact' → logprob: -9.638383865356445
    10. '==' → logprob: -10.638383865356445

Token 960: ' même' (ID: 9679)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0003261679667048156
    2. ' même' → logprob: -8.250326156616211
    3. '```' → logprob: -10.625326156616211
    4. 'Même' → logprob: -10.875326156616211
    5. 'a' → logprob: -11.375326156616211
    6. 'even' → logprob: -12.500326156616211
    7. 'mé' → logprob: -13.125326156616211
    8. 'mme' → logprob: -13.750326156616211
    9. 'same' → logprob: -14.000326156616211
    10. ' m' → logprob: -14.625326156616211

Token 961: ' que' (ID: 661)
  Prédit: ' que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.795332133769989
    2. ':' → logprob: -1.9203321933746338
    3. 'que' → logprob: -2.420332193374634
    4. '<|end|>' → logprob: -2.420332193374634
    5. ' ' → logprob: -3.170332193374634
    6. 'a' → logprob: -3.170332193374634
    7. 'as' → logprob: -3.920332193374634
    8. 'à' → logprob: -4.170331954956055
    9. 'et' → logprob: -4.295331954956055
    10. 'qu' → logprob: -4.420331954956055

Token 962: ' celui' (ID: 27857)
  Prédit: 'cel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cel' → logprob: -0.10776446759700775
    2. 'le' → logprob: -2.357764482498169
    3. 'a' → logprob: -5.23276424407959
    4. ' celui' → logprob: -6.23276424407959
    5. 'à' → logprob: -8.98276424407959
    6. ' le' → logprob: -9.48276424407959
    7. '```' → logprob: -11.73276424407959
    8. 'celle' → logprob: -11.98276424407959
    9. 'l' → logprob: -12.98276424407959
    10. 'c' → logprob: -13.10776424407959

Token 963: ' à' (ID: 1221)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.05756321921944618
    2. ' à' → logprob: -3.057563304901123
    3. '[i' → logprob: -5.432563304901123
    4. 'a' → logprob: -5.807563304901123
    5. 'i' → logprob: -6.807563304901123
    6. '```' → logprob: -8.057562828063965
    7. ''à' → logprob: -10.182562828063965
    8. '   ' → logprob: -10.432562828063965
    9. '`' → logprob: -10.807562828063965
    10. ' ' → logprob: -11.182562828063965

Token 964: ' l' (ID: 305)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3148667514324188
    2. 'l' → logprob: -1.3148667812347412
    3. ' i' → logprob: -7.189866542816162
    4. ' l' → logprob: -7.564866542816162
    5. '[i' → logprob: -9.56486701965332
    6. '(i' → logprob: -9.56486701965332
    7. 'index' → logprob: -9.81486701965332
    8. '`' → logprob: -10.43986701965332
    9. '```' → logprob: -10.43986701965332
    10. 'a' → logprob: -10.56486701965332

Token 965: ''' (ID: 6)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.009063351899385452
    2. '[i' → logprob: -4.759063243865967
    3. ' i' → logprob: -8.884063720703125
    4. 'a' → logprob: -9.384063720703125
    5. ''i' → logprob: -9.509063720703125
    6. '```' → logprob: -9.884063720703125
    7. '(i' → logprob: -10.134063720703125
    8. '`' → logprob: -10.884063720703125
    9. '-' → logprob: -11.009063720703125
    10. 'index' → logprob: -11.884063720703125

Token 966: 'index' (ID: 2257)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -6.0868278524139896e-05
    2. '```' → logprob: -11.25006103515625
    3. ' i' → logprob: -11.37506103515625
    4. '[i' → logprob: -11.50006103515625
    5. 'index' → logprob: -11.50006103515625
    6. 'indice' → logprob: -12.00006103515625
    7. '(i' → logprob: -12.62506103515625
    8. '`' → logprob: -12.87506103515625
    9. '
' → logprob: -13.50006103515625
    10. ''i' → logprob: -14.00006103515625

Token 967: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0005635190173052251
    2. ' i' → logprob: -8.250563621520996
    3. '[i' → logprob: -8.500563621520996
    4. '(i' → logprob: -10.375563621520996
    5. '{i' → logprob: -10.500563621520996
    6. '```' → logprob: -10.875563621520996
    7. '   ' → logprob: -11.500563621520996
    8. '`' → logprob: -11.875563621520996
    9. 'a' → logprob: -13.375563621520996
    10. '``' → logprob: -15.000563621520996

Token 968: '-k' (ID: 10897)
  Prédit: '-k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-k' → logprob: -0.5270346999168396
    2. ' -' → logprob: -1.2770347595214844
    3. '-i' → logprob: -2.5270347595214844
    4. '-' → logprob: -3.2770347595214844
    5. '[i' → logprob: -5.277034759521484
    6. 'k' → logprob: -6.777034759521484
    7. '```' → logprob: -6.777034759521484
    8. '`' → logprob: -7.277034759521484
    9. '-il' → logprob: -7.777034759521484
    10. '   ' → logprob: -7.777034759521484

Token 969: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10671984404325485
    2. ':
' → logprob: -2.356719732284546
    3. '       ' → logprob: -5.231719970703125
    4. '   ' → logprob: -7.606719970703125
    5. 'and' → logprob: -7.981719970703125
    6. ' and' → logprob: -8.481719970703125
    7. ':#' → logprob: -11.106719970703125
    8. '):
' → logprob: -11.231719970703125
    9. ':
' → logprob: -11.356719970703125
    10. '):' → logprob: -11.481719970703125

Token 970: 'le' (ID: 282)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.9896321296691895
    2. '       ' → logprob: -1.2396321296691895
    3. '):
' → logprob: -1.9896321296691895
    4. '   ' → logprob: -2.2396321296691895
    5. 'ans' → logprob: -2.8646321296691895
    6. ':' → logprob: -3.9896321296691895
    7. ')' → logprob: -4.1146321296691895
    8. '#' → logprob: -7.6146321296691895
    9. 'and' → logprob: -7.6146321296691895
    10. ':
' → logprob: -7.8646321296691895

Token 971: ' coup' (ID: 25465)
  Prédit: ' même'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' même' → logprob: -0.7442991733551025
    2. 'm' → logprob: -1.8692991733551025
    3. 'i' → logprob: -1.9942991733551025
    4. '```' → logprob: -2.8692991733551025
    5. 'a' → logprob: -2.9942991733551025
    6. ' précédent' → logprob: -3.2442991733551025
    7. 'k' → logprob: -4.119298934936523
    8. 'quel' → logprob: -4.494298934936523
    9. 'preced' → logprob: -4.869298934936523
    10. '[i' → logprob: -4.869298934936523

Token 972: ' précédent' (ID: 128462)
  Prédit: ' précédent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' précédent' → logprob: -0.3731071949005127
    2. 'k' → logprob: -2.1231071949005127
    3. 'pr' → logprob: -2.7481071949005127
    4. 'plus' → logprob: -3.2481071949005127
    5. '[i' → logprob: -3.6231071949005127
    6. '```' → logprob: -3.7481071949005127
    7. 'i' → logprob: -5.498106956481934
    8. 'à' → logprob: -5.623106956481934
    9. ' précéd' → logprob: -5.748106956481934
    10. 'util' → logprob: -5.998106956481934

Token 973: ' dans' (ID: 2671)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3157612383365631
    2. ')' → logprob: -1.8157612085342407
    3. '):
' → logprob: -2.9407613277435303
    4. '),' → logprob: -3.4407613277435303
    5. '   ' → logprob: -5.190761089324951
    6. ' ):' → logprob: -5.815761089324951
    7. ' )' → logprob: -6.565761089324951
    8. '```' → logprob: -6.565761089324951
    9. '<|end|>' → logprob: -7.065761089324951
    10. '    ' → logprob: -7.065761089324951

Token 974: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.610540509223938
    2. 'l' → logprob: -1.735540509223938
    3. 'a' → logprob: -2.2355403900146484
    4. ' la' → logprob: -2.8605403900146484
    5. 'le' → logprob: -2.9855403900146484
    6. ' l' → logprob: -4.735540390014648
    7. 'interval' → logprob: -4.860540390014648
    8. 'une' → logprob: -5.110540390014648
    9. 'les' → logprob: -5.110540390014648
    10. 'k' → logprob: -5.485540390014648

Token 975: ' même' (ID: 9679)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.6431194543838501
    2. 'k' → logprob: -1.76811945438385
    3. 'pas' → logprob: -2.2681193351745605
    4. 'm' → logprob: -3.2681193351745605
    5. 'd' → logprob: -3.5181193351745605
    6. 'distance' → logprob: -3.5181193351745605
    7. 'code' → logprob: -4.1431193351745605
    8. '```' → logprob: -4.2681193351745605
    9. 'gap' → logprob: -4.6431193351745605
    10. 'sequence' → logprob: -4.6431193351745605

Token 976: ' sous' (ID: 14487)
  Prédit: 'position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'position' → logprob: -0.5010198950767517
    2. 'mod' → logprob: -1.3760199546813965
    3. '```' → logprob: -3.1260199546813965
    4. 'sequence' → logprob: -3.3760199546813965
    5. ' sé' → logprob: -4.5010199546813965
    6. ' position' → logprob: -4.6260199546813965
    7. ' sequence' → logprob: -5.2510199546813965
    8. 'sé' → logprob: -5.5010199546813965
    9. ' mod' → logprob: -5.7510199546813965
    10. 'pos' → logprob: -6.0010199546813965

Token 977: '-s' (ID: 2011)
  Prédit: 'sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sequence' → logprob: -0.4207311272621155
    2. 'a' → logprob: -2.5457310676574707
    3. 'sé' → logprob: -2.5457310676574707
    4. 'chaine' → logprob: -2.5457310676574707
    5. 'string' → logprob: -2.6707310676574707
    6. 's' → logprob: -3.6707310676574707
    7. 'seq' → logprob: -5.045731067657471
    8. ' sé' → logprob: -6.045731067657471
    9. 'suite' → logprob: -6.295731067657471
    10. 'chain' → logprob: -7.045731067657471

Token 978: 'é' (ID: 377)
  Prédit: 'quence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -0.7004992365837097
    2. 'e' → logprob: -1.0754992961883545
    3. 'é' → logprob: -2.2004992961883545
    4. 'eq' → logprob: -3.5754992961883545
    5. 'équ' → logprob: -5.200499057769775
    6. '#' → logprob: -5.950499057769775
    7. 'equ' → logprob: -5.950499057769775
    8. '`' → logprob: -6.200499057769775
    9. 'ection' → logprob: -6.700499057769775
    10. 'erie' → logprob: -6.700499057769775

Token 979: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -7.707997428951785e-05
    2. 'q' → logprob: -10.375077247619629
    3. '#' → logprob: -11.000077247619629
    4. '`' → logprob: -11.250077247619629
    5. 'que' → logprob: -12.500077247619629
    6. 'ction' → logprob: -12.625077247619629
    7. 'qu' → logprob: -13.625077247619629
    8. 'QUENCE' → logprob: -13.750077247619629
    9. '"' → logprob: -14.000077247619629
    10. 'quences' → logprob: -14.500077247619629

Token 980: ' de' (ID: 334)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1577727347612381
    2. '):
' → logprob: -2.5327727794647217
    3. ':' → logprob: -3.2827727794647217
    4. '   ' → logprob: -3.7827727794647217
    5. ')' → logprob: -6.657772541046143
    6. ' ):' → logprob: -7.157772541046143
    7. ':
' → logprob: -7.282772541046143
    8. '),' → logprob: -7.532772541046143
    9. '       ' → logprob: -7.532772541046143
    10. ',' → logprob: -7.657772541046143

Token 981: ' modulo' (ID: 112372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.009392894804477692
    2. 'a' → logprob: -6.009392738342285
    3. 'pas' → logprob: -6.384392738342285
    4. 'distance' → logprob: -6.384392738342285
    5. ' k' → logprob: -6.884392738342285
    6. '```' → logprob: -7.509392738342285
    7. 'jou' → logprob: -7.884392738342285
    8. 'i' → logprob: -8.134392738342285
    9. 'jeu' → logprob: -8.134392738342285
    10. 'l' → logprob: -8.884392738342285

Token 982: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.030395610257983208
    2. ' k' → logprob: -3.6553955078125
    3. 'n' → logprob: -5.7803955078125
    4. ' n' → logprob: -7.0303955078125
    5. '`' → logprob: -10.0303955078125
    6. '```' → logprob: -10.6553955078125
    7. 'i' → logprob: -10.7803955078125
    8. ')' → logprob: -11.7803955078125
    9. ' i' → logprob: -12.1553955078125
    10. ',' → logprob: -13.5303955078125

Token 983: ')
' (ID: 446)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.6486093997955322
    2. '):' → logprob: -0.7736093997955322
    3. ')' → logprob: -4.523609161376953
    4. '),' → logprob: -6.898609161376953
    5. '   ' → logprob: -6.898609161376953
    6. ':' → logprob: -7.273609161376953
    7. ' ):
' → logprob: -7.648609161376953
    8. ' ):' → logprob: -8.023609161376953
    9. '):
' → logprob: -8.523609161376953
    10. '):

' → logprob: -8.648609161376953

Token 984: '       ' (ID: 309)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.14037595689296722
    2. '   ' → logprob: -2.265375852584839
    3. '       ' → logprob: -3.640375852584839
    4. ' ans' → logprob: -7.640376091003418
    5. '	ans' → logprob: -8.015376091003418
    6. '#' → logprob: -10.765376091003418
    7. '(ans' → logprob: -10.890376091003418
    8. '     ' → logprob: -11.265376091003418
    9. ':
' → logprob: -11.390376091003418
    10. '           ' → logprob: -11.640376091003418

Token 985: ' #' (ID: 1069)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.20730000734329224
    2. 'if' → logprob: -1.7072999477386475
    3. '#' (adapté à ' #') → logprob: -5.707300186157227
    4. '   ' → logprob: -6.332300186157227
    5. 'prev' → logprob: -9.082300186157227
    6. 'score' → logprob: -9.207300186157227
    7. 'answer' → logprob: -9.457300186157227
    8. 'a' → logprob: -9.832300186157227
    9. 'char' → logprob: -10.082300186157227
    10. 'c' → logprob: -10.707300186157227

Token 986: ' On' (ID: 2160)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.001626025652512908
    2. 'if' → logprob: -6.876626014709473
    3. '#' → logprob: -8.251626014709473
    4. 'a' → logprob: -8.251626014709473
    5. '   ' → logprob: -9.751626014709473
    6. 'score' → logprob: -13.751626014709473
    7. 'c' → logprob: -14.001626014709473
    8. 'answer' → logprob: -14.126626014709473
    9. 'continue' → logprob: -14.126626014709473
    10. '	ans' → logprob: -14.126626014709473

Token 987: ' a' (ID: 261)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.04929070919752121
    2. ' ans' → logprob: -3.799290657043457
    3. '#' → logprob: -4.424290657043457
    4. 'continue' → logprob: -5.674290657043457
    5. '   ' → logprob: -5.799290657043457
    6. '=' → logprob: -7.299290657043457
    7. 'elif' → logprob: -7.299290657043457
    8. ' continue' → logprob: -7.424290657043457
    9. 'if' → logprob: -7.424290657043457
    10. 'subtract' → logprob: -7.674290657043457

Token 988: ' donc' (ID: 14206)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.08941703289747238
    2. 'if' → logprob: -3.714416980743408
    3. ' ans' → logprob: -3.964416980743408
    4. '#' → logprob: -4.214416980743408
    5. ' ' → logprob: -4.464416980743408
    6. '   ' → logprob: -4.964416980743408
    7. ' if' → logprob: -6.464416980743408
    8. '  ' → logprob: -6.589416980743408
    9. ' #' → logprob: -6.964416980743408
    10. 'a' → logprob: -7.214416980743408

Token 989: ' utilisé' (ID: 53138)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.02526749111711979
    2. '   ' → logprob: -3.7752676010131836
    3. '#' → logprob: -6.775267601013184
    4. ' ans' → logprob: -8.275267601013184
    5. ' ' → logprob: -8.775267601013184
    6. '	ans' → logprob: -9.275267601013184
    7. '       ' → logprob: -9.650267601013184
    8. '  ' → logprob: -9.650267601013184
    9. '```' → logprob: -10.275267601013184
    10. '    ' → logprob: -10.275267601013184

Token 990: ' le' (ID: 505)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.2371046394109726
    2. 'ans' → logprob: -1.6121046543121338
    3. 'the' → logprob: -5.487104415893555
    4. '           ' → logprob: -6.487104415893555
    5. '#' → logprob: -6.612104415893555
    6. 'that' → logprob: -6.862104415893555
    7. '       ' → logprob: -7.237104415893555
    8. 't' → logprob: -7.737104415893555
    9. ' a' → logprob: -7.862104415893555
    10. 'i' → logprob: -7.862104415893555

Token 991: ' même' (ID: 9679)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.26026344299316406
    2. ' même' → logprob: -2.260263442993164
    3. 'a' → logprob: -2.885263442993164
    4. 'same' → logprob: -2.885263442993164
    5. 'even' → logprob: -4.885263442993164
    6. 'c' → logprob: -5.760263442993164
    7. '```' → logprob: -6.760263442993164
    8. 'Même' → logprob: -7.635263442993164
    9. '#' → logprob: -8.510263442993164
    10. ' even' → logprob: -9.510263442993164

Token 992: ' coup' (ID: 25465)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.43141090869903564
    2. ' coup' → logprob: -1.0564109086990356
    3. '```' → logprob: -6.931410789489746
    4. 'a' → logprob: -7.431410789489746
    5. 'type' → logprob: -8.931410789489746
    6. 'token' → logprob: -9.181410789489746
    7. 'cou' → logprob: -9.431410789489746
    8. ' a' → logprob: -9.431410789489746
    9. '
' → logprob: -9.681410789489746
    10. 'p' → logprob: -9.681410789489746

Token 993: ' qu' (ID: 474)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05049476400017738
    2. ' =' → logprob: -4.42549467086792
    3. '#' → logprob: -4.67549467086792
    4. '[i' → logprob: -5.05049467086792
    5. '=' → logprob: -5.30049467086792
    6. '[' → logprob: -6.30049467086792
    7. ' -=' → logprob: -6.30049467086792
    8. 'ans' → logprob: -6.55049467086792
    9. 's' → logprob: -6.67549467086792
    10. ' at' → logprob: -6.67549467086792

Token 994: ''il' (ID: 14683)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5091961026191711
    2. 'a' → logprob: -1.7591960430145264
    3. ''i' → logprob: -2.6341960430145264
    4. ''il' → logprob: -3.3841960430145264
    5. 'e' → logprob: -3.6341960430145264
    6. ' i' → logprob: -3.7591960430145264
    7. ''à' → logprob: -3.8841960430145264
    8. '[i' → logprob: -4.2591962814331055
    9. ' a' → logprob: -4.5091962814331055
    10. ''a' → logprob: -5.3841962814331055

Token 995: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.008423914201557636
    2. ' y' → logprob: -4.883423805236816
    3. '```' → logprob: -7.883423805236816
    4. 'f' → logprob: -9.008423805236816
    5. '[i' → logprob: -9.383423805236816
    6. 'a' → logprob: -9.383423805236816
    7. '   ' → logprob: -10.383423805236816
    8. '       ' → logprob: -10.383423805236816
    9. 'i' → logprob: -10.383423805236816
    10. '#' → logprob: -11.258423805236816

Token 996: ' a' (ID: 261)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.023738037794828415
    2. 'a' → logprob: -3.773738145828247
    3. ' y' → logprob: -8.148737907409668
    4. '```' → logprob: -10.023737907409668
    5. ' a' → logprob: -10.398737907409668
    6. '<|end|>' → logprob: -10.648737907409668
    7. 'k' → logprob: -10.773737907409668
    8. 'ya' → logprob: -11.023737907409668
    9. '   ' → logprob: -11.148737907409668
    10. ' ' → logprob: -11.148737907409668

Token 997: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -5.657694418914616e-05
    2. ' k' → logprob: -9.875056266784668
    3. '```' → logprob: -12.875056266784668
    4. '"k' → logprob: -14.125056266784668
    5. '`' → logprob: -14.750056266784668
    6. 'exact' → logprob: -14.750056266784668
    7. ' ' → logprob: -14.875056266784668
    8. '	k' → logprob: -15.750056266784668
    9. '*k' → logprob: -16.000057220458984
    10. 'ks' → logprob: -16.375057220458984

Token 998: ' coups' (ID: 98942)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -1.2532291412353516
    2. ' espaces' → logprob: -1.2532291412353516
    3. 'tokens' → logprob: -1.6282291412353516
    4. ' positions' → logprob: -2.8782291412353516
    5. ' tokens' → logprob: -3.1282291412353516
    6. ' ' → logprob: -3.5032291412353516
    7. 'places' → logprob: -3.5032291412353516
    8. 'esp' → logprob: -4.003229141235352
    9. 'indices' → logprob: -4.128229141235352
    10. 'spaces' → logprob: -4.878229141235352

Token 999: ',' (ID: 11)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.49829763174057007
    2. 'avant' → logprob: -1.3732976913452148
    3. 'ago' → logprob: -2.623297691345215
    4. '   ' → logprob: -3.748297691345215
    5. '```' → logprob: -4.123297691345215
    6. '#' → logprob: -4.498297691345215
    7. ' ago' → logprob: -5.873297691345215
    8. 'before' → logprob: -6.623297691345215
    9. '       ' → logprob: -6.748297691345215
    10. 'au' → logprob: -6.873297691345215

Token 1000: ' ce' (ID: 2357)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5783920288085938
    2. 'ans' → logprob: -0.8283920288085938
    3. ' ans' → logprob: -6.203392028808594
    4. '	ans' → logprob: -8.703392028808594
    5. '#' → logprob: -8.953392028808594
    6. 'if' → logprob: -10.578392028808594
    7. '   ' → logprob: -10.953392028808594
    8. '(ans' → logprob: -11.078392028808594
    9. '        ' → logprob: -11.703392028808594
    10. '        
' → logprob: -11.828392028808594

Token 1001: ' qui' (ID: 2780)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.38590386509895325
    2. '       ' → logprob: -2.385903835296631
    3. 'qui' → logprob: -2.510903835296631
    4. '   ' → logprob: -3.635903835296631
    5. ' qui' → logprob: -4.010903835296631
    6. 'that' → logprob: -4.510903835296631
    7. '```' → logprob: -4.510903835296631
    8. ' #' → logprob: -4.760903835296631
    9. '           ' → logprob: -5.010903835296631
    10. ' that' → logprob: -5.010903835296631

Token 1002: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5829042792320251
    2. '#' → logprob: -2.33290433883667
    3. '       ' → logprob: -2.70790433883667
    4. 'f' → logprob: -2.83290433883667
    5. '           ' → logprob: -3.20790433883667
    6. 'continue' → logprob: -3.45790433883667
    7. '```' → logprob: -3.70790433883667
    8. 'ne' → logprob: -4.08290433883667
    9. '   ' → logprob: -4.45790433883667
    10. ' n' → logprob: -4.70790433883667

Token 1003: ''est' (ID: 6616)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.13486307859420776
    2. '       ' → logprob: -2.6348631381988525
    3. '#' → logprob: -3.5098631381988525
    4. '           ' → logprob: -5.259862899780273
    5. '```' → logprob: -5.509862899780273
    6. '   ' → logprob: -5.634862899780273
    7. 'a' → logprob: -5.759862899780273
    8. '+=' → logprob: -5.884862899780273
    9. '=' → logprob: -6.634862899780273
    10. 'ans' → logprob: -6.759862899780273

Token 1004: ' pas' (ID: 2173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.3233988583087921
    2. 'inter' → logprob: -1.8233988285064697
    3. ' interdit' → logprob: -2.1983988285064697
    4. '#' → logprob: -6.073399066925049
    5. 'pro' → logprob: -7.073399066925049
    6. 'strict' → logprob: -8.57339859008789
    7. 'possible' → logprob: -9.44839859008789
    8. '```' → logprob: -9.44839859008789
    9. 'per' → logprob: -9.94839859008789
    10. 'for' → logprob: -10.19839859008789

Token 1005: ' permis' (ID: 48678)
  Prédit: 'allowed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'allowed' → logprob: -0.14879406988620758
    2. 'per' → logprob: -2.773794174194336
    3. 'autor' → logprob: -3.023794174194336
    4. 'allow' → logprob: -4.398794174194336
    5. 'perm' → logprob: -4.898794174194336
    6. 'permit' → logprob: -6.148794174194336
    7. 'possible' → logprob: -6.398794174194336
    8. ' permis' → logprob: -7.023794174194336
    9. 'aut' → logprob: -8.023794174194336
    10. ' allowed' → logprob: -8.023794174194336

Token 1006: ' pour' (ID: 1930)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002796080196276307
    2. ' =' → logprob: -6.627796173095703
    3. '#' → logprob: -7.877796173095703
    4. '=' → logprob: -7.877796173095703
    5. ',' → logprob: -8.252796173095703
    6. '.' → logprob: -9.127796173095703
    7. ':' → logprob: -10.377796173095703
    8. '[' → logprob: -10.627796173095703
    9. 'if' → logprob: -10.627796173095703
    10. ':
' → logprob: -10.627796173095703

Token 1007: ' scorer' (ID: 133713)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.07887855172157288
    2. 'max' → logprob: -2.82887864112854
    3. 'le' → logprob: -5.828878402709961
    4. 'ob' → logprob: -6.078878402709961
    5. 'rem' → logprob: -6.078878402709961
    6. 'mar' → logprob: -6.078878402709961
    7. ' gagner' → logprob: -6.453878402709961
    8. 'gain' → logprob: -7.328878402709961
    9. 'ne' → logprob: -7.453878402709961
    10. ' maxim' → logprob: -7.828878402709961

Token 1008: '.
' (ID: 558)
  Prédit: ' -='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.6917015314102173
    2. '       ' → logprob: -1.5667015314102173
    3. '[' → logprob: -2.1917014122009277
    4. '-=' → logprob: -2.4417014122009277
    5. '[i' → logprob: -3.6917014122009277
    6. '   ' → logprob: -3.9417014122009277
    7. ':' → logprob: -4.441701412200928
    8. '=' → logprob: -4.816701412200928
    9. '           ' → logprob: -5.066701412200928
    10. '.' → logprob: -5.066701412200928

Token 1009: '       ' (ID: 309)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.010573627427220345
    2. 'if' → logprob: -5.010573863983154
    3. '   ' → logprob: -5.635573863983154
    4. '#' → logprob: -8.885573387145996
    5. 'score' → logprob: -10.510573387145996
    6. 'prev' → logprob: -10.635573387145996
    7. '       ' → logprob: -11.260573387145996
    8. 'op' → logprob: -11.385573387145996
    9. 'answer' → logprob: -11.885573387145996
    10. 'idx' → logprob: -12.260573387145996

Token 1010: ' if' (ID: 538)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.009825390763580799
    2. 'if' (adapté à ' if') → logprob: -5.009825229644775
    3. '#' → logprob: -6.509825229644775
    4. 'a' → logprob: -6.509825229644775
    5. '   ' → logprob: -10.009825706481934
    6. 'score' → logprob: -10.634825706481934
    7. 'c' → logprob: -12.009825706481934
    8. 'answer' → logprob: -12.259825706481934
    9. 't' → logprob: -12.759825706481934
    10. 'char' → logprob: -12.884825706481934

Token 1011: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0025987226981669664
    2. ' a' → logprob: -6.127598762512207
    3. 't' → logprob: -8.127598762512207
    4. 'i' → logprob: -10.002598762512207
    5. '   ' → logprob: -10.127598762512207
    6. ' ' → logprob: -11.627598762512207
    7. ' t' → logprob: -12.127598762512207
    8. '  ' → logprob: -12.377598762512207
    9. 'ans' → logprob: -12.502598762512207
    10. '    ' → logprob: -12.752598762512207

Token 1012: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.3557529857498594e-05
    2. '[a' → logprob: -11.87502384185791
    3. '[' → logprob: -12.00002384185791
    4. 'i' → logprob: -12.75002384185791
    5. 'a' → logprob: -13.00002384185791
    6. ' [' → logprob: -13.87502384185791
    7. '   ' → logprob: -13.87502384185791
    8. '```' → logprob: -14.00002384185791
    9. '[I' → logprob: -14.87502384185791
    10. '[j' → logprob: -15.25002384185791

Token 1013: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.19910560548305511
    2. ']' → logprob: -2.0741055011749268
    3. ' ==' → logprob: -3.5741055011749268
    4. ']==' → logprob: -3.9491055011749268
    5. 'in' → logprob: -6.449105739593506
    6. '=' → logprob: -7.074105739593506
    7. '!=' → logprob: -7.199105739593506
    8. ' in' → logprob: -7.324105739593506
    9. ')' → logprob: -7.324105739593506
    10. 'a' → logprob: -7.574105739593506

Token 1014: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.03738897293806076
    2. ' ==' → logprob: -3.412389039993286
    3. 'in' → logprob: -7.037388801574707
    4. '=="' → logprob: -7.037388801574707
    5. ' in' → logprob: -7.287388801574707
    6. '=='' → logprob: -7.787388801574707
    7. '!=' → logprob: -8.287388801574707
    8. 'a' → logprob: -8.412388801574707
    9. '=' → logprob: -9.287388801574707
    10. '==
' → logprob: -9.537388801574707

Token 1015: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.001695176586508751
    2. ''r' → logprob: -6.501695156097412
    3. ''p' → logprob: -8.62669563293457
    4. 'r' → logprob: -11.37669563293457
    5. 'p' → logprob: -13.75169563293457
    6. ''' → logprob: -14.37669563293457
    7. '"s' → logprob: -15.37669563293457
    8. ' "' → logprob: -15.87669563293457
    9. '   ' → logprob: -16.50169563293457
    10. ''s' → logprob: -17.12669563293457

Token 1016: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.001359401736408472
    2. 'p' → logprob: -6.751359462738037
    3. '"' → logprob: -9.001358985900879
    4. 's' → logprob: -9.751358985900879
    5. ''p' → logprob: -12.751358985900879
    6. ''r' → logprob: -12.876358985900879
    7. ''' → logprob: -13.251358985900879
    8. '"s' → logprob: -16.126359939575195
    9. 'rock' → logprob: -16.251359939575195
    10. ' r' → logprob: -16.626359939575195

Token 1017: '":' (ID: 1243)
  Prédit: '":'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '":' → logprob: -0.005007698200643063
    2. '":
' → logprob: -5.380007743835449
    3. '"' → logprob: -8.75500774383545
    4. ':' → logprob: -9.00500774383545
    5. '":
' → logprob: -9.25500774383545
    6. '":

' → logprob: -12.50500774383545
    7. ' ":' → logprob: -12.63000774383545
    8. '):' → logprob: -13.88000774383545
    9. ':
' → logprob: -14.13000774383545
    10. '”:' → logprob: -15.00500774383545

Token 1018: '    ' (ID: 257)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5795295238494873
    2. 'ans' → logprob: -0.8295295238494873
    3. ' ans' → logprob: -5.954529762268066
    4. '	ans' → logprob: -7.454529762268066
    5. '   ' → logprob: -8.204529762268066
    6. '           ' → logprob: -9.079529762268066
    7. '(ans' → logprob: -11.704529762268066
    8. '     ' → logprob: -12.704529762268066
    9. '	   ' → logprob: -13.079529762268066
    10. '      ' → logprob: -13.079529762268066

Token 1019: ' #' (ID: 1069)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0045508150942623615
    2. '   ' → logprob: -6.379550933837891
    3. '           ' → logprob: -6.504550933837891
    4. ' ans' → logprob: -6.879550933837891
    5. '	ans' → logprob: -8.50455093383789
    6. '       ' → logprob: -9.12955093383789
    7. '
' → logprob: -12.12955093383789
    8. '(ans' → logprob: -14.12955093383789
    9. ' ' → logprob: -14.75455093383789
    10. '               ' → logprob: -14.75455093383789

Token 1020: ' Si' (ID: 7832)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0005361131625249982
    2. ' ans' → logprob: -8.25053596496582
    3. '   ' → logprob: -8.50053596496582
    4. '	ans' → logprob: -9.62553596496582
    5. '           ' → logprob: -12.62553596496582
    6. '       ' → logprob: -13.75053596496582
    7. '(ans' → logprob: -14.25053596496582
    8. ' ' → logprob: -16.00053596496582
    9. '
' → logprob: -16.37553596496582
    10. '  ' → logprob: -16.37553596496582

Token 1021: ' le' (ID: 505)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.3001333177089691
    2. ' ans' → logprob: -1.5501333475112915
    3. 'a' → logprob: -4.050133228302002
    4. 'r' → logprob: -4.675133228302002
    5. ' a' → logprob: -4.925133228302002
    6. 's' → logprob: -6.425133228302002
    7. '"' → logprob: -6.425133228302002
    8. ' ' → logprob: -6.425133228302002
    9. ' r' → logprob: -6.550133228302002
    10. ' s' → logprob: -6.550133228302002

Token 1022: ' coup' (ID: 25465)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7992602586746216
    2. '"' → logprob: -1.0492602586746216
    3. 'r' → logprob: -2.049260139465332
    4. 'ans' → logprob: -3.924260139465332
    5. ''a' → logprob: -4.424260139465332
    6. '"a' → logprob: -4.424260139465332
    7. ''' → logprob: -5.049260139465332
    8. ' "' → logprob: -5.424260139465332
    9. 'c' → logprob: -5.549260139465332
    10. ''r' → logprob: -5.924260139465332

Token 1023: ' interdit' (ID: 129427)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.6467383503913879
    2. '==' → logprob: -0.7717383503913879
    3. '[i' → logprob: -5.646738529205322
    4. '=="' → logprob: -5.646738529205322
    5. '=' → logprob: -6.021738529205322
    6. 'a' → logprob: -6.146738529205322
    7. 's' → logprob: -7.646738529205322
    8. ' =' → logprob: -7.896738529205322
    9. '[' → logprob: -7.896738529205322
    10. '"' → logprob: -8.271738052368164

Token 1024: ' est' (ID: 893)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.2996291518211365
    2. '==' → logprob: -1.4246292114257812
    3. '       ' → logprob: -5.549629211425781
    4. '=="' → logprob: -5.674629211425781
    5. ' =' → logprob: -6.049629211425781
    6. ':' → logprob: -6.049629211425781
    7. '=' → logprob: -6.549629211425781
    8. '"' → logprob: -6.924629211425781
    9. ' =="' → logprob: -7.299629211425781
    10. 's' → logprob: -7.424629211425781

Token 1025: ' '' (ID: 461)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.07742229849100113
    2. ' "' → logprob: -2.9524223804473877
    3. ''r' → logprob: -4.327422142028809
    4. ' '' → logprob: -5.077422142028809
    5. ''' → logprob: -6.827422142028809
    6. 'r' → logprob: -7.077422142028809
    7. '   ' → logprob: -8.077422142028809
    8. '       ' → logprob: -9.452422142028809
    9. '"a' → logprob: -9.452422142028809
    10. ' ' → logprob: -9.577422142028809

Token 1026: 'rock' (ID: 21032)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.05634558945894241
    2. '"' → logprob: -2.9313457012176514
    3. ''r' → logprob: -6.556345462799072
    4. ''' → logprob: -10.30634593963623
    5. ' r' → logprob: -13.30634593963623
    6. '`' → logprob: -13.80634593963623
    7. ' "' → logprob: -13.93134593963623
    8. '"s' → logprob: -14.18134593963623
    9. '	r' → logprob: -15.05634593963623
    10. 'rock' → logprob: -15.18134593963623

Token 1027: '',' (ID: 787)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.39206749200820923
    2. ':
' → logprob: -1.2670674324035645
    3. '":' → logprob: -3.8920674324035645
    4. '":
' → logprob: -4.6420674324035645
    5. '):
' → logprob: -5.1420674324035645
    6. '):' → logprob: -5.7670674324035645
    7. '       ' → logprob: -6.5170674324035645
    8. '   ' → logprob: -7.5170674324035645
    9. '"' → logprob: -8.517067909240723
    10. ',' → logprob: -8.517067909240723

Token 1028: ' 
' (ID: 793)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.008639270439743996
    2. '   ' → logprob: -5.383639335632324
    3. ' ans' → logprob: -5.883639335632324
    4. '           ' → logprob: -6.883639335632324
    5. '       ' → logprob: -9.258639335632324
    6. '	ans' → logprob: -9.258639335632324
    7. 'a' → logprob: -12.258639335632324
    8. ' ' → logprob: -13.383639335632324
    9. '(ans' → logprob: -13.383639335632324
    10. '  ' → logprob: -14.508639335632324

Token 1029: '           ' (ID: 352)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0003065030323341489
    2. '   ' → logprob: -9.000306129455566
    3. ' ans' → logprob: -9.250306129455566
    4. '       ' → logprob: -10.125306129455566
    5. '	ans' → logprob: -10.125306129455566
    6. '           ' → logprob: -12.000306129455566
    7. '(ans' → logprob: -14.875306129455566
    8. 'a' → logprob: -16.750307083129883
    9. '  ' → logprob: -17.125307083129883
    10. '         ' → logprob: -17.125307083129883

Token 1030: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -5.717296517104842e-05
    2. '           ' → logprob: -10.500057220458984
    3. ' ans' → logprob: -10.750057220458984
    4. '   ' → logprob: -12.000057220458984
    5. '	ans' → logprob: -13.250057220458984
    6. '       ' → logprob: -16.000057220458984
    7. '(ans' → logprob: -17.375057220458984
    8. 'a' → logprob: -18.250057220458984
    9. '         ' → logprob: -18.625057220458984
    10. 'Ans' → logprob: -18.625057220458984

Token 1031: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.01428667176514864
    2. ' -=' → logprob: -4.264286518096924
    3. '-' → logprob: -9.014286994934082
    4. '   ' → logprob: -13.889286994934082
    5. ' -' → logprob: -14.889286994934082
    6. '=' → logprob: -15.639286994934082
    7. '+=' → logprob: -18.014286041259766
    8. '    ' → logprob: -18.389286041259766
    9. ' ' → logprob: -19.139286041259766
    10. '           ' → logprob: -19.514286041259766

Token 1032: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.9361264946837764e-07
    2. ' r' → logprob: -16.0
    3. '           ' → logprob: -18.375
    4. '	r' → logprob: -21.875
    5. '       ' → logprob: -23.0
    6. '_r' → logprob: -23.25
    7. '­r' → logprob: -23.625
    8. '   ' → logprob: -23.75
    9. '         ' → logprob: -23.75
    10. '               ' → logprob: -24.125

Token 1033: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004863938316702843
    2. 'elif' → logprob: -5.504863739013672
    3. ' elif' → logprob: -8.254863739013672
    4. '<|end|>' → logprob: -8.879863739013672
    5. '   ' → logprob: -9.129863739013672
    6. '#' → logprob: -9.254863739013672
    7. '<|end|>' → logprob: -10.004863739013672
    8. '
' → logprob: -10.004863739013672
    9. '	elif' → logprob: -10.629863739013672
    10. ')' → logprob: -10.879863739013672

Token 1034: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0029933934565633535
    2. 'elif' → logprob: -6.002993583679199
    3. '#' (adapté à ' #') → logprob: -8.8779935836792
    4. ' elif' → logprob: -9.1279935836792
    5. '
' → logprob: -9.6279935836792
    6. '           ' → logprob: -9.8779935836792
    7. '   ' → logprob: -9.8779935836792
    8. ')' → logprob: -10.3779935836792
    9. '<|end|>' → logprob: -11.1279935836792
    10. 'else' → logprob: -12.1279935836792

Token 1035: ' On' (ID: 2160)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.29255446791648865
    2. '           ' → logprob: -2.4175543785095215
    3. '<|end|>' → logprob: -2.5425543785095215
    4. 'r' → logprob: -3.4175543785095215
    5. '0' → logprob: -4.2925543785095215
    6. '<|end|>' → logprob: -4.6675543785095215
    7. ')' → logprob: -5.1675543785095215
    8. ' r' → logprob: -5.6675543785095215
    9. 'elif' → logprob: -5.7925543785095215
    10. 'n' → logprob: -5.7925543785095215

Token 1036: ' sou' (ID: 4069)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.011196601204574108
    2. ' -=' → logprob: -4.511196613311768
    3. '-' → logprob: -8.88619613647461
    4. '+=' → logprob: -12.76119613647461
    5. '<|end|>' → logprob: -12.76119613647461
    6. '=' → logprob: -13.13619613647461
    7. ')' → logprob: -13.63619613647461
    8. ')-' → logprob: -15.26119613647461
    9. 'subtract' → logprob: -15.26119613647461
    10. '>' → logprob: -15.88619613647461

Token 1037: 'stra' (ID: 14867)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.05070476233959198
    2. 'tract' → logprob: -3.6757047176361084
    3. 'b' → logprob: -4.9257049560546875
    4. '+=' → logprob: -5.9257049560546875
    5. 'stract' → logprob: -5.9257049560546875
    6. 'bs' → logprob: -6.3007049560546875
    7. 'tr' → logprob: -6.3007049560546875
    8. '(ans' → logprob: -6.3007049560546875
    9. '	ans' → logprob: -6.5507049560546875
    10. '```' → logprob: -7.1757049560546875

Token 1038: 'it' (ID: 278)
  Prédit: 'ct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ct' → logprob: -0.6112439632415771
    2. 'it' → logprob: -2.111243963241577
    3. 't' → logprob: -2.361243963241577
    4. 'is' → logprob: -2.361243963241577
    5. 'stract' → logprob: -3.236243963241577
    6. 'r' → logprob: -3.736243963241577
    7. 'i' → logprob: -4.236244201660156
    8. 'e' → logprob: -4.611244201660156
    9. 'st' → logprob: -4.736244201660156
    10. 'tract' → logprob: -4.736244201660156

Token 1039: ' le' (ID: 505)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.000553151941858232
    2. ' r' → logprob: -7.500553131103516
    3. '           ' → logprob: -15.875553131103516
    4. '_r' → logprob: -17.750553131103516
    5. '	r' → logprob: -19.375553131103516
    6. ' ' → logprob: -20.000553131103516
    7. '            
' → logprob: -20.500553131103516
    8. '       ' → logprob: -21.000553131103516
    9. '+r' → logprob: -21.000553131103516
    10. '­r' → logprob: -21.250553131103516

Token 1040: ' score' (ID: 8429)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -9.014684110297821e-06
    2. ' r' → logprob: -11.625008583068848
    3. 'score' → logprob: -17.500009536743164
    4. 'rans' → logprob: -17.750009536743164
    5. '	r' → logprob: -19.125009536743164
    6. 'ré' → logprob: -19.500009536743164
    7. 'ans' → logprob: -19.625009536743164
    8. '
' → logprob: -19.750009536743164
    9. '_r' → logprob: -20.375009536743164
    10. '­r' → logprob: -20.500009536743164

Token 1041: ' r' (ID: 428)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1042: ' car' (ID: 1669)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1043: ' ce' (ID: 2357)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.3561398684978485
    2. 'ans' → logprob: -1.856139898300171
    3. ' on' → logprob: -2.981139898300171
    4. ' r' → logprob: -3.231139898300171
    5. ' ans' → logprob: -3.481139898300171
    6. ' il' → logprob: -4.981139659881592
    7. ' it' → logprob: -5.231139659881592
    8. '           ' → logprob: -5.481139659881592
    9. ' le' → logprob: -6.981139659881592
    10. 'on' → logprob: -7.481139659881592

Token 1044: ' point' (ID: 2438)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -1.0196250677108765
    2. 'n' → logprob: -1.1446250677108765
    3. 'ans' → logprob: -1.7696250677108765
    4. ' ans' → logprob: -2.769625186920166
    5. '<|end|>' → logprob: -3.644625186920166
    6. ' ne' → logprob: -4.269625186920166
    7. ' score' → logprob: -4.644625186920166
    8. '#' → logprob: -5.769625186920166
    9. 'score' → logprob: -5.894625186920166
    10. '       ' → logprob: -6.144625186920166

Token 1045: ' ne' (ID: 453)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1046: ' doit' (ID: 21822)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1047: ' pas' (ID: 2173)
  Prédit: ' pas'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pas' → logprob: -0.6450527310371399
    2. 'pas' → logprob: -1.0200526714324951
    3. '=' → logprob: -2.895052671432495
    4. '+=' → logprob: -3.270052671432495
    5. 'not' → logprob: -5.270052909851074
    6. 'être' → logprob: -5.770052909851074
    7. '```' → logprob: -5.895052909851074
    8. ' not' → logprob: -6.145052909851074
    9. '.' → logprob: -6.270052909851074
    10. ' +=' → logprob: -6.395052909851074

Token 1048: ' être' (ID: 9104)
  Prédit: 'être'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'être' → logprob: -0.01826021820306778
    2. ' être' → logprob: -4.2682600021362305
    3. 'comp' → logprob: -6.5182600021362305
    4. 'êtres' → logprob: -7.0182600021362305
    5. 'etre' → logprob: -7.5182600021362305
    6. ''être' → logprob: -7.7682600021362305
    7. ' compter' → logprob: -8.51826000213623
    8. '’être' → logprob: -9.51826000213623
    9. 'be' → logprob: -9.64326000213623
    10. '_' → logprob: -9.76826000213623

Token 1049: ' compt' (ID: 39238)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.0049181426875293255
    2. 'comp' → logprob: -5.379918098449707
    3. ' compt' → logprob: -9.004918098449707
    4. 'count' → logprob: -9.629918098449707
    5. 'pris' → logprob: -10.754918098449707
    6. 'aj' → logprob: -10.879918098449707
    7. 'valid' → logprob: -11.629918098449707
    8. 'con' → logprob: -11.629918098449707
    9. '   ' → logprob: -11.754918098449707
    10. 'cons' → logprob: -12.129918098449707

Token 1050: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.0006410692585632205
    2. 'ré' → logprob: -7.625640869140625
    3. 'u' → logprob: -10.875640869140625
    4. 'er' → logprob: -11.125640869140625
    5. 'isé' → logprob: -11.250640869140625
    6. 'éné' → logprob: -11.500640869140625
    7. 'e' → logprob: -11.500640869140625
    8. ')' → logprob: -11.625640869140625
    9. 'abil' → logprob: -12.000640869140625
    10. 'r' → logprob: -12.250640869140625

Token 1051: '.
' (ID: 558)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1052: '       ' (ID: 309)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.007307018619030714
    2. '   ' → logprob: -5.507307052612305
    3. '       ' → logprob: -6.007307052612305
    4. ' elif' → logprob: -7.257307052612305
    5. '	elif' → logprob: -10.382307052612305
    6. '```' → logprob: -11.132307052612305
    7. 'if' → logprob: -12.757307052612305
    8. '`' → logprob: -13.257307052612305
    9. 'a' → logprob: -13.257307052612305
    10. '           ' → logprob: -13.632307052612305

Token 1053: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.043423548340797424
    2. '   ' → logprob: -3.293423652648926
    3. '       ' → logprob: -5.418423652648926
    4. ' elif' → logprob: -7.043423652648926
    5. '	elif' → logprob: -9.793423652648926
    6. ' ' → logprob: -14.043423652648926
    7. '           ' → logprob: -14.043423652648926
    8. '  ' → logprob: -14.168423652648926
    9. '    ' → logprob: -14.418423652648926
    10. '```' → logprob: -15.043423652648926

Token 1054: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.03364754095673561
    2. ' a' → logprob: -3.4086475372314453
    3. '   ' → logprob: -13.783647537231445
    4. ' ' → logprob: -15.158647537231445
    5. '	a' → logprob: -15.408647537231445
    6. '       ' → logprob: -16.658647537231445
    7. ' ' → logprob: -16.783647537231445
    8. '(a' → logprob: -16.908647537231445
    9. '    ' → logprob: -16.908647537231445
    10. '     ' → logprob: -17.158647537231445

Token 1055: '[i' (ID: 1768)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5247001051902771
    2. ' a' → logprob: -0.8997001051902771
    3. '[a' → logprob: -6.774700164794922
    4. '[i' → logprob: -8.524700164794922
    5. 's' → logprob: -8.899700164794922
    6. 'i' → logprob: -10.149700164794922
    7. ' i' → logprob: -11.399700164794922
    8. ' s' → logprob: -11.399700164794922
    9. '==' → logprob: -12.024700164794922
    10. '(a' → logprob: -12.149700164794922

Token 1056: ']' (ID: 60)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.16023032367229462
    2. '==' → logprob: -1.910230278968811
    3. '=="' → logprob: -12.78523063659668
    4. ']==' → logprob: -13.91023063659668
    5. ' ' → logprob: -14.66023063659668
    6. ' ' → logprob: -14.78523063659668
    7. '=' → logprob: -14.91023063659668
    8. ' =="' → logprob: -14.91023063659668
    9. '=='' → logprob: -15.53523063659668
    10. ')==' → logprob: -16.03523063659668

Token 1057: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.4287862181663513
    2. ' ==' → logprob: -1.053786277770996
    3. '=="' → logprob: -9.428786277770996
    4. '=' → logprob: -13.678786277770996
    5. ' =="' → logprob: -13.678786277770996
    6. 'a' → logprob: -14.553786277770996
    7. '==
' → logprob: -14.803786277770996
    8. '"' → logprob: -15.053786277770996
    9. '=='' → logprob: -15.178786277770996
    10. '===' → logprob: -15.303786277770996

Token 1058: ' "' (ID: 392)
  Prédit: '"s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"s' → logprob: -9.305326966568828e-05
    2. ''s' → logprob: -9.500093460083008
    3. 's' → logprob: -11.250093460083008
    4. '"' → logprob: -12.500093460083008
    5. '`s' → logprob: -14.625093460083008
    6. ' "' → logprob: -14.625093460083008
    7. ' s' → logprob: -14.750093460083008
    8. ' ' → logprob: -17.500093460083008
    9. '<s' → logprob: -19.125093460083008
    10. '	s' → logprob: -19.375093460083008

Token 1059: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.006024076137691736
    2. '"s' → logprob: -5.13102388381958
    3. ''s' → logprob: -9.381024360656738
    4. '`s' → logprob: -11.881024360656738
    5. '"' → logprob: -12.756024360656738
    6. ' s' → logprob: -13.881024360656738
    7. 'p' → logprob: -15.381024360656738
    8. '	s' → logprob: -17.256023406982422
    9. '```' → logprob: -17.506023406982422
    10. ' "' → logprob: -17.631023406982422

Token 1060: '":' (ID: 1243)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0012821375858038664
    2. '       ' → logprob: -7.376282215118408
    3. ':
' → logprob: -7.751282215118408
    4. '           ' → logprob: -9.12628173828125
    5. '=' → logprob: -10.62628173828125
    6. '):' → logprob: -10.75128173828125
    7. ' :' → logprob: -11.00128173828125
    8. '==' → logprob: -11.00128173828125
    9. '":' → logprob: -11.37628173828125
    10. ' =' → logprob: -11.75128173828125

Token 1061: '  ' (ID: 256)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4096932113170624
    2. ' ans' → logprob: -1.1596932411193848
    3. 'ans' → logprob: -3.9096932411193848
    4. '       ' → logprob: -6.159693241119385
    5. '(ans' → logprob: -8.659692764282227
    6. '	ans' → logprob: -8.909692764282227
    7. '               ' → logprob: -10.659692764282227
    8. '          ' → logprob: -11.034692764282227
    9. '         ' → logprob: -11.409692764282227
    10. '```' → logprob: -11.409692764282227

Token 1062: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14108328521251678
    2. '       ' → logprob: -2.516083240509033
    3. ' ans' → logprob: -3.516083240509033
    4. 'ans' → logprob: -3.891083240509033
    5. '(ans' → logprob: -8.516083717346191
    6. '	ans' → logprob: -9.141083717346191
    7. '-' → logprob: -9.641083717346191
    8. '          ' → logprob: -9.641083717346191
    9. '               ' → logprob: -9.641083717346191
    10. '   ' → logprob: -9.766083717346191

Token 1063: ' Si' (ID: 7832)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.020072411745786667
    2. 'ans' → logprob: -4.1450724601745605
    3. ' ans' → logprob: -5.5200724601745605
    4. '	ans' → logprob: -11.645071983337402
    5. '(ans' → logprob: -12.270071983337402
    6. ' ' → logprob: -12.645071983337402
    7. '       ' → logprob: -12.770071983337402
    8. '          ' → logprob: -13.270071983337402
    9. '```' → logprob: -13.520071983337402
    10. '               ' → logprob: -14.270071983337402

Token 1064: ' c' (ID: 274)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5231376886367798
    2. ' a' → logprob: -0.8981376886367798
    3. 'ans' → logprob: -12.648138046264648
    4. 'i' → logprob: -12.898138046264648
    5. ' ans' → logprob: -12.898138046264648
    6. ' ' → logprob: -13.523138046264648
    7. '	a' → logprob: -13.523138046264648
    8. '   ' → logprob: -14.148138046264648
    9. ' i' → logprob: -14.523138046264648
    10. ' ' → logprob: -14.523138046264648

Token 1065: ''est' (ID: 6616)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.47546812891960144
    2. ' a' → logprob: -1.4754681587219238
    3. '==' → logprob: -2.600468158721924
    4. ' ==' → logprob: -2.600468158721924
    5. 'ans' → logprob: -8.225467681884766
    6. ' ans' → logprob: -8.350467681884766
    7. 'elif' → logprob: -8.475467681884766
    8. '   ' → logprob: -8.725467681884766
    9. 'i' → logprob: -9.350467681884766
    10. '           ' → logprob: -9.850467681884766

Token 1066: ' '' (ID: 461)
  Prédit: '"s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"s' → logprob: -0.007598699536174536
    2. 's' → logprob: -5.007598876953125
    3. ''s' → logprob: -7.257598876953125
    4. '"' → logprob: -9.382598876953125
    5. ' "' → logprob: -10.257598876953125
    6. '`s' → logprob: -10.382598876953125
    7. ' s' → logprob: -10.757598876953125
    8. '   ' → logprob: -13.632598876953125
    9. 'a' → logprob: -14.007598876953125
    10. ' ' → logprob: -14.132598876953125

Token 1067: 'sc' (ID: 2786)
  Prédit: '"s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"s' → logprob: -0.01420652586966753
    2. 's' → logprob: -4.264206409454346
    3. ''s' → logprob: -10.514206886291504
    4. '`s' → logprob: -11.139206886291504
    5. ' s' → logprob: -13.889206886291504
    6. '"' → logprob: -15.139206886291504
    7. '}s' → logprob: -17.889205932617188
    8. ' "' → logprob: -18.014205932617188
    9. '<s' → logprob: -19.139205932617188
    10. ' ' → logprob: -19.389205932617188

Token 1068: 'issors' (ID: 69357)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.23931823670864105
    2. '"s' → logprob: -1.9893182516098022
    3. '"' → logprob: -2.6143181324005127
    4. '```' → logprob: -6.614318370819092
    5. ''s' → logprob: -7.614318370819092
    6. 'if' → logprob: -7.739318370819092
    7. '`s' → logprob: -9.114317893981934
    8. 'elif' → logprob: -9.364317893981934
    9. '   ' → logprob: -9.864317893981934
    10. '       ' → logprob: -10.239317893981934

Token 1069: '',
' (ID: 1214)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.30749866366386414
    2. '       ' → logprob: -1.4324986934661865
    3. '           ' → logprob: -4.057498455047607
    4. ':
' → logprob: -5.182498455047607
    5. ',' → logprob: -6.182498455047607
    6. '):' → logprob: -8.307498931884766
    7. '   ' → logprob: -8.432498931884766
    8. '```' → logprob: -9.182498931884766
    9. ' :' → logprob: -9.807498931884766
    10. '          ' → logprob: -10.307498931884766

Token 1070: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.253041535615921
    2. 'ans' → logprob: -1.5030415058135986
    3. '       ' → logprob: -7.003041744232178
    4. ' ans' → logprob: -8.62804126739502
    5. '	ans' → logprob: -11.37804126739502
    6. '   ' → logprob: -12.50304126739502
    7. '               ' → logprob: -12.62804126739502
    8. '(ans' → logprob: -12.87804126739502
    9. '          ' → logprob: -13.62804126739502
    10. '         ' → logprob: -15.25304126739502

Token 1071: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -3.9054008084349334e-05
    2. ' ans' → logprob: -10.250039100646973
    3. '           ' → logprob: -13.375039100646973
    4. '	ans' → logprob: -13.875039100646973
    5. '       ' → logprob: -14.125039100646973
    6. '   ' → logprob: -14.875039100646973
    7. '(ans' → logprob: -16.875038146972656
    8. 's' → logprob: -17.875038146972656
    9. 'answer' → logprob: -19.125038146972656
    10. '_ans' → logprob: -19.875038146972656

Token 1072: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.0381244532763958
    2. ' -=' → logprob: -3.2881245613098145
    3. '-' → logprob: -9.538124084472656
    4. '   ' → logprob: -11.538124084472656
    5. '       ' → logprob: -15.163124084472656
    6. ' ' → logprob: -15.163124084472656
    7. '  ' → logprob: -15.913124084472656
    8. ' ' → logprob: -16.038124084472656
    9. '=' → logprob: -16.038124084472656
    10. '           ' → logprob: -16.538124084472656

Token 1073: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -9.088346359931165e-07
    2. ' s' → logprob: -14.000000953674316
    3. '   ' → logprob: -22.0
    4. '       ' → logprob: -23.0
    5. '	s' → logprob: -23.375
    6. '`s' → logprob: -23.5
    7. '{s' → logprob: -23.625
    8. '           ' → logprob: -24.875
    9. '_s' → logprob: -25.125
    10. '    ' → logprob: -25.625

Token 1074: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0035670462530106306
    2. '<|end|>' → logprob: -5.753567218780518
    3. '#' → logprob: -8.00356674194336
    4. ')' → logprob: -10.75356674194336
    5. '<|end|>' → logprob: -11.37856674194336
    6. '      ' → logprob: -11.37856674194336
    7. '   ' → logprob: -13.25356674194336
    8. ' #' → logprob: -13.37856674194336
    9. '     ' → logprob: -13.37856674194336
    10. '        ' → logprob: -13.50356674194336

Token 1075: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014868320897221565
    2. '#' (adapté à ' #') → logprob: -4.764868259429932
    3. '<|end|>' → logprob: -5.139868259429932
    4. ')' → logprob: -9.51486873626709
    5. '<|end|>' → logprob: -9.76486873626709
    6. ' #' → logprob: -9.76486873626709
    7. ' ' → logprob: -10.63986873626709
    8. '   ' → logprob: -10.76486873626709
    9. '	' → logprob: -10.76486873626709
    10. '      ' → logprob: -10.88986873626709

Token 1076: ' On' (ID: 2160)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1213881969451904
    2. 'ans' → logprob: -1.1213881969451904
    3. ' ans' → logprob: -1.7463881969451904
    4. '           ' → logprob: -2.3713881969451904
    5. '<|end|>' → logprob: -2.9963881969451904
    6. '#' → logprob: -4.4963884353637695
    7. '(ans' → logprob: -4.8713884353637695
    8. '	ans' → logprob: -5.2463884353637695
    9. '```' → logprob: -5.7463884353637695
    10. '<|end|>' → logprob: -6.8713884353637695

Token 1077: ' sou' (ID: 4069)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.27665331959724426
    2. ' -=' → logprob: -2.026653289794922
    3. 'ans' → logprob: -2.776653289794922
    4. ' ans' → logprob: -3.651653289794922
    5. '           ' → logprob: -4.651653289794922
    6. '       ' → logprob: -5.526653289794922
    7. '-' → logprob: -5.651653289794922
    8. '#' → logprob: -6.776653289794922
    9. '	ans' → logprob: -7.276653289794922
    10. '=' → logprob: -7.276653289794922

Token 1078: 'stra' (ID: 14867)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.13994334638118744
    2. 'stract' → logprob: -2.2649433612823486
    3. '-=' → logprob: -5.2649431228637695
    4. '           ' → logprob: -5.3899431228637695
    5. 'br' → logprob: -5.7649431228637695
    6. 'bst' → logprob: -5.8899431228637695
    7. 'subtract' → logprob: -6.2649431228637695
    8. ' -=' → logprob: -6.2649431228637695
    9. 'tract' → logprob: -6.3899431228637695
    10. '   ' → logprob: -6.5149431228637695

Token 1079: 'it' (ID: 278)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.009793633595108986
    2. 't' → logprob: -5.759793758392334
    3. 'p' → logprob: -6.134793758392334
    4. 'r' → logprob: -6.509793758392334
    5. 'is' → logprob: -6.759793758392334
    6. 'stract' → logprob: -7.634793758392334
    7. '   ' → logprob: -7.759793758392334
    8. 'it' → logprob: -8.634793281555176
    9. '-' → logprob: -9.384793281555176
    10. '       ' → logprob: -9.634793281555176

Token 1080: ' le' (ID: 505)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0010604370618239045
    2. ' s' → logprob: -6.876060485839844
    3. '<|end|>' → logprob: -10.751060485839844
    4. '           ' → logprob: -12.626060485839844
    5. '_s' → logprob: -14.001060485839844
    6. '       ' → logprob: -14.001060485839844
    7. '(s' → logprob: -15.126060485839844
    8. '.s' → logprob: -15.751060485839844
    9. '<|end|>' → logprob: -15.876060485839844
    10. '	s' → logprob: -15.876060485839844

Token 1081: ' score' (ID: 8429)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -9.014684110297821e-06
    2. ' s' → logprob: -11.625008583068848
    3. '<|end|>' → logprob: -17.250009536743164
    4. 'ans' → logprob: -17.625009536743164
    5. '_s' → logprob: -17.625009536743164
    6. '       ' → logprob: -19.750009536743164
    7. 'S' → logprob: -20.125009536743164
    8. '#' → logprob: -20.125009536743164
    9. '           ' → logprob: -20.250009536743164
    10. ' ' → logprob: -20.250009536743164

Token 1082: ' s' (ID: 265)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1083: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010089774616062641
    2. '<|end|>' → logprob: -4.635089874267578
    3. '.' → logprob: -8.760089874267578
    4. '<|end|>' → logprob: -9.135089874267578
    5. ')' → logprob: -10.510089874267578
    6. '#' → logprob: -11.260089874267578
    7. '   ' → logprob: -11.760089874267578
    8. ' else' → logprob: -13.010089874267578
    9. '      ' → logprob: -13.135089874267578
    10. 'else' → logprob: -13.135089874267578

Token 1084: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07906373590230942
    2. 'else' → logprob: -2.579063653945923
    3. ' else' → logprob: -8.954063415527344
    4. 'elif' → logprob: -10.204063415527344
    5. '	' → logprob: -12.704063415527344
    6. '```' → logprob: -12.704063415527344
    7. '<|end|>' → logprob: -14.579063415527344
    8. '	else' → logprob: -14.704063415527344
    9. '   ' → logprob: -15.829063415527344
    10. '           ' → logprob: -15.829063415527344

Token 1085: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.693409264087677
    2. 'else' (adapté à ' else') → logprob: -0.693409264087677
    3. 'elif' → logprob: -8.568408966064453
    4. ' else' → logprob: -9.568408966064453
    5. '```' → logprob: -14.193408966064453
    6. '   ' → logprob: -14.318408966064453
    7. '           ' → logprob: -15.693408966064453
    8. '	else' → logprob: -15.693408966064453
    9. '#' → logprob: -15.693408966064453
    10. '	' → logprob: -16.193408966064453

Token 1086: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0012474933173507452
    2. ':
' → logprob: -6.876247406005859
    3. ' :' → logprob: -8.62624740600586
    4. '           ' → logprob: -10.62624740600586
    5. '       ' → logprob: -12.50124740600586
    6. ':
' → logprob: -13.25124740600586
    7. ' :
' → logprob: -13.37624740600586
    8. '          ' → logprob: -13.50124740600586
    9. '        ' → logprob: -14.25124740600586
    10. '=' → logprob: -15.00124740600586

Token 1087: '              ' (ID: 4442)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.015663601458072662
    2. ' ans' → logprob: -4.5156636238098145
    3. 'ans' → logprob: -5.3906636238098145
    4. '	ans' → logprob: -11.015663146972656
    5. '          ' → logprob: -11.390663146972656
    6. '       ' → logprob: -12.015663146972656
    7. '(ans' → logprob: -12.140663146972656
    8. '   ' → logprob: -13.140663146972656
    9. '         ' → logprob: -13.515663146972656
    10. '               ' → logprob: -13.640663146972656

Token 1088: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.30694809556007385
    2. ' ans' → logprob: -1.5569480657577515
    3. 'ans' → logprob: -2.931948184967041
    4. '(ans' → logprob: -9.056947708129883
    5. '	ans' → logprob: -9.306947708129883
    6. '          ' → logprob: -10.931947708129883
    7. '       ' → logprob: -12.306947708129883
    8. '_ans' → logprob: -13.056947708129883
    9. '```' → logprob: -13.181947708129883
    10. '         ' → logprob: -13.681947708129883

Token 1089: ' Si' (ID: 7832)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.3966374099254608
    2. '           ' → logprob: -1.1466374397277832
    3. ' ans' → logprob: -4.646637439727783
    4. '	ans' → logprob: -9.271636962890625
    5. '(ans' → logprob: -11.021636962890625
    6. '   ' → logprob: -12.271636962890625
    7. '       ' → logprob: -12.521636962890625
    8. '          ' → logprob: -12.521636962890625
    9. '         ' → logprob: -14.396636962890625
    10. ' ' → logprob: -14.646636962890625

Token 1090: ' c' (ID: 274)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.42904970049858093
    2. 'a' → logprob: -1.0540497303009033
    3. 'ans' → logprob: -8.554049491882324
    4. '           ' → logprob: -9.679049491882324
    5. ' ans' → logprob: -9.804049491882324
    6. '	a' → logprob: -10.804049491882324
    7. '"a' → logprob: -12.804049491882324
    8. '         ' → logprob: -13.179049491882324
    9. '   ' → logprob: -13.179049491882324
    10. ' ' → logprob: -13.554049491882324

Token 1091: ''est' (ID: 6616)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.005335859023034573
    2. '==' → logprob: -6.005335807800293
    3. ' a' → logprob: -6.130335807800293
    4. ' ==' → logprob: -7.505335807800293
    5. '   ' → logprob: -9.630335807800293
    6. '[a' → logprob: -10.630335807800293
    7. 'i' → logprob: -12.130335807800293
    8. '           ' → logprob: -12.130335807800293
    9. '[i' → logprob: -12.255335807800293
    10. '_a' → logprob: -12.255335807800293

Token 1092: ' '' (ID: 461)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.04797227308154106
    2. ' "' → logprob: -3.4229722023010254
    3. ''p' → logprob: -5.172972202301025
    4. ' p' → logprob: -5.297972202301025
    5. 'p' → logprob: -5.797972202301025
    6. '	p' → logprob: -8.672972679138184
    7. '   ' → logprob: -9.172972679138184
    8. '           ' → logprob: -9.922972679138184
    9. ' '' → logprob: -10.047972679138184
    10. '_p' → logprob: -10.172972679138184

Token 1093: 'paper' (ID: 23112)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.03089473582804203
    2. 'p' → logprob: -3.5308947563171387
    3. ''p' → logprob: -6.780894756317139
    4. ' p' → logprob: -13.28089427947998
    5. '	p' → logprob: -13.53089427947998
    6. '<p' → logprob: -13.53089427947998
    7. '`' → logprob: -13.78089427947998
    8. '_p' → logprob: -14.40589427947998
    9. ''' → logprob: -14.53089427947998
    10. '(p' → logprob: -14.65589427947998

Token 1094: '',
' (ID: 1214)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.25165921449661255
    2. ':' → logprob: -1.8766591548919678
    3. ':
' → logprob: -2.8766591548919678
    4. '):
' → logprob: -5.501659393310547
    5. '):' → logprob: -6.001659393310547
    6. '          ' → logprob: -6.626659393310547
    7. '       ' → logprob: -6.626659393310547
    8. '":' → logprob: -6.751659393310547
    9. '=' → logprob: -7.376659393310547
    10. '":
' → logprob: -7.376659393310547

Token 1095: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.33095672726631165
    2. 'ans' → logprob: -1.5809566974639893
    3. ' ans' → logprob: -2.5809566974639893
    4. '	ans' → logprob: -8.45595645904541
    5. '(ans' → logprob: -10.08095645904541
    6. '       ' → logprob: -11.20595645904541
    7. '          ' → logprob: -12.20595645904541
    8. '   ' → logprob: -12.70595645904541
    9. '```' → logprob: -13.08095645904541
    10. '_ans' → logprob: -13.20595645904541

Token 1096: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -8.2994620242971e-06
    2. ' ans' → logprob: -11.750008583068848
    3. '           ' → logprob: -15.375008583068848
    4. '	ans' → logprob: -16.12500762939453
    5. '   ' → logprob: -17.25000762939453
    6. '       ' → logprob: -18.12500762939453
    7. '(ans' → logprob: -18.37500762939453
    8. 'Ans' → logprob: -19.87500762939453
    9. '  ' → logprob: -21.00000762939453
    10. '         ' → logprob: -21.12500762939453

Token 1097: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.029769811779260635
    2. ' -=' → logprob: -3.5297698974609375
    3. '-' → logprob: -10.904769897460938
    4. '   ' → logprob: -14.154769897460938
    5. '           ' → logprob: -16.654769897460938
    6. '+=' → logprob: -16.779769897460938
    7. '       ' → logprob: -16.779769897460938
    8. '  ' → logprob: -16.779769897460938
    9. ' ' → logprob: -17.529769897460938
    10. '=' → logprob: -17.904769897460938

Token 1098: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -4.5491004129871726e-05
    2. ' p' → logprob: -10.000045776367188
    3. '	p' → logprob: -24.000045776367188
    4. '_p' → logprob: -24.750045776367188
    5. '           ' → logprob: -24.875045776367188
    6. '   ' → logprob: -26.000045776367188
    7. '       ' → logprob: -26.750045776367188
    8. '<p' → logprob: -26.875045776367188
    9. '(p' → logprob: -27.500045776367188
    10. ''p' → logprob: -27.625045776367188

Token 1099: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005915642715990543
    2. '#' → logprob: -5.755915641784668
    3. '      ' → logprob: -6.630915641784668
    4. '        ' → logprob: -7.755915641784668
    5. '<|end|>' → logprob: -8.255915641784668
    6. ' #' → logprob: -8.380915641784668
    7. ')' → logprob: -9.005915641784668
    8. '   ' → logprob: -9.380915641784668
    9. '     ' → logprob: -9.755915641784668
    10. '           ' → logprob: -9.755915641784668

Token 1100: ' #' (ID: 1069)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.6426448225975037
    2. '       ' → logprob: -1.0176448822021484
    3. ' ans' → logprob: -3.2676448822021484
    4. '#' (adapté à ' #') → logprob: -3.7676448822021484
    5. '(ans' → logprob: -3.8926448822021484
    6. '           ' → logprob: -4.267644882202148
    7. ')' → logprob: -5.392644882202148
    8. '        ' → logprob: -5.517644882202148
    9. '          ' → logprob: -5.767644882202148
    10. '      ' → logprob: -6.142644882202148

Token 1101: ' On' (ID: 2160)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -7.896309739408025e-07
    2. ' ans' → logprob: -14.750000953674316
    3. '           ' → logprob: -15.250000953674316
    4. 'pass' → logprob: -18.25
    5. '       ' → logprob: -18.375
    6. '	ans' → logprob: -19.0
    7. '(ans' → logprob: -19.25
    8. 'a' → logprob: -19.375
    9. '#' → logprob: -19.625
    10. '   ' → logprob: -20.625

Token 1102: ' sou' (ID: 4069)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.022303007543087006
    2. 'ans' → logprob: -4.022303104400635
    3. ' -=' → logprob: -5.772303104400635
    4. 'subtract' → logprob: -7.397303104400635
    5. '+=' → logprob: -8.772302627563477
    6. '           ' → logprob: -9.022302627563477
    7. '-' → logprob: -9.272302627563477
    8. 's' → logprob: -11.272302627563477
    9. '       ' → logprob: -11.772302627563477
    10. 'sou' → logprob: -12.147302627563477

Token 1103: 'stra' (ID: 14867)
  Prédit: 'stract'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stract' → logprob: -0.5579440593719482
    2. 'stra' → logprob: -0.9329440593719482
    3. 'subtract' → logprob: -4.432944297790527
    4. 'straction' → logprob: -4.682944297790527
    5. 'tract' → logprob: -5.307944297790527
    6. 'str' → logprob: -5.432944297790527
    7. 'st' → logprob: -6.807944297790527
    8. 'stre' → logprob: -7.307944297790527
    9. '-=' → logprob: -7.557944297790527
    10. 'sub' → logprob: -8.057944297790527

Token 1104: 'it' (ID: 278)
  Prédit: 'it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.16423653066158295
    2. 't' → logprob: -2.664236545562744
    3. 'stra' → logprob: -3.539236545562744
    4. 'tra' → logprob: -4.164236545562744
    5. 'p' → logprob: -4.289236545562744
    6. 'stract' → logprob: -4.914236545562744
    7. 'st' → logprob: -5.289236545562744
    8. 'pt' → logprob: -5.664236545562744
    9. 'tr' → logprob: -6.289236545562744
    10. 'str' → logprob: -6.539236545562744

Token 1105: ' le' (ID: 505)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.005234121344983578
    2. ' p' → logprob: -5.255234241485596
    3. '           ' → logprob: -16.130233764648438
    4. '(p' → logprob: -16.505233764648438
    5. '_p' → logprob: -16.630233764648438
    6. '	p' → logprob: -17.130233764648438
    7. ' ' → logprob: -18.380233764648438
    8. '       ' → logprob: -18.380233764648438
    9. '​' → logprob: -19.255233764648438
    10. '[p' → logprob: -19.380233764648438

Token 1106: ' score' (ID: 8429)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.1472419600977446e-06
    2. 'score' → logprob: -14.000000953674316
    3. ' p' → logprob: -15.125000953674316
    4. 'paper' → logprob: -18.750001907348633
    5. '_p' → logprob: -19.000001907348633
    6. 'ans' → logprob: -19.250001907348633
    7. 'pt' → logprob: -19.875001907348633
    8. 'P' → logprob: -20.125001907348633
    9. 'print' → logprob: -21.000001907348633
    10. 'point' → logprob: -21.250001907348633

Token 1107: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.003406443865969777
    2. '[p' → logprob: -7.003406524658203
    3. ' p' → logprob: -7.003406524658203
    4. '<|end|>' → logprob: -7.878406524658203
    5. '           ' → logprob: -8.003406524658203
    6. '       ' → logprob: -8.378406524658203
    7. '(p' → logprob: -8.878406524658203
    8. ')' → logprob: -9.003406524658203
    9. '_p' → logprob: -9.753406524658203
    10. 's' → logprob: -9.878406524658203

Token 1108: '.
' (ID: 558)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.015806997194886208
    2. '<|end|>' → logprob: -4.265807151794434
    3. '#' → logprob: -7.515807151794434
    4. '```' → logprob: -8.140807151794434
    5. ' print' → logprob: -8.640807151794434
    6. '       ' → logprob: -8.640807151794434
    7. '#print' → logprob: -8.890807151794434
    8. '<|end|>' → logprob: -9.265807151794434
    9. ')' → logprob: -10.140807151794434
    10. 'a' → logprob: -10.515807151794434

Token 1109: '       ' (ID: 309)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.1472419600977446e-06
    2. ' print' → logprob: -14.250000953674316
    3. '#' → logprob: -15.125000953674316
    4. '       ' → logprob: -16.375001907348633
    5. '   ' → logprob: -16.875001907348633
    6. 'a' → logprob: -17.750001907348633
    7. 'for' → logprob: -17.875001907348633
    8. '        
' → logprob: -19.000001907348633
    9. '#print' → logprob: -19.000001907348633
    10. '```' → logprob: -19.125001907348633

Token 1110: ' #' (ID: 1069)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.016900217160582542
    2. '       ' → logprob: -4.766900062561035
    3. '#' (adapté à ' #') → logprob: -5.016900062561035
    4. '   ' → logprob: -6.641900062561035
    5. 'ans' → logprob: -9.141900062561035
    6. ' a' → logprob: -10.016900062561035
    7. '#a' → logprob: -10.266900062561035
    8. 'list' → logprob: -10.641900062561035
    9. 'print' → logprob: -11.266900062561035
    10. '        
' → logprob: -11.516900062561035

Token 1111: ' On' (ID: 2160)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.004166606813669205
    2. '#' → logprob: -6.004166603088379
    3. '   ' → logprob: -7.379166603088379
    4. '       ' → logprob: -7.379166603088379
    5. ' a' → logprob: -8.629166603088379
    6. '#a' → logprob: -9.629166603088379
    7. 'ans' → logprob: -9.754166603088379
    8. '           ' → logprob: -10.754166603088379
    9. '        
' → logprob: -11.254166603088379
    10. 'list' → logprob: -11.379166603088379

Token 1112: ' mod' (ID: 1812)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.14925532042980194
    2. 'a' → logprob: -2.2742552757263184
    3. ' =' → logprob: -3.7742552757263184
    4. '       ' → logprob: -4.774255275726318
    5. '=a' → logprob: -6.024255275726318
    6. '=list' → logprob: -6.899255275726318
    7. 'list' → logprob: -8.149255752563477
    8. ' a' → logprob: -8.899255752563477
    9. '#' → logprob: -9.524255752563477
    10. '        ' → logprob: -9.649255752563477

Token 1113: 'ifie' (ID: 46409)
  Prédit: 'ifie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifie' → logprob: -0.0061823721043765545
    2. 'if' → logprob: -5.7561821937561035
    3. 'f' → logprob: -6.5061821937561035
    4. 'e' → logprob: -7.7561821937561035
    5. 'ifier' → logprob: -8.131182670593262
    6. '       ' → logprob: -8.506182670593262
    7. '   ' → logprob: -9.256182670593262
    8. 'ify' → logprob: -9.506182670593262
    9. 'ifiez' → logprob: -9.631182670593262
    10. 'ifié' → logprob: -9.756182670593262

Token 1114: ' le' (ID: 505)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.03376729413866997
    2. ' a' → logprob: -3.4087672233581543
    3. '"a' → logprob: -9.908767700195312
    4. 'list' → logprob: -11.158767700195312
    5. '	a' → logprob: -11.158767700195312
    6. '"' → logprob: -11.783767700195312
    7. ' =' → logprob: -11.908767700195312
    8. '#a' → logprob: -12.408767700195312
    9. '=' → logprob: -12.533767700195312
    10. ''a' → logprob: -12.908767700195312

Token 1115: ' coup' (ID: 25465)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.021401306614279747
    2. 'list' → logprob: -4.146401405334473
    3. ' a' → logprob: -5.646401405334473
    4. ' list' → logprob: -6.771401405334473
    5. 'ans' → logprob: -8.646401405334473
    6. '#' → logprob: -9.396401405334473
    7. 'import' → logprob: -9.646401405334473
    8. '#a' → logprob: -10.146401405334473
    9. '"a' → logprob: -10.458901405334473
    10. 'from' → logprob: -10.708901405334473

Token 1116: ' à' (ID: 1221)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.009639024734497
    2. ' =' → logprob: -1.009639024734497
    3. '=' → logprob: -2.009639024734497
    4. '[i' → logprob: -2.384639024734497
    5. ' a' → logprob: -4.884638786315918
    6. '="' → logprob: -5.009638786315918
    7. 'à' → logprob: -5.259638786315918
    8. ' at' → logprob: -5.384638786315918
    9. '       ' → logprob: -5.634638786315918
    10. '   ' → logprob: -6.384638786315918

Token 1117: ' l' (ID: 305)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.4412271976470947
    2. 'i' → logprob: -1.0662271976470947
    3. ' i' → logprob: -4.816226959228516
    4. ' a' → logprob: -5.566226959228516
    5. '"' → logprob: -7.941226959228516
    6. '[i' → logprob: -10.191226959228516
    7. ''' → logprob: -10.816226959228516
    8. ''a' → logprob: -10.816226959228516
    9. '"a' → logprob: -10.941226959228516
    10. ''i' → logprob: -11.316226959228516

Token 1118: ''' (ID: 6)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0014717685990035534
    2. 'index' → logprob: -7.501471996307373
    3. ''i' → logprob: -7.626471996307373
    4. '[i' → logprob: -8.626471519470215
    5. 'a' → logprob: -8.626471519470215
    6. 'indice' → logprob: -10.501471519470215
    7. '_i' → logprob: -11.126471519470215
    8. ' i' → logprob: -11.126471519470215
    9. '=i' → logprob: -12.501471519470215
    10. '(i' → logprob: -12.876471519470215

Token 1119: 'index' (ID: 2257)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0005815077456645668
    2. 'a' → logprob: -7.625581741333008
    3. '[i' → logprob: -10.000581741333008
    4. ' i' → logprob: -10.375581741333008
    5. 'index' → logprob: -11.125581741333008
    6. ''i' → logprob: -13.875581741333008
    7. '```' → logprob: -15.125581741333008
    8. 'indice' → logprob: -15.625581741333008
    9. '	i' → logprob: -15.875581741333008
    10. '`' → logprob: -16.000581741333008

Token 1120: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.004785988014191389
    2. ' i' → logprob: -5.379786014556885
    3. '[i' → logprob: -8.754785537719727
    4. '=i' → logprob: -13.004785537719727
    5. 'a' → logprob: -13.379785537719727
    6. '	i' → logprob: -13.504785537719727
    7. '```' → logprob: -13.754785537719727
    8. ',i' → logprob: -14.629785537719727
    9. '   ' → logprob: -15.004785537719727
    10. '`' → logprob: -15.254785537719727

Token 1121: ' dans' (ID: 2671)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04929196462035179
    2. ' =' → logprob: -3.0492918491363525
    3. '[i' → logprob: -7.924292087554932
    4. 'a' → logprob: -9.174291610717773
    5. '=i' → logprob: -9.549291610717773
    6. '="' → logprob: -9.799291610717773
    7. '='' → logprob: -10.799291610717773
    8. '+=' → logprob: -10.924291610717773
    9. '=a' → logprob: -11.674291610717773
    10. '=
' → logprob: -12.049291610717773

Token 1122: ' la' (ID: 557)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -2.117345684382599e-05
    2. ' a' → logprob: -11.000020980834961
    3. ''a' → logprob: -12.625020980834961
    4. '"a' → logprob: -14.000020980834961
    5. '#a' → logprob: -15.375020980834961
    6. '	a' → logprob: -17.25002098083496
    7. '`' → logprob: -18.75002098083496
    8. '[a' → logprob: -18.87502098083496
    9. '>a' → logprob: -19.37502098083496
    10. 'list' → logprob: -19.75002098083496

Token 1123: ' chaîne' (ID: 89288)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -7.107425062713446e-06
    2. 'list' → logprob: -12.125006675720215
    3. ' a' → logprob: -13.875006675720215
    4. '`' → logprob: -15.375006675720215
    5. '```' → logprob: -15.750006675720215
    6. ''a' → logprob: -16.12500762939453
    7. '#a' → logprob: -17.12500762939453
    8. 'string' → logprob: -17.62500762939453
    9. '"a' → logprob: -18.00000762939453
    10. 'array' → logprob: -18.25000762939453

Token 1124: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.4613152742385864
    2. '=' → logprob: -1.2113152742385864
    3. ' =' → logprob: -2.836315155029297
    4. '"' → logprob: -4.586315155029297
    5. '="' → logprob: -6.836315155029297
    6. '[i' → logprob: -7.711315155029297
    7. ' a' → logprob: -8.086315155029297
    8. '=""' → logprob: -8.211315155029297
    9. '=a' → logprob: -8.586315155029297
    10. '"a' → logprob: -8.836315155029297

Token 1125: ' pour' (ID: 1930)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.45370355248451233
    2. ' =' → logprob: -1.20370352268219
    3. 'a' → logprob: -3.2037036418914795
    4. '="' → logprob: -4.4537034034729
    5. '=a' → logprob: -5.0787034034729
    6. '='' → logprob: -5.5787034034729
    7. '[i' → logprob: -7.8287034034729
    8. '[a' → logprob: -7.9537034034729
    9. '="\' → logprob: -8.203703880310059
    10. '=list' → logprob: -8.453703880310059

Token 1126: ' ne' (ID: 453)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.011818586848676205
    2. '"' → logprob: -5.0118184089660645
    3. '"a' → logprob: -6.0118184089660645
    4. ''a' → logprob: -7.0118184089660645
    5. ' a' → logprob: -7.1368184089660645
    6. ''' → logprob: -8.136818885803223
    7. 'list' → logprob: -8.136818885803223
    8. '"?' → logprob: -9.511818885803223
    9. '""' → logprob: -10.011818885803223
    10. '"*' → logprob: -10.261818885803223

Token 1127: ' pas' (ID: 2173)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.02431529201567173
    2. ' a' → logprob: -4.024315357208252
    3. '=' → logprob: -5.524315357208252
    4. ' =' → logprob: -7.524315357208252
    5. ' not' → logprob: -7.899315357208252
    6. '#' → logprob: -8.399314880371094
    7. 'not' → logprob: -8.899314880371094
    8. 'e' → logprob: -9.149314880371094
    9. '"' → logprob: -9.274314880371094
    10. 'pas' → logprob: -9.274314880371094

Token 1128: ' compter' (ID: 81694)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.043616883456707
    2. ' a' → logprob: -3.668616771697998
    3. '"' → logprob: -4.668616771697998
    4. '=' → logprob: -5.168616771697998
    5. ' =' → logprob: -6.793616771697998
    6. '+=' → logprob: -8.168617248535156
    7. '"a' → logprob: -8.668617248535156
    8. ' +=' → logprob: -9.793617248535156
    9. ' "' → logprob: -9.918617248535156
    10. '_' → logprob: -10.168617248535156

Token 1129: ' ce' (ID: 2357)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.004221455194056034
    2. '"\' → logprob: -6.629221439361572
    3. ''' → logprob: -7.129221439361572
    4. '=' → logprob: -7.379221439361572
    5. 'a' → logprob: -7.629221439361572
    6. '"a' → logprob: -7.879221439361572
    7. ' "' → logprob: -8.50422191619873
    8. '""' → logprob: -8.75422191619873
    9. ' a' → logprob: -9.25422191619873
    10. ''a' → logprob: -10.12922191619873

Token 1130: ' coup' (ID: 25465)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.03506038710474968
    2. ''' → logprob: -3.660060405731201
    3. ' "' → logprob: -5.160060405731201
    4. ' '' → logprob: -7.035060405731201
    5. 'a' → logprob: -7.410060405731201
    6. '=' → logprob: -8.035059928894043
    7. '`' → logprob: -8.410059928894043
    8. ' =' → logprob: -8.785059928894043
    9. '[i' → logprob: -9.160059928894043
    10. '[' → logprob: -9.285059928894043

Token 1131: ' plusieurs' (ID: 20875)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.69679194688797
    2. '=' → logprob: -0.82179194688797
    3. 'a' → logprob: -3.196791887283325
    4. '[i' → logprob: -4.821792125701904
    5. '="' → logprob: -4.946792125701904
    6. '"' → logprob: -6.321792125701904
    7. '='' → logprob: -6.946792125701904
    8. '[' → logprob: -7.071792125701904
    9. '=a' → logprob: -7.196792125701904
    10. '[a' → logprob: -7.821792125701904

Token 1132: ' fois' (ID: 14697)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4621369242668152
    2. ' =' → logprob: -1.08713698387146
    3. 'a' → logprob: -3.71213698387146
    4. ' a' → logprob: -5.337136745452881
    5. '[' → logprob: -7.462136745452881
    6. '='' → logprob: -7.712136745452881
    7. '[i' → logprob: -7.712136745452881
    8. '="' → logprob: -7.837136745452881
    9. '+=' → logprob: -7.837136745452881
    10. ' +=' → logprob: -8.087137222290039

Token 1133: ' à' (ID: 1221)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7823390364646912
    2. ' =' → logprob: -1.282339096069336
    3. '=' → logprob: -1.907339096069336
    4. '[i' → logprob: -3.282339096069336
    5. '="' → logprob: -3.782339096069336
    6. '"' → logprob: -3.782339096069336
    7. '[' → logprob: -4.282339096069336
    8. '="\' → logprob: -5.407339096069336
    9. '[a' → logprob: -5.782339096069336
    10. ' a' → logprob: -6.157339096069336

Token 1134: ' l' (ID: 305)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.6607429385185242
    2. 'a' → logprob: -0.7857429385185242
    3. ''' → logprob: -4.66074275970459
    4. '""' → logprob: -5.16074275970459
    5. 'i' → logprob: -5.91074275970459
    6. '"a' → logprob: -6.16074275970459
    7. '"#' → logprob: -6.78574275970459
    8. '''' → logprob: -6.91074275970459
    9. ''a' → logprob: -7.03574275970459
    10. 'None' → logprob: -7.03574275970459

Token 1135: ''avenir' (ID: 175576)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.7706487774848938
    2. 'a' → logprob: -1.395648717880249
    3. 'i' → logprob: -1.895648717880249
    4. '[i' → logprob: -2.395648717880249
    5. ''' → logprob: -4.270648956298828
    6. '=' → logprob: -5.520648956298828
    7. '""' → logprob: -5.895648956298828
    8. '"""' → logprob: -5.895648956298828
    9. 'none' → logprob: -6.270648956298828
    10. '_' → logprob: -6.270648956298828

Token 1136: '.
' (ID: 558)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0888141468167305
    2. '="' → logprob: -3.3388142585754395
    3. '=' → logprob: -3.8388142585754395
    4. 'a' → logprob: -4.0888142585754395
    5. '[i' → logprob: -5.7138142585754395
    6. '"' → logprob: -6.5888142585754395
    7. '="\' → logprob: -6.7138142585754395
    8. '='' → logprob: -6.8388142585754395
    9. '[a' → logprob: -6.8388142585754395
    10. '[' → logprob: -7.2138142585754395

Token 1137: '       ' (ID: 309)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.04969358071684837
    2. '=' → logprob: -4.049693584442139
    3. ' =' → logprob: -4.424693584442139
    4. '"' → logprob: -4.924693584442139
    5. ' a' → logprob: -4.924693584442139
    6. '"a' → logprob: -6.049693584442139
    7. '='' → logprob: -7.549693584442139
    8. '"\' → logprob: -8.04969310760498
    9. '=a' → logprob: -8.04969310760498
    10. '?' → logprob: -8.79969310760498

Token 1138: ' #' (ID: 1069)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -2.5776860184123507e-06
    2. ' a' → logprob: -13.00000286102295
    3. ' =' → logprob: -15.50000286102295
    4. '=' → logprob: -16.750001907348633
    5. '       ' → logprob: -17.625001907348633
    6. 'list' → logprob: -18.125001907348633
    7. '[' → logprob: -18.375001907348633
    8. '   ' → logprob: -18.500001907348633
    9. '	a' → logprob: -18.500001907348633
    10. '#a' → logprob: -18.500001907348633

Token 1139: ' Comme' (ID: 53252)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -4.537180211627856e-05
    2. ' a' → logprob: -10.500045776367188
    3. 'list' → logprob: -11.625045776367188
    4. '#' → logprob: -12.625045776367188
    5. 'import' → logprob: -12.750045776367188
    6. '       ' → logprob: -13.625045776367188
    7. '   ' → logprob: -14.625045776367188
    8. '        
' → logprob: -15.625045776367188
    9. '#a' → logprob: -15.750045776367188
    10. '_a' → logprob: -16.250045776367188

Token 1140: ' les' (ID: 1341)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -7.171581091824919e-05
    2. ' a' → logprob: -9.75007152557373
    3. 'list' → logprob: -11.25007152557373
    4. 's' → logprob: -16.750072479248047
    5. 'lst' → logprob: -16.750072479248047
    6. ' list' → logprob: -17.250072479248047
    7. '#' → logprob: -17.250072479248047
    8. '"a' → logprob: -17.500072479248047
    9. 'ai' → logprob: -17.625072479248047
    10. 'l' → logprob: -18.125072479248047

Token 1141: ' chaînes' (ID: 179904)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.002350314985960722
    2. 'list' → logprob: -6.127350330352783
    3. ' a' → logprob: -9.877349853515625
    4. '#' → logprob: -9.877349853515625
    5. 'string' → logprob: -11.252349853515625
    6. 's' → logprob: -11.752349853515625
    7. '#a' → logprob: -12.127349853515625
    8. ' =' → logprob: -12.252349853515625
    9. '=' → logprob: -12.252349853515625
    10. ' list' → logprob: -12.377349853515625

Token 1142: ' sont' (ID: 5242)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4229784905910492
    2. '=' → logprob: -1.4229785203933716
    3. 'a' → logprob: -2.297978401184082
    4. ' a' → logprob: -6.547978401184082
    5. '=a' → logprob: -7.172978401184082
    6. 's' → logprob: -7.797978401184082
    7. '[' → logprob: -8.172978401184082
    8. ' are' → logprob: -8.922978401184082
    9. '[a' → logprob: -8.922978401184082
    10. 'are' → logprob: -9.297978401184082

Token 1143: ' imm' (ID: 7240)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0853303000330925
    2. ' a' → logprob: -2.9603302478790283
    3. 'immutable' → logprob: -4.085330486297607
    4. 'list' → logprob: -5.460330486297607
    5. '[' → logprob: -6.335330486297607
    6. 's' → logprob: -7.085330486297607
    7. ' immutable' → logprob: -7.085330486297607
    8. ' ' → logprob: -7.335330486297607
    9. ' list' → logprob: -7.460330486297607
    10. ' =' → logprob: -7.710330486297607

Token 1144: 'u' (ID: 84)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.1282201111316681
    2. 'utable' → logprob: -2.1282200813293457
    3. ' a' → logprob: -8.003220558166504
    4. 'mutable' → logprob: -8.128220558166504
    5. '=a' → logprob: -8.753220558166504
    6. '[a' → logprob: -9.128220558166504
    7. 'e' → logprob: -9.253220558166504
    8. 'ut' → logprob: -9.378220558166504
    9. '=' → logprob: -9.503220558166504
    10. 'o' → logprob: -11.003220558166504

Token 1145: 'ables' (ID: 3232)
  Prédit: 'table'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'table' → logprob: -2.5107177862082608e-05
    2. 't' → logprob: -11.125024795532227
    3. 'tables' → logprob: -12.125024795532227
    4. 'a' → logprob: -13.000024795532227
    5. 'tab' → logprob: -14.000024795532227
    6. 'tabl' → logprob: -14.375024795532227
    7. 'te' → logprob: -15.125024795532227
    8. '<table' → logprob: -15.875024795532227
    9. 'TABLE' → logprob: -15.875024795532227
    10. 'nable' → logprob: -16.250024795532227

Token 1146: ' en' (ID: 469)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00868016667664051
    2. ',' → logprob: -5.25868034362793
    3. ' a' → logprob: -5.88368034362793
    4. ',a' → logprob: -8.00868034362793
    5. ' =' → logprob: -9.00868034362793
    6. ',
' → logprob: -9.50868034362793
    7. '_a' → logprob: -11.00868034362793
    8. '       ' → logprob: -11.13368034362793
    9. '[a' → logprob: -11.25868034362793
    10. '[' → logprob: -11.38368034362793

Token 1147: ' Python' (ID: 26534)
  Prédit: 'Python'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Python' → logprob: -0.03960274159908295
    2. 'python' → logprob: -3.289602756500244
    3. 'a' → logprob: -7.039602756500244
    4. ' Python' → logprob: -7.289602756500244
    5. 'py' → logprob: -14.664602279663086
    6. ' python' → logprob: -15.789602279663086
    7. 'ython' → logprob: -16.414602279663086
    8. '```' → logprob: -16.414602279663086
    9. '_python' → logprob: -16.414602279663086
    10. '-python' → logprob: -16.789602279663086

Token 1148: ',' (ID: 11)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.1542670726776123
    2. ',' → logprob: -2.0292670726776123
    3. ' a' → logprob: -5.654267311096191
    4. ',a' → logprob: -5.779267311096191
    5. '[' → logprob: -6.029267311096191
    6. ' =' → logprob: -6.904267311096191
    7. '[a' → logprob: -8.154267311096191
    8. ':' → logprob: -8.404267311096191
    9. '       ' → logprob: -8.404267311096191
    10. '[:' → logprob: -9.029267311096191

Token 1149: ' on' (ID: 402)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00013214473437983543
    2. ' a' → logprob: -9.00013256072998
    3. '   ' → logprob: -11.87513256072998
    4. '       ' → logprob: -13.62513256072998
    5. '	a' → logprob: -15.25013256072998
    6. 'list' → logprob: -15.87513256072998
    7. '_a' → logprob: -16.625131607055664
    8. 'import' → logprob: -17.500131607055664
    9. '#' → logprob: -17.750131607055664
    10. '           ' → logprob: -18.250131607055664

Token 1150: ' crée' (ID: 102256)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0064455922693014145
    2. '=' → logprob: -5.131445407867432
    3. ' =' → logprob: -8.13144588470459
    4. ' a' → logprob: -9.13144588470459
    5. '=a' → logprob: -9.25644588470459
    6. '#' → logprob: -12.13144588470459
    7. '#a' → logprob: -12.75644588470459
    8. '>a' → logprob: -12.88144588470459
    9. 'list' → logprob: -13.13144588470459
    10. 'b' → logprob: -13.50644588470459

Token 1151: ' une' (ID: 2463)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -3.440506407059729e-05
    2. ' a' → logprob: -10.37503433227539
    3. 'list' → logprob: -12.75003433227539
    4. ' =' → logprob: -16.25003433227539
    5. '`' → logprob: -17.00003433227539
    6. 'new' → logprob: -17.25003433227539
    7. '   ' → logprob: -17.62503433227539
    8. '
' → logprob: -18.12503433227539
    9. '_a' → logprob: -18.37503433227539
    10. 'а' → logprob: -18.37503433227539

Token 1152: ' nouvelle' (ID: 24562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.01881079189479351
    2. 'a' → logprob: -4.018810749053955
    3. 'new' → logprob: -7.768810749053955
    4. 'liste' → logprob: -8.518811225891113
    5. ' list' → logprob: -10.393811225891113
    6. 'lista' → logprob: -13.518811225891113
    7. '=list' → logprob: -13.768811225891113
    8. 'lst' → logprob: -14.268811225891113
    9. '_list' → logprob: -14.518811225891113
    10. ' a' → logprob: -14.518811225891113

Token 1153: ' chaîne' (ID: 89288)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -7.421908958349377e-05
    2. ' a' → logprob: -10.00007438659668
    3. 'string' → logprob: -10.62507438659668
    4. ' string' → logprob: -13.12507438659668
    5. '_a' → logprob: -14.37507438659668
    6. 's' → logprob: -15.12507438659668
    7. 'list' → logprob: -15.25007438659668
    8. 'version' → logprob: -15.37507438659668
    9. '=' → logprob: -15.50007438659668
    10. ' =' → logprob: -15.50007438659668

Token 1154: ' ident' (ID: 3951)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.21514755487442017
    2. 'a' → logprob: -2.3401474952697754
    3. ' =' → logprob: -2.3401474952697754
    4. '=a' → logprob: -7.090147495269775
    5. ' a' → logprob: -9.340147972106934
    6. '=
' → logprob: -11.340147972106934
    7. '_a' → logprob: -11.590147972106934
    8. 's' → logprob: -13.465147972106934
    9. '+=' → logprob: -13.715147972106934
    10. '"a' → logprob: -14.090147972106934

Token 1155: 'ique' (ID: 2222)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.19284561276435852
    2. 'ique' → logprob: -1.8178455829620361
    3. 'que' → logprob: -5.442845821380615
    4. 'ical' → logprob: -5.942845821380615
    5. 'f' → logprob: -6.817845821380615
    6. 'cal' → logprob: -7.067845821380615
    7. 'fi' → logprob: -7.567845821380615
    8. 'e' → logprob: -7.692845821380615
    9. 't' → logprob: -7.817845821380615
    10. '```' → logprob: -7.817845821380615

Token 1156: ',' (ID: 11)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.037312719970941544
    2. '=' → logprob: -3.6623127460479736
    3. ' =' → logprob: -4.6623125076293945
    4. ' a' → logprob: -7.5373125076293945
    5. '+' → logprob: -8.662312507629395
    6. '+=' → logprob: -8.662312507629395
    7. '[:' → logprob: -9.662312507629395
    8. '=a' → logprob: -9.662312507629395
    9. ' +=' → logprob: -9.912312507629395
    10. '(' → logprob: -9.912312507629395

Token 1157: ' sauf' (ID: 87919)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.005233525298535824
    2. ' a' → logprob: -5.755233287811279
    3. '=' → logprob: -7.255233287811279
    4. ' =' → logprob: -7.880233287811279
    5. 'replace' → logprob: -7.880233287811279
    6. 'except' → logprob: -8.880233764648438
    7. '"' → logprob: -10.005233764648438
    8. ' ' → logprob: -10.005233764648438
    9. 'i' → logprob: -10.505233764648438
    10. ' replacing' → logprob: -10.630233764648438

Token 1158: ' à' (ID: 1221)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.001539973309263587
    2. ' a' → logprob: -6.876540184020996
    3. 'à' → logprob: -8.626540184020996
    4. ' à' → logprob: -8.751540184020996
    5. 'i' → logprob: -10.001540184020996
    6. 'for' → logprob: -10.626540184020996
    7. ' at' → logprob: -11.001540184020996
    8. 'l' → logprob: -11.126540184020996
    9. 'au' → logprob: -11.501540184020996
    10. ' for' → logprob: -12.251540184020996

Token 1159: ' l' (ID: 305)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00019126241386402398
    2. ' i' → logprob: -9.000191688537598
    3. 'a' → logprob: -9.750191688537598
    4. 'index' → logprob: -12.750191688537598
    5. '```' → logprob: -13.500191688537598
    6. 'indice' → logprob: -13.500191688537598
    7. '   ' → logprob: -14.000191688537598
    8. '[i' → logprob: -14.000191688537598
    9. 'l' → logprob: -14.750191688537598
    10. 'position' → logprob: -14.750191688537598

Token 1160: ''' (ID: 6)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.008986682631075382
    2. '[i' → logprob: -5.508986473083496
    3. 'a' → logprob: -5.633986473083496
    4. 'index' → logprob: -7.258986473083496
    5. '=i' → logprob: -8.633986473083496
    6. '```' → logprob: -9.758986473083496
    7. 'e' → logprob: -9.883986473083496
    8. 'é' → logprob: -10.008986473083496
    9. ' i' → logprob: -10.133986473083496
    10. ''i' → logprob: -10.258986473083496

Token 1161: 'index' (ID: 2257)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.05294806510210037
    2. 'index' → logprob: -3.177947998046875
    3. 'indice' → logprob: -4.677947998046875
    4. 'a' → logprob: -7.802947998046875
    5. 'position' → logprob: -9.052947998046875
    6. '[i' → logprob: -10.552947998046875
    7. 'indices' → logprob: -11.677947998046875
    8. ' i' → logprob: -11.802947998046875
    9. 'idx' → logprob: -11.927947998046875
    10. '#' → logprob: -12.302947998046875

Token 1162: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.024246638640761375
    2. ' i' → logprob: -4.149246692657471
    3. ' =' → logprob: -5.274246692657471
    4. '=' → logprob: -6.024246692657471
    5. 'a' → logprob: -7.524246692657471
    6. '=i' → logprob: -11.024246215820312
    7. '```' → logprob: -11.274246215820312
    8. '0' → logprob: -11.774246215820312
    9. ' ' → logprob: -11.899246215820312
    10. ' a' → logprob: -11.899246215820312

Token 1163: ' où' (ID: 15113)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.25041747093200684
    2. '=' → logprob: -1.6254174709320068
    3. ' =' → logprob: -3.750417470932007
    4. ' a' → logprob: -7.625417709350586
    5. '=a' → logprob: -7.875417709350586
    6. ',' → logprob: -9.375417709350586
    7. ':' → logprob: -9.625417709350586
    8. 's' → logprob: -10.250417709350586
    9. '   ' → logprob: -10.625417709350586
    10. '_a' → logprob: -11.500417709350586

Token 1164: ' on' (ID: 402)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -9.794061770662665e-05
    2. ' a' → logprob: -9.62509822845459
    3. '=' → logprob: -10.87509822845459
    4. 'i' → logprob: -12.25009822845459
    5. ' =' → logprob: -12.50009822845459
    6. '`' → logprob: -14.00009822845459
    7. ''' → logprob: -14.50009822845459
    8. 'à' → logprob: -14.62509822845459
    9. ''a' → logprob: -14.75009822845459
    10. '
' → logprob: -15.12509822845459

Token 1165: ' met' (ID: 1421)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5687238574028015
    2. 'a' → logprob: -0.9437238574028015
    3. 'replace' → logprob: -3.3187239170074463
    4. ' =' → logprob: -5.443723678588867
    5. '=a' → logprob: -7.193723678588867
    6. ' a' → logprob: -7.318723678588867
    7. 's' → logprob: -7.443723678588867
    8. 'change' → logprob: -7.818723678588867
    9. 'set' → logprob: -8.443723678588867
    10. 're' → logprob: -8.443723678588867

Token 1166: ' un' (ID: 537)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.09229164570569992
    2. '"?' → logprob: -3.2172915935516357
    3. ''' → logprob: -4.092291831970215
    4. 'a' → logprob: -4.467291831970215
    5. '"a' → logprob: -4.592291831970215
    6. ''?' → logprob: -5.717291831970215
    7. ''a' → logprob: -5.967291831970215
    8. '?' → logprob: -7.092291831970215
    9. '"."' → logprob: -7.092291831970215
    10. '".' → logprob: -7.592291831970215

Token 1167: ' caractère' (ID: 80509)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.12752841413021088
    2. '?' → logprob: -2.752528429031372
    3. ''' → logprob: -3.752528429031372
    4. '_' → logprob: -4.877528190612793
    5. '"?' → logprob: -5.127528190612793
    6. '"-' → logprob: -5.752528190612793
    7. 'X' → logprob: -6.002528190612793
    8. '.' → logprob: -6.377528190612793
    9. 'space' → logprob: -6.752528190612793
    10. '`' → logprob: -6.752528190612793

Token 1168: ' arbit' (ID: 96555)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.05055619403719902
    2. ''' → logprob: -3.425556182861328
    3. 'a' → logprob: -4.800556182861328
    4. ' "' → logprob: -5.925556182861328
    5. '"a' → logprob: -6.550556182861328
    6. ' a' → logprob: -6.675556182861328
    7. ' '' → logprob: -7.925556182861328
    8. 'space' → logprob: -7.925556182861328
    9. '空' → logprob: -8.050556182861328
    10. '`' → logprob: -8.050556182861328

Token 1169: 'ra' (ID: 614)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.2821551263332367
    2. 'e' → logprob: -2.6571550369262695
    3. ' "' → logprob: -2.7821550369262695
    4. ''' → logprob: -3.9071550369262695
    5. 'None' → logprob: -3.9071550369262695
    6. ' None' → logprob: -3.9071550369262695
    7. 'a' → logprob: -4.7821550369262695
    8. ' '' → logprob: -5.1571550369262695
    9. '"\' → logprob: -5.5321550369262695
    10. 'è' → logprob: -6.0321550369262695

Token 1170: 'ire' (ID: 594)
  Prédit: 'ire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ire' → logprob: -0.0006166507955640554
    2. '"' → logprob: -7.625616550445557
    3. 'irement' → logprob: -10.250617027282715
    4. 're' → logprob: -10.375617027282715
    5. 'r' → logprob: -10.625617027282715
    6. ' ire' → logprob: -11.625617027282715
    7. ''' → logprob: -12.000617027282715
    8. 'e' → logprob: -12.625617027282715
    9. 'ir' → logprob: -12.625617027282715
    10. 'ry' → logprob: -12.750617027282715

Token 1171: ' ("' (ID: 7109)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.06689866632223129
    2. ' =' → logprob: -3.0668985843658447
    3. ' a' → logprob: -4.566898822784424
    4. '=' → logprob: -5.441898822784424
    5. '"' → logprob: -5.816898822784424
    6. '"a' → logprob: -8.691898345947266
    7. '   ' → logprob: -9.691898345947266
    8. ' ' → logprob: -10.191898345947266
    9. ' "' → logprob: -10.316898345947266
    10. '_a' → logprob: -10.691898345947266

Token 1172: 'a' (ID: 64)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.5480860471725464
    2. 'X' → logprob: -1.4230860471725464
    3. '"x' → logprob: -2.923086166381836
    4. ''' → logprob: -3.173086166381836
    5. 'x' → logprob: -3.173086166381836
    6. '"?' → logprob: -4.673086166381836
    7. '_' → logprob: -5.048086166381836
    8. '?' → logprob: -5.173086166381836
    9. '"-' → logprob: -5.673086166381836
    10. '".' → logprob: -5.923086166381836

Token 1173: '"' (ID: 1)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.23990651965141296
    2. 'a' → logprob: -1.7399065494537354
    3. '"),' → logprob: -4.364906311035156
    4. '"' → logprob: -4.739906311035156
    5. '")
' → logprob: -4.739906311035156
    6. '").' → logprob: -5.739906311035156
    7. '"):
' → logprob: -6.239906311035156
    8. ' ")' → logprob: -7.989906311035156
    9. '"):' → logprob: -7.989906311035156
    10. '",' → logprob: -8.114906311035156

Token 1174: ' ici' (ID: 27994)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.4106634557247162
    2. 'a' → logprob: -1.9106634855270386
    3. ')' → logprob: -2.535663366317749
    4. '[' → logprob: -3.910663366317749
    5. '   ' → logprob: -4.035663604736328
    6. '       ' → logprob: -4.035663604736328
    7. ' =' → logprob: -4.160663604736328
    8. '[:' → logprob: -4.910663604736328
    9. '"' → logprob: -5.160663604736328
    10. ',' → logprob: -5.660663604736328

Token 1175: ').
' (ID: 6294)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.9702954888343811
    2. ')' → logprob: -1.2202954292297363
    3. '")' → logprob: -1.4702954292297363
    4. '   ' → logprob: -3.4702954292297363
    5. ',' → logprob: -3.7202954292297363
    6. ').' → logprob: -4.345295429229736
    7. '       ' → logprob: -4.845295429229736
    8. ')
' → logprob: -5.720295429229736
    9. ' =' → logprob: -5.845295429229736
    10. ' a' → logprob: -6.220295429229736

Token 1176: '       ' (ID: 309)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -2.45848218582978e-06
    2. ' a' → logprob: -13.25000286102295
    3. ' =' → logprob: -14.37500286102295
    4. '
' → logprob: -17.375001907348633
    5. '\' → logprob: -18.375001907348633
    6. '   ' → logprob: -18.875001907348633
    7. ' 
' → logprob: -19.125001907348633
    8. '"\' → logprob: -20.000001907348633
    9. '```' → logprob: -20.125001907348633
    10. '_a' → logprob: -20.375001907348633

Token 1177: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -3.531315314830863e-06
    2. '   ' → logprob: -13.250003814697266
    3. ' a' → logprob: -13.750003814697266
    4. '       ' → logprob: -14.375003814697266
    5. '
' → logprob: -19.000003814697266
    6. '#' → logprob: -19.375003814697266
    7. '           ' → logprob: -19.625003814697266
    8. '        ' → logprob: -19.875003814697266
    9. '        
' → logprob: -19.875003814697266
    10. '	a' → logprob: -20.125003814697266

Token 1178: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.002477081725373864
    2. ' =' → logprob: -6.002477169036865
    3. '=a' → logprob: -13.627476692199707
    4. 'a' → logprob: -16.252477645874023
    5. '＝' → logprob: -17.377477645874023
    6. '+=' → logprob: -20.502477645874023
    7. ' ' → logprob: -21.252477645874023
    8. '.=' → logprob: -21.377477645874023
    9. ' a' → logprob: -21.877477645874023
    10. '=A' → logprob: -23.002477645874023

Token 1179: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00020354038861114532
    2. ' a' → logprob: -8.500203132629395
    3. '	a' → logprob: -18.37520408630371
    4. '"a' → logprob: -20.75020408630371
    5. ''a' → logprob: -21.25020408630371
    6. '(a' → logprob: -22.00020408630371
    7. '#a' → logprob: -22.37520408630371
    8. 'а' → logprob: -22.62520408630371
    9. '_a' → logprob: -23.00020408630371
    10. '*a' → logprob: -23.00020408630371

Token 1180: '[:' (ID: 7808)
  Prédit: '[:'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:' → logprob: -1.5048530030981055e-06
    2. ':' → logprob: -14.125001907348633
    3. '[' → logprob: -14.750001907348633
    4. '[:-' → logprob: -15.375001907348633
    5. ' [:' → logprob: -16.250001907348633
    6. '[:]' → logprob: -17.625001907348633
    7. '][:' → logprob: -18.750001907348633
    8. '```' → logprob: -19.625001907348633
    9. ' :' → logprob: -20.250001907348633
    10. '
' → logprob: -20.625001907348633

Token 1181: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -6.704273118884885e-07
    2. ' i' → logprob: -14.250000953674316
    3. '	i' → logprob: -18.125
    4. '   ' → logprob: -20.25
    5. '{i' → logprob: -20.75
    6. '-i' → logprob: -21.0
    7. ' ' → logprob: -21.0
    8. '(i' → logprob: -21.375
    9. '%i' → logprob: -21.625
    10. ',i' → logprob: -22.375

Token 1182: ']' (ID: 60)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0173389483243227
    2. ']' → logprob: -4.267338752746582
    3. ' +' → logprob: -6.017338752746582
    4. ']+' → logprob: -7.642338752746582
    5. ')' → logprob: -9.267338752746582
    6. '+"' → logprob: -10.267338752746582
    7. '}' → logprob: -10.517338752746582
    8. 'a' → logprob: -10.767338752746582
    9. '>' → logprob: -11.017338752746582
    10. ']+"' → logprob: -11.142338752746582

Token 1183: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0032443818636238575
    2. ' +' → logprob: -5.753244400024414
    3. '+a' → logprob: -9.878244400024414
    4. '+"' → logprob: -11.128244400024414
    5. '+'' → logprob: -14.503244400024414
    6. ' +"' → logprob: -16.253244400024414
    7. '+
' → logprob: -16.378244400024414
    8. 'a' → logprob: -17.253244400024414
    9. '+A' → logprob: -17.253244400024414
    10. '+i' → logprob: -17.503244400024414

Token 1184: ' "' (ID: 392)
  Prédit: '"a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"a' → logprob: -0.06233680620789528
    2. ''a' → logprob: -2.8123369216918945
    3. 'a' → logprob: -7.9373369216918945
    4. '"' → logprob: -11.687336921691895
    5. ' "' → logprob: -13.437336921691895
    6. '"A' → logprob: -13.687336921691895
    7. ''' → logprob: -14.812336921691895
    8. ' a' → logprob: -15.687336921691895
    9. '`' → logprob: -15.812336921691895
    10. '	a' → logprob: -16.312335968017578

Token 1185: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -5.438573680294212e-06
    2. ''a' → logprob: -12.750005722045898
    3. '"a' → logprob: -13.250005722045898
    4. ' a' → logprob: -14.375005722045898
    5. '"' → logprob: -15.625005722045898
    6. 'а' → logprob: -17.1250057220459
    7. '_a' → logprob: -17.3750057220459
    8. 'z' → logprob: -18.1250057220459
    9. ''' → logprob: -18.2500057220459
    10. '	a' → logprob: -18.6250057220459

Token 1186: '"' (ID: 1)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.014759915880858898
    2. ' +' → logprob: -4.3897600173950195
    3. 'a' → logprob: -6.7647600173950195
    4. '"' → logprob: -6.8897600173950195
    5. '+a' → logprob: -9.76476001739502
    6. '"+' → logprob: -11.51476001739502
    7. ']' → logprob: -12.88976001739502
    8. '#' → logprob: -13.76476001739502
    9. '"""' → logprob: -13.88976001739502
    10. '```' → logprob: -14.38976001739502

Token 1187: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0052342405542731285
    2. ' +' → logprob: -5.255234241485596
    3. 'a' → logprob: -15.505233764648438
    4. '+a' → logprob: -15.505233764648438
    5. '＋' → logprob: -19.255233764648438
    6. '+=' → logprob: -19.380233764648438
    7. '[' → logprob: -19.755233764648438
    8. '+
' → logprob: -19.880233764648438
    9. '=' → logprob: -20.630233764648438
    10. '<' → logprob: -20.880233764648438

Token 1188: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0001584850688232109
    2. ' a' → logprob: -8.750158309936523
    3. '	a' → logprob: -20.875158309936523
    4. 'а' → logprob: -23.000158309936523
    5. '_a' → logprob: -23.750158309936523
    6. '(a' → logprob: -23.750158309936523
    7. 'i' → logprob: -24.000158309936523
    8. 's' → logprob: -24.000158309936523
    9. '+a' → logprob: -24.000158309936523
    10. '#a' → logprob: -24.125158309936523

Token 1189: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.9361264946837764e-07
    2. '(i' → logprob: -15.75
    3. 'i' → logprob: -17.625
    4. '[(' → logprob: -18.625
    5. '{i' → logprob: -21.375
    6. '[' → logprob: -21.875
    7. 'a' → logprob: -22.25
    8. '[:' → logprob: -23.125
    9. ' [' → logprob: -23.75
    10. '
' → logprob: -24.375

Token 1190: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -9.841743303695694e-05
    2. '+i' → logprob: -9.75009822845459
    3. ' +' → logprob: -10.12509822845459
    4. '[i' → logprob: -17.375099182128906
    5. '+
' → logprob: -17.625099182128906
    6. 'i' → logprob: -18.125099182128906
    7. '1' → logprob: -18.375099182128906
    8. ':i' → logprob: -19.000099182128906
    9. '＋' → logprob: -19.250099182128906
    10. '+=' → logprob: -21.625099182128906

Token 1191: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.625
    3. '```' → logprob: -18.125
    4. '"' → logprob: -20.375
    5. '   ' → logprob: -21.0
    6. '+' → logprob: -21.375
    7. '１' → logprob: -21.5
    8. '2' → logprob: -21.625
    9. '
' → logprob: -21.875
    10. '`' → logprob: -22.0

Token 1192: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. '```' → logprob: -17.375001907348633
    4. '"' → logprob: -18.062501907348633
    5. '2' → logprob: -18.187501907348633
    6. '１' → logprob: -18.187501907348633
    7. '   ' → logprob: -18.375001907348633
    8. '11' → logprob: -18.812501907348633
    9. '
' → logprob: -19.187501907348633
    10. '۱' → logprob: -19.312501907348633

Token 1193: ':]' (ID: 67377)
  Prédit: ':]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':]' → logprob: -0.0005766240647062659
    2. ']' → logprob: -7.625576496124268
    3. ':' → logprob: -10.000576972961426
    4. ' :]' → logprob: -10.500576972961426
    5. '...]' → logprob: -12.375576972961426
    6. '#' → logprob: -12.875576972961426
    7. '1' → logprob: -13.250576972961426
    8. '()]' → logprob: -13.500576972961426
    9. 'i' → logprob: -14.125576972961426
    10. '"]' → logprob: -14.125576972961426

Token 1194: ' ' (ID: 220)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0001596771035110578
    2. '
' → logprob: -8.75015926361084
    3. ' print' → logprob: -15.12515926361084
    4. '#' → logprob: -15.50015926361084
    5. '  
' → logprob: -15.75015926361084
    6. '    
' → logprob: -15.87515926361084
    7. '#print' → logprob: -16.000160217285156
    8. '        
' → logprob: -16.250160217285156
    9. '
' → logprob: -16.250160217285156
    10. '<|end|>' → logprob: -16.500160217285156

Token 1195: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.13143053650856018
    2. '<|end|>' → logprob: -2.1314306259155273
    3. '
' → logprob: -5.631430625915527
    4. '#' → logprob: -7.506430625915527
    5. '<|end|>' → logprob: -9.256430625915527
    6. '```' → logprob: -9.506430625915527
    7. '#print' → logprob: -9.631430625915527
    8. ')' → logprob: -9.631430625915527
    9. '  
' → logprob: -10.881430625915527
    10. ' print' → logprob: -11.631430625915527

Token 1196: ' Ceci' (ID: 144699)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.12114367634057999
    2. '<|end|>' → logprob: -2.2461435794830322
    3. '
' → logprob: -5.496143817901611
    4. '#' → logprob: -5.746143817901611
    5. ')' → logprob: -7.996143817901611
    6. '```' → logprob: -8.246143341064453
    7. '#print' → logprob: -8.496143341064453
    8. '<|end|>' → logprob: -9.871143341064453
    9. 'pass' → logprob: -10.621143341064453
    10. 'continue' → logprob: -10.621143341064453

Token 1197: ' emp' (ID: 4927)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1198: 'êche' (ID: 63993)
  Prédit: 'êche'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êche' → logprob: -0.00032473751343786716
    2. 'ê' → logprob: -9.625325202941895
    3. 'é' → logprob: -9.750325202941895
    4. 'e' → logprob: -9.750325202941895
    5. 'r' → logprob: -9.875325202941895
    6. 'èche' → logprob: -10.125325202941895
    7. 'èce' → logprob: -10.875325202941895
    8. 'ête' → logprob: -12.500325202941895
    9. 'rompt' → logprob: -12.750325202941895
    10. 'che' → logprob: -13.250325202941895

Token 1199: ' de' (ID: 334)
  Prédit: 'que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.6726614236831665
    2. 'de' → logprob: -1.6726614236831665
    3. 'le' → logprob: -2.297661304473877
    4. 'd' → logprob: -2.547661304473877
    5. 'la' → logprob: -3.672661304473877
    6. 'les' → logprob: -3.922661304473877
    7. 'a' → logprob: -4.422661304473877
    8. 'qu' → logprob: -4.547661304473877
    9. 'une' → logprob: -4.547661304473877
    10. 'double' → logprob: -4.672661304473877

Token 1200: ' dé' (ID: 2393)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.5332390069961548
    2. 'com' → logprob: -1.5332390069961548
    3. 're' → logprob: -1.9082390069961548
    4. ' recomp' → logprob: -4.408238887786865
    5. 'ré' → logprob: -4.408238887786865
    6. 'cons' → logprob: -5.158238887786865
    7. 'rep' → logprob: -5.533238887786865
    8. 'sou' → logprob: -5.658238887786865
    9. 'dé' → logprob: -5.908238887786865
    10. 'd' → logprob: -6.033238887786865

Token 1201: 'comp' (ID: 3697)
  Prédit: 'comp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.012743192724883556
    2. 'com' → logprob: -4.76274299621582
    3. 'a' → logprob: -6.38774299621582
    4. 're' → logprob: -7.76274299621582
    5. 'du' → logprob: -8.26274299621582
    6. 'caler' → logprob: -8.38774299621582
    7. 'compiler' → logprob: -8.76274299621582
    8. 'jà' → logprob: -9.01274299621582
    9. 'composer' → logprob: -9.13774299621582
    10. 'double' → logprob: -9.13774299621582

Token 1202: 'ter' (ID: 399)
  Prédit: 'ter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ter' → logprob: -0.05615389719605446
    2. 'te' → logprob: -3.9311540126800537
    3. 'rer' → logprob: -4.431153774261475
    4. 'r' → logprob: -4.806153774261475
    5. 'té' → logprob: -6.056153774261475
    6. 'er' → logprob: -6.056153774261475
    7. 't' → logprob: -6.306153774261475
    8. 'l' → logprob: -6.806153774261475
    9. 'tes' → logprob: -7.681153774261475
    10. 'oser' → logprob: -7.743653774261475

Token 1203: ' deux' (ID: 10301)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'le' → logprob: -1.076891541481018
    2. 'plus' → logprob: -1.576891541481018
    3. '<|end|>' → logprob: -2.0768914222717285
    4. 'à' → logprob: -2.7018914222717285
    5. ' ce' → logprob: -2.7018914222717285
    6. ' à' → logprob: -2.8268914222717285
    7. ' le' → logprob: -3.7018914222717285
    8. 'la' → logprob: -3.7018914222717285
    9. ' plus' → logprob: -4.0768914222717285
    10. ' ' → logprob: -4.5768914222717285

Token 1204: ' fois' (ID: 14697)
  Prédit: ' fois'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fois' → logprob: -0.3875342309474945
    2. 'fois' → logprob: -1.137534260749817
    3. '<|end|>' → logprob: -8.012534141540527
    4. 'times' → logprob: -8.762534141540527
    5. 'f' → logprob: -10.137534141540527
    6. 'tokens' → logprob: -10.387534141540527
    7. 'points' → logprob: -10.637534141540527
    8. 'fo' → logprob: -10.762534141540527
    9. ' ' → logprob: -11.137534141540527
    10. ' times' → logprob: -11.637534141540527

Token 1205: ' sur' (ID: 1512)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1206: ' des' (ID: 731)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.3082364499568939
    2. 'la' → logprob: -1.5582364797592163
    3. 'les' → logprob: -3.6832363605499268
    4. ' le' → logprob: -3.9332363605499268
    5. ' la' → logprob: -5.308236598968506
    6. 'the' → logprob: -6.433236598968506
    7. 'l' → logprob: -6.933236598968506
    8. 'plus' → logprob: -7.683236598968506
    9. 'ce' → logprob: -7.808236598968506
    10. ' les' → logprob: -7.808236598968506

Token 1207: ' sé' (ID: 7462)
  Prédit: 'indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'indices' → logprob: -0.7903238534927368
    2. 'positions' → logprob: -1.2903238534927368
    3. ' indices' → logprob: -2.5403237342834473
    4. 'm' → logprob: -2.7903237342834473
    5. 'cou' → logprob: -3.5403237342834473
    6. 'c' → logprob: -4.165323734283447
    7. ' coups' → logprob: -4.290323734283447
    8. 'd' → logprob: -4.415323734283447
    9. 'over' → logprob: -4.790323734283447
    10. ' positions' → logprob: -4.915323734283447

Token 1208: 'quences' (ID: 16559)
  Prédit: 'quences'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quences' → logprob: -0.013643293641507626
    2. 'qu' → logprob: -4.763643264770508
    3. 'ques' → logprob: -6.638643264770508
    4. 'placements' → logprob: -7.388643264770508
    5. 'cal' → logprob: -7.763643264770508
    6. 'q' → logprob: -7.763643264770508
    7. '```' → logprob: -8.138643264770508
    8. 'lections' → logprob: -8.263643264770508
    9. 'quent' → logprob: -8.513643264770508
    10. 'gments' → logprob: -8.638643264770508

Token 1209: ' à' (ID: 1221)
  Prédit: 'success'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'success' → logprob: -0.8385314345359802
    2. 'cons' → logprob: -1.838531494140625
    3. ' cons' → logprob: -2.463531494140625
    4. 'su' → logprob: -2.463531494140625
    5. 'contin' → logprob: -2.838531494140625
    6. 'de' → logprob: -3.463531494140625
    7. 'con' → logprob: -3.588531494140625
    8. 'd' → logprob: -3.838531494140625
    9. 'sim' → logprob: -4.213531494140625
    10. 'ident' → logprob: -4.713531494140625

Token 1210: ' distance' (ID: 9324)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.4067899286746979
    2. 'plus' → logprob: -1.6567898988723755
    3. 'i' → logprob: -2.781790018081665
    4. '+' → logprob: -3.531790018081665
    5. 'k' → logprob: -4.031789779663086
    6. '```' → logprob: -5.656789779663086
    7. 'moins' → logprob: -5.781789779663086
    8. 'interval' → logprob: -5.781789779663086
    9. 'l' → logprob: -5.781789779663086
    10. 'dist' → logprob: -6.281789779663086

Token 1211: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.00589028000831604
    2. ' k' → logprob: -5.630890369415283
    3. '+k' → logprob: -6.505890369415283
    4. 'de' → logprob: -7.880890369415283
    5. '+' → logprob: -8.505889892578125
    6. ' de' → logprob: -9.880889892578125
    7. '<|end|>' → logprob: -9.880889892578125
    8. ' +' → logprob: -11.130889892578125
    9. ' multiple' → logprob: -11.380889892578125
    10. '.' → logprob: -11.630889892578125

Token 1212: ' multiples' (ID: 70720)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1213: '.
' (ID: 558)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1214: '        
' (ID: 3564)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.816093228830141e-06
    2. '
' → logprob: -13.25000286102295
    3. ' print' → logprob: -14.12500286102295
    4. '#print' → logprob: -15.87500286102295
    5. '  
' → logprob: -16.750001907348633
    6. '#' → logprob: -17.000001907348633
    7. '<|end|>' → logprob: -17.750001907348633
    8. '```' → logprob: -17.875001907348633
    9. ' 
' → logprob: -18.375001907348633
    10. '

' → logprob: -19.000001907348633

Token 1215: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -6.704273118884885e-07
    2. ' print' → logprob: -14.750000953674316
    3. '
' → logprob: -16.5
    4. '#print' → logprob: -16.625
    5. '#' → logprob: -18.125
    6. '(print' → logprob: -18.5
    7. '```' → logprob: -18.5
    8. '<|end|>' → logprob: -19.0
    9. ')' → logprob: -19.625
    10. 'for' → logprob: -19.875

Token 1216: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -7.226628895296017e-06
    2. '(' → logprob: -12.000007629394531
    3. 'ans' → logprob: -14.000007629394531
    4. ' (' → logprob: -16.62500762939453
    5. '(a' → logprob: -17.50000762939453
    6. '(answer' → logprob: -17.75000762939453
    7. '(abs' → logprob: -19.00000762939453
    8. '()' → logprob: -19.25000762939453
    9. '(
' → logprob: -19.37500762939453
    10. '	ans' → logprob: -19.75000762939453

Token 1217: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.7729658540920354e-05
    2. ' )' → logprob: -10.500027656555176
    3. '())' → logprob: -16.750028610229492
    4. '()' → logprob: -18.000028610229492
    5. ')`' → logprob: -18.250028610229492
    6. '))' → logprob: -18.625028610229492
    7. ')
' → logprob: -19.500028610229492
    8. '）' → logprob: -19.500028610229492
    9. ')#' → logprob: -19.750028610229492
    10. ' ' → logprob: -20.000028610229492

Token 1218: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1219: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1220: ' Aff' (ID: 13741)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1221: 'iche' (ID: 7509)
  Prédit: 'icher'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'icher' → logprob: -0.029952852055430412
    2. 'iche' → logprob: -3.5299527645111084
    3. 'ichage' → logprob: -8.904953002929688
    4. 'ich' → logprob: -10.279953002929688
    5. '#' → logprob: -11.279953002929688
    6. 'ic' → logprob: -11.404953002929688
    7. 'cher' → logprob: -12.279953002929688
    8. 'ichier' → logprob: -14.279953002929688
    9. 'iché' → logprob: -14.279953002929688
    10. '```' → logprob: -14.529953002929688

Token 1222: ' enfin' (ID: 50642)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -2.236549335066229e-05
    2. '(' → logprob: -11.500021934509277
    3. 'ans' → logprob: -11.750021934509277
    4. '()' → logprob: -12.625021934509277
    5. '	ans' → logprob: -14.500021934509277
    6. ' ans' → logprob: -15.250021934509277
    7. '(answer' → logprob: -15.750021934509277
    8. '("")' → logprob: -17.625022888183594
    9. '_ans' → logprob: -18.250022888183594
    10. '(abs' → logprob: -18.625022888183594

Token 1223: ' le' (ID: 505)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.0019289902411401272
    2. 'ans' → logprob: -6.251928806304932
    3. '	ans' → logprob: -15.12692928314209
    4. ' ans' → logprob: -15.87692928314209
    5. '_ans' → logprob: -18.501928329467773
    6. 'ANS' → logprob: -18.626928329467773
    7. 'Ans' → logprob: -19.001928329467773
    8. '(answer' → logprob: -19.376928329467773
    9. '(
' → logprob: -20.126928329467773
    10. '(an' → logprob: -20.501928329467773

Token 1224: ' score' (ID: 8429)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.003674655919894576
    2. 'score' → logprob: -6.253674507141113
    3. 'result' → logprob: -7.128674507141113
    4. '(ans' → logprob: -8.503674507141113
    5. 'answer' → logprob: -8.628674507141113
    6. 'nombre' → logprob: -8.628674507141113
    7. 'total' → logprob: -9.128674507141113
    8. 'rés' → logprob: -9.128674507141113
    9. ' résultat' → logprob: -9.753674507141113
    10. ' ans' → logprob: -9.753674507141113

Token 1225: ' total' (ID: 3609)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1226: ' obtenu' (ID: 117330)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1227: ' après' (ID: 16460)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1228: ' avoir' (ID: 16595)
  Prédit: 'calcul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'calcul' → logprob: -0.768618643283844
    2. 'prendre' → logprob: -1.8936185836791992
    3. 'la' → logprob: -2.393618583679199
    4. 'l' → logprob: -2.643618583679199
    5. 'prise' → logprob: -3.143618583679199
    6. 'comp' → logprob: -3.643618583679199
    7. 'taking' → logprob: -3.768618583679199
    8. '\n' → logprob: -4.018618583679199
    9. '```' → logprob: -4.143618583679199
    10. 'respect' → logprob: -4.393618583679199

Token 1229: ' appli' (ID: 25550)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.14099186658859253
    2. 'comp' → logprob: -3.0159919261932373
    3. 'calcul' → logprob: -3.6409919261932373
    4. ' corrig' → logprob: -4.390991687774658
    5. 'corr' → logprob: -4.765991687774658
    6. 'respect' → logprob: -5.265991687774658
    7. '#' → logprob: -5.265991687774658
    8. 'pris' → logprob: -5.265991687774658
    9. 'trait' → logprob: -5.640991687774658
    10. 'correct' → logprob: -5.765991687774658

Token 1230: 'qué' (ID: 23535)
  Prédit: 'ué'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ué' → logprob: -0.020760495215654373
    2. 'qué' → logprob: -4.270760536193848
    3. 'iqué' → logprob: -5.520760536193848
    4. 'uant' → logprob: -6.395760536193848
    5. 'u' → logprob: -8.020760536193848
    6. 'uy' → logprob: -8.270760536193848
    7. 'ui' → logprob: -9.020760536193848
    8. 'uq' → logprob: -10.145760536193848
    9. 'iquant' → logprob: -10.395760536193848
    10. 'ié' → logprob: -10.770760536193848

Token 1231: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.6928552985191345
    2. ' la' → logprob: -1.4428553581237793
    3. ' les' → logprob: -2.9428553581237793
    4. '(' → logprob: -3.1928553581237793
    5. 'les' → logprob: -3.4428553581237793
    6. '()' → logprob: -3.4428553581237793
    7. 'l' → logprob: -3.8178553581237793
    8. '("\' → logprob: -4.442855358123779
    9. '("")' → logprob: -4.692855358123779
    10. 'le' → logprob: -4.817855358123779

Token 1232: ' contr' (ID: 6030)
  Prédit: 'contr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'contr' → logprob: -0.299930214881897
    2. 'cor' → logprob: -2.2999300956726074
    3. 'contra' → logprob: -2.5499300956726074
    4. 'correct' → logprob: -3.6749300956726074
    5. 'restriction' → logprob: -3.9249300956726074
    6. 'constraint' → logprob: -4.549930095672607
    7. 'restr' → logprob: -5.174930095672607
    8. 'con' → logprob: -5.299930095672607
    9. 'gestion' → logprob: -6.049930095672607
    10. 'mod' → logprob: -6.049930095672607

Token 1233: 'ainte' (ID: 48434)
  Prédit: 'ainte'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ainte' → logprob: -0.00042626605136319995
    2. 'a' → logprob: -7.875426292419434
    3. 'aint' → logprob: -10.250426292419434
    4. 'ain' → logprob: -13.000426292419434
    5. 'aine' → logprob: -13.125426292419434
    6. 'ôle' → logprob: -13.500426292419434
    7. 'aise' → logprob: -13.500426292419434
    8. '#' → logprob: -14.375426292419434
    9. 'aiste' → logprob: -14.625426292419434
    10. 'aints' → logprob: -14.750426292419434

Token 1234: ' de' (ID: 334)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1235: ' non' (ID: 2893)
  Prédit: 'non'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'non' → logprob: -0.2800023853778839
    2. 'k' → logprob: -1.5300023555755615
    3. 'la' → logprob: -5.405002593994141
    4. 'prise' → logprob: -5.530002593994141
    5. 't' → logprob: -5.780002593994141
    6. 'com' → logprob: -6.405002593994141
    7. 'valid' → logprob: -6.530002593994141
    8. 'restriction' → logprob: -6.530002593994141
    9. 'dé' → logprob: -6.530002593994141
    10. 'score' → logprob: -6.780002593994141

Token 1236: '-r' (ID: 6335)
  Prédit: ' répét'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' répét' → logprob: -0.036146026104688644
    2. ' rép' → logprob: -3.4111459255218506
    3. 'ré' → logprob: -6.41114616394043
    4. ' repetition' → logprob: -8.16114616394043
    5. '-r' → logprob: -8.53614616394043
    6. 'r' → logprob: -9.03614616394043
    7. 'é' → logprob: -10.53614616394043
    8. 'print' → logprob: -10.78614616394043
    9. 'à' → logprob: -11.03614616394043
    10. 's' → logprob: -11.28614616394043

Token 1237: 'ép' (ID: 35980)
  Prédit: 'ép'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ép' → logprob: -0.00015288250870071352
    2. 'é' → logprob: -9.125152587890625
    3. 'ep' → logprob: -10.625152587890625
    4. 'p' → logprob: -11.250152587890625
    5. 'éc' → logprob: -12.250152587890625
    6. 'pé' → logprob: -13.750152587890625
    7. 'és' → logprob: -15.250152587890625
    8. '"' → logprob: -15.750152587890625
    9. 'e' → logprob: -16.500152587890625
    10. ' répét' → logprob: -17.500152587890625

Token 1238: 'ét' (ID: 3913)
  Prédit: 'és'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.7078320980072021
    2. 'int' → logprob: -0.9578320980072021
    3. 'é' → logprob: -2.707832098007202
    4. 'éc' → logprob: -4.082832336425781
    5. 'ise' → logprob: -5.207832336425781
    6. 'im' → logprob: -5.457832336425781
    7. 'ép' → logprob: -5.582832336425781
    8. 'et' → logprob: -5.707832336425781
    9. 'ition' → logprob: -5.707832336425781
    10. 'éhension' → logprob: -6.082832336425781

Token 1239: 'ition' (ID: 868)
  Prédit: 'ition'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ition' → logprob: -0.002947632223367691
    2. 'et' → logprob: -6.752947807312012
    3. 'ation' → logprob: -7.377947807312012
    4. 'é' → logprob: -8.127947807312012
    5. 't' → logprob: -8.627947807312012
    6. 'tion' → logprob: -8.752947807312012
    7. 'it' → logprob: -9.252947807312012
    8. 'ét' → logprob: -9.377947807312012
    9. 'e' → logprob: -9.752947807312012
    10. 'er' → logprob: -9.877947807312012

Token 1240: ' à' (ID: 1221)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.38904109597206116
    2. '<|end|>' → logprob: -1.6390410661697388
    3. ')' → logprob: -2.1390411853790283
    4. '()' → logprob: -5.014040946960449
    5. '```' → logprob: -7.139040946960449
    6. '(' → logprob: -7.389040946960449
    7. '<|end|>' → logprob: -7.514040946960449
    8. ').' → logprob: -7.889040946960449
    9. '("")' → logprob: -8.38904094696045
    10. '\n' → logprob: -8.76404094696045

Token 1241: ' distance' (ID: 9324)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.08787707984447479
    2. 'l' → logprob: -2.712877035140991
    3. 'k' → logprob: -4.33787727355957
    4. ' la' → logprob: -6.08787727355957
    5. 'a' → logprob: -6.71287727355957
    6. 'fin' → logprob: -9.08787727355957
    7. 'lap' → logprob: -9.08787727355957
    8. 'lac' → logprob: -9.58787727355957
    9. 'print' → logprob: -9.71287727355957
    10. 't' → logprob: -9.96287727355957

Token 1242: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.012396627105772495
    2. ' k' → logprob: -5.137396812438965
    3. '<|end|>' → logprob: -6.262396812438965
    4. '_k' → logprob: -6.637396812438965
    5. '.' → logprob: -6.762396812438965
    6. '```' → logprob: -7.512396812438965
    7. '*k' → logprob: -8.137396812438965
    8. ')' → logprob: -8.262396812438965
    9. '(k' → logprob: -8.387396812438965
    10. 'de' → logprob: -8.887396812438965

Token 1243: '.' (ID: 13)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1241
Tokens correctement prédits (1ère position, stricte): 221
Tokens correctement prédits (1ère position, avec adaptation): 238
Tokens correctement prédits (top 10): 588
Précision stricte (1ère position): 17.81%
Précision adaptée (1ère position): 19.18%
Précision (top 10): 47.38%
================================================================================
