================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:06:10
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Entrée des paramètres de taille et du nombre d'opérations à effectuer
taille_permutation, nombre_operations = map(int, input().split())

# Lecture et transformation des permutations fournies en listes d'indices base 0
premiere_permutation = [int(valeur) - 1 for valeur in input().split()]
deuxieme_permutation = [int(valeur) - 1 for valeur in input().split()]

# Fonction pour appliquer une permutation 'ordre' sur la liste 'sequence'
def appliquer_permutation(sequence, ordre):
    return [sequence[ordre[indice]] for indice in range(taille_permutation)]

# Initialisation de la table des permutations composées
permutations_composées = [
    [0 for _ in range(taille_permutation)]
    for _ in range(6)
]

# Affectation des deux permutations de base
permutations_composées[0] = premiere_permutation
permutations_composées[1] = deuxieme_permutation

# Fonction pour calculer l'inverse d'une permutation
def inverse_permutation(permutation):
    resultat = [0] * taille_permutation
    for position in range(taille_permutation):
        resultat[permutation[position]] = position
    return resultat

# Construction des permutations successives par composition alternée
for indice_etape in range(4):
    permutation_suivante = appliquer_permutation(
        permutations_composées[indice_etape + 1], 
        inverse_permutation(permutations_composées[indice_etape])
    )
    permutations_composées[indice_etape + 2] = permutation_suivante

# Fonction récursive pour appliquer une permutation 'permutation' k fois efficacement
def exponentier_permutation(permutation, exposant):
    if exposant == 0:
        return list(range(taille_permutation))

    permutation_carrée = appliquer_permutation(permutation, permutation)
    demi_permutation = exponentier_permutation(permutation_carrée, exposant // 2)

    if exposant % 2 == 0:
        return demi_permutation
    else:
        return appliquer_permutation(demi_permutation, permutation)

# Étape 1 : Calcul de la permutation de départ à appliquer 'nombre_operations // 6' fois
permutation_de_base = appliquer_permutation(
    premiere_permutation,
    inverse_permutation(deuxieme_permutation)
)
permutation_de_base = appliquer_permutation(
    appliquer_permutation(
        deuxieme_permutation,
        inverse_permutation(premiere_permutation)
    ),
    permutation_de_base
)

# Application efficace du cycle principal
nombre_cycles = (nombre_operations - 1) // 6
permutation_apres_cycles = exponentier_permutation(permutation_de_base, nombre_cycles)

# Détermination de la permutation complémentaire finale
indice_permutation_complémentaire = (nombre_operations - 1) % 6
permutation_complémentaire = permutations_composées[indice_permutation_complémentaire]

# Application finale de la permutation correcte
resultat_final = appliquer_permutation(
    appliquer_permutation(permutation_apres_cycles, permutation_complémentaire),
    inverse_permutation(permutation_apres_cycles)
)

# Affichage de la permutation finale avec passage à l'indexation humaine (base 1)
affichage_resultat = [str(valeur + 1) for valeur in resultat_final]
print(" ".join(affichage_resultat))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Entr' (ID: 50650)
  → Token d'amorce (pas de prédiction)

Token 2: 'ée' (ID: 2894)
  → Token d'amorce (pas de prédiction)

Token 3: ' des' (ID: 731)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.38754597306251526
    2. '=' → logprob: -1.7625459432601929
    3. ' =' → logprob: -2.1375460624694824
    4. 's' → logprob: -4.137546062469482
    5. '#' → logprob: -5.012546062469482
    6. ' :' → logprob: -5.137546062469482
    7. '_' → logprob: -7.012546062469482
    8. '```' → logprob: -7.012546062469482
    9. 'user' → logprob: -7.887546062469482
    10. ',' → logprob: -9.137545585632324

Token 4: ' paramètres' (ID: 130696)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.4444103240966797
    2. 'util' → logprob: -2.1944103240966797
    3. ' données' → logprob: -2.6944103240966797
    4. 'don' → logprob: -3.1944103240966797
    5. 'nombre' → logprob: -3.4444103240966797
    6. 'val' → logprob: -3.4444103240966797
    7. 'l' → logprob: -4.81941032409668
    8. 'data' → logprob: -4.81941032409668
    9. 'nom' → logprob: -4.94441032409668
    10. 'n' → logprob: -4.94441032409668

Token 5: ' de' (ID: 334)
  Prédit: 'params'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'params' → logprob: -0.3253234326839447
    2. ':' → logprob: -2.8253233432769775
    3. '=' → logprob: -3.2003233432769775
    4. 'n' → logprob: -3.3253233432769775
    5. 'x' → logprob: -3.8253233432769775
    6. 'user' → logprob: -4.200323581695557
    7. ' =' → logprob: -4.325323581695557
    8. 'p' → logprob: -4.325323581695557
    9. 's' → logprob: -4.450323581695557
    10. 'param' → logprob: -4.575323581695557

Token 6: ' taille' (ID: 41644)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.3478410840034485
    2. 'configuration' → logprob: -1.5978410243988037
    3. 'la' → logprob: -2.7228410243988037
    4. 's' → logprob: -4.972841262817383
    5. 'fonction' → logprob: -5.222841262817383
    6. 'connexion' → logprob: -5.347841262817383
    7. '#' → logprob: -5.847841262817383
    8. ' l' → logprob: -6.847841262817383
    9. ' la' → logprob: -7.472841262817383
    10. 'dé' → logprob: -7.722841262817383

Token 7: ' et' (ID: 859)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5059822797775269
    2. 'tail' → logprob: -1.7559822797775269
    3. 't' → logprob: -2.0059823989868164
    4. ':' → logprob: -3.6309823989868164
    5. 's' → logprob: -4.130982398986816
    6. '#' → logprob: -4.255982398986816
    7. 'n' → logprob: -5.380982398986816
    8. ' :' → logprob: -5.505982398986816
    9. '_t' → logprob: -5.880982398986816
    10. ',' → logprob: -5.880982398986816

Token 8: ' du' (ID: 1462)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.5808130502700806
    2. ' poids' → logprob: -1.8308130502700806
    3. 'po' → logprob: -2.205812931060791
    4. ' ' → logprob: -2.205812931060791
    5. '#' → logprob: -2.705812931060791
    6. ' #' → logprob: -2.830812931060791
    7. 'd' → logprob: -2.830812931060791
    8. ' forme' → logprob: -3.330812931060791
    9. 'forme' → logprob: -3.330812931060791
    10. 'de' → logprob: -3.330812931060791

Token 9: ' nombre' (ID: 9733)
  Prédit: 'code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'code' → logprob: -2.4310367107391357
    2. 'texte' → logprob: -2.4310367107391357
    3. 's' → logprob: -2.5560367107391357
    4. '```' → logprob: -2.5560367107391357
    5. 'nombre' → logprob: -2.8060367107391357
    6. 'nom' → logprob: -2.8060367107391357
    7. 'volume' → logprob: -3.1810367107391357
    8. 'f' → logprob: -3.5560367107391357
    9. ' fichier' → logprob: -3.6810367107391357
    10. ' code' → logprob: -3.6810367107391357

Token 10: ' d' (ID: 272)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0131129315122962
    2. 's' → logprob: -5.388113021850586
    3. ':' → logprob: -6.013113021850586
    4. '```' → logprob: -6.638113021850586
    5. ' _' → logprob: -7.388113021850586
    6. 'n' → logprob: -7.763113021850586
    7. ' :' → logprob: -7.888113021850586
    8. '_s' → logprob: -8.138113021850586
    9. '_:' → logprob: -8.138113021850586
    10. 'x' → logprob: -8.138113021850586

Token 11: ''op' (ID: 70747)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.16535286605358124
    2. ''é' → logprob: -2.0403528213500977
    3. ''ex' → logprob: -4.915352821350098
    4. 'e' → logprob: -5.290352821350098
    5. ''espace' → logprob: -6.165352821350098
    6. 'u' → logprob: -6.540352821350098
    7. ''e' → logprob: -6.790352821350098
    8. 'é' → logprob: -6.915352821350098
    9. ''esp' → logprob: -7.040352821350098
    10. ''u' → logprob: -7.540352821350098

Token 12: 'érations' (ID: 152860)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.23966377973556519
    2. 'u' → logprob: -1.86466383934021
    3. 'e' → logprob: -3.98966383934021
    4. 'ér' → logprob: -4.614663600921631
    5. 'érations' → logprob: -4.989663600921631
    6. '```' → logprob: -5.114663600921631
    7. 'ú' → logprob: -6.114663600921631
    8. ')' → logprob: -6.239663600921631
    9. 't' → logprob: -6.239663600921631
    10. 's' → logprob: -6.239663600921631

Token 13: ' à' (ID: 1221)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5713629722595215
    2. 't' → logprob: -1.5713629722595215
    3. 'tail' → logprob: -1.9463629722595215
    4. 'x' → logprob: -3.5713629722595215
    5. '_' → logprob: -4.3213629722595215
    6. 's' → logprob: -4.5713629722595215
    7. 'size' → logprob: -4.6963629722595215
    8. 'i' → logprob: -5.8213629722595215
    9. 'params' → logprob: -5.9463629722595215
    10. '#' → logprob: -6.1963629722595215

Token 14: ' effectuer' (ID: 98625)
  Prédit: 'ré'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ré' → logprob: -0.7542411684989929
    2. ' effectuer' → logprob: -0.8792411684989929
    3. ' réaliser' → logprob: -2.8792412281036377
    4. 'r' → logprob: -3.6292412281036377
    5. 'effect' → logprob: -3.8792412281036377
    6. 'ex' → logprob: -5.629240989685059
    7. 'é' → logprob: -6.504240989685059
    8. 'faire' → logprob: -7.129240989685059
    9. ''effect' → logprob: -7.379240989685059
    10. 'sim' → logprob: -7.629240989685059

Token 15: '
' (ID: 198)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.8102140426635742
    2. 'n' → logprob: -1.1852140426635742
    3. '#' → logprob: -2.935214042663574
    4. 'x' → logprob: -3.060214042663574
    5. 't' → logprob: -3.560214042663574
    6. '`' → logprob: -3.935214042663574
    7. ':' → logprob: -4.060214042663574
    8. '\n' → logprob: -4.060214042663574
    9. ',' → logprob: -4.435214042663574
    10. 's' → logprob: -4.810214042663574

Token 16: 'tail' (ID: 20472)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.046735286712646484
    2. 't' → logprob: -3.5467352867126465
    3. '```' → logprob: -5.4217352867126465
    4. '\n' → logprob: -6.4217352867126465
    5. 'tail' → logprob: -6.6717352867126465
    6. '\' → logprob: -6.9217352867126465
    7. '_' → logprob: -7.0467352867126465
    8. 's' → logprob: -7.0467352867126465
    9. 'size' → logprob: -7.1717352867126465
    10. ' ```' → logprob: -7.5467352867126465

Token 17: 'le' (ID: 282)
  Prédit: 'le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.2664077877998352
    2. '_' → logprob: -2.0164077281951904
    3. '-' → logprob: -3.5164077281951904
    4. ' -' → logprob: -3.7664077281951904
    5. ' ' → logprob: -4.2664079666137695
    6. '(' → logprob: -4.6414079666137695
    7. 'l' → logprob: -4.8914079666137695
    8. '   ' → logprob: -6.2664079666137695
    9. ',' → logprob: -6.3914079666137695
    10. '=' → logprob: -6.5164079666137695

Token 18: '_per' (ID: 10938)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6176440119743347
    2. ' =' → logprob: -1.2426440715789795
    3. '=' → logprob: -1.8676440715789795
    4. ',' → logprob: -4.8676438331604
    5. ')' → logprob: -5.6176438331604
    6. ' ' → logprob: -5.7426438331604
    7. '[' → logprob: -6.7426438331604
    8. 's' → logprob: -7.6176438331604
    9. '_space' → logprob: -7.8676438331604
    10. 'space' → logprob: -9.117644309997559

Token 19: 'mutation' (ID: 92896)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.3569902181625366
    2. 'm' → logprob: -1.4819902181625366
    3. 't' → logprob: -2.481990337371826
    4. 'te' → logprob: -2.481990337371826
    5. 'met' → logprob: -2.856990337371826
    6. 'f' → logprob: -3.231990337371826
    7. 's' → logprob: -3.231990337371826
    8. '_' → logprob: -3.231990337371826
    9. 'ation' → logprob: -3.731990337371826
    10. 'mutation' → logprob: -3.731990337371826

Token 20: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06188051030039787
    2. '=' → logprob: -2.936880588531494
    3. ',' → logprob: -5.311880588531494
    4. 's' → logprob: -6.936880588531494
    5. '_' → logprob: -7.436880588531494
    6. '[' → logprob: -8.311880111694336
    7. ' ' → logprob: -9.436880111694336
    8. ')' → logprob: -10.186880111694336
    9. ' ,' → logprob: -11.061880111694336
    10. '   ' → logprob: -11.561880111694336

Token 21: ' nombre' (ID: 9733)
  Prédit: ' nb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nb' → logprob: -1.2354170083999634
    2. ' nombre' → logprob: -1.3604170083999634
    3. 'nombre' → logprob: -1.3604170083999634
    4. 'nb' → logprob: -2.735416889190674
    5. ' n' → logprob: -3.110416889190674
    6. 'n' → logprob: -3.110416889190674
    7. ' ' → logprob: -4.110416889190674
    8. ' =' → logprob: -5.360416889190674
    9. ' nbr' → logprob: -5.610416889190674
    10. ' espace' → logprob: -5.860416889190674

Token 22: '_operations' (ID: 148404)
  Prédit: '_op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_op' → logprob: -0.7216328382492065
    2. '_' → logprob: -1.7216328382492065
    3. '_operations' → logprob: -1.9716328382492065
    4. '_d' → logprob: -2.721632957458496
    5. '_de' → logprob: -2.846632957458496
    6. '_ops' → logprob: -3.596632957458496
    7. '_per' → logprob: -3.846632957458496
    8. '_des' → logprob: -4.596632957458496
    9. '_operation' → logprob: -5.346632957458496
    10. ' =' → logprob: -5.846632957458496

Token 23: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.026856698095798492
    2. '=' → logprob: -3.6518566608428955
    3. ',' → logprob: -7.526856899261475
    4. '=input' → logprob: -11.901856422424316
    5. ' ' → logprob: -12.276856422424316
    6. ' ,' → logprob: -12.651856422424316
    7. ' ' → logprob: -14.276856422424316
    8. ')' → logprob: -14.526856422424316
    9. '=int' → logprob: -15.151856422424316
    10. 'input' → logprob: -15.276856422424316

Token 24: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.034100085496902466
    2. ' input' → logprob: -4.15910005569458
    3. 'map' → logprob: -4.53410005569458
    4. ' ' → logprob: -5.15910005569458
    5. 'input' → logprob: -7.90910005569458
    6. ' int' → logprob: -7.90910005569458
    7. ' list' → logprob: -8.284100532531738
    8. ' [' → logprob: -8.784100532531738
    9. ' (' → logprob: -9.409100532531738
    10. 'int' → logprob: -10.284100532531738

Token 25: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.017402570694684982
    2. '(' → logprob: -4.142402648925781
    3. '(lambda' → logprob: -7.017402648925781
    4. '(str' → logprob: -7.767402648925781
    5. '(list' → logprob: -11.017402648925781
    6. '[int' → logprob: -11.892402648925781
    7. 'int' → logprob: -11.892402648925781
    8. '(
' → logprob: -12.142402648925781
    9. '(input' → logprob: -13.017402648925781
    10. '<int' → logprob: -13.017402648925781

Token 26: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.15038345754146576
    2. 'input' → logprob: -2.025383472442627
    3. ')' → logprob: -5.025383472442627
    4. '(' → logprob: -7.775383472442627
    5. ' input' → logprob: -7.775383472442627
    6. ',input' → logprob: -8.900382995605469
    7. '=input' → logprob: -9.775382995605469
    8. ' )' → logprob: -10.775382995605469
    9. ')(' → logprob: -11.275382995605469
    10. ' (' → logprob: -11.275382995605469

Token 27: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.160291850566864
    2. ' input' → logprob: -1.9102919101715088
    3. '(input' → logprob: -10.53529167175293
    4. ')' → logprob: -10.53529167175293
    5. '=input' → logprob: -11.78529167175293
    6. '<input' → logprob: -13.28529167175293
    7. ',input' → logprob: -13.66029167175293
    8. '[input' → logprob: -13.78529167175293
    9. '```' → logprob: -13.91029167175293
    10. '	input' → logprob: -14.28529167175293

Token 28: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.33145156502723694
    2. '().' → logprob: -1.9564515352249146
    3. '())' → logprob: -2.081451654434204
    4. '(' → logprob: -5.456451416015625
    5. '()).' → logprob: -6.206451416015625
    6. '());' → logprob: -6.331451416015625
    7. '(input' → logprob: -6.456451416015625
    8. ')' → logprob: -6.456451416015625
    9. '()))' → logprob: -6.456451416015625
    10. '(()' → logprob: -7.206451416015625

Token 29: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -2.2246291337069124e-05
    2. 'strip' → logprob: -10.750021934509277
    3. ' split' → logprob: -15.125021934509277
    4. '(split' → logprob: -15.500021934509277
    5. 'rstrip' → logprob: -15.625021934509277
    6. 'spl' → logprob: -16.375022888183594
    7. 'read' → logprob: -16.875022888183594
    8. '_split' → logprob: -19.750022888183594
    9. 'replace' → logprob: -20.250022888183594
    10. 's' → logprob: -20.375022888183594

Token 30: '())

' (ID: 27654)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4608156085014343
    2. '())' → logprob: -1.335815668106079
    3. '))' → logprob: -2.960815668106079
    4. '('' → logprob: -3.085815668106079
    5. '(' → logprob: -5.5858154296875
    6. '()))' → logprob: -5.8358154296875
    7. '()' → logprob: -6.5858154296875
    8. ')(' → logprob: -8.8358154296875
    9. '(','' → logprob: -8.9608154296875
    10. '(""))' → logprob: -9.3358154296875

Token 31: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0376348495483398
    2. '<|end|>' → logprob: -1.0376348495483398
    3. '\n' → logprob: -1.4126348495483398
    4. ')' → logprob: -4.16263484954834
    5. '<|end|>' → logprob: -4.91263484954834
    6. '' → logprob: -5.41263484954834
    7. ' 
' → logprob: -5.53763484954834
    8. '```' → logprob: -5.78763484954834
    9. 'newline' → logprob: -5.91263484954834
    10. '\' → logprob: -5.91263484954834

Token 32: ' Lecture' (ID: 106534)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.46812576055526733
    2. 'for' → logprob: -1.218125820159912
    3. 'per' → logprob: -4.093125820159912
    4. ' result' → logprob: -4.468125820159912
    5. ' permutations' → logprob: -4.468125820159912
    6. 'result' → logprob: -4.718125820159912
    7. '#' → logprob: -5.343125820159912
    8. ' operations' → logprob: -5.343125820159912
    9. 'operations' → logprob: -5.468125820159912
    10. ' permutation' → logprob: -5.593125820159912

Token 33: ' et' (ID: 859)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.025297945365309715
    2. 'des' → logprob: -4.275298118591309
    3. ' des' → logprob: -4.775298118591309
    4. '(' → logprob: -7.525298118591309
    5. '_des' → logprob: -7.775298118591309
    6. 's' → logprob: -8.400298118591309
    7. 'de' → logprob: -8.650298118591309
    8. ' de' → logprob: -8.650298118591309
    9. '<|end|>' → logprob: -8.650298118591309
    10. ')' → logprob: -9.025298118591309

Token 34: ' transformation' (ID: 26242)
  Prédit: ' initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' initial' → logprob: -0.2899095416069031
    2. ' permutation' → logprob: -2.164909601211548
    3. ' traitement' → logprob: -2.789909601211548
    4. 'initial' → logprob: -3.789909601211548
    5. ' création' → logprob: -4.539909362792969
    6. ' construction' → logprob: -5.039909362792969
    7. ' génération' → logprob: -5.289909362792969
    8. ' application' → logprob: -5.414909362792969
    9. ' permutations' → logprob: -5.414909362792969
    10. ' perm' → logprob: -5.914909362792969

Token 35: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.6341403126716614
    2. ' de' → logprob: -1.1341402530670166
    3. 'des' → logprob: -2.8841402530670166
    4. ' du' → logprob: -3.0091402530670166
    5. 'de' → logprob: -3.7591402530670166
    6. 'du' → logprob: -5.509140491485596
    7. ' d' → logprob: -5.759140491485596
    8. '_des' → logprob: -6.509140491485596
    9. 'd' → logprob: -6.759140491485596
    10. ' ' → logprob: -6.884140491485596

Token 36: ' permutations' (ID: 174595)
  Prédit: ' données'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' données' → logprob: -1.2022331953048706
    2. ' permutations' → logprob: -1.2022331953048706
    3. 'per' → logprob: -2.07723331451416
    4. ' éléments' → logprob: -2.20223331451416
    5. 'élé' → logprob: -2.82723331451416
    6. 'indices' → logprob: -4.45223331451416
    7. ' perm' → logprob: -4.70223331451416
    8. ' indices' → logprob: -4.70223331451416
    9. ' lignes' → logprob: -4.70223331451416
    10. ' opérations' → logprob: -5.20223331451416

Token 37: ' fourn' (ID: 101975)
  Prédit: ' permutations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' permutations' → logprob: -0.566644012928009
    2. 'per' → logprob: -1.3166439533233643
    3. '_per' → logprob: -2.8166439533233643
    4. ' permutation' → logprob: -4.191644191741943
    5. ' perm' → logprob: -4.316644191741943
    6. 's' → logprob: -4.316644191741943
    7. ',' → logprob: -4.691644191741943
    8. '[' → logprob: -5.066644191741943
    9. ' ' → logprob: -5.441644191741943
    10. '
' → logprob: -5.566644191741943

Token 38: 'ies' (ID: 566)
  Prédit: 'ies'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ies' → logprob: -0.0059914859011769295
    2. 'es' → logprob: -5.630991458892822
    3. 'ie' → logprob: -6.255991458892822
    4. 'ues' → logprob: -8.38099193572998
    5. 'e' → logprob: -9.38099193572998
    6. 'ées' → logprob: -9.75599193572998
    7. 'is' → logprob: -10.50599193572998
    8. '```' → logprob: -10.75599193572998
    9. '#' → logprob: -11.25599193572998
    10. 'ees' → logprob: -11.75599193572998

Token 39: ' en' (ID: 469)
  Prédit: '_per'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_per' → logprob: -0.9199433922767639
    2. 'per' → logprob: -1.7949433326721191
    3. ' permutations' → logprob: -2.044943332672119
    4. 's' → logprob: -2.294943332672119
    5. ',' → logprob: -2.919943332672119
    6. '[' → logprob: -3.294943332672119
    7. '[
' → logprob: -4.544943332672119
    8. '_perm' → logprob: -4.669943332672119
    9. '_p' → logprob: -4.794943332672119
    10. ' =' → logprob: -4.794943332672119

Token 40: ' listes' (ID: 179198)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.8054008483886719
    2. 'liste' → logprob: -1.3054008483886719
    3. ' liste' → logprob: -2.180400848388672
    4. ' listes' → logprob: -2.305400848388672
    5. ' list' → logprob: -3.555400848388672
    6. '```' → logprob: -4.430400848388672
    7. ' une' → logprob: -5.055400848388672
    8. 'lists' → logprob: -5.430400848388672
    9. 'une' → logprob: -5.805400848388672
    10. ' numpy' → logprob: -6.180400848388672

Token 41: ' d' (ID: 272)
  Prédit: 'per'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'per' → logprob: -0.24798528850078583
    2. '_per' → logprob: -2.247985363006592
    3. ' permutations' → logprob: -3.372985363006592
    4. 'perm' → logprob: -3.872985363006592
    5. '[' → logprob: -4.122985363006592
    6. 's' → logprob: -4.997985363006592
    7. '[
' → logprob: -5.497985363006592
    8. '\n' → logprob: -5.497985363006592
    9. '_list' → logprob: -5.872985363006592
    10. 'for' → logprob: -6.247985363006592

Token 42: ''' (ID: 6)
  Prédit: ''ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''ent' → logprob: -0.018481535837054253
    2. 'ent' → logprob: -4.643481731414795
    3. ''' → logprob: -5.643481731414795
    4. '’ent' → logprob: -6.268481731414795
    5. '_ent' → logprob: -6.518481731414795
    6. ''int' → logprob: -7.768481731414795
    7. ''in' → logprob: -8.143481254577637
    8. ''ex' → logprob: -8.393481254577637
    9. 'e' → logprob: -8.643481254577637
    10. ' ent' → logprob: -9.018481254577637

Token 43: 'indices' (ID: 30992)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.7354499697685242
    2. 'indices' → logprob: -0.7354499697685242
    3. 'int' → logprob: -3.485450029373169
    4. ''ent' → logprob: -5.73544979095459
    5. 'index' → logprob: -6.23544979095459
    6. 'ints' → logprob: -6.36044979095459
    7. 'inte' → logprob: -6.61044979095459
    8. 'indexes' → logprob: -6.73544979095459
    9. 'indice' → logprob: -7.73544979095459
    10. 'in' → logprob: -8.36044979095459

Token 44: ' base' (ID: 3611)
  Prédit: 'per'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'per' → logprob: -0.3052041530609131
    2. ' permutations' → logprob: -3.055204153060913
    3. '\n' → logprob: -3.180204153060913
    4. '_per' → logprob: -3.305204153060913
    5. 'perm' → logprob: -3.805204153060913
    6. 's' → logprob: -3.930204153060913
    7. 'indices' → logprob: -3.930204153060913
    8. 'for' → logprob: -4.055204391479492
    9. '
' → logprob: -4.305204391479492
    10. '[' → logprob: -4.555204391479492

Token 45: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3466323912143707
    2. ' ' → logprob: -1.5966323614120483
    3. 'd' → logprob: -2.846632480621338
    4. 'r' → logprob: -4.221632480621338
    5. 's' → logprob: -5.096632480621338
    6. '1' → logprob: -5.596632480621338
    7. 't' → logprob: -6.096632480621338
    8. 'é' → logprob: -6.221632480621338
    9. 'z' → logprob: -6.846632480621338
    10. 'e' → logprob: -7.221632480621338

Token 46: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.12525637447834015
    2. ' ' → logprob: -2.250256299972534
    3. '1' → logprob: -4.500256538391113
    4. 'z' → logprob: -7.750256538391113
    5. ' zéro' → logprob: -8.625256538391113
    6. '-' → logprob: -8.750256538391113
    7. 'e' → logprob: -8.750256538391113
    8. 'r' → logprob: -9.625256538391113
    9. 'é' → logprob: -9.875256538391113
    10. ' z' → logprob: -10.000256538391113

Token 47: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.6496886014938354
    2. '[' → logprob: -1.7746886014938354
    3. '\n' → logprob: -1.8996886014938354
    4. ',' → logprob: -2.399688720703125
    5. 's' → logprob: -2.899688720703125
    6. '_per' → logprob: -3.274688720703125
    7. '[
' → logprob: -3.524688720703125
    8. '  
' → logprob: -3.524688720703125
    9. 'per' → logprob: -3.524688720703125
    10. ' ' → logprob: -3.774688720703125

Token 48: 'prem' (ID: 76294)
  Prédit: 'per'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'per' → logprob: -0.20368419587612152
    2. ' permutations' → logprob: -2.078684091567993
    3. 'perm' → logprob: -3.828684091567993
    4. ' perm' → logprob: -5.328684329986572
    5. ' permutation' → logprob: -5.328684329986572
    6. 's' → logprob: -5.578684329986572
    7. 'p' → logprob: -5.578684329986572
    8. '[
' → logprob: -5.828684329986572
    9. '
' → logprob: -5.828684329986572
    10. 'indices' → logprob: -5.953684329986572

Token 49: 'iere' (ID: 19068)
  Prédit: 'ière'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ière' → logprob: -1.046059012413025
    2. 'iere' → logprob: -1.046059012413025
    3. 'ier' → logprob: -2.2960591316223145
    4. 'utation' → logprob: -2.2960591316223145
    5. 'iers' → logprob: -3.0460591316223145
    6. 'utations' → logprob: -4.1710591316223145
    7. 'ières' → logprob: -4.5460591316223145
    8. 'ieres' → logprob: -4.7960591316223145
    9. 'ut' → logprob: -5.2960591316223145
    10. 'i' → logprob: -5.5460591316223145

Token 50: '_per' (ID: 10938)
  Prédit: '_per'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_per' → logprob: -0.000400521676056087
    2. '_perm' → logprob: -8.25040054321289
    3. '_' → logprob: -9.25040054321289
    4. '_p' → logprob: -11.00040054321289
    5. 'e' → logprob: -11.62540054321289
    6. 's' → logprob: -12.00040054321289
    7. 'per' → logprob: -13.00040054321289
    8. '_l' → logprob: -13.37540054321289
    9. 'Permutation' → logprob: -13.50040054321289
    10. '__' → logprob: -13.62540054321289

Token 51: 'mutation' (ID: 92896)
  Prédit: 'mutation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mutation' → logprob: -0.001167364651337266
    2. 'm' → logprob: -7.626167297363281
    3. 'mut' → logprob: -7.626167297363281
    4. 'mu' → logprob: -9.126167297363281
    5. 'r' → logprob: -9.876167297363281
    6. 'mute' → logprob: -11.626167297363281
    7. '_mut' → logprob: -11.876167297363281
    8. 'rm' → logprob: -12.501167297363281
    9. '_' → logprob: -13.126167297363281
    10. 'mission' → logprob: -13.251167297363281

Token 52: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.038863979279994965
    2. '=' → logprob: -3.2888638973236084
    3. '_' → logprob: -7.4138641357421875
    4. 's' → logprob: -8.788864135742188
    5. ',' → logprob: -10.663864135742188
    6. ' ' → logprob: -11.913864135742188
    7. '_s' → logprob: -12.288864135742188
    8. '=[]' → logprob: -12.413864135742188
    9. '[:]' → logprob: -12.538864135742188
    10. '_=' → logprob: -12.663864135742188

Token 53: ' [' (ID: 723)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.2520217299461365
    2. ' list' → logprob: -1.5020217895507812
    3. '[list' → logprob: -10.127021789550781
    4. '[' → logprob: -10.252021789550781
    5. ' [' → logprob: -11.752021789550781
    6. '[]' → logprob: -12.502021789550781
    7. 'liste' → logprob: -13.002021789550781
    8. ' liste' → logprob: -13.752021789550781
    9. '=list' → logprob: -14.252021789550781
    10. 'input' → logprob: -15.002021789550781

Token 54: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.12834595143795013
    2. 'i' → logprob: -2.6283459663391113
    3. ' int' → logprob: -3.3783459663391113
    4. ' i' → logprob: -4.378345966339111
    5. 'x' → logprob: -7.378345966339111
    6. '0' → logprob: -7.503345966339111
    7. ' x' → logprob: -8.878345489501953
    8. ' ' → logprob: -9.128345489501953
    9. 'index' → logprob: -10.128345489501953
    10. 'k' → logprob: -10.878345489501953

Token 55: '(val' (ID: 17391)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.3936782777309418
    2. '(' → logprob: -1.2686783075332642
    3. '(input' → logprob: -3.2686781883239746
    4. '(i' → logprob: -5.518678188323975
    5. '(s' → logprob: -7.018678188323975
    6. '(token' → logprob: -7.393678188323975
    7. '(a' → logprob: -8.518678665161133
    8. '(
' → logprob: -9.268678665161133
    9. '(n' → logprob: -9.893678665161133
    10. '(_)' → logprob: -10.518678665161133

Token 56: 'eur' (ID: 8671)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4952952265739441
    2. 'eur' → logprob: -0.9952952265739441
    3. 'e' → logprob: -4.49529504776001
    4. 'ur' → logprob: -5.74529504776001
    5. 'er' → logprob: -6.62029504776001
    6. 'or' → logprob: -6.87029504776001
    7. ')-' → logprob: -7.12029504776001
    8. '(e' → logprob: -7.24529504776001
    9. '()' → logprob: -7.49529504776001
    10. 'es' → logprob: -7.99529504776001

Token 57: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1982191950082779
    2. '(' → logprob: -1.9482191801071167
    3. '-' → logprob: -4.073219299316406
    4. '(input' → logprob: -4.448219299316406
    5. '(x' → logprob: -6.073219299316406
    6. '()' → logprob: -6.073219299316406
    7. ')-' → logprob: -6.323219299316406
    8. ' -' → logprob: -7.698219299316406
    9. '(token' → logprob: -7.948219299316406
    10. '-)' → logprob: -8.073219299316406

Token 58: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.12927541136741638
    2. ')' → logprob: -2.879275321960449
    3. '()' → logprob: -3.754275321960449
    4. '()-' → logprob: -3.754275321960449
    5. ' -' → logprob: -4.379275321960449
    6. ')-' → logprob: -6.004275321960449
    7. '(' → logprob: -6.129275321960449
    8. ' for' → logprob: -8.12927532196045
    9. '(input' → logprob: -8.25427532196045
    10. 'input' → logprob: -8.75427532196045

Token 59: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3869137763977051
    2. ' ' → logprob: -1.136913776397705
    3. '<|end|>' → logprob: -10.136913299560547
    4. ' ' → logprob: -13.386913299560547
    5. '<|end|>' → logprob: -14.386913299560547
    6. ')' → logprob: -15.011913299560547
    7. '```' → logprob: -16.199413299560547
    8. '  ' → logprob: -16.386913299560547
    9. '   ' → logprob: -16.886913299560547
    10. 's' → logprob: -17.074413299560547

Token 60: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.5577775128767826e-06
    2. ' ' → logprob: -12.125005722045898
    3. '   ' → logprob: -18.6875057220459
    4. '<|end|>' → logprob: -18.8125057220459
    5. '```' → logprob: -19.0625057220459
    6. '১' → logprob: -19.6875057220459
    7. 'for' → logprob: -19.6875057220459
    8. '  ' → logprob: -19.8750057220459
    9. '`' → logprob: -20.2500057220459
    10. ')' → logprob: -20.5000057220459

Token 61: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8034551739692688
    2. ' for' → logprob: -0.9284551739692688
    3. 'for' → logprob: -2.053455114364624
    4. '()' → logprob: -4.303455352783203
    5. ']' → logprob: -4.803455352783203
    6. ',' → logprob: -5.303455352783203
    7. '(' → logprob: -7.428455352783203
    8. '<|end|>' → logprob: -8.303455352783203
    9. '	for' → logprob: -8.428455352783203
    10. '()]' → logprob: -8.803455352783203

Token 62: ' valeur' (ID: 41664)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.0006757391383871436
    2. 'input' → logprob: -7.750675678253174
    3. ' range' → logprob: -8.375676155090332
    4. '_' → logprob: -12.750676155090332
    5. ' ' → logprob: -12.750676155090332
    6. ' _' → logprob: -13.000676155090332
    7. '_input' → logprob: -13.875676155090332
    8. '	input' → logprob: -13.875676155090332
    9. 'range' → logprob: -14.000676155090332
    10. ' ' → logprob: -14.250676155090332

Token 63: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.034030839800834656
    2. 'in' → logprob: -3.4090309143066406
    3. '<|end|>' → logprob: -8.65903091430664
    4. 'input' → logprob: -9.03403091430664
    5. ' input' → logprob: -10.53403091430664
    6. '<|end|>' → logprob: -11.65903091430664
    7. ')' → logprob: -11.78403091430664
    8. ' ' → logprob: -11.90903091430664
    9. '(input' → logprob: -12.03403091430664
    10. ',input' → logprob: -12.03403091430664

Token 64: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.033649615943431854
    2. ' input' → logprob: -3.4086496829986572
    3. 'range' → logprob: -12.908649444580078
    4. '(input' → logprob: -14.158649444580078
    5. '=input' → logprob: -15.783649444580078
    6. '	input' → logprob: -16.408649444580078
    7. ' range' → logprob: -16.533649444580078
    8. '<input' → logprob: -16.658649444580078
    9. ',input' → logprob: -16.783649444580078
    10. ' ' → logprob: -17.408649444580078

Token 65: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0007104054093360901
    2. '()' → logprob: -7.250710487365723
    3. ' ().' → logprob: -15.375710487365723
    4. '(' → logprob: -16.000709533691406
    5. '()]' → logprob: -17.250709533691406
    6. '()].' → logprob: -17.250709533691406
    7. '()
' → logprob: -17.625709533691406
    8. '())' → logprob: -18.375709533691406
    9. '()

' → logprob: -19.125709533691406
    10. '()`' → logprob: -19.625709533691406

Token 66: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0003420183784328401
    2. 'strip' → logprob: -8.00034236907959
    3. ' split' → logprob: -12.12534236907959
    4. 'rstrip' → logprob: -14.00034236907959
    5. 'spl' → logprob: -15.75034236907959
    6. '(split' → logprob: -16.500341415405273
    7. '.split' → logprob: -18.125341415405273
    8. ')' → logprob: -19.750341415405273
    9. 'plit' → logprob: -19.750341415405273
    10. ' ' → logprob: -19.875341415405273

Token 67: '()]
' (ID: 67155)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -9.317247167928144e-05
    2. '()' → logprob: -9.875093460083008
    3. '())' → logprob: -10.750093460083008
    4. ']' → logprob: -11.375093460083008
    5. '(' → logprob: -11.750093460083008
    6. ')]' → logprob: -15.000093460083008
    7. '()][' → logprob: -16.000093460083008
    8. '()]
' → logprob: -16.125093460083008
    9. ']()' → logprob: -16.125093460083008
    10. '(),' → logprob: -16.625093460083008

Token 68: 'de' (ID: 613)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9970982074737549
    2. 'prem' → logprob: -1.1220982074737549
    3. 'de' → logprob: -1.6220982074737549
    4. '  
' → logprob: -2.997098207473755
    5. 'second' → logprob: -4.247097969055176
    6. ' 
' → logprob: -4.372097969055176
    7. ' seconde' → logprob: -4.747097969055176
    8. '<|end|>' → logprob: -5.372097969055176
    9. '[' → logprob: -5.872097969055176
    10. 'se' → logprob: -5.997097969055176

Token 69: 'ux' (ID: 1778)
  Prédit: 'ux'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ux' → logprob: -0.0003403495065867901
    2. 'uxe' → logprob: -8.625340461730957
    3. '#' → logprob: -10.125340461730957
    4. 'uz' → logprob: -10.625340461730957
    5. 'eux' → logprob: -11.125340461730957
    6. 'de' → logprob: -11.750340461730957
    7. 'usi' → logprob: -11.750340461730957
    8. 'u' → logprob: -11.875340461730957
    9. 'ug' → logprob: -11.875340461730957
    10. 'xi' → logprob: -12.000340461730957

Token 70: 'ieme' (ID: 75610)
  Prédit: 'ieme'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ieme' → logprob: -0.03235483169555664
    2. 'ième' → logprob: -3.7823548316955566
    3. 'i' → logprob: -5.782354831695557
    4. 'ie' → logprob: -5.782354831695557
    5. 'ime' → logprob: -6.157354831695557
    6. 'e' → logprob: -7.782354831695557
    7. '_per' → logprob: -8.907354354858398
    8. 'iem' → logprob: -9.157354354858398
    9. 'eme' → logprob: -10.657354354858398
    10. 'iere' → logprob: -10.782354354858398

Token 71: '_per' (ID: 10938)
  Prédit: '_per'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_per' → logprob: -4.632542913896032e-05
    2. '_' → logprob: -10.250046730041504
    3. '_p' → logprob: -12.000046730041504
    4. '_perm' → logprob: -14.125046730041504
    5. '_val' → logprob: -14.500046730041504
    6. '_s' → logprob: -14.500046730041504
    7. 'per' → logprob: -14.625046730041504
    8. ' _' → logprob: -15.000046730041504
    9. 's' → logprob: -15.000046730041504
    10. '_permalink' → logprob: -16.125045776367188

Token 72: 'mutation' (ID: 92896)
  Prédit: 'mutation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mutation' → logprob: -0.2044273167848587
    2. 'utation' → logprob: -1.7044273614883423
    3. 'mut' → logprob: -6.454427242279053
    4. 'm' → logprob: -7.454427242279053
    5. 'ut' → logprob: -7.704427242279053
    6. 'ermut' → logprob: -9.204427719116211
    7. 'r' → logprob: -9.954427719116211
    8. 'um' → logprob: -10.204427719116211
    9. 'rm' → logprob: -10.579427719116211
    10. 'mm' → logprob: -10.579427719116211

Token 73: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.026328863576054573
    2. '=' → logprob: -3.6513288021087646
    3. '_' → logprob: -10.776329040527344
    4. ' ' → logprob: -13.526329040527344
    5. '=[]' → logprob: -13.901329040527344
    6. 's' → logprob: -14.026329040527344
    7. ')' → logprob: -14.151329040527344
    8. ' ' → logprob: -14.401329040527344
    9. ']' → logprob: -14.526329040527344
    10. ',' → logprob: -14.526329040527344

Token 74: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.1194119080901146
    2. '[int' → logprob: -2.3694119453430176
    3. '[' → logprob: -3.9944119453430176
    4. '[val' → logprob: -7.744411945343018
    5. ' ' → logprob: -9.24441146850586
    6. ' ' → logprob: -10.49441146850586
    7. '[input' → logprob: -10.86941146850586
    8. '[Int' → logprob: -11.61941146850586
    9. '[ind' → logprob: -11.99441146850586
    10. '[in' → logprob: -12.86941146850586

Token 75: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -4.961759259458631e-06
    2. ' int' → logprob: -12.250004768371582
    3. '(int' → logprob: -17.1250057220459
    4. '   ' → logprob: -17.5000057220459
    5. 'val' → logprob: -18.6250057220459
    6. '[int' → logprob: -18.8750057220459
    7. '<int' → logprob: -19.0000057220459
    8. ' ' → logprob: -19.1250057220459
    9. '  ' → logprob: -20.1250057220459
    10. ']int' → logprob: -20.8750057220459

Token 76: '(val' (ID: 17391)
  Prédit: '(val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(val' → logprob: -3.0590548703912646e-05
    2. 'val' → logprob: -11.125030517578125
    3. '(s' → logprob: -12.125030517578125
    4. '(v' → logprob: -13.125030517578125
    5. '(' → logprob: -13.250030517578125
    6. '(x' → logprob: -13.500030517578125
    7. ',val' → logprob: -13.750030517578125
    8. '[val' → logprob: -13.875030517578125
    9. ')' → logprob: -14.125030517578125
    10. ' (' → logprob: -14.750030517578125

Token 77: 'eur' (ID: 8671)
  Prédit: 'eur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eur' → logprob: -0.39367493987083435
    2. 'al' → logprob: -2.018674850463867
    3. 'alue' → logprob: -2.518674850463867
    4. 'er' → logprob: -2.643674850463867
    5. 'ale' → logprob: -4.393674850463867
    6. 'val' → logprob: -5.143674850463867
    7. 'e' → logprob: -5.393674850463867
    8. 'uer' → logprob: -5.393674850463867
    9. 'a' → logprob: -5.643674850463867
    10. 'reur' → logprob: -6.393674850463867

Token 78: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.7697225252486533e-06
    2. ' )' → logprob: -12.875003814697266
    3. ']' → logprob: -15.250003814697266
    4. '')' → logprob: -15.750003814697266
    5. '`)' → logprob: -16.000003814697266
    6. 'val' → logprob: -16.500003814697266
    7. ' ' → logprob: -16.750003814697266
    8. ')-' → logprob: -16.750003814697266
    9. '-' → logprob: -16.750003814697266
    10. '[' → logprob: -16.875003814697266

Token 79: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08636491745710373
    2. ' ' → logprob: -2.836364984512329
    3. '-' → logprob: -4.71136474609375
    4. ']' → logprob: -4.96136474609375
    5. ' -' → logprob: -5.58636474609375
    6. ' )' → logprob: -5.83636474609375
    7. '[' → logprob: -7.58636474609375
    8. '(' → logprob: -7.83636474609375
    9. ' ]' → logprob: -8.46136474609375
    10. '()' → logprob: -10.08636474609375

Token 80: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.281171053647995
    2. '1' → logprob: -1.4061710834503174
    3. '<|end|>' → logprob: -11.281170845031738
    4. ' ' → logprob: -12.406170845031738
    5. ')' → logprob: -13.906170845031738
    6. '0' → logprob: -14.531170845031738
    7. ' )' → logprob: -14.843670845031738
    8. '2' → logprob: -15.031170845031738
    9. '<|end|>' → logprob: -15.156170845031738
    10. '  ' → logprob: -15.156170845031738

Token 81: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0028053484857082367
    2. ' ' → logprob: -5.877805233001709
    3. '0' → logprob: -15.377805709838867
    4. '<|end|>' → logprob: -15.377805709838867
    5. '2' → logprob: -16.752805709838867
    6. '-' → logprob: -18.065305709838867
    7. '<|end|>' → logprob: -18.440305709838867
    8. '```' → logprob: -18.752805709838867
    9. ' ' → logprob: -18.815305709838867
    10. ')' → logprob: -18.877805709838867

Token 82: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.021940957754850388
    2. 'for' → logprob: -3.8969409465789795
    3. ')' → logprob: -7.646941184997559
    4. ']' → logprob: -8.021941184997559
    5. '(input' → logprob: -8.646941184997559
    6. '[' → logprob: -9.646941184997559
    7. ' ]' → logprob: -9.771941184997559
    8. '()' → logprob: -9.771941184997559
    9. ' pour' → logprob: -10.021941184997559
    10. '[input' → logprob: -10.021941184997559

Token 83: ' valeur' (ID: 41664)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.016641266644001007
    2. 'input' → logprob: -4.891641139984131
    3. 'val' → logprob: -5.516641139984131
    4. ' val' → logprob: -5.641641139984131
    5. ' ' → logprob: -7.016641139984131
    6. ' valeur' → logprob: -7.641641139984131
    7. ' ' → logprob: -11.141641616821289
    8. '_' → logprob: -12.016641616821289
    9. 'v' → logprob: -12.141641616821289
    10. '(input' → logprob: -12.641641616821289

Token 84: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.014051969163119793
    2. 'in' → logprob: -4.389051914215088
    3. 's' → logprob: -7.639051914215088
    4. ' ' → logprob: -8.014052391052246
    5. '(' → logprob: -8.514052391052246
    6. ')' → logprob: -8.889052391052246
    7. 'val' → logprob: -9.514052391052246
    8. '(input' → logprob: -9.764052391052246
    9. 'import' → logprob: -9.764052391052246
    10. ' (' → logprob: -10.514052391052246

Token 85: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.5759629607200623
    2. 'input' → logprob: -0.8259629607200623
    3. '(input' → logprob: -11.075963020324707
    4. '<input' → logprob: -13.200963020324707
    5. 's' → logprob: -13.825963020324707
    6. ' ' → logprob: -13.950963020324707
    7. '=input' → logprob: -14.075963020324707
    8. '[input' → logprob: -14.200963020324707
    9. '_input' → logprob: -14.575963020324707
    10. ' ' → logprob: -14.825963020324707

Token 86: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0015512866666540504
    2. '()' → logprob: -6.501551151275635
    3. '().'' → logprob: -11.001551628112793
    4. '()].' → logprob: -11.001551628112793
    5. '(' → logprob: -11.751551628112793
    6. ' ().' → logprob: -13.126551628112793
    7. '().__' → logprob: -13.501551628112793
    8. '.' → logprob: -14.126551628112793
    9. '>().' → logprob: -14.126551628112793
    10. '()>' → logprob: -14.126551628112793

Token 87: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -7.896309739408025e-07
    2. ' split' → logprob: -14.875000953674316
    3. 'spl' → logprob: -14.875000953674316
    4. '(split' → logprob: -17.0
    5. 's' → logprob: -18.0
    6. 'strip' → logprob: -18.5
    7. '.split' → logprob: -18.5
    8. 'read' → logprob: -19.125
    9. 'plit' → logprob: -19.625
    10. ')' → logprob: -19.875

Token 88: '()' (ID: 416)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.005641378462314606
    2. '()' → logprob: -5.255641460418701
    3. '())' → logprob: -8.755640983581543
    4. ')]' → logprob: -9.005640983581543
    5. ']' → logprob: -9.255640983581543
    6. ']()' → logprob: -10.755640983581543
    7. '()]
' → logprob: -12.255640983581543
    8. '()
' → logprob: -13.130640983581543
    9. '(' → logprob: -14.005640983581543
    10. ')' → logprob: -14.380640983581543

Token 89: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005062737036496401
    2. ']' → logprob: -5.880062580108643
    3. '])' → logprob: -6.505062580108643
    4. ')]' → logprob: -7.255062580108643
    5. ' )' → logprob: -10.6300630569458
    6. ')])' → logprob: -11.8800630569458
    7. '))' → logprob: -12.0050630569458
    8. '）' → logprob: -12.1300630569458
    9. ')
' → logprob: -12.3800630569458
    10. '[' → logprob: -13.6300630569458

Token 90: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.11252377182245255
    2. '
' → logprob: -2.4875237941741943
    3. 'def' → logprob: -4.737523555755615
    4. '\n' → logprob: -5.612523555755615
    5. '\' → logprob: -5.862523555755615
    6. 'n' → logprob: -5.987523555755615
    7. '```' → logprob: -6.487523555755615
    8. '' → logprob: -6.612523555755615
    9. '

' → logprob: -7.112523555755615
    10. 'for' → logprob: -7.612523555755615

Token 91: ' Fonction' (ID: 189149)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.457504004240036
    2. 'result' → logprob: -1.2075040340423584
    3. 'def' → logprob: -3.3325040340423584
    4. ' result' → logprob: -4.332503795623779
    5. ' #' → logprob: -4.957503795623779
    6. 'per' → logprob: -5.457503795623779
    7. 'res' → logprob: -5.957503795623779
    8. 'p' → logprob: -7.332503795623779
    9. 'composition' → logprob: -7.332503795623779
    10. 'rés' → logprob: -7.707503795623779

Token 92: ' pour' (ID: 1930)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -1.0545672178268433
    2. ' de' → logprob: -1.1795672178268433
    3. 'def' → logprob: -1.3045672178268433
    4. ' d' → logprob: -3.304567337036133
    5. ' ' → logprob: -4.179567337036133
    6. '_' → logprob: -4.304567337036133
    7. '_de' → logprob: -6.054567337036133
    8. 'd' → logprob: -6.429567337036133
    9. 'de' → logprob: -6.929567337036133
    10. '_def' → logprob: -7.679567337036133

Token 93: ' appliquer' (ID: 172872)
  Prédit: ' composer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' composer' → logprob: -0.4454669952392578
    2. 'composer' → logprob: -1.5704669952392578
    3. ' calcul' → logprob: -2.695466995239258
    4. ' appliquer' → logprob: -3.320466995239258
    5. 'compose' → logprob: -3.820466995239258
    6. ' compose' → logprob: -5.195466995239258
    7. ' effectuer' → logprob: -5.820466995239258
    8. 'ap' → logprob: -5.820466995239258
    9. ' composition' → logprob: -5.820466995239258
    10. 'calcul' → logprob: -5.945466995239258

Token 94: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.019082868471741676
    2. ' la' → logprob: -4.019083023071289
    3. ' a' → logprob: -8.019083023071289
    4. ' ' → logprob: -8.394083023071289
    5. 'une' → logprob: -8.394083023071289
    6. ''une' → logprob: -10.519083023071289
    7. 'a' → logprob: -10.894083023071289
    8. ' deux' → logprob: -11.019083023071289
    9. '_' → logprob: -11.144083023071289
    10. ' una' → logprob: -11.269083023071289

Token 95: ' permutation' (ID: 135200)
  Prédit: ' permutation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' permutation' → logprob: -0.022018970921635628
    2. 'per' → logprob: -4.397018909454346
    3. ' perm' → logprob: -4.897018909454346
    4. ' fonction' → logprob: -7.022018909454346
    5. ' ' → logprob: -8.022019386291504
    6. '_per' → logprob: -8.397019386291504
    7. 'fonction' → logprob: -8.397019386291504
    8. '_' → logprob: -10.022019386291504
    9. 'perm' → logprob: -10.022019386291504
    10. ' per' → logprob: -10.272019386291504

Token 96: ' '' (ID: 461)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.18995320796966553
    2. '(' → logprob: -2.439953327178955
    3. ' def' → logprob: -3.689953327178955
    4. ' de' → logprob: -4.064953327178955
    5. ':' → logprob: -4.689953327178955
    6. '(p' → logprob: -4.939953327178955
    7. '_' → logprob: -4.939953327178955
    8. '(
' → logprob: -5.689953327178955
    9. ' (' → logprob: -5.689953327178955
    10. '(def' → logprob: -6.314953327178955

Token 97: 'ordre' (ID: 59831)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.5682369470596313
    2. 'sur' → logprob: -1.5682369470596313
    3. ' à' → logprob: -1.9432369470596313
    4. ' p' → logprob: -2.318236827850342
    5. ' sur' → logprob: -2.318236827850342
    6. 'perm' → logprob: -2.318236827850342
    7. ' perm' → logprob: -2.943236827850342
    8. 'per' → logprob: -3.193236827850342
    9. 'à' → logprob: -3.818236827850342
    10. ' donnée' → logprob: -4.693236827850342

Token 98: ''' (ID: 6)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.039881475269794464
    2. ''' → logprob: -4.164881706237793
    3. '_per' → logprob: -5.039881706237793
    4. '',' → logprob: -5.164881706237793
    5. ','' → logprob: -6.414881706237793
    6. '_sur' → logprob: -6.664881706237793
    7. '_source' → logprob: -6.914881706237793
    8. '_de' → logprob: -7.164881706237793
    9. '':' → logprob: -7.289881706237793
    10. '1' → logprob: -7.289881706237793

Token 99: ' sur' (ID: 1512)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.056772876530885696
    2. 'def' → logprob: -3.5567729473114014
    3. ' ' → logprob: -4.931772708892822
    4. ':' → logprob: -5.306772708892822
    5. '_' → logprob: -5.431772708892822
    6. ' (' → logprob: -5.681772708892822
    7. ',' → logprob: -6.431772708892822
    8. '(
' → logprob: -6.806772708892822
    9. 's' → logprob: -7.431772708892822
    10. ' def' → logprob: -7.431772708892822

Token 100: ' la' (ID: 557)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.4757438004016876
    2. 'une' → logprob: -0.9757437705993652
    3. ' un' → logprob: -7.350743770599365
    4. ''une' → logprob: -7.600743770599365
    5. ' la' → logprob: -8.725744247436523
    6. 'la' → logprob: -9.225744247436523
    7. 'un' → logprob: -9.350744247436523
    8. ' permutation' → logprob: -9.725744247436523
    9. ' liste' → logprob: -11.225744247436523
    10. 'l' → logprob: -11.350744247436523

Token 101: ' liste' (ID: 31719)
  Prédit: 'per'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'per' → logprob: -0.7829328775405884
    2. 'liste' → logprob: -1.0329328775405884
    3. ' liste' → logprob: -2.032932758331299
    4. ' permutation' → logprob: -3.657932758331299
    5. ' perm' → logprob: -4.282932758331299
    6. 'perm' → logprob: -5.407932758331299
    7. 'position' → logprob: -6.032932758331299
    8. 'list' → logprob: -6.532932758331299
    9. 'une' → logprob: -6.657932758331299
    10. 'prem' → logprob: -7.282932758331299

Token 102: ' '' (ID: 461)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -1.5418131351470947
    2. ' perm' → logprob: -1.7918131351470947
    3. ' permutation' → logprob: -1.9168131351470947
    4. ' cible' → logprob: -2.6668131351470947
    5. ' p' → logprob: -2.7918131351470947
    6. ' ' → logprob: -3.0418131351470947
    7. ' def' → logprob: -3.2918131351470947
    8. ' lst' → logprob: -3.4168131351470947
    9. ' `' → logprob: -4.041812896728516
    10. ' data' → logprob: -4.041812896728516

Token 103: 'sequence' (ID: 47173)
  Prédit: 'lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lst' → logprob: -0.6693666577339172
    2. 'per' → logprob: -2.1693665981292725
    3. 'liste' → logprob: -2.2943665981292725
    4. ' lst' → logprob: -2.5443665981292725
    5. 'l' → logprob: -3.0443665981292725
    6. ' perm' → logprob: -3.6693665981292725
    7. 'sequence' → logprob: -3.7943665981292725
    8. 'perm' → logprob: -4.044366836547852
    9. 'elements' → logprob: -4.669366836547852
    10. ' sequence' → logprob: -4.669366836547852

Token 104: ''
' (ID: 2207)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7001491189002991
    2. '):' → logprob: -0.7001491189002991
    3. '_' → logprob: -6.575149059295654
    4. ' ):' → logprob: -7.075149059295654
    5. 'def' → logprob: -7.325149059295654
    6. ',' → logprob: -7.325149059295654
    7. ''):' → logprob: -7.575149059295654
    8. ''' → logprob: -7.700149059295654
    9. '')' → logprob: -7.825149059295654
    10. ' )' → logprob: -7.950149059295654

Token 105: 'def' (ID: 1314)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.14660102128982544
    2. 'def' → logprob: -2.0216009616851807
    3. ' de' → logprob: -6.39660120010376
    4. 'de' → logprob: -7.02160120010376
    5. ' d' → logprob: -7.39660120010376
    6. '
' → logprob: -8.646600723266602
    7. ' 
' → logprob: -8.646600723266602
    8. '\' → logprob: -8.771600723266602
    9. ' def' → logprob: -9.646600723266602
    10. ':def' → logprob: -10.521600723266602

Token 106: ' appliquer' (ID: 172872)
  Prédit: ' appliquer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' appliquer' → logprob: -0.004013934172689915
    2. ' ' → logprob: -5.754014015197754
    3. ' apply' → logprob: -8.129014015197754
    4. ' applique' → logprob: -8.879014015197754
    5. 'ap' → logprob: -9.004014015197754
    6. ' ' → logprob: -9.879014015197754
    7. '_ap' → logprob: -10.004014015197754
    8. ' aplicar' → logprob: -10.254014015197754
    9. ' appl' → logprob: -10.379014015197754
    10. '_' → logprob: -10.629014015197754

Token 107: '_per' (ID: 10938)
  Prédit: '_per'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_per' → logprob: -0.2626369893550873
    2. '_' → logprob: -1.5126370191574097
    3. '(' → logprob: -4.637637138366699
    4. '(per' → logprob: -8.1376371383667
    5. '_(' → logprob: -8.6376371383667
    6. '_perm' → logprob: -8.7626371383667
    7. '_p' → logprob: -8.8876371383667
    8. ' (' → logprob: -9.8876371383667
    9. '_la' → logprob: -10.5126371383667
    10. '_l' → logprob: -11.0126371383667

Token 108: 'mutation' (ID: 92896)
  Prédit: 'mutation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mutation' → logprob: -0.008648133836686611
    2. 'm' → logprob: -5.258647918701172
    3. 'mut' → logprob: -5.883647918701172
    4. 'mu' → logprob: -7.758647918701172
    5. 'mute' → logprob: -8.758647918701172
    6. 'mission' → logprob: -11.258647918701172
    7. '_mut' → logprob: -11.883647918701172
    8. 'mun' → logprob: -12.008647918701172
    9. ' mutation' → logprob: -12.758647918701172
    10. 'Mutation' → logprob: -13.008647918701172

Token 109: '(sequence' (ID: 129991)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3504965603351593
    2. '(sequence' → logprob: -1.225496530532837
    3. ' (' → logprob: -6.850496768951416
    4. '(seq' → logprob: -8.475496292114258
    5. '(l' → logprob: -8.600496292114258
    6. '_sequence' → logprob: -9.100496292114258
    7. '(ord' → logprob: -9.225496292114258
    8. '(s' → logprob: -9.475496292114258
    9. '(per' → logprob: -9.725496292114258
    10. '(p' → logprob: -10.100496292114258

Token 110: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.4121114822482923e-06
    2. ' ,' → logprob: -12.750003814697266
    3. '):' → logprob: -16.625003814697266
    4. ' ' → logprob: -16.875003814697266
    5. ':' → logprob: -17.250003814697266
    6. ',p' → logprob: -17.875003814697266
    7. ',s' → logprob: -18.000003814697266
    8. ',n' → logprob: -18.000003814697266
    9. '،' → logprob: -18.125003814697266
    10. ',index' → logprob: -18.250003814697266

Token 111: ' ordre' (ID: 103061)
  Prédit: ' ordre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ordre' → logprob: -0.1804770976305008
    2. 'ordre' → logprob: -1.8054771423339844
    3. ' permutation' → logprob: -7.930477142333984
    4. ' ' → logprob: -8.305477142333984
    5. 'per' → logprob: -10.680477142333984
    6. ' perm' → logprob: -10.805477142333984
    7. ''ordre' → logprob: -11.180477142333984
    8. 'orde' → logprob: -11.430477142333984
    9. ' order' → logprob: -12.305477142333984
    10. 'order' → logprob: -12.305477142333984

Token 112: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.007135174237191677
    2. ')' → logprob: -5.007135391235352
    3. '):
' → logprob: -8.757135391235352
    4. ',' → logprob: -8.882135391235352
    5. ' ):' → logprob: -9.757135391235352
    6. ':' → logprob: -10.507135391235352
    7. '):
' → logprob: -12.007135391235352
    8. ' ' → logprob: -12.507135391235352
    9. '[' → logprob: -12.632135391235352
    10. '_' → logprob: -12.944635391235352

Token 113: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.553986132144928
    2. ' ' → logprob: -1.9289860725402832
    3. '
' → logprob: -2.178986072540283
    4. ':' → logprob: -2.928986072540283
    5. ' 
' → logprob: -3.303986072540283
    6. ' return' → logprob: -3.553986072540283
    7. ')' → logprob: -4.803986072540283
    8. '    
' → logprob: -4.803986072540283
    9. '):' → logprob: -5.303986072540283
    10. '  
' → logprob: -5.553986072540283

Token 114: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.6823158264160156
    2. '   ' → logprob: -1.0573158264160156
    3. ' 
' → logprob: -2.8073158264160156
    4. 'return' (adapté à ' return') → logprob: -3.6823158264160156
    5. ' ' → logprob: -3.9323158264160156
    6. 'n' → logprob: -4.182315826416016
    7. '    
' → logprob: -4.932315826416016
    8. '\n' → logprob: -5.682315826416016
    9. ' sequence' → logprob: -5.932315826416016
    10. 'r' → logprob: -6.182315826416016

Token 115: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0012689243303611875
    2. ' [' → logprob: -7.3762688636779785
    3. '[int' → logprob: -9.376269340515137
    4. '[element' → logprob: -9.501269340515137
    5. '[val' → logprob: -9.876269340515137
    6. '[list' → logprob: -10.001269340515137
    7. '[len' → logprob: -10.251269340515137
    8. '[ind' → logprob: -10.251269340515137
    9. '[p' → logprob: -10.376269340515137
    10. '[type' → logprob: -10.501269340515137

Token 116: 'sequence' (ID: 47173)
  Prédit: 'sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sequence' → logprob: -5.836499985889532e-05
    2. ' sequence' → logprob: -9.7500581741333
    3. '(sequence' → logprob: -18.375059127807617
    4. '.sequence' → logprob: -20.625059127807617
    5. 'quence' → logprob: -21.750059127807617
    6. 'Sequence' → logprob: -21.750059127807617
    7. '_sequence' → logprob: -22.500059127807617
    8. 'sequ' → logprob: -23.000059127807617
    9. '   ' → logprob: -23.125059127807617
    10. 'seq' → logprob: -24.375059127807617

Token 117: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.002312857424840331
    2. '[ind' → logprob: -6.627312660217285
    3. '[o' → logprob: -7.502312660217285
    4. '[i' → logprob: -8.127312660217285
    5. '[idx' → logprob: -10.127312660217285
    6. '[x' → logprob: -10.127312660217285
    7. '[val' → logprob: -10.377312660217285
    8. '[index' → logprob: -11.877312660217285
    9. '[pos' → logprob: -12.127312660217285
    10. '[item' → logprob: -12.377312660217285

Token 118: 'ordre' (ID: 59831)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.43875160813331604
    2. 'ordre' → logprob: -1.5637515783309937
    3. 'indice' → logprob: -2.063751697540283
    4. 'index' → logprob: -4.688751697540283
    5. 'idx' → logprob: -5.063751697540283
    6. 'pos' → logprob: -6.313751697540283
    7. 'position' → logprob: -7.188751697540283
    8. 'o' → logprob: -8.563751220703125
    9. 'ind' → logprob: -9.063751220703125
    10. 'ord' → logprob: -9.313751220703125

Token 119: '[ind' (ID: 68064)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.001358209759928286
    2. 'i' → logprob: -6.6263580322265625
    3. ']' → logprob: -11.626358032226562
    4. '_i' → logprob: -11.876358032226562
    5. '[' → logprob: -12.126358032226562
    6. '[index' → logprob: -12.876358032226562
    7. '[j' → logprob: -13.001358032226562
    8. ' i' → logprob: -13.501358032226562
    9. '[idx' → logprob: -13.876358032226562
    10. '])' → logprob: -14.001358032226562

Token 120: 'ice' (ID: 603)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.011065863072872162
    2. 'ice' → logprob: -4.51106595993042
    3. ']]' → logprob: -11.636065483093262
    4. 'e' → logprob: -11.886065483093262
    5. 'x' → logprob: -14.511065483093262
    6. ']' → logprob: -14.761065483093262
    7. 'exe' → logprob: -14.886065483093262
    8. ']])' → logprob: -15.511065483093262
    9. 'ic' → logprob: -16.386066436767578
    10. 'ent' → logprob: -16.511066436767578

Token 121: ']]' (ID: 8928)
  Prédit: ']]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']]' → logprob: -0.0047226338647305965
    2. ']' → logprob: -5.379722595214844
    3. ' ]]' → logprob: -9.504722595214844
    4. ']]]' → logprob: -11.379722595214844
    5. ')]' → logprob: -12.379722595214844
    6. '])' → logprob: -12.629722595214844
    7. ']]
' → logprob: -13.004722595214844
    8. '])]' → logprob: -13.254722595214844
    9. ' ]' → logprob: -13.504722595214844
    10. ']]

' → logprob: -14.004722595214844

Token 122: ' for' (ID: 395)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0012524925405159593
    2. ' for' → logprob: -7.6262526512146
    3. ' ]' → logprob: -7.6262526512146
    4. 'for' → logprob: -8.251252174377441
    5. ')' → logprob: -12.001252174377441
    6. ' ' → logprob: -12.501252174377441
    7. '[' → logprob: -12.626252174377441
    8. ']
' → logprob: -14.626252174377441
    9. '	for' → logprob: -14.751252174377441
    10. '   ' → logprob: -14.751252174377441

Token 123: ' indice' (ID: 90848)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.4834124743938446
    2. ' indice' → logprob: -0.983412504196167
    3. 'indice' → logprob: -4.733412265777588
    4. 'range' → logprob: -8.233412742614746
    5. ' ' → logprob: -8.983412742614746
    6. ' gamme' → logprob: -10.108412742614746
    7. 'Indice' → logprob: -10.108412742614746
    8. ' xrange' → logprob: -11.858412742614746
    9. '   ' → logprob: -12.733412742614746
    10. ' ' → logprob: -12.733412742614746

Token 124: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07129406929016113
    2. 'in' → logprob: -2.696294069290161
    3. ' ' → logprob: -6.696293830871582
    4. 'range' → logprob: -9.446293830871582
    5. ' ]' → logprob: -11.196293830871582
    6. ' range' → logprob: -12.071293830871582
    7. ')' → logprob: -12.446293830871582
    8. '	in' → logprob: -12.446293830871582
    9. '  ' → logprob: -13.071293830871582
    10. ' )' → logprob: -13.196293830871582

Token 125: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0019289902411401272
    2. ' range' → logprob: -6.251928806304932
    3. '	range' → logprob: -15.25192928314209
    4. 'rang' → logprob: -16.626928329467773
    5. '(range' → logprob: -17.876928329467773
    6. '   ' → logprob: -19.376928329467773
    7. 'sequence' → logprob: -19.751928329467773
    8. '_range' → logprob: -20.126928329467773
    9. ' ' → logprob: -20.751928329467773
    10. '  ' → logprob: -20.876928329467773

Token 126: '(t' (ID: 2025)
  Prédit: '(len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.003439222928136587
    2. '(t' → logprob: -5.753439426422119
    3. '(' → logprob: -8.253438949584961
    4. 'len' → logprob: -14.378438949584961
    5. ' len' → logprob: -14.878438949584961
    6. ' (' → logprob: -17.00343894958496
    7. '	len' → logprob: -17.37843894958496
    8. '(
' → logprob: -17.75343894958496
    9. '(l' → logprob: -17.87843894958496
    10. '=len' → logprob: -18.12843894958496

Token 127: 'aille' (ID: 44714)
  Prédit: 'aille'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aille' → logprob: -0.01124823372811079
    2. 'ail' → logprob: -4.5112481117248535
    3. 'a' → logprob: -8.636248588562012
    4. 'tail' → logprob: -11.011248588562012
    5. 'aise' → logprob: -12.886248588562012
    6. 'ai' → logprob: -13.886248588562012
    7. 'alle' → logprob: -14.136248588562012
    8. '[' → logprob: -14.636248588562012
    9. 'ails' → logprob: -15.011248588562012
    10. 'ailleurs' → logprob: -15.136248588562012

Token 128: '_per' (ID: 10938)
  Prédit: '_per'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_per' → logprob: -6.2729995988775045e-06
    2. 'per' → logprob: -13.125006675720215
    3. '_' → logprob: -13.375006675720215
    4. ')' → logprob: -13.500006675720215
    5. '_sequence' → logprob: -14.000006675720215
    6. 'sequence' → logprob: -16.1250057220459
    7. '))' → logprob: -16.2500057220459
    8. '_)' → logprob: -16.7500057220459
    9. '_p' → logprob: -17.0000057220459
    10. '	per' → logprob: -17.3750057220459

Token 129: 'mutation' (ID: 92896)
  Prédit: 'utation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'utation' → logprob: -0.016422003507614136
    2. 'mutation' → logprob: -4.141421794891357
    3. 'ut' → logprob: -9.141422271728516
    4. 'uation' → logprob: -9.516422271728516
    5. 'ission' → logprob: -10.266422271728516
    6. 'utte' → logprob: -10.641422271728516
    7. 'r' → logprob: -10.891422271728516
    8. 'ermut' → logprob: -11.266422271728516
    9. 'ution' → logprob: -11.266422271728516
    10. 'utations' → logprob: -11.891422271728516

Token 130: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00022928470571059734
    2. ' )' → logprob: -9.250228881835938
    3. ']' → logprob: -9.500228881835938
    4. ')' → logprob: -9.875228881835938
    5. ' ]' → logprob: -12.125228881835938
    6. ')]
' → logprob: -14.500228881835938
    7. ' ' → logprob: -15.750228881835938
    8. '   ' → logprob: -15.875228881835938
    9. '))' → logprob: -15.875228881835938
    10. ')}' → logprob: -16.000228881835938

Token 131: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4252079129219055
    2. '<|end|>' → logprob: -1.4252078533172607
    3. '#' → logprob: -3.4252078533172607
    4. '\n' → logprob: -3.9252078533172607
    5. '  
' → logprob: -4.42520809173584
    6. ')' → logprob: -4.42520809173584
    7. ' 
' → logprob: -5.17520809173584
    8. '```' → logprob: -5.30020809173584
    9. ' ' → logprob: -5.55020809173584
    10. '' → logprob: -5.55020809173584

Token 132: ' Initial' (ID: 9209)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6529629230499268
    2. 'result' → logprob: -0.7779629230499268
    3. 'com' → logprob: -5.402962684631348
    4. 'res' → logprob: -5.527962684631348
    5. 'composition' → logprob: -5.652962684631348
    6. 'rés' → logprob: -6.277962684631348
    7. 'per' → logprob: -7.027962684631348
    8. ' #' → logprob: -7.152962684631348
    9. 'prem' → logprob: -7.277962684631348
    10. 'def' → logprob: -7.277962684631348

Token 133: 'isation' (ID: 6993)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.14975905418395996
    2. 'e' → logprob: -2.77475905418396
    3. 'isation' → logprob: -3.39975905418396
    4. 'iser' → logprob: -4.149759292602539
    5. '_sequence' → logprob: -4.274759292602539
    6. 'i' → logprob: -5.899759292602539
    7. ' ' → logprob: -6.774759292602539
    8. 'is' → logprob: -6.774759292602539
    9. '_per' → logprob: -6.899759292602539
    10. 'isé' → logprob: -7.274759292602539

Token 134: ' de' (ID: 334)
  Prédit: ' sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sequence' → logprob: -0.6959461569786072
    2. 'result' → logprob: -1.695946216583252
    3. ' result' → logprob: -1.945946216583252
    4. 'sequence' → logprob: -2.445946216583252
    5. ' de' → logprob: -4.320946216583252
    6. ' des' → logprob: -4.320946216583252
    7. 'prem' → logprob: -4.445946216583252
    8. '_sequence' → logprob: -4.570946216583252
    9. ' resultat' → logprob: -5.070946216583252
    10. '_result' → logprob: -5.445946216583252

Token 135: ' la' (ID: 557)
  Prédit: ' sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sequence' → logprob: -1.1345548629760742
    2. 'sequence' → logprob: -1.2595548629760742
    3. 'prem' → logprob: -2.009554862976074
    4. ' la' → logprob: -2.134554862976074
    5. 'la' → logprob: -3.009554862976074
    6. 'result' → logprob: -3.134554862976074
    7. ' result' → logprob: -4.134554862976074
    8. 'per' → logprob: -5.009554862976074
    9. 'une' → logprob: -5.384554862976074
    10. ' resultat' → logprob: -5.759554862976074

Token 136: ' table' (ID: 3293)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.14246666431427
    2. 'per' → logprob: -1.26746666431427
    3. 'sequence' → logprob: -1.26746666431427
    4. 'prem' → logprob: -3.1424665451049805
    5. ' sequence' → logprob: -3.5174665451049805
    6. ' permutation' → logprob: -5.2674665451049805
    7. 'sé' → logprob: -5.6424665451049805
    8. 'current' → logprob: -5.7674665451049805
    9. 'composition' → logprob: -5.7674665451049805
    10. '#' → logprob: -5.7674665451049805

Token 137: ' des' (ID: 731)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.8534480929374695
    2. '_' → logprob: -1.6034481525421143
    3. ' des' → logprob: -1.8534481525421143
    4. 'de' → logprob: -2.2284481525421143
    5. 'des' → logprob: -3.3534481525421143
    6. 'dp' → logprob: -4.228447914123535
    7. '_de' → logprob: -4.603447914123535
    8. '_des' → logprob: -4.603447914123535
    9. '_hash' → logprob: -5.478447914123535
    10. ' ' → logprob: -5.853447914123535

Token 138: ' permutations' (ID: 174595)
  Prédit: ' puiss'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' puiss' → logprob: -0.20334464311599731
    2. ' permutations' → logprob: -2.0783445835113525
    3. ' compositions' → logprob: -3.7033445835113525
    4. ' résultats' → logprob: -4.203344821929932
    5. ' pouvoirs' → logprob: -6.203344821929932
    6. ' opérations' → logprob: -6.328344821929932
    7. ' compos' → logprob: -6.453344821929932
    8. ' puissance' → logprob: -6.578344821929932
    9. 'pu' → logprob: -6.703344821929932
    10. '_per' → logprob: -6.953344821929932

Token 139: ' compos' (ID: 14635)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -1.5065752267837524
    2. ' table' → logprob: -1.5065752267837524
    3. ' tables' → logprob: -1.6315752267837524
    4. ' permutations' → logprob: -2.631575107574463
    5. 'table' → logprob: -2.881575107574463
    6. ' de' → logprob: -3.256575107574463
    7. '_' → logprob: -3.756575107574463
    8. 'tables' → logprob: -3.881575107574463
    9. '_table' → logprob: -4.131575107574463
    10. ' permutation' → logprob: -4.381575107574463

Token 140: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.016698244959115982
    2. 'es' → logprob: -5.141698360443115
    3. 'ée' → logprob: -5.141698360443115
    4. 'ees' → logprob: -6.391698360443115
    5. 'é' → logprob: -7.016698360443115
    6. 't' → logprob: -7.516698360443115
    7. '#' → logprob: -7.891698360443115
    8. 'tes' → logprob: -8.016697883605957
    9. 'és' → logprob: -8.141697883605957
    10. 'ee' → logprob: -8.891697883605957

Token 141: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.5922211408615112
    2. ' =' → logprob: -1.7172211408615112
    3. '_com' → logprob: -2.592221260070801
    4. 'com' → logprob: -2.842221260070801
    5. '[]' → logprob: -3.342221260070801
    6. '_' → logprob: -3.342221260070801
    7. 'dp' → logprob: -3.342221260070801
    8. 'composition' → logprob: -3.592221260070801
    9. '[' → logprob: -3.717221260070801
    10. 'table' → logprob: -3.717221260070801

Token 142: 'per' (ID: 543)
  Prédit: 'table'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'table' → logprob: -0.5295177102088928
    2. ' table' → logprob: -1.529517650604248
    3. 'composition' → logprob: -2.404517650604248
    4. ' tables' → logprob: -3.654517650604248
    5. 'tables' → logprob: -3.654517650604248
    6. ' composition' → logprob: -3.654517650604248
    7. ' compositions' → logprob: -4.904517650604248
    8. ' compos' → logprob: -5.654517650604248
    9. ' permutations' → logprob: -5.779517650604248
    10. 'com' → logprob: -6.029517650604248

Token 143: 'mut' (ID: 10522)
  Prédit: 'mut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mut' → logprob: -0.49726900458335876
    2. 'mutation' → logprob: -0.9972690343856812
    3. 'm' → logprob: -4.747269153594971
    4. 'mu' → logprob: -4.872269153594971
    5. '_mut' → logprob: -5.747269153594971
    6. 'utation' → logprob: -6.872269153594971
    7. 'utations' → logprob: -6.997269153594971
    8. '```' → logprob: -8.247268676757812
    9. 'mute' → logprob: -8.497268676757812
    10. 'mission' → logprob: -9.247268676757812

Token 144: 'ations' (ID: 929)
  Prédit: 'ations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ations' → logprob: -0.021430475637316704
    2. 'ation' → logprob: -3.896430492401123
    3. 'es' → logprob: -7.771430492401123
    4. '_' → logprob: -8.771430015563965
    5. 'e' → logprob: -9.896430015563965
    6. 'a' → logprob: -9.896430015563965
    7. 't' → logprob: -10.271430015563965
    8. '   ' → logprob: -10.771430015563965
    9. '_at' → logprob: -10.896430015563965
    10. '_table' → logprob: -11.021430015563965

Token 145: '_com' (ID: 10828)
  Prédit: '_comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_comp' → logprob: -0.467581182718277
    2. '_com' → logprob: -1.4675811529159546
    3. ' =' → logprob: -2.092581272125244
    4. '_' → logprob: -4.092581272125244
    5. '_con' → logprob: -7.842581272125244
    6. '=[]' → logprob: -7.967581272125244
    7. 's' → logprob: -7.967581272125244
    8. ' ' → logprob: -8.342580795288086
    9. '=' → logprob: -8.592580795288086
    10. '[]' → logprob: -8.967580795288086

Token 146: 'pos' (ID: 1103)
  Prédit: 'pose'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pose' → logprob: -0.09300153702497482
    2. 'ose' → logprob: -3.4680016040802
    3. 'ise' → logprob: -4.218001365661621
    4. 'p' → logprob: -4.468001365661621
    5. ' =' → logprob: -5.218001365661621
    6. '=' → logprob: -5.718001365661621
    7. '_' → logprob: -5.843001365661621
    8. 'pos' → logprob: -5.843001365661621
    9. '_pose' → logprob: -6.093001365661621
    10. 'osse' → logprob: -6.093001365661621

Token 147: 'ées' (ID: 5161)
  Prédit: 'ees'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ees' → logprob: -0.3907920718193054
    2. 'es' → logprob: -1.8907921314239502
    3. 'ées' → logprob: -1.8907921314239502
    4. 'ee' → logprob: -4.390791893005371
    5. 'e' → logprob: -5.140791893005371
    6. '=' → logprob: -7.015791893005371
    7. '   ' → logprob: -7.640791893005371
    8. '[' → logprob: -7.640791893005371
    9. '```' → logprob: -8.265791893005371
    10. 'ée' → logprob: -8.890791893005371

Token 148: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.003801738377660513
    2. '=' → logprob: -5.6288018226623535
    3. 's' → logprob: -9.003801345825195
    4. '[' → logprob: -10.503801345825195
    5. '=[]' → logprob: -11.128801345825195
    6. ' ' → logprob: -11.378801345825195
    7. ' =[' → logprob: -11.753801345825195
    8. '[]' → logprob: -12.003801345825195
    9. '_' → logprob: -12.878801345825195
    10. 'es' → logprob: -13.253801345825195

Token 149: ' [
' (ID: 4240)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.12601019442081451
    2. '[' → logprob: -2.2510101795196533
    3. '[p' → logprob: -4.501010417938232
    4. '[t' → logprob: -7.876010417938232
    5. ' [{}' → logprob: -8.501009941101074
    6. '[n' → logprob: -8.626009941101074
    7. ' []' → logprob: -8.876009941101074
    8. ' [[]' → logprob: -9.126009941101074
    9. '[]' → logprob: -9.251009941101074
    10. ' ' → logprob: -9.376009941101074

Token 150: '   ' (ID: 271)
  Prédit: 'prem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prem' → logprob: -0.3240414559841156
    2. '[p' → logprob: -1.449041485786438
    3. '[' → logprob: -3.9490413665771484
    4. ' [' → logprob: -4.074041366577148
    5. '[]' → logprob: -6.699041366577148
    6. ' premiere' → logprob: -6.949041366577148
    7. ']' → logprob: -7.699041366577148
    8. ' []' → logprob: -7.949041366577148
    9. 'None' → logprob: -8.074041366577148
    10. 'p' → logprob: -8.324041366577148

Token 151: ' [' (ID: 723)
  Prédit: 'prem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prem' → logprob: -0.0648581013083458
    2. '[p' → logprob: -3.4398581981658936
    3. '[' (adapté à ' [') → logprob: -4.1898579597473145
    4. ' premiere' → logprob: -5.0648579597473145
    5. ' [' → logprob: -5.4398579597473145
    6. '[]' → logprob: -6.5648579597473145
    7. 'None' → logprob: -7.1898579597473145
    8. ' première' → logprob: -7.5648579597473145
    9. ' []' → logprob: -8.064858436584473
    10. ' None' → logprob: -8.689858436584473

Token 152: '0' (ID: 15)
  Prédit: 'prem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prem' → logprob: -1.1189289093017578
    2. 'i' → logprob: -1.2439289093017578
    3. 'list' → logprob: -1.4939289093017578
    4. '0' → logprob: -2.368928909301758
    5. ']' → logprob: -4.118928909301758
    6. '[]' → logprob: -4.743928909301758
    7. 'liste' → logprob: -4.743928909301758
    8. 'indice' → logprob: -5.118928909301758
    9. 'None' → logprob: -5.493928909301758
    10. '[i' → logprob: -5.743928909301758

Token 153: ' for' (ID: 395)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2504429817199707
    2. ' for' → logprob: -2.0004429817199707
    3. ']*' → logprob: -2.6254429817199707
    4. 'for' → logprob: -4.375442981719971
    5. ']*(' → logprob: -7.625442981719971
    6. ' ]' → logprob: -7.625442981719971
    7. ']+' → logprob: -9.250442504882812
    8. ',' → logprob: -9.625442504882812
    9. '][' → logprob: -10.250442504882812
    10. ' ' → logprob: -10.875442504882812

Token 154: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.25196588039398193
    2. '_' → logprob: -1.501965880393982
    3. '_j' → logprob: -11.001965522766113
    4. '__' → logprob: -11.251965522766113
    5. ' ' → logprob: -12.501965522766113
    6. 'j' → logprob: -14.126965522766113
    7. ' j' → logprob: -14.251965522766113
    8. '_=' → logprob: -14.501965522766113
    9. ' __' → logprob: -14.626965522766113
    10. '_i' → logprob: -16.00196647644043

Token 155: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01087767444550991
    2. 'in' → logprob: -4.63587760925293
    3. ' ' → logprob: -7.51087760925293
    4. 'range' → logprob: -7.88587760925293
    5. ' range' → logprob: -9.88587760925293
    6. ' _' → logprob: -10.26087760925293
    7. '_range' → logprob: -10.76087760925293
    8. '_' → logprob: -10.88587760925293
    9. '  ' → logprob: -11.63587760925293
    10. '<|end|>' → logprob: -11.88587760925293

Token 156: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.38687485456466675
    2. ' range' → logprob: -1.1368749141693115
    3. '	range' → logprob: -14.01187515258789
    4. 'rang' → logprob: -14.26187515258789
    5. ' ' → logprob: -14.38687515258789
    6. 'r' → logprob: -15.01187515258789
    7. '(range' → logprob: -15.01187515258789
    8. ' gamme' → logprob: -15.13687515258789
    9. ']' → logprob: -15.88687515258789
    10. '_range' → logprob: -16.01187515258789

Token 157: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.0008858494111336768
    2. '(' → logprob: -7.125885963439941
    3. ' (' → logprob: -9.500885963439941
    4. 't' → logprob: -13.000885963439941
    5. ' ' → logprob: -13.125885963439941
    6. 'tail' → logprob: -14.250885963439941
    7. '	t' → logprob: -14.250885963439941
    8. ' t' → logprob: -14.875885963439941
    9. ']' → logprob: -15.625885963439941
    10. '   ' → logprob: -15.750885963439941

Token 158: 'aille' (ID: 44714)
  Prédit: 'aille'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aille' → logprob: -0.026681549847126007
    2. 'tail' → logprob: -4.026681423187256
    3. 'ail' → logprob: -4.776681423187256
    4. 'a' → logprob: -10.276681900024414
    5. '_' → logprob: -12.401681900024414
    6. 'aise' → logprob: -12.526681900024414
    7. '#' → logprob: -12.651681900024414
    8. '[' → logprob: -12.776681900024414
    9. '_tail' → logprob: -12.776681900024414
    10. ')' → logprob: -13.151681900024414

Token 159: '_per' (ID: 10938)
  Prédit: '_per'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_per' → logprob: -1.3856492842023727e-06
    2. 'per' → logprob: -14.250000953674316
    3. '_' → logprob: -15.375000953674316
    4. '_par' → logprob: -15.500000953674316
    5. '_de' → logprob: -15.875000953674316
    6. '_p' → logprob: -16.875001907348633
    7. ')' → logprob: -18.000001907348633
    8. '_PER' → logprob: -18.625001907348633
    9. '	per' → logprob: -19.125001907348633
    10. 'Per' → logprob: -19.375001907348633

Token 160: 'mutation' (ID: 92896)
  Prédit: 'utation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'utation' → logprob: -0.08997172862291336
    2. 'mutation' → logprob: -2.4649717807769775
    3. 'ermut' → logprob: -7.089971542358398
    4. 'r' → logprob: -9.839971542358398
    5. 'uation' → logprob: -10.339971542358398
    6. 'ut' → logprob: -11.089971542358398
    7. 'mut' → logprob: -11.214971542358398
    8. 't' → logprob: -11.464971542358398
    9. 'lation' → logprob: -11.464971542358398
    10. 'utations' → logprob: -11.714971542358398

Token 161: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.000295420759357512
    2. ']' → logprob: -8.250295639038086
    3. ']]' → logprob: -11.125295639038086
    4. ' ]' → logprob: -12.125295639038086
    5. ')]
' → logprob: -12.125295639038086
    6. ')' → logprob: -12.375295639038086
    7. '])' → logprob: -13.500295639038086
    8. ' )' → logprob: -14.000295639038086
    9. ')],' → logprob: -14.000295639038086
    10. '])]' → logprob: -14.250295639038086

Token 162: '   ' (ID: 271)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01361883245408535
    2. ' for' → logprob: -4.5136189460754395
    3. ',' → logprob: -6.8886189460754395
    4. 'for' → logprob: -7.2636189460754395
    5. '   ' → logprob: -7.6386189460754395
    6. ' ]' → logprob: -8.263618469238281
    7. '],' → logprob: -9.763618469238281
    8. ']

' → logprob: -10.763618469238281
    9. ']
' → logprob: -11.638618469238281
    10. ' ' → logprob: -12.138618469238281

Token 163: ' for' (ID: 395)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.7390626072883606
    2. ' for' → logprob: -1.2390625476837158
    3. 'for' (adapté à ' for') → logprob: -1.4890625476837158
    4. '   ' → logprob: -5.114062786102295
    5. ',' → logprob: -7.114062786102295
    6. ']

' → logprob: -8.989062309265137
    7. ']
' → logprob: -9.114062309265137
    8. ' ' → logprob: -9.614062309265137
    9. '],' → logprob: -10.614062309265137
    10. ' ]' → logprob: -11.114062309265137

Token 164: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9673848748207092
    2. ' range' → logprob: -0.9673848748207092
    3. ' _' → logprob: -1.4673848152160645
    4. 'range' → logprob: -4.7173848152160645
    5. '_range' → logprob: -8.342385292053223
    6. ' ' → logprob: -9.342385292053223
    7. ' ' → logprob: -11.092385292053223
    8. '   ' → logprob: -11.467385292053223
    9. '	range' → logprob: -11.842385292053223
    10. ' in' → logprob: -12.217385292053223

Token 165: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.11574970930814743
    2. 'range' → logprob: -2.3657495975494385
    3. 'in' → logprob: -4.865749835968018
    4. ' range' → logprob: -4.865749835968018
    5. ' ' → logprob: -11.86574935913086
    6. '(range' → logprob: -14.49074935913086
    7. 's' → logprob: -14.86574935913086
    8. ' ' → logprob: -14.86574935913086
    9. '  ' → logprob: -14.86574935913086
    10. '[' → logprob: -15.11574935913086

Token 166: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.14268982410430908
    2. ' range' → logprob: -2.0176897048950195
    3. '(range' → logprob: -12.64268970489502
    4. '[' → logprob: -12.76768970489502
    5. '   ' → logprob: -12.89268970489502
    6. '	range' → logprob: -13.14268970489502
    7. ' ' → logprob: -13.26768970489502
    8. 'rang' → logprob: -13.51768970489502
    9. '  ' → logprob: -15.14268970489502
    10. ' rang' → logprob: -15.64268970489502

Token 167: '(' (ID: 7)
  Prédit: '(nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nombre' → logprob: -0.003691524500027299
    2. '(' → logprob: -5.878691673278809
    3. ' (' → logprob: -7.503691673278809
    4. ' nombre' → logprob: -8.878691673278809
    5. 'nombre' → logprob: -9.003691673278809
    6. ' ' → logprob: -10.003691673278809
    7. '(n' → logprob: -10.753691673278809
    8. '((' → logprob: -13.628691673278809
    9. '(t' → logprob: -14.003691673278809
    10. '(nb' → logprob: -14.378691673278809

Token 168: '6' (ID: 21)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.03341422602534294
    2. '2' → logprob: -4.033414363861084
    3. ' nombre' → logprob: -4.283414363861084
    4. '(nombre' → logprob: -7.533414363861084
    5. ' ' → logprob: -7.658414363861084
    6. '3' → logprob: -9.408413887023926
    7. '1' → logprob: -9.908413887023926
    8. '4' → logprob: -10.283413887023926
    9. '   ' → logprob: -10.658413887023926
    10. '6' → logprob: -11.033413887023926

Token 169: ')
' (ID: 446)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.5281971096992493
    2. ')' → logprob: -0.9031971096992493
    3. ']' → logprob: -5.778197288513184
    4. ' )' → logprob: -6.528197288513184
    5. ')
' → logprob: -8.153197288513184
    6. ' ]' → logprob: -8.653197288513184
    7. ')])' → logprob: -11.028197288513184
    8. ']
' → logprob: -12.653197288513184
    9. '+' → logprob: -12.653197288513184
    10. '   ' → logprob: -12.778197288513184

Token 170: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -5.180879816180095e-05
    2. ' ]' → logprob: -10.000051498413086
    3. ']
' → logprob: -12.125051498413086
    4. '   ' → logprob: -14.750051498413086
    5. ')' → logprob: -15.375051498413086
    6. ']

' → logprob: -15.500051498413086
    7. ',' → logprob: -17.250051498413086
    8. '}' → logprob: -17.625051498413086
    9. ']
' → logprob: -18.125051498413086
    10. '];' → logprob: -18.250051498413086

Token 171: '#' (ID: 2)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6682976484298706
    2. '#' → logprob: -1.9182976484298706
    3. ')' → logprob: -2.29329776763916
    4. 'per' → logprob: -2.54329776763916
    5. '
' → logprob: -2.91829776763916
    6. '[' → logprob: -3.04329776763916
    7. '   ' → logprob: -4.16829776763916
    8. ' ' → logprob: -5.04329776763916
    9. '  
' → logprob: -5.16829776763916
    10. '<|end|>' → logprob: -5.16829776763916

Token 172: ' Affect' (ID: 190087)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5305997729301453
    2. 'for' → logprob: -1.53059983253479
    3. 'per' → logprob: -1.78059983253479
    4. 'prem' → logprob: -4.030599594116211
    5. 'def' → logprob: -5.655599594116211
    6. ' for' → logprob: -6.030599594116211
    7. 'import' → logprob: -6.905599594116211
    8. ' #' → logprob: -7.655599594116211
    9. ' permutations' → logprob: -8.030599594116211
    10. 'perm' → logprob: -8.030599594116211

Token 173: 'ation' (ID: 387)
  Prédit: 'ation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ation' → logprob: -0.0009482608293183148
    2. 'er' → logprob: -7.625948429107666
    3. 'ations' → logprob: -8.750947952270508
    4. 'a' → logprob: -8.750947952270508
    5. 'ion' → logprob: -9.000947952270508
    6. ' at' → logprob: -11.625947952270508
    7. 'ant' → logprob: -13.000947952270508
    8. 'at' → logprob: -13.125947952270508
    9. 'tion' → logprob: -13.625947952270508
    10. '=' → logprob: -14.125947952270508

Token 174: ' des' (ID: 731)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8327697515487671
    2. 'per' → logprob: -0.9577697515487671
    3. 'prem' → logprob: -1.832769751548767
    4. ' permutations' → logprob: -5.082769870758057
    5. ' des' → logprob: -5.332769870758057
    6. 'des' → logprob: -5.582769870758057
    7. '<|end|>' → logprob: -5.957769870758057
    8. 'de' → logprob: -7.207769870758057
    9. ' de' → logprob: -7.457769870758057
    10. '[
' → logprob: -7.582769870758057

Token 175: ' deux' (ID: 10301)
  Prédit: 'prem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prem' → logprob: -0.31797558069229126
    2. 'per' → logprob: -1.3179755210876465
    3. ' permutations' → logprob: -5.8179755210876465
    4. '[' → logprob: -7.6929755210876465
    5. 'perm' → logprob: -8.067975997924805
    6. ' premières' → logprob: -8.942975997924805
    7. ' perm' → logprob: -9.192975997924805
    8. ' per' → logprob: -9.567975997924805
    9. ' prem' → logprob: -9.692975997924805
    10. '[]' → logprob: -9.942975997924805

Token 176: ' permutations' (ID: 174595)
  Prédit: 'prem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prem' → logprob: -0.6490001082420349
    2. ' premières' → logprob: -0.7740001082420349
    3. 'per' → logprob: -5.02400016784668
    4. ' permutations' → logprob: -6.02400016784668
    5. ' premiers' → logprob: -6.14900016784668
    6. ' première' → logprob: -6.64900016784668
    7. '[' → logprob: -7.02400016784668
    8. ' premieres' → logprob: -7.27400016784668
    9. ' ' → logprob: -7.89900016784668
    10. '_per' → logprob: -8.02400016784668

Token 177: ' de' (ID: 334)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2102562040090561
    2. 's' → logprob: -1.7102562189102173
    3. '0' → logprob: -6.835256099700928
    4. '[
' → logprob: -6.835256099700928
    5. '_per' → logprob: -6.960256099700928
    6. 'per' → logprob: -6.960256099700928
    7. 'prem' → logprob: -7.210256099700928
    8. '<|end|>' → logprob: -7.460256099700928
    9. '[s' → logprob: -7.710256099700928
    10. '_s' → logprob: -7.960256099700928

Token 178: ' base' (ID: 3611)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.4965498745441437
    2. ' départ' → logprob: -1.4965498447418213
    3. ' base' → logprob: -1.9965498447418213
    4. 'dé' → logprob: -3.9965498447418213
    5. 'bases' → logprob: -5.1215500831604
    6. 'part' → logprob: -5.3715500831604
    7. ' bases' → logprob: -6.9965500831604
    8. ' ' → logprob: -8.246549606323242
    9. 'depart' → logprob: -8.371549606323242
    10. 's' → logprob: -8.871549606323242

Token 179: '
' (ID: 198)
  Prédit: 'per'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'per' → logprob: -0.1654268205165863
    2. '
' → logprob: -2.540426731109619
    3. 'prem' → logprob: -2.915426731109619
    4. '[' → logprob: -5.540426731109619
    5. ' permutations' → logprob: -5.915426731109619
    6. ' :
' → logprob: -6.040426731109619
    7. ':
' → logprob: -6.040426731109619
    8. ':' → logprob: -6.415426731109619
    9. 's' → logprob: -6.540426731109619
    10. '(per' → logprob: -6.915426731109619

Token 180: 'per' (ID: 543)
  Prédit: 'per'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'per' → logprob: -0.163499653339386
    2. 'prem' → logprob: -1.9134995937347412
    3. '[' → logprob: -6.03849983215332
    4. 'perm' → logprob: -8.53849983215332
    5. ' per' → logprob: -8.78849983215332
    6. 'for' → logprob: -9.03849983215332
    7. '[
' → logprob: -9.16349983215332
    8. ' permutations' → logprob: -9.91349983215332
    9. '```' → logprob: -10.03849983215332
    10. ' =' → logprob: -10.91349983215332

Token 181: 'mut' (ID: 10522)
  Prédit: 'mut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mut' → logprob: -2.7610454708337784e-05
    2. 'm' → logprob: -10.875027656555176
    3. 'utations' → logprob: -12.000027656555176
    4. 't' → logprob: -13.500027656555176
    5. 'missions' → logprob: -14.500027656555176
    6. 'mu' → logprob: -15.375027656555176
    7. ' mutations' → logprob: -16.37502670288086
    8. '_mut' → logprob: -16.50002670288086
    9. 'mun' → logprob: -17.37502670288086
    10. 'met' → logprob: -17.37502670288086

Token 182: 'ations' (ID: 929)
  Prédit: 'ations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ations' → logprob: -0.0015070053050294518
    2. 'utations' → logprob: -6.626506805419922
    3. 't' → logprob: -8.751506805419922
    4. 'utions' → logprob: -11.376506805419922
    5. 'a' → logprob: -12.376506805419922
    6. 's' → logprob: -13.501506805419922
    7. '   ' → logprob: -14.001506805419922
    8. 'er' → logprob: -14.126506805419922
    9. 'lations' → logprob: -14.251506805419922
    10. 'ation' → logprob: -14.501506805419922

Token 183: '_com' (ID: 10828)
  Prédit: '_com'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_com' → logprob: -1.981667537620524e-06
    2. '_con' → logprob: -14.500001907348633
    3. '=com' → logprob: -14.500001907348633
    4. '_' → logprob: -14.875001907348633
    5. '_comp' → logprob: -15.500001907348633
    6. 'com' → logprob: -16.000001907348633
    7. '_des' → logprob: -16.875001907348633
    8. '=_' → logprob: -17.625001907348633
    9. '\' → logprob: -17.750001907348633
    10. '_de' → logprob: -17.750001907348633

Token 184: 'pos' (ID: 1103)
  Prédit: 'pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.021047675982117653
    2. 'pose' → logprob: -4.771047592163086
    3. 'p' → logprob: -5.146047592163086
    4. 'posé' → logprob: -6.396047592163086
    5. 'poss' → logprob: -6.521047592163086
    6. 'post' → logprob: -6.646047592163086
    7. '_pos' → logprob: -8.146047592163086
    8. 'os' → logprob: -8.521047592163086
    9. 'posit' → logprob: -8.771047592163086
    10. 'poses' → logprob: -8.771047592163086

Token 185: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.0021945175249129534
    2. 'ée' → logprob: -7.127194404602051
    3. 'é' → logprob: -7.502194404602051
    4. 'es' → logprob: -8.00219440460205
    5. 't' → logprob: -8.75219440460205
    6. 's' → logprob: -8.87719440460205
    7. 'ees' → logprob: -10.00219440460205
    8. 'nées' → logprob: -10.50219440460205
    9. 'É' → logprob: -10.75219440460205
    10. 'és' → logprob: -11.00219440460205

Token 186: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.5048530030981055e-06
    2. ' =' → logprob: -14.500001907348633
    3. ' [' → logprob: -14.750001907348633
    4. '=' → logprob: -14.750001907348633
    5. '=[' → logprob: -16.375001907348633
    6. '[
' → logprob: -17.625001907348633
    7. '
' → logprob: -18.000001907348633
    8. ' ' → logprob: -18.125001907348633
    9. '][' → logprob: -18.250001907348633
    10. '[:' → logprob: -18.250001907348633

Token 187: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0008170120418071747
    2. '1' → logprob: -7.250816822052002
    3. ' ' → logprob: -9.25081729888916
    4. '2' → logprob: -11.87581729888916
    5. '3' → logprob: -13.37581729888916
    6. '   ' → logprob: -14.00081729888916
    7. '```' → logprob: -14.87581729888916
    8. '4' → logprob: -14.87581729888916
    9. ']' → logprob: -15.75081729888916
    10. '[' → logprob: -16.000816345214844

Token 188: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.007622129749506712
    2. ' ]' → logprob: -4.882622241973877
    3. ']=' → logprob: -11.132621765136719
    4. '][' → logprob: -14.757621765136719
    5. ' ' → logprob: -15.382621765136719
    6. '][:' → logprob: -15.507621765136719
    7. ' ][' → logprob: -16.13262176513672
    8. ']
' → logprob: -16.38262176513672
    9. ']

' → logprob: -16.75762176513672
    10. '],' → logprob: -16.75762176513672

Token 189: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1128322035074234
    2. '=' → logprob: -2.2378323078155518
    3. '[:]' → logprob: -12.237832069396973
    4. ' =[' → logprob: -12.987832069396973
    5. ']' → logprob: -14.112832069396973
    6. ' ' → logprob: -14.612832069396973
    7. ',' → logprob: -15.362832069396973
    8. '[' → logprob: -15.862832069396973
    9. '<|end|>' → logprob: -15.862832069396973
    10. '.' → logprob: -16.11283302307129

Token 190: ' premiere' (ID: 52343)
  Prédit: 'prem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prem' → logprob: -0.000776634959038347
    2. ' premiere' → logprob: -7.250776767730713
    3. ' première' → logprob: -10.500776290893555
    4. '[' → logprob: -11.750776290893555
    5. ' ' → logprob: -11.750776290893555
    6. '[p' → logprob: -11.875776290893555
    7. ' premi' → logprob: -12.625776290893555
    8. ' ' → logprob: -12.750776290893555
    9. ' premie' → logprob: -12.875776290893555
    10. 'per' → logprob: -13.500776290893555

Token 191: '_per' (ID: 10938)
  Prédit: '_per'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_per' → logprob: -0.00011188744247192517
    2. '_' → logprob: -9.12511157989502
    3. '_p' → logprob: -13.00011157989502
    4. 'per' → logprob: -14.37511157989502
    5. ' _' → logprob: -17.125112533569336
    6. '_pe' → logprob: -17.500112533569336
    7. '_perm' → logprob: -17.625112533569336
    8. '_par' → logprob: -17.875112533569336
    9. '\' → logprob: -18.125112533569336
    10. '_PER' → logprob: -18.375112533569336

Token 192: 'mutation' (ID: 92896)
  Prédit: 'mutation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mutation' → logprob: -0.0005082341376692057
    2. 'mut' → logprob: -8.375508308410645
    3. 'utation' → logprob: -8.375508308410645
    4. 'm' → logprob: -10.500508308410645
    5. 'mission' → logprob: -11.625508308410645
    6. 'mu' → logprob: -12.375508308410645
    7. '_mut' → logprob: -13.250508308410645
    8. 'putation' → logprob: -13.500508308410645
    9. 'mute' → logprob: -14.375508308410645
    10. 'Mutation' → logprob: -14.750508308410645

Token 193: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5650157332420349
    2. 'per' → logprob: -0.9400157332420349
    3. '  
' → logprob: -3.6900157928466797
    4. ' 
' → logprob: -4.56501579284668
    5. '<|end|>' → logprob: -6.44001579284668
    6. '[' → logprob: -6.69001579284668
    7. ' permutations' → logprob: -7.69001579284668
    8. '
' → logprob: -7.94001579284668
    9. '(per' → logprob: -8.19001579284668
    10. '   
' → logprob: -8.69001579284668

Token 194: 'per' (ID: 543)
  Prédit: 'per'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'per' → logprob: -1.5048530030981055e-06
    2. ' permutations' → logprob: -14.250001907348633
    3. '
' → logprob: -15.375001907348633
    4. ' per' → logprob: -15.875001907348633
    5. 'perm' → logprob: -16.375001907348633
    6. '	per' → logprob: -16.875001907348633
    7. '-per' → logprob: -17.375001907348633
    8. ' 
' → logprob: -17.375001907348633
    9. '_per' → logprob: -17.500001907348633
    10. '  
' → logprob: -17.625001907348633

Token 195: 'mut' (ID: 10522)
  Prédit: 'mut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mut' → logprob: -9.849109119386412e-06
    2. 'm' → logprob: -12.250009536743164
    3. '_mut' → logprob: -13.500009536743164
    4. 'mu' → logprob: -13.625009536743164
    5. 'utations' → logprob: -14.000009536743164
    6. 'mun' → logprob: -15.500009536743164
    7. 'missions' → logprob: -15.750009536743164
    8. 'r' → logprob: -16.000009536743164
    9. 'nut' → logprob: -16.000009536743164
    10. '_' → logprob: -16.000009536743164

Token 196: 'ations' (ID: 929)
  Prédit: 'ations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ations' → logprob: -1.3425219549390022e-05
    2. 'utations' → logprob: -11.37501335144043
    3. 'utions' → logprob: -13.87501335144043
    4. 't' → logprob: -14.25001335144043
    5. 'a' → logprob: -15.62501335144043
    6. 'er' → logprob: -17.12501335144043
    7. 'lations' → logprob: -17.12501335144043
    8. 'ATIONS' → logprob: -17.75001335144043
    9. '
' → logprob: -18.50001335144043
    10. 'ections' → logprob: -18.62501335144043

Token 197: '_com' (ID: 10828)
  Prédit: '_com'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_com' → logprob: -3.650518920039758e-06
    2. '[' → logprob: -13.375003814697266
    3. 'com' → logprob: -13.375003814697266
    4. 's' → logprob: -15.625003814697266
    5. '_con' → logprob: -15.875003814697266
    6. '_' → logprob: -16.375003814697266
    7. '_des' → logprob: -17.250003814697266
    8. 'es' → logprob: -17.625003814697266
    9. '_c' → logprob: -17.625003814697266
    10. '._' → logprob: -18.250003814697266

Token 198: 'pos' (ID: 1103)
  Prédit: 'pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.005672556348145008
    2. '_pos' → logprob: -5.880672454833984
    3. 'os' → logprob: -6.255672454833984
    4. 'p' → logprob: -7.130672454833984
    5. 'pose' → logprob: -10.255672454833984
    6. '_' → logprob: -11.130672454833984
    7. 'poses' → logprob: -11.255672454833984
    8. 'posé' → logprob: -11.505672454833984
    9. 'pl' → logprob: -11.630672454833984
    10. '[' → logprob: -11.630672454833984

Token 199: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.008437154814600945
    2. 'ée' → logprob: -5.258437156677246
    3. 'é' → logprob: -6.258437156677246
    4. '_' → logprob: -7.008437156677246
    5. '[' → logprob: -8.133437156677246
    6. 'es' → logprob: -10.508437156677246
    7. 'e' → logprob: -11.758437156677246
    8. '__' → logprob: -11.758437156677246
    9. 's' → logprob: -12.133437156677246
    10. 'nées' → logprob: -12.258437156677246

Token 200: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.7697225252486533e-06
    2. ' [' → logprob: -13.875003814697266
    3. '[
' → logprob: -14.125003814697266
    4. '1' → logprob: -14.250003814697266
    5. '=' → logprob: -14.250003814697266
    6. '```' → logprob: -16.125003814697266
    7. 's' → logprob: -16.625003814697266
    8. '.' → logprob: -16.750003814697266
    9. ' =' → logprob: -16.750003814697266
    10. '[...]' → logprob: -16.875003814697266

Token 201: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -14.000001907348633
    3. '0' → logprob: -15.500001907348633
    4. '2' → logprob: -16.125001907348633
    5. '[' → logprob: -16.750001907348633
    6. '   ' → logprob: -17.125001907348633
    7. 's' → logprob: -17.937501907348633
    8. '#' → logprob: -18.125001907348633
    9. ']' → logprob: -18.187501907348633
    10. '```' → logprob: -18.250001907348633

Token 202: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00011045700375689194
    2. ' ]' → logprob: -9.125110626220703
    3. ']=' → logprob: -13.500110626220703
    4. ')' → logprob: -15.625110626220703
    5. '=' → logprob: -16.875110626220703
    6. '],' → logprob: -17.250110626220703
    7. '[' → logprob: -17.500110626220703
    8. ']
' → logprob: -17.625110626220703
    9. ']

' → logprob: -18.500110626220703
    10. '][' → logprob: -18.500110626220703

Token 203: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06197217106819153
    2. '=' → logprob: -2.811972141265869
    3. '[' → logprob: -13.811972618103027
    4. ')' → logprob: -13.936972618103027
    5. ' ' → logprob: -14.061972618103027
    6. ']' → logprob: -14.811972618103027
    7. ' ' → logprob: -14.936972618103027
    8. ' =[' → logprob: -15.436972618103027
    9. '[:]' → logprob: -15.686972618103027
    10. '.' → logprob: -15.686972618103027

Token 204: ' deux' (ID: 10301)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.1603635549545288
    2. ' deux' → logprob: -1.9103635549545288
    3. ' deuxième' → logprob: -9.91036319732666
    4. ' de' → logprob: -10.78536319732666
    5. '2' → logprob: -10.91036319732666
    6. ' ' → logprob: -11.41036319732666
    7. 'Deux' → logprob: -11.41036319732666
    8. '`' → logprob: -11.53536319732666
    9. 'd' → logprob: -12.16036319732666
    10. '(de' → logprob: -12.78536319732666

Token 205: 'ieme' (ID: 75610)
  Prédit: 'ieme'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ieme' → logprob: -0.0031043924391269684
    2. 'ième' → logprob: -5.878104209899902
    3. '_per' → logprob: -8.253104209899902
    4. 'i' → logprob: -11.753104209899902
    5. 'iem' → logprob: -11.753104209899902
    6. 's' → logprob: -11.753104209899902
    7. '_p' → logprob: -12.628104209899902
    8. '_i' → logprob: -12.878104209899902
    9. 'eme' → logprob: -13.003104209899902
    10. 'ime' → logprob: -13.378104209899902

Token 206: '_per' (ID: 10938)
  Prédit: '_per'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_per' → logprob: -9.960946772480384e-05
    2. '_' → logprob: -9.250099182128906
    3. '_p' → logprob: -12.875099182128906
    4. 'per' → logprob: -14.875099182128906
    5. '_perm' → logprob: -15.875099182128906
    6. '_pe' → logprob: -16.625099182128906
    7. '_s' → logprob: -16.750099182128906
    8. ' _' → logprob: -16.875099182128906
    9. '_pres' → logprob: -17.500099182128906
    10. '_par' → logprob: -17.625099182128906

Token 207: 'mutation' (ID: 92896)
  Prédit: 'mutation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mutation' → logprob: -0.0012689243303611875
    2. 'utation' → logprob: -7.0012688636779785
    3. 'mut' → logprob: -8.001269340515137
    4. 'm' → logprob: -12.001269340515137
    5. 'mission' → logprob: -12.126269340515137
    6. '_mut' → logprob: -12.626269340515137
    7. 'mu' → logprob: -12.876269340515137
    8. 'mute' → logprob: -13.876269340515137
    9. 'ut' → logprob: -14.251269340515137
    10. 'putation' → logprob: -14.251269340515137

Token 208: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 209: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.1786920130252838
    2. '[' → logprob: -2.803692102432251
    3. '<|end|>' → logprob: -3.803692102432251
    4. ']' → logprob: -3.928692102432251
    5. '
' → logprob: -4.053691864013672
    6. ')' → logprob: -4.053691864013672
    7. 'per' → logprob: -4.428691864013672
    8. ' ' → logprob: -5.428691864013672
    9. 'for' → logprob: -6.553691864013672
    10. '  
' → logprob: -6.553691864013672

Token 210: ' Fonction' (ID: 189149)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.12535060942173004
    2. '#' → logprob: -2.2503507137298584
    3. 'def' → logprob: -4.625350475311279
    4. 'per' → logprob: -6.500350475311279
    5. ' for' → logprob: -7.125350475311279
    6. 'import' → logprob: -8.750350952148438
    7. 'from' → logprob: -10.375350952148438
    8. '(' → logprob: -10.375350952148438
    9. '[' → logprob: -10.750350952148438
    10. ']' → logprob: -10.750350952148438

Token 211: ' pour' (ID: 1930)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.024298302829265594
    2. ' def' → logprob: -3.7742981910705566
    3. ' suivante' → logprob: -8.149298667907715
    4. ' de' → logprob: -8.399298667907715
    5. '_def' → logprob: -9.524298667907715
    6. ' pour' → logprob: -9.649298667907715
    7. ' for' → logprob: -9.649298667907715
    8. 'de' → logprob: -10.149298667907715
    9. ']' → logprob: -10.274298667907715
    10. ' appliquer' → logprob: -10.399298667907715

Token 212: ' calcul' (ID: 7559)
  Prédit: ' compose'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' compose' → logprob: -0.734086811542511
    2. 'compose' → logprob: -1.6090867519378662
    3. ' composer' → logprob: -1.6090867519378662
    4. ' i' → logprob: -3.234086751937866
    5. 'composer' → logprob: -3.234086751937866
    6. ' comb' → logprob: -3.859086751937866
    7. 'i' → logprob: -4.484086990356445
    8. ' multiplier' → logprob: -5.859086990356445
    9. 'com' → logprob: -7.234086990356445
    10. ' appliquer' → logprob: -7.359086990356445

Token 213: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -3.130576806142926e-05
    2. 'ate' → logprob: -10.750031471252441
    3. 'e' → logprob: -12.875031471252441
    4. 'per' → logprob: -13.250031471252441
    5. 'ateur' → logprob: -13.750031471252441
    6. 'ler' → logprob: -14.500031471252441
    7. 'ter' → logprob: -14.625031471252441
    8. 'r' → logprob: -14.875031471252441
    9. 'def' → logprob: -14.875031471252441
    10. 'érer' → logprob: -14.875031471252441

Token 214: ' l' (ID: 305)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.06904032081365585
    2. ' une' → logprob: -3.069040298461914
    3. 'la' → logprob: -4.069040298461914
    4. 'def' → logprob: -7.194040298461914
    5. ' les' → logprob: -7.569040298461914
    6. 'une' → logprob: -7.569040298461914
    7. '_la' → logprob: -7.819040298461914
    8. ' l' → logprob: -8.694040298461914
    9. 'l' → logprob: -8.944040298461914
    10. ' le' → logprob: -9.194040298461914

Token 215: ''in' (ID: 17942)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.41038209199905396
    2. 'e' → logprob: -1.2853820323944092
    3. 'es' → logprob: -3.160382032394409
    4. ''ensemble' → logprob: -5.285382270812988
    5. ''ordre' → logprob: -5.910382270812988
    6. ''' → logprob: -5.910382270812988
    7. ''ap' → logprob: -6.285382270812988
    8. ''application' → logprob: -6.410382270812988
    9. '#' → logprob: -7.535382270812988
    10. '')' → logprob: -8.410382270812988

Token 216: 'verse' (ID: 7093)
  Prédit: 'verse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'verse' → logprob: -0.013461604714393616
    2. 'version' → logprob: -4.763461589813232
    3. 'vers' → logprob: -5.388461589813232
    4. 'ver' → logprob: -9.51346206665039
    5. 'composition' → logprob: -10.26346206665039
    6. 'ter' → logprob: -10.38846206665039
    7. '[' → logprob: -10.63846206665039
    8. 'd' → logprob: -11.26346206665039
    9. 'it' → logprob: -11.76346206665039
    10. 'term' → logprob: -12.01346206665039

Token 217: ' d' (ID: 272)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.024445706978440285
    2. 'd' → logprob: -4.274445533752441
    3. 'de' → logprob: -5.149445533752441
    4. '_per' → logprob: -6.899445533752441
    5. '_de' → logprob: -7.274445533752441
    6. '_' → logprob: -7.274445533752441
    7. ' d' → logprob: -7.774445533752441
    8. ' de' → logprob: -7.774445533752441
    9. '(' → logprob: -7.899445533752441
    10. ')' → logprob: -8.524445533752441

Token 218: ''une' (ID: 13337)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'une' → logprob: -0.0975424274802208
    2. ''une' → logprob: -2.4725425243377686
    3. ' une' → logprob: -4.8475422859191895
    4. '’une' → logprob: -7.7225422859191895
    5. '#' → logprob: -9.722542762756348
    6. 'una' → logprob: -10.222542762756348
    7. 'Une' → logprob: -10.222542762756348
    8. ')' → logprob: -10.347542762756348
    9. '`' → logprob: -10.722542762756348
    10. 'a' → logprob: -11.097542762756348

Token 219: ' permutation' (ID: 135200)
  Prédit: 'per'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'per' → logprob: -0.0013699998380616307
    2. 'liste' → logprob: -7.001369953155518
    3. ' permutation' → logprob: -8.126370429992676
    4. 'perm' → logprob: -9.126370429992676
    5. 'list' → logprob: -10.626370429992676
    6. ' liste' → logprob: -11.126370429992676
    7. '_per' → logprob: -13.001370429992676
    8. 'Permutation' → logprob: -13.251370429992676
    9. '#' → logprob: -13.501370429992676
    10. 'fonction' → logprob: -13.626370429992676

Token 220: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0001617035741219297
    2. '
' → logprob: -9.500162124633789
    3. ':def' → logprob: -10.250162124633789
    4. ' def' → logprob: -11.000162124633789
    5. '(def' → logprob: -11.375162124633789
    6. ':' → logprob: -11.750162124633789
    7. '(
' → logprob: -12.125162124633789
    8. '\' → logprob: -12.250162124633789
    9. ':
' → logprob: -13.625162124633789
    10. '_def' → logprob: -14.000162124633789

Token 221: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: 0.0
    2. ' def' → logprob: -17.5
    3. 'de' → logprob: -19.75
    4. '
' → logprob: -20.25
    5. 'dé' → logprob: -20.25
    6. 'd' → logprob: -23.0
    7. ':def' → logprob: -23.125
    8. '	def' → logprob: -23.25
    9. '#' → logprob: -23.75
    10. '```' → logprob: -23.75

Token 222: ' inverse' (ID: 53743)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.341680109500885
    2. 'inverse' → logprob: -1.5916800498962402
    3. ' inverse' → logprob: -3.2166800498962402
    4. ' invers' → logprob: -3.7166800498962402
    5. 'calcul' → logprob: -4.46668004989624
    6. ' calcul' → logprob: -4.71668004989624
    7. ' inversion' → logprob: -7.71668004989624
    8. 'invert' → logprob: -7.96668004989624
    9. '	in' → logprob: -9.466680526733398
    10. ' inverter' → logprob: -10.466680526733398

Token 223: '_per' (ID: 10938)
  Prédit: '(per'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(per' → logprob: -0.08089369535446167
    2. '_per' → logprob: -2.7058937549591064
    3. '(' → logprob: -5.205893516540527
    4. '(p' → logprob: -6.205893516540527
    5. '(sequence' → logprob: -6.455893516540527
    6. '(l' → logprob: -7.705893516540527
    7. ' (' → logprob: -7.955893516540527
    8. '_de' → logprob: -8.705893516540527
    9. '_' → logprob: -8.830893516540527
    10. '_l' → logprob: -8.955893516540527

Token 224: 'mutation' (ID: 92896)
  Prédit: 'mutation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mutation' → logprob: -0.00015574338613077998
    2. 'mut' → logprob: -9.500155448913574
    3. 'm' → logprob: -9.750155448913574
    4. 'mute' → logprob: -11.375155448913574
    5. 'mission' → logprob: -12.125155448913574
    6. 'mettre' → logprob: -13.500155448913574
    7. '_mut' → logprob: -13.625155448913574
    8. 'mu' → logprob: -14.000155448913574
    9. '_' → logprob: -14.500155448913574
    10. 'mun' → logprob: -15.250155448913574

Token 225: '(per' (ID: 96497)
  Prédit: '(per'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(per' → logprob: -0.12279476970434189
    2. '(' → logprob: -2.2477948665618896
    3. '(p' → logprob: -4.6227946281433105
    4. ' (' → logprob: -10.122795104980469
    5. '(permission' → logprob: -11.247795104980469
    6. '(sequence' → logprob: -11.372795104980469
    7. '(P' → logprob: -11.747795104980469
    8. '(pi' → logprob: -11.997795104980469
    9. '(par' → logprob: -12.747795104980469
    10. 'per' → logprob: -13.247795104980469

Token 226: 'mutation' (ID: 92896)
  Prédit: 'mutation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mutation' → logprob: -0.00012570773833431304
    2. 'mut' → logprob: -9.750125885009766
    3. 'm' → logprob: -10.500125885009766
    4. 'mission' → logprob: -10.875125885009766
    5. ')' → logprob: -12.250125885009766
    6. 'mu' → logprob: -12.500125885009766
    7. 'mute' → logprob: -12.500125885009766
    8. 'def' → logprob: -12.625125885009766
    9. 'utation' → logprob: -13.125125885009766
    10. '```' → logprob: -14.500125885009766

Token 227: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.000730781932361424
    2. '):
' → logprob: -7.625730991363525
    3. ')' → logprob: -8.375730514526367
    4. '):
' → logprob: -11.750730514526367
    5. ' ):' → logprob: -13.375730514526367
    6. '):

' → logprob: -14.250730514526367
    7. ':' → logprob: -14.375730514526367
    8. 'per' → logprob: -14.625730514526367
    9. '_per' → logprob: -15.000730514526367
    10. '(per' → logprob: -15.750730514526367

Token 228: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5426427721977234
    2. 'inverse' → logprob: -0.9176427721977234
    3. ' inverse' → logprob: -4.042642593383789
    4. 'inv' → logprob: -7.292642593383789
    5. 'in' → logprob: -7.542642593383789
    6. '_inverse' → logprob: -8.542642593383789
    7. '    
' → logprob: -8.792642593383789
    8. '	in' → logprob: -10.167642593383789
    9. ' ' → logprob: -10.417642593383789
    10. 'n' → logprob: -10.542642593383789

Token 229: ' resultat' (ID: 67404)
  Prédit: 'inverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inverse' → logprob: -0.00782522652298212
    2. ' inverse' → logprob: -5.3828253746032715
    3. 'inv' → logprob: -6.1328253746032715
    4. 'in' → logprob: -7.3828253746032715
    5. '   ' → logprob: -8.632824897766113
    6. 'n' → logprob: -8.757824897766113
    7. 'result' → logprob: -10.507824897766113
    8. 'tail' → logprob: -11.632824897766113
    9. '_inverse' → logprob: -11.632824897766113
    10. ' ' → logprob: -11.757824897766113

Token 230: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.029772823676466942
    2. ' =' → logprob: -3.5297727584838867
    3. '=[' → logprob: -10.904772758483887
    4. '=[]' → logprob: -12.654772758483887
    5. '[' → logprob: -15.529772758483887
    6. ' =[' → logprob: -15.779772758483887
    7. '=[]
' → logprob: -16.154773712158203
    8. ']' → logprob: -16.404773712158203
    9. '   ' → logprob: -17.029773712158203
    10. '＝' → logprob: -17.404773712158203

Token 231: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0001238004770129919
    2. ' [' → logprob: -9.000123977661133
    3. '[len' → logprob: -16.000123977661133
    4. '[n' → logprob: -16.500123977661133
    5. '   ' → logprob: -16.625123977661133
    6. '[t' → logprob: -17.750123977661133
    7. '[p' → logprob: -18.375123977661133
    8. '[int' → logprob: -18.625123977661133
    9. '[val' → logprob: -18.875123977661133
    10. ' ' → logprob: -19.125123977661133

Token 232: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0280383548888494e-06
    2. '-' → logprob: -13.875000953674316
    3. 'None' → logprob: -17.875001907348633
    4. ' ' → logprob: -18.125001907348633
    5. '   ' → logprob: -18.625001907348633
    6. '۰' → logprob: -19.500001907348633
    7. '
' → logprob: -19.875001907348633
    8. '```' → logprob: -20.000001907348633
    9. '""' → logprob: -21.125001907348633
    10. ']' → logprob: -21.250001907348633

Token 233: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.11637628078460693
    2. ' for' → logprob: -2.7413763999938965
    3. 'for' → logprob: -3.6163763999938965
    4. ']*' → logprob: -3.9913763999938965
    5. ' ]' → logprob: -11.616375923156738
    6. '	for' → logprob: -11.991375923156738
    7. ']*(' → logprob: -12.491375923156738
    8. '   ' → logprob: -12.991375923156738
    9. ']int' → logprob: -14.366375923156738
    10. ' ' → logprob: -14.491375923156738

Token 234: ' *' (ID: 425)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6817631125450134
    2. 'for' → logprob: -1.0567631721496582
    3. ']' → logprob: -2.306763172149658
    4. ']*' → logprob: -3.056763172149658
    5. '	for' → logprob: -9.9317626953125
    6. ')' → logprob: -11.8067626953125
    7. ']*(' → logprob: -12.0567626953125
    8. '*' → logprob: -12.3067626953125
    9. ' ' → logprob: -13.3067626953125
    10. '   ' → logprob: -13.4317626953125

Token 235: ' taille' (ID: 41644)
  Prédit: 'tail'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tail' → logprob: -0.02977236546576023
    2. 'len' → logprob: -3.5297722816467285
    3. ' taille' → logprob: -11.279772758483887
    4. '(len' → logprob: -11.904772758483887
    5. ' len' → logprob: -14.029772758483887
    6. 'tails' → logprob: -14.654772758483887
    7. 't' → logprob: -14.904772758483887
    8. '(t' → logprob: -15.154772758483887
    9. 'ta' → logprob: -15.654772758483887
    10. 'tai' → logprob: -16.15477180480957

Token 236: '_per' (ID: 10938)
  Prédit: '_per'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_per' → logprob: -1.6240566083070007e-06
    2. 'per' → logprob: -13.375001907348633
    3. '_' → logprob: -16.875001907348633
    4. '_p' → logprob: -17.250001907348633
    5. '_PER' → logprob: -18.625001907348633
    6. 'Per' → logprob: -19.250001907348633
    7. '\' → logprob: -19.250001907348633
    8. '_de' → logprob: -19.500001907348633
    9. 't' → logprob: -19.750001907348633
    10. '	per' → logprob: -19.750001907348633

Token 237: 'mutation' (ID: 92896)
  Prédit: 'mutation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mutation' → logprob: -0.004127672873437405
    2. 'utation' → logprob: -5.504127502441406
    3. 'mut' → logprob: -10.129127502441406
    4. 'm' → logprob: -12.379127502441406
    5. 'mission' → logprob: -13.879127502441406
    6. 'Mutation' → logprob: -14.379127502441406
    7. 'mu' → logprob: -14.754127502441406
    8. ' mutation' → logprob: -15.004127502441406
    9. 'putation' → logprob: -15.254127502441406
    10. '```' → logprob: -15.379127502441406

Token 238: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.018514765426516533
    2. ' for' → logprob: -4.768514633178711
    3. 'for' → logprob: -5.143514633178711
    4. '  
' → logprob: -6.143514633178711
    5. '
' → logprob: -7.643514633178711
    6. '<|end|>' → logprob: -7.768514633178711
    7. '\n' → logprob: -8.268514633178711
    8. '   ' → logprob: -8.643514633178711
    9. '    
' → logprob: -8.768514633178711
    10. ' 
' → logprob: -8.768514633178711

Token 239: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.590415358543396
    2. ' for' → logprob: -1.215415358543396
    3. 'for' → logprob: -2.2154154777526855
    4. '   ' → logprob: -3.5904154777526855
    5. '    
' → logprob: -5.3404154777526855
    6. '  
' → logprob: -5.3404154777526855
    7. ' 
' → logprob: -6.9654154777526855
    8. '	for' → logprob: -6.9654154777526855
    9. '\n' → logprob: -7.8404154777526855
    10. '
' → logprob: -8.340415000915527

Token 240: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.008658897131681442
    2. ' for' → logprob: -4.7586588859558105
    3. 'i' → logprob: -10.633659362792969
    4. '   ' → logprob: -11.133659362792969
    5. '	for' → logprob: -12.383659362792969
    6. 'indice' → logprob: -14.133659362792969
    7. ' i' → logprob: -14.633659362792969
    8. ')' → logprob: -15.883659362792969
    9. ' ' → logprob: -16.63365936279297
    10. '```' → logprob: -17.00865936279297

Token 241: ' position' (ID: 4010)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.140228733420372
    2. 'indice' → logprob: -2.640228748321533
    3. ' i' → logprob: -2.890228748321533
    4. 'index' → logprob: -5.640228748321533
    5. ' indice' → logprob: -8.390228271484375
    6. ' index' → logprob: -9.015228271484375
    7. 'idx' → logprob: -10.890228271484375
    8. 'ind' → logprob: -11.890228271484375
    9. 'position' → logprob: -12.640228271484375
    10. ' ' → logprob: -14.140228271484375

Token 242: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.041190940886735916
    2. 'in' → logprob: -3.7911908626556396
    3. ',' → logprob: -4.041191101074219
    4. 'dans' → logprob: -8.916191101074219
    5. ' ' → logprob: -10.791191101074219
    6. 'en' → logprob: -11.541191101074219
    7. ',in' → logprob: -11.666191101074219
    8. ' dans' → logprob: -11.666191101074219
    9. '	in' → logprob: -12.041191101074219
    10. ' ,' → logprob: -12.416191101074219

Token 243: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0002614550176076591
    2. ' range' → logprob: -8.250261306762695
    3. 'rang' → logprob: -16.875261306762695
    4. '	range' → logprob: -18.875261306762695
    5. '
' → logprob: -19.000261306762695
    6. '(range' → logprob: -19.250261306762695
    7. '   ' → logprob: -20.000261306762695
    8. '

' → logprob: -20.125261306762695
    9. ' ' → logprob: -20.500261306762695
    10. 'ra' → logprob: -21.750261306762695

Token 244: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.035245224833488464
    2. 'tail' → logprob: -3.410245180130005
    3. 't' → logprob: -6.785245418548584
    4. ' taille' → logprob: -8.660244941711426
    5. '(' → logprob: -8.910244941711426
    6. '	t' → logprob: -9.410244941711426
    7. '   ' → logprob: -9.910244941711426
    8. 'len' → logprob: -11.910244941711426
    9. ' (' → logprob: -12.160244941711426
    10. '(len' → logprob: -12.160244941711426

Token 245: 'aille' (ID: 44714)
  Prédit: 'aille'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aille' → logprob: -0.2050224244594574
    2. 'tail' → logprob: -1.8300224542617798
    3. 'ail' → logprob: -3.7050223350524902
    4. 'a' → logprob: -8.205022811889648
    5. '[' → logprob: -10.955022811889648
    6. 'ai' → logprob: -11.205022811889648
    7. '_tail' → logprob: -11.955022811889648
    8. '#' → logprob: -12.080022811889648
    9. 'aise' → logprob: -12.205022811889648
    10. '_' → logprob: -12.330022811889648

Token 246: '_per' (ID: 10938)
  Prédit: '_per'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_per' → logprob: -2.927930654550437e-05
    2. 'per' → logprob: -10.500029563903809
    3. '_de' → logprob: -13.750029563903809
    4. '_p' → logprob: -15.250029563903809
    5. 's' → logprob: -16.000028610229492
    6. '_perm' → logprob: -16.125028610229492
    7. 't' → logprob: -17.000028610229492
    8. '_' → logprob: -17.125028610229492
    9. '_par' → logprob: -17.125028610229492
    10. '	per' → logprob: -17.250028610229492

Token 247: 'mutation' (ID: 92896)
  Prédit: 'utation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'utation' → logprob: -0.47423386573791504
    2. 'mutation' → logprob: -0.974233865737915
    3. 'lation' → logprob: -9.474233627319336
    4. 'ution' → logprob: -10.849233627319336
    5. '_mut' → logprob: -11.099233627319336
    6. 'mut' → logprob: -11.474233627319336
    7. 'Mutation' → logprob: -11.974233627319336
    8. 'ation' → logprob: -12.599233627319336
    9. 'uation' → logprob: -12.599233627319336
    10. 'm' → logprob: -12.599233627319336

Token 248: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.693215012550354
    2. '):' → logprob: -0.693215012550354
    3. '):
' → logprob: -10.568215370178223
    4. ')' → logprob: -10.943215370178223
    5. '   ' → logprob: -11.818215370178223
    6. ':' → logprob: -12.068215370178223
    7. ']:' → logprob: -12.193215370178223
    8. '):

' → logprob: -13.068215370178223
    9. ':
' → logprob: -13.818215370178223
    10. ']:
' → logprob: -14.068215370178223

Token 249: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5217152237892151
    2. 'result' → logprob: -1.3967151641845703
    3. ' result' → logprob: -2.3967151641845703
    4. 'per' → logprob: -3.7717151641845703
    5. '[result' → logprob: -4.27171516418457
    6. '=result' → logprob: -4.39671516418457
    7. ' resultat' → logprob: -5.14671516418457
    8. '	result' → logprob: -5.64671516418457
    9. '	per' → logprob: -5.89671516418457
    10. '       ' → logprob: -6.14671516418457

Token 250: ' resultat' (ID: 67404)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: 0.0
    2. '   ' → logprob: -17.25
    3. '=result' → logprob: -17.25
    4. '[result' → logprob: -17.375
    5. ' result' → logprob: -17.75
    6. ' resultat' → logprob: -17.75
    7. 'resultado' → logprob: -18.125
    8. '```' → logprob: -19.75
    9. '	result' → logprob: -19.75
    10. '       ' → logprob: -19.75

Token 251: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.263011578586884e-05
    2. 'per' → logprob: -10.250042915344238
    3. '[
' → logprob: -12.750042915344238
    4. '[...]' → logprob: -13.625042915344238
    5. ' [' → logprob: -13.875042915344238
    6. '[position' → logprob: -15.000042915344238
    7. '=' → logprob: -15.125042915344238
    8. ']' → logprob: -15.625042915344238
    9. '[p' → logprob: -15.750042915344238
    10. '[int' → logprob: -15.875042915344238

Token 252: 'per' (ID: 543)
  Prédit: 'per'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'per' → logprob: -8.061054359131958e-06
    2. '[' → logprob: -12.250007629394531
    3. 'position' → logprob: -13.375007629394531
    4. ' permutation' → logprob: -14.125007629394531
    5. ']' → logprob: -15.375007629394531
    6. 'perm' → logprob: -15.875007629394531
    7. '(per' → logprob: -16.00000762939453
    8. '
' → logprob: -16.25000762939453
    9. '	per' → logprob: -16.87500762939453
    10. 'pre' → logprob: -17.00000762939453

Token 253: 'mutation' (ID: 92896)
  Prédit: 'mutation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mutation' → logprob: -0.0011822503292933106
    2. 'mission' → logprob: -7.7511820793151855
    3. 'position' → logprob: -8.126182556152344
    4. 'utation' → logprob: -8.876182556152344
    5. 'r' → logprob: -9.126182556152344
    6. 'mut' → logprob: -9.751182556152344
    7. 'm' → logprob: -10.126182556152344
    8. '[' → logprob: -10.501182556152344
    9. ']' → logprob: -10.751182556152344
    10. '```' → logprob: -11.376182556152344

Token 254: '[position' (ID: 75596)
  Prédit: '[position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[position' → logprob: -2.816093228830141e-06
    2. 'position' → logprob: -12.87500286102295
    3. '(position' → logprob: -16.375001907348633
    4. '[' → logprob: -16.875001907348633
    5. '[pos' → logprob: -17.375001907348633
    6. ']' → logprob: -19.375001907348633
    7. '[
' → logprob: -20.250001907348633
    8. ' [' → logprob: -20.250001907348633
    9. '	position' → logprob: -20.375001907348633
    10. '```' → logprob: -20.500001907348633

Token 255: ']]' (ID: 8928)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -2.248469718324486e-05
    2. ']=' → logprob: -10.875022888183594
    3. ']]' → logprob: -13.125022888183594
    4. ')]' → logprob: -14.250022888183594
    5. ' ]' → logprob: -14.250022888183594
    6. ')' → logprob: -16.250022888183594
    7. '[' → logprob: -17.375022888183594
    8. ']
' → logprob: -17.750022888183594
    9. ']==' → logprob: -17.750022888183594
    10. ']]=' → logprob: -18.000022888183594

Token 256: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0019289902411401272
    2. ' =' → logprob: -6.251928806304932
    3. ']' → logprob: -15.37692928314209
    4. ']=' → logprob: -16.126928329467773
    5. '=
' → logprob: -17.501928329467773
    6. '=int' → logprob: -18.126928329467773
    7. '=

' → logprob: -18.626928329467773
    8. ')' → logprob: -19.251928329467773
    9. ')=' → logprob: -19.626928329467773
    10. '=}' → logprob: -19.751928329467773

Token 257: ' position' (ID: 4010)
  Prédit: 'position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'position' → logprob: -0.0004309076175559312
    2. ' position' → logprob: -7.750431060791016
    3. 'pos' → logprob: -16.000431060791016
    4. '[position' → logprob: -17.750431060791016
    5. '	position' → logprob: -18.125431060791016
    6. '(position' → logprob: -18.500431060791016
    7. 'posit' → logprob: -19.125431060791016
    8. '   ' → logprob: -19.250431060791016
    9. ' ' → logprob: -20.375431060791016
    10. 'post' → logprob: -21.875431060791016

Token 258: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00405097147449851
    2. ' return' → logprob: -6.379051208496094
    3. 'return' → logprob: -6.504051208496094
    4. '
' → logprob: -7.504051208496094
    5. '    
' → logprob: -8.629051208496094
    6. '	return' → logprob: -10.379051208496094
    7. '  
' → logprob: -10.504051208496094
    8. ' 
' → logprob: -11.129051208496094
    9. ' ' → logprob: -11.379051208496094
    10. ':return' → logprob: -11.754051208496094

Token 259: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0023871837183833122
    2. ' return' → logprob: -6.627387046813965
    3. 'return' → logprob: -6.877387046813965
    4. '	return' → logprob: -11.752387046813965
    5. ' ' → logprob: -12.002387046813965
    6. '    
' → logprob: -12.252387046813965
    7. ':return' → logprob: -12.877387046813965
    8. '   ' → logprob: -13.127387046813965
    9. '
' → logprob: -13.252387046813965
    10. ',' → logprob: -14.127387046813965

Token 260: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.19180403649806976
    2. '   ' → logprob: -2.4418039321899414
    3. ' return' → logprob: -2.4418039321899414
    4. '	return' → logprob: -8.191803932189941
    5. ' ' → logprob: -8.816803932189941
    6. '
' → logprob: -10.191803932189941
    7. ':return' → logprob: -11.441803932189941
    8. '    
' → logprob: -11.566803932189941
    9. ' 
' → logprob: -11.566803932189941
    10. ' ' → logprob: -12.316803932189941

Token 261: ' resultat' (ID: 67404)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.3869014084339142
    2. ' resultat' → logprob: -1.1369013786315918
    3. ' result' → logprob: -11.01190185546875
    4. '[result' → logprob: -12.26190185546875
    5. ' résultat' → logprob: -12.51190185546875
    6. 'res' → logprob: -12.88690185546875
    7. '(result' → logprob: -14.76190185546875
    8. '_result' → logprob: -14.88690185546875
    9. 'resultado' → logprob: -15.26190185546875
    10. ' ' → logprob: -15.26190185546875

Token 262: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.14037595689296722
    2. '<|end|>' → logprob: -2.265375852584839
    3. '\n' → logprob: -4.265376091003418
    4. '

' → logprob: -5.265376091003418
    5. '#' → logprob: -5.765376091003418
    6. '  
' → logprob: -7.140376091003418
    7. 'newline' → logprob: -7.140376091003418
    8. '<|end|>' → logprob: -7.390376091003418
    9. '\' → logprob: -7.515376091003418
    10. '' → logprob: -8.265376091003418

Token 263: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.003313884837552905
    2. 'per' → logprob: -6.503314018249512
    3. 'def' → logprob: -6.503314018249512
    4. 'for' → logprob: -8.378314018249512
    5. '<|end|>' → logprob: -10.003314018249512
    6. '```' → logprob: -11.378314018249512
    7. ')' → logprob: -12.378314018249512
    8. ']' → logprob: -12.503314018249512
    9. '
' → logprob: -12.753314018249512
    10. '[' → logprob: -13.003314018249512

Token 264: ' Construction' (ID: 31452)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.0663854256272316
    2. 'def' → logprob: -3.066385507583618
    3. 'for' → logprob: -4.066385269165039
    4. 'per' → logprob: -8.316385269165039
    5. 'p' → logprob: -9.566385269165039
    6. '(' → logprob: -10.566385269165039
    7. '[' → logprob: -10.566385269165039
    8. ' for' → logprob: -10.691385269165039
    9. 'import' → logprob: -11.066385269165039
    10. ']' → logprob: -11.066385269165039

Token 265: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.09836950898170471
    2. 'for' → logprob: -3.348369598388672
    3. ' for' → logprob: -3.973369598388672
    4. 'des' → logprob: -4.223369598388672
    5. ' de' → logprob: -4.348369598388672
    6. '#' → logprob: -4.598369598388672
    7. 'de' → logprob: -7.223369598388672
    8. 'def' → logprob: -7.848369598388672
    9. '[' → logprob: -8.098369598388672
    10. '_des' → logprob: -8.223369598388672

Token 266: ' permutations' (ID: 174595)
  Prédit: 'per'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'per' → logprob: -0.6498982310295105
    2. ' permutations' → logprob: -1.5248982906341553
    3. '#' → logprob: -2.5248982906341553
    4. '[
' → logprob: -2.7748982906341553
    5. 'com' → logprob: -2.8998982906341553
    6. '[' → logprob: -3.2748982906341553
    7. 'def' → logprob: -5.274898052215576
    8. 'multip' → logprob: -5.399898052215576
    9. ']' → logprob: -6.399898052215576
    10. 'for' → logprob: -6.399898052215576

Token 267: ' success' (ID: 3505)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.7605841755867004
    2. '_com' → logprob: -1.2605841159820557
    3. '[' → logprob: -1.7605841159820557
    4. 'for' → logprob: -2.8855841159820557
    5. '[
' → logprob: -5.385584354400635
    6. ' supplémentaires' → logprob: -5.385584354400635
    7. 'def' → logprob: -6.135584354400635
    8. 'import' → logprob: -6.760584354400635
    9. ' suivantes' → logprob: -6.760584354400635
    10. ' for' → logprob: -6.885584354400635

Token 268: 'ives' (ID: 2264)
  Prédit: 'ives'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ives' → logprob: -0.33947643637657166
    2. 'entes' → logprob: -1.589476466178894
    3. 'ves' → logprob: -3.0894763469696045
    4. 'atives' → logprob: -3.5894763469696045
    5. 'ées' → logprob: -6.214476585388184
    6. 'ivement' → logprob: -6.464476585388184
    7. '#' → logprob: -6.589476585388184
    8. 't' → logprob: -6.964476585388184
    9. 'v' → logprob: -7.339476585388184
    10. 'ales' → logprob: -7.839476585388184

Token 269: ' par' (ID: 686)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0413760244846344
    2. 'per' → logprob: -3.5413761138916016
    3. ' for' → logprob: -5.291376113891602
    4. '#' → logprob: -5.541376113891602
    5. '[' → logprob: -6.916376113891602
    6. '[
' → logprob: -7.416376113891602
    7. 'def' → logprob: -8.291376113891602
    8. '
' → logprob: -8.541376113891602
    9. ':' → logprob: -8.541376113891602
    10. ']' → logprob: -8.791376113891602

Token 270: ' composition' (ID: 27524)
  Prédit: 'composition'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'composition' → logprob: -0.9998124837875366
    2. ' composition' → logprob: -1.7498124837875366
    3. 'com' → logprob: -2.624812602996826
    4. 'range' → logprob: -2.624812602996826
    5. ' range' → logprob: -2.874812602996826
    6. 'i' → logprob: -3.249812602996826
    7. ' concat' → logprob: -3.249812602996826
    8. 'concat' → logprob: -3.374812602996826
    9. ' multiplication' → logprob: -3.624812602996826
    10. 'indice' → logprob: -4.124812602996826

Token 271: ' altern' (ID: 7310)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0353325717151165
    2. 'per' → logprob: -3.535332679748535
    3. ' for' → logprob: -6.535332679748535
    4. '#' → logprob: -7.160332679748535
    5. 'def' → logprob: -7.160332679748535
    6. '[
' → logprob: -7.285332679748535
    7. '
' → logprob: -7.410332679748535
    8. '(
' → logprob: -8.035332679748535
    9. '[' → logprob: -8.160332679748535
    10. ']' → logprob: -9.160332679748535

Token 272: 'ée' (ID: 2894)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.5834512114524841
    2. 'ée' → logprob: -2.458451271057129
    3. 'ance' → logprob: -2.458451271057129
    4. 'ative' → logprob: -2.583451271057129
    5. 'ativement' → logprob: -2.583451271057129
    6. 'ation' → logprob: -3.083451271057129
    7. '   ' → logprob: -3.833451271057129
    8. 'atif' → logprob: -4.458451271057129
    9. 'er' → logprob: -5.083451271057129
    10. 'é' → logprob: -5.208451271057129

Token 273: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0035049226135015488
    2. ' for' → logprob: -6.253504753112793
    3. 'per' → logprob: -6.628504753112793
    4. '#' → logprob: -9.253504753112793
    5. '
' → logprob: -9.753504753112793
    6. 'def' → logprob: -11.128504753112793
    7. ':' → logprob: -11.378504753112793
    8. 'i' → logprob: -11.503504753112793
    9. ',
' → logprob: -11.878504753112793
    10. '(
' → logprob: -11.878504753112793

Token 274: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0013804715126752853
    2. 'per' → logprob: -7.001380443572998
    3. 'i' → logprob: -8.126380920410156
    4. ' for' → logprob: -9.001380920410156
    5. '#' → logprob: -11.001380920410156
    6. 'def' → logprob: -11.376380920410156
    7. '```' → logprob: -12.376380920410156
    8. '[' → logprob: -13.001380920410156
    9. 'indice' → logprob: -13.001380920410156
    10. 'com' → logprob: -13.251380920410156

Token 275: ' indice' (ID: 90848)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.09353864192962646
    2. 'i' → logprob: -2.593538761138916
    3. ' operation' → logprob: -4.593538761138916
    4. 'operation' → logprob: -6.718538761138916
    5. ' iteration' → logprob: -7.218538761138916
    6. ' étape' → logprob: -8.468538284301758
    7. ' ' → logprob: -8.468538284301758
    8. ' _' → logprob: -8.468538284301758
    9. ' index' → logprob: -8.593538284301758
    10. 'indice' → logprob: -8.718538284301758

Token 276: '_et' (ID: 103440)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.007259924430400133
    2. 'in' → logprob: -5.007259845733643
    3. ' ' → logprob: -7.632259845733643
    4. '_' → logprob: -10.8822603225708
    5. 'dans' → logprob: -11.5072603225708
    6. 'de' → logprob: -11.7572603225708
    7. 'en' → logprob: -12.1322603225708
    8. ' ' → logprob: -12.3822603225708
    9. 'range' → logprob: -12.6322603225708
    10. ',' → logprob: -13.6322603225708

Token 277: 'ape' (ID: 2480)
  Prédit: 'ape'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ape' → logprob: -0.015661489218473434
    2. 'range' → logprob: -4.890661716461182
    3. '=' → logprob: -5.890661716461182
    4. 'apes' → logprob: -6.515661716461182
    5. ' =' → logprob: -6.890661716461182
    6. 'age' → logprob: -7.890661716461182
    7. 'ap' → logprob: -7.890661716461182
    8. 'a' → logprob: -8.515661239624023
    9. 'i' → logprob: -8.640661239624023
    10. 'p' → logprob: -8.765661239624023

Token 278: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0022926367819309235
    2. 'in' → logprob: -6.127292633056641
    3. ' ' → logprob: -9.25229263305664
    4. ' ' → logprob: -12.12729263305664
    5. 'range' → logprob: -13.37729263305664
    6. '_' → logprob: -13.87729263305664
    7. ',' → logprob: -14.12729263305664
    8. 'en' → logprob: -14.75229263305664
    9. '1' → logprob: -14.87729263305664
    10. 's' → logprob: -14.87729263305664

Token 279: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.6931536197662354
    2. 'range' → logprob: -0.6931536197662354
    3. ' ' → logprob: -12.943153381347656
    4. '	range' → logprob: -13.568153381347656
    5. '[' → logprob: -13.693153381347656
    6. '(range' → logprob: -14.193153381347656
    7. '   ' → logprob: -14.693153381347656
    8. '  ' → logprob: -15.568153381347656
    9. ' ' → logprob: -16.068153381347656
    10. 'rang' → logprob: -16.818153381347656

Token 280: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -5.848420551046729e-05
    2. '(nombre' → logprob: -10.1250581741333
    3. ' (' → logprob: -11.2500581741333
    4. 'nombre' → logprob: -12.8750581741333
    5. '1' → logprob: -13.3750581741333
    6. '2' → logprob: -13.8750581741333
    7. ' ' → logprob: -16.000059127807617
    8. ' nombre' → logprob: -16.500059127807617
    9. '(
' → logprob: -17.375059127807617
    10. '   ' → logprob: -17.625059127807617

Token 281: '4' (ID: 19)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.000890259922016412
    2. '1' → logprob: -7.750890254974365
    3. ' ' → logprob: -7.750890254974365
    4. 'nombre' → logprob: -10.750890731811523
    5. '   ' → logprob: -12.750890731811523
    6. '(' → logprob: -13.500890731811523
    7. '  ' → logprob: -14.125890731811523
    8. '
' → logprob: -14.375890731811523
    9. '3' → logprob: -14.375890731811523
    10. '    ' → logprob: -15.000890731811523

Token 282: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.06509169191122055
    2. '):
' → logprob: -2.815091609954834
    3. ' ):' → logprob: -5.815091609954834
    4. ' ):
' → logprob: -9.315092086791992
    5. ')' → logprob: -10.690092086791992
    6. '):
' → logprob: -11.065092086791992
    7. '+' → logprob: -12.940092086791992
    8. ',' → logprob: -13.315092086791992
    9. ':' → logprob: -13.690092086791992
    10. '-' → logprob: -14.315092086791992

Token 283: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002302270382642746
    2. '    
' → logprob: -6.502302169799805
    3. ':' → logprob: -7.877302169799805
    4. '	per' → logprob: -9.627302169799805
    5. ' ind' → logprob: -9.752302169799805
    6. '   ' → logprob: -10.127302169799805
    7. '```' → logprob: -10.252302169799805
    8. ' :' → logprob: -10.377302169799805
    9. 'per' → logprob: -10.502302169799805
    10. '\t' → logprob: -10.752302169799805

Token 284: ' permutation' (ID: 135200)
  Prédit: 'per'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'per' → logprob: -0.16608312726020813
    2. '   ' → logprob: -2.0410830974578857
    3. ' permutations' → logprob: -4.291083335876465
    4. 'if' → logprob: -4.916083335876465
    5. 'com' → logprob: -6.916083335876465
    6. ' if' → logprob: -8.041083335876465
    7. '	per' → logprob: -8.666083335876465
    8. ' perm' → logprob: -9.041083335876465
    9. 'perm' → logprob: -9.666083335876465
    10. '    
' → logprob: -9.666083335876465

Token 285: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -1.1567052602767944
    2. '_com' → logprob: -1.9067052602767944
    3. '_act' → logprob: -2.156705379486084
    4. ' =' → logprob: -2.281705379486084
    5. '=' → logprob: -2.281705379486084
    6. '_comp' → logprob: -2.906705379486084
    7. 'su' → logprob: -3.281705379486084
    8. '_pr' → logprob: -3.531705379486084
    9. 's' → logprob: -3.531705379486084
    10. '_' → logprob: -4.281705379486084

Token 286: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.08782488852739334
    2. 'ource' → logprob: -3.462824821472168
    3. 'uccess' → logprob: -3.962824821472168
    4. '=' → logprob: -4.087824821472168
    5. ' =' → logprob: -4.587824821472168
    6. 'ucc' → logprob: -6.587824821472168
    7. 'preced' → logprob: -7.087824821472168
    8. '_act' → logprob: -7.337824821472168
    9. ' suivante' → logprob: -7.962824821472168
    10. 'cour' → logprob: -8.462824821472168

Token 287: 'iv' (ID: 349)
  Prédit: 'iv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iv' → logprob: -0.026233993470668793
    2. 'ccess' → logprob: -4.526234149932861
    3. 'cces' → logprob: -5.651234149932861
    4. 'cc' → logprob: -5.776234149932861
    5. 'ivant' → logprob: -6.401234149932861
    6. 'c' → logprob: -6.526234149932861
    7. 'ivée' → logprob: -6.776234149932861
    8. 'cee' → logprob: -7.276234149932861
    9. 'ite' → logprob: -7.526234149932861
    10. 'p' → logprob: -7.526234149932861

Token 288: 'ante' (ID: 2116)
  Prédit: 'ee'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ee' → logprob: -0.58183354139328
    2. 'e' → logprob: -0.95683354139328
    3. ' =' → logprob: -3.581833600997925
    4. 'ée' → logprob: -4.081833362579346
    5. 'ante' → logprob: -5.831833362579346
    6. '[' → logprob: -6.831833362579346
    7. '   ' → logprob: -6.831833362579346
    8. 'ente' → logprob: -6.956833362579346
    9. '=' → logprob: -6.956833362579346
    10. 'es' → logprob: -6.956833362579346

Token 289: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023247575387358665
    2. '=' → logprob: -3.773247480392456
    3. ' ' → logprob: -14.398247718811035
    4. ' ' → logprob: -14.773247718811035
    5. '_' → logprob: -15.148247718811035
    6. 's' → logprob: -15.898247718811035
    7. '[' → logprob: -16.02324676513672
    8. ']' → logprob: -16.02324676513672
    9. ' =
' → logprob: -16.52324676513672
    10. ' =[' → logprob: -16.52324676513672

Token 290: ' appliquer' (ID: 172872)
  Prédit: 'ap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ap' → logprob: -0.9215388894081116
    2. '[' → logprob: -1.1715388298034668
    3. '[
' → logprob: -1.6715388298034668
    4. ' appliquer' → logprob: -2.421538829803467
    5. ' [' → logprob: -4.796538829803467
    6. ' [
' → logprob: -6.296538829803467
    7. '[]
' → logprob: -6.546538829803467
    8. '   ' → logprob: -6.796538829803467
    9. '[]' → logprob: -6.921538829803467
    10. 'app' → logprob: -7.796538829803467

Token 291: '_per' (ID: 10938)
  Prédit: '_per'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_per' → logprob: -0.00026419671485200524
    2. 'per' → logprob: -8.625264167785645
    3. '(per' → logprob: -10.000264167785645
    4. '_' → logprob: -10.500264167785645
    5. '_com' → logprob: -11.875264167785645
    6. '_par' → logprob: -13.250264167785645
    7. '	per' → logprob: -14.000264167785645
    8. '_p' → logprob: -14.875264167785645
    9. '(' → logprob: -15.250264167785645
    10. '\' → logprob: -15.375264167785645

Token 292: 'mutation' (ID: 92896)
  Prédit: 'mutation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mutation' → logprob: -0.007505821529775858
    2. 'utation' → logprob: -5.132505893707275
    3. 'mut' → logprob: -6.507505893707275
    4. '_mut' → logprob: -10.007505416870117
    5. 'm' → logprob: -11.882505416870117
    6. 'mission' → logprob: -12.132505416870117
    7. 'ut' → logprob: -12.257505416870117
    8. '[' → logprob: -13.007505416870117
    9. '```' → logprob: -13.007505416870117
    10. '(' → logprob: -13.632505416870117

Token 293: '(
' (ID: 1607)
  Prédit: '(per'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(per' → logprob: -0.028626052662730217
    2. '(p' → logprob: -4.153625965118408
    3. '(' → logprob: -5.153625965118408
    4. '(
' → logprob: -5.403625965118408
    5. 'per' → logprob: -6.153625965118408
    6. 'p' → logprob: -9.903626441955566
    7. ' (' → logprob: -10.653626441955566
    8. '(

' → logprob: -12.028626441955566
    9. '(par' → logprob: -12.278626441955566
    10. '
' → logprob: -12.653626441955566

Token 294: '       ' (ID: 309)
  Prédit: 'per'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'per' → logprob: -0.00024048985505942255
    2. ' permutations' → logprob: -9.375240325927734
    3. '(per' → logprob: -9.375240325927734
    4. '   ' → logprob: -10.375240325927734
    5. '	per' → logprob: -11.250240325927734
    6. 'perm' → logprob: -11.375240325927734
    7. '
' → logprob: -12.375240325927734
    8. ')' → logprob: -12.500240325927734
    9. ' per' → logprob: -13.125240325927734
    10. ',' → logprob: -13.750240325927734

Token 295: ' permutations' (ID: 174595)
  Prédit: 'per'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'per' → logprob: -0.00042030587792396545
    2. '(per' → logprob: -8.625420570373535
    3. '   ' → logprob: -9.250420570373535
    4. ' permutations' → logprob: -9.375420570373535
    5. '
' → logprob: -10.625420570373535
    6. '	per' → logprob: -10.875420570373535
    7. 'perm' → logprob: -12.375420570373535
    8. 'prem' → logprob: -13.000420570373535
    9. '       ' → logprob: -13.125420570373535
    10. '(
' → logprob: -13.875420570373535

Token 296: '_com' (ID: 10828)
  Prédit: '_com'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_com' → logprob: -3.8889261304575484e-06
    2. 'com' → logprob: -12.750003814697266
    3. '_con' → logprob: -14.625003814697266
    4. '[' → logprob: -15.250003814697266
    5. 's' → logprob: -15.625003814697266
    6. '=com' → logprob: -16.625003814697266
    7. '   ' → logprob: -17.750003814697266
    8. '<com' → logprob: -18.250003814697266
    9. '.com' → logprob: -18.375003814697266
    10. ' ' → logprob: -18.375003814697266

Token 297: 'pos' (ID: 1103)
  Prédit: 'pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.011889987625181675
    2. 'os' → logprob: -4.511889934539795
    3. 'p' → logprob: -8.011890411376953
    4. 'pose' → logprob: -8.636890411376953
    5. 'post' → logprob: -9.386890411376953
    6. '[' → logprob: -10.261890411376953
    7. 'poss' → logprob: -10.636890411376953
    8. 'posé' → logprob: -10.636890411376953
    9. '_pos' → logprob: -11.011890411376953
    10. 'op' → logprob: -11.261890411376953

Token 298: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.003673352301120758
    2. 'ée' → logprob: -6.253673553466797
    3. 'es' → logprob: -6.503673553466797
    4. 't' → logprob: -9.503673553466797
    5. 'é' → logprob: -10.003673553466797
    6. '[' → logprob: -10.003673553466797
    7. '#' → logprob: -10.878673553466797
    8. 'É' → logprob: -11.503673553466797
    9. 'és' → logprob: -12.253673553466797
    10. '_' → logprob: -12.253673553466797

Token 299: '[ind' (ID: 68064)
  Prédit: '[ind'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[ind' → logprob: -0.00016671013145241886
    2. '[' → logprob: -9.125166893005371
    3. '[-' → logprob: -10.250166893005371
    4. '[in' → logprob: -12.250166893005371
    5. 'indice' → logprob: -12.250166893005371
    6. '[(' → logprob: -12.500166893005371
    7. '[
' → logprob: -12.625166893005371
    8. '[idx' → logprob: -13.375166893005371
    9. '[index' → logprob: -14.125166893005371
    10. '
' → logprob: -14.750166893005371

Token 300: 'ice' (ID: 603)
  Prédit: 'ice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ice' → logprob: -0.0017353941220790148
    2. 'ex' → logprob: -6.376735210418701
    3. '[' → logprob: -11.75173568725586
    4. '#' → logprob: -12.75173568725586
    5. 'exe' → logprob: -13.12673568725586
    6. 'ce' → logprob: -13.25173568725586
    7. '
' → logprob: -13.37673568725586
    8. 'i' → logprob: -13.37673568725586
    9. 'e' → logprob: -13.62673568725586
    10. '>' → logprob: -13.62673568725586

Token 301: '_et' (ID: 103440)
  Prédit: '_et'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_et' → logprob: -0.006703054532408714
    2. '+' → logprob: -5.631702899932861
    3. 'et' → logprob: -5.881702899932861
    4. 'e' → logprob: -8.75670337677002
    5. ']' → logprob: -10.75670337677002
    6. ' +' → logprob: -10.88170337677002
    7. '_' → logprob: -10.88170337677002
    8. ' et' → logprob: -11.00670337677002
    9. 'es' → logprob: -12.00670337677002
    10. '_e' → logprob: -12.13170337677002

Token 302: 'ape' (ID: 2480)
  Prédit: 'ape'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ape' → logprob: -0.006007359828799963
    2. 'pe' → logprob: -5.131007194519043
    3. 'me' → logprob: -11.006007194519043
    4. 'ype' → logprob: -11.381007194519043
    5. 'p' → logprob: -11.881007194519043
    6. 'indice' → logprob: -11.881007194519043
    7. 'ale' → logprob: -12.006007194519043
    8. ']' → logprob: -12.381007194519043
    9. 'te' → logprob: -12.506007194519043
    10. 'ipe' → logprob: -12.631007194519043

Token 303: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.411751389503479
    2. '],' → logprob: -1.411751389503479
    3. ' +' → logprob: -2.5367512702941895
    4. '],
' → logprob: -4.5367512702941895
    5. '-' → logprob: -6.7867512702941895
    6. '   ' → logprob: -7.2867512702941895
    7. '[ind' → logprob: -7.4117512702941895
    8. '[' → logprob: -8.036751747131348
    9. ']' → logprob: -8.161751747131348
    10. ' ' → logprob: -8.411751747131348

Token 304: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0013173815095797181
    2. '0' → logprob: -6.751317501068115
    3. ' ' → logprob: -8.876317024230957
    4. '2' → logprob: -12.501317024230957
    5. '   ' → logprob: -12.751317024230957
    6. '  ' → logprob: -14.876317024230957
    7. '
' → logprob: -16.376317977905273
    8. '    ' → logprob: -16.501317977905273
    9. '     ' → logprob: -17.126317977905273
    10. '	' → logprob: -17.751317977905273

Token 305: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003360582049936056
    2. ' ' → logprob: -8.875335693359375
    3. '2' → logprob: -9.000335693359375
    4. '0' → logprob: -9.625335693359375
    5. '   ' → logprob: -12.125335693359375
    6. '  ' → logprob: -14.687835693359375
    7. '
' → logprob: -15.812835693359375
    8. '    ' → logprob: -16.125335693359375
    9. '	' → logprob: -16.250335693359375
    10. '     ' → logprob: -16.625335693359375

Token 306: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.002792991930618882
    2. '],
' → logprob: -6.002792835235596
    3. ']' → logprob: -8.127793312072754
    4. ' ],' → logprob: -11.377793312072754
    5. '],

' → logprob: -12.252793312072754
    6. '],
' → logprob: -13.127793312072754
    7. ',' → logprob: -13.377793312072754
    8. '],[' → logprob: -14.252793312072754
    9. '   ' → logprob: -14.877793312072754
    10. ' ' → logprob: -15.252793312072754

Token 307: ' 
' (ID: 793)
  Prédit: 'per'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'per' → logprob: -0.003971778322011232
    2. ' permutations' → logprob: -5.628971576690674
    3. '   ' → logprob: -8.378972053527832
    4. 'perm' → logprob: -9.878972053527832
    5. '	per' → logprob: -10.253972053527832
    6. '       ' → logprob: -11.628972053527832
    7. 'prem' → logprob: -11.878972053527832
    8. ' perm' → logprob: -12.003972053527832
    9. '
' → logprob: -12.128972053527832
    10. '           ' → logprob: -12.378972053527832

Token 308: '       ' (ID: 309)
  Prédit: 'per'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'per' → logprob: -0.0003037650021724403
    2. ' permutations' → logprob: -8.375304222106934
    3. '   ' → logprob: -10.125304222106934
    4. 'perm' → logprob: -11.250304222106934
    5. 'prem' → logprob: -11.375304222106934
    6. '       ' → logprob: -12.875304222106934
    7. '	per' → logprob: -13.000304222106934
    8. '           ' → logprob: -13.375304222106934
    9. ' perm' → logprob: -15.125304222106934
    10. '               ' → logprob: -15.125304222106934

Token 309: ' inverse' (ID: 53743)
  Prédit: 'per'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'per' → logprob: -0.0010719887213781476
    2. ' permutations' → logprob: -7.126071929931641
    3. '   ' → logprob: -8.50107192993164
    4. 'perm' → logprob: -10.87607192993164
    5. '	per' → logprob: -10.87607192993164
    6. '       ' → logprob: -11.50107192993164
    7. '           ' → logprob: -12.62607192993164
    8. ' perm' → logprob: -13.25107192993164
    9. '  ' → logprob: -13.25107192993164
    10. 'prem' → logprob: -13.50107192993164

Token 310: '_per' (ID: 10938)
  Prédit: '_per'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_per' → logprob: -1.2113979209971149e-05
    2. '(per' → logprob: -11.875012397766113
    3. 'per' → logprob: -12.625012397766113
    4. '_' → logprob: -14.125012397766113
    5. '_com' → logprob: -14.250012397766113
    6. ')' → logprob: -15.250012397766113
    7. ')_' → logprob: -17.000011444091797
    8. '_par' → logprob: -17.375011444091797
    9. '_p' → logprob: -17.625011444091797
    10. '	per' → logprob: -17.625011444091797

Token 311: 'mutation' (ID: 92896)
  Prédit: 'utation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'utation' → logprob: -0.05139371007680893
    2. 'mutation' → logprob: -3.426393747329712
    3. 'utations' → logprob: -4.301393508911133
    4. 'mut' → logprob: -6.301393508911133
    5. 'ut' → logprob: -6.676393508911133
    6. '_mut' → logprob: -7.801393508911133
    7. '_per' → logprob: -8.426393508911133
    8. 'ution' → logprob: -8.676393508911133
    9. 'ermut' → logprob: -11.176393508911133
    10. 'per' → logprob: -11.301393508911133

Token 312: '(per' (ID: 96497)
  Prédit: '(per'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(per' → logprob: -0.001160100451670587
    2. '(
' → logprob: -7.626160144805908
    3. 'per' → logprob: -8.12615966796875
    4. '(' → logprob: -8.12615966796875
    5. '(p' → logprob: -9.75115966796875
    6. ' (' → logprob: -11.37615966796875
    7. '(par' → logprob: -12.87615966796875
    8. '(

' → logprob: -13.25115966796875
    9. '(pre' → logprob: -14.12615966796875
    10. ')' → logprob: -14.25115966796875

Token 313: 'mut' (ID: 10522)
  Prédit: 'mut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mut' → logprob: -0.023293694481253624
    2. 'utations' → logprob: -3.7732937335968018
    3. 'ut' → logprob: -10.398293495178223
    4. 't' → logprob: -11.648293495178223
    5. 'utions' → logprob: -13.648293495178223
    6. 'm' → logprob: -13.648293495178223
    7. '
' → logprob: -13.898293495178223
    8. 'formations' → logprob: -14.398293495178223
    9. ' mutations' → logprob: -14.523293495178223
    10. ' permutations' → logprob: -14.523293495178223

Token 314: 'ations' (ID: 929)
  Prédit: 'ations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ations' → logprob: -6.194110756041482e-05
    2. 'utations' → logprob: -10.250061988830566
    3. 't' → logprob: -11.250061988830566
    4. 'ation' → logprob: -11.500061988830566
    5. 'utions' → logprob: -13.625061988830566
    6. ' permutations' → logprob: -13.875061988830566
    7. 'per' → logprob: -15.000061988830566
    8. 'lations' → logprob: -15.000061988830566
    9. 'er' → logprob: -15.875061988830566
    10. 'a' → logprob: -16.12506103515625

Token 315: '_com' (ID: 10828)
  Prédit: '_com'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_com' → logprob: -6.988221684878226e-06
    2. 'com' → logprob: -12.375006675720215
    3. 's' → logprob: -13.750006675720215
    4. '_con' → logprob: -13.875006675720215
    5. '_comp' → logprob: -16.25000762939453
    6. '[' → logprob: -16.37500762939453
    7. '_s' → logprob: -16.75000762939453
    8. '_' → logprob: -16.75000762939453
    9. '=com' → logprob: -17.00000762939453
    10. '
' → logprob: -17.12500762939453

Token 316: 'pos' (ID: 1103)
  Prédit: 'pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.17207525670528412
    2. 'ées' → logprob: -2.6720752716064453
    3. 'os' → logprob: -3.0470752716064453
    4. '_pos' → logprob: -4.422075271606445
    5. 'pose' → logprob: -4.547075271606445
    6. 'isées' → logprob: -5.047075271606445
    7. 'ose' → logprob: -5.672075271606445
    8. '_com' → logprob: -5.797075271606445
    9. 'com' → logprob: -6.172075271606445
    10. 'es' → logprob: -7.297075271606445

Token 317: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.0007791309617459774
    2. 'es' → logprob: -7.375779151916504
    3. 'ée' → logprob: -9.250779151916504
    4. '_' → logprob: -11.750779151916504
    5. 'ees' → logprob: -11.750779151916504
    6. 'nées' → logprob: -11.875779151916504
    7. 'onnées' → logprob: -12.125779151916504
    8. 'é' → logprob: -12.500779151916504
    9. 'és' → logprob: -12.625779151916504
    10. '[' → logprob: -12.875779151916504

Token 318: '[ind' (ID: 68064)
  Prédit: '[ind'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[ind' → logprob: -1.5048530030981055e-06
    2. '[' → logprob: -14.000001907348633
    3. 'indice' → logprob: -15.125001907348633
    4. '[idx' → logprob: -15.625001907348633
    5. '[
' → logprob: -15.750001907348633
    6. '[in' → logprob: -16.375001907348633
    7. '
' → logprob: -18.000001907348633
    8. ')[' → logprob: -19.000001907348633
    9. '[i' → logprob: -19.125001907348633
    10. ' [' → logprob: -19.125001907348633

Token 319: 'ice' (ID: 603)
  Prédit: 'ice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ice' → logprob: -0.19975431263446808
    2. 'ce' → logprob: -1.9497543573379517
    3. 'ex' → logprob: -3.324754238128662
    4. '_ce' → logprob: -7.324754238128662
    5. 'e' → logprob: -8.07475471496582
    6. 'ace' → logprob: -8.19975471496582
    7. 'indice' → logprob: -8.32475471496582
    8. 'et' → logprob: -8.69975471496582
    9. '_' → logprob: -9.32475471496582
    10. 'ece' → logprob: -9.44975471496582

Token 320: '_et' (ID: 103440)
  Prédit: '_et'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_et' → logprob: -0.18029892444610596
    2. 'et' → logprob: -1.805298924446106
    3. 't' → logprob: -9.180298805236816
    4. 'ét' → logprob: -9.555298805236816
    5. 'indice' → logprob: -9.555298805236816
    6. 'e' → logprob: -9.805298805236816
    7. '_t' → logprob: -10.680298805236816
    8. 'te' → logprob: -10.930298805236816
    9. 'etat' → logprob: -10.930298805236816
    10. '_te' → logprob: -11.180298805236816

Token 321: 'ape' (ID: 2480)
  Prédit: 'ape'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ape' → logprob: -0.026371825486421585
    2. 'pe' → logprob: -3.651371717453003
    3. 'age' → logprob: -10.651371955871582
    4. 'et' → logprob: -11.276371955871582
    5. 'p' → logprob: -11.401371955871582
    6. 'te' → logprob: -12.151371955871582
    7. 'ype' → logprob: -12.526371955871582
    8. 'e' → logprob: -12.901371955871582
    9. 'ale' → logprob: -13.026371955871582
    10. 'page' → logprob: -13.276371955871582

Token 322: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.09092938154935837
    2. '])
' → logprob: -2.5909292697906494
    3. ']))' → logprob: -4.5909295082092285
    4. '[' → logprob: -7.7159295082092285
    5. ')])' → logprob: -8.46592903137207
    6. ']))
' → logprob: -8.46592903137207
    7. '])]' → logprob: -8.46592903137207
    8. ']' → logprob: -8.59092903137207
    9. '[
' → logprob: -9.21592903137207
    10. '[ind' → logprob: -9.34092903137207

Token 323: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007310202927328646
    2. '   ' → logprob: -7.375730991363525
    3. ')
' → logprob: -9.250731468200684
    4. ' )' → logprob: -12.000731468200684
    5. ')`' → logprob: -13.875731468200684
    6. '))' → logprob: -14.750731468200684
    7. ']' → logprob: -16.000730514526367
    8. ')**' → logprob: -16.625730514526367
    9. '`)' → logprob: -16.625730514526367
    10. ' ' → logprob: -16.750730514526367

Token 324: ' )
' (ID: 3270)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00013560164370574057
    2. ')
' (adapté à ' )
') → logprob: -9.87513542175293
    3. ' )' → logprob: -9.87513542175293
    4. '   ' → logprob: -10.37513542175293
    5. ']' → logprob: -14.25013542175293
    6. ')`' → logprob: -15.50013542175293
    7. '))' → logprob: -15.62513542175293
    8. ' ' → logprob: -16.12513542175293
    9. ')

' → logprob: -16.50013542175293
    10. ')
' → logprob: -16.50013542175293

Token 325: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0170024111866951
    2. ')' → logprob: -4.392002582550049
    3. 'per' → logprob: -6.142002582550049
    4. ']' → logprob: -6.642002582550049
    5. '[' → logprob: -8.26700210571289
    6. '    
' → logprob: -8.51700210571289
    7. '.' → logprob: -8.76700210571289
    8. '	per' → logprob: -8.89200210571289
    9. ' ' → logprob: -9.76700210571289
    10. ').' → logprob: -10.39200210571289

Token 326: ' permutations' (ID: 174595)
  Prédit: 'per'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'per' → logprob: -0.002268731826916337
    2. '   ' → logprob: -6.1272687911987305
    3. '	per' → logprob: -10.00226879119873
    4. '    
' → logprob: -10.37726879119873
    5. 'for' → logprob: -13.37726879119873
    6. '
' → logprob: -13.75226879119873
    7. '  
' → logprob: -14.37726879119873
    8. '  ' → logprob: -14.50226879119873
    9. ' permutations' → logprob: -14.62726879119873
    10. '#' → logprob: -14.75226879119873

Token 327: '_com' (ID: 10828)
  Prédit: '_com'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_com' → logprob: -3.531315314830863e-06
    2. '_con' → logprob: -13.375003814697266
    3. 'com' → logprob: -13.625003814697266
    4. '[' → logprob: -14.875003814697266
    5. '_' → logprob: -15.375003814697266
    6. 's' → logprob: -17.000003814697266
    7. '_comp' → logprob: -17.500003814697266
    8. '\' → logprob: -18.375003814697266
    9. '<com' → logprob: -18.375003814697266
    10. '_des' → logprob: -18.500003814697266

Token 328: 'pos' (ID: 1103)
  Prédit: 'pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.17232874035835266
    2. 'os' → logprob: -2.2973287105560303
    3. 'p' → logprob: -3.5473287105560303
    4. 'ées' → logprob: -3.7973287105560303
    5. 'pose' → logprob: -6.172328948974609
    6. 'es' → logprob: -6.547328948974609
    7. 'isées' → logprob: -7.047328948974609
    8. 'pl' → logprob: -7.797328948974609
    9. 'ose' → logprob: -8.04732894897461
    10. 'oss' → logprob: -8.42232894897461

Token 329: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.00030674142180942
    2. 'es' → logprob: -8.500307083129883
    3. 'é' → logprob: -9.875307083129883
    4. 'ée' → logprob: -10.125307083129883
    5. 'és' → logprob: -13.125307083129883
    6. 'ees' → logprob: -13.250307083129883
    7. '[' → logprob: -13.500307083129883
    8. 'É' → logprob: -13.875307083129883
    9. '#' → logprob: -14.000307083129883
    10. 'e' → logprob: -14.500307083129883

Token 330: '[ind' (ID: 68064)
  Prédit: '[ind'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[ind' → logprob: -5.44312788406387e-05
    2. '[' → logprob: -10.000054359436035
    3. '.append' → logprob: -11.750054359436035
    4. '[in' → logprob: -14.375054359436035
    5. '[i' → logprob: -15.875054359436035
    6. '[idx' → logprob: -16.12505531311035
    7. 'indice' → logprob: -16.25005531311035
    8. '[++' → logprob: -17.00005531311035
    9. '```' → logprob: -17.50005531311035
    10. '[
' → logprob: -17.50005531311035

Token 331: 'ice' (ID: 603)
  Prédit: 'ice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ice' → logprob: -0.038020145148038864
    2. 'ex' → logprob: -4.163020133972168
    3. 'e' → logprob: -4.413020133972168
    4. 'ce' → logprob: -4.663020133972168
    5. '[' → logprob: -10.538020133972168
    6. 'ace' → logprob: -10.663020133972168
    7. '=' → logprob: -11.163020133972168
    8. 'de' → logprob: -11.163020133972168
    9. '#' → logprob: -11.413020133972168
    10. 'dex' → logprob: -11.413020133972168

Token 332: '_et' (ID: 103440)
  Prédit: '_et'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_et' → logprob: -0.011305990628898144
    2. 'et' → logprob: -4.636305809020996
    3. '+' → logprob: -6.886305809020996
    4. 'indice' → logprob: -8.261305809020996
    5. '_ind' → logprob: -9.636305809020996
    6. 's' → logprob: -9.886305809020996
    7. 'ét' → logprob: -10.511305809020996
    8. '[ind' → logprob: -10.761305809020996
    9. '```' → logprob: -11.136305809020996
    10. 'etre' → logprob: -11.511305809020996

Token 333: 'ape' (ID: 2480)
  Prédit: 'ape'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ape' → logprob: -7.743758760625497e-05
    2. 'pe' → logprob: -10.250077247619629
    3. 'age' → logprob: -11.000077247619629
    4. 'et' → logprob: -11.625077247619629
    5. 'step' → logprob: -12.375077247619629
    6. 'ale' → logprob: -13.375077247619629
    7. 'indice' → logprob: -13.375077247619629
    8. 'ype' → logprob: -14.000077247619629
    9. '_step' → logprob: -14.125077247619629
    10. 'te' → logprob: -14.250077247619629

Token 334: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.1602482944726944
    2. '+' → logprob: -1.9102482795715332
    3. ' +
' → logprob: -10.910248756408691
    4. ']' → logprob: -12.910248756408691
    5. '+
' → logprob: -14.035248756408691
    6. ']+' → logprob: -14.535248756408691
    7. ' +=' → logprob: -14.660248756408691
    8. ' plus' → logprob: -15.285248756408691
    9. '+]' → logprob: -15.410248756408691
    10. ' +
' → logprob: -15.535248756408691

Token 335: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.4987974029500037e-05
    2. ' ' → logprob: -10.625024795532227
    3. '1' → logprob: -14.250024795532227
    4. '   ' → logprob: -17.625024795532227
    5. '```' → logprob: -17.875024795532227
    6. '
' → logprob: -19.375024795532227
    7. '۲' → logprob: -19.625024795532227
    8. '  ' → logprob: -19.750024795532227
    9. '+' → logprob: -20.250024795532227
    10. '２' → logprob: -20.250024795532227

Token 336: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.27099974633893e-05
    2. ' ' → logprob: -11.625012397766113
    3. '1' → logprob: -13.000012397766113
    4. '   ' → logprob: -14.500012397766113
    5. '```' → logprob: -15.500012397766113
    6. '3' → logprob: -16.25001335144043
    7. '0' → logprob: -16.56251335144043
    8. '  ' → logprob: -16.68751335144043
    9. '
' → logprob: -16.75001335144043
    10. '5' → logprob: -17.06251335144043

Token 337: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0012214169837534428
    2. ' ]' → logprob: -7.126221179962158
    3. '=' → logprob: -8.376221656799316
    4. ']=' → logprob: -8.751221656799316
    5. ' =' → logprob: -10.501221656799316
    6. ')' → logprob: -14.751221656799316
    7. ' ' → logprob: -16.001220703125
    8. '[:]' → logprob: -16.626220703125
    9. ' ' → logprob: -16.751220703125
    10. '[' → logprob: -16.876220703125

Token 338: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759421586990356
    2. ' =' → logprob: -0.8259421586990356
    3. '[:]' → logprob: -13.450942039489746
    4. ' =[' → logprob: -14.950942039489746
    5. '＝' → logprob: -15.450942039489746
    6. '[' → logprob: -15.700942039489746
    7. ' =
' → logprob: -16.075942993164062
    8. '.=' → logprob: -16.825942993164062
    9. ')' → logprob: -16.825942993164062
    10. '=

' → logprob: -16.950942993164062

Token 339: ' permutation' (ID: 135200)
  Prédit: 'per'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'per' → logprob: -0.018239496275782585
    2. ' permutation' → logprob: -4.018239498138428
    3. 'perm' → logprob: -9.39323902130127
    4. 'Permutation' → logprob: -12.76823902130127
    5. ' perm' → logprob: -13.76823902130127
    6. '	per' → logprob: -14.39323902130127
    7. '(per' → logprob: -15.14323902130127
    8. ' ' → logprob: -15.26823902130127
    9. '   ' → logprob: -15.26823902130127
    10. ' permutations' → logprob: -15.26823902130127

Token 340: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -1.6240566083070007e-06
    2. 's' → logprob: -13.500001907348633
    3. '_' → logprob: -16.500001907348633
    4. 'su' → logprob: -16.625001907348633
    5. ' suivante' → logprob: -17.625001907348633
    6. '\' → logprob: -17.875001907348633
    7. ' _' → logprob: -18.500001907348633
    8. '_suite' → logprob: -18.750001907348633
    9. '[' → logprob: -19.375001907348633
    10. ')' → logprob: -19.375001907348633

Token 341: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -5.157039049663581e-05
    2. ' suivante' → logprob: -11.750051498413086
    3. 'uv' → logprob: -11.875051498413086
    4. 'iv' → logprob: -12.125051498413086
    5. 'uy' → logprob: -12.250051498413086
    6. 'uis' → logprob: -12.375051498413086
    7. 'uable' → logprob: -13.375051498413086
    8. '#' → logprob: -13.500051498413086
    9. 'su' → logprob: -13.500051498413086
    10. '[u' → logprob: -13.750051498413086

Token 342: 'iv' (ID: 349)
  Prédit: 'iv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iv' → logprob: -0.0003087678924202919
    2. 'ite' → logprob: -8.875308990478516
    3. 'v' → logprob: -9.000308990478516
    4. 'it' → logprob: -11.500308990478516
    5. '#' → logprob: -11.750308990478516
    6. 'is' → logprob: -12.625308990478516
    7. 't' → logprob: -12.750308990478516
    8. 'ivant' → logprob: -12.875308990478516
    9. 'ivr' → logprob: -13.000308990478516
    10. 'i' → logprob: -13.125308990478516

Token 343: 'ante' (ID: 2116)
  Prédit: 'ée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.5150030255317688
    2. 'ante' → logprob: -1.015002965927124
    3. 'ee' → logprob: -3.890002965927124
    4. 'ation' → logprob: -4.140003204345703
    5. 'er' → logprob: -6.265003204345703
    6. 'antee' → logprob: -7.640003204345703
    7. 'e' → logprob: -8.390003204345703
    8. 'tion' → logprob: -8.890003204345703
    9. 'ate' → logprob: -9.140003204345703
    10. 'ées' → logprob: -9.265003204345703

Token 344: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 345: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.4967884421348572
    2. 'for' → logprob: -1.746788501739502
    3. 'i' → logprob: -2.746788501739502
    4. 'print' → logprob: -2.871788501739502
    5. 'result' → logprob: -3.121788501739502
    6. '[' → logprob: -4.996788501739502
    7. 'indice' → logprob: -5.121788501739502
    8. '<|end|>' → logprob: -5.121788501739502
    9. 'if' → logprob: -5.371788501739502
    10. '(' → logprob: -5.496788501739502

Token 346: ' Fonction' (ID: 189149)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.33191949129104614
    2. 'for' → logprob: -1.5819194316864014
    3. 'position' → logprob: -3.3319194316864014
    4. 'rés' → logprob: -4.8319196701049805
    5. 'sequence' → logprob: -5.4569196701049805
    6. '#' → logprob: -5.7069196701049805
    7. 'index' → logprob: -6.0819196701049805
    8. 'current' → logprob: -6.0819196701049805
    9. 'indice' → logprob: -6.0819196701049805
    10. 'operation' → logprob: -6.3319196701049805

Token 347: ' réc' (ID: 36254)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0014371353900060058
    2. '#' → logprob: -7.001437187194824
    3. ' def' → logprob: -7.751437187194824
    4. 'de' → logprob: -10.501437187194824
    5. 'for' → logprob: -10.501437187194824
    6. 'pour' → logprob: -11.126437187194824
    7. ' for' → logprob: -11.876437187194824
    8. 'calcul' → logprob: -12.876437187194824
    9. '_def' → logprob: -13.376437187194824
    10. ' de' → logprob: -13.626437187194824

Token 348: 'ursive' (ID: 30543)
  Prédit: 'ursive'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursive' → logprob: -0.000495605927426368
    2. 'urs' → logprob: -8.375495910644531
    3. 'def' → logprob: -8.625495910644531
    4. 'ur' → logprob: -10.375495910644531
    5. 'ursion' → logprob: -10.625495910644531
    6. 'r' → logprob: -11.375495910644531
    7. '#' → logprob: -12.000495910644531
    8. 'usr' → logprob: -12.250495910644531
    9. 'usive' → logprob: -12.875495910644531
    10. '
' → logprob: -13.500495910644531

Token 349: ' pour' (ID: 1930)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -4.4849443838757e-06
    2. ' def' → logprob: -12.875004768371582
    3. 'de' → logprob: -13.250004768371582
    4. 'dé' → logprob: -17.250003814697266
    5. '
' → logprob: -18.125003814697266
    6. ':def' → logprob: -18.375003814697266
    7. '```' → logprob: -19.000003814697266
    8. '_def' → logprob: -19.125003814697266
    9. '#' → logprob: -19.875003814697266
    10. ' déf' → logprob: -20.375003814697266

Token 350: ' appliquer' (ID: 172872)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.06251039355993271
    2. ' def' → logprob: -3.0625104904174805
    3. ' appliquer' → logprob: -5.1875104904174805
    4. ' calcul' → logprob: -5.3125104904174805
    5. 'calcul' → logprob: -6.5625104904174805
    6. ' effectuer' → logprob: -6.5625104904174805
    7. ' définir' → logprob: -9.68751049041748
    8. '#' → logprob: -10.06251049041748
    9. 'dé' → logprob: -10.18751049041748
    10. ' résoudre' → logprob: -10.18751049041748

Token 351: ' une' (ID: 2463)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.7663227915763855
    2. 'def' → logprob: -1.0163228511810303
    3. 'per' → logprob: -2.8913228511810303
    4. 'ap' → logprob: -3.3913228511810303
    5. ' la' → logprob: -3.6413228511810303
    6. 'l' → logprob: -3.6413228511810303
    7. 'une' → logprob: -5.266322612762451
    8. 'nombre' → logprob: -5.266322612762451
    9. 'les' → logprob: -5.516322612762451
    10. ' une' → logprob: -5.641322612762451

Token 352: ' permutation' (ID: 135200)
  Prédit: 'per'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'per' → logprob: -0.012441487051546574
    2. ' permutation' → logprob: -4.637441635131836
    3. 'perm' → logprob: -6.762441635131836
    4. 'fonction' → logprob: -7.637441635131836
    5. 'operation' → logprob: -7.887441635131836
    6. ' opération' → logprob: -8.762441635131836
    7. 'nombre' → logprob: -9.012441635131836
    8. 'composition' → logprob: -9.762441635131836
    9. 'sequence' → logprob: -10.262441635131836
    10. ' perm' → logprob: -10.387441635131836

Token 353: ' '' (ID: 461)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0004216170927975327
    2. '(def' → logprob: -9.125421524047852
    3. '(
' → logprob: -9.250421524047852
    4. 'dé' → logprob: -9.500421524047852
    5. 'de' → logprob: -10.000421524047852
    6. '(sequence' → logprob: -10.250421524047852
    7. '(de' → logprob: -10.750421524047852
    8. '(' → logprob: -11.250421524047852
    9. '(ap' → logprob: -12.000421524047852
    10. 'ap' → logprob: -12.375421524047852

Token 354: 'per' (ID: 543)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.4221932888031006
    2. 'indice' → logprob: -1.5471932888031006
    3. 'nombre' → logprob: -1.7971932888031006
    4. 'k' → logprob: -2.1721932888031006
    5. 'pu' → logprob: -2.5471932888031006
    6. 'ordre' → logprob: -3.1721932888031006
    7. 'sequence' → logprob: -3.4221932888031006
    8. 'ex' → logprob: -4.42219352722168
    9. 'def' → logprob: -4.42219352722168
    10. 'per' → logprob: -4.79719352722168

Token 355: 'mutation' (ID: 92896)
  Prédit: 'mutation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mutation' → logprob: -0.002340565901249647
    2. 'm' → logprob: -7.002340793609619
    3. 'mut' → logprob: -7.752340793609619
    4. 'utation' → logprob: -7.877340793609619
    5. 'mission' → logprob: -7.877340793609619
    6. 'mu' → logprob: -9.502340316772461
    7. 'sequence' → logprob: -10.127340316772461
    8. 'met' → logprob: -10.502340316772461
    9. 'position' → logprob: -11.127340316772461
    10. ' mutation' → logprob: -12.002340316772461

Token 356: ''' (ID: 6)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.26048576831817627
    2. 'sur' → logprob: -2.7604856491088867
    3. '',' → logprob: -3.7604856491088867
    4. ''' → logprob: -3.8854856491088867
    5. 'sequence' → logprob: -4.135485649108887
    6. ','' → logprob: -4.260485649108887
    7. '_com' → logprob: -4.635485649108887
    8. 'n' → logprob: -4.760485649108887
    9. '(n' → logprob: -4.760485649108887
    10. '(sequence' → logprob: -4.760485649108887

Token 357: ' k' (ID: 372)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.121608667075634
    2. '(per' → logprob: -3.1216087341308594
    3. '(sequence' → logprob: -3.2466087341308594
    4. 'sur' → logprob: -3.6216087341308594
    5. 'per' → logprob: -6.371608734130859
    6. '(def' → logprob: -7.621608734130859
    7. '(par' → logprob: -8.24660873413086
    8. '(de' → logprob: -8.37160873413086
    9. '(' → logprob: -8.62160873413086
    10. 'au' → logprob: -8.62160873413086

Token 358: ' fois' (ID: 14697)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7916344404220581
    2. '_' → logprob: -2.0416345596313477
    3. '_sur' → logprob: -2.0416345596313477
    4. '(per' → logprob: -2.7916345596313477
    5. 'au' → logprob: -2.9166345596313477
    6. '_k' → logprob: -3.0416345596313477
    7. '(par' → logprob: -4.166634559631348
    8. 'sur' → logprob: -4.291634559631348
    9. '(k' → logprob: -4.291634559631348
    10. ' (' → logprob: -4.416634559631348

Token 359: ' efficacement' (ID: 155449)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -6.704273118884885e-07
    2. ' def' → logprob: -14.875000953674316
    3. 'de' → logprob: -15.500000953674316
    4. 'dé' → logprob: -18.0
    5. '
' → logprob: -18.375
    6. ':def' → logprob: -18.875
    7. '(def' → logprob: -19.375
    8. '#' → logprob: -19.875
    9. '_def' → logprob: -20.25
    10. '	def' → logprob: -20.375

Token 360: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: 0.0
    2. 'de' → logprob: -17.375
    3. ' def' → logprob: -18.75
    4. 'dé' → logprob: -21.0
    5. 'd' → logprob: -21.875
    6. '
' → logprob: -22.125
    7. ':def' → logprob: -22.25
    8. 'ndef' → logprob: -23.0
    9. 'from' → logprob: -23.125
    10. '	def' → logprob: -23.375

Token 361: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: 0.0
    2. ' def' → logprob: -18.25
    3. 'de' → logprob: -20.5
    4. 'd' → logprob: -21.875
    5. 'dé' → logprob: -23.125
    6. '	def' → logprob: -24.5
    7. ':def' → logprob: -24.625
    8. 'ndef' → logprob: -24.75
    9. '
' → logprob: -25.125
    10. '#' → logprob: -25.875

Token 362: ' exponent' (ID: 51159)
  Prédit: 'pu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pu' → logprob: -1.0534284114837646
    2. 'ap' → logprob: -1.1784284114837646
    3. ' appliquer' → logprob: -1.1784284114837646
    4. ' puissance' → logprob: -3.9284284114837646
    5. 'app' → logprob: -5.553428649902344
    6. 'application' → logprob: -5.678428649902344
    7. 'ex' → logprob: -6.053428649902344
    8. 'p' → logprob: -6.928428649902344
    9. ' application' → logprob: -7.053428649902344
    10. 'power' → logprob: -7.303428649902344

Token 363: 'ier' (ID: 905)
  Prédit: 'ier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ier' → logprob: -0.023865627124905586
    2. 'iation' → logprob: -4.648865699768066
    3. 'ielle' → logprob: -6.023865699768066
    4. 'def' → logprob: -6.023865699768066
    5. 'i' → logprob: -6.148865699768066
    6. 'ial' → logprob: -6.523865699768066
    7. '```' → logprob: -6.648865699768066
    8. 'iel' → logprob: -7.023865699768066
    9. 'er' → logprob: -7.398865699768066
    10. '_' → logprob: -7.898865699768066

Token 364: '_per' (ID: 10938)
  Prédit: '(per'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(per' → logprob: -0.04263485595583916
    2. '_per' → logprob: -3.417634963989258
    3. '(' → logprob: -4.917634963989258
    4. 'per' → logprob: -7.792634963989258
    5. '_' → logprob: -7.917634963989258
    6. '(par' → logprob: -8.292634963989258
    7. ' (' → logprob: -8.417634963989258
    8. '_(' → logprob: -8.917634963989258
    9. '(p' → logprob: -9.042634963989258
    10. '(
' → logprob: -10.917634963989258

Token 365: 'mutation' (ID: 92896)
  Prédit: 'mutation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mutation' → logprob: -0.0002166491176467389
    2. 'mut' → logprob: -8.500216484069824
    3. 'utation' → logprob: -11.500216484069824
    4. 'm' → logprob: -13.125216484069824
    5. 'Mutation' → logprob: -14.875216484069824
    6. 'mute' → logprob: -15.750216484069824
    7. ' mutation' → logprob: -15.875216484069824
    8. 'mission' → logprob: -16.37521743774414
    9. 'met' → logprob: -16.62521743774414
    10. '_mut' → logprob: -17.00021743774414

Token 366: '(per' (ID: 96497)
  Prédit: '(per'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(per' → logprob: -0.0006876522093079984
    2. '(' → logprob: -7.375687599182129
    3. ' (' → logprob: -10.250687599182129
    4. '(p' → logprob: -11.125687599182129
    5. '(
' → logprob: -12.000687599182129
    6. '(par' → logprob: -12.875687599182129
    7. '(paren' → logprob: -15.000687599182129
    8. '(permission' → logprob: -15.000687599182129
    9. '(pr' → logprob: -15.875687599182129
    10. ' ' → logprob: -15.875687599182129

Token 367: 'mutation' (ID: 92896)
  Prédit: 'mutation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mutation' → logprob: -5.455048449221067e-05
    2. 'mut' → logprob: -10.125054359436035
    3. 'm' → logprob: -11.375054359436035
    4. 'mission' → logprob: -13.375054359436035
    5. 'mu' → logprob: -14.750054359436035
    6. 'mute' → logprob: -14.875054359436035
    7. 'met' → logprob: -15.500054359436035
    8. '```' → logprob: -16.00005531311035
    9. 'mun' → logprob: -16.75005531311035
    10. 'utation' → logprob: -16.87505531311035

Token 368: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.2200749754119897e-06
    2. ' ,' → logprob: -13.625001907348633
    3. ',k' → logprob: -14.000001907348633
    4. ',
' → logprob: -16.875001907348633
    5. '‌,' → logprob: -17.125001907348633
    6. ',n' → logprob: -17.500001907348633
    7. ',num' → logprob: -18.750001907348633
    8. '،' → logprob: -19.125001907348633
    9. ',
' → logprob: -19.375001907348633
    10. 's' → logprob: -19.625001907348633

Token 369: ' expos' (ID: 10300)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.032212868332862854
    2. 'ex' → logprob: -4.032212734222412
    3. ' k' → logprob: -4.407212734222412
    4. 'pu' → logprob: -7.407212734222412
    5. ' puissance' → logprob: -7.657212734222412
    6. 'nombre' → logprob: -8.40721321105957
    7. ' ' → logprob: -8.65721321105957
    8. ' expos' → logprob: -8.90721321105957
    9. 'expo' → logprob: -9.65721321105957
    10. 'n' → logprob: -10.53221321105957

Token 370: 'ant' (ID: 493)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.0502810962498188
    2. 'ant' → logprob: -3.050281047821045
    3. '```' → logprob: -7.050281047821045
    4. ')' → logprob: -8.425281524658203
    5. 'nent' → logprob: -9.050281524658203
    6. 'n' → logprob: -9.050281524658203
    7. '   ' → logprob: -9.675281524658203
    8. 'nt' → logprob: -10.300281524658203
    9. 'e' → logprob: -10.550281524658203
    10. ' ent' → logprob: -10.550281524658203

Token 371: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5241421461105347
    2. '):' → logprob: -0.8991421461105347
    3. ' ,' → logprob: -7.774142265319824
    4. ')' → logprob: -8.399142265319824
    5. '):
' → logprob: -8.524142265319824
    6. ' ):' → logprob: -8.899142265319824
    7. '):
' → logprob: -11.274142265319824
    8. ',k' → logprob: -11.899142265319824
    9. ':' → logprob: -12.274142265319824
    10. '   ' → logprob: -12.399142265319824

Token 372: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0076220110058784485
    2. 'if' → logprob: -5.007622241973877
    3. ' if' → logprob: -7.007622241973877
    4. '	if' → logprob: -14.257621765136719
    5. '   ' → logprob: -14.507621765136719
    6. '    
' → logprob: -16.13262176513672
    7. '       ' → logprob: -18.00762176513672
    8. '```' → logprob: -19.00762176513672
    9. 'import' → logprob: -19.63262176513672
    10. '
' → logprob: -19.63262176513672

Token 373: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0006137899472378194
    2. ' if' → logprob: -7.500613689422607
    3. '   ' → logprob: -9.750614166259766
    4. 'result' → logprob: -13.000614166259766
    5. '    
' → logprob: -16.000614166259766
    6. '	if' → logprob: -16.750614166259766
    7. 'return' → logprob: -17.500614166259766
    8. '
' → logprob: -18.000614166259766
    9. 'If' → logprob: -18.250614166259766
    10. 'import' → logprob: -18.250614166259766

Token 374: ' expos' (ID: 10300)
  Prédit: ' expos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' expos' → logprob: -0.03804849088191986
    2. 'ex' → logprob: -3.288048505783081
    3. ' ' → logprob: -13.16304874420166
    4. ' expon' → logprob: -13.28804874420166
    5. ' ex' → logprob: -13.53804874420166
    6. '_ex' → logprob: -14.03804874420166
    7. '(ex' → logprob: -15.03804874420166
    8. ' ' → logprob: -15.53804874420166
    9. 'expo' → logprob: -16.038047790527344
    10. 'Ex' → logprob: -16.163047790527344

Token 375: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.8292081952095032
    2. 'ponent' → logprob: -1.4542081356048584
    3. 'onent' → logprob: -2.5792081356048584
    4. '=' → logprob: -2.7042081356048584
    5. 'ent' → logprob: -2.7042081356048584
    6. 'ont' → logprob: -3.0792081356048584
    7. 'pos' → logprob: -3.4542081356048584
    8. 'pon' → logprob: -4.9542083740234375
    9. 'pont' → logprob: -5.0792083740234375
    10. 'p' → logprob: -5.2042083740234375

Token 376: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.062179870903491974
    2. ' ==' → logprob: -2.8121798038482666
    3. '=' → logprob: -8.562179565429688
    4. ')==' → logprob: -12.687179565429688
    5. ']==' → logprob: -12.937179565429688
    6. '[' → logprob: -13.062179565429688
    7. ' =' → logprob: -13.312179565429688
    8. ' ' → logprob: -13.437179565429688
    9. '===' → logprob: -13.562179565429688
    10. '==
' → logprob: -13.562179565429688

Token 377: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.008792542852461338
    2. ' ' → logprob: -4.758792400360107
    3. '1' → logprob: -8.633792877197266
    4. '   ' → logprob: -17.008792877197266
    5. ' ' → logprob: -17.883792877197266
    6. '  ' → logprob: -18.758792877197266
    7. '
' → logprob: -18.758792877197266
    8. '۰' → logprob: -19.196292877197266
    9. '    ' → logprob: -20.008792877197266
    10. '	' → logprob: -20.446292877197266

Token 378: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.8550976164988242e-05
    2. '1' → logprob: -11.125018119812012
    3. ' ' → logprob: -12.500018119812012
    4. '۰' → logprob: -19.750019073486328
    5. '   ' → logprob: -20.500019073486328
    6. '
' → logprob: -20.687519073486328
    7. '

' → logprob: -21.625019073486328
    8. '  ' → logprob: -21.812519073486328
    9. '```' → logprob: -22.250019073486328
    10. '00' → logprob: -22.250019073486328

Token 379: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.011561024934053421
    2. ':
' → logprob: -4.511560916900635
    3. ':return' → logprob: -7.636560916900635
    4. ' :' → logprob: -11.136561393737793
    5. '):' → logprob: -12.511561393737793
    6. '   ' → logprob: -12.511561393737793
    7. '<|end|>' → logprob: -12.761561393737793
    8. ':
' → logprob: -13.386561393737793
    9. 'return' → logprob: -14.136561393737793
    10. ':

' → logprob: -14.636561393737793

Token 380: '       ' (ID: 309)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5889037251472473
    2. '       ' → logprob: -1.5889036655426025
    3. '   ' → logprob: -1.7139036655426025
    4. ' [' → logprob: -2.8389036655426025
    5. ' return' → logprob: -7.588903903961182
    6. '[
' → logprob: -7.713903903961182
    7. '        
' → logprob: -7.838903903961182
    8. 'return' → logprob: -7.963903903961182
    9. '    
' → logprob: -8.963903427124023
    10. '    ' → logprob: -8.963903427124023

Token 381: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.017600294202566147
    2. '   ' → logprob: -4.142600059509277
    3. ' return' → logprob: -6.642600059509277
    4. '       ' → logprob: -8.517600059509277
    5. '[' → logprob: -10.142600059509277
    6. '    
' → logprob: -11.767600059509277
    7. '
' → logprob: -12.767600059509277
    8. '	return' → logprob: -12.892600059509277
    9. 'ret' → logprob: -13.642600059509277
    10. 'range' → logprob: -13.642600059509277

Token 382: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.6937599778175354
    2. '[list' → logprob: -0.6937599778175354
    3. '[' → logprob: -7.443759918212891
    4. ' list' → logprob: -11.94375991821289
    5. '[List' → logprob: -12.06875991821289
    6. '[id' → logprob: -12.94375991821289
    7. '[p' → logprob: -13.19375991821289
    8. '[l' → logprob: -13.81875991821289
    9. '[i' → logprob: -13.81875991821289
    10. '[ind' → logprob: -13.94375991821289

Token 383: '(range' (ID: 50017)
  Prédit: '(range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -2.45848218582978e-06
    2. 'range' → logprob: -13.00000286102295
    3. '(' → logprob: -16.250001907348633
    4. ' range' → logprob: -18.125001907348633
    5. '	range' → logprob: -19.500001907348633
    6. '.range' → logprob: -22.000001907348633
    7. '(map' → logprob: -22.000001907348633
    8. 'Range' → logprob: -22.000001907348633
    9. '(r' → logprob: -22.375001907348633
    10. '(
' → logprob: -22.375001907348633

Token 384: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.00010127831774298102
    2. '(' → logprob: -9.875101089477539
    3. 'tail' → logprob: -10.500101089477539
    4. 't' → logprob: -10.875101089477539
    5. ' (' → logprob: -13.000101089477539
    6. '	t' → logprob: -14.500101089477539
    7. '(len' → logprob: -15.500101089477539
    8. '(
' → logprob: -16.00010108947754
    9. '   ' → logprob: -16.62510108947754
    10. ' taille' → logprob: -17.25010108947754

Token 385: 'aille' (ID: 44714)
  Prédit: 'aille'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aille' → logprob: -0.04450182616710663
    2. 'ail' → logprob: -3.419501781463623
    3. 'tail' → logprob: -4.544501781463623
    4. 'a' → logprob: -9.419502258300781
    5. '_' → logprob: -10.419502258300781
    6. '_tail' → logprob: -10.669502258300781
    7. '_t' → logprob: -12.419502258300781
    8. '_a' → logprob: -12.544502258300781
    9. 'ai' → logprob: -12.669502258300781
    10. '[' → logprob: -12.794502258300781

Token 386: '_per' (ID: 10938)
  Prédit: '_per'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_per' → logprob: -1.9361264946837764e-07
    2. '_' → logprob: -15.75
    3. 'per' → logprob: -16.75
    4. '_p' → logprob: -17.0
    5. '_par' → logprob: -18.875
    6. '_PER' → logprob: -19.375
    7. ')' → logprob: -19.375
    8. '_de' → logprob: -20.0
    9. '_pro' → logprob: -20.25
    10. '_t' → logprob: -20.5

Token 387: 'mutation' (ID: 92896)
  Prédit: 'mutation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mutation' → logprob: -0.0012017777189612389
    2. 'utation' → logprob: -7.001201629638672
    3. 'r' → logprob: -9.251201629638672
    4. 'mut' → logprob: -9.251201629638672
    5. 'ermut' → logprob: -9.876201629638672
    6. 'per' → logprob: -11.001201629638672
    7. 'rm' → logprob: -11.751201629638672
    8. 'm' → logprob: -12.376201629638672
    9. ' permutation' → logprob: -13.001201629638672
    10. 'Permutation' → logprob: -13.376201629638672

Token 388: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.07891710847616196
    2. '))
' → logprob: -2.5789170265197754
    3. ' ))' → logprob: -11.703917503356934
    4. '))

' → logprob: -11.828917503356934
    5. '))
' → logprob: -12.328917503356934
    6. ' ))
' → logprob: -12.953917503356934
    7. ')' → logprob: -13.203917503356934
    8. '   ' → logprob: -13.578917503356934
    9. ')))' → logprob: -13.953917503356934
    10. '       ' → logprob: -15.578917503356934

Token 389: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001993227982893586
    2. '    
' → logprob: -6.251993179321289
    3. '
' → logprob: -10.001993179321289
    4. '   
' → logprob: -11.376993179321289
    5. '  
' → logprob: -12.876993179321289
    6. ' 
' → logprob: -13.251993179321289
    7. '   ' → logprob: -13.501993179321289
    8. '        
' → logprob: -14.501993179321289
    9. '  ' → logprob: -15.126993179321289
    10. 'if' → logprob: -15.251993179321289

Token 390: ' permutation' (ID: 135200)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.2113045454025269
    2. 'elif' → logprob: -1.4613045454025269
    3. 'temp' → logprob: -1.5863045454025269
    4. 'dem' → logprob: -1.9613045454025269
    5. 'mo' → logprob: -2.3363046646118164
    6. 'part' → logprob: -4.086304664611816
    7. 'pu' → logprob: -5.211304664611816
    8. 'partial' → logprob: -6.461304664611816
    9. 'half' → logprob: -7.211304664611816
    10. 'result' → logprob: -7.211304664611816

Token 391: '_c' (ID: 1303)
  Prédit: '_ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ex' → logprob: -0.8975337743759155
    2. '_c' → logprob: -1.3975337743759155
    3. '_comp' → logprob: -2.647533893585205
    4. '_exp' → logprob: -2.772533893585205
    5. '_ap' → logprob: -2.897533893585205
    6. '_' → logprob: -3.147533893585205
    7. '_act' → logprob: -4.147533893585205
    8. '_car' → logprob: -4.272533893585205
    9. 'ex' → logprob: -4.397533893585205
    10. 'e' → logprob: -4.772533893585205

Token 392: 'arr' (ID: 1614)
  Prédit: 'ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ar' → logprob: -0.09818873554468155
    2. 'arre' → logprob: -3.098188638687134
    3. 'arr' → logprob: -3.223188638687134
    4. 'aré' → logprob: -6.473188877105713
    5. ' =' → logprob: -6.598188877105713
    6. 'u' → logprob: -6.598188877105713
    7. 'our' → logprob: -6.848188877105713
    8. 'om' → logprob: -7.223188877105713
    9. 'urrent' → logprob: -7.473188877105713
    10. 'opie' → logprob: -7.723188877105713

Token 393: 'ée' (ID: 2894)
  Prédit: 'ee'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ee' → logprob: -0.03204721584916115
    2. 'ée' → logprob: -3.7820472717285156
    3. 'e' → logprob: -4.782047271728516
    4. 'é' → logprob: -7.907047271728516
    5. 'at' → logprob: -12.532047271728516
    6. 'ec' → logprob: -12.907047271728516
    7. 'eer' → logprob: -13.282047271728516
    8. 'ed' → logprob: -13.532047271728516
    9. 'eed' → logprob: -13.532047271728516
    10. 'eee' → logprob: -13.657047271728516

Token 394: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0619683600962162
    2. '=' → logprob: -2.8119683265686035
    3. ' ' → logprob: -15.311968803405762
    4. ' ' → logprob: -15.436968803405762
    5. '_' → logprob: -16.061967849731445
    6. ',' → logprob: -16.686967849731445
    7. ')' → logprob: -16.936967849731445
    8. 's' → logprob: -16.936967849731445
    9. '   ' → logprob: -17.936967849731445
    10. '_=' → logprob: -17.936967849731445

Token 395: ' appliquer' (ID: 172872)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.39085814356803894
    2. 'ap' → logprob: -1.1408581733703613
    3. ' appliquer' → logprob: -6.390858173370361
    4. 'app' → logprob: -6.765858173370361
    5. ' exponent' → logprob: -7.015858173370361
    6. 'apply' → logprob: -8.765857696533203
    7. ' ex' → logprob: -11.015857696533203
    8. 'application' → logprob: -11.140857696533203
    9. '
' → logprob: -11.890857696533203
    10. '	ex' → logprob: -12.515857696533203

Token 396: '_per' (ID: 10938)
  Prédit: '_per'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_per' → logprob: -6.468279752880335e-05
    2. '_' → logprob: -10.250064849853516
    3. 'per' → logprob: -10.625064849853516
    4. '(per' → logprob: -12.750064849853516
    5. '	per' → logprob: -14.750064849853516
    6. '_par' → logprob: -14.875064849853516
    7. '_perm' → logprob: -15.375064849853516
    8. '_p' → logprob: -15.625064849853516
    9. '_ap' → logprob: -16.000064849853516
    10. '_permission' → logprob: -16.375064849853516

Token 397: 'mutation' (ID: 92896)
  Prédit: 'mutation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mutation' → logprob: -0.22603671252727509
    2. 'utation' → logprob: -1.6010366678237915
    3. 'mut' → logprob: -7.851036548614502
    4. 'ermut' → logprob: -9.72603702545166
    5. 'ut' → logprob: -9.97603702545166
    6. 'per' → logprob: -10.47603702545166
    7. 'ission' → logprob: -10.97603702545166
    8. '_per' → logprob: -11.35103702545166
    9. '[' → logprob: -11.47603702545166
    10. 'um' → logprob: -11.85103702545166

Token 398: '(per' (ID: 96497)
  Prédit: '(per'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(per' → logprob: -0.0017763269133865833
    2. '(
' → logprob: -6.751776218414307
    3. '(' → logprob: -7.501776218414307
    4. 'per' → logprob: -9.876776695251465
    5. '(

' → logprob: -14.376776695251465
    6. '(par' → logprob: -15.001776695251465
    7. '	per' → logprob: -15.126776695251465
    8. '(p' → logprob: -15.376776695251465
    9. ' (' → logprob: -15.501776695251465
    10. '(pe' → logprob: -15.501776695251465

Token 399: 'mutation' (ID: 92896)
  Prédit: 'mutation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mutation' → logprob: -0.001685412833467126
    2. 'utation' → logprob: -6.501685619354248
    3. 'mut' → logprob: -8.87668514251709
    4. 'm' → logprob: -11.62668514251709
    5. 'mission' → logprob: -11.75168514251709
    6. 'ermut' → logprob: -11.75168514251709
    7. 'met' → logprob: -12.50168514251709
    8. 'um' → logprob: -13.25168514251709
    9. '[' → logprob: -13.37668514251709
    10. 'ut' → logprob: -13.37668514251709

Token 400: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00014025058771949261
    2. '(per' → logprob: -9.500140190124512
    3. ' ,' → logprob: -9.875140190124512
    4. 'per' → logprob: -11.500140190124512
    5. ',
' → logprob: -12.875140190124512
    6. ',p' → logprob: -14.000140190124512
    7. '	per' → logprob: -16.250141143798828
    8. ',

' → logprob: -16.250141143798828
    9. ',de' → logprob: -16.500141143798828
    10. '   ' → logprob: -16.750141143798828

Token 401: ' permutation' (ID: 135200)
  Prédit: 'per'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'per' → logprob: -0.0009384971344843507
    2. ' permutation' → logprob: -7.000938415527344
    3. 'perm' → logprob: -10.875938415527344
    4. '	per' → logprob: -12.750938415527344
    5. 'ex' → logprob: -14.000938415527344
    6. 'inverse' → logprob: -14.000938415527344
    7. ' per' → logprob: -14.125938415527344
    8. '   ' → logprob: -14.625938415527344
    9. '(per' → logprob: -14.625938415527344
    10. ' ' → logprob: -15.125938415527344

Token 402: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.800739018013701e-05
    2. ')
' → logprob: -10.1250581741333
    3. ' )' → logprob: -12.1250581741333
    4. ')#' → logprob: -12.1250581741333
    5. ')

' → logprob: -14.0000581741333
    6. ')}' → logprob: -14.6250581741333
    7. ')c' → logprob: -14.7500581741333
    8. '))' → logprob: -14.8750581741333
    9. ')return' → logprob: -15.0000581741333
    10. '),' → logprob: -15.0000581741333

Token 403: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17897282540798187
    2. ' ' → logprob: -3.1789727210998535
    3. '<|end|>' → logprob: -3.3039727210998535
    4. ' if' → logprob: -3.8039727210998535
    5. '    
' → logprob: -4.3039727210998535
    6. ')' → logprob: -4.5539727210998535
    7. '[' → logprob: -4.5539727210998535
    8. '  ' → logprob: -5.0539727210998535
    9. 'if' → logprob: -5.6789727210998535
    10. '    ' → logprob: -5.6789727210998535

Token 404: ' demi' (ID: 61771)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6220471262931824
    2. ' if' → logprob: -1.3720471858978271
    3. 'if' → logprob: -2.247047185897827
    4. '    
' → logprob: -2.747047185897827
    5. ' ' → logprob: -3.997047185897827
    6. ' 
' → logprob: -4.372046947479248
    7. '  
' → logprob: -6.247046947479248
    8. '    ' → logprob: -6.622046947479248
    9. '   
' → logprob: -6.872046947479248
    10. 'ex' → logprob: -7.622046947479248

Token 405: '_per' (ID: 10938)
  Prédit: '_ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ex' → logprob: -0.09390465915203094
    2. 'ex' → logprob: -2.968904733657837
    3. '_per' → logprob: -3.468904733657837
    4. '_' → logprob: -6.343904495239258
    5. '_exp' → logprob: -6.718904495239258
    6. '=' → logprob: -6.718904495239258
    7. 'per' → logprob: -7.843904495239258
    8. '_p' → logprob: -7.968904495239258
    9. '_perm' → logprob: -7.968904495239258
    10. '-ex' → logprob: -8.593904495239258

Token 406: 'mutation' (ID: 92896)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.21082700788974762
    2. 'mutation' → logprob: -2.460827112197876
    3. 'mut' → logprob: -3.085827112197876
    4. 'met' → logprob: -3.710827112197876
    5. 'ermut' → logprob: -4.210826873779297
    6. 'os' → logprob: -4.960826873779297
    7. 'em' → logprob: -6.085826873779297
    8. '_ex' → logprob: -6.210826873779297
    9. 'erm' → logprob: -6.460826873779297
    10. 'expo' → logprob: -6.960826873779297

Token 407: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20172740519046783
    2. '=' → logprob: -1.7017273902893066
    3. ',' → logprob: -8.076727867126465
    4. '_' → logprob: -14.576727867126465
    5. '	' → logprob: -14.576727867126465
    6. ' ' → logprob: -14.701727867126465
    7. ' ' → logprob: -14.826727867126465
    8. ' ,' → logprob: -15.076727867126465
    9. 's' → logprob: -15.201727867126465
    10. '=_' → logprob: -15.451727867126465

Token 408: ' exponent' (ID: 51159)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.06198303773999214
    2. ' exponent' → logprob: -2.811983108520508
    3. ' ex' → logprob: -12.311983108520508
    4. 'Exponent' → logprob: -12.811983108520508
    5. '	ex' → logprob: -13.311983108520508
    6. ' ' → logprob: -13.561983108520508
    7. '(ex' → logprob: -13.686983108520508
    8. ' ' → logprob: -13.811983108520508
    9. '   ' → logprob: -14.436983108520508
    10. ' exon' → logprob: -14.561983108520508

Token 409: 'ier' (ID: 905)
  Prédit: 'ier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ier' → logprob: -5.9153885558771435e-06
    2. 'ex' → logprob: -13.000005722045898
    3. 'er' → logprob: -13.625005722045898
    4. 'per' → logprob: -13.750005722045898
    5. 'i' → logprob: -15.250005722045898
    6. 'iter' → logprob: -15.375005722045898
    7. '   ' → logprob: -15.375005722045898
    8. 'iert' → logprob: -16.2500057220459
    9. '```' → logprob: -16.3750057220459
    10. '_ex' → logprob: -16.8750057220459

Token 410: '_per' (ID: 10938)
  Prédit: '_per'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_per' → logprob: -2.3319124011322856e-05
    2. 'per' → logprob: -11.125022888183594
    3. '(per' → logprob: -12.250022888183594
    4. '_par' → logprob: -13.250022888183594
    5. '_' → logprob: -14.125022888183594
    6. 's' → logprob: -14.500022888183594
    7. '	per' → logprob: -15.000022888183594
    8. '_p' → logprob: -16.875022888183594
    9. 'er' → logprob: -17.000022888183594
    10. '_de' → logprob: -17.250022888183594

Token 411: 'mutation' (ID: 92896)
  Prédit: 'mutation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mutation' → logprob: -0.28329360485076904
    2. 'utation' → logprob: -1.408293604850769
    3. 'per' → logprob: -6.533293724060059
    4. '_per' → logprob: -8.283293724060059
    5. 'mission' → logprob: -9.658293724060059
    6. 'mut' → logprob: -9.658293724060059
    7. '(per' → logprob: -9.658293724060059
    8. 'ution' → logprob: -10.033293724060059
    9. 'ission' → logprob: -10.158293724060059
    10. 'ation' → logprob: -10.283293724060059

Token 412: '(per' (ID: 96497)
  Prédit: '(per'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(per' → logprob: -5.9153885558771435e-06
    2. '(' → logprob: -12.750005722045898
    3. '(
' → logprob: -12.875005722045898
    4. '(par' → logprob: -15.125005722045898
    5. ' (' → logprob: -17.0000057220459
    6. '(pe' → logprob: -17.1250057220459
    7. 'per' → logprob: -17.3750057220459
    8. '(pre' → logprob: -17.3750057220459
    9. '(permission' → logprob: -17.7500057220459
    10. '(p' → logprob: -17.8750057220459

Token 413: 'mutation' (ID: 92896)
  Prédit: 'utation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'utation' → logprob: -0.009461507201194763
    2. 'mutation' → logprob: -5.134461402893066
    3. 'ut' → logprob: -6.009461402893066
    4. 'ission' → logprob: -7.259461402893066
    5. 'ution' → logprob: -8.134461402893066
    6. 'uation' → logprob: -10.884461402893066
    7. 'mut' → logprob: -11.634461402893066
    8. 'per' → logprob: -12.759461402893066
    9. '   ' → logprob: -13.009461402893066
    10. 'uter' → logprob: -13.009461402893066

Token 414: '_c' (ID: 1303)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.038587022572755814
    2. '(per' → logprob: -3.2885870933532715
    3. 'per' → logprob: -7.6635870933532715
    4. '	per' → logprob: -10.038586616516113
    5. ' ,' → logprob: -11.038586616516113
    6. ',
' → logprob: -11.788586616516113
    7. '(' → logprob: -13.038586616516113
    8. ',p' → logprob: -13.288586616516113
    9. '   ' → logprob: -13.538586616516113
    10. '(com' → logprob: -15.038586616516113

Token 415: 'arr' (ID: 1614)
  Prédit: 'om'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'om' → logprob: -0.6732943654060364
    2. 'ar' → logprob: -1.2982943058013916
    3. 'ex' → logprob: -2.9232943058013916
    4. 'arr' → logprob: -4.048294544219971
    5. 'ont' → logprob: -4.298294544219971
    6. 'od' → logprob: -4.673294544219971
    7. 'u' → logprob: -4.798294544219971
    8. 'ol' → logprob: -5.048294544219971
    9. '   ' → logprob: -5.173294544219971
    10. 'or' → logprob: -5.298294544219971

Token 416: 'ée' (ID: 2894)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.5954049229621887
    2. 'ant' → logprob: -1.345404863357544
    3. 'ex' → logprob: -2.220404863357544
    4. 'on' → logprob: -2.970404863357544
    5. 'ont' → logprob: -4.095405101776123
    6. '   ' → logprob: -5.470405101776123
    7. 'er' → logprob: -5.595405101776123
    8. 'ation' → logprob: -7.095405101776123
    9. 'onent' → logprob: -7.720405101776123
    10. 't' → logprob: -7.970405101776123

Token 417: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.3425219549390022e-05
    2. '(per' → logprob: -11.62501335144043
    3. ' ,' → logprob: -12.50001335144043
    4. 'per' → logprob: -14.75001335144043
    5. ',
' → logprob: -15.25001335144043
    6. '   ' → logprob: -17.50001335144043
    7. ',p' → logprob: -18.00001335144043
    8. ',

' → logprob: -18.12501335144043
    9. ',de' → logprob: -18.37501335144043
    10. '	per' → logprob: -18.50001335144043

Token 418: ' expos' (ID: 10300)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.005255337804555893
    2. ' expos' → logprob: -5.255255222320557
    3. '(ex' → logprob: -11.630255699157715
    4. ' ex' → logprob: -11.755255699157715
    5. 'expo' → logprob: -13.130255699157715
    6. '   ' → logprob: -14.255255699157715
    7. ' ' → logprob: -14.755255699157715
    8. '	ex' → logprob: -14.880255699157715
    9. ' expon' → logprob: -15.130255699157715
    10. 'expl' → logprob: -15.130255699157715

Token 419: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.4335659444332123
    2. 'ent' → logprob: -1.0585659742355347
    3. 'ont' → logprob: -5.808566093444824
    4. 'on' → logprob: -7.683566093444824
    5. 'onent' → logprob: -8.183566093444824
    6. 'p' → logprob: -8.433566093444824
    7. '   ' → logprob: -8.683566093444824
    8. 'nt' → logprob: -8.808566093444824
    9. 'ex' → logprob: -9.308566093444824
    10. 'a' → logprob: -9.683566093444824

Token 420: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.10051320493221283
    2. ' //' → logprob: -2.350513219833374
    3. '#' → logprob: -8.975513458251953
    4. '   ' → logprob: -9.850513458251953
    5. '2' → logprob: -10.475513458251953
    6. ' ' → logprob: -11.100513458251953
    7. '[' → logprob: -11.100513458251953
    8. ' ' → logprob: -11.475513458251953
    9. 'int' → logprob: -11.600513458251953
    10. ')' → logprob: -12.100513458251953

Token 421: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.002805110299959779
    2. ' ' → logprob: -5.877805233001709
    3. '```' → logprob: -15.37780475616455
    4. '   ' → logprob: -18.252805709838867
    5. ' ' → logprob: -18.252805709838867
    6. '(' → logprob: -18.502805709838867
    7. '۲' → logprob: -18.752805709838867
    8. '>' → logprob: -19.002805709838867
    9. '1' → logprob: -19.127805709838867
    10. '[' → logprob: -19.690305709838867

Token 422: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.107425062713446e-06
    2. ' ' → logprob: -11.875006675720215
    3. '```' → logprob: -17.00000762939453
    4. '   ' → logprob: -17.12500762939453
    5. '
' → logprob: -18.75000762939453
    6. '>' → logprob: -19.37500762939453
    7. '۲' → logprob: -19.50000762939453
    8. '1' → logprob: -19.50000762939453
    9. '２' → logprob: -19.87500762939453
    10. '٢' → logprob: -20.06250762939453

Token 423: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003015001420862973
    2. ' )' → logprob: -8.250301361083984
    3. ',' → logprob: -10.875301361083984
    4. ')
' → logprob: -11.250301361083984
    5. ')

' → logprob: -12.500301361083984
    6. ' ' → logprob: -13.125301361083984
    7. 'if' → logprob: -14.250301361083984
    8. ' if' → logprob: -14.500301361083984
    9. '),' → logprob: -14.875301361083984
    10. ')`' → logprob: -15.375301361083984

Token 424: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5054197907447815
    2. 'if' → logprob: -1.0054197311401367
    3. ' if' → logprob: -4.255419731140137
    4. 'return' → logprob: -4.755419731140137
    5. '[' → logprob: -5.505419731140137
    6. '    
' → logprob: -6.630419731140137
    7. '	if' → logprob: -7.130419731140137
    8. '[
' → logprob: -7.880419731140137
    9. '       ' → logprob: -8.255419731140137
    10. '
' → logprob: -8.505419731140137

Token 425: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.16302932798862457
    2. 'return' → logprob: -2.413029432296753
    3. '   ' → logprob: -3.288029432296753
    4. '[' → logprob: -4.038029193878174
    5. ' if' → logprob: -5.788029193878174
    6. '[
' → logprob: -6.663029193878174
    7. 'result' → logprob: -7.038029193878174
    8. '[]' → logprob: -8.413029670715332
    9. ' return' → logprob: -8.538029670715332
    10. '    
' → logprob: -9.663029670715332

Token 426: ' expos' (ID: 10300)
  Prédit: ' expos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' expos' → logprob: -0.10040926933288574
    2. 'ex' → logprob: -2.3504092693328857
    3. '(ex' → logprob: -8.725409507751465
    4. ' (' → logprob: -11.350409507751465
    5. ' expon' → logprob: -11.600409507751465
    6. ' ' → logprob: -12.225409507751465
    7. ' ex' → logprob: -12.350409507751465
    8. ' ' → logprob: -12.475409507751465
    9. '(' → logprob: -12.850409507751465
    10. '_ex' → logprob: -13.225409507751465

Token 427: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.048987340182065964
    2. '_ant' → logprob: -4.29898738861084
    3. 'ont' → logprob: -4.42398738861084
    4. 'ent' → logprob: -4.79898738861084
    5. 'onent' → logprob: -6.04898738861084
    6. '   ' → logprob: -6.54898738861084
    7. 'ponent' → logprob: -6.79898738861084
    8. '%' → logprob: -6.92398738861084
    9. 'ot' → logprob: -6.92398738861084
    10. '.ant' → logprob: -6.92398738861084

Token 428: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.3132658004760742
    2. '%' → logprob: -1.3132658004760742
    3. ' ' → logprob: -12.938265800476074
    4. ' ' → logprob: -13.688265800476074
    5. '&' → logprob: -16.18826675415039
    6. ')' → logprob: -16.31326675415039
    7. ' %
' → logprob: -16.68826675415039
    8. ' &' → logprob: -16.93826675415039
    9. '==' → logprob: -17.93826675415039
    10. '[' → logprob: -18.06326675415039

Token 429: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.04858771339058876
    2. ' ' → logprob: -3.0485877990722656
    3. '   ' → logprob: -15.923587799072266
    4. '1' → logprob: -16.048587799072266
    5. '```' → logprob: -16.423587799072266
    6. ' ' → logprob: -17.048587799072266
    7. '  ' → logprob: -17.923587799072266
    8. '(' → logprob: -18.673587799072266
    9. '    ' → logprob: -19.111087799072266
    10. '0' → logprob: -19.298587799072266

Token 430: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.988221684878226e-06
    2. ' ' → logprob: -11.875006675720215
    3. '   ' → logprob: -17.62500762939453
    4. '1' → logprob: -18.37500762939453
    5. '```' → logprob: -18.75000762939453
    6. '
' → logprob: -19.62500762939453
    7. '  ' → logprob: -20.50000762939453
    8. '    ' → logprob: -21.50000762939453
    9. '     ' → logprob: -22.37500762939453
    10. '>' → logprob: -22.37500762939453

Token 431: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5761371850967407
    2. '==' → logprob: -0.8261371850967407
    3. ' !=' → logprob: -9.82613754272461
    4. '=' → logprob: -9.95113754272461
    5. ':' → logprob: -10.07613754272461
    6. '!=' → logprob: -10.70113754272461
    7. ' ' → logprob: -11.20113754272461
    8. ' ' → logprob: -12.45113754272461
    9. ' =' → logprob: -12.70113754272461
    10. '==
' → logprob: -13.45113754272461

Token 432: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.15659268200397491
    2. '0' → logprob: -2.031592607498169
    3. ' ' → logprob: -4.281592845916748
    4. ' ' → logprob: -15.03159236907959
    5. '  ' → logprob: -16.531593322753906
    6. '   ' → logprob: -16.781593322753906
    7. '```' → logprob: -17.281593322753906
    8. '
' → logprob: -17.406593322753906
    9. ':' → logprob: -17.781593322753906
    10. '  
' → logprob: -17.906593322753906

Token 433: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2526194453239441
    2. '0' → logprob: -1.5026195049285889
    3. ' ' → logprob: -7.62761926651001
    4. '2' → logprob: -8.502619743347168
    5. '```' → logprob: -16.37761878967285
    6. '   ' → logprob: -17.25261878967285
    7. ' ' → logprob: -17.75261878967285
    8. '  ' → logprob: -18.12761878967285
    9. '=' → logprob: -18.25261878967285
    10. '3' → logprob: -18.25261878967285

Token 434: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02426711842417717
    2. ':
' → logprob: -3.7742671966552734
    3. '   ' → logprob: -7.899267196655273
    4. '):' → logprob: -8.149267196655273
    5. ':return' → logprob: -8.524267196655273
    6. '):
' → logprob: -9.899267196655273
    7. ' :' → logprob: -10.149267196655273
    8. '       ' → logprob: -10.399267196655273
    9. ')' → logprob: -11.149267196655273
    10. ',' → logprob: -11.899267196655273

Token 435: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.025408940389752388
    2. '       ' → logprob: -4.025408744812012
    3. ' return' → logprob: -5.150408744812012
    4. 'return' → logprob: -6.775408744812012
    5. '	return' → logprob: -8.775408744812012
    6. '    ' → logprob: -9.525408744812012
    7. '    
' → logprob: -10.900408744812012
    8. '   ' → logprob: -11.525408744812012
    9. ' ' → logprob: -11.775408744812012
    10. '  ' → logprob: -12.025408744812012

Token 436: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.003416770603507757
    2. '   ' → logprob: -6.003416538238525
    3. ' return' → logprob: -7.003416538238525
    4. '       ' → logprob: -10.503417015075684
    5. '	return' → logprob: -12.753417015075684
    6. '    ' → logprob: -14.753417015075684
    7. 'ret' → logprob: -14.878417015075684
    8. '    
' → logprob: -15.503417015075684
    9. 'eturn' → logprob: -15.503417015075684
    10. '
' → logprob: -16.128416061401367

Token 437: ' demi' (ID: 61771)
  Prédit: 'dem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dem' → logprob: -0.0004977479111403227
    2. ' demi' → logprob: -7.625497817993164
    3. ' ' → logprob: -12.375497817993164
    4. 'd' → logprob: -13.500497817993164
    5. '   ' → logprob: -13.875497817993164
    6. '[' → logprob: -14.250497817993164
    7. ' ' → logprob: -14.625497817993164
    8. '	d' → logprob: -14.625497817993164
    9. 'de' → logprob: -15.000497817993164
    10. 'dern' → logprob: -15.750497817993164

Token 438: '_per' (ID: 10938)
  Prédit: '_per'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_per' → logprob: -1.0325924449716695e-05
    2. '_' → logprob: -11.75001049041748
    3. 'per' → logprob: -13.50001049041748
    4. '_p' → logprob: -15.25001049041748
    5. '_pro' → logprob: -15.37501049041748
    6. '_par' → logprob: -16.125009536743164
    7. '_d' → logprob: -16.750009536743164
    8. ' _' → logprob: -17.125009536743164
    9. '_part' → logprob: -17.125009536743164
    10. '_pre' → logprob: -17.250009536743164

Token 439: 'mutation' (ID: 92896)
  Prédit: 'utation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'utation' → logprob: -0.1295541226863861
    2. 'mutation' → logprob: -2.129554033279419
    3. 'ission' → logprob: -6.379554271697998
    4. 'ution' → logprob: -7.754554271697998
    5. 'mission' → logprob: -8.75455379486084
    6. 'ut' → logprob: -9.12955379486084
    7. 'per' → logprob: -10.25455379486084
    8. 'mut' → logprob: -10.25455379486084
    9. 'uter' → logprob: -10.50455379486084
    10. '_per' → logprob: -10.50455379486084

Token 440: '
' (ID: 198)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.2733587324619293
    2. ' else' → logprob: -2.0233588218688965
    3. '   ' → logprob: -2.8983588218688965
    4. '
' → logprob: -3.5233588218688965
    5. '    
' → logprob: -4.5233588218688965
    6. ' 
' → logprob: -5.8983588218688965
    7. '    ' → logprob: -6.7733588218688965
    8. '<|end|>' → logprob: -6.7733588218688965
    9. '[:]' → logprob: -7.0233588218688965
    10. 'ap' → logprob: -7.2733588218688965

Token 441: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.382095068693161
    2. ' else' → logprob: -2.0070950984954834
    3. 'else' → logprob: -2.1320950984954834
    4. ')' → logprob: -4.007094860076904
    5. '[' → logprob: -4.007094860076904
    6. '(' → logprob: -5.132094860076904
    7. '_' → logprob: -5.257094860076904
    8. '    ' → logprob: -5.632094860076904
    9. ' ' → logprob: -6.007094860076904
    10. ',' → logprob: -6.257094860076904

Token 442: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -1.0722726583480835
    2. 'else' (adapté à ' else') → logprob: -1.4472726583480835
    3. 'ap' → logprob: -1.9472726583480835
    4. '[' → logprob: -2.322272777557373
    5. ' appliquer' → logprob: -2.447272777557373
    6. '   ' → logprob: -3.072272777557373
    7. '    ' → logprob: -5.197272777557373
    8. '(ap' → logprob: -5.322272777557373
    9. ' ' → logprob: -5.572272777557373
    10. '=' → logprob: -5.697272777557373

Token 443: ':
' (ID: 734)
  Prédit: ' appliquer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' appliquer' → logprob: -0.9202869534492493
    2. '[' → logprob: -1.2952868938446045
    3. '   ' → logprob: -1.5452868938446045
    4. '(ap' → logprob: -3.0452868938446045
    5. '    ' → logprob: -4.170287132263184
    6. ' return' → logprob: -4.670287132263184
    7. ' =' → logprob: -4.920287132263184
    8. '.apply' → logprob: -5.545287132263184
    9. ' ' → logprob: -5.670287132263184
    10. '	ap' → logprob: -5.795287132263184

Token 444: '       ' (ID: 309)
  Prédit: 'ap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ap' → logprob: -0.23330989480018616
    2. ' appliquer' → logprob: -1.7333098649978638
    3. '   ' → logprob: -3.4833099842071533
    4. 'app' → logprob: -7.983309745788574
    5. '       ' → logprob: -8.233309745788574
    6. 'apply' → logprob: -10.108309745788574
    7. '	ap' → logprob: -11.358309745788574
    8. ' ' → logprob: -12.358309745788574
    9. '           ' → logprob: -12.358309745788574
    10. '    ' → logprob: -12.608309745788574

Token 445: ' return' (ID: 622)
  Prédit: 'ap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ap' → logprob: -0.00917108729481697
    2. ' appliquer' → logprob: -4.759171009063721
    3. 'app' → logprob: -7.759171009063721
    4. 'apply' → logprob: -9.259171485900879
    5. '   ' → logprob: -10.884171485900879
    6. 'return' (adapté à ' return') → logprob: -11.384171485900879
    7. '       ' → logprob: -13.634171485900879
    8. 'ex' → logprob: -14.259171485900879
    9. '	ap' → logprob: -14.384171485900879
    10. 'apper' → logprob: -15.134171485900879

Token 446: ' appliquer' (ID: 172872)
  Prédit: 'ap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ap' → logprob: -0.4742215573787689
    2. ' appliquer' → logprob: -0.9742215871810913
    3. 'app' → logprob: -9.849221229553223
    4. '[' → logprob: -10.099221229553223
    5. ' ' → logprob: -10.474221229553223
    6. '   ' → logprob: -11.849221229553223
    7. 'apply' → logprob: -12.724221229553223
    8. '	ap' → logprob: -12.974221229553223
    9. ' ' → logprob: -13.099221229553223
    10. ' [' → logprob: -13.349221229553223

Token 447: '_per' (ID: 10938)
  Prédit: '_per'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_per' → logprob: -8.537868779967539e-06
    2. '_' → logprob: -11.875008583068848
    3. 'per' → logprob: -14.250008583068848
    4. '(per' → logprob: -14.625008583068848
    5. '_par' → logprob: -14.875008583068848
    6. '_p' → logprob: -16.87500762939453
    7. '_perm' → logprob: -17.12500762939453
    8. '_permission' → logprob: -17.75000762939453
    9. '(' → logprob: -17.87500762939453
    10. '_pro' → logprob: -18.87500762939453

Token 448: 'mutation' (ID: 92896)
  Prédit: 'mutation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mutation' → logprob: -0.026496758684515953
    2. 'utation' → logprob: -3.776496648788452
    3. 'mut' → logprob: -6.401496887207031
    4. '_per' → logprob: -6.901496887207031
    5. '_mut' → logprob: -7.651496887207031
    6. 'per' → logprob: -10.151496887207031
    7. 'mission' → logprob: -10.651496887207031
    8. 'ut' → logprob: -10.901496887207031
    9. ' mutation' → logprob: -12.401496887207031
    10. 'ermut' → logprob: -12.776496887207031

Token 449: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.15205880999565125
    2. '(' → logprob: -2.6520588397979736
    3. '(per' → logprob: -2.6520588397979736
    4. '(de' → logprob: -10.527058601379395
    5. ' (' → logprob: -12.402058601379395
    6. 'per' → logprob: -12.527058601379395
    7. 'dem' → logprob: -12.652058601379395
    8. '(
' → logprob: -12.777058601379395
    9. '(p' → logprob: -12.902058601379395
    10. '(par' → logprob: -13.277058601379395

Token 450: 'emi' (ID: 18504)
  Prédit: 'emi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'emi' → logprob: -3.79811754100956e-05
    2. 'em' → logprob: -10.625038146972656
    3. 'mi' → logprob: -11.625038146972656
    4. 'emie' → logprob: -13.000038146972656
    5. 'emis' → logprob: -14.375038146972656
    6. 'e' → logprob: -14.625038146972656
    7. 'еми' → logprob: -15.500038146972656
    8. '[' → logprob: -15.625038146972656
    9. ' emi' → logprob: -16.000038146972656
    10. 'erni' → logprob: -16.375038146972656

Token 451: '_per' (ID: 10938)
  Prédit: '_per'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_per' → logprob: -0.0002338144404347986
    2. 'per' → logprob: -8.37523365020752
    3. '-per' → logprob: -14.00023365020752
    4. '(per' → logprob: -14.75023365020752
    5. '_par' → logprob: -14.87523365020752
    6. '_pre' → logprob: -15.50023365020752
    7. '_p' → logprob: -15.62523365020752
    8. 'er' → logprob: -15.62523365020752
    9. '	per' → logprob: -15.62523365020752
    10. '_' → logprob: -16.125234603881836

Token 452: 'mutation' (ID: 92896)
  Prédit: 'mutation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mutation' → logprob: -0.349282443523407
    2. 'utation' → logprob: -1.2242825031280518
    3. 'mut' → logprob: -7.599282264709473
    4. 'ut' → logprob: -9.474282264709473
    5. ' mutation' → logprob: -9.849282264709473
    6. 'ution' → logprob: -9.974282264709473
    7. '_mut' → logprob: -10.599282264709473
    8. 'ation' → logprob: -11.349282264709473
    9. 'mission' → logprob: -11.349282264709473
    10. 'uation' → logprob: -11.349282264709473

Token 453: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00047082986566238105
    2. '(per' → logprob: -7.8754706382751465
    3. ' ,' → logprob: -9.375471115112305
    4. ',p' → logprob: -12.750471115112305
    5. '(' → logprob: -13.750471115112305
    6. 'per' → logprob: -14.250471115112305
    7. '[' → logprob: -14.625471115112305
    8. ',
' → logprob: -15.125471115112305
    9. ')' → logprob: -15.750471115112305
    10. ',[' → logprob: -16.625471115112305

Token 454: ' permutation' (ID: 135200)
  Prédit: 'per'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'per' → logprob: -0.0025298797991126776
    2. ' permutation' → logprob: -6.002530097961426
    3. 'perm' → logprob: -9.877530097961426
    4. '	per' → logprob: -13.877530097961426
    5. ' perm' → logprob: -14.502530097961426
    6. 'Permutation' → logprob: -14.502530097961426
    7. '(per' → logprob: -14.627530097961426
    8. '-per' → logprob: -15.877530097961426
    9. '   ' → logprob: -16.12752914428711
    10. 'permission' → logprob: -16.37752914428711

Token 455: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.2723104848410003e-05
    2. ')
' → logprob: -11.375022888183594
    3. ' )' → logprob: -11.500022888183594
    4. '[' → logprob: -14.375022888183594
    5. '<|end|>' → logprob: -15.750022888183594
    6. ')return' → logprob: -16.500022888183594
    7. '   ' → logprob: -16.750022888183594
    8. ')

' → logprob: -17.125022888183594
    9. '}' → logprob: -17.625022888183594
    10. '),' → logprob: -17.750022888183594

Token 456: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5945964455604553
    2. '<|end|>' → logprob: -1.4695963859558105
    3. '
' → logprob: -1.8445963859558105
    4. '\n' → logprob: -3.2195963859558105
    5. ')' → logprob: -4.7195963859558105
    6. '(' → logprob: -6.0945963859558105
    7. '\' → logprob: -6.0945963859558105
    8. '```' → logprob: -6.3445963859558105
    9. '  
' → logprob: -6.8445963859558105
    10. 'n' → logprob: -7.3445963859558105

Token 457: ' Ét' (ID: 54156)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.5097087025642395
    2. '#' → logprob: -2.6347086429595947
    3. 'ex' → logprob: -2.7597086429595947
    4. 'per' → logprob: -3.1347086429595947
    5. 'indice' → logprob: -3.1347086429595947
    6. 'pu' → logprob: -3.7597086429595947
    7. 'rés' → logprob: -4.134708881378174
    8. 'k' → logprob: -4.134708881378174
    9. 'cho' → logprob: -4.509708881378174
    10. 'ligne' → logprob: -4.634708881378174

Token 458: 'ape' (ID: 2480)
  Prédit: 'ape'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ape' → logprob: -0.069309763610363
    2. 'apes' → logprob: -3.569309711456299
    3. '#' → logprob: -3.944309711456299
    4. 'endre' → logprob: -4.944309711456299
    5. 'e' → logprob: -5.819309711456299
    6. 'a' → logprob: -6.569309711456299
    7. '=' → logprob: -6.569309711456299
    8. 'ap' → logprob: -6.819309711456299
    9. 'endue' → logprob: -6.944309711456299
    10. '_' → logprob: -7.444309711456299

Token 459: ' ' (ID: 220)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.015238798223435879
    2. 's' → logprob: -5.8902387619018555
    3. ':' → logprob: -6.1402387619018555
    4. '#' → logprob: -6.3902387619018555
    5. ' ' → logprob: -6.3902387619018555
    6. ' _' → logprob: -7.2652387619018555
    7. ' for' → logprob: -7.3902387619018555
    8. '_final' → logprob: -7.3902387619018555
    9. ' =' → logprob: -7.5152387619018555
    10. ' des' → logprob: -7.6402387619018555

Token 460: '1' (ID: 16)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.346544474363327
    2. '=' → logprob: -1.4715445041656494
    3. 'par' → logprob: -4.22154426574707
    4. '#' → logprob: -4.22154426574707
    5. 'final' → logprob: -4.59654426574707
    6. ':' → logprob: -5.09654426574707
    7. 'pour' → logprob: -5.97154426574707
    8. 's' → logprob: -6.22154426574707
    9. '_par' → logprob: -6.34654426574707
    10. '_final' → logprob: -6.34654426574707

Token 461: ' :' (ID: 712)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.11922517418861389
    2. 'ex' → logprob: -3.744225263595581
    3. '#' → logprob: -3.869225263595581
    4. 'per' → logprob: -4.119225025177002
    5. 'com' → logprob: -4.244225025177002
    6. 'def' → logprob: -4.994225025177002
    7. 'res' → logprob: -4.994225025177002
    8. 'k' → logprob: -5.619225025177002
    9. 'rés' → logprob: -5.994225025177002
    10. 'total' → logprob: -6.369225025177002

Token 462: ' Calcul' (ID: 57243)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.3943036198616028
    2. 'per' → logprob: -2.394303560256958
    3. 'ex' → logprob: -2.769303560256958
    4. 'comp' → logprob: -3.769303560256958
    5. '#' → logprob: -3.894303560256958
    6. 'pu' → logprob: -3.894303560256958
    7. 'indice' → logprob: -3.894303560256958
    8. 'rés' → logprob: -4.019303798675537
    9. 'operation' → logprob: -4.269303798675537
    10. 'k' → logprob: -5.269303798675537

Token 463: ' de' (ID: 334)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.8640545010566711
    2. 'de' → logprob: -1.8640544414520264
    3. 'final' → logprob: -2.6140544414520264
    4. 'per' → logprob: -2.7390544414520264
    5. 'des' → logprob: -2.7390544414520264
    6. 'rés' → logprob: -3.2390544414520264
    7. 's' → logprob: -3.4890544414520264
    8. '_result' → logprob: -3.6140544414520264
    9. ' des' → logprob: -3.9890544414520264
    10. ' de' → logprob: -4.2390546798706055

Token 464: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.18832173943519592
    2. 'per' → logprob: -2.688321828842163
    3. 'l' → logprob: -3.063321828842163
    4. ' la' → logprob: -3.938321828842163
    5. 'result' → logprob: -4.063321590423584
    6. 'ex' → logprob: -5.063321590423584
    7. 'nombre' → logprob: -5.813321590423584
    8. 'res' → logprob: -6.438321590423584
    9. 'une' → logprob: -6.813321590423584
    10. 'k' → logprob: -6.938321590423584

Token 465: ' permutation' (ID: 135200)
  Prédit: 'per'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'per' → logprob: -0.09308712929487228
    2. 'k' → logprob: -3.8430871963500977
    3. 'result' → logprob: -4.218087196350098
    4. 'pu' → logprob: -4.593087196350098
    5. 'rés' → logprob: -4.718087196350098
    6. 'perm' → logprob: -4.718087196350098
    7. 'composition' → logprob: -5.093087196350098
    8. 'com' → logprob: -5.343087196350098
    9. 'comb' → logprob: -6.218087196350098
    10. 'ré' → logprob: -6.343087196350098

Token 466: ' de' (ID: 334)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.4500850439071655
    2. '_c' → logprob: -1.5750850439071655
    3. 'final' → logprob: -2.325085163116455
    4. '_result' → logprob: -2.450085163116455
    5. 'cour' → logprob: -2.450085163116455
    6. '_initial' → logprob: -3.075085163116455
    7. '_final' → logprob: -3.200085163116455
    8. 'initial' → logprob: -3.325085163116455
    9. '_act' → logprob: -3.450085163116455
    10. 'act' → logprob: -3.700085163116455

Token 467: ' départ' (ID: 32693)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.8372141718864441
    2. 'base' → logprob: -1.0872142314910889
    3. 'dé' → logprob: -2.087214231491089
    4. 'composition' → logprob: -3.462214231491089
    5. 'l' → logprob: -3.837214231491089
    6. 'depart' → logprob: -4.33721399307251
    7. ' départ' → logprob: -4.71221399307251
    8. 'ré' → logprob: -5.33721399307251
    9. 'part' → logprob: -5.33721399307251
    10. 'pu' → logprob: -5.83721399307251

Token 468: ' à' (ID: 1221)
  Prédit: 'per'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'per' → logprob: -1.2964534759521484
    2. 'result' → logprob: -1.5464534759521484
    3. 'de' → logprob: -1.7964534759521484
    4. 'depart' → logprob: -1.7964534759521484
    5. 'point' → logprob: -2.6714534759521484
    6. 'part' → logprob: -3.5464534759521484
    7. 'cour' → logprob: -3.7964534759521484
    8. 'current' → logprob: -4.296453475952148
    9. 'perm' → logprob: -4.671453475952148
    10. 'def' → logprob: -5.421453475952148

Token 469: ' appliquer' (ID: 172872)
  Prédit: 'ap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ap' → logprob: -0.39261767268180847
    2. 'ex' → logprob: -1.7676177024841309
    3. 'l' → logprob: -2.767617702484131
    4. 'part' → logprob: -3.642617702484131
    5. 'app' → logprob: -4.267617702484131
    6. 'indice' → logprob: -4.642617702484131
    7. 'la' → logprob: -4.892617702484131
    8. ' appliquer' → logprob: -5.142617702484131
    9. 'nombre' → logprob: -5.392617702484131
    10. 'de' → logprob: -5.767617702484131

Token 470: ' '' (ID: 461)
  Prédit: 'per'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'per' → logprob: -0.13882172107696533
    2. 'result' → logprob: -2.638821601867676
    3. 'de' → logprob: -4.388821601867676
    4. 'prem' → logprob: -4.388821601867676
    5. 'point' → logprob: -4.388821601867676
    6. 'perm' → logprob: -5.013821601867676
    7. 'part' → logprob: -5.513821601867676
    8. 'depart' → logprob: -6.013821601867676
    9. 'def' → logprob: -6.888821601867676
    10. 'dé' → logprob: -6.888821601867676

Token 471: 'nombre' (ID: 28576)
  Prédit: 'nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.017277557402849197
    2. '(nombre' → logprob: -4.392277717590332
    3. ' nombre' → logprob: -6.142277717590332
    4. 'ex' → logprob: -6.392277717590332
    5. '(' → logprob: -8.017277717590332
    6. '0' → logprob: -8.767277717590332
    7. '(ex' → logprob: -9.017277717590332
    8. '1' → logprob: -9.267277717590332
    9. 'pow' → logprob: -10.517277717590332
    10. ' ' → logprob: -10.642277717590332

Token 472: '_operations' (ID: 148404)
  Prédit: '_operations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_operations' → logprob: -0.0007942587835714221
    2. 'd' → logprob: -8.000794410705566
    3. '_op' → logprob: -9.125794410705566
    4. '_d' → logprob: -9.250794410705566
    5. '=' → logprob: -10.000794410705566
    6. 'operations' → logprob: -10.000794410705566
    7. '```' → logprob: -10.250794410705566
    8. '_des' → logprob: -10.375794410705566
    9. '_ops' → logprob: -10.875794410705566
    10. '_' → logprob: -11.125794410705566

Token 473: ' //' (ID: 602)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9676182270050049
    2. '-' → logprob: -1.7176182270050049
    3. ''' → logprob: -1.9676182270050049
    4. ' ' → logprob: -2.592618227005005
    5. ' '' → logprob: -3.092618227005005
    6. ' -' → logprob: -3.467618227005005
    7. ' )' → logprob: -3.592618227005005
    8. '=' → logprob: -4.092617988586426
    9. ' =' → logprob: -4.217617988586426
    10. '')' → logprob: -4.842617988586426

Token 474: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.16850928962230682
    2. '6' → logprob: -2.4185092449188232
    3. '3' → logprob: -2.9185092449188232
    4. ' ' → logprob: -4.543509483337402
    5. '1' → logprob: -7.543509483337402
    6. 'nombre' → logprob: -7.793509483337402
    7. '(' → logprob: -9.043509483337402
    8. '4' → logprob: -9.168509483337402
    9. '```' → logprob: -9.543509483337402
    10. '5' → logprob: -9.793509483337402

Token 475: '6' (ID: 21)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.01635105535387993
    2. '3' → logprob: -4.891351222991943
    3. '6' → logprob: -5.016351222991943
    4. '4' → logprob: -6.766351222991943
    5. '1' → logprob: -7.391351222991943
    6. '5' → logprob: -8.891350746154785
    7. '(' → logprob: -9.516350746154785
    8. 'nombre' → logprob: -10.016350746154785
    9. '12' → logprob: -12.016350746154785
    10. ' ' → logprob: -12.141350746154785

Token 476: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.2567521333694458
    2. ')'' → logprob: -2.5067520141601562
    3. ' '' → logprob: -2.6317520141601562
    4. ' *' → logprob: -2.8817520141601562
    5. '*' → logprob: -4.881752014160156
    6. ')' → logprob: -4.881752014160156
    7. ' )' → logprob: -7.631752014160156
    8. '')' → logprob: -8.506752014160156
    9. ''*' → logprob: -8.631752014160156
    10. ' ' → logprob: -9.131752014160156

Token 477: ' fois' (ID: 14697)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3821418285369873
    2. ' =' → logprob: -1.3821418285369873
    3. 'de' → logprob: -3.3821418285369873
    4. 'depart' → logprob: -4.757142066955566
    5. ',' → logprob: -5.507142066955566
    6. 'initial' → logprob: -5.632142066955566
    7. 'base' → logprob: -6.132142066955566
    8. 'per' → logprob: -6.257142066955566
    9. 'result' → logprob: -6.507142066955566
    10. 'point' → logprob: -6.507142066955566

Token 478: '
' (ID: 198)
  Prédit: 'per'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'per' → logprob: -0.23130331933498383
    2. 'point' → logprob: -2.1063032150268555
    3. 'base' → logprob: -3.6063032150268555
    4. 'de' → logprob: -4.1063032150268555
    5. 'perm' → logprob: -4.3563032150268555
    6. 'part' → logprob: -4.7313032150268555
    7. 'result' → logprob: -5.1063032150268555
    8. 'prem' → logprob: -5.6063032150268555
    9. 'depart' → logprob: -6.3563032150268555
    10. 'indice' → logprob: -6.6063032150268555

Token 479: 'per' (ID: 543)
  Prédit: 'per'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'per' → logprob: -0.06582370400428772
    2. 'point' → logprob: -3.065823793411255
    3. 'perm' → logprob: -5.315823554992676
    4. 'de' → logprob: -5.690823554992676
    5. 'prem' → logprob: -5.815823554992676
    6. 'base' → logprob: -5.815823554992676
    7. 'part' → logprob: -7.315823554992676
    8. 'depart' → logprob: -7.815823554992676
    9. 'periode' → logprob: -8.190823554992676
    10. 'result' → logprob: -8.440823554992676

Token 480: 'mutation' (ID: 92896)
  Prédit: 'mut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mut' → logprob: -0.22562508285045624
    2. 'mutation' → logprob: -1.6006250381469727
    3. 'met' → logprob: -9.475625038146973
    4. 'm' → logprob: -9.850625038146973
    5. '_mut' → logprob: -10.975625038146973
    6. 'mu' → logprob: -11.225625038146973
    7. 'mi' → logprob: -11.475625038146973
    8. 'utations' → logprob: -11.850625038146973
    9. 'utation' → logprob: -12.600625038146973
    10. '```' → logprob: -12.725625038146973

Token 481: '_de' (ID: 5047)
  Prédit: '_de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_de' → logprob: -0.11119527369737625
    2. '_depart' → logprob: -2.7361953258514404
    3. '_initial' → logprob: -3.4861953258514404
    4. 'de' → logprob: -5.861195087432861
    5. '_base' → logprob: -5.986195087432861
    6. '_a' → logprob: -6.236195087432861
    7. '_' → logprob: -7.486195087432861
    8. '_final' → logprob: -7.861195087432861
    9. 'depart' → logprob: -7.986195087432861
    10. 'à' → logprob: -8.23619556427002

Token 482: '_base' (ID: 17096)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'part' → logprob: -0.27567803859710693
    2. 'depart' → logprob: -1.525678038597107
    3. 'but' → logprob: -4.6506781578063965
    4. '_depart' → logprob: -4.6506781578063965
    5. 'dé' → logprob: -6.9006781578063965
    6. 'base' → logprob: -7.6506781578063965
    7. '_part' → logprob: -7.7756781578063965
    8. '_de' → logprob: -7.9006781578063965
    9. '_d' → logprob: -8.525677680969238
    10. '_' → logprob: -8.900677680969238

Token 483: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.016042228788137436
    2. '=' → logprob: -4.141042232513428
    3. 's' → logprob: -12.14104175567627
    4. ',' → logprob: -14.14104175567627
    5. ' ' → logprob: -14.14104175567627
    6. '_' → logprob: -15.14104175567627
    7. '=com' → logprob: -16.141042709350586
    8. '_index' → logprob: -16.266042709350586
    9. '_idx' → logprob: -16.391042709350586
    10. ' ' → logprob: -16.641042709350586

Token 484: ' appliquer' (ID: 172872)
  Prédit: 'per'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'per' → logprob: -0.04529859125614166
    2. ' permutations' → logprob: -3.1702985763549805
    3. 'ap' → logprob: -6.7952985763549805
    4. 'ex' → logprob: -7.2952985763549805
    5. ' appliquer' → logprob: -8.29529857635498
    6. 'perm' → logprob: -9.79529857635498
    7. 'apply' → logprob: -9.79529857635498
    8. 'app' → logprob: -10.29529857635498
    9. ' ' → logprob: -11.17029857635498
    10. '	per' → logprob: -11.17029857635498

Token 485: '_per' (ID: 10938)
  Prédit: '_per'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_per' → logprob: -5.676981345459353e-06
    2. 'per' → logprob: -12.500005722045898
    3. '_par' → logprob: -14.000005722045898
    4. '_' → logprob: -14.125005722045898
    5. '(per' → logprob: -15.625005722045898
    6. '_p' → logprob: -16.7500057220459
    7. '_com' → logprob: -17.2500057220459
    8. '_perm' → logprob: -17.8750057220459
    9. '	per' → logprob: -18.2500057220459
    10. '_ap' → logprob: -18.5000057220459

Token 486: 'mutation' (ID: 92896)
  Prédit: 'mutation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mutation' → logprob: -0.0033784033730626106
    2. 'utation' → logprob: -5.878378391265869
    3. 'mut' → logprob: -7.753378391265869
    4. 'per' → logprob: -9.753378868103027
    5. 'mission' → logprob: -9.878378868103027
    6. '_per' → logprob: -11.253378868103027
    7. 'ermut' → logprob: -12.003378868103027
    8. '_mut' → logprob: -12.628378868103027
    9. 'met' → logprob: -13.253378868103027
    10. 'm' → logprob: -13.753378868103027

Token 487: '(
' (ID: 1607)
  Prédit: '(per'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(per' → logprob: -0.012396035715937614
    2. '(
' → logprob: -5.137395858764648
    3. '(p' → logprob: -5.637395858764648
    4. '(' → logprob: -5.887395858764648
    5. 'per' → logprob: -9.387395858764648
    6. '(par' → logprob: -11.762395858764648
    7. '(

' → logprob: -12.387395858764648
    8. ' (' → logprob: -12.887395858764648
    9. '([' → logprob: -13.262395858764648
    10. '((' → logprob: -13.262395858764648

Token 488: '   ' (ID: 271)
  Prédit: '(per'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(per' → logprob: -0.05515803024172783
    2. '(
' → logprob: -3.4301581382751465
    3. 'per' → logprob: -3.9301581382751465
    4. '(' → logprob: -6.5551581382751465
    5. 'perm' → logprob: -9.055157661437988
    6. '(p' → logprob: -9.930157661437988
    7. '(

' → logprob: -11.180157661437988
    8. '	per' → logprob: -11.680157661437988
    9. '
' → logprob: -11.805157661437988
    10. ' permutations' → logprob: -12.305157661437988

Token 489: ' premiere' (ID: 52343)
  Prédit: 'per'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'per' → logprob: -0.004908535163849592
    2. 'prem' → logprob: -6.004908561706543
    3. '(per' → logprob: -6.504908561706543
    4. 'perm' → logprob: -7.254908561706543
    5. ' permutations' → logprob: -9.754908561706543
    6. '
' → logprob: -10.254908561706543
    7. 'ex' → logprob: -10.379908561706543
    8. 'de' → logprob: -10.879908561706543
    9. '	per' → logprob: -11.004908561706543
    10. '   ' → logprob: -11.004908561706543

Token 490: '_per' (ID: 10938)
  Prédit: '_per'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_per' → logprob: -0.00011081460979767144
    2. 'per' → logprob: -9.125110626220703
    3. '_' → logprob: -14.250110626220703
    4. 's' → logprob: -14.625110626220703
    5. '_perm' → logprob: -14.875110626220703
    6. '_p' → logprob: -16.375110626220703
    7. 'Permutation' → logprob: -17.125110626220703
    8. 'perm' → logprob: -17.125110626220703
    9. '-per' → logprob: -17.375110626220703
    10. 'Per' → logprob: -17.375110626220703

Token 491: 'mutation' (ID: 92896)
  Prédit: 'utation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'utation' → logprob: -0.5235718488693237
    2. 'mutation' → logprob: -0.8985718488693237
    3. 'mut' → logprob: -9.023571968078613
    4. 't' → logprob: -9.273571968078613
    5. 'ut' → logprob: -9.648571968078613
    6. 'tu' → logprob: -11.023571968078613
    7. '_mut' → logprob: -11.148571968078613
    8. 'putation' → logprob: -11.148571968078613
    9. 'lation' → logprob: -11.148571968078613
    10. 'm' → logprob: -11.273571968078613

Token 492: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00125749537255615
    2. ',
' → logprob: -7.376257419586182
    3. '(per' → logprob: -8.50125789642334
    4. ' ,' → logprob: -8.75125789642334
    5. 'per' → logprob: -9.25125789642334
    6. ',de' → logprob: -9.75125789642334
    7. ',

' → logprob: -10.37625789642334
    8. '[' → logprob: -10.50125789642334
    9. 'de' → logprob: -10.87625789642334
    10. ',p' → logprob: -11.87625789642334

Token 493: '   ' (ID: 271)
  Prédit: 'per'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'per' → logprob: -0.1404152363538742
    2. ' permutations' → logprob: -2.7654151916503906
    3. 'ex' → logprob: -2.8904151916503906
    4. 'de' → logprob: -5.765415191650391
    5. ' exponent' → logprob: -5.890415191650391
    6. '   ' → logprob: -5.890415191650391
    7. 'prem' → logprob: -6.890415191650391
    8. 'perm' → logprob: -7.140415191650391
    9. ' perm' → logprob: -8.14041519165039
    10. 'ap' → logprob: -8.14041519165039

Token 494: ' inverse' (ID: 53743)
  Prédit: 'per'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'per' → logprob: -0.030430646613240242
    2. 'ex' → logprob: -4.030430793762207
    3. 'prem' → logprob: -4.780430793762207
    4. 'de' → logprob: -6.030430793762207
    5. 'perm' → logprob: -7.530430793762207
    6. ' permutations' → logprob: -7.530430793762207
    7. '   ' → logprob: -9.530430793762207
    8. 'exp' → logprob: -10.530430793762207
    9. ' ' → logprob: -10.905430793762207
    10. '
' → logprob: -11.155430793762207

Token 495: '_per' (ID: 10938)
  Prédit: '_per'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_per' → logprob: -0.00010473522706888616
    2. 'per' → logprob: -9.375104904174805
    3. '_de' → logprob: -11.375104904174805
    4. '(per' → logprob: -12.125104904174805
    5. '_' → logprob: -13.375104904174805
    6. '_perm' → logprob: -15.250104904174805
    7. '_par' → logprob: -16.000104904174805
    8. '[' → logprob: -16.250104904174805
    9. 'Permutation' → logprob: -16.375104904174805
    10. '```' → logprob: -16.500104904174805

Token 496: 'mutation' (ID: 92896)
  Prédit: '_per'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_per' → logprob: -0.027608755975961685
    2. 'per' → logprob: -3.652608871459961
    3. 'utation' → logprob: -7.027608871459961
    4. 'mutation' → logprob: -8.902608871459961
    5. '(per' → logprob: -10.152608871459961
    6. 'inverse' → logprob: -10.402608871459961
    7. 'Permutation' → logprob: -10.777608871459961
    8. 'otation' → logprob: -11.152608871459961
    9. 'ution' → logprob: -11.152608871459961
    10. 'er' → logprob: -11.152608871459961

Token 497: '(de' (ID: 20586)
  Prédit: '(de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(de' → logprob: -0.6091899275779724
    2. '(per' → logprob: -0.9841899275779724
    3. '(p' → logprob: -2.859189987182617
    4. 'de' → logprob: -3.984189987182617
    5. 'per' → logprob: -5.484189987182617
    6. '(' → logprob: -7.109189987182617
    7. 'p' → logprob: -7.859189987182617
    8. 'prem' → logprob: -7.984189987182617
    9. '(
' → logprob: -8.109189987182617
    10. '(second' → logprob: -8.484189987182617

Token 498: 'ux' (ID: 1778)
  Prédit: 'ux'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ux' → logprob: -0.0016507796244695783
    2. 'prem' → logprob: -6.626650810241699
    3. 'per' → logprob: -9.2516508102417
    4. 'de' → logprob: -9.8766508102417
    5. 'eux' → logprob: -9.8766508102417
    6. '```' → logprob: -11.0016508102417
    7. 'aux' → logprob: -11.3766508102417
    8. 'us' → logprob: -11.5016508102417
    9. 'uz' → logprob: -11.5016508102417
    10. '``' → logprob: -12.3766508102417

Token 499: 'ieme' (ID: 75610)
  Prédit: 'ieme'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ieme' → logprob: -0.03535696491599083
    2. 'ième' → logprob: -3.6603569984436035
    3. 's' → logprob: -5.1603569984436035
    4. 'si' → logprob: -6.1603569984436035
    5. 'sie' → logprob: -8.160356521606445
    6. 'xi' → logprob: -8.160356521606445
    7. 'ime' → logprob: -8.410356521606445
    8. 'i' → logprob: -9.785356521606445
    9. '#' → logprob: -10.160356521606445
    10. 'iem' → logprob: -10.785356521606445

Token 500: '_per' (ID: 10938)
  Prédit: '_per'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_per' → logprob: -0.0003721622342709452
    2. 'per' → logprob: -8.250371932983398
    3. '_' → logprob: -9.375371932983398
    4. ')' → logprob: -11.625371932983398
    5. '_p' → logprob: -12.250371932983398
    6. '_perm' → logprob: -12.625371932983398
    7. 'er' → logprob: -13.750371932983398
    8. '_)' → logprob: -13.750371932983398
    9. ')_' → logprob: -14.250371932983398
    10. '[' → logprob: -14.500371932983398

Token 501: 'mutation' (ID: 92896)
  Prédit: 'mutation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mutation' → logprob: -0.3468504548072815
    2. 'rm' → logprob: -1.9718503952026367
    3. 'r' → logprob: -2.3468503952026367
    4. 'utation' → logprob: -3.4718503952026367
    5. 'ration' → logprob: -3.8468503952026367
    6. 't' → logprob: -5.846850395202637
    7. 'ation' → logprob: -7.596850395202637
    8. 'ution' → logprob: -7.971850395202637
    9. 'lation' → logprob: -7.971850395202637
    10. 'm' → logprob: -8.346850395202637

Token 502: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011444123461842537
    2. ')
' → logprob: -5.261444091796875
    3. '))' → logprob: -5.886444091796875
    4. '[' → logprob: -6.386444091796875
    5. '),' → logprob: -7.261444091796875
    6. ')[' → logprob: -7.261444091796875
    7. '),
' → logprob: -8.636444091796875
    8. '[
' → logprob: -9.886444091796875
    9. ')]' → logprob: -11.011444091796875
    10. ')#' → logprob: -11.386444091796875

Token 503: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.138441237155348e-05
    2. ')
' → logprob: -9.625091552734375
    3. '   ' → logprob: -11.500091552734375
    4. ',' → logprob: -12.250091552734375
    5. ' )' → logprob: -13.125091552734375
    6. ')#' → logprob: -13.250091552734375
    7. '[' → logprob: -13.500091552734375
    8. ')[' → logprob: -14.000091552734375
    9. ')

' → logprob: -14.125091552734375
    10. '),' → logprob: -14.375091552734375

Token 504: 'per' (ID: 543)
  Prédit: 'per'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'per' → logprob: -0.719525933265686
    2. ')' → logprob: -0.844525933265686
    3. '#' → logprob: -3.8445258140563965
    4. '
' → logprob: -4.0945258140563965
    5. '(
' → logprob: -5.0945258140563965
    6. 'result' → logprob: -5.3445258140563965
    7. '**' → logprob: -5.4695258140563965
    8. '[' → logprob: -5.4695258140563965
    9. '  
' → logprob: -5.4695258140563965
    10. ' 
' → logprob: -5.8445258140563965

Token 505: 'mutation' (ID: 92896)
  Prédit: 'mutation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mutation' → logprob: -0.01884050853550434
    2. 'mut' → logprob: -4.018840312957764
    3. 'm' → logprob: -7.893840312957764
    4. 'r' → logprob: -8.768840789794922
    5. 'mission' → logprob: -9.393840789794922
    6. 'mu' → logprob: -10.393840789794922
    7. 'mute' → logprob: -11.768840789794922
    8. 'met' → logprob: -11.768840789794922
    9. 'utation' → logprob: -12.018840789794922
    10. 'rm' → logprob: -12.518840789794922

Token 506: '_de' (ID: 5047)
  Prédit: '_de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_de' → logprob: -0.02395571395754814
    2. '_final' → logprob: -4.023955821990967
    3. '_com' → logprob: -5.773955821990967
    4. '_' → logprob: -6.523955821990967
    5. '_s' → logprob: -7.898955821990967
    6. '_c' → logprob: -9.023955345153809
    7. '_act' → logprob: -9.648955345153809
    8. '_base' → logprob: -9.648955345153809
    9. '_=' → logprob: -9.648955345153809
    10. 'de' → logprob: -9.773955345153809

Token 507: '_base' (ID: 17096)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.28142234683036804
    2. '_base' → logprob: -1.4064223766326904
    3. ' base' → logprob: -8.28142261505127
    4. 'bas' → logprob: -12.15642261505127
    5. 'Base' → logprob: -13.03142261505127
    6. 'abase' → logprob: -13.03142261505127
    7. 'de' → logprob: -13.40642261505127
    8. 'based' → logprob: -14.03142261505127
    9. 'basis' → logprob: -14.15642261505127
    10. '-base' → logprob: -14.28142261505127

Token 508: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12543590366840363
    2. '=' → logprob: -2.2504358291625977
    3. '<|end|>' → logprob: -5.125435829162598
    4. ',' → logprob: -5.875435829162598
    5. '[' → logprob: -7.375435829162598
    6. '_com' → logprob: -7.500435829162598
    7. ' ' → logprob: -7.875435829162598
    8. '_final' → logprob: -8.000435829162598
    9. ')' → logprob: -8.625435829162598
    10. '.' → logprob: -8.875435829162598

Token 509: ' appliquer' (ID: 172872)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.06999968737363815
    2. ' exponent' → logprob: -2.6949996948242188
    3. 'ap' → logprob: -11.069999694824219
    4. 'per' → logprob: -11.694999694824219
    5. ' ex' → logprob: -12.069999694824219
    6. ' ' → logprob: -12.444999694824219
    7. ' appliquer' → logprob: -12.569999694824219
    8. ' ' → logprob: -12.694999694824219
    9. '  ' → logprob: -13.069999694824219
    10. 'app' → logprob: -13.194999694824219

Token 510: '_per' (ID: 10938)
  Prédit: '_per'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_per' → logprob: -7.584239938296378e-06
    2. 'per' → logprob: -12.250007629394531
    3. '_par' → logprob: -13.500007629394531
    4. '_' → logprob: -14.375007629394531
    5. '_perm' → logprob: -15.250007629394531
    6. '_permission' → logprob: -16.62500762939453
    7. '_de' → logprob: -16.62500762939453
    8. '_pro' → logprob: -17.00000762939453
    9. '_code' → logprob: -17.25000762939453
    10. '(per' → logprob: -17.37500762939453

Token 511: 'mutation' (ID: 92896)
  Prédit: 'mutation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mutation' → logprob: -0.0003819332632701844
    2. 'mut' → logprob: -8.875381469726562
    3. 'utation' → logprob: -8.875381469726562
    4. 'per' → logprob: -9.750381469726562
    5. '_per' → logprob: -10.500381469726562
    6. 'm' → logprob: -12.375381469726562
    7. '_mut' → logprob: -12.625381469726562
    8. 'mission' → logprob: -13.125381469726562
    9. '_' → logprob: -13.500381469726562
    10. 'putation' → logprob: -13.625381469726562

Token 512: '(
' (ID: 1607)
  Prédit: '(per'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(per' → logprob: -0.02248147502541542
    2. '(
' → logprob: -3.8974814414978027
    3. '(' → logprob: -6.272481441497803
    4. '(p' → logprob: -10.772481918334961
    5. 'per' → logprob: -10.897481918334961
    6. '(pre' → logprob: -13.272481918334961
    7. '(par' → logprob: -13.272481918334961
    8. '(

' → logprob: -13.272481918334961
    9. '(ex' → logprob: -13.397481918334961
    10. '(
' → logprob: -14.022481918334961

Token 513: '   ' (ID: 271)
  Prédit: 'per'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'per' → logprob: -0.002017740160226822
    2. '(per' → logprob: -6.627017974853516
    3. ' permutation' → logprob: -8.627017974853516
    4. '
' → logprob: -8.627017974853516
    5. '   ' → logprob: -8.752017974853516
    6. 'perm' → logprob: -9.002017974853516
    7. '	per' → logprob: -10.377017974853516
    8. '(
' → logprob: -12.002017974853516
    9. '    
' → logprob: -12.502017974853516
    10. 'Permutation' → logprob: -13.127017974853516

Token 514: ' appliquer' (ID: 172872)
  Prédit: 'per'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'per' → logprob: -0.0004931025905534625
    2. 'de' → logprob: -8.750493049621582
    3. ' permutation' → logprob: -9.000493049621582
    4. 'perm' → logprob: -9.375493049621582
    5. 'ex' → logprob: -9.875493049621582
    6. 'prem' → logprob: -10.125493049621582
    7. '   ' → logprob: -11.125493049621582
    8. '
' → logprob: -12.750493049621582
    9. 'inverse' → logprob: -12.875493049621582
    10. 'Permutation' → logprob: -13.000493049621582

Token 515: '_per' (ID: 10938)
  Prédit: '_per'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_per' → logprob: -0.0012186899548396468
    2. '(per' → logprob: -6.876218795776367
    3. 'per' → logprob: -8.626218795776367
    4. '_' → logprob: -12.876218795776367
    5. '_par' → logprob: -13.626218795776367
    6. '(' → logprob: -14.126218795776367
    7. '_perm' → logprob: -14.501218795776367
    8. '	per' → logprob: -14.751218795776367
    9. '_de' → logprob: -14.876218795776367
    10. '_p' → logprob: -15.626218795776367

Token 516: 'mutation' (ID: 92896)
  Prédit: 'mutation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mutation' → logprob: -0.07028507441282272
    2. 'utation' → logprob: -2.6952850818634033
    3. 'mut' → logprob: -8.070284843444824
    4. 'mission' → logprob: -11.195284843444824
    5. 'ut' → logprob: -12.195284843444824
    6. '_mut' → logprob: -12.570284843444824
    7. 'ission' → logprob: -13.070284843444824
    8. 'm' → logprob: -13.570284843444824
    9. 'Mutation' → logprob: -13.570284843444824
    10. 'ution' → logprob: -14.070284843444824

Token 517: '(
' (ID: 1607)
  Prédit: '(per'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(per' → logprob: -0.03539896383881569
    2. '(
' → logprob: -3.4103989601135254
    3. '(' → logprob: -6.660398960113525
    4. '(p' → logprob: -8.160399436950684
    5. '(de' → logprob: -8.785399436950684
    6. 'per' → logprob: -11.785399436950684
    7. '(pre' → logprob: -12.285399436950684
    8. '(

' → logprob: -12.410399436950684
    9. '(par' → logprob: -12.535399436950684
    10. ' (' → logprob: -13.035399436950684

Token 518: '       ' (ID: 309)
  Prédit: 'per'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'per' → logprob: -0.012149104848504066
    2. '(per' → logprob: -4.762149333953857
    3. '   ' → logprob: -5.887149333953857
    4. '       ' → logprob: -8.2621488571167
    5. 'prem' → logprob: -8.6371488571167
    6. ' permutation' → logprob: -9.0121488571167
    7. '	per' → logprob: -9.5121488571167
    8. 'perm' → logprob: -9.5121488571167
    9. 'de' → logprob: -11.2621488571167
    10. '
' → logprob: -12.2621488571167

Token 519: ' deux' (ID: 10301)
  Prédit: 'per'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'per' → logprob: -0.008283346891403198
    2. 'prem' → logprob: -5.2582831382751465
    3. ' permutation' → logprob: -6.1332831382751465
    4. 'inverse' → logprob: -8.383283615112305
    5. 'de' → logprob: -8.508283615112305
    6. 'perm' → logprob: -8.633283615112305
    7. '   ' → logprob: -9.133283615112305
    8. 'ex' → logprob: -10.133283615112305
    9. '	per' → logprob: -11.008283615112305
    10. 'pre' → logprob: -11.383283615112305

Token 520: 'ieme' (ID: 75610)
  Prédit: 'ieme'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ieme' → logprob: -0.00691855326294899
    2. '_per' → logprob: -5.131918430328369
    3. 'ième' → logprob: -7.256918430328369
    4. '_p' → logprob: -8.381918907165527
    5. 'iem' → logprob: -11.256918907165527
    6. 'me' → logprob: -11.256918907165527
    7. 'per' → logprob: -12.256918907165527
    8. '_me' → logprob: -12.506918907165527
    9. 'eme' → logprob: -12.756918907165527
    10. 'e' → logprob: -12.756918907165527

Token 521: '_per' (ID: 10938)
  Prédit: '_per'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_per' → logprob: -0.0003564383659977466
    2. '_' → logprob: -8.000356674194336
    3. 'per' → logprob: -11.500356674194336
    4. '_p' → logprob: -13.000356674194336
    5. '_s' → logprob: -13.375356674194336
    6. '_perm' → logprob: -13.500356674194336
    7. ' _' → logprob: -14.625356674194336
    8. '[' → logprob: -14.875356674194336
    9. '_,' → logprob: -15.000356674194336
    10. '_pres' → logprob: -15.125356674194336

Token 522: 'mutation' (ID: 92896)
  Prédit: 'mutation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mutation' → logprob: -0.019312554970383644
    2. 'utation' → logprob: -4.394312381744385
    3. '_per' → logprob: -5.394312381744385
    4. 'per' → logprob: -6.769312381744385
    5. 'mut' → logprob: -7.394312381744385
    6. 'ermut' → logprob: -9.019312858581543
    7. 'Permutation' → logprob: -9.144312858581543
    8. '_mut' → logprob: -9.769312858581543
    9. ' permutation' → logprob: -9.894312858581543
    10. 'ation' → logprob: -10.894312858581543

Token 523: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0030705220997333527
    2. ',
' → logprob: -6.12807035446167
    3. '   ' → logprob: -7.25307035446167
    4. ' ,' → logprob: -9.378070831298828
    5. 'per' → logprob: -9.753070831298828
    6. ',p' → logprob: -11.378070831298828
    7. ',

' → logprob: -12.128070831298828
    8. '[' → logprob: -12.378070831298828
    9. '(per' → logprob: -12.878070831298828
    10. '       ' → logprob: -13.003070831298828

Token 524: '       ' (ID: 309)
  Prédit: 'per'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'per' → logprob: -0.3490138053894043
    2. 'inverse' → logprob: -2.2240138053894043
    3. '   ' → logprob: -2.7240138053894043
    4. ' inverse' → logprob: -2.8490138053894043
    5. ' permutation' → logprob: -2.9740138053894043
    6. '       ' → logprob: -4.724013805389404
    7. ' perm' → logprob: -7.724013805389404
    8. 'perm' → logprob: -7.724013805389404
    9. '    ' → logprob: -7.974013805389404
    10. '	per' → logprob: -8.474014282226562

Token 525: ' inverse' (ID: 53743)
  Prédit: 'inverse'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inverse' (adapté à ' inverse') → logprob: -0.6115642189979553
    2. 'per' → logprob: -0.8615642189979553
    3. ' inverse' → logprob: -3.7365641593933105
    4. ' permutation' → logprob: -5.1115641593933105
    5. 'prem' → logprob: -6.7365641593933105
    6. '   ' → logprob: -6.8615641593933105
    7. 'perm' → logprob: -6.8615641593933105
    8. 'in' → logprob: -7.9865641593933105
    9. '	per' → logprob: -8.486564636230469
    10. '       ' → logprob: -8.861564636230469

Token 526: '_per' (ID: 10938)
  Prédit: '_per'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_per' → logprob: -0.00047416388406418264
    2. '_de' → logprob: -7.750473976135254
    3. 'per' → logprob: -10.625473976135254
    4. '_' → logprob: -11.125473976135254
    5. '(per' → logprob: -12.875473976135254
    6. 'de' → logprob: -14.125473976135254
    7. '_p' → logprob: -15.250473976135254
    8. '(_' → logprob: -15.875473976135254
    9. '_des' → logprob: -15.875473976135254
    10. '(' → logprob: -16.25047492980957

Token 527: 'mutation' (ID: 92896)
  Prédit: '_per'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_per' → logprob: -0.05030002444982529
    2. 'per' → logprob: -3.050300121307373
    3. 'de' → logprob: -6.800300121307373
    4. '_de' → logprob: -7.550300121307373
    5. 'er' → logprob: -10.550299644470215
    6. 'perm' → logprob: -11.550299644470215
    7. '_perm' → logprob: -11.675299644470215
    8. '_p' → logprob: -12.675299644470215
    9. 'Permutation' → logprob: -12.925299644470215
    10. ' permutation' → logprob: -13.300299644470215

Token 528: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.2266528159379959
    2. 'prem' → logprob: -1.8516528606414795
    3. '(per' → logprob: -3.8516528606414795
    4. '(de' → logprob: -4.4766526222229
    5. 'de' → logprob: -4.8516526222229
    6. '(' → logprob: -6.4766526222229
    7. '(
' → logprob: -6.6016526222229
    8. 'per' → logprob: -6.8516526222229
    9. '(pre' → logprob: -7.2266526222229
    10. 'p' → logprob: -7.4766526222229

Token 529: 'rem' (ID: 1935)
  Prédit: 'rem'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rem' → logprob: -0.008419063873589039
    2. 'er' → logprob: -4.883419036865234
    3. 'erm' → logprob: -8.008419036865234
    4. 'r' → logprob: -9.133419036865234
    5. 'reme' → logprob: -9.258419036865234
    6. 'prem' → logprob: -9.508419036865234
    7. 'em' → logprob: -10.133419036865234
    8. 're' → logprob: -10.133419036865234
    9. 'erie' → logprob: -11.383419036865234
    10. 'rim' → logprob: -11.383419036865234

Token 530: 'iere' (ID: 19068)
  Prédit: 'iere'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iere' → logprob: -0.039514847099781036
    2. 'ere' → logprob: -3.2895147800445557
    3. 'ière' → logprob: -7.289515018463135
    4. 'prem' → logprob: -8.414514541625977
    5. 'erie' → logprob: -9.164514541625977
    6. 'ier' → logprob: -9.164514541625977
    7. 'ierre' → logprob: -9.414514541625977
    8. 'e' → logprob: -9.789514541625977
    9. 'ie' → logprob: -9.789514541625977
    10. 'ieme' → logprob: -10.164514541625977

Token 531: '_per' (ID: 10938)
  Prédit: '_per'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_per' → logprob: -6.24179228907451e-05
    2. 'per' → logprob: -10.125061988830566
    3. '_' → logprob: -10.875061988830566
    4. ')' → logprob: -13.875061988830566
    5. '_p' → logprob: -14.250061988830566
    6. ')_' → logprob: -14.375061988830566
    7. '_)' → logprob: -14.750061988830566
    8. '_perm' → logprob: -16.000062942504883
    9. '_de' → logprob: -16.375062942504883
    10. '[' → logprob: -16.500062942504883

Token 532: 'mutation' (ID: 92896)
  Prédit: 'utation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'utation' → logprob: -0.005856385920196772
    2. 'ution' → logprob: -5.255856513977051
    3. 'mutation' → logprob: -8.00585651397705
    4. 'ation' → logprob: -9.13085651397705
    5. 't' → logprob: -10.13085651397705
    6. 'ission' → logprob: -10.25585651397705
    7. 'tion' → logprob: -10.75585651397705
    8. 'ption' → logprob: -10.88085651397705
    9. 'lation' → logprob: -11.00585651397705
    10. 'ut' → logprob: -11.38085651397705

Token 533: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4670145809650421
    2. '   ' → logprob: -1.4670145511627197
    3. ')
' → logprob: -1.9670145511627197
    4. '),' → logprob: -6.717014789581299
    5. '),
' → logprob: -6.842014789581299
    6. '       ' → logprob: -9.09201431274414
    7. ')))' → logprob: -9.71701431274414
    8. '))' → logprob: -9.84201431274414
    9. '[' → logprob: -10.34201431274414
    10. '[
' → logprob: -10.84201431274414

Token 534: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12798017263412476
    2. '   ' → logprob: -2.1279802322387695
    3. ')
' → logprob: -7.1279802322387695
    4. '),' → logprob: -8.50298023223877
    5. '       ' → logprob: -11.25298023223877
    6. '	' → logprob: -11.62798023223877
    7. ' )' → logprob: -12.00298023223877
    8. '   ' → logprob: -12.75298023223877
    9. '))' → logprob: -13.00298023223877
    10. '[' → logprob: -13.25298023223877

Token 535: ' ),
' (ID: 4954)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06437712162733078
    2. '   ' → logprob: -2.8143770694732666
    3. '),' → logprob: -6.689377307891846
    4. ')
' → logprob: -6.814377307891846
    5. '),
' (adapté à ' ),
') → logprob: -10.939376831054688
    6. '))' → logprob: -10.939376831054688
    7. ' )' → logprob: -12.064376831054688
    8. '       ' → logprob: -12.064376831054688
    9. ' ' → logprob: -13.064376831054688
    10. '	' → logprob: -13.689376831054688

Token 536: '   ' (ID: 271)
  Prédit: 'per'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'per' → logprob: -0.029899397864937782
    2. ' permutation' → logprob: -3.7798993587493896
    3. '   ' → logprob: -5.404899597167969
    4. 'inverse' → logprob: -6.654899597167969
    5. ' inverse' → logprob: -8.654899597167969
    6. '       ' → logprob: -8.654899597167969
    7. 'perm' → logprob: -9.154899597167969
    8. '	per' → logprob: -9.404899597167969
    9. ' ' → logprob: -9.779899597167969
    10. 'prem' → logprob: -10.029899597167969

Token 537: ' permutation' (ID: 135200)
  Prédit: 'per'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'per' → logprob: -0.0024427161552011967
    2. 'inverse' → logprob: -6.877442836761475
    3. ' permutation' → logprob: -6.877442836761475
    4. 'perm' → logprob: -9.252442359924316
    5. '   ' → logprob: -9.377442359924316
    6. 'prem' → logprob: -9.752442359924316
    7. '	per' → logprob: -10.877442359924316
    8. '     ' → logprob: -11.002442359924316
    9. ' ' → logprob: -11.127442359924316
    10. 'in' → logprob: -11.252442359924316

Token 538: '_de' (ID: 5047)
  Prédit: '_de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_de' → logprob: -0.0006479830481112003
    2. 'de' → logprob: -7.875648021697998
    3. '_com' → logprob: -8.50064754486084
    4. '_per' → logprob: -9.87564754486084
    5. '[' → logprob: -11.62564754486084
    6. '_base' → logprob: -14.00064754486084
    7. ' de' → logprob: -14.37564754486084
    8. 'com' → logprob: -14.62564754486084
    9. ')' → logprob: -14.62564754486084
    10. '_d' → logprob: -15.12564754486084

Token 539: '_base' (ID: 17096)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.04872816428542137
    2. '_base' → logprob: -3.0487282276153564
    3. 'de' → logprob: -9.798727989196777
    4. 'per' → logprob: -10.048727989196777
    5. 'bas' → logprob: -11.048727989196777
    6. '_de' → logprob: -12.423727989196777
    7. 'com' → logprob: -12.548727989196777
    8. '_per' → logprob: -12.923727989196777
    9. ' base' → logprob: -13.173727989196777
    10. '
' → logprob: -13.548727989196777

Token 540: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.3915141355246305e-05
    2. ')
' → logprob: -10.75002384185791
    3. ' )' → logprob: -13.50002384185791
    4. '))' → logprob: -15.37502384185791
    5. ')`' → logprob: -15.50002384185791
    6. ')

' → logprob: -15.62502384185791
    7. '[' → logprob: -16.125024795532227
    8. ')#' → logprob: -17.000024795532227
    9. '#' → logprob: -17.125024795532227
    10. '),' → logprob: -17.125024795532227

Token 541: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09957526624202728
    2. 'per' → logprob: -3.8495752811431885
    3. '<|end|>' → logprob: -4.099575042724609
    4. '
' → logprob: -4.474575042724609
    5. '#' → logprob: -4.474575042724609
    6. '  
' → logprob: -5.099575042724609
    7. '[' → logprob: -5.224575042724609
    8. 'if' → logprob: -5.349575042724609
    9. ')
' → logprob: -6.224575042724609
    10. ' 
' → logprob: -6.224575042724609

Token 542: '#' (ID: 2)
  Prédit: 'per'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'per' → logprob: -0.4766025245189667
    2. 'result' → logprob: -1.476602554321289
    3. '#' → logprob: -3.226602554321289
    4. 'nombre' → logprob: -3.476602554321289
    5. 'res' → logprob: -4.101602554321289
    6. 'ex' → logprob: -4.226602554321289
    7. ')' → logprob: -5.226602554321289
    8. 'k' → logprob: -5.476602554321289
    9. 'multip' → logprob: -5.601602554321289
    10. 'operation' → logprob: -5.976602554321289

Token 543: ' Application' (ID: 12493)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.0204858779907227
    2. 'pu' → logprob: -1.6454858779907227
    3. 'reste' → logprob: -1.7704858779907227
    4. 'part' → logprob: -2.2704858779907227
    5. 'per' → logprob: -2.7704858779907227
    6. 'ex' → logprob: -2.7704858779907227
    7. 'multip' → logprob: -4.395485877990723
    8. 'rés' → logprob: -4.770485877990723
    9. 'if' → logprob: -5.270485877990723
    10. 'res' → logprob: -5.520485877990723

Token 544: ' efficace' (ID: 54338)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'de' → logprob: -1.1149187088012695
    2. ' =' → logprob: -1.4899187088012695
    3. 'final' → logprob: -2.2399187088012695
    4. '_final' → logprob: -2.6149187088012695
    5. '_de' → logprob: -2.7399187088012695
    6. '_result' → logprob: -3.2399187088012695
    7. 'du' → logprob: -3.3649187088012695
    8. '=' → logprob: -3.8649187088012695
    9. 'result' → logprob: -3.9899187088012695
    10. ' de' → logprob: -3.9899187088012695

Token 545: ' du' (ID: 1462)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.2617683708667755
    2. 'final' → logprob: -2.011768341064453
    3. 'per' → logprob: -4.011768341064453
    4. 'du' → logprob: -4.136768341064453
    5. '_final' → logprob: -4.261768341064453
    6. ' de' → logprob: -4.386768341064453
    7. 'result' → logprob: -4.886768341064453
    8. 'for' → logprob: -5.511768341064453
    9. '_de' → logprob: -5.761768341064453
    10. '_' → logprob: -6.136768341064453

Token 546: ' cycle' (ID: 15839)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.38875964283943176
    2. 'per' → logprob: -1.1387596130371094
    3. ' exponent' → logprob: -6.388759613037109
    4. ' permutation' → logprob: -9.01375961303711
    5. 'perm' → logprob: -10.51375961303711
    6. 'nombre' → logprob: -11.38875961303711
    7. ' ex' → logprob: -12.01375961303711
    8. 'exp' → logprob: -12.38875961303711
    9. '
' → logprob: -12.76375961303711
    10. 'multip' → logprob: -13.13875961303711

Token 547: ' principal' (ID: 10589)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.28118985891342163
    2. 'final' → logprob: -2.0311899185180664
    3. 'per' → logprob: -2.5311899185180664
    4. 'multip' → logprob: -4.906189918518066
    5. 'rés' → logprob: -5.156189918518066
    6. 'par' → logprob: -5.406189918518066
    7. 'de' → logprob: -5.531189918518066
    8. 'res' → logprob: -5.656189918518066
    9. 'com' → logprob: -5.656189918518066
    10. 'ex' → logprob: -6.156189918518066

Token 548: '
' (ID: 198)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.33710038661956787
    2. 'per' → logprob: -1.3371003866195679
    3. 'rés' → logprob: -5.337100505828857
    4. '=' → logprob: -5.337100505828857
    5. 'final' → logprob: -5.712100505828857
    6. 'res' → logprob: -5.837100505828857
    7. ' =' → logprob: -6.212100505828857
    8. 'multip' → logprob: -6.962100505828857
    9. 'for' → logprob: -7.337100505828857
    10. 'ex' → logprob: -7.337100505828857

Token 549: 'nombre' (ID: 28576)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.287584125995636
    2. 'per' → logprob: -1.4125840663909912
    3. 'rés' → logprob: -5.53758430480957
    4. 'pu' → logprob: -7.41258430480957
    5. 'cycle' → logprob: -7.41258430480957
    6. 'perm' → logprob: -7.66258430480957
    7. 'res' → logprob: -8.03758430480957
    8. ' resultat' → logprob: -9.28758430480957
    9. 'resultado' → logprob: -10.16258430480957
    10. 'p' → logprob: -10.53758430480957

Token 550: '_cycles' (ID: 183228)
  Prédit: '_operations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_operations' → logprob: -0.003744502319023013
    2. '_des' → logprob: -6.128744602203369
    3. '_' → logprob: -7.003744602203369
    4. '_op' → logprob: -8.003744125366211
    5. '_ops' → logprob: -9.128744125366211
    6. '_oper' → logprob: -9.503744125366211
    7. '_de' → logprob: -9.753744125366211
    8. '=_' → logprob: -10.878744125366211
    9. '_d' → logprob: -11.128744125366211
    10. '_per' → logprob: -11.753744125366211

Token 551: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02129441127181053
    2. '=' → logprob: -3.896294355392456
    3. '_' → logprob: -7.396294593811035
    4. ' ' → logprob: -9.896294593811035
    5. ',' → logprob: -10.396294593811035
    6. ' ' → logprob: -11.146294593811035
    7. '_space' → logprob: -12.146294593811035
    8. '=int' → logprob: -12.146294593811035
    9. ' _' → logprob: -12.271294593811035
    10. ' ,' → logprob: -12.271294593811035

Token 552: ' (' (ID: 350)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.5759798288345337
    2. ' nombre' → logprob: -0.8259798288345337
    3. ' ' → logprob: -10.950980186462402
    4. '(nombre' → logprob: -11.325980186462402
    5. ' nombres' → logprob: -11.950980186462402
    6. '   ' → logprob: -12.825980186462402
    7. ' ' → logprob: -14.700980186462402
    8. 'n' → logprob: -14.700980186462402
    9. '_nombre' → logprob: -15.200980186462402
    10. ' nombr' → logprob: -15.950980186462402

Token 553: 'nombre' (ID: 28576)
  Prédit: 'nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -5.872261317563243e-05
    2. ' nombre' → logprob: -9.750059127807617
    3. '   ' → logprob: -15.000059127807617
    4. '(nombre' → logprob: -16.750059127807617
    5. ' ' → logprob: -18.375059127807617
    6. 'Nombre' → logprob: -18.625059127807617
    7. '_nombre' → logprob: -19.375059127807617
    8. 'nom' → logprob: -19.875059127807617
    9. 'n' → logprob: -20.375059127807617
    10. 'nb' → logprob: -20.375059127807617

Token 554: '_operations' (ID: 148404)
  Prédit: '_operations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_operations' → logprob: -0.0012464241590350866
    2. '_cycles' → logprob: -7.126246452331543
    3. '_' → logprob: -8.376246452331543
    4. '_op' → logprob: -9.251246452331543
    5. '_ops' → logprob: -10.501246452331543
    6. '_oper' → logprob: -10.751246452331543
    7. '_des' → logprob: -10.751246452331543
    8. ' _' → logprob: -11.876246452331543
    9. '_d' → logprob: -11.876246452331543
    10. ')_' → logprob: -11.876246452331543

Token 555: ' -' (ID: 533)
  Prédit: ' //'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.013936658389866352
    2. '//' → logprob: -4.763936519622803
    3. ')' → logprob: -5.263936519622803
    4. ' ' → logprob: -10.138936996459961
    5. ' ' → logprob: -10.388936996459961
    6. ' //
' → logprob: -10.763936996459961
    7. ')//' → logprob: -10.888936996459961
    8. ' )' → logprob: -11.013936996459961
    9. '#' → logprob: -12.888936996459961
    10. ' 
' → logprob: -14.638936996459961

Token 556: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.05194130539894104
    2. ' ' → logprob: -3.676941394805908
    3. '6' → logprob: -3.926941394805908
    4. 'nombre' → logprob: -6.051941394805908
    5. '(' → logprob: -7.051941394805908
    6. '(nombre' → logprob: -7.176941394805908
    7. ' (' → logprob: -7.301941394805908
    8. ' nombre' → logprob: -7.676941394805908
    9. '```' → logprob: -8.92694091796875
    10. ')' → logprob: -9.05194091796875

Token 557: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.08874008059501648
    2. '6' → logprob: -3.338740110397339
    3. 'nombre' → logprob: -4.21373987197876
    4. '(nombre' → logprob: -4.21373987197876
    5. '2' → logprob: -4.46373987197876
    6. '(' → logprob: -5.46373987197876
    7. '(n' → logprob: -6.83873987197876
    8. ' ' → logprob: -7.08873987197876
    9. '3' → logprob: -7.33873987197876
    10. ' (' → logprob: -7.96373987197876

Token 558: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003643058007583022
    2. ')//' → logprob: -8.375364303588867
    3. ' )' → logprob: -9.125364303588867
    4. ' //' → logprob: -11.250364303588867
    5. '+' → logprob: -12.375364303588867
    6. ')
' → logprob: -12.500364303588867
    7. '//' → logprob: -13.125364303588867
    8. '-' → logprob: -14.250364303588867
    9. '[' → logprob: -15.625364303588867
    10. ']' → logprob: -15.750364303588867

Token 559: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.004991455469280481
    2. '//' → logprob: -5.75499153137207
    3. ')' → logprob: -6.50499153137207
    4. '#' → logprob: -9.37999153137207
    5. ' ' → logprob: -9.75499153137207
    6. ' //
' → logprob: -10.25499153137207
    7. '```' → logprob: -10.75499153137207
    8. '
' → logprob: -11.00499153137207
    9. '<|end|>' → logprob: -11.00499153137207
    10. '...' → logprob: -11.12999153137207

Token 560: ' ' (ID: 220)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.00029625516617670655
    2. ' ' → logprob: -8.125296592712402
    3. '```' → logprob: -16.250295639038086
    4. '1' → logprob: -16.500295639038086
    5. '
' → logprob: -17.750295639038086
    6. ' ' → logprob: -18.375295639038086
    7. '   ' → logprob: -18.750295639038086
    8. '  ' → logprob: -18.875295639038086
    9. '  
' → logprob: -19.125295639038086
    10. '\
' → logprob: -19.812795639038086

Token 561: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.0
    3. '```' → logprob: -17.25
    4. '1' → logprob: -18.875
    5. '٦' → logprob: -19.625
    6. 'six' → logprob: -20.125
    7. '   ' → logprob: -20.1875
    8. '६' → logprob: -20.5
    9. '' → logprob: -20.5625
    10. '(' → logprob: -20.625

Token 562: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6407953500747681
    2. 'per' → logprob: -0.8907953500747681
    3. 'nombre' → logprob: -3.3907952308654785
    4. ')' → logprob: -5.1407952308654785
    5. '  
' → logprob: -5.7657952308654785
    6. '
' → logprob: -5.8907952308654785
    7. ')
' → logprob: -6.0157952308654785
    8. ' 
' → logprob: -6.2657952308654785
    9. '#' → logprob: -6.5157952308654785
    10. 'cycle' → logprob: -6.7657952308654785

Token 563: 'per' (ID: 543)
  Prédit: 'per'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'per' → logprob: -0.29856348037719727
    2. 'result' → logprob: -1.4235634803771973
    3. 'cycle' → logprob: -5.173563480377197
    4. 'rés' → logprob: -5.298563480377197
    5. 'pu' → logprob: -5.798563480377197
    6. 'res' → logprob: -6.923563480377197
    7. 'perm' → logprob: -7.048563480377197
    8. 'part' → logprob: -8.298563003540039
    9. '#' → logprob: -8.798563003540039
    10. 'if' → logprob: -9.048563003540039

Token 564: 'mutation' (ID: 92896)
  Prédit: 'mutation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mutation' → logprob: -0.03443633392453194
    2. 'mut' → logprob: -3.4094362258911133
    3. 'mission' → logprob: -8.159436225891113
    4. 'ermut' → logprob: -9.159436225891113
    5. 'm' → logprob: -9.409436225891113
    6. 'r' → logprob: -9.659436225891113
    7. 'utation' → logprob: -9.659436225891113
    8. 'mu' → logprob: -9.784436225891113
    9. '_mut' → logprob: -10.659436225891113
    10. 'nombre' → logprob: -11.159436225891113

Token 565: '_ap' (ID: 45078)
  Prédit: '_de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_de' → logprob: -0.058022383600473404
    2. '_final' → logprob: -3.9330224990844727
    3. '_c' → logprob: -4.058022499084473
    4. '_ap' → logprob: -5.183022499084473
    5. '_ex' → logprob: -5.558022499084473
    6. '_cycle' → logprob: -6.183022499084473
    7. '_comp' → logprob: -6.933022499084473
    8. 'de' → logprob: -7.183022499084473
    9. '_' → logprob: -7.183022499084473
    10. '_result' → logprob: -7.308022499084473

Token 566: 'res' (ID: 430)
  Prédit: 'pli'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pli' → logprob: -0.7142728567123413
    2. 'plique' → logprob: -1.3392728567123413
    3. 'pl' → logprob: -1.5892728567123413
    4. 'pliquer' → logprob: -3.839272975921631
    5. 'p' → logprob: -4.589272975921631
    6. 'plic' → logprob: -5.839272975921631
    7. 'ply' → logprob: -5.839272975921631
    8. 'plied' → logprob: -6.339272975921631
    9. 'li' → logprob: -6.714272975921631
    10. 'par' → logprob: -7.339272975921631

Token 567: '_cycles' (ID: 183228)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.23725217580795288
    2. ' =' → logprob: -2.4872522354125977
    3. '_cycle' → logprob: -2.8622522354125977
    4. '_cycles' → logprob: -2.8622522354125977
    5. '_nombre' → logprob: -5.612252235412598
    6. 'nombre' → logprob: -5.737252235412598
    7. 'cycles' → logprob: -6.362252235412598
    8. '_' → logprob: -6.737252235412598
    9. '_ex' → logprob: -6.862252235412598
    10. '_c' → logprob: -6.987252235412598

Token 568: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01815064437687397
    2. '=' → logprob: -4.018150806427002
    3. '[' → logprob: -15.643150329589844
    4. ',' → logprob: -15.768150329589844
    5. 's' → logprob: -16.018150329589844
    6. ' ' → logprob: -16.143150329589844
    7. ')' → logprob: -17.018150329589844
    8. ' =[' → logprob: -17.018150329589844
    9. ' ' → logprob: -17.268150329589844
    10. ']' → logprob: -17.518150329589844

Token 569: ' exponent' (ID: 51159)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.004623087588697672
    2. ' exponent' → logprob: -5.379622936248779
    3. ' ' → logprob: -14.129623413085938
    4. '   ' → logprob: -14.504623413085938
    5. 'Exponent' → logprob: -14.754623413085938
    6. '	ex' → logprob: -15.254623413085938
    7. ' ex' → logprob: -15.379623413085938
    8. '(ex' → logprob: -16.129623413085938
    9. 'exp' → logprob: -16.254623413085938
    10. '  ' → logprob: -16.379623413085938

Token 570: 'ier' (ID: 905)
  Prédit: 'ier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ier' → logprob: -2.165027217415627e-05
    2. 'er' → logprob: -11.250021934509277
    3. '_per' → logprob: -12.250021934509277
    4. 'per' → logprob: -12.750021934509277
    5. 'i' → logprob: -14.875021934509277
    6. 'iter' → logprob: -16.00002098083496
    7. '   ' → logprob: -16.87502098083496
    8. '_' → logprob: -17.00002098083496
    9. '```' → logprob: -17.00002098083496
    10. 'uer' → logprob: -17.00002098083496

Token 571: '_per' (ID: 10938)
  Prédit: '_per'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_per' → logprob: -4.60414821645827e-06
    2. 'per' → logprob: -13.125004768371582
    3. '_par' → logprob: -13.500004768371582
    4. '(per' → logprob: -14.500004768371582
    5. '_' → logprob: -15.250004768371582
    6. 'er' → logprob: -15.500004768371582
    7. '	per' → logprob: -17.250003814697266
    8. 'e' → logprob: -17.750003814697266
    9. '_de' → logprob: -18.000003814697266
    10. '_perm' → logprob: -18.250003814697266

Token 572: 'mutation' (ID: 92896)
  Prédit: 'mutation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mutation' → logprob: -0.02528015896677971
    2. 'mut' → logprob: -4.400279998779297
    3. 'utation' → logprob: -4.400279998779297
    4. '_mut' → logprob: -8.900279998779297
    5. 'mer' → logprob: -9.900279998779297
    6. 'uer' → logprob: -10.150279998779297
    7. 'per' → logprob: -10.275279998779297
    8. 'uter' → logprob: -10.400279998779297
    9. '_per' → logprob: -10.525279998779297
    10. 'ution' → logprob: -10.775279998779297

Token 573: '(per' (ID: 96497)
  Prédit: '(per'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(per' → logprob: -0.00030686063109897077
    2. '(' → logprob: -8.750307083129883
    3. '(
' → logprob: -9.000307083129883
    4. '(p' → logprob: -11.125307083129883
    5. 'per' → logprob: -11.625307083129883
    6. '(par' → logprob: -14.500307083129883
    7. '(pre' → logprob: -15.375307083129883
    8. '	per' → logprob: -16.125307083129883
    9. '(pe' → logprob: -16.250307083129883
    10. '(pr' → logprob: -16.375307083129883

Token 574: 'mutation' (ID: 92896)
  Prédit: 'mutation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mutation' → logprob: -0.0012119027087464929
    2. 'mut' → logprob: -7.126212120056152
    3. 'utation' → logprob: -7.876212120056152
    4. 'm' → logprob: -10.751212120056152
    5. 'mission' → logprob: -12.376212120056152
    6. 'met' → logprob: -14.751212120056152
    7. 'ut' → logprob: -15.001212120056152
    8. 'mu' → logprob: -15.501212120056152
    9. 'Mutation' → logprob: -15.751212120056152
    10. 'putation' → logprob: -15.751212120056152

Token 575: '_de' (ID: 5047)
  Prédit: '_de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_de' → logprob: -0.00286918506026268
    2. 'de' → logprob: -5.877869129180908
    3. '_per' → logprob: -9.877869606018066
    4. '[' → logprob: -12.377869606018066
    5. '_ap' → logprob: -12.502869606018066
    6. '_com' → logprob: -13.127869606018066
    7. 'per' → logprob: -14.377869606018066
    8. 'ap' → logprob: -14.502869606018066
    9. 'De' → logprob: -14.752869606018066
    10. ',de' → logprob: -15.002869606018066

Token 576: '_base' (ID: 17096)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.03366564214229584
    2. '_base' → logprob: -3.408665657043457
    3. 'cycles' → logprob: -12.158665657043457
    4. 'bas' → logprob: -12.658665657043457
    5. ' base' → logprob: -13.033665657043457
    6. 'Base' → logprob: -13.283665657043457
    7. '(base' → logprob: -13.408665657043457
    8. 'cycle' → logprob: -13.783665657043457
    9. 'bases' → logprob: -13.783665657043457
    10. 'abase' → logprob: -13.908665657043457

Token 577: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00029625516617670655
    2. ',n' → logprob: -8.250296592712402
    3. '(nombre' → logprob: -10.750296592712402
    4. ' ,' → logprob: -11.875296592712402
    5. '(n' → logprob: -13.250296592712402
    6. ')' → logprob: -13.375296592712402
    7. 'nombre' → logprob: -14.000296592712402
    8. ',
' → logprob: -14.375296592712402
    9. '(' → logprob: -14.500296592712402
    10. ',

' → logprob: -15.250296592712402

Token 578: ' nombre' (ID: 9733)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.0009115827269852161
    2. ' nombre' → logprob: -7.000911712646484
    3. '(nombre' → logprob: -16.125911712646484
    4. '   ' → logprob: -17.375911712646484
    5. 'nom' → logprob: -18.750911712646484
    6. ' ' → logprob: -19.625911712646484
    7. '_nombre' → logprob: -19.875911712646484
    8. 'Nombre' → logprob: -20.125911712646484
    9. 'n' → logprob: -20.625911712646484
    10. ' nombres' → logprob: -20.625911712646484

Token 579: '_cycles' (ID: 183228)
  Prédit: '_cycles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cycles' → logprob: -0.00010342398309148848
    2. 'cycles' → logprob: -9.250102996826172
    3. '_c' → logprob: -12.000102996826172
    4. 'ycles' → logprob: -14.000102996826172
    5. 'Cycles' → logprob: -16.500102996826172
    6. '_' → logprob: -17.000102996826172
    7. 'cycl' → logprob: -17.000102996826172
    8. ' cycles' → logprob: -17.625102996826172
    9. 'cy' → logprob: -18.125102996826172
    10. 'c' → logprob: -18.375102996826172

Token 580: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00013560164370574057
    2. '[' → logprob: -9.62513542175293
    3. ')
' → logprob: -11.00013542175293
    4. '#' → logprob: -11.37513542175293
    5. ']' → logprob: -11.50013542175293
    6. '<|end|>' → logprob: -11.62513542175293
    7. ' )' → logprob: -12.12513542175293
    8. '+' → logprob: -12.75013542175293
    9. ')#' → logprob: -12.87513542175293
    10. '(' → logprob: -13.50013542175293

Token 581: '#' (ID: 2)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.5317917466163635
    2. '#' → logprob: -1.7817916870117188
    3. 'if' → logprob: -2.2817916870117188
    4. 'reste' → logprob: -3.0317916870117188
    5. 'per' → logprob: -3.5317916870117188
    6. 'position' → logprob: -4.281791687011719
    7. 'res' → logprob: -4.656791687011719
    8. 'rest' → logprob: -4.781791687011719
    9. 'rés' → logprob: -4.906791687011719
    10. 'print' → logprob: -5.156791687011719

Token 582: ' Dé' (ID: 27247)
  Prédit: 'per'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'per' → logprob: -0.9245330691337585
    2. 'result' → logprob: -0.9245330691337585
    3. '#' → logprob: -2.6745331287384033
    4. 'rés' → logprob: -2.7995331287384033
    5. 'for' → logprob: -4.049532890319824
    6. 'sequence' → logprob: -4.049532890319824
    7. 'position' → logprob: -4.549532890319824
    8. 'reste' → logprob: -4.924532890319824
    9. 'indice' → logprob: -5.799532890319824
    10. 'if' → logprob: -5.924532890319824

Token 583: 'termination' (ID: 173292)
  Prédit: 'placement'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'placement' → logprob: -0.2720702886581421
    2. 'but' → logprob: -2.3970704078674316
    3. 'cal' → logprob: -2.5220704078674316
    4. 'f' → logprob: -3.6470704078674316
    5. 'fin' → logprob: -4.022070407867432
    6. 'r' → logprob: -5.772070407867432
    7. 'termination' → logprob: -5.772070407867432
    8. 'comp' → logprob: -5.897070407867432
    9. 'composition' → logprob: -6.272070407867432
    10. 'ni' → logprob: -6.522070407867432

Token 584: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.445882111787796
    2. 'de' → logprob: -1.4458820819854736
    3. 'final' → logprob: -2.8208820819854736
    4. 'du' → logprob: -3.8208820819854736
    5. ' des' → logprob: -4.320882320404053
    6. 'des' → logprob: -4.570882320404053
    7. ' du' → logprob: -5.070882320404053
    8. '_final' → logprob: -5.820882320404053
    9. ' finale' → logprob: -5.820882320404053
    10. ' final' → logprob: -6.195882320404053

Token 585: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.11115346103906631
    2. ' la' → logprob: -2.9861533641815186
    3. 'l' → logprob: -3.3611533641815186
    4. 'per' → logprob: -3.9861533641815186
    5. ' l' → logprob: -6.986153602600098
    6. ' permutation' → logprob: -8.736153602600098
    7. 'lap' → logprob: -9.611153602600098
    8. 'le' → logprob: -9.611153602600098
    9. 'len' → logprob: -9.986153602600098
    10. 'indice' → logprob: -10.111153602600098

Token 586: ' permutation' (ID: 135200)
  Prédit: 'per'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'per' → logprob: -0.05376822501420975
    2. 'position' → logprob: -4.178768157958984
    3. 'reste' → logprob: -4.303768157958984
    4. 'result' → logprob: -4.678768157958984
    5. 'rest' → logprob: -5.803768157958984
    6. 'rés' → logprob: -6.303768157958984
    7. 'dern' → logprob: -6.428768157958984
    8. 'der' → logprob: -6.553768157958984
    9. 'indice' → logprob: -6.553768157958984
    10. 'perm' → logprob: -7.053768157958984

Token 587: ' complément' (ID: 81265)
  Prédit: 'final'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'final' → logprob: -0.015533331781625748
    2. '_final' → logprob: -5.140533447265625
    3. 'à' → logprob: -5.265533447265625
    4. 'rés' → logprob: -6.265533447265625
    5. 'result' → logprob: -6.515533447265625
    6. ' finale' → logprob: -7.765533447265625
    7. '```' → logprob: -8.890533447265625
    8. 'rest' → logprob: -9.265533447265625
    9. 'su' → logprob: -9.890533447265625
    10. 'ap' → logprob: -9.890533447265625

Token 588: 'aire' (ID: 8189)
  Prédit: 'aire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aire' → logprob: -0.0019935856107622385
    2. 'e' → logprob: -6.751993656158447
    3. '_' → logprob: -8.376993179321289
    4. 'ion' → logprob: -9.001993179321289
    5. '[' → logprob: -9.126993179321289
    6. '#' → logprob: -9.626993179321289
    7. 'a' → logprob: -9.876993179321289
    8. '=' → logprob: -10.751993179321289
    9. 'air' → logprob: -10.751993179321289
    10. 'ent' → logprob: -10.876993179321289

Token 589: ' finale' (ID: 37759)
  Prédit: 'reste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reste' → logprob: -0.18881002068519592
    2. 'rest' → logprob: -2.188810110092163
    3. 'com' → logprob: -3.813810110092163
    4. 'if' → logprob: -4.188809871673584
    5. 'indice' → logprob: -4.438809871673584
    6. 'compl' → logprob: -5.688809871673584
    7. 're' → logprob: -6.188809871673584
    8. 'index' → logprob: -6.688809871673584
    9. 'part' → logprob: -7.688809871673584
    10. 'et' → logprob: -7.813809871673584

Token 590: '
' (ID: 198)
  Prédit: 'reste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reste' → logprob: -0.316681832075119
    2. 'if' → logprob: -2.1916818618774414
    3. 'rest' → logprob: -2.1916818618774414
    4. 'com' → logprob: -4.066681861877441
    5. 'nombre' → logprob: -4.816681861877441
    6. 'indice' → logprob: -5.066681861877441
    7. 're' → logprob: -5.191681861877441
    8. 'compl' → logprob: -6.316681861877441
    9. '=
' → logprob: -7.066681861877441
    10. 'final' → logprob: -7.191681861877441

Token 591: 'indice' (ID: 176697)
  Prédit: 'reste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reste' → logprob: -0.6953322291374207
    2. 'indice' → logprob: -1.4453322887420654
    3. 'per' → logprob: -2.1953322887420654
    4. 'rest' → logprob: -3.4453322887420654
    5. 'position' → logprob: -3.5703322887420654
    6. 'index' → logprob: -3.5703322887420654
    7. 're' → logprob: -4.320332050323486
    8. 'et' → logprob: -4.570332050323486
    9. 'part' → logprob: -4.695332050323486
    10. 'de' → logprob: -4.820332050323486

Token 592: '_per' (ID: 10938)
  Prédit: '_final'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_final' → logprob: -0.5100525617599487
    2. '_com' → logprob: -1.6350525617599487
    3. '_re' → logprob: -2.2600526809692383
    4. '_rest' → logprob: -3.3850526809692383
    5. '_s' → logprob: -4.010052680969238
    6. ' =' → logprob: -4.010052680969238
    7. '_act' → logprob: -4.635052680969238
    8. '_' → logprob: -5.135052680969238
    9. '_sup' → logprob: -5.885052680969238
    10. '_comp' → logprob: -5.885052680969238

Token 593: 'mutation' (ID: 92896)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.22806601226329803
    2. 'r' → logprob: -2.8530659675598145
    3. 'tat' → logprob: -3.9780659675598145
    4. 'm' → logprob: -4.3530659675598145
    5. 'rem' → logprob: -4.4780659675598145
    6. 'met' → logprob: -4.6030659675598145
    7. '_t' → logprob: -4.9780659675598145
    8. 'mut' → logprob: -5.2280659675598145
    9. '```' → logprob: -5.2280659675598145
    10. 'te' → logprob: -5.3530659675598145

Token 594: '_com' (ID: 10828)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20227229595184326
    2. '=' → logprob: -1.7022722959518433
    3. '_mod' → logprob: -8.452272415161133
    4. '_cycle' → logprob: -8.702272415161133
    5. '_rest' → logprob: -8.827272415161133
    6. '_final' → logprob: -9.077272415161133
    7. 'final' → logprob: -9.577272415161133
    8. '_inter' → logprob: -10.202272415161133
    9. 'dans' → logprob: -11.202272415161133
    10. '_du' → logprob: -11.202272415161133

Token 595: 'pl' (ID: 528)
  Prédit: 'pl'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pl' → logprob: -0.8050152659416199
    2. 'posé' → logprob: -1.0550153255462646
    3. 'pos' → logprob: -2.5550153255462646
    4. 'pose' → logprob: -2.9300153255462646
    5. 'plet' → logprob: -3.3050153255462646
    6. 'plement' → logprob: -3.8050153255462646
    7. 'p' → logprob: -4.6800150871276855
    8. 'ple' → logprob: -6.4300150871276855
    9. ' =' → logprob: -7.1800150871276855
    10. 'ment' → logprob: -8.055015563964844

Token 596: 'ément' (ID: 17645)
  Prédit: 'ement'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ement' → logprob: -0.10058771073818207
    2. 'ément' → logprob: -2.3505876064300537
    3. 'emento' → logprob: -8.975587844848633
    4. 'et' → logprob: -9.725587844848633
    5. 'e' → logprob: -10.225587844848633
    6. ' =' → logprob: -10.600587844848633
    7. 'emente' → logprob: -10.725587844848633
    8. '_' → logprob: -11.100587844848633
    9. '```' → logprob: -11.100587844848633
    10. '=' → logprob: -11.225587844848633

Token 597: 'aire' (ID: 8189)
  Prédit: 'aire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aire' → logprob: -0.7174080014228821
    2. '=' → logprob: -0.9674080014228821
    3. ' =' → logprob: -2.3424079418182373
    4. 'e' → logprob: -3.3424079418182373
    5. 'air' → logprob: -8.717408180236816
    6. 'a' → logprob: -9.217408180236816
    7. 'é' → logprob: -9.467408180236816
    8. 'ar' → logprob: -10.592408180236816
    9. '=int' → logprob: -11.217408180236816
    10. '=-' → logprob: -11.342408180236816

Token 598: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.17976991832256317
    2. '=' → logprob: -1.8047698736190796
    3. ',' → logprob: -11.429769515991211
    4. ' ' → logprob: -11.929769515991211
    5. '_' → logprob: -13.054769515991211
    6. '=int' → logprob: -14.054769515991211
    7. ' ' → logprob: -14.054769515991211
    8. ']' → logprob: -14.429769515991211
    9. ')' → logprob: -14.804769515991211
    10. ' =
' → logprob: -15.179769515991211

Token 599: ' (' (ID: 350)
  Prédit: '(nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nombre' → logprob: -0.537527859210968
    2. ' (' → logprob: -0.912527859210968
    3. '(n' → logprob: -4.662528038024902
    4. 'nombre' → logprob: -5.662528038024902
    5. '(' → logprob: -7.287528038024902
    6. ' nombre' → logprob: -7.787528038024902
    7. '(nb' → logprob: -8.662528038024902
    8. '(number' → logprob: -9.662528038024902
    9. '((' → logprob: -11.412528038024902
    10. ' ' → logprob: -11.412528038024902

Token 600: 'nombre' (ID: 28576)
  Prédit: 'nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.16132938861846924
    2. '(nombre' → logprob: -1.9113293886184692
    3. ' nombre' → logprob: -7.28632926940918
    4. ' (' → logprob: -7.91132926940918
    5. '(n' → logprob: -10.41132926940918
    6. '(' → logprob: -11.41132926940918
    7. '(nb' → logprob: -12.91132926940918
    8. 'nom' → logprob: -12.91132926940918
    9. '((' → logprob: -13.16132926940918
    10. '6' → logprob: -14.16132926940918

Token 601: '_operations' (ID: 148404)
  Prédit: '_operations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_operations' → logprob: -0.0004851306148339063
    2. '_cycles' → logprob: -8.50048542022705
    3. '_op' → logprob: -9.12548542022705
    4. 'operations' → logprob: -9.75048542022705
    5. '_oper' → logprob: -10.62548542022705
    6. 'd' → logprob: -11.37548542022705
    7. '_options' → logprob: -11.50048542022705
    8. '_per' → logprob: -11.62548542022705
    9. '_des' → logprob: -11.75048542022705
    10. '%' → logprob: -11.75048542022705

Token 602: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.6667434573173523
    2. ' %' → logprob: -1.041743516921997
    3. '-' → logprob: -2.666743516921997
    4. '%' → logprob: -2.791743516921997
    5. ')' → logprob: -6.166743278503418
    6. ' ' → logprob: -7.416743278503418
    7. ' )' → logprob: -9.541743278503418
    8. ' %
' → logprob: -9.916743278503418
    9. ')%' → logprob: -10.166743278503418
    10. ' ' → logprob: -10.291743278503418

Token 603: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005969968624413013
    2. ' ' → logprob: -7.50059700012207
    3. '2' → logprob: -10.12559700012207
    4. ' (' → logprob: -14.12559700012207
    5. '(' → logprob: -14.25059700012207
    6. ')' → logprob: -14.56309700012207
    7. '```' → logprob: -15.00059700012207
    8. '
' → logprob: -15.06309700012207
    9. '%' → logprob: -15.37559700012207
    10. ' %' → logprob: -15.68809700012207

Token 604: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.8802491215174086e-05
    2. '2' → logprob: -11.000028610229492
    3. ' ' → logprob: -11.375028610229492
    4. '(' → logprob: -16.125028610229492
    5. '
' → logprob: -16.375028610229492
    6. '```' → logprob: -16.625028610229492
    7. ')' → logprob: -17.000028610229492
    8. ' (' → logprob: -17.437528610229492
    9. 'nombre' → logprob: -17.625028610229492
    10. '   ' → logprob: -17.687528610229492

Token 605: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005714758764952421
    2. '%' → logprob: -5.3807148933410645
    3. ' %' → logprob: -7.1307148933410645
    4. ')%' → logprob: -8.630714416503906
    5. ' )' → logprob: -9.255714416503906
    6. '+' → logprob: -11.755714416503906
    7. ' ' → logprob: -12.630714416503906
    8. '   ' → logprob: -13.380714416503906
    9. ']' → logprob: -13.505714416503906
    10. '%)' → logprob: -13.630714416503906

Token 606: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.5231384634971619
    2. '%' → logprob: -0.8981384634971619
    3. ' %
' → logprob: -12.398138046264648
    4. '[' → logprob: -12.773138046264648
    5. ' ' → logprob: -12.773138046264648
    6. ')' → logprob: -13.648138046264648
    7. ' ' → logprob: -13.773138046264648
    8. '%
' → logprob: -13.898138046264648
    9. '<|end|>' → logprob: -14.898138046264648
    10. '```' → logprob: -15.398138046264648

Token 607: ' ' (ID: 220)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.00015872348740231246
    2. ' ' → logprob: -8.750158309936523
    3. '```' → logprob: -15.500158309936523
    4. '' → logprob: -18.000158309936523
    5. '(' → logprob: -18.000158309936523
    6. '٦' → logprob: -19.625158309936523
    7. ' ' → logprob: -19.750158309936523
    8. '
' → logprob: -19.875158309936523
    9. '   ' → logprob: -20.250158309936523
    10. '  ' → logprob: -20.500158309936523

Token 608: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -13.875000953674316
    3. '```' → logprob: -17.000001907348633
    4. '٦' → logprob: -19.250001907348633
    5. 'len' → logprob: -19.750001907348633
    6. '
' → logprob: -19.875001907348633
    7. '६' → logprob: -20.125001907348633
    8. '' → logprob: -20.125001907348633
    9. '۶' → logprob: -20.500001907348633
    10. '   ' → logprob: -20.750001907348633

Token 609: '
' (ID: 198)
  Prédit: 'per'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'per' → logprob: -0.8321446776390076
    2. ']' → logprob: -1.0821447372436523
    3. 'print' → logprob: -2.0821447372436523
    4. 'result' → logprob: -3.4571447372436523
    5. '#' → logprob: -3.8321447372436523
    6. '[' → logprob: -4.082144737243652
    7. ')' → logprob: -4.957144737243652
    8. '[
' → logprob: -5.582144737243652
    9. 'p' → logprob: -5.832144737243652
    10. ' =' → logprob: -6.207144737243652

Token 610: 'per' (ID: 543)
  Prédit: 'per'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'per' → logprob: -0.3340799808502197
    2. 'result' → logprob: -1.8340799808502197
    3. 'final' → logprob: -2.4590799808502197
    4. ']' → logprob: -4.334079742431641
    5. 'print' → logprob: -4.584079742431641
    6. '#' → logprob: -5.459079742431641
    7. 'for' → logprob: -6.209079742431641
    8. '[
' → logprob: -6.209079742431641
    9. '[' → logprob: -6.709079742431641
    10. '
' → logprob: -6.959079742431641

Token 611: 'mutation' (ID: 92896)
  Prédit: 'mut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mut' → logprob: -1.1160349458805285e-05
    2. 'mutation' → logprob: -11.625011444091797
    3. 'missions' → logprob: -13.250011444091797
    4. 'm' → logprob: -15.125011444091797
    5. 'mu' → logprob: -16.750011444091797
    6. 'utations' → logprob: -18.000011444091797
    7. '_mut' → logprob: -18.375011444091797
    8. ' mutations' → logprob: -18.500011444091797
    9. 'met' → logprob: -18.875011444091797
    10. 'motions' → logprob: -20.000011444091797

Token 612: '_com' (ID: 10828)
  Prédit: '_com'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_com' → logprob: -0.32179924845695496
    2. '_final' → logprob: -1.3217992782592773
    3. 'compl' → logprob: -5.571799278259277
    4. '_ap' → logprob: -5.696799278259277
    5. 'final' → logprob: -7.946799278259277
    6. '=' → logprob: -8.321799278259277
    7. '=_' → logprob: -8.321799278259277
    8. '=com' → logprob: -8.571799278259277
    9. '_' → logprob: -9.696799278259277
    10. '_=' → logprob: -9.946799278259277

Token 613: 'pl' (ID: 528)
  Prédit: 'pl'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pl' → logprob: -0.1383216828107834
    2. 'pos' → logprob: -2.3883216381073
    3. 'plement' → logprob: -3.7633216381073
    4. '_com' → logprob: -4.888321876525879
    5. 'positions' → logprob: -5.763321876525879
    6. 'plet' → logprob: -7.138321876525879
    7. '_pl' → logprob: -7.388321876525879
    8. 'ple' → logprob: -7.638321876525879
    9. 'com' → logprob: -8.013321876525879
    10. '_pos' → logprob: -8.263321876525879

Token 614: 'ément' (ID: 17645)
  Prédit: 'ét'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ét' → logprob: -0.3043902814388275
    2. 'ément' → logprob: -2.0543901920318604
    3. 'ée' → logprob: -3.0543901920318604
    4. 'é' → logprob: -3.5543901920318604
    5. 'ète' → logprob: -3.9293901920318604
    6. 'et' → logprob: -5.0543904304504395
    7. 'ement' → logprob: -5.0543904304504395
    8. 'ètes' → logprob: -5.0543904304504395
    9. 'éments' → logprob: -5.1793904304504395
    10. 'étés' → logprob: -5.9293904304504395

Token 615: 'aire' (ID: 8189)
  Prédit: 'ée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.06042904034256935
    2. 'e' → logprob: -3.060429096221924
    3. 'aire' → logprob: -5.810429096221924
    4. 'ées' → logprob: -5.810429096221924
    5. '_com' → logprob: -6.310429096221924
    6. 'es' → logprob: -6.435429096221924
    7. 'é' → logprob: -6.560429096221924
    8. 'ee' → logprob: -7.685429096221924
    9. '_e' → logprob: -8.685428619384766
    10. '_' → logprob: -9.435428619384766

Token 616: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2520793676376343
    2. ' =' → logprob: -1.5020793676376343
    3. ']' → logprob: -9.252079010009766
    4. '[' → logprob: -10.752079010009766
    5. ']=' → logprob: -12.002079010009766
    6. '=[' → logprob: -12.127079010009766
    7. ')' → logprob: -12.627079010009766
    8. '_' → logprob: -12.752079010009766
    9. '=com' → logprob: -13.127079010009766
    10. '<|end|>' → logprob: -13.127079010009766

Token 617: ' permutations' (ID: 174595)
  Prédit: 'per'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'per' → logprob: -0.048769038170576096
    2. ' permutations' → logprob: -3.048768997192383
    3. '   ' → logprob: -9.673768997192383
    4. 'perm' → logprob: -10.048768997192383
    5. ' perm' → logprob: -10.673768997192383
    6. '	per' → logprob: -11.298768997192383
    7. '(per' → logprob: -11.423768997192383
    8. ' per' → logprob: -12.173768997192383
    9. 'permissions' → logprob: -12.423768997192383
    10. ' perms' → logprob: -12.923768997192383

Token 618: '_com' (ID: 10828)
  Prédit: '_com'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_com' → logprob: -1.2664456789934775e-06
    2. 'com' → logprob: -13.750000953674316
    3. 's' → logprob: -16.125001907348633
    4. '_' → logprob: -17.375001907348633
    5. '\' → logprob: -18.625001907348633
    6. '_comp' → logprob: -18.750001907348633
    7. '[' → logprob: -18.875001907348633
    8. '_des' → logprob: -19.125001907348633
    9. '_con' → logprob: -19.250001907348633
    10. '	com' → logprob: -19.625001907348633

Token 619: 'pos' (ID: 1103)
  Prédit: 'os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'os' → logprob: -0.536135733127594
    2. 'ées' → logprob: -1.2861356735229492
    3. 'pos' → logprob: -2.286135673522949
    4. 'es' → logprob: -3.536135673522949
    5. 'com' → logprob: -5.661135673522949
    6. 'isées' → logprob: -6.661135673522949
    7. 'p' → logprob: -7.161135673522949
    8. 'és' → logprob: -7.911135673522949
    9. '[' → logprob: -8.03613567352295
    10. '__' → logprob: -8.66113567352295

Token 620: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.002599437953904271
    2. 'es' → logprob: -6.252599239349365
    3. 'ée' → logprob: -7.627599239349365
    4. '[' → logprob: -9.127599716186523
    5. 'é' → logprob: -10.502599716186523
    6. '[
' → logprob: -11.127599716186523
    7. 'e' → logprob: -12.002599716186523
    8. 'ees' → logprob: -12.377599716186523
    9. '_' → logprob: -12.877599716186523
    10. 'è' → logprob: -13.002599716186523

Token 621: '[ind' (ID: 68064)
  Prédit: '[ind'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[ind' → logprob: -2.339278580620885e-06
    2. 'indice' → logprob: -13.875001907348633
    3. '[' → logprob: -14.375001907348633
    4. '[
' → logprob: -14.500001907348633
    5. '[idx' → logprob: -15.750001907348633
    6. '[in' → logprob: -16.625001907348633
    7. '[index' → logprob: -18.375001907348633
    8. '[int' → logprob: -18.500001907348633
    9. '```' → logprob: -18.500001907348633
    10. '[i' → logprob: -18.750001907348633

Token 622: 'ice' (ID: 603)
  Prédit: 'ice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ice' → logprob: -0.04862767457962036
    2. 'ex' → logprob: -3.0486276149749756
    3. 'e' → logprob: -10.673627853393555
    4. 'exe' → logprob: -11.923627853393555
    5. 'ce' → logprob: -12.298627853393555
    6. 'i' → logprob: -13.798627853393555
    7. 'ixe' → logprob: -13.923627853393555
    8. '_ex' → logprob: -14.423627853393555
    9. '
' → logprob: -14.923627853393555
    10. '_' → logprob: -14.923627853393555

Token 623: '_per' (ID: 10938)
  Prédit: '_per'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_per' → logprob: -0.0008642955799587071
    2. 'indice' → logprob: -7.125864505767822
    3. 'per' → logprob: -10.500864028930664
    4. '_ind' → logprob: -10.625864028930664
    5. '_perm' → logprob: -12.875864028930664
    6. '_' → logprob: -13.125864028930664
    7. '_com' → logprob: -14.125864028930664
    8. '\' → logprob: -14.625864028930664
    9. '__' → logprob: -15.250864028930664
    10. 'e' → logprob: -15.625864028930664

Token 624: 'mutation' (ID: 92896)
  Prédit: 'utation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'utation' → logprob: -0.2159726321697235
    2. 'mutation' → logprob: -1.715972661972046
    3. 'ration' → logprob: -4.715972423553467
    4. 'ation' → logprob: -6.090972423553467
    5. 't' → logprob: -6.215972423553467
    6. 'r' → logprob: -7.215972423553467
    7. 'lation' → logprob: -9.715972900390625
    8. 'rotation' → logprob: -9.715972900390625
    9. 'otation' → logprob: -10.340972900390625
    10. 'mut' → logprob: -10.590972900390625

Token 625: '_com' (ID: 10828)
  Prédit: '_com'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_com' → logprob: -0.028576236218214035
    2. 'aire' → logprob: -3.903576135635376
    3. 'com' → logprob: -5.528576374053955
    4. 'e' → logprob: -6.278576374053955
    5. 'ire' → logprob: -7.278576374053955
    6. 'compl' → logprob: -7.778576374053955
    7. 'naire' → logprob: -8.153575897216797
    8. 'indice' → logprob: -8.278575897216797
    9. 'é' → logprob: -9.153575897216797
    10. '+' → logprob: -9.278575897216797

Token 626: 'pl' (ID: 528)
  Prédit: 'aire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'aire' → logprob: -0.04344683140516281
    2. 'taire' → logprob: -3.7934467792510986
    3. 'enta' → logprob: -4.668447017669678
    4. 'ent' → logprob: -5.418447017669678
    5. 'nt' → logprob: -7.043447017669678
    6. 'naire' → logprob: -7.168447017669678
    7. 'éraire' → logprob: -7.293447017669678
    8. 'la' → logprob: -7.543447017669678
    9. 'étaire' → logprob: -8.29344654083252
    10. 'ment' → logprob: -8.41844654083252

Token 627: 'ément' (ID: 17645)
  Prédit: 'ément'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ément' → logprob: -0.5945066213607788
    2. 'aire' → logprob: -0.8445066213607788
    3. 'ement' → logprob: -4.844506740570068
    4. 'é' → logprob: -6.094506740570068
    5. 'enta' → logprob: -6.219506740570068
    6. 'étaire' → logprob: -6.594506740570068
    7. 'éta' → logprob: -6.719506740570068
    8. ']' → logprob: -7.344506740570068
    9. 'taire' → logprob: -7.844506740570068
    10. 'inaire' → logprob: -7.844506740570068

Token 628: 'aire' (ID: 8189)
  Prédit: 'aire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aire' → logprob: -4.310693111619912e-05
    2. 'e' → logprob: -10.625042915344238
    3. 'taire' → logprob: -12.125042915344238
    4. 'ent' → logprob: -12.250042915344238
    5. 'a' → logprob: -12.875042915344238
    6. 'are' → logprob: -13.375042915344238
    7. 'naire' → logprob: -13.500042915344238
    8. 'aires' → logprob: -13.750042915344238
    9. 'ère' → logprob: -14.875042915344238
    10. 'iare' → logprob: -15.125042915344238

Token 629: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -7.40998875699006e-05
    2. ' ]' → logprob: -10.25007438659668
    3. ']
' → logprob: -10.37507438659668
    4. ']

' → logprob: -12.12507438659668
    5. '()]' → logprob: -15.25007438659668
    6. '<|end|>' → logprob: -15.25007438659668
    7. ')]' → logprob: -15.50007438659668
    8. ')' → logprob: -15.62507438659668
    9. '].' → logprob: -15.87507438659668
    10. '']' → logprob: -16.00007438659668

Token 630: '#' (ID: 2)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.11728481203317642
    2. 'per' → logprob: -2.4922847747802734
    3. 'sequence' → logprob: -4.117284774780273
    4. '#' → logprob: -5.242284774780273
    5. 'rés' → logprob: -5.367284774780273
    6. 'final' → logprob: -6.992284774780273
    7. ' resultat' → logprob: -8.992284774780273
    8. ' résultat' → logprob: -9.117284774780273
    9. 'perm' → logprob: -9.117284774780273
    10. 'der' → logprob: -9.242284774780273

Token 631: ' Application' (ID: 12493)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.5855161547660828
    2. 'per' → logprob: -0.8355161547660828
    3. 'rés' → logprob: -4.835515975952148
    4. '#' → logprob: -7.335515975952148
    5. 'perm' → logprob: -8.210515975952148
    6. 'sequence' → logprob: -8.210515975952148
    7. ' resultat' → logprob: -8.960515975952148
    8. ' résultat' → logprob: -10.210515975952148
    9. 'position' → logprob: -10.710515975952148
    10. 'prem' → logprob: -10.710515975952148

Token 632: ' finale' (ID: 37759)
  Prédit: 'per'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'per' → logprob: -0.9398125410079956
    2. 'result' → logprob: -1.5648125410079956
    3. 'final' → logprob: -1.8148125410079956
    4. '=' → logprob: -2.314812660217285
    5. ' =' → logprob: -2.314812660217285
    6. '_result' → logprob: -4.314812660217285
    7. '_final' → logprob: -4.314812660217285
    8. 'sequence' → logprob: -5.314812660217285
    9. '(per' → logprob: -6.189812660217285
    10. 'de' → logprob: -7.314812660217285

Token 633: ' de' (ID: 334)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.4027116000652313
    2. 'sequence' → logprob: -1.7777116298675537
    3. 'per' → logprob: -2.1527116298675537
    4. 'final' → logprob: -3.2777116298675537
    5. ' resultat' → logprob: -6.027711391448975
    6. 'rés' → logprob: -6.902711391448975
    7. ' sequence' → logprob: -6.902711391448975
    8. ' résultat' → logprob: -6.902711391448975
    9. 'sequ' → logprob: -6.902711391448975
    10. 'print' → logprob: -8.152711868286133

Token 634: ' la' (ID: 557)
  Prédit: 'per'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'per' → logprob: -0.003335513873025775
    2. 'ap' → logprob: -5.878335475921631
    3. ' permutation' → logprob: -7.753335475921631
    4. 'perm' → logprob: -10.503335952758789
    5. ' appliquer' → logprob: -10.628335952758789
    6. 'app' → logprob: -11.253335952758789
    7. '[' → logprob: -11.503335952758789
    8. 'apply' → logprob: -12.003335952758789
    9. '   ' → logprob: -12.628335952758789
    10. '
' → logprob: -12.753335952758789

Token 635: ' permutation' (ID: 135200)
  Prédit: 'per'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'per' → logprob: -0.0018035804387181997
    2. 'ap' → logprob: -6.751803398132324
    3. ' permutation' → logprob: -7.626803398132324
    4. 'perm' → logprob: -9.751803398132324
    5. '
' → logprob: -11.001803398132324
    6. 'result' → logprob: -11.126803398132324
    7. 'prem' → logprob: -11.251803398132324
    8. 'apply' → logprob: -11.751803398132324
    9. 'sequence' → logprob: -12.001803398132324
    10. '[' → logprob: -12.376803398132324

Token 636: ' correcte' (ID: 173783)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.4589349031448364
    2. 'final' → logprob: -1.5839349031448364
    3. 'sequence' → logprob: -2.208934783935547
    4. 'per' → logprob: -3.208934783935547
    5. 'print' → logprob: -4.833934783935547
    6. ' =' → logprob: -6.708934783935547
    7. '=' → logprob: -6.833934783935547
    8. 'for' → logprob: -7.708934783935547
    9. '(sequence' → logprob: -8.083934783935547
    10. ' sequence' → logprob: -8.458934783935547

Token 637: '
' (ID: 198)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.27105745673179626
    2. 'final' → logprob: -1.7710574865341187
    3. 'per' → logprob: -3.021057367324829
    4. 'sequence' → logprob: -4.021057605743408
    5. 'rés' → logprob: -8.64605712890625
    6. 'perm' → logprob: -9.27105712890625
    7. ' resultat' → logprob: -9.39605712890625
    8. 'print' → logprob: -9.77105712890625
    9. '   ' → logprob: -10.77105712890625
    10. 'res' → logprob: -10.89605712890625

Token 638: 'result' (ID: 2521)
  Prédit: 'result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.023549659177660942
    2. 'per' → logprob: -3.8985495567321777
    3. 'rés' → logprob: -6.398549556732178
    4. 'sequence' → logprob: -6.773549556732178
    5. 'perm' → logprob: -9.898550033569336
    6. ' resultat' → logprob: -9.898550033569336
    7. 'final' → logprob: -10.148550033569336
    8. 'res' → logprob: -11.023550033569336
    9. 'resultado' → logprob: -11.148550033569336
    10. ' résultat' → logprob: -11.648550033569336

Token 639: 'at' (ID: 266)
  Prédit: 'at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.0011578429257497191
    2. ' =' → logprob: -7.751157760620117
    3. 'final' → logprob: -8.126157760620117
    4. 'ats' → logprob: -8.376157760620117
    5. '_final' → logprob: -9.501157760620117
    6. '=' → logprob: -10.251157760620117
    7. 'é' → logprob: -10.876157760620117
    8. '_at' → logprob: -10.876157760620117
    9. 'e' → logprob: -12.126157760620117
    10. ' finale' → logprob: -12.376157760620117

Token 640: '_final' (ID: 46468)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.026301460340619087
    2. '=' → logprob: -3.651301383972168
    3. ' ' → logprob: -15.151301383972168
    4. 'final' → logprob: -15.276301383972168
    5. '[' → logprob: -15.526301383972168
    6. '_final' → logprob: -16.026302337646484
    7. '_' → logprob: -16.526302337646484
    8. ' ' → logprob: -16.651302337646484
    9. ' =[' → logprob: -16.651302337646484
    10. ')' → logprob: -16.776302337646484

Token 641: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006716317031532526
    2. '=' → logprob: -5.006716251373291
    3. '_' → logprob: -14.50671672821045
    4. '[' → logprob: -15.88171672821045
    5. ' ' → logprob: -16.506715774536133
    6. ' ' → logprob: -16.506715774536133
    7. ' =[' → logprob: -16.631715774536133
    8. '   ' → logprob: -16.881715774536133
    9. ')' → logprob: -17.006715774536133
    10. ',' → logprob: -17.881715774536133

Token 642: ' appliquer' (ID: 172872)
  Prédit: 'ap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ap' → logprob: -0.00029160623671486974
    2. 'app' → logprob: -8.50029182434082
    3. ' appliquer' → logprob: -9.37529182434082
    4. '[' → logprob: -13.50029182434082
    5. 'apply' → logprob: -14.00029182434082
    6. '   ' → logprob: -14.50029182434082
    7. 'application' → logprob: -15.50029182434082
    8. '[
' → logprob: -16.25029182434082
    9. '	ap' → logprob: -16.50029182434082
    10. '```' → logprob: -16.87529182434082

Token 643: '_per' (ID: 10938)
  Prédit: '_per'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_per' → logprob: -3.173704271830502e-06
    2. 'per' → logprob: -12.87500286102295
    3. '_' → logprob: -15.00000286102295
    4. '(per' → logprob: -16.375003814697266
    5. '	per' → logprob: -16.875003814697266
    6. '_par' → logprob: -17.250003814697266
    7. '_perm' → logprob: -17.250003814697266
    8. '_result' → logprob: -17.875003814697266
    9. '\' → logprob: -18.375003814697266
    10. '_PER' → logprob: -18.500003814697266

Token 644: 'mutation' (ID: 92896)
  Prédit: 'mutation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mutation' → logprob: -0.012668328359723091
    2. 'utation' → logprob: -4.387668132781982
    3. 'mut' → logprob: -9.01266860961914
    4. 'mission' → logprob: -10.63766860961914
    5. 'm' → logprob: -12.51266860961914
    6. 'ut' → logprob: -13.01266860961914
    7. '_per' → logprob: -13.51266860961914
    8. 'per' → logprob: -14.26266860961914
    9. '_mut' → logprob: -14.51266860961914
    10. 'ermut' → logprob: -14.76266860961914

Token 645: '(
' (ID: 1607)
  Prédit: '(per'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(per' → logprob: -0.034632571041584015
    2. '(result' → logprob: -3.784632682800293
    3. '(
' → logprob: -4.784632682800293
    4. '(' → logprob: -5.909632682800293
    5. '(p' → logprob: -8.534632682800293
    6. '(sequence' → logprob: -10.659632682800293
    7. 'result' → logprob: -11.034632682800293
    8. 'per' → logprob: -11.909632682800293
    9. ' (' → logprob: -13.034632682800293
    10. '(res' → logprob: -13.409632682800293

Token 646: '   ' (ID: 271)
  Prédit: 'per'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'per' → logprob: -0.00032950565218925476
    2. 'result' → logprob: -8.625329971313477
    3. '(per' → logprob: -9.375329971313477
    4. 'perm' → logprob: -10.000329971313477
    5. 'prem' → logprob: -11.125329971313477
    6. ' permutation' → logprob: -13.375329971313477
    7. '   ' → logprob: -14.125329971313477
    8. 'p' → logprob: -14.375329971313477
    9. '	per' → logprob: -14.375329971313477
    10. 'ap' → logprob: -14.625329971313477

Token 647: ' appliquer' (ID: 172872)
  Prédit: 'per'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'per' → logprob: -0.0006180775817483664
    2. 'prem' → logprob: -7.625617980957031
    3. 'perm' → logprob: -9.625617980957031
    4. 'result' → logprob: -10.625617980957031
    5. ' permutation' → logprob: -10.875617980957031
    6. '   ' → logprob: -11.875617980957031
    7. 'sequence' → logprob: -11.875617980957031
    8. 'ap' → logprob: -13.500617980957031
    9. '(per' → logprob: -14.000617980957031
    10. 'p' → logprob: -14.000617980957031

Token 648: '_per' (ID: 10938)
  Prédit: '_per'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_per' → logprob: -0.0005060884868726134
    2. '_' → logprob: -8.375506401062012
    3. '_result' → logprob: -8.875506401062012
    4. 'per' → logprob: -9.500506401062012
    5. 'result' → logprob: -10.000506401062012
    6. '(per' → logprob: -11.750506401062012
    7. '_par' → logprob: -12.875506401062012
    8. '(result' → logprob: -13.500506401062012
    9. '_sequence' → logprob: -14.000506401062012
    10. '(' → logprob: -14.750506401062012

Token 649: 'mutation' (ID: 92896)
  Prédit: 'mutation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mutation' → logprob: -0.07033830136060715
    2. 'utation' → logprob: -2.695338249206543
    3. 'mut' → logprob: -8.320338249206543
    4. 'mission' → logprob: -9.570338249206543
    5. 'ut' → logprob: -10.695338249206543
    6. 'm' → logprob: -10.820338249206543
    7. 'Mutation' → logprob: -11.695338249206543
    8. ' mutation' → logprob: -12.445338249206543
    9. 'ission' → logprob: -12.570338249206543
    10. 'r' → logprob: -12.695338249206543

Token 650: '(per' (ID: 96497)
  Prédit: '(per'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(per' → logprob: -0.5038069486618042
    2. '(result' → logprob: -1.0038069486618042
    3. '(
' → logprob: -3.6288070678710938
    4. '(' → logprob: -6.003807067871094
    5. 'result' → logprob: -8.753807067871094
    6. '(p' → logprob: -9.878807067871094
    7. 'per' → logprob: -10.378807067871094
    8. '(res' → logprob: -11.378807067871094
    9. '(

' → logprob: -11.378807067871094
    10. ' (' → logprob: -12.253807067871094

Token 651: 'mutation' (ID: 92896)
  Prédit: 'mutation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mutation' → logprob: -0.03298640623688698
    2. 'mut' → logprob: -4.282986640930176
    3. 'm' → logprob: -4.407986640930176
    4. 'utation' → logprob: -5.407986640930176
    5. 'met' → logprob: -6.782986640930176
    6. 'r' → logprob: -8.282986640930176
    7. 'rm' → logprob: -8.657986640930176
    8. 'ut' → logprob: -8.657986640930176
    9. 't' → logprob: -8.782986640930176
    10. 'mi' → logprob: -11.032986640930176

Token 652: '_ap' (ID: 45078)
  Prédit: '_ap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ap' → logprob: -0.010361521504819393
    2. '_com' → logprob: -4.635361671447754
    3. '_final' → logprob: -7.510361671447754
    4. '_de' → logprob: -11.010361671447754
    5. 'ap' → logprob: -11.260361671447754
    6. 'Ap' → logprob: -11.885361671447754
    7. '_result' → logprob: -12.510361671447754
    8. 'final' → logprob: -12.635361671447754
    9. '_' → logprob: -13.260361671447754
    10. '_par' → logprob: -14.010361671447754

Token 653: 'res' (ID: 430)
  Prédit: 'res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.002588265808299184
    2. 'rès' → logprob: -6.002588272094727
    3. 'r' → logprob: -9.627588272094727
    4. 'pres' → logprob: -10.377588272094727
    5. 'rés' → logprob: -12.752588272094727
    6. 're' → logprob: -13.252588272094727
    7. 'es' → logprob: -13.377588272094727
    8. 'os' → logprob: -13.502588272094727
    9. 'rer' → logprob: -14.002588272094727
    10. '`' → logprob: -14.002588272094727

Token 654: '_cycles' (ID: 183228)
  Prédit: '_cycles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cycles' → logprob: -0.002227452350780368
    2. 'cycles' → logprob: -6.127227306365967
    3. 'result' → logprob: -10.377227783203125
    4. 'Cycles' → logprob: -12.002227783203125
    5. ' cycles' → logprob: -13.502227783203125
    6. '_c' → logprob: -13.752227783203125
    7. 'ycles' → logprob: -14.002227783203125
    8. '_result' → logprob: -14.377227783203125
    9. 'cy' → logprob: -14.877227783203125
    10. '_cycle' → logprob: -16.002227783203125

Token 655: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003290948225185275
    2. ',result' → logprob: -6.003291130065918
    3. '(per' → logprob: -7.628291130065918
    4. 'result' → logprob: -8.503291130065918
    5. ' ,' → logprob: -10.253291130065918
    6. '(' → logprob: -10.378291130065918
    7. ',
' → logprob: -10.878291130065918
    8. '(result' → logprob: -11.003291130065918
    9. ',p' → logprob: -12.003291130065918
    10. '(
' → logprob: -12.253291130065918

Token 656: ' permutation' (ID: 135200)
  Prédit: 'per'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'per' → logprob: -0.00021331508469302207
    2. ' permutation' → logprob: -8.500213623046875
    3. 'perm' → logprob: -11.750213623046875
    4. '   ' → logprob: -13.875213623046875
    5. 'Permutation' → logprob: -14.500213623046875
    6. ' perm' → logprob: -15.625213623046875
    7. '	per' → logprob: -15.875213623046875
    8. ' ' → logprob: -16.625213623046875
    9. '(per' → logprob: -17.250213623046875
    10. '
' → logprob: -17.250213623046875

Token 657: '_com' (ID: 10828)
  Prédit: '_com'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_com' → logprob: -1.259079363080673e-05
    2. 'compl' → logprob: -11.875012397766113
    3. '_per' → logprob: -12.500012397766113
    4. 'com' → logprob: -13.500012397766113
    5. '_' → logprob: -15.625012397766113
    6. '_comp' → logprob: -17.00001335144043
    7. '_con' → logprob: -17.25001335144043
    8. ' complément' → logprob: -17.50001335144043
    9. '_Com' → logprob: -18.25001335144043
    10. '=com' → logprob: -18.25001335144043

Token 658: 'pl' (ID: 528)
  Prédit: 'pl'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pl' → logprob: -0.004009661264717579
    2. 'ément' → logprob: -5.75400972366333
    3. 'plement' → logprob: -7.62900972366333
    4. 'l' → logprob: -8.629009246826172
    5. 'ent' → logprob: -9.629009246826172
    6. '_pl' → logprob: -10.254009246826172
    7. 'p' → logprob: -10.504009246826172
    8. 'ént' → logprob: -11.629009246826172
    9. 'enta' → logprob: -12.629009246826172
    10. 'lé' → logprob: -12.629009246826172

Token 659: 'ément' (ID: 17645)
  Prédit: 'ément'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ément' → logprob: -0.004549626726657152
    2. 'ement' → logprob: -5.754549503326416
    3. 'aire' → logprob: -7.629549503326416
    4. 'é' → logprob: -7.629549503326416
    5. 'étaire' → logprob: -8.879549980163574
    6. 'ém' → logprob: -9.004549980163574
    7. 'éta' → logprob: -10.254549980163574
    8. 'è' → logprob: -11.379549980163574
    9. 'eta' → logprob: -11.629549980163574
    10. 'éments' → logprob: -11.754549980163574

Token 660: 'aire' (ID: 8189)
  Prédit: 'aire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aire' → logprob: -2.816093228830141e-06
    2. 'a' → logprob: -13.37500286102295
    3. 'oire' → logprob: -15.00000286102295
    4. 'aires' → logprob: -15.25000286102295
    5. 'ai' → logprob: -16.000001907348633
    6. 'e' → logprob: -16.125001907348633
    7. 'aine' → logprob: -16.250001907348633
    8. ' aire' → logprob: -16.500001907348633
    9. 'are' → logprob: -16.750001907348633
    10. 'aise' → logprob: -16.750001907348633

Token 661: '),
' (ID: 2313)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00011188744247192517
    2. ' )' → logprob: -9.87511157989502
    3. ')
' → logprob: -10.50011157989502
    4. ')`' → logprob: -11.00011157989502
    5. '))' → logprob: -12.00011157989502
    6. ',' → logprob: -12.87511157989502
    7. ')#' → logprob: -13.62511157989502
    8. ')]' → logprob: -14.12511157989502
    9. ']' → logprob: -14.12511157989502
    10. '[' → logprob: -14.12511157989502

Token 662: '   ' (ID: 271)
  Prédit: 'prem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prem' → logprob: -0.32914966344833374
    2. 'list' → logprob: -1.4541497230529785
    3. 'range' → logprob: -3.4541497230529785
    4. '[' → logprob: -4.7041497230529785
    5. '[p' → logprob: -5.4541497230529785
    6. 'per' → logprob: -7.2041497230529785
    7. 'liste' → logprob: -8.32914924621582
    8. 'p' → logprob: -8.45414924621582
    9. ' list' → logprob: -8.57914924621582
    10. ' [' → logprob: -9.45414924621582

Token 663: ' inverse' (ID: 53743)
  Prédit: 'prem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prem' → logprob: -0.02919711358845234
    2. 'inverse' (adapté à ' inverse') → logprob: -4.1541972160339355
    3. 'per' → logprob: -5.4041972160339355
    4. '[p' → logprob: -5.6541972160339355
    5. '[' → logprob: -6.0291972160339355
    6. 'range' → logprob: -7.0291972160339355
    7. 'p' → logprob: -7.5291972160339355
    8. 'list' → logprob: -7.5291972160339355
    9. 'de' → logprob: -7.9041972160339355
    10. '[in' → logprob: -9.029196739196777

Token 664: '_per' (ID: 10938)
  Prédit: '_per'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_per' → logprob: -0.00010902655776590109
    2. '_de' → logprob: -9.25010871887207
    3. '_p' → logprob: -12.37510871887207
    4. '(per' → logprob: -12.50010871887207
    5. '_' → logprob: -13.25010871887207
    6. '(' → logprob: -13.75010871887207
    7. '_com' → logprob: -14.37510871887207
    8. '_par' → logprob: -14.62510871887207
    9. 'per' → logprob: -14.87510871887207
    10. ')' → logprob: -15.37510871887207

Token 665: 'mutation' (ID: 92896)
  Prédit: '_per'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_per' → logprob: -0.6970328092575073
    2. 'utation' → logprob: -0.6970328092575073
    3. 'per' → logprob: -6.197032928466797
    4. 'ut' → logprob: -7.072032928466797
    5. 'mutation' → logprob: -7.322032928466797
    6. 'er' → logprob: -9.197032928466797
    7. 'ution' → logprob: -9.322032928466797
    8. 'uter' → logprob: -10.697032928466797
    9. '_com' → logprob: -10.697032928466797
    10. '_de' → logprob: -10.822032928466797

Token 666: '(per' (ID: 96497)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.011324850842356682
    2. '(de' → logprob: -4.636324882507324
    3. 'prem' → logprob: -7.136324882507324
    4. '(' → logprob: -8.386324882507324
    5. '([' → logprob: -8.636324882507324
    6. '(per' → logprob: -9.136324882507324
    7. 'de' → logprob: -9.261324882507324
    8. '(pre' → logprob: -10.136324882507324
    9. '(
' → logprob: -10.261324882507324
    10. 'p' → logprob: -10.386324882507324

Token 667: 'mutation' (ID: 92896)
  Prédit: 'mutation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mutation' → logprob: -0.4760759770870209
    2. 'utation' → logprob: -1.6010760068893433
    3. 'met' → logprob: -2.4760758876800537
    4. 'em' → logprob: -2.9760758876800537
    5. 'mut' → logprob: -3.9760758876800537
    6. 'eme' → logprob: -5.101076126098633
    7. 'm' → logprob: -5.601076126098633
    8. 'erm' → logprob: -5.851076126098633
    9. 'mi' → logprob: -6.101076126098633
    10. 'ut' → logprob: -6.351076126098633

Token 668: '_ap' (ID: 45078)
  Prédit: '_de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_de' → logprob: -0.027054302394390106
    2. '_com' → logprob: -3.7770543098449707
    3. '_ap' → logprob: -5.777054309844971
    4. '_per' → logprob: -7.777054309844971
    5. 'de' → logprob: -8.652053833007812
    6. '_p' → logprob: -10.152053833007812
    7. 'ap' → logprob: -10.527053833007812
    8. 'com' → logprob: -11.402053833007812
    9. ')' → logprob: -11.777053833007812
    10. 'De' → logprob: -12.652053833007812

Token 669: 'res' (ID: 430)
  Prédit: 'erm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'erm' → logprob: -0.8086144924163818
    2. 'li' → logprob: -1.3086144924163818
    3. 'ermut' → logprob: -1.6836144924163818
    4. 'lication' → logprob: -2.433614492416382
    5. 'em' → logprob: -5.808614730834961
    6. 'er' → logprob: -6.558614730834961
    7. 'lications' → logprob: -6.558614730834961
    8. 'mutation' → logprob: -6.808614730834961
    9. 'mut' → logprob: -7.558614730834961
    10. 'osition' → logprob: -7.808614730834961

Token 670: '_cycles' (ID: 183228)
  Prédit: '_cycles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cycles' → logprob: -0.02328798547387123
    2. 'cycles' → logprob: -3.7732880115509033
    3. '_com' → logprob: -11.398287773132324
    4. 'per' → logprob: -12.023287773132324
    5. 'cy' → logprob: -12.023287773132324
    6. '_per' → logprob: -12.523287773132324
    7. '_' → logprob: -12.773287773132324
    8. '_c' → logprob: -12.773287773132324
    9. 'Cycles' → logprob: -13.023287773132324
    10. '_cycle' → logprob: -13.398287773132324

Token 671: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.4060561776859686e-05
    2. ')
' → logprob: -10.125043869018555
    3. ' )' → logprob: -13.250043869018555
    4. '))' → logprob: -13.750043869018555
    5. '   ' → logprob: -15.250043869018555
    6. ')

' → logprob: -15.375043869018555
    7. ')`' → logprob: -15.375043869018555
    8. ')))' → logprob: -17.000043869018555
    9. '[' → logprob: -17.375043869018555
    10. '	' → logprob: -17.375043869018555

Token 672: ')

' (ID: 1029)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.025224594399333
    2. ')' → logprob: -4.400224685668945
    3. 'result' → logprob: -4.400224685668945
    4. '[' → logprob: -9.275224685668945
    5. 'for' → logprob: -9.275224685668945
    6. ')
' → logprob: -9.525224685668945
    7. '#' → logprob: -10.400224685668945
    8. '[result' → logprob: -11.150224685668945
    9. ' print' → logprob: -11.275224685668945
    10. ']' → logprob: -12.025224685668945

Token 673: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0011128316400572658
    2. 'result' → logprob: -7.501112937927246
    3. 'for' → logprob: -7.501112937927246
    4. '#' → logprob: -12.376112937927246
    5. 'prin' → logprob: -14.126112937927246
    6. ' print' → logprob: -14.376112937927246
    7. '#print' → logprob: -14.751112937927246
    8. '[' → logprob: -15.001112937927246
    9. 'prem' → logprob: -15.126112937927246
    10. 'pr' → logprob: -15.751112937927246

Token 674: ' Aff' (ID: 13741)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00694684125483036
    2. 'for' → logprob: -5.006947040557861
    3. 'result' → logprob: -8.381946563720703
    4. ' print' → logprob: -13.381946563720703
    5. ' for' → logprob: -14.381946563720703
    6. '```' → logprob: -16.006946563720703
    7. 'prin' → logprob: -16.256946563720703
    8. '#' → logprob: -16.381946563720703
    9. 'prem' → logprob: -18.256946563720703
    10. 'rés' → logprob: -18.381946563720703

Token 675: 'ichage' (ID: 118475)
  Prédit: 'icher'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'icher' → logprob: -0.1688445508480072
    2. 'ichage' → logprob: -2.54384446144104
    3. 'ich' → logprob: -2.91884446144104
    4. 'iche' → logprob: -4.168844699859619
    5. 'print' → logprob: -5.043844699859619
    6. '#' → logprob: -7.668844699859619
    7. 'ic' → logprob: -8.168844223022461
    8. '   ' → logprob: -10.793844223022461
    9. 'ichier' → logprob: -10.793844223022461
    10. '```' → logprob: -10.793844223022461

Token 676: ' de' (ID: 334)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -9.841743303695694e-05
    2. 'for' → logprob: -9.25009822845459
    3. 'result' → logprob: -13.25009822845459
    4. ' print' → logprob: -14.50009822845459
    5. 'prin' → logprob: -19.875099182128906
    6. ' for' → logprob: -20.000099182128906
    7. '```' → logprob: -20.125099182128906
    8. 'pr' → logprob: -22.500099182128906
    9. '	print' → logprob: -22.750099182128906
    10. '[' → logprob: -22.875099182128906

Token 677: ' la' (ID: 557)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.46657079458236694
    2. '"' → logprob: -1.2165708541870117
    3. 'result' → logprob: -2.5915708541870117
    4. '[result' → logprob: -7.466570854187012
    5. '[' → logprob: -8.091570854187012
    6. 'print' → logprob: -9.091570854187012
    7. 'res' → logprob: -9.216570854187012
    8. ' '' → logprob: -9.216570854187012
    9. ''r' → logprob: -9.341570854187012
    10. ''s' → logprob: -9.591570854187012

Token 678: ' permutation' (ID: 135200)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5185325145721436
    2. 'result' → logprob: -1.2685325145721436
    3. ''' → logprob: -2.1435325145721436
    4. ' result' → logprob: -6.143532752990723
    5. ' print' → logprob: -6.518532752990723
    6. '"' → logprob: -7.143532752990723
    7. 'final' → logprob: -7.643532752990723
    8. 'for' → logprob: -7.768532752990723
    9. ' resultat' → logprob: -7.768532752990723
    10. 'rés' → logprob: -8.768532752990723

Token 679: ' finale' (ID: 37759)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.017989203333854675
    2. 'result' → logprob: -4.642989158630371
    3. 'for' → logprob: -4.892989158630371
    4. '('' → logprob: -8.142989158630371
    5. '(' → logprob: -8.642989158630371
    6. 'final' → logprob: -9.517989158630371
    7. '(print' → logprob: -10.017989158630371
    8. '(result' → logprob: -10.517989158630371
    9. '("' → logprob: -11.017989158630371
    10. ' print' → logprob: -11.267989158630371

Token 680: ' avec' (ID: 3937)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0004319804720580578
    2. 'for' → logprob: -7.750432014465332
    3. 'result' → logprob: -13.875432014465332
    4. ' print' → logprob: -14.875432014465332
    5. '```' → logprob: -18.375431060791016
    6. 'prin' → logprob: -19.250431060791016
    7. ' for' → logprob: -20.000431060791016
    8. '[' → logprob: -20.125431060791016
    9. '[result' → logprob: -21.125431060791016
    10. '#print' → logprob: -21.250431060791016

Token 681: ' passage' (ID: 26368)
  Prédit: '[val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[val' → logprob: -0.2955377697944641
    2. 'print' → logprob: -2.5455377101898193
    3. '1' → logprob: -2.6705377101898193
    4. 'val' → logprob: -3.4205377101898193
    5. '[result' → logprob: -3.7955377101898193
    6. '[' → logprob: -3.7955377101898193
    7. 'result' → logprob: -4.420537948608398
    8. ''' → logprob: -5.295537948608398
    9. '"' → logprob: -5.420537948608398
    10. ' ' → logprob: -6.295537948608398

Token 682: ' à' (ID: 1221)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.01767829805612564
    2. 'result' → logprob: -4.517678260803223
    3. ' print' → logprob: -5.392678260803223
    4. 'for' → logprob: -7.267678260803223
    5. ''' → logprob: -7.517678260803223
    6. ' result' → logprob: -8.017678260803223
    7. '"' → logprob: -8.892678260803223
    8. 'join' → logprob: -9.892678260803223
    9. ' à' → logprob: -10.267678260803223
    10. '_result' → logprob: -10.267678260803223

Token 683: ' l' (ID: 305)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0012779728276655078
    2. 'l' → logprob: -7.001277923583984
    3. 'la' → logprob: -8.876277923583984
    4. 'une' → logprob: -9.626277923583984
    5. '[' → logprob: -10.626277923583984
    6. 'val' → logprob: -10.751277923583984
    7. '#' → logprob: -11.001277923583984
    8. '```' → logprob: -11.126277923583984
    9. 'i' → logprob: -11.251277923583984
    10. '+' → logprob: -11.376277923583984

Token 684: ''' (ID: 6)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.05535509064793587
    2. 'a' → logprob: -3.0553550720214844
    3. ''' → logprob: -5.930355072021484
    4. 'print' → logprob: -5.930355072021484
    5. ''aff' → logprob: -7.555355072021484
    6. ''impression' → logprob: -8.305355072021484
    7. ''espace' → logprob: -8.805355072021484
    8. '+' → logprob: -9.805355072021484
    9. 'i' → logprob: -9.930355072021484
    10. ''a' → logprob: -10.055355072021484

Token 685: 'index' (ID: 2257)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005032312474213541
    2. 'indices' → logprob: -8.625503540039062
    3. 'i' → logprob: -8.875503540039062
    4. 'base' → logprob: -9.750503540039062
    5. 'index' → logprob: -10.500503540039062
    6. 'indice' → logprob: -10.875503540039062
    7. '```' → logprob: -11.375503540039062
    8. 'un' → logprob: -11.625503540039062
    9. 'une' → logprob: -12.000503540039062
    10. 'u' → logprob: -12.250503540039062

Token 686: 'ation' (ID: 387)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.10720058530569077
    2. ' +' → logprob: -2.4822006225585938
    3. '1' → logprob: -4.482200622558594
    4. 's' → logprob: -5.232200622558594
    5. ' ' → logprob: -6.732200622558594
    6. '_plus' → logprob: -9.232200622558594
    7. ' plus' → logprob: -9.982200622558594
    8. '0' → logprob: -10.357200622558594
    9. 'plus' → logprob: -10.482200622558594
    10. '+s' → logprob: -11.607200622558594

Token 687: ' humaine' (ID: 100686)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.19881689548492432
    2. '1' → logprob: -1.9488168954849243
    3. ' +' → logprob: -3.3238167762756348
    4. ' ' → logprob: -6.573816776275635
    5. 'plus' → logprob: -8.573817253112793
    6. '_plus' → logprob: -9.823817253112793
    7. 'print' → logprob: -10.073817253112793
    8. ' plus' → logprob: -10.323817253112793
    9. '0' → logprob: -11.198817253112793
    10. '[' → logprob: -11.323817253112793

Token 688: ' (' (ID: 350)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0031947086099535227
    2. 'for' → logprob: -5.753194808959961
    3. ' print' → logprob: -11.253194808959961
    4. 'result' → logprob: -13.003194808959961
    5. ' for' → logprob: -13.503194808959961
    6. '```' → logprob: -15.378194808959961
    7. '
' → logprob: -15.753194808959961
    8. '(print' → logprob: -18.37819480895996
    9. 'prin' → logprob: -18.75319480895996
    10. '.print' → logprob: -19.12819480895996

Token 689: 'base' (ID: 5423)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.9426012635231018
    2. 'print' → logprob: -1.317601203918457
    3. ')' → logprob: -1.567601203918457
    4. '"' → logprob: -2.817601203918457
    5. ''' → logprob: -3.067601203918457
    6. '1' → logprob: -5.192601203918457
    7. ' print' → logprob: -5.442601203918457
    8. ' result' → logprob: -5.567601203918457
    9. ' )' → logprob: -5.692601203918457
    10. 'for' → logprob: -5.942601203918457

Token 690: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0465911328792572
    2. '+' → logprob: -3.79659104347229
    3. '=' → logprob: -3.92159104347229
    4. ' ' → logprob: -6.546591281890869
    5. ' +' → logprob: -7.046591281890869
    6. ' =' → logprob: -8.171590805053711
    7. '0' → logprob: -8.296590805053711
    8. ' plus' → logprob: -9.046590805053711
    9. '10' → logprob: -9.296590805053711
    10. ' à' → logprob: -10.171590805053711

Token 691: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00021688752167392522
    2. ' ' → logprob: -9.125216484069824
    3. '10' → logprob: -9.250216484069824
    4. '+' → logprob: -12.125216484069824
    5. '0' → logprob: -12.250216484069824
    6. '```' → logprob: -14.500216484069824
    7. '6' → logprob: -15.125216484069824
    8. '2' → logprob: -15.500216484069824
    9. '=' → logprob: -15.750216484069824
    10. ' +' → logprob: -16.25021743774414

Token 692: ')
' (ID: 446)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2458861768245697
    2. ')
' → logprob: -1.995886206626892
    3. ')' → logprob: -2.6208860874176025
    4. 'result' → logprob: -4.870886325836182
    5. ',' → logprob: -7.120886325836182
    6. 'for' → logprob: -7.620886325836182
    7. ' print' → logprob: -8.745885848999023
    8. '   ' → logprob: -9.995885848999023
    9. ',result' → logprob: -9.995885848999023
    10. '
' → logprob: -10.495885848999023

Token 693: 'aff' (ID: 2857)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.9361264946837764e-07
    2. 'for' → logprob: -16.5
    3. ' print' → logprob: -18.75
    4. '```' → logprob: -21.875
    5. 'prin' → logprob: -24.875
    6. 'result' → logprob: -25.625
    7. '	print' → logprob: -25.625
    8. 'pr' → logprob: -27.25
    9. 'Print' → logprob: -27.375
    10. '
' → logprob: -27.625

Token 694: 'ichage' (ID: 118475)
  Prédit: 'ichage'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ichage' → logprob: -0.13324153423309326
    2. 'icher' → logprob: -2.258241653442383
    3. 'ich' → logprob: -4.008241653442383
    4. 'ic' → logprob: -6.633241653442383
    5. 'iche' → logprob: -7.758241653442383
    6. '#' → logprob: -9.008241653442383
    7. '```' → logprob: -10.133241653442383
    8. 'print' → logprob: -10.133241653442383
    9. '   ' → logprob: -10.508241653442383
    10. '
' → logprob: -11.383241653442383

Token 695: '_result' (ID: 11623)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7574319243431091
    2. '_result' → logprob: -1.382431983947754
    3. '_final' → logprob: -1.382431983947754
    4. ' =' → logprob: -4.007431983947754
    5. '=' → logprob: -5.757431983947754
    6. 'final' → logprob: -6.257431983947754
    7. 'result' → logprob: -6.382431983947754
    8. '(result' → logprob: -6.882431983947754
    9. '_=' → logprob: -7.257431983947754
    10. '_res' → logprob: -7.257431983947754

Token 696: 'at' (ID: 266)
  Prédit: 'ation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ation' → logprob: -0.6792156100273132
    2. 'er' → logprob: -1.179215669631958
    3. 'print' → logprob: -1.804215669631958
    4. 'e' → logprob: -4.429215431213379
    5. 'é' → logprob: -5.054215431213379
    6. 'ion' → logprob: -6.804215431213379
    7. 'age' → logprob: -7.179215431213379
    8. 'ent' → logprob: -8.679215431213379
    9. 'result' → logprob: -8.804215431213379
    10. '   ' → logprob: -10.179215431213379

Token 697: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8604158163070679
    2. '_final' → logprob: -1.2354158163070679
    3. ' =' → logprob: -1.6104158163070679
    4. '=' → logprob: -3.1104159355163574
    5. '_result' → logprob: -3.7354159355163574
    6. 'final' → logprob: -4.860415935516357
    7. '_=' → logprob: -5.860415935516357
    8. 'ation' → logprob: -6.735415935516357
    9. '(result' → logprob: -6.985415935516357
    10. 'result' → logprob: -7.110415935516357

Token 698: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.13731399178504944
    2. '[result' → logprob: -2.8873140811920166
    3. '"' → logprob: -3.1373140811920166
    4. ''' → logprob: -3.6373140811920166
    5. ' [' → logprob: -6.6373138427734375
    6. '[str' → logprob: -8.137313842773438
    7. '[list' → logprob: -8.262313842773438
    8. '[int' → logprob: -8.887313842773438
    9. '[val' → logprob: -9.012313842773438
    10. '[i' → logprob: -9.137313842773438

Token 699: 'str' (ID: 689)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.09309103339910507
    2. 'x' → logprob: -2.9680910110473633
    3. 'str' → logprob: -4.593091011047363
    4. 'element' → logprob: -4.718091011047363
    5. 'position' → logprob: -4.718091011047363
    6. 'indice' → logprob: -4.968091011047363
    7. 'pos' → logprob: -7.218091011047363
    8. 'elem' → logprob: -7.343091011047363
    9. 'élé' → logprob: -7.593091011047363
    10. 'index' → logprob: -7.843091011047363

Token 700: '(val' (ID: 17391)
  Prédit: '(val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(val' → logprob: -0.08305006474256516
    2. '(x' → logprob: -3.083050012588501
    3. '(element' → logprob: -3.583050012588501
    4. '(position' → logprob: -6.20805025100708
    5. '(elem' → logprob: -7.08305025100708
    6. '(i' → logprob: -7.33305025100708
    7. '(ind' → logprob: -7.45805025100708
    8. '(numero' → logprob: -7.58305025100708
    9. '(num' → logprob: -8.083049774169922
    10. '(pos' → logprob: -8.208049774169922

Token 701: 'eur' (ID: 8671)
  Prédit: 'eur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eur' → logprob: -0.0270234365016222
    2. '(val' → logprob: -3.6520235538482666
    3. '(result' → logprob: -8.902023315429688
    4. '+' → logprob: -9.277023315429688
    5. '(res' → logprob: -9.402023315429688
    6. '(element' → logprob: -9.652023315429688
    7. '(' → logprob: -10.027023315429688
    8. '(elem' → logprob: -10.027023315429688
    9. 'uer' → logprob: -10.277023315429688
    10. '(r' → logprob: -10.527023315429688

Token 702: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.02655351161956787
    2. ' +' → logprob: -3.6515536308288574
    3. '(val' → logprob: -8.4015531539917
    4. '(i' → logprob: -11.5265531539917
    5. '(' → logprob: -12.0265531539917
    6. '(x' → logprob: -12.1515531539917
    7. '[val' → logprob: -13.2765531539917
    8. '(index' → logprob: -14.2765531539917
    9. '(v' → logprob: -14.4015531539917
    10. '(value' → logprob: -14.4015531539917

Token 703: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -12.87500286102295
    3. ')' → logprob: -19.750001907348633
    4. '   ' → logprob: -20.500001907348633
    5. '0' → logprob: -22.875001907348633
    6. '```' → logprob: -22.875001907348633
    7. '<|end|>' → logprob: -23.750001907348633
    8. ' ' → logprob: -24.125001907348633
    9. '+' → logprob: -24.375001907348633
    10. '=' → logprob: -24.625001907348633

Token 704: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -19.875
    3. ')' → logprob: -22.75
    4. '   ' → logprob: -23.25
    5. '```' → logprob: -23.75
    6. '１' → logprob: -24.5
    7. '১' → logprob: -25.125
    8. '१' → logprob: -25.375
    9. '
' → logprob: -25.5
    10. '+' → logprob: -25.875

Token 705: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.650518920039758e-06
    2. 'for' → logprob: -13.250003814697266
    3. ' )' → logprob: -13.750003814697266
    4. ' for' → logprob: -14.250003814697266
    5. ')
' → logprob: -17.500003814697266
    6. ']' → logprob: -18.250003814697266
    7. '}' → logprob: -18.625003814697266
    8. ')]' → logprob: -18.875003814697266
    9. '),' → logprob: -19.000003814697266
    10. '   ' → logprob: -19.250003814697266

Token 706: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2519756853580475
    2. 'for' → logprob: -1.501975655555725
    3. '	for' → logprob: -10.626976013183594
    4. ')' → logprob: -11.001976013183594
    5. ' ' → logprob: -12.626976013183594
    6. '   ' → logprob: -13.876976013183594
    7. ']' → logprob: -13.876976013183594
    8. 'pour' → logprob: -16.001976013183594
    9. ' pour' → logprob: -16.126976013183594
    10. ' ' → logprob: -16.501976013183594

Token 707: ' valeur' (ID: 41664)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.01586003787815571
    2. 'result' → logprob: -4.765860080718994
    3. ' valeur' → logprob: -5.015860080718994
    4. ' resultat' → logprob: -7.515860080718994
    5. 'res' → logprob: -10.765859603881836
    6. 'value' → logprob: -11.140859603881836
    7. ' résultat' → logprob: -13.390859603881836
    8. 'vale' → logprob: -13.640859603881836
    9. 'valor' → logprob: -14.140859603881836
    10. 'indice' → logprob: -14.140859603881836

Token 708: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.6931715607643127
    2. ' in' → logprob: -0.6931715607643127
    3. 'result' → logprob: -11.693171501159668
    4. '	in' → logprob: -12.318171501159668
    5. 'val' → logprob: -12.443171501159668
    6. 'dans' → logprob: -13.568171501159668
    7. 'en' → logprob: -13.818171501159668
    8. ']' → logprob: -13.943171501159668
    9. '_in' → logprob: -14.068171501159668
    10. 'ins' → logprob: -14.318171501159668

Token 709: ' resultat' (ID: 67404)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.001688985270448029
    2. ' resultat' → logprob: -6.5016889572143555
    3. 'res' → logprob: -8.626688957214355
    4. 'rés' → logprob: -13.251688957214355
    5. 'resultado' → logprob: -13.501688957214355
    6. ' résultat' → logprob: -13.501688957214355
    7. '
' → logprob: -14.501688957214355
    8. 're' → logprob: -14.751688957214355
    9. 'ress' → logprob: -15.126688957214355
    10. ' ' → logprob: -15.251688957214355

Token 710: '_final' (ID: 46468)
  Prédit: '_final'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_final' → logprob: -0.0031796174589544535
    2. 'final' → logprob: -5.753179550170898
    3. 'Final' → logprob: -14.503179550170898
    4. ')' → logprob: -14.753179550170898
    5. ' final' → logprob: -15.378179550170898
    6. '_' → logprob: -15.378179550170898
    7. '_fin' → logprob: -15.628179550170898
    8. ']' → logprob: -16.7531795501709
    9. '```' → logprob: -17.0031795501709
    10. '_f' → logprob: -17.1281795501709

Token 711: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -2.0339031834737398e-05
    2. ' ]' → logprob: -10.875020027160645
    3. ']
' → logprob: -13.625020027160645
    4. ']

' → logprob: -16.00002098083496
    5. ')' → logprob: -17.25002098083496
    6. '])' → logprob: -17.37502098083496
    7. ']
' → logprob: -17.62502098083496
    8. ')]' → logprob: -17.62502098083496
    9. '];' → logprob: -18.62502098083496
    10. '()]' → logprob: -19.12502098083496

Token 712: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.9361264946837764e-07
    2. ' print' → logprob: -16.125
    3. 'for' → logprob: -18.0
    4. 'prin' → logprob: -18.25
    5. '
' → logprob: -18.625
    6. '```' → logprob: -19.75
    7. 'pr' → logprob: -21.25
    8. '#print' → logprob: -21.875
    9. '	print' → logprob: -22.25
    10. 'pri' → logprob: -22.5

Token 713: '("' (ID: 568)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.4750179648399353
    2. '("' → logprob: -0.9750179648399353
    3. '(' → logprob: -6.97501802444458
    4. '(*' → logprob: -12.600017547607422
    5. '("("' → logprob: -13.100017547607422
    6. '(("' → logprob: -17.225017547607422
    7. '"' → logprob: -17.725017547607422
    8. ' ("' → logprob: -17.850017547607422
    9. '(
' → logprob: -17.975017547607422
    10. '(('' → logprob: -18.100017547607422

Token 714: ' ".' (ID: 11730)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.008623320609331131
    2. ''' → logprob: -4.758623123168945
    3. ' "' → logprob: -11.758623123168945
    4. ' ' → logprob: -15.883623123168945
    5. ')' → logprob: -16.133623123168945
    6. ' '' → logprob: -16.883623123168945
    7. '"La' → logprob: -16.883623123168945
    8. '("' → logprob: -17.133623123168945
    9. ''end' → logprob: -17.133623123168945
    10. '```' → logprob: -17.633623123168945

Token 715: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -4.4849443838757e-06
    2. 'jo' → logprob: -12.875004768371582
    3. 'j' → logprob: -13.750004768371582
    4. ' join' → logprob: -14.625004768371582
    5. '.join' → logprob: -15.625004768371582
    6. 'print' → logprob: -16.000003814697266
    7. 'jou' → logprob: -18.625003814697266
    8. 'joint' → logprob: -18.625003814697266
    9. '.' → logprob: -19.375003814697266
    10. 'joins' → logprob: -19.625003814697266

Token 716: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.5716304410016164e-05
    2. 'aff' → logprob: -10.250035285949707
    3. ' (' → logprob: -15.750035285949707
    4. '(
' → logprob: -16.000036239624023
    5. ')' → logprob: -17.625036239624023
    6. '_aff' → logprob: -18.750036239624023
    7. ''aff' → logprob: -18.875036239624023
    8. ' affich' → logprob: -19.750036239624023
    9. '(att' → logprob: -19.875036239624023
    10. '((' → logprob: -20.375036239624023

Token 717: 'aff' (ID: 2857)
  Prédit: 'aff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aff' → logprob: -6.704273118884885e-07
    2. ' affich' → logprob: -14.625000953674316
    3. 'af' → logprob: -16.875
    4. ''aff' → logprob: -17.0
    5. ')' → logprob: -20.125
    6. '_aff' → logprob: -20.75
    7. 'Aff' → logprob: -20.75
    8. '(' → logprob: -21.125
    9. '.aff' → logprob: -21.125
    10. 'a' → logprob: -21.5

Token 718: 'ichage' (ID: 118475)
  Prédit: 'ichage'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ichage' → logprob: -0.0015034328680485487
    2. 'ich' → logprob: -6.5015034675598145
    3. 'ch' → logprob: -14.126502990722656
    4. 'icher' → logprob: -16.126502990722656
    5. 'ach' → logprob: -17.001502990722656
    6. 'ic' → logprob: -17.001502990722656
    7. 'i' → logprob: -17.376502990722656
    8. 'iche' → logprob: -17.501502990722656
    9. ' affich' → logprob: -18.001502990722656
    10. '(' → logprob: -18.626502990722656

Token 719: '_result' (ID: 11623)
  Prédit: '_result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_result' → logprob: -0.002542251255363226
    2. 'result' → logprob: -6.252542018890381
    3. 's' → logprob: -7.502542018890381
    4. '_res' → logprob: -10.377542495727539
    5. 'ultat' → logprob: -11.877542495727539
    6. '_RESULT' → logprob: -12.502542495727539
    7. 'aff' → logprob: -12.502542495727539
    8. 't' → logprob: -13.127542495727539
    9. 'rés' → logprob: -13.252542495727539
    10. 'at' → logprob: -13.377542495727539

Token 720: 'at' (ID: 266)
  Prédit: 'at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -1.306760805164231e-05
    2. 't' → logprob: -11.75001335144043
    3. 'al' → logprob: -13.00001335144043
    4. 'ат' → logprob: -13.62501335144043
    5. 'ent' → logprob: -13.75001335144043
    6. 'ats' → logprob: -15.62501335144043
    7. 'ât' → logprob: -16.12501335144043
    8. '[' → logprob: -16.75001335144043
    9. 'ut' → logprob: -16.75001335144043
    10. ')' → logprob: -17.12501335144043

Token 721: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04858839511871338
    2. '))' → logprob: -3.048588275909424
    3. '())' → logprob: -14.923588752746582
    4. ')))' → logprob: -15.298588752746582
    5. ')`' → logprob: -15.923588752746582
    6. '])' → logprob: -16.798587799072266
    7. ')")' → logprob: -17.048587799072266
    8. '})' → logprob: -17.048587799072266
    9. '()' → logprob: -17.298587799072266
    10. ')}' → logprob: -17.673587799072266


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 719
Tokens correctement prédits (1ère position, stricte): 321
Tokens correctement prédits (1ère position, avec adaptation): 328
Tokens correctement prédits (top 10): 574
Précision stricte (1ère position): 44.65%
Précision adaptée (1ère position): 45.62%
Précision (top 10): 79.83%
================================================================================
