================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:53:45
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def main():
    """
    Lit un nombre entier N, puis une liste de N entiers.
    Trie la liste, puis affiche la différence entre les éléments situés à la position médiane
    et juste avant la médiane dans la liste triée.
    """

    # Lecture de la taille de la liste
    N = int(input())

    # Lecture de la liste de valeurs, convertie en entiers
    d = [int(x) for x in input().split()]

    # Trie la liste d'entiers en ordre croissant
    d.sort()

    # Calcule l'indice de la médiane (partie entière de N/2)
    h = N // 2

    # Affiche la différence entre l'élément à la médiane et celui juste avant
    # Ceci est utile dans certains contextes comme le calcul de l'écart minimal entre deux moitiés d'ensemble trié
    print(d[h] - d[h - 1])

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' main' (ID: 2758)
  → Token d'amorce (pas de prédiction)

Token 2: '():
' (ID: 8595)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\' → logprob: -0.2719064950942993
    2. '\n' → logprob: -1.6469064950942993
    3. '   ' → logprob: -3.8969063758850098
    4. '    
' → logprob: -4.89690637588501
    5. '    ' → logprob: -5.77190637588501
    6. ''' → logprob: -5.89690637588501
    7. '```' → logprob: -6.14690637588501
    8. '(' → logprob: -6.39690637588501
    9. ' 
' → logprob: -6.39690637588501
    10. '\r' → logprob: -6.89690637588501

Token 4: ' """
' (ID: 7037)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.20469899475574493
    2. 'pass' → logprob: -2.3296990394592285
    3. '   ' → logprob: -2.8296990394592285
    4. 'return' → logprob: -4.0796990394592285
    5. 'p' → logprob: -5.3296990394592285
    6. '#' → logprob: -6.3296990394592285
    7. 'r' → logprob: -6.4546990394592285
    8. 'a' → logprob: -7.3296990394592285
    9. '```' → logprob: -7.3296990394592285
    10. 'n' → logprob: -8.07969856262207

Token 5: '   ' (ID: 271)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.7377256751060486
    2. 'This' → logprob: -1.8627257347106934
    3. 'Calculate' → logprob: -1.9877257347106934
    4. 'Initialize' → logprob: -2.4877257347106934
    5. '   ' → logprob: -3.7377257347106934
    6. 'Returns' → logprob: -3.8627257347106934
    7. 'Run' → logprob: -3.9877257347106934
    8. 'Show' → logprob: -5.112725734710693
    9. 'Runs' → logprob: -5.237725734710693
    10. 'Starts' → logprob: -5.237725734710693

Token 6: ' Lit' (ID: 45595)
  Prédit: 'Run'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Run' → logprob: -1.3347530364990234
    2. 'This' → logprob: -1.5847530364990234
    3. 'Initialize' → logprob: -1.9597530364990234
    4. 'Calculate' → logprob: -1.9597530364990234
    5. 'Print' → logprob: -2.8347530364990234
    6. 'Main' → logprob: -3.7097530364990234
    7. 'Start' → logprob: -3.9597530364990234
    8. 'Process' → logprob: -4.084753036499023
    9. 'Runs' → logprob: -4.459753036499023
    10. 'Initial' → logprob: -4.584753036499023

Token 7: ' un' (ID: 537)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.5748562812805176
    2. 'e' → logprob: -1.5748562812805176
    3. 'tle' → logprob: -2.0748562812805176
    4. 'r' → logprob: -3.1998562812805176
    5. '   ' → logprob: -3.4498562812805176
    6. 'ral' → logprob: -4.949856281280518
    7. 'def' → logprob: -5.199856281280518
    8. 't' → logprob: -5.449856281280518
    9. 'doc' → logprob: -6.074856281280518
    10. '"""
' → logprob: -6.324856281280518

Token 8: ' nombre' (ID: 9733)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.1365019828081131
    2. 'f' → logprob: -2.8865020275115967
    3. ' fichier' → logprob: -2.8865020275115967
    4. ' ' → logprob: -5.261501789093018
    5. 'a' → logprob: -6.011501789093018
    6. ' e' → logprob: -6.136501789093018
    7. ' f' → logprob: -6.761501789093018
    8. '   ' → logprob: -6.761501789093018
    9. 's' → logprob: -7.011501789093018
    10. 'es' → logprob: -7.386501789093018

Token 9: ' entier' (ID: 80473)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8933934569358826
    2. '\n' → logprob: -0.8933934569358826
    3. '\' → logprob: -3.0183935165405273
    4. '   ' → logprob: -3.6433935165405273
    5. 'e' → logprob: -4.018393516540527
    6. 'n' → logprob: -4.518393516540527
    7. ''' → logprob: -4.643393516540527
    8. '  
' → logprob: -5.018393516540527
    9. '\r' → logprob: -5.018393516540527
    10. ' \' → logprob: -5.143393516540527

Token 10: ' N' (ID: 478)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5288070440292358
    2. '\n' → logprob: -1.1538070440292358
    3. ' ' → logprob: -3.5288071632385254
    4. ',' → logprob: -4.403807163238525
    5. ')' → logprob: -4.653807163238525
    6. '\' → logprob: -4.778807163238525
    7. '
' → logprob: -5.153807163238525
    8. '.' → logprob: -5.403807163238525
    9. '    
' → logprob: -5.653807163238525
    10. ' 
' → logprob: -5.778807163238525

Token 11: ',' (ID: 11)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.6609023809432983
    2. '   ' → logprob: -0.7859023809432983
    3. '
' → logprob: -4.410902500152588
    4. '\' → logprob: -5.035902500152588
    5. '    
' → logprob: -6.285902500152588
    6. ',' → logprob: -6.410902500152588
    7. 'n' → logprob: -7.410902500152588
    8. ' ' → logprob: -7.410902500152588
    9. '\r' → logprob: -7.535902500152588
    10. '  
' → logprob: -7.535902500152588

Token 12: ' puis' (ID: 18766)
  Prédit: ' et'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' et' → logprob: -0.9013845324516296
    2. '<|end|>' → logprob: -1.7763845920562744
    3. ' puis' → logprob: -2.1513845920562744
    4. '   ' → logprob: -2.1513845920562744
    5. ' ' → logprob: -2.7763845920562744
    6. ' and' → logprob: -3.7763845920562744
    7. ' ' → logprob: -4.526384353637695
    8. 'et' → logprob: -4.651384353637695
    9. ')' → logprob: -4.776384353637695
    10. '    ' → logprob: -4.776384353637695

Token 13: ' une' (ID: 2463)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3785518705844879
    2. ' lit' → logprob: -3.128551959991455
    3. 'l' → logprob: -3.378551959991455
    4. ' un' → logprob: -3.503551959991455
    5. ' ' → logprob: -3.878551959991455
    6. 'une' → logprob: -4.378551959991455
    7. ' récup' → logprob: -4.378551959991455
    8. ' retourne' → logprob: -4.378551959991455
    9. ' affiche' → logprob: -4.378551959991455
    10. 'un' → logprob: -4.503551959991455

Token 14: ' liste' (ID: 31719)
  Prédit: ' chaîne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.4541366398334503
    2. ' suite' → logprob: -2.579136610031128
    3. ' ligne' → logprob: -2.579136610031128
    4. ' ' → logprob: -2.704136610031128
    5. 'suite' → logprob: -2.829136610031128
    6. 'chaine' → logprob: -4.329136848449707
    7. ' chaine' → logprob: -4.454136848449707
    8. 'entrée' → logprob: -4.829136848449707
    9. 'ligne' → logprob: -4.829136848449707
    10. ' phrase' → logprob: -5.079136848449707

Token 15: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.6734060049057007
    2. ' ' → logprob: -1.2984060049057007
    3. ' des' → logprob: -2.1734061241149902
    4. '   ' → logprob: -3.9234061241149902
    5. ' 
' → logprob: -4.04840612411499
    6. 'de' → logprob: -4.04840612411499
    7. ' complète' → logprob: -4.79840612411499
    8. ' d' → logprob: -5.17340612411499
    9. ',' → logprob: -5.42340612411499
    10. '    
' → logprob: -5.54840612411499

Token 16: ' N' (ID: 478)
  Prédit: ' ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ent' → logprob: -0.41323477029800415
    2. 'n' → logprob: -1.7882347106933594
    3. ' nombres' → logprob: -2.6632347106933594
    4. ' ' → logprob: -3.0382347106933594
    5. ' chaînes' → logprob: -4.288234710693359
    6. 'ent' → logprob: -4.288234710693359
    7. 's' → logprob: -5.413234710693359
    8. 'l' → logprob: -6.038234710693359
    9. ' lignes' → logprob: -6.038234710693359
    10. 'm' → logprob: -6.288234710693359

Token 17: ' ent' (ID: 1121)
  Prédit: ' ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ent' → logprob: -0.07169061154127121
    2. 'ent' → logprob: -2.696690559387207
    3. 'élé' → logprob: -7.821690559387207
    4. ' nombres' → logprob: -8.196690559387207
    5. '_ent' → logprob: -8.446690559387207
    6. ' integers' → logprob: -8.446690559387207
    7. ' entier' → logprob: -9.321690559387207
    8. 'int' → logprob: -9.571690559387207
    9. 'inte' → logprob: -9.571690559387207
    10. ' ' → logprob: -9.571690559387207

Token 18: 'iers' (ID: 11012)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2534446120262146
    2. 'iers' → logprob: -1.5034446716308594
    3. 'ié' → logprob: -6.628444671630859
    4. 'ières' → logprob: -9.75344467163086
    5. 'ier' → logprob: -10.00344467163086
    6. '```' → logprob: -10.25344467163086
    7. '_i' → logprob: -11.00344467163086
    8. ' i' → logprob: -11.75344467163086
    9. '   ' → logprob: -12.25344467163086
    10. 'í' → logprob: -12.62844467163086

Token 19: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.027509957551956177
    2. '\n' → logprob: -4.902510166168213
    3. '
' → logprob: -5.402510166168213
    4. '.' → logprob: -5.527510166168213
    5. ',' → logprob: -5.527510166168213
    6. '    
' → logprob: -5.652510166168213
    7. ' ' → logprob: -7.277510166168213
    8. '\' → logprob: -7.527510166168213
    9. 'n' → logprob: -7.902510166168213
    10. ')' → logprob: -8.152509689331055

Token 20: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.049894675612449646
    2. '\n' → logprob: -3.1748945713043213
    3. '\' → logprob: -6.0498948097229
    4. '"""' → logprob: -6.0498948097229
    5. '    
' → logprob: -7.4248948097229
    6. '    ' → logprob: -8.299894332885742
    7. ')' → logprob: -8.799894332885742
    8. ' ' → logprob: -8.924894332885742
    9. '"""
' → logprob: -9.049894332885742
    10. '"' → logprob: -9.049894332885742

Token 21: ' Trie' (ID: 131955)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.041121501475572586
    2. '\n' → logprob: -3.416121482849121
    3. '"""' → logprob: -6.041121482849121
    4. '    
' → logprob: -6.291121482849121
    5. '\' → logprob: -6.666121482849121
    6. '
' → logprob: -8.041121482849121
    7. '"""
' → logprob: -8.416121482849121
    8. '  
' → logprob: -8.541121482849121
    9. 'n' → logprob: -8.541121482849121
    10. '"' → logprob: -8.541121482849121

Token 22: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.7767958641052246
    2. ' ' → logprob: -1.0267958641052246
    3. ' les' → logprob: -2.0267958641052246
    4. 's' → logprob: -3.7767958641052246
    5. ' le' → logprob: -5.026795864105225
    6. '   ' → logprob: -5.651795864105225
    7. '_' → logprob: -6.026795864105225
    8. ' et' → logprob: -6.276795864105225
    9. ' ' → logprob: -6.401795864105225
    10. '(' → logprob: -6.526795864105225

Token 23: ' liste' (ID: 31719)
  Prédit: ' liste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.039399560540914536
    2. 'liste' → logprob: -3.4143996238708496
    3. ' ' → logprob: -5.78939962387085
    4. '   ' → logprob: -6.78939962387085
    5. ' list' → logprob: -7.41439962387085
    6. 's' → logprob: -8.039399147033691
    7. ' la' → logprob: -9.789399147033691
    8. 'l' → logprob: -10.039399147033691
    9. ' Liste' → logprob: -10.039399147033691
    10. 'Liste' → logprob: -10.039399147033691

Token 24: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16720880568027496
    2. '    
' → logprob: -2.7922089099884033
    3. ' ' → logprob: -3.5422089099884033
    4. '    ' → logprob: -4.542208671569824
    5. ' 
' → logprob: -4.667208671569824
    6. ',' → logprob: -4.917208671569824
    7. '\' → logprob: -4.917208671569824
    8. '  
' → logprob: -5.542208671569824
    9. '_' → logprob: -5.667208671569824
    10. 'def' → logprob: -5.792208671569824

Token 25: ' puis' (ID: 18766)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 26: ' affiche' (ID: 127479)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.24507378041744232
    2. ' affiche' → logprob: -2.1200737953186035
    3. ' retourne' → logprob: -3.6200737953186035
    4. ' la' → logprob: -4.1200737953186035
    5. ' print' → logprob: -4.2450737953186035
    6. ' imprime' → logprob: -4.8700737953186035
    7. 'l' → logprob: -4.9950737953186035
    8. 'print' → logprob: -5.3700737953186035
    9. 'aff' → logprob: -5.3700737953186035
    10. ' les' → logprob: -5.7450737953186035

Token 27: ' la' (ID: 557)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3211379945278168
    2. ' la' → logprob: -2.1961379051208496
    3. 's' → logprob: -2.9461379051208496
    4. '  ' → logprob: -3.4461379051208496
    5. ' l' → logprob: -3.9461379051208496
    6. '<|end|>' → logprob: -4.07113790512085
    7. ' le' → logprob: -4.69613790512085
    8. '```' → logprob: -5.19613790512085
    9. ' les' → logprob: -5.69613790512085
    10. '"' → logprob: -5.94613790512085

Token 28: ' différence' (ID: 79196)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.04984840378165245
    2. 's' → logprob: -3.7998483180999756
    3. '   ' → logprob: -4.799848556518555
    4. ' liste' → logprob: -4.924848556518555
    5. '  ' → logprob: -6.299848556518555
    6. ' nombre' → logprob: -6.674848556518555
    7. ' premier' → logprob: -6.924848556518555
    8. ' s' → logprob: -6.924848556518555
    9. 'r' → logprob: -7.424848556518555
    10. ' plus' → logprob: -7.674848556518555

Token 29: ' entre' (ID: 3853)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7342855334281921
    2. ' entre' → logprob: -0.9842855334281921
    3. ' between' → logprob: -2.484285593032837
    4. '_' → logprob: -4.359285354614258
    5. '  ' → logprob: -4.984285354614258
    6. ' 

' → logprob: -4.984285354614258
    7. 'entre' → logprob: -5.109285354614258
    8. '  
' → logprob: -5.234285354614258
    9. 's' → logprob: -5.609285354614258
    10. ' 
' → logprob: -5.609285354614258

Token 30: ' les' (ID: 1341)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.8046925663948059
    2. ' la' → logprob: -1.3046925067901611
    3. ' l' → logprob: -2.429692506790161
    4. 'l' → logprob: -2.679692506790161
    5. ' ' → logprob: -2.929692506790161
    6. 'le' → logprob: -3.429692506790161
    7. 'la' → logprob: -4.42969274520874
    8. ' les' → logprob: -4.92969274520874
    9. ' max' → logprob: -5.17969274520874
    10. ' the' → logprob: -5.17969274520874

Token 31: ' éléments' (ID: 57375)
  Prédit: ' deux'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deux' → logprob: -0.9083044528961182
    2. 'de' → logprob: -1.1583044528961182
    3. ' ' → logprob: -2.033304452896118
    4. ' plus' → logprob: -2.408304452896118
    5. '2' → logprob: -3.533304452896118
    6. 'élé' → logprob: -4.408304214477539
    7. ' two' → logprob: -5.658304214477539
    8. 'plus' → logprob: -5.908304214477539
    9. ' éléments' → logprob: -6.033304214477539
    10. 'é' → logprob: -6.408304214477539

Token 32: ' situ' (ID: 4581)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.9120548367500305
    2. ' ' → logprob: -1.9120547771453857
    3. '   ' → logprob: -1.9120547771453857
    4. '[' → logprob: -2.7870547771453857
    5. ' s' → logprob: -3.1620547771453857
    6. '_' → logprob: -3.2870547771453857
    7. '  ' → logprob: -3.7870547771453857
    8. '```' → logprob: -4.037055015563965
    9. ' entre' → logprob: -4.037055015563965
    10. '\' → logprob: -4.537055015563965

Token 33: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.0006349971517920494
    2. 'é' → logprob: -7.375635147094727
    3. 'es' → logprob: -12.125635147094727
    4. 'e' → logprob: -13.750635147094727
    5. '#' → logprob: -14.500635147094727
    6. '```' → logprob: -14.875635147094727
    7. 'ée' → logprob: -15.250635147094727
    8. 'ès' → logprob: -16.000635147094727
    9. 's' → logprob: -16.250635147094727
    10. 'ées' → logprob: -16.250635147094727

Token 34: ' à' (ID: 1221)
  Prédit: ' aux'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' aux' → logprob: -0.3460358679294586
    2. ' à' → logprob: -2.096035957336426
    3. ' ' → logprob: -2.471035957336426
    4. ' sur' → logprob: -3.096035957336426
    5. 'sur' → logprob: -4.346035957336426
    6. ' au' → logprob: -4.721035957336426
    7. 'aux' → logprob: -4.846035957336426
    8. 'à' → logprob: -5.471035957336426
    9. 'au' → logprob: -6.471035957336426
    10. '  ' → logprob: -7.346035957336426

Token 35: ' la' (ID: 557)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.43195122480392456
    2. ' N' → logprob: -2.5569512844085693
    3. ' l' → logprob: -2.5569512844085693
    4. 'N' → logprob: -3.1819512844085693
    5. 'i' → logprob: -3.5569512844085693
    6. ' ' → logprob: -3.8069512844085693
    7. 'distance' → logprob: -4.30695104598999
    8. 'mi' → logprob: -4.80695104598999
    9. 'indices' → logprob: -4.93195104598999
    10. 'la' → logprob: -5.18195104598999

Token 36: ' position' (ID: 4010)
  Prédit: 'mi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mi' → logprob: -0.41117942333221436
    2. 'm' → logprob: -1.9111794233322144
    3. 'mil' → logprob: -2.036179542541504
    4. '1' → logprob: -4.286179542541504
    5. 'n' → logprob: -5.036179542541504
    6. ' mi' → logprob: -5.411179542541504
    7. 'l' → logprob: -5.411179542541504
    8. 'N' → logprob: -5.661179542541504
    9. 'mo' → logprob: -5.661179542541504
    10. 'i' → logprob: -5.786179542541504

Token 37: ' méd' (ID: 13387)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5031249523162842
    2. ' n' → logprob: -2.128124952316284
    3. '1' → logprob: -2.753124952316284
    4. 's' → logprob: -2.753124952316284
    5. '0' → logprob: -3.003124952316284
    6. 'n' → logprob: -3.378124952316284
    7. ' N' → logprob: -3.503124952316284
    8. '2' → logprob: -4.628125190734863
    9. ' len' → logprob: -4.753125190734863
    10. ' -' → logprob: -5.628125190734863

Token 38: 'iane' (ID: 39704)
  Prédit: 'iane'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iane' → logprob: -0.5654296278953552
    2. 'ian' → logprob: -1.1904296875
    3. 'iale' → logprob: -2.9404296875
    4. 'i' → logprob: -3.1904296875
    5. 'ia' → logprob: -3.6904296875
    6. '   ' → logprob: -5.3154296875
    7. '```' → logprob: -6.9404296875
    8. 'ianne' → logprob: -7.5654296875
    9. 'ium' → logprob: -8.4404296875
    10. 'inale' → logprob: -8.5654296875

Token 39: '
' (ID: 198)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8787922263145447
    2. '   ' → logprob: -1.6287922859191895
    3. ' ' → logprob: -2.1287922859191895
    4. '\' → logprob: -2.5037922859191895
    5. '\n' → logprob: -2.5037922859191895
    6. 'n' → logprob: -3.3787922859191895
    7. '```' → logprob: -4.2537922859191895
    8. ')' → logprob: -4.3787922859191895
    9. '"' → logprob: -5.2537922859191895
    10. ''' → logprob: -5.5037922859191895

Token 40: '   ' (ID: 271)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.04479571431875229
    2. ')' → logprob: -4.044795513153076
    3. ' ' → logprob: -4.419795513153076
    4. ']' → logprob: -5.294795513153076
    5. '```' → logprob: -6.544795513153076
    6. '"""' → logprob: -6.794795513153076
    7. ',' → logprob: -6.919795513153076
    8. '   ' → logprob: -7.294795513153076
    9. '"' → logprob: -7.419795513153076
    10. '.' → logprob: -7.544795513153076

Token 41: ' et' (ID: 859)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.8794093132019043
    2. '   ' → logprob: -1.5044093132019043
    3. 's' → logprob: -2.5044093132019043
    4. '"""' → logprob: -3.0044093132019043
    5. '"""
' → logprob: -3.1294093132019043
    6. ' ' → logprob: -3.3794093132019043
    7. 'n' → logprob: -3.3794093132019043
    8. ')' → logprob: -3.7544093132019043
    9. '```' → logprob: -3.7544093132019043
    10. ''' → logprob: -3.8794093132019043

Token 42: ' juste' (ID: 31553)
  Prédit: ' ceux'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ceux' → logprob: -0.4407668113708496
    2. ' la' → logprob: -1.9407668113708496
    3. ' celle' → logprob: -2.3157668113708496
    4. 's' → logprob: -3.9407668113708496
    5. 'celle' → logprob: -4.06576681137085
    6. ' celles' → logprob: -4.19076681137085
    7. ' l' → logprob: -4.44076681137085
    8. 'leur' → logprob: -4.69076681137085
    9. ' les' → logprob: -5.19076681137085
    10. 'la' → logprob: -5.31576681137085

Token 43: ' avant' (ID: 13339)
  Prédit: 'avant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'avant' → logprob: -1.0221939086914062
    2. ' après' → logprob: -1.5221939086914062
    3. 'ap' → logprob: -1.6471939086914062
    4. 'au' → logprob: -2.8971939086914062
    5. ' avant' → logprob: -3.0221939086914062
    6. 'à' → logprob: -3.1471939086914062
    7. ' à' → logprob: -3.3971939086914062
    8. ' apr' → logprob: -3.7721939086914062
    9. ' au' → logprob: -4.897193908691406
    10. ' ' → logprob: -5.272193908691406

Token 44: ' la' (ID: 557)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.9272605776786804
    2. '\' → logprob: -1.0522606372833252
    3. '
' → logprob: -1.5522606372833252
    4. ' 
' → logprob: -4.427260398864746
    5. '   ' → logprob: -4.677260398864746
    6. '```' → logprob: -5.427260398864746
    7. 'n' → logprob: -5.552260398864746
    8. '    
' → logprob: -5.677260398864746
    9. '  
' → logprob: -6.052260398864746
    10. '"""
' → logprob: -6.302260398864746

Token 45: ' méd' (ID: 13387)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.3736938536167145
    2. 'mé' → logprob: -2.1236939430236816
    3. ' ' → logprob: -2.2486939430236816
    4. ' méd' → logprob: -2.7486939430236816
    5. ' m' → logprob: -4.748693943023682
    6. ' ' → logprob: -5.873693943023682
    7. '.' → logprob: -6.123693943023682
    8. 'med' → logprob: -6.123693943023682
    9. ' médi' → logprob: -6.873693943023682
    10. ' position' → logprob: -7.123693943023682

Token 46: 'iane' (ID: 39704)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6315565705299377
    2. 'iane' → logprob: -0.8815565705299377
    3. 'ian' → logprob: -3.756556510925293
    4. 'ia' → logprob: -4.381556510925293
    5. '   ' → logprob: -5.131556510925293
    6. 'iale' → logprob: -5.131556510925293
    7. 'ianne' → logprob: -6.131556510925293
    8. 'e' → logprob: -6.631556510925293
    9. 'a' → logprob: -7.381556510925293
    10. 'і' → logprob: -8.381556510925293

Token 47: ' dans' (ID: 2671)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8918361067771912
    2. '\' → logprob: -1.516836166381836
    3. '\n' → logprob: -1.891836166381836
    4. '
' → logprob: -1.891836166381836
    5. '    
' → logprob: -3.516836166381836
    6. ' 
' → logprob: -4.766836166381836
    7. '```' → logprob: -5.141836166381836
    8. '  
' → logprob: -5.266836166381836
    9. '   
' → logprob: -5.391836166381836
    10. 'n' → logprob: -5.391836166381836

Token 48: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.09032662212848663
    2. ' le' → logprob: -3.7153265476226807
    3. 'la' → logprob: -4.09032678604126
    4. ' l' → logprob: -4.21532678604126
    5. ' ' → logprob: -4.71532678604126
    6. 'le' → logprob: -4.96532678604126
    7. 'l' → logprob: -5.09032678604126
    8. ' ' → logprob: -5.46532678604126
    9. '   ' → logprob: -6.34032678604126
    10. ' cette' → logprob: -7.34032678604126

Token 49: ' liste' (ID: 31719)
  Prédit: ' liste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.3818599283695221
    2. ' list' → logprob: -2.0068600177764893
    3. 'liste' → logprob: -2.6318600177764893
    4. ' ' → logprob: -2.8818600177764893
    5. 'l' → logprob: -4.25685977935791
    6. ' l' → logprob: -4.25685977935791
    7. ' code' → logprob: -5.38185977935791
    8. ' ' → logprob: -5.38185977935791
    9. 'list' → logprob: -5.63185977935791
    10. '   ' → logprob: -6.00685977935791

Token 50: ' tri' (ID: 12665)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\' → logprob: -0.7469736337661743
    2. '   ' → logprob: -1.3719736337661743
    3. '\n' → logprob: -1.9969736337661743
    4. 'n' → logprob: -3.1219735145568848
    5. '
' → logprob: -3.6219735145568848
    6. '    
' → logprob: -3.6219735145568848
    7. ' 
' → logprob: -4.871973514556885
    8. '_' → logprob: -4.871973514556885
    9. '"' → logprob: -5.246973514556885
    10. ' ' → logprob: -5.371973514556885

Token 51: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.0054179043509066105
    2. 'é' → logprob: -5.255417823791504
    3. 'e' → logprob: -9.880417823791504
    4. 'd' → logprob: -10.380417823791504
    5. 'ee' → logprob: -11.005417823791504
    6. 'ées' → logprob: -11.380417823791504
    7. 'v' → logprob: -11.380417823791504
    8. '</' → logprob: -11.630417823791504
    9. '�' → logprob: -11.630417823791504
    10. '```' → logprob: -12.255417823791504

Token 52: '.
' (ID: 558)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.5745097398757935
    2. '\' → logprob: -1.1995097398757935
    3. '   ' → logprob: -2.324509620666504
    4. '
' → logprob: -4.199509620666504
    5. '    
' → logprob: -4.699509620666504
    6. '```' → logprob: -5.199509620666504
    7. '"\' → logprob: -6.574509620666504
    8. '  
' → logprob: -6.949509620666504
    9. ''\' → logprob: -6.949509620666504
    10. '"' → logprob: -7.324509620666504

Token 53: '   ' (ID: 271)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.6511237025260925
    2. '   ' → logprob: -1.0261237621307373
    3. '"' → logprob: -2.9011237621307373
    4. '```' → logprob: -3.1511237621307373
    5. '"""
' → logprob: -4.276123523712158
    6. '""' → logprob: -6.026123523712158
    7. '\n' → logprob: -6.526123523712158
    8. '`' → logprob: -6.776123523712158
    9. ' """' → logprob: -7.151123523712158
    10. ' ' → logprob: -7.276123523712158

Token 54: ' """

' (ID: 28800)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.02780923992395401
    2. '   ' → logprob: -4.402809143066406
    3. '"' → logprob: -4.527809143066406
    4. '```' → logprob: -5.902809143066406
    5. '"""
' → logprob: -6.902809143066406
    6. '""' → logprob: -8.277809143066406
    7. '\n' → logprob: -8.652809143066406
    8. '`' → logprob: -9.902809143066406
    9. 'n' → logprob: -10.277809143066406
    10. ' """' → logprob: -10.402809143066406

Token 55: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09383845329284668
    2. '\n' → logprob: -3.5938384532928467
    3. 'n' → logprob: -3.7188384532928467
    4. '
' → logprob: -3.9688384532928467
    5. '```' → logprob: -4.593838691711426
    6. '    
' → logprob: -5.468838691711426
    7. '\' → logprob: -5.718838691711426
    8. 'N' → logprob: -7.718838691711426
    9. 'def' → logprob: -8.343838691711426
    10. 'newline' → logprob: -9.093838691711426

Token 56: ' #' (ID: 1069)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.2544645071029663
    2. '   ' → logprob: -2.129464626312256
    3. 'n' → logprob: -2.254464626312256
    4. ' N' → logprob: -7.379464626312256
    5. '```' → logprob: -9.629464149475098
    6. ' n' → logprob: -9.879464149475098
    7. 'import' → logprob: -10.379464149475098
    8. '#' (adapté à ' #') → logprob: -11.504464149475098
    9. ' ' → logprob: -11.504464149475098
    10. '\n' → logprob: -11.629464149475098

Token 57: ' Lecture' (ID: 106534)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.35816240310668945
    2. '   ' → logprob: -1.7331624031066895
    3. 'N' → logprob: -2.8581624031066895
    4. ' n' → logprob: -3.3581624031066895
    5. ' N' → logprob: -4.1081624031066895
    6. '#' → logprob: -4.7331624031066895
    7. ' #' → logprob: -5.4831624031066895
    8. ' ' → logprob: -6.6081624031066895
    9. ' ' → logprob: -8.483161926269531
    10. '    ' → logprob: -8.608161926269531

Token 58: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5479836463928223
    2. ' ' → logprob: -1.0479836463928223
    3. 'n' → logprob: -3.5479836463928223
    4. '_' → logprob: -3.7979836463928223
    5. '    ' → logprob: -4.547983646392822
    6. ' ' → logprob: -5.797983646392822
    7. '  ' → logprob: -6.547983646392822
    8. 's' → logprob: -6.672983646392822
    9. ' )' → logprob: -7.547983646392822
    10. 'd' → logprob: -7.922983646392822

Token 59: ' la' (ID: 557)
  Prédit: ' N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.2574336528778076
    2. ' n' → logprob: -2.0074336528778076
    3. ' la' → logprob: -2.8824336528778076
    4. ' ' → logprob: -4.007433891296387
    5. 'n' → logprob: -4.507433891296387
    6. ' le' → logprob: -6.007433891296387
    7. 'N' → logprob: -6.132433891296387
    8. ' l' → logprob: -6.882433891296387
    9. ' ' → logprob: -7.882433891296387
    10. 'l' → logprob: -8.007433891296387

Token 60: ' taille' (ID: 41644)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2404548078775406
    2. 'N' → logprob: -1.7404547929763794
    3. 'nombre' → logprob: -3.490454912185669
    4. ' N' → logprob: -5.61545467376709
    5. ' n' → logprob: -6.86545467376709
    6. 'nb' → logprob: -7.24045467376709
    7. 'input' → logprob: -7.61545467376709
    8. 'ent' → logprob: -7.86545467376709
    9. ' nombre' → logprob: -8.11545467376709
    10. '   ' → logprob: -8.11545467376709

Token 61: ' de' (ID: 334)
  Prédit: ' N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -1.175674319267273
    2. '   ' → logprob: -1.300674319267273
    3. 'n' → logprob: -1.425674319267273
    4. ' ' → logprob: -2.3006744384765625
    5. ' n' → logprob: -3.0506744384765625
    6. 'N' → logprob: -4.6756744384765625
    7. ' de' → logprob: -4.8006744384765625
    8. '    ' → logprob: -5.4256744384765625
    9. ' ' → logprob: -6.0506744384765625
    10. '_' → logprob: -6.3006744384765625

Token 62: ' la' (ID: 557)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.06541276723146439
    2. ' la' → logprob: -3.065412759780884
    3. ' l' → logprob: -4.815412998199463
    4. ' N' → logprob: -5.440412998199463
    5. 'l' → logprob: -6.315412998199463
    6. 'n' → logprob: -6.565412998199463
    7. 'N' → logprob: -7.440412998199463
    8. ' n' → logprob: -8.065412521362305
    9. 's' → logprob: -10.190412521362305
    10. ' ' → logprob: -10.940412521362305

Token 63: ' liste' (ID: 31719)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.05870337784290314
    2. ' liste' → logprob: -3.1837034225463867
    3. 'list' → logprob: -5.058703422546387
    4. 'entrée' → logprob: -5.433703422546387
    5. 'input' → logprob: -6.183703422546387
    6. ' ' → logprob: -7.683703422546387
    7. 'l' → logprob: -7.933703422546387
    8. 's' → logprob: -7.933703422546387
    9. 'lista' → logprob: -8.058703422546387
    10. 'lst' → logprob: -8.433703422546387

Token 64: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5055238008499146
    2. 'n' → logprob: -1.0055238008499146
    3. '\n' → logprob: -3.880523681640625
    4. '    
' → logprob: -5.255523681640625
    5. '
' → logprob: -6.255523681640625
    6. 'N' → logprob: -6.380523681640625
    7. ' N' → logprob: -7.505523681640625
    8. ' 
' → logprob: -8.005523681640625
    9. '\' → logprob: -9.005523681640625
    10. '```' → logprob: -9.380523681640625

Token 65: '   ' (ID: 271)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.13223356008529663
    2. '   ' → logprob: -2.1322336196899414
    3. 'N' → logprob: -5.757233619689941
    4. ' n' → logprob: -6.757233619689941
    5. ' N' → logprob: -7.757233619689941
    6. '    
' → logprob: -8.382233619689941
    7. ' 
' → logprob: -8.632233619689941
    8. ' ' → logprob: -10.007233619689941
    9. '    ' → logprob: -11.007233619689941
    10. 's' → logprob: -11.382233619689941

Token 66: ' N' (ID: 478)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.11489354074001312
    2. 'N' (adapté à ' N') → logprob: -2.9898934364318848
    3. ' n' → logprob: -3.2398934364318848
    4. ' N' → logprob: -4.114893436431885
    5. '   ' → logprob: -6.114893436431885
    6. ' 
' → logprob: -8.739893913269043
    7. '	n' → logprob: -8.989893913269043
    8. '    
' → logprob: -9.114893913269043
    9. ' ' → logprob: -9.614893913269043
    10. ' ' → logprob: -10.864893913269043

Token 67: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0019454145804047585
    2. '=' → logprob: -6.251945495605469
    3. ',' → logprob: -11.501945495605469
    4. ' ' → logprob: -12.251945495605469
    5. '=int' → logprob: -14.001945495605469
    6. ' ' → logprob: -14.751945495605469
    7. '=input' → logprob: -15.626945495605469
    8. '  ' → logprob: -16.12694549560547
    9. ' ,' → logprob: -16.25194549560547
    10. '   ' → logprob: -16.50194549560547

Token 68: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.007617745082825422
    2. 'int' → logprob: -4.882617950439453
    3. ' ' → logprob: -11.882617950439453
    4. '=int' → logprob: -13.632617950439453
    5. ' ' → logprob: -13.882617950439453
    6. ' in' → logprob: -14.007617950439453
    7. '	int' → logprob: -14.132617950439453
    8. '[int' → logprob: -15.007617950439453
    9. ' input' → logprob: -15.507617950439453
    10. '<int' → logprob: -15.632617950439453

Token 69: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.03808142989873886
    2. '(' → logprob: -3.288081407546997
    3. 'input' → logprob: -10.163081169128418
    4. ' (' → logprob: -14.163081169128418
    5. ' input' → logprob: -15.538081169128418
    6. '(
' → logprob: -15.538081169128418
    7. '=input' → logprob: -15.663081169128418
    8. '(in' → logprob: -16.788082122802734
    9. '()' → logprob: -17.038082122802734
    10. '<input' → logprob: -17.663082122802734

Token 70: '())

' (ID: 27654)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.40899181365966797
    2. '())' → logprob: -1.158991813659668
    3. '(' → logprob: -3.908991813659668
    4. ')' → logprob: -6.533991813659668
    5. '('' → logprob: -8.658991813659668
    6. '()))' → logprob: -10.283991813659668
    7. '(""))' → logprob: -10.783991813659668
    8. '(
' → logprob: -10.783991813659668
    9. '("' → logprob: -10.908991813659668
    10. '(()' → logprob: -11.158991813659668

Token 71: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4645543098449707
    2. '    
' → logprob: -2.0895543098449707
    3. '
' → logprob: -2.7145543098449707
    4. 'n' → logprob: -3.0895543098449707
    5. ' ' → logprob: -3.0895543098449707
    6. ' 
' → logprob: -4.089554309844971
    7. 's' → logprob: -4.464554309844971
    8. 'lst' → logprob: -4.839554309844971
    9. '   
' → logprob: -4.839554309844971
    10. '    ' → logprob: -4.964554309844971

Token 72: ' #' (ID: 1069)
  Prédit: 'numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'numbers' → logprob: -1.0922737121582031
    2. 'lst' → logprob: -1.2172737121582031
    3. ' numbers' → logprob: -2.592273712158203
    4. ' lst' → logprob: -2.717273712158203
    5. 'list' → logprob: -2.967273712158203
    6. 'liste' → logprob: -2.967273712158203
    7. '   ' → logprob: -3.342273712158203
    8. 'l' → logprob: -3.342273712158203
    9. '#' (adapté à ' #') → logprob: -4.592273712158203
    10. 'n' → logprob: -4.967273712158203

Token 73: ' Lecture' (ID: 106534)
  Prédit: ' lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lst' → logprob: -0.6750996708869934
    2. 'lst' → logprob: -1.1750996112823486
    3. ' numbers' → logprob: -2.6750996112823486
    4. 'numbers' → logprob: -3.1750996112823486
    5. 'L' → logprob: -4.425099849700928
    6. ' values' → logprob: -4.550099849700928
    7. 'values' → logprob: -4.925099849700928
    8. 'liste' → logprob: -4.925099849700928
    9. 'arr' → logprob: -5.300099849700928
    10. ' L' → logprob: -5.300099849700928

Token 74: ' de' (ID: 334)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.06908393651247025
    2. '(' → logprob: -3.5690839290618896
    3. ' de' → logprob: -3.8190839290618896
    4. '   ' → logprob: -4.819084167480469
    5. '    ' → logprob: -5.569084167480469
    6. ' des' → logprob: -6.694084167480469
    7. ')' → logprob: -7.069084167480469
    8. '[]' → logprob: -7.194084167480469
    9. 'de' → logprob: -8.319084167480469
    10. ' of' → logprob: -8.444084167480469

Token 75: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.009714074432849884
    2. ' ' → logprob: -5.134714126586914
    3. ' l' → logprob: -6.384714126586914
    4. '()' → logprob: -7.759714126586914
    5. '(' → logprob: -8.259714126586914
    6. ' the' → logprob: -8.509714126586914
    7. ' lst' → logprob: -8.634714126586914
    8. ' N' → logprob: -8.759714126586914
    9. 'l' → logprob: -8.884714126586914
    10. 'la' → logprob: -9.134714126586914

Token 76: ' liste' (ID: 31719)
  Prédit: ' liste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.1755107045173645
    2. 'liste' → logprob: -1.9255106449127197
    3. 'list' → logprob: -5.175510883331299
    4. ' list' → logprob: -5.175510883331299
    5. ' lst' → logprob: -6.675510883331299
    6. 'lst' → logprob: -7.175510883331299
    7. 's' → logprob: -7.300510883331299
    8. 'Liste' → logprob: -7.925510883331299
    9. ' listes' → logprob: -8.17551040649414
    10. ' Liste' → logprob: -9.30051040649414

Token 77: ' de' (ID: 334)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.9055191874504089
    2. ' lst' → logprob: -1.0305192470550537
    3. 'lst' → logprob: -2.2805192470550537
    4. '   ' → logprob: -3.9055192470550537
    5. 'data' → logprob: -4.280519008636475
    6. 'n' → logprob: -4.405519008636475
    7. ' integers' → logprob: -4.655519008636475
    8. ' L' → logprob: -4.905519008636475
    9. 'liste' → logprob: -4.905519008636475
    10. ' la' → logprob: -5.405519008636475

Token 78: ' valeurs' (ID: 73668)
  Prédit: ' lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lst' → logprob: -1.4314697980880737
    2. ' la' → logprob: -1.8064697980880737
    3. ' nombres' → logprob: -1.9314697980880737
    4. ' l' → logprob: -2.3064699172973633
    5. ' integers' → logprob: -2.5564699172973633
    6. ' ent' → logprob: -2.9314699172973633
    7. 's' → logprob: -3.3064699172973633
    8. ' numbers' → logprob: -3.5564699172973633
    9. 'n' → logprob: -3.6814699172973633
    10. ' ' → logprob: -4.056469917297363

Token 79: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1731541156768799
    2. 's' → logprob: -1.2981541156768799
    3. 'values' → logprob: -1.5481541156768799
    4. 'n' → logprob: -2.79815411567688
    5. ' values' → logprob: -3.67315411567688
    6. '    
' → logprob: -3.92315411567688
    7. ' lst' → logprob: -4.173153877258301
    8. 'a' → logprob: -4.423153877258301
    9. 'val' → logprob: -4.548153877258301
    10. 'lst' → logprob: -4.798153877258301

Token 80: ' convert' (ID: 8452)
  Prédit: ' lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lst' → logprob: -0.5300766229629517
    2. ' values' → logprob: -2.030076503753662
    3. 'values' → logprob: -3.030076503753662
    4. ' vals' → logprob: -3.030076503753662
    5. ' val' → logprob: -3.280076503753662
    6. ' data' → logprob: -3.280076503753662
    7. 'val' → logprob: -3.405076503753662
    8. 'lst' → logprob: -4.155076503753662
    9. 'vals' → logprob: -4.405076503753662
    10. ' valeurs' → logprob: -4.405076503753662

Token 81: 'ie' (ID: 396)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.5403833389282227
    2. 'i' → logprob: -1.4153833389282227
    3. 'ies' → logprob: -2.5403833389282227
    4. 'ie' → logprob: -3.0403833389282227
    5. '=' → logprob: -4.290383338928223
    6. 'issant' → logprob: -4.415383338928223
    7. 'list' → logprob: -5.040383338928223
    8. '   ' → logprob: -6.290383338928223
    9. ' =' → logprob: -6.415383338928223
    10. 'isseur' → logprob: -6.415383338928223

Token 82: ' en' (ID: 469)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8594358563423157
    2. '()' → logprob: -0.8594358563423157
    3. ' en' → logprob: -1.984435796737671
    4. '_list' → logprob: -5.98443603515625
    5. '[' → logprob: -6.48443603515625
    6. ' =' → logprob: -6.98443603515625
    7. '=' → logprob: -6.98443603515625
    8. '_' → logprob: -7.10943603515625
    9. ' ' → logprob: -7.23443603515625
    10. 'en' → logprob: -7.35943603515625

Token 83: ' ent' (ID: 1121)
  Prédit: ' liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.8379206657409668
    2. ' list' → logprob: -1.2129206657409668
    3. 'list' → logprob: -1.7129206657409668
    4. 'liste' → logprob: -3.087920665740967
    5. ' a' → logprob: -4.712920665740967
    6. '[' → logprob: -4.837920665740967
    7. ' lst' → logprob: -5.587920665740967
    8. ' integers' → logprob: -5.962920665740967
    9. ' une' → logprob: -5.962920665740967
    10. ' ' → logprob: -6.212920665740967

Token 84: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.04848969727754593
    2. '   ' → logprob: -3.923489809036255
    3. 'ières' → logprob: -5.048489570617676
    4. 'ier' → logprob: -5.298489570617676
    5. 'i' → logprob: -5.673489570617676
    6. 't' → logprob: -6.298489570617676
    7. 'e' → logprob: -6.298489570617676
    8. 'er' → logprob: -6.798489570617676
    9. 'ti' → logprob: -6.923489570617676
    10. 'ière' → logprob: -6.923489570617676

Token 85: '
' (ID: 198)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8108000755310059
    2. '   ' → logprob: -1.9358000755310059
    3. 'values' → logprob: -2.435800075531006
    4. '    
' → logprob: -2.810800075531006
    5. 'n' → logprob: -2.935800075531006
    6. 'lst' → logprob: -3.060800075531006
    7. ' lst' → logprob: -3.560800075531006
    8. '    ' → logprob: -4.185800075531006
    9. '     
' → logprob: -4.435800075531006
    10. 'l' → logprob: -4.435800075531006

Token 86: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16177688539028168
    2. ' lst' → logprob: -3.2867767810821533
    3. 'values' → logprob: -3.7867767810821533
    4. 'lst' → logprob: -4.036777019500732
    5. 's' → logprob: -4.161777019500732
    6. 'val' → logprob: -4.661777019500732
    7. 'l' → logprob: -4.911777019500732
    8. 'liste' → logprob: -5.161777019500732
    9. ' values' → logprob: -5.286777019500732
    10. 'n' → logprob: -5.411777019500732

Token 87: ' d' (ID: 272)
  Prédit: ' lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lst' → logprob: -1.1334120035171509
    2. ' values' → logprob: -1.5084120035171509
    3. 'values' → logprob: -1.8834120035171509
    4. 'lst' → logprob: -2.2584118843078613
    5. ' numbers' → logprob: -3.1334118843078613
    6. ' L' → logprob: -3.7584118843078613
    7. 'numbers' → logprob: -3.7584118843078613
    8. ' valeurs' → logprob: -3.7584118843078613
    9. 'val' → logprob: -4.008411884307861
    10. 'l' → logprob: -4.258411884307861

Token 88: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7254469990730286
    2. 'ata' → logprob: -1.2254469394683838
    3. '=' → logprob: -2.350446939468384
    4. 'e' → logprob: -2.350446939468384
    5. 'a' → logprob: -5.100447177886963
    6. ' ' → logprob: -5.100447177886963
    7. 'onnées' → logprob: -5.725447177886963
    8. 'i' → logprob: -5.850447177886963
    9. 'atas' → logprob: -5.975447177886963
    10. 'onne' → logprob: -6.225447177886963

Token 89: ' [' (ID: 723)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.023616725578904152
    2. 'list' → logprob: -3.7736167907714844
    3. ' [' → logprob: -8.023616790771484
    4. ' liste' → logprob: -11.148616790771484
    5. ' ' → logprob: -11.773616790771484
    6. '[' → logprob: -11.898616790771484
    7. '[list' → logprob: -12.273616790771484
    8. ' input' → logprob: -13.398616790771484
    9. ' []' → logprob: -13.398616790771484
    10. ' li' → logprob: -13.773616790771484

Token 90: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0007111206650733948
    2. ' int' → logprob: -7.250710964202881
    3. '   ' → logprob: -15.000711441040039
    4. ' ' → logprob: -15.125711441040039
    5. '  ' → logprob: -15.500711441040039
    6. '<int' → logprob: -16.62571144104004
    7. '	int' → logprob: -16.75071144104004
    8. ']int' → logprob: -16.87571144104004
    9. '```' → logprob: -17.00071144104004
    10. '(int' → logprob: -17.37571144104004

Token 91: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.17481224238872528
    2. '(input' → logprob: -1.9248121976852417
    3. '(x' → logprob: -4.299812316894531
    4. '(i' → logprob: -7.924812316894531
    5. '(s' → logprob: -8.299812316894531
    6. '()' → logprob: -9.299812316894531
    7. ' (' → logprob: -9.674812316894531
    8. '(
' → logprob: -9.799812316894531
    9. '(

' → logprob: -11.049812316894531
    10. '()]' → logprob: -11.424812316894531

Token 92: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004820313479285687
    2. 'input' → logprob: -9.125481605529785
    3. '(input' → logprob: -9.250481605529785
    4. '()' → logprob: -9.375481605529785
    5. '())' → logprob: -9.375481605529785
    6. ' )' → logprob: -9.875481605529785
    7. 'for' → logprob: -10.375481605529785
    8. ' for' → logprob: -10.875481605529785
    9. '   ' → logprob: -13.750481605529785
    10. '(' → logprob: -14.000481605529785

Token 93: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4461834728717804
    2. 'for' → logprob: -1.321183443069458
    3. ')' → logprob: -2.446183443069458
    4. '(input' → logprob: -5.946183681488037
    5. 'input' → logprob: -6.696183681488037
    6. '(' → logprob: -6.821183681488037
    7. '()' → logprob: -7.321183681488037
    8. ' )' → logprob: -8.446183204650879
    9. ' ' → logprob: -8.696183204650879
    10. ']' → logprob: -8.821183204650879

Token 94: ' x' (ID: 1215)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.007809731177985668
    2. 'input' → logprob: -4.882809638977051
    3. ' ' → logprob: -8.63280963897705
    4. ' in' → logprob: -12.25780963897705
    5. '<|end|>' → logprob: -12.25780963897705
    6. '  ' → logprob: -12.75780963897705
    7. '<|end|>' → logprob: -13.00780963897705
    8. '=input' → logprob: -13.00780963897705
    9. ' x' → logprob: -13.38280963897705
    10. '(input' → logprob: -13.50780963897705

Token 95: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.022885404527187347
    2. ' ' → logprob: -4.147885322570801
    3. 'in' → logprob: -5.647885322570801
    4. ' input' → logprob: -6.022885322570801
    5. 'input' → logprob: -7.397885322570801
    6. '  ' → logprob: -9.3978853225708
    7. ' x' → logprob: -10.2728853225708
    8. '=input' → logprob: -10.3978853225708
    9. '<|end|>' → logprob: -10.7728853225708
    10. 's' → logprob: -11.1478853225708

Token 96: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.38687703013420105
    2. 'input' → logprob: -1.1368770599365234
    3. '(input' → logprob: -12.386877059936523
    4. ' ' → logprob: -13.761877059936523
    5. '=input' → logprob: -14.886877059936523
    6. '	input' → logprob: -15.636877059936523
    7. '<input' → logprob: -15.886877059936523
    8. ',input' → logprob: -16.886877059936523
    9. '[input' → logprob: -17.386877059936523
    10. ' range' → logprob: -17.511877059936523

Token 97: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0010476969182491302
    2. '()' → logprob: -6.876047611236572
    3. '()]' → logprob: -11.37604808807373
    4. ' ().' → logprob: -13.12604808807373
    5. '(' → logprob: -14.25104808807373
    6. '())' → logprob: -15.12604808807373
    7. '()].' → logprob: -15.62604808807373
    8. ' ()' → logprob: -15.75104808807373
    9. 'split' → logprob: -16.376047134399414
    10. '()
' → logprob: -16.876047134399414

Token 98: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0009181279456242919
    2. 'strip' → logprob: -7.000917911529541
    3. 'rstrip' → logprob: -12.0009183883667
    4. ' split' → logprob: -15.0009183883667
    5. 'spl' → logprob: -16.125917434692383
    6. '(split' → logprob: -17.500917434692383
    7. 's' → logprob: -20.500917434692383
    8. '.split' → logprob: -21.250917434692383
    9. 'replace' → logprob: -21.750917434692383
    10. 'plit' → logprob: -21.750917434692383

Token 99: '()' (ID: 416)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.008836151100695133
    2. '()' → logprob: -5.508836269378662
    3. '())' → logprob: -5.508836269378662
    4. ')]' → logprob: -7.883836269378662
    5. '(' → logprob: -8.383835792541504
    6. ']' → logprob: -9.383835792541504
    7. '('' → logprob: -13.258835792541504
    8. '()]
' → logprob: -13.508835792541504
    9. ')' → logprob: -14.133835792541504
    10. '')]' → logprob: -14.633835792541504

Token 100: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0427575446665287
    2. ')]' → logprob: -3.292757511138916
    3. '()]' → logprob: -5.542757511138916
    4. ' ]' → logprob: -7.542757511138916
    5. '])' → logprob: -8.667757987976074
    6. ')' → logprob: -9.417757987976074
    7. '()' → logprob: -13.667757987976074
    8. '   ' → logprob: -14.042757987976074
    9. '`]' → logprob: -14.042757987976074
    10. ' ])' → logprob: -14.667757987976074

Token 101: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.24023844301700592
    2. '   ' → logprob: -1.8652384281158447
    3. '    
' → logprob: -2.9902384281158447
    4. '  
' → logprob: -5.615238666534424
    5. ' 
' → logprob: -6.490238666534424
    6. '<|end|>' → logprob: -7.240238666534424
    7. 'd' → logprob: -7.365238666534424
    8. '\n' → logprob: -7.990238666534424
    9. '   
' → logprob: -7.990238666534424
    10. '

' → logprob: -8.365238189697266

Token 102: ' #' (ID: 1069)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0036803598050028086
    2. '   ' → logprob: -6.128680229187012
    3. '#' (adapté à ' #') → logprob: -7.753680229187012
    4. '
' → logprob: -7.878680229187012
    5. 'if' → logprob: -8.253680229187012
    6. '    
' → logprob: -8.503680229187012
    7. ' d' → logprob: -9.128680229187012
    8. 'sorted' → logprob: -10.378680229187012
    9. 'assert' → logprob: -10.503680229187012
    10. 'n' → logprob: -11.753680229187012

Token 103: ' Trie' (ID: 131955)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.016213255003094673
    2. ' d' → logprob: -4.141213417053223
    3. '#' → logprob: -9.516213417053223
    4. 'if' → logprob: -10.266213417053223
    5. 'assert' → logprob: -10.516213417053223
    6. 'sorted' → logprob: -11.016213417053223
    7. ' if' → logprob: -11.516213417053223
    8. 'import' → logprob: -13.141213417053223
    9. ' sorted' → logprob: -13.266213417053223
    10. 'n' → logprob: -13.641213417053223

Token 104: ' la' (ID: 557)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.23568423092365265
    2. 'd' → logprob: -1.8606842756271362
    3. '(' → logprob: -3.2356841564178467
    4. ' d' → logprob: -4.360684394836426
    5. '(d' → logprob: -6.485684394836426
    6. 's' → logprob: -8.360684394836426
    7. ' la' → logprob: -8.860684394836426
    8. ' ()' → logprob: -9.360684394836426
    9. ' de' → logprob: -9.860684394836426
    10. 'r' → logprob: -9.860684394836426

Token 105: ' liste' (ID: 31719)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.8537492752075195
    2. ' liste' → logprob: -1.1037492752075195
    3. 'd' → logprob: -1.8537492752075195
    4. ' d' → logprob: -2.4787492752075195
    5. 'list' → logprob: -7.1037492752075195
    6. ' ' → logprob: -7.2287492752075195
    7. ' list' → logprob: -8.85374927520752
    8. 's' → logprob: -9.35374927520752
    9. 'l' → logprob: -9.60374927520752
    10. 'lst' → logprob: -10.10374927520752

Token 106: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.23108288645744324
    2. '   ' → logprob: -1.6060829162597656
    3. ' d' → logprob: -5.231082916259766
    4. '    
' → logprob: -8.981082916259766
    5. '.' → logprob: -9.606082916259766
    6. '
' → logprob: -10.356082916259766
    7. 's' → logprob: -11.106082916259766
    8. '	d' → logprob: -11.231082916259766
    9. '  ' → logprob: -11.356082916259766
    10. ' ' → logprob: -11.731082916259766

Token 107: ''ent' (ID: 53422)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.014919879846274853
    2. ')' → logprob: -5.139919757843018
    3. '(' → logprob: -5.389919757843018
    4. '.' → logprob: -6.389919757843018
    5. '.sort' → logprob: -6.639919757843018
    6. 'e' → logprob: -7.514919757843018
    7. 'es' → logprob: -8.889920234680176
    8. 'd' → logprob: -9.264920234680176
    9. '().' → logprob: -9.389920234680176
    10. 's' → logprob: -9.514920234680176

Token 108: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.6493061780929565
    2. 'ière' → logprob: -1.2743061780929565
    3. 'ier' → logprob: -3.399306297302246
    4. 'ières' → logprob: -3.399306297302246
    5. 'sort' → logprob: -3.774306297302246
    6. 'er' → logprob: -3.774306297302246
    7. 'd' → logprob: -3.774306297302246
    8. 'iere' → logprob: -4.649306297302246
    9. 'rée' → logprob: -4.649306297302246
    10. 'sorted' → logprob: -5.024306297302246

Token 109: ' en' (ID: 469)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.08001835644245148
    2. '   ' → logprob: -2.7050182819366455
    3. '.' → logprob: -5.580018520355225
    4. ' d' → logprob: -5.580018520355225
    5. '.sort' → logprob: -6.330018520355225
    6. '.
' → logprob: -8.705018043518066
    7. ' ' → logprob: -8.955018043518066
    8. 's' → logprob: -9.080018043518066
    9. '.d' → logprob: -9.955018043518066
    10. '
' → logprob: -10.080018043518066

Token 110: ' ordre' (ID: 103061)
  Prédit: ' place'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' place' → logprob: -0.06855712831020355
    2. 'place' → logprob: -2.818557024002075
    3. '-place' → logprob: -5.568557262420654
    4. ' d' → logprob: -7.068557262420654
    5. ' ascending' → logprob: -7.318557262420654
    6. 'd' → logprob: -7.818557262420654
    7. '_place' → logprob: -8.568556785583496
    8. ' ' → logprob: -8.943556785583496
    9. '   ' → logprob: -8.943556785583496
    10. 'l' → logprob: -10.068556785583496

Token 111: ' cro' (ID: 11270)
  Prédit: ' cro'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cro' → logprob: -0.3252581059932709
    2. 'cro' → logprob: -1.3252581357955933
    3. ' ' → logprob: -4.575258255004883
    4. '   ' → logprob: -7.575258255004883
    5. '  ' → logprob: -8.950258255004883
    6. ' crescente' → logprob: -9.075258255004883
    7. ' ascending' → logprob: -9.450258255004883
    8. ' Cro' → logprob: -9.450258255004883
    9. ' crec' → logprob: -9.575258255004883
    10. '_' → logprob: -9.575258255004883

Token 112: 'issant' (ID: 31359)
  Prédit: 'issant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'issant' → logprob: -0.16528506577014923
    2. 'issante' → logprob: -1.9152851104736328
    3. 'issance' → logprob: -6.040285110473633
    4. 'issement' → logprob: -7.165285110473633
    5. 'iss' → logprob: -7.290285110473633
    6. 'issent' → logprob: -7.790285110473633
    7. 'ss' → logprob: -8.040285110473633
    8. 'i' → logprob: -8.415285110473633
    9. 'issants' → logprob: -9.790285110473633
    10. 'is' → logprob: -10.415285110473633

Token 113: '
' (ID: 198)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.09772548079490662
    2. '   ' → logprob: -2.5977253913879395
    3. ' d' → logprob: -4.3477253913879395
    4. '
' → logprob: -5.3477253913879395
    5. '    
' → logprob: -7.5977253913879395
    6. ' ' → logprob: -9.222725868225098
    7. '  
' → logprob: -9.472725868225098
    8. 's' → logprob: -9.722725868225098
    9. '	d' → logprob: -9.847725868225098
    10. ' 
' → logprob: -10.222725868225098

Token 114: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5242072939872742
    2. 'd' → logprob: -1.024207353591919
    3. ' d' → logprob: -3.024207353591919
    4. '    
' → logprob: -8.52420711517334
    5. ' ' → logprob: -10.77420711517334
    6. '	d' → logprob: -11.02420711517334
    7. '  ' → logprob: -11.02420711517334
    8. '
' → logprob: -11.27420711517334
    9. 's' → logprob: -11.89920711517334
    10. '   
' → logprob: -12.14920711517334

Token 115: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.25296562910079956
    2. 'd' (adapté à ' d') → logprob: -1.5029656887054443
    3. '   ' → logprob: -6.877965450286865
    4. ' ' → logprob: -12.627965927124023
    5. '	d' → logprob: -13.877965927124023
    6. '  ' → logprob: -14.252965927124023
    7. ' 
' → logprob: -15.127965927124023
    8. ' ' → logprob: -15.252965927124023
    9. '    ' → logprob: -16.002965927124023
    10. '    
' → logprob: -16.252965927124023

Token 116: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.313268780708313
    2. '.' → logprob: -1.313268780708313
    3. ' .' → logprob: -12.438268661499023
    4. 'sort' → logprob: -13.688268661499023
    5. '.s' → logprob: -14.063268661499023
    6. '.Sort' → logprob: -14.938268661499023
    7. ' sort' → logprob: -15.188268661499023
    8. '.sorted' → logprob: -15.188268661499023
    9. '.
' → logprob: -17.313268661499023
    10. '.append' → logprob: -17.688268661499023

Token 117: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -5.676981345459353e-06
    2. '()
' → logprob: -12.625005722045898
    3. '(' → logprob: -13.750005722045898
    4. '()`' → logprob: -14.375005722045898
    5. '()

' → logprob: -15.000005722045898
    6. '()]' → logprob: -16.1250057220459
    7. ' ()' → logprob: -16.5000057220459
    8. '()\' → logprob: -17.2500057220459
    9. '())' → logprob: -18.0000057220459
    10. '();' → logprob: -18.0000057220459

Token 118: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5313776135444641
    2. '
' → logprob: -1.1563775539398193
    3. '    
' → logprob: -2.9063775539398193
    4. 'm' → logprob: -3.7813775539398193
    5. 'n' → logprob: -4.531377792358398
    6. ' 
' → logprob: -6.406377792358398
    7. 'median' → logprob: -6.531377792358398
    8. '  
' → logprob: -6.781377792358398
    9. '\n' → logprob: -7.031377792358398
    10. '

' → logprob: -7.281377792358398

Token 119: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2368442863225937
    2. 'm' → logprob: -1.7368443012237549
    3. 'diff' → logprob: -4.361844062805176
    4. 'if' → logprob: -5.236844062805176
    5. 'median' → logprob: -5.236844062805176
    6. 'med' → logprob: -5.361844062805176
    7. '   ' → logprob: -5.736844062805176
    8. 'mid' → logprob: -6.611844062805176
    9. '#' (adapté à ' #') → logprob: -7.111844062805176
    10. 'i' → logprob: -8.236844062805176

Token 120: ' Cal' (ID: 4453)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.9196351170539856
    2. 'mid' → logprob: -1.7946350574493408
    3. 'median' → logprob: -1.7946350574493408
    4. '#' → logprob: -2.419635057449341
    5. 'med' → logprob: -3.169635057449341
    6. 'diff' → logprob: -3.169635057449341
    7. 'print' → logprob: -3.294635057449341
    8. 'if' → logprob: -4.16963529586792
    9. ' mid' → logprob: -4.79463529586792
    10. 'i' → logprob: -5.16963529586792

Token 121: 'cule' (ID: 45017)
  Prédit: 'cul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cul' → logprob: -0.317068874835968
    2. 'cule' → logprob: -1.3170688152313232
    3. 'c' → logprob: -6.442069053649902
    4. 'culate' → logprob: -6.567069053649902
    5. '#' → logprob: -8.817069053649902
    6. ' cul' → logprob: -9.192069053649902
    7. '```' → logprob: -9.192069053649902
    8. '
' → logprob: -9.317069053649902
    9. '

' → logprob: -9.442069053649902
    10. '   ' → logprob: -9.817069053649902

Token 122: ' l' (ID: 305)
  Prédit: ' m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' m' → logprob: -1.3177597522735596
    2. ' la' → logprob: -1.3177597522735596
    3. 'm' → logprob: -1.6927597522735596
    4. '   ' → logprob: -2.8177597522735596
    5. ' mid' → logprob: -2.8177597522735596
    6. 'mid' → logprob: -3.4427597522735596
    7. ' median' → logprob: -3.9427597522735596
    8. ' i' → logprob: -4.3177595138549805
    9. ' n' → logprob: -4.4427595138549805
    10. 'i' → logprob: -4.5677595138549805

Token 123: ''ind' (ID: 82245)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.005799504928290844
    2. ''éc' → logprob: -5.880799293518066
    3. 'e' → logprob: -6.380799293518066
    4. ' a' → logprob: -7.880799293518066
    5. '   ' → logprob: -7.880799293518066
    6. ''a' → logprob: -8.880799293518066
    7. ''' → logprob: -9.130799293518066
    8. ''espace' → logprob: -9.630799293518066
    9. ''ind' → logprob: -9.880799293518066
    10. ''é' → logprob: -10.255799293518066

Token 124: 'ice' (ID: 603)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.5991548895835876
    2. 'ice' → logprob: -1.5991549491882324
    3. 'e' → logprob: -1.9741549491882324
    4. 'é' → logprob: -2.9741549491882324
    5. 'éc' → logprob: -3.7241549491882324
    6. '   ' → logprob: -3.8491549491882324
    7. 'i' → logprob: -5.474154949188232
    8. '#' → logprob: -6.724154949188232
    9. ' ' → logprob: -6.724154949188232
    10. 'ec' → logprob: -6.849154949188232

Token 125: ' de' (ID: 334)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5558266043663025
    2. ' méd' → logprob: -1.6808266639709473
    3. '_m' → logprob: -2.3058266639709473
    4. ' _' → logprob: -3.3058266639709473
    5. ' m' → logprob: -3.4308266639709473
    6. ' ' → logprob: -3.5558266639709473
    7. 'm' → logprob: -4.055826663970947
    8. ' median' → logprob: -4.555826663970947
    9. ' de' → logprob: -4.930826663970947
    10. ' ' → logprob: -6.305826663970947

Token 126: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.14459319412708282
    2. 'la' → logprob: -2.6445932388305664
    3. 'm' → logprob: -3.3945932388305664
    4. ' m' → logprob: -4.894593238830566
    5. ' N' → logprob: -5.769593238830566
    6. 'l' → logprob: -5.769593238830566
    7. 'median' → logprob: -5.894593238830566
    8. 'med' → logprob: -6.019593238830566
    9. ' median' → logprob: -6.144593238830566
    10. ' méd' → logprob: -6.394593238830566

Token 127: ' méd' (ID: 13387)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.05320842191576958
    2. 'mil' → logprob: -3.928208351135254
    3. ' méd' → logprob: -4.053208351135254
    4. 'mé' → logprob: -4.678208351135254
    5. 'mi' → logprob: -6.428208351135254
    6. 'median' → logprob: -7.053208351135254
    7. ' moitié' → logprob: -7.428208351135254
    8. 'med' → logprob: -7.553208351135254
    9. 'mo' → logprob: -8.053208351135254
    10. ' milieu' → logprob: -8.178208351135254

Token 128: 'iane' (ID: 39704)
  Prédit: 'iane'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iane' → logprob: -0.003117702901363373
    2. 'i' → logprob: -6.128117561340332
    3. 'ian' → logprob: -7.753117561340332
    4. 'ianne' → logprob: -8.128117561340332
    5. '   ' → logprob: -9.128117561340332
    6. 'iana' → logprob: -10.378117561340332
    7. 'ia' → logprob: -11.753117561340332
    8. '```' → logprob: -12.003117561340332
    9. 'a' → logprob: -12.128117561340332
    10. 'aine' → logprob: -12.253117561340332

Token 129: ' (' (ID: 350)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.3869422674179077
    2. 'mid' → logprob: -2.6369423866271973
    3. ' mid' → logprob: -2.7619423866271973
    4. ' m' → logprob: -2.7619423866271973
    5. 'median' → logprob: -3.0119423866271973
    6. ' median' → logprob: -3.7619423866271973
    7. ' 
' → logprob: -4.261942386627197
    8. 'med' → logprob: -4.761942386627197
    9. '   ' → logprob: -4.886942386627197
    10. ' i' → logprob: -5.511942386627197

Token 130: 'part' (ID: 5815)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.10524716228246689
    2. ' N' → logprob: -2.3552472591400146
    3. '(N' → logprob: -5.4802470207214355
    4. ' (' → logprob: -7.3552470207214355
    5. '   ' → logprob: -9.480247497558594
    6. 'len' → logprob: -10.105247497558594
    7. '(' → logprob: -10.230247497558594
    8. 'n' → logprob: -10.980247497558594
    9. 'm' → logprob: -11.480247497558594
    10. ' len' → logprob: -11.855247497558594

Token 131: 'ie' (ID: 396)
  Prédit: 'ie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ie' → logprob: -0.012805924750864506
    2. 'i' → logprob: -5.137805938720703
    3. 'iel' → logprob: -6.887805938720703
    4. '-' → logprob: -7.262805938720703
    5. ' =' → logprob: -7.262805938720703
    6. '   ' → logprob: -7.262805938720703
    7. '1' → logprob: -7.512805938720703
    8. 'ielle' → logprob: -7.762805938720703
    9. 'icipant' → logprob: -7.762805938720703
    10. '=' → logprob: -8.512805938720703

Token 132: ' entière' (ID: 61583)
  Prédit: ' entière'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' entière' → logprob: -0.5481888651847839
    2. '   ' → logprob: -1.7981889247894287
    3. 'ent' → logprob: -3.2981889247894287
    4. ' N' → logprob: -3.5481889247894287
    5. ' méd' → logprob: -3.5481889247894287
    6. '(N' → logprob: -3.5481889247894287
    7. ' ' → logprob: -3.9231889247894287
    8. 'int' → logprob: -4.29818868637085
    9. 'n' → logprob: -4.67318868637085
    10. 'd' → logprob: -4.79818868637085

Token 133: ' de' (ID: 334)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.0388532876968384
    2. ')' → logprob: -1.7888532876968384
    3. ' //' → logprob: -1.7888532876968384
    4. '   ' → logprob: -2.288853168487549
    5. ' N' → logprob: -2.413853168487549
    6. ' d' → logprob: -3.038853168487549
    7. 'N' → logprob: -3.663853168487549
    8. '//' → logprob: -3.788853168487549
    9. '(N' → logprob: -4.663853168487549
    10. ' ' → logprob: -5.538853168487549

Token 134: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.33129510283470154
    2. ' N' → logprob: -1.331295132637024
    3. '(N' → logprob: -4.831295013427734
    4. ' (' → logprob: -4.956295013427734
    5. 'len' → logprob: -6.706295013427734
    6. '(len' → logprob: -7.206295013427734
    7. ' len' → logprob: -7.331295013427734
    8. '   ' → logprob: -9.456295013427734
    9. '(' → logprob: -9.581295013427734
    10. ' ' → logprob: -9.831295013427734

Token 135: '/' (ID: 14)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.8692243099212646
    2. ' //' → logprob: -0.9942243099212646
    3. '/' → logprob: -1.6192243099212646
    4. ' /' → logprob: -4.869224548339844
    5. ' ' → logprob: -5.744224548339844
    6. '   ' → logprob: -7.744224548339844
    7. ' ' → logprob: -7.869224548339844
    8. '2' → logprob: -7.869224548339844
    9. '-' → logprob: -8.619224548339844
    10. '1' → logprob: -8.744224548339844

Token 136: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0028071331325918436
    2. ' ' → logprob: -5.877807140350342
    3. '   ' → logprob: -14.502806663513184
    4. '
' → logprob: -14.627806663513184
    5. '```' → logprob: -15.002806663513184
    6. ' ' → logprob: -15.377806663513184
    7. ')' → logprob: -15.377806663513184
    8. '  ' → logprob: -15.502806663513184
    9. '۲' → logprob: -15.877806663513184
    10. '3' → logprob: -16.8778076171875

Token 137: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0031014233827590942
    2. ' )' → logprob: -5.878101348876953
    3. ')
' → logprob: -8.628101348876953
    4. '   ' → logprob: -9.878101348876953
    5. ' ' → logprob: -11.003101348876953
    6. '-' → logprob: -11.503101348876953
    7. '#' → logprob: -12.128101348876953
    8. ' ' → logprob: -12.378101348876953
    9. ' -' → logprob: -12.503101348876953
    10. ' )
' → logprob: -12.628101348876953

Token 138: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5011455416679382
    2. ' m' → logprob: -2.126145601272583
    3. ' med' → logprob: -2.501145601272583
    4. ' median' → logprob: -2.876145601272583
    5. '
' → logprob: -3.126145601272583
    6. '    
' → logprob: -3.626145601272583
    7. 'm' → logprob: -3.751145601272583
    8. ' 
' → logprob: -4.001145362854004
    9. ' mid' → logprob: -4.876145362854004
    10. 'median' → logprob: -5.501145362854004

Token 139: ' h' (ID: 312)
  Prédit: ' m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.5186769366264343
    2. ' mid' → logprob: -2.018676996231079
    3. ' median' → logprob: -2.143676996231079
    4. 'm' → logprob: -2.268676996231079
    5. 'mid' → logprob: -4.0186767578125
    6. 'median' → logprob: -4.2686767578125
    7. ' med' → logprob: -4.6436767578125
    8. '   ' → logprob: -5.0186767578125
    9. 'med' → logprob: -7.0186767578125
    10. ' i' → logprob: -7.5186767578125

Token 140: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.015147324651479721
    2. '=' → logprob: -4.5151472091674805
    3. ' ' → logprob: -6.5151472091674805
    4. '_' → logprob: -6.5151472091674805
    5. 'alf' → logprob: -7.5151472091674805
    6. 'N' → logprob: -8.89014720916748
    7. '   ' → logprob: -9.26514720916748
    8. 'e' → logprob: -9.89014720916748
    9. '_index' → logprob: -9.89014720916748
    10. 'a' → logprob: -9.89014720916748

Token 141: ' N' (ID: 478)
  Prédit: ' N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.03370160236954689
    2. 'N' → logprob: -3.4087016582489014
    3. ' ' → logprob: -10.15870189666748
    4. '   ' → logprob: -11.15870189666748
    5. '	N' → logprob: -13.65870189666748
    6. '  ' → logprob: -14.15870189666748
    7. ' ' → logprob: -14.90870189666748
    8. ' (' → logprob: -15.15870189666748
    9. '    ' → logprob: -15.40870189666748
    10. ' int' → logprob: -16.783700942993164

Token 142: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.38691678643226624
    2. '//' → logprob: -1.1369167566299438
    3. ' ' → logprob: -10.886917114257812
    4. '   ' → logprob: -10.886917114257812
    5. ' ' → logprob: -12.511917114257812
    6. '#' → logprob: -13.011917114257812
    7. '2' → logprob: -14.386917114257812
    8. '	' → logprob: -14.761917114257812
    9. '```' → logprob: -15.136917114257812
    10. '  ' → logprob: -15.261917114257812

Token 143: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.505351095460355e-05
    2. ' ' → logprob: -9.500075340270996
    3. '   ' → logprob: -16.75007438659668
    4. '  ' → logprob: -18.37507438659668
    5. '
' → logprob: -18.87507438659668
    6. '```' → logprob: -18.87507438659668
    7. '۲' → logprob: -19.00007438659668
    8. '２' → logprob: -19.37507438659668
    9. '२' → logprob: -21.37507438659668
    10. '₂' → logprob: -21.50007438659668

Token 144: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.8889261304575484e-06
    2. ' ' → logprob: -12.500003814697266
    3. '   ' → logprob: -16.375003814697266
    4. '```' → logprob: -17.500003814697266
    5. '  ' → logprob: -18.500003814697266
    6. '
' → logprob: -18.750003814697266
    7. '۲' → logprob: -19.125003814697266
    8. '２' → logprob: -19.625003814697266
    9. '२' → logprob: -20.625003814697266
    10. '٢' → logprob: -21.375003814697266

Token 145: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.12419616430997849
    2. 'print' → logprob: -2.2491960525512695
    3. '   ' → logprob: -5.2491960525512695
    4. 'diff' → logprob: -6.3741960525512695
    5. '    
' → logprob: -6.4991960525512695
    6. '

' → logprob: -6.8741960525512695
    7. ' print' → logprob: -7.3741960525512695
    8. ' 
' → logprob: -8.49919605255127
    9. '  
' → logprob: -8.62419605255127
    10. '-' → logprob: -8.62419605255127

Token 146: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.4024035632610321
    2. '   ' → logprob: -1.1524035930633545
    3. '
' → logprob: -4.527403354644775
    4. '    
' → logprob: -5.777403354644775
    5. ' print' → logprob: -6.902403354644775
    6. '  
' → logprob: -9.277403831481934
    7. 'diff' → logprob: -9.402403831481934
    8. '```' → logprob: -9.652403831481934
    9. 'result' → logprob: -10.402403831481934
    10. ' 
' → logprob: -10.402403831481934

Token 147: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.8908587662735954e-05
    2. 'diff' → logprob: -11.875019073486328
    3. 'result' → logprob: -11.875019073486328
    4. '#' (adapté à ' #') → logprob: -12.750019073486328
    5. ' print' → logprob: -14.375019073486328
    6. '   ' → logprob: -15.000019073486328
    7. 'pr' → logprob: -15.000019073486328
    8. 'prin' → logprob: -15.250019073486328
    9. '#print' → logprob: -15.500019073486328
    10. 'p' → logprob: -16.000019073486328

Token 148: ' Aff' (ID: 13741)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0007916436879895627
    2. 'diff' → logprob: -7.625791549682617
    3. '#' → logprob: -8.375791549682617
    4. 'result' → logprob: -10.125791549682617
    5. ' print' → logprob: -10.875791549682617
    6. 'if' → logprob: -12.625791549682617
    7. '   ' → logprob: -12.875791549682617
    8. 'res' → logprob: -13.125791549682617
    9. 'difference' → logprob: -13.500791549682617
    10. '#print' → logprob: -13.625791549682617

Token 149: 'iche' (ID: 7509)
  Prédit: 'iche'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iche' → logprob: -0.0003944496565964073
    2. 'ic' → logprob: -8.000394821166992
    3. 'ichage' → logprob: -10.625394821166992
    4. '   ' → logprob: -11.750394821166992
    5. 'icher' → logprob: -11.875394821166992
    6. 'che' → logprob: -12.125394821166992
    7. 'ich' → logprob: -12.250394821166992
    8. '#' → logprob: -12.875394821166992
    9. 'fic' → logprob: -13.625394821166992
    10. ' iche' → logprob: -13.750394821166992

Token 150: ' la' (ID: 557)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.10406478494405746
    2. '(d' → logprob: -2.854064702987671
    3. ' d' → logprob: -3.604064702987671
    4. 'abs' → logprob: -4.97906494140625
    5. '(' → logprob: -5.10406494140625
    6. '(abs' → logprob: -7.10406494140625
    7. ' abs' → logprob: -8.47906494140625
    8. '(
' → logprob: -11.35406494140625
    9. '	d' → logprob: -12.22906494140625
    10. '()' → logprob: -12.97906494140625

Token 151: ' différence' (ID: 79196)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.05675913766026497
    2. ' d' → logprob: -2.9317591190338135
    3. 'difference' → logprob: -6.681759357452393
    4. 'diff' → logprob: -8.181758880615234
    5. ' difference' → logprob: -8.681758880615234
    6. 'abs' → logprob: -9.306758880615234
    7. 'print' → logprob: -10.431758880615234
    8. ' différence' → logprob: -10.681758880615234
    9. '(d' → logprob: -11.306758880615234
    10. ' abs' → logprob: -12.556758880615234

Token 152: ' entre' (ID: 3853)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.1978469043970108
    2. 'print' → logprob: -2.1978468894958496
    3. ' d' → logprob: -3.5728468894958496
    4. '(' → logprob: -4.19784688949585
    5. '(d' → logprob: -4.69784688949585
    6. '   ' → logprob: -5.19784688949585
    7. ' between' → logprob: -5.69784688949585
    8. ',' → logprob: -6.32284688949585
    9. ' print' → logprob: -7.19784688949585
    10. '(
' → logprob: -7.19784688949585

Token 153: ' l' (ID: 305)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.01815415732562542
    2. ' d' → logprob: -4.018154144287109
    3. '   ' → logprob: -13.51815414428711
    4. '(d' → logprob: -13.76815414428711
    5. ' ' → logprob: -14.64315414428711
    6. '(' → logprob: -14.64315414428711
    7. '	d' → logprob: -15.64315414428711
    8. ')' → logprob: -15.76815414428711
    9. '```' → logprob: -15.89315414428711
    10. ')d' → logprob: -16.14315414428711

Token 154: ''' (ID: 6)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.01618533954024315
    2. ' d' → logprob: -4.141185283660889
    3. 'a' → logprob: -9.266185760498047
    4. 'e' → logprob: -11.266185760498047
    5. 'élé' → logprob: -11.391185760498047
    6. 's' → logprob: -11.516185760498047
    7. '   ' → logprob: -12.266185760498047
    8. ' ' → logprob: -13.266185760498047
    9. 'elements' → logprob: -13.641185760498047
    10. '`' → logprob: -13.641185760498047

Token 155: 'élé' (ID: 15228)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.004630553536117077
    2. 'élé' → logprob: -5.5046305656433105
    3. ' d' → logprob: -8.004630088806152
    4. ' élément' → logprob: -9.004630088806152
    5. 'element' → logprob: -10.504630088806152
    6. '   ' → logprob: -10.879630088806152
    7. 'é' → logprob: -11.254630088806152
    8. 'lement' → logprob: -11.379630088806152
    9. 'b' → logprob: -13.254630088806152
    10. 'a' → logprob: -13.504630088806152

Token 156: 'ment' (ID: 508)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.6303727030754089
    2. 's' → logprob: -0.8803727030754089
    3. 'ment' → logprob: -3.7553727626800537
    4. ' d' → logprob: -4.505372524261475
    5. 'ments' → logprob: -4.630372524261475
    6. 'nt' → logprob: -5.255372524261475
    7. '   ' → logprob: -7.630372524261475
    8. 'n' → logprob: -7.755372524261475
    9. 'nts' → logprob: -7.755372524261475
    10. ']' → logprob: -8.130373001098633

Token 157: ' à' (ID: 1221)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.6832372546195984
    2. ' d' → logprob: -1.0582373142242432
    3. 'h' → logprob: -2.808237314224243
    4. ' h' → logprob: -2.933237314224243
    5. 's' → logprob: -3.558237314224243
    6. '[h' → logprob: -5.683237075805664
    7. ' at' → logprob: -7.058237075805664
    8. ' à' → logprob: -7.433237075805664
    9. '[' → logprob: -7.808237075805664
    10. ']' → logprob: -8.558237075805664

Token 158: ' la' (ID: 557)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.18531423807144165
    2. ' d' → logprob: -1.8103141784667969
    3. 'h' → logprob: -5.310314178466797
    4. ' h' → logprob: -7.435314178466797
    5. ' ' → logprob: -12.310314178466797
    6. ' la' → logprob: -12.310314178466797
    7. '   ' → logprob: -12.435314178466797
    8. ' ' → logprob: -13.560314178466797
    9. 'l' → logprob: -13.685314178466797
    10. '`' → logprob: -13.810314178466797

Token 159: ' méd' (ID: 13387)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -4.906711546937004e-05
    2. ' h' → logprob: -10.250048637390137
    3. '[h' → logprob: -12.125048637390137
    4. 'indice' → logprob: -12.250048637390137
    5. 'position' → logprob: -13.750048637390137
    6. 'd' → logprob: -14.750048637390137
    7. 'indices' → logprob: -15.000048637390137
    8. 'm' → logprob: -15.125048637390137
    9. '-' → logprob: -15.625048637390137
    10. 'index' → logprob: -15.750048637390137

Token 160: 'iane' (ID: 39704)
  Prédit: 'iane'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iane' → logprob: -0.19160790741443634
    2. 'h' → logprob: -2.19160795211792
    3. '   ' → logprob: -3.81660795211792
    4. 'ian' → logprob: -4.06660795211792
    5. 'd' → logprob: -4.19160795211792
    6. 'ine' → logprob: -6.19160795211792
    7. 'ia' → logprob: -6.94160795211792
    8. 'line' → logprob: -7.44160795211792
    9. 'aine' → logprob: -7.44160795211792
    10. 'ianne' → logprob: -7.69160795211792

Token 161: ' et' (ID: 859)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.5550413727760315
    2. 'h' → logprob: -1.6800413131713867
    3. ' d' → logprob: -2.8050413131713867
    4. '[h' → logprob: -2.8050413131713867
    5. ' h' → logprob: -3.3050413131713867
    6. '[' → logprob: -3.6800413131713867
    7. ' ' → logprob: -4.180041313171387
    8. 's' → logprob: -4.305041313171387
    9. ']' → logprob: -4.305041313171387
    10. ' et' → logprob: -5.555041313171387

Token 162: ' celui' (ID: 27857)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.26121872663497925
    2. 'l' → logprob: -2.636218786239624
    3. ' celui' → logprob: -2.761218786239624
    4. 'cel' → logprob: -3.261218786239624
    5. 'd' → logprob: -3.386218786239624
    6. ' d' → logprob: -4.136218547821045
    7. ' ' → logprob: -6.136218547821045
    8. ' ' → logprob: -6.261218547821045
    9. ' celle' → logprob: -6.636218547821045
    10. 'celle' → logprob: -7.886218547821045

Token 163: ' juste' (ID: 31553)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.46349892020225525
    2. '[' → logprob: -1.7134989500045776
    3. ' juste' → logprob: -2.963498830795288
    4. '[h' → logprob: -3.213498830795288
    5. 'h' → logprob: -3.588498830795288
    6. 's' → logprob: -4.088499069213867
    7. 'à' → logprob: -4.338499069213867
    8. 'just' → logprob: -4.463499069213867
    9. 'd' → logprob: -4.838499069213867
    10. ' just' → logprob: -5.088499069213867

Token 164: ' avant' (ID: 13339)
  Prédit: 'avant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'avant' → logprob: -0.04437034949660301
    2. ' avant' → logprob: -3.169370412826538
    3. 'au' → logprob: -7.669370174407959
    4. 'à' → logprob: -8.044370651245117
    5. 'before' → logprob: -8.919370651245117
    6. ''avant' → logprob: -9.044370651245117
    7. 'Avant' → logprob: -9.044370651245117
    8. '-' → logprob: -9.669370651245117
    9. '   ' → logprob: -10.669370651245117
    10. ' Avant' → logprob: -10.669370651245117

Token 165: '
' (ID: 198)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.6131922602653503
    2. 'h' → logprob: -0.8631922602653503
    3. '   ' → logprob: -3.988192319869995
    4. ' h' → logprob: -4.738192081451416
    5. ' d' → logprob: -4.863192081451416
    6. '(h' → logprob: -7.363192081451416
    7. 'l' → logprob: -8.613192558288574
    8. '[h' → logprob: -8.988192558288574
    9. '(d' → logprob: -9.488192558288574
    10. ' ' → logprob: -9.613192558288574

Token 166: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.051582127809524536
    2. '   ' → logprob: -3.176582098007202
    3. 'd' → logprob: -5.176582336425781
    4. ' print' → logprob: -6.051582336425781
    5. 'h' → logprob: -8.301582336425781
    6. ' d' → logprob: -9.051582336425781
    7. ' ' → logprob: -10.176582336425781
    8. '-' → logprob: -10.551582336425781
    9. '(print' → logprob: -10.926582336425781
    10. 's' → logprob: -11.051582336425781

Token 167: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.001175343873910606
    2. ' print' → logprob: -6.751175403594971
    3. '   ' → logprob: -12.251174926757812
    4. '```' → logprob: -16.126174926757812
    5. '(print' → logprob: -16.501174926757812
    6. 'd' → logprob: -16.876174926757812
    7. '(' → logprob: -18.001174926757812
    8. 'pr' → logprob: -18.751174926757812
    9. '	print' → logprob: -18.876174926757812
    10. '`' → logprob: -19.126174926757812

Token 168: ' Ceci' (ID: 144699)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0024848117027431726
    2. ' print' → logprob: -6.0024847984313965
    3. '   ' → logprob: -11.627485275268555
    4. '```' → logprob: -16.377485275268555
    5. 'pr' → logprob: -17.252485275268555
    6. '	print' → logprob: -17.252485275268555
    7. '#print' → logprob: -17.627485275268555
    8. 'prin' → logprob: -17.627485275268555
    9. 'p' → logprob: -18.252485275268555
    10. ' ' → logprob: -18.627485275268555

Token 169: ' est' (ID: 893)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.8126921653747559
    2. 'd' → logprob: -1.3126921653747559
    3. 'print' → logprob: -1.6876921653747559
    4. ' print' → logprob: -2.437692165374756
    5. '   ' → logprob: -5.437692165374756
    6. ':' → logprob: -5.687692165374756
    7. ' continue' → logprob: -6.812692165374756
    8. 'n' → logprob: -7.437692165374756
    9. 's' → logprob: -7.562692165374756
    10. ' s' → logprob: -7.562692165374756

Token 170: ' utile' (ID: 68237)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.3266499638557434
    2. ' h' → logprob: -1.4516499042510986
    3. 'd' → logprob: -3.8266499042510986
    4. ' une' → logprob: -4.951650142669678
    5. ' un' → logprob: -5.076650142669678
    6. ' l' → logprob: -6.201650142669678
    7. ' la' → logprob: -6.326650142669678
    8. 'h' → logprob: -6.951650142669678
    9. ' le' → logprob: -6.951650142669678
    10. ' len' → logprob: -7.076650142669678

Token 171: ' dans' (ID: 2671)
  Prédit: ' pour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pour' → logprob: -0.4030662477016449
    2. 'pour' → logprob: -1.6530662775039673
    3. ' for' → logprob: -2.7780661582946777
    4. 'for' → logprob: -2.9030661582946777
    5. ' dans' → logprob: -5.653066158294678
    6. ' ' → logprob: -5.653066158294678
    7. '<|end|>' → logprob: -5.778066158294678
    8. ' to' → logprob: -5.903066158294678
    9. ' afin' → logprob: -6.028066158294678
    10. '   ' → logprob: -6.528066158294678

Token 172: ' certains' (ID: 30681)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.76979660987854
    2. 'les' → logprob: -1.89479660987854
    3. 'le' → logprob: -2.14479660987854
    4. ' les' → logprob: -2.26979660987854
    5. ' l' → logprob: -3.01979660987854
    6. 'l' → logprob: -3.64479660987854
    7. ' ce' → logprob: -3.89479660987854
    8. ' des' → logprob: -4.019796371459961
    9. 'la' → logprob: -4.394796371459961
    10. ' la' → logprob: -4.894796371459961

Token 173: ' context' (ID: 3814)
  Prédit: 'cas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cas' → logprob: -0.6986432671546936
    2. ' cas' → logprob: -0.8236432671546936
    3. 'pro' → logprob: -3.698643207550049
    4. ' problèmes' → logprob: -4.198643207550049
    5. 'context' → logprob: -4.323643207550049
    6. ' context' → logprob: -5.573643207550049
    7. 'contexts' → logprob: -6.448643207550049
    8. 'tests' → logprob: -6.823643207550049
    9. ' contexts' → logprob: -7.323643207550049
    10. 'con' → logprob: -7.323643207550049

Token 174: 'es' (ID: 268)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.2815117835998535
    2. 'es' → logprob: -1.4065117835998535
    3. '#' → logprob: -8.656511306762695
    4. ' e' → logprob: -9.406511306762695
    5. '```' → logprob: -10.156511306762695
    6. 's' → logprob: -11.406511306762695
    7. '   ' → logprob: -11.656511306762695
    8. 'te' → logprob: -11.781511306762695
    9. ':' → logprob: -12.156511306762695
    10. '(e' → logprob: -12.406511306762695

Token 175: ' comme' (ID: 7971)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.049963969737291336
    2. 'print' → logprob: -3.29996395111084
    3. ' print' → logprob: -5.67496395111084
    4. ' for' → logprob: -6.29996395111084
    5. ' d' → logprob: -6.42496395111084
    6. ' pour' → logprob: -6.79996395111084
    7. '
' → logprob: -6.92496395111084
    8. 'd' → logprob: -6.92496395111084
    9. '    
' → logprob: -7.17496395111084
    10. 'for' → logprob: -8.17496395111084

Token 176: ' le' (ID: 505)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.8502521514892578
    2. ' les' → logprob: -1.3502521514892578
    3. 'l' → logprob: -2.225252151489258
    4. ' l' → logprob: -2.475252151489258
    5. ' le' → logprob: -2.975252151489258
    6. 'le' → logprob: -3.850252151489258
    7. 'la' → logprob: -4.350252151489258
    8. ' la' → logprob: -4.725252151489258
    9. 'une' → logprob: -4.725252151489258
    10. ' des' → logprob: -5.475252151489258

Token 177: ' calcul' (ID: 7559)
  Prédit: ' tri'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tri' → logprob: -0.13264185190200806
    2. 'tri' → logprob: -3.0076417922973633
    3. ' cas' → logprob: -4.007641792297363
    4. ' code' → logprob: -4.382641792297363
    5. ' calcul' → logprob: -4.632641792297363
    6. ' cadre' → logprob: -5.132641792297363
    7. 'cas' → logprob: -5.132641792297363
    8. ' test' → logprob: -5.757641792297363
    9. 'calcul' → logprob: -5.757641792297363
    10. ' contexte' → logprob: -6.132641792297363

Token 178: ' de' (ID: 334)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.6116247773170471
    2. ' de' → logprob: -0.8616247773170471
    3. 'd' → logprob: -4.736624717712402
    4. ' ' → logprob: -4.986624717712402
    5. '   ' → logprob: -5.111624717712402
    6. 'de' → logprob: -5.486624717712402
    7. ' des' → logprob: -5.611624717712402
    8. ' du' → logprob: -6.236624717712402
    9. '-' → logprob: -6.611624717712402
    10. ' -' → logprob: -7.611624717712402

Token 179: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.31331729888916016
    2. ' l' → logprob: -1.8133172988891602
    3. ' la' → logprob: -3.31331729888916
    4. 'la' → logprob: -3.68831729888916
    5. 'h' → logprob: -4.31331729888916
    6. 'd' → logprob: -4.31331729888916
    7. ' h' → logprob: -5.06331729888916
    8. ' d' → logprob: -6.31331729888916
    9. 'med' → logprob: -6.43831729888916
    10. 'm' → logprob: -6.56331729888916

Token 180: ''éc' (ID: 91629)
  Prédit: ''éc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''éc' → logprob: -0.4726525843143463
    2. 'a' → logprob: -1.847652554512024
    3. ''' → logprob: -2.0976526737213135
    4. ''é' → logprob: -2.7226526737213135
    5. 'e' → logprob: -4.222652435302734
    6. ' é' → logprob: -5.597652435302734
    7. 'éc' → logprob: -6.472652435302734
    8. '-' → logprob: -6.722652435302734
    9. ''inter' → logprob: -6.847652435302734
    10. ' a' → logprob: -6.972652435302734

Token 181: 'art' (ID: 497)
  Prédit: 'art'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'art' → logprob: -0.0024624562356621027
    2. '   ' → logprob: -7.377462387084961
    3. '#' → logprob: -8.377462387084961
    4. '    ' → logprob: -8.502462387084961
    5. '  ' → logprob: -8.877462387084961
    6. '>' → logprob: -9.002462387084961
    7. 'a' → logprob: -9.002462387084961
    8. '\' → logprob: -9.127462387084961
    9. '       ' → logprob: -9.252462387084961
    10. 'artement' → logprob: -9.877462387084961

Token 182: ' minimal' (ID: 19957)
  Prédit: 'inter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inter' → logprob: -0.2909395694732666
    2. ' inter' → logprob: -1.7909395694732666
    3. 'type' → logprob: -2.7909395694732666
    4. '-type' → logprob: -4.4159393310546875
    5. 'ype' → logprob: -5.6659393310546875
    6. '_inter' → logprob: -5.7909393310546875
    7. 'm' → logprob: -6.2909393310546875
    8. '_type' → logprob: -6.4159393310546875
    9. '_m' → logprob: -7.4159393310546875
    10. 'h' → logprob: -8.540939331054688

Token 183: ' entre' (ID: 3853)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00611459743231535
    2. '   ' → logprob: -5.256114482879639
    3. ' print' → logprob: -7.131114482879639
    4. '
' → logprob: -10.006114959716797
    5. '    
' → logprob: -11.381114959716797
    6. ',' → logprob: -12.006114959716797
    7. 'd' → logprob: -12.506114959716797
    8. '	print' → logprob: -12.881114959716797
    9. '```' → logprob: -12.881114959716797
    10. 'if' → logprob: -13.506114959716797

Token 184: ' deux' (ID: 10301)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.9481728672981262
    2. 'de' → logprob: -1.6981728076934814
    3. 'les' → logprob: -1.9481728076934814
    4. ' deux' → logprob: -2.5731728076934814
    5. 'des' → logprob: -3.0731728076934814
    6. ' éléments' → logprob: -3.1981728076934814
    7. ' les' → logprob: -3.4481728076934814
    8. 'm' → logprob: -3.6981728076934814
    9. 'd' → logprob: -4.1981730461120605
    10. ' des' → logprob: -4.4481730461120605

Token 185: ' mo' (ID: 2093)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.14598384499549866
    2. ' éléments' → logprob: -2.145983934402466
    3. 'val' → logprob: -5.020983695983887
    4. 'mé' → logprob: -5.645983695983887
    5. 'm' → logprob: -6.020983695983887
    6. 'é' → logprob: -6.270983695983887
    7. ' valeurs' → logprob: -6.645983695983887
    8. ' elements' → logprob: -7.145983695983887
    9. 'elements' → logprob: -7.520983695983887
    10. 'él' → logprob: -8.395983695983887

Token 186: 'iti' (ID: 3889)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.5536240339279175
    2. 'd' → logprob: -1.1786240339279175
    3. 'é' → logprob: -3.678624153137207
    4. 'i' → logprob: -4.303624153137207
    5. 'e' → logprob: -4.428624153137207
    6. 'll' → logprob: -5.116124153137207
    7. 'ts' → logprob: -5.366124153137207
    8. 't' → logprob: -5.428624153137207
    9. 'itié' → logprob: -5.428624153137207
    10. 'n' → logprob: -5.616124153137207

Token 187: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.08715876191854477
    2. 'es' → logprob: -2.962158679962158
    3. 'e' → logprob: -4.587158679962158
    4. 'ons' → logprob: -4.837158679962158
    5. 'eux' → logprob: -4.962158679962158
    6. 'é' → logprob: -5.212158679962158
    7. 'eurs' → logprob: -7.962158679962158
    8. 'eu' → logprob: -8.212159156799316
    9. 'ées' → logprob: -9.087159156799316
    10. 'eens' → logprob: -9.087159156799316

Token 188: ' d' (ID: 272)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.22858601808547974
    2. '   ' → logprob: -1.603585958480835
    3. ' print' → logprob: -5.853586196899414
    4. '
' → logprob: -8.478586196899414
    5. '    
' → logprob: -10.603586196899414
    6. '	print' → logprob: -10.728586196899414
    7. '```' → logprob: -10.853586196899414
    8. ',' → logprob: -11.978586196899414
    9. ')' → logprob: -12.728586196899414
    10. ')
' → logprob: -12.978586196899414

Token 189: ''ensemble' (ID: 79341)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.6021870374679565
    2. ' la' → logprob: -0.8521870374679565
    3. 'a' → logprob: -4.727187156677246
    4. 'liste' → logprob: -4.977187156677246
    5. 'l' → logprob: -5.352187156677246
    6. ' liste' → logprob: -6.727187156677246
    7. 'd' → logprob: -6.852187156677246
    8. '   ' → logprob: -7.227187156677246
    9. ' a' → logprob: -7.727187156677246
    10. 'e' → logprob: -7.852187156677246

Token 190: ' tri' (ID: 12665)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2306387722492218
    2. '   ' → logprob: -1.6056387424468994
    3. ' print' → logprob: -5.9806389808654785
    4. '
' → logprob: -5.9806389808654785
    5. '    
' → logprob: -9.23063850402832
    6. '  
' → logprob: -10.85563850402832
    7. '	print' → logprob: -11.35563850402832
    8. '```' → logprob: -11.98063850402832
    9. ')
' → logprob: -12.35563850402832
    10. ' 
' → logprob: -12.60563850402832

Token 191: 'é' (ID: 377)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.1501716375350952
    2. 'és' → logprob: -1.1501716375350952
    3. 'ées' → logprob: -1.7751716375350952
    4. 'es' → logprob: -2.9001717567443848
    5. 'é' → logprob: -3.2751717567443848
    6. 'r' → logprob: -3.6501717567443848
    7. 'nées' → logprob: -3.6501717567443848
    8. 'e' → logprob: -4.275171756744385
    9. 's' → logprob: -4.400171756744385
    10. 'ée' → logprob: -5.025171756744385

Token 192: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9855090975761414
    2. 'print' → logprob: -1.1105091571807861
    3. '   ' → logprob: -1.2355091571807861
    4. ' print' → logprob: -5.110508918762207
    5. '    
' → logprob: -7.985508918762207
    6. '
' → logprob: -9.610508918762207
    7. ')
' → logprob: -9.985508918762207
    8. ',' → logprob: -10.610508918762207
    9. '  
' → logprob: -10.610508918762207
    10. '```' → logprob: -10.735508918762207

Token 193: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.06670519709587097
    2. ' print' → logprob: -3.3167052268981934
    3. '   ' → logprob: -3.5667052268981934
    4. '```' → logprob: -11.941704750061035
    5. '    
' → logprob: -14.316704750061035
    6. '	print' → logprob: -14.941704750061035
    7. '
' → logprob: -15.191704750061035
    8. '    ' → logprob: -16.69170570373535
    9. ' ' → logprob: -16.94170570373535
    10. ' 
' → logprob: -17.06670570373535

Token 194: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0002334568416699767
    2. '   ' → logprob: -8.75023365020752
    3. ' print' → logprob: -9.50023365020752
    4. '```' → logprob: -16.375232696533203
    5. '    
' → logprob: -18.000232696533203
    6. '	print' → logprob: -18.875232696533203
    7. '
' → logprob: -19.125232696533203
    8. ' ' → logprob: -19.875232696533203
    9. '  ' → logprob: -20.750232696533203
    10. '#print' → logprob: -21.000232696533203

Token 195: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.07890389114618301
    2. '(' → logprob: -2.578903913497925
    3. '(abs' → logprob: -11.828904151916504
    4. '(
' → logprob: -12.703904151916504
    5. 'd' → logprob: -12.828904151916504
    6. '((' → logprob: -14.203904151916504
    7. '()' → logprob: -15.953904151916504
    8. ' (' → logprob: -16.078903198242188
    9. '(

' → logprob: -16.828903198242188
    10. ' d' → logprob: -17.203903198242188

Token 196: '[h' (ID: 88900)
  Prédit: '[h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[h' → logprob: -3.531315314830863e-06
    2. '[' → logprob: -12.875003814697266
    3. 'h' → logprob: -14.000003814697266
    4. ')' → logprob: -17.000003814697266
    5. ' [' → logprob: -17.000003814697266
    6. ' h' → logprob: -18.500003814697266
    7. '[
' → logprob: -18.750003814697266
    8. ')[' → logprob: -19.875003814697266
    9. '	h' → logprob: -20.125003814697266
    10. '   ' → logprob: -20.125003814697266

Token 197: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.030234983190894127
    2. ']-' → logprob: -4.4052348136901855
    3. ' -' → logprob: -4.5302348136901855
    4. '-' → logprob: -5.5302348136901855
    5. ' ]' → logprob: -5.9052348136901855
    6. ')' → logprob: -9.780235290527344
    7. '[' → logprob: -11.405235290527344
    8. ' ' → logprob: -11.780235290527344
    9. '"]' → logprob: -11.780235290527344
    10. '   ' → logprob: -12.280235290527344

Token 198: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.11327414959669113
    2. '-' → logprob: -2.238274097442627
    3. '-d' → logprob: -8.238274574279785
    4. ')' → logprob: -8.738274574279785
    5. ' ' → logprob: -11.363274574279785
    6. '[' → logprob: -11.988274574279785
    7. '   ' → logprob: -12.863274574279785
    8. ' -
' → logprob: -13.363274574279785
    9. ' )' → logprob: -13.738274574279785
    10. ' ' → logprob: -13.988274574279785

Token 199: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.07889033854007721
    2. ' d' → logprob: -2.578890323638916
    3. '1' → logprob: -15.078890800476074
    4. '	d' → logprob: -15.953890800476074
    5. ')d' → logprob: -16.453889846801758
    6. '   ' → logprob: -16.953889846801758
    7. ' ' → logprob: -17.703889846801758
    8. ' ' → logprob: -17.828889846801758
    9. ')' → logprob: -18.828889846801758
    10. '<|end|>' → logprob: -20.328889846801758

Token 200: '[h' (ID: 88900)
  Prédit: '[h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[h' → logprob: -8.65707261255011e-06
    2. 'h' → logprob: -12.000008583068848
    3. '[' → logprob: -13.250008583068848
    4. ' [' → logprob: -14.375008583068848
    5. '[
' → logprob: -17.000009536743164
    6. '	h' → logprob: -18.125009536743164
    7. '<h' → logprob: -19.625009536743164
    8. ' h' → logprob: -19.750009536743164
    9. ' ' → logprob: -19.875009536743164
    10. '-' → logprob: -19.875009536743164

Token 201: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0070102945901453495
    2. ' -' → logprob: -5.007010459899902
    3. '1' → logprob: -8.132010459899902
    4. ' ' → logprob: -14.882010459899902
    5. '   ' → logprob: -15.632010459899902
    6. '"-' → logprob: -16.632009506225586
    7. '-
' → logprob: -16.757009506225586
    8. ''-' → logprob: -17.132009506225586
    9. 's' → logprob: -17.507009506225586
    10. '−' → logprob: -17.632009506225586

Token 202: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.246537173457909e-06
    2. ' ' → logprob: -12.375003814697266
    3. '   ' → logprob: -18.375003814697266
    4. '```' → logprob: -19.625003814697266
    5. '
' → logprob: -21.375003814697266
    6. ']' → logprob: -21.500003814697266
    7. '0' → logprob: -21.625003814697266
    8. '  ' → logprob: -21.750003814697266
    9. ')' → logprob: -21.875003814697266
    10. '<|end|>' → logprob: -22.000003814697266

Token 203: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.500000953674316
    3. '   ' → logprob: -18.25
    4. '  ' → logprob: -20.9375
    5. '```' → logprob: -20.9375
    6. '
' → logprob: -21.0
    7. '۱' → logprob: -21.3125
    8. ')' → logprob: -21.3125
    9. ']' → logprob: -21.375
    10. '１' → logprob: -21.625

Token 204: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2948405128554441e-05
    2. '])' → logprob: -11.87501335144043
    3. '))' → logprob: -12.37501335144043
    4. ')
' → logprob: -14.37501335144043
    5. ' )' → logprob: -14.50001335144043
    6. '})' → logprob: -15.50001335144043
    7. ')])' → logprob: -16.50001335144043
    8. '`)' → logprob: -17.00001335144043
    9. '）' → logprob: -17.12501335144043
    10. ')")' → logprob: -17.25001335144043

Token 205: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 206: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.010123644955456257
    2. ' ' → logprob: -5.2601237297058105
    3. '__' → logprob: -6.1351237297058105
    4. '_' → logprob: -6.6351237297058105
    5. ' _' → logprob: -6.8851237297058105
    6. ' ' → logprob: -8.510123252868652
    7. ' main' → logprob: -9.385123252868652
    8. '  ' → logprob: -10.385123252868652
    9. ' ___' → logprob: -11.010123252868652
    10. ' ▁' → logprob: -11.635123252868652

Token 207: 'name' (ID: 897)
  Prédit: ' __'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.641498327255249
    2. '__' → logprob: -0.766498327255249
    3. ' ==' → logprob: -4.766498565673828
    4. '==' → logprob: -8.516498565673828
    5. 'name' → logprob: -10.016498565673828
    6. '_' → logprob: -10.516498565673828
    7. ' _' → logprob: -10.891498565673828
    8. ' ' → logprob: -11.516498565673828
    9. ' ' → logprob: -11.641498565673828
    10. '_name' → logprob: -11.766498565673828

Token 208: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.00018780550453811884
    2. '==' → logprob: -8.625187873840332
    3. '_' → logprob: -12.500187873840332
    4. ' ==' → logprob: -12.875187873840332
    5. '__.__' → logprob: -14.125187873840332
    6. ' __' → logprob: -14.750187873840332
    7. '=="' → logprob: -15.000187873840332
    8. '___' → logprob: -15.375187873840332
    9. '=' → logprob: -16.125186920166016
    10. '____' → logprob: -16.875186920166016

Token 209: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.6484081149101257
    2. ' ==' → logprob: -1.0234081745147705
    3. '==' → logprob: -2.1484081745147705
    4. '=="' → logprob: -6.898407936096191
    5. '=='' → logprob: -10.273407936096191
    6. '=' → logprob: -11.398407936096191
    7. '_' → logprob: -12.023407936096191
    8. ' =="' → logprob: -12.273407936096191
    9. '"' → logprob: -12.648407936096191
    10. ' =' → logprob: -13.023407936096191

Token 210: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.16051159799098969
    2. ''' → logprob: -1.9105116128921509
    3. ' "__' → logprob: -8.28551197052002
    4. ' "' → logprob: -11.03551197052002
    5. ' '__' → logprob: -11.28551197052002
    6. '__' → logprob: -12.41051197052002
    7. ' '' → logprob: -13.28551197052002
    8. '"user' → logprob: -15.66051197052002
    9. '"name' → logprob: -16.785511016845703
    10. '"_' → logprob: -16.910511016845703

Token 211: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -1.6240566083070007e-06
    2. 'name' → logprob: -13.750001907348633
    3. ' main' → logprob: -15.000001907348633
    4. '_main' → logprob: -16.750001907348633
    5. 'python' → logprob: -17.500001907348633
    6. '	main' → logprob: -17.750001907348633
    7. '__' → logprob: -18.000001907348633
    8. 'maine' → logprob: -18.000001907348633
    9. 'm' → logprob: -18.750001907348633
    10. 'code' → logprob: -19.375001907348633

Token 212: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.07889441400766373
    2. '__' → logprob: -2.5788943767547607
    3. '__':
' → logprob: -12.32889461517334
    4. '_' → logprob: -15.45389461517334
    5. '__["' → logprob: -18.328893661499023
    6. '__",' → logprob: -19.203893661499023
    7. '"' → logprob: -19.453893661499023
    8. '__("' → logprob: -20.078893661499023
    9. '___' → logprob: -20.078893661499023
    10. '```' → logprob: -20.203893661499023

Token 213: '   ' (ID: 271)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.0037786972243338823
    2. '   ' → logprob: -6.00377893447876
    3. '	main' → logprob: -7.25377893447876
    4. 'main' → logprob: -7.50377893447876
    5. ' ' → logprob: -10.503778457641602
    6. '(main' → logprob: -12.503778457641602
    7. '    
' → logprob: -12.628778457641602
    8. ' 
' → logprob: -13.128778457641602
    9. '_main' → logprob: -13.378778457641602
    10. '<|end|>' → logprob: -13.753778457641602

Token 214: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -0.07889044284820557
    2. ' main' → logprob: -2.578890323638916
    3. '	main' → logprob: -14.328890800476074
    4. '   ' → logprob: -17.453889846801758
    5. '(main' → logprob: -17.828889846801758
    6. '_main' → logprob: -18.453889846801758
    7. '.main' → logprob: -19.203889846801758
    8. 'm' → logprob: -19.828889846801758
    9. ' ' → logprob: -19.828889846801758
    10. 'maine' → logprob: -20.078889846801758

Token 215: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.22133445739746094
    2. '<|end|>' → logprob: -1.721334457397461
    3. '
' → logprob: -4.596334457397461
    4. '(' → logprob: -6.096334457397461
    5. '```' → logprob: -6.096334457397461
    6. ')' → logprob: -6.721334457397461
    7. '\n' → logprob: -6.721334457397461
    8. '#' → logprob: -6.971334457397461
    9. '()
' → logprob: -7.221334457397461
    10. '<|end|>' → logprob: -7.721334457397461


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 213
Tokens correctement prédits (1ère position, stricte): 61
Tokens correctement prédits (1ère position, avec adaptation): 63
Tokens correctement prédits (top 10): 143
Précision stricte (1ère position): 28.64%
Précision adaptée (1ère position): 29.58%
Précision (top 10): 67.14%
================================================================================
